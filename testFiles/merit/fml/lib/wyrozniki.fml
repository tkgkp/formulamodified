:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: wyrozniki.fml
:: Utworzony: 18.03.2015 [17.00]
:: Autor: PJ
::======================================================================================================================
:: Zawartość: Formuły do obsługi wyróżników
::======================================================================================================================


\pw_ka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Formuła przed wyświetleniem pol zmiennej KA (KA.S1...KA.S6)
::   WE: _a - numer 1..6
::  OLD: \pw_ka/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
_s:=($('KA.S'+$_a))();
_s<>''


\pw_kw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Formula przed wyswietleniem pol zmiennej KA (KA.KW1...KA.KW6)
::   WE: _a - numer 1..6
::  OLD: \pw_kw/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('pw_ka','wyrozniki',_a)
|| _str:=0;
::Poczatek modyfikacji dla Maclex Fiks 07.10.2009 AK [1120]
   _kw:=0;
   {? ($('KA.E'+$_a+'=''<- F3 ->'''))()
::Koniec modyfikacji dla Maclex Fiks
   || _zwrot:={? var_pres('TPOW')>100 & KA.AKCJA>0
              || TPOW.prefix(_a);
::Poczatek modyfikacji MacLex 01-26-2011 WS [1110]
                 {? TPOW.first()
                 || {!|? _kw+=TPOW.KW; TPOW.next !};
                    {? POZ.SUM=_kw
                    || _str:=1; ',224:224:224'
                    || _str:=2; ',224:224:0'
                    ?}
                 || 1
                 ?}
              || POW.index('POZ');
                 POW.prefix(POZ.ref,_a);
                 {? POW.first()
                 || {!|? _kw+=POW.KW; POW.next !};
                    {? POZ.SUM=_kw
                    || _str:=1; ',224:224:224'
                    || _str:=2; ',224:224:0'
                    ?}
                 || 1
                 ?}
::Koniec modyfikacji MacLex
              ?}
   || _zwrot:=1
   ?};
   {? _str
::Poczatek modyfikacji MacLex 01-26-2011 WS [1110]
   || _zwrot:={? _str=1
              || 'KA#E'+$_a+'#'
              || 'KA#EE'+$_a+'#'
              ?}
::Koniec modyfikacji MacLex
   ?};
   _zwrot
?}


\pr_kw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Formula przed redakcja pol zmiennej KA (KA.KW1...KA.KW6)
::   WE: _a - numer 1..6
::  OLD: \pr_kw/skid_wyr
::----------------------------------------------------------------------------------------------------------------------
::Poczatek modyfikacji dla Maclex Fiks 04-10-2009 AK [1120]
{? MLEX.FIKSB
|| BD_DZ:=''; BD_RZ:=''; BD_PG:=''; BD_PP:='';
   BD_D:=0; BD_R:=0; BD_P:=0; BD_Z:=0
?};
::Koniec modyfikacji dla Maclex Fiks
{? exec('jaki_slu','slo_slu',($('KA.S'+$_a))())<>null
|| SLUAPPL.SLU();
   _ks:={? POZ.KOM<>null
::Poczatek modyfikacji dla Maclex Fiks 04-10-2009 AK [1120]
        || {? MLEX.FIKSB
           || BD_LVL:=_a;
              SLU.cntx_psh;
              SLU.index('NAZ'); SLU.prefix;
              {! _i:=1.._a
              |! {? SLU.find_key(($('KA.S'+$_i))())
                 || {? SLU.WZ='Część'
                    || BD_CZ:=($('KA.KW'+$_i+'().KOD'))();
                       BD_C:=_i
                    |? SLU.WZ='Dział'
                    || BD_DZ:=($('KA.KW'+$_i+'().KOD'))();
                       BD_D:=_i
                    |? SLU.WZ='Rozdział'
                    || BD_RZ:=($('KA.KW'+$_i+'().KOD'))();
                      BD_R:=_i
                    |? SLU.WZ='Paragraf'
                    || BD_PG:=($('KA.KW'+$_i+'().KOD'))();
                       BD_P:=_i
                    |? SLU.WZ='Pozycja'
                    || BD_PZ:=($('KA.KW'+$_i+'().KOD'))();
                       BD_Z:=_i
                    |? SLU.WZ='Funkcja'
                    || BD_FUN:=($('KA.KW'+$_i+'().KOD'))();
                       BD_ZF:=_i
                    |? SLU.WZ='Zadanie'
                    || BD_ZAD:=($('KA.KW'+$_i+'().KOD'))();
                       BD_ZZ:=_i
                    |? SLU.WZ='Podzadanie'
                    || BD_PODZ:=($('KA.KW'+$_i+'().KOD'))();
                       BD_ZP:=_i
                    |? SLU.WZ='Działanie'
                    || BD_DZLAN:=($('KA.KW'+$_i+'().KOD'))();
                       BD_ZD:=_i
                    ?}
                 ?}
              !};
              SLU.cntx_pop
           ?};
::Koniec modyfikacji dla Maclex Fiks
           POZ.KOM().KS
        || exec('jak_kon','konto',ROK_F.SYNT+POZ.KON)
        ?};
   KS_W.index('LP');
   KS_W.prefix(_ks,_a);
   KA.K1:=($('KA.E'+$_a))();
   KS_W.first()
?}


\wz_e
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS:
::  OLD: \wz_e/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS_W.ROZDZ='T' | exec('roz_bo','dok_fks') || '<- \\F\\3 ->#' || '' ?}


\po_kw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula po redakcji dla pol zmiennej KA (KA.E1...KA.E6)
::  OLD: \po_kw/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:={? KS_W.ROZDZ<>'T' & ~exec('roz_bo','dok_fks') & fld<>''
     || SLO.index('SL');
        SLO.prefix(KS_W.SLU().SLU,fld);
        {? SLO.first()
        || {? REF.WFIRM & (var_pres('__KS_W')<0 | __KS_W=0)
           || {? exec('test_slo','slo_slu')=0
              || FUN.info('Nie można wybrać pozycji związanej z inną firmą.'@); _next:=0
              || _next:=1
              ?}
           || _next:=1
           ?};
           {? _next || ($('KA.KW'+$_a+':=SLO.ref; KA.E'+$_a+':=SLO.KOD'))() || 0 ?}
        || _a:=FUN.choice('Brak pozycji w słowniku.'@,0,'Powtórzenie'@,'wyświetlenie Słownika'@);
           {? _a<>1  || 0 |? _a=1 || exec('f3_kw','wyrozniki',KS_W.LP); 0 ?}
        ?}
     || ($('KA.KW'+$_a+':=null'))();
        1
     ?};
::Poczatek modyfikacji dla Maclex Fiks 10.10.2009 AK [1120]
SLO.f_clear(1);
::Koniec modyfikacji dla Maclex
_wy


\f3_kw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula F3 dla pol zmiennej KA (KA.E1...KA.E6)
::  OLD: \f3_kw/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
::Poczatek modyfikacji dla Maclex Fiks 04-10-2009 AK [1120]
_mlx_tmp:=0;
_sel_wynik:=0;
::Koniec modyfikacji dla Maclex Fiks
{? KS_W.ROZDZ='T' | exec('roz_bo','dok_fks')
|| exec('wyp_rodz','wyrozniki')
|| KS_W.SLU().SLU();
   {? SLU.SYSTEM='T'
   || SLO.win_sel('ONE_SEL')
   || SLO.win_sel('ONE_SEL')
   ?};
   SLO.index('SL');
   SLO.prefix(KS_W.SLU().SLU);
   {? ($('KA.KW'+$_a))()<>null || ($('KA.KW'+$_a+'()'))() || SLO.first() ?};
::Poczatek modyfikacji dla Maclex kali 04.08.2008 Pawelm [1030]
   exec('slu_okn','slo_slu');
   _mlx_tmp:=MLEX_OKN.ZAP_FL;
   _sel_wynik:=SLO.select(,1);
   {? _sel_wynik || ($('KA.KW'+$_a+':=SLO.ref'))() ?};
   MLEX_OKN.ZAP_FL:=_mlx_tmp
::Koniec modyfikacji dla Maclex Fiks
?};
{? SLO.f_active()>0 || SLO.f_clear(1) ?};
{? _sel_wynik || SLO.KOD ?}


\wyp_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Wywolanie okienka wertowania SLO do wypelniania wyroznikow
::  OLD: \wyp_rodz/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
KA.fld_fml('SUM_ROZ','BEFORE_DISPLAY',"
   _kw:=0;
   TPOW.cntx_psh();
   {? SLO.f_active()
   || {? SLO.f_first()
      || {!
         |? TPOW.prefix(KS_W.LP,SLO.SLU().NAZ,SLO.KOD,);
            {? TPOW.first()
            || _kw+=TPOW.KW
            ?};
            SLO.f_next()
         !}
      ?}
   || TPOW.prefix(KS_W.LP);
      {? TPOW.first()
      || {!
         |? _kw+=TPOW.KW;
            TPOW.next()
         !}
      ?}
   ?};
   TPOW.cntx_pop();
   KA.SUM_ROZ:=_kw;
   ~~
");
SLO.win_sel('WYR');
SLO.index('SL');
SLO.prefix(KS_W.SLU().SLU);
exec('ust_sum2','wyrozniki');
TPOW.prefix(KS_W.LP);
{? TPOW.first() || SLO.find_key(TPOW.SLO) || SLO.first() ?};
_bo:=exec('roz_bo','dok_fks');
{? SLU.SYSTEM='T' | _bo
|| SLO.select(,1,,{? _bo || 'DPUAT:D' || 'DPUA:D' ?})
|| SLO.select(,1)
?};
KA.fld_fml('SUM_ROZ','BEFORE_DISPLAY',"*");
1


\ust_sum2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Ustalenie sumy wyroznikow w okienku wertowani tabeli SLO
::  OLD: \ust_sum2/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
TPOW.prefix(KS_W.LP);
KA.SUM_ROZ:=0;
{? TPOW.first() || {! |? KA.SUM_ROZ+=TPOW.KW; TPOW.next() !} ?};
KA.POZ_ROZ:=POZ.SUM-KA.SUM_ROZ;
1


\dod_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Funkcja zapisuje wyrozniki do tabeli POW dla akt. pozycji POZ
::       na podstawie wypelnienia zmiennych KA.KW1...KA.KW6
::  WE: [_a] - 1 kasuj istniejace
:: OLD: \dod_wyr/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<1 || _a:=0 ?};
{? PAR_SKID.get(35)='T'
|| SLUAPPL.cntx_psh();
   SLU.cntx_psh();
   POW.cntx_psh();
   POW.index('POZ');
   POW.prefix(POZ.ref());
   {? _a & POW.first
   || {!|? POW.del() !}
   ?};
   {! _i:=1..6 |!
      _s:=($('KA.S'+$_i))();
      {? _s<>''
      || _k:=($('KA.KW'+$_i))();
         {? _k<>null
         || POW.blank();
            POW.POZ:=POZ.ref();
            POW.SLU:=exec('jaki_slu','slo_slu',($('KA.S'+$_i))());
            POW.SLO:=_k;
            POW.LP:=_i;
            POW.KW:=POZ.SUM$2;
            POW.add()
         || {? var_pres('TPOW')>100
            || TPOW.prefix(_i);
               {? TPOW.first()
               || {!|? POW.blank();
                       POW.POZ:=POZ.ref();
                       POW.LP:=_i;
                       POW.SLU:=exec('jaki_slu','slo_slu',TPOW.SLU);
                       POW.SLO:=exec('jaki_slo','slo_slu',POW.SLU().SLU,TPOW.SLO);
                       POW.KW:=TPOW.KW;
                       POW.add();
                       TPOW.del()
                 !}
               ?}

            ?}
         ?}
      ?}
   !};
   SLUAPPL.cntx_pop();
   SLU.cntx_pop();
   POW.cntx_pop()
?}


\usu_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Funkcja usuwajaca wyrozniki zwiazane z aktualna pozycja (POZ)
::  OLD: \usu_wyr/skid_wyr
::----------------------------------------------------------------------------------------------------------------------
POW.cntx_psh();
POW.index('POZ');
POW.prefix(POZ.ref());
{? POW.first() || {! |? POW.del() !} ?};
POW.cntx_pop();
1


\pop_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Funkcja usuwajaca wyrozniki zwiazane z aktualna pozycja (POZ)
::       i zapisuje wyrozniki do tabeli POW dla aktualnej pozycji POZ
::       na podstawie wypelnienia zmiennych KA.KW1...KA.KW6
::  OLD: \pop_wyr/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(35)='T'
|| exec('usu_wyr','wyrozniki');
   exec('dod_wyr','wyrozniki')
?};
:: w wersji budzetowej dodatkowo aktualizuje zapisy w strukturach budzetowych
::Poczatek modyfikacji dla Maclex Fiks
{? MLEX.FIKSB & var_pres('__Zn_dz')>0
|| ML_OBRCZ.index('OOKRCZ'); ML_OBRCZ.prefix(SSTALE.AO().NR);
   ML_OBRDZ.index('OOKRDZ'); ML_OBRDZ.prefix(SSTALE.AO().NR);
   ML_OBRRZ.index('OOKRRZ'); ML_OBRRZ.prefix(SSTALE.AO().NR);
   ML_OBRPG.index('OOKRPG'); ML_OBRPG.prefix(SSTALE.AO().NR);
   ML_OBRPP.index('OOKRPP'); ML_OBRPP.prefix(SSTALE.AO().NR);
   do();
:: usuniecie zapisow budz.
   {? ~exec('wyc_bud_obr','mlxstan',FINFO.NAROD) || undo() ?};
   {? ~exec('wyc_ml_gr_obr','ml_gr',FINFO.NAROD) || undo() ?};
   {? POZ.WAL<>null
   || {? ~exec('wyc_bud_obr','mlxstan',POZ.WAL) || undo() ?};
      {? ~exec('wyc_ml_gr_obr','ml_gr',FINFO.NAROD) || undo() ?}
   ?};
   exec('pozbusu','mlxstan');
:: dodanie do struktur budz.
   ML_OBRCZ.index('OTYPCZ'); ML_OBRCZ.prefix();
   ML_OBRDZ.index('OTYPDZ'); ML_OBRDZ.prefix;
   ML_OBRRZ.index('OTYPRZ'); ML_OBRRZ.prefix;
   ML_OBRPG.index('OTYPPG'); ML_OBRPG.prefix;
   ML_OBRPP.index('OTYPPP'); ML_OBRPP.prefix;
   {? ~exec('mlbzaddod','ml_zad') || undo() ?};
   exec('zbz_pop','ml_zad');
   {? ~exec('pozbdod','mlxstan') || undo() ?};
   {? ~exec('add_bud_obr','mlxstan',FINFO.NAROD) || undo() ?};
   {? ~exec('add_ml_gr_obr','ml_gr',FINFO.NAROD) || undo() ?};
   {? POZ.WAL<>null
   || {? ~exec('add_bud_obr','mlxstan',POZ.WAL) || undo() ?};
      {? ~exec('add_ml_gr_obr','ml_gr',FINFO.NAROD) || undo() ?}
   ?};
   end()
?}


\pr_pkw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.70]
:: OPIS: Formula przed redakcja pola POW.KW
::  OLD: \pr_pkw/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
{? POW.KW$2=0 || POW.KW:=KA.POZ_ROZ ?};
1


\bpow_lp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Wartosc poczatkowa VPOW.LP
::  OLD: \bpow_lp/dok_zrd3.fml
::  OLD: \bpow_lp/dok_fks.fml
::----------------------------------------------------------------------------------------------------------------------
KS_W.LP


\bpow_slu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Wartosc poczatkowa VPOW.SLU
::  OLD: \bpow_slu/dok_zrd3.fml
::  OLD: \bpow_slu/dok_fks.fml
::----------------------------------------------------------------------------------------------------------------------
KS_W.SLU


\poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS:
::  OLD: \poz/war_tech.fml
::  OLD: \poz/dok_fks.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.ref()


\pod_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Akcja 'Record przed' w okienku wertowania 'WYR' tabeli POZ.
::       Formula powoduje podswietlenie pozycji ze zdefiniowanymi
::       wyroznikami, ktore nie sa w pelni uzupelnione.
::   WY: wskazanie koloru
::  OLD: \pod_wyr/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
{? SSTALE.AO().NR=0 | POZ.KOM=null
|| {? POZ.KON<>''
   || SSTALE.AR();
      KS.index('SYM'); KS.prefix(ROK_F.ref(),ROK_F.SYNT+POZ.KON);
      _ks:={? KS.first() || KS.ref || null ?}
   || _ks:=null
   ?}
|| _ks:=POZ.KOM().KS
?};
_k:={? _ks || exec('czy_wyr','wyrozniki',_ks) || 0 ?};
{? _k>0 || _p:=exec('czy_pow','wyrozniki',POZ.ref()) ?};
KA.CZY_WYR:={? _k>0
            || {? _k*POZ.SUM$2<>_p || '-'|| '+' ?}
            || ''
            ?};
POZ.KOM().KS();
exec('op_konta','konto',POZ.KON,_ks,2);
exec('ka_opis','konto');
{? PAR_SKID.get(35)='T'
|| {? KA.CZY_WYR='-' || 'POZ#01#01'
   |? KA.CZY_WYR='+' || 'POZ#01#02'
   || ''
   ?}
|| ''
?}


\czy_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Funkcja zwraca ilosc zdefionowanych wyroznikow dla podanego konta
::   WE: _a - konto synetytyczne (ref KS)
::   WY: ilosc wyroznikow (w KS_W) dla podanego konta (KS)
::  OLD: \czy_wyr/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
KS_W.cntx_psh();
KS_W.index('LP');
KS_W.prefix(_a);
_k:=KS_W.size();
KS_W.cntx_pop();
_k


\czy_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Funkcja zwraca sume wartosci wypelnionych wyroznikow dla podanej
::       pozycji.
::   WE: _a - pozycja (ref POZ)
::   WY: sume wartosci (suma pol POW.KW) dla podanej pozycji (POZ)
::  OLD: \czy_pow/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
POW.cntx_psh();
POW.index('POZ');
POW.prefix(_a);
_p:=0;
{? POW.first() || {!|? _p+=POW.KW$2; POW.next !} ?};
POW.cntx_pop();
_p


\czy_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Sprawdzenie i usuniecie zbednych wyroznikow dla pozycji
::   WE: _a - ref KS dla POZ.KOM().KS
::       _b - ref POZ
::  OLD: \czy_ok/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(35)='T'
|| KS_W.cntx_psh();
   SLU.cntx_psh();
   SLUAPPL.cntx_psh();
   POW.cntx_psh();
   POW.index('POZ');
   POW.prefix(_b);
   KS_W.index('LP');
   KS_W.prefix(_a);
   {! _i:=1..6 |!
     {? KS_W.find_key(_i)
     || {? POW.find_key(_i)
        || {? POW.SLU=KS_W.SLU & POW.SLO().SLU=KS_W.SLU().SLU
           || 1
           || POW.del()
           ?}
        ?}
     || {? POW.find_key(_i) || POW.del() ?}
     ?}
   !};
   KS_W.cntx_pop();
   SLU.cntx_pop();
   SLUAPPL.cntx_pop();
   POW.cntx_pop()
?}


\ust_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Ustalenie sumy wyroznikow w okienku wertowani tabeli POW
::  OLD: \ust_sum/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
POW.index('POZ');
POW.prefix(POZ.ref,KS_W.LP,KS_W.SLU);
KS_W.SLU().SLU();
KA.SUM_ROZ:=KA.POM_ROZ:=0;
{? POW.first() || {! |? KA.SUM_ROZ+=POW.KW; POW.next() !} ?};
KA.POZ_ROZ:=POZ.SUM-KA.SUM_ROZ;
1


\pusu_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula po Usun (Dolacz, Popraw) w okienku wertowania tabeli POW
::  OLD: \pusu_pow/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? menu_txt='Usuń'
|| KA.SUM_ROZ:=KA.SUM_ROZ-KA.POM_ROZ
|| KA.SUM_ROZ:=KA.SUM_ROZ-KA.POM_ROZ+POW.KW
?};
KA.POZ_ROZ:=POZ.SUM-KA.SUM_ROZ;
KA.POM_ROZ:=0;
1


\ppop_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Funkcja przed akcja Popraw w okienku wertowania SLO i POW podczas
::       uzupelniania wyroznikow
::  OLD: \ppop_pow/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.win_edit();
::Poczatek modyfikacji dla Maclex Fiks 10.10.2009 AK [1120]
_a:=SLO.win_sel('?');
{?  _a='AU_ROZ'
|| 1
:: TODO
::    exec('ppop_pow','ml_auto')
|| {? KA.KW$2=0 || ZMIENNE.POPRAW:='T'; KA.KW:=KA.POZ_ROZ ?};
   KA.POM_ROZ:=POW.KW$2;
   {? menu_txt<>'Popraw' || POW.KW:=KA.POZ_ROZ ?}
?};
1


\chk_pwyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula Rekord po w okienku wertowania tabeli POW
::  OLD: \chk_pwyr/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=__CHK.record(POW,,'SLO','KW');
{? _a=''
|| POW.KW:=POW.KW$2;
   {? |(KA.SUM_ROZ-KA.POM_ROZ+POW.KW)>|POZ.SUM
   || FUN.info('Suma kwot z rozdzielnika przekracza kwotę dekretu.'@);
      POW.KW:=KA.POZ_ROZ+KA.POM_ROZ; _a:='KW'
   || POW.cntx_psh();
      _r:={? KA.POM_ROZ$2=0 || null || POW.ref() ?};
      POW.index('POZ');
      POW.prefix(POZ.ref,POW.LP,POW.SLU,POW.SLO);
      {? POW.first() & (_r=null | _r<>POW.ref)
      || FUN.info('Wyróżnik został już użyty w rozdzielniku.'@); _a:='SLO'
      ?};
      POW.cntx_pop()
   ?}
?};
_a


\pkw_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula po redakcji KA.KW
::  OLD: \pkw_pow/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=SLO.win_sel('?');
{? _a='AU_ROZ'
|| 1
:: TODO
:: exec('pkw_pow','ml_auto')
|| KA.KW:=KA.KW$2;
   TPOW.prefix(KS_W.LP,SLU.NAZ,SLO.KOD);
   _ok:=TPOW.first();
   {? (_ok & |(KA.SUM_ROZ+KA.KW-TPOW.KW)>|POZ.SUM) |
      (_ok=0 & |(KA.SUM_ROZ+KA.KW)>|POZ.SUM)
   || FUN.info('Suma kwot z rozdzielnika przekracza kwotę dekretu.'@);
      KA.KW:=KA.POZ_ROZ+{? _ok || TPOW.KW || 0 ?};
      0
   || {? _ok || KA.SUM_ROZ-=TPOW.KW$2-KA.KW$2 || KA.SUM_ROZ+=KA.KW$2 ?};
      {? KA.KW$2=0
      || {? _ok || TPOW.del() ?}
      || {? _ok
         || TPOW.KW:=KA.KW$2; TPOW.put()
         || TPOW.LP:=KS_W.LP; TPOW.KW:=KA.KW$2; TPOW.SLO:=SLO.KOD;
            TPOW.SLU:=SLU.NAZ;  TPOW.add()
         ?}
      ?};
      KA.POZ_ROZ:=POZ.SUM-KA.SUM_ROZ;
      1
   ?}
::Poczatek modyfikacji dla Maclex Fiks 10.10.2009 AK [1120]
?}
::Koniec modyfikacji dla Maclex Fiks


\wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Wyswietla liste uzupelnien wyroznikow dla dekretu aktualnego schematu dekretowania
::   WE:  _a  - dla jakiej tabeli
::        _b  - dla ktorego dekretu schematu: W - Wn lub M - Ma
::       [_c] - akronim okienka selekcji dla tabeli SKID_WYR
::  OLD: \wyr/skid_wyr.fml
::  OLD: \wyr/dok_fks.fml
::----------------------------------------------------------------------------------------------------------------------
KA.TAB:=_a;
KA.STR:=_b;
{? var_pres('_c')<>2
|| _c:='WER'
?};
{? _a='DEK_POZ'
|| KA.DEKRET:={? _b='W' || DEK_POZ.DEKRET_W || DEK_POZ.DEKRET_M ?}
|? _a='EKO_DEK'
|| KA.DEKRET:={? _b='W' || EKO_DEK.DEKRET_W || EKO_DEK.DEKRET_M ?}
?};
_skid_eko:='DEK_POZ'=_a | 'EKO_DEK'=_a;
{? ~_skid_eko | (_skid_eko & KA.DEKRET().KONTOTXT<>'')
|| FORMULA.win_dict('FORMULY');
   FORMULA.actions('WER','T');
   FORMULA.win_edit('FORMULY');
   FORMULA.win_patt('FORMULY');
   ZMIENNE.SYSTEM:='FIKS';
   SKID_WYR.cntx_psh();
   SKID_WYR.index('SKID_WYR');
   SKID_WYR.prefix(exec('firma','ustawienia'),KA.TAB,($(KA.TAB+'.name()'))(),exec('bl_wref','wyrozniki'),_b);
   SKID_WYR.first();
   SKID_WYR.hdr_sel();
   _kom:={? _b='W' || ' Wn'@ |? _b='M' || ' Ma'@  || ''?};
   SKID_WYR.hdr_sel(' dekretu %1'@[_kom]);
   SKID_WYR.win_sel(_c);
   {? (_a='FORM' & FORM.AUTOKSIE().A='T') | (_a='DEK' & DEK.AV().A='T' ) |
      ((_a='FORM' | _a='DEK') & AUTOKSIE.ROK_F().PLAN_GR='T')
   || SKID_WYR.actions(SKID_WYR.win_sel('?'),'Dup:D')
   ?};
   SKID_WYR.select();
   _okno:=SKID_WYR.win_sel('?');
   {? _okno='WER2P'
   || _okno:='WER2P_1'
   ?};
   SKID_WYR.actions(_okno);
   FORMULA.actions('WER');
   SKID_WYR.cntx_pop()
|| _kom:={? _b='W' || ' Wn.'@ |? _b='M' || ' Ma.'@  || '.' ?};
   FUN.info('Schemat nie ma określonego dekretu %1'@[_kom])
?};
1


\bl_wref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Wartość początkowa pola SKID_WYR.REF
::  OLD: \bl_wref/skid_wyr.fml
::  OLD: \bl_wref/dok_fks.fml
::----------------------------------------------------------------------------------------------------------------------
($('#'+KA.TAB+'.ref()'))()


\bl_wtab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Wartosc poczatkowa pola SKID_WYR.TAB
::  OLD: \bl_wtab/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
KA.TAB


\bl_str
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Wartość początkowa pola SKID_WYR.STR
::  OLD: \bl_str/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
KA.STR


\pr_kod_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Przed redakcja pola SKID_WYR.KOD
::  OLD: \pr_kod_w/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_WYR.SLU<>null & KA.JAK='T'
|| SKID_WYR.SLU();
   SLO.win_dict('ONE'); SLO.win_sel('ONE');
   SKID_WYR.FORMULA:=null;
   1
|| 0
?}


\pr_for_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Przed redakcją pola SKID_WYR.FORMULA
::  OLD: \pr_for_w/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_WYR.SLU<>null & KA.JAK='N'
|| SKID_WYR.SLU();
   FL.set_tw('S');
   SKID_WYR.KOD:=null;
   exec('fl_rodz','formula','S');
   1
|| 0
?}


\pr_for_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Przed redakcją pola SKID_WYR.KWOTA
::  OLD: \pr_for_k/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
FL.set_tw('N');
exec('fl_rodz','formula','N');
1


\bl_wname
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ATA [8.60]
:: OPIS: Wartość początkowa pola SKID_WYR.TABNAME
::  OLD: \bl_wname/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
($(KA.TAB+'.name()'))()


\kaakcja1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed dolacz w oknach SKID_WYR
::  OLD: \kaakcja1/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
KA.AKCJA:=1; 1


\kaakcja0
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Akcja wyswietl okien tabeli SKID_WYR
::  OLD: \kaakcja0/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
KA.AKCJA:=0; SKID_WYR.display()


\dol_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Akcja Dolacz dla okienka WER tabeli SKID_WYR
::  OLD: \dol_wyr/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
KA.JAK:='T';
_nr:={? SKID_WYR.size()=0
     || _ref:=null; 1
     || {? _=1
        || _ref:=null; SKID_WYR.last(); SKID_WYR.LP+1
        || _ref:=SKID_WYR.ref(); SKID_WYR.LP
        ?}
     ?};
SKID_WYR.blank();
SKID_WYR.LP:=_nr;
{? SKID_WYR.edit("exec('chk_wyr','wyrozniki')")
|| do();
   {? _ref<>0 || SKID_WYR.LP:=0 ?};
   SKID_WYR.add();
   {? _ref<>null
   || {? SKID_WYR.last()
      || {! |?
            {? SKID_WYR.LP>=_nr
            || SKID_WYR.LP+=1;
               SKID_WYR.put();
               SKID_WYR.prev()
            ?}
         !}
      ?};
      SKID_WYR.first();
      SKID_WYR.LP:=_nr;
      SKID_WYR.put()
   ?};
   end()
?}


\chk_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Rekord po dla okienka WER tabeli SKID_WYR
::   WE:
::   WY: '' lub akronim błędnie wypełnionego pola
::  OLD: \chk_wyr/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
_result:='';
{? SLOSLU.SLU_DEK=''
|| FUN.info('Nie wybrano słownika wyróżników.'@);
   _result:='SLU_DEK'
|| {? SKID_WYR.KOD=null & SKID_WYR.FORMULA=null & KA.JAK<>'R'
   || FUN.info('Należy podać stały kod lub formułę wyznaczającą kod wyróżnika.'@);
      _result:={? KA.JAK='T' || 'KOD' || 'FORMULA' ?}
   |? KA.JAK='R' & SKID_WYR.KWOTA=null
   || FUN.info('Należy podać formułę wyznaczającą kwotę w rozdzielniku.'@);
      _result:='KWOTA'
   |? SKID_WYR.PROC$2<>0 & SKID_WYR.KWOTA<>null
   || FUN.info('Pola "% dekretowanej kwoty" i "Formuła wyznaczająca kwotę"\n'+
               'nie mogą być jednocześnie wypełnione.'@);
               _result:='PROC'
   |? SKID_WYR.KWOTA=null & (SKID_WYR.PROC$2<=0 | SKID_WYR.PROC$2>100)
   || FUN.info('Prawidłowa wartość procentu jest w zakresie 0.01 do 100.'@);
      _result:='PROC'
   || SKID_WYR.PROC:=SKID_WYR.PROC$2
   ?}
?};
_result


\pch_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Akcja Popraw przed dla okienka WER tabeli SKID_WYR
::  OLD: \pch_wyr/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
KA.JAK:={? SKID_WYR.FORMULA<>null || 'N' |? SKID_WYR.KOD<>null || 'T' || 'R' ?};
KA.AKCJA:=1;
1


\przenr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Akcja Usun po dla okienka WER tabeli SKID_WYR
::  OLD: \przenr/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_WYR.cntx_psh();
{? SKID_WYR.first()
|| _lp:=1;
   {! |?
      SKID_WYR.LP:=_lp;
      _lp+=1;
      SKID_WYR.put();
      SKID_WYR.next()
   !}
?};
SKID_WYR.cntx_pop()


\bd_dp_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula przed wyswietleniem zmiennej ZMIENNE.DP_OPIS, aktualizuje wartosc tej zmiennej. W przypadku braku
::       odpowiedniego kontekstu wyszarza pole
::  OLD: \bd_dp_opis/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TREE_DEK')>0
   & ( (TREE_DEK.SYSTEM='FST' & (+TREE_DEK.RODZ)=1) | TREE_DEK.RODZ='EF' | TREE_DEK.RODZ='EP' | TREE_DEK.RODZ='ED' )
|| ZMIENNE.DP_OPIS:='Grupa rodzajowa'
|? var_pres('TREE_DEK')>0 & TREE_DEK.SYSTEM='PPL'
|| ZMIENNE.DP_OPIS:='Rubryka'
|? var_pres('TREE_DEK')>0 & ( (TREE_DEK.SYSTEM='KASA' & (+TREE_DEK.RODZ)=1) | TREE_DEK.RODZ='SN' )
|| ZMIENNE.DP_OPIS:='Transakcja kasowa'
|| exec('findfnv','#color')
?}


\bd_dp_oiden
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [$12.10]
:: OPIS: Formula przed wyswietleniem zmiennej ZMIENNE.DP_OIDENT
::  OLD: \bd_dp_oiden/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZMIENNE.DP_OIDEN<>'' || 1 || exec('findfnv','#color') ?}


\bd_dp_ident
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula przed wyswietlniem pola zmiennej ZMIENNE.DP_IDENT. Formula przed wyswietleniem pola wypelnia
::       odpowiednio zmienne wartoscia odpowiadajaca pola DEK_POZ.IDENT
::  OLD: \bd_dp_ident/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
_wysw:=0;
{? DEK_NAG.RODZ<>''
|| {? (DEK_NAG.RODZ='EF' | DEK_NAG.RODZ='EP' | DEK_NAG.RODZ='ED') & DEK_POZ.IDENT<>''
   || TAM.cntx_psh();
      TAM.index('TAMSTRGR');
      TAM.prefix();
      {? TAM.find_key(DEK_POZ.IDENT)
      || ZMIENNE.DP_IDENT:=DEK_POZ.IDENT;
         ZMIENNE.DP_OIDEN:=TAM.NGS
      || ZMIENNE.DP_OIDEN:='';
         ZMIENNE.DP_IDENT:=''
      ?};
      TAM.cntx_pop();
      _wysw:=1
   |? (~-DEK_NAG.RODZ='KL' | DEK_NAG.RODZ='KU')
   || R.cntx_psh();
      R.index('RUBKOD');
      R.prefix();
      {? R.find_key(#DEK_POZ.IDENT)
      || ZMIENNE.DP_OIDEN:=R.RT;
         ZMIENNE.DP_IDENT:=$R.RN
      || ZMIENNE.DP_OIDEN:='';
         ZMIENNE.DP_IDENT:=''
      ?};
      R.cntx_pop();
      _wysw:=1
   |? DEK_NAG.RODZ='SN' & DEK_POZ.IDENT*'koperpoz'
   || POZOPER.cntx_psh;
      POZOPER.prefix();
      {? POZOPER.seek(DEK_POZ.IDENT,form(8+DEK_POZ.IDENT))
      || ZMIENNE.DP_OIDEN:=form(POZOPER.OPER().NAZWA)+'/'+form(POZOPER.NAZWA);
         ZMIENNE.DP_IDENT:=form(POZOPER.OPER().KOD,8)+form(POZOPER.KOD)
      ?};
      POZOPER.cntx_pop;
      _wysw:=1
   ||
      ZMIENNE.DP_OIDEN:='';
      ZMIENNE.DP_IDENT:='';
      _wysw:=0
   ?}
|| ZMIENNE.DP_OIDEN:='';
   ZMIENNE.DP_IDENT:='';
   _wysw:=0
?};
{? _wysw || 1 || exec('findfnv','#color') ?}


\f3_dp_ident
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula na F3 w polu zmiennej ZMIENNE_DP_IDENT. Formula wyswietla odpowiednia tabele slownikowa do wyboru
::       wlasciwego identyfikatora (zaleznego od systemu).
::  OLD: \f3_dp_ident/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEK_NAG.RODZ='EF' | DEK_NAG.RODZ='EP' | DEK_NAG.RODZ='ED'
|| TAM.win_sel('WYBOR');
   TAM.index('TAMSTRGR');
   TAM.prefix();
   {? ZMIENNE.DP_IDENT<>'' || TAM.find_key(ZMIENNE.DP_IDENT) ?};
   {? TAM.select(,1,4)
   || DEK_POZ.IDENT:=TAM.GR;
      ZMIENNE.DP_OIDEN:=TAM.NGS;
      ZMIENNE.DP_IDENT:=TAM.GR
   ?}
|? DEK_NAG.RODZ='KU' | ~-DEK_NAG.RODZ='KL'
|| R.win_sel('WYB');
   R.index('RUBKOD');
   R.prefix();
   {? ZMIENNE.DP_IDENT<>'' || R.find_key(#ZMIENNE.DP_IDENT) ?};
   {? R.select(,1,4)
   || DEK_POZ.IDENT:=$R.RN;
      ZMIENNE.DP_OIDEN:=R.RT;
      ZMIENNE.DP_IDENT:=$R.RN
   ?}
|? DEK_NAG.RODZ='SN'
|| POZOPER.index('KSIEG');
   POZOPER.prefix();
   {? POZOPER.first()
   || _oper:=form(8+fld); _tran:=(8-fld());
      POZOPER.find_key(_oper,_tran)
   ?};
   POZOPER.win_sel('WER2');
   POZOPER.win_edit('RED2');
   {? POZOPER.select(,1)
   || DEK_POZ.IDENT:=$POZOPER.ref;
      ZMIENNE.DP_OIDEN:=form(POZOPER.OPER().NAZWA)+'/'+form(POZOPER.NAZWA);
      ZMIENNE.DP_IDENT:=form(POZOPER.OPER().KOD,8)+form(POZOPER.KOD)
   ?}
?}


\ae_dp_ident
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula po redakcji zmiennej ZMIENNE.DP_IDENT. Formula sprawdza czy prawidlowo wypelniono pole, szuka
::       odpowiedniego rekordu na podstawie wprowadzonego stringu i wypelnia pole DEK_POZ.IDENT (identyfikator w
::       pozycji schematu dekretacji - sqlowy ref)
::   WY: 1 - prawidlowo wypwlniono pole, 0 - w p.p.
:----------------------------------------------------------------------------------------------------------------------
_rr:=1;
{? DEK_NAG.RODZ='EP' | DEK_NAG.RODZ='EF' | DEK_NAG.RODZ='ED'
|| TAM.cntx_psh;
   TAM.index('TAMSTRGR');
   TAM.prefix();
   {? ZMIENNE.DP_IDENT<>''
   || {? TAM.find_key(ZMIENNE.DP_IDENT)
      || DEK_POZ.IDENT:=ZMIENNE.DP_IDENT;
         ZMIENNE.DP_IDENT:=TAM.GR;
         ZMIENNE.DP_OIDEN:=TAM.NGS;
         _rr:=1
      || FUN.info('Nie znaleziono grupy rodzajowej o podanych początkowych znakach.'
               '\nWybierz grupę z słownika klawisz F3 lub podaj prawidłowy kod grupy.'@);
         DEK_POZ.IDENT:='';
         ZMIENNE.DP_OIDEN:='';
         ZMIENNE.DP_IDENT:='';
         _rr:=0
      ?}
   || DEK_POZ.IDENT:='';
      _rr:=1
   ?};
   TAM.cntx_pop
|? ~-DEK_NAG.RODZ='KL' | DEK_NAG.RODZ='KU'
|| R.cntx_psh;
   R.index('RUBKOD');
   R.prefix();
   {? ZMIENNE.DP_IDENT<>''
   || {? R.find_key(#ZMIENNE.DP_IDENT)
      || DEK_POZ.IDENT:=$R.RN;
         ZMIENNE.DP_OIDEN:=R.RT;
         ZMIENNE.DP_IDENT:=$R.RN;
         _rr:=1
      || FUN.info('Nie znaleziono składnika listy płac o podanym kodzie.'
             '\nWybierz składnik listy płac z słownika klawisz F3.'@);
         DEK_POZ.IDENT:='';
         ZMIENNE.DP_OIDEN:='';
         ZMIENNE.DP_IDENT:='';
         _rr:=0
      ?}
   || DEK_POZ.IDENT:='';
      _rr:=1
   ?};
   R.cntx_pop
|? DEK_NAG.RODZ='SN'
||
   POZOPER.cntx_psh;
   POZOPER.index('KSIEG');
   POZOPER.prefix();
   {? ZMIENNE.DP_IDENT<>''
   || _oper:=form(8+ZMIENNE.DP_IDENT); _tran:=(8-ZMIENNE.DP_IDENT);
      {? POZOPER.find_key(_oper,_tran)
      || {? POZOPER.VAT='N'
         || ZMIENNE.DP_OIDEN:=form(POZOPER.OPER().NAZWA)+'/'+form(POZOPER.NAZWA);
            ZMIENNE.DP_IDENT:=form(POZOPER.OPER().KOD,8)+form(POZOPER.KOD);
            DEK_POZ.IDENT:=$POZOPER.ref;
            _rr:=1
         || FUN.info('Wybrano typ transakcji z dokumentami VAT.'
            '\nWybierz inny typ transakcji z słownika klawisz F3.'@);
             _rr:=0
         ?}
      || FUN.info('Nie znaleziono typu transakcji o podanym kodzie.'
          '\nWybierz typ transakcji z słownika klawisz F3.'@);
         DEK_POZ.IDENT:='';
         ZMIENNE.DP_OIDEN:='';
         ZMIENNE.DP_IDENT:='';
          _rr:=0
      ?}
   || DEK_POZ.IDENT:='';
      FUN.info('Nie wypełnione pole.\nWybierz typ transakcji z słownika klawisz F3.'@);
      _rr:=0
   ?};
   POZOPER.cntx_pop
|? DEK_NAG.RODZ='LM' & ZMIENNE.DEK_TYP<>''
|| TYPYDOK.cntx_psh;
   TYPYDOK.index('TYP');
   TYPYDOK.prefix();
   {? TYPYDOK.find_key(ZMIENNE.DEK_TYP)
   || ZMIENNE.DEK_TYP:=TYPYDOK.T;
      ZMIENNE.DEK_T_TR:=TYPYDOK.NAZ;
      DEK_NAG.TYP:=$TYPYDOK.ref;
      _rr:=1
   || FUN.info('Nie znaleziono typu dokumentu o podanym kodzie.'@);
      DEK_NAG.TYP:='';
      _rr:=0
   ?};
   TYPYDOK.cntx_pop
|? (DEK_NAG.RODZ='LS' | DEK_NAG.RODZ='LZ' | DEK_NAG.RODZ='LP' | DEK_NAG.RODZ='LK') & ZMIENNE.DEK_TYP<>''
|| TYPYSP.cntx_psh;
   TYPYSP.index('SPRZAK');
   {? DEK_NAG.RODZ='LZ' || TYPYSP.prefix('T') || TYPYSP.prefix('N') ?};
   {? TYPYSP.find_key(ZMIENNE.DEK_TYP)
   || ZMIENNE.DEK_TYP:=TYPYSP.T;
      ZMIENNE.DEK_T_TR:=TYPYSP.NAZ;
      DEK_NAG.TYP:=$TYPYSP.ref;
      _rr:=1
   || FUN.info('Nie znaleziono typu dokumentu o podanym kodzie.'@);
      DEK_NAG.TYP:='';
      _rr:=0
   ?};
   TYPYSP.cntx_pop
?};
_rr


\dspkajak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.10]
:: OPIS: Na wyświetl dla pola KA.JAK
::  OLD: \dspkajak/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? KA.AKCJA=0
|| KA.JAK:={? SKID_WYR.FORMULA<>null || 'N'
           |? SKID_WYR.KOD<>null || 'T'
           || 'R'
           ?}
|| SKID_WYR.efld_opt('RED','mark=0',SKID_WYR,'KOD');
   SKID_WYR.efld_opt('RED','mark=0',SKID_WYR,'FORMULA');
   {? KA.JAK='T'
   || SKID_WYR.efld_opt('RED','mark=1',SKID_WYR,'KOD')
   |? KA.JAK='N'
   || SKID_WYR.efld_opt('RED','mark=1',SKID_WYR,'FORMULA')
   ?};
   1
?}


\aekajak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.10]
:: OPIS: Po redakcji pola KA.JAK
::  OLD: \aekajak/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? KA.JAK='T'
|| SKID_WYR.FORMULA:=null
|? KA.JAK='N'
|| SKID_WYR.KOD:=null
|| SKID_WYR.FORMULA:=SKID_WYR.KOD:=null
?}; 1


\spr_kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Po redakcji pola SKID_WYR.SLU
::  OLD: \spr_kod/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_WYR.KOD<>null
|| SLO.cntx_psh();
   SLO.index('SL');
   SLO.prefix(SLU.ref());
   {? SLO.find_key(SKID_WYR.KOD().KOD)
   || SKID_WYR.KOD:=SLO.ref()
   || SKID_WYR.KOD:=null
   ?};
   SLO.cntx_pop()
?};
1


\trig_ks_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Triger dla tabeli KS_W
::   WE: _a - typ trigera: 1-po dołącz 2-po usun
::       _b - czy operacja się udała
::----------------------------------------------------------------------------------------------------------------------
{? _b
|| {? _a=1
   || KOM.cntx_psh();
      KOM.index('CZY_WYR');
      KOM.prefix(KS_W.S,0);
      {? KOM.first()
      || {!
         |? KOM.cntx_psh();
            KOM.prefix(); KOM.CZY_WYR:=1; KOM.put();
            KOM.cntx_pop();
            KOM.first()
         !}
      ?};
      KOM.cntx_pop()
   |? _a=2
   || _ks:=bfld('S');
      KS_W.cntx_psh();
      KS_W.index('LP');
      KS_W.prefix(_ks);
      {? ~KS_W.first()
      || KOM.cntx_psh();
         KOM.index('CZY_WYR');
         KOM.prefix(KS_W.S,1);
         {? KOM.first()
         || {!
            |? KOM.cntx_psh();
               KOM.prefix(); KOM.CZY_WYR:=0; KOM.put();
               KOM.cntx_pop();
               KOM.first()
            !}
         ?};
         KOM.cntx_pop()
      ?};
      KS_W.cntx_pop()
   ?}
?};
~~


\czy_wyroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Funkcja sprawdza, czy w systemie jest aktywna ewidencja wyroznikow
::       (tzn. czy parametr nr 35 ='T')
::   WE: _a - nazwa akcji
::   WY: 0 - parametr nr 35 ='N' i komunikat
::       1 - parametr nr 35 ='T'
::  OLD: \czy_wyroz/wyrozn.fml
::  OLD: \czy_wyroz/!zws_par_fask.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(35)='T'
|| 1
|| FUN.info('Akcja "%1" niedostępna.\n'
            '(Ustawienie parametru nr 35 na liście parametrów systemu).'@[_a]); 0
?}


\tab_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.10]
:: OPIS: Zapytanie sql - stworzenie tabeli tymczasowej ze slownikami wyroznikow
::  OLD: \tab_s/wyrozn.fml
::  OLD: \tab_s/!fks_dks_dawr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TAB_S')>0 || obj_del(TAB_S) ?};
TAB_S:=sql('select SLU.NAZ, SLU.OP from KS_W'+
' join SLUAPPL using (KS_W.SLU, SLUAPPL.REFERENCE)'+
' join SLU using (SLUAPPL.SLU, SLU.REFERENCE) group by SLU.NAZ, SLU.OP '+
'order by 1, 2');
_wer:=TAB_S.mk_sel('Wybierz słownik wyróżników'@,'P',,'tab_s_wer',,,,,'U');
TAB_S.win_fld(_wer,,'NAZ',,,20,,,'Nazwa'@);
TAB_S.win_fld(_wer,,'OP',,,60,,,'Opis'@);
TAB_S.win_sel(_wer);
TAB_S.win_act(_wer,,'Formuła','Wybierz'@@,,'Wybór słownika'@,,"sel_exit",1,,,,'W');
TAB_S.win_act(_wer,,'Szukaj');
TAB_S.win_act(_wer,,'Kolejność')


\zak_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Akcje 'Zakres' w okienku wertowania 'WYR' tabeli POZ.
::   WE: _a - (0/1) czy ograniczac konto przez podany prefix
::  OLD: \zak_wyr/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| KA.win_edit('PREFIX');
   _ok:=KA.edit()
|| KA.PREFIX:='';
   _ok:=1
?};
{? _ok
|| exec('hdr_poz','wyrozniki');
   {? OPERATOR.DEPT
   || POZ.index('CZY_WYRO');
      POZ.prefix(1,'T','T',OPERATOR.DEPT,KA.PREFIX)
   || POZ.index('CZY_WYR');
      POZ.prefix(1,'T','T',KA.PREFIX)
   ?}
?};
1


\hdr_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Ustalenie tytulu w okienku 'WYR' tabeli POZ.
::  OLD: \hdr_poz/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.hdr_sel(''@);
{? KA.PREFIX<>''
|| _opis:=35+(form(KA.PREFIX)+'?'*35);
   POZ.hdr_sel(' dla kont: %1'@[_opis])
|| POZ.hdr_sel(' dla wszystkich kont'@)
?};
1


\slu_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Znajduje pozycję słownika wyróżnika konta
::   WE: _a - rok
::       _b - konto
::       _c - nr wyróżnika
::----------------------------------------------------------------------------------------------------------------------
_slu:=null;
ROK_F.cntx_psh();
{? ROK_F.seek(_a)
|| KS.cntx_psh();
   KS.index('SYM'); KS.prefix(_a,ROK_F.SYNT+_b);
   {? KS.first()
   || KS_W.index('LP'); KS_W.prefix(KS.ref(),_c);
      {? KS_W.first()
      || _slu:=KS_W.SLU().SLU
      ?}
   ?};
   KS.cntx_pop()
?};
ROK_F.cntx_pop();
_slu


\chk_ksw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Funkcja wywolywana po redakcji oknienka 'RED' tabeli KS_W.
::       Funkcja sprawdza poprawnosc wypelnionych danych.
::   WY: akronim pola do wypelnienia lub ''
::  OLD: \chk_ksw/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? SLOSLU.SLU_WYR=''
|| FUN.info('Nie wybrano słownika wyróżników.'@); _zwrot:='SLU_WYR'
?};
{? _zwrot='' & KS_W.ROZDZ='T' & (KS_W.AN='S' | KS_W.AN='T')
|| FUN.info('Dla wyróżnika z rozdzielnikiem możliwe\n'
            'wypełnianie wyróżników tylko przez operatora.'@);
   _zwrot:='AN'
?};
{? _zwrot='' & KS_W.AN='S' & KS_W.ST=null
|| FUN.info('Nie podano wartości domyślnej.'@); _zwrot:='ST'
?};
{? _zwrot=''
|| {? KS_W.AN<>'S' & KS_W.ST<>null
   || KS_W.ST:=null
   |? KS_W.AN='T' & ~exec('kt_bud','konto',KS.ref(),KS_W.SLU)
   || FUN.info('Słownik %1 nie jest analityką konta %2'
               '\nWyróżnik nie może być wypełniany na podstawie analityki.'@[SLOSLU.SLU_WYR,KS.SYM]);
      _zwrot:='SLU_WYR'
   ?}
?};
{? _zwrot='' & KS_W.WYM='T' & PAR_SKID.get(36)='N'
|| FUN.info('Zgodnie z parametrem systemu nr 36\n'
            'wyróżniki nie będą uzupełniane podczas dekretacji.'%1);
   _zwrot:='WYM'
?};
_zwrot

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:39 5674811bbc1a9c1b3078711a912ca5bf7540f8a0118462c41ebb24696a780fc8e06496f33c24df5cd1253177bb68f9362f3403dcef3bf99ab53e95300ec919597e1cc6f2d8bd08eecf594326799d3e4aa693c1ff5b13f974d33012630ce05e3596e18e817e9125516afa178c931e4b18ff5577faf90ed8585cdd4f5f07eb35a8
