:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: samochody.fml
:: Utworzony: 2016/06/27
:: Autor: DRO
::======================================================================================================================
:: Zawartość: Biblioteka funkcji związanych z obsługą samochodów
::======================================================================================================================


\set_srsr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Ustawia okna i filtr tabeli SRSR
::   WE: [_a] - jeżeli _a - _a = 1 to akcja Wybierz jest dostępna
::----------------------------------------------------------------------------------------------------------------------
_win:=SRSR.mk_sel('Środki'@,'P',,'_srsr_dict',5,5,20,,'U');
SRSR.win_fld(_win,SRSR,'NRI',,,15,,,'Numer'@);
SRSR.win_fld(_win,SRSR,'NST',,,25,,,'Nazwa'@);
SRSR.win_fld(_win,SRSR,'ODD','OD',,10,,,'J. księgowa'@);
SRSR.win_fld(_win,SRSR,'OSOBA','NAZWISKO',,15,,,'Użytkownik'@);
SRSR.win_fld(_win,SRSR,'DE',,,10,,,'Data eksploatacji'@);
SRSR.win_act(_win,,'Rekord',,,,"{? SSTALE.AO<>null
                                || SRST.cntx_psh();
                                   SRST.index('SROD');
                                   SRST.prefix(SRSR.ref(),SSTALE.AR,SSTALE.AO);
                                   {? SRST.first() || SRSR.OSOBA:=SRST.OSOBA ?};
                                   SRST.cntx_pop()
                                ?};
                                exec('rekprzed','color','SRSR#03#01')");
{? _>0 & type_of(_a)=type_of(1) & _a=1
|| SRSR.win_act(_win,,'Formuła','Wybierz'@,,'Wybór środka'@,,"exec('wyb_after','samochody')",1,,,,'W')
?};
SRSR.win_act(_win,,'Formuła','Legenda'@,,'Legenda'@@,,"exec('legenda','color','SRSR#03')",,,,,'L');
SRSR.win_dict(_win);
SRSR.win_sel(_win);
SRSR.prefix();
SRSR.f_clear();
SRSR.f_set('NRI',
   'left join USERSDEP using(USERSDEP.DEPT,SRSR.ODD) left join ODD using (SRSR.ODD,ODD.REFERENCE) ',
   '(:_a=1 or USERSDEP.USERS=:_b) and ODD.FIRMA=:_c and SRSR.GRP<>''E'' and SRSR.POJAZD=''T''',Perm.hasFull('FJKS'),OPERATOR.USER,REF.FIRMA)


\rp_srsr_poj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła ustawia kolor podświetlenia rekordu dla środków już przypisanych do kartoteki pojazdów
::----------------------------------------------------------------------------------------------------------------------
{? exec('poj_srsr','samochody',SRSR.ref()) || 'SRSR#03#01' || '' ?}


\wyb_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła po akcji Wybierz w oknie selekcji środków będących pojazdami
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('poj_srsr','samochody',SRSR.ref())
|| sel_exit()
|| FUN.emsg('Wskazany środek występuje już w kartotece pojazdów.'@)
?}


\przebiegi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przebiegi samochodów prywatnych w delegacjach
::  OLD: \sam_pryw_sel/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__tryb_p');
{? +app_info('web_sesid')
|| exec('env_wt','b_proces');
   _rok:=($(SSTALE.AR().POCZ_ROK~1)+2);
   {? _rok<>''
   || __tryb_p:='Moje';
      web_params_set('sam_rok',_rok);
      exec('sam_fill','samochody',__tryb_p);
      {? SAM_TMP.first() | exec('chk_role','#b__box',OPERATOR.USER,'OBE_FDL_ZPSW')
      || {? __tryb_p='Wszystkie'
         || _txt:=' z przejazdami wszystkich użytkowników'@
         || _txt:=' z przejazdami zalogowanego użytkownika'@
         ?};
         EDOKUMW.web_cntx_save();
         SAM_TMP.web_win_init('WER_WW','_sam_tmp','title=" '+_txt+'"');
         SAM_TMP.web_select('WER_WW','_sam_tmp')
      || {? __tryb_p='Wszystkie'
         || FUN.emsg('Brak zarejestrowanych przejazdów samochodami służbowymi lub prywatnymi w bieżącym roku.'@)
         || FUN.emsg('Aktualnie zalogowany użytkownik nie posiada zarejestrowanych przejazdów\n'
                     'samochodami służbowymi lub prywatnymi w bieżącym roku.'@)
         ?}
      ?}
   || FUN.info('Nie znaleziono aktywnego roku.'@)
   ?}
|| {? OPERATOR.USER().OSOBA<>null | exec('chk_role','#b__box',OPERATOR.USER,'OBE_FDL_ZPSW')
   || POJAZDY.win_sel('WER_JT');
      {? OPERATOR.USER().OSOBA=null & exec('chk_role','#b__box',OPERATOR.USER,'OBE_FDL_ZPSW')
      || OBIEGI.SAM_ZAKR:='W';
         POJAZDY.f_set(,'join EDOKUMP using(POJAZDY.REFERENCE,EDOKUMP.SAMREF) join EDOKUM')
      || OBIEGI.SAM_ZAKR:='M';
         POJAZDY.f_set(,'join EDOKUMP using(POJAZDY.REFERENCE,EDOKUMP.SAMREF) join EDOKUM','EDOKUM.DOSTAWCA=:_a',OPERATOR.USER().OSOBA)
      ?};
      {? POJAZDY.f_first() | exec('chk_role','#b__box',OPERATOR.USER,'OBE_FDL_ZPSW')
      || {? OBIEGI.SAM_ZAKR='M'
         || _txt:=' z przejazdami zalogowanego użytkownika'@
         || _txt:=' z przejazdami wszystkich użytkowników'@
         ?};
         POJAZDY.hdr_sel(); POJAZDY.hdr_sel(_txt);
         POJAZDY.select()
      || FUN.emsg('Aktualnie zalogowany użytkownik nie posiada zarejestrowanych przejazdów\n'
                  'samochodami służbowymi lub prywatnymi w bieżącym roku.'@)
      ?}
   || FUN.info('Brak osoby przypisanej do zalogowanego użytkownika.'@)
   ?}
?}


\sam_fill
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wypełnia dane w tabelach pomocniczych
::   WE: _a = tryb
::----------------------------------------------------------------------------------------------------------------------
exec('env_wt','b_proces');
__tryb_p:=_a;
:: czyszczenie tabel pomocniczych
EDOKUMPT.index('EDOKUMPT');
EDOKUMPT.prefix(app_info('web_sesid'));
{? EDOKUMPT.first() || {! |? EDOKUMPT.del() !} ?};
SAM_TMP.index('SAM_TMP');
SAM_TMP.prefix(app_info('web_sesid'));
{? SAM_TMP.first() || {! |? SAM_TMP.del() !} ?};

{? __tryb_p='Wszystkie' | OPERATOR.USER().OSOBA<>null
||
   POJAZDY.index('FIRWLNR');
   POJAZDY.prefix(REF.FIRMA);
   SAM_TMP.index('SAM_TMP');
   SAM_TMP.prefix();
   POJAZDY.for_each("_sam:=0;
                 EDOKUMP.use('skidpu'+(EDOKUMW.name()+2));
                 EDOKUMP.index('SAMREF'); EDOKUMP.prefix(REF.FIRMA,$POJAZDY.ref());
                 EDOKUM.use('skid_v'+(EDOKUMP.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix();
                 {? EDOKUMP.first()
                 || {! |?
                        {? __tryb_p='Wszystkie' | EDOKUMP.EDOKUM().DOSTAWCA=OPERATOR.USER().OSOBA
                        || {? ~_sam
                           || SAM_TMP.blank();
                              SAM_TMP.WEB_ID:=app_info('web_sesid');
                              SAM_TMP.SAM_ID:=$POJAZDY.ref();
                              SAM_TMP.NAZ:=POJAZDY.NAZ;
                              SAM_TMP.NRREJ:=POJAZDY.NRREJ;
                              SAM_TMP.WLASNY:=POJAZDY.WLASNY;
                              SAM_TMP.KIEROWCA:=POJAZDY.OSOBA;
                              SAM_TMP.SAMDELTY:=POJAZDY.SAMDELTY;
                              SAM_TMP.add();
                              _sam:=1
                           ?};
                           EDOKUMPT.blank();
                           EDOKUMPT.WEB_ID:=app_info('web_sesid');
                           EDOKUMPT.SAM_ID:=SAM_TMP.SAM_ID;
                           EDOKUMPT.EDOKUMP:=$EDOKUMP.ref();
                           EDOKUMPT.DATA_WYJ:=EDOKUMP.DATA_WYJ;
                           EDOKUMPT.GODZ_WYJ:=EDOKUMP.GODZ_WYJ;
                           EDOKUMPT.KRAJ_WYJ:=EDOKUMP.KRAJ_PRZ;
                           EDOKUMPT.MIE_WYJ:=EDOKUMP.MIE_WYJ;
                           EDOKUMPT.DATA_PRZ:=EDOKUMP.DATA_PRZ;
                           EDOKUMPT.GODZ_PRZ:=EDOKUMP.GODZ_PRZ;
                           EDOKUMPT.KRAJ_PRZ:=EDOKUMP.KRAJ_PRZ;
                           EDOKUMPT.MIE_PRZ:=EDOKUMP.MIE_PRZ;
                           EDOKUMPT.LICZ_KM:=EDOKUMP.LICZ_KM;
                           EDOKUMPT.STAWKA:=EDOKUMP.STAWKA;
                           EDOKUMPT.WARTOSC:=EDOKUMP.WARTOSC;
                           EDOKUMPT.add()
                        ?};
                        EDOKUMP.next()
                     !}
                  ?}
               ")
|| FUN.info('Brak osoby przypisanej do zalogowanego użytkownika.'@)
?}


\sam_tmp_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyświetla dane biezącego samochodu
::----------------------------------------------------------------------------------------------------------------------
{? +app_info('web_sesid')
|| _form:="POJAZDY.web_eclose()";
   SRSR.use('srsrr'+REF.FIRMA().SYMBOL); SRSR.prefix();
   POJAZDY.prefix();
   {? POJAZDY.seek(SAM_TMP.SAM_ID,POJAZDY.name())
   || {? ~POJAZDY.MAR
      || POJAZDY.web_efld_init('RED_WWD',,'mark=0,enable=0',POJAZDY,'POJMODEL')
      || POJAZDY.web_efld_init('RED_WWD',,'mark=0,enable=1',POJAZDY,'POJMODEL')
      ?};
      POJAZDY.web_display('RED_WWD','_przebiegi_red',_form)
   || FUN.emsg('Nie znaleziono wskazanego pojazdu.'@)
   ?}
|| POJAZDY.win_edit('RED');
   POJAZDY.display()
?}


\edokumpt_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyświetla dane biezącego przejazdu
::----------------------------------------------------------------------------------------------------------------------
{? +app_info('web_sesid')
|| _form:="EDOKUMP.web_eclose()";
   {? EDOKUMPT.EDOKUMP<>''
   || EDOKUMP.use(ref_name(EDOKUMPT.EDOKUMP));
      EDOKUMP.prefix();
      {? EDOKUMP.seek(EDOKUMPT.EDOKUMP)
      || EDOKUM.use('skid_v'+(EDOKUMP.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix();
         {? EDOKUMP.EDOKUM().TYP().DEL_ZAGR || _win:='RED_WWD' || _win:='REDK_WWD' ?};
         EDOKUMP.web_display(_win,'_edokump_red',_form)
      || FUN.emsg('Nie znaleziono wskazanego przejazdu.'@)
      ?}
   || FUN.emsg('Nie można odnaleźć bieżącego przejazdu.'@)
   ?}
|| {? EDOKUMP.EDOKUM().TYP().DEL_ZAGR || _win:='RED' || _win:='REDK' ?};
   EDOKUMP.win_edit(_win);
   EDOKUMP.display()
?}


\ewidencja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyświetla listę przejazdów dla bieżącego samochodu prywatnego
::----------------------------------------------------------------------------------------------------------------------
{? +app_info('web_sesid')
|| exec('env_wt','b_proces');
   EDOKUMPT.index('EDOKUMPT');
   EDOKUMPT.prefix(app_info('web_sesid'),SAM_TMP.SAM_ID);
   _txt:=' pojazdu %1 w roku %2'@[SAM_TMP.NRREJ,SSTALE.AR().NAZ];
   EDOKUMPT.web_win_init('WER_WW','_edokumpt','title="'+_txt+'"');
   EDOKUMPT.web_select('WER_WW','_edokumpt')
|| EDOKUMP.use('skidpu'+(EDOKUM.name()+2));
   EDOKUMP.index('SAMREF');
   EDOKUMP.prefix();
   {? OBIEGI.SAM_ZAKR='W'
   || EDOKUMP.f_set(,'','EDOKUMP.SAMREF='':_a''',$POJAZDY.ref())
   || _sql:='EDOKUM.DOSTAWCA=:_a and EDOKUMP.SAMREF='':_b''';
      EDOKUMP.f_set(,'join EDOKUM using(EDOKUMP.EDOKUM,EDOKUM.REFERENCE)',_sql,OPERATOR.USER().OSOBA,$POJAZDY.ref())
   ?};
   EDOKUMP.win_sel('WER');
   EDOKUMP.select();
   EDOKUMP.f_clear()
?}


\sam_zakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyświetla okno z możliwością ustawienia zakresu
::----------------------------------------------------------------------------------------------------------------------
{? +app_info('web_sesid')
|| EDOKUMW.web_cntx_load();
   EDOKUMW.web_cntx_save();
   _form:="{? _a='OK'
           || EDOKUMW.web_cntx_load();
              {? OBIEGI.SAM_ZAKR='W' || __tryb_p:='Wszystkie'
              |? OBIEGI.SAM_ZAKR='M' || __tryb_p:='Moje'
              ?};
              exec('sam_fill','samochody',__tryb_p);
              {? __tryb_p='Wszystkie'
              || _txt:=' z przejazdami wszystkich użytkowników'@
              || _txt:=' z przejazdami zalogowanego użytkownika'@
              ?};
              OBIEGI.web_eclose();
              SAM_TMP.web_win_opt('WER_WW',,'title='+_txt);
              SAM_TMP.web_refresh('WER_WW')
           |? _a='ANULUJ'
           || OBIEGI.web_eclose()
           ?}";
   OBIEGI.web_edit('SAM_ZAKR','_sam_zakr',,,_form)
|| OBIEGI.win_edit('SAM_ZAKJ');
   {? OBIEGI.edit("exec('chk_zakres','samochody')")
   || POJAZDY.prefix();
      {? OBIEGI.SAM_ZAKR='M'
      || POJAZDY.f_set(,'join EDOKUMP using(POJAZDY.REFERENCE,EDOKUMP.SAMREF) join EDOKUM','EDOKUM.DOSTAWCA=:_a',OPERATOR.USER().OSOBA);
         _txt:=' z przejazdami zalogowanego użytkownika'@
      || POJAZDY.f_set(,'join EDOKUMP using(POJAZDY.REFERENCE,EDOKUMP.SAMREF) join EDOKUM');
         _txt:=' z przejazdami wszystkich użytkowników'@
      ?};
      POJAZDY.hdr_sel(); POJAZDY.hdr_sel(_txt)
   ?}
?}


\chk_zakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Kontrola po zmianie zakresu
::   WY: '' lub akronim pola
::----------------------------------------------------------------------------------------------------------------------
_wy:='';
{? OPERATOR.USER().OSOBA=null & OBIEGI.SAM_ZAKR='M'
|| FUN.emsg('Brak osoby przypisanej do zalogowanego użytkownika, nie można wyświetlić przejazdów związanych z osobą.'@);
   _wy:='SAM_ZAKR'
?};
_wy


\poj_srsr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła sprawdza czy w systemie wystepuje zapis w tabeli POJAZDY dla wskazanego środka
::   WE: SRSR.ref()
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
POJAZDY.cntx_psh();
POJAZDY.index('FIRSRSR');
POJAZDY.prefix(REF.FIRMA,_a);
{? POJAZDY.first() || _wy:=POJAZDY.ref() ?};
POJAZDY.cntx_pop();
_wy


\ae_pojazdy_nrrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [1700]
:: OPIS: Po redakcji pola POJAZDY.NRREJ
::----------------------------------------------------------------------------------------------------------------------
POJAZDY.NRREJ:=gsub(~(-POJAZDY.NRREJ),' ','');
1


\pojazdy_color
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [1700]
:: OPIS: Formuła ustala kolor rekordu pojazdów
::----------------------------------------------------------------------------------------------------------------------
{? POJAZDY.A='T' & POJAZDY.WLASNY<>'T' || 'POJAZDY#01#01' || '' ?}


\rek_sam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS: Formuła ustala kolor rekordu samochodów
::----------------------------------------------------------------------------------------------------------------------
''

:Sign Version 2.0 jowisz:1045 2021/09/17 15:17:11 592a549d671e4bf444be7a81adf42d2a4a6e0d9be4a17a84cd407354f92c5c5b0147cc822094b6e94918eaa8d8c45ce1339d291ff8bdb70dd8e4ee0d1f0e4a22cb9a5fa2a76902aa4b8e52641d9b2a852342e2041e0b697903e640f7dfa1966426601df9241f189722f110837cc449e4cd46e3f7a84b11aef93b8e9770f1f8d3
