:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: podz_admin.fml
:: Utworzony: 06.03.2015
:: Autor: PJ
::======================================================================================================================
:: Zawartość:  Procedury do obsługi podziału administracyjnego kraju
::======================================================================================================================


\f3_wojewodztwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Słownik na F3 dla pola województwo w OS_ADRES oraz KST
::  OLD: \f3_wojewodztwa/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
WOJEWODZ.prefix();
WOJEWODZ.find_tab(1,'NAZWA',,'=',fld());
WOJEWODZ.win_sel('WYB');
WOJEWODZ.win_edit('RED');
{? WOJEWODZ.select(,1,20) || WOJEWODZ.NAZWA ?}


\f3_powiaty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Słownik na F3 dla pola powiat w OS_ADRES oraz KST
::  OLD: \f3_powiaty/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1)=OS_ADRES
|| _wnaz:=cur_tab(1,1).WOJEWODZ
|? cur_tab()=KST
|| _wnaz:=cur_tab().WOJEWODZ
|| _wnaz:=''
?};
WOJEWODZ.prefix();
_woj:={? WOJEWODZ.find_tab(1,'NAZWA',,'=',_wnaz)
      || WOJEWODZ.ref
      || null()
      ?};

POWIATY.index('WOJEWODZ');
{? _woj<>null
|| POWIATY.prefix(_woj)
|| POWIATY.prefix()
?};
POWIATY.find_tab(1,'NAZWA',,'=',fld());
POWIATY.win_sel('WYB');
POWIATY.win_edit('RED');
POWIATY.hdr_sel('');
{? _woj
|| POWIATY.hdr_sel(' (woj: %1)'@[WOJEWODZ.NAZWA])
|| POWIATY.hdr_sel(' (woj: wszystkie)'@)
?};
{? POWIATY.select(,1,20) || POWIATY.NAZWA ?}


\f3_gminy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Słownik na F3 dla pola gmina w OS_ADRES oraz KST
::  OLD: \f3_gminy/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1)=OS_ADRES
|| _pnaz:=cur_tab(1,1).POWIAT
|? cur_tab()=KST
|| _pnaz:=cur_tab().POWIAT
|? var_pres('POWIAT',cur_tab())=27
|| _pnaz:=cur_tab().POWIAT
|| _pnaz:=''
?};
POWIATY.prefix();
_gm:={? POWIATY.find_tab(1,'NAZWA',,'=',_pnaz)
     || POWIATY.ref
     || null()
     ?};

GMINY.index('GP');
{? _gm<>null
|| GMINY.prefix(_gm)
|| GMINY.prefix()
?};
GMINY.find_tab(1,'NAZWA',,'=',fld());

GMINY.win_sel('WYB');
GMINY.win_edit('RED');
GMINY.hdr_sel('');
{? _gm
|| GMINY.hdr_sel(' (pow: %1)'@[POWIATY.NAZWA])
|| GMINY.hdr_sel(' (pow: wszystkie)'@)
?};
{? GMINY.select(,1,20) || GMINY.NAZWA ?}


\f3_miasta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Słownik na F3 dla pola miasto w OS_ADRES oraz KST
::  OLD: \f3_miasta/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
MIA.prefix();
MIA.find_tab(1,'NAZ',,'=',fld());
MIA.win_sel('WYB');
MIA.win_edit('RED');
{? MIA.select(,1,20) || MIA.NAZ ?}


\be_woj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Przed redakcja pola WOJEWOD tabeli POWIAT
::  OLD: \be_woj/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab=POWIATY & +POWIATY.cur_prfx
|| {? POWIATY.WOJEWODZ=null
   || POWIATY.WOJEWODZ:=WOJEWODZ.ref
   ?};
   win_disp();
   0
|| 1
?}


\be_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Przed redakcja pola POWIAT tabeli GMINY
::  OLD: \be_pow/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab=GMINY & +GMINY.cur_prfx
|| {? GMINY.POWIAT=null
   || GMINY.POWIAT:=POWIATY.ref
   ?};
   win_disp();
   0
|| 1
?}


\ref_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: podpowiadanie powiatu
::  OLD: \ref_pow/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.REF_POW


\chk_gmin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: sprawdzanie wypełnienia pól w tabeli GMINY
::  OLD: \chk_gminy/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(GMINY,,'POWIAT','NAZWA');
{? _zwrot=''
|| {? __CHK.index(GMINY,-menu_txt='popraw')<>'' || _zwrot:='NAZWA' ?}
?};
_zwrot


\ref_woj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Wartosc poczatkowa POWIATY.WOJ
::  OLD: \ref_woj/inw_srod.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.REF_WOJ


\chk_powi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Akcja Rekord Po POWIATY
::  OLD: \chk_powi/inw_srod.fml
::----------------------------------------------------------------------------------------------------------------------
__CHK.record(POWIATY,,'WOJEWODZ','NAZWA')


\del_mia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Kuba [2009]
:: OPIS: Akcja usun dla miasta
::  OLD: \del_mia/um.fml
::----------------------------------------------------------------------------------------------------------------------
{? MIA.count()>0
|| FUN.info('Rekord powiązany.\nUsunięcie niedozwolone.'@)
|| {? FUN.ask('Czy usunąć bieżący wiersz?'@) || MIA.del() ?}
?};
''


\del_woj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Akcja usun przed dla wojewodztw
::----------------------------------------------------------------------------------------------------------------------
{? WOJEWODZ.count()>0
|| FUN.info('Rekord wykorzystywany w systemie.\nUsunięcie niedozwolone.'@); 0
|| 1
?}


\chk_woj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Akcja Rekord Po WOJEWODZ
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(WOJEWODZ,,'NAZWA');
{? _zwrot=''
|| {? __CHK.index(WOJEWODZ,-menu_txt='popraw')<>'' || _zwrot:='NAZWA' ?}
?};
_zwrot


\rpo_mia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Akcja Rekord Po MIA
::----------------------------------------------------------------------------------------------------------------------
exec('rpo_mia_core','podz_admin',-menu_txt()='popraw')


\rpo_mia_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Walidacja rekordu tabeli MIA (Miasta)
::       - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: akronim pola / ''
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(MIA,,'NAZ');
{? _zwrot=''
|| {? __CHK.index(MIA,_a)<>'' || _zwrot:='NAZ' ?}
?};
{? _zwrot=''
|| {? XINFO.TER_AKT='T' & XINFO.TER_KNT='T'
   || _par:=exec('ter_sprawdz_a','teryt');
      _par.TAB:='MIA';
      _par.MSC_P:='NAZ';
      exec('ter_sprawdz','teryt',_par)
   ?}
?};
_zwrot


\chk_ul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Akcja Rekord Po UL
::----------------------------------------------------------------------------------------------------------------------
exec('chk_ul_core','podz_admin',-menu_txt()='popraw')


\chk_ul_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Walidacja rekordu tabeli UL (Ulice)
::       - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: akronim pola / ''
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(UL,,'MIA','KDP','UL');
{? _zwrot='MIA'
|| _zwrot:='UL'
?};
{? _zwrot=''
|| {? __CHK.index(UL,_a)<>'' || _zwrot:='UL' ?}
?};
{? _zwrot=''
|| {? XINFO.TER_AKT='T' & XINFO.TER_KNT='T'
   || _par:=exec('ter_sprawdz_a','teryt');
      _par.TAB:='UL';
      _par.ULI_P:='UL';
      _par.MSC_P:='MIA';
      _par.MSC:=UL.MIA().NAZ;
      exec('ter_sprawdz','teryt',_par)
   ?}
?};
_zwrot


\mia_ul_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: ulice miasta - tabela UL dla pozycji tabeli MIA
::   WY: ''
::----------------------------------------------------------------------------------------------------------------------
UL.cntx_psh();
UL.win_sel('WER');
UL.win_edit('RED');
UL.index('UL');
UL.prefix(MIA.ref());
UL.select();
UL.cntx_pop();
''


\mia_ul_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: ulice miasta - tabela UL dla pozycji tabeli MIA
::   WY: ''
::----------------------------------------------------------------------------------------------------------------------
UL.cntx_psh();
UL.win_sel('SLO');
UL.win_edit('RED');
UL.index('UL');
UL.prefix(MIA.ref());
UL.select();
UL.cntx_pop();
''


\bl_mia_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: miasto - wartosc na blank ulicy
::  OLD: \bl_mia_u/um.fml
::----------------------------------------------------------------------------------------------------------------------
MIA.ref()


\be_usun_dzi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS: Przed usunięciem rekordu tabeli DZI. Sprawdza, czy nie wykorzystywany
::   WY: 0 - nie można usuwać, zapis wykorzystywany w innych danych systemie
::       1 - można usuwać
::----------------------------------------------------------------------------------------------------------------------
_count:=DZI.count();
{? _count || FUN.emsg('Nie można usunąć dzielnicy. Istnieją zapisy z nią powiązane.'@) ?};
~_count


\chk_dzi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS: Akcja Rekord Po DZI
::----------------------------------------------------------------------------------------------------------------------
exec('chk_dzi_core','podz_admin',-menu_txt()='popraw')


\chk_dzi_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS: Walidacja rekordu tabeli DZI (Dzielnice)
::       - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: akronim pola / ''
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(DZI,,'MIA','KOD','NAZ');
{? _zwrot='MIA'
|| _zwrot:='KOD'
?};
{? _zwrot=''
|| {? __CHK.index(DZI,_a)<>'' || _zwrot:='KOD' ?}
?};
_zwrot


\be_usun_rejo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS: Przed usunięciem rekordu tabeli REJO. Sprawdza, czy nie wykorzystywany
::   WY: 0 - nie można usuwać, zapis wykorzystywany w innych danych systemie
::       1 - można usuwać
::----------------------------------------------------------------------------------------------------------------------
_count:=REJO.count();
{? _count || FUN.emsg('Nie można usunąć rejonu. Istnieją zapisy z nim powiązane.'@) ?};
~_count


\be_dolacz_rejo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Przed Dołącz w tabeli REJO
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
POJAZDY.actions('SLO_J','W');
1


\chk_rejo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS: Akcja Rekord Po REJO
::----------------------------------------------------------------------------------------------------------------------
exec('chk_rejo_core','podz_admin',-menu_txt()='popraw')


\chk_rejo_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS: Walidacja rekordu tabeli REJO (Rejony)
::       - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: akronim pola / ''
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(REJO,,'ODDZ','H','NAZ');
{? _zwrot='ODDZ'
|| _zwrot:='H'
?};
{? _zwrot=''
|| {? __CHK.index(REJO,_a)<>'' || _zwrot:='H' ?}
?};
_zwrot


\chk_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Akcja Rekord Po POS
::----------------------------------------------------------------------------------------------------------------------
exec('chk_pos_core','podz_admin',-menu_txt()='popraw')


\chk_pos_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Walidacja rekordu tabeli POS (Posesje)
::       - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: akronim pola / ''
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(POS,,'MIA','UL','NR','KH');
{? _zwrot=''
|| {? __CHK.index(POS,_a)<>'' || _zwrot:='MIA' ?}
?};
{? _zwrot='' & form(POS.NR)=''
|| FUN.info('Wymagany numer posesji.'@);
   _zwrot:='NR'
?};
_zwrot


\ae_posnr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: poprawianie wartosci pola z numerem posesji
::  OLD: \ae_posnr/um.fml
::----------------------------------------------------------------------------------------------------------------------
{? POS.UL().REJO<>null & POS.UL().REJO2=null
|| POS.REJO:=POS.UL().REJO
?};
POS.NR:=exec('wz_pos_nr','podz_admin',POS.NR);
1


\pos_miaul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: po wybraniu ulicy dla rekordu tabeli POS (Posesje) ewentualna zmiana miasta
::----------------------------------------------------------------------------------------------------------------------
{? POS.UL<>null & (POS.MIA=null() | POS.MIA<>POS.UL().MIA)
|| POS.MIA:=POS.UL().MIA
?};
1


\pos_miaul1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: po wybraniu miasta dla rekordu tabeli POS (Posesje) ewentualna czyszczenie ulicy
::----------------------------------------------------------------------------------------------------------------------
{? POS.MIA<>null & POS.UL<>null & POS.MIA<>POS.UL().MIA
|| POS.UL:=null
?};
1


\ul_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: wyswietlenie posesji dla ulicy
::  OLD: \ul_pos/um.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
POS.index('UL');
POS.prefix(UL.MIA().ref(),UL.UL);
POS.first();
POS.win_sel('SLO');
POS.hdr_sel(' dla ulicy - '+UL.UL);
POS.select()


\be_usun_mia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Przed usunięciem rekordu tabeli MIA. Sprawdza, czy nie wykorzystywany
::   WY: 0 - nie można usuwać, zapis wykorzystywany w innych danych systemie
::       1 - można usuwać
::----------------------------------------------------------------------------------------------------------------------
_count:=MIA.count();
{? _count || FUN.emsg('Nie można usunąć miasta. Istnieją zapisy z nim powiązane.'@) ?};
~_count


\be_usun_ul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Przed usunięciem rekordu tabeli UL. Sprawdza, czy nie wykorzystywany
::   WY: 0 - nie można usuwać, zapis wykorzystywany w innych danych systemie
::       1 - można usuwać
::----------------------------------------------------------------------------------------------------------------------
_count:=UL.count();
{? _count || FUN.emsg('Nie można usunąć ulicy. Istnieją zapisy z nią powiązane.'@) ?};
~_count


\be_usun_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Przed usunięciem rekordu tabeli UL. Sprawdza, czy nie wykorzystywany
::   WY: 0 - nie można usuwać, zapis wykorzystywany w innych danych systemie
::       1 - można usuwać
::----------------------------------------------------------------------------------------------------------------------
_count:=POS.count();
{? _count || FUN.emsg('Nie można usunąć posesji. Istnieją zapisy z nią powiązane.'@) ?};
~_count


\wz_pos_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Formatuje pole POS.NR
::   WE: _a - aktualna wartość pola
::   WY: sformatowane pole POS.NR, UMO.POS_NR
::----------------------------------------------------------------------------------------------------------------------
_res:=form(_a);
_pattern:='   ';
_len:=+_res;
{? _len>37 || _pattern:=(40-_len)+_pattern ?};
_let:=0;
_ii:=0;
{!
|? _ii+=1;
   _ch:=1+((_ii-1)-_res);
   {? ~exec('isDigit','#string',_ch) || _let:=_ii ?};
   ~_let & _ii<_len
!};
{? _let & _let<4 || _res:=(_let-1)-(_pattern+_res)
|? _len<3        || _res:=_len-(_pattern+_res)
?};
_res


\be_posnr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: przed redakcją pola POS.NR
::----------------------------------------------------------------------------------------------------------------------
POS.NR:=form(POS.NR);
1


\mia_naz_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: przycisk pola MIA.NAZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T'
|| exec('ter_msc_wybierz','teryt','MIA','NAZ')
?}


\ul_ul_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: przycisk pola UL.UL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T'
|| exec('ter_uli_wybierz','teryt','UL','UL','MIA().NAZ')
?}


\be_mia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: przed Dołącz / Popraw miasta MIA
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT<>'T'
|| MIA.btn_eopt('RED','NAZ','state=grayed')
|| MIA.btn_eopt('RED','NAZ','state=normal')
?};
1


\be_ul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: przed Dołącz / Popraw ulicy UL
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT<>'T'
|| UL.btn_eopt('RED','UL','state=grayed')
|| UL.btn_eopt('RED','UL','state=normal')
?};
1


:Sign Version 2.0 jowisz:1045 2023/10/03 09:38:49 539a94f446d6755a963796098500c5edbd2be9392c37086c711a2b0e940a53843bccdca41ee3676476677c489c7b118e9f006b105c0fbf30a64b37248595147b77fcb8d6057f03426527fc275cf7b1f4af09f73c625769c8367a6023c6374b237d5fba4498936a148dc9eceb0c876df9798614aa3f10e9009efd4bc2f9c85c11
