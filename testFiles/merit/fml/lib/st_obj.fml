:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: st_obj.fml
:: Utworzony: 03.06.2020
:: Autor: WH
::======================================================================================================================
:: Zawartość: Formuły obsługujące tabelę ST_OBJ
::======================================================================================================================



\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Czyści powiązania do rekordu tabeli ST_OBJ
::   WE: _a - ST_OBJ.ref()
::   WY: >0  -wyczyszczone,
::       <=0 -niewyczyszczone
::  TAG: <PRYWATNA><CLEAN>
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=2 || return(-100) ?};

_ref:=_a;

_result:=0;
_can_continue:=1;

_mydo:=do_state()=0;
{? _mydo || do() ?};
:: --- powiązania do ---
ST_OBJ.cntx_psh(); ST_OBJ.clear();
{? ST_OBJ.seek(_ref)
||
   {? _can_continue>0 & ST_OBJ.count()>0
   ||
::    1. Usuwam ST_PTH które wskazują na ten element
      ST_PTH.cntx_psh();
      ST_PTH.index('ST_OBJ');
      ST_PTH.prefix(ST_OBJ.ref());
      {? ST_PTH.first()
      || {!
         |? _can_continue:=exec('delete','st_pth',ST_PTH.ref());
            ST_PTH.first() & _can_continue>0
         !}
      ?};
      ST_PTH.cntx_pop()
   ?};
   {? _can_continue>0 & ST_OBJ.count()>0
   ||
::    2. Usuwam ST_OBJ_W które wskazują na ten element
      ST_OBJ_W.cntx_psh();
      ST_OBJ_W.index('UNIQ');
      ST_OBJ_W.prefix(ST_OBJ.ref());
      {? ST_OBJ_W.first()
      || {!
         |? _can_continue:=exec('delete','st_obj_w',ST_OBJ_W.ref());
            ST_OBJ_W.first() & _can_continue>0
         !}
      ?};
      ST_OBJ_W.cntx_pop()
   ?};
   ~~
?};

ST_OBJ.cntx_pop();
:: --- wszystkie powiazania usuniete? ---

{? _can_continue>0
|| _result:=1
|| undo()
?};

{? _mydo || end() ?};

_result


\delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Kasuje podany rekord tabeli ST_OBJ (wykonywane w transakcji!!!)
::   WE: _a - ST_OBJ.ref()
::   WY: >0 -wyczyszczone,
::       <=0 -niewyczyszczone
::  TAG: <PUBLICZNA><DEL>
::UWAGA: Parametry bez [] są wymagane, formula może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
:: jeżeli transakcja została zerwana, to nie ma sensu przetwarzać formuły
{? do_state()=2 || return(-100) ?};

_ref:=_a;

_result:=0;
_can_continue:=1;

:: sprawdzam, czy to w tej formule będę zakładał transakcję, czy już jest założona
_mydo:=do_state()=0;
{? _mydo || do() ?};
ST_OBJ.cntx_psh(); ST_OBJ.clear();
{? ST_OBJ.seek(_ref)
|| {? exec('clean','st_obj',_ref)>0
   || {? ST_OBJ.del(,1)>0
      || _result:=1
      || undo();
         _result:=-3
      ?}
   || _result:=-2
   ?}
|| _result:=0
?};

{? _result<0
|| undo()
?};

ST_OBJ.cntx_pop();
{? _mydo || end() ?};
_result


\st_obj_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Dołącz dla ST_OBJ
::----------------------------------------------------------------------------------------------------------------------
ST_OBJ.win_edit('RED');
ST_OBJ.blank();
{? ST_OBJ.edit()
|| ST_OBJ.add()
?};
~~


\st_obj_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Usuń dla ST_OBJ
::----------------------------------------------------------------------------------------------------------------------
{? VAR.GRUPA='T' | FUN.ask('Czy usunąć bieżący wiersz?'@)
|| exec('delete','st_obj',ST_OBJ.ref())
?};
~~


\st_obj_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Popraw dla ST_OBJ
::----------------------------------------------------------------------------------------------------------------------
ST_OBJ.win_edit('RED');
{? ST_OBJ.edit()
|| ST_OBJ.put()
?};
~~


\st_obj_del_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Usuń przed dla grupy rekordów (tabela ST_OBJ)
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć zaznaczone wiersze?'@)
|| VAR.GRUPA:='T';
   1
|| 0
?}


\st_obj_del_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Usuń po dla grupy rekordów (tabela ST_OBJ)
::----------------------------------------------------------------------------------------------------------------------
VAR.GRUPA:='N';
~~


\erase
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Czyści wszystkie obiekty
::   WY: 0 - porażka
::       1 - suksces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------

_can_continue:=1;
_result:=0;

_mydo:=do_state()=0;
{? _mydo || do() ?};

ST_OBJ.cntx_psh();
ST_OBJ.index('OD_WER');
ST_OBJ.prefix();
{? ST_OBJ.first()
|| {!
   |? _can_continue:=exec('delete','st_obj',ST_OBJ.ref());
      ST_OBJ.first() & _can_continue>0
   !}
?};
ST_OBJ.cntx_pop();


{? _can_continue>0
|| _result:=1
|| undo()
?};

{? _mydo || end() ?};
_result


\use_in_files
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Wyświetla wszystkie źródłowe pliki które zawierają dają ścieżkę
::       Kontekst pracy - ST_OBJ
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_args:=obj_new('TAB','ST_OBJ');
_args.TAB:=tab_tmp(3,
   'FILEPATH','STRING[255]','Nazwa pola 1',
   'ADDRESS','STRING[50]','Adres serwera',
   'KH','STRING[50]','Kontahent',
   'FILENAME','STRING[255]','Nazwa pola 1',
   'ILOSC','REAL','Ilość użyć'
);
_args.ST_OBJ:=ST_OBJ.ref();

_rule:="
   _args:=_b;
   _tab:=_args.TAB;
   _result:=1;
   _can_continue:=1;

   ST_SRC.cntx_psh();
   _name:=ST_SRC.name();
   _msk:=(8+ST_LOG.name())+4;
   _new_mask:=4+_name;
   _new_mask+=_msk;
   ST_SRC.use(_new_mask);
   ST_SRC.index('LP');
   ST_LOG.cntx_psh();
   ST_LOG.index('ST_OBJ_W');
   ST_OBJ_W.cntx_psh();
   ST_OBJ_W.index('UNIQ');
   ST_OBJ_W.prefix(_args.ST_OBJ);
   {? ST_OBJ_W.first()
   || {!
      |?
         ST_LOG.prefix(ST_OBJ_W.ref());
         {? ST_LOG.first()
         || {!
            |?
               ST_SRC.prefix(ST_LOG.LP);
               {? ST_SRC.first()
               || _tab.cntx_psh();
                  _address:=ST_LOG.ST_KHI().AS_ADDRE+':'+ST_LOG.ST_KHI().AS_PORT;
                  _kh:=ST_LOG.ST_KHI().ST_KH().DANE;
                  _tab.prefix(ST_SRC.FILEPATH,_address,_kh);
                  {? _tab.first()=0
                  || _tab.blank();
                     _tab.FILEPATH:=ST_SRC.FILEPATH;
                     _tab.FILENAME:=ST_SRC.FILENAME;
                     _tab.ADDRESS:=_address;
                     _tab.KH:=_kh;
                     _tab.ILOSC:=1;
                     _can_continue:=_tab.add()
                  || _tab.ILOSC+=1;
                     _can_continue:=_tab.put()
                  ?};
                  _tab.cntx_pop()
               ?};
               ST_LOG.next() & _can_continue>0
            !}
         ?};
         ST_OBJ_W.next() & _can_continue>0
      !}
   ?};
   ST_LOG.cntx_pop();
   ST_SRC.cntx_pop();
   ST_OBJ_W.cntx_pop();
   {? _can_continue<=0
   || _result:=0
   ?};
   _result

";
_can_continue:=exec('for_each_mask','#table',ST_LOG,_rule,,,_args,1,1);
_tab:=_args.TAB;

_tab.prefix();
_wer:=_tab.mk_sel('Pliki w których było użycie obiektu'@,,,'#st_obj_use',,,,,'U');
_tab.win_fld(_wer,,'FILENAME',,,30,,,'Nazwa'@);
_tab.win_fld(_wer,,'FILEPATH',,,50,,,'Ścieżka'@);
_tab.win_fld(_wer,,'KH',,,30,,,'Kontrahent'@);
_tab.win_fld(_wer,,'ADDRESS',,,30,,,'Adres serwera'@);
_tab.win_fld(_wer,,'ILOSC',,,10,0,,'Ilość użyć'@);

_fml:="

   _env:=exec('env_parse','st_common');
   _dir:=exec('dialog_path_download','st_src',_env);
   _result:=0;
   {? _dir<>''
   || _sep:=exec('sep','#file');
      _filelocal:=_dir+_sep+cur_tab(1,1).FILENAME;
      _result:=fcopy(cur_tab(1,1).FILEPATH,'@'+_filelocal,0,0,1)
   ?};
   _result
";
_tab.win_act(_wer,,'Formuła','Pobierz plik'@@,,,_fml,,1,,,,'P');
_tab.win_act(_wer,,'Kolejność');
_tab.win_sel(_wer);
_tab.select();
~~


\napraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Naprawia ST_OBJ z niedozwolonych tekstów
::   WE: _a - STRING - rodzaj obiektu
::       _b - STING - prefix na tekst który przetworzyć. W rekordzie zostanie sam ten prefiks bez dalszej części
::       [_c] - STRING - tryb działania (szuka w oparciu o to pole: OPIS, TITLE)
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_kind:=_a;
_opis:=_b;

_mode:='OPIS';
{? var_pres('_c')=type_of('')
|| _mode:=_c
?};

_result:=0;
_can_continue:=1;

_st_rodz:=null();
ST_RODZ.cntx_psh();
ST_RODZ.index('SYMBOL');
ST_RODZ.prefix(_kind,);
{? ST_RODZ.first()
|| _st_rodz:=ST_RODZ.ref()
?};
ST_RODZ.cntx_pop();

{? _st_rodz<>null()
||
   ST_OBJ.cntx_psh();
   ST_OBJ.index(_mode);
   ST_OBJ.prefix(_st_rodz,_opis);

   {? ST_OBJ.first()
   || {!
      |? _next:=0;
         _ref_nxt:=null();
         ST_OBJ.cntx_psh();
         {? ST_OBJ.next()
         || _ref_nxt:=ST_OBJ.ref()
         ?};
         ST_OBJ.cntx_pop();

         ST_OBJ.cntx_psh();
         ST_OBJ.prefix();
         _rule:='ST_OBJ.'+_mode+':=_a';
         ($_rule)(_opis);
         _can_continue:=ST_OBJ.put();
         ST_OBJ.cntx_pop();

         {? _ref_nxt<>null()
         || _next:=ST_OBJ.seek(_ref_nxt)
         ?};
         _next>0 & _can_continue>0
      !}
   ?};
   ST_OBJ.cntx_pop()
?};
{? _can_continue>0
|| _result:=1
?};
_result


\napraw_i_scal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Naprawia ST_OBJ z niedozwolonych tekstów i scala obiekty w jeden (nietestowane)
::   WE: _a - STRING - rodzaj obiektu
::       _b - STING - prefix na tekst który przetworzyć. W rekordzie zostanie sam ten prefiks bez dalszej części
::       [_c] - STRING - tryb działania (szuka w oparciu o to pole: OPIS, TITLE)
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_kind:=_a;
_opis:=_b;
_mode:='OPIS';
{? var_pres('_c')=type_of('')
|| _mode:=_c
?};

_result:=0;
_can_continue:=1;

_args:=obj_new('FIRST','ST_OBJ_W','TAB');
_args.FIRST:=null();
_args.TAB:=tab_tmp(2,
:: 'POLE','TYP','Nazwa w oknie',
   'SRC','STRING[16]','ST_OBJ_W źródłowy',
   'DST','STRING[16]','ST_OBJ_W docelowy'
);
_st_rodz:=null();
ST_RODZ.cntx_psh();
ST_RODZ.index('SYMBOL');
ST_RODZ.prefix(_kind,);
{? ST_RODZ.first()
|| _st_rodz:=ST_RODZ.ref()
?};
ST_RODZ.cntx_pop();

ST_OBJ.cntx_psh();
ST_OBJ.index(_mode);

{? _st_rodz<>null()
||
:: Zapamiętuję bazowy rekord na którego wszystko przepnę
   ST_OBJ.prefix(_st_rodz,_opis);
   {? ST_OBJ.first()
   || _args.FIRST:=ST_OBJ.ref()
   ?}
?};

{? _args.FIRST<>null()
||
   ST_OBJ.prefix(_st_rodz,_opis);
   {? ST_OBJ.first()
   || {!
      |?
         {? ST_OBJ.ref()<>_args.FIRST
         ||
::          Przepinam na bazowy rekord wszystkie wersje obiektu o ile ich nie ma
            ST_OBJ_W.cntx_psh();
            ST_OBJ_W.index('UNIQ');
            ST_OBJ_W.prefix(ST_OBJ.ref());

            {? ST_OBJ_W.first()
            || {!
               |? _next:=0;
                  _ref_nxt:=null();
                  ST_OBJ_W.cntx_psh();
                  {? ST_OBJ_W.next()
                  || _ref_nxt:=ST_OBJ_W.ref()
                  ?};
                  ST_OBJ_W.cntx_pop();

                  _src:=ST_OBJ_W.ref();
                  _dst:=null();
                  _wersja:=ST_OBJ_W.ST_WER;
                  _standard:=ST_OBJ_W.STANDARD;
                  _auto:=ST_OBJ_W.AUTO;
                  ST_OBJ_W.cntx_psh();
                  ST_OBJ_W.index('UNIQ');
                  ST_OBJ_W.prefix(_args.FIRST,_wersja);
                  {? ST_OBJ_W.first()
                  || _dst:=ST_OBJ_W.ref()
                  || ST_OBJ_W.blank();
                     ST_OBJ_W.ST_OBJ:=_args.FIRST;
                     ST_OBJ_W.ST_WER:=_wersja;
                     ST_OBJ_W.STANDARD:=_standard;
                     ST_OBJ_W.AUTO:=_auto;
                     _can_continue:=ST_OBJ_W.add();
                     {? _can_continue>0
                     || _dst:=ST_OBJ_W.ref()
                     ?}
                  ?};
                  {? _can_continue>0 & _src<>null() & _dst<>null()
                  || _args.TAB.prefix($_src,$_dst);
                     {? _args.TAB.first()=0
                     || _args.TAB.blank();
                        _args.TAB.SRC:=$_src;
                        _args.TAB.DST:=$_dst;
                        _can_continue:=_args.TAB.add()
                     ?}
                  ?};
                  ST_OBJ_W.cntx_pop();

                  {? _ref_nxt<>null()
                  || _next:=ST_OBJ_W.seek(_ref_nxt)
                  ?};
                  _next>0 & _can_continue>0
               !}
            ?};
            ST_OBJ_W.cntx_pop()
         ?};
         ST_OBJ.next() & _can_continue>0
      !}
   ?};
   _args.TAB.prefix();
   {? _args.TAB.size()>0
   ||
      _rule:="
         _args:=_b;
         _tab:=_args.TAB;
         _result:=1;
         _can_continue:=1;

         _tab.prefix();
         {? _tab.first()
         || {!
            |? _src:=exec('FindAndGet','#table',ST_OBJ_W,_tab.SRC,,,null());
               _dst:=exec('FindAndGet','#table',ST_OBJ_W,_tab.DST,,,null());

               {? _src<>null() & _dst<>null()
               ||
                  ST_LOG.cntx_psh();
                  ST_LOG.index('ST_OBJ_W');
                  ST_LOG.prefix(_src);
                  {? ST_LOG.first()
                  ||
                     _mydo:=do_state()=0;
                     {? _mydo || do() ?};
                     {!
                     |? ST_LOG.cntx_psh();
                        ST_LOG.prefix();
                        ST_LOG.ST_OBJ_W:=_dst;
                        _can_continue:=ST_LOG.put();
                        ST_LOG.cntx_pop();
                        ST_LOG.first() & _can_continue>0
                     !};
                     {? _can_continue<=0
                     || undo()
                     ?};
                     {? _mydo || end() ?}
                  ?};
                  ST_LOG.cntx_pop()
               ?};
               _tab.next() & _can_continue>0
            !}
         ?};
         {? _can_continue<=0
         || _result:=0
         ?};
         _result

      ";
      _can_continue:=exec('for_each_mask','#table',ST_LOG,_rule,,,_args,1);

      {? _can_continue>0
      || _tab:=_args.TAB;
         _tab.prefix();
         {? _tab.first()
         || {!
            |? _src:=exec('FindAndGet','#table',ST_OBJ_W,_tab.SRC,,,null());
               {? _src<>null()
               || ST_OBJ_W.cntx_psh(); ST_OBJ_W.prefix();
                  {? ST_OBJ_W.seek(_src)
                  || {? ST_OBJ_W.count()=0
                     || _can_continue:=exec('delete','st_obj_w',_src)
                     || _can_continue:=0
                     ?}
                  ?};
                  ST_OBJ_W.cntx_pop()
               ?};
               _tab.next() & _can_continue>0
            !}
         ?}
      ?}
   ?};

   {? _can_continue>0
   || ST_OBJ.prefix(_st_rodz,_opis);
      {? ST_OBJ.first()
      || {!
         |? _next:=0;
            _ref_nxt:=null();
            ST_OBJ.cntx_psh();
            {? ST_OBJ.next()
            || _ref_nxt:=ST_OBJ.ref()
            ?};
            ST_OBJ.cntx_pop();

            {? ST_OBJ.ref()<>_args.FIRST
            ||
               ST_PTH.cntx_psh();
               ST_PTH.index('ST_OBJ');
               ST_PTH.prefix(ST_OBJ.ref());
               {? ST_PTH.first()
               || {!
                  |? ST_PTH.cntx_psh();
                     ST_PTH.prefix();
                     ST_PTH.ST_OBJ:=_args.FIRST;
                     _can_continue:=ST_PTH.put();
                     ST_PTH.cntx_pop();
                     ST_PTH.first() & _can_continue>0
                  !}
               ?};
               ST_PTH.cntx_pop();

               {? ST_OBJ.count()=0
               || _can_continue:=exec('delete','st_obj',ST_OBJ.ref())
               || _can_continue:=0
               ?}
            ?};
            {? _ref_nxt<>null()
            || _next:=ST_OBJ.seek(_ref_nxt)
            ?};
            _next>0 & _can_continue>0
         !}
      ?}
   ?};

   {? _can_continue>0
   || ST_OBJ.cntx_psh(); ST_OBJ.prefix();
      {? ST_OBJ.seek(_args.FIRST)
      || _rule:='ST_OBJ.'+_mode+':=_a';
         ($_rule)(_opis);
         _can_continue:=ST_OBJ.put()
      ?};
      ST_OBJ.cntx_pop()
   ?}
?};
ST_OBJ.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\delete_not_used
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Usuwa wszystkie nieużywane rekordy
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------

_result:=0;
_can_continue:=1;

_mydo:=do_state()=0;
{? _mydo || do() ?};

ST_OBJ.cntx_psh();
ST_OBJ.index('ID');
ST_OBJ.prefix();
{? ST_OBJ.first()
|| {!
   |? _next:=0;
      _ref_nxt:=null();
      ST_OBJ.cntx_psh();
      {? ST_OBJ.next()
      || _ref_nxt:=ST_OBJ.ref()
      ?};
      ST_OBJ.cntx_pop();

      {? ST_OBJ.count()=0
      || _can_continue:=exec('delete','st_obj',ST_OBJ.ref())
      ?};

      {? _ref_nxt<>null()
      || _next:=ST_OBJ.seek(_ref_nxt)
      ?};
      _next>0 & _can_continue>0
   !}
?};
ST_OBJ.cntx_pop();
{? _can_continue>0
|| _result:=1
|| undo()
?};
{? _mydo || end() ?};
_result


:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 c8d5ebf0378964f7f7e6baa0c903ca8157915fca3977e6533e6414a04cba09e00e9bb1aed2be9fe7c3b6ff6e51f8ae7d5cd1b5d9b1301706b69e70c24045fac757349c2d0ce00513036590b612e3d37ff6d8c0710d7cb0acfdd1171e72b2ee6869bfc0aeb22c057153a52aa25a124f9080acb5a5ffe4fe9384ad75d57f086f05
