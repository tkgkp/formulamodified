:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: rmk.fml
:: Utworzony: 18.03.2015
:: Autor: -
::======================================================================================================================
:: Zawartosc:  Procedury do obslugi rozliczen miedzyokresowych kosztow
::======================================================================================================================


\rmk_add
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Formula edytujaca rekord tabeli RMK przy dol. rekordu tab. POZ
::       Powoduje edycje rekordu tabeli RMK jezeli pole POZ.TID='RMK' lub POZ.TID='RMP'
::  OLD: \rmk_add/rozlicz
::----------------------------------------------------------------------------------------------------------------------
exec('__KAL','object');
UNPAR.P1:=0;
PAR_WYDR.RMK1:=0;
PAR_WYDR.RMK2:='P';
UNPAR.P1_BE:='';
UNPAR.P1_AE:='exec(\'ae_lokr\',\'rmk\')';
_op:=0; _wn:=_ma:=0; _a:=0;
OP.cntx_psh();
OP.index('KON_O'); OP.prefix(FINFO.NAROD,POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK);
{? OP.first() & (-OP.TYP='rmk' | -OP.TYP='rmp') || _op:=1; _wn:=OP.WN$2; _ma:=OP.MA$2 ?};
OP.cntx_pop();
NSumDok:=1;
{? _op
|| SUM.SALWN:=F.SWn(_wn,_ma)$2;
   SUM.SALMA:=F.SMa(_wn,_ma)$2;
   {? -POZ.STR='wn'
   || SUM.POMOCWN:=POZ.SUM$2; SUM.POMOCMA:=0
   || SUM.POMOCMA:=POZ.SUM$2; SUM.POMOCWN:=0
   ?};
   SUM.SUMWN:=F.SWn(SUM.SALWN+SUM.POMOCWN,SUM.SALMA+SUM.POMOCMA)$2;
   SUM.SUMMA:=F.SMa(SUM.SALWN+SUM.POMOCWN,SUM.SALMA+SUM.POMOCMA)$2;
   {? -POZ.TID='rmk' || RMK.win_edit('REDPOZ') || RMK.win_edit('REDPOZ2') ?};
   RMK.index('NAZ'); RMK.prefix();
   {? RMK.find_key(POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK)
   || {? RMK.S='M'
      || {? RMK.SUMZ$2>0 || UNPAR.P1:=(SUM.SUMWN/RMK.SUMZ)$0 ?}
      || UNPAR.P1:=exec('rmk_okr','rmk');
         RMK.SUMZ:=(SUM.SUMWN/UNPAR.P1)$2
      ?};
      {? RRMK.prefix(RMK.ref()); ~RRMK.first()
      || {? RMK.KONZ='<- F3 ->'
         || RMK.KONZ:=''; PAR_WYDR.RMK1:=0; PAR_WYDR.RMK2:='P'
         ?}
      || PAR_WYDR.RMK1:=1;
         PAR_WYDR.RMK2:=RRMK.RODZ
      ?}
   ?};
   {? RMK.edit("exec('spr_rmk','rmk')") || RMK.put() ?}
|| {? -POZ.TID='rmk' || RMK.win_edit('RED') || RMK.win_edit('RED2') ?};
   RMK.index('NAZ'); RMK.prefix();
   {? ~RMK.find_key(POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK,POZ.TID,)
   || RMK.blank();
      RMK.TYP:=POZ.TID;
      RMK.KONP:=POZ.KON;
      RMK.SYM:=POZ.ID;
      RMK.SYM_ROK:=POZ.SYM_ROK;
      RMK.BL:='N';
      RMK.ILEMIES:=1;
      RMK.DATAOP:=SSTALE.AO().KON+1;
      {? -POZ.STR='wn' || RMK.STRZ:='Wn' || RMK.STRZ:='Ma' ?};
      SUM.SUMWN:=POZ.SUM;
      RMK.add();
      PAR_WYDR.RMK1:=0;
      PAR_WYDR.RMK2:='P';
      {? RMK.edit("exec('spr_rmk','rmk')")
      || RMK.put();
         _rmref:=RMK.ref();
         {? var_pres('RmRef')>0 & RMK.seek(RmRef)
         || exec('kasujrrmk','rmk',RmRef);
            RMK.del();
            RMK.seek(_rmref)
         ?}
      || exec('kasujrrmk','rmk',RMK.ref()); RMK.del()
      ?}
   || SUM.SUMWN:=POZ.SUM$2;
      {? RMK.S='M'
      || {? RMK.SUMZ$2>0 || UNPAR.P1:=(SUM.SUMWN/RMK.SUMZ)$0 ?}
      || UNPAR.P1:=exec('rmk_okr','rmk');
         RMK.SUMZ:={? UNPAR.P1 || (SUM.SUMWN/UNPAR.P1)$2 ?}
      ?};
      {? RRMK.prefix(RMK.ref()); ~RRMK.first()
      || {? RMK.KONZ='<- F3 ->'
         || RMK.KONZ:=''; PAR_WYDR.RMK1:=0; PAR_WYDR.RMK2:='P'
         ?}
      || PAR_WYDR.RMK1:=1;
         PAR_WYDR.RMK2:=RRMK.RODZ
      ?};
      {? RMK.edit("exec('spr_rmk','rmk')") || RMK.put() ?}
   ?}
?};
VAR_DEL.delete('NSumDok','RmRef')


\ae_lokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Po redakcji liczby okresow dla RMK, oblicza rate
::  OLD: \ae_lokr/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? RMK.S='M'
|| _ret:={? UNPAR.P1>0 & UNPAR.P1<100
         || RMK.SUMZ:=(SUM.SUMWN/UNPAR.P1)$2;
            1
         |? UNPAR.P1<0 | UNPAR.P1>99
         || FUN.info('Liczba okresów nie może być mniejsza od 0 i większa od 99.'@);
            0
         |? UNPAR.P1=0 || 1
         ?}
|| _ret:={? UNPAR.P1>0 & UNPAR.P1<10000
         || RMK.SUMZ:=(SUM.SUMWN/UNPAR.P1)$2;
            1
         |? UNPAR.P1<0 | UNPAR.P1>9999
         || FUN.info('Liczba dni nie może być mniejsza od 0 i większa od 9999.'@);
            return(0)
         |? UNPAR.P1=0
         || 1
         ?};
   {? RMK.D='T'
   || RMK.DZ:=RMK.DATAOP+UNPAR.P1-1
   || _nd:=RMK.DATAOP+UNPAR.P1;
      _lrok:=0;
      _naz:=PAR_SKID.get(8);
      KAL_NAZW.index('KAL_NAZW'); KAL_NAZW.prefix(REF.FIRMA,_naz,);
      {? _naz<>'' & KAL_NAZW.first()
      || {!
         |? _rok:=_nd~1;
            _ok:=1;
            {? _rok<>_lrok
            || _lrok:=_rok;
               KAL_DEF.index('KAL_DATA');
               KAL_DEF.prefix(KAL_NAZW.ref(),_rok);
               _ok:=KAL_DEF.first()
            ?};
            {? _ok
            || _ld:=__KAL.w_days(RMK.DATAOP,_nd);
               {? _ld<>UNPAR.P1
               || _nd+=UNPAR.P1-_ld;
                  1
               ?}
            ?}
         !};
         {? _ok
         || RMK.DZ:=_nd
         || FUN.info('Brak kalendarza na rok: %1.'@[$_rok])
         ?}
      || FUN.info('Nie znaleziono kalendarza standardowego.'@)
      ?}
   ?}
?};
_ret


\kasujrrmk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Formula kasuje rekordy RRMK na podstawie podanego RMK
::   WE: RMK.ref
::  OLD: \kasujrrmk/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
RRMK.prefix(_a);
{? RRMK.first() || {! |? RRMK.del() !} ?}


\spr_rmk
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Formula sprawdzajaca poprawnosc edycji RMK/RMP
::  OLD: \spr_rmk/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? RMK.BL<>'' || RMK.BL:=~(-RMK.BL) ?};
{? -(1+RMK.STRZ)='w' || RMK.STRZ:='Wn'
|? -(1+RMK.STRZ)='m' || RMK.STRZ:='Ma'
?};
_a:='';
{? RMK.win_edit('?')<>'REDOPBL'
|| {? RMK.S<>'D' & (RMK.SUMZ$2>{? SUM.SUMWN$2 || SUM.SUMWN$2 || SUM.SUMMA$2 ?})
   || FUN.info('Kwota przeksięgowań nie może być większa\nod %1.'@[ form({? SUM.SUMWN$2 || SUM.SUMWN$2 || SUM.SUMMA$2 ?},,2)]);
      _a:='SUMZ'
   |? RMK.SUMZ$2<0
   || FUN.info('Kwota przeksięgowań nie może być mniejsza od zera.'@); _a:='SUMZ'
   ?}
?};
{? (RMK.TYP='RMP' | RMK.TYP='RMK') & RMK.SUMZ=0
|| FUN.info('Zerowa kwota przeksięgowań.'@);
   _a:='SUMZ'
?};
{? _a=''
|| {? RMK.ILEMIES<=0
   || FUN.info('Ilość miesięcy nie może być mniejsza lub równa zeru.'@); _a:='ILEMIES'
   ?}
?};
{? _a=''
|| {? -RMK.BL<>'t' & -RMK.BL<>'n'
   ||  FUN.info('Pole blokada. Dopuszczalne wartości: T lub N.'@);
       _a:='BL'
   ?};
   {? -RMK.BL='t'
   || {? RMK.BLOD>RMK.BLDO
      || FUN.info('Data początku blokady nie może być większa od daty jej końca.'@); _a:='BLOD'
      |? ~#RMK.BLOD
      || FUN.info('Nieprawidłowa wartość.\nZerowa data początku blokady.'@); _a:='BLOD'
      |? ~#RMK.BLDO
      || FUN.info('Nieprawidłowa wartość.\nZerowa data końca blokady.'@);
         _a:='BLDO'
      ?}
   ?}
?};
{? _a=''
|| {? PAR_WYDR.RMK1=0
   || {? +|RMK.KONZ=0
      || FUN.info('Nie podano symbolu konta analitycznego.'@); _a:='KONZ'
      |? exec('akc_kont','edkonto',RMK.KONZ)
      || FUN.info('Brak konta '+RMK.KONZ+' w planie kont.'@); _a:='KONZ'
      ?}
   || {? RRMK.prefix(RMK.ref()); ~RRMK.first()
      || FUN.info('Brak kont rozdzielnika rozliczeń międzyokresowych.'@); _a:='KONZ'
      ?}
   ?}
?};
{? _a=''
|| {? -RMK.STRZ<>'wn' & -RMK.STRZ<>'ma'
   || FUN.info('Nieprawidłowa strona księgowa.'@);  _a:='STRZ'
   ?}
?};
{? _a=''
|| {? RRMK.prefix(RMK.ref());RRMK.first()
   || {? RRMK.RODZ='W'
      || exec('przrrmk','rmk');
         {? KA.SUM>RMK.SUMZ
         || FUN.info('Rodzielnik rozliczeń międzyokresowych jest rozpisany \nna większą wartość niż kwota przeksięgowań.'@);
            _a:='KONZ'
         ?}
      ?}
   ?}
?};
{? _a=''
|| _a:=__CHK.record(RMK,,'DATAOP')
?};
{? _a='' & RMK.S='D'
|| _a:=__CHK.record2(RMK,'DZ','Ostatnie rozliczenie');
   {? _a='' & RMK.DZ<RMK.DATAOP
   || FUN.info('Data ostatniego rozliczenia nie może być wcześniejsza niż data pierwszego rozliczenia.'@);
      _a:='DZ'
   ?}
?};
_a


\przrrmk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Formula wylicza podsumowanie tabeli RRMK
::  OLD: \przrrmk/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
RRMK.cntx_psh();
_s:=0;
{? RRMK.first()
|| {! |? _s+=RRMK.WAR; RRMK.next() !}
?};
RRMK.cntx_pop();
KA.SUM:=_s;
''


\wz_rmkkz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Formula Wzorca pola KONZ tabeli RMK
::  OLD: \wz_rmkkz/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RMK1=1
|| '<- \\F\\3 ->#'
|| exec('wz_konto','edkonto','RMK','KONZ')
?}


\be_rmkkz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Formula przed redakcja pola KONZ tabeli RMK
::  OLD: \be_rmkkz/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RMK1=0
|| {? RMK.KONZ='<- F3 ->' || RMK.KONZ:='' ?};
   exec('be_konto','edkonto','RMK','KONZ')
|| RMK.KONZ:='<- F3 ->';1
?}


\f3_rmkkz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Formula F3 pola KONZ tabeli RMK
::  OLD: \f3_rmkkz/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RMK1=0
|| exec('f3_konto','edkonto','RMK','KONZ')
|| RRMK.prefix(RMK.ref());
   KA.SUM:=0;
   {? RRMK.first() || {! |? KA.SUM+=RRMK.WAR; RRMK.next() !}; RRMK.first() ?};
   RRMK.hdr_sel();
   RRMK.hdr_sel( {? PAR_WYDR.RMK2='P' || ' - procentowy' || ' - kwotowy'?} );
   {! |?
      RRMK.fld_opt('WER','col_name="%1"'[ROZNE.WRRMK],RRMK,'WAR');
      RRMK.select(,1);
      RRMK.cntx_psh();
      {? _s:=0; RRMK.first()
      || {!|? _s+=RRMK.WAR$2; RRMK.next()!}
      ?};
      RRMK.cntx_pop();
      {? {? PAR_WYDR.RMK2<>'W' || _s<100 || _s<RMK.SUMZ ?}
      || {? FUN.ask('Rozdzielnik został rozpisany na %1 %2'
                    '.\nKontynuować dalsze rozpisywanie?'@[$_s,{? PAR_WYDR.RMK2<>'W' || '%' ||'' ?}])
         || 1
         || 0
         ?}
      || 0
      ?}
   !}
?}


\ae_rmkkz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Formula F3 pola KONZ tabeli RMK
::  OLD: \ae_rmkkz/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RMK1=0
|| {? +|RMK.KONZ>0
   || exec('ae_konto','edkonto',_a,'RMK','KONZ',1,1,1)
   || 1
   ?}
|| 1
?}


\be_grrmk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Ustawienie slownika dla grup RMK lub RMP
::  OLD: \be_grrmk/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? RMK.TYP='RMK' & FINFO.GRUPYRMK<>null | RMK.TYP='RMP' & FINFO.GRUPYRMP<>null
|| SLO.win_edit('RED'); SLO.win_dict('ONE'); SLO.win_sel('ONE');
   {? RMK.TYP='RMK' || FINFO.GRUPYRMK().SLU() || FINFO.GRUPYRMP().SLU() ?}
?}


\be_blod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed redakcja pola RMK.BLOD i RMK.BLDO
::  OLD: \be_blod/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
-RMK.BL='t'


\be_rmk1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Formula przed redakcja parametru PAR_WYDR.RMK1
::  OLD: \be_rmk1/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
RRMK.prefix(RMK.ref()); ~RRMK.first() | +|RMK.KONZ=0


\ae_rmk1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Formula po redakcji parametru PAR_WYDR.RMK1
::  OLD: \ae_rmk1/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RMK1=0 & RMK.KONZ='<- F3 ->'
|| RMK.KONZ:=''
|? PAR_WYDR.RMK1=1 & RMK.KONZ<>'<- F3 ->'
|| RMK.KONZ:='<- F3 ->'
?}; 1


\be_rmk2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Formula przed redakcja parametru PAR_WYDR.RMK2
::  OLD: \be_rmk2/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RMK1=0 || 0 || exec('be_rmk1','rmk') ?}


\bl_rrmk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Wartosc poczatkowa pola RRMK.RMK
::  OLD: \bl_rrmk/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
RMK.ref()


\bl_rrmkr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Ustawia wartosc dla pola RODZ tabeli RRMK
::  OLD: \bl_rrmkr/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RMK2='P'
|| 'P'
|| 'W'
?}


\be_rrmkk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Formula przed redakcja pola WAR tabeli RRMK
::  OLD: \be_rrmkk/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? RRMK.WAR=0
|| _l:=0;
   RRMK.cntx_psh();
   {? RRMK.first()
   || {! |? _l+=RRMK.WAR; RRMK.next() !};
      {? PAR_WYDR.RMK2='P'
      || _l:=100-_l
      || _l:=RMK.SUMZ-_l
      ?}
   || {? PAR_WYDR.RMK2='W'
      || _l:=RMK.SUMZ
      || _l:=100
      ?}
   ?};
   RRMK.cntx_pop(); RRMK.WAR:=_l; 1
|| 1
?}


\ae_rrmkk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Formula po redakcji pola WAR tabeli RRMK
::  OLD: \ae_rrmkk/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
RRMK.WAR:=RRMK.WAR$2;
{? RRMK.WAR<=0
|| FUN.info('Należy podać kwotę większą od 0.'@); 0
|| RRMK.cntx_psh();_l:=0; _r:=#RRMK.ref();
   _p:={? _r>0 || 'p' || '' ?};
   {? RRMK.first()
   || {! |? {? _r<>#RRMK.ref() | _p<>'p' || _l+=RRMK.WAR ?}; RRMK.next() !}
   ?};
   RRMK.cntx_pop();
   {? PAR_WYDR.RMK2='P'
   || {? _l+RRMK.WAR>100
      || {? (100-_l)=0
         || FUN.info('Rozdzielnik został już rozpisany na 100%%.'@)
         || FUN.info('Należy podać wartość mniejszą (równą) %1'@[$(100-_l)])
         ?}; 0
      || 1
      ?}
   || {? RMK.SUMZ-_l<RRMK.WAR
      || {? (RMK.SUMZ-_l)=0
         || FUN.info('Rozdzielnik został już rozpisany na kwotę %1.'@[$RMK.SUMZ])
         || FUN.info('Należy podać kwotę mniejszą (równą) %1'@[$(RMK.SUMZ-_l)])
         ?}; 0
      || 1
      ?}
   ?}
?}


\add_rrmk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Przed akcja Dolacz okna RED tabeli RRMK
::   WE: RMK.ref
::  OLD: \add_rrmk/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.RMK2='W'
|| {? RMK.SUMZ=0
   || FUN.info('Nie ma podanej kwoty przeksięgowań.'@); 0
   |? RMK.SUMZ<0
   || FUN.info('Kwota przeksięgowań jest ujemna.\nPopraw kwotę.'@); 0
   |? KA.SUM=RMK.SUMZ
   || FUN.info('Kwota przeksięgowań została już rozpisana.'@); 0
   || 1
   ?}
|| {? KA.SUM=100
   || FUN.info('Rozdzielnik został już rozpisany.'@); 0
   || 1
   ?}
?}


\ae_rrmkr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Formula po redakcji pola WAR tabeli RRMK
::  OLD: \ae_rrmkr/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? RRMK.WAR >0
|| 1
|| {? PAR_WYDR.RMK2='W'
   || FUN.info('Należy wprowadzić kwotę.'@)
   || FUN.info('Należy wprowadzić procent.'@)
   ?}; 'WAR'
?}


\po_szuk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Formula po akcji Szukaj okna WER tabeli RRMK
::  OLD: \po_szuk/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.SZUK:=0; 1


\et_wrrmk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Przed 'Wyswietl' pola ROZNE.WRRMK
::  OLD: \et_wrrmk/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.WRRMK:={? PAR_WYDR.RMK2='W'
             || 'Kwota'
             || 'Procent'
             ?}


\find_rmk
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: znajduje rekord RMK na podstawie danych z OP
::  OLD: \find_rmk/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
RMK.prefix();
{? RMK.find_key(OP.ODD,OP.AN,OP.SYM,OP.SYM,OP.SYM_ROK)
|| 1
|| FUN.info('Nie znaleziono pozycji RMK.'@); 0
?}


\be_rmkin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Sprawdzenie wypelnienia grup RMK lub RMP przy redakcji FINFO
::  OLD: \be_rmkin/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:=cur_afld()+3;
_v:=1;
_ssql:='select GRUPA, count(*) from @RMK join ODD '+
       'where GRUPA<>\'\' and ODD.FIRMA=:_a and RMK.TYP=\':_b\' '+
       'group by GRUPA';
TT_RMK:=sql(_ssql,REF.FIRMA,_typ);
{? TT_RMK.first() || _v:=0 ?};
obj_del(TT_RMK);
_v


\ae_dzrmk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [IFZ] [18.02]
:: OPIS: Sprawdzenie poprawności DZ - daty zakonczenia rozliczenia
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P1:=exec('rmk_okr','rmk'); 1


\rmk_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Zwraca liczbę miesiecy/dni rozliczenia rmk/rmp
::----------------------------------------------------------------------------------------------------------------------
_dz:=RMK.DZ; _do:=RMK.DATAOP;
{? RMK.S='M'
|| {? _dz~1=_do~1
   || _dz~2-_do~2
   || (((_dz+1)~1-_do~1)*12+(_dz+1)~2-_do~2)
   ?}
|? _dz<>date(0,0,0)
|| {? RMK.D='T'
   || (_dz-_do)+1
   || exec('__KAL','object');
      __KAL.w_days(_do,_dz)
   ?}
|| 0
?}


\be_drmk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [IFZ] [18.02]
:: OPIS: Dopuszczenie do redakcji RMK.D
::----------------------------------------------------------------------------------------------------------------------
RMK.S='D'


\ae_drmk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [IFZ] [18.02]
:: OPIS: Sprawdzenie poprawności RMK.D
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P1:=exec('rmk_okr','rmk');
{? UNPAR.P1 || RMK.SUMZ:=(SUM.SUMWN/UNPAR.P1)$2 ?};
1


\ae_rmks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [IFZ] [18.02]
:: OPIS: Po redakcji RMK.S
::----------------------------------------------------------------------------------------------------------------------
{? fld()='M'
|| RMK.D:=''; RMK.DZ:=date(0,0,0);
   UNPAR.P1:={? RMK.SUMZ || (SUM.SUMWN/RMK.SUMZ)$0 ?}
|| {? RMK.D='' || RMK.D:='T' ?}; RMK.ILEMIES:=1;
   RMK.BL:='N';
   RMK.BLOD:=RMK.BLDO:=date(0,0,0)
?};
1


\be_sumz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [IFZ] [18.02]
:: OPIS: Formula przed redakcja pola SUMZ tabeli RMK
::----------------------------------------------------------------------------------------------------------------------
RMK.S='M'


\be_dzrmk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [IFZ] [18.02]
:: OPIS: Sprawdzenie dopuszenia pola DZ do edycji, tylko dla rozliczeń dziennych
::----------------------------------------------------------------------------------------------------------------------
RMK.S='D'


\bv_rmk_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Przed wyświetleniem RMK.S
::----------------------------------------------------------------------------------------------------------------------
_red:=RMK.win_edit('?');
_mc:=RMK.S='M';
RMK.efld_opt(_red,'enable='+$_mc,RMK,'ILEMIES');
RMK.efld_opt(_red,'enable='+$_mc,RMK,'BL');
RMK.efld_opt(_red,'enable='+$_mc,RMK,'BLOD');
RMK.efld_opt(_red,'enable='+$_mc,RMK,'BLDO');
RMK.efld_opt(_red,'enable='+$(~_mc),RMK,'D');
RMK.efld_opt(_red,'enable='+$(~_mc),RMK,'DZ');
RMK.efld_opt(_red,'mark='+$(~_mc),RMK,'DZ');
~~

:Sign Version 2.0 jowisz:1048 2021/04/09 15:26:31 7ee011da83abb821611e8c4ac054eaf9c032360ead88f8515d21f3268489509d44024672de4fd913bad0196cd9c22533f64ebfe2e4f2ae70a0281fca888ca1273f02f7a35bd6c6c40877d98c3115dfdcb446bc145061636d20a7487750a618f2016969eca603a04edaaa01852ae3bf1dcc2f8e9824eaad4063359ed4475149eb
