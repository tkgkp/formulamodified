:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: magdok_poz.fml
:: Utworzony: 24.06.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Obsługa dokumentów magazynowych - pozycje dokumentów
::======================================================================================================================


\ae_dkmat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: ustawia zmienna help.ktm, formula po redakcji pola DK.M
::  OLD: \ae_dkmat/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()=null
|| exec('find_sql','#table','M','KTM;N;*(R)IL','','DK.M','20;40;12','RED','obl_stm#magazyn_stan',
      {? DK.N().TYP().P='T' || '' || '*IL' ?});
   {? fld()<>null & DK.SV=null
   || ATR.M_ATR:=DK.M().M_ATR;
      ATR.UZUP:=exec('wz_uzup','mat_atr',ATR.M_ATR);
      DK.SV:=exec('m_vat','material',DK.M,DK.N().KH,,ND.AR,ND.AM,,,,{? DK.PLUS='T' || 'Z' || 'S' ?})
   ?}
?};
{? fld()<>null
||
   ATR.M_ATR:=DK.M().M_ATR;
   ATR.UZUP:=exec('wz_uzup','mat_atr',ATR.M_ATR);
:: [rr] sprawdzenie inwentury
   {? exec('sprd_inp','magazyn_inw',fld,DK.N().D,,,DK.N().T)
   || DPOZ.M:=HELP.KTM:=DK.M;
      {? DK.N().TYP().DS='T'
      || DK.SV:=exec('m_vat','material',M.ref(),DK.N().KH,,ND.AR,ND.AM,,,,{? DK.PLUS='T' || 'Z' || 'S' ?})
      ?};
      {? DK.N().TYP().P='N' || exec('prop_zam','magdok_poz') ?};
      {? DK.M<>HELP.MOD_IND
      || DK.KK:=exec('m_kk','material',DK.M);
         Plugin.run('POZLOG_M_001','DK')
      ?};
      1
   || 0
   ?}
|| FUN.info('Niewypełnione pole.'@);0
?}


\prop_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: proponuje zamiennik dla pozycji dokumentu
::  OLD: \prop_zam/pommag.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_mat:=DK.M; _ktm:=DK.M().KTM;
{? exec('FindInSet','#table','MZ','MZ',_mat)<>null
|| _stan:=exec('FindInSet','#table','SM','SM',SM.M,SM.MAG,"SM.S_N+SM.S_O+SM.S",,,0);
   {? _stan<=0
   || {? FUN.ask('Brak materiału: %1\nna stanie magazynowym.\n'
                 'Istnieją zamienniki danego materiału.\n\n'
                 'Czy chcesz wybrać zamiennik?'@[_ktm])
      ||
::       brak stanu proponuje zamiennik
         MZ.win_sel('WER');
         MZ.actions('WER','dup','T');
         MZ.index('MZ');
         MZ.prefix(_mat);
         HELP.REFMAT:=_mat;
         {? MZ.first() & MZ.select()
         || _stan:=exec('FindInSet','#table','SM','SM',SM.M,SM.MAG,"SM.S_N+SM.S_O+SM.S",,,0);
            {? _stan<=0
            || FUN.info('Brak materiału: %1\nna stanie magazynowym.'@[MZ.MZ().KTM]);_wyn:=0
            ||
               DK.M:=MZ.MZ;
               DPOZ.M:=HELP.KTM:=DK.M;
               D_HELP.M:=DK.M().KTM;
               POMOC.MGR:=DK.M().MGR;
               {? DK.N().TYP().DS='T'
               || DK.SV:=exec('m_vat','material',M.ref(),DK.N().KH,,ND.AR,ND.AM)
               ?};
               _wyn:=1
            ?}
         ?}
      || _wyn:=0
      ?}
   ?}
?};
_wyn


\pr_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja DK.IL
::  OLD: \pr_il/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
{? BEER.ORD & DK.N().TYP().P='N'
|| exec('po_il','magdok_poz',,,0);
   win_disp()
?};
{? ~BEER.ORD
|| 0
|? POMOC.RODZ<>'U' & ((ND.INN='T' & ND.TYP().INW='I') | (ND.MAG().PAL='T'
   & ~exec('isB_ROZP','magdok_palety','IL')) | BEER.REORG)
|| 0
|? HELP.POP=1 & exec('czyw_bad','statexam')
|| 0
|| DPOZ.WPR_R:=DK.IL;
   1
?}


\po_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po redakcji pola ilosc w pozycji dok.mag.
::   WE: [_a] - (domyslnie 0) 1-podawac informacje o ilosci w drugiej jednostce 0-nie podawac
::       [_b] - (domyslnie 0) 1-jeszcze raz sprawdzic ilosc (info o stanach min/max) 0-juz nie sprawdzac
::       [_c] - (domyslnie 1) 1-komunikat 0-brak komunikatu
::       [_d] - bez win_disp domyślnie tak
::       [_e] - STRING - tryb działania (['FLD'] - walidacja po polu, 'VALID' - walidacja okienka)
::  OLD: \po_il/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=1 ?} || _d:=1 ?};
_mode:='FLD';
{? var_pres('_e')=type_of('')
|| _mode:=_e
?};

_stan_sc:=0;
_stan:=0;
_stan2:=0;
_stan2sc:=0;
_jmg:=DK.M().J2<>0;
 _a:=_a & (DK.T2='A' | DK.T2='R');
_msg:=''; _ok:=1;
_podp:=exec('get','#params',600102,2)='T';
::{? _podp=1 || _b:=1 ?};
_tmg:=(1+ST.MAG().TYP);
_prod:=exec('tte_lic','tte');

{? DK.M<>null()
|| _dokl_m:=exec('jaka_dok_m','jm',DK.M);
   DK.IL:=DK.IL$_dokl_m
?};
_ildk:={? 1+(-menu_txt)='p' || HELP.IL || 0 ?};
_erzl:=0;
_continue:=0;

{? DK.M().RODZ='T'
||
   HELP.SEL_SC:='';
   {? SM.index('SM'); SM.prefix(ST.MAG); SM.find_key(DK.M)
   || {? 1+(-menu_txt)='p'
      || _stan:=(SM.SD+HELP.IL);
         _stan2:=(SM.SD2+HELP.IL2)
      || _stan:=SM.S-SM.W;
         _stan2:=SM.S2-SM.W2
      ?}
   || _stan:=0;
      _stan2:=0
   ?};

   {? _b
   || _stan_sc:={? DK.PLUS='N' || DK.IL2 || DK.IL ?};
      _stan2sc:={? DK.PLUS='N' || DK.IL || DK.IL2 ?};
      SM.index('SM');
      SM.prefix(ST.MAG);
      {? SM.find_key(DK.M)
      || _st:=SM.S
      || _st:=0
      ?};
      _msg+=exec('minimax','magazyn_stan',DK.PLUS='T',ST.MAG,DK.M,_st+DK.IL,_st-DK.IL)
   ?};

   {? DK.PLUS='N'
   || _stskind:=exec('Create_ZON4typ','statexam',ND.TYP(); TYPYDOK);
      {? _tmg='D' & DK.AFIFO<>'' || _af:=2; _tmg:=DK.AFIFO  || _af:=2 ?};
      _stan_sc:=0;
::    oblicza ilosc dostepna
      exec('obl_stan','magazyn_stan',DK.M,1,,,,DK.N().D,-_af,,,,,,1);
      _stan:={? 1+(-menu_txt)='p' || HELP.IL || 0 ?};
      _stan+={? BEER.SD>0 || BEER.SD || 0 ?};
      _stan+={? _stskind<>'' & _stskind*'O' || BEER.S_O || 0 ?};
      _stan+={? _stskind<>'' & _stskind*'N' || BEER.S_N || 0 ?};
      _stan2:={? 1+(-menu_txt)='p' || HELP.IL2 || 0 ?};
      _stan2+={? BEER.SD2>0 || BEER.SD2 || 0 ?};
      _stan2+={? _stskind<>'' & _stskind*'O' || BEER.S_O2 || 0 ?};
      _stan2+={? _stskind<>'' & _stskind*'N' || BEER.S_N2 || 0 ?};

      {? _tmg='D' &  ND.TYP().UPRW<>'T'
      ||
::       oblicza ilosc dostepna dla pojedynczej dostawy
         _stan_pr:=0;
         _stan_pr2:=0;
         {? DK.RDK=0
         || _stan_sc:=exec('obl_dost','magazyn_stan',DK.N().MAG,DK.M,,,,_stskind);
            _stan_pr:=_stan_sc;
            _stan_sc2:=HELP.DIL2;
            _stan_pr2:=_stan_sc2;
            {? DK.M().IDMOB='D' || _stan_sc:={? _stan_sc>EANX.ILW || _stan_sc-EANX.ILW || 0 ?} ?};
            {? _stan_sc>_stan || _stan_sc:=_stan ?};
            {? _stan_sc2>_stan2 || _stan_sc2:=_stan2 ?};
            _odbl_r:=0
         || _stan_sc:=exec('obl_dost','magazyn_stan',DK.N().MAG,DK.M,DK.RDK,DK.NDK,DK.N().D,_stskind);
            _stan_pr:=_stan_sc;
            _stan_sc2:=HELP.DIL2;
            _stan_pr2:=_stan_sc2;
            {? DK.M().IDMOB='D' || _stan_sc:={? _stan_sc>EANX.ILW || _stan_sc-EANX.ILW || 0 ?} ?};
            {? _stan_sc>_stan || _stan_sc:=_stan ?};
            {? _stan_sc2>_stan2 || _stan_sc2:=_stan2 ?};
            DISP.ILR:=exec('obl_rsc','magazyn_stan',DK.RDK,DK.NDK,DK.N().MAG,DK.M,1);
::          liczba rezerwacji do odblokowania na danej dostawie
            exec('oblscsum','magazyn_stan');
            {?  var_pres('__sumsc')>117 & __sumsc.first()
            || _odbl_r:=DISP.ILR-DISP.ILD;
               _st:=_stan_sc+_odbl_r;
               {? _odbl_r>0 & __sumsc.SD<=_st
               || _odbl_r:=__sumsc.SD-_stan_sc
               ?}
            || _odbl_r:=0
            ?};
            _stan_sc+=_odbl_r;
            exec('obl_stan','magazyn_stan',DK.M,1,,,,DK.N().D,,,,,,,1);
            BEER.SD+={? ND.TYP().STATS_O='T' || BEER.S_O ?};
            BEER.SD+={? ND.TYP().STATS_N='T' || BEER.S_N ?};
            BEER.SD2+={? ND.TYP().STATS_O='T' || BEER.S_O2 ?};
            BEER.SD2+={? ND.TYP().STATS_N='T' || BEER.S_N2 ?};
::          wydania po dacie dokumentu
            {? var_pres('__wpod')>0 & __wpod>0 || _stan_sc-=__wpod ?};
            {? _stan_sc>BEER.SD & ~_b & ~((1+(-menu_txt))='p') || _stan_sc:=BEER.SD ?};
            {? _stan_sc<0 || _stan_sc:=0 ?};
            {? HELP.RDK=DK.RDK & HELP.NDK=DK.NDK & DK.IL<=HELP.IL
            || _sc_rez:=0
            || _sc_rez:={? DK.DK_C<>null()
                        || exec('rezScWgAtr','magazyn_stan',DK.N().MAG,DK.M,DK.RDK,DK.NDK,DK.DK_C)
                        || 0
                        ?};
               {? DK.DK_C<>null() & _sc_rez>0 & _sc_rez<=(BEER.SRT+BEER.SRR) & _stan_sc<_stan_pr
               || _stan_sc:=_stan_pr
               ?}
            ?};
            _stan_sc:={? _sc_rez>=_stan_sc
                      || {? HELP.RDK=DK.RDK & HELP.NDK=DK.NDK || HELP.IL || 0 ?}
                      || _stan_sc-_sc_rez
                      ?}
         ?};

         {? _stan_sc<DK.IL | (~DK.IL & _stan_sc)
         ||
            {? _a
            ||
               {? (ND.TYP().P='T' & 'RA'*(_rodz:=exec('get','#params',400001,2)))
                | (ND.TYP().P<>'T' & ND.TYP().DS<>'T' & 'RA'*(_rodz:=exec('get','#params',400002,2)))
               || _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
                  _stan2sc:={? DK.WS2>0 || _stan_sc/DK.WS2 || 0 ?} $ _dokl_s
               || _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
                  _stan2sc:=_stan_sc*DK.WS2 $ _dokl_s
               ?}
            || _dokl_s:=0;
               _stan2sc:=0
            ?};
            {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
            _msg+={? ~DK.IL
                  || '\n'+'Należy podać ilość materiału.'@
                  || '\n'+'Brak odpowiedniej ilości materiału dla pojedynczej dostawy.'@
                  ?}
                  +{? _tmg='D' | _af=2
                   || '\n'+'Na dzień %1 dostępna ilość dla dostawy to %2 %3.'@[$DK.N().D,form(_stan_sc,,_dokl_m),DK.M().J().KOD]
                   || '\n'+'Aktualna ilość dostępna to %1 %2.'@[form(_stan_sc,,_dokl_m),DK.M().J().KOD]
                   ?}
                  +'\n'
                  +{? _a & ND.TYP().DS='T'
                   || 'Dostępna ilość dla dostawy w jedn.sprzedaży to %1 %2.'@[form(_stan2sc,,_dokl_s),DK.J2().KOD]
                   || ''
                   ?};
            {? _podp & (~DK.IL | DK.IL>_stan_sc) & DK.N().MAG().PAL='N'
            || DK.IL:=_stan_sc;
               {? _jmg || DK.IL2:=_stan_sc2
               |? _a   || DK.IL2:=_stan2sc
               ?};
               {? DK.PLUS='N' & _jmg & DK.IL>0 & DK.IL2>0 || DK.WS2:=DK.IL/DK.IL2 ?};
               {? DK.IL>=0
               || DK.SCWAR:=(DK.IL*DK.SCC)$2;
                  {? DK.N().SCKRS || DK.C:=(DK.SCC * DK.N().SCKRS)$2 ?};
                  DK.WAR:=(DK.IL*DK.C)$2;_wyn:=1;
::                intrastat
                  {? DK.PLUS='T' & DPOZ.WPR_R<>DK.IL || exec('ist_wart_dk','magdok_poz',1) ?}
               ?}
            ?};
            _ok:=0
         ?};
         DISP.ZMREZ:=_ok & _odbl_r>0 & (_stan_sc-_odbl_r)<DK.IL
      || {? _stan<DK.IL | (~DK.IL & _stan>0)
         || {? _a
            ||
               {? (ND.TYP().P='T' & 'RA'*(_rodz:=exec('get','#params',400001,2)))
                | (ND.TYP().P<>'T' & ND.TYP().DS<>'T' & 'RA'*(_rodz:=exec('get','#params',400002,2)))
               || _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
                  _stan2:={? DK.WS2>0 || _stan_sc/DK.WS2 || 0 ?} $ _dokl_s
               || _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
                  _stan2:=_stan*DK.WS2 $ _dokl_s
               ?}
            || _dokl_s:=0;
               _stan2:=0
            ?};
            {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
            _msg+={? ~DK.IL || '\n'+'Należy podać ilość materiału.'@ || '\n'+'Brak dostępnej ilości materiału.'@ ?}
                  +{? _tmg='D' | _af=2
                   || '\n'+'Dostępna ilość na dzień %1 to: %2 %3.'@[form(DK.N().D),form(_stan,,_dokl_m),DK.M().J().KOD]
                   || '\n'+'Aktualna ilość dostępna to %1 %2.'@[form(_stan,,_dokl_m),DK.M().J().KOD]
                   ?}
                  +'\n'
                  +{? _a & ND.TYP().DS='T'
                   || 'Dostępna ilość w jedn.sprzedaży to %1 %2.'@[form(_stan2,,_dokl_s),DK.J2().KOD]
                   || ''
                   ?};
            {? _podp & (~DK.IL | DK.IL>_stan) & DK.N().MAG().PAL='N'
            ||

               DK.IL:=_stan;
               {? _a | _jmg || DK.IL2:=_stan2 ?};
               {? DK.PLUS='N' & _jmg & DK.IL>0 & DK.IL2>0 || DK.WS2:=DK.IL/DK.IL2 ?}
            ?};
            _ok:=0
         ?}
      ?}
   ?};

   {? DK.IL<DK.IL_ZT
   || _msg+='Ilość nie może być mniejsza od ilości aktualnie zadysponowanej do transportu: %1 %2.'@
            [$DK.IL_ZT,DK.M().J().KOD];
      DK.IL:=DK.IL_ZT;
      _ok:=0
   |? DK.ZGP<>null() & DK.N().TYP().KOOP='T' & DK.N().TYP().P='T'
   || _ok:=exec('spr_zgp_il','magdok_poz',DK.ZGP,DK.ref(),DK.IL)
   |? _ok=1 & DK.ZL<>null() & DK.PLUS='T' & DK.N().TYP().WYR='N' & DK.M<>null()
   ||
::    Dokumenty klasy RP zlecenia
      _wyn:=exec('spr_il','magdok_poz',DK.ZL,DK.WYD,0);
      {? _wyn=0
      || _msg+='Ilość zwracana towaru %1 ponad ilość pobrań na zleceniu %2 (Poz. %3).'@
               [DK.M().KTM,DK.ZL().SYM,$DK.P];
         _ok:=0
      |? _wyn=-1
      || _msg+='Ilość zwracana towaru %1 ponad normę technologiczną na zleceniu %2 (Poz. %3).'@
               [DK.M().KTM,DK.ZL().SYM,$DK.P];
         _ok:=0
      ?}
   |? _ok=1 & DK.ZL<>null() & DK.PLUS='N' & DK.N().TYP().WYR='N' & DK.M<>null()
   ||
::    Dokument klasy RW zlecenia
      {?  ATR.ZPARN_RW<>null() & DK.ZLIM<>null() & 0
      ||
::       Nie sprawdzam warunku, pozwalam rejestrować dokumenty na ilości większe niż wynika z limitu
         ~~
::       Jezeli partia zostala wybrana podczas redagowania RW to ilosc nie powinna przekroczyc
::       ilosci potrzebnej do partii, ktora obliczam na podstawie proporcji
::         _il_zlim:=exec('sum_il','zl_limit',DK.ZLIM,{? DK.ZLIM().LIMIT='T' || 1 || 0 ?});
::         _il_zl:=DK.ZL().IL;
::         _il_sur:=exec('dk_il_suggest','zl_limit',DK.ZLIM,DK.ZL);
::         _pob:=exec('ilosc_dk','zl_limit',ZLIM.ref(),1);
::         {? DK.IL>_il_sur
::         || _msg+='Pobierana ilość surowca %1 ponad ilość limitu na zleceniu %2\n'
::                  'w proporcji do wybranej partii: %3'@[DK.M().KTM,DK.ZL().SYM,ZPARN.SYM];
::            _msg+='\n\n';
::            _msg+='Ilość do pobrania: %1'@[form(_il_sur,,_dokl_m)]+'\n';
::            _msg+='Ilość pobrana: %1'@[form(_pob,,_dokl_m)]+'\n';
::            _msg+='Pozostało do pobrania: %1'@[form(_il_sur-_pob,,_dokl_m)]+'\n'
::         ?}
      |? DK.ZLIM<>null()
      ||
         {? -menu_txt()='popraw'
         || DK.cntx_psh(); DK.get(); _il:=DK.IL; DK.cntx_pop();
            _pob_il:=exec('ilosc_dk','zl_limit',DK.ZLIM,0);
            {? _pob_il-_il+DK.IL<0
            || _rw_ok:=0;
               _msg:='Ilość pobierana surowca %1 spowoduje ujemny stan na limicie zlecenia %2.'@[DK.M().KTM,DK.ZL().SYM];
               _ok:=0
            ?}
         ?};
         _chk_lim:=exec('CHK_LIMOact','zl_limit',DK.ZL,DK.WYD,DK.M);
         {? _ok & _chk_lim='T' | _chk_lim='I'
         || _wyn:=exec('spr_il','magdok_poz',DK.ZL,DK.WYD,0,_ildk);
            _erzl:=_wyn<=0 & _chk_lim='T';
            {? _wyn=0
            || _msg+='Ilość pobierana towaru %1 ponad ilość limitu na zleceniu %2 (Poz. %3)'@[DK.M().KTM,DK.ZL().SYM,$DK.P]
            |? _wyn=-1
            || _msg+='Ilość pobierana towaru %1 ponad normę technologiczną na zleceniu %2 (Poz. %3)'@[DK.M().KTM,DK.ZL().SYM,$DK.P]
            ?}
         ?}
      ||
         _zlim:=exec('dk_zlim_suggest','zl_limit',DK.ZL,DK.M().KTM,ATR.ZPAR_ZGH);
         {? _zlim<>null()
         || DK.ZLIM:=_zlim;
            DK.M_ZLIM:=ref_name(_zlim)
         |? _prod='T' & DK.N().TYP().KOOP<>'T'
         || _msg+='Nie wybrano limitu dla towaru %1.'@[DK.M().KTM];
            _ok:=0
         ?}
      ?}
   |? _ok=1 & DK.ZL<>null() & DK.PLUS='T' & DK.N().TYP().WYR='T' & DK.M<>null()
   || _args:=exec('ilosc_dk_a','zl_common');
      _args.ZGH:=DK.ZGH;
      {? _args.ZGH<>null()
      ||
         _args.ZL:=DK.ZL;
         {? 1+(-menu_txt)='p' || _args.OMIT:=DK.ref() ?};
         _ilnprz:=DK.ZGH().ILNPRZ;
         _il_zgh:=(_args.RP:=1; exec('get_ilosc_dk','zl_common',_args))
                  -(_args.RP:=0; _args.ZP:=1; exec('get_ilosc_dk','zl_common',_args));
         {? _mode='VALID' & HELP.IL<>DK.IL & DK.IL>_ilnprz-_il_zgh
         || _continue:=1;
            _msg+='\n'+'Ilość produktu %1 (%2) ponad ilość dostępną do rejestracji na przewodniku %3 (Poz. %4).'@
                       [DK.M().KTM,$DK.IL,DK.ZGH().NRPRZ,$DK.P];
            _msg+='\n\n';
            _msg+='Ilość planowana: %1'@[form(_ilnprz,,_dokl_m)]+'\n';
            _msg+='Ilość wykonana: %1'@[form(_il_zgh,,_dokl_m)]+'\n';
            _msg+='Pozostało do wykonania: %1'@[form(_ilnprz-_il_zgh,,_dokl_m)]+'\n'
         ?};
         {? _mode='FLD' & HELP.IL<>DK.IL & DK.ZGP<>null() & exec('zgp_has_wyrgd','zl_wyr',DK.ZGP)
         || _continue:=0;
            _erzl:=1;
            _msg+='Dokument do pozycji przewodnika, który ma robociznę rozpisaną na wiele wyrobów. Poprawianie ilości niedozwolone.'@
         ?};
         {? ATR.ZPARN_DK<>null()
         ||
            ZPARN.cntx_psh();
::          Podczytanie ZPARN
            ATR.ZPARN_DK();

::          Obliczam ilosc jaka została juz rozliczona na parti
            {? 1+(-menu_txt)='p'
            ||
::             Jesli jestem w sciezce popraw to nie uwzgledniam poprawianego dokumentu
::             podczas zliczania ilosci ktora juz zostala rozliczona, bo nigdy nie moglbym zmiejszyc
::             ilosci na tym dokumencie ktory poprawiam
               _part_rp:=exec('get_ilosc_rp','zl_partie',ZPARN.ref(),DK.ref())
            || _part_rp:=exec('get_ilosc_rp','zl_partie',ZPARN.ref())
            ?};
            {? _mode='VALID' & HELP.IL<>DK.IL & DK.IL>0 & DK.IL>ZPARN.IL-_part_rp
            || _continue:=1;
::               _erzl:=1;
               _msg+='\n'+'Ilość produktu %1 (%2) ponad ilość dostępną do rejestracji na partii %3 (Poz. %4).'@
                          [DK.M().KTM,$DK.IL,ZPARN.SYM,$DK.P];
               _msg+='\n\n';
               _msg+='Ilość planowana: %1'@[form(ZPARN.IL,,_dokl_m)]+'\n';
               _msg+='Ilość wykonana: %1'@[form(_part_rp,,_dokl_m)]+'\n';
               _msg+='Pozostało do wykonania: %1'@[form(ZPARN.IL-_part_rp,,_dokl_m)]+'\n'
            ?};
            {? DK.IL>0 & DK.IL<ZPARN.IL & (1+(-menu_txt)<>'p') & exec('get','#params',500770,2)='T'
               & exec('czy_sa_limity','zl_limit',DK.ZL,1)=0 & ZPARN.IL>exec('get_ilosc_rp','zl_partie',ZPARN.ref())
            || _msg+='\n'+'Ilość produktu %1 poniżej ilości na partii %2 (Poz. %3)'@[DK.M().KTM,ZPARN.SYM,$DK.P];
               _msg+='\n\n';
               _msg+='Ilość na partii zostanie zmniejszona z %1 do ilości raportowanej %2.'@
                     [form(ZPARN.IL,,_dokl_m),form(DK.IL,,_dokl_m)]+'\n'
            ?};
            ZPARN.cntx_pop()
         ?}
      ?}
   |? _ok=1 & DK.ZL<>null() & DK.PLUS='N' & DK.N().TYP().WYR='T' & DK.M<>null()
   || {? DK.IL>DK.ZL().ILDOK
      || _msg+='Ilość produktu %1 ponad ilość wykonaną na zleceniu %2 (Poz. %3).'@[DK.M().KTM,DK.ZL().SYM,$DK.P]
      ?}
   |? _ok=1 & _tmg='D' & DK.PLUS='T' & DK.N().TYP().DN='T' & DK.DOST<>date(0,0,0) & (~HELP.POP | DK.PRDK<>$DK.ref())
   || _zwr:=exec('ilDOzwr','magdok_poz',DK.SRDK,{? HELP.POP || $DK.ref() || '' ?});
      {? _zwr>0
      || {? _zwr<DK.IL
         || _msg+='Aktualnie można dla wskazanej dostawy zwrócić: '@;
            _msg+=form(_zwr,,DK.M().DOKL)+' '+DK.M().J().KOD+'.\n';
            _msg+='Przekroczono ilość z dostawy pierwotnej.'@;
            _ok:=0
         ?}
      || _msg+='Aktualnie brak możliwość zwrotu do danej dostawy.\n'@;
         _msg+='Przekroczono ilość z dostawy pierwotnej.'@;
         _ok:=0
      ?}
   ?};
   {? _ok=1 & DK.PLUS='T' & exec('atr_get_srsr','mat_atr',M.M_ATR)<>null() & DK.IL>1
   || _msg+='Ilość na dostawie środka trwałego musi wynosić %1.'@['1']
   ?}
?};
_wyn:=0;
{? _ok=1
|| DK.SCWAR:=(DK.IL*DK.SCC)$2;
   {? DK.N().SCKRS || DK.C:=(DK.SCC * DK.N().SCKRS)$2 ?};
   DK.WAR:=(DK.IL*DK.C)$2;
:: intrastat
   {? DK.PLUS='T' & DPOZ.WPR_R<>DK.IL || exec('ist_wart_dk','magdok_poz',1) ?};
   {? _b=0
   || {? DK.IL<0 || _msg+='\n'+'Należy podać wartość większą od zera.'@ || _wyn:=1 ?}
   || _wyn:=1
   ?}
?};

{? _c & +_msg
||
   {? _b | _continue>0
   || _wyn:=FUN.ask(_msg+'\n\n'+'Kontynuować?'@)
   || FUN.info(_msg)
   ?};
:: porownanie ilosci jedn. sprzedazy a jedn.magazynowa
   {? _a || _wyn:=exec('spr_dost','magdok_poz') & _wyn ?};
:: jesli mozemy wydawac wiecej niz na limicie zlecenia
   {? DK.PLUS='N' & _tmg='D' & _podp=1 & _wyn & DK.N().MAG().PAL='N'
   || {? DK.IL>_stan_sc
      || DK.IL2:=DK.IL:=_stan_sc
      ?}
   ?}
?};
{? _erzl || _wyn:=0 ?};

HELP.SEL_SC:='';
{? _wyn
|| exec('aktmil2','magdok_poz');
   exec('obl_wars','magdok_poz',,DK.N().RAB);
   exec('obl_mwb','magdok_poz');
   {? _d || win_disp() ?}
|| BEER.IL22:=DK.IL2
?};
_wyn


\koszt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: koszt pozycji
::   WY: koszt
::  OLD: \koszt/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
FAKS_K.cntx_psh();
FAP_K.cntx_psh();
FAKS_K.use((FAKS_K.name(1)-3)+(DK.name+3));
FAP_K.use((FAP_K.name(1)-3)+(DK.name+3));
FAP_K.index('DKSQL'); FAP_K.prefix($DK.ref());
{? FAP_K.first()
|| {!
   |? {? FAP_K.FAKS_K().ROZLICZ='N' & FAP_K.FAKS_K().INMG || _wyn+=FAP_K.WB ?};
      FAP_K.next()
   !}
?};
FAKS_K.cntx_pop();
FAP_K.cntx_pop();
_wyn


\be_dkcen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2006]
:: OPIS: przed edycja ceny w pozycji dokumentu magazynowego
::  OLD: \be_dkcen/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('czy_rwal','eurusd','M') & exec('dk_b_cen','magdok_poz');
{? ND.TYP().P='T' & ND.KRS=0
|| _wyn:=1;
   _tmg:={? ND.MAG().TYP*'EWI' || 'E' || (1+ND.MAG().TYP) ?};
   {? 'E'*_tmg & (DK.C<>0 | exec('get','#params',600104,2)='T')
   || DK.IL:=DK.IL;
      DK.WAR:=(DK.IL*DK.C)$2;
      exec('obl_mwb','magdok_poz');
      {? exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D)=0
      || _wyn:=exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D,3)<>-1
      || _wyn:=0
      ?};
      win_disp()
   ?};
   {? _wyn & DK.DOST<>date(0,0,0) & DK.RDK<>0 & DK.RDK<>#DK.ref()
    & ~exec('FindAndGet','#table',TYPYDOK,ND.TYP,,"TYPYDOK.T=\'BO\'",0)
   || _wyn:=0
   ?}
?};
{? DK.PLUS='T' || DPOZ.WPR_R:=DK.C ?};
{? _wyn & (~(DK.N().MAG().TYP*'EWI') | exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D)=0)
 & 'TW'*exec('get','#params',600300,2) & DK.N().TYP().DN='K'
|| _wyn:=0
?};
{? _wyn & DK.C=0
||
   exec('taz_sd_set','ceny');
   {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?}
   ||
      KALK.JM:=KALK.J2:=DK.M().J; KALK.WS2:=1;
      exec('stplicz','ceny',DK.IL);
      _params:=exec('ceny_mat_a','ceny_mat');
      _params.M:=DK.M;
      _params.KH:=ND.KH;
      _params.CZY_WAL:='N';
      _params.WAL:=INFO.NAROD;
      _params.FLD_CENA:='DK.C';
      _params.S_TAZ:=0;
      _params.S_DPOZ:=0;
      exec('ceny_mat','ceny_mat',_params)
   ?}
?};
_wyn


\dk_b_cen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: dopuszcza do redakcji ceny
::  OLD: \dk_b_cen/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? DK.PLUS='T'
||
   _tmg:={? ST.MAG().TYP*'EWI' || 'E' || (1+ST.MAG().TYP) ?};
   {? DK.C=0 & 'E'*_tmg
   ||
      DK.C:=exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D)
   ?};
   _wyn:=1
|| DK.WAR:=(DK.IL*DK.C)$2
?};
{? DK.N().MAG().SKL<>'T'
|| DK.SCC:=DK.C;
   DK.SCWAR:=DK.WAR
?};
_wyn


\obl_mwb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: oblicza wartosc brutto na przyjeciu magazynowym
::  OLD: \obl_mwb/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
SUM.MWB:=DK.WAR*(1+(#((DK.SV().KOD*'%')+DK.SV().KOD-1))/100);1


\dk_f3cen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: akcja F3 dla ceny dostawy na pozycjach dokumentu magazynowego
::   WY: cena wybrana z tabeli lub cena z pola
::  OLD: \dk_f3cen/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
:: wylaczenie pol rabatowych w cenniku
TAZ.RABOFF:=1;
exec('f3_zdcen','ceny_mat',DK.M,ND.KH,DK.C,,'DK');
TAZ.RABOFF:=0;
''


\war_mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JF [2006]
:: OPIS: oblicza watość magazynową
::  OLD: \war_mag/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_tmg:={? ST.MAG().TYP*'EWI' || 'E' || (1+ST.MAG().TYP) ?};
_czyzero:=exec('get','#params',600104,2)='T';

{? ('DFL'+{? _czyzero || 'E' || '' ?})*_tmg | DK.C>0
||
   _cena:=DK.C $DK.M().DOKL_C;
   {? 'E'*_tmg & DK.PLUS='T' || DK.C:=exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D) ?};
   _dokl_m:=0;
   {? DK.M<>null
   || _dokl_m:=exec('jaka_dok_m','jm',DK.M);
      DK.IL:=DK.IL$_dokl_m
   ?};
   {? 'E'*_tmg & DK.PLUS='T'
   || {? _czyzero & exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D,3)=-1
      || DK.C:=DK.C
      || DK.C:={? DK.C=0 || _cena || DK.C ?}
      ?}
   || DK.C:=_cena
   ?};
   _srsr:=exec('atr_get_srsr','mat_atr',DK.M().M_ATR);
   {? _srsr
   || exec('srsr_sync_dk','mat_atr',_srsr)
   ?};
   DK.WAR:=(DK.IL*DK.C)$2;
   {? DK.N().MAG().SKL<>'T'
   || DK.SCC:=DK.C
   ?};
   DK.SCWAR:=(DK.IL*DK.SCC)$2;
   exec('obl_mwb','magdok_poz');

:: intrastat
   {? DK.PLUS='T' & DPOZ.WPR_R<>DK.C || exec('ist_wart_dk','magdok_poz',0) ?};
   1
|? DK.C<0
||
   FUN.info('Cena nie może być ujemna.'@)
||
   {? (~(DK.N().MAG().TYP*'EWI') | _czyzero=1 | exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D)=0)
    & 'TW'*exec('get','#params',600300,2) & DK.N().TYP().DN='K'
   || 1
   || FUN.info('Należy wpisać cenę większą od 0.'@); 0
   ?}
?}


\ist_wart_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: nalicza wartosci dla intrastat dla DK
::   WE: _[1] - 1-przeliczac FAP.ILUJM, FAP.MASAN, 0-wpp
::       _[2] - ilosc
::       _[3] - wartosc
::  OLD: \ist_wart_dk/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_[2]:={? _>=2 || {? var_pres('_[2]')=1 || _[2] || DK.IL ?} || DK.IL ?};
_[3]:={? _>=3 || {? var_pres('_[3]')=1 || _[3] || DK.WAR ?} || DK.WAR ?};

_wsp:=1;
{? DK.M=null
||
   DK.MASAN:=DK.ILUJM:=DK.WF:=DK.WS:=0

|? DK.N().IST_TYP<>''
||
   _dokl:=6;
   _doklw:=2;

   {? _[1]=1
   ||
      {? DK.JM<>DK.M().J
      ||
         _wsp:=exec('prz','jm',DK.M,DK.JM,DK.M().J);
         {? _wsp<=0  || _wsp:=1 ?}
      ||
         _wsp:=1
      ?};
      DK.ILUJM:={? exec('dk_ilujm_pr','magdok_poz') || (_[2]*_wsp*M.JU_P)$_dokl || 0 ?};
      DK.MASAN:={? exec('dk_masan_pr','magdok_poz') || (_[2]*_wsp*M.WN)$_dokl || 0 ?}
   ?};
   DK.WF:={? exec('dk_wf_pr','magdok_poz') || _[3]$_doklw || 0 ?};
   DK.WS:={? exec('dk_ws_pr','magdok_poz') || _[3]$_doklw || 0 ?}
?}


\dk_b_cn_h
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: przed redakcja DK.CN
::  OLD: \dk_b_cn_h/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_R:=fld;
exec('czy_rwal','eurusd','M') & exec('dk_b_cn','magdok_poz')


\dk_b_cn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed redakcja ceny netto na WZ
::   WY: czy redagowac pole
::  OLD: \dk_b_cn/magazyn.fml
::       \be_dkcn/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? DK.N().CB='N'
|| _wyn:=1;
   exec('taz_sd_set','ceny');
   {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?} & DK.CN=0
   || exec('st_licz_wz','ceny','ND');
      _wgewi:=exec('czyJS','jm',DK.M);
      _ile:={? _wgewi & DK.J2 || DK.IL2 || DK.IL ?};
      _kod:={? DK.J2<>null || DK.J2().KOD || '' ?};
      _ws2:={? DK.J2<>null || DK.WS2 || 0 ?};
      exec('stplicz','ceny',_ile);
      {? _wgewi
      || KALK.JM:=DK.M().J; KALK.J2:=DK.J2; KALK.WS2:=DK.WS2
      || KALK.JM:=DK.M().J2; KALK.J2:=DK.M().J; KALK.WS2:=DK.WS2
      ?};
      exec('ceny_mat','ceny_mat',DK.M,DK.N().KH,'DK.CN',ND.KH_ODB,ST.MAG,'DK.RAB','N',ND.NWAL,'',,0,_kod,_ws2,0);
      {? DK.CN || _wyn:=exec('licz','ceny',DK) ?}
   ?}
?};
_wyn


\f3_b_cn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: klawisz F3 dla ceny netto dla DK
::  OLD: \f3_b_cn/magazyn2.fml
::       \f3_dkcn/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_rwal','eurusd','M') & DK.N().CB='N'
|| exec('st_licz_wz','ceny','ND');
   _wgewi:=exec('czyJS','jm',DK.M);
   _ile:={? _wgewi & DK.J2 || DK.IL2 || DK.IL ?};
   _kod:={? DK.J2<>null || DK.J2().KOD || '' ?};
   _ws2:={? DK.J2<>null || DK.WS2 || 0 ?};
   exec('stplicz','ceny',_ile);
   {? _wgewi
   || KALK.JM:=DK.M().J; KALK.J2:=DK.J2; KALK.WS2:=DK.WS2
   || KALK.JM:=DK.M().J2; KALK.J2:=DK.M().J; KALK.WS2:=DK.WS2
   ?};
   exec('ceny_mat','ceny_mat',DK.M,DK.N().KH,'DK.CN',ND.KH_ODB,ST.MAG,'DK.RAB','N',ND.NWAL,'',,0,_kod,_ws2,1)
?};
''


\dk_cn_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [$12.10]
:: OPIS: po redkacji DK.CN
::  OLD: \dk_cn_ae/magazyn2.fml
::       \dk_cb_ae/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DPOZ.WPR_R<>fld
|| exec('obl_wars','magdok_poz',,DK.N().RAB);
   exec('clr_promo_tap','ceny',,{? DK.N().CB='T' || DK.CB || DK.CN ?},DK.WAL);
   win_disp;
:: wielowalutowosc
   {? DK.KURS
   || _dokl_c:={? DK.PLUS='T' || DK.M().DOKL_Z || DK.M().DOKL_S ?};
      _c_kurs:=(DK.CWAL*DK.KURS)$_dokl_c;
      {? DK.N().CB='T'
      || {? DK.WAL<>exec('bl_nwal','ustawienia') & DK.CWAL & DK.CB &  _c_kurs<>DK.CB
         || _walj:=exec('FindInSet','#table','WAL','WAL_SYM',DK.WAL().KOD,,"WAL.J",,,1);
            DK.CWAL:=DK.CB/DK.KURS*_walj $_dokl_c
         ?}
      || {? DK.WAL<>exec('bl_nwal','ustawienia') & DK.CWAL & DK.CN & _c_kurs<>DK.CN
         || _walj:=exec('FindInSet','#table','WAL','WAL_SYM',DK.WAL().KOD,,"WAL.J",,,1);
            DK.CWAL:=DK.CN/DK.KURS*_walj $_dokl_c
         ?}
      ?}
   ?}
?};
1


\obl_wars
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: oblicza wartosci dokumentu sprzedazy
::       [_a] - 0 - obliczenia dla ceny w walucie narodowej, 1 - ceny w walucie handlowej
::       [_b] - rabat% naglowka
::  OLD: \obl_wars/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=0 ?};
{? var_pres('_b')<>type_of(1) || _b:=ND.RAB ?};

_wyn:=0;

{? DK.PLUS='T'
||
   exec('obl_mwb','magdok_poz');
   return(1)
?};

_rab:=ND.RAB;
ND.RAB:=_b;
exec('st_licz_wz','ceny','ND');
ND.RAB:=_rab;
_wgewi:=exec('czyJS','jm',DK.M);
_ile:={? _wgewi || DK.IL2 || DK.IL ?};

::_ile:=DK.IL2;
_dokl_c:=DK.M().DOKL_S;
_kwrab:=_kwrabj:=0;
{? exec('czyrabp','ceny',TAZ.RAB_TYP)
||
   _rabat:=exec('rab_proc','ceny',DK.RAB,TAZ.RAB,TAZ.RAB_TYP);
   _rabat1:=1-(DK.RAB+TAZ.RAB)/100
||
   _cena:={? TAZ.CZY_WAL || DK.CWAL || {? TAZ.CB='T' || DK.CB || DK.CN ?} ?};
   _kwil:=_ile;
   _nagwsp:=-TAZ.RAB/100;
   _kwpoz:=-DK.RABK;
   _kwrab:=
      {? TAZ.RAB_TYP='W'
      || _kwpoz+(_nagwsp*((_cena*_kwil)$_dokl_c))$2
      || ((_kwpoz+(_nagwsp*_cena)$_dokl_c)*_kwil)$2
      ?};
   _kwrabj:=
      {? TAZ.RAB_TYP='W'
      || {? _kwil || (_kwpoz/_kwil)$_dokl_c ?}+(_nagwsp*_cena)$_dokl_c
      || _kwpoz+(_nagwsp*_cena)$_dokl_c
      ?}
?};

_vat:=#((DK.SV().KOD*'%')+DK.SV().KOD-1)/100;
_walj:={? TAZ.CZY_WAL || exec('FindInSet','#table','WAL','WAL_SYM',DK.WAL().KOD,,"WAL.J",,,1) || 1 ?};
_krs:={? _a | ~TAZ.CZY_WAL || 1 || TAZ.KRS/_walj ?};

{? TAZ.CB='T' | HELP.WHERE='L'
||
   _dokl_c:=DK.M().DOKL_S;
   DK.CB:=
      {? TAZ.CZY_WAL
      || DK.CWAL*_krs$_dokl_c
      || DK.CB$_dokl_c
      ?};
   DK.CN:=(DK.CB/(1+_vat))$_dokl_c;
   DK.WB:=
      {? TAZ.SPOBLRAB='W'
      || {? TAZ.SPP='N' & ~exec('czyrabp','ceny',TAZ.RAB_TYP) || _kwpoz:=(_kwpoz*_krs)$2 ?};
         _cpr:={? ~_a & (~TAZ.CZY_WAL | TAZ.SPP='N') || _krs:=1; DK.CB || DK.CWAL ?};
         {? exec('czyrabp','ceny',TAZ.RAB_TYP)
         || (exec('obl_rabat','ceny',(_cpr*_ile)$_dokl_c,_rabat)$2*_krs)$2
         || (((_cpr*_ile)$_dokl_c+_kwrab)*_krs)$2
         ?}
      || _cpr:={? ~_a || DK.CB || DK.CWAL ?};
         {? exec('czyrabp','ceny',TAZ.RAB_TYP)
         || ((_cpr*_rabat1)$_dokl_c*_ile)$2
         || {? TAZ.CZY_WAL || _kwrabj:=(_kwrabj*_krs)$2 ?};
            ((_cpr+_kwrabj)*_ile)$2
         ?}
      ?};
   DK.WN:=(DK.WB/(1+_vat))$2;
   DK.WV:=(DK.WB-DK.WN)$2;
   _wyn:=1
||
   DK.CN:=
      {? TAZ.CZY_WAL
      || DK.CWAL*_krs$_dokl_c
      || DK.CN$_dokl_c
      ?};
   DK.CB:=(DK.CN+DK.CN*_vat)$_dokl_c;
   DK.WN:=
      {? TAZ.SPOBLRAB='W'
      || {? TAZ.SPP='N' & ~exec('czyrabp','ceny',TAZ.RAB_TYP) || _kwpoz:=(_kwpoz*_krs)$2 ?};
         _cpr:={? ~_a & (~TAZ.CZY_WAL | TAZ.SPP='N') || _krs:=1; DK.CN || DK.CWAL ?};
         {? exec('czyrabp','ceny',TAZ.RAB_TYP)
         || (exec('obl_rabat','ceny',(_cpr*_ile)$_dokl_c,_rabat)$2*_krs)$2
         || (((_cpr*_ile)$_dokl_c+_kwrab)*_krs)$2
         ?}
      || _cpr:={? ~_a & (~TAZ.CZY_WAL | TAZ.SPP='N') || DK.CN || DK.CWAL ?};
         _cpor:=
            {? exec('czyrabp','ceny',TAZ.RAB_TYP)
            || (_cpr*_rabat1)$_dokl_c
            || (_cpr+_kwrabj)$_dokl_c
            ?};
         {? ~_a & (~TAZ.CZY_WAL | TAZ.SPP='N')
         || (_cpor*_ile)$2
         || ((_cpor*_ile)$2*_krs)$2
         ?}
      ?};
   DK.WV:=(DK.WN*_vat)$2;
   DK.WB:=(DK.WN+DK.WV)$2;
   _wyn:=1
?};

_wyn


\dk_b_cb_h
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: przed redakcja DK.CB
::  OLD: \dk_b_cb_h/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_R:=fld;
exec('czy_rwal','eurusd','M') & exec('dk_b_cb','magdok_poz')


\dk_b_cb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed redakcja ceny brutto na WZ
::   WY: czy redagowac pole
::  OLD: \dk_b_cb/magazyn.fml
::       \be_dkcb/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? DK.N().CB='T'
|| _wyn:=1;
   exec('taz_sd_set','ceny');
   {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?} & DK.CB=0
   || exec('st_licz_wz','ceny','ND');
      exec('stplicz','ceny',{? DK.J2 || DK.IL2 || DK.IL ?});
      KALK.JM:=DK.M().J; KALK.J2:=DK.J2; KALK.WS2:=DK.WS2;
      exec('ceny_mat','ceny_mat',DK.M,DK.N().KH,'DK.CB',ND.KH_ODB,ST.MAG,'DK.RAB','N',ND.NWAL,'',,1,
           {? DK.J2<>null || DK.J2().KOD || '' ?},{? DK.J2<>null || DK.WS2 || 0 ?},0,,,,DK.SV);
      {? DK.CB || _wyn:=exec('licz','ceny',DK) ?}
   ?}
?};
_wyn


\f3_b_cb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: klawisz F3 dla ceny brutto dla DK
::  OLD: \f3_b_cb/magazyn2.fml
::       \f3_dkcb/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_rwal','eurusd','M') & DK.N().CB='T'
|| exec('st_licz_wz','ceny','ND');
   exec('stplicz','ceny',{? DK.J2 || DK.IL2 || DK.IL ?});
   KALK.JM:=DK.JM; KALK.J2:=DK.J2; KALK.WS2:=DK.WS2;
   exec('ceny_mat','ceny_mat',DK.M,DK.N().KH,'DK.CB',ND.KH_ODB,ST.MAG,'DK.RAB','N',ND.NWAL,'',,1,
        {? DK.J2<>null || DK.J2().KOD || '' ?},{? DK.J2<>null || DK.WS2 || 0 ?},1,,,,DK.SV)
?};
''


\bd_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przed wyswietl dla DK.DOST
::  OLD: \bd_dost/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? {? DK.N().TYP().P='T' || ~(DK.N().TYP().DN='T' & DK.N().TYP().DK='N') || 0 ?}
 & ~exec('FindAndGet','#table',TYPYDOK,DK.N().TYP,,"TYPYDOK.T=\'BO\'",0)
|| exec('findfnrd','color')
|| ''
?}


\be_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: czy mozna edytowac pole
::   WE: _a - '' wszystkie rekordy / 'T' tylko aktywne / 'N' tylko nieaktywne
::       [_b] - wskazanie na konkretną dostawę, domyślnie - brak
::   WY: 0/1
::  OLD: \be_dost/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_scsql:={? var_pres('_b')=type_of('') & (+_b)=16 || _b || '' ?};
_zwrot:=DK.N().TYP().P='T' & DK.N().TYP().DN='T' & DK.N().TYP().DK='N';
{? DK.N().TYP().P='T' & ~_zwrot
||
   _wyn:=exec('FindAndGet','#table',TYPYDOK,DK.N().TYP,,"TYPYDOK.T=\'BO\'",0);
   {? _wyn & DK.DOST=date(0,0,0) || DK.DOST:=DK.N().D ?}
|| _tmg:=1+ST.MAG().TYP;
   _ewi:=ST.MAG().TYP*'EWI';

   {? DK.M<>null || _wyn:=_tmg='D' ?};
   {? _wyn || _wyn:=~BEER.REORG ?};
   {? _zwrot || _wyn:=1 ?};

   {? _wyn=1
   ||
      {? 'D'*_tmg | _zwrot
      || exec('sc_aktyw','magazyn_stan',ST.MAG,DK.M);
         _stskind:={? _zwrot
                   || 'NOZ'
::                     DK.N().MAG().DEFSTATS().KIND
                   || exec('Create_ZON4typ','statexam',DK.N().TYP();TYPYDOK)
                   ?};
         exec('sc_tymczas','magazyn_stan',
            ST.MAG,
            DK.M,
            {? DK.PLUS='T' || '' || 'T' ?},,
            _stskind,
            {? DK.N().TYP().KOOP='T' || 2 ?},,,
            {? DK.N().TYP().WYR='T' & TYPYDOK.P='N' || DK.ZL || null() ?},,,_scsql
         );
         {? __sc.size()=1
         || __sc.first();
               DK.DOST:=__sc.D;
               DK.C:={? _ewi || exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D) || __sc.C ?};
               {? DK.N().MAG().SKL='T'
               || DK.SCC:=__sc.SCC;
                  DK.C:=(DK.SCC*ND.SCKRS)$DK.M().DOKL_C
               ?};
               DK.RDK:=__sc.RDK;
               DK.NDK:=__sc.NDK;
               DK.SRDK:=__sc.SRDK;
               DK.PRDK:=__sc.PRDK;

               DK.WAR:=(DK.C*DK.IL)$2;
               {? DK.N().MAG().SKL<>'T'
               || DK.SCC:=DK.C;
                  DK.SCWAR:=DK.WAR
               ?};
               {? _zwrot & DK.PLUS='T' || DK.STATS:=exec('FindAndGet','#table',STATS,__sc.STATS,,,null()) ?}
         ?}
      || DK.DOST:=date(0,0,0);
         DK.C:={? _ewi || exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D) || 0 ?};
         DK.RDK:=0;
         DK.WAR:=0;
         DK.SCC:=0;
         DK.SCWAR:=0
      ?};
      win_disp()
   ?}
?};
{? (ND.MAG().PAL='T' & ~exec('isB_ROZP','magdok_palety','DOST'))
 & exec('FindInSet','#table','DK_L','DK',DK.ref())<>null()
|| _wyn:=0
?};
_wyn


\f3_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: oblicza wartosci dokumentu sprzedazy
::   WY: dla dokumentow rozchodowych zwraca wybrana data dostawy
::  OLD: \f3_dost/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=fld();
_zwrot:=DK.N().TYP().P='T' & DK.N().TYP().DN='T' & DK.N().TYP().DK='N';
{? ~-(1+menu_txt())='S' | (DK.N().TYP().P='T' & ~_zwrot)
|| 1
|| {? __sc.win_sel('?')='' | $DK.M().M_ATR<>ATR.M_ATRSQL
   || ATR.M_ATRSQL:={? DK.M().M_ATR<>null() || $DK.M().M_ATR || '' ?};
      exec('sc_tymczas_okna','magazyn_stan','D',1);
      {? DK.N().MAG().SKL='T'
      || __sc.win_sel(__sc_sew);
         __sc.win_sel(__sc_grp)
      || __sc.win_sel(__sc_sel);
         __sc.win_sel(__sc_grp)
      ?}
   ?};
   _czy_d:=0;
   _ind:=__sc.ndx_tmp('',,'SRDK',,,'SRDK',,);
   __sc.index(_ind);
   {? {? __sc.find_key(DK.SRDK) || _czy_d:=(__sc.D<>DK.DOST) || 1 ?}
   || {? __sc.first()
      || _ok:=1;
         {? _czy_d
         || _ok:=0;
            {! |? {? __sc.D=DK.DOST || _ok:=1; 0 || __sc.next() ?} !}
         || {? DK.RDK<>0
            ||
               _ok:=0;
               {! |? {? __sc.RDK=DK.RDK & __sc.NDK=DK.NDK || _ok:=1; 0 || __sc.next() ?} !}
            ?}
         ?};
         {? ~_ok || __sc.first() ?}
      || 0
      ?}
   ?};
   __sc.ndx_drop(_ind);

   __sc.hdr_sel();
   __sc.hdr_sel(' '+'dla materiału: %1 %2'@[DK.M().KTM,DK.M().N]);
   _ind_sel:=__sc.ndx_tmp('',,'D',,,'RDK',,);
   __sc.index(_ind_sel);
   __sc.fld_fml('C','DISPLAY_FORMAT',"{? DK.N().MAG().IL='T' || 'empty=1' || 'empty=0' ?}");
   {? __sc.select(,1,10)
   || {? DK.N().MAG().SKL='T' & __sc.WAL<>DK.N().SCWAL().KOD
      || FUN.info('Waluta dostawy różna od waluty wybranej na dokumencie.'
                  '\nWybierz dostawę zgodną z walutą dokumentu: %1.'@[DK.N().SCWAL().KOD]);
         _wyn:=0
      || DK.DOST:=__sc.D;
         DK.C:=__sc.C;
         DK.RDK:=__sc.RDK;
         DK.NDK:=__sc.NDK;
         DK.SRDK:=__sc.SRDK;
         DK.PRDK:=__sc.PRDK;
         DK.SCEAN:=__sc.SCEAN;
         {? DK.IL=0 & DK.PLUS='N'
         || _ile:={? DK.ZLIM<>null() & DK.ZL<>null()
                  || exec('dk_il_suggest','zl_limit',DK.ZLIM,DK.ZL)
                  || DISP.SD
                  ?};
            DK.IL:={? _ile>DISP.SD || DISP.SD || _ile ?}
         ?};
         DK.WAR:=(DK.C*DK.IL)$2;
         {? DK.KURS & DK.PLUS='T'
         || _walj:=exec('FindInSet','#table','WAL','WAL_SYM',DK.WAL().KOD,,"WAL.J",,,1);
            DK.CWAL:=DK.C/DK.KURS*_walj$DK.M().DOKL_Z
         ?};
         {? DK.N().MAG().SKL<>'T'
         || DK.SCC:=DK.C;
            DK.SCWAR:=DK.WAR
         ?};
         DK.STATS:=exec('FindAndGet','#table','STATS',__sc.STATS,,,null());
         BEER.IL22:=DK.IL2;
         _wyn:=__sc.D
      ?}
   ?};
   __sc.fld_fml('C','DISPLAY_FORMAT',"'empty=0'");
   __sc.hdr_sel();
   __sc.ndx_drop(_ind_sel)
?};
_wyn


\ae_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: po redakcji pola dostawa w DK.DOST
::  OLD: \ae_dost/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_iledk:={? HELP.POP || DK.IL ?};
_ewi:=DK.N().MAG().TYP*'EWI';

{? DK.N().TYP().P='T'
|| _atr_flag:=1;
   {? ~(DK.DOST<>date(0,0,0) & DK.RDK<>0 & ~exec('FindAndGet','#table',TYPYDOK,DK.N().TYP,,"TYPYDOK.T=\'BO\'",0))
   || DK.RDK:=0;
      DK.NDK:='';
      DK.SRDK:='';
      DK.PRDK:='';
      DK.SCEAN:=''
   |? DK.DOST<>date(0,0,0) & DK.RDK & (~HELP.POP | DK.RDK<>#DK.ref()) & DK.NDK<>''
   || _cecha:=null();
      _tw:=date(0,0,0);
      _return:=DK.PLUS='T' & DK.N().TYP().DN='T';
      _scean:='';
      _kp:='';
      DK.cntx_psh();
      DK.use(DK.NDK);
      DK.index('DOST3');
      DK.prefix(ST.MAG,DK.M,DK.RDK,DK.NDK,'T');
      {? DK.first()
      || _kp:=DK.KP;
         _tw:=DK.TW;
         _scean:=DK.SCEAN;
         {? DK.RDKC<>'' & _return
         || {? ATR.DKCZKP<>null() || exec('arch_atr','mat_atr',1,ATR.DKCZKP,''); ATR.DKCZKP:=null() ?};
            exec('arch_atr','mat_atr',0,null,DK.RDKC);
            DK.get();
            ATR.DKCZKP:=DK.DK_C
         ?};
         {? DK.DK_C<>null || _cecha:=DK.DK_C ?}
      ?};
      DK.cntx_pop();
      {? _kp<>'' & DK.KP<>_kp || DK.KP:=_kp ?};
      DK.DK_C:=_cecha;
      {? DK.N().TYP().DN='T'
      || EANX.TW:=DK.TW:=_tw;
         DK.SCEAN:=_scean;
         {? HELP.POP & DK.DOST<>date(0,0,0)
         || DK_L.cntx_psh();
            DK_L.index('DK');
            DK_L.prefix(DK.ref(),null());
            {? DK_L.first()
            || {!
               |? DK_L.SCEAN:=DK.SCEAN;
                  DK_L.TW:=DK.TW;
                  DK_L.SCSQL:=DK.SRDK;
                  DK_L.put(1);
                  DK_L.next()
               !}
            ?};
            DK_L.cntx_pop()
         ?}
      ?};
      {? DK.DK_C().M_ATR<>null()
      || {! _i..10 |! ($('ATR.WAR'+form(_i,-2,0,'99')))():=($('DK.DK_C().WAR'+form(_i,-2,0,'99')))() !};
         DK.DK_C().M_ATR().SYM
      || {! _i..10 |! ($('ATR.WAR'+form(_i,-2,0,'99')))():='' !};
         M_ATR.blank(0)
      ?};
      ATR.FLAG:=0;
      ATR.FLAG_ED:=0;
      _atr_flag:=0
   ?};
   {? _atr_flag
   || ATR.M_ATR:=DK.M().M_ATR;
      _czy_ed:=ATR.FLAG_ED:=ATR.CZY_ATR & (1+ND.MAG().TYP)='D' & ATR.M_ATR().EDIT;
      ATR.FLAG:={? ATR.FLAG_ED & _czy_ed & DK.M().M_ATR<>null() || 2 || 0 ?};
      {? _czy_ed & ATR.FLAG_ED || {? DK.M().M_ATR || ATR.FLAG_ED:=2 ?} ?};
      {? DK.DK_C<>null() || DK.DK_C().M_ATR().SYM || DK.M().M_ATR().SYM ?}
   ?};
   _wyn:=1
||
   __sc.cntx_psh();
   {? DK.RDK<>0
   ||
      _ind:=__sc.ndx_tmp('',,'D',,,'RDK',,,'NDK',,);
      __sc.index(_ind);
      __sc.prefix(DK.DOST,DK.RDK,DK.NDK);
      _jest:=__sc.first();
      {? ~_jest
      || DK.RDK:=0;
         DK.NDK:='';
         DK.SRDK:='';
         DK.PRDK:='';
         __sc.ndx_drop(_ind);
         _ind:=__sc.ndx_tmp('',,'D',,);
         __sc.index(_ind);
         __sc.prefix(DK.DOST);
         _jest:=__sc.first();
         {? _jest
         || {!
            |? {? {? __sc.S>0 || exec('sc_tmp_info','magazyn_stan'); DISP.SD>0 || 0 ?}
               || 0
               || __sc.next()
               ?}
            !}
         ?}
      ?}
   ||
::    szukanie gdy nie wybrano przez F3
      _ind:=__sc.ndx_tmp('',,'D',,);
      __sc.index(_ind);
      __sc.prefix(DK.DOST);
      _jest:=__sc.first();
      {? _jest
      || {!
         |? {? {? __sc.S>0 || exec('sc_tmp_info','magazyn_stan'); DISP.SD>0 || 0 ?}
            || 0
            || __sc.next()
            ?}
         !}
      ?}
   ?};
   {? _jest
   || {? DK.N().MAG().SKL='T' & __sc.WAL<>DK.N().SCWAL().KOD
      || FUN.info(
            'Waluta dostawy różna od waluty wybranej na dokumencie.'
            '\nWybierz dostawę zgodną z walutą dokumentu: %1.'@[DK.N().SCWAL().KOD]
         )
      |? DK.N().TYP().WYR='T' & TYPYDOK.P='N' & exec('FindAndGet','#table',DK,__sc.SRDK,,"ZL",null())<>DK.ZL
      || FUN.info(
            'Zlecenie dostawy różne od zlecenia wybranego na dokumencie.'
            '\nWybierz dostawę zgodną ze zleceniem: %1.'@[DK.ZL().SYM]
         )
      || _wyn:=1;
         DK.C:={? _ewi || exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D) || __sc.C ?};
         DK.TW:=EANX.TW:=__sc.TW;
         DK.WAR:=(DK.C*DK.IL)$2;
         DK.RDK:=__sc.RDK;
         DK.NDK:=__sc.NDK;
         DK.SRDK:=__sc.SRDK;
         DK.PRDK:=__sc.PRDK;
         DK.SCEAN:=__sc.SCEAN;
         DK.STATS:=exec('FindAndGet','#table','STATS',__sc.STATS,,,null());
         {? ST.MAG().COS='T'
         || DK.CN:=__sc.CN;
            DK.CB:=__sc.CB;
            DK.RAB:=__sc.RAB
         ?};
         {? DK.N().MAG().SKL<>'T'
         || DK.SCC:=DK.C;
            DK.SCWAR:=DK.WAR
         || DK.SCC:=__sc.SCC;
            DK.SCWAR:=(DK.SCC*DK.IL)$2
         ?};
         _cecha:=null();
         _kp:='';
         exec('bd_dpoz_sckrs','magdok_poz');
         DK.cntx_psh();
         DK.use(__sc.NDK);
         DK.index('DOST3');
         DK.prefix(ST.MAG,DK.M,__sc.RDK,__sc.NDK,'T');
         {? DK.first()
         || _kp:=DK.KP;
            {? DK.DK_C<>null() || _cecha:=DK.DK_C ?}
         ?};
         DK.cntx_pop();
         DK.KP:=_kp;
         BEER.KP:=_kp;
         DK.DK_C:=_cecha;
         {? DK.DK_C().M_ATR<>null()
         || {! _i..10 |! ($('ATR.WAR'+form(_i,-2,0,'99')))():=($('DK.DK_C().WAR'+form(_i,-2,0,'99')))() !};
            DK.DK_C().M_ATR().SYM
         || {! _i..10 |! ($('ATR.WAR'+form(_i,-2,0,'99')))():='' !};
            M_ATR.blank(0)
         ?};
         {? DK.DOST<>date(0,0,0) & DK.RDK<>0 & HELP.POP & (__sc.S<_iledk | (DK.PLUS='N' & DK.M().SETW='P'))
         || DK.IL:={? __sc.S<_iledk | ~_iledk || __sc.S || _iledk ?};
            {? DK.M().J2<>null() || DK.IL2:=__sc.S2 ?};
            _ile:=DK.IL;
            DK_L.cntx_psh();
            DK_L.index('DK');
            DK_L.prefix(DK.ref(),null());
            {? HELP.POP & DK_L.first()
            || _sum:=0;
               _del:=0;
               {!
               |? _sum+=DK_L.IL;
                  {? _del
                  || DK_L.del()
                  |? _sum>_ile
                  || DK_L.IL-=(_sum-_ile);
                     DK_L.SCEAN:=DK.SCEAN;
                     DK_L.TW:=DK.TW;
                     DK_L.SCSQL:=DK.SRDK;
                     exec('reoIL2','magdok_wymiary');
                     DK_L.put(1);
                     _del:=1;
                     {? DK_L.IL<=0 || DK_L.del() ?}
                  || DK_L.SCEAN:=DK.SCEAN;
                     DK_L.TW:=DK.TW;
                     DK_L.SCSQL:=DK.SRDK;
                     DK_L.put(1);
                     DK_L.next()
                  ?}
               !}
            ?};
            DK_L.cntx_pop()
         ?}
      ?}
   || {? DK.DOST=date(0,0,0) || _wyn:=1 || FUN.info('Nie ma dostawy w tym dniu.'@) ?}
   ?};
   {? DK.DOST=date(0,0,0) & (DK.N().MAG().PAL<>'T' | DK.ROZPAK)
   || DK.AFIFO:=DK.N().TYP().AFIFO;
      {? DK.N().MAG().IL='T' & DK.AFIFO='' || DK.AFIFO:='F' ?}
   || DK.AFIFO:=''
   ?};
   __sc.ndx_drop(_ind);
   __sc.cntx_pop();
   {? DK.PLUS='N' & DK.DOST=date(0,0,0) & DK.M().SETW='P' & (';FL'*DK.N().TYP().AFIFO)>1
   || EANX.LOKP:='';
      EANX.EANL:=null();
      EANX.TW:=date(0,0,0);
      EANX.PAL:=null()
   ?};
:: ewentualne uzupełnienie danych dla rozpakowania do wydań
   {? EANX.PALR=null() || exec('pobPALsl','magdok_palety') ?}
?};
_wyn


\bd_dpoz_sckrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Przed wyswietl dla pola sckrs zmiennej dopz
::  OLD: \bd_dpoz_sckrs/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
DPOZ.SCKRS:=DK.N().SCKRS;
1


\be_dkcw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: przed redkacja DK.CWAL
::  OLD: \be_dkcw/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.PLUS='T' || exec('upr_cm','ceny') || exec('upr_cs','ceny') ?}


\pr_dkcw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: przed redakcja DK.CWAL
::  OLD: \pr_dkcw/magazyn2.fml
::       \pr_dkcwal/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_R:=fld;
{? DK.PLUS='T' & DK.DOST<>date(0,0,0) & DK.RDK<>0 & DK.RDK<>#DK.ref() & exec('czy_bo','magdok_wspolne',ND.TYP)<>1
||
   0
|? exec('spr_npoz','eurusd')
||
   exec('taz_sd_set','ceny');
   {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?} & DK.CWAL=0
   || {? BEER.SZ='S'
::    cena walutowa sprzedazy na dokumentach rozchodowych
      || _typ:='s'
::    cena walutowa magazynowa na dokumentach przychodowych
      || _typ:='d'
      ?};
      exec('st_licz_wz','ceny','ND1');
      exec('stplicz','ceny',{? DK.J2 || DK.IL2 || DK.IL ?});
      {? _typ='s'
:: sprzedaz
      || KALK.JM:=DK.M().J; KALK.J2:=DK.J2; KALK.WS2:=DK.WS2;
         exec('ceny_mat','ceny_mat',DK.M,DK.N().KH,'DK.CWAL',ND.KH_ODB,ST.MAG,'DK.RAB','T',DK.WAL,'DK.CWAL',DK.KURS
          ,DK.N().CB='T',{? DK.J2<>null || DK.J2().KOD || '' ?},{? DK.J2<>null || DK.WS2 || 0 ?},0,,,,DK.SV)
:: dostawa
      || KALK.JM:=KALK.J2:=DK.M().J; KALK.WS2:=1;
         exec('ceny_mat','ceny_mat',DK.M,DK.N().KH,'DK.CWAL',ND.KH_ODB,ST.MAG,'','N',DK.WAL,'',,0,,,0,0)
      ?};
      {? DK.CWAL || DPOZ.WPR_R:=-1; exec('po_cenaw','ceny',0); DPOZ.WPR_R:=fld ?}
   ?};
   1
?}


\f3_dkcw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: F3 dla ceny walutowej DK.CWAL
::  OLD: \f3_dkcw/magazyn2.fml
::       \f3_dkcwal/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
{? BEER.SZ='S'
:: cena walutowa sprzedazy na dokumentach rozhcodowych
|| _typ:='s'
:: cena walutowa magazynowa na dokumentach przychodowych
|| _typ:='d'
?};
exec('st_licz_wz','ceny','ND1');
exec('stplicz','ceny',{? DK.J2 || DK.IL2 || DK.IL ?});
{? _typ='s'
:: sprzedaz
|| KALK.JM:=DK.M().J; KALK.J2:=DK.J2; KALK.WS2:=DK.WS2;
   exec('ceny_mat','ceny_mat',DK.M,DK.N().KH,'DK.CWAL',ND.KH_ODB,ST.MAG,'DK.RAB','T',DK.WAL,'DK.CWAL'
   ,DK.KURS,DK.N().CB='T',{? DK.J2<>null || DK.J2().KOD || '' ?},{? DK.J2<>null || DK.WS2 || 0 ?},1,,,,DK.SV)
:: dostawa
|| TAZ.RABOFF:=1;
   KALK.JM:=KALK.J2:=DK.M().J; KALK.WS2:=1;
   exec('f3_zdcen','ceny_mat',DK.M,DK.N().KH,DK.CWAL,,'DK',DK.WAL,ST.MAG);
   TAZ.RABOFF:=0
?};
''


\bl_dknam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: wartość początkowa maski dostawy
::  OLD: \bl_dknam/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
DK.name()


\dk_kpw_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: klawisz F3 DK.KPW
::  OLD: \dk_kpw_f3/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('slownik','intrastat','007',DK.KPW)


\dk_kp_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Blank pola KP tabeli DK
::  OLD: \dk_kp_bl/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.MAG().SKL = 'T'
|| BEER.KP
|| ''
?}


\dk_kp_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem DK.KP
::   WY: kolor
::  OLD: \dk_kp_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_modKP:=ND.TYP().UE='T' | (exec('get','#params',100205,2,null())*('%1 '[ND.TYP().T]))>0;
{? _modKP || '' || exec('dk_kp_reg','magdok_poz','PW') ?}


\dk_kp_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja DK.KP
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \dk_kp_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_modKP:=ND.TYP().UE='T' | (exec('get','#params',100205,2,null())*('%1 '[ND.TYP().T]))>0;
exec('dk_kp_reg','magdok_poz','PR') | _modKP


\dk_kp_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: po redkacji DK.KP
::   WY: 1 - wlasciwa wartosc pola, 0 - wpp
::  OLD: \dk_kp_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()<>''
|| {? exec('find_sl','intrastat','007',DK.KP)=0
   || FUN.ask('W słowniku brak kraju pochodzenia '@+DK.KP+'.\nKontynuować?'@)
   || {? DK.KCN<>null
      || {? DK.KP<>''
         || DK.CLO:=exec('daj_clo','sklad',DK.M,DK.N().D,DK.KP,DK.KCN().KOD)
         || DK.CLO:=null
         ?}
      || DK.CLO:=null
      ?};
      BEER.KP:=fld();
      1
   ?}
||
   1
?}


\dk_kp_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: klawisz F3 DK.F3
::  OLD: \dk_kp_f3/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('slownik','intrastat','007',DK.KP)


\dk_kp_reg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: warunki na wyswietlenie lub redagowanie pola DK.KP
::   WE: _a - 'PW' - dla funkcji przed wyswietleniem, 'PR' - dla funkcji przed redakcja
::   WY: _a = 'PW' - kolor lub ''
::          = 'PR' - 1 - redakcja dozwolona, 0 - wpp
::  OLD: \dk_kp_reg/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_kolor:=exec('findfnv','#color');
{? exec('nd_kpw_reg','magdok_nag','PR') = 0
||
   {? _a = 'PW' || return(_kolor) || return(0) ?}
||
   {? ND.IST_TYP = 'P' & {? DK.KCN().KOD='' || 0 || exec('rw3','intrastat',DK.KCN().KOD)=1 ?}
   || {? _a = 'PW' || return('') || return(1) ?}
   |? ND.MAG().SKL = 'T'
   || {? _a = 'PW' || return('') || return(1) ?}
   || {? _a = 'PW' || return(_kolor) || return(0) ?}
   ?}
?}


\dk_masan_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem DK.MASAN
::   WY: kolor
::  OLD: \dk_masan_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dk_masan_pr','magdok_poz')
|| return('')
|| return(exec('findfnv','#color'))
?}


\dk_masan_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja DK.MASAN
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \dk_masan_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('nd_kpw_reg','magdok_nag','PR')
||
   _kodt:=DK.KCN().KOD;
   _kodt=''
      |
   _kodt<>'99500000'
      &
   _kodt<>'' & exec('find_sl','intrastat','188',_kodt)=0
?}


\dk_ilujm_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem DK.ILUJM
::   WY: kolor
::  OLD: \dk_ilujm_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dk_ilujm_reg','magdok_poz','PW')


\dk_ilujm_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja DK.ILUJM
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \dk_ilujm_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dk_ilujm_reg','magdok_poz','PR')


\dk_ilujm_reg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: warunki na wyswietlenie lub redagowanie pola DK.ILUJM
::   WE: _a - 'PW' - dla funkcji przed wyswietleniem, 'PR' - dla funkcji przed redakcja
::   WY: _a = 'PW' - kolor lub ''
::          = 'PR' - 1 - redakcja dozwolona, 0 - wpp
::  OLd: \dk_ilujm_reg/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_kolor:=exec('findfnv','#color');
{? exec('dk_masan_pr','magdok_poz')=0
||
   {? _a = 'PW' || return(_kolor) || return(0) ?}
||
   {? ND.IST_TYP='P' & DK.KCN().JU<>null
   ||
      {? _a='PW' || return('') || return(1) ?}
   ||
      {? _a='PW' || return(_kolor) || return(0) ?}
   ?}
?}


\dk_wf_reg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: warunki na wyswietlenie lub redagowanie pola DK.WF
::   WE: _a - 'PW' - dla funkcji przed wyswietleniem, 'PR' - dla funkcji przed redakcja
::   WY: _a = 'PW' - kolor lub ''
::          = 'PR' - 1 - redakcja dozwolona, 0 - wpp
::----------------------------------------------------------------------------------------------------------------------
_kolor:={? DK.WF=0 || exec('findfnv','#color') || exec('findfnrd','color') ?};
_reg:=0;
{? exec('nd_kpw_reg','magdok_nag','PR')
||
   _reg:=exec('find_sl','intrastat','188',DK.KCN().KOD)=0
?};
{? _reg=0
||
   {? _a='PW' || return(_kolor) || return(0) ?}
||
   {? _a='PW' || return('') || return(1) ?}
?}


\dk_wf_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem DK.WF
::   WY: kolor
::  OLD: \dk_wf_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dk_wf_reg','magdok_poz','PW')


\dk_wf_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja DK.WF
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \dk_wf_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dk_wf_reg','magdok_poz','PR')


\dk_ws_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem DK.WS
::   WY: kolor
::  OLD: \dk_ws_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dk_ws_reg','magdok_poz','PW')


\dk_ws_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja DK.WS
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \dk_ws_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dk_ws_reg','magdok_poz','PR')


\dk_ws_reg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: warunki na wyswietlenie lub redagowanie pola DK.WS
::   WE: _a - 'PW' - dla funkcji przed wyswietleniem, 'PR' - dla funkcji przed redakcja
::   WY: _a = 'PW' - kolor lub ''
::          = 'PR' - 1 - redakcja dozwolona, 0 - wpp
::  OLD: \dk_ws_reg/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_kolor:={? DK.WS=0 || exec('findfnv','#color') || exec('findfnrd','color') ?};
{? exec('nd_wd_reg','magdok_nag','PR')=0
||
   {? ND.IST_TYP<>''
         &
      exec('find_sl','intrastat','189',DK.KCN().KOD)=0
         &
      (
         exec('find_sl','intrastat','190',DK.KCN().KOD)
            |
         exec('find_sl','intrastat','191',DK.RTRANSAK)
      )
   ||
      {? _a='PW' || return('') || return(1) ?}
   ||
      {? _a='PW' || return(_kolor) || return(0) ?}
   ?}
||
   {? exec('find_sl','intrastat','189',DK.KCN().KOD)
   ||
      {? _a='PW' || return(_kolor) || return(0) ?}
   ||
   {? _a='PW' || return('') || return(1) ?}
   ?}
?}


\bl_dk_wyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Wartosc poczatkowa pola DK.WYD
::  OLD: \bl_dk_wyd/dokmag.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.ZL<>null()
|| ND.WYD
|| null()
?}


\dkw_pred
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: Przed redakcja pola WYD na pozycjach dokumentow magazynowych.
::   WY: 0/1
::  OLD: \dkw_pred/polap.fml
::----------------------------------------------------------------------------------------------------------------------
_prod:=exec('tte_lic','tte');
{? XINFO.SLWYDZIA=null()
|| 0
|? ND.WYD<>null()
|| DK.WYD:=ND.WYD;
   0
|| XINFO.SLWYDZIA();
   {? DK.ZL<>null()
   ||
      {? ND.TYP().WYR='T'
      || 0
      |? _prod='N'
      || 1
      || 1
      ?}
   || DK.WYD:=null();
      ND.TYP().ZLEC='T'
   ?}
?}


\dkw_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: Po redakcji pola WYD na pozycjach dokumentow magazynowych.
::   WY: 0/1
::  OLD: \dkw_po/polap.fml
::----------------------------------------------------------------------------------------------------------------------
_prod:=exec('tte_lic','tte');
{? _prod='T' & (DK.N().TYP().ZLEC='T' | TYPYDOK.ZLEC='O' & DK.ZL<>null())
|| {? DK.ZL<>null()
   ||
      {? DK.ZL().KTM=DK.M & DK.ZL().JORG=DK.WYD
      || 1
      || exec('chk_wyd','magdok_nag',DK.WYD,DK.ZL,1)
      ?}
   ?}
|? TYPYDOK.ZLEC='N' | TYPYDOK.ZLEC='O' & DK.ZL=null() | _prod='N'
|| 1
?}


\pwmj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed wyswietleniem pol dla jednostek dodatkowych (pozycje magazynowe)
::  OLD: \pwmj2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+BEER.MMJM)='T' | ~BEER.DISP | DK.M().J2<>null()
|| ''
|| exec('findfnv','#color')
?}


\prmj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja pol dla jednostek dodatkowych (pozycje magazynowe)
::  OLD: \prmj2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_R:=fld();
_cur:=cur_afld();

{? 'WS2 J2 IL2 C2'*_cur || exec('ustawprz','magdok_poz',DK.M,DK.JM) ?};

{? DK.M().J2<>null() & _cur='J2' | (_cur='WS2' & DK.PLUS='N')
|| 0
|? DK.M().J2<>null() & 'WS2 IL2'*_cur
|| {? ~BEER.ORD & _cur='WS2' || 0 || 1 ?}
|? (DK.N().MAG().PAL='T' & (DK.PLUS='T' | ~(';AR'*DK.T2>1) | DK.T2='A' & _cur='IL2')) | BEER.REORG
|| 0
|? HELP.POP=1 & exec('czyw_bad','statexam')
|| 0
|? _cur<>'J2' & DK.M().J=DK.J2
|| 0
|| {? _cur='J2' & DK.N().TYP().P='N' & (1+DK.N().MAG().TYP)='D'
   || exec('pr_il','magdok_poz');
      exec('po_il','magdok_poz',,,0);
      win_disp()
   ?};

   {? DK.T2='A' & {? JM.f_active() || JM.f_size<=1 || 1 ?}
   || 0
   |? _cur='WS2' & DK.T2='A'
   || 0
   |? (BEER.MMJM+1)='1'
   || BEER.IL22:=DK.IL2;
      'WS2 J2 IL2'*_cur
   || (1+BEER.MMJM)='T'
   ?}
?}


\pomj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pol dla jednostek dodatkowych (pozycje magazynowe)
::   WE: [_a] - pomijac ponowne przeliczenie 0(domyslnie)-nie, 1-tak
::  OLD: \pomj2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

{? cur_afld()='J2' & (DK.T2='A' | DK.T2='R')
|| _ws2:={? DK.N().TYP().DS='T'
         || exec('prz','jm',DK.M,DK.M().J,DK.J2)
         || exec('prz','jm',DK.M,DK.J2,DK.M().J)
         ?};
   {? DK.T2='A'
    | (DK.T2='R' & DK.WS2=0)
    | (DK.T2='R' & DK.WS2<>_ws2 & _ws2<>0
     & FUN.ask('Współczynnik przeliczenia jest różny\nod przypisanego w przelicznikach jednostek.\nCzy zamienić?'@))
   || DK.WS2:=_ws2
   ?}
|? cur_afld()<>'J2'
|| _a:=1
?};
{? ~BEER.ORD || BEER.ORD:=2 ?};

{? 'WS2 IL2'*cur_afld() & ~exec('itsPositive','#field',0)
|| 0
|? 'WS2 IL2 IL'*cur_afld() & DK.M().J2<>null()
|| exec('oblJMG','jm',DK,cur_afld(),DK.PLUS='T');
   {? cur_afld()='IL2'
   || {? DK.PLUS='T'  || exec('ist_wart_dk','magdok_poz',1) ?};
      _ok:=0;
      {? ~_a
      || _wpr_r:=DPOZ.WPR_R;
         DPOZ.WPR_R:=DK.IL;
         _ok:=~exec('po_il','magdok_poz',1);
         DPOZ.WPR_R:=_wpr_r
      ?};
      {? ~_a & _ok & exec('get','#params',600102,2)='T'
      || exec('pomj2','magdok_poz',1)
      ?}
   ?};
   BEER.IL22:=DK.IL2;
   1
|? (BEER.MMJM+1)='1'
||
   {? DK.M().J=DK.J2
   || _dokl_s:=_dokl_m:=exec('jaka_dok_m','jm',DK.M)
   || _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
      _dokl_m:=exec('jaka_dok_m','jm',DK.M)
   ?};

   {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
:: zmiana wspolczynnika przeliczenia
   {? cur_afld()='WS2'
   || {? DK.M().J=DK.J2 || roundmet(BEER.MDOKL) ?};
      _newil2:=DK.IL*DK.WS2 $ _dokl_s;
      {? DK.N().MAG().PAL<>'T' & _newil2<>DK.IL2
      || _wyn:=FUN.ask('Zmieniono współczynnik przeliczenia.\nIlość w jednostce sprzedaży zostanie przeliczona.'@);
         {? _wyn
         || DK.IL2:=_newil2;
            BEER.IL22:=_newil2
         ?}
      || _wyn:=1
      ?}
   || _wyn:=1
   ?};

   {? _wyn & DK.N().MAG().PAL<>'T' & DK.IL2>0 & DK.IL2<>BEER.IL22
    & (_wyn:={? DK.IL<>0
             || FUN.ask('Zmieniono ilość w jednostce sprzedaży.\nIlość magazynowa zostanie przeliczona.'@)
             || 1
             ?})
   || DK.IL:={? DK.WS2 || DK.IL2/DK.WS2 || 0 ?} $ _dokl_m
   ?};
   {? _wyn & DK.IL>0 & cur_afld()<>'IL2'
   || DK.IL2:=DK.IL*DK.WS2 $ (_dokl_s+1);
      {? DK.M().J=DK.J2 || roundmet(BEER.MDOKL) ?};
      DK.IL2:=DK.IL2 $ _dokl_s
   ?};
   {? _wyn || _wyn:={? DK.IL2>0 || exec('po_il','magdok_poz',1) || 1 ?} ?};
   roundmet(5);
   {? _wyn | BEER.IL22=0 || BEER.IL22:=DK.IL2 ?};
   _wyn;
   1
|| _dokl_m:=exec('jaka_dok_m','jm',DK.M);
   _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
   {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
   _oldil2:=DK.IL2;
   roundmet(BEER.MDOKL);
   DK.IL2:=DK.IL2$_dokl_s;
   roundmet(5);
   {? _oldil2<>DK.IL2
   || FUN.info('Ze względu na dokładność i sposób przybliżenia\n'
       'ilość w jednostce dodatkowej została zmieniona.'@)
   ?};
   _newil:=DK.IL2*DK.WS2 $ _dokl_m;
   {? ~DK.IL | (BEER.IL22<>DK.IL2 & _newil<>DK.IL & 'IL2 WS2'*cur_afld()
     & FUN.ask('Ilość wyliczona wg jednostki dodatkowej jest różna od ilości.\nCzy zmienić ilość?'@))
   || DK.IL:=_newil;
      {? DK.PLUS='T'  || exec('ist_wart_dk','magdok_poz',1) ?}
   ?};

   _ok:=0;
   {? ~_a
   || _wpr_r:=DPOZ.WPR_R;
      DPOZ.WPR_R:=DK.IL;
      _ok:=~exec('po_il','magdok_poz',1);
      DPOZ.WPR_R:=_wpr_r
   ?};
   {? ~_a & _ok & exec('get','#params',600102,2)='T'
   || exec('pomj2','magdok_poz',1)
   ?};
   BEER.IL22:=DK.IL2;
   1
?}


\ustawprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: ustawia zmienna BEER.MMJM
::   WE: [_a] - ref indeksu materialowego
::       [_b] - ref jednostki miary
::  OLD: \ustawprz/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0
|| BEER.JMZ:=exec('get','#params',400999,2)='T';
   BEER.MMJM:='NN0';
   BEER.TAB:='DK';
   _kod:=exec('get','#params',400000,2);
   {? _kod*'MG' & ~(';KR+;KR-;INW+;INW-;'*(';'+ND.TYP().T+';'))
   || {? ND.TYP().P='T' & 'RA'*(_rodz:=exec('get','#params',400001,2))
      || BEER.MMJM:='T'+_rodz+'0'
      |? ND.TYP().P<>'T' & ND.TYP().DS<>'T' & 'RA'*(_rodz:=exec('get','#params',400002,2))
      || BEER.MMJM:='T'+_rodz+'0'
      |? ND.TYP().P<>'T' & ND.TYP().DS='T' & 'RA'*(_rodz:=exec('get','#params',400003,2))
      || BEER.MMJM:='T'+_rodz+'1'
      ?}
   ?}
|? _a<>null
|| _jmg:=exec('FindAndGet','#table',M,_a,,"J2",null());
   _dom:=null();
   JM.win_dict('WERF');
   JM.f_clear();
   JM.index('KOD');
   JM.prefix();
   JM.f_set('KOD,NAZ',,,);
   {? _jmg<>null()
   || _dom:=_jmg
   |? (1+(1-BEER.MMJM))='A' & JM.f_first()
   || {!
      |? {? exec('prz','jm',_a,_b,JM.ref())<>0
         || {? exec('FindInSet','#table','MJM','JM',JM.ref(),DK.M,"MJM.DOM",,,0) || _dom:=JM.ref() ?};
            JM.f_next()
         || JM.f_del()
         ?}
      !}
   |? JM.f_first()
   || {!
      |? {? exec('FindInSet','#table','MJM','JM',JM.ref(),DK.M,"MJM.DOM",,,0) || _dom:=JM.ref() ?};
         _dom=null() & JM.f_next()
      !}
   ?};
   _ile:=JM.f_size();
   {? _jmg<>null()
   || DK.T2:='M';
      DK.J2:=_jmg;
      {? DK.WS2=0 & ~(DK.PLUS='N' & DK.IL>0 & DK.IL2=0)
      || DK.WS2:=exec('oblWSP','jm',DK.M)
      ?}
   |? (1+BEER.MMJM)='T'
   || {? ~_ile  || BEER.MMJM:='N'+(1-BEER.MMJM)
      |? _ile=1 || JM.f_first(); DK.J2:=JM.ref(); DK.WS2:=exec('prz','jm',_a,_b,JM.ref())
      |? (DK.J2=null | (DK.T2='A' & _ile<=2 & DK.J2<>DK.M().J))
       & exec('FindInSet','#table','MJM','JM',DK.M().J,DK.M)<>null
      || _ws2:=DK.WS2;
         DK.J2:={? _dom<>null() || _dom || exec('FindInSet','#table','MJM','JM',DK.M().J,DK.M,"MJM.JP",,,null()) ?};
         DK.WS2:={? DK.N().TYP().DS='T'
                 || exec('prz','jm',DK.M,DK.M().J,DK.J2)
                 || exec('prz','jm',DK.M,DK.J2,DK.M().J)
                 ?};
         {? DK.T2='A' & _ws2<>DK.WS2 || exec('pomj2','magdok_poz') ?}
      |? (DK.J2=null | (DK.T2='A' & _ile<=2 & DK.J2<>DK.M().J & DK.N().MAG().PAL<>'T'))
       & exec('FindInSet','#table','MJM','JP',DK.M().J,DK.M)<>null
      || _ws2:=DK.WS2;
         DK.J2:={? _dom<>null() || _dom || exec('FindInSet','#table','MJM','JP',DK.M().J,DK.M,"MJM.JM",,,null()) ?};
         DK.WS2:={? DK.N().TYP().DS='T'
                 || exec('prz','jm',DK.M,DK.M().J,DK.J2)
                 || exec('prz','jm',DK.M,DK.J2,DK.M().J)
                 ?};
         {? DK.T2='A' & _ws2<>DK.WS2 & ~do_state() || exec('pomj2','magdok_poz') ?}
      || {? DK.J2=null || DK.J2:=DK.M().J; DK.WS2:=1 ?}
      ?}
   ?}
|? _a=null()
|| JM.win_dict('WERF');
   JM.f_clear();
   JM.index('KOD');
   JM.prefix();
   JM.f_set('KOD,NAZ',,,)
?}


\blmt2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: blankuje typ przeliczenia jednostki dodatkowej (pozycje magazynowe)
::  OLD: \blmt2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
1+(1-BEER.MMJM)


\pw_dk_warz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2008]
:: OPIS: przed wyswietleniem DK.WARZ
::   WY: kolor
::  OLD: \pw_dk_warz/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh();
_wyn:={? (DK.N().MAG().TYP*'EWI') & ND.TYP().DN='N' & DK.PLUS='T' || '' || exec('findfnv','#color') ?};
ND.cntx_pop();
_wyn


\pr_dk_warz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2008]
:: OPIS: przed redakcja DK.WARZ
::   WY: kolor
::  OLD: \pr_dk_warz/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh();
_wyn:=(DK.N().MAG().TYP*'EWI') & ND.TYP().DN='N' & DK.PLUS='T';
ND.cntx_pop();
_wyn


\po_dk_warz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2008]
:: OPIS: po redakcji DK.WARZ
::   WY: kolor
::  OLD: \po_dk_warz/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.WARZ<0 || FUN.emsg('Wartość zakupu nie może być ujemna.'@); 0 || DK.WARZ:=DK.WARZ$2; 1 ?}


\dk_kcn_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: przed wyswietleniem DK.KCN
::  OLD: \dk_kcn_pw/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.N().MAG().SKL='T' | DK.N().IST_TYP<>''
|| ''
|| exec('findfnv','#color')
?}


\dk_be_kcn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Przed redakcji pola KCN tabeli DK
::  OLD: \dk_be_kcn/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.N().MAG().SKL='T' | DK.N().IST_TYP<>''
||
   {? DK.KCN=null
   || DK.KCN:=exec('daj_cn_ref','sklad',DK.M,DK.N().D)
   ?};
   1
?}



\dk_ae_kcn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Po redakcji pola KCN tabeli DK
::  OLD: \dk_ae_kcn/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.KCN || exec('uzup_cnm','sklad',DK.M,DK.KCN,DK.N().D) ?};
{? DK.KCN<>null & DK.N().IST_TYP=''
||
   {? DK.KP<>''
   || DK.CLO:=exec('daj_clo','sklad',DK.M,DK.N().D,DK.KP,DK.KCN().KOD)
   ||
::    probujemy podpowiedziec kraj
      _kraj:='';
      _clo:=null;
      _dat:=DK.N().D;
      CLO.cntx_psh();
      CLO.index('CNKPDOD');
      CLO.prefix(DK.KCN);
      {? CLO.first()
      || {!
         |? {? CLO.DATA_OD<=_dat & CLO.DATA_DO>=_dat | CLO.DATA_OD<=_dat & CLO.DATA_DO=date(0,0,0)
            || {? _kraj=''
               || _kraj:=CLO.KP;
                  _clo:=CLO.ref()
               || _kraj:='~~';
                  _clo:=null
               ?}
            ?};
            _kraj<>'~~' & CLO.next()
         !}
      ?};
      CLO.cntx_pop();
      {? _kraj<>'~~'
      || DK.KP:=_kraj;
         DK.CLO:=_clo
      ?}
   ?}
|| DK.CLO:=null;
   INTRAST.JU:=DK.KCN().JU;
   _kodt:=DK.KCN().KOD;
   _null:=1;
   {? ND.IST_TYP='P'
   ||
      _null:=0;
      {? _kodt<>''
            &
         exec('rw3','intrastat',_kodt)=0
      ||
         _null:=1
      ?}
   ?};
   {? _null || DK.WD:='' || DK.WD:=ND.WD ?};
   {? _null || DK.RTRANSAK:='' || DK.RTRANSAK:=ND.RTRANSAK ?};
   {? _null || DK.RTRANSPO:='' || DK.RTRANSPO:=ND.RTRANSPO ?};
   {? ND.MAG().SKL<>'T'
   ||
      {? DK.PLUS='T'
      || {? DK.KP='' || exec('blank_kp','magdok_wspolne',DK) ?}
      |? ND.IST_TYP='P'
      || {? _null || DK.KP:='' |?  DK.KP='' || exec('blank_kp','magdok_wspolne',DK) ?}
      |? ND.TYP().UE='T'
      || {? ND.F='N' & DK.KP='' || exec('blank_kp','magdok_wspolne',DK) ?}
      || exec('blank_kp','magdok_wspolne',DK)
      ?}
   ?};
   {? exec('dk_masan_pr','magdok_poz')=0 || DK.MASAN:=0 ?};
   {? exec('dk_ilujm_pr','magdok_poz')=0 || DK.ILUJM:=0 ?};
   {? exec('dk_wf_pr','magdok_poz')=0 || DK.WF:=0 ?};
   {? exec('dk_ws_pr','magdok_poz')=0 || DK.WS:=0 ?};
   exec('set_efld_opt','magdok_poz');
   win_disp()
?};
1


\dk_clo_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Przed redakcji pola CLO tabeli DK
::  OLD: \dk_clo_be/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.KCN<>null & DK.KP<>''
|| 1
|| 0
?}


\dk_ae_scc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Po redakcji pola SCC tabeli DK
::  OLD: \dk_ae_scc/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
_cwal:=$('DK.SCC');
_krs:=$('DK.N().SCKRS');

_cen:=$('DK.C');

_form:={? DK.PLUS='T'
       || $('exec(\'war_mag\',\'magdok_poz\')')
       || $('exec(\'obl_wars\',\'magdok_poz\')')
       ?};

_pln:=_cwal()*_krs() $2;

_cen():=_pln; _form()


\dk_afifo_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [12.30]
:: OPIS: wartosc poczatkowa DK.AFIFO
::  OLD: \dk_afifo_b/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
DK.AFIFO:={? DK.N().MAG().PAL<>'T' || DK.N().TYP().AFIFO || '' ?}


\pwdk_sce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem kodu identyfikacyjnego
::  OLD: \pwdk_sce/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_edit:=(2+cur_kwin())='e_';
{? _edit & (1+DK.N().MAG().TYP)='D' & DK.N().MAG().PAL='N' & DK.M<>null & (';DAPZ'*DK.M().IDMOB)>1
|| DK.win_efml(DK.win_edit('?'),,'SCEAN',,'ICON_BEFORE',"'xwin16.png:167'");
   ''
|? _edit
|| DK.win_efml(DK.win_edit('?'),,'SCEAN',,'ICON_BEFORE',"''");
   exec('findfnv','#color')
|| ''
?}


\prdk_sce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja kodu identyfikacyjnego
::  OLD: \prdk_sce/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+DK.N().MAG().TYP)='D' & (';FL'*DK.AFIFO)>1 & DK.N().TYP().P<>'T' & (';APZ'*DK.M().IDMOB)>1 & DK.DOST=date(0,0,0)
|| 1
|| 0
?}


\f3dk_sce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: klawisz F3 dla redakcja kodu identyfikacyjnego
::  OLD: \f3dk_sce/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('addscean','kody_kresk',2);
~~


\podk_sce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji kodu identyfikacyjnego
::  OLD: \podk_sce/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.SCEAN<>''
|| _ok:=0;
   SLD.cntx_psh();
   SLD.index('SCEAN');
   SLD.prefix(DK.SCEAN,DK.SCEAN,DK.N().MAG);
   {? SLD.first()
   || {!
      |? _ok:=SLD.IL>0;
         ~_ok & SLD.next()
      !}
   ?};
   SLD.cntx_pop();
   {? ~_ok
   || FUN.info('Brak niezerowych dostaw dla podanego kodu identyfikacyjnego: %1.'@[DK.SCEAN]);
      0
   || 1
   ?}
|| 1
?}


\ae_dk_ilb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: po redakcja DK.IL_B
::  OLD: \ae_dk_ilb/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? DK.IL_B<0
|| FUN.info('Należy podać ilość większą od zera.'@);_wyn:=0
?};
{? _wyn & DK.IL_B>DK.IL
|| FUN.info('Ilość braków nie może być większa od ilości.'@); DK.IL_B:=DK.IL; _wyn:=0
?};
{? DK.IL_B=0
|| DK.BRAKI_R:=null()
?};
:: Rodzaj braku (kooperacja)
{? DK.IL_B>0 & exec('get','#params',500635,2)='T'
|| DK.efld_opt(DK.win_edit('?'),'mark=1',,'BRAKI_R')
|| DK.efld_opt(DK.win_edit('?'),'mark=0',,'BRAKI_R')
?};
_wyn


\bl_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wartość początkowa pola DK_L.DK
::  OLD: \bl_dk/ean.fml
::----------------------------------------------------------------------------------------------------------------------
DK.ref()


\poz_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wyswietla pozycje dokumentu z naglowka
::   WE: [_a] - =0-wolać ND.r_lock i ND.r_unlock , =1-wpp
::       [_b] - DK.uidref(), na którym ma stanąć selektor
::  OLD: \poz_dok/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=0 ?};
{? var_pres('_b')<>type_of('')
|| _b:=''
?};
BADP.win_sopt('WERDKR','select_record_checkbox=0');

BEER.KRAJ_VAT:=ND.KRAJ_VAT;
POMOC.OPAK_MJS:='D';
BEER.MENU_PTH:='MR';
BEER.DISP:=0;
SCRP.TMG:=1;
:: zerowanie wolnych pol
EANX.TW:=date(0,0,0);
EANX.LOKP:='';
ZMIENNE.DK_C:='';
ATR.MJS:='DK';
_lock:=0;
ND.get();
:: wyszarzanie akcji Zakończ na pozycjach dla zakończonych dokumentów
{? ND.STAT_REJ<>'N' || _gray:='Z' || _gray:='' ?};
{? ND.MAG().IL='T'  || _gray+='N(K)' ?};
{? ND.INN='T' & ND.TYP().INW<>'N' || _gray+='T' ?};
:: dokument powiązany z wyposażeniem
_dk:=exec('FindInSet','#table','DK','DOKMAG',1,ND.ref());
{? _dk<>null() & exec('FindInSet','#table','KARO','GENDK',$_dk,,,1) || _gray:='P'+_gray ?};

DK.fld_fml('C','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $DK.M().DOKL_C || $ST.DOKL_C ?}+','+{? ND.MAG().IL='T' || 'empty=1' || 'empty=0' ?}");
DK.fld_fml('WAR','DISPLAY_FORMAT',"{? ND.MAG().IL='T' || 'empty=1' || 'empty=0' ?}");
SUM.fld_fml('DK_WAR','DISPLAY_FORMAT',"{? ND.MAG().IL='T' || 'empty=1' || 'empty=0' ?}");

_no_et:={? ~exec('isDEFetyk','magazyn_mobi','DK') || 'N(T)' || '' ?};
_is_op:={? exec('stND2EANN','magazyn_mobi',ST.AR)='K' || 'DAPURFŃON(E)' || '' ?};
_gray:=_is_op+_no_et+_gray;

{? ND.MAG().U='T' & ND.TYP().P='N'
|| DK.actions_grayed('WERU',_gray);
   DK.actions_grayed('WESU',_gray)
|| DK.actions_grayed('WER',_gray);
   DK.actions_grayed('WES',_gray)
?};
{? ND.MAG().SKL='T'
|| DK.actions_grayed('WERSC',_gray)
?};

BEER.REORG:=exec('FindInSet','#table','DK_LN','ZDOK',$ND.ref(),$ND.ref())<>null;
EANX.MG:=ND.MAG;
EANX.WYLZAL:={? EANX.MG().MWS='T' || 'N' || 'T' ?};

PROJZ.PROJEKTY:=ND.PROJEKTY;

:: okienko do szukania dla wymiarow
DK_L.win_patt('SZUK'+{? EANX.MG().PAL='N' || 'A' || 'P' ?});

{? {? ND.Z<>'T' & ~KHVZ.WIDOKI
   || _lock:=1; {? ~_a || exec('blok_nd','magdok_nag','T') || 1 ?}
   || 1
   ?}
||
   {? ND.Z='N' & BEER.REORG
   || FUN.info('Ponieważ na podstawie danego dokumentu została wygenerowana reorganizacja\n'
       'ograniczono możliwości modyfikacji pozycji dokumentu.'@)
   ?};
:: ustawienie bufora dla tabeli DK
   DK.index('DOKMAG');
   DK.prefix(ND.ref());
   {? DK.first()
   || {? _b<>''
      || DK.seek(_b)
      ?};
      DK_L.index('DK');
      DK_L.prefix(DK.ref(),null);
      DK_L.first()
   || DK_L.index('DK');
      DK_L.prefix(null,null)
   ?};
   ND_Z.R_LOCK:='T';
   ND_Z.ND_REF:=$ND.ref();
   exec('ustaw_ww','eurusd','M');
   exec('ust_lw','eurusd',1);
:: ustawia zmienna BEER.MMJM - odpowiedzialna za stosowanie przelicznikow jednostek miar
   exec('ustawprz','magdok_poz');

   BEER.SZ:={? TYPYDOK.P='N' || 'S' || 'Z' ?};
   BEER.KP:='';
   BEER.MW:='M';
   TAZ.RAB_TYP:=ND.RAB_TYP;
   DISP.RAB:=ND.RAB;
   DISP.RABO:={? exec('czyrabp','ceny',TAZ.RAB_TYP) || '%' || ND.WAL().KOD ?};
   DISP.RABZTYP:=exec('rabztyp','ceny',TAZ.RAB_TYP);
   DK.index('DOKMAG');
   DK.prefix(ND.ref());
   {? BPMN.DISPLAY
   || _wer:='WER_POZ';
      DK.win_sel(_wer);
      exec('dk_p_ib','magdok_poz',_wer)
   || exec('dks_okna','magdok_poz')
   ?};
   _win_red:=exec('dkr_okna','magdok_poz',,0);
   exec('set_efld_opt','magdok_poz',_win_red);
   {? KHVZ.WIDOKI
   || _dictm:=M.win_dict('?');
      M.win_dict('SLO_M');
      _dictdkc:=DK_C.win_dict('?');
      DK_C.win_dict('WER')
   ?};
   {? _lock
   || exec('dk_sum','magdok_wspolne',ND.ref())
   || {? ~_a & ND.r_lock(1,1,1) || exec('dk_sum','magdok_wspolne',ND.ref()); ND.r_unlock() ?}
   ?};
   DK.hdr_sel();
   DK.hdr_sel(' w magazynie: %1'@[ND.MAG().SYM]);
   {? ~KHVZ.WIDOKI
   || DK.win_fml('WER',,'C',,'ICON_BEFORE',"exec('icon_cen','magdok_wspolne')");
      {? _b<> ''
      || DK.seek(_b);
         DK.select(,1,5,,,,1)
      || DK.select()
      ?};
      OPAK_N.r_unlock();
      {? ~KHVZ.WIDOKI
      || ND.cntx_psh(); DK.cntx_psh();
         win_disp();
         ND.cntx_pop(); DK.cntx_pop()
      ?};
:: usuwa filtr programowy dla jednostek dodatkowych
      JM.f_clear;
      JM.win_dict('WER');

      {? _lock & ~_a || ND.r_unlock() ?};
      ND_Z.R_LOCK:='N';
      ND_Z.ND_REF:='';
      DISP.WAR_SP:='N'
   ?};
   {? KHVZ.WIDOKI
   || M.win_dict(_dictm);
      DK_C.win_dict(_dictdkc)
   ?}
?};
PROJZ.PROJEKTY:=null();
BEER.REORG:=0;
POMOC.OPAK_MJS:='';
BEER.KRAJ_VAT:=null();
DK.fld_fml('C','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $DK.M().DOKL_C || $ST.DOKL_C ?}+','+'empty=0'");
DK.fld_fml('WAR','DISPLAY_FORMAT',"'empty=0'");
SUM.fld_fml('DK_WAR','DISPLAY_FORMAT',"'empty=0'");
''


\delete4dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Usuwa wszystkie ZPARS powiazane z dana pozycja dokumentu
::   WE: _a - DK.ref()
::       [_b] - INTEGER -  0 - usuwac tylko wtedy kiedy DK ma wypelnione pole ZPARN
::                              lub ZLIM(wtedy latwo odtworzyc ZPARS dla tego DK) [1] - zawsze usuwac
::   WY: 0 - porazka
::       1 - sukces
::  OLD: \delete4dk/zpars.fml
::----------------------------------------------------------------------------------------------------------------------
_dk:=_a;

_mode:=1;
{? var_pres('_b')=type_of(0)
|| _mode:=_b
?};

_result:=0;
_can_continue:=0;

ZGP.cntx_psh();
ZLIM.cntx_psh();
DK.cntx_psh(); DK.clear();
ZPARS.cntx_psh();
ZPARS.index('SQLDOK');
{? DK.seek(_dk)
||
   _can_continue:=1;
   {? _mode=0
   || {? DK.PARTIA<>null()
      || _can_continue:=1
      |? DK.ZLIM<>null()
      ||
::       Jesli na dokumencie nie wskazana jest partia ale wskazany limit to byc moze uda sie dotrzec do partii
::       (pod warunkiem ze przewodnik ma tylko jedna partie)
         exec('openmask','zl_common',DK.ZL);
         _zgh:=DK.ZLIM().ZGP().NRZLP;
         {? _zgh<>null()
         ||
            ZPARN.cntx_psh();
            ZPARN.index('ZGH');
            ZPARN.prefix(_zgh);
            {? ZPARN.size()=1 & ZPARN.first()
            || _can_continue:=1
            ?};
            ZPARN.cntx_pop()
         ?}
      || _can_continue:=0
      ?}
   ?};
   {? _can_continue>0
   ||
      ZPARS.prefix($_dk);
      {? ZPARS.first()
      || {!
         |?
            _can_continue:=exec('delete','magdok_partie',ZPARS.ref());
            ZPARS.next() & _can_continue>0
         !}
      ?}
   ?}
?};
ZLIM.cntx_pop();
ZPARS.cntx_pop();
DK.cntx_pop();
ZGP.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\dk_k_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: usuwa koszt dla pozycji dokumentu magazynowego,
::       jesli dokument jest rozchodowy i koszt pochodzi z dostawy to rowniez aktualizuje rozliczenie kosztu
::       dla dostawy
::   WY: wynik del()
::  OLD: \dk_k_del/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAP_K.DK_KSQL<>''
|| DK.cntx_psh();
   DK.use('dokma'+(8+FAP_K.DK_KSQL+3));
   _il_r:=exec('FindAndGet','#table',DK,FAP_K.DKSQL,,"IL",0);
   DK.cntx_pop();
   _w_r:=FAP_K.WB;
   FAP_K.cntx_psh();
   FAP_K.use(8+FAP_K.DK_KSQL); FAP_K.prefix();
   {? FAP_K.seek(FAP_K.DK_KSQL) || FAP_K.IL_R-=_il_r; FAP_K.W_R-=_w_r; FAP_K.put() ?};
   FAP_K.cntx_pop()
?};
FAP_K.del()


\dk_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: podczas usuwania pozycji dokumentu
::       ND.ref() w buforze
::   WE: _a - $DK.ref() lub $FAP.ref()
::       [_b] - 1-bezwzględne usunięcie 0(domyślnie) - nie
::  OLD: \dk_del/opakow.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

OPAK_P.index('DK');
OPAK_P.prefix(_a,'T');
{? ~_b & OPAK_P.first()
|| {!
   |? OPAK_P.cntx_psh();
      OPAK_P.clear();
      OPAK_P.DK:='';
      OPAK_P.put();
      OPAK_P.cntx_pop();
      OPAK_P.next()
   !}
?};
{? _b || OPAK_P.prefix(_a) || OPAK_P.prefix(_a,'N') ?};
{? OPAK_P.first()
|| {!
   |? POMOC.OPAK_N:=OPAK_P.OPAK_N;
      _del:=exec('opkp_del','opakow',0,'D');
      {? _del=0
      ||
         OPAK_P.cntx_psh();
         OPAK_P.clear();
         OPAK_P.DK:='';
         OPAK_P.put();
         OPAK_P.cntx_pop()
      ?};
      _del>1
   !}
?};
''


\karo_dk_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [12.10]
:: OPIS: Usuwanie powiazań do dk w KARO
::   WE: $DK.ref
::  OLD: \karo_dk_del/wypkaro2.fml
::----------------------------------------------------------------------------------------------------------------------
KARO.index('GENDK');
KARO.prefix(_a,);
{? KARO.first
||
   {!
   |?
      _ref:=KARO.ref(); _ok:=KARO.next();
      KARO.cntx_psh();
      KARO.clear();
      {? KARO.seek(_ref)
      ||
         KARO.GENDK:='';
         KARO.STATUS:='T';
         {? KARO.put() & KARO.TYP='W'
         || _rdk:=BIT.sqlint(KARO.SRDK);
            _ndk:=form(8+KARO.SRDK);
            _nr1:=exec('update','rezerwacje','KARO',KARO.ref(),KARO.MG,KARO.M,KARO.IL,KARO.SRDK,,,3);
            exec('aktu_rez','rezerwacje',KARO.M,_nr1,KARO.IL);
            exec('obl_stan','magazyn_stan',KARO.M,1,KARO.MG)
         ?}
      ?};
      KARO.cntx_pop();
      _ok
   !}
?};
_ref_dk:=exec('FindAndGet','#table','DK',_a,,,null());
{? _ref_dk<>null
||
   KARO.index('DK');
   KARO.prefix(_ref_dk);
   {? KARO.first
   ||
      {!
      |?
         _ref:=KARO.ref(); _ok:=KARO.next();
         KARO.cntx_psh();
         KARO.clear();
         {? KARO.seek(_ref) & KARO.DK=_ref_dk
         || KARO.DK:=null;
            KARO.put()
         ?};
         KARO.cntx_pop();
         _ok
      !}
   ?}
?};
~~


\istatr_nd2dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przepisuje cechy intrastat z naglowka dokumentu magazynowego do pozycji
::   WE: _a=1 - wyznaczyc DK.KCN,DK.KP
::       _a=2 - wyznaczyc DK.KCN, wyznaczać DK.KP jeżeli jest puste
::  OLD: \istatr_nd2dk/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=0 ?};

_kcn:=DK.KCN;
_clo:=DK.CLO;
_kp:=DK.KP;
{? ND.IST_TYP='P'
|| {? DK.KCN=null | _a=1 | _a=2
   || DK.KCN:=exec('daj_cn_ref','sklad',DK.M,DK.N().D)
   ?}
|| DK.KCN:=null()
?};
_kodt:=DK.KCN().KOD;
_null:=1;
{? ND.IST_TYP='P'
||
   _null:=0;
   {? _kodt<>''
         &
      exec('rw3','intrastat',_kodt)=0
   ||
      _null:=1
   ?}
?};
DK.KPW:=ND.KPW;
DK.WD:={? _null || '' || ND.WD ?};
DK.RTRANSAK:={? _null || '' || ND.RTRANSAK ?};
DK.RTRANSPO:={? _null || '' || ND.RTRANSPO ?};
{? ND.MAG().SKL<>'T'
||
   {? DK.PLUS='T'
   || {? DK.KP='' || exec('blank_kp','magdok_wspolne',DK) ?}
   |? ND.IST_TYP='P'
   || {? _null || DK.KP:='' |? DK.KP='' | _a=1 || exec('blank_kp','magdok_wspolne',DK) ?}
   |? ND.TYP().UE='T'
   || {? ND.F='N' & DK.KP='' || exec('blank_kp','magdok_wspolne',DK) ?}
   || exec('blank_kp','magdok_wspolne',DK)
   ?}
|| DK.KCN:=_kcn;
   DK.CLO:=_clo;
   DK.KP:=_kp
?};
{? ND.MAG().SKL<>'T'
|| {? DK.KCN<>null & DK.KP<>''
   || DK.CLO:=exec('daj_clo','sklad',DK.M,DK.N().D,DK.KP,DK.KCN().KOD)
   || DK.CLO:=null
   ?}
?}


\po_weru
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: ustawia prefiks dla okienka na zakladce - wszystkie pozycje magazynowe
::  OLD: \po_weru/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
DISP.WAR_SP:='N';
DK.index('DOKMAG');
DK.prefix(ND.ref());
1


\po_wesu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: ustawia prefiks dla okienka na zakladce - wszystkie pozycje zwiazane ze sprzedaza
::  OLD: \po_wesu/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
DISP.WAR_SP:='T';
DK.index('DOKZP');
DK.prefix(ND.ref(),0);
1


\dk_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: petla dla dolacz i pojedynczo dla popraw
::   WE:  [_a] 'd' - dolacz  <> 'd' - popraw
::        [_b]  '$FAP.ref'
::        [_c] 1-tylko korekta atrybutów dostawy 0(domyślnie)-nie
::  OLD: \dk_edit/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.MENU_PTH+='D';
{? _>=1 || {? type_of(_a)<>2 || _a:=-(1+menu_txt) ?} || _a:=-(1+menu_txt) ?};
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
_zmatr:={? var_pres('_c')=type_of(0) || _c || 0 ?};

ND.get();
_ok:=1;
ATR.M_ATRSQL:='';
_atrmjs:=ATR.MJS;
ATR.MJS:='DK';
BEER.ORD:=1;
{? _a='d'
|| EANX.PALR:=null();
   {? ND.MAG().PAL='T' & ND.TYP().P='N' & exec('FindInSet','#table','PAL','NOPAL',ND.MAG,'B',,,,null())<>null()
   || D_HELP.M:=''
   ?}
?};

{? _a<>'d' & DK.GROP<>null()
|| FUN.info('Pozycji powiązanych z grupą operacji nie można modyfikować.'@);
   _ok:=0
?};

{? (_a='d' & exec('chk_wyc','magdok_wspolne',ND.D,,,ND.T)=0)
||
   _msg:='W systemie jest niezamknięty arkusz inwentaryzacyjny\nz datą otwarcia późniejszą niż data dokumentu.\n'@;
   _msg+='\nPoprawianie pozycji niemożliwe.'@;
   FUN.info(_msg);
   _ok:=0
|?  (_a='p' & exec('chk_wyc','magdok_wspolne',ND.D,1,DK.M,ND.T)=0)
|| _msg:='W systemie jest zamknięty arkusz inwentaryzacyjny\nz datą otwarcia późniejszą niż data dokumentu.\n'@;
   _msg+='\nPoprawianie pozycji niemożliwe.'@;
   FUN.info(_msg);
   _ok:=0
?};

:: sprawdza, czy dokument nie powiazany z rejestracja akordu.
{? _ok=1
|| {? _a<>'d'
   || {? exec('has_zlgd_dk','magdok_wspolne',DK.ref())>0
      || FUN.info('Dokument wygenerowany na podstawie rejestracji robocizny.\n'
                  'Ograniczone możliwości edycji.'@)
      ?}
   ?};
   {? exec('has_zlgd_nd','magdok_wspolne',ND.ref())<>0
   || {? _a='d'
      || FUN.info('Dokument wygenerowany na podstawie rejestracji robocizny.\n'
                  'Zmiany na pozycjach dokumentu niemożliwe.'@);
         _ok:=0
      || {? exec('get','#params',8010,2,OPERATOR.USER)<>'T'
         || FUN.info('Brak uprawnień użytkownika do poprawiania cen na dokumentach raportujących produkcję.'@);
            _ok:=0
         ?}
      ?}
   ?}
?};
:: kontrola czy nie było korekty wartościowej dostawy
{? _ok=1 & ND.Z='T' & DK.PLUS='T' & DK.N().TYP().DN='T'
|| _cena_mag:=exec('cena_mag','ceny',DK.M,DK.RDK,DK.NDK,,DK.C,,,ND.D);
   {? DK.C<>_cena_mag
   || FUN.info('Wskazana pozycja została skorygowana wartościowo.\nPoprawianie pozycji niemożliwe.'@);
      _ok:=0
   ?}
?};

:: sprawdza czy nie bylo korekt wartosciowych dla dostawy
{? _ok=1
||
   _mat:=DK.M;
   _rdk:=DK.RDK;
   _ndk:=DK.NDK;
   _dat:=DK.N().D;
   ND.cntx_psh();
   DK.cntx_psh();
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   ||
      {!
      |?
         ND.use('nagdo'+ST.ODDZ+($OKR.ROK+2));
         DK.use('dokma'+ST.ODDZ+($OKR.ROK+2));
         DK.index('DK_SC');
         DK.prefix(ST.MAG,_mat,_rdk,_ndk,'T');
         {? DK.first()
         ||
            {!
            |?
               {? DK.N().TYP().DK='W' & DK.N().D>_dat || _ok:=0 ?};
               _ok=1 & DK.next()
            !}
         ?};
         OKR.next()
      !}
   ?};
   OKR.cntx_pop();
   DK.cntx_pop();
   ND.cntx_pop();

   {? _ok=0
   || FUN.info('Dla dostawy wystawiona została korekta wartościowa.\nPoprawianie pozycji niemożliwe.'@)
   ?}
?};

{? _ok=1
||
   M.cntx_psh();
   DK_L.cntx_psh();
   {? _a='d'
   || {! |? exec('dk_edit2','magdok_poz','d') !}
   || exec('ost_cena','ceny_dok',DK.M,DK.N().KH);
      {? _b<>''
      || exec('dk_edit2','magdok_poz',_a,_b)
      || exec('dk_edit2','magdok_poz',,,_zmatr)
      ?}
   ?};
   M.cntx_pop();
   DK_L.cntx_pop()
?};
ATR.MJS:=_atrmjs;
BEER.MENU_PTH-=1


\dk_edit2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: dolacz oraz popraw dla pozycji dokumentu magazynowego
::   WE: [_a] 'd' - dolacz  <> 'd' - popraw
::       [_b] $FAP.ref jeśli automatyczna wycena na podstawie dokumentu zakupu
::       [_c] 1-tylko korekta atrybutów dostawy 0(domyślnie)-nie
::   WY: 1-zakonczono i zatwierdzono edycje 0-nacisnieto ESC
::  OLD: \dk_edit2/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:=-(1+menu_txt) ?} || _a:=-(1+menu_txt) ?};
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
_zmatr:={? var_pres('_c')=type_of(0) || _c || 0 ?};

VAR_DEL.delete('__dk_l');
BEER.DISP:=2;
_wyn:=0;
{? ND.TYP().P='' || ND.get() ?};
ATR.FLAG_ED:=ND.TYP().KOOP='N' & ND.TYP().P='T' & (1+ND.MAG().TYP)='D' & ATR.CZY_ATR & ATR.EDIT;

_pomoc_mgr:=POMOC.MGR;
_d_help:=D_HELP.M;
_dk_c:=null();
_rozpak:=ND.MAG().PAL='T' & exec('isB_ROZP','magdok_palety');

XINFO.SLWYDZIA();
{? _a='d'
|| _prmat:=null;
   _prile:=0;
   DK.ZLIM:=null();
   DK.M_ZLIM:='';
   DK.PARTIA:=null();
   EANX.TW:=date(0,0,0);
   EANX.LOKP:='';
   EANX.EANL:=null;
   EANX.PALK:='';
   EANX.TPAL:='';
   EANX.PAL:=null;
   POMOC.RODZ:='T';HELP.POP:=0; HELP.IL:=0;HELP.IL2:=0;SUM.MWB:=0;DPOZ.OCZ:=0;
   {? ND.TYP().WYR='T' & ND.ZL<>null() & ND.ZL().KTM<>null()
   || D_HELP.M:=ND.ZL().KTM().KTM;
      POMOC.MGR:=ND.ZL().KTM().MGR
   ?};
   {? (POMOC.MGR<>null & POMOC.MGR().RODZ<>'T') | ND.MAG().MGR<>'T'
   || POMOC.MGR:=null
   ?};
   {? D_HELP.M<>''
   ||
      M.cntx_psh();
      M.index('ARODZ');
      M.prefix('T','T',D_HELP.M,D_HELP.M);
      {? ~M.first()
      ||
         POMOC.MGR:=null;
         D_HELP.M:=''
      || DK.M:=M.ref();
         ATR.M_ATR:=DK.M().M_ATR;
         ATR.FLAG:={? ATR.FLAG_ED & DK.M().M_ATR<>null() || 2 || 0 ?};
         {? ATR.FLAG_ED || {? DK.M().M_ATR || ATR.FLAG_ED:=2 ?} ?};
         {? DK.DK_C<>null() || DK.DK_C().M_ATR().SYM || DK.M().M_ATR().SYM ?};
         {? ATR.M_ATR().EDIT & ND.ZL().DK_C<>null() || _dk_c:=ND.ZL().DK_C ?}
      ?};
      M.cntx_pop()
   ?};
   ZMSLAPP.ZL7:='';
   {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():='' !};
   {? POMOC.MGR=null()
   || _mgrp:=Plugin.run('BLANK_GRPMAG_001','ND');
      POMOC.MGR:={? exec('be_z_mgr','magdok_poz') & var_pres('_mgrp')=type_of(null()) || _mgrp || null() ?};
      {? POMOC.MGR().RODZ<>'T' || POMOC.MGR:=null() ?}
   ?}
|| _prmat:=DK.M;
   _prile:=DK.IL;
   _prcen:=DK.C;
   _rozpak:=DK.ROZPAK;
   HELP.POP:=1; HELP.IL:=DK.IL; HELP.IL2:=DK.IL2;
   HELP.RDK:=DK.RDK; HELP.NDK:=DK.NDK; HELP.MOD_IND:=DK.M; POMOC.MGR:=DK.M().MGR;
   ATR.M_ATR:=DK.M().M_ATR;
   ATR.UZUP:=exec('wz_uzup','mat_atr',ATR.M_ATR);
   ATR.FLAG_ED:=ND.TYP().KOOP='N' & ATR.CZY_ATR & (1+ND.MAG().TYP)='D'
              & ATR.M_ATR().EDIT & (DK.PLUS='T' | DK.M().RODZ='U');
   ATR.FLAG:={? ATR.FLAG_ED & DK.M().M_ATR<>null() || 2 || 0 ?};
   {? ATR.FLAG_ED || {? DK.M().M_ATR || ATR.FLAG_ED:=2 ?} ?};
   exec('set_efld_opt','mat_atr',ATR.MJS);
   {? DK.ZL().NRPZL<>0 || ZMSLAPP.ZL7:=DK.ZL().SYM ?};
   {? DK.DK_C<>null() & DK.DK_C().M_ATR<>null()
   || DK.DK_C().M_ATR().SYM;
      {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():=($('DK.DK_C().WAR'+form(_i,-2,,'99')))() !}
   || {? ATR.M_ATR=null() || M_ATR.blank(0) ?};
      {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():='' !}
   ?};
   {? exec('czyurmob','magdok_wspolne',1) & DK.SCEAN<>'' & DK.M().IDMOB='A' & DK.DK_C=null() || ATR.SCEAN:=DK.SCEAN ?}
?};
ATR.ZPAR_ZGH:=null();
{? exec('zlec_party','zl_common',DK.ZL)>0 | ((exec('nd_is_rw','magdok_wspolne',DK.N)>0
   | exec('nd_is_zw','magdok_wspolne',DK.N)>0 | exec('nd_is_koop','magdok_wspolne',DK.N)>0)
   & exec('party_first','zl_link')<>null())
|| ATR.ZPARN_DK:=DK.PARTIA;
   ATR.ZPARN_RW:=DK.PARTIA
|| ATR.ZPARN_DK:=null();
   ATR.ZPARN_RW:=null()
?};

_nd_is_rp:=exec('nd_is_rp','magdok_wspolne',ND.ref())>0;
_nd_is_rw:=exec('nd_is_rw','magdok_wspolne',ND.ref())>0;
_nd_is_zw:=exec('nd_is_zw','magdok_wspolne',ND.ref())>0;
_nd_is_koop:=exec('nd_is_koop','magdok_wspolne',ND.ref())>0;

{? _nd_is_rp
||
:: Podpowiadam przewodnik tylko jesli pole z przewodnikiem redagowalne
   {? exec('zparn_zgh_be','magdok_poz')>0
   || ATR.ZPAR_ZGH:=DK.PARTIA().ZGH
   ?}
|? _nd_is_rw | _nd_is_zw
||
:: Otwarcie maski ZLIM
   exec('openmask','zl_common',DK.ZL);
:: Podpowiadam przewodnik tylko jesli pole z przewodnikiem redagowalne
   {? exec('zparn_zgh_be','magdok_poz')>0
   || ATR.ZPAR_ZGH:=DK.ZLIM().ZGP().NRPRZ
   ?}
|? _nd_is_koop
||
:: Ustalenie wartości pola przewodnika do poprawnego wyświetlania partii dla kooperacji
   {? DK.ZGP<>null()
   || ATR.ZPAR_ZGH:=DK.ZGP().NRPRZ
   ?}
?};

:: Czyszczenie pól grupa i indeks - jeżeli indeks nie występuje na zapotrzebowaniach zlecenia
{? DK.ZL<>null() & (_nd_is_rw | _nd_is_zw)
|| ZLIM.cntx_psh();
   ZLIM.index('ZMW');
   ZLIM.prefix(DK.ZL,DK.M);
   {? ~ZLIM.first()
   || POMOC.MGR:=null();
      D_HELP.M:=''
   || POMOC.MGR:=DK.M().MGR
   ?};
   ZLIM.cntx_pop()
|? (_nd_is_rw | _nd_is_zw)
|| POMOC.MGR:=null();
   D_HELP.M:=''
?};

ZLEC.DK_ZLSYM:='';
ZLEC.DK_ZGOPI:='';
ZLEC.DK_ZGSYM:='';
{? ND.TYP().KOOP='T'
|| ZLEC.DK_ZLSYM:=DK.ZL().SYM;
   ZLEC.DK_ZGOPI:=DK.ZGP().OPIS;
   {? DK.ZGP<>null()
   || ZLEC.DK_ZGSYM:=DK.ZGP().NRZLP().NRPRZ+' poz. '+$ZGP.NRP
   ?}
?};

_dk_m:=null();
{? ~exec('spr_zk','magdok_wspolne',1,1,_a,1)
|| 0
|? ND.TYP().UPRW='T' & _a='d' & ND.MAG().TYP*'DOST'
|| POMOC.MGR:=null;
   exec('dk_addu','magdok_poz')
|| _inf:='';
   _akord:=exec('has_zlgd_dk','magdok_wspolne',DK.ref())<>0 & ND.Z='T' & ~(ND.MAG().TYP*'EWI');
   _czy_akc:=ND.Z='T' | (';ZT'*ND.STAT_REJ)>1 | _zmatr;
   {? _a<>'d' & _czy_akc & ~(ND.INN='T' & ND.TYP().INW='I' & ND.TYP().P='T')
    & {? (ND.MAG().TYP*'EWI') || (_inf:=exec('czyref_c','magdok_wspolne',DK.M,ND.MAG,DK.C,$DK.ref()))=''; 1 || 1 ?}
    | _akord
   ||
::    poprawianie pozycji zaakceptowanego dokumentu albo niezaakceptowanej powiazanej z robocizna (tylko cena)
      {? ND.r_lock(1,1,1)
      || exec('poprzpoz','magdok_poz',_b,_akord,_zmatr,_inf<>'');
         ND.r_unlock()
      || {? FUN.ask('Dokument %1 obsługuje inny operator.\nCzy chcesz zobaczyć kto?'@[ND.SYM])
           & ND.r_lock()
         || ND.r_unlock()
         ?}
      ?}
   ||
      {? {? _a='d'
         || exec('mod_dok','magdok_nag')
         || {? DK.M().RODZ='U'
            || exec('mod_dok','magdok_nag',,1)
            || exec('mod_dok','magdok_nag',,,_inf)
            ?}
         ?}
      || {? _a='d'
         || DK.blank();
            DK.ROZPAK:=_rozpak;
            {? _rozpak || DK.AFIFO:=DK.N().TYP().AFIFO ?};
            M.index('ARODZ');
            M.prefix('T','T',D_HELP.M,D_HELP.M);
            {? M.first()
            ||
               DK.M:=M.ref();
               DK.JM:=M.J;
               {? DK.M().J2<>null()
               || DK.J2:=DK.M().J2;
                  DK.T2:='M';
                  DK.WS2:=exec('oblWSP','jm',DK.M)
               ?};
               {? (DK.N().MAG().TYP*'EWI')
               || DK.C:=exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D);
                  DPOZ.OCZ:=DK.C:=DK.C $DK.M().DOKL_C;
                  DK.WAR:=(DK.IL*DK.C)$2
               ?}
            ?};
            {? _dk_c<>null()
            || DK.DK_C:=_dk_c;
               {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():=($('DK.DK_C().WAR'+form(_i,-2,,'99')))() !}
            ?};
::          intrastat
            exec('istatr_nd2dk','magdok_poz')
         || _dk_m:=DK.M;
            exec('buf__dkl','magdok_poz',DK.ref())
         ?};
         {? ND.ZL<>null
         || DK.ZL:=ND.ZL;
            {? DK.DK_C=null() & ND.TYP().P='T' & ND.TYP().WYR='T'
            || DK.DK_C:=DK.ZL().DK_C;
               {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():=($('DK.DK_C().WAR'+form(_i,-2,,'99')))() !}
            ?}
         ?};
         {? ND.WYD<>null || DK.WYD:=ND.WYD ?};
::       zapamietanie materialu i ref-u pozycji
         HELP.MRSQL:={? _a='d' || '' || $DK.M+$DK.ref() ?};
::       zapamietanie ilosci na dk_l-u
         _czypdkl:={? _a='p'
                   || DK_L.index('DK');
                      DK_L.prefix(DK.ref(),null);
                      DK_L.first() & DK_L.size()=1 & DK_L.IL=DK.IL
                   || 1
                   ?};
         DISP.ZMREZ:=0;
         exec('set_efld_btn','magdok_poz');
         {? (1+ND.MAG().TYP)='D' & DK.PLUS='T' & DK.M().IDMOB='Z'
         || {? DK.ZL<>null() || DK.SCEAN:=DK.ZL().SCEAN || DK.SCEAN:='' ?}
         ?};
         _dkstats:=DK.STATS;
         _bescean:=DK.SCEAN;
         exec('set_efld_opt','magdok_poz');
         exec('set_efld_dk_tw','magdok_poz');
         {? (_wyn:=DK.edit("exec('chk_dk','magdok_poz')"))
         || _aescean:=DK.SCEAN;
            {? _a<>'d' & ND.MAG().PAL='T'
            || exec('dkc2pal','magdok_palety');
               exec('cen2pal','ceny_dok')
            ?};
            _ok:=0;
            exec('opdk_mod','opakow');
::          zmiana znacznika wyceny z kosztami
            {? _a<>'d' & _prcen<>DK.C || exec('delWYCdk','faktury_wspolne',$DK.ref()) ?};

::          Obsluga partii produkcyjnych
            TYPYDOK.cntx_psh();
            DK_C.cntx_psh();
            {? DK.ZL<>null() & _nd_is_rp
            ||
::             Jesli dokument klasy RP i partia zostala wybrana to przypisuje ZPARN na DK
               {? DK.DK_C().ZPARN<>null()
               || DK.PARTIA:=DK.DK_C().ZPARN
               ?}
            |? DK.ZL<>null() & _nd_is_rw
            ||
::             Jesli dokument klasy RW to przypisuje partie wybrana w oknie do DK
               DK.PARTIA:=ATR.ZPARN_RW
            |? DK.ZL<>null() & _nd_is_zw
            ||
::             Jesli dokument klasy ZW to przypisuje partie wybrana w oknie do DK
               DK.PARTIA:=ATR.ZPARN_RW
            |? DK.ZL<>null() & _nd_is_koop
            ||
::             Jesli dokument kooperacji to przypisuje partie wybrana w oknie do DK
               DK.PARTIA:=ATR.ZPARN_DK
            ?};
            DK_C.cntx_pop();
            TYPYDOK.cntx_pop();

            {? DK.N().Z='N'
            ||
               DK.MX:=DK.M().KTM; DK.NX:=DK.M().N;
               DK.KH:=DK.N().KH;
               DK.KH_ODB:=DK.N().KH_ODB;
               {? _a='d'
               || _ok:=DK.add()
               || {? DK.N().TYP().P='T' & ~(DK.N().TYP().DN='T' & DK.N().TYP().DK='N')
                  || DK.STATS:=_dkstats
                  ?};
                  _ok:=DK.put()
               ?};
               {? DK.PLUS='N'
               || _nrk:={? DK.M().J2<>null()
                        || exec('update','rezerwacje','DK',DK.ref(),ND.MAG,DK.M,DK.IL,DK.SRDK,,,,,,DK.IL2,DK.J2,DK.WS2)
                        || exec('update','rezerwacje','DK',DK.ref(),ND.MAG,DK.M,DK.IL,DK.SRDK)
                        ?};
                  exec('aktu_rez','rezerwacje',DK.M,_nrk,DK.IL)
               ?};
               _tmg:=1+ND.MAG().TYP;
               {? _tmg='D' & DK.AFIFO<>'' || _tmg:=DK.AFIFO ?};
               win_disp()
            ?};
::          korekta kodow identyfikacyjnych
            {? ND.TYP().P='T' || exec('korscean','kody_kresk',_bescean,_aescean,_a='d',_ok) ?};

::          wypelnienie DK_L wg EANX
            {? _ok & DK.N().MAG().SL='T'
            || {? _a='d'
               || exec('dk2dk_l','magdok_poz')
               || DK_L.index('DK');
                  DK_L.prefix(DK.ref(),null);
                  {? DK_L.first() & DK_L.size()=1 & _czypdkl
                  || DK_L.IL:=DK.IL;
                     exec('reoIL2','magdok_wymiary');
                     _ok:=DK_L.put()
                  ?}
               ?}
            ?};

::          dodanie badania lub odszukanie istniejącego
            {? DK.PLUS='T' & _ok
             & (_bads:=exec('FindInSet','#table','M_DOD','M_DOD',DK.M,exec('firma','ustawienia'),"M_DOD.BADSEH",,,null()))<>null
            || {? _a='d' & exec('get_par','#parametr',141)='T'
               || exec('addbadp','statexam',DK.ref(),DK.M,DK.DK_C)
               ?}
            ?};
            {? DK.ZGP<>null & DK.N().TYP().KOOP='T' & DK.N().TYP().P='T'
            || exec('akt_zgp_ilkoop','zl_koop',DK.ZGP)
            ?};
::          aktualizacja powiazan do zakupow
            {? _ok & DK.PLUS='T' & (_rr:=(DK.IL-exec('ilrdkfap','magdok_poz',$DK.ref())))<0
            || exec('aktdkfap','magdok_poz',$DK.ref(),_rr)
            ?};
::          [rr] zerowanie zmiennych by wynik byl prawidlowy
            _b_il:=HELP.IL;
            HELP.IL:=0; HELP.IL2:=0; HELP.RDK:=-1; HELP.NDK:='~~';
            exec('obl_stan','magazyn_stan',DK.M,1,ST.MAG);
            {? #_dk_m<>#DK.M & #_dk_m<>0
            || exec('obl_stan','magazyn_stan',_dk_m,1,ST.MAG)
            ?};
::          naliczenie opłat dodatkowych
            exec('actTAXS','oplaty_dod',DK.N().uidref(),DK.uidref(),DK.M,_dk_m);
            {? _ok
            ||
               {? _a='d'
               || exec('inf_dod','fakso',0,'dokma');
                  {? _nd_is_rp & exec('get','#params',500770,2)='T' & DK.PARTIA<>null()
                  ||
                     ZPARN.cntx_psh(); ZPARN.prefix();
                     {? ZPARN.seek(DK.PARTIA)
                     || {? ZPARN.IL>exec('get_ilosc_rp','zl_partie',ZPARN.ref())
                        || exec('split','zl_partie',DK.PARTIA,DK.IL)
                        ?}
                     ?};
                     ZPARN.cntx_pop()
                  ?}
               ?};

               {? DK.N().TYP().P='N'
               || {? BEER.M<>DK.M
                  ||
                     exec('utw_zk_tymc','zamsiw_wspolne');
                     exec('odt_zk_tymc','zamsiw_wspolne',-DK.IL)
                  |? _b_il<>DK.IL
                  || exec('utw_zk_tymc','zamsiw_wspolne');
                     __uzup_z(DK.M);
                     exec('odt_zk_tymc','zamsiw_wspolne',{? _b_il>DK.IL || -_b_il || -DK.IL ?})
                  ?};
                  _par:={? DK.N().TYP().Z='T'
                        || exec('get','#params',600800,2)
                        || 'W'
                        ?};
                  _rp:=exec('dk2zkn','zamsiw_rea',_par,DK.N,DK.ref(),DK.ZAM_RN,DK.ZAM_RP,DK.M,DK.IL,_prmat,_prile);
                  {? DK.ZAM_RP<>_rp
                  || DK.ZAM_RP:=_rp;
                     DK.ZAM_RN:={? _rp<>'' || exec('FindAndGet','#table',ZK_RP,_rp,,"$N",'') || '' ?};
                     DK.put(1)
                  ?}
               |? DK.N().TYP().P='T' & DK.N().TYP().Z='T'
               || _par:=exec('get','#params',600803,2);
                  _rp:=exec('dk2zdnag','zamdst_rea',_par,DK.N,DK.ref(),DK.ZAM_RN,DK.ZAM_RP,DK.M,DK.IL,_prmat,_prile);
                  {? DK.ZAM_RP='' & _rp<>''
                  || DK.ZAM_RP:=_rp;
                     DK.ZAM_RN:=exec('FindAndGet','#table',ZD_RP,_rp,,"$ZD_RN",'');
                     DK.put(1)
                  ?}
               ?};
               exec('dk_sum','magdok_wspolne',ND.ref())
            || DK.get();
               FUN.info('Dokument zablokowany. Zapisanie zmian niemożliwe.'@)
            ?}
         || _aescean:=DK.SCEAN;
            {? _a='d'
            || D_HELP.M:=_d_help; POMOC.MGR:=_pomoc_mgr
            || exec('unbufdkl','magdok_poz',DK.ref())
            ?};
::          korekta kodow identyfikacyjnych
            {? DK.N().TYP().P='T' || exec('korscean','kody_kresk',_bescean,_aescean,_a='d',0) ?}
         ?};
         HELP.MRSQL:=''
      ?}
   ?}
?};
HELP.POP:=0; HELP.IL:=0; HELP.IL2:=0; HELP.RDK:=-1; HELP.NDK:='~~'; HELP.MOD_IND:=null();
BEER.DISP:=0;
VAR_DEL.delete('__dk_l');
_wyn


\zparn_zgh_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Przed redagowaniem pola zmiennej ATR.ZPAR_ZGH
::   WY: 0/1
::  OLD: \zparn_zgh_be/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;

:: Przepisuje przewodnik z pozycji dokumentu
ATR.ZPAR_ZGH:=DK.ZGH;

ZGH.win_dict('SEL');
ZGH.actions('SEL','ZRJ');
:: Sprawdzam - tylko na zlecen inne niz niezalezne
{? DK.ZL<>null() & DK.ZL().RODZAJ<>'N'
||
:: sprawdzam czy redagowana pozycja dokumentu RP i można generować RP dla wybranego (pod)zlecenia
   {? ((' '+exec('get','#params',500701,2,null()))*(' '+DK.N().TYP().T+' '))>0 & DK.ZL().RP='T'
   || _result:=1
   |? (exec('nd_is_rw','magdok_wspolne',DK.N)>0 | exec('nd_is_zw','magdok_wspolne',DK.N)>0) & DK.ZL().RP='T'
   || _result:=1
   ||
::    Zwracam zlecenie na ktorym powstaje produkt
      _prod_zl:=exec('main_podzlec','zl_link',DK.ZL);
      _result:=(DK.ZL=_prod_zl)
   ?};

:: Prefiksuje tabelke z przewodnikami
   VAR.A_ZLEC:=DK.ZL
?};
_result


\dk_addu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: dla redagowania uproszczonego dokumentow oknie dynamicznym
::  OLD: \dk_addu/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
HELP.POP:=0; HELP.IL:=0; HELP.IL2:=0; HELP.RDK:=0; HELP.NDK:='';_add:=0;
{? exec('mod_dok','magdok_nag')
||
   _mgr:=POMOC.MGR;
   _statsn:={? ND.TYP().STATS_N='T' || 'N' || '' ?};
   _statso:={? ND.TYP().STATS_O='T' || 'O' || '' ?};
   _statsz:={? ND.TYP().STATS_Z='T' || 'Z' || '' ?};
   DK.cntx_psh();
   _esc:=0;
   {!
   |?
      _ok:=0;_sv:=0;_czycena:=0;_dostawa:=0;
      {? ND.TYP().CS='T' || _czycena:=1 ?};
      DK.blank();
      DK.IL:=1;
      {!
      |?
         exec('dk_ed_t','magdok_poz',_czycena);
         {? DK.edit("
               _czycena:=ND.TYP().CS='T';
               exec('chk_dk','magdok_poz'
                  ,' M|DK_C|IL'
                     +{? _czycena & DK.WAL<>INFO.NAROD || '|WAL|KURS|CWAL' || '' ?}
                     +{? _czycena || '|CN|SV|CB|RAB|WN|WB' || '' ?})")
         ||
            _ok:=0;_sv:=0;_cena:=0;_dostawa:=0;
            _mat:=DK.M;
            _mag:=DK.N().MAG;
            _dk_c:=$DK.DK_C;
            {? _dk_c=''
            ||
               exec('obl_stan','magazyn_stan',DK.M,1);
               {? BEER.SD<DK.IL
               || FUN.info('Ilość większa od stanu - stan dostępny: %1.'@[form(BEER.SD,,3)]);_dostawa:=1
               ?}
            || exec('sc_tymczas','magazyn_stan',_mag,_mat,'T');
               __sc.cntx_psh();
               _ind:=__sc.ndx_tmp('',,'DK_C',,);
               __sc.index(_ind);
               __sc.prefix($DK.DK_C);
               BEER.SD:=0;
               {? __sc.first()
               ||
                  {!
                  |?
                     BEER.SD+=__sc.S;
                     __sc.next
                  !}
               ?};
               __sc.cntx_pop();
               {? BEER.SD<DK.IL
               || FUN.info('Ilość większa od stanu wg cechy - stan dostępny: %1.'@[form(BEER.SD,,3)]);_dostawa:=1
               ?}
            ?};

            _ok:=_dostawa;
            {? _ok=0
            || _wspj2:={? DK.M().J2<>null() || exec('oblWSP','jm',DK.M) || 0 ?};
               {? _wspj2>0
               || DK.T2:='M';
                  DK.WS2:=_wspj2;
                  DK.J2:=DK.M().J2;
                  _dokl:=exec('jaka_dok_m','jm',DK.M);
                  _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
                  {? _dokl_s<0 || _dokl_s:=_dokl ?};
                  DK.IL2:={? DK.WS2>0 || DK.IL/DK.WS2 || DK.IL ?} $ (_dokl_s+1);
                  roundmet(BEER.MDOKL);
                  DK.IL2:=DK.IL2 $ _dokl_s;
                  roundmet(5)
               ?};
               _nag:=DK.N;
               _ile_p:=DK.IL;
               _ile2p:=DK.IL2;
               _cwal:=DK.CWAL;
               _cena:=DK.CN;
               _sv:=DK.SV;
               _rab:=DK.RAB;
               _rabk:=DK.RABK;
               _tap:=DK.TAR_H;
               _tms:=DK.TAR_TMS;
               _promo:=DK.PROMO;
               exec('sc_tymczas','magazyn_stan',_mag,_mat,'T');
               _ind:=__sc.ndx_tmp('',,'D',,,'RDK',,);
               __sc.index(_ind);
               {? __sc.first()
               || {!
                  |?
                     DK.cntx_psh;
                     DK.use(__sc.NDK);
                     DK.prefix;
                     _stats:={? DK.seek(__sc.RDK,) || DK.STATS().KIND || '' ?};
                     DK.cntx_pop;
                     _ile_nsc:=exec('obl_stsc','magazyn_stan',__sc.RDK,__sc.NDK,_mag,_mat);
                     _ile2nsc:=HELP.DIL2;
                     {? _ile_nsc>0 & (__sc.DK_C=_dk_c | _dk_c='')
                        & (_stats=_statsn | _stats=_statso | _stats=_statsz)
                     ||
                        {? _ile_nsc>=_ile_p
                        || _ile:=_ile_p;
                           _il2:=_ile2p
                        || _ile:=_ile_nsc;
                           _il2:=_ile2nsc
                        ?};
                        {? _wspj2>0
                        || _wsp:={? _il2>0 || _ile/_il2 || _wspj2 ?};
                           exec('przyjdod','jm',$DK.M().J2,_wsp,_il2)
                        ?};
                        {? exec('adddk','magdok_poz',_nag,_mat,_ile,__sc.C,__sc.D,,,,,,,,,__sc.RDK,__sc.NDK)
                        || _add:=1;
                           _ile_p-=_ile;
                           _ile2p-=_il2;
                           DK.last();
                           DK.CN:=_cena; DK.SV:=_sv; DK.CWAL:=_cwal;
                           {? ~(_wspj2>0) | DK.IL2=0
                           || DK.IL2:=DK.IL; DK.J2:=DK.JM; DK.T2:=1+(1-BEER.MMJM); DK.WS2:=1
                           ?};
                           DK.RAB:=_rab;
                           DK.RABK:=_rabk;
                           DK.TAR_H:=_tap;
                           DK.TAR_TMS:=_tms;
                           DK.PROMO:=_promo;
                           DK.SCEAN:=__sc.SCEAN;

                           {? __sc.DK_C<>''
                           ||
                              DK_C.prefix();
                              {? DK_C.seek(__sc.DK_C)
                              || DK.DK_C:=DK_C.ref
                              ?}
                           ?};
                           DK.put();
                           {? DK.CN<>0 | DK.CB<>0 || exec('obl_wars','magdok_poz',,DK.N().RAB) ?};
                           DK.put();
                           exec('inf_dod','fakso',0,'dokma')
                        ?};
                        win_disp()
                     ?};
                     __sc.next() & _ile_p>0
                  !}
               ?};
               __sc.ndx_drop(_ind);
               _sv:=0;_cena:=0;_dostawa:=0
            ?}
         || _ok:=0;_esc:=1;_sv:=0;_cena:=0;_dostawa:=0
         ?};
         _ok<>0
      !};
      _esc=0
   !};
   DK.cntx_pop();
   {? _add=1
   || DK.last();
      exec('obl_stan','magazyn_stan',DK.M,1,DK.N().MAG)
   ?};
   POMOC.MGR:=_mgr
?};
exec('dk_sum','magdok_wspolne',ND.ref());
''


\dk_ed_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: dla redagowania uproszczonego dokumentow okno dynamiczne
::   WE: _a - czy wyswietlac cene i czy wyswietlac stawke VAT
::  OLD: \dk_ed_t/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_win_ed:='WREDU';
{? form(8+ref_name(DK.N))<>ND.name() || DK.blank(0) ?};
ND.cntx_psh();
_czy_wal:=ND.MAG().SKL='T' | params_exec('jakiwal','eurusd','SLWAL','walut',0,,0);

{? _a<>0
|| _en1:='enable=1';
   _en2:={? _czy_wal | DK.WAL<>INFO.NAROD || 'enable=1' || 'enable=0' ?}
|| _en1:='enable=0';
   _en2:='enable=0'
?};

DK.efld_opt(_win_ed,_en2,,'WAL');
DK.efld_opt(_win_ed,_en2,,'KURS');
DK.efld_opt(_win_ed,_en2,,'CWAL');

DK.efld_opt(_win_ed,_en1,,'CN');
DK.efld_opt(_win_ed,_en1,,'SV');
DK.efld_opt(_win_ed,_en1,,'CB');
DK.efld_opt(_win_ed,_en1,,'WN');
DK.efld_opt(_win_ed,_en1,,'WB');
DK.efld_opt(_win_ed,_en1,DISP,'RABP');
DK.efld_opt(_win_ed,_en1,DISP,'RAB');
DK.efld_opt(_win_ed,_en1,DISP,'RABO');
DK.win_edit(_win_ed);
ND.cntx_pop();
''


\uzupjdod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: uzupelnia dane przy automatycznych generacjach
::   WE: _a - akronim tabeli gdzie uzupelniamy dane
::  OLD: \uzupjdod/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__djod')>0
||
:: istnieja dane dotyczace jednostek dodatkowych = jest co uzupelniac
   _jmg:=($(_a+'.M().J2'))()<>null();
   __djod.clear;
   {? __djod.size & __djod.first
   || ($(_a+'.IL2'))():=__djod.IL2;
      ($(_a+'.WS2'))():=__djod.WS2;
      ($(_a+'.T2'))():={? _jmg || 'M' || 'G' ?};
      ($(_a+'.J2'))():=exec('FindAndGet','#table','JM',__djod.J2,,,null());
      __djod.del
   || ($(_a+'.IL2'))():=($(_a+'.IL'))();
      ($(_a+'.WS2'))():=1;
      ($(_a+'.T2'))():='G';
      ($(_a+'.J2'))():={? _a='FAP' || ($(_a+'.JM'))() || ($(_a+'.M().J'))() ?}
   ?}
?};
1


\poprzpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF, MZ [2008]
:: OPIS: poprawienie ceny/ilosci/ktmu na zaakceptowanym dokumencie przychodowym
::   WE: [_a] $FAP.ref jeśli automatyczna wycena na podstawie dokumentu zakupu
::       [_b] 1 - poprawianie zaakceptowanego dokumentu powiazanego z robocizna (tylko cena), 0 - wpp
::       [_c] 1-tylko korekta atrybutów dostawy 0(domyślnie)-nie
::       [_d] 1-blokada edycji ceny 0-domyślnie
::       [_e] (auto) nowa cena>0-automatyczna wycena na podstawie podanej ceny 0(domyślnie) - kontekst DK
::   WY: dla (auto) 1-ok 0-nie
::  OLD: \poprzpoz/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? var_pres('_b')=type_of(0) || _akord:=_b || _akord:=0 ?};
_zmatr:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_blkcn:={? var_pres('_d')=type_of(0) || _d || 0 ?};

:: automatyczne uruchomienie
_res:=1;
_autwyc:=0;
_newprice:={? var_pres('_e')=type_of(0) || _autwyc:=1; _e || 0 ?};

VAR_DEL.delete('__dk_l','__odkc','__ndkc','__blkcen');

__blkcen:=_blkcn;
_oldkp:=DK.KP;
_change:=0;
_changem:=DK.M;

_ok:=1;
:: obsluga wprowadzonych wymiarow
DK_L.cntx_psh();
DK_L.index('DK');
DK_L.prefix(DK.ref(),null);
{? DK_L.first() & DK_L.size()=1
|| __onedk_l:=1;
   ZMIENNE.EANL:=DK_L.LOK().KOD
|| __onedk_l:=0;
   ZMIENNE.EANL:=''
?};
SC.cntx_psh();
SM.cntx_psh();
:: otwieram maske roczna tabeli stanow (dla SC jest otwarta zgodnie z parametrami pracy)
SM.use('stm__'+(5-DK.name));

SM.use('stm__'+ST.ODDZ+'zb');

exec('set_zmie','magdok_poz');

SC.index('SN');
SC.prefix(DK.N().MAG,DK.M,DK.RDK,DK.NDK);
SC.first();
SM.index('SM');
SM.prefix(DK.N().MAG,DK.M);
SM.first();
{? DK.WAL<>INFO.NAROD
|| ZMIENNE.WAL:=ND.WAL;
   ZMIENNE.SWAL:=ND.SWAL;
   ZMIENNE.DTK:=DK.N().DTK;
   ZMIENNE.RTK:=ND.RTK;
   ZMIENNE.NTK:=ND.NTK
?};
__odkc:=__ndkc:=DK.DK_C;
ATR.MOD:=~_autwyc & (DK.N().MAG().TYP*'DOST') & exec('isMOD','mat_atr',DK.M().M_ATR);
{? ATR.MOD
|| _ll:=exec('rozm_atr','mat_atr',DK.M().M_ATR);
   _olddkc:=obj_new(_ll);
   _newdkc:=obj_new(_ll);
   {! _ii.._ll
   |! _olddkc[_ii]:=($('DK.DK_C().WAR'+form(_ii,-2,0,'99')))();
      _newdkc[_ii]:=($('DK.DK_C().WAR'+form(_ii,-2,0,'99')))()
   !}
?};
ZMIENNE.JM:=DK.M().J;
ZMIENNE.J2:=DK.M().J2;
ZMIENNE.IL2:={? ZMIENNE.J2<>null() || DK.IL2 || 0 ?};
ZMIENNE.WS2:={? ZMIENNE.J2<>null() || DK.WS2 || 0 ?};

exec('zmienne_dk_win','magdok_poz',_zmatr);
:: buforuje DK_L-e
exec('buf__dkl','magdok_poz',DK.ref());
_auto:=0;
{? _a<>''
||
  FAP.cntx_psh();
  FAP.use(8+_a);
  FAP.prefix();
  {? FAP.seek(_a,8+_a) & (FAP.CN>0 | FAP.CWAL>0)
  ||
     _auto:=1;
     ZMIENNE.C:=FAP.CN$FAP.M().DOKL_C;
     ZMIENNE.CWAL:=FAP.CWAL$FAP.M().DOKL_C;
     {? ZMIENNE.CWAL & DK.KURS
     || ZMIENNE.C:=(ZMIENNE.CWAL*DK.KURS)$DK.M().DOKL_C
     ?};
     exec('ae_zm_ck','magdok_poz',_auto)
  ?};
  FAP.cntx_pop()
|? _autwyc
|| _auto:=1;
   ZMIENNE.C:=_newprice;
   exec('ae_zm_ck','magdok_poz',_auto)
?};

{? _auto | ZMIENNE.edit("exec('chk_zmie','magdok_poz')")
||
:: aktualizacja pozycji w tabeli pozycji dostaw magazynowych
   exec('dkdost_trig_on','magdok_poz','put');

   do();
   echo('Trwa poprawianie dostawy ...'@);
   {? DK.C<>ZMIENNE.C & ND.MAG().PAL='T' || exec('cen2pal','ceny_dok',DK.C,ZMIENNE.C) ?};
   _zmdkc:=0;
   {? ATR.MOD
   || {! _ii:=1.._ll |! _newdkc[_ii]:=($('ATR.WAR'+form(_ii,-2,0,'99')))() !};
      __ndkc:=exec('aktDK_C','magdok_wspolne',DK.M().M_ATR,_olddkc,_newdkc,__odkc);
      {? __ndkc<>null()
      || _zmdkc:=1;
         {? __ndkc=__odkc
         ||
::          musimy stwierdzić czy zmieniamy daną cechę, czy jednak tworzymy zupełnie nową
            {? ~exec('ctrlDK_C','mat_atr',__ndkc,DK.PRDK)
            ||
::             korygujemy tylko wartości atrybutów
               exec('FindAndGet','#table',DK_C,__odkc,,
                "_ll:=exec('rozm_atr','mat_atr',DK_C.M_ATR);
                 {! _ii:=1.._ll |! ($('DK_C.WAR'+form(_ii,-2,0,'99')))():=($('ATR.WAR'+form(_ii,-2,0,'99')))() !};
                 put(1)
                ",0);
               __ndkc:=null()
            ||
::             zakładamy nową cechę
               __ndkc:=exec('m_atr_sprdod','mat_atr',ATR.WAR01,ATR.WAR02,ATR.WAR03,ATR.WAR04,ATR.WAR05
                        ,ATR.WAR06,ATR.WAR07,ATR.WAR08,ATR.WAR09,ATR.WAR10
                        ,DK.DK_C().M_ATR,DK.DK_C().ZPARN);
               {? 'AZP'*DK.M().IDMOB
                 & (1+DK.N().MAG().TYP)='D'
               || _scean:=exec('newscean','magdok_poz',DK.M,DK.M().IDMOB
                           ,__ndkc,DK.DK_C().ZPARN,DK.ZL,'')
               ?};
               _zmdkc:=2
            ?}
         || _zmdkc:=2
         ?};
         {? DK.M().IDMOB='D' || exec('mkodkadd','kody_kresk',DK.M,DK.SCEAN,$DK.ref(),0)
         |? DK.M().IDMOB='A' || exec('mkodkadd','kody_kresk',DK.M,DK.SCEAN,$DK.DK_C,0)
         |? DK.M().IDMOB='P' || exec('mkodkadd','kody_kresk',DK.M,DK.SCEAN,$DK.ZPARN,0)
         |? DK.M().IDMOB='Z' || exec('mkodkadd','kody_kresk',DK.M,DK.SCEAN,$DK.ZL,0)
         ?}
      ?}
   ?};

   _czyil:=0;

:: poprawienie ilosci
   {? DK.IL<>ZMIENNE.IL | DK.FAP<>''
   || {? exec('FindInSet','#table','SM','SM',DK.M,DK.N().MAG,"SM.SD",,,0)+(ZMIENNE.IL-DK.IL)>=0
      || _czyil:=1;
         SC.cntx_psh();
         SM.cntx_psh();
         SC.use('stc__'+ST.ODDZ+ST.ROK);
         SM.use('stm__'+ST.ODDZ+ST.ROK);
         SC.index('SN');
         SC.prefix(DK.N().MAG,DK.M,DK.RDK,DK.NDK);
         SM.index('SM');
         SM.prefix(DK.N().MAG,DK.M);
         {? SC.first() & SM.first()
         ||
            SC.S+=ZMIENNE.IL-DK.IL;
            {? SC.S>=0
            || SC.A:='T';
               SC.put()
            || undo();
               FUN.info('Pomniejszenie ilości dostawy dla indeksu %1'
                  '\nspowoduje wystąpienie stanu ujemnego w magazynie %2'
                  '.\n\nOperacja została anulowana.'@[SC.M().KTM,SC.MAG().SYM]);
               _ok:=0
            ?};
            {? _ok=1
            ||
::             w rocznej masce SM
               SM.S+=ZMIENNE.IL-DK.IL;
               {? DK.STATS().KIND='O'
               || SM.S_O+=ZMIENNE.IL-DK.IL2;
                  SM.S_O2+={? ZMIENNE.M().J2<>null() || ZMIENNE.IL2-DK.IL2 || 0 ?}
               |? DK.STATS().KIND='N'
               || SM.S_N+=ZMIENNE.IL-DK.IL;
                  SM.S_N2+={? ZMIENNE.M().J2<>null() || ZMIENNE.IL2-DK.IL2 || 0 ?}
               ?};
               {? SM.S>=0
               || SM.put();
::                uzupelnianie ilosci w zbiorczej masce tabeli stanow
                  exec('stan_zb','magazyn_stan',SM.MAG,SM.M,ZMIENNE.IL-DK.IL,0,DK.N().AR
                   ,{? SM.M().J2<>null() || ZMIENNE.IL2-DK.IL2 || 0 ?})
               || undo();
                  FUN.info('Pomniejszenie ilości dostawy dla indeksu %1'
                     '\nspowoduje wystąpienie stanu ujemnego w magazynie %2'
                     '.\n\nOperacja została anulowana.'@[SM.M().KTM,SM.MAG().SYM]);
                  _ok:=0
               ?}
            ?};
            {? DK.N().TYP().P='T' & DK.N().TYP().Z='T'
            || _par:=exec('get','#params',600803,2);
               _rp:=exec('dk2zdnag','zamdst_rea',_par,DK.N,DK.ref(),DK.ZAM_RN,DK.ZAM_RP,DK.M,ZMIENNE.IL,DK.M,DK.IL);
               {? DK.ZAM_RP='' & _rp<>''
               || DK.ZAM_RP:=_rp;
                  DK.ZAM_RN:=exec('FindAndGet','#table',ZD_RP,_rp,,"$ZD_RN",'');
                  _change+=DK.put(1)
               ?}
            ?}
         || _ok:=0;
            undo();
            FUN.info('Nie znaleziono stanu magazynowego dla indeksu %1'
               '\ w magazynie %2.\n\nOperacja została anulowana.'@[SC.M().KTM,SC.MAG().SYM])
         ?};
         SM.cntx_pop();
         SC.cntx_pop();
::       Poprawianie ilosci wykonanej na zleceniu
         {? DK.N().TYP().ZLEC='T' & TYPYDOK.WYR='T'
         || ZL.cntx_psh();
            ZL.prefix();
            {? ZL.seek(DK.ZL)
            || ZL.ILDOK+=ZMIENNE.IL-DK.IL;
               {? ZL.ILDOK<0
               || undo();
                  FUN.info('Pomniejszenie ilości dostawy dla indeksu %1'
                    '\nspowoduje ujemny stan zlecenia %2'
                    '.\n\nOperacja została anulowana.'@[DK.M().KTM,ZL.SYM]);
                  _ok:=0
               || ZL.put()
               ?}
            ?};
            ZL.cntx_pop()
         ?}
      || undo();
         FUN.info('Pomniejszenie ilości dostawy dla indeksu %1'
           '\nspowoduje wystąpienie stanu dostępnego ujemnego w magazynie %2'
           '.\n\nOperacja została anulowana.'@[SM.M().KTM,SM.MAG().SYM]);
         _ok:=0
      ?}
   ?};

:: poprawienie cen
   {? _ok
   ||
      _m_old:=DK.M;
      _oldc:=DK.C;
      DK.M:=ZMIENNE.M;
      DK.OPAK_GEN:='N';
      _change+=DK.put();
      ZMIENNE.M:=_m_old;
      _dkref:=DK.ref;
      _zmtw:={? ZMIENNE.TW<>DK.TW || ZMIENNE.TW || ~~ ?};

      {? ZMIENNE.C<>DK.C | ZMIENNE.CWAL<>DK.CWAL | _zmtw<>~~ | _zmdkc
      || _oldc:=DK.C;
         {? _akord
         || _war:=(DK.IL*DK.C) $2;
            DK.C:=ZMIENNE.C;
            {? _zmtw<>~~ || DK.TW:=ZMIENNE.TW ?};
            DK.WAR:=(DK.IL*DK.C) $2;
            {? {? DK.put(1) || _change+=1; 1 || 0 ?} & DK.N().Z='T'
            || _war_diff:={? DK.M<>ZMIENNE.M || DK.WAR || (DK.WAR-_war) ?};
               exec('stan_zb','magazyn_stan',ND.MAG,DK.M,0,{? DK.PLUS='T' || 1 || -1 ?}*_war_diff,ND.AR,0)
            ?}
         |? _zmtw<>~~
         || DK.TW:=ZMIENNE.TW;
            _change+=DK.put(1)
         |? _zmdkc=2 & __ndkc<>null()
         || DK.DK_C:=__ndkc;
            {? DK.M().IDMOB='A' | (DK.M().IDMOB='D' & DK.M().IDZP)
            || DK.SCEAN:=exec('zwrdkc_m','material',$DK.DK_C,DK.M)
            ?};
            _change+=DK.put(1)
         ?};
         {? exec('zmcene','magdok_poz',DK.ref(),ZMIENNE.C,ZMIENNE.CWAL,,_oldc,_zmtw,_zmdkc,__ndkc)=0
         || undo();
            FUN.info('Zmiana ceny dostawy lub terminu ważności dla indeksu %1 nie powiodła się.\n\n'
                     'Operacja została anulowana.'@[DK.M().KTM]);
            _ok:=0
         |? _akord
         || exec('dk_sum','magdok_wspolne',ND.ref(),1)
         ?};
::       zmiana znacznika wyceny z kosztami
         {? _ok & ZMIENNE.C<>_oldc || exec('delWYCdk','faktury_wspolne',$DK.ref()) ?}
      ?};
      {? ~_ok || _res:=0 ?};
::    poprawa wszystkich pozycji jesli zmiana kursu
      {? (ZMIENNE.KRS<>DK.KURS | ZMIENNE.DTK<>DK.N().DTK) & DK.N().WAL<>INFO.NAROD
      ||
         ND.SWAL:=ND.NSWAL:=ZMIENNE.SWAL;
         ND.KRS:=ND.NKRS:=ZMIENNE.KRS;
         ND.DTK:=ND.NDTK:=ZMIENNE.DTK;
         ND.RTK:=ND.NRTK:=ZMIENNE.RTK;
         ND.NTK:=ND.NTK:=ZMIENNE.NTK;
         {? ND.put & ZMIENNE.KRS<>DK.KURS
         ||
            DK.cntx_psh;
            {? DK.first
            ||
               {!
               |?
                  {? DK.ref=_dkref
                  ||
                     DK.KURS:=ZMIENNE.KRS;
                     _change+=DK.put
                  ||
                     ZMIENNE.M:=DK.M;
                     DK.KURS:=ZMIENNE.KRS;
                     _ncen:=(DK.CWAL*DK.KURS)$DK.M().DOKL_C;
                     {? {? DK.put || _change+=1; 1 || 0 ?} & exec('zmcene','magdok_poz',DK.ref(),_ncen,DK.CWAL,,DK.C)=0
                     || undo();
                        FUN.info('Zmiana ceny dostawy dla indeksu %1'
                                 ' nie powiodła się.\n\nOperacja została anulowana.'@[DK.M().KTM]);
                        _ok:=0
                     ?};
::                   zmiana znacznika wyceny z kosztami
                     {? _ok & _ncen<>DK.C || exec('delWYCdk','faktury_wspolne',$DK.ref()) ?}
                  ?};
                  DK.next
               !}
            ?};
            DK.cntx_pop;
            DK.get
         ?}
      ?};
::    poprawa pozycji jesli zmiana kursu na dokumencie niewalutowym
      {? ZMIENNE.KRS<>DK.KURS & DK.N().WAL=INFO.NAROD
      ||
         ZMIENNE.M:=DK.M;
         DK.KURS:=ZMIENNE.KRS;
         _ncen:=(DK.CWAL*DK.KURS)$DK.M().DOKL_C;
         {? {? DK.put || _change+=1; 1 || 0 ?} & exec('zmcene','magdok_poz',DK.ref(),_ncen,DK.CWAL,,DK.C)=0
         || undo();
            FUN.info('Zmiana ceny dostawy dla indeksu %1 nie powiodła się.\n\nOperacja została anulowana.'@[DK.M().KTM]);
            _ok:=0
         ?};
::       zmiana znacznika wyceny z kosztami
         {? _ok & _ncen<>DK.C || exec('delWYCdk','faktury_wspolne',$DK.ref()) ?}
      ?};
      {? DK.IL<>ZMIENNE.IL
      || _rozn:=ZMIENNE.IL-DK.IL;
         _war:=DK.WAR;
         DK.IL:=ZMIENNE.IL;
         DK.WAR:=(DK.IL*DK.C) $2;
::       koryguje ilosc dodatkowa
         exec('aktmil2','magdok_poz');
         _change+=DK.put();
         exec('DK_HS_new4DK','statexam',DK.ref,'A','Poprawa ilości',,DK.STATS);
         _war_diff:=ND.WAR;
         exec('dk_sum','magdok_wspolne',ND.ref(),1);ND.get();
         _war_diff:=ND.WAR-_war_diff;
::       uzupelnianie wartosci w zbiorczej masce tabeli SM
         exec('stan_zb','magazyn_stan',ND.MAG,DK.M,0,_war_diff,ND.AR,0);
         {? _rozn>0
         || exec('akt_wgdk','zamsiw_wspolne',DK.N,DK.ref(),_rozn)
         || exec('aktu_rez','rezerwacje',DK.M,0,-_rozn)
         ?}
      ?};
::    uzupelnienie pol dla magazynow celnych
      {? DK.N().MAG().SKL<>'T'
      || DK.SCC:=DK.C;
         DK.SCWAR:=DK.WAR
      ?};
      _change+=DK.put();
      _ndlock:=ND_Z.R_LOCK;
      ND_Z.R_LOCK:='P';
      exec('obl_stan','magazyn_stan',DK.M,1,DK.N().MAG);
      ND_Z.R_LOCK:=_ndlock
   ?};

:: poprawianie wymiarow
:: poprawiamy DK_L-a i SL-a
   {? _ok & _czyil & DK.N().MAG().SL='T'
   ||
::    najpierw sciagamy stara rozpiske
      {? __dk_l.first()
      || {!
         |? _lok:=exec('FindAndGet','#table','EANL',__dk_l.EANL,,,null());
            _pal:=exec('FindAndGet','#table','PAL',__dk_l.PAL,,,null());
            exec('adddelsl','magazyn_stan',DK.N().MAG,DK.M,_lok,__dk_l.TW,__dk_l.IL,-1,_pal,DK.SCEAN,__dk_l.IL2);
            __dk_l.next()
         !}
      ?};
::    teraz wnosimy nowa rozpiske
      DK_L.index('DK');
      DK_L.prefix(DK.ref(),null);
      {? DK_L.first()
      || {!
         |? {? DK_L.IL=0
            || DK_L.del()
            || DK_L.Z:=DK.N().Z;
               DK_L.DT:={? DK.N().Z='T' || DK.N().DA || DK.N().D ?};
               DK_L.TM:={? DK.N().Z='T' || DK.N().TA || time() ?};
               DK_L.US:=DK.N().US;
               DK_L.put(1);
               exec('adddelsl','magazyn_stan',DK.N().MAG,DK.M,DK_L.LOK,DK_L.TW,DK_L.IL,1,DK_L.PAL,DK.SCEAN,DK_L.IL2);
               DK_L.next()
            ?}
         !}
      ?}
   ?};
:: kontroling
:: DRO:[rr] schematy.fml
::   exec('aktualizacja_mp','schematy',DK.N,DK.ref(),'U');
::   exec('aktualizacja_mp','schematy',DK.N,DK.ref(),'D');

:: naliczenie opłat dodatkowych
   {? _change || exec('actTAXS','oplaty_dod',DK.N().uidref(),DK.uidref(),DK.M,_changem) ?};
   end();
   {? _ok & _oldkp<>DK.KP || exec('act_kp','magdok_wspolne',DK.PRDK,DK.KP,_oldkp) ?};

   exec('dkdost_trig_off','magdok_poz');

:: przy nieudanej wycenie poprzednie DK_L
   {? ~_ok & DK.N().MAG().SL='T'
   || exec('unbufdkl','magdok_poz',DK.ref())
   ?};

:: rozpisanie rezerwacji
   {? _ok=1 & _czyil=1
   || exec('aktu_stu','zamsiw_wspolne',DK.M)
   ?};
   exec('obl_stan','magazyn_stan',DK.M,1,DK.N().MAG);
   echo()
||
:: przy rezygnacji przywraca poprzednie DK_L
   exec('unbufdkl','magdok_poz',DK.ref())
?};
undefine();
ATR.MOD:=0;
SC.cntx_pop();
SM.cntx_pop();
DK_L.cntx_pop();
VAR_DEL.delete('__dk_l','__odkc','__ndkc','__blkcen');
_res


\dk2dk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: generuje zapis do DK_L na podstawie EANX.EANL i EANX.TW
::  OLD: \dk2dk_l/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
_czywym:=EANX.EANL<>null() | EANX.TW<>date(0,0,0) | EANX.PAL<>null() | DK.ROZPAK;
{? {? DK.PLUS='T'
   || _czywym | DK.M().SETW='P'
   || _czywym & {? (1+DK.N().MAG().TYP)='D' & DK.DOST=date(0,0,0) & (';FL'*DK.N().TYP().AFIFO)>1
                || DK.M().SETW<>'P'
                || 1
                ?}
   ?}
|| _rozp:=exec('rozpNOPAL','magdok_palety');
   {? ~_rozp
   || DK_L.cntx_psh();
      exec('add2dk_l','magdok_wspolne',DK.ref(),null,{? EANX.EANL<>null || EANX.EANL || DK.N().MAG().EANL ?}
       ,null,EANX.TW,date(0,0,0)
       ,DK.IL,DK.N().MAG,DK.M,,,EANX.PAL,null);
      DK_L.cntx_pop()
   ?}
?}


\ilrdkfap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: ile zostalo rozpisane wzgledem faktury zakupu
::   WE: _a - ref SQL-owy DK
::   WY: ilosc rozpisana
::  OLD: \ilrdkfap/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
FAP2DK.index('NDK');
FAP2DK.prefix(_a);
{? FAP2DK.first()
|| {!
   |? _wyn+=FAP2DK.IL;
      FAP2DK.next()
   !}
?};
_wyn


\aktdkfap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: ile zostalo rozpisane wzgledem faktury zakupu
::   WE: _a - ref SQL-owy DK
::       _b - nowa ilosc powiazana
::  OLD: \aktdkfap/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _b<0
|| FAP2DK.index('NDK');
   FAP2DK.prefix(_a);
   {? FAP2DK.first()
   || FAP2DK.IL+=_b;
      FAP2DK.put(1)
   ?}
?}


\unbufdkl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: odzyskuje informacje o poprzednich DK_L-ach
::   WE: _a - ref DK
::  OLD: \unbufdkl/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
DK_L.index('DK');
DK_L.prefix(_a,null);
{? DK_L.first()
|| {? __dk_l.size()
   || {!
      |? _ref:=DK_L.ref();
         _ok:=DK_L.next();
         DK_L.cntx_psh();
         DK_L.clear();
         {? DK_L.seek(_ref)
         || __dk_l.clear();
            {? __dk_l.find_key($DK_L.ref())
            || DK_L.LOK:=exec('FindAndGet','#table','EANL',__dk_l.EANL,,,null());
               DK_L.TW:=__dk_l.TW;
               DK_L.PAL:=exec('FindAndGet','#table','PAL',__dk_l.PAL,,,null());
               DK_L.IL:=__dk_l.IL;
               DK_L.SCEAN:=__dk_l.SCEAN;
               DK_L.SCSQL:=__dk_l.SCSQL;
               DK_L.put(1)
            || DK_L.del()
            ?}
         ?};
         DK_L.cntx_pop();
         _ok
      !}
   || {! |? DK_L.del() !}
   ?}
?}


\pobcendk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: pobiera informacje z DK
::   WE: _a - ref DK
::   WY: - tablica danych
::  OLD: \pobcendk/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new(10);
DK.cntx_psh();
DK.clear();
{? DK.seek(_a)
|| _wyn[1]:=1;
   _wyn[2]:=DK.SV;
   _wyn[3]:=DK.CN;
   _wyn[4]:=DK.CN;
   _wyn[5]:=DK.RAB;
   _wyn[6]:=DK.RABK;
   _wyn[7]:=DK.CWAL;
   _wyn[8]:=DK.KURS;
   _wyn[9]:=DK.ZL;
   _wyn[10]:=DK.WYD
|| _wyn[1]:=0
?};
DK.cntx_pop();
_wyn


\set_zmie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [2006]
:: OPIS: ustawienie wartosci pomocniczych dla przychodu, ustawia prefixy na SM i SC
::  OLD: \set_zmie/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ZMIENNE.M:=DK.M;
ZMIENNE.C:=DK.C;
ZMIENNE.CWAL:=DK.CWAL;
ZMIENNE.KRS:=DK.KURS;
ZMIENNE.IL:=DK.IL;
ZMIENNE.IL_WYD:=0;
ZMIENNE.WAR:=DK.WAR;
ZMIENNE.TW:=DK.TW;

:: dodano sprawdzenie czy nie ma rozchodu na danej dostawie - wowczas nie mozna poprawiac indeksu materialowego
:: wylaczamy HELP.POP bo inaczej dodaje ilosc do BEER.SD z danej dostawy
_helppop:=HELP.POP;
HELP.POP:=0;
exec('obl_stan','magazyn_stan',DK.M,1);
BEER.SD+=DK.IL-exec('obl_stsc','magazyn_stan',DK.RDK,DK.NDK,DK.N().MAG,DK.M);
HELP.POP:=_helppop;
ZMIENNE.IL_WYD:=DK.IL-BEER.SD;
''


\buf__dkl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: zapamietuje informacje o poprzednich DK_L-ach
::   WE: _a - ref DK
::  OLD: \buf__dkl/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
__dk_l:=tab_tmp(1,'DK_L','STRING[16]',''
         ,'EANL','STRING[16]',''
         ,'TW','DATE',''
         ,'PAL','STRING[16]',''
         ,'IL','REAL',''
         ,'SCEAN','STRING[128]',''
         ,'SCSQL','STRING[30]',''
         ,'IL2','REAL','');
DK_L.index('DK');
DK_L.prefix(_a,null);
{? DK_L.first()
|| {!
   |? __dk_l.clear();
      __dk_l.blank();
      __dk_l.DK_L:=$DK_L.ref();
      __dk_l.EANL:=$DK_L.LOK;
      __dk_l.TW:=DK_L.TW;
      __dk_l.PAL:=$DK_L.PAL;
      __dk_l.IL:=DK_L.IL;
      __dk_l.SCEAN:=DK_L.SCEAN;
      __dk_l.SCSQL:=DK_L.SCSQL;
      __dk_l.IL2:=DK_L.IL2;
      __dk_l.add(1);
      DK_L.next()
   !}
?}


\ae_zm_ck
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: formula po redakcji pola ZMIENNE.CWAL oraz ZMIENNE.KRS
::       przeliczanie ceny
::   WE:  [_a] - automatyczna wycena i przeliczenie wartosci intrastat
::   WY: 1/0 czy zakonoczyc redakcje pola
::  OLD: \ae_zm_ck/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
_wyn:=1;

{? _a=0
||
   ZMIENNE.KRS:=ZMIENNE.KRS$4;
   ZMIENNE.C:=(ZMIENNE.CWAL*ZMIENNE.KRS) $ ZMIENNE.M().DOKL_C
?};
ZMIENNE.WAR:=(ZMIENNE.IL*ZMIENNE.C)$2;
{? ZMIENNE.IL<>DK.IL | ZMIENNE.WAR<>DK.WAR
|| {? exec('nd_kpw_reg','magdok_nag','PR')=1 & (_a | (ZMIENNE.LICZ_IST:=FUN.ask('Przeliczyć wartości do Intrastat?'@)))
   ||
     {? _a=1 ||  ZMIENNE.LICZ_IST:=_a  ?};
     exec('ist_wart_dk','magdok_poz',0,ZMIENNE.IL,ZMIENNE.WAR)
   ?}
?};
_wyn


\chk_zmie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [2006]
:: OPIS: sprawdzanie wypelnienia pol podczas modyfikacji pozycji
::  OLD: \chk_zmie/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_wyn:=__CHK.record(ZMIENNE,,'M');
{? _wyn=''
||
:: ilosci powiazane z dana pozycja
   _ile_z:=exec('ile_rozp','magdok_wspolne',$DK.ref(),'Z');
   _ile_e:=exec('ile_rozp','magdok_wspolne',$DK.ref(),'E');
   _dokl_m:=exec('jaka_dok_m','jm',ZMIENNE.M);

   {? ZMIENNE.IL<=0
   ||
      FUN.info('Należy podać ilość.'@);
      _wyn:='IL'
   |? ZMIENNE.IL<ZMIENNE.IL_WYD
   ||
      FUN.info('Ilość nie może być mniejsza od ilości wydanej lub zarezerwowanej\n'
          'z dostawy wynoszącej: %1.'@[form(ZMIENNE.IL_WYD,,3)]);
      ZMIENNE.IL:=ZMIENNE.IL_WYD;
      _wyn:='IL'
   |? _ile_z>ZMIENNE.IL
   || FUN.info('Pozycja powiązana z fakturami zakupowymi na ilość: %1.\n'
       'Należy podać większą ilość.'@[form(_ile_z,,_dokl_m)]);
      _wyn:='IL'
   |? _ile_e>ZMIENNE.IL
   || FUN.info('Pozycja powiązana z fakturami wewnętrznymi na ilość: %1.\n'
       'Należy podać większą ilość.'@[form(_ile_z,,_dokl_m)]);
      _wyn:='IL'
   |? DK.WAL<>INFO.NAROD & {? DK.CWAL>0 || ZMIENNE.CWAL<=0 || ZMIENNE.CWAL<0 ?}
   ||
      FUN.info('Należy podać cenę większą od zera.'@);
      _wyn:='CWAL'
   |? DK.WAL<>INFO.NAROD & ZMIENNE.KRS<=0
   ||
      FUN.info('Należy podać kurs większy od zera.'@);
      _wyn:='KURS'
   |? DK.N().WAL<>INFO.NAROD & ZMIENNE.DTK=date(0,0,0)
   ||
      FUN.info('Należy podać datę kursu.'@);
      _wyn:='DTK'
   |? {? DK.C>0 || ZMIENNE.C<=0 || ZMIENNE.C<0 ?}
   ||
      FUN.info('Należy podać cenę większą od zera.'@);
      _wyn:='C'
   |? ND.IST_TYP<>''
   || _wyn:=exec('chk_dk_intrastat','magdok_poz')
   |? DK.N().MAG().SL<>'T' & ZMIENNE.M().SETW='P' & ZMIENNE.M().CZY_TW='T' & ZMIENNE.TW=date(0,0,0)
   || FUN.info('Indeks materiałowy %1 wymaga podania terminu ważności.'@[ZMIENNE.M().KTM]);
      _wyn:='TW'
   ?}
?};
{? _wyn='' & DK.N().MAG().SL='T'
|| _dokl_m:=exec('jaka_dok_m','jm',DK.M);
   _sum:=0;
   DK_L.cntx_psh();
   DK_L.index('DK');
   DK_L.prefix(DK.ref(),null);
   {? DK_L.first() || {! |? _sum+=DK_L.IL $ _dokl_m; DK_L.next() !} ?};
   DK_L.cntx_pop();
   {? ZMIENNE.IL<>_sum
   || FUN.info('Przy zmianie ilości należy rozpisać wymiary (lokalizacja, termin ważności),\n'
       'na całkowitą podaną ilość.'@);
      _wyn:='IL'
   ?}
?};
{? _wyn=''
|| _srsr:=exec('atr_get_srsr','mat_atr',DK.M().M_ATR);
   {? _srsr
   || exec('srsr_sync_dk','mat_atr',_srsr,1)
   ?}
?};
_wyn


\zmcene
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF, MZ [2008]
:: OPIS: wlasciwa formula zmieniajaca cene
::   WE: _a  ref pozycji
::       _b  nowa cena
::       _c  nowa cena walutowa
::       [_d] - znacznik informujacy czy wywolanie rekurencyjne
::       [_e] - stara cena
::       [_f] - nowy termin ważności lub brak albo inny typ niż date - wtedy nie zmieniamy terminu
::       [_g] - zmiana cechy dostawy 1-tylko dla przesunięć 2-nowa 0-brak
::       [_h] - nowa cecha dostawy
::  OLD: \zmcene/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=4  || {? type_of(_d)<>1 || _d:=0 ?}  || _d:=0  ?};
{? _>=5  || {? type_of(_e)<>1 || _e:=0 ?}  || _e:=0  ?};
{? var_pres('_f')=type_of(date(0,0,0))
|| _czy_tw:=1;
   _tw:=_f
|| _czy_tw:=0;
   _tw:=~~
?};

_zmdkc:={? var_pres('_g')=type_of(0) || _g || 0 ?};
_ndk_c:={? var_pres('_h')=type_of(null()) || _h || null() ?};

_wgskl:=exec('get','#params',600300,2);
_modks:=_zmdkc>0 & exec('get','#params',1013,2,OPERATOR.USER)='T';
_wal:=ND.WAL;

_ok:=0;
DK.cntx_psh();
DK.prefix();
ND.cntx_psh();
ND.prefix();
SM.cntx_psh();
SC.cntx_psh();
{? DK.seek(_a) || DK.N().SYM; _ok:=1 || undo() ?};
{? _ok=1 & (#DK.N)=0
|| undo();
   _ok:=0
|? _ok=1 & ~ND.r_lock(1,1,1,#DK.N,ref_name(DK.N))
||
   undo();
   FUN.emsg('Wyceniany lub zmieniany dokument obsługuje inny użytkownik.'@);
   _ok:=0
?};
{? _ok=1
||
   DK.N().SYM;
   ND.r_unlock();

   _tmg:={? DK.N().MAG().TYP*'EWI' || 'E' || 1+DK.N().MAG().TYP ?};
   _stoddz:=ST.ODDZ;
:: zmiana maski SC ... wg oddzialu magazynu
   {? DK.N().MAG().ODDZ<>(1+(SC.name()+3))
   || SC.use((SC.name()-3)+DK.N().MAG().ODDZ+(SC.name()+2));
      ST.ODDZ:=DK.N().MAG().ODDZ
   ?};
:: zmiana maski SC ... wg DK.NDK
   _ndk:=form(DK.NDK+3);
   {? _ndk<>'' & _ndk<>(SC.name()+3)
   || SC.use((SC.name()-3)+_ndk);
      ST.ODDZ:=DK.N().MAG().ODDZ
   ?};

:: znalezienie i poprawienie dostawy SC
   SC.index('SN');
   SC.prefix(DK.N().MAG,DK.M,DK.RDK,DK.NDK);
   {? SC.first()
   ||
      SC.C:=SC.SCC:=_b;
      {? _czy_tw  || SC.TW:=_tw ?};
      {? _zmdkc>0
      || {? _zmdkc=2 || SC.DK_C:=_ndk_c ?};
         _ll:=exec('rozm_atr','mat_atr',SC.DK_C().M_ATR);
         {! _ii:=1.._ll |! ($('SC.WAR'+form(_ii,-2,0,'99')))():=($('SC.DK_C().WAR'+form(_ii,-2,0,'99')))() !}
      ?};
      {? SC.S=0 || SC.A:='N' || SC.A:='T' ?};
      SC.put();

::    petla po dokumentach z danej dostawy
::    (tu sa wszystkie DK z danej dostawy: rozchodowe i przychodowe wraz z DK tworzacym dostawe, zwroty itp..)

      _dan:=obj_new(6);
      {? _tmg<>'E'
      || _dan[1]:=SC.MAG; _dan[2]:=SC.M; _dan[3]:=SC.RDK; _dan[4]:=SC.NDK; _dan[5]:=SC.name()+2; _dan[6]:=0
      || _dan[1]:=SC.MAG; _dan[2]:=SC.M; _dan[3]:=_e; _dan[4]:=''; _dan[5]:=SC.name()+2; _dan[6]:=0
      ?};
      SC.cntx_psh();
      _msk:=exec('tab_mask','faktury_wspolne',5,_dan[5]);
      {? _msk.first()
      ||
         {!
         |?
            exec('open','open_tab',ST.ODDZ,_msk.ROK);
            {? _tmg='E'
            || DK.index('DOSTE');
               DK.prefix(_dan[1],_dan[2],_dan[3])
            || DK.index('DOST3');
               DK.prefix(_dan[1],_dan[2],_dan[3],_dan[4])
            ?};
            {? DK.first()
            ||
               {!
               |?
                  _dan[6]+=1;
::                jesli magazyn ewidencyjny to poprawia SC
                  _next:=0;
                  {? _dan[6]>1 & _tmg='E' & DK.PLUS='T'
                  || SC.cntx_psh();
                     SC.index('SN');

                     SC.prefix(DK.N().MAG,DK.M,DK.RDK,DK.NDK);
                     {? SC.first()
                     || {!
                        |? SC.C:=SC.SCC:=_b;
                           {? _czy_tw  || SC.TW:=_tw ?};
                           {? _zmdkc>0
                           || {? _zmdkc=2 || SC.DK_C:=_ndk_c ?};
                              {! _ii:=1.._ll
                              |! ($('SC.WAR'+form(_ii,-2,0,'99')))():=($('SC.DK_C().WAR'+form(_ii,-2,0,'99')))()
                              !}
                           ?};
                           {? SC.S=0 || SC.A:='N' || SC.A:='T' ?};
                           SC.put();
                           SC.next()
                        !}
                     ?};
                     SC.cntx_pop()
                  ?};

                  {? (#DK.N)>0 & ND.r_lock(1,1,1,#DK.N,ref_name(DK.N))
                  ||
                     DK.N().SYM;
                     ND.r_unlock();

                     {? ND.ZAK='T' & _tmg='E'
                     ||
::                      pomijamy zaksięgowane w ewidencyjnym
                        _ok:=1
                     |? ND.ZAK='T' & ~_modks
                     ||
                        undo();
                        FUN.info('Dokument %1 związany z poprawianą dostawą jest zaksięgowany.\n'
                         'Wszystkie operacje zostaną wycofane.\n'
                         'Aby poprawić wybraną cenę, wycofaj księgowanie wskazanego dokumentu.'@[ND.SYM]);
                        _ok:=0
                     |? _tmg='Ś' | (_tmg='E' & exec('get','#params',600104,2)='N')
                     ||
                        undo();
                        FUN.info('Dokument %1 związany z poprawianą dostawą\n'
                         'jest wystawiony w magazynie typu %2.\n'
                         'Wszystkie operacje zostaną wycofane.\n'
                         'Modyfikacja nie jest możliwa.'@[ND.SYM,ND.MAG().TYP]);
                        _ok:=0
                     ||
::                      modyfikacja wyceny stanu zlecenia
                        {? ND.TYP().ZLEC<>'N' & ND.TYP().WYR<>'T' & ND.Z='T'
                        ||
                           exec('akzlst','magdok_poz',DK.ZL,-1,DK.WYD,1)
                        ?};

::                      przeliczenie pozycji i naglowka dokumentu
                        _war:=(DK.C*DK.IL) $2;

                        _ref:=DK.ref();
                        {? _tmg='E' & (DK.N().INN='T' & DK.N().TYP().INW='E' & DK.N().TYP().P='N')
                        || _next:=0
                        || _next:=DK.next()
                        ?};

                        DK.cntx_psh();
                        DK.clear();
                        {? DK.seek(_ref)
                        || DK.C:=_b;
                           {? _czy_tw  || DK.TW:=_tw ?};
                           {? _zmdkc=2
                           || DK.DK_C:=_ndk_c;
                              {? DK.M().IDMOB='A' | (DK.M().IDMOB='D' & DK.M().IDZP)
                              || DK.SCEAN:=exec('zwrdkc_m','material',$DK.DK_C,DK.M)
                              ?};
                              {? DK.PLUS='N' & DK.FAP<>''
                              || {? ~exec('modATRfap','magdok_wspolne',DK.FAP,_ndk_c) || undo() ?}
                              ?}
                           ?};
                           {? DK.PLUS='T' & ND.WAL=_wal || DK.CWAL:=_c ?};
                           DK.WAR:=(DK.C*DK.IL) $2;
::                         uzupelnienie pol dla magazynow celnych
                           {? DK.N().MAG().SKL<>'T'
                           || DK.SCC:=DK.C;
                              DK.SCWAR:=DK.WAR
                           ?};
                           {? ZMIENNE.LICZ_IST || exec('ist_wart_dk','magdok_poz',0,DK.IL,DK.WAR) ?};
                           _ok:=DK.put();
::                         naliczenie opłat dodatkowych
                           {? _ok || exec('actTAXS','oplaty_dod',DK.N().uidref(),DK.uidref(),DK.M,DK.M) ?};
                           _war_diff:={? DK.M<>ZMIENNE.M || DK.WAR || (DK.WAR-_war) ?};
                           {? _ok
                           ||
::                            kontroling
:: DRO:[rr] schematy.fml
::                              exec('aktualizacja_mp','schematy',DK.N,DK.ref(),'U');
::                              exec('aktualizacja_mp','schematy',DK.N,DK.ref(),'D');
                              ND.cntx_psh();
                              ND.clear();
                              {? ND.seek(DK.N)
                              || ND.WAR:=exec('dk_sum','magdok_wspolne',ND.ref());
                                 _ok:=ND.put()
                              || _ok:=0
                              ?};
                              ND.cntx_pop()
                           ?};

::                         uzupelnianie wartosci w zbiorczej masce tabeli SM
                           {? DK.N().Z='T'
                           || exec('stan_zb','magazyn_stan',ND.MAG,DK.M,0
                               ,{? DK.PLUS='T' || 1 || -1 ?}*_war_diff,ND.AR,0)
                           ?};

::                         odtworzenie znacznika zerowej ceny na pozycji i naglowku
                           {? ~_ok
                           ||
                              undo();
                              FUN.info('Wystąpił problem z poprawieniem ceny na dokumencie '@+ND.SYM+'.')
                           ?};

::                         modyfikacja wyceny stanu zlecenia
                           {? ND.TYP().ZLEC<>'N' & ND.TYP().WYR<>'T' & ND.Z='T'
                           ||
                              exec('akzlst','magdok_poz',DK.ZL,1,DK.WYD,1)
                           ?};

::                         wycena wg skladowych
                           _sklsql:=exec('tabSklSql','magdok_poz',DK.SKLSQL);
                           {? _wgskl<>'N' & _sklsql.size() & _sklsql.first()
                           || {!
                              |? {? _sklsql.SQL<>''
                                 || ND.cntx_psh();
                                    DK.cntx_psh();
                                    ND.use('nagdo'+(form(8+_sklsql.SQL)+3));
                                    DK.use(form(8+_sklsql.SQL));
                                    DK.clear();
                                    {? DK.seek(_sklsql.SQL)
                                    || _warskl:={? DK.IL || _sklsql.WAR*_sklsql.WSP $ 2 || 0 ?};
                                       _cena:=DK.C;
                                       DK.C:={? DK.IL || _warskl/DK.IL || 0 ?}$DK.M().DOKL_C;
                                       {? DK.N().MAG().SKL<>'T'
                                       || DK.SCC:=DK.C
                                       ?};
                                       exec('war_mag','magdok_poz');
                                       {? ~(DK.N().MAG().TYP*'EWI') & _wgskl='W' || DK.WAR:=_warskl ?};
                                       _oki:=DK.put(1);
::                                     naliczenie opłat dodatkowych
                                       {? _oki || exec('actTAXS','oplaty_dod',DK.N().uidref(),DK.uidref(),DK.M,DK.M) ?};
                                       _ok:=exec('zmcene','magdok_poz',DK.ref,DK.C,0,1,_cena);
                                       exec('dk_sum','magdok_wspolne',DK.N,1);
::                                     zmiana znacznika wyceny z kosztami
                                       {? _ok & DK.C<>_cena || exec('delWYCdk','faktury_wspolne',$DK.ref()) ?}
                                    ?};
                                    ND.cntx_pop();
                                    DK.cntx_pop()
                                 ?};
                                 _sklsql.next()
                              !}
                           ?};
                           obj_del(_sklsql);

::                         znalezienie i poprawienie ceny (rekurencyjnie) na dokumencie powiazanym (MM->MP)
                           {? ND.TYP().TD<>'' & ND.Z='T'
                           || DK.cntx_psh();
                              DK.index('DOKMAG');
                              DK.prefix(ND.ref());
                              _lastpoz:={? (1+ND.MAG().TYP)='D' & DK.last() || DK.P || 0 ?};
                              DK.cntx_pop();
::                            Obsluga przesuniec miedzymagazynowych
                              _refsql:=$ND.ref();

                              _st_oddz:='';
                              {? ST.ODDZ<>ND.MD().ODDZ
                              ||
                                 _st_oddz:=ST.ODDZ;
                                 ST.ODDZ:=ND.MD().ODDZ;
                                 exec('open','open_tab',ST.ODDZ,_msk.ROK)
                              ?};

                              ND.index('MM');
                              ND.prefix(_refsql,_refsql);
                              {? ND.first()
                              ||
                                 {? ~exec('czy_z_ok','okresy',1,1,ND.D~1,ND.D~2,ND.MAG)
                                 || undo();_ok:=0
                                 || DK.index('DOKMAG');
                                 DK.prefix(ND.ref,DK.P);
                                 _mref:=DK.M;
                                 _il:=DK.IL;
                                 _poz:=DK.P;
                                 {? DK.first() & DK.M=_mref & DK.C=_e
                                  & exec('oblildst','magdok_poz',ND.ref(),_lastpoz,DK.IL,DK.PRDK,_e,DK.P)=_il
                                 ||
                                    _cena:=_b;
                                    {? (DK.C<>_cena | _czy_tw | _zmdkc) & DK.N().Z='T'
                                    || _ok:=exec('zmcene','magdok_poz',DK.ref,_cena,0,1,DK.C,_tw,_zmdkc,_ndk_c);
::                                     zmiana znacznika wyceny z kosztami
                                       {? _ok & _cena<>DK.C || exec('delWYCdk','faktury_wspolne',$DK.ref()) ?};
                                       _prdk:=DK.PRDK;
                                       {? _ok & _lastpoz
                                       || DK.cntx_psh();
                                          DK.index('DOKMAG');
                                          DK.prefix(ND.ref());
                                          {? DK.last() & (DK.P>_lastpoz)
                                          || {!
                                             |? {? DK.C=_e & DK.PRDK=_prdk & DK.ZP=_poz
                                                || _ok:=exec('zmcene','magdok_poz',DK.ref,_cena,0,1,DK.C,_tw
                                                         ,_zmdkc,_ndk_c);
::                                                 zmiana znacznika wyceny z kosztami
                                                   {? _ok & _cena<>DK.C
                                                   || exec('delWYCdk','faktury_wspolne',$DK.ref())
                                                   ?}
                                                ?};
                                                _ok & DK.prev() & (DK.P>_lastpoz)
                                             !}
                                          ?};
                                          DK.cntx_pop()
                                       ?}
                                    ||
                                       DK.C:=_b;
                                       {? _czy_tw  || DK.TW:=_tw ?};
                                       {? _zmdkc=2
                                       || DK.DK_C:=_ndk_c;
                                          {? DK.M().IDMOB='A' | (DK.M().IDMOB='D' & DK.M().IDZP)
                                          || DK.SCEAN:=exec('zwrdkc_m','material',$DK.DK_C,DK.M)
                                          ?};
                                          {? DK.PLUS='N' & DK.FAP<>''
                                          || {? ~exec('modATRfap','magdok_wspolne',DK.FAP,_ndk_c) || undo() ?}
                                          ?}
                                       ?};
                                       {? DK.PLUS='T' & ND.WAL=_wal || DK.CWAL:=_c ?};
                                       DK.WAR:=(DK.C*DK.IL) $2;
                                       _ok:=DK.put();
::                                     naliczenie opłat dodatkowych
                                       {? _ok || exec('actTAXS','oplaty_dod',DK.N().uidref(),DK.uidref(),DK.M,DK.M) ?}
                                    ?}
                                 ||
                                    {? exec('nie_zdok','magdok_wspolne',DK.N().NDSQL)=1
                                    ||
                                       {? ~FUN.ask('Wystąpił błąd ze znalezieniem pozycji\n'+
                                             'na generowanym dokumencie %1'
                                             '.\n\nCzy kontynuować wycenę?'@[ND.SYM])
                                       ||
                                          undo();_ok:=0
                                       ?}
                                    ?}
                                 ?}
                                 ?}
                              ||
                                 {? exec('get','#params',600000,2)='N'
                                 || undo();_ok:=0
                                 ?}
                              ?};

                              {? _st_oddz<>''
                              ||
                                 ST.ODDZ:=_st_oddz;
                                 exec('open','open_tab',ST.ODDZ,_msk.ROK)
                              ?}
                           ?}
                        ?};
                        DK.cntx_pop()
                     ?}
                  ||
                     undo();
                     FUN.emsg('Wyceniany lub zmieniany dokument obsługuje inny użytkownik.'@);
                     _ok:=0
                  ?};
                  _next & _ok=1
               !}
            ?};
            _msk.next() & _ok=1
         !}
      ?};
      exec('open','open_tab',ST.ODDZ,_dan[5]);
      SC.cntx_pop();
      {? ~_dan[6]
      || undo();
         FUN.info('Wystąpił błąd ze znaleznieniem pozycji dokumentów magazynowych.'@);
         _ok:=0
      ?}
   |? DK.N().Z='T'
   ||
      undo();
      FUN.info('Nie znaleziono dostawy dla dokumentu %1.'@[DK.N().SYM]);
      _ok:=0
   ?};
   ST.ODDZ:=_stoddz
||
   undo();
   _ok:=0
?};
SC.cntx_pop();
SM.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();
DK.get();
_ok


\akzlst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: Aktualizuje pobrania do zlecenia.
::   WE: _a: ZL.ref()
::       _b: 1 - podczas akceptacji dokumentu
::          -1 - podczas wycofania dokumentu
::       _c: SLO.ref() - wydzial
::       [_d] - wycena pozycji dokumentu 0(domyslnie) 1(tak)
::       _e: [0]/1 - operacja grupowa
::  OLD: \akzlst/zlec5.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
{? _>=3 || {? type_of(_c)<>7 || _c:=null ?} || _c:=null ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
_group:=0;
{? var_pres('_c')=type_of(0)
|| _group:=_c
?};

_ok:=1;

_mpdoks:=exec('get','#params',500705,2,null());

OKR.cntx_psh();
OKR.index('OKR');
OKR.prefix(REF.FIRMA,ST.AR,ST.AM);
{? OKR.first()
|| {? ~_d & DK.ZL<>null()
    & ((DK.PLUS='T' | exec('is_usluga_typ','zl_uslugi',DK.N().TYP)) & _b=1
     | (DK.PLUS='N' & exec('is_usluga_typ','zl_uslugi',DK.N().TYP)=0) & _b=-1) & _mpdoks*(ND.TYP().T+' ')=0
:: Sprawdzenie czy zwracana ilosc na zlecenie nie przekracza pobranej
   || _ok:=exec('zlecenie','magdok_poz',DK.ZL,DK.WYD,2,_b)
:: Sprawdzenie czy pobranie nie przekroczy limitu - czy jest to realizacja zamowienia
:: nie jest sprawdzane dla surowców nielimitowanych
   |? DK.ZL<>null() & DK.PLUS='N' & _b=1 & (' '+_mpdoks)*(' '+ND.TYP().T+' ')=0 &
      exec('FindAndGet','#table',ZLIM,DK.ZLIM,,"ZLIM.LIMIT='T'",1)
   || _chk_limo:=exec('CHK_LIMOact','zl_limit',DK.ZL,DK.WYD,DK.M);
      {? 'IT'*_chk_limo
      || _lefton:=exec('limleft','zl_limit',DK.ZL,DK.WYD,DK.M,DK.IL);
         {? _lefton<DK.IL
         || {? _chk_limo='T'
            || _ok:=0
            ?};
            _txt:='[%1]  Limit przekroczony o %2 %3'@
               [form(DK.M().KTM+' - '+DK.M().N),form(DK.IL-_lefton,,,'9.'),DK.M().J().KOD];
            {? _group
            || exec('add_kom','#message',DK.N().SYM,5,gsub(_txt,'\n',' '))
            || exec('add_kom','#message',_txt,4)
            ?}
         ?}
      ?}
   ?};
   _updZK_P:=0;
:: tutaj wpis, ktory dla realizacji poza zamowieniem skoryguje zarezerwowane ilosci.
:: w przypadku gdy DK pochodzi z realizacji zamowienia to ilosci na ZK_P zalatwi mechanizm realizacji zamowienia
   {? _updZK_P & DK.ZAM_RN=''
   || exec('ZLST_2_ZK_P','zl_limit',DK.ZL,DK.WYD,DK.M)
   ?}
?};
OKR.cntx_pop();
_ok


\sklsql2c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: oblicza cene wg skladowych
::   WE: _a - ref SQL tabeli DK
::   WY: wartosc wg skladowych
::  OLD: \sklsql2c/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
DK.cntx_psh();
DK.index('SKLSQL');
DK.prefix(_a,_a);
{? DK.first || {! |? _wyn+=DK.WAR; DK.next !} ?};
DK.cntx_pop();
_wyn


\oblildst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: oblicza ilość po rozbiciu dostawy
::   WE: _a - nagłowek dokumentu
::       _b - ostatnia pozycja
::       _c - ilość
::       _d - pierwotna dostawa PRDK
::       _e - poprzednia cena
::       _f - pozycja
::   WY: ilość
::  OLD: \oblildst/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=_c;
{? _b>0
|| DK.cntx_psh();
   DK.index('DOKMAG');
   DK.prefix(_a);
   {? DK.last() & (DK.P>_b)
   || {!
      |? {? DK.PRDK=_d & DK.C=_e & DK.ZP=_f || _wyn+=DK.IL ?};
         DK.prev() & (DK.P>_b)
      !}
   ?};
   DK.cntx_pop()
?};
_wyn


\aktmil2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: aktualizauje pole DK.IL2 po zmianie pola DK.IL
::  OLD: \aktmil2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.T2<>'N' & DK.WS2<>0 & DK.M().J<>DK.J2
|| {? DK.M().J2<>null()
   || exec('oblJMG','jm',DK,'IL',DK.PLUS='T');
      BEER.IL22:=DK.IL2;
      1
   |? (BEER.MMJM+1)='1' | DK.T2='G'
   || _dokl:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
      {? _dokl<0 || _dokl:=exec('jaka_dok_m','jm',DK.M) ?};
      DK.IL2:=DK.IL*DK.WS2 $ (_dokl+1);
      roundmet(BEER.MDOKL);
      DK.IL2:=DK.IL2 $ _dokl;
      roundmet(5)
   || _dokl:=exec('jaka_dok_m','jm',DK.M);
      _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
      {? _dokl_s<0 || _dokl_s:=_dokl ?};
      DK.IL2:={? DK.WS2 || DK.IL/DK.WS2 || 0 ?} $ (_dokl_s+1);
      roundmet(BEER.MDOKL);
      DK.IL2:=DK.IL2 $ _dokl_s;
      roundmet(5)
   ?}
|| DK.J2:=DK.M().J; DK.WS2:=1; DK.IL2:=DK.IL
?}


\spr_zgp_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: Sprawdza ilosc z DK i ZGH
::   WE: _a - ZGP.ref
::       _b - DK.ref() - ref edytowanego dokumentu
::       _c - ilosc z aktualnego pola
::   WY: 1 - ok, 0 nie ok i komunikat
::  OLD: \spr_zgp_il/zl_koop.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3  || {? type_of(_c)<>1 || _c:=0 ?}  || _c:=0  ?};

_wyn:=1;
ZGP.cntx_psh();
ZGP.prefix();
{? _a<>null & ZGP.seek(_a)
||
   DK.cntx_psh();
   DK.index('ZGP');
   DK.prefix(ZGP.ref);
   {? DK.first
   ||
      _il_koop:=0;
      {!|?
         {? DK.ref<>_b & DK.N().TYP().KOOP='T' & DK.N().TYP().P='T'
         || _il_koop+=DK.IL
         ?};
         DK.next()
      !}
   ?};
   DK.cntx_pop();
   ZGP.IL_KOOP:=_il_koop + _c;
   {? ZGP.IL_KOOP<0 || ZGP.IL_KOOP:=0 ?};

   {? exec('is_first_op','zl_guide',ZGP.ref())>0
   ||
::    Jezeli kooperacja jest pierwsza operacja w procesie to w ogole nie kontrolujemy
::    ilosci, zeby mozna bylo wydac wiecej niz jest na zleceniu - zeby byla spojnosc
::    z rejestracja wykonania
      _wyn:=1
   ||
      {? exec('get','#params',500631,2)='N'
      || {? ZGP.ILOSC<ZGP.IL_KOOP
         || FUN.info('Zbyt duża ilość do wydania.'@);
            _wyn:=0
         ?}
      || _il_pop:=exec('il_na_poprz','zl_guide',ZGP.ref);
         {? _il_pop<ZGP.IL_KOOP
         || FUN.info('Zbyt duża ilość do wydania.'@);
            _wyn:=0
         ?}
      ?}
   ?}
?};
ZGP.cntx_pop();
_wyn


\zlecenie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: Funkcja sprawdza przekroczenie limitow okreslonych dla zlecenia.
::       Sprawdza czy zwracana ilosc nie przekracza pobranej.
::   WE: _a - ZL.ref()
::       _b - WYD - SLO.ref()
::       _c - 0 - brak komunikatu, 1 - choice, 2 - add_kom oraz przerwanie transakcji
::       [_d] - czy wywołanie z poziomu akceptacji (zakończenia 1) lub wycofania dokumentu (-1)
::       Kontekst wywolania - pozycja dokumentu (DK)
::   WY:  1 - limity zostaly przekroczone
::        0 - ok
::  OLD: \zlecenie/zlec5.fml
::----------------------------------------------------------------------------------------------------------------------
_zl:=_a;
_wyd:=_b;
_komm:=_c;
_akc:={? var_pres('_d')=type_of(0) || _d || 0 ?};

_ok:=1;
exec('openmask','zl_common',_zl);
DK.cntx_psh();
_poz:=DK.P;
_kod:=DK.M().KTM;
_ktm:=DK.M;

_tmp:=exec('zlim_pob_il_old','zl_limit',_zl,_wyd,_ktm,_akc<>0);
{? -menu_txt()='popraw' | _akc=1
|| DK.cntx_psh();
   DK.get();
   _dk_il_before:=DK.IL;
   DK.cntx_pop()
|| _dk_il_before:=0
?};
_il_pob:=_tmp.IL+_dk_il_before;
obj_del(_tmp);

_ok:=DK.IL<=_il_pob;
{? ~_ok
||
   {? _komm=2
   || exec('add_kom','#message','Ilość zwracana materiału %1 jest większa od ilości aktualnej na zleceniu.'@[_kod],4);
      POM.PAR1:='X';
      undo()
   |? _komm=1
   || FUN.emsg(
         'Ilość zwracana materiału %1 ponad ilość pobrań na zleceniu %2 (Poz. %3).'@
         [DK.M().KTM,DK.ZL().SYM,$DK.P]
      )
   ?}
?};
DK.cntx_pop();
_ok


\usun_dkg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: grupowe usuwanie pozycji DK
::  OLD: \usun_dkg/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__DKAGET');
__DKAGET:=DK.sel_aget();
DK.sel_adel();
exec('usun_dk','magdok_poz');
VAR_DEL.delete('__DKAGET');
1


\usun_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: usuwa pozycje DK
::   WE: [_a] - 1-bez komunikatow i pytan, 0(domyslnie)-z komunikatami i pytaniami
::  OLD: \usun_dk/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_up:=0;

{? var_pres('__DKAGET')<0
|| __DKAGET:=DK.sel_aget();
   __DKAGET.REF:=#DK.ref();
   __DKAGET.add()
?};
_ndxaget:=__DKAGET.ndx_tmp('',0,'REF',,);
__DKAGET.index(_ndxaget);
_czypal:=DK.N().MAG().PAL='T' & DK.M().RODZ<>'U';
_zpalet:={? _czypal || exec('spr_ppoz','magdok_palety',DK.ref()) || 0 ?};

_lpalet:={? _czypal & DK.PLUS<>'T' || exec('czy_lpal','magdok_palety',0,__DKAGET) || '' ?};
_czysce:=DK.N().TYP().P='T' & DK.SCEAN<>'' & DK.M().IDMOB='D';
_czyope:=exec('stND2EANN','magazyn_mobi')='K';

{? _czyope
|| FUN.info('Dokumentu został wysłany do potwierdzenia na urządzenie mobilne.\n\n'
    'Usunięcie pozycji dokumentu niemożliwe.'@)
|? _lpalet<>''
|| FUN.info('Pozycja dokumentu zawiera rozpakowaną paletę,\n'
    'która została całkowicie wydana (pozycja dokumentu wydania).\n'
    '%1 \n'
    'Usunięcie pozycji dokumentu niemożliwe.'@[_lpalet])
|| _pyt:={? _czypal
         || {? _zpalet<2
            || 'W magazynie z zastosowaniem palet usuwane są wszystkie pozycje związane z paletą.\n'
               'Usunąć wszystkie pozycje związane z paletą(ami)?'@
            |? _zpalet=3
            || 'W magazynie z zastosowaniem palet usuwane są wszystkie pozycje związane z paletą.\n'
               'Jednakże pozycje powstałe z rozpakowania palety usuwane są pojedynczo.\n'
               'Usunąć pozycję?'@
            || {? __DKAGET.size()>1 || 'Usunąć pozycje?'@ || 'Usunąć pozycję?'@ ?}
            ?}
         || {? __DKAGET.size()>1
            || 'Usunąć pozycje?'@
            || 'Usunąć pozycję?'@
              +{? _czysce || '\n\nPozycja ma przypisany kod identyfikacyjny dostawy.\nZostanie on usunięty.'@ || '' ?}
            ?}
         ?}
?};

:: Obsluga partii produkcyjnych - sprawdzenie czy dokument ma powiazania z partiami
:: Jesli tak to nie moge go usunac
:: Sprawdzenie usuwania RW, nie moga powodowac ujemnych pobran na limitach
_partie_ok:=1;
_rw_ok:=1;
__DKAGET.cntx_psh();
DK.cntx_psh(); DK.clear();
__DKAGET.clear();
{? __DKAGET.first()
||
:: deklaracje obiektow dla komunikatow
   exec('JCQ_decl','#message');
   {? var_pres('KOMM')<100 || KOMM:=obj_new(@.CLASS.JCQ) ?};
   KOMM.init(250,,'Sprawdzenie powiązań dokumentów'@,'',,,0);

   {!
   |? {? DK.seek(__DKAGET.REF,)
      ||
         {? exec('dk_is_rw','magdok_wspolne',DK.ref())>0 | exec('dk_is_zw','magdok_wspolne',DK.ref())>0
         || {? exec('dk_il_zpars','magdok_wspolne',$DK.ref())>0
            || _partie_ok:=0;
               _msg:='Pozycja dokumentu: %1. %2 jest powiązana z partiami produktu. '@[$DK.P,DK.M().KTM];
               _msg+='Usunięcie pozycji dokumentu niemożliwe. '@;
               _msg+='Aby usunąć ten dokument należy w obszarze Zleceń '@;
               _msg+='na zleceniu: %1 uruchomić \'ROZLICZENIE PARTII\''@[DK.ZL().SYM];
               _msg+=' i usunąć powiązanie z partią.'@;
               KOMM.add(_msg,'xwin16.png:2')
            ?}
         ?};
         {? exec('dk_is_rw','magdok_wspolne',DK.ref())>0 & DK.ZLIM<>null()
         ||
            _pob_il:=exec('ilosc_dk','zl_limit',DK.ZLIM,0);
            {? _pob_il-DK.IL<0
            || _rw_ok:=0;
               _msg:='Usunięcie pozycji dokumentu: %1. %2 niemożliwe, gdyż spowoduje ujemny stan na limicie zlecenia.'@
                     [$DK.P,DK.M().KTM];
               KOMM.add(_msg,'xwin16.png:2')
            ?}
         ?}
      ?};
      __DKAGET.next()
   !};

:: Wyswietlenie KOMMa
   KOMM.select()
?};
DK.cntx_pop();
__DKAGET.cntx_pop();

{? _partie_ok>0 & _rw_ok>0 & _lpalet='' & ~_czyope & exec('mod_dok','magdok_nag')
||
   _rr:=3;
   {? _czypal
   || _pal:=tab_tmp(2,'PAL','STRING[16]','','RDK','STRING[16]','');
      _dkr:=tab_tmp(1,'REF','INTEGER',''
             ,'ZAZ','INTEGER','');
      DK.cntx_psh();
      DK_L.cntx_psh();
      {? __DKAGET.first()
      || {!
         |? {? (DK.clear(); DK.seek(__DKAGET.REF,))
            || DK_L.index('DK');
               DK_L.prefix(DK.ref(),null);
               {? DK_L.first()
               || {!
                  |? _pal.clear();
                     {? DK_L.ZPALET=2
                     || {? ~_pal.find_key($DK_L.PAL,$DK_L.DK)
                        || _pal.blank();
                           _pal.PAL:=$DK_L.PAL;
                           _pal.RDK:=$DK_L.DK;
                           _pal.add(1)
                        ?}
                     || {? ~_pal.find_key($DK_L.PAL,'x')
                        || _pal.blank();
                           _pal.PAL:=$DK_L.PAL;
                           _pal.RDK:='x';
                           _pal.add(1)
                        ?}
                     ?};
                     _dkr.clear();
                     {? ~_dkr.find_key(#DK.ref())
                     || _dkr.blank();
                        _dkr.REF:=#DK.ref();
                        _dkr.ZAZ:=#__DKAGET.ref();
                        _dkr.add(1)
                     ?};
                     DK_L.next()
                  !}
               ?}
            ?};
            __DKAGET.next()
         !}
      ?};
      DK.cntx_pop();
      DK_L.cntx_pop()
   ?};
   {? __DKAGET.first()
   || {!
      |? {? DK.seek(__DKAGET.REF,)
         || _up:=
               {? DK.N().Z='N' & DK.N().TYP().P='T' & DK.N().TYP().DK='N' & DK.N().TYP().DS='N'
               || exec('czydkfap','magdok_poz',$DK.ref)
               |? DK.N().TYP().Z='T' & DK.N().TYP().P='N' & DK.N().TYP().DK='N'
               || _rr:=exec('returnrt','rezerwacje',$DK.ref(),form(8+$DK.ref())+3,0,DK.N().KH);
                  1
               || 1
               ?}
         ?};
         _rr=3 & _up=1 & __DKAGET.next()
      !}
   ?};

   {? ~(_czyzk:=exec('spr_zk','magdok_wspolne',1,1,'u',1))
   || {? _czypal || obj_del(_pal) ?};
      0
   |? DK.IL_ZT>0
   || FUN.info('Pozycja powiązana z dyspozycją transportu.\nUsunięcie niemożliwe.'@);
      0
   |? _up & _rr & {? _czyzk>1 & _a || 1 || {? ~_a || FUN.ask(_pyt) || 1 ?} ?}
   || {? _czyzk
      || _par:={? DK.PLUS='N' & DK.N().TYP().Z='T'
               || exec('get','#params',600800,2)
               |? DK.PLUS='N' & DK.N().TYP().Z='N'
               || _zkn:={? DK.ZAM_RN<>'' || exec('FindAndGet','#table',ZK_RN,DK.ZAM_RN,,"$N",'') || '' ?};
                  {? _zkn<>'' & exec('FindAndGet','#table',ZK_N,_zkn,,"LIM='T'",0)
                  || 'R'
                  || exec('get','#params',600801,2)
                  ?}
               |? DK.PLUS='T'
               || exec('get','#params',600803,2)
               || 'W'
               ?};
         {? ';PZ'*_par || _par:='R' ?};
         {? _par='R'
         || {? DK.PLUS='N'
            || exec('dk2zkn','zamsiw_rea',_par,DK.N,DK.ref(),DK.ZAM_RN,DK.ZAM_RP,DK.M,0,DK.M,DK.IL)
            || exec('dk2zdnag','zamdst_rea',_par,DK.N,DK.ref(),DK.ZAM_RN,DK.ZAM_RP,DK.M,0,DK.M,DK.IL)
            ?}
         ?}
      ?};
      _pali:=tab_tmp(1,'PAL','STRING[16]','');
      {? _czypal
      || do();
         _pal.clear;
         {? _pal.size() & _pal.first()
         || {!
            |? _rpal:=exec('FindAndGet','#table','PAL',_pal.PAL,,,null());
               DK_L.index('CZYPAL');
               DK_L.prefix(ND.ref(),_rpal);
               {? DK_L.first()
               || {!
                  |? {? DK_L.ZPALET=2
                     || {?  _pal.RDK=$DK_L.DK
                        || _cen_dk:={? (';FL'*DK.N().TYP().AFIFO)>1 || -1 || DK_L.DK().C ?};
                           exec('poz_bpal','magdok_palety'
                                ,0,$DK_L.PALDO,$DK_L.PAL,DK_L.DK().M().KTM,DK_L.IL,_cen_dk,DK_L.TW);
                           exec('zwrilpal','magdok_palety'
                                ,_rpal,DK_L.DK().M().KTM,DK_L.IL,_cen_dk,DK_L.TW);
                           DK_L.del()
                        || DK_L.next()
                        ?}
                     || {? DK.seek(DK_L.DK)
                        || DK.IL-=DK_L.IL;
                           {? DK.T2='G' | DK.WS2=1 || DK.IL2:=DK.IL ?};
                           DK.WAR:=(DK.IL*DK.C)$2;
                           DK.put();
                           {? DK.IL<=0
                           || _dkr.clear();
                              {? ~_dkr.find_key(#DK.ref())
                              || __DKAGET.clear();
                                 __DKAGET.blank();
                                 __DKAGET.REF:=#DK.ref();
                                 __DKAGET.add(1)
                              ?}
                           ?}
                        ?};
                        DK_L.del()
                     ?}
                  !}
               ?};
               exec('znacznik','magdok_palety',_rpal);
               _pal.next()
            !}
         ?};
         obj_del(_pal);
         obj_del(_dkr)
      ?};

      {? __DKAGET.first()
      || {? DK.seek(__DKAGET.REF,) & DK.N().Z='N'
         ||
            _plus:=DK.PLUS='T';
            _iledk:=DK.IL;
            {? _plus=0 || exec('utw_zk_tymc','zamsiw_wspolne') ?};
            {!
            |? {? DK.seek(__DKAGET.REF,)
               || _ref_nd:=DK.N;_mat:=DK.M;_mag:=DK.N().MAG;
                  {? ~_czypal || do() ?};
                  exec('delprzyp','fakso','FAKSO','DK',DK.ref);
                  {? _up=2 || exec('dkfapdel','magdok_poz',$DK.ref) ?};
                  exec('dk_del','magdok_poz',$DK.ref());

::                Produkcja aktualizacja ilosci na pozycji przewodnika
                  {? DK.ZGP<>null & DK.N().TYP().KOOP='T' & DK.N().TYP().P='T'
                  || exec('akt_zgp_ilkoop','zl_koop',DK.ZGP,DK.IL)
                  ?};
                  exec('delFAP_K','oplaty_dod',DK.N().uidref(),DK.uidref(),null());
                  FAP_K.index('DKSQL');
                  FAP_K.prefix($DK.ref());
                  {? FAP_K.first() || {! |? exec('dk_k_del','magdok_poz') !} ?};

::                usuniecie rozpiski lokalizacji
                  DK_L.index('DK');
                  DK_L.prefix(DK.ref(),null);
                  {? DK_L.first()
                  || {!
                     |? {? DK_L.PAL<>null
                        || _pali.clear();
                           {? ~_pali.find_key($DK_L.PAL)
                           || _pali.blank();
                              _pali.PAL:=$DK_L.PAL;
                              _pali.add(1)
                           ?}
                        ?};
                        DK_L.del()
                     !}
                  ?};
                  exec('karo_dk_del','magdok_poz',$DK.ref());
                  _dane:=obj_new(5);
                  _dane[1]:=$DK.ref(); _dane[2]:=DK.IL; _dane[3]:=DK.M; _dane[4]:=DK.N().KH;
                  _dane[5]:=DK.PROJEKT;
::                kasowanie historii dostawy
                  {? var_pres('_dkhsdel')>100 || obj_del(_dkhsdel) ?};
                  _dkhsdel:=exec('DK_HSchkDK_SRC','statexam',DK.ref());
                  {? _dkhsdel.State>0
                  || _del:=exec('DK_HS_del4DK','statexam',DK.ref());
                     {? _del
                     || 1
                     || undo()
                     ?};
                     ~~
                  || undo();
                     ~~
                  ?};
                  {? DK.PLUS='N'
                  || exec('update','rezerwacje','DK',DK.ref(),ND.MAG,DK.M,0,DK.SRDK);
                     exec('aktu_rez','rezerwacje',DK.M
                          ,exec('FindInSet','#table','REZ','RODZ',DK.M,'W',"REZ.NRK",,,0),DK.IL);
                     exec('returnrt','rezerwacje',$DK.ref(),form((8+($DK.ref())))+3,_rr,DK.N().KH)
                  ?};
                  {? DK.N().TYP().P='T' & ~(DK.N().TYP().DN='T' & DK.DOST<>date(0,0,0))
                   & DK.SCEAN<>'' & DK.M().IDMOB='D' & DK.SRDK=DK.PRDK
                  || {? ~exec('mkodkadd','kody_kresk',DK.M,DK.SCEAN,$DK.ref(),1) || undo() ?}
                  ?};
                  exec('del','dokuml',DK.uidref());
::                   Dla dokumentu RW sprawdzane jest, czy usuwana pozycja jest ostanią pozycją dokumentu RW danego limitu.
::                   Jeżeli tak to odblokowuję możliwość rejestracji nielimitu/odpadu na zleceniu montażowym/podzleceniu.
                  _chk_lim:=(exec('nd_is_rw','magdok_wspolne',DK.N) | exec('nd_is_zw','magdok_wspolne',DK.N)) & DK.ZLIM<>null()
                            & exec('FindAndGet','#table',ZLIM,DK.ZLIM,,
                               "ZLIM.PODZL<>'' & (ZLIM.SO='O' | ZLIM.SO='S' & ZLIM.LIMIT='N')",0);
                  _zlim:=DK.ZLIM;
                  _uidref:=DK.uidref();
                  _zgp:=DK.ZGP;
                  _zparn:=DK.PARTIA;
                  {? do_state()=1 & DK.del(,1)
                  || exec('aktu_poz','magdok_poz');
                     {? _chk_lim
                     || exec('zlim_chk_podzl','zl_limit',_zlim)
                     ?};

                     {? exec('dk_is_rp','magdok_wspolne',DK.ref())
                     ||
::                      Usunięcie powiązań z robocizną
                        exec('robocizna_dk_del','magdok_prod',_uidref,_zgp,_zparn)
                     ?}
                  ?};
                  obj_del(_dane);
                  exec('dk_sum','magdok_wspolne',_ref_nd);
                  {? ~_czypal || end() ?};
::                aktualizacja znacznikow na paletach
                  {? _pali.size() & _pali.first()
                  || {!
                     |? exec('znacznik','magdok_palety',exec('FindAndGet','#table','PAL',_pali.PAL,,,null()));
                        _pali.next()
                     !}
                  ?};
                  exec('obl_stan','magazyn_stan',_mat,1,_mag);
                  {? _dkhsdel.State=0
                  || {? +_dkhsdel.WdrMsg>0  || FUN.error(_dkhsdel.WdrMsg) ?};
                     {? ~_czypal & +_dkhsdel.Message>0
                      & FUN.ask('Pozycja %1: %2\n Czy wyświetlić pozycje zależne?'@[form(DK.P,,0,'99'),_dkhsdel.Message])
                     || exec('ShowDKHSrc4DK','statexam',_dkhsdel.Result)
                     ?};
                     ~~
                  ?};
                  {? var_pres('_dkhsdel')>100 || obj_del(_dkhsdel) ?};
                  {? _plus=0 || exec('aktu_stu','zamsiw_wspolne',_mat) ?}
               ?};
               __DKAGET.next()
            !};
            {? _plus=0 || exec('odt_zk_tymc','zamsiw_wspolne',-_iledk) ?}
         || {? ~_a || FUN.info('Dokument zaakceptowany. Usunięcie niemożliwe.'@) ?}
         ?}
      ?};
      {? _czypal || end() ?};
      obj_del(_pali)
   || {? _czypal || obj_del(_pal) ?}
   ?}
?};
__DKAGET.ndx_drop(_ndxaget);
VAR_DEL.delete('__DKAGET');
1


\pos_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: rekord przed dla DK w okienkach wertowania
::  OLD: \pos_dk/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.M<>null
|| POMOC.RODZ:=DK.M().RODZ
?};
_no_et:={? ~exec('isDEFetyk','magazyn_mobi','DK') || 'N(T)' || '' ?};

exec('obl_mwb','magdok_poz');
POMOC.OPAKOW:='N';
HELP.POS:=DK.P;
{? (1+DK.N().MAG().TYP)='D' & DK.PLUS='N' & DK.N().Z='N' & DK.RDK & DK.NDK<>''
|| _dost:=date(0,0,0);
   ND.cntx_psh(); DK.cntx_psh();
   DK.use(DK.NDK); DK.clear(); {? DK.seek(DK.RDK,) || _dost:=DK.DOST ?};
   ND.cntx_pop(); DK.cntx_pop();
   {? _dost<>date(0,0,0) & _dost<>DK.DOST || DK.DOST:=_dost; DK.put(1) ?}
?};
_wer:=DK.win_sel('?');
{? ';WER_DOK;WER_GDOK;WERL;'*(';'+_wer+';')
|| _czy_akc:=ND.Z='T' | (';ZT'*ND.STAT_REJ)>1;
   {? DPOZ.POZ | _wer='WERL'
   ||
::    wyłączone
      _act:=':';
      {? DK.PLUS='T' || _act:='G'+_act+'G' ?};
      {? DK.N().FAKS<>null | (DK.N().INN='T' & DK.N().TYP().INW<>'N') || _act:='W'+_act ?};
      {? DK.N().MAG().U<>'T' | DK.PLUS='T' | (DK.PLUS='N' & DK.N().TYP().TD<>'') || _act:='G'+_act+'G' ?};
      {? ~(DK.N().MAG().TYP*'DOST') | DK.N().TYP().P<>'T' || _act:='R'+_act ?};
      {? DK.N().MAG().SL<>'T' || _act:='M'+_act ?};
      {? BEER.MENU_PTH<>'ZZRRD' & BEER.MENU_PTH<>'ZZTRRD' & BEER.MENU_PTH<>'ZRD'
       & 'ŚE'*(1+DK.N().MAG().TYP)>0 & _czy_akc
      || _act:='P'+_act
      ?};
      {? BEER.MENU_PTH+1='D'
      || _act:='DR'+_act+'D';
         {? DK.N().Z='T' | (';ZT'*ND.STAT_REJ)>1
         || {? exec('get','#params',1003,2,OPERATOR.USER)<>'T' | DK.PLUS='N'
            || _act:='P'+_act
            ?}
         ?}
      ?};
      {? ND.ZAK='T' || _act:='N(P)WP'+_act ?};
      {? DPOZ.NAG=0 || _act:='TN(WP)'+_act ?};
      {? DK.N().MAG().PAL='T' || _act:='D'+_act+'D' || _act:='T'+_act+'T' ?};
      {? DK.N().TYP().P='N'
      || _act:='F'+_act
      || {? exec('get','#params',540101,2,null())<>'T'
          | ~exec('chk_role','#b__box',OPERATOR.USER,'LMG_BAD_DWYK')
         || _act:='F(B)'+_act
         ?};
         {? ~exec('chk_role','#b__box',OPERATOR.USER,'LMG_BAD_EAKC')
         || _act:='F(M)'+_act
         ?}
      ?};
      {? DK.win_sel('?')='WERL'
      || _wer:='WER';
         DK.actions('WER',_act,,1)
      || _wer:='WER_DOK';
         DK.actions('WER_DOK',_act,,1)
      ?};

::    wyszarzone
      _act:=_no_et+
            {? DK.N().Z='T' | (';ZT'*ND.STAT_REJ)>1
            || {? exec('get','#params',1003,2,OPERATOR.USER)='T' & DK.PLUS='T'
               || 'D'+'U'+   +'T'+'C'+'R'+'G'+':'+'D'+'G'
               || 'D'+'U'+'P'+'T'+'C'+'R'+'G'+':'+'D'+'G'
               ?}
            || 'W'
            ?};
      {? DK.N().STAT_REJ='N' || _act:='A'+_act
      |? DK.N().STAT_REJ='Z' || _act:='ZN(P)'+_act
      |? DK.N().STAT_REJ='T' || _act:='ZAN(P)'+_act
      ?};
      DK.actions_grayed(_wer,_act)
   ||
::    wyłączone
      _act:='';
      {? DPOZ.NAG=0 || _act:='ZTN(WP)'+_act ?};
      _act:=_act
         +{? DK.N().MAG().SL<>'T' & {? DK.N().MD=null || 1 || DK.N().MD().PAL<>'T' ?} || 'M' || '' ?}
         +'DUPACGWRHFE:DAGW';
      DK.actions('WER_DOK',_act,,1)
   ?}

?};
exec('dkr_okna','magdok_poz',DK.M().RODZ='U');
_prod:=exec('tte_lic','tte');
{? DISP.DISP
|| _allact:=exec('allActions','#string','wsSL');
   DK.actions_grayed('WER_DOK',_allact)
?};
{? DK.PLUS='N' & DK.N().TYP().DK='W'
|| _allact:=exec('allActions','#string','wsSLH');
   DK.actions_grayed('WER_POZ',_allact)
|? (';KR+;KR-;'*DK.N().TYP().T)>1
|| _allact:=exec('allActions','#string','wsSLH');
   DK.actions('WERU',_allact)
?};
:: okienko dokumentu z poziomu realizacji
{? ~DISP.DISP & ';WER_DOK;WER_POZ;WER_REA;WER_GREA;WERR;WERGR;WERUR;'*_wer
|| _koop:=AreaTitle.area='TTE_KOO';
   _cact:={? ~_koop & DK.PLUS='T' || 'LMG_MAG_DAPZ'
          |? ~_koop & DK.PLUS='N' || 'LMG_MAG_DWYD'
          |?  _koop & DK.PLUS='T' || 'TTE_WYK_DKOW'
          |?  _koop & DK.PLUS='N' || 'TTE_WYK_DKOP'
          || 'LMG_MAG_DAPZ'
          ?};
   _edit:=exec('chk_role','#b__box',OPERATOR.USER,_cact);
   _wyco:=exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_EWMG');
   _stat:=DK.N().STAT_REJ;

   _aoff:=':';
   _gray:='';

   {? DK.N().MAG().PAL='T'  || _aoff:='RDGO'+_aoff+'DO' || _aoff:='T'+_aoff+'T' ?};
   {? DK.N().MAG().SL<>'T'  || _aoff:='M'+_aoff ?};
   {? DK.N().MAG().U<>'T'
    | DK.N().TYP().ZLEC='T' || _aoff:='G'+_aoff+'G' ?};
   {? DK.PLUS='T'           || _aoff:='GO'+_aoff+'GO' ?};
   {? ~_edit                || _aoff:='DTGPUO'+_aoff+'DTG' ?};
   {? (1+DK.N().MAG().TYP)<>'D' | DK.N().TYP().P<>'T' || _aoff:='R'+_aoff ?};
   {? (+_aoff)=1            || _aoff:='' ?};

   {? ~_edit | _stat<>'N'   || _gray:='ZUDTGPUO'+_gray ?};
   {? _stat='N'
     | (~_edit & ~_wyco)    || _gray:='AN(C)'+_gray
   |? _stat='T'             || _gray:='RA'+{? ~_wyco || 'N(C)' || '' ?}+_gray
   |? _stat='Z'             || _gray:='R'+{? ~_edit || 'N(C)' || '' ?}+_gray
   ?};
:: dokument powiązany z wyposażeniem
   {? exec('FindInSet','#table','KARO','GENDK',$DK.ref(),,,1) || _gray:='P'+_gray ?};
   DK.actions('WER_REA',_aoff,,1);
   DK.actions_grayed('WER_REA',_gray)
?};
{? DK.win_sel('?')='WERGR' | DK.win_sel('?')='WER'
||
   DISP.C:=exec('cena_mag','ceny',DK.M,DK.RDK,DK.NDK,,DK.C);
   exec('rekprzed','color','DKK#01')
|? _prod='T'
 & ((' '+exec('get','#params',500701,2,null()))*(' '+TYPYDOK.T+' ')>0)
 & DK.win_sel('?')='WER_DOK'
 & ((' '+exec('get','#params',500704,2,null()))*(' '+ST.TYPYDOK().T+' ')>0)
|| exec('rekprzed','color','DK#02')
?}


\dks_okna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: ustawienie okien select dla pozycji dokumentu magazynowego
::   WY: akronim niegrupowego okna wertowaia tabeli DK
::  OLD: \dks_okna/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_result:='';
_usl:='';_act:='';_d_act:='';

_czy_inp:=(ND.INN='T' & ND.TYP().INW<>'N');
:: czy badania
_badan:={? ND.MAG().SKL<>'T' & exec('get','#params',540101,2,null())='T' & ND.TYP().KOOP<>'T' & ND.TYP().WYR<>'U'
        || ~(_czy_inp)
        || 0
        ?};

_czy_akc:=ND.Z='T' | (';ZT'*ND.STAT_REJ)>1;
_odakczz:=~_czy_akc & ND.TYP().P='T' & ND.TYP().Z='T' & ND.TYP().DN<>'N' & ND.F='T' & exec('spr_zz','opakow');

{? _odakczz
|| _act:='PMENDAGUTOZRCFC:DAEGOCNP'
|? HELP.DKRED='N' | exec('czy_z_ok','okresy',1,0)=0 | exec('czy_z_ok','okresy',1,0,ND.AR,ND.AM,ND.MAG)=0 |
   ~exec('spr_inwe','magdok_wspolne',0)
||
   _act:=
      {? ND.MAG().SL<>'T' || 'M' || '' ?}+
      {? (ND.MAG().TYP*'EWI') & (ND.INN='T' & ND.TYP().INW='I') || '' || 'P' ?}+
      {? (ND.INN='T' & ND.TYP().INW='I' & ND.TYP().P='T') & ND.MAG().TYP*'DOST' || '' || 'F' ?}+
      'WDAGUTOZRC:DAGOC'
||
   {? ((ND.TYP().P='N' & ND.MAG().U='T' & ND.TYP().ZLEC<>'T')
         |
      ((TYPYDOK.UPRW='T' ) & ND.MAG().TYP*'DOST')) & ND.TYP().KOOP<>'T'
   || _usl:='U'
   |? ND.TYP().KOOP='T'
   || _usl:='_KOO'
   ?};

   {? ND.MAG().SKL='T'
   || _usl:='SC'
   ?};
:: ustawianie akcji domyslnej
   _d_act:='D:D';
   _p_act:='';

:: wylaczanie akcji dolacz
   {? _czy_akc
    | (ND.MAG().PAL='T' & ~exec('isB_ROZP','magdok_palety'))
    | BEER.REORG
   || _act+='DR'+{? _usl='U' & ~_czy_akc || '' || 'G' ?}; _p_act+='D'+{? _usl='U' & ~_czy_akc || '' || 'G' ?}
   ?};
:: wylaczenie akcji z palet
   {? _czy_akc | ND.MAG().PAL='N' | BEER.REORG || _act+='A'; _p_act+='A' ?};
:: wylaczenie akcji usun
   {? _czy_akc | BEER.REORG || _act+='U'?};

:: wylaczanie akcji popraw
   _tmg:=1+ND.MAG().TYP;
   _ewi:=ND.MAG().TYP*'EWI';
   _czyzero:=exec('get','#params',600104,2)='T';
   _param:=exec('get','#params',1003,2,OPERATOR.USER);
   _kor:=exec('czy_kor','magdok_wspolne',$ND.ref());
   {? _param='T' & _czy_akc & ~exec('chk_wyc','magdok_wspolne',ND.D,0,,ND.T) || _param:='N' ?};
   {? ND.ZAK='T' | _kor | ND.INTRA='T' |
      (_czy_akc & (ND.TYP().P='N' | ND.MAG().SKL='T' | ('Ś'*_tmg)>0 | (~_czyzero & _ewi) | _param<>'T'
        | {? ND.TYP().P='T' || exec('nie_zdok','magdok_wspolne',ND.NDSQL,1)=0 || 0 ?}))
   || _act+='P'
   ?};

   {? ~(ND.MAG().TYP*'DOST') | ND.TYP().P<>'T' | ND.Z<>'N' || _act+='R' ?};

:: wylaczenie akcji dolaczenia z rezerwacji tymczasowych
   {? ND.MAG().PAL='T' | ND.MAG().SKL='T' | ND.TYP().P='T' | ND.TYP().ZLEC='T' | ND.TYP().TD<>'' | _czy_akc | ND.ZAK='T'
    | _kor | ND.TYP().Z='N' | BEER.REORG
   || _act+='O'; _p_act+='O'
   ?};
   {? ND.MAG().U<>'T' | ND.TYP().Z<>'T' || _act+='G';_p_act+='G' ?};
:   {? ND.TYP().UE<>'T' || _act+='C' ?};

:: wylaczenie kontrolingu
   _act:='W'+_act;

:: wylaczenie akcji Popraw dla zamknietego magazynu
   {? ~exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,ST.MAG) || _act+='p' ?};

:: wylaczenie kosztow dla korekt wartosciowych
   {? ND.TYP().DK='W' || _act+='Z' ?};

:: wylacznie naliczania gratisow, szczegoly cennikow, przeliczanie wg cennikow
   {? ND.TYP().P='T' || _act:='N(YSC)'+_act
   |? ND.TYP().P='N' & _czy_akc || _act:='N(CYR)'+_act
   ?};

:: dla korekt
   {? ND.TYP().DK='T' || _act+='P' ?};

:: wylaczenie obslugi zlecen
   _prod:=exec('tte_lic','tte');
   {? ND.TYP().ZLEC<>'T' | ND.TYP().WYR='T' | _prod='N' | _czy_akc |  ND.TYP().P<>'N'
   || _act+='C'; _p_act+='C'
   ?};
   {? ND.TYP().ZLEC<>'T' | ND.TYP().WYR='N' | _prod='N' |  ND.TYP().P<>'T'
   || _act+='I'; _p_act+='I'
   ?};
:: dla wymiarow
   {? ND.MAG().SL<>'T' & {? ND.MD=null || 1 || ND.MD().PAL<>'T' ?}
    & ~(ND.MAG().PAL='T' & (ND.INN='T' & ND.TYP().INW='I'))
   || _act+='M'
   ?};

:: wylaczenie kwalifikacji dostaw
   {? (1+ND.MAG().TYP)<>'D'
    | ND.TYP().P<>'T'
    | {? ND.MAG().DEFSTATS=null() || FUN.info('Proszę ustalić domyślny status dostawy dla magazynu.'@); 1 ?}
   || _act+='F'
   ?};

   {? exec('get','#params',540101,2,null())<>'T'
    | ~exec('chk_role','#b__box',OPERATOR.USER,'LMG_BAD_DWYK')
   || _act+='F(B)'
   ?};

   {? ~exec('chk_role','#b__box',OPERATOR.USER,'LMG_BAD_EAKC')
   || _act+='F(M)'
   ?};

:: wylaczenie funkcji [przelicz wg Cennikow], [nalicz gratisY], [udziel Rabatu], [Szczegoly cennika/gratisu]
   {? ND.TYP().CS='N'
   || _act:='N(CYSR)'+_act
   |? ~(ND.TYP().P='N' & ND.TYP().DS='T')
   || _act:='N(CYR)'+_act
   ?};
   {? _p_act<>'' || _act:=_act+':'+_p_act ?}

?};
:: akcja przypisz zlecenie
{? ~exec('czyAddZL','magdok_poz') || _act:='E'+_act ?};
:: Dane do Intrastat
_dane_INTR:={? ND.IST_TYP='' || ~((exec('get','#params',100205,2,null())*('%1 '[ND.TYP().T]))>0) || 0 ?};
{? _dane_INTR || _act:='N(E)'+_act ?};

DK_C.win_dict('WER');
KK.win_dict('SLO');

_cos:=ND.MAG().COS='T';
_win:='WER';
_result:=_win;
DK_L.actions('WER',{? _czy_akc || 'dup:d' || {? ND.MAG().PAL='T' || 'd:d' || '' ?} ?});

{? ND.MAG().PAL='T' || _d_act:='A:A' ?};

{? (ND.TYP().P='N' & ND.TYP().DK='W') | ND.TYP().DK='T'
|| _result:='WER_POZ';
   DK.win_sel(_result)

|? ND.TYP().CS='T' | _cos
||
   _win:='WER'+_usl;
   _result:=_win;
:: dokumenty powiazane ze sprzedaza
   _sel:=DK.grp_make('Pozycje dokumentu magazynowego'@,,'_dks_okna_rcs_');
:: wartosci magazynowe
   DK.actions(_win,_act,_d_act);
:: wersja branżowa
   {? exec('get_par','#parametr',141)='T' & _badan
    & ND.MAG().SKL='T' & ND.MAG().MG_OPAK=''
   || DK.grp_sel(_sel,DK,_win,'Wartości magazynowe'@,"exec('badp_sel','statexam')",,,
                 ,"exec('po_weru','magdok_poz')",,,,,'maximized');
      DK.tab_splt(_sel,,'vertical','panel1');
      DK.grp_sel(_sel,BADP,'WERDKR',,,,,,"exec('po_weru','magdok_poz')")
   || DK.grp_sel(_sel,DK,_win,'Wartości magazynowe'@,"",,,,"exec('po_weru','magdok_poz')",,,,'maximized')
   ?};
:: wartosci sprzedazy (pomijane dla skladu - brak okienka 'WESSC')
   {? ND.MAG().SKL<>'T'
   ||
      DK.actions('WES'+_usl,_act+{? _cos || 'DP' || '' ?},_d_act);
      DK.grp_sel(_sel,DK,'WES'+_usl,'Wartości sprzedaży'@,,,,,"exec('po_wesu','magdok_poz')",,,,'maximized')
   ?};
:: opakowania
   {? ND.MAG().MG_OPAK<>''
   || DK.grp_sel(_sel,OPAK_P,'WER','Opakowania'@,,,,,"exec('opak_wer','opakow')"
                 ,"exec('opak_out','opakow')",,,'maximized')
   ?};
   DK.win_sel(_sel)
||
   _win:='WER'+_usl;
   _result:=_win;
:: rejestracja realizacji usług
   {? ND.TYP().WYR='U'
   || _act:='DPU'+_act
   ?};

   {? ND.MAG().MG_OPAK<>'' & (ND.TYP().Z='T' | ND.TYP().T='BO')
   ||
::    okno grupowe z dodatkowa zakladka dot. opakowan
      DK.win_sel('WERGR'+_usl);
      {? _odakczz || tab_sel(2) ?}
   || {? (_win='WER' | (ND.INN='T' & ND.TYP().INW<>'N') | ND.MAG().SL<>'T')
       & {? ND.MD=null || 1 || ND.MD().PAL<>'T' ?} & ~(ND.MAG().PAL='T' & (ND.INN='T' & ND.TYP().INW='I'))
      || _act:='M'+_act
      ?};
      DK.win_sel(_win+{? _win='WER' & ~(ND.INN='T' & ND.TYP().INW<>'N')
                       & (ND.MAG().SL='T' | {? ND.MD=null || 0 || ND.MD().PAL='T' ?}) || 'L' || '' ?}
                       +{? _badan || 'R' || ''?})
   ?};
:: pozostale dokumenty
   DK.actions(_win,_act,_d_act,1)
?};
:: drag&drop - zmiana pozycji tylko dla niezaakceptowanych przychodowych
{? ~_czy_akc & ND.TYP().P='T'
||
   _dnd_fml:="exec('renumdk','magdok_wspolne')"
||
:: nalezy wylaczyc d&d dla okienka
   _dnd_fml:=""
?};
DK.dnd_sel(_win,,'records.DK',_dnd_fml);
_formikon:="{? ATR.INDATR='X'
            || ATR.INDATR:=''; 'xwin16.png:15'
            |? ATR.INDATR='N'
            || ATR.INDATR:=''; 'xwin16.png:91'
            |? ATR.INDATR='1'
            || ATR.INDATR:=''; 'xwin16.png:83'
            |? ATR.INDATR='2'
            || ATR.INDATR:=''; 'xwin16.png:184'
            |? ATR.INDATR='3'
            || ATR.INDATR:=''; 'xwin16.png:120'
            |? ATR.INDATR='4'
            || ATR.INDATR:=''; 'xwin16.png:49'
            |? ATR.INDATR='5'
            || ATR.INDATR:=''; 'xwin16.png:17'
            || ATR.INDATR:=''; ''
            ?}";
DK.win_fml('WER',ATR,'INDATR',,'ICON_BEFORE',_formikon);
DK.win_fml('WER_DOK',ATR,'INDATR',,'ICON_BEFORE',_formikon);
DK.win_fml('WER_KOO',ATR,'INDATR',,'ICON_BEFORE',_formikon);
_formikon:="{? exec('FindInSet','#table','FAP_K','TAXS',DK.uidref())<>null()
            || 'xwin16.png:10'
            || exec('pusta','#icon')
            ?}";
DK.win_fml('WER',DK,'WAR',,'ICON_BEFORE',_formikon);
DK.win_fml('WER_DOK',DK,'WAR',,'ICON_BEFORE',_formikon);
DK.win_fml('WER_REA',DK,'WAR',,'ICON_BEFORE',_formikon);
exec('dk_p_ib','magdok_poz',_result);
_result


\dk_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zwraca akronim okno redakcji tabeli DK
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_akr:='';
_rodz:={? ND.TYP().P='T' | ND.TYP().DK='T'
       || 'P'
       |? ND.MAG().PAL='T' & ND.TYP().P='N' & exec('FindInSet','#table','PAL','NOPAL',ND.MAG,'B',,,,null())<>null()
       || 'R'
       || 'W'
       ?};
_typs:={? ND.MAG().SKL='T'   || 'S'
       |? ND.TYP().KOOP='T'  || 'K'
       |? 'TO'*ND.TYP().ZLEC | ND.TYP().Z='N' || 'Z'
       || 'N'
       ?};
_win_akr:=_rodz+'RED'+_typs;
_win_akr


\dkr_okna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: ustawienie okien redakcji dla pozycji dokumentu magazynowego
::   WE: [_a] ustaw okienko dla uslug
::       [_b] 1-usuń okienko tymczasowe (domyślnie) 0-nie
::   WY: akronim okna
::  OLD: \dkr_okna/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_win_red:='';
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
exec('editwg_a','mat_atr');
_win_ed:='RED';
_win_er:=exec('get_par','#parametr',141)='T' | (ATR.CZY_ATR & ATR.EDIT);
{? ND.TYP().DS='T' & ND.TYP().CS<>'N'
|| _win_ed:={? ND.WAL<>INFO.NAROD || 'W' || BEER.LW ?}+_win_ed;
   _win_ed+='2';
   {? ND.MAG().U='T'& _a || _win_ed+='1' ?};
   {? ND.MAG().SKL='T' || _win_ed+='SC' ?}
||
   {? ND.TYP().P='T'
   ||
      {? ND.MAG().SKL='T'
      || _win_ed+='1SC'
      |? (ND.TYP().WAL='T' | BEER.LW='W' | {? ND.WAL<>INFO.NAROD || BEER.WW:=3; 1 || BEER.LW='W' ?})
       & ND.TYP().T<>'BO'
      || _win_ed+='11'
      |? ND.TYP().ZLEC<>'N' | ND.TYP().T='BO'
      || _win_ed+='1'
      || _win_ed+='1'
      ?}
   ||
      {? ND.MAG().SKL='T'
      || _win_ed+='0SC'
      |? ND.TYP().T='KR-'
      || _win_ed+='11'
      || _win_ed+='0'
      ?}
   ?}
?};
_win_ed:='G'+_win_ed;
{? ND.TYP().ZLEC='T' | ND.TYP().ZLEC='O' || _win_ed+='Z' ?};
{? (exec('get','#params',540101,2,null())='T' | _win_er)
 & ND.MAG().SKL<>'T' & ND.MAG().TYP*'DOST'
 & (_win_ed+2)<>'21'
||
   _win_ed+='R'
?};
:: Obsluga kooperacji
{? ND.TYP().KOOP='T'
|| {? ND.TYP().P='T'
   ||
::    Wydanie do kooperacji
      _win_ed:='KOOP_WK'
   |? ND.TYP().P='N'
   ||
::    Przyjęcie z kooperacji
      _win_ed:='KOOP_PK'
   ?}
?};

{? _b || _editwin:=DK.win_edit('?') ?};
_win_akr:=exec('dk_win_edit','magdok_poz');
{? (';WREDN;RREDN;'*';%1;'[_win_akr])>0
|| DK.btn_eopt(_win_akr,'INF','state=normal')
|| DK.btn_eopt(_win_akr,'ATRYB','state=normal')
?};
{? (1+_win_akr)='P'
:: Tymczasowe okno redakcji
|| _title:='Dane pozycji dokumentu'@;
   _win_red:=DK.mk_edit(_title,,'magdokpoz1',,,'html_maximized');
   DK.win_etab(_win_red,'Dane podstawowe'@);
   DK.win_ewin(_win_red,,_win_akr);
   {? (_win_akr+1)<>'S'
   || DK.win_etab(_win_red,'Dane do Intrastat'@);
      DK.win_ewin(_win_red,,'INTRA')
   ?};
   {? ND.TYP().UPRW<>'T' & (1+ND.MAG().TYP)='D' & ND.MAG().PAL<>'T'
   || DK.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=0,edit=1'['Kody &ID'@]
        ,"exec('oblkodid','magdok_poz')");
      DK.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=0,edit=1'['&Nowy kod ID'@]
        ,"exec('newkodid','magdok_poz')")
   ?}
:: Okno redkacji
|| _title:='Dane dokumentu'@;
   _win_red:=DK.mk_edit(_title,,'magdokpoz2',,,'html_maximized');
   DK.win_etab(_win_red,'Dane podstawowe'@);
   DK.win_ewin(_win_red,,_win_akr)
?};
DK.win_edit(_win_red);
{? _b & _editwin<>'' & ~(_editwin*'RED') & ~(_editwin*'DISP') & ~(_editwin*'INTRA') & ~(_editwin*'WZOR')
|| DK.win_edel(_editwin)
?};

exec('ok_esc','#window',DK,_win_red,1,,,,,exec('help_red_ok','#window','Z'),exec('text_red_ok','#window'),
exec('help_red_esc','#window','A'));

_win_red


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zaznacza wymagalne pola w pozycji dokumentu magazynowego
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || DK.win_edit('?') ?};

ND.cntx_psh();
_only:=ND.MAG().IL='T';
_czy_wal:=
   ND.MAG().SKL='T'
   | DK.WAL<>{? ND.TYP().P='N' || exec('bl_nwal','ustawienia') || exec('bl_nwal_mg','ustawienia') ?}
   | params_exec('jakiwal','eurusd','SLWAL','walut',1,,0);

_esp:=_only & _czy_wal & ND.TYP().P='N' & DK.WAL<>exec('bl_nwal','ustawienia') & ND.TYP().CS='T';
{? ND.MAG().TYP*'DOST'
|| _end:='enable=1'
|| _end:='enable=0'
?};
{? ND.MAG().SL='T'
|| _enw:='enable=1'
|| _enw:='enable=0'
?};
{? ND.TYP().T='BO'
|| _mad:='mark=1'
|| _mad:='mark=0'
?};
{? _czy_wal
|| _wal:='enable=1'
|| _wal:='enable=0'
?};
{? ND.TYP().P='N' & (ND.TYP().CS='N' | ND.TYP().Z='N') & ND.TYP().DK<>'T'
|| _spr:='enable=0';
   {? (_wal+1)='1' || _wal:=_spr ?}
|| _spr:='enable=1'
?};

DK.efld_opt(_win_red,'editable=1',,'IL');
DK.efld_opt(_win_red,'mark=1',,'IL');
DK.efld_opt(_win_red,'editable=1',D_HELP,'M');
DK.efld_opt(_win_red,'mark=1',D_HELP,'M');
DK.efld_opt(_win_red,'editable=1',ATR,'ZPAR_ZGH');
DK.efld_opt(_win_red,'editable=1',ATR,'ZPARN_DK');

:: grupa materiałowa/usługowa
{? ND.MAG().MGR='T'
|| DK.efld_opt(_win_red,'mark=1',POMOC,'MGR')
|| DK.efld_opt(_win_red,'mark=0',POMOC,'MGR')
?};
:: dostawa
DK.efld_opt(_win_red,_mad,,'DOST');
{? POMOC.RODZ='U'   || DK.efld_opt(_win_red,'enable=0',,'DOST')
|? ND.TYP().T='BO'  || DK.efld_opt(_win_red,'enable=1',,'DOST')
|? ND.STAT_REJ<>'N' || DK.efld_opt(_win_red,'enable=1',,'DOST')
|| DK.efld_opt(_win_red,_end,,'DOST')
?};
{? ND.TYP().T='BO'
|| DK.efld_opt(_win_red,'enable=0',ZMSLAPP,'ZL1');
   DK.efld_opt(_win_red,'enable=0',ZMSLAPP,'ZL7');
   DK.efld_opt(_win_red,'enable=0',ATR,'ZPARN_DK');
   DK.efld_opt(_win_red,'mark=0',ATR,'ZPARN_DK')
|| DK.efld_opt(_win_red,'enable=1',ZMSLAPP,'ZL1');
   DK.efld_opt(_win_red,'enable=1',ZMSLAPP,'ZL7');
   DK.efld_opt(_win_red,'enable=1',ATR,'ZPARN_DK');
   {? DK.ZL<>null() & exec('nd_is_koop','magdok_wspolne',DK.N) & exec('party_req','zl_wyk',DK.ZL)
   || DK.efld_opt(_win_red,'mark=1',ATR,'ZPARN_DK')
   || DK.efld_opt(_win_red,'mark=0',ATR,'ZPARN_DK')
   ?}
?};
DK.efld_opt(_win_red,_end,,'SCEAN');
:: atrybuty dostawy
DK.efld_opt(_win_red,_end,,'DK_C');
DK.efld_opt(_win_red,_end,DK_C,'KOD');
DK.efld_opt(_win_red,_end,M_ATR,'SYM');
DK.efld_opt(_win_red,_end,M_ATR,'NAZ');
{! _i..10
|! DK.efld_opt(_win_red,_end,M_ATR,'SL_'+form(_i,-2,0,'99'));
   DK.efld_opt(_win_red,_end,ATR,'WAR'+form(_i,-2,0,'99'))
!};
:: obsługa wymiarów
DK.efld_opt(_win_red,_enw,EANX,'LOKP');
DK.efld_opt(_win_red,_enw,EANX,'TW');
DK.efld_opt(_win_red,_enw,EANX,'PALK');
DK.efld_opt(_win_red,_enw,EANX,'TPAL');
:: walutowość i magazyn tylko ilościowy
_ien:={? _only || {? _esp || 'enable=1' || 'enable=0' ?} || 'enable=1' ?};
_iew:={? _only || {? _esp || 'enable=1' || 'enable=0' ?} || _wal ?};
DK.efld_opt(_win_red,_ien,,'WAL');
DK.efld_opt(_win_red,_iew,,'CWAL');
DK.efld_opt(_win_red,_iew,,'KURS');
DK.efld_opt(_win_red,_ien,,'C');
DK.efld_opt(_win_red,_ien,,'WAR');
DK.efld_opt(_win_red,_ien,,'WARZ');
DK.efld_opt(_win_red,_ien,SUM,'MWB');
DK.efld_opt(_win_red,_ien,,'SV');
DK.efld_opt(_win_red,_ien,DPOZ,'OCZ');
:: sprzedaż
DK.efld_opt(_win_red,_spr,,'CN');
DK.efld_opt(_win_red,_spr,,'CB');
DK.efld_opt(_win_red,_spr,,'WN');
DK.efld_opt(_win_red,_spr,,'WV');
DK.efld_opt(_win_red,_spr,,'WB');
DK.efld_opt(_win_red,_spr,DISP,'RABP');
DK.efld_opt(_win_red,_spr,DISP,'RAB');
DK.efld_opt(_win_red,_spr,DISP,'RABO');
DK.efld_opt(_win_red,_spr,,'PROMO');
DK.efld_opt(_win_red,_spr,TAZ,'KOD');
DK.efld_opt(_win_red,_spr,TAZ,'NAZ');

{? _esp
|| DK.efld_opt(_win_red,'editable=0',,'WAL');
   DK.efld_opt(_win_red,'editable=0',,'CN');
   DK.efld_opt(_win_red,'editable=0',,'CB')
|| DK.efld_opt(_win_red,'editable=1',,'WAL');
   DK.efld_opt(_win_red,'editable=1',,'CN');
   DK.efld_opt(_win_red,'editable=1',,'CB');
   DK.efld_opt(_win_red,_ien,,'WAL');
   DK.efld_opt(_win_red,_spr,,'CN');
   DK.efld_opt(_win_red,_spr,,'CB')
?};
{? (ND.TYP().CS='T' | (ND.TYP().Z='T' & ~_only)) & ND.TYP().DK<>'T'
|| DK.efld_opt(_win_red,'enable=1',,'SV');
   {? ND.TYP().KOOP<>'T'
   || DK.efld_opt(_win_red,'mark=1',,'SV')
   || DK.efld_opt(_win_red,'mark=0',,'SV')
   ?}
|| DK.efld_opt(_win_red,'enable=0',,'SV');
   DK.efld_opt(_win_red,'mark=0',,'SV')
?};

:: Projekt
{? DK.PROJEKTY=null() & (ND.TYP().PROJZAKR='' | TYPYDOK.PROJZAKR=exec('projzakr_nie_dotyczy','projekty'))
|| DK.efld_opt(_win_red,'enable=0',,'PROJEKTY')
|| DK.efld_opt(_win_red,'enable=1',,'PROJEKTY')
?};

{? ND.TYP().ZLEC='T'
|| DK.efld_opt(_win_red,'mark=1',ZMSLAPP,'ZL1')
|| DK.efld_opt(_win_red,'mark=0',ZMSLAPP,'ZL1')
?};

{? exec('nd_is_rp','magdok_wspolne',ND.ref())
|| DK.efld_opt(_win_red,'mark=1',ATR,'ZPAR_ZGH')
|| DK.efld_opt(_win_red,'mark=0',ATR,'ZPAR_ZGH')
?};

:: Wartość faktury, Wartość statystyczna
exec('set_efld_opt_intr','magdok_poz');

:: Konto kosztowe
{? _only
|| DK.efld_opt(_win_red,'enable=0',,'KK')
|| DK.efld_opt(_win_red,'enable=1',,'KK')
?};

{? exec('dk_is_rp','magdok_wspolne',DK.ref())>0 & DK.ZL<>null()
||
   {? exec('has_zlgd_dk','magdok_wspolne')>0
   ||
::    Dokument powiązany z robocizną
      DK.efld_opt(_win_red,'editable=grayed',,'IL');
      DK.efld_opt(_win_red,'editable=grayed',D_HELP,'M');
      DK.efld_opt(_win_red,'editable=grayed',ATR,'ZPAR_ZGH');
      DK.efld_opt(_win_red,'editable=grayed',ATR,'ZPARN_DK');
      DK.efld_opt(_win_red,'mark=0',ATR,'ZPAR_ZGH');
      DK.efld_opt(_win_red,'mark=0',ZMSLAPP,'ZL1');
      DK.efld_opt(_win_red,'mark=0',D_HELP,'M');
      DK.efld_opt(_win_red,'mark=0',,'IL');
      ~~
   ?}
?};
:: Rodzaj braku (kooperacja)
{? DK.ZL<>null() & exec('nd_is_koop','magdok_wspolne',DK.N) & ND.TYP().P<>'T' & DK.IL_B>0
   & exec('get','#params',500635,2)='T'
|| DK.efld_opt(_win_red,'mark=1',,'BRAKI_R')
|| DK.efld_opt(_win_red,'mark=0',,'BRAKI_R')
?};
ND.cntx_pop();
~~


\set_efld_opt_intr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PS] [17.00]
:: OPIS: Zaznacza wymagalne pola w pozycji dokumentu magazynowego, w zakładce Intrastat
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || DK.win_edit('?') ?};

:: Ustawianie wymagalności, wyjątki dla magazynu celnego, gdzie te pola także są używane
{? ND.IST_TYP='P' | ND.MAG().SKL='T'
|| DK.efld_opt(_win_red,'mark=1',,'KCN')
|| DK.efld_opt(_win_red,'mark=0',,'KCN')
?};
{? exec('dk_masan_pr','magdok_poz')
|| DK.efld_opt(_win_red,'mark=1',,'MASAN')
|| DK.efld_opt(_win_red,'mark=0',,'MASAN')
?};
{? exec('dk_ilujm_pr','magdok_poz')
|| DK.efld_opt(_win_red,'mark=1',,'ILUJM')
|| DK.efld_opt(_win_red,'mark=0',,'ILUJM')
?};
_kp:=ND.IST_TYP='P' & {? DK.KCN().KOD='' || 0 || exec('rw3','intrastat',DK.KCN().KOD)=1 ?};
{? ND.MAG().SKL='T' || _kp:=1 ?};
DK.efld_opt(_win_red,{? _kp || 'mark=1' || 'mark=0' ?},,'KP');
{? exec('dk_wf_pr','magdok_poz','PR')
|| DK.efld_opt(_win_red,'mark=1',,'WF')
|| DK.efld_opt(_win_red,'mark=0',,'WF')
?};
{? exec('dk_ws_reg','magdok_poz','PR')
|| DK.efld_opt(_win_red,'mark=1',,'WS');
{? exec('find_sl','intrastat','191',ND.RTRANSAK)
   || DK.efld_opt(_win_red,'mark=0',,'WF')
   ?}
|| DK.efld_opt(_win_red,'mark=0',,'WS')
?};
DK.efld_opt(_win_red,'enable=0',,'IDKH');
~~


\czydkfap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdzenie czy pozycja jest powiazana z dokumentami zakupowymi
::   WE: _a - ref SQL-owy DK
::       [_b] - czy komunikat domyslnie 1=tak, 0=nie
::   WY: 0-powiazana i nie usuwac pozycji 1-niepowiazana 2-powiazana i usuwac pozycje
::  OLD: \czydkfap/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
_wyn:=1;
FAP2DK.index('NDK');
FAP2DK.prefix(_a);
{? FAP2DK.first
|| _wyn:={? _b
         || FUN.ask('Pozycja powiązana z pozycjami dokumentów zakupowych.\nCzy usunąć powiązanie?'@)
         || 0
         ?};
   {? _wyn || _wyn+=1 ?}
?};
_wyn


\dkfapdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: usuniecie powiazan pozycja faktury <-> pozycja dokumentu z poziomu faktury
::   WE: _a - ref SQL-owy DK
::  OLD: \dkfapdel/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
FAP2DK.index('NDK');
FAP2DK.prefix(_a);
{? FAP2DK.first || {! |? exec('fapk_clear','magdok_wspolne',1); FAP2DK.del !} ?}


\aktu_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: aktualizacja pozycji w dokumentcie
::  OLD: \aktu_poz/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ReNumAfterDel','#table','DK','P','@.DK.index(\'DOKMAG\');@.DK.prefix(ND.ref())');
exec('dk_sum','magdok_wspolne',ND.ref())


\spr_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: Sprawdza poprawnosc wypelnienia pola ilosc na pozycji dokumentu
::   WE: _a - ZL.ref()
::       _b - WYD (SLO.ref)
::       [_c] - czy dawac komunikat 0: nie, 1 tak
::       [_d] - ilosc na DK, 0(domyslnie)
::   WY: 0/1/-1
::  OLD: \spr_il/zlec5.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};

_mpdoks:=exec('get','#params',500705,2,null());

DK.cntx_psh();
{? _<3 || _c:=1 ?};
_rez:=1;
_prod:=exec('tte_lic','tte');

exec('openmask','zl_common',_a);
{? DK.PLUS='T' & (' '+_mpdoks)*(' '+DK.N().TYP().T+' ')=0
|| _rez:=exec('zlecenie','magdok_poz',_a,_b,_c)
|? (' '+_mpdoks)*(' '+DK.N().TYP().T+' ')=0 & _prod='T'
|| _il:=0;
   _pob:=0;
   {? DK.ZLIM<>null()
   || _il:=exec('sum_il','zl_limit',DK.ZLIM,{? DK.ZLIM().LIMIT='T' || 1 || 0 ?});
      _pob:=exec('ilosc_dk','zl_limit',DK.ZLIM,0)
   ?};
   {? DK.IL>(_il-_pob+_d)
   || {? ZLIM.LIMIT='T'
      || {? _c=1
         || FUN.emsg(
               'Ilość pobierana towaru %1 ponad ilość limitu na zleceniu %2 (Poz. %3).'@
               [DK.M().KTM,DK.ZL().SYM,$DK.P]
            )
         ?};
         _rez:=0
      || {? _c=1
         || FUN.info(
               'Ilość pobierana towaru %1 ponad normę technologiczną na zleceniu %2 (Poz. %3).'@
               [DK.M().KTM,DK.ZL().SYM,$DK.P]
            )
         ?};
         _rez:=-1
      ?}
   ?}
?};

DK.cntx_pop();
_rez


\spr_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdzenie dostepnosci w jednostka sprzedazy w stosunku do jednostki magazynowej
::   WE: _a - ile wg magazynu
::       _b - ile wg sprzedazy
::   WY: 1-jest w zakresie 0-nie jest
::  OLD: \spr_dost/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.WS2<>0
|| _minus:=0.0000000000001;
   _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
   _dokl_m:=exec('jaka_dok_m','jm',DK.M);
   {? _dokl_s<0 || _dokl_s:=_dokl_m ?};

   _fld:={? cur_afld()='IL2' || fld() || DK.IL2 ?} $ _dokl_s;

   roundmet(5);

   _il1:=_fld-_minus;
   roundmet(1);
   _min2:=_il1 $ _dokl_s;

   _il2:=_fld+_minus;
   roundmet(2);
   _max2:=_il2 $ _dokl_s;

   roundmet(5);

   _ile:={? DK.WS2 || _fld/DK.WS2 || 0 ?} $ _dokl_m;
   _min1:={? DK.WS2 || _min2/DK.WS2 || 0 ?} $ _dokl_m;
   _max1:={? DK.WS2 || _max2/DK.WS2 || 0 ?} $ _dokl_m;

:: sprawdzamy czy ilosc miesci sie w zakresie
   {? DK.IL>=_min1 & DK.IL<=_max1
   || {? DK.IL=_ile
         | FUN.ask('Rozbieżność  pomiędzy podaną ilością magazynową: %1 %2,\n'
                   'a obliczoną według ilości w jednostce sprzedaży: %3 %4.\n\n'
                   'Czy zaakceptować wprowadzone?'@[form(_ile,,_dokl_m),DK.M().J().KOD,form(DK.IL,,_dokl_m),DK.M().J().KOD])
      || _wyn:=1
      || _wyn:=0
      ?}
   || _wyn:=0
   ?}
|| _wyn:=1
?};
_wyn


\chk_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza wypelnienie pol w DK
::   WE: _a - pola do sprawdzenia
::       _b - 0 - dokument manualny (domyślnie), 1 - import z komunikatu EDI
::   WY: czy wypelnienie prawidlowe lub akronim pola jezeli nie
::  OLD: \chk_dk/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || _a:='' ?};
{? var_pres('_b')=type_of(0)
|| _edi:=_b
|| _edi:=0
?};

_wyn:='';
_tmg:=(1+DK.N().MAG().TYP);
_ewi:=(DK.N().MAG().TYP*'EWI');
_czyzero:=exec('get','#params',600104,2)='T';
_prod:=exec('tte_lic','tte');
_only:=DK.N().MAG().IL='T';

{? (+_a)>0 & DK.IL>0 & DK.IL2=0 & DK.N().TYP().UPRW='T'
|| DK.T2:=1+(1-BEER.MMJM);
   DK.IL2:=DK.IL;
   DK.WS2:=1;
   DK.J2:=DK.M().J
?};

{? _tmg='D' & (DK.AFIFO<>'' | _only) || _tmg:={? DK.AFIFO<>'' || DK.AFIFO || 'F' ?} ?};

:: podpowiadanie ceny ewidencyjnej
{? DK.M<>null & _ewi
||
   _cen:=exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D);
   {? _cen <>0
   || DK.C:=_cen;
      {? _edi
      || _msg:='Pozycja %1: uzupełniono cenę.'[$DK.P];
         exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      ?}
   ?};
   DK.WAR:=(DK.IL*DK.C)$2;
   exec('ist_wart_dk','magdok_poz',0)
?};

{? (_a='' | _a*'IL2') & DK.N().TYP().DS='T' & DK.N().TYP().P<>'T' & DK.N().TYP().Z='T' & DK.IL2=0
|| {? DK.WS2=0 | DK.WS2=1 || DK.WS2:=1; DK.IL2:=DK.IL || DK.IL2:=DK.IL*DK.WS2 ?};
   {? _edi
   || _msg:='Pozycja %1: uzupełniono ilość w jednostce sprzedaży.'[$DK.P];
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   ?}
?};

{? DK.ZL<>null() & DK.PLUS='T' & DK.N().TYP().WYR='T' & DK.ZGH=null()
|| _msg:='Należy podać przewodnik.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='ZPAR_ZGH'
?};
{? (_wyn='' | _edi) & DK.M=null()
|| _msg:='Należy podać indeks materiałowy.'@;
   {? _edi
   || {? var_pres('FIND_M')=type_of('')
      || {? FIND_M=''
         || _msg:='Należy podać indeks materiałowy (nie podano kodu).'
         || _msg:='Należy podać indeks materiałowy (nieznany kod: %1).'@[FIND_M]
         ?}
      ?};
      _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='M'
?};
{? (_wyn='' | _edi) & DK.IL<0
|| _msg:='Ilość musi być liczbą dodatnią.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='IL'
?};
{? (_wyn='' | _edi) & DK.IL=0
|| _msg:='Należy podać ilość.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:={? DK.N().MAG().PAL='N' | exec('isB_ROZP','magdok_palety') | DK.M().RODZ='U' || 'IL' || 'UWAGI' ?}
?};
{? (_wyn='' | _edi) & (_a='' | _a*'DOST') & _tmg='D' & DK.DOST=date(0,0,0) & DK.N().TYP().P='N' & DK.M().RODZ='T'
|| _msg:='Brak dostawy.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='DOST'
?};
{? (_wyn='' | _edi) & (_a='' | _a*'C2') & DK.PLUS='T' & DK.C2<0
|| _msg:='Cena nie może być ujemna.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='C2'
?};
{? (_wyn='' | _edi) & (_a='' | _a*'CWAL') &
   {? DK.PLUS='T'
   || DK.WAL<>exec('bl_nwal_mg','ustawienia') & DK.CWAL<0
   || DK.WAL<>exec('bl_nwal','ustawienia') & DK.CWAL<0
   ?}
|| _msg:='Cena nie może być ujemna.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='CWAL'
?};
{? (_wyn='' | _edi) & (_a='' | _a*'C') & DK.C<0
|| _msg:='Cena nie może być ujemna.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='C'
?};
{? (_wyn='' | _edi) & (_a='' | _a*'C') & DK.N().TYP().P='T' & BEER.LW='W' & DK.WAL<>INFO.NAROD & DK.CWAL=0
  & ('Ś'*_tmg | (~_czyzero & _ewi) | DK.N().TYP().Z='N')
|| _msg:='Należy podać cenę dostawy.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='CWAL'
?};
{? (_wyn='' | _edi) & (_a='' | _a*'C') &
   DK.N().TYP().P='T' & DK.C=0
      &
   ('Ś'*_tmg | (~_czyzero & _ewi) | exec('nie_zdok','magdok_wspolne',DK.N().NDSQL,1)=0)
      &
   {?
      (_ewi & _czyzero=1)
         |
      ((~_ewi | exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D)=0)
         & 'TW'*exec('get','#params',600300,2) & DK.N().TYP().DN='K')
   || 0
   || 1
   ?}
|| _msg:='Należy podać cenę dostawy.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='C'
?};
{? (_wyn='' | _edi) & (_a='' | _a*'C') & DK.N().TYP().DS='T' & DK.N().TYP().P<>'T' & DK.N().TYP().Z='T' & DK.IL2=0
|| _msg:='Należy podać ilość w jednostce sprzedaży.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='IL2'
?};
{? (_wyn='' | _edi) & DK.M<>null() & (_a='' | _a*'C') & (DK.N().TYP().DS='T' | DK.N().TYP().Z='T') &
   DK.N().TYP().KOOP<>'T' & DK.SV=null
|| _msg:='Należy podać stawkę podatku VAT.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='SV'
?};
{? (_wyn='' | _edi) & (_a='' | _a*'C') & DK.N().TYP().DS='T' & DK.N().TYP().P<>'T' & DK.N().TYP().Z='T' & DK.CN<0
|| _msg:='Cena musi być liczbą dodatnią.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='CN'
?};
{? (_wyn='' | _edi) & (_a='' | _a*'C') & DK.N().TYP().DS='T' & DK.N().TYP().P<>'T' & DK.N().TYP().Z='T' & DK.CB<0
|| _msg:='Cena musi być liczbą dodatnią.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='CB'
?};
{? (_wyn='' | _edi) & DK.N().TYP().DS='T' & DK.N().TYP().P<>'T' & DK.N().TYP().Z='T' & DK.N().TYP().CS='T'
|| _wyn_c:=exec('czy_cena_z_tap','ceny','DK',~_edi);
   {? _wyn_c.WYN
   || {? _edi & _wyn_c.MSG<>''
      || _msg:='Pozycja %1: '[$DK.P]+_wyn_c.MSG;
         exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      ?};
      _wyn:={? DK.N().WAL<>DK.N().NWAL || 'CWAL' || {? DK.N().CB='T' || 'CB' || 'CN' ?} ?}
   ?}
?};
{? (_wyn='' | _edi) & (_a='' | _a*'C') & DK.N().TYP().DS='T' & DK.N().TYP().P<>'T' & DK.N().TYP().Z='T'
|| {? _edi
   || __msg:='';
      _wyn_r:=exec('spr_rab','ceny',DISP.RABP,0,!__msg,'dokma');
      {? __msg<>''
      || _msg:='Pozycja %1: '[$DK.P]+__msg;
         _msg:=gsub(_msg,'\n',' ');
         exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      ?};
      &__msg
   || _wyn_r:=exec('spr_rab','ceny',DISP.RABP,0)
   ?};
   {? ~_wyn_r
   || {? ~_edi
      || win_disp
      ?};
      _wyn:=exec('rab_2130','ceny',DK,'RABP')
   ?}
?};
{? _wyn='' & ~_edi & DK.PLUS='T' & HELP.POP & (DK.IL-exec('ilrdkfap','magdok_poz',$DK.ref))<0
|| {? ~FUN.ask('Pozycja jest powiązana z fakturą zakupową czy zaktualizować ilość przypisaną do faktury?'@)
   || _wyn:='IL'
   ?}
?};
{? (_wyn='' | _edi) & (_a='' | _a*'C') & DK.PLUS='T' & DK.N().MAG().SKL='T' & DK.SCC<=0
|| _msg:='Cena musi być liczbą dodatnią.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='SCC'
?};
{? (_wyn='' | _edi) & (_a='' | _a*'C') & DK.N().MAG().SKL='T' & DK.KCN=null
|| _msg:='Należy podać kod CN.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='KCN'
?};
{? (_wyn='' | _edi) & (_a='' | _a*'C') & DK.PLUS='T' & DK.N().MAG().SKL='T' & DK.KP=''
|| _msg:='Należy podać kraj pochodzenia.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='KP'
?};
{? (_wyn='' | _edi) & (_a='' | _a*'C') & DK.N().MAG().SKL='T' & DK.CLO=null
|| _msg:='Należy podać cło dla pozycji.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='CLO'
?};
{? (_wyn='' | _edi) & (_a='' | _a*'C') & 'D'*_tmg & (ND.TYP().P='T' | ND.TYP().UPRW='T') & DK.DK_C=null & #DK.M().M_ATR<>0 & ND.TYP().KOOP<>'T'
|| _msg:='Należy podać cechę dla pozycji.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   {? ~DK.M().M_ATR().EDIT
   || _wyn:='DK_C'
   || _wyn:=exec('uzup_fld','mat_atr')
   ?}
?};
:: Uzupełnianie pol dla magazynowow nie celnych
{? DK.N().MAG().SKL<>'T'
|| DK.SCC:=DK.C;
   DK.SCWAR:=DK.WAR
?};

{? _wyn='' & DK.JM=null
|| DK.JM:=DK.M().J
?};

:: data dostawy dla BO
{? (_wyn='' | _edi) & DK.N().TYP().T='BO'
||
   {? (_wyn='' | _edi) & DK.DOST=date(0,0,0)
   || _msg:='Podaj datę dostawy.'@;
      {? _edi
      || _msg:='Pozycja %1: '[$DK.P]+_msg;
         exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='DOST'
   ?};
   {? (_wyn='' | _edi) & DK.DOST>DK.N().D
   || _msg:='Podana data dostawy jest późniejsza od daty dokumentu.';
      {? _edi
      || _msg:='Pozycja %1: '[$DK.P]+_msg;
         exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='DOST'
   ?}
?};

{? _wyn='' | _edi
||
:: Kontrola czy partia wypelniona
   {? DK.ZL<>null() & exec('nd_is_rp','magdok_wspolne',ND.ref())>0
   ||
      {? exec('zlec_party','zl_common',DK.ZL)>0
      ||
         {? ATR.ZPARN_DK=null()
         || _msg:='Należy wybrać partię dla dokumentu.'@;
            {? _edi
            || _msg:='Pozycja %1: '[$DK.P]+_msg;
               exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
            || FUN.info(_msg)
            ?};
            _wyn:='ZPARN_DK'
         ?}
      ?}
   |? DK.ZL<>null() & exec('nd_is_koop','magdok_wspolne',ND.ref())>0
   ||
      {? exec('party_req','zl_wyk',DK.ZL)
      ||
         {? ATR.ZPARN_DK=null()
         || _msg:='Należy wybrać partię dla dokumentu.'@;
            {? _edi
            || _msg:='Pozycja %1: '[$DK.P]+_msg;
               exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
            || FUN.info(_msg)
            ?};
            _wyn:='ZPARN_DK'
         ?}
      ?}
   ?}
?};

{? DK.ZL<>null() & DK.ZL().RODZAJ='N'
|| _msg:='Zlecenie produkcyjne na pozycji dokumentu nie może być zleceniem niezależnym.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='ZL7'
?};

{? _wyn='' | _edi
||
:: Kontrola zgodności na partii w dokumencie z partia w cesze
   {? ATR.ZPARN_DK<>null() & DK.DK_C<>null() & exec('nd_is_rp','magdok_wspolne',DK.N)>0
   ||
::    Na tym etapie DK_C.ZPARN jest jeszcze nie wypelnione wiec szukam ZPARN na podstawie wartosci (symbolu)
      _ref_zparn:=exec('dkc_partia_ref','zl_partie',DK.DK_C);
      {? _ref_zparn<>null() & _ref_zparn<>ATR.ZPARN_DK
      || _msg0:='';
         _part_sym:=exec('dkc_partia_sym','zl_partie',DK.DK_C);
         _msg1:='Partia przypisana do cechy nie jest zgodna z partią wybraną na pozycji dokumentu.'@;
         _msg2:='Partia (cecha): %1'@[_part_sym];
         _msg3:='Partia (poz. dokumentu): %1'@[ATR.ZPARN_DK().SYM];
         _msg4:='Przypisanie podanej cechy niemożliwe.'@;
         _msg_glued:=exec('form','#string','L',_msg1
                                              ,_msg0
                                              ,_msg2
                                              ,_msg3
                                              ,_msg0
                                              ,_msg4);
         {? _edi
         || _msg:='Pozycja %1: '[$DK.P]+gsub(_msg_glued,'\n',' ');
            exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
         || FUN.info(_msg_glued)
         ?};
         _wyn:='ZPARN_DK'
      ?};

      {? (_wyn='' | _edi) & DK.ZL<>null() & exec('nd_is_rp','magdok_wspolne',DK.N)>0 & exec('zlec_party','zl_common',DK.ZL)>0
      ||
         _ref_zparn:=exec('dkc_partia_ref','zl_partie',DK.DK_C);
         {? _ref_zparn=null()
         ||
            _msg:='Zlecenie przypisane do dokumentu jest partiowane, wiec cecha musi '
                  'zawierać atrybut powiązany z partią zlecenia.'@;
            {? _edi
            || _msg:='Pozycja %1: '[$DK.P]+_msg;
               exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
            || FUN.info(_msg)
            ?};
            {? ~DK.M().M_ATR().EDIT
            || _wyn:='DK_C'
            || _wyn:=exec('uzup_fld','mat_atr')
            ?}
         ?}
      ?}
   ?}
?};

{? _wyn='' | (_edi & DK.M<>null())
||
:: Kontrola, czy zostal wybrany wymagany limit
   {? _prod='T' & DK.ZL<>null() & DK.N().TYP().P='N' & DK.N().TYP().WYR='N' & DK.ZLIM=null() & DK.N().TYP().KOOP<>'T'
   || _zlim:=exec('dk_zlim_suggest','zl_limit',DK.ZL,D_HELP.M,ATR.ZPAR_ZGH);
      {? _zlim<>null()
      || DK.ZLIM:=_zlim;
         DK.M_ZLIM:=ref_name(_zlim)
      || _msg:='Nie wybrano limitu dla towaru %1.'@[DK.M().KTM];
         {? _edi
         || _msg:='Pozycja %1: '[$DK.P]+_msg;
            exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
         || FUN.info(_msg)
         ?};
         _wyn:='M'
      ?}
   ?};
   ~~
?};

{? _wyn='' & ~_edi
||
:: Kontrola zgodnosci wartosci atrybutow dla limitow zlecenia
   {? DK.ZL<>null() & DK.ZLIM<>null() & (exec('nd_is_rw','magdok_wspolne',ND.ref())>0 | exec('nd_is_zw','magdok_wspolne',DK.N)>0)
   ||
      {? exec('dkc_compare','zl_limit',DK.DK_C,DK.ZLIM,,1)<=0
      || _wyn:='DOST'
      ?};
      ~~
   ?}
?};

{? _wyn='' & ~_edi
|| ZL.cntx_psh();
:: Kontrola zgodnosci wartosci atrybutow dla zlecenia
   {? DK.ZL<>null() & DK.ZL().DK_C<>null() & exec('nd_is_rp','magdok_wspolne',ND.ref())>0
   ||
      {? exec('dkc_compare','zl_common',DK.DK_C,DK.ZL,1)<=0
      || {? ~DK.M().M_ATR().EDIT
         || _wyn:='DK_C'
         || _wyn:=exec('uzup_fld','mat_atr')
         ?}
      ?};
      ~~
   ?};
   ZL.cntx_pop();
   ~~
?};
:: kontrola ilosci wg wymiarow
{? _wyn='' & ~_edi & DK.PLUS='N' & DK.N().MAG().SL='T' & DK.N().MAG().PAL='N'
 & DK.M().RODZ='T' & exec('get','#params',600200,2)='T'
|| {? ~exec('sprilwym','magdok_poz',0) || _wyn:='IL' ?}
?};

{? _wyn='' & ~_edi & DK.PLUS='T' || _wyn:=exec('chk_dk_intrastat','magdok_poz') ?};
:: dodatkowe sprawdzenie ilosci
{? _wyn='' & ~_edi & (DPOZ.WPR_R:=DK.IL; ~exec('po_il','magdok_poz',,0,,,'VALID'))
|| _wyn:={? DK.N().MAG().PAL='N'
         || 'IL'
         || 'UWAGI'
         ?}
?};
:: kontrola ilosci brakow
{? (_wyn='' | _edi) & DK.IL_B>DK.IL
|| _msg:='Ilość braków nie może być większa od ilości.'@;
   {? _edi
   || _msg:='Pozycja %1: '[$DK.P]+_msg;
      exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
   || FUN.info(_msg)
   ?};
   _wyn:='IL_B'
?};
:: kotrola terminu ważności
{? (_wyn='' | _edi) & DK.M<>null() & DK.PLUS='T' & DK.M().SETW='P' & DK.M().CZY_TW='T' & DK.TW=date(0,0,0)
|| {? DK.N().MAG().PAL='T'
   || ''
   |? DK.N().TYP().DN='T' & ~exec('ctrlSETW','magdok_wspolne',DK.M,DK.SRDK)
   || _msg:='Termin ważności jest wymagany.\n'
            'Dla danej dostawy należy go zmienić korzystając z kwalifikacji dostaw.\n'
            'Dokument zostanie zatwierdzony z zerowym terminem ważności.';
      {? _edi
      || _msg:='Pozycja %1: '[$DK.P]+gsub(_msg,'\n',' ');
         exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:=''
   || _msg:='Termin ważności jest wymagany.';
      {? _edi
      || _msg:='Pozycja %1: '[$DK.P]+_msg;
         exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='TW'
   ?}
?};
:: Kontrola rodzaju braku
{? _wyn='' | _edi
|| {? DK.ZL<>null() & exec('nd_is_koop','magdok_wspolne',ND.ref())>0 & DK.N().TYP().P<>'T' & DK.IL_B>0
      & exec('get','#params',500635,2)='T' & DK.BRAKI_R=null()
   || _msg:='Należy określić rodzaj braku.'@;
      {? _edi
      || _msg:='Pozycja %1: '[$DK.P]+_msg;
         exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='BRAKI_R'
   ?}
?};
:: kontrola dla dołaczonej pozycji w magazynie paletowym
{? _wyn='' & 0 & exec('isB_ROZP','magdok_palety')
|| {? EANX.LOKP=''
   || _msg:='Należy podać lub wybrać lokalizację.'@;
      {? _edi
      || _msg:='Pozycja %1: '[$DK.P]+_msg;
         exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='LOKP'
   |? EANX.PALK=''
   || _msg:='Należy wybrać paletę z listy.'@;
      {? _edi
      || _msg:='Pozycja %1: '[$DK.P]+_msg;
         exec('add_kom','#message',_msg,4,{? ND.ID='' || ND.SYM || ND.ID ?})
      || FUN.info(_msg)
      ?};
      _wyn:='LOKP'
   ?}
?};

:: sprawdzenie wdrożeniowe
{? (_wyn='' | _edi) & Plugin.runnable('VAL_POZLOG_001')
|| _wyn:=Plugin.run('VAL_POZLOG_001','DK')
?};
_wyn


\chk_dk_intrastat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: sprawdzenie poprawnosci wypelnienia pol dotyczacych INTRASTAT w tabeli DK
::   WE: _a - 0/1 - komunikaty na ekran
::   WY: akronim niepoprawnie wypelnionego pola, ''-wpp
::  OLD: \chk_dk/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_disp:={? var_pres('_a')=type_of(0) || _a || 1 ?};

_atr:=exec('check_poz_a','intrastat');
_atr.DISP:=_disp;
_atr.TABNAG:=ND;
_atr.TABPOZ:=DK;
_atr.KOR:='N';
_atr.HIS:='N';
_atr.POZ:=DK.P;
_atr.MRODZ:=DK.M().RODZ;
_atr.IL:=0;

_atr.IST_TYP:=ND.IST_TYP;
_atr.DATE:=ND.D;

_atr.KCN:=DK.KCN;
_atr.KODT:=DK.KCN().KOD;
_atr.KPW:=DK.KPW;
_atr.WD:=DK.WD;
_atr.RTRANSAK:=DK.RTRANSAK;
_atr.RTRANSPO:=DK.RTRANSPO;
_atr.KP:=DK.KP;
_atr.MASAN:=DK.MASAN;
_atr.FKOR_MASAN:=0;
_atr.JU:=DK.KCN().JU;
_atr.ILUJM:=DK.ILUJM;
_atr.WF:=DK.WF;
_atr.WS:=DK.WS;
exec('check_poz','intrastat',_atr)


\sprilwym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza ilosc wg wymiarow dla pozycji dokumentu lub reorgnizacji
::   WE: _a - 0-DK 1-DK_L
::       [_b] - 0(domyslnie) na pozycji dokumentu/reorganizacji 1-kontrola
::       [_c] - ref dostawy, domyślnie brak
::   WY: 1-jest ilosc 0-brak
::  OLD: \sprilwym/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
_scsql:={? var_pres('_c')=type_of('') & (+_c)=16 || _c || '' ?};

_wyn:=1;
{? ~_a & DK.M().RODZ='U'
|| _wyn:=1
|? ~_a
|| _stn:=0;
   _eanl:={? form(EANX.LOKP)<>'' || exec('FindInSet','#table','EANL','KOD',EANX.LOKP,EANX.LOKP) || null() ?};
   _term:=EANX.TW;
   _ile:=DK.IL;
   _scean:=DK.SCEAN;
   {? _b | (1+menu_txt())='P'
   || ND.cntx_psh();
      DK.cntx_psh();
      DK_L.cntx_psh();
      DK_L.index('DK');
      DK_L.prefix(DK.ref(),null());
      {? DK_L.first()
      || _buf:=0;
         {!
         |? _buf:=exec('stnilwym','magazyn_stan',DK.N().D,DK.N().MAG,DK.M,DK_L.LOK,DK_L.TW,_scean,_scsql);
            _stn+=_buf;
            {? DK_L.IL>_buf || _wyn:=0 ?};
            _wyn & DK_L.next()
         !}
      || _stn:=exec('stnilwym','magazyn_stan',DK.N().D,DK.N().MAG,DK.M,_eanl,_term,_scean,_scsql)
      ?};
      ND.cntx_pop();
      DK.cntx_pop();
      DK_L.cntx_pop()
   || _stn:=exec('stnilwym','magazyn_stan',DK.N().D,DK.N().MAG,DK.M,_eanl,_term,_scean,_scsql)
   ?};
   {? ~_wyn | _ile>_stn
   || {? ~_b || FUN.info('Brak odpowiedniej ilości dla podanych wymiarów.'@) ?};
      _wyn:=0
   ?}
|| _stn:=0;
   _eanl:=DK_L.LOK;
   _term:=DK_L.TW;
   _ile:=DK_L.IL;
   {? DK_L.DK<>null() || DK_L.M:=DK_L.DK().M ?};
   _scean:=DK_L.SCEAN;
   _stn:=exec('stnilwym','magazyn_stan',{? DK_L.DK<>null() || DK_L.DK().N().D || DK_L.DK_LN().D ?}
          ,DK_L.MG,DK_L.M,_eanl,_term,_scean,_scsql);
   {? ~_wyn | _ile>_stn
   || {? ~_b || FUN.info('Brak odpowiedniej ilości dla podanych wymiarów.'@) ?};
      _wyn:=0
   ?}
?};
_wyn


\pal2dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przepisuje pozycje z palet na pozycje dokumentu magazynowego
::  OLD: \pal2dk/mws.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.MENU_PTH:='MR';
POMOC.RODZ:='T';
exec('slo_m_ok','material','T',1);
M.win_dict('WER_S');
_atrmjs:=ATR.MJS;
ATR.MJS:='PAL_POZ';
BEER.ESC:=1;

_beertab:=BEER.TAB;
PAL_POZ.use('paletyp');
ND.get();
{? ND.MAG().PAL='T'
|| {? ND.TYP().P='T'
   || EANX.WHERE:='P';
      PAL.f_clear();
      PAL.win_sel('GRP');
      PAL.index('MGPAL');
      PAL.prefix(ST.ODDZ,'T',ND.MAG,'N');
      {? ~PAL.size() || PAL.actions('SEL','R:R') ?};
      PAL.select()
   |? ND.TYP().P='N'
   || VAR_DEL.delete('__okno');
      __okno:='P';
      {!
      |? {? __okno='P'
         || _palz:=exec('get','#params',1400,2,OPERATOR.USER)='T';
            PAL.f_clear();
            PAL.index('PAL');
            PAL.prefix();
            exec('pal2dk_filter','magdok_poz',ND.MAG,ST.ODDZ);
            EANX.WHERE:='W';
            PAL.win_sel('GRPWYB');
            PAL.win_dict('SEL');
            {? ~PAL.select() || __okno:='' ?}
         |? __okno='M'
         || M.index('ARODZ');
            M.prefix('T','T');
            M.win_sel('GRPWYB');
            {? ~M.select() || __okno:='' ?}
         ?};
         __okno<>''
      !};
      VAR_DEL.delete('__okno')
   ?}
|| FUN.info('Magazyn bez zastosowania palet.'@)
?};
BEER.ESC:=0;
BEER.TAB:=_beertab;
ATR.MJS:=_atrmjs;
~~


\pal2dk_filter
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Ustala filtr na tabelę PAL (palety) podczas przepisywania pozycji z palet na pozycje dokumentu magazynowego
::   WE: [_a] - MG.ref() - jeżeli podany to warunek wg podanego magazynu
::       [_b] - STRING - kod oddziału - jeżeli podany to warunek wg podanego oddziału
::----------------------------------------------------------------------------------------------------------------------
_mag:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_oddz:={? var_pres('_b')=type_of('') || _b || '' ?};
_palz:=exec('get','#params',1400,2,OPERATOR.USER)='T';
_sort:='KODK';
_from:='';
_where:='\"PAL\".STAN<>\'N\' and \"PAL\".AKT=\'T\' and \"PAL\".BEZOZN=\'N\' '
    +' and \"PAL\".STAN<>\'B\' '
    +{? _mag<>null() || 'and \"PAL\".MG=:_a ' || '' ?}
    +{? _oddz<>'' || 'and \"PAL\".ODD=\':_b\' ' || '' ?}
    +{? ~_palz || 'and \"PAL\".Z=\'N\' ' || '' ?}
    +'and (\"PAL\".P=\'T\' or \"PAL\".ROZ=\'B\')'
;
PAL.f_set(_sort,,_where,_mag,_oddz);
~~


\wgwymiar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: akcja wprowadzenia do pozycji rozpiski wg lokalizacji i terminu waznosci
::   WE: czy dostepne akcje edycji (0 - nie, 1 - tak, domyslnie - dla zaakceptowanego dokumentu 1, dla niezaakcept. 0)
::  OLD: \wgwymiar/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.get()
||
   {? _>=1 || {? type_of(_a)<>1 || _a:=DK.N().Z<>'T' & DK.N().NDSQL='' ?} || _a:=DK.N().Z<>'T' & DK.N().NDSQL='' ?};

   {? DK.M().RODZ='T'
   || DK.cntx_psh();
      EANX.MG:=DK.N().MAG;
      {? DK.N().Z='T' & DK.ZP<>0 || DK.seek(DK.ZP,DK.name()) ?};
::    okienka redakcji i szukania dla lokalizacji
      EANL.win_edit('RED'+{? DK.N().MAG().MWS='T' || 'MWS' || '' ?});
      EANL.win_patt('RED');
::    okienko do szukania dla wymiarow
      PAL.f_clear();
      DK_L.win_patt('SZUK'+{? EANX.MG().PAL='N' || 'A' || 'P' ?});
      DK_L.win_sel('WER');
      DK_L.index('DKAUTO');
      {? DK.PLUS='N' & (DK.M().SETW='P' | DK.AFIFO<>'N')
      || DK_L.prefix(DK.ref(),null())
      || DK_L.prefix(DK.ref(),null(),0)
      ?};
      DK_L.hdr_sel();
      DK_L.hdr_sel(' - dla pozycji dokumentu nr %1'@[$DK.P]);
      {? _a=1 & KHVZ.WIDOKI<>1 & ~BEER.REORG
      || {? DK.N().MAG().PAL='N'
         || DK_L.actions('WER','');
            DK_L.select()
         || DK_L.select(,,,'LDdPp:Dd')
         ?}
      || DK_L.select(,,,'LDdUuPp:Dd')
      ?};
      DK_L.hdr_sel();
      DK.cntx_pop();
      0
   || FUN.info('Funkcja niedostępna dla pozycji usługowych.'@);
      0
   ?}
?}


\ok_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: sprawdza czy pozycje dokumentu magazynowego sa prawidlowo wyp
::       data dostawy, ilosc, cena, ceny sprzedazy, druga jednostka ewidencyjna
::   WE: [_a] - 1 dana pozycja na dokumencie
::   WY: dla _a=0: jezeli jest wypelnione to 1, 0 gdy nie jest wypelnione
::       dla _a=1: jezeli blad to opis lub '' jezeli jest wszystko OK
::  OLD: \ok_dk/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_ok:=1;
_txt:='';
_buf:=tab_tmp(1,'SQL','STRING[16]','');
{? {? ~_a || DK.first() || 1 ?}
|| DK.N().SYM;
   _ptwmob:=exec('stND2EANN','magazyn_mobi')='A';
   {!
   |? _tmg:=(1+DK.N().MAG().TYP);
      _ewi:=DK.N().MAG().TYP*'EWI';
      {? _tmg='D' & ('.FL'*DK.AFIFO)>1 || _tmg:=DK.AFIFO ?};
      {? DK.RDK=0
      ||
         DK.RDK:=#DK.ref();
         DK.NDK:=DK.name();
         DK.SRDK:=DK.PRDK:=$DK.ref();
         {? DK.put()
         || _buf.clear();
            _buf.SQL:=$DK.ref();
            _buf.add(1)
         ?}
      ?};
      {? DK.PLUS='T' & DK.M().A='N'
      || _txt:='Pozycja %1, nieaktywny indeks materiałowy: %2.'@[$DK.P,DK.M().KTM];
         {? ~_a
         || {? var_pres('__kom')>100
            || exec('add_kom','#message',_txt,2)
            || FUN.info(_txt)
            ?}
         || _txt:='1 '+_txt
         ?};
         _ok:=0
      |? DK.M().J2<>null() & {? DK.PLUS='T' || DK.IL2<=0 || DK.IL2<0 ?}
      || _txt:='Pozycja %1, wymaga podania ilości w drugiej jednostce ewidencyjnej - indeks: %2.'@[$DK.P,DK.M().KTM];
         {? ~_a
         || {? var_pres('__kom')>100
            || exec('add_kom','#message',_txt,2)
            || FUN.info(_txt)
            ?}
         || _txt:='1 '+_txt
         ?};
         _ok:=0
      |? DK.PLUS='T' & ND.TYP().DN='K' & (DK.M().KTM; POM.SKLAD:=0; exec('m_sklad_','material',ND.D); ~POM.SKLAD)
      || _txt:='Pozycja %1, indeks materiałowy: %2 dla przychodu kompletu wymaga składowych.'@[$DK.P,DK.M().KTM];
         {? ~_a
         || {? var_pres('__kom')>100
            || exec('add_kom','#message',_txt,2)
            || FUN.info(_txt)
            ?}
         || _txt:='1 '+_txt
         ?};
         _ok:=0
      |? DK.M().RODZ='T'
      ||
         {? DK.DOST>DK.N().D & 'ŚE'*_tmg=0
         ||
            _txt:='Pozycja %1, data dostawy jest późniejsza od daty dokumentu.'@[$DK.P];
            {? ~_a
            || {? var_pres('__kom')>100
               || exec('add_kom','#message',_txt,2)
               || FUN.info(_txt)
               ?}
            || _txt:='1 '+_txt
            ?};
            _ok:=0
         ?};
         {? DK.IL=0
         ||
            _txt:='Pozycja '+$DK.P+', zerowa ilość.';
            {? ~_a
            || {? var_pres('__kom')>100
               || exec('add_kom','#message',_txt,2)
               || FUN.info(_txt)
               ?}
            || _txt:='2 '+_txt
            ?};
            _ok:=0
         ?};
         {? (_ptwmob | DK.IL_PT>0) & DK.IL<>DK.IL_PT
         || _txt:='Pozycja %1, ilość jest różna od ilości potwierdzonej na urządzeniu mobilnym.'@[$DK.P];
            {? ~_a
            || {? var_pres('__kom')>100
               || exec('add_kom','#message',_txt,2)
               || FUN.info(_txt)
               ?}
            || _txt:='1 '+_txt
            ?};
            _ok:=0
         ?};
::       oblicza cene magazynowa podczas akceptacji dokumentu (cene moze byc inna np. po ewentualnej korekcie)
::       szuka ceny dostawy dla momentu akceptacji
         {? ~_a & 'DŚE'*_tmg & DK.PLUS='N' & DK.N().TYP().DK<>'T' & DK.N().MAG().SKL<>'T'
         ||
            _cena_mag:={? _ewi
                       || exec('biez_cen','ceny_dok',DK.M,DK.N().MAG,DK.N().D)
                       || exec('cena_mag','ceny',DK.M,DK.RDK,DK.NDK,,DK.C,3)
                       ?};
            {? DK.C<>_cena_mag & (DK.N().INN='T' & DK.N().TYP().INW='E' & DK.N().TYP().P='N')
            ||
               DK.C:=_cena_mag;
               DK.WAR:=(DK.C*DK.IL)$2;
               DK.SCC:=DK.C;
               DK.SCWAR:=DK.WAR;
               DK.put();
               exec('dk_sum','magdok_wspolne',ND.ref());
               ND.WAR:=SUM.WAR;
               ND.SCWAR:=SUM.SCWAR;
               ND.put()
            ?}
         ?};
         {? 'D'*_tmg & DK.N().TYP().P='N' & DK.DOST=date(0,0,0)
         ||
            _txt:='Pozycja %1, brak daty dostawy.'@[$DK.P];
            {? ~_a
            || {? var_pres('__kom')>100
               || exec('add_kom','#message',_txt,2)
               || FUN.info(_txt)
               ?}
            || _txt:='1 '+_txt
            ?};
            _ok:=0
         ?};
         {? 'D'*_tmg & DK.N().TYP().P='N' & DK.DOST<>date(0,0,0) & DK.NDK<>'' & DK.RDK
         || DK.cntx_psh;
            DK.use(DK.NDK);
            DK.prefix();
            _kind:={? DK.seek(DK.RDK,) || DK.STATS().KIND || '' ?};
            DK.cntx_pop
         || _kind:=''
         ?};
         {? (';NOZ'*_kind)>1 & ($('DK.N().TYP().STATS_'+_kind))()<>'T'
         ||
            _txt:='Pozycja %1, rodzaj statusu dostaw nieuprawniony dla typu dokumentu wydania.'@[$DK.P];
            {? ~_a
            || {? var_pres('__kom')>100
               || exec('add_kom','#message',_txt,2)
               || FUN.info(_txt)
               ?}
            || _txt:='1 '+_txt
            ?};
            _ok:=0
         ?};
         {? 'D'*_tmg & DK.PLUS='N' & DK.STATS & DK.NDK<>'' & DK.RDK
         ||
            DK.cntx_psh;
            DK.use(DK.NDK); DK.prefix;
            _stats:={? DK.seek(DK.RDK,) || DK.STATS || null ?};
            DK.cntx_pop;
            {? DK.STATS<>_stats
            ||
               _txt:='Pozycja %1, zmienił się status dostawy. Należy ponownie wybrać dostawę.'@[$DK.P];
               {? ~_a
               || {? var_pres('__kom')>100
                  || exec('add_kom','#message',_txt,2)
                  || FUN.info(_txt)
                  ?}
               || _txt:='1 '+_txt
               ?};
               _ok:=0
            ?}
         ?}
      ?};
::    intrastat
      {? DK.N().TYP().DK<>'T' & DK.PLUS='T' & _ok=1
      ||
         _ok:=exec('ch_dk_akc','magdok_poz');
         {? _a & ~_ok || _txt:='3 Błędne dane związane z Intrastatem.'@ ?}
      ?};
      {? DK.N().TYP().DS='T' & _ok=1
      ||
::       sprawdzanie informacji sprzedazy

         {? DK.ZP=0 & (DK.CN=0 | DK.SV=null | DK.CB=0) & DK.N().TYP().CS<>'N'
         ||
            _txt:='Pozycja %1, nieuzupełnione dane dotyczące cen sprzedaży.'@[$DK.P];
            {? ~_a
            || {? var_pres('__kom')>100
               || exec('add_kom','#message',_txt,2)
               || FUN.info(_txt)
               ?}
            || _txt:='4 '+_txt
            ?};
            _ok:=0
         |? DK.ZP=0 & (DK.WN=0 | DK.WB=0) & DK.N().TYP().CS<>'N'
         || _txt:='Pozycja %1, zerowa wartość pozycji.'@[$DK.P];
            {? ~_a
            || {? var_pres('__kom')>100
               || exec('add_kom','#message',_txt,2)
               || FUN.info(_txt)
               ?}
            || _txt:='4 '+_txt
            ?};
            _ok:=0
         ?};
         MDOST.cntx_psh;
         MDOST.index('M');
         MDOST.prefix('S',DK.M,null,DK.N().WAL);
         {? MDOST.first & MDOST.CMIN>0 & DK.CN>0 & DK.CN<MDOST.CMIN
         ||
            _txt:='Pozycja %1, cena sprzedaży poniżej ceny minimalnej.'@[$DK.P];
            {? ~_a
            || {? var_pres('__kom')>100
               || exec('add_kom','#message',_txt,4)
               || FUN.info(_txt)
               ?}
            || _txt:='4 '+_txt
            ?}
         ?};
         MDOST.cntx_pop
      ?};
      {? DK.N().MAG().SKL='T'
      || {? DK.SCC=0
         || _txt:='Pozycja %1, cena walutowa nieuzupełnione pole.'@[$DK.P];
            {? ~_a
            || {? var_pres('__kom')>100
               || exec('add_kom','#message',_txt,2)
               || FUN.info(_txt)
               ?}
            || _txt:='4 '+_txt
            ?};
            _ok:=0
         ?};
         {? DK.KCN=null
         || _txt:='Pozycja '+$DK.P+', kod CN nieuzupełnione pole.';
            {? ~_a
            || {? var_pres('__kom')>100
               || exec('add_kom','#message',_txt,2)
               || FUN.info(_txt)
               ?}
            || _txt:='3 '+_txt
            ?};
            _ok:=0
         ?};
         {? DK.CLO=null
         || _txt:='Pozycja %1, CŁO nieuzupełnione pole.'@[$DK.P];
            {? ~_a
            || {? var_pres('__kom')>100
               || exec('add_kom','#message',_txt,2)
               || FUN.info(_txt)
               ?}
            || _txt:='3 '+_txt
            ?};
            _ok:=0
         ?};
         {? DK.KP=''
         || _txt:='Pozycja %1, kraj pochodzenia nieuzupełnione pole.'@[$DK.P];
            {? ~_a
            || {? var_pres('__kom')>100
               || exec('add_kom','#message',_txt,2)
               || FUN.info(_txt)
               ?}
            || _txt:='3 '+_txt
            ?};
            _ok:=0
         ?}
      ?};
      {? ~_a || DK.next() || 0 ?}
   !}
?};
{? ~_ok & (_buf.clear(); _buf.first())
|| {! |? exec('FindAndGet','#table',DK,_buf.SQL,,"RDK:=0; NDK:=''; SRDK:=PRDK:=''; put(1)",1); _buf.next() !}
?};
obj_del(_buf);
{? ~_a || _ok || {? ~_ok || _txt || '' ?} ?}


\ch_dk_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: sprawdzenie poprawnosci wypelnienia pol dotyczacych INTRASTAT w tabeli DK podczas akceptacji dokumentu
::   WE: [_a] 0(domylnie)-komunikaty 1-brak komunikatow
::   WY: 1 - pozycja poprawnie wypelniona, 0 - wpp
::  OLD: \ch_dk_akc/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_return:=1;

{? DK.N().IST_TYP<>''
||
   {? var_pres('__kom')>100
   ||
      _return:=exec('chk_dk_intrastat','magdok_poz',0)=''
   ?}
?};

_return


\bd_z_mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed wyswietleniem zmiennej grupa materialowa
::  OLD: \bd_z_mgr/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.MAG().MGR='T'
|| ''
|| exec('findfnrd','color')
?}


\be_z_mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed edycja zmiennej grupa materialowa
::  OLD: \be_z_mgr/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.MAG().MGR='T' & ~(ND.INN='T' & ND.TYP().INW='I' & ND.TYP().P='T')


\ae_z_mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: po edycja zmiennej grupa materialowa
::  OLD: \ae_z_mgr/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? D_HELP.M<>''
||
   M.cntx_psh();
   M.index('MATKTM');
   M.prefix();
   {? M.find_key(D_HELP.M,D_HELP.M)
   || DK.M:=M.ref
   ?};
   M.cntx_pop();
:: wypelnienie stawki VAT jesli DK.M wypelnione i brak stawki
   {? DK.M<>null & DK.SV=null
   || exec('dk_sv','magdok_poz')
   ?};
   {? DK.M<>null()
   || ATR.M_ATR:=DK.M().M_ATR;
      _czy_ed:=ATR.CZY_ATR & (1+ND.MAG().TYP)='D' & ATR.M_ATR().EDIT;
      ATR.FLAG:={? ATR.FLAG_ED & _czy_ed & DK.M().M_ATR<>null() || 2 || 0 ?};
      {? _czy_ed & ATR.FLAG_ED || {? DK.M().M_ATR || ATR.FLAG_ED:=2 ?} ?};
      {? DK.DK_C<>null() || DK.DK_C().M_ATR().SYM || DK.M().M_ATR().SYM ?}
   ?}
?};
1


\dk_sv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: ustawia stawke VAT dla pozycji dokumentu magazynowego
::  OLD: \dk_sv/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? KSTE.KRAJ=null
||
   FUN.info('Niewypełnione pole "Kraj" w parametrch oddziału.'@);
   DK.SV:=null
||
   DK.SV:=exec('m_vat','material',DK.M,DK.N().KH,,ND.AR,ND.AM,,,,{? DK.PLUS='T' || 'Z' || 'S' ?})
?}


\bd_m_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed wyswietleniem zmiennej material/usluga w pozycjach dok. magazynowego
::  OLd: \bd_m_dk/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? 1+(-menu_txt)='d'
|| {? DK.ZL<>null()
   || {? ND.TYP().WYR='T'
      || {? DK.ZL().TYP().WP='P' &  (exec('nd_is_rp','magdok_wspolne',DK.N)=0 |
            (exec('nd_is_rp','magdok_wspolne',DK.N)>0 & exec('zl_czy_wyr','zl_wyr',DK.ZL)=0))
         || D_HELP.M:=DK.ZL().KTM().KTM;
            POMOC.MGR:=M.MGR
         || D_HELP.M:=DK.M().KTM;
            POMOC.MGR:=M.MGR
         ?}
      || D_HELP.M:=DK.M().KTM;
         POMOC.MGR:=M.MGR
      ?}
   || ''
   ?}
|| D_HELP.M:=DK.M().KTM;
   POMOC.MGR:=DK.M().MGR
?};
1


\be_m_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed redakcja zmiennej material/usluga w pozycjach dok. magazynowego
::   WY: czy mozna redagowac
::  OLD: \be_m_dk/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
HELP.MOD_IND:=DK.M;
{? POMOC.RODZ<>'U'
 & ((ND.INN='T' & ND.TYP().INW='I' & ND.TYP().P='T') | (ND.MAG().PAL='T' & ~exec('isB_ROZP','magdok_palety','M'))
 | BEER.REORG | ND.TYP().KOOP='T')
|| 0
|? HELP.POP=1 & exec('czyw_bad','statexam')
|| 0
|? {? HELP.POP=1 || exec('czydkfap','magdok_poz',$DK.ref,0) || 1 ?}
||
   {? HELP.POP=1
   || D_HELP.M:=DK.M().KTM
   || {? ND.TYP().WYR='T' & DK.ZL<>null
      || {? exec('nd_is_rp','magdok_wspolne',DK.N)>0 & exec('zl_czy_wyr','zl_wyr',DK.ZL)>0 & DK.M<>null()
         || D_HELP.M:=DK.M().KTM
         || D_HELP.M:=DK.ZL().KTM().KTM
         ?}
      ?}
   ?};
   1
|| 0
?}


\f3_m_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: f3 dla zmiennej materiał/usługa w pozycjach dokumentu magazynowego
::  OLD: \f3_m_dk/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
HELP.F3:=1;
JM.f_clear;
JM.win_dict('WER');
_opakow:=POMOC.OPAKOW;
POMOC.OPAKOW:='N';

{? ND.MAG().MGR<>'T'
|| POMOC.MGR:=null()
?};

params_set('env_mater',exec('env_mater','tech_mater'));

:: zmienna informujaca czy byl juz select
_sel:=0;

ZAKR.MATU:='A';
_wyn:='';
_prod:=exec('tte_lic','tte');
_wyp:=exec('czy_wyp','magdok_wspolne');
::_p8011:=exec('get','#params',8011,2,OPERATOR.USER);
_p8011:='N';
VAR.ZLIM_POB:=0;
{? _prod='T' & ND.TYP().KOOP='T'
||
   ZGP.index('KOOP');
   ZGP.prefix('N', ND.KH);
   ZGP.win_sel('SLO_KOOP');
   ZGP.select();
   _sel:=1
|? (SCRP.TMG & ND.TYP().P='T') & POMOC.RODZ<>'U' & ND.TYP().WYR='N'  |
   DK.ZL<>null() & _prod='T' & ND.TYP().WYR='N'
||
:: wg kartoteki MX
   {? var_pres('__tab')>100 || obj_del(__tab) ?};
   {? DK.ZL<>null() & _prod='T'
   || exec('openmask','zl_common',DK.ZL);
::    Sprawdzam skąd pokazywać limity
      _top_level:=exec('top_level','zl_link',DK.ZL);
      _zljoin:='(ZLIM.ZLEC,ZL.REFERENCE)';
      {? POMOC.MGR<>null()
      || __tab:=sql('
            select
               TMAT.REFERENCE as TMAT,
               CAST (0 AS REAL_TYPE) as LIL,
               CAST (0 AS REAL_TYPE) as POB,
               M.KTM as KTM,
               M.N as N,
               M_ATR.REFERENCE as M_ATR,
               DK_C.REFERENCE as DK_C,
               M.REFERENCE as REF,
               JM.KOD as JM,
               ZLIM.REFERENCE as ZLIM,
               ZGH.NRPRZ as PRZEW,
               ZGH.REFERENCE as ZGH_REF,
               ZGP.NRP as NRP,
               ZGP.REFERENCE as ZGP_REF,
               CAST (0 AS REAL_TYPE) as SD,
               ZLIM.LIMIT as LIMIT,
               \' \' as SRCTECH
            from ZL
            join ZLIM using'+_zljoin +'
               left join TMAT using(ZLIM.TMAT,TMAT.REFERENCE)
               join M using(ZLIM.KTM,M.REFERENCE)
               join MGR using(M.MGR,MGR.REFERENCE)
               join JM using(M.J,JM.REFERENCE)
               left join ZGP using(ZLIM.ZGP,ZGP.REFERENCE)
               left join ZGH using(ZGP.NRZLP,ZGH.REFERENCE)
               left join M_ATR using(M.M_ATR,M_ATR.REFERENCE)
               left join DK_C using(ZLIM.DK_C,DK_C.REFERENCE)
            where
               (ZLIM.LIMIT=''T'' and ZLIM.AKC=''T'' or ZLIM.LIMIT=''N'') and
               ZL.REFERENCE=:_a and
               ZLIM.KOR=0 and
               MGR.RODZ=''T'' and MGR.KOD='':_b'' and
               ((ZLIM.WYD=:_c or ZLIM.WYD is null) and (ZL.JORG=:_c or ZL.JORG is null)) and
               ZLIM.SO='':_d''
::            group by TMAT.REFERENCE, M.REFERENCE, M.KTM, M.N, JM.KOD
         ',DK.ZL,POMOC.MGR().KOD,DK.WYD,{? (' '+exec('get','#params',500705,2,null()))*(' '+ND.TYP().T+' ')>0 || 'O' || 'S' ?} )
      || __tab:=sql('
            select
               TMAT.REFERENCE as TMAT,
               CAST (0 AS REAL_TYPE) as LIL,
               CAST (0 AS REAL_TYPE) as POB,
               M.KTM as KTM,
               M.N as N,
               M_ATR.REFERENCE as M_ATR,
               DK_C.REFERENCE as DK_C,
               M.REFERENCE as REF,
               JM.KOD as JM,
               ZLIM.REFERENCE as ZLIM,
               ZGH.NRPRZ as PRZEW,
               ZGH.REFERENCE as ZGH_REF,
               ZGP.NRP as NRP,
               ZGP.REFERENCE as ZGP_REF,
               CAST (0 AS REAL_TYPE) as SD,
               ZLIM.LIMIT as LIMIT,
               \' \' as SRCTECH
            from ZL
            join ZLIM using'+_zljoin +'
               left join TMAT using(ZLIM.TMAT,TMAT.REFERENCE)
               join M using(ZLIM.KTM,M.REFERENCE)
               join JM using(M.J,JM.REFERENCE)
               left join ZGP using(ZLIM.ZGP,ZGP.REFERENCE)
               left join ZGH using(ZGP.NRZLP,ZGH.REFERENCE)
               left join M_ATR using (M.M_ATR,M_ATR.REFERENCE)
               left join DK_C using(ZLIM.DK_C,DK_C.REFERENCE)
            where
               (ZLIM.LIMIT=''T'' and ZLIM.AKC=''T'' or ZLIM.LIMIT=''N'') and
               ZL.REFERENCE=:_a and
               ZLIM.KOR=0 and
               ((ZLIM.WYD=:_b or ZLIM.WYD is null) and (ZL.JORG=:_b or ZL.JORG is null)) and
               ZLIM.SO='':_c''
::            group by TMAT.REFERENCE, M.REFERENCE, M.KTM, M.N, JM.KOD
         ',DK.ZL,DK.WYD,{? (' '+exec('get','#params',500705,2,null()))*(' '+ND.TYP().T+' ')>0 || 'O' || 'S' ?} )
      ?};

::    Pobieram ilość dla limitów uwzgledniając korekty
      {? __tab.first()
      || {!
         |? _zlim:=exec('FindAndGet','#table',ZLIM,__tab.ZLIM,,,null());
            {? _zlim<>null()
            || _il:=exec('sum_il','zl_limit',_zlim,{? __tab.LIMIT='T' || 1 || 0 ?});
               _pob:=exec('ilosc_dk','zl_limit',_zlim,1);
               __tab.LIL:=_il;
               __tab.POB:=_pob;
               __tab.put()
            ?};
            __tab.next()
         !}
      ?};
::    Usuwam limity z zerową ilością
      {? __tab.first()
      || {!
         |?
            {? __tab.LIL<=0
            || __tab.del()
            || __tab.next()
            ?}
         !}
      ?};

::    Gdy brak limitów, to ostrzeżenie
      {? ~__tab.first()
      || {? DK.WYD<>null()
         || FUN.emsg('Brak dostępnych surowców dla wydziału %1 na limitach zlecenia %2.'@[DK.WYD().KOD,DK.ZL().SYM])
         || FUN.emsg('Brak dostępnych surowców na limitach zlecenia %1.'@[DK.ZL().SYM])
         ?}
      ?};

      {? __tab.first()
      ||
::         _wer:=__tab.mk_sel('Dostępne surowce',,0,'zlim_dost',,3);
         {? POMOC.MGR<>null()
         || SM.index('ASAG');
            {? (DK.ZL<>null() & _prod='T') | _wyp
            || SM.prefix(ST.MAG,'N','T',POMOC.MGR,D_HELP.M)
            || SM.prefix(ST.MAG,'N','T',POMOC.MGR);
               {? D_HELP.M <>''
               || SM.find_key(D_HELP.M)
               ?}
            ?}
         || SM.index('ASA');
            {? (DK.ZL<>null() & _prod='T') | _wyp
            || SM.prefix(ST.MAG,'T',D_HELP.M)
            || SM.prefix(ST.MAG,'T');
               {? D_HELP.M <>''
               || SM.find_key(D_HELP.M)
               ?}
            ?}
         ?};

         __wer:=__tab.mk_sel('Limity'@,,0,'zlim_dost',,3,,,'U');
         exec('pokaz_zam_mech','tech_mater',8,1,1);
         __sel:=__ZAMEL.win_sel('?');

         __tab.win_fld(__wer,,'KTM',,,10,,,'Indeks'@);
         __tab.win_fld(__wer,,'N',,,20,,,'Nazwa'@);
         __tab.win_fld(__wer,,'PRZEW',,,20,,,'Przewodnik'@);
         __tab.win_fld(__wer,,'LIMIT',,,5,,,'Limit'@);
         __tab.win_fld(__wer,,'LIL',,,10,ST.DOKL,,'Ilość'@);
         __tab.win_fld(__wer,,'POB',,,10,ST.DOKL,,'Pobrano'@);
         __tab.win_fld(__wer,@.BEER,'SD',,,10,ST.DOKL,,'Dostępne'@);
         __tab.win_fld(__wer,,'JM',,,5,,,'jm'@);
         __tab.win_act(__wer,,'Formuła','Wybierz'@@,,,"exec('dk_exit','magdok_poz')",,1);
         __tab.win_act(__wer,,'Kolejność',,,,,);
         _fb:="
            M.cntx_psh();
            M.clear();
            {? M.seek(__tab.REF,'material')
            || exec('obl_stan','magazyn_stan',M.ref(),1,ST.MAG);
               VAR.ZLIM_POB:=exec('ilosc_dk','zl_limit',DK.ZLIM);
               __tab.SD:=BEER.SD;
               __tab.put()
            || VAR.ZLIM_POB:=0;
               BEER.SD:=0;
               __tab.SD:=BEER.SD;
               __tab.put()
            ?};
            M.cntx_pop();
            ~~
         ";
         __tab.win_act(__wer,,'Rekord',,,,_fb,,1);
         _fb:="
            exec('openmask','zl_common',DK.ZL);
            ZLIM.clear();
            {? ZLIM.seek(__tab.ZLIM)
            ||
               exec('bs_zlimw','zl_limit')
            ?}
         ";
         __tab.win_act(__wer,,'Wyświetl',,,,_fb);

         __ndxzamech:=__ZAMEL.ndx_tmp(,,'SRC',,,'SRC',,);
         __tabgrp:=__tab.grp_make('Surowce'@,"",'#grpsurrw',,,,,'normal');
         __tab.grp_sel(__tabgrp,__tab,__wer,,"grp_disp(__ZAMEL,__sel);grp_disp(SM,'WER_DK')",0,0,20,,,1);
         __tab.grp_sel(__tabgrp,__ZAMEL,__sel,'Zamienniki'@,,0,0,20,
                  "__ZAMEL.index(__ndxzamech);
                   __ZAMEL.prefix(__tab.TMAT,__tab.TMAT);
                   __ZAMEL.first();
                  ~~",,,,'maximized_with_title'
         );

         __tab.grp_sel(__tabgrp,SM,'WER_DK','Pozostałe materiały'@,,0,0,20,,,,,'maximized_with_title');
         {? _p8011<>'T'
         || __tab.win_sel(__wer)
         || __tab.win_sel(__tabgrp)
         ?};
         _sel:=1;
         _ndxold:=__tab.index('?');
         _ndx:=__tab.ndx_tmp('',1,'KTM',,,'N',,);
         _ndx2:=__tab.ndx_tmp('',1,'ZGH_REF',,,'KTM',,,'N',,);

::       Jeżeli w oknie został wcześniej wybrany przewodnik to mogę ułatwić wybranie limitu
         {? ATR.ZPAR_ZGH<>null()
         || __tab.index(_ndx2);
            _zgh_ref:=$ATR.ZPAR_ZGH;
            {? _zgh_ref<>''
            || __tab.prefix(_zgh_ref);
               __tab.first()
            ?}
         || __tab.index(_ndx);
            __tab.blank(1);
            __tab.KTM:=D_HELP.M;
            __tab.find_rec()
         ?};
         {? __tab.select(,1,5)
         || M.cntx_psh();
            M.clear();
            {? M.seek(VAR.A_T)
            ||
               D_HELP.M:=M.KTM;
               DK.M:=M.ref;
               POMOC.MGR:=M.MGR;
               {? DK.IL=0
               || {? DK.PLUS='N'
                  ||
::                   Dokument rozchodowy (RW)
                     {? __tab.LIL-VAR.ZLIM_POB>0
                     || DK.IL:=__tab.LIL-VAR.ZLIM_POB
                     ?}
                  ?}
               ?};
               _wyn:=M.KTM
            ?};
            M.cntx_pop()
         ?};
         __tab.index(_ndxold);
         __tab.ndx_drop(_ndx)
      ?};
      obj_del(__tab)

   || _mx:=1;
      {!
      |? _scrtmg:=SCRP.TMG;
         {? _mx=1
         || {? POMOC.MGR<>null
            || MX.index('MGR');
               MX.prefix(ST.MAG,POMOC.MGR,'T')
            || MX.index('MG');
               MX.prefix(ST.MAG,'T')
            ?};
            MX.win_sel('WER');
            {? MX.first()
            || MX.find_key(D_HELP.M);
               _sel:=1;
               exec('zakres_m_k_p_pocz','material','MX');
               {? __ZAKR_ND_KH_PROJ
               || MX.actions('WER')
               || MX.actions('WER','E:E')
               ?};
               MX.cntx_psh();
               {? MX.select(,1,10)
               || {? SCRP.TMG
                  || POMOC.MGR:=MX.M().MGR; D_HELP.M:=MX.M().KTM; _wyn:=MX.M().KTM
                  || _wyn:=D_HELP.M
                  ?}
               || _wyn:=''
               ?};
               MX.cntx_pop();
               exec('zakres_m_k_p_konc','material');
               _wyn
            ?}
         || {? ~_wyp
            || {? POMOC.MGR<>null
               || M.index('AMGM');
                  M.prefix('T',POMOC.RODZ,POMOC.MGR)
               || M.index('ARODZ');
                  M.prefix('T',POMOC.RODZ)
               ?};
               M.find_key(D_HELP.M)
            || {? POMOC.MGR<>null
               || M.index('AMGM');
                  M.prefix('T',POMOC.RODZ,POMOC.MGR,D_HELP.M,D_HELP.M)
               || M.index('ARODZ');
                  M.prefix('T',POMOC.RODZ,D_HELP.M,D_HELP.M)
               ?}
            ?};
            exec('zakres_m_k_p_pocz','material');
            __M_NDX.WYPOSAZENIE:=_wyp;
            {? __ZAKR_ND_KH_PROJ
            || M.actions('WER_MX')
            || M.actions('WER_MX','E:E')
            ?};
            M.win_sel('WER_MX');
            _sel:=1;
            M.cntx_psh();
            {? M.select(,1,10)
            || {? SCRP.TMG
               || POMOC.MGR:=M.MGR; D_HELP.M:=M.KTM; _wyn:=M.KTM
               || _wyn:=D_HELP.M
               ?}
            || _wyn:=''
            ?};
            {? __ZAKR_ND_KH_PROJ
            || M.f_clear()
            ?};
            M.cntx_pop();
            exec('zakres_m_k_p_konc','material');
            _wyn
         ?};
         _mx:={? _mx=1 || 0 || 1 ?};
         _cont:=SCRP.TMG=0;
         SCRP.TMG:=_scrtmg;
         _cont=1
      !}
   ?}
?};
:: jeśli wcześniej nie było selecta
{? _sel=0 & (_prod<>'T' | DK.ZL=null() | ND.TYP().WYR='T')
||
   {? ND.TYP().P='N' & POMOC.RODZ<>'U'
   ||
::    wg kartoteki SM
      _filtr:=0;
      {? ST.MAG().PAL='T' & DK.ROZPAK & EANX.PALR<>null()
      || _filtr:=1;
         SM.index('ASA');
         SM.prefix();
         SM.f_clear();
         SM.f_set('M(KTM)',,'\"SM\".MAG=:_a '
                  'and \"SM\".S>0',ST.MAG);
         {? SM.f_first()
         || {!
            |? {? exec('FindInSet','#table','PAL_POZ','PAL',SM.M().KTM,EANX.PALR,,1,,null())=null()
               || SM.f_del()
               || SM.f_next()
               ?}
            !};
            SM.f_first();
            {? D_HELP.M<>'' || SM.find_key(ST.MAG,'T',D_HELP.M) ?}
         ?}
      |? POMOC.MGR<>null
      || SM.index('ASAG');
         {? (DK.ZL<>null() & _prod='T') | _wyp
         || SM.prefix(ST.MAG,'N','T',POMOC.MGR,D_HELP.M)
         || SM.prefix(ST.MAG,'N','T',POMOC.MGR);
            {? D_HELP.M <>''
            || SM.find_key(D_HELP.M)
            ?}
         ?}
      || SM.index('ASA');
         {? (DK.ZL<>null() & _prod='T') | _wyp
         || SM.prefix(ST.MAG,'T',D_HELP.M)
         || SM.prefix(ST.MAG,'T');
            {? D_HELP.M <>''
            || SM.find_key(D_HELP.M)
            ?}
         ?}
      ?};

      SM.win_sel('WER'); _scrtmg:=SCRP.TMG;
      SCRP.TMG:=1;
      {? SM.select(,1,10)
      || {? SCRP.TMG
         || POMOC.MGR:=SM.M().MGR; D_HELP.M:=SM.M().KTM;_wyn:=SM.M().KTM
         || _wyn:=D_HELP.M
         ?}
      || _wyn:=''
      ?};
      {? _filtr || SM.f_clear() ?};
      SCRP.TMG:=_scrtmg
   |? ND.TYP().WYR='T'
   || {? exec('nd_is_rp','magdok_wspolne',DK.N)>0 & exec('zl_czy_wyr','zl_wyr',DK.ZL)>0
      ||
::       Zlecenie na wiele wyrobów, przygotowanie listy dostępnych materiałów
         _sql:='
            select
               distinct M.REFERENCE as REF,M.KTM,M.N,JM.KOD as JM
            from ZL join ZL_WYR join M using (ZL_WYR.KTM,M.REFERENCE) join JM using(M.J,JM.REFERENCE)
            where
               ZL.REFERENCE=\':_a\'
         ';
         _tab:=sql(_sql,$DK.ZL);
         exec('m_win','zl_wyr',_tab);
         M.cntx_psh();
         M.clear();
         {? _tab.select(,,10)
         || POMOC.MGR:=M.MGR;
            D_HELP.M:=M.KTM;
            _wyn:=M.KTM;
            {? exec('party_req','zl_wyk',DK.ZL)>0
            ||
::             Sprawdzenie czy materiał na partii zgodny z nowym materiałem
               {? ATR.ZPARN_DK<>null()
               || _ktm_zparn:=exec('FindAndGet','#table',ZPARN,ATR.ZPARN_DK,,"ZPARN.KTM",null());
                  {? M.ref()<>_ktm_zparn
                  || ZPARN.cntx_psh();
                     ZPARN.index('ZGH3');
                     ZPARN.prefix(DK.ZL,ATR.ZPAR_ZGH,M.ref());
                     {? ZPARN.first()
                     || ATR.ZPARN_DK:=ZPARN.ref()
                     || ATR.ZPARN_DK:=null()
                     ?};
                     ZPARN.cntx_pop();
                     exec('zparn_var_ae','magdok_poz')
                  ?}
               ?}
            ?}
         || _wyn:=''
         ?};
         M.cntx_pop()
      || {? POMOC.MGR<>null()
         || M.index('AMGM');
            {? DK.ZL().TYP().WP='P'
            || M.prefix('T',POMOC.RODZ,POMOC.MGR,D_HELP.M,D_HELP.M)
            || M.prefix('T',POMOC.RODZ,POMOC.MGR)
            ?}
         || M.index('ARODZ');
            {? DK.ZL().TYP().WP='P'
            || M.prefix('T',POMOC.RODZ,D_HELP.M,D_HELP.M)
            || M.prefix('T',POMOC.RODZ)
            ?}
         ?};
::       dla dokumentu RP wyłączamy możliwosci edycji kartoteki M
         {? ((' '+exec('get','#params',500701,2,null()))*(' '+ND.TYP().T+' ')>0) || _usun_akcje:=1 || _usun_akcje:=0 ?};
         exec('slo_m_ok','material',POMOC.RODZ,,,{? _usun_akcje || 'DUIR:D' || '' ?});
         BEER.KH:=ND.KH;
         {? M.select(,1,10) || POMOC.MGR:=M.MGR; D_HELP.M:=M.KTM; _wyn:=M.KTM || _wyn:='' ?};
         M.actions(M.win_sel('?'),'');
         BEER.KH:=null()
      ?}
   ||
::    wg kartoteki M
      {? ~_wyp
      || {? POMOC.MGR<>null
         || M.index('AMGM');
            M.prefix('T',POMOC.RODZ,POMOC.MGR)
         || M.index('ARODZ');
            M.prefix('T',POMOC.RODZ)
         ?};
         M.find_key(D_HELP.M)
      || {? POMOC.MGR<>null
         || M.index('AMGM');
            M.prefix('T',POMOC.RODZ,POMOC.MGR,D_HELP.M,D_HELP.M)
         || M.index('ARODZ');
            M.prefix('T',POMOC.RODZ,D_HELP.M,D_HELP.M)
         ?}
      ?};
      {? POMOC.RODZ='U'
      || M.win_sel('NL_WERU')
      || M.win_sel('NL_WERST')
      ?};
      exec('slo_m_ok','material',POMOC.RODZ,0);
      exec('zakres_m_k_p_pocz','material');
      __M_NDX.WYPOSAZENIE:=_wyp;
      _act_f3_m_dk:=exec('actions_a','#window');
      _act_f3_m_dk.WIN_ACR:=M.win_sel('?');
      {? __ZAKR_ND_KH_PROJ
      || _act_f3_m_dk.HID_ACTIONS:='R(NA):'
      || _act_f3_m_dk.HID_ACTIONS:='R(NA)E:E'
      ?};
      params_set('act_f3_m_dk',_act_f3_m_dk);
      M.cntx_psh();
      {? M.select(,1,10) || POMOC.MGR:=M.MGR; D_HELP.M:=M.KTM; _wyn:=M.KTM || _wyn:='' ?};
      {? __ZAKR_ND_KH_PROJ
      || M.f_clear()
      ?};
      M.cntx_pop();
      M.actions(M.win_sel('?'),'');
      exec('zakres_m_k_p_konc','material')
   ?}
?};
{? _wyn='' || _wyn:=fld ?};
VAR_DEL.delete('__tab');
VAR_DEL.delete('__wer');
VAR_DEL.delete('__sel');
VAR_DEL.delete('__ZAMEL');
VAR_DEL.delete('__TAC');
HELP.F3:=0;
POMOC.OPAKOW:=_opakow;
_wyn


\ae_m_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: po redakcji zmiennej material/usluga w pozycjach dok. magazynowego
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_prod:=exec('tte_lic','tte');
_pomoc_mgr:=POMOC.MGR;
ATR.MJS:='DK';

{? fld()=''
|| D_HELP.MR:=null;
   {? POMOC.RODZ='U'
   || exec('find_sql','#table','M','KTM;N;KODK','M.A=\'\'T\'\' and M.RODZ=\'\'U\'\'','D_HELP.MR'
            ,'20@Kod materiału;40@Nazwa materiału;20@Kod kreskowy;','REDU','','')
   ||
      {? DK.N().TYP().P='T'
      || exec('find_sql','#table','M','KTM;N;KODK;*(R)IL','M.A=\'\'T\'\' and M.RODZ=\'\'T\'\'','D_HELP.MR'
            ,'20@Kod materiału;40@Nazwa materiału;20@Kod kreskowy;12@Dostępne;','RED','obl_stm#magazyn_stan'
            ,{? DK.N().TYP().P='T' || '' || '*IL' ?})
      || exec('find_sql','#table','M','KTM;N;KODK;*(R)IL','','D_HELP.MR'
            ,'20@Kod materiału;40@Nazwa materiału;20@Kod kreskowy;12@Dostępne;'
            ,'RED','obl_stm#magazyn_stan',{? DK.N().TYP().P='T' || '' || '*IL' ?})
      ?}
   ?};
   D_HELP.M:=D_HELP.MR().KTM; {? D_HELP.MR<>null || POMOC.MGR:=D_HELP.MR().MGR ?}
?};

_idmob:=exec('FindInSet','#table','M','MATKTM',fld(),,"M.IDMOB",,,'');
_old_ind:=DK.M().KTM;
{? fld()<>'' & (1+ND.MAG().TYP)='D' & ND.TYP().P='T' & ND.TYP().DN<>'T'
 & (ND.TYP().ZLEC<>'T' & _idmob<>'' & ';ZP'*_idmob)
|| FUN.info('Wybrany indeks materiałowy wymaga identyfikacji wg zlecenia lub parti produkcyjnej.\n'
    'Ponieważ typ dokumentu nie pozwala na podanie zlecenia.\nWybranie indeksu niemożliwe.'@);
   _wyn:=0
|? fld()<>'' & (ND.TYP().WYR<>'T' & DK.ZL=null  | _prod='N')
||
   _wyn:=0;
   DK.cntx_psh();
   M.cntx_psh();
   {? DK.PLUS='T'
   || M.index('ARODZ');
      M.prefix('T',POMOC.RODZ)
   || M.index('RODZ');
      M.prefix(POMOC.RODZ)
   ?};
   _mat:=null;_gru:=null;_jm:=null; _inw:=0; _jmg:=null();

   {? M.find_key(fld)
   || {? ((ND.TYP().P='T' & ND.TYP().DN='K') | (ND.TYP().P='N' & ND.TYP().DN='D'))
       & (POM.SKLAD:=0; exec('m_sklad_','material',ND.D); ~POM.SKLAD)
      || FUN.info('Wybrany indeks materiałowy nie posiada składowych.\n'
          'Wybranie indeksu dla dokumentu typu przychód kompletu niemożliwe.'@);
         _wyn:=0
      || _inw:=exec('open_inw','magdok_wspolne',ND.MAG,M.ref,ND.TYP().P='T');
         {? _inw & ND.MD<>null || _inw:=exec('open_inw','magdok_wspolne',ND.MD,M.ref,ND.TYP().P='T') ?};

         _prz:=exec('sprprzec','magazyn_przec',ND.MAG,ND.D,M.ref(),ND.T);
         {? _prz<3 & ND.MD<>null || _prz:=exec('sprprzec','magazyn_przec',ND.MD,ND.D,M.ref,ND.T) ?};

         {? _inw>0 & _prz<3
         || _gru:=M.MGR; _grun:=M.MGR().KOD; _ok:=1;
            POMOC.MGR:=M.MGR;
            _ok:=exec('mx_add','magdok_wspolne');
            {? _ok
            ||
               _mat:=M.ref();
               _jm:=M.J;
               _jmg:=M.J2;
               _wyn:=1;
               POMOC.MGR:=M.MGR;
               D_HELP.M:=M.KTM
            ?}
         || {? _prz=3
            || FUN.info('Podany indeks materiałowy znajduję się na otwartym arkuszu przecen\n'
                '(data dokumentu jest mniejsza lub równa dacie przeceny).\n'
                'Dołączenie do dokumentu niemożliwe.'@)
            |? _prz=4
            || FUN.info('Podany indeks materiałowy znajduję się na zamkniętym arkuszu przecen\n'
                '(data dokumentu jest mniejsza lub równa dacie przeceny).\n'
                'Dołączenie do dokumentu niemożliwe.'@)
            ?};
            POMOC.MGR:=null;
            D_HELP.M:='';
            _wyn:=0
         ?}
      ?}
   || FUN.info('Brak pozycji w słowniku.'@);
      POMOC.MGR:=null;
      D_HELP.M:='';
      _wyn:=0
   ?};
   M.cntx_pop();
   DK.cntx_pop();

   DK.M:=_mat; DK.M().KTM;
   DK.JM:=_jm;
   {? _jmg<>null() || DK.J2:=_jmg ?};

   {? _old_ind<>D_HELP.M
   || {? DK.PLUS='N' & DK.IL>0
      || exec('obl_stan','magazyn_stan',DK.M,1,ST.MAG);
         {? DK.IL>BEER.SD || HELP.IL:=0; DK.IL:=BEER.SD ?}
      ?};
      DK.T2:={? DK.M().J2<>null() || 'M' || 1+(1-BEER.MMJM) ?};
      DK.J2:={? DK.M().J2<>null() || DK.M().J2 || null() ?};
      DK.WS2:={? DK.M().J2<>null() || exec('oblWSP','jm',DK.M) || 0 ?};
      DK.IL2:=0;
      EANX.TW:=date(0,0,0)
   ?};
   exec('ustawprz','magdok_poz',_mat,_jm);
:: dla uproszczonego wystawiania te same jednostki
   {? ND.TYP().UPRW='T' & ~HELP.POP || DK.J2:=DK.JM; DK.WS2:=1 ?};
   {? (DK.M<>null & DK.SV=null | _old_ind<>D_HELP.M  ) & (DK.PLUS='N' | DK.N().TYP().DN='T')
   || exec('dk_sv','magdok_poz')
   ?};
   {? _old_ind<>D_HELP.M & (DK.PLUS='N' | DK.N().TYP().DN='T')
   || DK.DOST:=date(0,0,0);
      DK.RDK:=0;
      DK.NDK:='';
      DK.SRDK:='';
      DK.PRDK:='';
      DK.C:=0;
      DK.WAR:=0
   ?};

:: sprawdzenie zmiany indeksu przy magazynie ewidencyjnym
   {? (_old_ind<>D_HELP.M | DK.PLUS='N') & (DK.N().MAG().TYP*'EWI')
   || DK.C:=exec('biez_cen','ceny_dok',DK.M,ST.MAG,DK.N().D);
      DPOZ.OCZ:=DK.C:=DK.C $DK.M().DOKL_C;
      DK.WAR:=(DK.IL*DK.C)$2
   |? _old_ind<>D_HELP.M & DK.PLUS='T'
   || DK.C:=DK.WAR:=0
   ?};

:: sprawdzenie inwentury
   {? _wyn=1 & exec('sprd_inp','magazyn_inw',DK.M,DK.N().D,,,DK.N().T)
    & {? DK.N().MD<>null || exec('sprd_inp','magazyn_inw',DK.M,DK.N().D,DK.N().MD,,DK.N().T) || 1 ?}
   || DPOZ.M:=HELP.KTM:=DK.M;
      {? DK.N().TYP().DS='T'
      || {? DK.SV=null
         || exec('dk_sv','magdok_poz')
         ?}
      ?};
      {? DK.N().TYP().P='N' || _wyn:=exec('prop_zam','magdok_poz') ?};
      {? _wyn=1 || _wyn:=exec('mx_add','magdok_wspolne') ?}
   || POMOC.MGR:=null();
      _pomoc_mgr:=null();
      _wyn:=0
   ?};

   _windisp:=0;

   {? _wyn & HELP.MOD_IND<>DK.M & DK.N().TYP().DS='T'
   ||
::    zerowanie wartosci sprzedazowych
      DK.CWAL:=DK.CN:=DK.CB:=DK.RAB:=DK.RABK:=0;
      exec('clr_promo_tap','ceny');
      _windisp:=_wyn:=exec('obl_wars','magdok_poz',,DK.N().RAB)
   ?};
:: intrastat
   {? _wyn=1 & DK.M<>null & D_HELP.M<>_old_ind
   ||
      DK.KP:='';
      exec('istatr_nd2dk','magdok_poz',1);
      exec('ist_wart_dk','magdok_poz',1);
      _windisp:=1
   ?};
   exec('obl_mwb','magdok_poz');
   {? _windisp
   ||
      exec('set_efld_opt','magdok_poz');
      win_disp
   ?}
|? fld()<>'' & ND.TYP().WYR='T' & _prod='T'
|| _czy_wyr:=exec('nd_is_rp','magdok_wspolne',DK.N)>0 & exec('zl_czy_wyr','zl_wyr',DK.ZL)>0;
   {? (_czy_wyr=0 & fld()<>DK.ZL().KTM().KTM) | (_czy_wyr>0 & fld()<>DK.M().KTM)
   || M.cntx_psh();
      M.index('MATKTM');
      M.prefix();
      {? M.find_key(fld,fld)
      || {? ((_czy_wyr=0 & DK.ZL().TYP().WP<>'P') | (_czy_wyr>0 & exec('zl_chk_ktm','zl_wyr',DK.ZL,M.ref())))
            & exec('spr_mat','magdok_poz')
         || DK.M:=M.ref();
            DK.JM:=M.J;
            {? _czy_wyr>0 & exec('party_req','zl_wyk',DK.ZL)>0
            ||
::             Sprawdzenie czy materiał na partii zgodny z nowym materiałem
               {? ATR.ZPARN_DK<>null()
               || _ktm_zparn:=exec('FindAndGet','#table',ZPARN,ATR.ZPARN_DK,,"ZPARN.KTM",null());
                  {? M.ref()<>_ktm_zparn
                  || ZPARN.cntx_psh();
                     ZPARN.index('ZGH3');
                     ZPARN.prefix(DK.ZL,ATR.ZPAR_ZGH,M.ref());
                     {? ZPARN.first()
                     || ATR.ZPARN_DK:=ZPARN.ref()
                     || ATR.ZPARN_DK:=null()
                     ?};
                     ZPARN.cntx_pop();
                     exec('zparn_var_ae','magdok_poz')
                  ?}
               ?}
            ?};
            _wyn:=1
         || FUN.info('Materiał nie jest produktem zlecenia.'@);
            _wyn:=0
         ?}
      || FUN.info('Brak materiału w kartotece materiałowej.'@);
         _wyn:=0
      ?};
      M.cntx_pop()
   || {? DK.PLUS='T'
      || M.index('ARODZ');
         M.prefix('T',POMOC.RODZ)
      || M.index('RODZ');
         M.prefix(POMOC.RODZ)
      ?};
      {? M.find_key(fld) & exec('spr_mat','magdok_poz')
      || DK.M:=M.ref;
         DK.JM:=M.J;
         _wyn:=1
      || _wyn:=0
      ?}
   ?}
|? fld()<>'' & ND.TYP().WYR<>'T' & DK.ZL<>null & _prod='T' & ND.TYP().KOOP<>'T'
||
:: Jesli DK.ZLIM nie wypelnione to szukam pierwszego limitu na zleceniu zgodnego z wypelnionym przez usera stringiem
   {? DK.ZLIM=null()
   || _zlim:=exec('dk_zlim_suggest','zl_limit',DK.ZL,D_HELP.M,ATR.ZPAR_ZGH);
      {? _zlim<>null()
      || DK.ZLIM:=_zlim;
         DK.M_ZLIM:=ref_name(_zlim)
      || FUN.emsg('Nie znaleziono limitu o podanym symbolu.'@);
         _wyn:=0
      ?}
   ||
::    Obsluga dla popraw - jesli zlim wypelniony i D_HELP.M rozny od KTM zlima to zmieniam
      _ktm_ref:=exec('FindAndGet','#table',ZLIM,#DK.ZLIM,ref_name(DK.ZLIM),"KTM",null());
      _ktm:=exec('FindAndGet','#table',M,#_ktm_ref,ref_name(_ktm_ref),"KTM",null());
      {? _ktm<>D_HELP.M
      || _zlim:=exec('dk_zlim_suggest','zl_limit',DK.ZL,D_HELP.M,ATR.ZPAR_ZGH);
         {? _zlim<>null()
         || DK.ZLIM:=_zlim;
            DK.M_ZLIM:=ref_name(_zlim)
         || FUN.emsg('Nie znaleziono limitu o podanym symbolu.'@);
            _wyn:=0
         ?}
      ?}
   ?};
   {? _wyn<>0
   ||
      {? DK.ZLIM<>null()
      || exec('openmask','zl_common',DK.ZL);

::       Sprawdzam czy typ magazynu pozwala na wydanie takiego limitu
         _wyn:=exec('mag_allowed_rw','zl_limit',DK.ZL,ND.MAG,DK.ZLIM,1);

         {? _wyn>0
         ||
            _il_zlim:=exec('sum_il','zl_limit',DK.ZLIM);
            _pob:=exec('ilosc_dk','zl_limit',DK.ZLIM,1);

            _ktm_ref:=exec('FindAndGet','#table',ZLIM,#DK.ZLIM,ref_name(DK.ZLIM),"KTM",null());
            M.clear();
            {? M.seek(_ktm_ref) & exec('spr_mat','magdok_poz')
            || {? DK.PLUS='T' | exec('FindAndGet','#table',ZLIM,DK.ZLIM,,"ZLIM.LIMIT='N'",0) |
                  exec('spr_rez','zamsiw_limit')

               ||
::                Jezeli zlecenie jest zleceniem na ktorym powstaje wyrob i zostala wskazana partia
::                to sprawdzam czy wybrany limit ma ten sam przewodnik co partia, w przeciwnym razie
::                nie ma sensu taka konfiguracja danych bo surowiec na limicie zostanie powiazany z partia z innego
::                przewodnika
                  _can_continue:=1;

                  {? ATR.ZPARN_RW<>null()
                  ||
                     _zl_top:=exec('top_level','zl_link',DK.ZL);
                     _top_rodz:=exec('FindAndGet','#table',ZL,#_zl_top,ref_name(_zl_top),"RODZAJ",'');
                     _zl_prod:=null();
                     {? _top_rodz='N'
                     || _zl_prod:=DK.ZL
                     || _zl_prod:=exec('main_podzlec','zl_link',_zl_top)
                     ?};
                     {? _zl_prod<>null() & _zl_prod=DK.ZL
                     ||
::                      Sprawdzam czy przewodniki sie zgadzaja
                        _zgh_part:=ATR.ZPARN_RW().ZGH;
                        _zgh_lim:=DK.ZLIM().ZGP().NRZLP;
                        {? _zgh_part<>_zgh_lim
                        ||
                           _zgh_s1:=exec('FindAndGet','#table',ZGH,#_zgh_part,ref_name(_zgh_part),"NRPRZ",'');
                           _zgh_s2:=exec('FindAndGet','#table',ZGH,#_zgh_lim,ref_name(_zgh_lim),"NRPRZ",'');
                           _msg0:='';
                           _msg1:='Przewodnik limitu i partii są różne.'@;
                           _msg2:='Takie przypisanie jest niedozwolone, należy wybrać '
                                  'limit powiązany z innym przewodnikiem.'@;
                           _msg4:='Przewodnik partii: %1'@[_zgh_s1];
                           _msg5:='Przewodnik limitu: %1'@[_zgh_s2];
                           _msg_glued:=exec('form','#string','L',_msg1
                                                                ,_msg2
                                                                ,_msg0
                                                                ,_msg4
                                                                ,_msg5);
                           FUN.emsg(_msg_glued);
                           _wyn:=0;
                           _can_continue:=0
                        ?}
                     ?}
                  ?};

                  {? _can_continue>0
                  ||
                     DK.M:=M.ref;
                     DK.JM:=M.J;
                     BEER.M:=M.ref;
                     POMOC.MGR:=M.MGR;
                     D_HELP.M:=M.KTM;

::                   Podpowiadam ilosc
                     _il:=exec('dk_il_suggest','zl_limit',DK.ZLIM,DK.ZL);
                     {? _il>0 & DK.IL=0
                     || DK.IL:=_il
                     ?};
                     _wyn:=1
                  ?}
               || FUN.info(
                     'Na jeden z materiałów zlecenia zostały założone rezerwacje.\n\n'
                     'Pobranie surowca może być wykonane poprzez realizację zamówienia wewnętrznego\n'
                     'lub przy użyciu funkcji \'Wydanie\' w obszarze zleceń — w oknie limitów.'@
                  );
                  _wyn:=0
               ?}
            || FUN.emsg('Nieprawidłowy indeks materiałowy.'@);
               _wyn:=0
            ?}
         ?}
      || FUN.emsg('Brak przypisanego limitu do pozycji dokumentu.'@);
         _wyn:=0
      ?}
   ?}
|| FUN.info('Niewypełnione pole.'@); _wyn:=0
?};
exec('ost_cena','ceny_dok',DK.M,DK.N().KH);
{? _wyn || exec('juz_jest','material','M',DK.N,DK.M,{? HELP.POP || DK.ref() || null ?}) ?};
{? _wyn & DK.PLUS='T' & (DK.SV=null() | _old_ind<>D_HELP.M)
||
   _sv:=DK.SV;
   exec('dk_sv','magdok_poz');
   {? _sv<>DK.SV || exec('obl_mwb','magdok_poz') ?}
?};
:: usunięcie wskazania na cechę po zmianie indeksu na bez wzorca
{? HELP.MOD_IND<>DK.M & DK.M().M_ATR=null() & DK.DK_C<>null()
 & (HELP.MOD_IND().M_ATR<>null() | FUN.ask('Zmieniono Indeks.\nCzy usunąć cechę dostawy?'@))
|| DK.DK_C:=null()
?};
:: ustawienie slownika okienka cech
{? DK.M().M_ATR<>null & #DK.M().M_ATR<>#DK.DK_C().M_ATR & HELP.MOD_IND<>DK.M
|| {! _i..10 |! ($('ATR.WAR'+form(_i,-2,0,'99')))():='' !};
   DK.DK_C:=null
?};
exec('set_efld_btn','magdok_poz');
{? HELP.MOD_IND<>DK.M | DK.DK_C<>null() || exec('dk_atr_dict','mat_atr') ?};
{? POMOC.MGR=null & _pomoc_mgr <> null
|| POMOC.MGR:=_pomoc_mgr
?};
{? _wyn & (1+ND.MAG().TYP)='D' & DK.PLUS='T' & (-menu_txt<>'popraw' | DK.STATS=null)
|| DK.STATS:=exec('FindInSet','#table','MX','M_MG',DK.M,ST.MAG,"MX.DEFSTATS",,,ST.MAG().DEFSTATS);
   _statsM:=exec('statsM','statexam',DK.M);
   {? _statsM<>null() || DK.STATS:=_statsM ?}
?};
{? DK.SCEAN<>'' & exec('FindInSet','#table','MKODK','KK',DK.SCEAN,DK.SCEAN,"MKODK.M",,,null())<>DK.M
|| {? DK.N().TYP().P='T' & exec('FindInSet','#table','MKODK','KK',DK.SCEAN,DK.SCEAN,"MKODK.IDMOB",,,'')='D'
   || exec('mkodkadd','kody_kresk',null,DK.SCEAN,'',1)
   ?};
   _mob:=exec('czyurmob','magdok_wspolne',1);
   {? DK.PLUS='T' & ~_mob & ~((';PZ'*DK.M().IDMOB)>1) || DK.SCEAN:='' ?}
?};
ATR.M_ATR:=DK.M().M_ATR;
ATR.FLAG_ED:=ND.TYP().KOOP='N' & ATR.CZY_ATR & (1+ND.MAG().TYP)='D'
           & ATR.M_ATR().EDIT & (DK.PLUS='T' | DK.M().RODZ='U');
ATR.FLAG:={? _wyn & ATR.FLAG_ED & DK.M().M_ATR<>null() || 2 || 0 ?};
{? ATR.FLAG_ED || {? DK.M().M_ATR || ATR.FLAG_ED:=2 ?} ?};
exec('set_efld_opt','mat_atr',ATR.MJS);
{? DK.DK_C<>null() || DK.DK_C().M_ATR().SYM || DK.M().M_ATR().SYM ?};
{? ND.TYP().UPRW='T' & ~HELP.POP || POMOC.MGR:=null() ?};
{? DK.DK_C=null()& DK.M().M_ATR<>null() || DK_C.blank(); DK_C.M_ATR:=DK.M().M_ATR ?};
{? _wyn || exec('set_efld_dk_tw','magdok_poz') ?};
{? _wyn & DK.IL=0 || BEER.ORD:=exec('ordIL','jm',DK.M,DK.PLUS='T') ?};
{? _wyn & DK.PLUS='T' & EANX.TW=date(0,0,0) & DK.M().TWD>0
|| EANX.TW:=DK.N().D+DK.M().TWD;
   {? DK.M().SETW='P' || DK.TW:=EANX.TW ?}
?};
{? _wyn
|| {? DK.M<>HELP.MOD_IND
   || DK.KK:=exec('m_kk','material',DK.M);
      Plugin.run('POZLOG_M_001','DK')
   ?}
?};
{? _wyn & DK.ROZPAK & DK.DOST=date(0,0,0) & DK.M().RODZ='T'
|| _wyn:=exec('po_eanxpalr','magdok_palety',1);
   {? ~_wyn || FUN.info('Brak podanego indeksu materiałowego: %1,\nna palecie: %2.'@[DK.M().KTM,EANX.PALR().KODK]) ?}
?};
_wyn


\dk_exit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [GZ] [2011]
:: OPIS: po wybraniu surowca dla dokumentu rozchodowego wewnetrznego powiazanego ze zleceniem
::       W kontekscie okno grupowe tabel __tab, __ZAMEL i SM
::  OLD: \dk_exit/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
M.clear();
M.f_clear();
{? cur_tab(1,0)=__tab
|| {? M.seek(__tab.REF)
   || VAR.A_T:=M.ref()
   || sel_exit();
      M.cntx_pop();
      return()
   ?}
|? cur_tab(1,0)=__ZAMEL
|| {? __ZAMEL.SD<=0
   || FUN.emsg('Materiał nie jest dostępny na magazynie.'@);
      M.cntx_pop();
      return()
   ?};
   {? M.seek(__ZAMEL.T)
   || {? ~exec('chk_tab','zl_limit',M.ref(),__tab.ZGP_REF)
      || FUN.emsg('Istnieje już limit na ten surowiec dla przewodnika %1 poz. %2.'@[__tab.PRZEW,$__tab.NRP]);
         M.cntx_pop();
         return()
      ?};
      VAR.A_T:=M.ref()
   || sel_exit();
      M.cntx_pop();
      return()
   ?}
|? cur_tab(1,0)=SM
|| {? SM.SD<=0
   || FUN.emsg('Materiał nie jest dostępny na magazynie.'@);
      M.cntx_pop();
      return()
   |? ~exec('chk_tab','zl_limit',M.ref(),__tab.ZGP_REF)
   || FUN.emsg('Istnieje już limit na ten surowiec dla przewodnika %1 poz. %2.'@[__tab.PRZEW,$__tab.NRP]);
      M.cntx_pop();
      return()
   || VAR.A_T:=SM.M
   ?}
?};
{? M.seek(VAR.A_T)
|| D_HELP.M:=M.KTM;
   DK.M:=M.ref();
   DK.JM:=M.J;
   POMOC.MGR:=M.MGR;
   {? cur_tab(1,0)=__tab
   || DK.ZLIM:=exec('FindAndGet','#table',ZLIM,__tab.ZLIM,,,null());
      DK.M_ZLIM:=ref_name(DK.ZLIM);
      DK.IL:=exec('dk_il_suggest','zl_limit',DK.ZLIM,DK.ZL)
   |? cur_tab(1,0)=__ZAMEL
   || exec('make_chng','zl_limit');
      exec('fill_chng','zl_limit',__tab.ref(),1,__ZAMEL.ref(),(__tab.LIL-__tab.POB)/__tab.LIL);
      {? exec('sel_chng','zl_limit')
      || DK.ZLIM:=exec('do_kor_ref','zl_limit',exec('FindAndGet','#table',ZLIM,__chngref,ZLIM.name(),"ref()",null()));
         DK.M_ZLIM:=ref_name(DK.ZLIM);
         DK.IL:=exec('dk_il_suggest','zl_limit',DK.ZLIM,DK.ZL,__chngtab.ILPO)
      || VAR.A_T:=null();
         DK.M:=null()
      ?};
      exec('del_chng','zl_limit')
   |? cur_tab(1,0)=SM
   || _scrtmg:=SCRP.TMG;
      SCRP.TMG:=1;
      {? SCRP.TMG
      || POMOC.MGR:=SM.M().MGR; D_HELP.M:=SM.M().KTM;_wyn:=SM.M().KTM
      || _wyn:=D_HELP.M
      ?};
      exec('make_chng','zl_limit');
      exec('fill_chng','zl_limit',__tab.ref(),0,M.ref(),1);
      {? exec('sel_chng','zl_limit')
      || DK.IL:=__chngtab.ILPO
      || VAR.A_T:=null();
         DK.M:=null();
         DK.JM:=null();
         D_HELP.M:='';
         POMOC.MGR:=null()
      ?};
      exec('del_chng','zl_limit');
      SCRP.TMG:=_scrtmg
   ?};
   _wyn:=M.KTM
?};
M.cntx_pop();
sel_exit()


\spr_mat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: Sprawdza poprawosc wypelnienia materialu na pozycjach dokumentow.
::  OLD: \spr_mat/polap.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
_mat:=null;_gru:=null;_jm:=null; _inw:=0;
_inw:=exec('open_inw','magdok_wspolne',ND.MAG,M.ref,ND.TYP().P='T');
{? _inw>0
|| _gru:=M.MGR;_grun:=M.MGR().KOD;_ok:=1;
   {? POMOC.MGR <> _gru & _gru <> null & POMOC.MGR <> null
   || {? FUN.ask({? POMOC.RODZ='U'
                 || 'Wybrany indeks %1 jest w grupie materiałowej: %2.\nZmienić grupę usługową?'@[M.KTM,_grun]
                 || 'Wybrany indeks %1 jest w grupie materiałowej: %2.\nZmienić grupę materiałową?'@[M.KTM,_grun] ?})
      || POMOC.MGR:=_gru
      || _ok:=0
      ?}
   || POMOC.MGR:=M.MGR
   ?};
   _ok:=exec('mx_add','magdok_wspolne')
|| DK.M:=null();
   fld():='';
   POMOC.MGR:=null
?};
_ok


\pweanlok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed wyswietleniem pola EANX.LOK
::  OLD: \pweanlok/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK_L.LOK<>null
|| EANX.LOK:=DK_L.LOK().KOD
|| EANX.LOK:=''
?}


\preanlok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed redakcja EANX.LOK
::  OLD: \preanlok/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
DK.N().MAG().SL='T'


\poeanlok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: po redakcji EANX.LOK
::   WY: 1/0
::  OLD: \poeanlok/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANX.LOK=''
|| 1
|| _allL:=(ND.TYP().P='T' & ND.MAG().P_ALL) | (ND.TYP().P='N' & ND.MAG().W_ALL);
   _lok:={? ~_allL & exec('FindInSet','#table','EANL','KOD',EANX.LOK,EANX.LOK,"EANL.DOK",,,'')='T'
         || exec('FindInSet','#table','EANL','KOD',EANX.LOK,EANX.LOK,"EANL.KOD",,,'')
         || ''
         ?};
   {? _lok=''
   || EANL.cntx_psh();
      {? _allL
      || EANL.index('MGBLOK');
         EANL.prefix('T',DK.N().MAG,'N',EANX.LOK)
      || EANL.index('MGDOK');
         EANL.prefix('T',DK.N().MAG,'T','N',EANX.LOK)
      ?};
      {? EANL.first() || _lok:=EANL.KOD ?};
      EANL.cntx_pop;
      {? _lok<>'' || EANX.LOK:=_lok ?}
   ?};
   {? _lok<>'' & exec('FindInSet','#table','EANL','KOD',_lok,_lok,"EANL.AKT",,,'')<>'T'
   || FUN.info('Podana lokalizacja nie jest aktywna.'@);
      0
   || {? _lok<>'' || _mg:=exec('FindInSet','#table','EANL','KOD',EANX.LOK,EANX.LOK,"EANL.MG",,,null()) || _mg:=null ?};
      {? _mg=DK.N().MAG
      || DK_L.LOK:=exec('FindInSet','#table','EANL','KOD',EANX.LOK,EANX.LOK);
         1
      |? _mg=null
       & {? DK.N().MAG().MWS<>'T'
         || FUN.ask('Brak podanej lokalizacji w magazynie.\nCzy dodać ją do słownika?'@)
         |? ~_allL
         || FUN.info('Brak podanej lokalizacji (Doku załadunkowego/wyładunkowego) w magazynie.'@);
            0
         |? _allL
         || FUN.info('Brak podanej lokalizacji w magazynie.'@);
            0
         ?}
      || EANL.clear();
         EANL.blank();
         EANL.MG:=DK.N().MAG;
         EANL.KOD:=EANX.LOK;
         {? EANL.add()
         || DK_L.LOK:=exec('FindInSet','#table','EANL','KOD',EANX.LOK,EANX.LOK);
            1
         || 0
         ?}
      || 0
      ?}
   ?}
?}


\f3eanlok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: klawisz F3 dla pola EANX.LOK
::  OLD: \f3eanlok/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__znwyb');
_allL:=(ND.TYP().P='T' & ND.MAG().P_ALL) | (ND.TYP().P='N' & ND.MAG().W_ALL);
{? ND.TYP().P='T' | (ND.MAG().MWS='T' & ~_allL) | ND.MAG().PAL='T'
|| __znwyb:='C';
   {? _allL
   || EANL.index('MGBLOK');
      EANL.prefix('T',ND.MAG,'N')
   || EANL.index('MGDOK');
      EANL.prefix('T',ND.MAG,'T','N')
   ?};
   EANL.win_sel('SLO');
   _act:=EANL.actions('SLO',{? ND.MAG().MWS='T' || 'dupG:d' || 'G' ?});
   EANL.find_key(EANX.LOK);
   {? EANL.select(,1)
   || {? __znwyb='C'
      || DK_L.LOK:=EANL.ref();
         EANX.LOK:=EANL.KOD
      ?}
   ?};
   EANL.actions('SLO',_act)
|| _ctrlil:=exec('get','#params',600200,2)='T';
   __znwyb:='D';
   {? _allL
   || SL.index('MGBLOK');
      SL.prefix(ND.MAG,DK.M,'N')
   || SL.index('MGDOK');
      SL.prefix(ND.MAG,DK.M,'T','N')
   ?};
   SL.win_sel('SLO');
   _act:=SL.actions('SLO',{? _ctrlil || 'P' || '' ?});
   _eanl:=exec('FindInSet','#table','EANL','KOD',EANX.LOK,EANX.LOK);
   {? _eanl=null || _eanl:=exec('FindInSet','#table','EANL','KOD',EANX.LOK) ?};
   SL.find_key(_eanl);
   {? SL.select(,1)
   || {? __znwyb='D'
      || DK_L.LOK:=SL.EANL;
         EANX.LOK:=SL.EANL().KOD;
         DK_L.TW:=SL.TW
      ?}
   ?};
   SL.actions('SLO',_act)
?};
VAR_DEL.delete('__znwyb');
~~


\pwealokp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Przed wyswietleniem pola EANX.LOKP
::   WE: [_a] - czy display
::  OLD: \pwealokp/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

{? ND.MAG().SL<>'T' | (ND.TYP().DK='W' & ND.TYP().P='N') | (ND.INN='T' & ND.TYP().INW<>'N') | DK.ZP
|| exec('findfnv','#color')
|? _a | (1+menu_txt())='P' | BEER.DISP=1
|| _eanl:=exec('zwrdkltw','magdok_wspolne',1);
   _zm:=0;
   {? type_of(_eanl)=1 || {? _a || _eanl:=null || _zm:=1; _eanl:=ND.MAG().EANL ?} ?};
   {? _zm
   || EANX.EANL:=null; EANX.LOKP:='';
      1
   |? _eanl<>null
   || EANX.EANL:=_eanl;
      EANX.LOKP:=EANX.EANL().KOD;
      1
   || {? _a || EANX.EANL:=null; EANX.LOKP:='' || exec('findfnv','#color') ?}
   ?}
|| 1
?}


\prealokp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed redakcja pola EANX.LOKP
::   WY: 1/0
::  OLD: \prealokp/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.M().RODZ='U' | (DK.ROZPAK & EANX.PALR<>null())
|| 0
|? ND.MAG().SL<>'T' | (ND.INN='T' & ND.TYP().INW<>'N') | BEER.REORG
 | ((ND.MAG().PAL='T' & ~exec('isB_ROZP','magdok_palety','EANL'))
   & exec('FindInSet','#table','DK_L','DK',DK.ref())<>null)
 | (DK.PLUS='N' & DK.DOST=date(0,0,0) & DK.M().SETW='P' & (';FL'*DK.N().TYP().AFIFO)>1)
|| 0
|? (1+menu_txt())='P'
|| _eanl:=exec('zwrdkltw','magdok_wspolne',1);
   {? type_of(_eanl)=1 || _eanl:=ND.MAG().EANL ?};
   _eanl<>null
|| 1
?}


\f3ealokp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: klawisz F3 dla wyboru lokalizacji
::   WY: wybrana wartosc
::  OLD: \f3ealokp/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__znwyb');
_nawig:=BEER.NAWIG;
BEER.NAWIG:='M';
_allL:=(ND.TYP().P='T' & ND.MAG().P_ALL) | (ND.TYP().P='N' & ND.MAG().W_ALL);
{? ND.TYP().P='T' | (ND.MAG().MWS='T' & ~_allL)
|| __znwyb:='A';
   EANL.win_edit('RED'+{? ND.MAG().MWS='T' || 'MWS' || '' ?});
   EANL.win_patt('RED');
   {? _allL
   || EANL.index('MGBLOK');
      EANL.prefix('T',ND.MAG,'N')
   || EANL.index('MGDOK');
      EANL.prefix('T',ND.MAG,'T','N')
   ?};
   EANL.win_sel('SLO');
   _act:=EANL.actions('SLO',{? ND.MAG().MWS='T' || 'dupG:d' || 'G' ?});
   EANL.find_key(EANX.LOKP);
   {? EANL.select(,1)
   || {? __znwyb='A'
      || EANX.EANL:=EANL.ref();
         EANX.LOKP:=EANX.EANL().KOD
      ?}
   ?};
   EANL.actions('SLO',_act)
|| _ctrlil:=exec('get','#params',600200,2)='T';
   _wybrano:=0;
   {? DK.M().SETW='P' & DK.SRDK<>''
   || VAR_DEL.delete('__aktdkl');
      __aktdkl:=exec('aktSLwgTW','magdok_wymiary',ST.MAG,DK.M,DK.SRDK,DK.IL,DK.TW,'');
      _sel_wyn:=__aktdkl.mk_sel('Stan wg wymiarów dla dostawy z dnia %1'@[$DK.DOST],'P',,'wyb_lokdk');

      __aktdkl.win_fld(_sel_wyn,,'KODEANL',,,30,,1,'Lokalizacja'@);
      __aktdkl.win_fld(_sel_wyn,,'TW',,,10,,1,'Termin'@);
      __aktdkl.win_fld(_sel_wyn,,'ILE',,,15,DK.M().DOKL,1,'Ilość'@);
      __aktdkl.win_fld(_sel_wyn,,'JM',,,10,,1,'jm'@);
      __aktdkl.win_act(_sel_wyn,0,'Formuła','Wybierz'@@,,'Wybranie lokalizacji'@,,"sel_exit()",1);
      __aktdkl.win_act(_sel_wyn,0,'Szukaj');
      __aktdkl.win_act(_sel_wyn,0,'Kolejność');
      __aktdkl.win_sel(_sel_wyn);
      {? (__aktdkl.clear();__aktdkl.first()) & __aktdkl.select()
      || EANX.LOKP:=__aktdkl.KODEANL;
         {? DK.IL>__aktdkl.ILE
          & FUN.ask('Aktualnie z danej lokalizacji można wydać: %1'
                    '.\nCzy zmienić ilość na pozycji dokumentu?'@[form(__aktdkl.ILE,DK.M().DOKL)])
         || DK.IL:=__aktdkl.ILE;
            exec('po_il','magdok_poz');
            _eanl:=exec('FindInSet','#table','EANL','KOD',EANX.LOKP,EANX.LOKP);
            DK_L.cntx_psh();
            DK_L.index('DK');
            DK_L.prefix(DK.ref(),null(),_eanl);
            {? DK_L.first() & DK_L.IL>__aktdkl.ILE
            || DK_L.IL:=__aktdkl.ILE;
               DK_L.put(1)
            ?};
            DK_L.cntx_pop()
         ?};
         EANX.LOKP:=__aktdkl.KODEANL
      ?};
      VAR_DEL.delete('__aktdkl');
      _wybrano:=1
   ?};
   {? ~_wybrano
   || __znwyb:='B';
      {? _allL
      || SL.index('MGBLOK');
         SL.prefix(ND.MAG,DK.M,'N')
      || SL.index('MGDOK');
         SL.prefix(ND.MAG,DK.M,'T','N')
      ?};
      SL.win_sel('SLO');
      _act:=SL.actions('SLO',{? _ctrlil || 'P' || '' ?});
      _eanl:=exec('FindInSet','#table','EANL','KOD',EANX.LOKP,EANX.LOKP);
      {? _eanl=null || _eanl:=exec('FindInSet','#table','EANL','KOD',EANX.LOKP) ?};
      SL.find_key(_eanl);
      {? SL.select(,1)
      || {? __znwyb='B'
         || EANX.EANL:=SL.EANL;
            EANX.LOKP:=EANX.EANL().KOD;
            EANX.PALK:={? SL.PAL<>null() || SL.PAL().KODK || '' ?};
            EANX.TPAL:={? SL.PAL<>null() || SL.PAL().TPAL().TYP || '' ?};
            EANX.TW:=SL.TW
         ?}
      ?};
      SL.actions('SLO',_act)
   ?}
?};
VAR_DEL.delete('__znwyb');
BEER.NAWIG:=_nawig;
_wyn:=EANX.LOKP;
_wyn


\poealokp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: po redakcji pola EANX.LOKP
::  OLD: \poealokp/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? form(EANX.LOKP)<>''
|| _allL:=(ND.TYP().P='T' & ND.MAG().P_ALL) | (ND.TYP().P='N' & ND.MAG().W_ALL);
   _lokp:={? ~_allL & exec('FindInSet','#table','EANL','KOD',EANX.LOKP,EANX.LOKP,"EANL.DOK",,,'')='T'
          || exec('FindInSet','#table','EANL','KOD',EANX.LOKP,EANX.LOKP,"EANL.KOD",,,'')
          || ''
          ?};
   {? _lokp=''
   || EANL.cntx_psh();
      {? _allL
      || EANL.index('MGBLOK');
         EANL.prefix('T',ND.MAG,'N',EANX.LOKP)
      || EANL.index('MGDOK');
         EANL.prefix('T',ND.MAG,'T','N',EANX.LOKP)
      ?};
      {? EANL.first() || _lokp:=EANL.KOD ?};
      EANL.cntx_pop
   ?};
   {? _lokp<>'' & exec('FindInSet','#table','EANL','KOD',_lokp,_lokp,"EANL.MG",,,null())=ND.MAG
   || EANX.LOKP:=_lokp;
      EANX.EANL:=exec('FindInSet','#table','EANL','KOD',EANX.LOKP,EANX.LOKP);
      {? (1+menu_txt())='P'
      || {? EANX.LOKP='' || EANX.LOKP:=ND.MAG().EANL().KOD ?};
         EANX.EANL:=exec('FindInSet','#table','EANL','KOD',EANX.LOKP,EANX.LOKP);
         {? EANX.EANL=null || EANX.EANL:=exec('FindInSet','#table','EANL','KOD',EANX.LOKP) ?};
         _eanl:=exec('zwrdkltw','magdok_wspolne',1);
         _ild:=DK.IL;
         _ill:=exec('FindInSet','#table','DK_L','DK',null(),DK.ref(),"@.DK_L.IL",0);
         _zmi:=_ild>_ill & _eanl=EANX.EANL;
         _zm:=0;
         {? type_of(_eanl)=1 || _zm:=1; _eanl:=ND.MAG().EANL ?};
         {? (_zm | _zmi | _eanl<>EANX.EANL) & EANX.EANL<>null
         || {? {? _zm | _zmi || 1 || FUN.ask('Czy zmienić lokalizację na Pozycjach wg wymiarów?'@) ?}
            || _zmtw:=DK.M().SETW='P' & DK.PLUS='N' & DK.DOST=date(0,0,0);
               DK_L.cntx_psh();
               DK_L.index('DK');
               DK_L.prefix(DK.ref(),null);
               {? DK_L.first()
               || {!
                  |? _ref:=DK_L.ref(); _ok:=DK_L.next();
                     DK_L.cntx_psh();
                     DK_L.clear();
                     {? DK_L.seek(_ref)
                     || DK_L.LOK:=EANX.EANL;
                        {? _zmtw || DK_L.TW:=EANX.TW ?};
                        {? DK_L.IL>_ild || DK_L.IL:=_ild ?};
                        DK_L.put(1)
                     ?};
                     DK_L.cntx_pop();
                     _ok
                  !}
               || _pal:=null;
                  exec('add2dk_l','magdok_wspolne',DK.ref(),null,EANX.EANL,null,EANX.TW,date(0,0,0)
                   ,DK.IL,ND.MAG,DK.M,,,_pal)
               ?};
               DK_L.cntx_pop();
               _wyn:=1
            || _wyn:=0
            ?}
         || _wyn:=1
         ?}
      || _wyn:=1
      ?}
   || _noadd:=0;
      {? ~exec('unik_ean','kody_kresk','K',EANX.LOKP,null) | ~exec('unik_ean','kody_kresk','R',EANX.LOKP,null)
      || _noadd:=1;
         _symmag:=exec('FindInSet','#table','EANL','KOD',EANX.LOKP,EANX.LOKP,"EANL.MG().SYM",,,'');
         {? _symmag<>''
         || FUN.info('Podany kod kreskowy został przypisany do innej lokalizacji.\n'
                     'Magazyn: %1.\n'@[_symmag]+
                     'Należy podać inny kod lokalizacji.'@)
         || FUN.info('Podany kod kreskowy wykorzystano w systemie.\n'@+
                     'Należy podać inny kod lokalizacji.'@)
         ?}
      ?};

      {? ~_noadd
       & {? ND.MAG().MWS<>'T'
         || FUN.ask('Brak podanej lokalizacji w magazynie.\nCzy dodać ją do słownika?'@)
         || FUN.info('Brak podanej lokalizacji (Doku załadunkowego/wyładunkowego) w magazynie.'@);
            0
         ?}
      || EANL.clear();
         EANL.blank();
         EANL.MG:=DK.N().MAG;
         EANL.KOD:=EANX.LOKP;
         {? EANL.add()
         || EANX.EANL:=EANL.ref();
           EANX.LOKP:=EANL.KOD;
            {? (1+menu_txt())='P'
            || {? EANX.LOKP='' || EANX.LOKP:=ND.MAG().EANL().KOD ?};
               EANX.EANL:=exec('FindInSet','#table','EANL','KOD',EANX.LOKP,EANX.LOKP);
               {? EANX.EANL=null || EANX.EANL:=exec('FindInSet','#table','EANL','KOD',EANX.LOKP) ?};
               _eanl:=exec('zwrdkltw','magdok_wspolne',1);
               _zm:=0;
               {? type_of(_eanl)=1 || _zm:=1; _eanl:=ND.MAG().EANL ?};
               {? (_zm | _eanl<>EANX.EANL) & EANX.EANL<>null
               || {? FUN.ask('Czy zmienić lokalizację na Pozycjach wg wymiarów?'@)
                  || DK_L.cntx_psh();
                     DK_L.index('DK');
                     DK_L.prefix(DK.ref(),null);
                     {? DK_L.first()
                     || {!
                        |? _ref:=DK_L.ref(); _ok:=DK_L.next();
                           DK_L.cntx_psh();
                           DK_L.clear();
                           {? DK_L.seek(_ref)
                           || DK_L.LOK:=EANX.EANL;
                              DK_L.put(1)
                           ?};
                           DK_L.cntx_pop();
                           _ok
                        !}
                     || _pal:=null;
                        exec('add2dk_l','magdok_wspolne',DK.ref(),null,EANX.EANL,null,EANX.TW,date(0,0,0)
                         ,DK.IL,ND.MAG,DK.M,,,_pal)
                     ?};
                     DK_L.cntx_pop();
                     _wyn:=1
                  || _wyn:=0
                  ?}
               || _wyn:=1
               ?}
            ?};
            _wyn:=1
         || EANX.EANL:=null;
            _wyn:=0
         ?}
      || EANX.EANL:=null;
         _wyn:=0
      ?}
   ?}
|| {? (1+menu_txt())='P'
   || EANX.EANL:=ND.MAG().EANL;
      EANX.LOKP:=EANX.EANL().KOD;
      {? exec('FindInSet','#table','DK_L','DK',null,DK.ref())<>null
       & FUN.ask('Czy zmienić lokalizację na Pozycjach wg wymiarów?'@)
      || _zmtw:=DK.M().SETW='P' & DK.PLUS='N' & DK.DOST=date(0,0,0);
         DK_L.cntx_psh();
         DK_L.index('DK');
         DK_L.prefix(DK.ref(),null);
         {? DK_L.first()
         || {!
            |? {? DK_L.TW=date(0,0,0)
               || DK_L.del()
               || DK_L.LOK:=EANX.EANL;
                  {? _zmtw || DK_L.TW:=EANX.TW ?};
                  DK_L.put(1);
                  DK_L.next()
               ?}
            !}
         ?};
         DK_L.cntx_pop();
         _wyn:=1
      || _wyn:=1
      ?}
   || _wyn:=1
   ?}
?};
_wyn


\pwxtw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed wyswietleniem pola EANX.TW
::   WE: [_a] - czy display
::  OLD: \pwxtw/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? ND.MAG().PAL<>'T' & DK.M().SETW='P' | DK.TW<>date(0,0,0)
|| {? DK.PLUS='T' | DK.DOST<>date(0,0,0) || EANX.TW:=DK.TW ?};
   1
|? ND.MAG().SL<>'T' | (ND.TYP().DK='W' & ND.TYP().P='N') | (ND.INN='T' & ND.TYP().INW<>'N') | DK.ZP
|| exec('findfnv','#color')
|? _a | (1+menu_txt())='P' | BEER.DISP=1
|| _tw:=exec('zwrdkltw','magdok_wspolne',2);
   {? type_of(_tw)=1 || _tw:={? DK.PLUS='T' & DK.M().TWD>0 || ND.D+DK.M().TWD || date(0,0,0) ?} ?};
   {? _tw<>date(1,1,1)
   || EANX.TW:=_tw;
      1
   || exec('findfnv','#color')
   ?}
|| 1
?}


\prxtw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed redakcja pola EANX.TW
::  OLD: \prxtw/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.M().RODZ='U'
|| 0
|? ND.MAG().PAL<>'T' & ND.TYP().P='T' & DK.M().SETW='P'
 & (DK.N().TYP().DN='N' | (DK.N().TYP().DN='T' & exec('ctrlSETW','magdok_wspolne',DK.M,DK.SRDK)))
|| 1
|? ND.MAG().SL<>'T' | (ND.INN='T' & ND.TYP().INW<>'N') | BEER.REORG
 | ((ND.MAG().PAL='T' & ~exec('isB_ROZP','magdok_palety','TW')) & exec('FindInSet','#table','DK_L','DK',DK.ref())<>null)
 | (ND.MAG().PAL<>'T' & ND.TYP().P='N' & DK.M().SETW='P' & DK.PRDK<>'')
 | (DK.PLUS='N' & DK.DOST=date(0,0,0) & DK.M().SETW='P' & (';FL'*DK.N().TYP().AFIFO)>1)
|| 0
|? (1+menu_txt())='P' | (DK.DOST<>date(0,0,0) & ND.TYP().P='T' & DK.M().SETW='P' & DK.N().TYP().DN<>'N')
|| _tw:=exec('zwrdkltw','magdok_wspolne',2);
   {? type_of(_tw)=1 || _tw:=date(0,0,0) ?};
   {? ND.TYP().P='T' & DK.M().SETW='P' & DK.N().TYP().DN<>'N' || 0 || _tw<>date(1,1,1) ?}
|| 1
?}


\poxtw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: po redakcji pola EANX.TW
::  OLD: \poxtw/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.M().SETW='P' & ND.MAG().PAL<>'T' || DK.TW:=EANX.TW ?};

{? (1+menu_txt())='P' & DK.N().MAG().SL='T'
|| _tw:=exec('zwrdkltw','magdok_wspolne',2);
   {? type_of(_tw)=1 || _tw:=date(0,0,0) ?};
   {? _tw<>EANX.TW
   || {? DK.M().SETW='P' | FUN.ask('Czy zmienić termin ważności na Pozycjach wg wymiarów?'@)
      || DK_L.cntx_psh();
         DK_L.index('DK');
         DK_L.prefix(DK.ref(),null);
         {? DK_L.first()
         || {!
            |? _ref:=DK_L.ref(); _ok:=DK_L.next();
               DK_L.cntx_psh();
               DK_L.clear();
               {? DK_L.seek(_ref)
               || DK_L.TW:=EANX.TW;
                  DK_L.put(1)
               ?};
               DK_L.cntx_pop();
               _ok
            !}
         || _lok:={? EANX.EANL=null || DK.N().MAG().EANL || EANX.EANL ?};
            exec('add2dk_l','magdok_wspolne',DK.ref(),null,_lok,null,EANX.TW,date(0,0,0),DK.IL,ND.MAG,DK.M)
         ?};
         DK_L.cntx_pop();
         1
      || 0
      ?}
   || 1
   ?}
|| 1
?}


\disp_dkm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: display dla pozycji magazynowej
::  OLD: \disp_dkm/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
DK.cntx_psh();
ATR.ZPARN_DK:=DK.PARTIA;
ATR.ZPARN_RW:=DK.PARTIA;
ATR.ZPAR_ZGH:=
   {? DK.ZLIM<>null()
   || exec('openmask','zl_common',DK.ZL,DK.GROP);
      DK.ZLIM().ZGP().NRPRZ
   || null()
   ?};
ZLEC.DK_ZLSYM:='';
ZLEC.DK_ZGOPI:='';
ZLEC.DK_ZGSYM:='';
{? DK.N().TYP().KOOP='T'
|| ZLEC.DK_ZLSYM:=DK.ZL().SYM;
   ZLEC.DK_ZGOPI:=DK.ZGP().OPIS;
   {? DK.ZGP<>null()
   || ZLEC.DK_ZGSYM:=DK.ZGP().NRZLP().NRPRZ+' poz. '+$ZGP.NRP
   ?}
?};
exec('pwealokp','magdok_poz',1);
exec('pwxtw','magdok_poz',1);
_pomoc_mgr:=POMOC.MGR;
_d_help_m:=D_HELP.M;
_sum_wb:=SUM.MWB;
POMOC.MGR:=DK.M().MGR;
D_HELP.M:=DK.M().KTM;
SUM.MWB:=DK.WAR*(1+(#((DK.SV().KOD*'%')+DK.SV().KOD-1))/100);
{? (2+BEER.MENU_PTH)<>'MR' || exec('dkr_okna','magdok_poz',,0) ?};
BEER.DISP:={? DISP.WAR_SP='T' || 0 || 1 ?};
exec('ustawprz','magdok_poz');
_edit:=DK.win_edit('?');
_sel:=DK.win_sel('?');
_atrmjs:=ATR.MJS;
ATR.MJS:='DK';
{? (1+DK.N().MAG().TYP)='D' || exec('czytadkc','mat_atr',DK.DK_C,DK.RDKC) ?};
exec('ost_cena','ceny_dok',DK.M,DK.N().KH);

_win_akr:=exec('dk_win_edit','magdok_poz');

{? (1+_win_akr)='P' & DK.N().TYP().DK<>'T'
:: Tymczasowe okno redakcji
|| _title:='Dane pozycji dokumentu';
   _win_red:=DK.mk_edit(_title,,,,,'html_maximized');
   DK.win_etab(_win_red,'Dane podstawowe'@);
   DK.win_ewin(_win_red,,_win_akr);
   {? (_win_akr+1)<>'S'
   || DK.win_etab(_win_red,'Dane do Intrastat'@);
      DK.win_ewin(_win_red,,'INTRA')
   ?}
:: Okno redkacji
|| _title:='Dane dokumentu';
   _win_red:=DK.mk_edit(_title,,,,,'html_maximized');
   DK.win_etab(_win_red,'Dane podstawowe'@);
   DK.win_ewin(_win_red,,_win_akr);
   {? ND.INTRAKC='T'
   || DK.win_etab(_win_red,'Dane do Intrastat'@);
      DK.win_ewin(_win_red,,'INTRA')
   ?}
?};
DK.win_edit(_win_red);
_beermw:=BEER.MW;
BEER.MW:='M';
exec('set_efld_opt','magdok_poz',_win_red);
exec('set_efld_dk_tw','magdok_poz',_win_red);
_ile:=DK.IL;
{? DISP.WAR_SP='T' || DK.IL:=exec('obl_wgzp','magdok_wspolne',DK.N,#DK.ref(),DK.IL) ?};

exec('dispWithFakso','fakso','DK');

DK.IL:=_ile;
DK.win_edit(_edit);
DK.win_sel(_sel);
BEER.MW:=_beermw;
BEER.DISP:=0;
SUM.MWB:=_sum_wb;
D_HELP.M:=_d_help_m;
POMOC.MGR:=_pomoc_mgr;
DK.cntx_pop();
ATR.MJS:=_atrmjs;
1


\spr_ndin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: sprawdza czy indeks materialowy z pozycji dokumentu magazynowego znajduje sie na inwenturze
:: (kontrolowana jest data inwentaryzacji i dokumentu)
::   WE: _a - ND.ref()
::       [_b] - 1-sprawdza przecenę 0-domyślnie inwenturę
::   WE: 1-nie ma pozycji na inwenturze, 0-jest pozycja
::  OLD: \spr_ndin/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_tryb:={? var_pres('_b')=type_of(0) || _b || 0 ?};

DK.cntx_psh(); INP.cntx_psh; INN.cntx_psh;
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first
|| _mag:=DK.N().MAG;
   _dat:=DK.N().D;
   _tim:=DK.N().T;
   _nag:=$DK.N;
   {? ~_tryb
   || {? (INN.name()+3)='wyc' || exec('inw_open','open_tab',1+(DK.name()+3),DK.name()+2) ?};
      INP.index('DAT')
   || INN.use('inw_nwyc');
      INP.use('inw_pwyc');
      INP.index('MG')
   ?};
   {!
   |? {? ~_tryb
      || INP.prefix(_mag,DK.M,date(0,0,0))
      || INP.prefix(_mag,DK.M)
      ?};
      {? INP.find_ge(_dat) & INP.IN().INP_R<>_nag & INN.INR_R<>_nag
      || {? INP.IN().DI>_dat | INP.IN().TI=time(0,0,0)
         || _wyn:=0
         || {? ~_tryb
            || INP.prefix(_mag,DK.M,date(0,0,0),_dat)
            || INP.prefix(_mag,DK.M,_dat)
            ?};
            {? INP.last() & INP.IN().TI>=_tim || _wyn:=0 ?}
         ?}
      ?};
      _wyn=1 & DK.next()
   !}
?};
DK.cntx_pop(); INP.cntx_pop; INN.cntx_pop;
_wyn


\ozpalakc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdzenie i ewentualne oznaczenie palet bez oznaczen
::   WE: _a - ref ND
::   WY: 1-nadano oznaczenia 0-nie
::  OLD: \ozpalakc/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_opc:=exec('get','#params',600500,2);
_wyn:={? _opc='N' || 0 || 1 ?};
_pal:=tab_tmp(1,'SQL','STRING[16]','');

:: pobieramy liste palet do oznaczen
DK.cntx_psh();
DK_L.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
|| {!
   |? DK_L.index('DK');
      DK_L.prefix(DK.ref(),null);
      {? DK_L.first()
      || {!
         |? {? (1+DK_L.PAL().BEZOZN)='T'
            || _pal.clear();
               {? ~_pal.find_key($DK_L.PAL)
               || _pal.blank();
                  _pal.SQL:=$DK_L.PAL;
                  {? ~_pal.add(1) || _wyn:=0 ?}
               ?}
            ?};
            {? (1+DK_L.PALDO().BEZOZN)='T'
            || _pal.clear();
               {? ~_pal.find_key($DK_L.PALDO)
               || _pal.blank();
                  _pal.SQL:=$DK_L.PALDO;
                  {? ~_pal.add(1) || _wyn:=0 ?}
               ?}
            ?};
            _wyn & DK_L.next()
         !}
      ?};
      _wyn & DK.next()
   !}
?};
_pal.clear();
{? _pal.first()
 & (_opc='T'
  | (_opc='P' & FUN.ask('Na dokumencie istnieją pozycje z paletami bez oznaczeń.\nCzy nadać oznaczenia palet?'@)))
|| {!
   |? _refp:=exec('FindAndGet','#table',PAL,_pal.SQL,,,null());
      {? _refp<>null || exec('ozn_pbez','magdok_palety',_refp) ?};
      _pal.next()
   !}
?};

DK.cntx_pop();
DK_L.cntx_pop();

_wyn


\sprndlok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: sprawdzenie wypelnienia dokumentu przychodowego pod katem wymiarow
::       uzupelnienie tabeli DK_L o lokalizacje domyslna
::       dla magazynu z zastosowanie palet kontrolowane jest ich wypelnienie
::       oraz czy wszystkie palety sa !!! oznaczone !!!
::   WE: [_a] - bez komentarzy 0, 1-domyslnie z komentarzami, -1-brak komentarza dla rozchodu
::       [_b] - czy pochodna MM-ki 0-domyślnie nie 1-tak
::   WY: '' - jest OK 'opis bledu' - jest zle
::  OLD: \sprndlok/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

_czykom:=_a<>0 & var_pres('__kom')>100;
_wyn:='';
_txt:='';
_noptw:=0;
DK.cntx_psh();
DK_L.cntx_psh();
PAL.cntx_psh();
:: sprawdzenie nie przekroczenia ilosci na pozycjach dokumentu
DK.index('DOKMAG');
DK.prefix(ND.ref());
{? DK.first()
|| _czypal:=DK.N().MAG().PAL='T';
   _tmg:=(1+DK.N().MAG().TYP);
   _ptwmob:=exec('stND2EANN','magazyn_mobi')='A';
   {? _czykom || exec('sprtwdkl','magdok_poz',ND.ref()) ?};
   {!
   |? _bezozn:=0;
      {? DK.PLUS='T' & DK.SCEAN='' & 'AZP'*DK.M().IDMOB & (1+DK.N().MAG().TYP)='D' & DK.N().MAG().SL='T' & ~_czypal
      || {? _b & DK.PRDK<>DK.SRDK || DK.SCEAN:=exec('FindAndGet','#table',DK,DK.PRDK,,"SCEAN",'') ?};
         _scean:=exec('newscean','magdok_poz',DK.M,DK.M().IDMOB,DK.DK_C,DK.DK_C().ZPARN,DK.ZL,DK.SCEAN);
::       dla przesunięcia o ile go nie ma generowany lub przypisywany jest domyślny kod dla starych dostaw
         {? _b & _scean=''
         || _scean:=exec('old_idmob','magdok_nag',DK.M().KTM,DK.M)
         ?};
         {? _scean<>''
         || DK.SCEAN:=_scean;
            {? DK.put(1)
            || {? _tmg='D'
               || exec('add_kom','#message','Przypisano kod kreskowy dla dostawy %1.'@[{? ~_b || DK.SCEAN || '' ?}],4)
               ?}
            || exec('add_kom','#message','Nie przypisano kodu kreskowego dla dostawy %1.'@[DK.M().KTM],2);
               undo()
            ?}
         || exec('add_kom','#message','Nie został wygenerowany kod kreskowy dla dostawy %1.'@[DK.M().KTM],2);
            undo()
         ?}
      ?};
      _czyscean:={? DK.M().RODZ='T' & ~_czypal & (1+DK.N().MAG().TYP)='D'
                  & ((';APZ'+{? DK.PLUS='N' || 'D' || '' ?})*DK.M().IDMOB)>1
                  & (DK.PLUS='T' | (DK.PLUS='N' & DK.DOST<>date(0,0,0)))
                 || DK.SCEAN<>''
                 || 1
                 ?};
      {?  ~_czyscean
      || _wyn:='x';
         _txt:='Poz.%1 materiał %2 wymaga przypisania kodu identyfikacyjnego.'@[$DK.P,DK.M().KTM];
         {? _czykom
         || {? +_txt>101
            || exec('add_kom','#message','Poz.%1 materiał %2'@[$DK.P,DK.M().KTM],2);
               exec('add_kom','#message','     wymaga przypisania kodu identyfiakcyjnego.'@,2)
            || exec('add_kom','#message',_txt,2)
            ?}
         ?}
      |? DK.M().RODZ='T'
      || {? _ptwmob & DK.IL<>DK.IL_PT || _noptw+=1 ?};
         _ile:=DK.IL;
         DK_L.index('DK');
         DK_L.prefix(DK.ref(),null);
         {? DK_L.first()
         || {!
            |? {? _czypal & ~_bezozn || _bezozn:=((1+DK_L.PAL().BEZOZN)='T')+((1+DK_L.PALDO().BEZOZN)='T') ?};
               _ile-=DK_L.IL;
               {? DK_L.DK().SCEAN<>'' || DK_L.SCEAN:=DK_L.DK().SCEAN; DK_L.put(1) ?};
               DK_L.next()
            !}
         ?};
         {? _bezozn
         || _wyn:='x';
            _txt:='Poz.%1 materiał %2 przypisano palety bez oznaczeń.'@[$DK.P,DK.M().KTM];
            {? _czykom
            || {? +_txt>101
               || exec('add_kom','#message','Poz.%1 materiał %2'@[$DK.P,DK.M().KTM],2);
                  exec('add_kom','#message','     przypisano palety bez oznaczeń.'@,2)
               || exec('add_kom','#message',_txt,2)
               ?}
            ?}
         ?};
         {? _ile<0
         || _wyn:='x';
            _txt:='Poz.%1 materiał %2 rozpisano zbyt dużą ilość wg wymiarów.'@[$DK.P,DK.M().KTM];
            {? _czykom
            || {? +_txt>101
               || exec('add_kom','#message','Poz.%1 materiał %2'@[$DK.P,DK.M().KTM],2);
                  exec('add_kom','#message','     rozpisano zbyt dużą ilość wg wymiarów.'@,2)
               || exec('add_kom','#message',_txt,2)
               ?}
            ?}
         ?}
      ?};
      DK.next()
   !}
?};
{? _wyn='' & (ND.INN='T' & ND.TYP().INW='E')
|| _wyn:=''
|? _wyn='' & (ND.TYP().P='T' | (ND.INN='T' & ND.TYP().INW='I'))
|| _allL:=ND.MAG().P_ALL & ~(ND.INN='T' & ND.TYP().INW='I');
   _dlakh:=DK.N().DLAKH;
   _dlref:={? _dlakh<>'' || exec('FindInSet','#table','KH','KOD',_dlakh,2) || null() ?};
   VAR_DEL.delete('__loki');
   __loki:=tab_tmp(1,'LOK','STRING[30]','','ILE','REAL','');
   DK.index('DOKMAG');
   DK.prefix(ND.ref());
   {? DK.first()
   || _spr_pal:=ND.MAG().PAL='T';
      {!
      |? {? DK.M().RODZ='T'
         || _spr_lok:=ND.MAG().SPR_EANL='T';
            _spr_tw:=DK.M().CZY_TW='T'
                  & {? DK.N().TYP().DN='N'
                    || 1
                    || DK.N().TYP().DN='T' & exec('ctrlSETW','magdok_wspolne',DK.M,DK.SRDK)
                    ?};
            {? ~(ND.INN='T' & ND.TYP().INW='I')
             & ({? _spr_tw || DK.M().SETW<>'P' | DK.TW=date(0,0,0) || 0 ?} | _spr_lok | _spr_pal)
            || _il_lok:=DK.IL;
               _il_tw:=DK.IL;
               _il_pal:=DK.IL;
               _brakwym:=0;
               DK_L.index('DK');
               DK_L.prefix(DK.ref(),null);
               {? DK_L.first()
               || {!
                  |? {? _spr_lok & DK_L.LOK=null
                     || _wyn:='Poz.%1 materiał %2'
                         ' wymagana jest lokalizacja (kontrola dla magazynu).'@[$DK.P,DK.M().KTM];
                        {? _czykom
                        || {? +_wyn>101
                           || exec('add_kom','#message','Poz.%1 materiał %2'@[$DK.P,DK.M().KTM],2);
                              exec('add_kom','#message','    wymagana jest lokalizacja (kontrola dla magazynu).'@,2)
                           || exec('add_kom','#message',_wyn,2)
                           ?}
                        ?};
                        _il_tw-=DK_L.IL;
                        _il_lok-=DK_L.IL;
                        _il_pal-=DK_L.IL
                     |? _spr_tw & DK_L.TW=date(0,0,0)
                     || _wyn:='Poz.%1 materiał %2'
                         ' wymagany jest termin ważności (kontrola dla materiału).'@[$DK.P,DK.M().KTM];
                        {? _czykom
                        || {? +_wyn>101
                           || exec('add_kom','#message','Poz.%1 materiał %2'@[$DK.P,DK.M().KTM],2);
                              exec('add_kom','#message','    wymagany jest termin ważności (kontrola dla materiału).'@,2)
                           || exec('add_kom','#message',_wyn,2)
                           ?}
                        ?};
                        _il_lok-=DK_L.IL;
                        _il_tw-=DK_L.IL;
                        _il_pal-=DK_L.IL
                     |? _spr_pal & DK_L.PAL=null
                     || _wyn:='Poz.%1 materiał %2'
                         ' wymagana jest paleta (kontrola dla magazynu).'@[$DK.P,DK.M().KTM];
                        {? _czykom
                        || {? +_wyn>101
                           || exec('add_kom','#message','Poz.%1 materiał %2'@[$DK.P,DK.M().KTM],2);
                              exec('add_kom','#message','    wymagana jest paleta (kontrola dla magazynu).'@,2)
                           || exec('add_kom','#message',_wyn,2)
                           ?}
                        ?};
                        _il_tw-=DK_L.IL;
                        _il_lok-=DK_L.IL;
                        _il_pal-=DK_L.IL
                     || _il_lok-=DK_L.IL;
                        _il_tw-=DK_L.IL;
                        _il_pal-=DK_L.IL
                     ?};
                     (_czykom | _wyn='') & DK_L.next()
                  !}
               || _brakwym:=1
               ?};
               {? _spr_lok & _il_lok<>0
               || _wyn:='x';
                  _txt:='Poz.%1 materiał %2'
                        ' wymagane rozpisanie całej ilości wg lokalizacji (kontrola dla magazynu).'@[$DK.P,DK.M().KTM];
                  {? _czykom
                  || {? +_txt>101
                     || exec('add_kom','#message','Poz.%1 materiał %2'@[$DK.P,DK.M().KTM],2);
                        exec('add_kom','#message','    wymagane rozpisanie całej ilości wg lokalizacji '
                                                  '(kontrola dla magazynu).'@,2)
                     || exec('add_kom','#message',_txt,2)
                     ?}
                  ?};
                  {? ~_brakwym || _brakwym:=1 ?}
               ?};
               {? _spr_tw & _il_tw<>0 & DK.M().SETW<>'P' & _brakwym
               || _wyn:='x';
                 _txt:='Poz.%1 materiał %2'
                   ' wymagane rozpisanie całej ilości wg terminu ważności (kontrola dla materiału).'@[$DK.P,DK.M().KTM];
                  {? _czykom
                  || {? +_txt>101
                     || exec('add_kom','#message','Poz.%1 materiał %2'@[$DK.P,DK.M().KTM],2);
                        exec('add_kom','#message','    wymagane rozpisanie całej ilości wg terminu ważności '
                         '(kontrola dla materiału).'@,2)
                     || exec('add_kom','#message',_txt,2)
                     ?}
                  ?};
                  {? ~_brakwym || _brakwym:=1 ?}
               ?};
               {? _spr_pal & _il_pal<>0 & _brakwym
               || _wyn:='x';
                  _txt:='Poz.%1 materiał %2'
                   ' wymagane rozpisanie całej ilości wg palet (kontrola dla magazynu).'@[$DK.P,DK.M().KTM];
                  {? _czykom
                  || {? +_txt>101
                     || exec('add_kom','#message','Poz.%1 materiał %2'@[$DK.P,DK.M().KTM],2);
                        exec('add_kom','#message','    wymagane rozpisanie całej ilości wg palet '
                         '(kontrola dla magazynu).'@,2)
                     || exec('add_kom','#message',_txt,2)
                     ?}
                  ?}
               ?}
            || _ile:=0;
               DK_L.index('DK');
               DK_L.prefix(DK.ref(),null);
               {? DK_L.first()
               || {!
                  |? _ile+=DK_L.IL;
                     {? DK_L.DK().SCEAN<>'' || DK_L.SCEAN:=DK_L.DK().SCEAN; DK_L.put(1) ?};
                     DK_L.next()
                  !}
               ?};
               {? _ile<>DK.IL
               || _ilr:=DK.IL-_ile;
                  {? _allL
                  || exec('findmlok','magdok_wymiary',DK.N().MAG,DK.M,_ilr,_dlref,__loki,DK.N,DK.STATS);
                     __loki.clear();
                     {? __loki.first()
                     || {!
                        |? {? __loki.ILE>0
                           || _lokdo:=exec('FindInSet','#table','EANL','KOD',__loki.LOK,__loki.LOK);
                              {? DK_L.find_key(_lokdo,null,date(0,0,0),1)
                              || {? __loki.ILE<_ilr
                                 || DK_L.IL+=__loki.ILE;
                                    _ilr-=__loki.ILE
                                 || DK_L.IL+=_ilr;
                                    _ilr:=0
                                 ?};
                                 exec('reoIL2','magdok_wymiary');
                                 {? ~_noptw || DK_L.put(1) ?}
                              || DK_L.prefix();
                                 DK_L.blank();
                                 DK_L.DK:=DK.ref();
                                 DK_L.LOK:=_lokdo;
                                 DK_L.TW:=date(0,0,0);
                                 {? __loki.ILE<_ilr
                                 || DK_L.IL:=__loki.ILE;
                                    _ilr-=__loki.ILE
                                 || DK_L.IL:=_ilr;
                                    _ilr:=0
                                 ?};
                                 DK_L.DT:={? DK.N().Z='T' || DK.N().DA || DK.N().D ?};
                                 DK_L.TM:={? DK.N().Z='T' || DK.N().TA || time() ?};
                                 DK_L.US:=DK.N().US;
                                 DK_L.Z:=DK.N().Z;
                                 DK_L.Z_DO:='Z';
                                 DK_L.MG:=DK.N().MAG;
                                 DK_L.M:=DK.M;
                                 DK_L.JM:=DK.M().J;
                                 DK_L.AUTO:=1;
                                 DK_L.SCSQL:=DK.SRDK;
                                 DK_L.SCEAN:=DK.SCEAN;
                                 {? DK.M().SETW='P' & DK.TW<>date(0,0,0)
                                 || DK_L.AUTO:=0;
                                    DK_L.TW:=DK.TW
                                 ?};
                                 exec('reoIL2','magdok_wymiary');
                                 exec('uzupIDkod','magdok_palety',DK_L);
                                 {? ~_noptw || DK_L.add(1) ?};
                                 DK_L.index('DK');
                                 DK_L.prefix(DK.ref(),null)
                              ?};
                              {? _czykom
                              || _txt:='Poz.%1 materiał %2'
                                  ' rozpisano lokalizację %4,'
                                  ' na ilość %3.'@[$DK.P,DK.M().KTM,form(DK_L.IL,,,'99'),__loki.LOK];
                                 {? +_txt>101
                                 || exec('add_kom','#message','Poz.%1 materiał %2'@[$DK.P,DK.M().KTM],4);
                                    exec('add_kom','#message'
                                     ,'     dodano lokalizację %2, na ilość %1.'@[form(DK_L.IL,,,'99'),__loki.LOK],4)
                                 || exec('add_kom','#message',_txt,4)
                                 ?}
                              ?}
                           ?};
                           __loki.next()
                        !}
                     ?}
                  ?};
                  {? _ilr>0
                  || {? DK_L.find_key(DK.N().MAG().EANL,null,date(0,0,0),1)
                     || DK_L.IL+=_ilr;
                        exec('reoIL2','magdok_wymiary');
                        {? ~_noptw || DK_L.put(1) ?}
                     || DK_L.clear();
                        DK_L.blank();
                        DK_L.DK:=DK.ref();
                        DK_L.LOK:=DK.N().MAG().EANL;
                        DK_L.TW:=date(0,0,0);
                        DK_L.IL:=_ilr;
                        DK_L.DT:={? DK.N().Z='T' || DK.N().DA || DK.N().D ?};
                        DK_L.TM:={? DK.N().Z='T' || DK.N().TA || time() ?};
                        DK_L.US:=DK.N().US;
                        DK_L.Z:=DK.N().Z;
                        DK_L.Z_DO:='Z';
                        DK_L.MG:=DK.N().MAG;
                        DK_L.M:=DK.M;
                        DK_L.JM:=DK.M().J;
                        DK_L.AUTO:=1;
                        DK_L.SCSQL:=DK.SRDK;
                        DK_L.SCEAN:=DK.SCEAN;
                        {? DK.M().SETW='P' & DK.TW<>date(0,0,0)
                        || DK_L.AUTO:=0;
                           DK_L.TW:=DK.TW
                        ?};
                        exec('reoIL2','magdok_wymiary');
                        exec('uzupIDkod','magdok_palety',DK_L);
                        {? ~_noptw || DK_L.add(1) ?}
                     ?};
                     {? _czykom
                     || _txt:='Poz.%1 materiał %2'
                         ' dodano domyślną lokalizację, na ilość %3.'@[$DK.P,DK.M().KTM,form(_ilr,,,'99')];
                        {? +_txt>101
                        || exec('add_kom','#message','Poz.%1 materiał %2'@[$DK.P,DK.M().KTM],4);
                           exec('add_kom','#message','     dodano domyślną lokalizację, na ilość %1.'@[form(_ilr,,,'99')],4)
                        || exec('add_kom','#message',_txt,4)
                        ?}
                     ?}
                  ?}
               ?}
            ?}
         ?};
         DK.next()
      !}
   ?}
|? _wyn=''
||
:: dokument wydania
   {? ~_noptw || exec('rozpdk_l','magdok_poz',,ND.MAG,,,ND.DLAKH,,,,,_a<>-1) ?}
?};
DK.cntx_pop();
DK_L.cntx_pop();
PAL.cntx_pop();
_wyn


\sprtwdkl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza terminy waznosci w stosunku do daty dokumentu i dodaje do komunikatow
::   WE: _a - ref ND
::  OLD: \sprtwdkl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_dat:=tab_tmp(1,'POZ','INTEGER',''
       ,'TW','DATE',''
       ,'KTM','STRING[50]','');
ND.cntx_psh();
DK.cntx_psh();
DK_L.cntx_psh();
DK_L.index('CZYPAL');
DK_L.prefix(_a);
{? DK_L.first()
|| _data:=DK_L.DK().N().D;
   {!
   |? {? DK_L.TW<>date(0,0,0) & DK_L.TW<_data
      || _dat.clear();
         {? ~_dat.find_key(DK_L.DK().P)
         || _dat.blank();
            _dat.POZ:=DK_L.DK().P;
            _dat.TW:=DK_L.TW;
            _dat.KTM:=DK_L.DK().M().KTM;
            _dat.add(1)
         ?}
      ?};
      DK_L.next()
   !}
?};
ND.cntx_pop();
DK.cntx_pop();
DK_L.cntx_pop();

_dat.clear();
{? _dat.first()
|| {!
   |? _txt:='Poz.%1 materiał %2 termin ważności mniejszy od daty dokumentu.'@[$_dat.POZ,_dat.KTM];
      exec('add_kom','#message',_txt,4);
      _dat.next()
   !}
?};
obj_del(_dat)


\newscean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: dodanie nowego identyfikatora dostawy
::   WE: _a - ref M
::       _b - IDMOB
::       _c - ref DK_C
::       _d - ref ZPARN
::       _e - ref ZL
::       _f - SCEAN
::   WY: kod SCEAN
::  OLD: \newscean/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:={? _f<>'' || _f || exec('mkodkKODK','kody_kresk',_a) ?};
_scean:='';
_rsql:='';
_go:=0;
{? exec('FindInSet','#table','MKODK','KK',_wyn,_wyn,"MKODK.OLD",,,'')='T'
|| 'stara nieidentyfikowana dostawa'
|? _b='D'
|| _rsql:=$DK.ref();
   {? ~exec('mkodkadd','kody_kresk',_a,_wyn,_rsql) || _wyn:='' ?}
|? _b='A' & _c<>null
|| DK_C.cntx_psh();
   DK_C.clear();
   {? DK_C.seek(_c)
   || _rsql:=$DK_C.ref();
      MKODK.cntx_psh();
      MKODK.index('RSQL');
      MKODK.prefix(_rsql,_rsql,_a);
      {? ~MKODK.first()
      || _go:=1;
         _scean:={? _f<>'' || _f || exec('mkodkKODK','kody_kresk',_a) ?}
      || _wyn:=MKODK.KODK
      ?};
      MKODK.cntx_pop()
   ?};
   DK_C.cntx_pop()
|? _b='P' & _d<>null
|| ZPARN.cntx_psh();
   ZPARN.clear();
   {? ZPARN.seek(_d)
   || _rsql:=$ZPARN.ref();
      {? ZPARN.SCEAN<>''
      || _scean:=ZPARN.SCEAN
      || ZPARN.SCEAN:=_wyn;
         ZPARN.put(1)
      ?}
   ?};
   ZPARN.cntx_pop();
   _go:=1
|? _b='Z' & _e<>null
|| ZL.cntx_psh();
   ZL.clear();
   {? ZL.seek(_e)
   || _rsql:=$ZL.ref();
      {? ZL.SCEAN<>''
      || _scean:=ZL.SCEAN
      || ZL.SCEAN:=_wyn;
         ZL.put(1)
      ?}
   ?};
   ZL.cntx_pop();
   _go:=1
|| _wyn:=''
?};
{? _go
|| {? _scean=''
   || {? ~exec('mkodkadd','kody_kresk',_a,_wyn,_rsql) || _wyn:='' || _wyn:=_scean ?}
   |? _scean<>'' & exec('FindInSet','#table','MKODK','KK',_scean,_scean)=null()
   || {? ~exec('mkodkadd','kody_kresk',_a,_scean,_rsql) || _wyn:='' || _wyn:=_scean ?}
   || _wyn:=_scean
   ?}
?};
_wyn


\rozpdk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: rozpisanie dokumentu rozchodowego wg algorytmow ustalonych dla wymiarow
::   WE: [_a] - 1-wg DK_L (domyslnie) 0-tabela wynikow
::       [_b] - magazyn
::       [_c] - material
::       [_d] - ilosc do rozpisania
::       [_e] - kontrahent poddawany analizie
::       [_f] - paleta do sprawdzenia
::       [_g] - dodatkowo uwzgledniamy niezaakceptowane DK_L-e - domyslnie-0
::       [_h] - tabela wykorzystanych lokalizacji
::       [_i] - kod identyfikacyjny dostawy
::       [_j] - czy komunikat 1-tak(domyslnie)
::   WY: ~~ - _a=1, uchwyt tabeli - _a=0
::  OLD: \rozpdk_l/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__stansl');

_buflok:=1;

{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};
{? _>=3 || {? type_of(_c)<>7 || _c:=null ?} || _c:=null ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
{? _>=5 || {? type_of(_e)<>2 || _e:='' ?} || _e:='' ?};
{? _>=6 || {? type_of(_f)<>7 || _f:=null ?} || _f:=null ?};
{? _>=7 || {? type_of(_g)<>1 || _g:=0 ?} || _g:=0 ?};
{? _>=8 || {? type_of(_h)<>118 || _buflok:=0 ?} || _buflok:=0 ?};
{? _>=9 || {? type_of(_i)<>2 || _i:='' ?} || _i:='' ?};
{? _>=10 || {? type_of(_j)<>1 || _j:=1 ?} || _j:=1 ?};

_mag:=BEER.MG;
BEER.MG:=_b;
_tmg:=(1+BEER.MG().TYP)='D';

_typ_lok:={? _a || {? (';KR+;KR-;'*(';%1;'[ND.TYP().T]))>0 || 'N' || ND.MAG().SP_REANL ?} || BEER.MG().SP_REANL ?};
_wgmggr:={? _a || ND.MAG().WGMGGR='T' || BEER.MG().WGMGGR='T' ?};
_wgscean:={? _a || ND.MAG().SP_IDMOB || BEER.MG().SP_IDMOB ?};

_czykom:=_j & var_pres('__kom')>100;

:: tabela kontrolujaca juz rozpisane pozycje
_ilwyk:=tab_tmp(2,'SL','STRING[16]',''
         ,'SCEAN','STRING[128]',''
         ,'ILL','REAL','');
:: dodanie juz rozpisanych pozycji
{? _buflok
|| _h.clear();
   {? _h.first()
   || {!
      |? _ilwyk.blank();
         _ilwyk.SL:=_h.SL;
         _ilwyk.ILL:=_h.ILL;
         _ilwyk.SCEAN:='xxxx';
         _ilwyk.add(1);
         _h.next()
      !}
   ?}
?};

DK_LN.cntx_psh();
DK_L.cntx_psh();
DK.cntx_psh();

{? _a
|| _wyn:=1;
:: sprawdzenie terminow waznosci dla pozycji
   DK.index('DOKMAG');
   DK.prefix(ND.ref())
|| _wyn:=tab_tmp(2,'EANL','STRING[16]',''
          ,'TW','DATE',''
          ,'IL','REAL',''
          ,'SL','STRING[16]','')
?};
{? {? _a || DK.first() || 1 ?}
|| {!
   |?
::    sprawdzamy ile zostalo rozpisane
      _ilroz:=0;
      _scean:='';
      {? _a & DK.M().RODZ='T'
      || DK_L.index('DK');
         DK_L.prefix(DK.ref(),null);
         {? DK_L.first()
         || {!
            |? _ilroz+=DK_L.IL;
               _scean:={? DK_L.SCEAN<>'' || DK_L.SCEAN
                       |? DK_L.DK().SCEAN<>'' || DK_L.DK().SCEAN
                       || 'xxxx'
                       ?};
               SL.index('MG');
               SL.prefix(ND.MAG,DK.M);
               {? SL.find_key(DK_L.LOK,DK_L.TW)
               || _ilwyk.clear();
                  {? _ilwyk.find_key($SL.ref(),_scean)
                  || _ilwyk.ILL+=DK_L.IL;
                     _ilwyk.put(1)
                  || _ilwyk.blank();
                     _ilwyk.SL:=$SL.ref();
                     _ilwyk.ILL:=DK_L.IL;
                     _ilwyk.SCEAN:=_scean;
                     _ilwyk.add(1)
                  ?}
               ?};
               DK_L.next()
            !}
         ?}
      |? ~_a & _b<>null & _c<>null
      || DK_L.index('MMG');
         DK_L.prefix(_c,_b);
         {? DK_L.first()
         || {!
            |? {? DK_L.Z='N'
               || _ilroz+=DK_L.IL;
                  _scean:={? DK_L.DK<>null & DK_L.DK().SCEAN<>'' || DK_L.DK().SCEAN
                          |? DK_L.DK=null & DK_L.SCEAN<>'' || DK_L.SCEAN
                          || 'xxxx'
                          ?};
                  SL.index('MG');
                  SL.prefix(_b,_c);
                  {? SL.find_key(DK_L.LOK,DK_L.TW)
                  || _ilwyk.clear();
                     {? _ilwyk.find_key($SL.ref(),_scean)
                     || _ilwyk.ILL+=DK_L.IL;
                        _ilwyk.put(1)
                     || _ilwyk.blank();
                        _ilwyk.SL:=$SL.ref();
                        _ilwyk.ILL:=DK_L.IL;
                        _ilwyk.SCEAN:=_scean;
                        _ilwyk.add(1)
                     ?}
                  ?}
               ?};
               DK_L.next()
            !}
         ?}
      ?};
      _sqldk:={? DK.ZP || exec('refwg_zp','magazyn_stan',DK.N,DK.ZP) || $DK.ref() ?};
      _doroz:={? _a || {? DK.M().RODZ='T' || DK.IL-_ilroz || 0 ?} || _d ?};
      {? DK.M().SETW='P' & DK.DOST<>date(0,0,0)
      || _scsql:=DK.SRDK;
         _sprtw:=DK.TW
      || _scsql:='xxx';
         _sprtw:=0
      ?};
::    rozpisujemy roznice
      {? {? _a || ~DK.ZP | _tmg || 1 ?} & _doroz>0
      || {? _czykom
         || _txt:='Poz.%1 materiał %2'
             ' rozpisano wymiary (lokalizacja, term.ważn.), na ilość %3.'@[$DK.P,DK.M().KTM,form(_doroz,,,'99')];
            {? +_txt>101
            || exec('add_kom','#message','Poz.%1 materiał %2'@[$DK.P,DK.M().KTM],4);
               exec('add_kom','#message','     rozpisano wymiary (lokalizacja, term.ważn.), na ilość '
                '%1.'@[form(_doroz,,,'99')],4)
            || exec('add_kom','#message',_txt,4)
            ?}
         ?};
         {? _typ_lok='N'
         ||
::          dodanie domyslnej lokalizacji
            {? _a
            || DK.cntx_psh();
               DK.clear();
               {? DK.seek(_sqldk)
               || DK_L.index('DK');
                  DK_L.prefix(DK.ref(),null);
                  {? DK_L.find_key(DK.N().MAG().EANL,null,{? DK.M().SETW='P' || DK.TW || date(0,0,0) ?},1)
                  || DK_L.IL+=_doroz;
                     exec('reoIL2','magdok_wymiary');
                     DK_L.put(1)
                  || DK_L.clear();
                     DK_L.blank();
                     DK_L.DK:=DK.ref();
                     DK_L.LOK:=DK.N().MAG().EANL;
                     DK_L.TW:={? DK.M().SETW='P' || DK.TW || date(0,0,0) ?};
                     DK_L.IL:=_doroz;
                     DK_L.DT:={? DK.N().Z='T' || DK.N().DA || DK.N().D ?};
                     DK_L.TM:={? DK.N().Z='T' || DK.N().TA || time() ?};
                     DK_L.US:=DK.N().US;
                     DK_L.Z:=DK.N().Z;
                     DK_L.Z_DO:='Z';
                     DK_L.MG:=DK.N().MAG;
                     DK_L.M:=DK.M;
                     DK_L.JM:=DK.M().J;
                     DK_L.AUTO:=1;
                     {? DK.M().SETW='P' & DK.TW<>date(0,0,0) || DK_L.TW:=DK.TW ?};
                     DK_L.SCSQL:={? _scsql='xxx' || DK.SRDK || _scsql ?};
                     DK_L.SCEAN:=DK.SCEAN;
                     exec('reoIL2','magdok_wymiary');
                     exec('uzupIDkod','magdok_palety',DK_L);
                     DK_L.add(1)
                  ?}
               ?};
               DK.cntx_pop()
            || _wyn.clear();
               _wyn.blank();
               _wyn.EANL:=$BEER.MG().EANL;
               _wyn.TW:=date(0,0,0);
               _wyn.IL:=_doroz;
               _wyn.add(1)
            ?}
         ||
::          rozpiska wg lokalizacji
::          dla typow T i W dwa przebiegi - drugi dla terminow zerowych
            _ilep:={? 'TW'*_typ_lok || 2 || 1 ?};
::          dla magazynu typu MWS najpierw przebiega po DOK='N' a potem po DOK='T'
            _mws:={? _a || ND.MAG().MWS='T' & ~ND.MAG().W_ALL || BEER.MG().MWS='T' & ~BEER.MG().W_ALL ?};
            _ilmws:={? _mws || 2 || 1 ?};
            _wgdok:={? _a
                    || {? ND.MAG().MWS='T' & ND.MAG().W_ALL || 0 || _a ?}
                    || {? BEER.MG().MWS='T' & BEER.MG().W_ALL || 0 || _a ?}
                    ?};

            VAR_DEL.delete('__stansl');
            __stansl:=exec('sort_sl','magazyn_stan',_typ_lok,_wgmggr
                           ,{? _a || ND.MAG || BEER.MG ?},{? _a || DK.M || _c ?}
                       ,_e,_f,_g,{? _a || DK.SCEAN || _i ?},_wgdok,_sprtw,DK.STATS);
            {? __stansl.size()
            || {!
               |? __stansl.clear();
                  {? __stansl.first()
                  || {!
                     |? _wgsl:=(4+__stansl.SQL)='stl_';
                        _scean:={? __stansl.SCEAN<>'' || __stansl.SCEAN || 'xxxx' ?};
                        {? {? _wgsl
                           || (SL.clear(); SL.seek(__stansl.SQL))
                           || (DK_L.clear(); DK_L.seek(__stansl.SQL))
                           ?}
                         & {? _mws & _ilmws=2 || {? _wgsl || SL.EANL().DOK='N' || DK_L.LOKDO().DOK='N' ?}
                           |? _mws & _ilmws=1 || {? _wgsl || SL.EANL().DOK='T' || DK_L.LOKDO().DOK='T' ?}
                           || 1
                           ?}
                        ||
::                         ustawienie zmiennych
                           {? _wgsl
                           || _sl_tw:=SL.TW;
                              _sl_mg:=SL.MG;
                              _sl_mt:=SL.M;
                              _sl_lk:=exec('zwrocdok','wymiary_mag',SL.EANL,_sl_mg,_wgdok);
                              _sl_sq:=$SL.ref();
                              _sl_pl:=SL.PAL;
                              {? __stansl.SCEAN<>''
                              || _sl_il:=exec('ilenasld','magazyn_stan',SL.ref(),SL.MG,_scean,$DK.N)
                              || _sl_il:=SL.IL
                              ?}
                           || _sl_tw:=DK_L.TWDO;
                              _sl_mg:=DK_L.DK_LN().MG;
                              _sl_mt:=DK_L.M;
                              _sl_lk:=exec('zwrocdok','wymiary_mag',DK_L.LOKDO,_sl_mg,_wgdok);
                              _sl_il:=DK_L.IL;
                              _sl_sq:=$DK_L.ref();
                              _sl_pl:=DK_L.PALDO
                           ?};

                           {? {? 'TW'*_typ_lok & _ilep=2 || _sl_tw<>date(0,0,0)
                              |? 'TW'*_typ_lok & _ilep=1 || _sl_tw=date(0,0,0)
                              || 1
                              ?}
                           || _ileeanp:={? _a
                                        || 0
                                        || exec('oblmeanp','magazyn_stan',_sl_mg,_sl_mt,_sl_lk,_sl_tw,,,_buflok
                                            ,{? _scean='xxxx' || '' || _scean ?},_mws)
                                        ?};
                              _ilwyk.clear();
                              _ile:=_sl_il-_ileeanp-{? _ilwyk.find_key(_sl_sq,_scean,) || _ilwyk.ILL || 0 ?};
                              {? _ile>0 & _ile>=_doroz
                              || {? _a
                                 || DK.cntx_psh();
                                    DK.clear();
                                    {? DK.seek(_sqldk)
                                    || DK_L.index('DK');
                                       DK_L.prefix(DK.ref(),null);
                                       {? {? __stansl.SCEAN<>''
                                          || DK_L.find_key(_sl_lk,_sl_pl,_sl_tw,1,__stansl.SCEAN)
                                          || DK_L.find_key(_sl_lk,_sl_pl,_sl_tw,1)
                                          ?}
                                       || DK_L.IL+=_doroz;
                                          exec('reoIL2','magdok_wymiary');
                                          DK_L.put(1)
                                       || DK_L.clear();
                                          DK_L.blank();
                                          DK_L.DK:=DK.ref();
                                          DK_L.DK_LN:=null;
                                          DK_L.LOK:=_sl_lk;
                                          DK_L.TW:=_sl_tw;
                                          DK_L.IL:=_doroz;
                                          DK_L.M:=DK.M;
                                          DK_L.JM:=DK.M().J;
                                          DK_L.AUTO:=1;
                                          DK_L.SCSQL:={? _scsql='xxx' || DK.SRDK || _scsql ?};
                                          DK_L.SCEAN:=__stansl.SCEAN;
                                          exec('reoIL2','magdok_wymiary');
                                          exec('uzupIDkod','magdok_palety',DK_L);
                                          DK_L.add(1)
                                       ?}
                                    ?};
                                    DK.cntx_pop()
                                 || _wyn.clear();
                                    {? _wyn.find_key($_sl_lk,_sl_tw)
                                    || _wyn.IL+=_doroz;
                                       _wyn.put(1)
                                    || _wyn.blank();
                                       _wyn.EANL:=$_sl_lk;
                                       _wyn.TW:=_sl_tw;
                                       _wyn.IL:=_doroz;
                                       _wyn.SL:=_sl_sq;
                                       _wyn.add(1)
                                    ?}
                                 ?};
                                 _ilwyk.clear();
                                 {? _ilwyk.find_key(_sl_sq,_scean,)
                                 || _ilwyk.ILL+=_doroz;
                                    _ilwyk.put(1)
                                 || _ilwyk.blank();
                                    _ilwyk.SL:=_sl_sq;
                                    _ilwyk.ILL:=_doroz;
                                    _ilwyk.SCEAN:=_scean;
                                    _ilwyk.add(1)
                                 ?};
                                 _doroz:=0
                              |? _ile>0 & _ile<_doroz
                              || {? _a
                                 || DK.cntx_psh();
                                    DK.clear();
                                    {? DK.seek(_sqldk)
                                    || DK_L.index('DK');
                                       DK_L.prefix(DK.ref(),null);
                                       {? {? __stansl.SCEAN<>''
                                          || DK_L.find_key(_sl_lk,_sl_pl,_sl_tw,1,__stansl.SCEAN)
                                          || DK_L.find_key(_sl_lk,_sl_pl,_sl_tw,1)
                                          ?}
                                       || DK_L.IL+=_ile;
                                          exec('reoIL2','magdok_wymiary');
                                          DK_L.put(1)
                                       || DK_L.clear();
                                          DK_L.blank();
                                          DK_L.DK:=DK.ref();
                                          DK_L.DK_LN:=null;
                                          DK_L.LOK:=_sl_lk;
                                          DK_L.TW:=_sl_tw;
                                          DK_L.IL:=_ile;
                                          DK_L.M:=DK.M;
                                          DK_L.JM:=DK.M().J;
                                          DK_L.AUTO:=1;
                                          DK_L.SCSQL:={? _scsql='xxx' || DK.SRDK || _scsql ?};
                                          DK_L.SCEAN:=__stansl.SCEAN;
                                          exec('reoIL2','magdok_wymiary');
                                          exec('uzupIDkod','magdok_palety',DK_L);
                                          DK_L.add(1)
                                       ?}
                                    ?};
                                    DK.cntx_pop()
                                 || _wyn.clear();
                                    {? _wyn.find_key($_sl_lk,_sl_tw)
                                    || _wyn.IL+=_ile;
                                       _wyn.put(1)
                                    || _wyn.blank();
                                       _wyn.EANL:=$_sl_lk;
                                       _wyn.TW:=_sl_tw;
                                       _wyn.IL:=_ile;
                                       _wyn.SL:=_sl_sq;
                                       _wyn.add(1)
                                    ?}
                                 ?};
                                 _ilwyk.clear();
                                 {? _ilwyk.find_key(_sl_sq,_scean)
                                 || _ilwyk.ILL+=_ile;
                                    _ilwyk.put(1)
                                 || _ilwyk.blank();
                                    _ilwyk.SL:=_sl_sq;
                                    _ilwyk.ILL:=_ile;
                                    _ilwyk.SCEAN:=_scean;
                                    _ilwyk.add(1)
                                 ?};
                                 _doroz-=_ile
                              ?}
                           ?}
                        ?};
                        _doroz & __stansl.next()
                     !}
                  ?};
                  {? _mws
                  || {? _ilep=2
                     || _ilep-=1
                     |? _ilep=1 & _ilmws=2
                     || _ilmws-=1;
                        _ilep:=2
                     |? _ilep=1 & _ilmws=1
                     || _ilep:=0
                     ?}
                  || _ilep-=1
                  ?};
                  _ilep>0 & _doroz>0
               !}
            ?};
            {? _doroz>0
            || {? _a
               || DK.cntx_psh();
                  DK.clear();
                  {? DK.seek(_sqldk)
                  || DK_L.index('DK');
                     DK_L.prefix(DK.ref(),null);
                     {? DK_L.find_key(DK.N().MAG().EANL,null,date(0,0,0),1)
                     || DK_L.IL+=_doroz;
                        exec('reoIL2','magdok_wymiary');
                        DK_L.put(1)
                     || DK_L.clear();
                        DK_L.blank();
                        DK_L.DK:=DK.ref();
                        DK_L.LOK:=DK.N().MAG().EANL;
                        DK_L.TW:=date(0,0,0);
                        DK_L.IL:=_doroz;
                        DK_L.DT:={? DK.N().Z='T' || DK.N().DA || DK.N().D ?};
                        DK_L.TM:={? DK.N().Z='T' || DK.N().TA || time() ?};
                        DK_L.US:=DK.N().US;
                        DK_L.Z:=DK.N().Z;
                        DK_L.Z_DO:='Z';
                        DK_L.MG:=DK.N().MAG;
                        DK_L.M:=DK.M;
                        DK_L.JM:=DK.M().J;
                        DK_L.AUTO:=1;
                        DK_L.SCSQL:={? _scsql='xxx' || DK.SRDK || _scsql ?};
                        DK_L.SCEAN:=DK.SCEAN;
                        exec('reoIL2','magdok_wymiary');
                        exec('uzupIDkod','magdok_palety',DK_L);
                        DK_L.add(1)
                     ?}
                  ?};
                  DK.cntx_pop()
               || _wyn.clear();
                  _wyn.blank();
                  _wyn.EANL:=$BEER.MG().EANL;
                  _wyn.TW:=date(0,0,0);
                  _wyn.IL:=_doroz;
                  _wyn.SL:='';
                  _wyn.add(1)
               ?}
            ?}
         ?}
      ?};
      {? _a || DK.next() || 0 ?}
   !}
?};
BEER.MG:=_mag;
VAR_DEL.delete('__stansl');
DK_LN.cntx_pop();
DK_L.cntx_pop();
DK.cntx_pop();
_wyn


\gen_fifo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: generuje rozpiske FIFO/LIFO - dla wszystkich pozycji dokumentu
::       - pozycje rozpiski dopisywane sa do dokumentu na koncu
::       - kazda z nowo utworzonych pozycji ma wypelniony znacznik ZP - wskazanie na pozycje wyjsciowa
::       - rozpiska robiona jest wg aktualnie aktywnych dostaw, wszelkie rezerwacje na nich
::         sa odblokowywane i przeprowadzane ponownie (na innych dostawach)
::       - w zaleznosci od tego czy magazyn jest typu FIFO/LIFO poruszamy sie w dol lub w gore dostaw
::   WE: _a - typ magazynu - literka: F-FIFO L-LIFO E-ewidencyjny S-sredni
::       [_b] - numer pozycji do rozpisania
::       [_c] - 1-wolane podczas regulacji magazynu, 0-wpp
::   WY: czy wszystko zostalo wydane 0 - wszystko <>0 nie wszystko (brakuje na stanie)
::  OLD: \gen_fifo/pommag.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? var_pres('_c')<>type_of(1) || _c:=0 ?};

_wyn:=0;

ND.cntx_psh();

_ilepoz:=DK.size;_i:=0;
DK.last;
_poz:=DK.P;
{? DK.first() & ~_b
||
   _i:=0;
   {!
   |?
::    rozpisujemy wg FIFO/LIFO
      _i+=1;
      czy__all:=0;
      {? DK.NDK=ref_name(DK.ref()) & DK.RDK=#DK.ref() || DK.RDK:=0 ?};
      {? DK.RDK=0 || _poz:=exec('roz_fifo','magdok_poz',_poz,_c,DK.SCEAN) ?};
      _wyn+=czy__all;
      _i<_ilepoz & DK.next
   !}
|? _b & DK.find_key(_b)
||
   _poz:=exec('roz_fifo','magdok_poz',_a,_c,DK.SCEAN)
?};
ND.cntx_pop();
_wyn


\roz_fifo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: rozpisuje wg FIFO/LIFO
::   WE: _a  analizowana pozycja dokumentu
::       _b - 1-wolane podczas regulacji magazynu, 0-wpp
::       _c - SCEAN - Kod identyfikujacy dostawe
::   WY: przekazany parametr - analizowana pozycja dokumentu
::       czy__all  zmienna globalna czy rozpisano wszystko - zwraca ile nie rozpisano
::  OLD: \roz_fifo/pommag.fml
::----------------------------------------------------------------------------------------------------------------------
czy__all:=0;
_poz:=#DK.ref; _first:=1; _wyn:=_a; _ile:=0; _ile_p:=0; _pozy:=DK.P;
_mag:=DK.N().MAG; _tmg:=1+ND.MAG().TYP; _ktm:=DK.M; _ref:=DK.ref; _ewi:=(ND.MAG().TYP*'EWI');
_last:=((1+DK.N().MAG().TYP)='L' | DK.AFIFO='L');
_dk:=obj_new(DK.fld_num); _nag:=DK.N; _pp:=DK.P;
_data:=DK.N().D;

_wyddkc:=tab_tmp(2,'RDK','INTEGER','','NDK','STRING[8]','','ILW','REAL','');

_czy_dost:=0;
exec('bufRec','#table','DK',_dk);
SC.cntx_psh();
_stskind:=exec('Create_ZON4typ','statexam',DK.N().TYP();TYPYDOK);
exec('sc_tymczas','magazyn_stan',_mag,_ktm,'T',,_stskind,0);
_rodz:=DK.M().RODZ;
_ile:=DK.IL;
_ile_p:=DK.IL;
{? __sc.first() & _rodz='T'
||
   _ils:=0;
   _pozy:=DK.P;
:: ustalenie ceny dla magazynu srednie
   _cenas:=exec('cenas','magazyn_stan',_ktm,_tmg);
   {? _last || __sc.last() || __sc.first() ?};
   _sprsce:=_c<>'';
   _petla:=_sprsce;
   {!
   |? {!
      |?
         _ils:=0;
         _bufwyd:=0;
         {? __sc.S>0 & _data>=__sc.D & ~exec('noDostBO','magdok_wspolne',__sc.PRDK,_data)
           & (_b | exec('dok_po_kor','magdok_wspolne',_data,__sc.RDK,__sc.NDK,_mag,_ktm))
           & {? ~_sprsce || 1 || {? _petla || __sc.SCEAN=_c || __sc.SCEAN<>_c ?} ?}
         || _stan:=__sc.S-{? _tmg<>'D' || exec('obl_zwrot','magdok_poz',__sc.RDK,__sc.NDK,ND.MAG,DK.M,ND.D) || 0 ?};
            _stan:=_stan-{? _tmg='D'
                         || exec('obl_rsc','magazyn_stan',__sc.RDK,__sc.NDK,ND.MAG,DK.M,1)
                         || 0
                         ?}-exec('ile_juzs','magdok_poz',_nag,_pp,__sc.RDK,__sc.NDK);
            {? _tmg='D'
            || EANX.ILW:=0;
               _rezwyd:=exec('obl_stsc','magazyn_stan',__sc.RDK,__sc.NDK,ND.MAG,DK.M);
               {? EANX.ILW>0 & DK.M().IDMOB='D' || {? _rezwyd<=EANX.ILW || _rezwyd:=0 || _rezwyd-=EANX.ILW ?} ?};
               {? _rezwyd<0
               || _bufwyd+=_rezwyd
               |? _stan<_rezwyd
               || _bufwyd+=_rezwyd-_stan
               ?};
               _sc_rez:={? __sc.DK_C<>''
                        || _dkc:=exec('FindAndGet','#table',DK_C,__sc.DK_C,,,null());
                           exec('rezScWgAtr','magazyn_stan',_mag,_ktm,__sc.RDK,__sc.NDK,_dkc,_wyddkc)
                        || 0
                        ?};
               _stan:={? _sc_rez>=_stan
                      || 0
                      || _stan-_sc_rez
                      ?}
            ?};
            _ils:={? _stan>_ile || _ile || _stan ?};
            {? _ils>0
            ||
               {? ~_first
               || exec('unbufRec','#table','DK',_dk);
                  _wyn+=1;
                  DK.P:=_wyn;
                  DK.ZP:=_poz;
                  DK.IL2:=0;
                  DK.T2:={? DK.M().J2<>null() || 'M' || 'G' ?};
                  exec('obl_wars','magdok_poz');
                  DK.add()
               || _first:=0
               ?};
               DK.get;
               DK.IL:=_ils;
               DK.DOST:=__sc.D;
               DK.C:={? 'Ś'*_tmg || _cenas
                     |? _ewi || {? (ND.INN='T' & ND.TYP().INW='E' & ND.TYP().P='N')
                                || DK.C
                                || exec('biez_cen','ceny_dok',DK.M,ND.MAG,ND.D,2)
                                ?}
                     || {? _b || exec('cena_mag','ceny',DK.M,__sc.RDK,__sc.NDK,ND.MAG,,,,ND.D,2) || __sc.C ?} ?};

               DK.RDK:=__sc.RDK;
               DK.NDK:=__sc.NDK;
               DK.SRDK:=__sc.SRDK;
               DK.PRDK:=__sc.PRDK;
               DK.WAR:=(DK.C * DK.IL)$2;
               DK.Z:='T';
               DK.DK_C:={? _tmg='D' & __sc.DK_C<>'' || exec('FindAndGet','#table','DK_C',__sc.DK_C) || null() ?};
               DK.SCEAN:={? __sc.SCEAN<>'' || __sc.SCEAN || '' ?};
               DK.TW:=__sc.TW;

               {? ND.TYP().Z='N' | DK.M().J2<>null()
               || _dokl:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
                  _il22:={? DK.WS2 || DK.IL/DK.WS2 || 0 ?} $ (_dokl+1);
                  roundmet(BEER.MDOKL);
                  _il22:=_il22 $ _dokl;
                  DK.IL2:={? _dokl>=0 || _il22 || DK.IL2 ?};
                  roundmet(5)
               ?};
               DK.KP:='';
               exec('blank_kp','magdok_wspolne',DK);
               exec('obl_wars','magdok_poz');
               {? DK.put()
               ||
                  {? _tmg='D' & DK.DK_C<>null()
                  || _wyddkc.clear();
                     {? ~_wyddkc.find_key(DK.RDK,DK.NDK,)
                     || _wyddkc.blank();
                        _wyddkc.RDK:=DK.RDK;
                        _wyddkc.NDK:=DK.NDK;
                        _wyddkc.ILW:=DK.IL;
                        _wyddkc.add(1)
                     || _wyddkc.ILW+=DK.IL;
                        _wyddkc.put(1)
                     ?}
                  ?};
::                powiazany PKOM
                  {? 'TW'*exec('get','#params',600300,2)
                  ||
                     _nref:=BB.sqlint(ND.NDSQL);
                     _nname:=form(8+ND.NDSQL);
                     DK.cntx_psh();
                     ND.cntx_psh();
                     ND.prefix();
                     {? ND.seek(_nref,_nname) & ND.TYP().DN='K' & ~(ND.MAG().TYP*'EWI')
                     ||
                        DK.index('DOKMAG');
                        DK.prefix(ND.ref());
                        {? DK.first()
                        ||
                           {!
                           |?
                              DK.C:={? DK.IL || exec('sklsql2c','magdok_poz',$DK.ref)/DK.IL || 0 ?}$2;
                              {? DK.N().MAG().SKL<>'T'
                              || DK.SCC:=DK.C
                              ?};
                              exec('war_mag','magdok_poz');
                              DK.put();
                              DK.next()
                           !}
                        ?}
                     ?};
                     ND.cntx_pop();
                     DK.cntx_pop()
                  ?}
               ?}
            || _ils:=0
            ?}
         |? __sc.S>0 & _data<__sc.D
         || _czy_dost:=1
         ?};
         _ile-=_ils;
         _ile>0 & {? _last || __sc.prev() || __sc.next() ?}
      !};
      _petla-=1;
      {? _last || __sc.last() || __sc.first() ?};
      _ile>0 & _petla=0
   !}
||
   {? _rodz='T' & var_pres('__kom')>100
   || exec('add_kom','#message','Nie znaleziono stanu magazynowego dla %1'@[DK.M().KTM],4)
   ?}
?};
SC.cntx_pop();
{? _rodz='T' || czy__all:=_ile ?};
{? _rodz='T' & var_pres('__kom')>100 & _ile>0
||
   exec('add_kom','#message','Pozycja dok.: %1. Nie udało się rozpisać ilości %2'
   ' z %3 dla materiału %4'@[$_pozy,$_ile,$_ile_p,DK.M().KTM]+{? _czy_dost ||','||'.'?},4);
   {? _czy_dost
   || exec('add_kom','#message','Ponieważ istnieją dostawy z datą późniejszą dla materiału %1.'@[DK.M().KTM],4)
   ?}
?};
obj_del(_wyddkc);
obj_del(_dk);
DK.seek(_ref);
_wyn


\ile_juzs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdza ile juz z danej dostawy jest na dokumencie
::   WE:  _a - ref dokumentu
::        _b - nr pozycji
::        _c - ref dostawy
::        _d - name() dostawy
::   WY: ilosc na dostawie
::  OLD: \ile_juzs/pommag.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
DK.cntx_psh;
DK.clear;
DK.index('DOSTN');
DK.prefix(_a,_c,_d);
{? DK.first || {! |? _wyn+={? DK.P<>_b || DK.IL || 0 ?}; DK.next !} ?};
DK.cntx_pop;
_wyn


\dk_l2sce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: aktualizuje DK_L na podstawie kodow identyfikacyjnych
::   WE: _a - ref ND
::  OLD: \dk_l2sce/pommag.fml
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh();
DK.cntx_psh();
DK.index('DOKZP');
DK.prefix(_a,0);
{? DK.first() & DK.N().MAG().SP_REANL='N'
|| {!
   |? _ref:=DK.ref();
      _poz:=#DK.ref();
      DK.cntx_psh();
      DK_L.cntx_psh();
      DK.clear();
      {? DK.seek(_ref) & DK.SCEAN<>'' & exec('FindInSet','#table','DK','DOKZP',_poz,_a)<>null()
      || _sce:=tab_tmp(1,'SCEAN','STRING[128]','','ILE','REAL','');
         _dkl:=tab_tmp(1,'DKL','STRING[16]','','ILE','REAL','');
         _sce.blank();
         _sce.SCEAN:=DK.SCEAN;
         _sce.ILE:=DK.IL;
         _sce.add(1);
         DK.index('DOKZP');
         DK.prefix(_a,_poz);
         {? DK.first()
         || {!
            |? {? (_sce.clear(); _sce.prefix(DK.SCEAN,); ~_sce.first())
               || _sce.blank();
                  _sce.SCEAN:=DK.SCEAN;
                  _sce.ILE:=DK.IL;
                  _sce.add(1)
               || _sce.ILE+=DK.IL;
                  _sce.put(1)
               ?};
               DK.next()
            !}
         ?};
         DK_L.index('DK');
         DK_L.prefix(_ref,null());
         {? DK_L.first()
         || {!
            |? _dkl.clear();
               _dkl.blank();
               _dkl.DKL:=$DK_L.ref();
               _dkl.ILE:=DK_L.IL;
               _dkl.add(1);
               DK_L.next()
            !}
         ?};
         _sce.clear();
         {? _sce.first()
         || {!
            |? _ile:=_sce.ILE;
               _dkl.clear();
               {? _dkl.first()
               || {!
                  |? {? _dkl.ILE>_ile
                     || DK_L.clear();
                        {? DK_L.seek(_dkl.DKL)
                        || DK_L.IL-=_ile;
                           exec('reoIL2','magdok_wymiary');
                           DK_L.put(1);
                           DK_L.SCEAN:=_sce.SCEAN;
                           DK_L.IL:=_ile;
                           exec('reoIL2','magdok_wymiary');
                           {? DK_L.add(1)
                           || _dkl.ILE-=DK_L.IL;
                              _dkl.put(1);
                              _ile:=0
                           ?}
                        ?}
                     || DK_L.clear();
                        {? DK_L.seek(_dkl.DKL)
                        || DK_L.SCEAN:=_sce.SCEAN;
                           {? DK_L.put(1)
                           || _dkl.del();
                              _ile-=DK_L.IL
                           ?}
                        ?}
                     ?};
                     _ile>0 & _dkl.next()
                  !}
               ?};
               _sce.next()
            !}
         ?};
         obj_del(_sce);
         obj_del(_dkl)
      ?};
      DK.cntx_pop();
      DK_L.cntx_pop();
      DK.next()
   !}
?};
ND.cntx_pop();
DK.cntx_pop();
~~


\adddk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: dodaje pozycje dokumentu magazynowego
::   WE: _a - ref ND
::       _b - ref materiału
::       _c - ilość
::       _d - cena
::       _e - data dostawy
::       [_f] - rabat
::       [_g] - cena sprzedaży netto
::       [_h] - cena sprzedaży brutto
::       [_i] - wartość sprzedaży netto
::       [_j] - stawka VAT
::       [_k] - wartość sprzedaży VAT
::       [_l] - wartość sprzedaży brutto
::       [_m] - 0 wynik 1/0 7 wynik ref DK/0
::       [_n] - pole SC.RDK (ref dokumentu tworzącego dostawę)
::       [_o] - pole SC.NDK
::       [_p] - ref cechy dostawy
::       [_q] - ref dostawy w postaci sql
::       [_r] - ref pierwotnej dostawy w postaci sql
::       [_s] - ref SQL realizacji zamówienia nagłówek
::       [_t] - ref zlecenia
::       [_u] - ref wydziału
::       [_v] - ref SQL składowej
::       [_w] - wartość zakupu
::       [_x] - ref statusu dostawy
::       [_y] - kod identyfikujący dostawę
::       [_z] - termin ważności
::   WY: w zależnosci od parametru _m=0: 1/0 _m=7: ref DK/0
::  OLD: FD.ADDDK/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_b)<>7 || _b:=null ?};
{? _>=5 || {? type_of(_e)<>4 || _e:=date(0,0,0) ?} || _e:=date(0,0,0) ?};
{? _>=6 || {? type_of(_f)<>1 || _f:=0 ?} || _f:=0 ?};
{? _>=7 || {? type_of(_g)<>1 || _g:=0 ?} || _g:=0 ?};
{? _>=8 || {? type_of(_h)<>1 || _h:=0 ?} || _h:=0 ?};
{? _>=9 || {? type_of(_i)<>1 || _i:=0 ?} || _i:=0 ?};
{? _>=10 || {? type_of(_j)<>7 || _j:=null ?} || _j:=null ?};
{? _>=11 || {? type_of(_k)<>1 || _k:=0 ?} || _k:=0 ?};
{? _>=12 || {? type_of(_l)<>1 || _l:=0 ?} || _l:=0 ?};
{? _>=13 || {? type_of(_m)<>1 || _m:=0 ?} || _m:=0 ?};
{? _>=14 || {? type_of(_n)<>1 || _n:=0 ?} || _n:=0 ?};
{? _>=15 || {? type_of(_o)<>2 || _o:=''?} || _o:='' ?};
{? _>=16 || {? type_of(_p)<>7 || _p:=null ?} || _p:=null ?};
{? _>=17 || {? type_of(_q)<>2 || _q:=''?} || _q:='' ?};
{? _>=18 || {? type_of(_r)<>2 || _r:=''?} || _r:='' ?};
{? _>=19 || {? type_of(_s)<>2 || _s:=''?} || _s:='' ?};
{? _>=20 || {? type_of(_t)<>7 || _t:=null ?} || _t:=null ?};
{? _>=21 || {? type_of(_u)<>7 || _u:=null ?} || _u:=null ?};
{? _>=22 || {? type_of(_v)<>2 || _v:='' ?} || _v:='' ?};
{? _>=23 || {? type_of(_w)<>1 || _w:=0 ?} || _w:=0 ?};
{? _>=24 || {? type_of(_x)<>7 || _x:=null ?} || _x:=null ?};
{? _>=25 || {? type_of(_y)<>2 || _y:='' ?} || _y:='' ?};
_istw:=1;
{? _>=26 || {? type_of(_z)<>4 || _istw:=0; _z:=date(0,0,0) ?} || _istw:=0; _z:=date(0,0,0) ?};

_wyn:=0;
ND.cntx_psh();
ND.clear(); ND.seek(_a);
_only:=ND.MAG().IL='T';
_nozl:=ND.TYP().P='T' & (ND.NDSQL<>'' & ND.TYP().ZLEC<>'T');
DK.cntx_psh;
DK.index('DOKMAG');
DK.prefix(_a);
DK.blank();
DK.N:=_a;
DK.M:=_b;
DK.JM:=DK.M().J;
DK.IL:=_c;
DK.C:={? _only || 0 || _d ?};
DK.DOST:=_e;
DK.RAB:=_f;
DK.CN:=_g;
DK.CB:=_h;
DK.WN:=_i;
DK.SV:=_j;
DK.WV:=_k;
DK.WB:=_l;
DK.WAR:=(DK.IL*DK.C)$2;
DK.DK_C:=_p;
DK.ZAM_RN:=_s;
DK.SKLSQL:=_v;
DK.WARZ:={? _only || 0 || _w ?};
DK.WAL:=DK.N().WAL;
DK.SCEAN:=_y;
DK.TW:=_z;

PROJEKTY.cntx_psh();TYPYDOK.cntx_psh();PROJTYPY.cntx_psh();ND.cntx_psh();
PROJEKTY.prefix();TYPYDOK.prefix();PROJTYPY.prefix();ND.prefix();
DK.N();
DK.PROJEKTY:=
{? var_press('__dk_p')=7 & __dk_p<>null & PROJEKTY.seek(__dk_p)
& (ND.TYP().PROJZAKR='Wszystkie' | (4+PROJEKTY.T().R)=(4+ND.TYP().PROJZAKR))
|| __dk_p
|| null
?};
PROJEKTY.cntx_pop();TYPYDOK.cntx_pop();PROJTYPY.cntx_pop();ND.cntx_pop();
_addkp:=(DK.PLUS='N' & DK.PRDK='') | DK.N().NDSQL<>'' | DK.N().TYP().DN='T';

::    intrastat
exec('istatr_nd2dk','magdok_poz');
exec('ist_wart_dk','magdok_poz',1);
exec('uzupjdod','magdok_poz','DK');
::    Uzupełnianie pol dla magazynowow nie celnych
{? DK.N().MAG().SKL <> 'T'
|| DK.SCC:=DK.C;
   DK.SCWAR:=DK.WAR
?};
DK.KH:=DK.N().KH;
DK.KH_ODB:=DK.N().KH_ODB;
_add:=DK.add();
_zwrdst:=0;
{? _add || {? _m=7 || _wyn:=DK.ref || _wyn:=1 ?} ?};

DK.AR:=DK.N().AR;
DK.PLUS:=DK.N().TYP().P;
_czyzakc:=DK.N().Z='T' | (';ZT'*DK.N().STAT_REJ)>1;
DK.Z:={? _czyzakc || 'T' || 'N' ?};
{? (DK.PLUS<>'T' | DK.Z='R')
|| DK.RDK:=_n; DK.NDK:=_o;
   {? _q<>'' | (_n<>0 & _o<>'') || DK.SRDK:={? _q<>'' || _q || form(_o,8)+(((8*'0')+(-BB.hex(_n)))+8) ?} ?};
   {? _r<>'' | (_n<>0 & _o<>'') || DK.PRDK:={? _r<>'' || _r || form(_o,8)+(((8*'0')+(-BB.hex(_n)))+8) ?} ?};
   {? _x<>null() || DK.STATS:=_x ?}
|| {? _n=0 & _o=''
   || _zwrdst:=DK.PLUS='T' & DK.N().TYP().DN='T' & _r<>'';
      DK.RDK:=#DK.ref();
      DK.NDK:=DK.name();
      DK.PRDK:=DK.SRDK:=$DK.ref();
      _statsM:=exec('statsM','statexam',DK.M);
      DK.STATS:={? _statsM=null() || DK.N().MAG().DEFSTATS || _statsM ?}
   || DK.RDK:=_n;
      DK.NDK:=_o;
      DK.SRDK:=_q;
      DK.PRDK:=_r;
      DK.STATS:=_x
   ?}
?};
{? _r <> '' || DK.PRDK:=_r ?};
{? ~_istw & DK.M().SETW='P' & DK.PRDK=DK.SRDK & DK.TW=date(0,0,0) & DK.M().TWD>0 || DK.TW:=DK.N().D+DK.M().TWD ?};
DK.ZL:=_t;
DK.WYD:=_u;
BEER.MSK:='dokma';
{? DK.PLUS='T'
|| DK.SV:=exec('m_vat','material',DK.M,ND.KH,,ND.AR,ND.AM,,,,'Z');
   {? DK.SCEAN<>'' & DK.M().IDMOB='A'
   || _rsql:=exec('FindInSet','#table','MKODK','KK',DK.SCEAN,DK.SCEAN,"MKODK.RSQL",,,'');
      DK.DK_C:=exec('FindAndGet','#table',DK_C,_rsql,,,null())
   |? _b & DK.M().IDMOB='P'
   || {? DK.PARTIA<>null() & DK.PARTIA().SCEAN<>''
      || DK.SCEAN:=DK.PARTIA().SCEAN
      || _rsql:=exec('FindInSet','#table','MKODK','KK',DK.SCEAN,DK.SCEAN,"MKODK.RSQL",,,'');
         DK.PARTIA:=exec('FindAndGet','#table',ZPARN,_rsql,,,null())
      ?};
      {? DK.PARTIA=null() & DK.SCEAN<>''
      || DK.PARTIA:=exec('FindInSet','#table','ZPARN','SCEAN',DK.SCEAN,DK.M,,1,,null())
      ?};
      {? DK.PARTIA<>null()
      || DK.ZL:=DK.PARTIA().ZL;
         DK.WYD:=DK.PARTIA().ZL().JORG;
         DK.ZGH:=DK.PARTIA().ZGH;
         {? DK.DK_C=null() || DK.DK_C:=exec('cechaWGparti','mat_atr',DK.M().M_ATR,DK.PARTIA) ?}
      ?}
   |? _b & DK.M().IDMOB='Z'
   || {? _y='' & DK.ZL<>null() & DK.ZL().SCEAN<>''
      || DK.SCEAN:=DK.ZL().SCEAN
      || _rsql:=exec('FindInSet','#table','MKODK','KK',DK.SCEAN,DK.SCEAN,"MKODK.RSQL",,,'');
         DK.ZL:=exec('FindAndGet','#table',ZL,_rsql,,,null())
      ?};
      DK.WYD:=DK.ZL().JORG
   |? _b & DK.M().IDMOB='D' & DK.SCEAN<>''
   || DK.PARTIA:=exec('FindInSet','#table','ZPARN','ZPEAN',DK.SCEAN,DK.M,,1,,null());
      {? DK.PARTIA<>null()
      || DK.ZL:=DK.PARTIA().ZL;
         DK.WYD:=DK.PARTIA().ZL().JORG;
         DK.ZGH:=DK.PARTIA().ZGH;
         {? DK.DK_C=null() || DK.DK_C:=exec('cechaWGparti','mat_atr',DK.M().M_ATR,DK.PARTIA) ?}
      ?}
   ?}
?};
{? DK.ZL<>null() & DK.DK_C().ZPARN<>null()
|| DK.PARTIA:=DK.DK_C().ZPARN;
   DK.ZGH:=DK.DK_C().ZPARN().ZGH
?};
{? _nozl
|| DK.ZL:=null();
   DK.ZGH:=null();
   DK.WYD:=null()
?};
{? _add & _zwrdst
 & (1+(5-DK.PRDK))=(1+(5-DK.SRDK))
 & exec('FindAndGet','#table',DK,DK.PRDK,,"SCEAN",'')=DK.SCEAN
 & exec('FindAndGet','#table',DK,DK.PRDK,,"TW",'')=DK.TW
 & exec('FindAndGet','#table',DK,DK.PRDK,,"STATS",'')=DK.STATS
|| DK.RDK:=BB.sqlint(DK.PRDK);
   DK.NDK:=ref_name(DK.PRDK)
?};
{? _add
|| {? _addkp || DK.KP:=''; exec('blank_kp','magdok_wspolne',DK) ?};
   _plugin_tw:=Plugin.run('DK_TW_GEN');
   {? type_of(_plugin_tw)=type_of(date()) & _plugin_tw<>date(0,0,0)
   || DK.TW:=_plugin_tw
   ?};
   DK.put();
   exec('inf_dod','fakso',-1,'dokma');
   {? ~(_n=0 & _o='') & _x
   || exec('DK_HS_new4DK','statexam',DK.ref,'N','Zwrot dostawy')
   ?}
?};
ND.cntx_pop();
DK.cntx_pop();
_wyn


\pw_ilp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: przed wyswietleniem EANX.ILP
::  OLD: \pw_ilp/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('FindInSet','#table','DK','DOKMAG',ND.ref())<>null
 & exec('FindInSet','#table','DK_L','DK',null,DK.ref())=null
|| EANX.ILP:=DK.IL;
   EANX.ILJ:=0
?};
exec('rekprzed','color','DK_L#01')


\rek_dk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: oblicza sumy
::  OLD: \rek_dk_l/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_dokl_m:=exec('jaka_dok_m','jm',DK.M);
_wsp:={? DK.N().TYP().P<>'T' & DK.N().Z='T'
      || {? DK.N().MAG().SL='N' || 1 || -1 ?}
      || 1
      ?};
{? DK_L.win_sel('?')='SLO'
|| _ildk:=ZMIENNE.IL
|? DK.N().Z='T' & (~(DK.N().MAG().TYP*'DOST') | 'FL'*DK.AFIFO)
|| _ildk:=DK.IL;
   DK.cntx_psh();
   DK.index('DOKZP');
   DK.prefix(DK.N,#DK.ref);
   {? DK.first() || {! |? _ildk+=DK.IL; DK.next() !} ?};
   DK.cntx_pop()
|| _ildk:=DK.IL
?};
EANX.ILP:=_wsp*_ildk;
EANX.ILJ:=0;
DK_L.cntx_psh();
DK_L.index('DK');
DK_L.prefix(DK.ref(),null);
{? DK_L.first()
|| {!
   |? EANX.ILJ+=DK_L.IL $ _dokl_m;
      EANX.ILP-=DK_L.IL $ _dokl_m;
      DK_L.next()
   !}
?};
DK_L.cntx_pop();
_no_et:={? ~exec('isDEFetyk','magazyn_mobi','DK_L') || 'T' || '' ?};
_is_op:={? exec('stND2EANN','magazyn_mobi',ST.AR)='K' || 'DPU' || '' ?};
_kwdst:={? ~(DK.N().MAG().TYP*'DOST' & DK.N().MAG().PAL='T') || 'F' || '' ?};
DK_L.actions_grayed('WER',_is_op+_no_et+_kwdst);
''


\chk_dk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdza poprawnosc ilosci
::   WY: 1-jest ok 0-niestety nie
::  OLD: \chk_dk_l/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_pdkdkl:=var_pres('__pdkdkl')>0 & __pdkdkl;
PAL.f_clear();
_dokl_m:=exec('jaka_dok_m','jm',DK.M);
DK_L.IL:=DK_L.IL $ _dokl_m;
DK_L.JM:=DK_L.DK().M().J;
{? DK_L.DK<>null() & DK.M().SETW='P' || DK_L.SCSQL:=DK_L.DK().SRDK ?};
{? ~exec('podkllok','magdok_wspolne')
|| _res:={? DK_L.DK().N().MD<>null & DK_L.DK().N().MD().PAL='T' & DK_L.DK().N().MAG().PAL='N' || 'KODPAL' || 'LOK' ?}
|? ~_pdkdkl & DK_L.IL<=0
|| FUN.info('Należy podać ilość większą od zera.'@); _res:='IL'
|? DK_L.IL<0
|| FUN.info('Należy podać ilość większą lub równą zero.'@); _res:='IL'
|? {? DK_L.DK<>null
   || {? DK_L.DK().N().MAG().SL='T' || DK_L.LOK=null || 0 ?}
   || DK_L.LOK=null
   ?}
|| FUN.info('Należy podać nową lokalizację.'@); _res:='LOK'
|? DK_L.DK<>null & DK_L.DK().N().MD<>null & DK_L.DK().N().MD().PAL='T' & DK_L.PAL=null
|| FUN.info('Należy podać nową paletę.'@); _res:='KODPAL'
|? DK_L.DK<>null & DK_L.DK().PLUS='N' & DK_L.DK().N().MAG().SL='T' & DK_L.DK().N().MAG().PAL='N'
  & DK_L.M().RODZ='T' & exec('get','#params',600200,2)='T'
|| _res:={? ~exec('sprilwym','magdok_poz',1) || 'IL' || '' ?}
?};
{? _res='' || exec('reoIL2','magdok_wymiary') ?};
_res


\obs_dklk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: po obsludze dla dokumentow relokalizacji
::  OLD: \obs_dklk/ean.fml
::----------------------------------------------------------------------------------------------------------------------
EANL.win_edit('RED'+{? ST.MAG().MWS='T' || 'MWS' || '' ?});
EANL.win_patt('RED');
{? DK.size()
|| _czy_akc:=DK.N().Z='T' | (';ZT'*DK.N().STAT_REJ)>1;
   _ref:=DK_L.ref();
   DK_L.index('DKAUTO');
   {? _czy_akc
   || DK_L.prefix(DK.ref(),null)
   || DK_L.prefix(DK.ref(),null,0)
   ?};
   {? _czy_akc | DK.M().RODZ<>'T' | KHVZ.WIDOKI
   || DK_L.actions('WER','dup:d',,1)
   |? DK.N().MAG().PAL='T'
   || DK_L.actions('WER','d:d',,1)
   || DK_L.actions('WER','',,1)
   ?};
   exec('rek_dk_l','magdok_poz')
|| DK_L.index('NULL');
   DK_L.prefix(null,null,null);
   DK_L.actions('WER','d:d',,1);
   EANX.ILP:=0;
   EANX.ILJ:=0
?};
grp_disp(DK_L,'WER');
{? ';WERLR;WERR;WERUR;'*(';'+DK.win_sel('?')+';')
 | (exec('get_par','#parametr',141)='T' & exec('get','#params',540101,2,null())='T')
|| exec('badp_sel','statexam')
?}


\oblkodid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: formula do przypisania lub zamiany kodu ID
::  OLD: \oblkodid/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.M<>null
|| {? DK.M().IDMOB='N'
   || FUN.info('Indeks materiałowy bez identyfikacji dostaw.\nPrzypisanie kodu niemożliwe.'@)
   |? DK.M().IDMOB='A' & DK.DK_C<>null & DK.SCEAN<>''
   || FUN.info('Podano Cechę dostawy z kodem identyfikacyjnym.\nZmiana kodu niemożliwa.'@)
   |? DK.M().IDMOB='P' & DK.PARTIA<>null & DK.PARTIA().SCEAN<>''
   || FUN.info('Podano Partię produkcyjną z kodem identyfikacyjnym.\nZmiana kodu niemożliwa.'@)
   |? DK.M().IDMOB='Z' & DK.ZL<>null & DK.ZL().SCEAN<>''
   || FUN.info('Podano Zlecenie z kodem identyfikacyjnym.\nZmiana kodu niemożliwa.'@)
   || _umob:=exec('czyurmob','magdok_wspolne');
      {? ~_umob | FUN.ask('Dokument został przesłany z operacji wykonanej na urządzeniu mobilnym.\n'
                         'Przypisanie innego kodu identyfikacyjnego skutkuję usunięciem poprzedniego.\n'
                         'Należy ponownie okleić daną dostawę w magazynie nowymi kodami identyfikacyjnymi.\n\n'
                         'Czy wyświetlić listę nieprzypisanych kodów kreskowych?'@)
      || exec('addscean','kody_kresk',DK.N().MAG,DK.M)
      ?}
   ?}
|| FUN.info('Nie podano indeksu materiałowego.\nPrzypisanie kodu niemożliwe.'@)
?};
''


\newkodid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: nowy kod identyfikacji
::  OLD: \newkodid/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.M<>null
|| {? DK.M().IDMOB='N'
   || FUN.info('Indeks materiałowy bez identyfikacji dostaw.\nPrzypisanie kodu niemożliwe.'@)
   |? DK.M().IDMOB='A' & DK.DK_C<>null & DK.SCEAN<>''
   || FUN.info('Podano Cechę dostawy z kodem identyfikacyjnym.\nZmiana kodu niemożliwa.'@)
   |? DK.M().IDMOB='P' & DK.PARTIA<>null & DK.PARTIA().SCEAN<>''
   || FUN.info('Podano Partię produkcyjną z kodem identyfikacyjnym.\nZmiana kodu niemożliwa.'@)
   |? DK.M().IDMOB='Z' & DK.ZL<>null & DK.ZL().SCEAN<>''
   || FUN.info('Podano Zlecenie z kodem identyfikacyjnym.\nZmiana kodu niemożliwa.'@)
   || _umob:=exec('czyurmob','magdok_wspolne');

      {? FUN.ask({? _umob
                 || 'Dokument został przesłany z operacji wykonanej na urządzeniu mobilnym.\n'
                   'Przypisanie nowego kodu identyfikacyjnego skutkuję usunięciem poprzedniego.\n'
                   'Należy ponownie okleić daną dostawę w magazynie nowymi kodami identyfikacyjnymi.\n\n'
                   'Czy wygenerować nowy kod kreskowy dla dostawy?'@
                 || 'Czy wygenerować nowy kod kreskowy dla dostawy?'@
                 ?})
      || _rsql:={? HELP.POP || $DK.ref() || $ND.ref() ?};
         _scean:=exec('mkodkKODK','kody_kresk',DK.M);
         exec('mkodkadd','kody_kresk',DK.M,_scean,_rsql);
         DK.SCEAN:=_scean
      ?}
   ?}
|| FUN.info('Nie podano indeksu materiałowego.\nPrzypisanie kodu niemożliwe.'@)
?};
''


\zparn_zgh_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Blank pola zmiennej ATR.ZPAR_ZGH
::  OLD: \zparn_zgh_bl/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
~~


\zparn_zgh_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Przed wyswietl pola zmiennej ATR.ZPAR_ZGH
::  OLD: \zparn_zgh_bd/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
{? exec('zparn_zgh_be','magdok_poz')=0
|| _result:=exec('findfnv','#color')
?};
_result


\zparn_zgh_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Po redakcji pola zmiennej ATR.ZPAR_ZGH
::   WY: 0/1
::  OLD: \zparn_zgh_ae/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

:: Prefiksuje partie
ATR.ZGH:=ATR.ZPAR_ZGH;

:: Jesli wskazana partia na dokumencie RW ma inny przewodnik niz aktualnie wybrany to podpowiadam pierwsza partie
{? ATR.ZPAR_ZGH<>null() & (exec('nd_is_rw','magdok_wspolne',DK.N)>0 | exec('nd_is_zw','magdok_wspolne',DK.N)>0)
|| {? ATR.ZPARN_RW().ZGH<>ATR.ZPAR_ZGH
   || ZPARN.cntx_psh();
      ZPARN.index('ZGH');
      ZPARN.prefix(ATR.ZPAR_ZGH);
      {? ZPARN.first()
      || ATR.ZPARN_RW:=ZPARN.ref()
      ?};
      ZPARN.cntx_pop();
      ~~
   ?}
||
:: Jezeli przewodnik pusty to usuwam tez partie
   ATR.ZPARN_RW:=null()
?};

:: Jesli wskazana partia na dokumencie RP ma inny przewodnik niz aktualnie wybrany to podpowiadam pierwsza partie
{? ATR.ZPAR_ZGH<>null() & (exec('nd_is_rw','magdok_wspolne',DK.N)=0 | exec('nd_is_zw','magdok_wspolne',DK.N)>0)
||
   {? ATR.ZPARN_DK().ZGH<>ATR.ZPAR_ZGH
   || ZPARN.cntx_psh();
      {? exec('nd_is_rp','magdok_wspolne',DK.N)>0 & exec('zl_czy_wyr','zl_wyr',DK.ZL)>0
      || ZPARN.index('ZGH3');
         ZPARN.prefix(DK.ZL,ATR.ZPAR_ZGH,DK.M)
      || ZPARN.index('ZGH');
         ZPARN.prefix(ATR.ZPAR_ZGH)
      ?};
      {? ZPARN.first()
      || ATR.ZPARN_DK:=ZPARN.ref()
      ?};
      ZPARN.cntx_pop();
      ~~
   ?}
||
:: Jezeli przewodnik pusty to usuwam tez partie
   ATR.ZPARN_DK:=null()
?};
exec('zparn_var_ae','magdok_poz');

:: Przepisuje przewodnik na pozycję dokumentu
DK.ZGH:=ATR.ZPAR_ZGH;
_result


\zparn_var_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Blank pola zmiennej ATR.ZPARN_DK
::   WE:
::   WY:
::  OLD: \zparn_var_bl/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
~~


\zparn_var_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Przed wyswietleniem pola zmiennej ATR.ZPARN_DK
::   WE:
::   WY:
::  OLD: \zparn_var_bd/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
~~


\zparn_var_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Przed redakcja pola zmiennej ATR.ZPARN_DK
::   WY: 0 / 1
::  OLD: \zparn_var_be/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? DK.ZL<>null & DK.ZL().RODZAJ<>'N'
||
:: sprawdzam czy redagowana pozycja dokumentu kooperacji
   {? exec('nd_is_koop','magdok_wspolne',DK.N)
   ||

::    Sprawdzam czy pole z partią musi być wypełnione
      _result:=exec('party_req','zl_wyk',DK.ZL);
      _prod_zl:=exec('party_first','zl_link',DK.ZL)
   ||
::    sprawdzam czy redagowana pozycja dokumentu RP i można generować RP dla wybranego (pod)zlecenia
      {? ((' '+exec('get','#params',500701,2,null()))*(' '+DK.N().TYP().T+' '))>0 & DK.ZL().RP='T'
      ||
::       Zwracam (pod)zlecenie, na który wystawiany jest RP
         _prod_zl:=DK.ZL
      ||
::       Zwracam zlecenie na ktorym powstaje produkt
         _prod_zl:=exec('main_podzlec','zl_link',DK.ZL)
      ?};
::    Sprawdzam czy zlecenie jest zleceniem partiowanym
      _result:=exec('zlec_party','zl_common',_prod_zl)
   ?};

   {? _result>0
   ||
::    Ustawiam okno słownika w ZPARN
      ZPARN.win_dict('SLO');
      ZPARN.actions('SLO','W:W');

::    ATR.ZL i ATR.ZGH sluzy do niejawnego prefiksowania slownika partii
      ATR.ZL:=_prod_zl;
      {? _prod_zl=DK.ZL
      ||
::       Jesli zlecenie na ktorym powstaje produkt i zlecenie ktore jest na DK to
::       prefiksuje lepiej partie. Moge to zrobic tylko w tym wypadku, poniewaz sa takie sytuacje
         ATR.ZGH:=ATR.ZPAR_ZGH
      || ATR.ZGH:=null()
      ?};
      ~~
   ?}
?};
_result


\zparn_var_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Po redakcji pola zmiennej ATR.ZPARN_DK
::   WE:
::   WY:
::  OLD: \zparn_var_ae/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
ATR.ZL:=null();

:: sprawdzam czy redagowana pozycja dokumentu kooperacji
{? exec('nd_is_koop','magdok_wspolne',DK.N)
||
   ATR.ZGH:=null();
   ZPARN.actions('SLO')
||
:: Jesli partia na dokumencie RP rozna niz partia w DK_C to czyszcze ceche
   M_ATR.cntx_psh();
   _edit:=ATR.M_ATR().EDIT;
   M_ATR.cntx_pop();
   {? ATR.ZPARN_DK<>null() & ~_edit
   || DK_C.cntx_psh();
      {? DK.DK_C().ZPARN<>ATR.ZPARN_DK
      || DK.DK_C:=null()
      ?};
      DK_C.cntx_pop()
   |? _edit
   || DK_C.cntx_psh();
      {? DK.DK_C().ZPARN<>ATR.ZPARN_DK
      || DK.DK_C:=null()
      ?};
      DK_C.cntx_pop();
      _i:=1;
      {!
      |? {? ($('ATR.M_ATR().SL_'+form(_i,-2,,'99')+'().TYP'))()='P'
         || ($('ATR.WAR'+form(_i,-2,,'99')))():=ATR.ZPARN_DK().SYM;
            {? DK.PLUS='T' & ';key:F2;~~;'*exec('akcepatr','mat_atr',0)>1 || exec('ae_dk_ce','mat_atr') ?};
            0
         || _i+=1;
            _i<=10
         ?}
      !}
   ?};
   {? ATR.ZPARN_DK<>null()
   || {? exec('nd_is_rp','magdok_wspolne',DK.N)>0 & exec('zl_czy_wyr','zl_wyr',DK.ZL)>0
      || DK.M:=ZPARN.KTM;
         D_HELP.M:=ZPARN.KTM().KTM;
         POMOC.MGR:=ZPARN.KTM().MGR
      ?};
      {? DK.M().IDMOB='P' & DK.PLUS='T' || DK.SCEAN:=ATR.ZPARN_DK().SCEAN ?};
      {? DK.M().IDMOB='D' & DK.M().IDZP & DK.PLUS='T' || DK.SCEAN:=ATR.ZPARN_DK().ZPEAN ?};
      DK.ZGH:=ATR.ZGH:=ATR.ZPAR_ZGH:=ATR.ZPARN_DK().ZGH
   || {? DK.M().IDMOB='P' & DK.PLUS='T' || DK.SCEAN:='' ?}
   ?}
?};
~~


\zl_p_wys1
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Przed wyswietleniem pola zlecenie - dla pola ZMSLAPP.ZL1.
::   WY: ~~
::  OLD: \zl_p_wys1/zlecenia.fml
::----------------------------------------------------------------------------------------------------------------------
ZMSLAPP.ZL1:='';

{? DK.ZL<>null()
|| {? DK.ZL().NRNZL<>0
   || DK.ZL();ZMSLAPP.ZL1:=exec('nrnzl','zl_head',ZL.NRNZL)
   || DK.ZL();ZMSLAPP.ZL1:=ZL.SYM
   ?};
   {? DK.M=null() & DK.N().TYP().WYR='T'
   || DK.M:=ZL.KTM;
      D_HELP.M:=ZL.KTM().KTM;
      POMOC.MGR:=ZL.KTM().MGR
   ?};
   {? ((DK.N().MAG().TYP*'EWI') & (DK.N().TYP().WYR='T' & DK.N().TYP().P='T')) & 1+(-menu_txt)<>'p'
   || exec('_chk_pdp','zl_common',DK.M,ND.MAG,DK.N().D,ZL.ref());
      DPOZ.OCZ:=DK.C:=DK.C $DK.M().DOKL_C;
      DK.WAR:=(DK.IL*DK.C)$2
   |? (cur_kwin()+4)<>'disp' & DK.N().TYP().WYR='T' & DK.N().TYP().P='T' & DK.C=0
   || exec('_chk_pdp','zl_common',DK.M,ND.MAG,DK.N().D,ZL.ref());
      DK.WAR:=(DK.IL*DK.C)$2
   ?};
   DK.ZL:=ZL.ref()
?};
~~


\zl_po_re1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.60] (wycena rozdzielni)
:: OPIS: po redakcji pola zlecenia na DK,
::       dodatkowo automatyczna podpowiedz wyrobu ze zlecenia
::       i jeszcze wpisanie ceny wyrobu - tak jak po polu "wyrob",
::       ktore tu nieredagowalne
::   WE: kontekst pozycji dokumentu
::   WY: 0 / 1
::  OLD: \zl_po_re1/zlecenia.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:=0;
_prod:=exec('tte_lic','tte');
_sym:=DK.ZL().SYM;
_old:=DK.M;

{? ZMSLAPP.ZL1='' &  ND.TYP().ZLEC='T'
|| FUN.info('Proszę wypełnić pole.'@)
|? ZMSLAPP.ZL1<>''
|| ZL.cntx_psh();
   ZL.clear();
   ZL.index('SYM');
   _wynik:={? ((' '+exec('get','#params',500701,2,null()))*(' '+ND.TYP().T+' '))>0
           ||
::            Jeżeli dokument RP to możliwe podzlecenia, sprawdzany dodatkowo znacznik ZL.RP
              {? _prod='T'
              || ZL.find_tab(0,'SYM',,'=',_sym,'RP',,'=','T','HIDDEN',,'=','N','STAN',,'=','O')
              || ZL.find_tab(0,'SYM',,'=',_sym,'RP',,'=','T','HIDDEN',,'=','N','STAN',,'=','O'
                              ,'TYP','TYP','=','~ML')
              ?}
           || {? _prod='T'
              || ZL.find_tab(0,'SYM',,'=',ZMSLAPP.ZL1,'NRNZL',,'=',0,'HIDDEN',,'=','N','STAN',,'=','O')
              || ZL.find_tab(0,'SYM',,'=',ZMSLAPP.ZL1,'NRNZL',,'=',0,'HIDDEN',,'=','N','STAN',,'=','O'
                              ,'TYP','TYP','=','~ML')
              ?}
           ?};
   {? _wynik=0
   || FUN.emsg('Brak w słowniku otwartego zlecenia o podanym symbolu.'@)
   ||
      {? ND.TYP().ZLEC='T' & ND.TYP().WYR='T' & ZL.MG<>null() & ZL.MG<>ND.MAG
      || FUN.info('Magazyn wskazany w zleceniu (%1) różny od bieżącego magazynu.'@[ZL.MG().SYM]);
         _wynik:=0
      |?  ND.TYP().ZLEC='T' & ND.TYP().WYR='T' & exec('mag_allowed_rp','zl_limit',ZL.ref(),ND.MAG,1)=0
      || _wynik:=0
      |?  ND.TYP().ZLEC='T' & ND.TYP().WYR='N' & ND.TYP().P='N' & exec('mag_allowed_rw','zl_limit',ZL.ref(),ND.MAG,,1)=0
      || _wynik:=0
      |? ZL.OD>ND.D
      || FUN.emsg('Zlecenie powołane jest z datą późniejszą niż data dokumentu.'@);
         _wynik:=0
      |?
:         _sym*ZMSLAPP.ZL1<=0 |
:         DK.C=0
         1
      ||
::       Dla zlecenia zlozonego ze zleceniami zaleznymi dla dokumentu raportujacego produkt
::       ustawic pole DK.ZL wartoscia glownego podzlecenia
         {? ZL.RODZAJ='Z'
         ||
::          Jeżeli dokument RW i zlecenie się nie zmieniło to nie zmieniam pola ze zleceniem podrzędnym
            {? (exec('nd_is_rw','magdok_wspolne',ND.ref())>0 | exec('nd_is_zw','magdok_wspolne',DK.N)>0) & VAR1.ZL_BEF=DK.ZL
            || DK.ZL()
            || _mainzlec:=exec('main_podzlec','zl_link',ZL.ref());
               ZMSLAPP.ZL7:=exec('FindAndGet','#table',ZL,#_mainzlec,ref_name(_mainzlec),"SYM",'');
               DK.ZL:=exec('FindAndGet','#table',ZL,#_mainzlec,ref_name(_mainzlec),"ref()",null());
               DK.ZL()
            ?}
         ?};

         {? ZL.RODZAJ='P'
         || DK.ZL:=ZL.ref();
            {? DK.KK=null() || DK.KK:=ZL.KK ?};
            {? ND.TYP().WYR='T'
            || DK.M:=ZL.KTM;
               D_HELP.M:=ZL.KTM().KTM;
               {? DK.KK=null() || DK.KK:=ZL.KK ?};
               {? DK.DK_C=null()
               || DK.DK_C:=ZL.DK_C;
                  {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():=($('DK.DK_C().WAR'+form(_i,-2,,'99')))() !}
               ?};
               DK.WYD:=ZL.JORG;
               {? VAR1.ZL_BEF<>DK.ZL & VAR1.ZL_BEF<>null()
               || ATR.ZPAR_ZGH:=DK.ZGH:=null();
                  ATR.ZPARN_DK:=DK.PARTIA:=null()
               ?}
            |? ND.TYP().ZLEC='T'
            || {? DK.WYD=null() || DK.WYD:=ZL.JORG ?}
            ?};
            _wynik:=exec('_chk_pdp','zl_common',DK.M,ND.MAG,ND.D,ZL.ref())
         || DK.ZL:=ZL.ref();
            {? DK.KK=null() || DK.KK:=ZL.KK ?}
         ?}
      ?}
   ?};
   {? _wynik>0 & exec('nd_is_rp','magdok_wspolne',DK.N)>0
   ||
      {? VAR1.ZL_BEF<>DK.ZL & VAR1.ZL_BEF<>null()
      ||
::       Jezeli zlecenie sie zmienilo na dokumencie RP, to czyszcze pole z cechą
         DK.DK_C:=null();
         ATR.M_ATR:=null()
      ?}
   ?};

   {? _wynik>0 & (exec('nd_is_rw','magdok_wspolne',DK.N)>0 | exec('nd_is_zw','magdok_wspolne',DK.N)>0)
   ||
      {? VAR1.ZL_BEF<>DK.ZL & VAR1.ZL_BEF<>null()
      ||
::       Jezeli zlecenie sie zmienilo, to czyszcze pole z limitem i indeksem, przewodnikiem
         DK.ZLIM:=null();
         DK.M_ZLIM:='';
         DK.M:=null()
      |? _prod='T'
      ||
::       Jezeli indeks nie wystepuje w limitach, to czyszcze pole z indeksem
         exec('openmask','zl_common',DK.ZL);
         _top_level:=exec('top_level','zl_link',DK.ZL);
         _genlim_top:=exec('FindAndGet','#table',ZL,#_top_level,ref_name(_top_level),"GENLIM",'');
         {? DK.ZL().NRNZL<>0 & _genlim_top='N'
         || _zljoin:='(ZLIM.ZLDOD,ZL.REFERENCE)'
         || _zljoin:='(ZLIM.ZLEC,ZL.REFERENCE)'
         ?};
         _tab:=sql('
            select
               M.KTM
            from ZL
            join ZLIM using'+_zljoin +' join M using(ZLIM.KTM,M.REFERENCE)
            where
               M.KTM like '':_c%'' and
               (ZLIM.LIMIT=''T'' and ZLIM.AKC=''T'' or ZLIM.LIMIT=''N'') and
               ZL.REFERENCE=:_a and
               ZLIM.KOR=0 and
               ZLIM.SO='':_b''
         ',DK.ZL,{? exec('get','#params',500705,2,null())*(ND.TYP().T+' ')>0 || 'O' || 'S' ?},D_HELP.M);
         {? ~_tab.first()
         || DK.M:=null()
         ?}
      ?}
   ?};

   ZL.cntx_pop()
|| _wynik:=1
?};
{? _wynik
|| {? (1+ND.MAG().TYP)='D' & DK.PLUS='T' & DK.M().IDMOB='Z'
   || {? DK.ZL<>null() || DK.SCEAN:=DK.ZL().SCEAN || DK.SCEAN:='' ?}
   ?}
?};
{? DK.M<>null() & DK.M<>_old
|| DK.T2:='N'; DK.WS2:=0; DK.IL2:=0;
   exec('ustawprz','magdok_poz',DK.M,DK.M().J);
   exec('aktmil2','magdok_poz')
?};
exec('set_efld_btn','magdok_poz');
win_disp();
_wynik


\zl_po_re3
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: po redakcji pola zlecenia podrzednego na PDP,
::       dodatkowo automatyczna podpowiedz wyrobu ze zlecenia
::       i jeszcze wpisanie ceny wyrobu - tak jak po polu "wyrob",
::       ktore tu nieredagowalne
::   WE: kontekst pozycji dokumentu
::   WY: 0 / 1
::  OLD: \zl_po_re3/zlecenia.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:=0;
{? ZMSLAPP.ZL7=''
|| {? DK.ZL().GENLIM='N'
   || _wynik:=1
   || FUN.emsg('Proszę wypełnić pole.'@);
      _wynik:=0
   ?}
|| ZL.cntx_psh();
   ZL.clear();
   ZL.index('SYM');
   _wynik:=ZL.find_tab(0,'SYM',,'=',ZMSLAPP.ZL7,'NRNZL',,'<>',0);
   {? _wynik=0
   || FUN.emsg('Niepoprawny symbol zlecenia.'@)
   || DK.ZL:=ZL.ref();
      {? ND.TYP().WYR='T'
      || DK.M:=ZL.KTM;
         D_HELP.M:=ZL.KTM().KTM;
         {? DK.KK=null() || DK.KK:=ZL.KK ?};
         DK.WYD:=ZL.JORG
      |? ND.TYP().ZLEC='T'
      || {? DK.WYD=null() || DK.WYD:=ZL.JORG ?}
      ?};
::    Jezeli zlecenie podrzędne sie zmienilo na dokumencie RW, to czyszcze pole z przewodnikiem i partią
      {? (exec('nd_is_rw','magdok_wspolne',ND.ref())>0 | exec('nd_is_zw','magdok_wspolne',DK.N)>0) & VAR1.ZLP_BEF<>DK.ZL & VAR1.ZLP_BEF<>null()
      || ATR.ZPAR_ZGH:=DK.ZGH:=null();
         ATR.ZPARN_RW:=DK.PARTIA:=null()
      ?};
      _wynik:=exec('_chk_pdp','zl_common',DK.M,ND.MAG,ND.D,ZL.ref())
   ?};
   ZL.cntx_pop()
?};
win_disp();
_wynik


\pw_m_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyswietleniem DK.M na popraw
::  OLD: \pw_m_dk/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_czy_akc:=DK.N().Z='T' | (';ZT'*DK.N().STAT_REJ)>1;
{? _czy_akc
|| exec('findfnrd','color')
|| ''
?}


\pw_zm_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wysiwetleniem
::  OLD: \pw_zm_il/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.N().MAG().PAL='N'
|| ''
|| exec('findfnv','#color')
?}


\be_zm_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: blokada pol do edycji
::  OLD: \be_zm_il/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? DK.N().MAG().PAL='N' & exec('has_zlgd_dk','magdok_wspolne',DK.ref())=0
|| _result:=1
?};

:: Sprawdzenie czy dokument RP jest powiązany z innymi dokumentami dotyczącymi zlecenia
:: (rozliczeniem surowców nielimitowanych, odpadów, ...)
{? exec('dk_is_rp','magdok_wspolne',DK.ref())>0
|| {? exec('top_rodzaj','zl_link',DK.ZL)='P'
   || _top:=exec('top_level','zl_link',DK.ZL)
   || _top:=DK.ZL
   ?};

   {? exec('find_p_dk','zl_limit',$ND.ref(),_top,'')
   || _result:=0
   ?}
?};

{? ND.TYP().KOOP='T'
|| _result:=0
?};
{? _result & DK.N().MAG().SL='T' & (1+DK.N().MAG().TYP)='D' & ZMIENNE.M().IDMOB='D' & ZMIENNE.M().SETW='P'
|| _result:=0
?};
_result


\ae_zm_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: formula po redakcji pola ZMIENNE.IL
::   WY: 1/0 czy zakonoczyc redakcje pola
::  OLD: \ae_zm_il/magzyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_dokl_m:=0;
{? ZMIENNE.M<>null
|| _dokl_m:=exec('jaka_dok_m','jm',ZMIENNE.M);
   ZMIENNE.IL:=ZMIENNE.IL$_dokl_m;
   ZMIENNE.WAR:=(ZMIENNE.IL*ZMIENNE.C)$2;
   {? ZMIENNE.IL<>DK.IL | ZMIENNE.WAR<>DK.WAR
   || {? exec('nd_kpw_reg','magdok_nag','PR')=1 & FUN.ask('Przeliczyć wartości do Intrastat?'@)
      || exec('ist_wart_dk','magdok_poz',0,ZMIENNE.IL,ZMIENNE.WAR)
      ?};
     {? ZMIENNE.IL<>DK.IL
     ||
        _msg:='';
         SM.index('SM');
         SM.prefix(ST.MAG);
         {? SM.find_key(DK.M) || _il:=SM.S || _il:=0 ?};
        _il+=ZMIENNE.IL-DK.IL;
        _msg+=exec('minimax','magazyn_stan',DK.PLUS='T',ST.MAG,DK.M,_il);
        {? +_msg
        || FUN.info(_msg)
        ?}
     ?}
   ?}
?};
win_disp();
{? _wyn || _wyn:=exec('poxjm','magdok_wspolne') ?};
_wyn


\be_zm_c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: przed redakcja pola ZMIENNE.c
::  OLD: \be_zm_c/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__blkcen')>0 & __blkcen
|| 0
|? ND.Z='T' & ND.TYP().P='T' & ND.TYP().DN='T' & DK.RDK=#DK.ref
|| ND.WAL=INFO.NAROD
|? ND.Z='T' & ND.TYP().P='T' & ND.TYP().DN='N'
|| ND.WAL=INFO.NAROD
|? ND.Z='N'
|| ND.WAL=INFO.NAROD
|| 0
?}


\zm_f3cen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: akcja F3 dla ZMIENNE.C
::   WY: cena wybrana z tabeli lub cena z pola
::  OLD: \zm_f3cen/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
:: wylaczenie pol rabatowych w cenniku
TAZ.RABOFF:=1;
exec('f3_zdcen','ceny_mat',ZMIENNE.M,ND.KH,ZMIENNE.C,,'ZMIENNE');
TAZ.RABOFF:=0;
''


\ae_zm_c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: formula po redakcji pola ZMIENNE.C
::  OLD: \ae_zm_c/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
ZMIENNE.C:=ZMIENNE.C $ ZMIENNE.M().DOKL_C;
ZMIENNE.WAR:=(ZMIENNE.IL*ZMIENNE.C)$2;
{? ZMIENNE.IL<>DK.IL | ZMIENNE.WAR<>DK.WAR
|| {? exec('nd_kpw_reg','magdok_nag','PR')=1 & FUN.ask('Przeliczyć wartości do Intrastat?'@)
   || exec('ist_wart_dk','magdok_poz',0,ZMIENNE.IL,ZMIENNE.WAR)
   ?}
?};
_wyn


\f3_zmcw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: F3 dla ceny walutowej ZMIENNE.CWAL
::  OLD: \f3_zmcw/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? BEER.SZ='S'
:: cena walutowa sprzedazy na dokumentach rozhcodowych
|| exec('f3_zmcwal','magdok_poz','s')
:: cena walutowa magazynowa na dokumentach przychodowych
|| exec('f3_zmcwal','magdok_poz','d')
?};
''


\f3_zmcwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: F3 dla ceny walutowej ZMIENNE.CWAL
::   WE: _a - rodzaj cennika
::  OLD: \f3_zmcwal/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
exec('st_licz_wz','ceny','ND1');
exec('stplicz','ceny',{? DK.J2 || DK.IL2 || DK.IL ?});
{? _a='s'
:: sprzedaz
|| KALK.JM:=DK.M().J; KALK.J2:=DK.J2; KALK.WS2:=DK.WS2;
   exec('ceny_mat','ceny_mat',DK.M,DK.N().KH,'DK.CWAL',ND.KH_ODB,ST.MAG,'DK.RAB','T',DK.WAL,'DK.CWAL'
      ,DK.KURS,DK.N().CB='T',{? DK.J2<>null || DK.J2().KOD || '' ?},{? DK.J2<>null || DK.WS2 || 0 ?},1,,,,DK.SV)
:: dostawa
|| TAZ.RABOFF:=1;
   KALK.JM:=KALK.J2:=DK.M().J; KALK.WS2:=1;
   exec('f3_zdcen','ceny_mat',DK.M,DK.N().KH,DK.CWAL,,'DK',DK.WAL,ST.MAG);
   TAZ.RABOFF:=0
?}


\zmienne_dtk_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: Przed wyswietleniem ZMIENNE.DTK
::  OLD: \zmienne_dtk_bd/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('pr_dtk','eurusd')
|| ''
|? ZMIENNE.SWAL=1
|| exec('findfnrd','color')
|| exec('findfnv','#color')
?}


\pwzmeanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed wyswietleniem ZMIENNE.EANL
::  OLD: \pwzmeanl/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.N().MAG().PAL='N' & DK.N().MAG().SL='T'
|| _dokl_m:=exec('jaka_dok_m','jm',DK.M);
   _sum:=0;
   DK_L.cntx_psh();
   DK_L.index('DK');
   DK_L.prefix(DK.ref(),null);
   {? DK_L.first() || {! |? _sum+=DK_L.IL $ _dokl_m; DK_L.next() !} ?};
   DK_L.cntx_pop()
|| _sum:=DK.IL
?};
{? DK.N().MAG().PAL='T' | DK.N().MAG().SL<>'T' | (_sum=ZMIENNE.IL & DK.FAP='')
|| exec('findfnv','#color')
|| _dokl_m:=exec('jaka_dok_m','jm',DK.M);
   _sum:=0;
   DK_L.cntx_psh();
   DK_L.index('DK');
   DK_L.prefix(DK.ref(),null);
   {? DK_L.first() || {! |? _sum+=DK_L.IL $ _dokl_m; DK_L.next() !} ?};
   DK_L.cntx_pop();
   ZMIENNE.EANL:={? ZMIENNE.IL=_sum
                 || {? DK.FAP=''
                    || 'ROZPISANO NOWĄ ILOŚĆ.'
                    || 'MOŻLIWA ZMIANA WYMIARÓW.'
                    ?}
                 || 'WYMAGANE ROZPISANIE ILOŚCI: '+form(ZMIENNE.IL-_sum,,_dokl_m,'99')+'.'
                 ?};
   1
?}


\przmeanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed redakcja pola ZMIENNE.EANL
::   WY: 0/1
::  OLD: \przmeanl/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? DK.N().MAG().SL='T' & DK.N().MAG().PAL='N'
|| _dokl_m:=exec('jaka_dok_m','jm',DK.M);
   _sum:=0;
   DK_L.cntx_psh();
   DK_L.index('DK');
   DK_L.prefix(DK.ref(),null);
   {? DK_L.first() || {! |? _sum+=DK_L.IL $ _dokl_m; DK_L.next() !} ?};
   DK_L.cntx_pop()
|| _sum:=DK.IL
?};
{? DK.N().MAG().PAL='N' & ~(DK.N().MAG().SL<>'T' | (_sum=ZMIENNE.IL & DK.FAP=''))
|| exec('f3zmeanl','magdok_poz');
   0
|| 0
?}


\f3zmeanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: klawisz F3 pola ZMIENNE.EANL
::  OLD: \f3zmeanl/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__pdkdkl');
__pdkdkl:=1;
exec('buf_2dkl','magdok_poz',DK.ref());
_dokl_m:=exec('jaka_dok_m','jm',DK.M);
DK_L.index('DK');
DK_L.prefix(DK.ref(),null);
DK_L.win_sel('SLO');
{? DK_L.select(,1,,'uU')
|| _sum:=0;
   DK_L.cntx_psh();
   DK_L.index('DK');
   DK_L.prefix(DK.ref(),null);
   {? DK_L.first() || {! |? _sum+=DK_L.IL $ _dokl_m; DK_L.next() !} ?};
   DK_L.cntx_pop();
   ZMIENNE.EANL:={? ZMIENNE.IL=_sum
                 || {? DK.FAP=''
                    || 'ROZPISANO NOWĄ ILOŚĆ.'
                    || 'MOŻLIWA ZMIANA WYMIARÓW.'
                    ?}
                 || 'WYMAGANE ROZPISANIE ILOŚCI: '+form(ZMIENNE.IL-_sum,,_dokl_m,'99')+'.'
                 ?};
   VAR_DEL.delete('__dk2l');
   1
|| exec('unbu2dkl','magdok_poz',DK.ref())
?};
VAR_DEL.delete('__pdkdkl');
~~


\buf_2dkl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: zapamietuje informacje o poprzednich DK_L-ach
::   WE: _a - ref DK
::  OLD: \buf_2dkl/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__dk2l');
__dk2l:=tab_tmp(1,'DK_L','STRING[16]',''
         ,'EANL','STRING[16]',''
         ,'TW','DATE',''
         ,'PAL','STRING[16]',''
         ,'IL','REAL',''
         ,'SCEAN','STRING[128]',''
         ,'SCSQL','STRING[30]','');
DK_L.index('DK');
DK_L.prefix(_a,null);
{? DK_L.first()
|| {!
   |? __dk2l.clear();
      __dk2l.blank();
      __dk2l.DK_L:=$DK_L.ref();
      __dk2l.EANL:=$DK_L.LOK;
      __dk2l.TW:=DK_L.TW;
      __dk2l.PAL:=$DK_L.PAL;
      __dk2l.IL:=DK_L.IL;
      __dk2l.SCEAN:=DK_L.SCEAN;
      __dk2l.SCSQL:=DK_L.SCSQL;
      __dk2l.add(1);
      DK_L.next()
   !}
?}


\unbu2dkl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: odzyskuje informacje o poprzednich DK_L-ach
::   WE: _a - ref DK
::  OLD: \unbu2dkl/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
DK_L.index('DK');
DK_L.prefix(_a,null);
{? DK_L.first()
|| {? __dk2l.size()
   || {!
      |? _ref:=DK_L.ref();
         _ok:=DK_L.next();
         DK_L.cntx_psh();
         DK_L.clear();
         {? DK_L.seek(_ref)
         || __dk2l.clear();
            {? __dk2l.find_key($DK_L.ref())
            || DK_L.LOK:=exec('FindAndGet','#table',EANL,__dk2l.EANL,,,null());
               DK_L.TW:=__dk2l.TW;
               DK_L.PAL:=exec('FindAndGet','#table',PAL,__dk2l.PAL,,,null());
               DK_L.IL:=__dk2l.IL;
               DK_L.SCEAN:=__dk2l.SCEAN;
               DK_L.SCSQL:=__dk2l.SCSQL;
               DK_L.put(1)
            || DK_L.del()
            ?}
         ?};
         DK_L.cntx_pop();
         _ok
      !}
   || {! |? DK_L.del() !}
   ?}
?};
VAR_DEL.delete('__dk2l')


\dk_szuk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: akcja przed szukaj dla okien tabeli DK
::  OLD: \dk_szuk/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh();
MG.cntx_psh();
JM.f_clear();
JM.win_dict('WER');
DK.win_patt('WZOR');
DK_C.win_patt('SZUKA');
DK_C.win_dict('WER');
DK_C.actions('WER','DuP:D');
M.win_dict('SLO_M');
ND.cntx_pop();
MG.cntx_pop();
1


\set_efld_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: włącza/wyłącza klawisze na pozycji dokumentu
::----------------------------------------------------------------------------------------------------------------------
_win_akr:=exec('dk_win_edit','magdok_poz');
_czy_wyda:=(';WR'*(1+_win_akr))>1;
_czy_inf:=(';WREDN;RREDN;'*';%1;'[_win_akr])>0;
{? ND.TYP().UPRW<>'T'
||
  {? (1+DK.N().MAG().TYP)='D' & DK.M<>null & DK.M().M_ATR<>null
  || {? _czy_inf
     || DK.btn_eopt(_win_akr,'INF','state=normal')
     || DK.btn_eopt(_win_akr,'ATRYB','state=normal')
     ?}
  || {? _czy_inf
     || DK.btn_eopt(_win_akr,'INF','state=grayed')
     || DK.btn_eopt(_win_akr,'ATRYB','state=grayed')
     ?}
  ?};
   {? ~_czy_wyda
   || {? DK.PLUS='T' & (1+DK.N().MAG().TYP)='D' & DK.N().MAG().PAL<>'T' & DK.M<>null
       & (';D'*DK.M().IDMOB)>1 & ~exec('czyurmob','magdok_wspolne')
      || DK.btn_eopt(_win_akr,'KODID','state=normal');
         DK.btn_eopt(_win_akr,'NEWID','state=normal')
      || DK.btn_eopt(_win_akr,'KODID','state=grayed');
         DK.btn_eopt(_win_akr,'NEWID','state=grayed')
      ?}
   ?}
|| {? ~_czy_wyda
   || DK.btn_eopt(_win_akr,'KODID','state=grayed');
      DK.btn_eopt(_win_akr,'NEWID','state=grayed')
   ?}
?};
~~


\zmienne_dk_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: ustawienie okienka redakcji dla pozycji dokumentu magazynowego
::   WE: [_a] - 1-tylko korekta atrybutów dostawy 0(domyślnie)-nie
::   WY: akronim okna
::----------------------------------------------------------------------------------------------------------------------
_zmatr:={? var_pres('_a')=type_of(0) || _a || 0?};
_only:=DK.N().MAG().IL='T';
_tw:=DK.N().MAG().SL='N' & DK.M().SETW='P';
_czytw:=DK.M().CZY_TW='T';
:: Tymczasowe okno redakcji
_title:='Modyfikacja pozycji dokumentu';
_win_red:=ZMIENNE.mk_edit(_title);
{? ~_zmatr | ~ATR.MOD
|| ZMIENNE.win_etab(_win_red,'Dane podstawowe'@);
   ZMIENNE.win_ewin(_win_red,,'DKW');
   {? ATR.MOD
   || ZMIENNE.win_etab(_win_red,'Dane dostawy'@);
      ZMIENNE.win_ewin(_win_red,,'ATR')
   ?};
   {? ~_only
   || ZMIENNE.win_etab(_win_red,'Dane do Intrastat'@);
      ZMIENNE.win_ewin(_win_red,,'INTRA')
   ?};

   _end:={? DK.WAL=INFO.NAROD | _only || 'enable=0' || 'enable=1' ?};
   ZMIENNE.efld_opt(_win_red,_end,,'CWAL');
   ZMIENNE.efld_opt(_win_red,_end,,'KRS');
   ZMIENNE.efld_opt(_win_red,_end,,'DTK');
   ZMIENNE.efld_opt(_win_red,'enable=0',DK,'IDKH');
   ZMIENNE.efld_opt(_win_red,{? _only || 'enable=0' || 'enable=1' ?},,'C');
   ZMIENNE.efld_opt(_win_red,{? _only || 'enable=0' || 'enable=1' ?},,'WAR');
   ZMIENNE.efld_opt(_win_red,{? _tw & _czytw || 'mark=1' || 'mark=0' ?},,'TW');
   ZMIENNE.efld_opt(_win_red,{? _tw || 'enable=1' || 'enable=0' ?},,'TW');
   _enable:={? ZMIENNE.J2<>null() || 'enable=1' || 'enable=0' ?};
   ZMIENNE.efld_opt(_win_red,_enable,,'J2');
   ZMIENNE.efld_opt(_win_red,_enable,,'IL2');
   ZMIENNE.efld_opt(_win_red,_enable,,'WS2')
|| ZMIENNE.win_etab(_win_red,'Dane dostawy'@);
   ZMIENNE.win_ewin(_win_red,,'ATR')
?};
exec('ok_esc','#window',ZMIENNE,_win_red);
ZMIENNE.win_edit(_win_red);
~~


\obl_zwrot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: oblicza zwrot po danej dacie dla dostawy
::   WE: _a - ref dostawy DK
::       _b - name dostawy DK
::       _c - ref magazynu
::       _d - ref materialu
::       _e - data do sprawdzenia
::   WY: zwraca obliczona ilosc zwrotu dostawy
::  OLD: \obl_zwrot/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_rok:=_e~1;

ND.cntx_psh();
DK.cntx_psh();
OKR.cntx_psh();

OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.find_tab('first','ROK',,'>=',_rok)
|| {!
   |? ND.use('nagdo'+ST.ODDZ+($OKR.ROK+2));
      DK.use('dokma'+ST.ODDZ+($OKR.ROK+2));
      DK.index('DOST3');
      DK.prefix(_c,_d,_a,_b);
      {? DK.find_tab('first','PLUS',,'=','T','N','D','>',_e)
      || {!
         |? {? ~(DK.N().TYP().DK='T' & DK.N().TYP().Z='T') || _wyn+=DK.IL ?};
            DK.find_tab('next','PLUS',,'=','T','N','D','>',_e)
         !}
      ?};
      OKR.find_tab('next','ROK',,'>=',_rok)
   !}
?};

OKR.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();

_wyn


\akt_fifo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: aktualizuje dokument wg FIFO/LIFO dla bieżącego prefiksu na DK
::   WE: [_a] - gdy chcemy tylko dla podanego #DK.ref
::   WY: czy wszystko zostalo wydane 0 - wszystko <>0 nie wszystko (brakuje na stanie)
::  OLD: \akt_fifo/pommag.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

{? DK.last()
|| _pal:=tab_tmp(1,'PAL','STRING[16]','');
   {!
   |?
      {? DK.ZP<>0 & (DK.ZP=_a | _a=0)
      || _ile:=DK.IL;
         _ok:=0;
         DK.cntx_psh();
         {? DK.seek(DK.ZP,DK.name)
         || _ok:=1;DK.IL+=_ile; DK.WAR:=(DK.IL*DK.C)$2; DK.SCEAN:=''; DK.put(1)
         || _ok:=0
         ?};
         DK.cntx_pop();
         {? ~_ok || DK.ZP:=0; DK.put(1) ?};
         DK.prev
      || 0
      ?}
   !};
   {? DK.last()
   ||
      _przec:=(ND.INN='T' & ND.TYP().INW='E' & ND.TYP().P='N');
      _tmg:=1+ND.MAG().TYP;
      _ewi:=ND.MAG().TYP*'EWI';
      {!
      |?
         {? DK.ZP<>0 & (DK.ZP=_a | _a=0)
         ||
            exec('delprzyp','fakso','FAKSO','DK',DK.ref);
            exec('delFAP_K','oplaty_dod',DK.N().uidref(),DK.uidref(),null());
            FAP_K.index('DKSQL');
            FAP_K.prefix($DK.ref());
            {? FAP_K.first() || {! |? exec('dk_k_del','magdok_poz') !} ?};
            {? DK.count()>0
            ||
               DK_L.index('DK');
               DK_L.prefix(DK.ref(),null);
               {? DK_L.first()
               || {!
                  |? {? DK_L.PAL<>null
                     || _pal.clear();
                        {? ~_pal.find_key($DK_L.PAL)
                        || _pal.blank();
                           _pal.PAL:=$DK_L.PAL;
                           _pal.add(1)
                        ?}
                     ?};
                     DK_L.del()
                  !}
               ?}
            ?};
            {? DK.count()>0
            ||
               SCH_XD.index('DK');
               SCH_XD.prefix(DK.ref());
               {? SCH_XD.first() || {! |? SCH_XD.del() !} ?}
            ?};
            {? DK.PLUS='N' & DK.count()>0 || exec('update','rezerwacje','DK',DK.ref(),ND.MAG,DK.M,0,DK.SRDK) ?};
            {? DK.count()>0
            ||
               undo();
               exec('add_kom','#message','Pozycje powiązane w systemie. Wycofanie akceptacji niemożliwe.'@,2,,__lp+=1);
               0
            ||
::             Dla dokumentu RW sprawdzane jest, czy usuwana pozycja jest ostanią pozycją dokumentu RW danego limitu.
::             Jeżeli tak to odblokowuję możliwość rejestracji nielimitu/odpadu na zleceniu montażowym/podzleceniu.
               _chk_lim:=(exec('nd_is_rw','magdok_wspolne',DK.N) | exec('nd_is_zw','magdok_wspolne',DK.N)) & DK.ZLIM<>null()
                         & exec('FindAndGet','#table',ZLIM,DK.ZLIM,,
                            "ZLIM.PODZL<>'' & (ZLIM.SO='O' | ZLIM.SO='S' & ZLIM.LIMIT='N')",0);
               _zlim:=DK.ZLIM;
               _del:=DK.del(,1);
               {? _del & _chk_lim
               || exec('zlim_chk_podzl','zl_limit',_zlim)
               ?};
               _del
            ?}
         ||
            {? _przec=0 & DK.AFIFO={? DK.N().MAG().PAL<>'T' || DK.N().TYP().AFIFO || '' ?}
            ||
               DK.RDK:=0;
               DK.NDK:='';
               DK.SRDK:='';
               DK.PRDK:='';
               {? ~_ewi
               ||
                  DK.C:=0;
                  DK.WAR:=0
               ?};
               DK.DOST:=date(0,0,0);
               DK.DK_C:=null;
               {? DK.N().TYP().Z='N' | DK.M().J2<>null()
               || _dokl:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
                  _il22:={? DK.WS2 || DK.IL/DK.WS2 || 0 ?} $ (_dokl+1);
                  roundmet(BEER.MDOKL);
                  _il22:=_il22 $ _dokl;
                  DK.IL2:={? _dokl>=0 || _il22 || DK.IL2 ?};
                  roundmet(5)
               ?};
               DK.put(1)
            ?};
            DK.prev
         ?}
      !}
   ?};
:: aktualizacja znacznikow na paletach
   {? _pal.size() & _pal.first()
   || {!
      |? exec('znacznik','magdok_palety',exec('FindAndGet','#table','PAL',_pal.PAL,,,null()));
         _pal.next()
      !}
   ?};
   obj_del(_pal)
?};
1


\del_dk_wyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: usuwa wykonanie powiazane z pozycja DK
::   WE: _a - ZLGD.ref
::  OLD: \del_dk_wyk/zl_koop.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ZLGD.cntx_psh();
ZLGD.clear;
{? ZLGD.seek(_a)
|| ZLGB.index('ZLGD');
   ZLGB.prefix(ZLGD.ref());
   {? ZLGB.first()
   || {! |? ZLGB.del() !}
   ?};
   _can_continue:=exec('del4ZLGD','statexam');
   {? _can_continue>0
   || exec('del4ZLGD','zl_limit');
::      exec('del4ZLGD','zl_wyr');
      _wyn:=ZLGD.del(,1)
   ?}
?};
ZLGD.cntx_pop();
_wyn


\adduslug
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: dodanie uslugi akcja Usluga w oknach DK.WESU, DK.WERU
::   WY: 1-dodano 0-nie
::  OLD: \adduslug/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_pomoc_mgr:=POMOC.MGR;
_d_help:=D_HELP.M;
BEER.DISP:=1;
HELP.POP:=0; HELP.IL:=0; HELP.IL2:=0; HELP.RDK:=0; HELP.NDK:='';
ND.get();
POMOC.OPAKOW:='N';
_mgrp:=Plugin.run('BLANK_GRPMAG_001','ND');
POMOC.MGR:={? exec('be_z_mgr','magdok_poz') & var_pres('_mgrp')=type_of(null()) || _mgrp || null() ?};
{? (POMOC.MGR<>null & POMOC.MGR().RODZ<>'U') | ND.MAG().MGR<>'T' || POMOC.MGR:=null ?};
{? exec('spr_zk','magdok_wspolne',1,1,'d',1)
||
   {? exec('mod_dok','magdok_nag',1)
   || DK.blank();
      {? D_HELP.M<>''
      ||
         M.cntx_psh();
         M.index('ARODZ');
         M.prefix('T','U',D_HELP.M,D_HELP.M);
         {? M.first()
         ||
            DK.M:=M.ref();
            DK.JM:=M.J
         ||
            POMOC.MGR:=null;
            D_HELP.M:=''
         ?};
         M.cntx_pop()
      ?};
::    intrastat
      exec('istatr_nd2dk','magdok_poz');
      exec('set_efld_opt','magdok_poz');
      {? (_wyn:=DK.edit("exec('chk_dk','magdok_poz')"))
      || {? DK.N().Z='N'
         ||
            DK.MX:=DK.M().KTM; DK.NX:=DK.M().N;
            DK.KH:=DK.N().KH;
            DK.KH_ODB:=DK.N().KH_ODB;
            DK.add(1);
            exec('inf_dod','fakso',0,'dokma')
         ?};
         exec('dk_sum','magdok_wspolne',ND.ref())
      ||
         D_HELP.M:=_d_help;
         POMOC.MGR:=_pomoc_mgr
      ?}
   ?}
?};
BEER.DISP:=0;
_wyn


\dk_rozp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: rozpisuje pozycje dokumentu magazynowego na cechy
::  OLD: \dk_rozp/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__exit','__rozdkc');
_old:=DK.DK_C; __exit:=0;__rozdkc:=1;
_atr:=DK.M().M_ATR<>null;
_flag:=ATR.FLAG;
ATR.FLAG:=ND.TYP().KOOP='N';

{? DK.N().TYP().P='T' & DK.N().Z='N'
 & {? _atr & _old<>null()
   || FUN.ask('Pozycja posiada przypisaną cechę.\nCzy usunąć i rozpisać na inne?'@)
   || DK.DK_C=null
   ?}
||
   {? _atr
   || DK.DK_C:=null;
      DK.put(1)
   ?};
   _m_atr:=DK.M().M_ATR;
   {? var_pres('x_dokl')>100 || obj_del(x_dokl) ?};
   x_dokl:=exec('jaka_dok_m','jm',DK.M);
   ATR.fld_fml('ATR_IL','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $x_dokl || $ST.DOKL ?}");
   ATR.fld_fml('ATR_IL','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $x_dokl || $ST.DOKL ?}");

   hdr:="
      X_Xa.hdr_sel('');
      X_Xa.hdr_sel('Do rozpisania: %1  Rozpisano: %2'
         '  Pozostało: %3'@[form(il_do,,x_dokl),form(il_ro,,x_dokl),form(il_po,,x_dokl)])";
   rozp:="
      {!
      |? X_Xa.IL:=0;
         _edit:=X_Xa.edit(\"X_Xa.IL:=X_Xa.IL$x_dokl;
                           {? X_Xa.IL<=0 || FUN.info(\'Nieprawidłowa ilość.\'@); \'IL\'
                           |? ZMIENNE.DK_C='' || FUN.info(\'Należy podać cechę.\'@); \'DK_C\'
                           || \'\'
                           ?}\");
         {? _edit || X_Xa.SYM:=ZMIENNE.DK_C;X_Xa.add(); hdr(); win_disp ?};_edit
      !}";
   aktu:="X_Xa.cntx_psh();
          il_ro:=0;
          il_po:=il_do-il_ro;
          {? X_Xa.first() || {!|? il_ro+=X_Xa.IL; il_po:=il_do-il_ro; X_Xa.next !} ?};
          X_Xa.cntx_pop;
          hdr();
          ''
         ";

   {? var_pres('X_Xa')>0 || obj_del(X_Xa) ?};
   PARAM_W.TAB_TMP:='X_Xa';
   PARAM_W.TAB_POL:='';
   PARAM_W.TAB_TYT:='Rozpisane pozycje dokumentu';
   t_sumk:='';

   X_Xa:=tab_tmp(,'SYM','STRING[20]','Cecha'@,
                  'IL','REAL','Ilość'@,
                  'NAZ','STRING[60]','Nazwa'@,
                  'WAR01','STRING[25]','Wartość 01'@,
                  'WAR02','STRING[25]','Wartość 02'@,
                  'WAR03','STRING[25]','Wartość 03'@,
                  'WAR04','STRING[25]','Wartość 04'@,
                  'WAR05','STRING[25]','Wartość 05'@,
                  'WAR06','STRING[25]','Wartość 06'@,
                  'WAR07','STRING[25]','Wartość 07'@,
                  'WAR08','STRING[25]','Wartość 08'@,
                  'WAR09','STRING[25]','Wartość 09'@,
                  'WAR10','STRING[25]','Wartość 10'@,
                  'M_ATR','INTEGER','M_ATR',
                  'ZPARN','STRING[16]','Partia'@);

   _acr:=X_Xa.mk_sel('',,0,'#dk_rozp_acr',,,,,'U');
   {? _m_atr=null
   ||
      X_Xa.win_fld(_acr,,'SYM',,,20);
      X_Xa.win_fld(_acr,,'NAZ',,,40);
      X_Xa.win_fld(_acr,,'IL',,,8,x_dokl)
   ||
      M_ATR.index('TYP');
      M_ATR.prefix('C');
      {? M_ATR.seek(_m_atr)
      ||
         {! _i:=1..10
         |!
            {? ($('M_ATR.SL_'+form(_i,-2,,'99')))()<>null
            ||
               ($('X_Xa.win_fld(_a,,''WAR'+form(_i,-2,,'99')+''',,,10,,
                  ,'''+($('M_ATR.SL_'+form(_i,-2,,'99')+'().NA'))()+''')'))(_acr)
            ?}
         !};
         X_Xa.win_fld(_acr,,'IL',,,8,x_dokl)
      ?}
   ?};
   {? _m_atr=null
   ||
      X_Xa.win_act(_acr,0,'Formuła','Dołącz'@@,,'Dołączanie nowego zapisu'@,,"rozp()",1);
      X_Xa.win_act(_acr,1,'Formuła','Dołącz'@@,,'Dołączanie nowego zapisu'@,,"rozp()",1)
   ||
      X_Xa.win_act(_acr,0,'Formuła','Dołącz'@@,,'Dołączanie nowego zapisu'@,
                   ,"exec(\'atr_tmp_addput\',\'mat_atr\',\'X_Xa\',DK.M().M_ATR,\'add\',\'IL\')",1);
      X_Xa.win_act(_acr,1,'Formuła','Dołącz'@@,,'Dołączanie nowego zapisu'@,
                   ,"exec(\'atr_tmp_addput\',\'mat_atr\',\'X_Xa\',DK.M().M_ATR,\'add\',\'IL\')",1)
   ?};
   X_Xa.win_act(_acr,0,'Formuła','Usuń'@@,,'Usunięcie bieżącego zapisu'@,"X_Xa.del;aktu()");
   {? _m_atr=null
   || X_Xa.win_act(_acr,0,'Formuła','Popraw'@@,,'Poprawianie bieżącego zapisu'@,,"
      ZMIENNE.DK_C:=X_Xa.SYM;
      {? X_Xa.edit(\"X_Xa.IL:=X_Xa.IL$x_dokl;
                    {? X_Xa.IL<=0 || FUN.info(\'Nieprawidłowa ilość.\'@); \'IL\'
                    |? ZMIENNE.DK_C='' || FUN.info(\'Należy podać cechę.\'@); \'DK_C\'
                    || \'\'
                    ?}\")
      || X_Xa.IL:=X_Xa.IL$x_dokl;
         X_Xa.SYM:=ZMIENNE.DK_C;
         X_Xa.put()
      || X_Xa.get()
      ?}")
   || X_Xa.win_act(_acr,0,'Formuła','Popraw'@@,,'Poprawianie bieżącego zapisu'@,
                   ,"exec(\'atr_tmp_addput\',\'mat_atr\',\'X_Xa\',DK.M().M_ATR,\'put\',\'IL\')",1)
   ?};
   X_Xa.win_act(_acr,0,'Rekord',,,,"aktu()");
   X_Xa.win_act(_acr,0,'Formuła','Rozpisz'@@,,,,"__exit:=1;sel_exit();1");

   X_Xa.win_act(_acr,0,'Szukaj');
   X_Xa.win_sel(_acr);

   _acr:=X_Xa.mk_edit('Podaj dane do rozpisania pozycji '@,0);
   X_Xa.win_esep(_acr,'Dane'@);
   X_Xa.win_efld(_acr,,'IL',,,23,x_dokl);
   X_Xa.efld_opt(_acr,'mark=1');
   X_Xa.win_efld(_acr,ZMIENNE,'DK_C',,,20,,,,,,,'F3_button=1');
   X_Xa.efld_opt(_acr,'mark=1',ZMIENNE,'DK_C');
   X_Xa.win_efld(_acr,,'NAZ',,,60);
   exec('ok_esc','#window',X_Xa,_acr);
   X_Xa.win_edit(_acr);

   X_Xa.fld_fml('IL','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $x_dokl || $ST.DOKL ?}");
   X_Xa.fld_fml('IL','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $x_dokl || $ST.DOKL ?}");

   il_do:=DK.IL;
   il_ro:=0;
   il_po:=il_do-il_ro;

:: intrastat
   masa_do:=DK.MASAN;
   iluj_do:=DK.ILUJM;
   masa_ro:=0;
   iluj_ro:=0;
   _dk_dst:=null;

   {!
   |?
      hdr();
      _sel:=X_Xa.select();
      {? _sel & X_Xa.first() & il_do=il_ro
      ||
         do();
         _refnd:=DK.N; _dkr:=DK.ref(); _dkm:=DK.M; _first:=1; _poz:=DK.P; DK.P:=-1; DK.put();
         {!
         |?
            {? _m_atr=null
            ||
               DK_C.index('SYM');
               DK_C.prefix(X_Xa.SYM,X_Xa.SYM);
               {? DK_C.first
               || _cecha:=DK_C.ref()
               || DK_C.blank();
                  DK_C.SYM:=X_Xa.SYM;
                  DK_C.NAZ:=X_Xa.NAZ;
                  DK_C.KOD:=exec('kod2matr','mat_atr');
                  {? ~DK_C.add(1)
                  || FUN.info('Dodanie cechy %1 do słownika cech nie powiodło się.'@[X_Xa.SYM]);undo
                  ?};
                  _cecha:=DK_C.ref()
               ?}
            ||
               _cecha:=exec('m_atr_sprdod','mat_atr',X_Xa.WAR01,X_Xa.WAR02,X_Xa.WAR03,X_Xa.WAR04,X_Xa.WAR05,X_Xa.WAR06,
                  X_Xa.WAR07,X_Xa.WAR08,X_Xa.WAR09,X_Xa.WAR10,_m_atr,X_Xa.ZPARN)
            ?};
            {? ~_first || _poz:=exec('NewOrder','#table','DK','P','DOKMAG',_refnd) || _first:=0 ?};
            DK.P:=_poz;
            DK.IL:=X_Xa.IL;
            DK.DK_C:=_cecha;
            DK.IL:=DK.IL$x_dokl;
            DK.C:=DK.C $DK.M().DOKL_C;
            DK.WAR:=(DK.IL*DK.C)$2;
            DK.SCWAR:=(DK.IL*DK.SCC)$2;
::          koryguje ilosc dodatkowa
            exec('aktmil2','magdok_poz');
::          intrastat
            {? il_do>0
            || DK.MASAN:=masa_do*DK.IL/il_do; masa_ro+=DK.MASAN;
               DK.ILUJM:=iluj_do*DK.IL/il_do; iluj_ro+=DK.ILUJM
            ?};

            DK.RDK:=0;
::          DK.NDK pozostaje niezmienione podczas rozpisywania
            DK.SRDK:='';
            DK.PRDK:='';
            DK.KH:=DK.N().KH;
            DK.KH_ODB:=DK.N().KH_ODB;
            _scean:=DK.SCEAN;
            {? DK.PLUS='T' & DK.SCEAN<>'' & 'AZP'*DK.M().IDMOB
             & (1+DK.N().MAG().TYP)='D' & DK.N().MAG().SL='T' & DK.N().MAG().PAL='N'
            || _scean:=exec('newscean','magdok_poz',DK.M,DK.M().IDMOB,DK.DK_C,DK.DK_C().ZPARN,DK.ZL,DK.SCEAN)
            ?};
            {? DK.M().IDMOB='D' & DK.ref()<>_dkr || DK.SCEAN:=''
            |? _scean<>DK.SCEAN || DK.SCEAN:=_scean
            ?};
            {? X_Xa.size()=1
            ||
               DK.put();
               exec('cechdk_l','magdok_poz',_dkr,DK.ref(),DK.IL);
               exec('copy_dk_hs','statexam',_dkr,DK.ref(),DK.IL,{? DK.M().J2<>null() || DK.IL2 || 0 ?})
            ||
            {? DK.add()
            || exec('cechdk_l','magdok_poz',_dkr,DK.ref(),DK.IL);
::             kopiujemy historie zrodlowej dostawy do nowej dostawy
               exec('copy_dk_hs','statexam',_dkr,DK.ref(),DK.IL,{? DK.M().J2<>null() || DK.IL2 || 0 ?});
               {? _dk_dst=null || _dk_dst:=DK.ref ?};
               ~~
            ?};
            exec('po_dolp','magdok_poz')
           ?};
            X_Xa.next()
         !};
::       intrastat
         {? masa_do<>masa_ro | iluj_do<>iluj_ro
         ||
::          koryguje ilosc dodatkowa
            exec('aktmil2','magdok_poz');
            DK.MASAN+=masa_do-masa_ro;
            DK.ILUJM+=iluj_do-iluj_ro;
            DK.put
         ?};
         {? DK.seek(_dkr)
         || {? il_do=il_ro
            || _pal:=tab_tmp(1,'PAL','STRING[16]','');
               exec('delprzyp','fakso','FAKSO','DK',DK.ref());
               exec('delFAP_K','oplaty_dod',DK.N().uidref(),DK.uidref(),null());
               FAP_K.index('DKSQL');
               FAP_K.prefix($DK.ref());
               {? FAP_K.first() || {! |? exec('dk_k_del','magdok_poz') !} ?};
               {? DK.count()>0
               || DK_L.index('DK');
                  DK_L.prefix(DK.ref(),null);
                  {? DK_L.first()
                  || {!
                     |? {? DK_L.PAL<>null
                        || _pal.clear();
                           {? ~_pal.find_key($DK_L.PAL)
                           || _pal.blank();
                              _pal.PAL:=$DK_L.PAL;
                              _pal.add(1)
                           ?}
                        ?};
                        DK_L.del()
                     !}
                  ?}
               ?};

::             przepisanie historii dostawy
               _tabt:=exec('Tools4Stats','statexam');
               _tabt.cntx_psh();
               _tabt.open_all(ref_name(_dkr)+3);
               _tabt.clear();
               DK_HS.index('DK');
               DK_HS.prefix(_dkr);
               {? DK_HS.first()
               || {!
                  |? DK_HS.cntx_psh();
                     DK_HS.prefix();
                     DK_HS.DK:=_dk_dst;
                     DK_HS.NDK:=ref_name(_dk_dst);
                     DK_HS.RDK:=#_dk_dst;
                     DK_HS.put(1);
                     DK_HS.cntx_pop();
                     DK_HS.first()
                  !}
               ?};
               _tabt.cntx_pop();
            {? X_Xa.size()=1
            || 1
            ||
               {? DK.PLUS='N' || exec('update','rezerwacje','DK',DK.ref(),ND.MAG,DK.M,0,DK.SRDK) ?};
::             Dla dokumentu RW sprawdzane jest, czy usuwana pozycja jest ostanią pozycją dokumentu RW danego limitu.
::             Jeżeli tak to odblokowuję możliwość rejestracji nielimitu/odpadu na zleceniu montażowym/podzleceniu.
               _chk_lim:=(exec('nd_is_rw','magdok_wspolne',DK.N) | exec('nd_is_zw','magdok_wspolne',DK.N)) & DK.ZLIM<>null()
                         & exec('FindAndGet','#table',ZLIM,DK.ZLIM,,
                            "ZLIM.PODZL<>'' & (ZLIM.SO='O' | ZLIM.SO='S' & ZLIM.LIMIT='N')",0);
               _zlim:=DK.ZLIM;
               {? DK.del(,1) & _chk_lim
               || exec('zlim_chk_podzl','zl_limit',_zlim)
               ?}
            ?};
               exec('aktu_poz','magdok_poz');
::             aktualizacja znacznikow na paletach
               {? _pal.size() & _pal.first()
               || {!
                  |? exec('znacznik','magdok_palety',exec('FindAndGet','#table',PAL,_pal.PAL,,,null()));
                     _pal.next()
                  !}
               ?};
               obj_del(_pal)
            ||
               DK.IL:=il_po;
               DK.IL:=DK.IL$x_dokl;
               DK.C:=DK.C $DK.M().DOKL_C;
               DK.WAR:=(DK.IL*DK.C)$2;
::             koryguje ilosc dodatkowa
               exec('aktmil2','magdok_poz');
::             intrastat
               exec('ist_wart_dk','magdok_poz',1);
               _scean:=DK.SCEAN;
               {? DK.PLUS='T' & DK.SCEAN<>'' & 'AZP'*DK.M().IDMOB
                & (1+DK.N().MAG().TYP)='D' & DK.N().MAG().SL='T' & DK.N().MAG().PAL='N'
               || _scean:=exec('newscean','magdok_poz',DK.M,DK.M().IDMOB,DK.DK_C,DK.DK_C().ZPARN,DK.ZL,DK.SCEAN)
               ?};
               {? _scean<>DK.SCEAN || DK.SCEAN:=_scean ?};
               DK.put();
               exec('po_dolp','magdok_poz')
            ?}
         || FUN.info('Nie odnaleziono rozpisywanej pozycji.'@);
            undo()
         ?};
         {? do_state=1 || _sel:=0 ?};
         end()
      || {? _sel
         || {? il_do<=il_ro
            || FUN.info('Za dużo do rozpisania. Popraw dane.'@)
            || FUN.info('Za mało do rozpisania. Popraw dane.'@)
            ?}
         ?}
      ?};
      _sel
   !};
   {? __exit=0 & _atr || DK.DK_C:=_old; DK.put(1) ?};
   VAR_DEL.delete('il_do','il_ro','il_po');
   VAR_DEL.delete('masa_do','masa_ro','iluj_do','iluj_ro');
   VAR_DEL.delete('x_dokl','X_Xa','__rozdkc');
   VAR_DEL.delete('aktu','hdr','rozp','__exit')
|| {? DK.N().Z<>'N'
   || FUN.info('Dokument jest zaakceptowany, modyfikacje niedozwolone.'@)
   |? DK.DK_C<>null & ~_atr
   || FUN.info('Pozycja posiada przypisaną cechę.'@)
   ?}
?};
ATR.FLAG:=_flag;
1


\cechdk_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: odzyskuje informacje o poprzednich DK_L-ach
::   WE: _a - ref orginalnego DK
::       _b - ref nowego DK
::       _c - ilosc do rozpisania
::  OLD: \cechdk_l/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
_ileroz:=_c;
DK.cntx_psh();
DK_L.index('DK');
DK_L.prefix(_a,null);
{? DK_L.last()
|| {!
   |? _ref:=DK_L.ref();
      _ok:=DK_L.prev();
      DK_L.cntx_psh();
      DK_L.clear();
      {? DK_L.seek(_ref) & DK_L.IL>0
      || {? DK_L.IL<=_ileroz
         || DK_L.DK:=_b;
            DK_L.put(1);
            _ileroz-=DK_L.IL
         |? DK_L.IL>_ileroz
         || DK_L.IL-=_ileroz;
            exec('reoIL2','magdok_wymiary');
            DK_L.put(1);
            DK_L.IL:=_ileroz;
            DK_L.DK:=_b;
            exec('reoIL2','magdok_wymiary');
            exec('uzupIDkod','magdok_palety',DK_L);
            DK_L.add(1);
            _ileroz:=0
         ?}
      ?};
      DK_L.cntx_pop();
      _ileroz>0 & _ok
   !}
?};
DK.cntx_pop()


\po_dolp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: po dolaczeniu/poprawie pozycji rozpisywanej przez funkcje rozpisz cechy
::  OLD: \po_dolp/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('inf_dod','fakso',0);
{? (1+menu_txt)='D' || DK.MX:=DK.M().KTM; DK.NX:=DK.M().N; DK.put(1) ?};
exec('dk_sum','magdok_wspolne',ND.ref)


\dk_war_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.00]
:: OPIS: Przed wyświetl dla pola SUM.DK_WAR
::----------------------------------------------------------------------------------------------------------------------
exec('upr_cscz','ceny')


\dk_netto_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.00]
:: OPIS: Przed wyświetl dla pola SUM.DK_NETTO
::----------------------------------------------------------------------------------------------------------------------
exec('upr_cscz','ceny')


\aedklimi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: uzupelnienie DK.ZLIM etc. formula wykorzystywana rowniez przy wydaniach z urzadzen mobilnych
::   WE: [_a] - kontekst wywolania 0-po redakcji pola (domyslnie) 1-do kontroli pola
::   WY: 1-OK 0-blad
::  OLD: \aedklimi/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_wyn:=1;

:: Jesli DK.ZLIM nie wypelnione to szukam pierwszego limitu na zleceniu zgodnego z wypelnionym przez usera stringiem
{? DK.ZLIM=null()
|| _zlim:=exec('dk_zlim_suggest','zl_limit',DK.ZL,{? ~_a || D_HELP.M || DK.M().KTM ?}
    ,{? ~_a || ATR.ZPAR_ZGH || null() ?});
   {? _zlim<>null()
   || DK.ZLIM:=_zlim;
      DK.M_ZLIM:=ref_name(_zlim)
   || {? ~_a || FUN.info('Nie znaleziono limitu o podanym symbolu.'@) ?};
      _wyn:=0
   ?}
|? ~_a
||
:: Obsluga dla popraw - jesli zlim wypelniony i D_HELP.M rozny od KTM zlima to zmieniam
   _ktm_ref:=exec('FindAndGet','#table',ZLIM,#DK.ZLIM,ref_name(DK.ZLIM),"KTM",null());
   _ktm:=exec('FindAndGet','#table',M,#_ktm_ref,ref_name(_ktm_ref),"KTM",null());
   {? _ktm<>D_HELP.M
   || _zlim:=exec('dk_zlim_suggest','zl_limit',DK.ZL,D_HELP.M,ATR.ZPAR_ZGH);
      {? _zlim<>null()
      || DK.ZLIM:=_zlim;
         DK.M_ZLIM:=ref_name(_zlim)
      || FUN.info('Nie znaleziono limitu o podanym symbolu.'@);
         _wyn:=0
      ?}
   ?}
?};
{? _wyn<>0
||
   {? DK.ZLIM<>null()
   || exec('openmask','zl_common',DK.ZL);

::    Sprawdzam czy typ magazynu pozwala na wydanie takiego limitu
      _wyn:=exec('mag_allowed_rw','zl_limit',DK.ZL,ND.MAG,DK.ZLIM,1);

      {? _wyn>0
      ||
         _il_zlim:=exec('sum_il','zl_limit',DK.ZLIM);
         _pob:=exec('ilosc_dk','zl_limit',DK.ZLIM,1);

         _ktm_ref:=exec('FindAndGet','#table',ZLIM,#DK.ZLIM,ref_name(DK.ZLIM),"KTM",null());
         M.clear();
         {? M.seek(_ktm_ref) & exec('spr_mat','magdok_poz')
         || {? exec('spr_rez','zamsiw_limit')
            ||
::             Jezeli zlecenie jest zleceniem na ktorym powstaje wyrob i zostala wskazana partia
::             to sprawdzam czy wybrany limit ma ten sam przewodnik co partia, w przeciwnym razie
::             nie ma sensu taka konfiguracja danych bo surowiec na limicie zostanie powiazany z partia z innego
::             przewodnika
               _can_continue:=1;

               {? ATR.ZPARN_RW<>null()
               ||
                  _zl_top:=exec('top_level','zl_link',DK.ZL);
                  _top_rodz:=exec('FindAndGet','#table',ZL,#_zl_top,ref_name(_zl_top),"RODZAJ",'');
                  _zl_prod:=null();
                  {? _top_rodz='N'
                  || _zl_prod:=DK.ZL
                  || _zl_prod:=exec('main_podzlec','zl_link',_zl_top)
                  ?};
                  {? _zl_prod<>null() & _zl_prod=DK.ZL
                  ||
::                   Sprawdzam czy przewodniki sie zgadzaja
                     _zgh_part:=ATR.ZPARN_RW().ZGH;
                     _zgh_lim:=DK.ZLIM().ZGP().NRZLP;
                     {? _zgh_part<>_zgh_lim
                     ||
                        _zgh_s1:=exec('FindAndGet','#table',ZGH,#_zgh_part,ref_name(_zgh_part),"NRPRZ",'');
                        _zgh_s2:=exec('FindAndGet','#table',ZGH,#_zgh_lim,ref_name(_zgh_lim),"NRPRZ",'');
                        _msg0:='';
                        _msg1:='Przewodnik limitu i partii są różne.'@;
                        _msg2:='Takie przypisanie jest niedozwolone, należy wybrać limit powiązany z innym przewodnikiem.'@;
                        _msg4:='Przewodnik partii: %1'@[_zgh_s1];
                        _msg5:='Przewodnik limitu: %1'@[_zgh_s2];
                        _msg_glued:=exec('form','#string','L',_msg1
                                                            ,_msg2
                                                            ,_msg0
                                                            ,_msg4
                                                            ,_msg5);
                        {? ~_a || FUN.emsg(_msg_glued) ?};
                        _wyn:=0;
                        _can_continue:=0
                     ?}
                  ?}
               ?};

               {? _can_continue>0
               ||
                  DK.M:=M.ref;
                  DK.JM:=M.J;
                  BEER.M:=M.ref;
                  POMOC.MGR:=M.MGR;
                  D_HELP.M:=M.KTM;

::                Podpowiadam ilosc
                  _il:=exec('dk_il_suggest','zl_limit',DK.ZLIM,DK.ZL);
                  {? _il>0 & DK.IL=0
                  || DK.IL:=_il
                  ?};
                  _wyn:=1
               ?}
            || {? ~_a
               || FUN.info('Na materiał zostały założone rezerwacje,\n'
                          'dodanie do pozycji jest możliwe przy pomocy funkcji "produkCja->Zlecenie".'@)
               ?};
               _wyn:=0
            ?}
         || {? ~_a || FUN.info('Nieprawidłowy indeks materiałowy.'@) ?};
            _wyn:=0
         ?}
      ?}
   || {? ~_a || FUN.info('Brak przypisanego limitu do pozycji dokumentu.'@) ?};
      _wyn:=0
   ?}
?};
_wyn


\przypzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przypisanie zlecen do pozycji dokumentu
::  OLD: \przypzl/dokmag.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__dk2zl');
ZAKR.win_edit('WYP_ZL');
ZAKR.ZL01:=ZAKR.ZL02:='';
ZAKR.ZL:=ZAKR.WYDEAN:=null();

{? ND.Z='T'
|| FUN.info('Dokument zaakceptowany operacja niemożliwa.'@)
|? ND.TYP().ZLEC='N'
|| FUN.info('Operacja niedostępna dla tego typu dokumentu.'@)
|? ND.ZL<>null()
|| FUN.info('Operacja niedostępna — zlecenie zostało przypisane w nagłówku dokumentu.'@)
|? ND.TYP().P<>'T'
|| FUN.info('Operacja niedostępna dla tego typu dokumentu.\n'
            'Zlecenie należy uzupełnić na pozycji dokumentu (akcja Popraw).'@)
|| __dk2zl:=1;
   _err:=0;
   _tab:=DK.sel_aget();
   DK.sel_adel();
   DK.cntx_psh();
   {? (_ile:=_tab.size())>0 & FUN.ask('Czy przypisać wybrane zlecenie dla zaznaczonych pozycji?'@)
    & ZAKR.edit("exec('chkzlwyd','magazyn_mob')")
   || {!
      |? {? (DK.clear(); DK.seek(_tab.REF,))
         || DK.ZL:=ZAKR.ZL;
            DK.WYD:=ZAKR.WYDEAN;
            {? exec('ctrlzldk','magazyn_mob',0,null)
            || DK.put(1)
            || _err+=1
            ?}
         ?};
         _tab.next()
      !};
      {? _err>0
      || FUN.info(
            'Nieprawidłowe przypisania zlecenia dla danego materiału (limit, definicja zlecenia).\n'
            'Nie przypisano zlecenia do %1 z %2 zaznaczonych pozycji dokumentu.'@[form(_err,,0,'99'),form(_ile,,0,'99')]
         )
      ?}
   |? FUN.ask('Czy przypisać zlecenie dla danej pozycji?'@) & ZAKR.edit("exec('chkzlwyd','magazyn_mob')")
   || DK.ZL:=ZAKR.ZL;
      DK.WYD:=ZAKR.WYDEAN;
      {? exec('ctrlzldk','magazyn_mob',0,null)
      || DK.put(1)
      || FUN.info('Nieprawidłowe przypisanie zlecenia dla danego materiału (limit, definicja zlecenia).\n'
                  'Nie przypisano zlecenia do pozycji dokumentu.'@)
      ?}
   ?};
   DK.cntx_pop()
?};
VAR_DEL.delete('__dk2zl');
~~


\zparn_rw_bl
::----------------------------------------------------------------------------------------------------------------------
:: DOST: MBUILDER
::  UTW: WH [12.30]
:: OPIS: Blank pola zmiennej ATR.ZPARN_RW
::  OLD: \zparn_rw_bl/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
~~


\zparn_rw_bd
::----------------------------------------------------------------------------------------------------------------------
:: DOST: MBUILDER
::  UTW: WH [12.30]
:: OPIS: Przed wyswietleniem pola zmiennej ATR.ZPARN_RW
::  OLD: \zparn_rw_bd/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
{? exec('zparn_rw_be','magdok_poz')=0
|| _result:=exec('findfnrd','color')
?};
_result


\zparn_rw_be
::----------------------------------------------------------------------------------------------------------------------
:: DOST: MBUILDER
::  UTW: WH [12.30]
:: OPIS: Przed redakcja pola zmiennej ATR.ZPARN_RW
::   WY: 0 / 1
::  OLD: \zparn_rw_be/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;

{? DK.ZL<>null & DK.ZL().RODZAJ<>'N'
||
:: Zwracam najbliższe zlecenie partiowane
   _prod_zl:=exec('party_first','zl_link',DK.ZL);
   _result:=_prod_zl<>null();
   {? _result>0
   ||
::    Ustawiam okno słownika w ZPARN
      ZPARN.win_dict('SLO');
      ZPARN.actions('SLO','T:T');

::    ATR.ZL i ATR.ZGH sluzy do niejawnego prefiksowania slownika partii
      ATR.ZL:=_prod_zl;

      {? _prod_zl=DK.ZL
      ||
::       Jesli zlecenie na ktorym powstaje produkt i zlecenie ktore jest na DK to
::       prefiksuje lepiej partie. Moge to zrobic tylko w tym wypadku, poniewaz sa takie sytuacje
         ATR.ZGH:=ATR.ZPAR_ZGH
      || ATR.ZGH:=null()
      ?};

::      {? DK.PARTIA<>null()
::      || ATR.ZPARN_RW:=DK.PARTIA
::      ?};
      ~~
   ?}
?};
_result


\zparn_rw_ae
::----------------------------------------------------------------------------------------------------------------------
:: DOST: MBUILDER
::  UTW: WH [12.30]
:: OPIS: Po redakcji pola zmiennej ATR.ZPARN_RW
::   WY: 0 / 1
::  OLD: \zparn_rw_ae/zparn.fml
::----------------------------------------------------------------------------------------------------------------------
ATR.ZL:=null();
ATR.ZGH:=null();
ZPARN.actions('SLO');
~~


\ATR_INDATR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: ikony dla ATR.INDATR
::----------------------------------------------------------------------------------------------------------------------
"{? ATR.INDATR='X'
 || ATR.INDATR:=''; 'xwin16.png:15'
 |? ATR.INDATR='N'
 || ATR.INDATR:=''; 'xwin16.png:91'
 |? ATR.INDATR='1'
 || ATR.INDATR:=''; 'xwin16.png:83'
 |? ATR.INDATR='2'
 || ATR.INDATR:=''; 'xwin16.png:184'
 |? ATR.INDATR='3'
 || ATR.INDATR:=''; 'xwin16.png:120'
 |? ATR.INDATR='4'
 || ATR.INDATR:=''; 'xwin16.png:49'
 |? ATR.INDATR='5'
 || ATR.INDATR:=''; 'xwin16.png:17'
 || ATR.INDATR:=''; ''
 ?}"


\czyAddZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Sprawdza czy do danego dokumentu można przypisać zlecenie
::   WE: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_wyn:=~(ND.STAT_REJ<>'N' | ND.TYP().ZLEC='N' | ND.ZL<>null() | ND.TYP().P<>'T');
_wyn


\tabSklSql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: tabela ref-ów SQL wg składowych
::   WE: _a - DK.SKLSQL
::   WY: tabela()
::  OLD: \tabSklSql/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,'SQL','STRING[16]','','WAR','REAL','','WSP','REAL','');
{? _a<>''
|| _tab.blank();
   _tab.SQL:=_a;
   _tab.WAR:=_war:=exec('sklsql2c','magdok_poz',_a);
   _tab.WSP:=_ile:=exec('FindInSet','#table','DK','PRDK',_a,_a,"DK.IL",,,0);
   _tab.add(1);
   ND.cntx_psh();
   DK.cntx_psh();
   _msk:=form(8+_a)+3;
   {? ND.name()<>_msk
   || ND.use('nagdo'+_msk);
      DK.use('dokma'+_msk)
   ?};
   _ref_nd:=null();
   DK.index('PRDK');
   DK.prefix(_a,_a);
   {? DK.first()
   || {!
      |? {? DK.PLUS='T' & DK.N().TYP().DN='K'
         || _ref_nd:=DK.N;
            0
         || DK.next()
         ?}
      !}
   ?};
   {? _ref_nd<>null()
   || DK.index('DOKMAG');
      DK.prefix(_ref_nd);
      {? DK.find_tab('first','PRDK',,'=',_a,'SRDK',,'<>',_a)
      || {!
         |? _ile+=DK.IL;
            _tab.blank();
            _tab.SQL:=DK.SRDK;
            _tab.WAR:=_war;
            _tab.WSP:=DK.IL;
            _tab.add(1);
            DK.find_tab('next','PRDK',,'=',_a,'SRDK',,'<>',_a)
         !}
      ?}
   ?};
   ND.cntx_pop();
   DK.cntx_pop();
   {? _tab.size()>1 & _tab.first() & _ile>0
   || {!
      |? _tab.WSP:=_tab.WSP/_ile;
         _tab.put(1);
         _tab.next()
      !}
   || _tab.WSP:=1;
      _tab.put(1)
   ?}
?};
_tab


\dk_p_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Ikona pola DK.P
::   WE: _a - okno wertowania
::   WY:
::----------------------------------------------------------------------------------------------------------------------
DK.win_fml(_a,,'P',,'ICON_BEFORE',"
   DOKUML.index('GRP2');
   DOKUML.prefix(DK.uidref(),);
   {? DOKUML.first() || exec('zalacznik','icon') || '' ?}
")


\dkdost_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Aktualizuje dane w tabeli pozycji dostaw magazynowych dla dokumentu w buforze ND
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: dokumenty przychodowe, niekorygujące
TYPYDOK.cntx_psh();
{? ND.TYP().P='T' & TYPYDOK.DK<>'T' & TYPYDOK.DN<>'T'
||
   DK.cntx_psh();
   DKDOST.cntx_psh();
   FIRMA.cntx_psh();
   MG.cntx_psh();
   M.cntx_psh();
   SLO.cntx_psh();
   DKDOST.index('UNIK');
   DKDOST.prefix();
   DK.index('DOKMAG');
   DK.prefix(ND.ref);
   _loop:=DK.first();
   {!
   |? _loop
   |!
      _srdk_uidref:=exec('FindAndGet','#table',DK,DK.SRDK,,"DK.uidref()",'');
      {? _srdk_uidref<>''
      ||
         _put:=DKDOST.find_key(REF.FIRMA().SYMBOL,_srdk_uidref);
         DKDOST.blank();
         DKDOST.FIRMA:=FIRMA.SYMBOL;
         DKDOST.SRDK:=_srdk_uidref;
         DKDOST.PRDK:=exec('FindAndGet','#table',DK,DK.PRDK,,"DK.uidref()",'');
         DKDOST.ODDZ:=ND.ODDZ;
         DKDOST.ROK:=ND.AR;
         DKDOST.MG:=ND.MAG().SYM;
         DKDOST.T:=ND.TYP().T;
         DKDOST.NR:=ND.NR;
         DKDOST.SYM:=ND.SYM;
         DKDOST.D:=ND.D;
         DKDOST.P:=DK.P;
         DKDOST.KTM:=DK.M().KTM;
         DKDOST.C:=DK.C;
         {? ND.WAL<>INFO.NAROD
         ||
            DKDOST.CWAL:=DK.CWAL;
            DKDOST.WAL:=DK.WAL().KOD
         ?};
         {? TYPYDOK.DK='T'
         ||
::          !!! nie wykorzystywane !!!
::          korekta - aktualizacja ceny po korekcie
            _cen:=exec('cena_mag','ceny',DK.M,DK.RDK,DK.NDK,,DK.C,,0);
            _cwal:=
               {? INFO.NAROD=ND.WAL
               ||
                  0
               ||
                  exec('cena_mag','ceny',DK.M,DK.RDK,DK.NDK,,DK.C,,1)
               ?};
            {? _cen<>DK.CPOK | _cwal<>DK.CWALPOK
            ||
               DKDOST.cntx_psh();
               DKDOST.index('UNIK');
               DKDOST.prefix(REF.FIRMA().SYMBOL,DK.uidref());
               {? DKDOST.first()
               ||
                  DKDOST.C:=_cen;
                  DKDOST.CWAL:=_cwal;
                  DKDOST.put()
               ?};
               DKDOST.cntx_pop()
            ?}
         ?};
         {? _put || DKDOST.put() || DKDOST.add() ?}
      ?};
      _loop:=DK.next()
   !};
   SLO.cntx_pop();
   M.cntx_pop();
   MG.cntx_pop();
   FIRMA.cntx_pop();
   DKDOST.cntx_pop();
   DK.cntx_pop()
?};
TYPYDOK.cntx_pop()


\dkdost_trig_on
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Włącza trigery dla DK uzupełniające DKDOST
::   WE: 'add,put'
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_action:=_a;

{? exec('get','#params',100210,2)='T'
||
   _ff:="
      {? DK.PLUS='T' & DK.N
      ||
         DKDOST.cntx_psh();
         FIRMA.cntx_psh();
         ND.cntx_psh();
         MG.cntx_psh();
         M.cntx_psh();
         SLO.cntx_psh();
         DKDOST.index('UNIK');
         DKDOST.prefix();
         _srdk_uidref:=exec('FindAndGet','#table',DK,DK.SRDK,,\"DK.uidref()\",'');
         {? _srdk_uidref<>''
         ||
            _put:=DKDOST.find_key(REF.FIRMA().SYMBOL,_srdk_uidref);
            DKDOST.blank();
            DKDOST.FIRMA:=FIRMA.SYMBOL;
            DKDOST.SRDK:=_srdk_uidref;
            DKDOST.PRDK:=exec('FindAndGet','#table',DK,DK.PRDK,,\"DK.uidref()\",'');
            ND.use(ref_name(DK.N));
            DKDOST.ODDZ:=DK.N().ODDZ;
            DKDOST.ROK:=ND.AR;
            DKDOST.MG:=ND.MAG().SYM;
            DKDOST.T:=ND.TYP().T;
            DKDOST.NR:=ND.NR;
            DKDOST.SYM:=ND.SYM;
            DKDOST.D:=ND.D;
            DKDOST.P:=DK.P;
            DKDOST.KTM:=DK.M().KTM;
            DKDOST.C:=DK.C;
            {? ND.WAL<>INFO.NAROD
            ||
               DKDOST.CWAL:=DK.CWAL;
               DKDOST.WAL:=DK.WAL().KOD
            ?};
            {? _put || DKDOST.put() || DKDOST.add() ?}
         ?};
         SLO.cntx_pop();
         M.cntx_pop();
         MG.cntx_pop();
         ND.cntx_pop();
         FIRMA.cntx_pop();
         DKDOST.cntx_pop()
      ?};
      ~~
   ";
   {? _action*'add' || DK.trig_a('add',_ff,'dkdost') ?};
   {? _action*'put' || DK.trig_a('put',_ff,'dkdost') ?}
?}


\dkdost_trig_off
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Wyłącza trigery dla DK uzupełniające DKDOST
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',100210,2)='T'
||
   DK.trig_a('add',,'dkdost');
   DK.trig_a('put',,'dkdost')
?}


\dkdost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Zwraca dane dostawy _a
::   WE: _a -  fffsrdkuidref gdzie fff-firma, srdkuidref-DK.uidref
::             lub DK.ref()
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_dkdost:={? var_pres('_a')=type_of('') || _a || '' ?};
{? _dkdost='' & var_pres('_a')=type_of(null()) || _dkdost:=exec('FindAndGet','#table',DK,_a,,"DK.DKDOST",'') ?};
{? _dkdost='' || _dkdost:=exec('FindAndGet','#table',DK,DK.PRDK,,"DK.DKDOST",'') ?};
_comma:='';
_ff:="obj_new(";
{! _ii:=1..DKDOST.fld_num()
|!
   _ff+=_comma+'\''+DKDOST.fld_acr(_ii)+'\'';
   _comma:=','
!};
_ff+=")";
_return:=($_ff)();
{? _dkdost<>''
||
   DKDOST.cntx_psh();
   DKDOST.use('dm'+(3+_dkdost)+(_dkdost-8+3));
   DKDOST.index('UNIK');
   DKDOST.prefix(3+_dkdost,3-_dkdost);
   {? DKDOST.first()
   ||
      {! _ii:=1..DKDOST.fld_num()
      |!
         _return[_ii]:=DKDOST[_ii]
      !}
   ?};
   DKDOST.cntx_pop()
?};
_return


\dkdost_odtw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Odtwarza dane w tabeli pozycji dostaw magazynowych (DKDOST)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? __PARSES.setEnv('LMG')
||
   DKDOST.cntx_psh();
   DKDOST.erase();
   ND.cntx_psh();
   ND.prefix();
   ND.for_each("
      exec('dkdost_update','magdok_poz')
   ");
   ND.cntx_pop();
   DKDOST.cntx_pop()
?}


\spr_stv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Sprawdzenie stawki vat na pozycjach
::   WE:
::   WY: 0-stawka vat podana w pozycji, <>0-nr pierwszej pozycji bez stawki vat
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
ND.cntx_psh();
TYPYDOK.cntx_psh();
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
_loop:=DK.first();
_result:=_loop:=_loop & DK.PLUS='T' & DK.N().TYP().Z='T' & DK.N().TYP().KOOP<>'T';
{!
|? _loop
|!
   _result:={? DK.SV || 0 || DK.P ?};
   _loop:=_result=0 & DK.next()
!};
DK.cntx_pop();
TYPYDOK.cntx_pop();
ND.cntx_pop();
_result


\dk_sv_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Przed redakcją DK.SV
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('jakislsv','ustawienia')


\dk_fld_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Przed wyświetleniem pól tabeli DK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
{? 'KPW WD RTRANSAK RTRANSPO IDKH'*_afld
||
   exec('findfnrd','color')
||
   ''
?}


\dk_fld_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Przed redakcją pól tabeli DK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
0


\dk_fld_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: F3 pól tabeli DK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
{? 'KPW'=_afld
||
   exec('dk_kpw_f3','magdok_poz')
?};
0


\dk_fld_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Po redakcji pól tabeli DK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
1


\set_efld_dk_tw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zaznacza wymagalne pola w pozycji dokumentu magazynowego (termin ważności)
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || DK.win_edit('?') ?};
{? DK.M().SETW<>'P' || DK.TW:=date(0,0,0) ?};
{? DK.M().SETW='P' | ND.MAG().SL='T'
|| DK.efld_opt(_win_red,'enable=1',EANX,'TW');
   DK.efld_opt(_win_red,{? DK.M().CZY_TW='T' & DK.PLUS='T' || 'mark=1' || 'mark=0' ?},EANX,'TW')
|| DK.efld_opt(_win_red,'enable=0',EANX,'TW');
   DK.efld_opt(_win_red,'mark=0',EANX,'TW')
?};
~~


\pr_zm_tw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Przed redakcją terminu ważności pól tabeli DK
::----------------------------------------------------------------------------------------------------------------------
ZMIENNE.M().SETW='P' & ST.MAG().SL<>'T'


\ilDOzwr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.51]
:: OPIS: po redakcja DK.IL
::   WE: _a - ref pierwotnej dostawy
::       _b - ref do pominięcia
::   WY: _dostępna ilość do zwrotu
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_ile:=exec('FindAndGet','#table',DK,_a,,"IL",0);
_msk:=form(8+_a)+3;
_odd:=1+_msk;
_rok:=1-_msk;
SC.cntx_psh();
SC.use('stc__'+_msk);
SC.index('SRDK');
SC.prefix(_a,);
_ils:={? SC.first() || SC.S || 0 ?};
SC.cntx_pop();
:: niezaakceptowane dokumenty zwrotu
_ilp:=0;
DK.cntx_psh();
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last()
|| {!
   |? _year:=$OKR.ROK+2;
      {? _rok>_year
      || 0
      || DK.use('dokma'+_odd+_year);
         DK.index('PRDK');
         DK.prefix(_a,);
         {? DK.first() & DK.find_tab('first','PLUS',,'=','T','Z',,'=','N')
         || {!
            |? {? (_b='' | (_b<>'' & $DK.ref()<>_b)) || _ilp+=DK.IL ?};
               DK.find_tab('next','PLUS',,'=','T','Z',,'=','N')
            !}
         ?};
         OKR.prev()
      ?}
   !}
?};
OKR.cntx_pop();
DK.cntx_pop();

_res:=_ile-_ils-_ilp;
_res


\adddk_mwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Dodaje pozycje dokumentu magazynowego - używana w webserwisie
::   WE: _a - ND.ref()
::       _b - pozycje - tablica "buforów" tabeli DK
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;
_poz:=_b;
_result:=1;
{! _it:=1.. obj_len(_poz)
|! _ref:=exec('adddk','magdok_poz',
      _nd,
      _poz[_it].M,
      _poz[_it].IL,
      _poz[_it].C,
      ,,,,,,,,7
   );
   {? _ref<>null()
   ||
      DK.cntx_psh();
      {? DK.seek(_ref,ref_name(_ref))
      ||
         {? _poz[_it].J2<>null() & _poz[_it].WS2<>0
         || DK.J2:=_poz[_it].J2;
            DK.WS2:=_poz[_it].WS2;
            DK.IL2:=_poz[_it].IL2
         ?}
      ?};
      DK.prefix();
      DK.put();
      DK.cntx_pop()
   ?}
!};

_result


\dk_dane_do_intrastat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Dane do intrastat - pozycja dokumentu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;

_modKP:=ND.TYP().UE='T' | (exec('get','#params',100205,2,null())*('%1 '[ND.TYP().T]))>0;

{? ~_modKP & exec('nie_dotyczy','intrastat','ND')
||
   return(0)

|? DK.M().RODZ='U'
||
   FUN.info('Funkcja niedostępna dla pozycji usługowej.'@)
||
   DK.win_edit('INTRA');
   exec('set_efld_opt_intr','magdok_poz');
   {? _modKP
   || DK.efld_opt(DK.win_edit('?'),'editable=1',,'KP');
      DK.efld_opt(DK.win_edit('?'),'enable=1',,'KP')
   ?};
   {? (~_modKP & ND.IST_TYP='') | ND.INTRA='T'
   ||
      DK.display()
   || _oldkp:=DK.KP;
:: można zmieniać dane do intrastat do czasu uwzględnienia dokumentu w deklaracji
      {? DK.edit("exec('chk_dk_intrastat','magdok_poz',1)")
      ||
         _result:=DK.put();
         {? _result & _oldkp<>DK.KP || exec('act_kp','magdok_wspolne',DK.PRDK,DK.KP,_oldkp) ?}
      ?}
   ?}
?};
_result


\mod_atr_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Grupowe poprawianie atrybutów dostawy
::----------------------------------------------------------------------------------------------------------------------
M_ATR.cntx_psh();
ND.cntx_psh();
DK.cntx_psh();
_win:=M_ATR.win_sel('?');
_act:=M_ATR.actions('SLO','dPUI:d');

_win_grp:=M_ATR.grp_make(,"",'zamwew_grp',,,);
M_ATR.grp_sel(_win_grp,M_ATR,'SLO',,"exec('dk_wg_atr','magdok_poz')"
 ,,,25,,,,,'maximized_with_title','m_atr_dk',1);
M_ATR.grp_splt(_win_grp,'panel0','vertical','pozycje');
M_ATR.grp_sel(_win_grp,DK,'WER_ATR',,,,,25,,,,,'maximized_with_title','dk_wg_atr',);
M_ATR.win_sel(_win_grp);

M_ATR.index('MOD');
M_ATR.prefix('C','T');
{? M_ATR.first()
|| DK.win_edit('WZOR');
   POMOC.TAT_M:='L';
   M_ATR.select()
|| FUN.info('W systemie nie zdefiniowano wzorców atrybutów dostawy,\n'
            'które podlegają modyfikacji atrybutów.\n\n'
            'Operacja zmiany atrybutów niedostępna.'@)
?};

M_ATR.win_sel(_win);
M_ATR.actions('SLO',_act);
M_ATR.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();
~~


\dk_wg_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Wyświetla pozycje
::----------------------------------------------------------------------------------------------------------------------
DK.index('M_ATR');
DK.prefix(ST.MAG,M_ATR.ref(),'T',ST.AR);
DK.first();
grp_disp(DK,'WER_ATR');
~~


\dk_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Wyzwalacz "Dołącz - przed"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dk_mar_nar','magdok_poz');
1


\dk_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Wyzwalacz "Popraw - przed"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dk_mar_nar','magdok_poz');
1


\dk_mar_nar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Ustawia wartość ND.MAR i ND.NAR (Marża i Narzut)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
DK.MAR:=((DK.CN-DK.C)*DK.IL)$2;
DK.NAR:={? DK.C<>0 || ((DK.CN-DK.C)/DK.C*100)$2 || 0 ?};
~~


\pw_zm_il2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: przed wyświetleniem
::----------------------------------------------------------------------------------------------------------------------
{? DK.N().MAG().PAL='N'
|| ''
|| exec('findfnv','#color')
?}


\pr_zm_il2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: przed redakcją
::----------------------------------------------------------------------------------------------------------------------
_res:=ZMIENNE.M().J2<>null() & exec('be_zm_il','magdok_poz');
_res


\po_zm_il2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: po redakcji
::----------------------------------------------------------------------------------------------------------------------
_res:=exec('itsPositive','#field',1);
_dokl:={? ZMIENNE.M<>null || exec('jaka_dok_m','jm',ZMIENNE.M) || 3 ?};
_dokl_s:=exec('jaka_dok_mjm','jm',ZMIENNE.M,ZMIENNE.J2,ZMIENNE.M().J);
{? _dokl_s<0 || _dokl_s:=_dokl ?};
ZMIENNE.IL2:=ZMIENNE.IL2 $ _dokl_s;
roundmet(BEER.MDOKL);
{? _res
|| {? ZMIENNE.IL2=0 & ZMIENNE.WS2>0 || ZMIENNE.IL2:=ZMIENNE.IL2*ZMIENNE.WS2 $ ZMIENNE.M().DOKL ?};
   _il:=ZMIENNE.IL2*ZMIENNE.WS2 $ _dokl;
   roundmet(5);
   {? ZMIENNE.IL=0
    | (_il<>ZMIENNE.IL & (1 | FUN.ask('Przeliczyć ilość w jednostce podstawowej?'@)))
   || ZMIENNE.IL:=_il
   ?};
   ZMIENNE.WS2:={? ZMIENNE.IL2>0 & ZMIENNE.IL>0 || ZMIENNE.IL/ZMIENNE.IL2
                |? ZMIENNE.J2<>null() & ZMIENNE.IL2=0 || exec('oblWSP','jm',ZMIENNE.M)
                || 0
                ?}
?};
_res


\dk_war_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Formuła określająca ikony dla powiązanych opłat
::----------------------------------------------------------------------------------------------------------------------
"{? exec('FindInSet','#table','FAP_K','TAXS',DK.uidref())<>null()
 || 'xwin16.png:10'
 || exec('pusta','#icon')
 ?}
"

:Sign Version 2.0 jowisz:1045 2024/01/18 14:42:40 e22d0ed90a59cfabeede10b8aacc3e3d84a37ae16d0d5a34de364089f8b5cbd8596fe73f01c59d376469485e59e8118650c28a831850d8bd789b36e99ed67d070c381d1ec58de76f44fced7ebc2e8632d7d5b5311579b409f19b83261e137c2267aead38a4225a7ba4c169f99bbe3b8943843e5faec8c41e484d64526ca3acda
