:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zl_koop.fml
:: Utworzony: 2012-05-17
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi kooperacji dla zleceń
::======================================================================================================================


\zgp_koop_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: sprawdza czy pozycja przewodnika znajduje się na dokumencie magazynowym
::   WE: ZGP.ref()
::   WY: 1 jest na DK; 0 nie ma
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ND.cntx_psh();
DK.cntx_psh();
ZGP.cntx_psh();
ZGP.prefix();
{? _a<>null & ZGP.seek(_a)
|| DK.cntx_psh();
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   || {!
      |? DK.use('dokma'+ST.ODDZ+($OKR.ROK+2));
         ND.use('nagdo'+ST.ODDZ+($OKR.ROK+2));
         DK.index('ZGP');
         DK.prefix(_a);
         {? DK.first()
         || _wyn:=1
         ?};
         _wyn=0 & OKR.next()
      !}
   ?};
   OKR.cntx_pop();
   DK.cntx_pop()
?};
ZGP.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();
_wyn


\zgp_koop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Wyświetla rejestracje kooperacji do pozycji przewodnika
::       Kontekst pracy: ZGP, ZGH
::   WE: _a - sposób pracy: 1 (domyślnie) selekcja, 0 - brak selekcji, TAB - brak selekcji, odswieża przekazaną tabele
::   WY: _res.TAB, _res.WER
::----------------------------------------------------------------------------------------------------------------------
_res:=obj_new('TAB','WER');

{? var_pres('_a')=type_of(0)
|| _select:=_a
|? var_pres('_a')=type_of(SYSLOG)
|| _select:=0
|| _select:=1
?};

{? var_pres('_a')=type_of(SYSLOG)
|| _res.TAB:=_a
|| _res.TAB:=tab_tmp(1,
      'DT','DATE','Data',
      'ILOSC','REAL','Ilość - dobre',
      'IL_BRAK','REAL','Ilość - braki',
      'ZLGD','STRING[16]','$ZLGD.ref()',
      'F','INTEGER',''
   )
?};

_res.WER:=_res.TAB.mk_sel('Rejestracje do pozycji przewodnika (kooperacja)'@,,,'zgp_koop',,10,,,'U');
_res.TAB.win_fld(_res.WER,,'DT',,,,,,'Data'@);
_res.TAB.win_fld(_res.WER,,'ILOSC',,,15,ST.DOKL_P,,'Ilość — dobre'@);
_res.TAB.win_fld(_res.WER,,'IL_BRAK',,,15,ST.DOKL_P,,'Ilość — braki'@);
_fb:="
   {? var_pres('ProdRej')<0
   || FUN.info('Funkcja dostępna tylko od strony modułu rejestracji wykonań.'@)
   || Cntx.psh(ZLGD);
      ZLGD.use(8+cur_tab(1,1).ZLGD);
      Cntx.clr(ZLGD);
      {? ZLGD.seek(cur_tab(1,1).ZLGD)
      || exec('zlgd_popraw','zl_koop')
      ?};
      Cntx.pop(ZLGD)
   ?}
";
_res.TAB.win_act(_res.WER,,'Formuła','Popraw'@@,,,_fb,,,,,,'P');
task_attach('TTE_WYK_DWZL');
_fb:="
   {? var_pres('ProdRej')<0
   || FUN.info('Funkcja dostępna tylko od strony modułu rejestracji wykonań.'@)
   || Cntx.psh(ZLGD);
      ZLGD.use(8+cur_tab(1,1).ZLGD);
      Cntx.clr(ZLGD);
      {? ZLGD.seek(cur_tab(1,1).ZLGD)
      || exec('zlgd_usun','zl_koop')
      ?};
      Cntx.pop(ZLGD)
   ?}
";
_res.TAB.win_act(_res.WER,,'Formuła','Usuń'@@,,,_fb,,,,,,'U');
task_attach('TTE_WYK_DWZL');
_fb:="
   _tab:=cur_tab(1,1);
   _zlgd:=_tab.ZLGD;
   ZLGD.cntx_psh();
   ZLGD.use(8+_tab.ZLGD);
   ZLGD.prefix();
   {? ZLGD.seek(_tab.ZLGD)
   || exec('zlnd_sel','magdok_prod')
   ?};
   ZLGD.cntx_pop()
";
_res.TAB.win_act(_res.WER,,'Formuła','Dokumenty &magazynowe'@@,,,_fb,,,,,,'M');
_res.TAB.win_act(_res.WER,,'Menu','Fu&nkcje'@@,,,,,,,,,'N');
_fb:="
   ZLGD.cntx_psh();
   ZLGD.use(8+cur_tab(1,1).ZLGD);
   ZLGD.prefix();
   {? ZLGD.seek(cur_tab(1,1).ZLGD)
   || exec('zmiany','#syslog',ZLGD)
   ?};
   ZLGD.cntx_pop()
";
_res.TAB.win_act(_res.WER,,'Formuła','Zmiany — &wykonanie'@@,'#N',,_fb,,,,,,'W');
_fb:="
   Cntx.psh(ZLGD);
   ZLGD.use(8+cur_tab(1,1).ZLGD);
   Cntx.clr(ZLGD);
   {? ZLGD.seek(cur_tab(1,1).ZLGD)
   || exec('zlgd_wyswietl','zl_koop')
   ?};
   Cntx.pop(ZLGD)
";
_res.TAB.win_act(_res.WER,,'Wyświetl',,,,_fb);
_res.TAB.win_sel(_res.WER);

_tab:=sql('
   select
      ZLGD.DT as DT,
      ZLGD.IL as ILOSC,
      ZLGD.IL_BRAK as IL_BRAK,
      to_string(ZLGD.REFERENCE) as ZLGD
   from @ZLGD
   where
      ZLGD.ZGP=:_a and ZLGD.ZGH=:_b
',ZGP.ref(),ZGH.ref());

{? type_of(_tab)=type_of(~~) || exec('err_sql','#sql'); return(_res) ?};

exec('tab2tab','#table',_tab,_res.TAB);

{? _select || _res.TAB.select() ?};
_res


\zlgd_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsługa Popraw w oknie ZLGD dla kooperacji
::----------------------------------------------------------------------------------------------------------------------
{? ZLGD.KOOP='T'
|| _tab:=cur_tab(1,1);
   Cntx.psh(ZLGD,ZLGB);
   ZLGD.use(8+_tab.ZLGD);
   ZLGB.use('zlgb'+((8+_tab.ZLGD)+4));
   Cntx.clr(ZLGD,ZLGB);
   {? ZLGD.seek(_tab.ZLGD)
   || {? exec('_popraw','zl_wyk')
      || _tab.ILOSC:=ZLGD.IL;
         _tab.IL_BRAK:=ZLGD.IL_BRAK;
         _tab.put()
      ?}
   ?};
   Cntx.pop(ZLGD,ZLGB)

|| FUN.emsg('To nie jest zapis kooperacyjny.'@)
?};
~~


\zlgd_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsługa Usuń w oknie ZLGD dla kooperacji
::----------------------------------------------------------------------------------------------------------------------
{? ZLGD.KOOP='T'
|| _tab:=cur_tab(1,1);
   Cntx.psh(ZLGD,ZLGB);
   ZLGD.use(8+_tab.ZLGD);
   ZLGB.use('zlgb'+((8+_tab.ZLGD)+4));
   Cntx.clr(ZLGD,ZLGB);
   {? ZLGD.seek(_tab.ZLGD)
   || {? exec('zlgd_usun','zl_wyk')>0
      || _tab.del()
      ?}
   ?};
   Cntx.pop(ZLGD,ZLGB)

|| FUN.emsg('To nie jest zapis kooperacyjny.'@)
?};
~~


\zlgd_wyswietl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsługa Wyświetl w oknie ZLGD dla kooperacji
::----------------------------------------------------------------------------------------------------------------------
ZLGD.win_edit('RED_KOOP');
_kj_bad:=ZLGD.ZGP().KJ_BAD;
{? _kj_bad='N'
|| VAR1.IL:=ZLGD.IL;
   VAR1.IL_BRAK:=ZLGD.IL_BRAK;
   VAR1.BRAKI_R:=ZLGD.BRAKI_R
|| VAR1.IL:=ZLGD.DEK_IL;
   VAR1.IL_BRAK:=ZLGD.DEK_BR;
   VAR1.BRAKI_R:=ZLGD.DEK_RBR
?};
ZLGD.display();
~~


\rej_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsługa przycisku 'Rejestracje' w oknie rejestracji wykonań - przewodnik (kooperacja)
::   WE: _a - czy zapis jest zablokowany przez innego operatora
::       Kontekst pracy: PROD_REJ
::----------------------------------------------------------------------------------------------------------------------
PROD_REJ.ZGP();
PROD_REJ.ZGH();
exec('prepzch','zl_guide');
_zgp_koop:=exec('zgp_koop','zl_koop',0);
exec('zgp_koop','zl_koop',0,_zgp_koop.TAB);
_zgp_koop.TAB.win_sel(_zgp_koop.WER);
_zgp_koop.TAB.hdr_sel();
_zgp_koop.TAB.hdr_sel({? _a || ' — '+'PODGLĄD'@ || '' ?});
_zgp_koop.TAB.select(,,,{? _a || 'PUG' || '' ?});
~~


\dk_koop_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: Wyświetla listę dokumentów przyjęć z kooperacji lub automatycznie dołącza pozycje na podstawie tabeli refów
::   WE: [_a] - dodatkowa tabela z listą dozwolonych operacji (pole REF z $ZGP.ref lub $SC.ref).
::              Przekazane pozycje są dołączane w trybie automatycznym
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100 || _auto:=1; _ref_table:=_a || _auto:=0; _ref_table:=~~ ?};
:: dokument przychodowy - wydanie do kooperacji (selekcja pozycji przewodników)
{? ND.TYP().P='T'
|| _chkak:=exec('get','#params',500631,2);
   ZGP.win_sel('SLO_KOOP');
   exec('zgp_icons','zl_guide','SLO_KOOP');
   {? var_pres('_refs')>100 || obj_del(_refs) ?};
:: Tworzę listę kooperacji, które mają jeszcze nierozliczone ilości
   _refs:=tab_tmp(,'REF','STRING[16]','ZGP.ref()');
   ZGP.cntx_psh();
   ZGP.clear();
   {? ZGP.find_tab('first',
::                           'KONTRAH',,'<>',null(),
                           'ZL','ODDZ','=',ST.ODDZ,
                           'ZL','STAN','=','O',
                           'NRZLP','STAT_REJ','=','T',
                           'SRW',,'=','M',
                           'STATUS',,{? _chkak='T' || '=' || '<>' ?},
                              {? _chkak='T' || exec('status_pending','zl_guide') || exec('status_end','zl_guide') ?},
                           'ZL',,{? ND.ZL<>null() || '=' || '<>' ?},{? ND.ZL<>null() || ND.ZL || null() ?})
   || {!
      |?
         {? (ZGP.ILOSC-(ZGP.IL+ZGP.IL_BRAK)-ZGP.IL_KOOP>0)
         || _add:=1
         ||
::          Jeżeli rozliczono więcej niż wynika z przewodnika to sprawdzam, czy nie wydano więcej ilość
::          w operacjach poprzedzających
            _ilpop:=exec('il_na_poprz','zl_guide',ZGP.ref());
            _add:=(_ilpop-(ZGP.IL+ZGP.IL_BRAK)-ZGP.IL_KOOP>0)
         ?};
         {? _add>0
         || _refs.REF:=$ZGP.ref();
            _refs.add()
         ?};
         ZGP.find_tab('next',
::                             'KONTRAH',,'<>',null(),
                             'ZL','ODDZ','=',ST.ODDZ,
                             'ZL','STAN','=','O',
                             'NRZLP','STAT_REJ','=','T','SRW',,'=','M',
                             'STATUS',,{? _chkak='T' || '=' || '<>' ?},
                                {? _chkak='T' || exec('status_pending','zl_guide') || exec('status_end','zl_guide') ?},
                             'ZL',,{? ND.ZL<>null() || '=' || '<>' ?},{? ND.ZL<>null() || ND.ZL || null() ?})
      !}
   ?};
   _from:=_where:='';
   _from:='join ZGH using(ZGP.NRZLP,ZGH.REFERENCE) join ZL using(ZGP.ZL,ZL.REFERENCE)';
   _sort:='ZL';
   _where+=
::           '(ZGP.ILOSC-(ZGP.IL+ZGP.IL_BRAK)-ZGP.IL_KOOP>0) '
           ' ZGP.REFERENCE in (select REF from :_a) '
           ' and (ZGP.KONTRAH=\''+$ND.KH+'\' or ZGP.KONTRAH is null)'
           ' and ZL.ODDZ=\''+ST.ODDZ+'\''
           ' and ZL.STAN=\'O\''
           ' and ZGH.STAT_REJ=\'T\''
           ' and ZGP.SRW=\'M\'';
   {? ND.ZL<>null() || _where+=' and ZGP.ZL=\''+$ND.ZL+'\'' ?};
:: Jest kontrola ilości na przewodnikach zleceń - pokazuje operacje wykonywane
   {? _chkak='T'
   || _where+=' and ZGP.STATUS=\''+exec('status_pending','zl_guide')+'\''
:: Nie ma kontroli ilości na przewodnikach zleceń - pokazujemy wszystkie operacje oprócz wykonanych
   |? _chkak='N'
   || _where+=' and ZGP.STATUS<>\''+exec('status_end','zl_guide')+'\''
   ?};
   ZGP.clear();
   ZGP.f_clear();
   ZGP.f_set(_sort,_from,_where,_refs);
   {? ZGP.f_size()>0 | _auto>0
   || params_set('sort',_sort,'from',_from,'where',_where,'args',_refs);
      {? _auto=0
      || ZGP.select()
      ||
::       Tryb automatyczny, dodanie pozycji na bazie przekazanej tabeli
         {? _ref_table.first()
         || DK.cntx_psh();
            DK.prefix();
            {!
            |?
               {? ZGP.f_seek(_ref_table.REF)
               || {? exec('chk_zgp4koop','zl_koop',{? VAR.GRUPA='T' || 2 || 1 ?},ND.KH,ND.ZL,ST.ODDZ)
                  || exec('add_dk_p','zl_koop',1)
                  ?}
               ||
::                Operacja nie spełnia warunków dołączenia (sprawdzenie czy znajdzie operację poza filtrem)
                  {? ZGP.seek(_ref_table.REF,,1)
                  ||
::                   Dodanie komunikatu błędu
                     {? exec('chk_zgp4koop','zl_koop',{? VAR.GRUPA='T' || 2 || 1 ?},ND.KH,ND.ZL,ST.ODDZ)
                     ||
::                      Nieobsłużony komunikat błędu, dodaje standardową informację
                        _opis:=ZGP.NRZLP().NRPRZ+', poz. %1: '@[exec('ZGP','#to_string',1)];
                        _msg:='Nie udało się dołączyć operacji: %1'@[_opis];
                        {? VAR.GRUPA='T'
                        || KOMM.add(_msg)
                        || FUN.info(_msg)
                        ?}
                     ?}
                  ?}
               ?};
               _ref_table.next()
            !};
            DK.cntx_pop()
         ?};
         {? VAR.GRUPA='T' || KOMM.select() ?}
      ?}
   || {? _auto=0
      ||
         {? ND.ZL<>null()
         || _msg:='Brak pozycji do wydania dla kontrahenta %1 i zlecenia %2.'@[ND.KH().SKR,ND.ZL().SYM];
            _msg+='\n\n';
            _kh:=sql('
               select distinct
                  ZGP.KONTRAH as KH_REF,
                  KH.SKR as KH_S
               from ZGP
                  join ZGH using(ZGP.NRZLP,ZGH.REFERENCE)
                  join ZL using(ZGP.ZL,ZL.REFERENCE)
                  join KH using(ZGP.KONTRAH,KH.REFERENCE)
               where
                  ZGP.REFERENCE in (select REF from :_c)
::               ZGP.ILOSC-(ZGP.IL+ZGP.IL_BRAK)-ZGP.IL_KOOP>0
                  and ZL.ODDZ=\':_a\' and ZL.STAN=\'O\' and ZGH.STAT_REJ=\'T\' and ZGP.SRW=\'M\' and ZGP.ZL=:_b
            ',ST.ODDZ,ND.ZL,_refs);
            {? _kh.first()
            || _msg+='Zlecenie ma aktywne pozycje przypisane do kontrahentów:'@;
               {!
               |? _msg+='\n• '+_kh.KH_S;
                  _kh.next()
               !}
            || _msg+='Zlecenie nia ma aktywnych pozycji przypisanych do kontrahentów.'@
            ?}
         || _msg:='Brak pozycji do wydania dla kontrahenta %1.'@[ND.KH().SKR]
         ?};
         FUN.info(_msg)
      ?}
   ?};
   ZGP.f_clear();
   ZGP.cntx_pop()

:: dokument rozchodowy - przyjecie z kooperacji (selekcja nierozliczonych pozycji dokumentów)
|| {? ND.KH<>null()
   || exec('koop_akt','zl_koop',ND.KH,ND.ZL,_ref_table)
   || FUN.info('Brak kontrahenta na nagłówku dokumetu.'@)
   ?}
?};
~~


\koop_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: Kooperacja w kooperacji
::   WE: [_a] - KH.ref() ograniczenie do danego kontrahenta
::       [_b] - ZL.ref() ograniczenie do danego zlecenia
::       [_c] - dodatkowa tabela z listą dozwolonych operacji (pole REF z $SC.ref).
::              Przekazane pozycje są dołączane w trybie automatycznym
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) || _kh:=_a || _kh:=null() ?};
{? var_pres('_b')=type_of(null()) || _zl:=_b || _zl:=null() ?};
{? var_pres('_c')>100 || _auto:=1; _ref_table:=_c || _auto:=0; _ref_table:=~~ ?};

_sck:=exec('koop_akt_table','zl_koop');
params_set('KH',_kh,'ZL',_zl);

exec('koop_akt_load','zl_koop',_sck,_kh,_zl,null());

_sc_sel:=exec('win_sck','zl_koop',_sck,_kh<>null());
_sck.win_sel(_sc_sel);
_sck.clear();
_jestsd:=0;
{? _sck.first()
|| {!
   |? {? _sck.SD>0 || _jestsd:=1?};
      _jestsd=0 & _sck.next()
   !}
?};
{? _jestsd & _sck.first()
|| {? _auto=0
   || _sck.select()
   ||
::    Tryb automatyczny, dodanie pozycji na bazie przekazanej tabeli
      {? _ref_table.first()
      ||
         DK.cntx_psh();
         DK.prefix();
         {!
         |?
            {? _sck.find_tab(,'REF',,'=',_ref_table.REF)
            || {? exec('chk_sck4koop','zl_koop',_sck,{? VAR.GRUPA='T' || 2 || 1 ?},ND.KH,ND.ZL)
               || exec('add_dk_w','zl_koop',_sck,_sck.ref())
               ?}
            ||
::             Operacja nie spełnia warunków dołączenia (brak przekazanego rekordu dostawy w tabeli _sck)
               _sc_ref:=exec('FindAndGet','#table',SC,_ref_table.REF,,,null());
               {? var_pres('_sck1')>100 || obj_del(_sck1) ?};
               _sck1:=exec('koop_akt_table','zl_koop');
               exec('koop_akt_load','zl_koop',_sck1,null(),null(),_sc_ref);
::             Sprawdzenie, czy istnieje produkt kooperacji wg podanej dostawy
               {? _sck1.first()
               ||
::                Jest powiązany dokument kooperacji z daną dostawą
::                Dodanie komunikatu błędu
                  {? exec('chk_sck4koop','zl_koop',_sck1,{? VAR.GRUPA='T' || 2 || 1 ?},ND.KH,ND.ZL)
                  ||
::                   Nieobsłużony komunikat błędu, dodaje standardową informację
                     _opis:=exec('FindAndGet','#table',ZGP,_sck1.ZGP,,
                        "ZGP.NRZLP().NRPRZ+', poz. %1: '@[exec('ZGP','#to_string',1)",'');
                     _msg:='Nie udało się dołączyć operacji: %1'@[_opis];
                     {? VAR.GRUPA='T'
                     || KOMM.add(_msg)
                     || FUN.info(_msg)
                     ?}
                  ?}
               ||
::                Nie ma powiązanego dokumentu kooperacji z daną dostawą
                  _opis:='';
                  _srdk:=exec('FindAndGet','#table',SC,_ref_table.REF,,"SC.SRDK",'');
                  {? _srdk<>''
                  || _opis:=exec('FindAndGet','#table',DK,_srdk,,
                        "exec('FindAndGet','#table',ND,DK.N,,\"SYM\",'')+', poz.'+$DK.P",'')
                  ?};
                  _msg:='Nie udało się dołączyć produktu operacji wg dokumentu %1.'@[_opis];
                  {? VAR.GRUPA='T'
                  || KOMM.add(_msg)
                  || FUN.info(_msg)
                  ?}
               ?}
            ?};
            _ref_table.next()
         !};
         DK.cntx_pop()
      ?};
      {? VAR.GRUPA='T' || KOMM.select() ?}
   ?};
   _sck.prefix();
   {? _sck.first()
   || {!
      |? exec('blk_unlock','#table','SC',exec('FindAndGet','#table',SC,_sck.REF));
         _sck.next()
      !}
   ?}
|| FUN.info('Brak produktów w kooperacji.'@)
?};
''


\koop_akt_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Zwraca tabelę tymczasową stanów w kooperacji (sam schemat)
::   WY: tab_tmp() "_sck"
::----------------------------------------------------------------------------------------------------------------------
_sck:=tab_tmp(3,
    'D','DATE','Data'@,
    'DA','DATE','Data akceptacji'@,
    'TA','TIME','Czas akceptacji'@,
    'KTM','STRING[50]','Indeks'@,
    'N','STRING[100]','Nazwa'@,
    'KH_KOD','STRING[8]','Kooperant'@,
    'KH_SKR','STRING[8]','Kontrahent'@,
    'KH_NAZ','STRING[100]','Nazwa'@,
    'ND_SYM','STRING[20]','Dok.wydania',
    'ZL_SYM','STRING[20]','Zlecenie'@,
    'ILW','REAL','Ilość wydana'@,
    'ILWP','REAL','Ilość w przyjęciu'@,
    'S','REAL','Stan'@,
    'SD','REAL','Dostępne'@,
    'CP','REAL','Cena przed korektą'@,
    'C'  ,'REAL','Cena'@,
    'SCC','REAL','Cena w walucie'@,
    'WAL','STRING[4]','Waluta'@,
    'WAR01','STRING[25]','Wartość 01'@,
    'WAR02','STRING[25]','Wartość 02'@,
    'WAR03','STRING[25]','Wartość 03'@,
    'WAR04','STRING[25]','Wartość 04'@,
    'WAR05','STRING[25]','Wartość 05'@,
    'WAR06','STRING[25]','Wartość 06'@,
    'WAR07','STRING[25]','Wartość 07'@,
    'WAR08','STRING[25]','Wartość 08'@,
    'WAR09','STRING[25]','Wartość 09'@,
    'WAR10','STRING[25]','Wartość 10'@,
    'RDK','REAL','rdk',
    'NDK','STRING[16]','ndk',
    'SRDK','STRING[16]','srdk',
    'PRDK','STRING[16]','prdk',
    'REF','STRING[16]','ref sql',
    'ZD_POZ','STRING[16]','$ZD_POZ.ref',
    'DK_C','STRING[16]','ref dk_c',
    'CECHA','STRING[20]','Cecha'@,
    'ICON','STRING[16]','Ikona',
    'JM','STRING[10]','jm'@,
    'DOKL','REAL','dokladnosc',
    'DOKL_C','REAL','dokladnosc ceny',
    'STATS','STRING[16]','$STATS.ref',
    'MAT','STRING[16]','ref mat',
    'MAG','STRING[16]','ref mag',
    'SCEAN','STRING[128]','identyfikator dostawy',
    'ZGP','STRING[16]','ref zgp',
    'ZGHNRPRZ','STRING[30]','Przewodnik'@,
    'ZGP_NRP','INTEGER','Poz.',
    'ZGP_OPIS','STRING[60]','Opis'@,
    'ZPARN','STRING[16]','ZPARN.ref()',
    'PAR_SYM','STRING[25]','Partia',
    'KH_REF','STRING[16]','KH.ref()',
    'ZL_REF','STRING[16]','ZL.ref()'
);

_sck.fld_fml('S','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
_sck.fld_fml('S','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
DISP.fld_fml('SD','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
DISP.fld_fml('SD','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
DISP.fld_fml('ILWW','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
DISP.fld_fml('ILWW','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
DISP.fld_fml('ILR','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
DISP.fld_fml('ILR','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
DISP.fld_fml('ILD','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
DISP.fld_fml('ILD','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
_sck.fld_fml('C','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL_C || $ST.DOKL_C ?}");
_sck.fld_fml('C','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL_C || $ST.DOKL_C ?}");
_sck.fld_fml('SCC','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL_C || $ST.DOKL_C ?}");
_sck.fld_fml('SCC','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL_C || $ST.DOKL_C ?}");
_sck


\koop_akt_load
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Ładuje zawartość do tabeli tymczasowej stanów w kooperacji
::   WE: _a - tab_tmp() "_sck"
::       _b - KH.ref() - jeżeli <> null() to ładuje dane tylko dla wskazanego kontrahenta
::       _c - ZL.ref() - jeżeli <> null() to ładuje dane tylko dla wskazanego zlecenia
::       _d - SC.ref() - jeżeli <> null() to ładuje dane tylko jednego stanu (SC)
::----------------------------------------------------------------------------------------------------------------------
_sck:=_a;
_kh:=_b;
_zl:=_c;
_sc:=_d;

_refmag:=exec('FindInSet','#table','MG','KOOP','T',ST.ODDZ);

M.cntx_psh();
ZL.cntx_psh();
SC.cntx_psh();
SM.cntx_psh();
SM.use('stm__'+ST.ODDZ+'zb');
DK.cntx_psh();
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? _refmag<>null() & OKR.first()
|| {!
   |? SC.use('stc__'+ST.ODDZ+($OKR.ROK+2));
      SC.index('SE');
      SC.prefix(_refmag);
      {? SC.first()
      || DK.use('dokma'+ST.ODDZ+($OKR.ROK+2));
         {!
         |? {? SC.A='T' & (_sc=null() | _sc<>null() & _sc=SC.ref())
            || _sck.blank();
               _sck.D:=SC.D;
               _sck.KTM:=SC.M().KTM;
               _sck.N:=SC.M().N;
               _sck.S:=SC.S;
               _sck.CP:=SC.C;
               _sck.C:=exec('cena_mag','ceny',SC.M,SC.RDK,SC.NDK,SC.MAG,SC.C);
               _sck.SCC:=SC.SCC;
               _sck.WAL:=SC.SCWAL().KOD;
               _sck.RDK:=SC.RDK;
               _sck.NDK:=SC.NDK;
               _sck.SRDK:=SC.SRDK;
               _sck.PRDK:=SC.PRDK;
               _sck.REF:=$SC.ref();
               _sck.ZD_POZ:=exec('dk_dla_zdp','magazyn_stan',SC.RDK,SC.NDK);
               _sck.DK_C:=$SC.DK_C;
               _sck.DA:=SC.DA;
               _sck.TA:=SC.TA;
               _sck.ICON:=SC.STATS().ICON;
               _sck.JM:=SC.M().J().KOD;
               _sck.DOKL:=SC.M().DOKL;
               _sck.DOKL_C:=SC.M().DOKL_C;
               _sck.STATS:=$SC.STATS;
               _sck.MAT:=$SC.M;
               _sck.MAG:=$SC.MAG;
               _sck.SCEAN:=SC.SCEAN;
               {? _sck.RDK<>0
               || {? _kh<>null() || _kh_ok:=0 || _kh_ok:=1 ?};
                  {? _zl<>null() || _zl_ok:=0 || _zl_ok:=1 ?};
                  ND.cntx_psh();
                  DK.cntx_psh();
                  ND.use('nagdo'+(_sck.NDK+3));
                  DK.use(_sck.NDK);
                  DK.index('DOST3');
                  DK.prefix(_refmag,SC.M,_sck.RDK,_sck.NDK,'T');
                  {? DK.first() & DK.N().STAT_REJ='T'
                  || _sck.KH_KOD:=DK.N().KH().KOD;
                     _sck.KH_SKR:=DK.N().KH().SKR;
                     _sck.KH_NAZ:=DK.N().KH().NAZ;
                     _sck.KH_REF:=$DK.N().KH;
                     _sck.ND_SYM:=DK.N().SYM;
                     _sck.ZL_SYM:={? DK.ZL<>null() || DK.ZL().SYM |? DK.N().ZL<>null() || DK.N().ZL().SYM || '' ?};
                     _sck.ILW:=DK.IL;
                     _sck.ZGP:=$DK.ZGP;
                     _sck.ZGP_NRP:=DK.ZGP().NRP;
                     _sck.ZGP_OPIS:=DK.ZGP().OPIS;
                     _sck.ZGHNRPRZ:=DK.ZGP().NRZLP().NRPRZ;
                     _sck.ZPARN:=$DK.PARTIA;
                     {? DK.PARTIA<>null()
                     || _sck.PAR_SYM:=exec('FindAndGet','#table',ZPARN,DK.PARTIA,,"ZPARN.SYM",'')
                     || _sck.PAR_SYM:=''
                     ?};
                     _sck.ZL_REF:=$DK.ZL;
                     {? _kh<>null() & DK.N().KH=_kh || _kh_ok:=1 ?};
                     {? _zl<>null() & DK.ZL=_zl || _zl_ok:=1 ?}
                  ?};
                  DK.cntx_pop();
                  ND.cntx_pop()
               ?};
               {? _kh_ok & _zl_ok
               ||
                  _sck.add();

                  _niedst:=(1+(SC.MAG().TYP))<>'D';
                  {? _sck.RDK<>0
                  ||
                     DISP.ILWW:=exec('obl_ssc','magazyn_stan',_sck.RDK,_sck.NDK,SC.MAG,SC.M,'S');
                     DISP.ILR:=exec('obl_rsc','magazyn_stan',_sck.RDK,_sck.NDK,SC.MAG,SC.M,_niedst);
                     DISP.SC_R:=exec('oblkoszr','magazyn_stan',_sck.RDK,_sck.NDK,SC.MAG,SC.M);

                     _stad:=exec('FindInSet','#table','SM','SM',SC.M,SC.MAG,"SM.SD",,,0);

                     _akt_rez:=0;
                     {? HELP.POP & ATR.MJS='REZ'
                     || _refrez:=REZ.ref();
                        REZ.cntx_psh();
                        REZ.clear();
                        {? REZ.seek(_refrez) || _akt_rez:=REZ.ILR ?};
                        REZ.cntx_pop()
                     ?};
                     DISP.SD:=_sck.S-DISP.ILR-DISP.ILWW+{? HELP.POP & HELP.RDK=_sck.RDK & HELP.NDK=_sck.NDK || HELP.IL || 0 ?};
                     {? _akt_rez>0
                     || {? (DISP.SD+_akt_rez)<=_sck.S
                        || DISP.SD+=_akt_rez
                        || DISP.SD:=_sck.S
                        ?}
                     ?};
                     {? DISP.SD<0
                     || DISP.SD:=0
                     ?};
                     {? DISP.SD>(_stad+_akt_rez) || DISP.SD:=(_stad+_akt_rez) ?};
                     DISP.SC_S:=DISP.SC_P+DISP.SC_R;

                     _sck.SD:=DISP.SD;
                     _sck.ILWP:=DISP.ILWW;
                     DK_C.prefix();
                     {? DK_C.seek(_sck.DK_C)
                     || _sck.CECHA:=DK_C.SYM
                     ?};
                     _sck.put()
                  ?}
               ?}
            ?};
            SC.next()
         !}
      ?};
      OKR.next()
   !}
?};

OKR.cntx_pop();
DK.cntx_pop();
SC.cntx_pop();
SM.cntx_pop();
ZL.cntx_pop();
M.cntx_pop();
~~


\win_sck
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: Okno dla stanów w kooperacji _sck
::   WE: _a - tab_tmp() "_sck"
::       _b - 1 - jest akcja WYBIERZ (sel_exit) (i prefiksowanie kontrahentem)
::            0 - nie ma akcji WYBIERZ, jest akcja "Dokumenty kooperacji", "Zakres"
::----------------------------------------------------------------------------------------------------------------------
_sck:=_a;

_sc_sel:=_sck.mk_sel('Produkty w kooperacji'@,,0,'ddffssgsfsaadso',,,,,'U','T',,,,'html_maximized');
_sck.win_fld(_sc_sel,,'KTM',,,15);
_sck.win_fld(_sc_sel,,'N',,,20);
_sck.win_fld(_sc_sel,,'ZL_SYM',,,10);
_sck.win_fld(_sc_sel,,'ZGHNRPRZ',,,10);
_sck.win_fld(_sc_sel,,'ZGP_NRP',,,-3,,,'Pozycja'@);
_sck.win_fld(_sc_sel,,'ZGP_OPIS',,,10);
_sck.win_fld(_sc_sel,,'KH_SKR',,,8);
_sck.win_fld(_sc_sel,,'KH_NAZ',,,16);
_sck.win_fld(_sc_sel,,'D',,,10,,,'Data wydania'@);
_sck.win_fld(_sc_sel,,'ND_SYM',,,-20,,,'Dokument wydania'@);
_sck.win_fld(_sc_sel,,'ILW',,,12,ST.DOKL);
_sck.win_fld(_sc_sel,,'SD',,,12,ST.DOKL,,'W kooperacji'@);
_sck.win_fld(_sc_sel,,'ILWP',,,12,ST.DOKL,,'W przyjęciu'@);
_sck.win_fld(_sc_sel,,'JM',,,3,0,,'jm'@);
::_sck.win_fld(_sc_sel,,'CECHA',,,8,,,'Cecha'@);
{? _b
|| _sck.win_act(_sc_sel,,'Formuła','Wybierz'@@,,'Wybór bieżącego zapisu'@,,
      "exec('sck_sel','zl_koop')",1,1,"exec('gb_sck_sel','zl_koop')","exec('ga_sck_sel','zl_koop')",'W'
   )
?};
_sck.win_act(_sc_sel,,'Formuła','Odśwież'@@,,'Odświeżenie widoku'@,"params_exec('reload','zl_koop')",,,,,,'O');
::_sck.win_act(_sc_sel,,'Formuła','Opis &cechy'@,,,"exec('dk_cechy','zl_koop')",,,,,,'C');
{? ~_b
|| _sck.win_act(_sc_sel,,'Formuła','Wystaw dokument'@@,,,"exec('action_create_pk','zl_koop')",,,1,
      "exec('action_create_pk_gpr','zl_koop')",,'W');
   task_attach('TTE_WYK_DKOP');
   _formula:="exec('dokumenty','zl_koop'); params_exec('reload','zl_koop')";
   _sck.win_act(_sc_sel,0,'Formuła','Dokumenty kooperacji'@@,,'Dokumenty magazynowe kooperacji'@,_formula,,,,,,'D');
   task_attach('TTE_WYK_DKOW');
   task_attach('TTE_WYK_DKOP');
   _sck.win_act(_sc_sel,1,'Formuła','Dokumenty kooperacji'@@,,'Dokumenty magazynowe kooperacji'@,_formula,,,,,,'D');
   task_attach('TTE_WYK_DKOW');
   task_attach('TTE_WYK_DKOP');
   _sck.win_btn(_sc_sel,'text=%1,panel=bottom,align=begin'['Dokumenty kooperacji'@],'menu:D');
   task_attach('TTE_WYK_DKOW');
   task_attach('TTE_WYK_DKOP');
   _sck.win_act(_sc_sel,0,'Formuła','P&arametry pracy'@@,,'Parametry sesji'@,"exec('edit_parses','zl_koop')",,,,,,'A');
   _sck.win_act(_sc_sel,1,'Formuła','P&arametry pracy'@@,,'Parametry sesji'@,"exec('edit_parses','zl_koop')",,,,,,'A');
   _sck.win_act(_sc_sel,0,'Formuła','Zakre&s'@@,,'Zakres wyświetlanych kooperacji'@,
      "params_exec('zakres','zl_koop')",,,,,,'S');
   _sck.win_act(_sc_sel,1,'Formuła','Zakre&s'@@,,'Zakres wyświetlanych kooperacji'@,
      "params_exec('zakres','zl_koop')",,,,,,'S')
?};
_sck.win_act(_sc_sel,,'Kolejność');
_sck.win_fml(_sc_sel,,'S' ,,'ICON_BEFORE',"{? cur_tab(1,1).ICON<>'' || cur_tab(1,1).ICON || '' ?}",2);
_sc_sel


\sck_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: WYBIERZ - Selekcja stanow w kooperacji "__sck"
::----------------------------------------------------------------------------------------------------------------------
_sck:=cur_tab(1,1);
{? _sck.sel_size()>0
|| {? exec('chk_sck4koop','zl_koop',_sck,2)
   || exec('add_dk_w','zl_koop',_sck,_sck.ref())
   ?}
|| {? exec('chk_sck4koop','zl_koop',_sck,1)
   || sel_exit();
      {? exec('add_dk_w','zl_koop',_sck,_sck.ref())
      || exec('dk_edit','magdok_poz')
      ?}
   ?}
?};
1


\gb_sck_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: grupa przed WYBIERZ - Selekcja stanow w kooperacji "__sck"
::----------------------------------------------------------------------------------------------------------------------
_sck:=cur_tab(1,1);
_sck.cntx_psh();
_sck_ok:=1;
_tab:=_sck.sel_aget();
KOMM.init(150,,'Dołączanie pozycji dokumentu przyjęcia z kooperacji'@,'');
{? ~_tab.first() || _sck.cntx_pop(); return(0) ?};
::{!
::|? _sck.seek(_tab.REF,);
::   {? _sck.SD<=0 || _sck_ok:=0 ?};
::   _sck_ok & _tab.next()
::!};
_sck.cntx_pop();
{? ~_sck_ok
|| FUN.ask(
      'Wybrano pozycje z zerową ilością z kooperacji.'
      '\nNie zostaną one dodane do dokumentu.'
      '\nCzy kontynuować?'@
   )
|| 1
?}


\ga_sck_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: grupa po WYBIERZ - Selekcja stanow w kooperacji "__sck"
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
sel_exit()


\dk_cechy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: wyswietlanie cech dla stanow magazynowych (__sck)
::----------------------------------------------------------------------------------------------------------------------
_sck:=cur_tab(1,1);
{? _sck.DK_C<>''
||
   DK_C.prefix();
   {? DK_C.seek(_sck.DK_C)
   || SC.DK_C().NAZ;
      DK_C.memo_get(,'O');
      DK_C.memo_view(,'O')
   ?}
|| FUN.info('Brak cechy dla dostawy.'@)
?};
''


\add_dk_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: dodaje pozycje dokumentu magazynowego
::  WE: _a - "__sck"
::      _b - "__sck".ref()
::  WY: wynik DK.add()
::----------------------------------------------------------------------------------------------------------------------
_sck:=_a;
_ref:=_b;

_wyn:=0;
_sck.cntx_psh();
_sck.prefix();
{? _sck.seek(_ref)
||
:: Stan jest blokowany przy wyborze, ale odblokowany dopiero po wyjściu z okna
   _sc_ref:=exec('FindAndGet','#table',SC,_sck.REF);
   {? exec('blk_lock','#table','SC',_sc_ref,,,'Zasób zablokowany'@)
   ||
::    Odświeżenie danych z SC
      _sck1:=exec('koop_akt_table','zl_koop');
      exec('koop_akt_load','zl_koop',_sck1,null(),null(),_sc_ref);
      {? _sck1.first()
      || _sck.SD:=_sck1.SD;
         _sck.put()
      ?};

      DK.blank();
      DK.M:=exec('FindAndGet','#table',M,_sck.MAT);
      DK.JM:=DK.M().J;
      DK.IL:=_sck.SD;

      DK.DOST:=_sck.D;
      DK.RDK:=_sck.RDK;
      DK.NDK:=_sck.NDK;
      DK.PRDK:=_sck.PRDK;
      DK.SRDK:=_sck.SRDK;
      DK.C:=_sck.C;
      DK.WAR:=(DK.IL*DK.C)$2;

      ZGP.prefix();
      {? ZGP.seek(_sck.ZGP,(form(8+_sck.ZGP)))
      || DK.ZGP:=ZGP.ref();
         DK.ZL:=ZGP.NRZLP().ZLEC
      ?};
      {? _sck.ZPARN<>''
      || DK.PARTIA:=exec('FindAndGet','#table',ZPARN,_sck.ZPARN,,,null())
      ?};
      _wyn:=DK.add()
   ?}
?};
_sck.cntx_pop();
_wyn


\dokumenty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Selekcja dokumentów kooperacyjnych
::----------------------------------------------------------------------------------------------------------------------
USERS_UP.cntx_psh();
USERS_UP.index('MAG');
USERS_UP.prefix(OPERATOR.USER,'MG',ST.MAG);
_upr_mag:=USERS_UP.first();
USERS_UP.cntx_pop();
{? ~_upr_mag
|| FUN.info('Nie można uruchomić funkcji — brak uprawnień do magazynu %1.'@[ST.MAG_SYM]);
   return(0)
?};

{? ~exec('typydok_'+exec('spr_uprTyp','lmg'),'lmg') || return(0) ?};

:: ikonki dla pól
exec('eanx_wys','okienka');
BEER.TYPYDOK:=null();
ST.TYPYDOK:=null();
DISP.TYP:='';
DISP.KHNAZ:='';
POM.TAB:='ND';
POM.TYPDOK:='';
POM.NRT:=0;
BEER.SZ:='';
exec('ustaw_ww','eurusd','M');
exec('ust_lw','eurusd',0);
POMOC.RODZ:='T';
ND.index('NAGDOK');
FAKS.win_dict('WER6');
ND.win_sel('WER');

BPMN.TYP_MG:='K';
_filter_status:=FILTER.STATUS;
FILTER.STATUS:='M';

_win_grp:=ND.grp_make('Dokumenty kooperacji'@,"exec('DokMR','zl_koop')",'dokum_mag',20,5,,,'html_maximized');

:: Dokumenty
ND.grp_sel(_win_grp,TYPYDOK,'TYP_MAG','Dokumenty'@,"exec('pd_grp_typydok','lmg')",,,20
 ,"exec('pr_grp_typydok','lmg')",,,,'maximized');
ND.tab_splt(_win_grp,,'vertical','dokumenty',',33%');
ND.grp_sel(_win_grp,ND,'WERP',,"exec('pd_grp_nd','lmg')",,,20
 ,"exec('pr_grp_nd','lmg')",,,,'maximized','WER',1);

:: Stany magazynowe
ND.grp_sel(_win_grp,SM,'STANY_ML','Stany magazynowe'@,"exec('pd_grp_sm','lmg')",,,20
 ,"exec('pr_grp_sm','lmg')",,,,'maximized');

ND.win_sel(_win_grp);
exec('lmg_mag_stn_act','lmg');
ND.win_fml('WERP',,'SYM',,'ICON_BEFORE',exec('nd_sym_ib','magdok_nag'));
ND.win_fml('WERP',,'NR',,'ICON_BEFORE',exec('nd_sym_it','magdok_nag'));
ND.win_fml('WERP',,'WAR',,'ICON_BEFORE',exec('nd_war_ib','magdok_nag'));

ND.select();

FILTER.STATUS:=_filter_status;
~~


\sl_koop_rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: na rekord dla okienka ZGP.SL_KOOP, ZGP.WER_KOOM, ZGP.WER_KOOM (bez kolorowania wierszy)
::----------------------------------------------------------------------------------------------------------------------
VAR.ILOSC:=exec('do_wydania','zl_koop');
exec('przp_dsp','zl_guide');
VAR.A_ZLEC:=ZGP.ZL;
VAR.A_ZLEC();
~~


\do_wydania
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Wylicza ilość 'do wydania' dla bieżącego rekordu ZGP
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? exec('get','#params',500631,2)='N' | exec('is_first_op','zl_guide',ZGP.ref())
|| _result:=ZGP.ILOSC-(ZGP.IL+ZGP.IL_BRAK)-ZGP.IL_KOOP
|| ZGH.cntx_psh(); ZL.cntx_psh();
   _dokl:=exec('jaka_dok_m','jm',ZGP.NRZLP().ZLEC().KTM);
   ZGH.cntx_pop(); ZL.cntx_pop();
   _il_na_poprz:=exec('il_na_poprz','zl_guide',ZGP.ref());
   _il_na_poprz:={? _dokl>0 || _il_na_poprz$_dokl || floor(_il_na_poprz) ?};
   _result:=_il_na_poprz-(ZGP.IL+ZGP.IL_BRAK)-ZGP.IL_KOOP
?};
:: Minusy normalizujemy do 0
_result:=exec('max','#math',0,_result);
_result


\zgh_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: wyswietla pozycje przewodnika
::----------------------------------------------------------------------------------------------------------------------
_env_guide:=exec('env_guide','zl_guide');
_env_guide.used:=1;
_env_guide.WP:=ZGH.ZLEC().TYP().WP;

_params_get:=params_get();

{? var_pres('_params_get')<>type_of(~~) & var_pres('env_koop',_params_get)>100
|| params_set('env_guide',_env_guide,'env_koop',params_get().env_koop)
|| params_set('env_guide',_env_guide)
?};

ZGP.cntx_psh();
:: Skasowanie filtra, o ile przekazany w kontekście
{? var_pres('_params_get')<>type_of(~~) & var_pres('sort',_params_get)=type_of('')
|| ZGP.f_clear()
?};
exec('przh_poz','zl_guide',2,ZGP.ref());
ZGP.prefix();
ZGP.cntx_pop();

:: Przywrócenie filtra, o ile przekazany w kontekście
{? var_pres('_params_get')<>type_of(~~) & var_pres('sort',_params_get)=type_of('')
|| ZGP.f_set(params_get().sort,params_get().from,params_get().where,params_get().args)
|| exec('skip','zl_koop')
?};
~~


\zgp_koop_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: ten na ZGP
::----------------------------------------------------------------------------------------------------------------------
{? ZGP.sel_size()>0
|| exec('add_dk_p','zl_koop',1)
|| exec('add_dk_p','zl_koop'); sel_exit()
?};
''


\gb_zgp_koop_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: ten na ZGP grupa przed
::----------------------------------------------------------------------------------------------------------------------
KOMM.init(150,,'Dołączanie pozycji dokumentu wydania do kooperacji'@,'');
sel_nchk();
1


\ga_zgp_koop_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: ten na ZGP grupa po
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
sel_exit()


\add_dk_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: dodaje pozycje dok. mag. przychodowego (wydanie do kooperacji)
::    WE: _a - 1 wykonywane w akcji grupowej 0 pojedynczy rekord
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0  ?};

ZGP.get();
{? exec('chk_zgp4koop','zl_koop',{? _a || 2 || 1 ?},ND.KH)
|| VAR.ILOSC:=exec('do_wydania','zl_koop');
   {? VAR.ILOSC>0
   || DK.blank();
      DK.M:=ZGP.NRZLP().ZLEC().KTM;
      DK.JM:=DK.M().J;
      DK.IL:=VAR.ILOSC;
      DK.C:=0;
      DK.ZL:=ZGP.NRZLP().ZLEC;
      DK.WAR:=(DK.IL*DK.C)$2;
      DK.ZGP:=ZGP.ref();
      DK.DK_C:=ZGP.NRZLP().ZLEC().DK_C;
      {? DK.add()
      || {? DK.RDK=0
         || DK.RDK:=#DK.ref();
            DK.NDK:=DK.name();
            DK.SRDK:=DK.PRDK:=$DK.ref();
            DK.put()
         ?};
         {? DK.ZGP<>null()
         || exec('akt_zgp_ilkoop','zl_koop',DK.ZGP)
         ?};
::       Dodatkowa obsługa dla kooperacji z partiami
         {? DK.ZL<>null() & DK.PARTIA=null() & exec('party_req','zl_wyk',DK.ZL)
         ||
::          Jeżeli jest to możliwe, automatycznie przypisuje partię
            ZPARN.cntx_psh();
            ZPARN.index('ZGH');
            _zgh:=DK.ZGP().NRZLP;
            {? _zgh<>null()
            ||
               _party_zgh:=exec('party_first_zgh','zl_guide',_zgh);
               {? _party_zgh<>null()
               ||
                  ZPARN.prefix(_party_zgh);
                  {? ZPARN.size()=1
                  || {? ZPARN.first()
                     || DK.PARTIA:=ZPARN.ref();
                        DK.put()
                     ?}
                  ?}
               ?}
            ?};
            ZPARN.cntx_pop();
::          Nie udało się wyznaczyć partii automatycznie, wyświetlam okno redakcji lub komunikat
            {? DK.PARTIA=null()
            || _dk_sym:=exec('FindAndGet','#table',ND,#DK.N,ref_name(DK.N),"SYM",'');
               _dk_sym+=' poz. '+$DK.P;
               _txt:='Należy uzupełnić partię dla dokumentu %1.'@[_dk_sym];
               {? _a
               || KOMM.add(_txt,2)
               || exec('dk_edit','magdok_poz');
                  {? DK.PARTIA=null()
                  || FUN.info(_txt)
                  ?}
               ?}
            ?}
         ?}
      ?}
   || _txt:='Pozycja przewodnika: %1 nie została dodana — brak ilości do wydania.'@[ZGP.NRZLP().NRPRZ];
      {? _a
      || KOMM.add(_txt,2)
      || FUN.info(_txt)
      ?}
   ?}
?};
1


\gen_dk_wyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Generowanie wykonań do dokumentu przyjęcia z kooperacji
::   WE: _a - ND.ref()
::----------------------------------------------------------------------------------------------------------------------
_nd:=_a;

DK.cntx_psh();
TYPYDOK.cntx_psh();
{? exec('FindAndGet','#table',ND,_nd,,"TYP().KOOP='T' & TYP().P='N'",0)
|| DK.prefix(_nd);
   {? DK.first()
   || {!
      |? {? DK.ZGP<>null()
         || _zlgd:=exec('add_dk_wyk','zl_koop',DK.ZGP,DK.IL-DK.IL_B,DK.IL_B,DK.PARTIA,DK.BRAKI_R);
            {? _zlgd<>null()
            || DK.ZLGD:=_zlgd; DK.put()
            ?}
         ?};
         DK.next()
      !}
   ?}
?};
TYPYDOK.cntx_pop();
DK.cntx_pop();
~~


\add_dk_wyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: dodaje wykonanie na podstawie danych z DK
::  WE: _a - ZGP.ref()
::      _b - ilość dobre
::      _c - ilość braki
::      [_d] - ZPARN.ref()
::      [_e] - BRAKI_R.ref() - rodzaj braku
::  WY: ZLGD.ref() / null()
::----------------------------------------------------------------------------------------------------------------------
exec('var_akord','zl_guide');
_zparn:={? var_press('_d')=type_of(null()) || _d || null() ?};
_braki_r:={? var_press('_e')=type_of(null()) || _e || null() ?};
_args:=exec('add_akord_a','zl_wyk');
_args.ZGP:=_a;
_args.IL:=_b;
_args.IL_BRAK:=_c;
_args.ZPARN:=_zparn;
_args.BRAKI_R:=_braki_r;
_args.OK:='N';
_args.AUTO:='T';
_res:=exec('add_akord','zl_wyk',_args);
{? _res
|| ZGP.cntx_psh();
   ZGP.prefix();
   {? ZGP.seek(_a)
   || ZGP.IL_KOOP-=(_b+_c);
      ZGP.put()
   ?};
   ZGP.cntx_pop();
   _args.ZLGD
|| null()
?}


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Formuła ustala PARSES dla czynności wydania i przyjęcia z kooperacji
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_in:=params_get().in;

_result:=1;

{? var_pres('ND',_in)=type_of(null()) & _in.ND
|| _result:=exec('parses_nd','lmg')
||
:: Ustawienie stałych sesji częściowo na siłę
   _koopmag:=exec('FindInSet','#table','MG','KOOP','T',__PARSES.getVal('OddzialLogProd').KOD);
   __PARSES.setVal('Magazyn',_koopmag);
   _result:=1
?};

_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MagLak [17.00]
:: OPIS: selekcja kooperacji
::----------------------------------------------------------------------------------------------------------------------
ZGP.cntx_psh();
ZGH.cntx_psh();

exec('zgp_icons','zl_guide','WER_KOOP');
exec('zgp_icons','zl_guide','WER_KOOM');

ZGP.index('SRW1');

FILTER.STATUS:=exec('get','#params',8601,2,OPERATOR.USER);
FILTER.RODZAJ:=exec('get','#params',8602,2,OPERATOR.USER);

_env_koop:=obj_new('TAB_STATUS','WER_STATUS');

_env_koop.TAB_STATUS:=exec('dsk_get_status','zl_koop');
_env_koop.WER_STATUS:=_env_koop.TAB_STATUS.mk_sel('Status'@,,0,'#kooptabstat',,,,,'U');
_env_koop.TAB_STATUS.win_fld(_env_koop.WER_STATUS,,'NAZWA',,,10,,,'Status'@);

:: Takie czary, żeby zadziałały tłumaczenia poniżej (teksty MUSZĄ być identyczne)
'Wyświetlane kooperacje'@; 'Produkcyjne'@; 'Magazynowe'@; 'Status'@;
_before:="
   params_set(params_get());
   _env:=params_get().env_koop;
   exec('skip','zl_koop');
:: Ustawienie się na zapamiętanym wcześniej statusie
   _tab:=_env.TAB_STATUS;
   _view:=null();
   _last:=exec('get','#params',8601,type_of(''),OPERATOR.USER);
   {? _last<>''
   || _i2:=_tab.ndx_tmp(,,'KOD',,);
      _tab.cntx_psh();
      _tab.index(_i2);
      _tab.prefix(_last,);
      {? _tab.first()
      || _view:=_tab.ref()
      ?};
      _tab.cntx_pop()
   ?};
   {? _view<>null()
   || _tab.seek(_view)
   ?};
   win_set('cur_row_pos=-1',_env.TAB_STATUS,_env.WER_STATUS);
   grp_disp(_env.TAB_STATUS,_env.WER_STATUS,1,1);
   1
";
_wnd:=ZGP.grp_make(,_before,'tte_koop',,,"exec('exit','zws',_a)",,'maximized');

_after_rfr:="
   params_set(params_get());
   _env:=params_get().env_koop;
   _tab:=_env.TAB_STATUS;
   FILTER.STATUS:=_tab.KOD;
   exec('set','#params',8601,FILTER.STATUS,OPERATOR.USER);
   exec('skip','zl_koop',0);
   ~~
";
ZGP.grp_sel(_wnd,_env_koop.TAB_STATUS,_env_koop.WER_STATUS,'Operacje'@,_after_rfr,,,,,,0,0,'maximized','WER_STAT1');
:: Wyłączenie checkboxów zaznaczających na interm
_env_koop.TAB_STATUS.win_sopt(_env_koop.WER_STATUS,'select_record_checkbox=0');

ZGP.tab_splt(_wnd,,'vertical','panel','16,16');

_before:="
   _env:=params_get().env_koop;
   _tab:=_env.TAB_STATUS;
   {? grp_empty(_tab,_env.WER_STATUS)
   || '#disable'
   || {? FILTER.STATUS<>'' & FILTER.STATUS<>'A'
      || ZGP.index('SRW1');
         ZGP.prefix(ST.ODDZ_KOD,'T',FILTER.RODZAJ,'N',FILTER.STATUS)
      || ZGP.index('SRW');
         ZGP.prefix(ST.ODDZ_KOD,'T',FILTER.RODZAJ,'N')
      ?};
      ~~
   ?};
   ~~
";
ZGP.grp_sel(_wnd,ZGP,'WER_KOOP',,,,,,_before,,0,1,'maximized','WER_KOOP',1);
_after_refresh:="
   ~~
";
ZGP.grp_sel(_wnd,_env_koop.TAB_STATUS,_env_koop.WER_STATUS,'Operacje'@,_after_rfr,,,,,,0,0,'maximized','WER_STAT2');
ZGP.tab_splt(_wnd,,'vertical','panel','16,16');
ZGP.grp_sel(_wnd,ZGP,'WER_KOOM',,_after_refresh,,,,_before,,0,1,'maximized','WER_KOOM',1);
_sck:=exec('koop_akt_table','zl_koop');
_sck_wer:=exec('win_sck','zl_koop',_sck,0);
_before:="
   params_exec('reload','zl_koop')
";

ZGP.grp_sel(_wnd,_sck,_sck_wer,'Produkty w kooperacji'@,,,,,_before,,,,'maximized');
ZGP.win_sel(_wnd);

AreaTitle.setTabWin(ZGP,_wnd);
AreaTitle.setTitle();

params_set('KH',null(),'ZL',null(),'env_koop',_env_koop);

ZGP.select(,,,,{? FILTER.RODZAJ='S' || 'WER_KOOP' || 'WER_KOOM' ?});

ZGP.f_clear();
ZGP.clear();

ZGH.cntx_pop();
ZGP.cntx_pop();
~~


\dsk_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MagLak [17.00]
:: OPIS: Wybranie statusu w selektorze.
::----------------------------------------------------------------------------------------------------------------------
FILTER.STATUS:=exec('get_value','#desktop','','selektor','status@panel');
exec('set','#params',8601,FILTER.STATUS,OPERATOR.USER);
exec('skip','zl_koop');
::{? FILTER.RODZAJ='M'
::|| tab_hide(,1,'panel');
::   tab_show(2,'panel');
::   tab_show(3,'panel');
::   grp_disp(ZGP,'WER_KOOM',1,1);
::   win_activate('WER_KOOM')
::|| tab_hide(,1,'panel');
::   tab_show(1,'panel');
::   grp_disp(ZGP,'WER_KOOP',1,1);
::   win_activate('WER_KOOP')
::?};
~~


\skip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.41]
:: OPIS: Przejscie do operacji kooperacyjnej o zadanym statusie
::   WE: [_a] - odświeżać zakładki [1]/0
::----------------------------------------------------------------------------------------------------------------------
_tab_rfr:={? var_pres('_a')=type_of(0) || _a || 1 ?};

params_set(params_get());
AreaTitle.setTitle();

{? exec('FindInSet','#table','MG','KOOP','T',ST.ODDZ)=null()
|| FILTER.RODZAJ:='S'
?};

{? FILTER.STATUS<>'' & FILTER.STATUS<>'A'
|| ZGP.index('SRW1');
   ZGP.prefix(ST.ODDZ_KOD,'T',FILTER.RODZAJ,'N',FILTER.STATUS)
|| ZGP.index('SRW');
   ZGP.prefix(ST.ODDZ_KOD,'T',FILTER.RODZAJ,'N')
?};

{? FILTER.RODZAJ='M'
|| {? _tab_rfr>0
   ||
::      tab_hide(,1);
      tab_show(2);
      tab_show(3);
      tab_hide(1);
::      win_set('cur_row_pos=-1',ZGP,'WER_KOOM');
      grp_disp(ZGP,'WER_KOOM',1,1);
      win_activate('WER_KOOM')
   ||
::      win_set('cur_row_pos=-1',ZGP,'WER_KOOM');
      grp_disp(ZGP,'WER_KOOM',1,1)
   ?};
   ~~
|| {? _tab_rfr>0
   ||
::      tab_hide(,1);
      tab_show(1);
      tab_hide(2);
      tab_hide(3);
::      win_set('cur_row_pos=-1',ZGP,'WER_KOOP');
      grp_disp(ZGP,'WER_KOOP',1,1);
      win_activate('WER_KOOP')
   ||
::      win_set('cur_row_pos=-1',ZGP,'WER_KOOP');
      grp_disp(ZGP,'WER_KOOP',1,1)
   ?};
   ~~
?};
~~


\dsk_get_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MagLak [17.00]
:: OPIS: Zwraca dane dla selektora statusu.
::   WY: alias do tabeli tymczasowej zawierającej listę statusów.
::----------------------------------------------------------------------------------------------------------------------
_rs:=sql('select 0 as LP, S.SYSTEM as KOD, S.NAZWA as NAZWA from SLO_KOD as S where 0=1');

_rs.KOD:='N';
_rs.NAZWA:='Nowe'@;
_rs.add();

_rs.LP+=1;
_rs.KOD:='C';
_rs.NAZWA:='Oczekujące'@;
_rs.add();

_rs.LP+=1;
_rs.KOD:='W';
_rs.NAZWA:='Zakończone'@;
_rs.add();

_rs.LP+=1;
_rs.KOD:='O';
_rs.NAZWA:='Wykonywane'@;
_rs.add();
_rs;

_rs.LP+=1;
_rs.KOD:='A';
_rs.NAZWA:='Wszystkie'@;
_rs.add();
_rs


\dsk_set_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MagLak [17.00]
:: OPIS: Formuła odpowiada za ustawienie wartości wskazanych elementów pulpitu.
::   WE: _a - identyfikator elementu panelu
::       _b - identyfikator elementu panelu
::       _c - identyfikator elementu panelu
::----------------------------------------------------------------------------------------------------------------------
_set:="exec('set_value','#desktop','','selektor',_a,_b)";
_set(_a,FILTER.STATUS);
_set(_b,{? FILTER.RODZAJ='S' || 'true' || 'false' ?});
_set(_c,{? FILTER.RODZAJ='M' || 'true' || 'false' ?});
{? FILTER.RODZAJ='M'
|| tab_hide(,1,'panel');
   tab_show(2,'panel');
   tab_show(3,'panel');
   grp_disp(ZGP,'WER_KOOM',1,1);
   win_activate('WER_KOOM');
   ~~
|| tab_hide(,1,'panel');
   tab_show(1,'panel');
   grp_disp(ZGP,'WER_KOOP',1,1);
   win_activate('WER_KOOP');
   ~~
?};
~~


\dsk_after_load
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Formuła wykonywana po wczytaniu i pojawieniu się pulpitu w okienku
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
exec('dsk_set_status','zl_koop','status@panel','radio_prod@radiobuttony','radio_mag@radiobuttony');
~~


\mode_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MagLak [17.00]
:: OPIS: Akcja wywolywana po zmianie prefiksowania na kooperacje magazynowe
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
FILTER.RODZAJ:='M';
:: Żeby magazyny się w słownikach tylko kooperacyjne podpowiadały
BPMN.TYP_MG:='K';
exec('set','#params',8602,FILTER.RODZAJ,OPERATOR.USER);
exec('skip','zl_koop');
::tab_hide(,1,'panel');
::tab_show(2,'panel');
::tab_show(3,'panel');
::grp_disp(ZGP,'WER_KOOM',1,1);
::win_activate('WER_KOOM');
~~


\mode_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MagLak [17.00]
:: OPIS: Akcja wywolywana po zmianie prefiksowania na kooperacje produkcyjne
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
FILTER.RODZAJ:='S';
:: Żeby magazyny się w słownikach wszystkie podpowiadały
BPMN.TYP_MG:='';
exec('set','#params',8602,FILTER.RODZAJ,OPERATOR.USER);
exec('skip','zl_koop');
::tab_hide(,1,'panel');
::tab_show(1,'panel');
::grp_disp(ZGP,'WER_KOOP',1,1);
::win_activate('WER_KOOP');
~~


\zm_zgp_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: zmiana kontrahenta na pozycji przewodnika
::----------------------------------------------------------------------------------------------------------------------
{? exec('blk_lock','#table','ZGP',ZGP.ref(),,,'Pozycja przewodnika jest redagowana'@)
|| params_set(params_get());
   KH.index('KOD');
   KH.prefix(2);
   KH.win_sel('WER');
   KH.actions('WER');
   {? ZGP.KONTRAH<>null()
   || KH.seek(ZGP.KONTRAH)
   ?};
   {? KH.select(,1,-1)
   || ZGP.KONTRAH:=KH.ref();
      ZGP.put()
   ?};
   exec('blk_unlock','#table','ZGP',ZGP.ref());
   exec('skip','zl_koop')
?};
~~


\zm_zgp_kh_gpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Zmiana kontrahenta na pozycji przewodnika - akcja przed grupą rekordów
::----------------------------------------------------------------------------------------------------------------------
KH.index('KOD');
KH.prefix(2);
KH.win_sel('WER');
KH.actions('WER');
{? KH.select(,1,-1)
|| _zgp:=ZGP.sel_aget(); ZGP.sel_adel();
   ZGP.cntx_psh();
   ZGP.prefix();
   {? _zgp.first()
   || {!
      |? {? ZGP.seek(_zgp.REF,)
         || {? exec('blk_lock','#table','ZGP',ZGP.ref())
            || ZGP.KONTRAH:=KH.ref();
               exec('blk_unlock','#table','ZGP',ZGP.ref())
            ?};
            ZGP.put()
         ?};
         _zgp.next()
      !}
   ?};
   ZGP.cntx_pop();
   1
|| 0
?}


\zm_zgp_kh_gpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Zmiana kontrahenta na pozycji przewodnika - akcja po grupie rekordów
::----------------------------------------------------------------------------------------------------------------------
~~


\edit_parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Ustawienie parametru sesji w obszarze roboczym TTE_KOO
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
BPMN.TYP_MG:='K';

{? __PARSES.editPar('OddzialLogProd','OkresRok')
|| _koopmag:=exec('FindInSet','#table','MG','KOOP','T',ST.ODDZ);
   {? _koopmag<>null()
   || __PARSES.setVal('Magazyn',_koopmag);
      ST.MAG:=_koopmag;
      ST.MAG_SYM:=ST.MAG().SYM
   || BPMN.TYP_MG:='';
      __PARSES.editPar('Magazyn');
      BPMN.TYP_MG:='K'
   ?};
   AreaTitle.setTitle();
   exec('skip','zl_koop')
?};
~~


\reload
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Przeładowanie danych w oknie tabeli "_sck"
::----------------------------------------------------------------------------------------------------------------------
_sck:=cur_tab(1,1);
_sck.erase();
exec('koop_akt_load','zl_koop',_sck,params_get().KH,params_get().ZL,null());
_sck.first();
~~


\del_nd_wyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: usuwa wykonania dla dokumentu
::   WE: _a - ND.ref
::   WY: 1 usunięte wszystkie wykonania, 0 nie udało się usunąć wykonań
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
ND.cntx_psh();
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(ND.ref());
{? DK.first()
|| {!
   |? {? DK.ZLGD=null()
      || _wyn:=1
      || _zlgd:=DK.ZLGD;
         DK.ZLGD:=null();
         DK.put();
         _wyn:=exec('del_dk_wyk','magdok_poz',_zlgd);
         {? _wyn
         || {? DK.ZGP<>null()
            || exec('akt_zgp_ilkoop','zl_koop',DK.ZGP)
            ?}
         ?}
      ?};
      _wyn & DK.next()
   !}
?};
ND.cntx_pop();
DK.cntx_pop();
_wyn


\akt_zgp_ilkoop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: Aktualizuje ilość w kooperacji na pozycji przewodnika
::   WE: _a - ZGP.ref()
::       _b - ilość dodatkowa do odjęcia (podczas usuwania DK)
::----------------------------------------------------------------------------------------------------------------------
{? _>=2  || {? type_of(_b)<>1 || _b:=0 ?}  || _b:=0  ?};
ND.cntx_psh();
DK.cntx_psh();
ZGP.cntx_psh();
ZGP.prefix();
{? _a<>null() & ZGP.seek(_a)
|| DK.cntx_psh();
   OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   || _il_koop:=0;
      {!
      |? DK.use('dokma'+ST.ODDZ+($OKR.ROK+2));
         ND.use('nagdo'+ST.ODDZ+($OKR.ROK+2));
         DK.index('ZGP');
         DK.prefix(_a);
         {? DK.first()
         || {!
            |? {? DK.N().TYP().KOOP='T' & DK.N().TYP().P='T'
               || _il_koop+=(DK.IL+DK.IL_B)
               ?};
               DK.next()
            !}
         ?};
         OKR.next()
      !}
   ?};
   OKR.cntx_pop();
   DK.cntx_pop();
   ZGP.IL_KOOP:=_il_koop-(ZGP.IL+ZGP.IL_BRAK)-_b;
   {? ZGP.IL_KOOP<0 || ZGP.IL_KOOP:=0 ?};
   ZGP.put()
?};
ZGP.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();
~~


\koop_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Wyświetla dokumenty kooperacji z poziomu zakładki operacji (okno WER_KOOM tabeli ZGP)
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
ZGP.cntx_psh();
exec('dokumenty','zl_koop');
ZGP.cntx_pop();
exec('skip','zl_koop');
~~


\legenda_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Legenda w oknie ZGP dla kooperacji
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','@ZGP#START','@ZGP#END','#ZGP#01','#ZGP#02','#ZGP#05')


\DokMR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: pobranie desktopu
::----------------------------------------------------------------------------------------------------------------------
exec('filtrND','magdok_nag',FILTER.STATUS);
grp_disp(ND,'WERP',1,1);
~~


\chk_nd_zlnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Sprawdza, czy wykonania utworzone na podstawie dokumentu są powiązane z dokumentami raportującymi produkcję.
::       Formuła wywoływana wyłącznie podczas wycofywania dokumentu kooperacji
::   WE: _a - ND.ref
::   WY: 1 - OK, brak powiązań , 0 - są jakieś powiązania z RP
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
ND.cntx_psh();
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(ND.ref());

_args:=obj_new('RESULT','DK');

{? DK.first()
|| {!
   |? {? DK.ZLGD<>null()
      || _zlgd:=DK.ZLGD;

         ZLGD.cntx_psh();
         ZLGD.use(ref_name(DK.ZLGD));
         _mask_zlgd:=ZLGD.name();
         ZLGD.prefix();
         {? ZLGD.seek(DK.ZLGD)
         || {? ZLGD.DK<>''
            || _wyn:=0;
               _nd_sym:=exec('FindAndGet','#table',DK,ZLGD.DK,,"exec('record','#to_string',DK.N)",'');
               _msg:='Pozycja %1 powiązana z dokumentem RP %2.'@[$DK.P,_nd_sym];
               exec('add_kom','#message',_msg,2,,__lp+=1)
            ||
               ZL_WYRGD.cntx_psh();
               ZL_WYRGD.use(5+ZL_WYRGD.name()+(_mask_zlgd+3));
               ZL_WYRGD.index('ZLGD');
               ZL_WYRGD.prefix(DK.ZLGD);
               {? ZL_WYRGD.first()
               || {!
                  |? {? ZL_WYRGD.DK<>''
                     || _wyn:=0;
                        _nd_sym:=exec('FindAndGet','#table',DK,ZL_WYRGD.DK,,"exec('record','#to_string',DK.N)",'');
                        _msg:='Pozycja %1 powiązana z dokumentem RP %2.'@[$DK.P,_nd_sym];
                        exec('add_kom','#message',_msg,2,,__lp+=1)
                     ?};
                     ZL_WYRGD.next()
                  !}
               ?};
               ZL_WYRGD.cntx_pop()
            ?}
         ?};
         ZLGD.cntx_pop()
      ?};
      DK.next()
   !}
?};
ND.cntx_pop();
DK.cntx_pop();
_wyn


\zakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Wybór zakresu wyświetlanych kooperacji (Magazynowe/Produkcyjne)
::----------------------------------------------------------------------------------------------------------------------
_prev:=FILTER.win_edit('?');
_edit:=FILTER.mk_edit('Zakres wyświetlanych kooperacji'@,,'koop_zakr');
FILTER.win_efld(_edit,,'RODZAJ',,,,,,'Wyświetlane kooperacje'@,,,'radio-buttons',,
                'Produkcyjne'@,"'S'",'Magazynowe'@,"'M'");
exec('ok_esc','#window',FILTER,_edit);
FILTER.win_edit(_edit);
{? FILTER.edit()
|| params_set(params_get());
   {? FILTER.RODZAJ='S'
   || exec('mode_p','zl_koop')
   || exec('mode_m','zl_koop')
   ?}
?};
FILTER.win_edit(_prev);
~~


\action_create_wk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Akcja wystawienia dokumentu wydania do kooperacji (w oknie ZGP - WER_KOOM)
::----------------------------------------------------------------------------------------------------------------------
ZGP.cntx_psh();
{? exec('chk_zgp4koop','zl_koop',1,,,ST.ODDZ)
|| _kh:=ZGP.KONTRAH;
   {? _kh=null()
   || FUN.info('Operacja nie ma przypisanego kontrahenta.\n'
               'Należy wskzać kontrahenta, dla którego wystawiany będzie dokument.'@);
      _kh:=exec('kh_sel','zl_koop')
   ?};
   {? _kh<>null()
   || VAR.GRUPA:='N';
      _args:=exec('mp_run_a','#b__box');
      _args.ACT_UID:='TTE_WYK_DKOW';
      _args.UIDREF:=exec('FindAndGet','#table',ZL,ZGP.ZL,,"uidref()",'');
      _args.AKCJA:='WYSTAW';
      _args.PROC_START:='T';
      _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
      _args.CONTEXT:=obj_new('REF_TABLE','KH','ND');
      _ref_table:=tab_tmp(,'REF','STRING[16]','$ZGP.ref()');
      _ref_table.REF:=$ZGP.ref();
      _ref_table.add();
      _args.CONTEXT.REF_TABLE:=_ref_table;
      _args.CONTEXT.KH:=_kh;
      _args.CONTEXT.ND:=null();
      exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'ZL',ZGP.ZL);

      exec('mp_run','#b__box',_args)
   ?}
?};
ZGP.cntx_pop();
~~


\action_create_pk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Akcja wystawienia dokumentu przyjęcia z kooperacji (w oknie produktów kooperacji)
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
ZGP.cntx_psh();
_tab.cntx_psh();
{? exec('chk_sck4koop','zl_koop',_tab,1)
|| _kh:=exec('FindAndGet','#table',KH,_tab.KH_REF,,,null());
   {? _kh=null()
   || FUN.info('Operacja nie ma przypisanego kontrahenta.\n'
               'Należy wskzać kontrahenta, dla którego wystawiany będzie dokument.'@);
      _kh:=exec('kh_sel','zl_koop')
   ?};
   {? _kh<>null()
   || VAR.GRUPA:='N';
      _zl:=exec('FindAndGet','#table',ZL,_tab.ZL_REF,,,null());
      _args:=exec('mp_run_a','#b__box');
      _args.ACT_UID:='TTE_WYK_DKOP';
      _args.UIDREF:=exec('FindAndGet','#table',ZL,_zl,,"uidref()",'');
      _args.AKCJA:='WYSTAW';
      _args.PROC_START:='T';
      _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
      _args.CONTEXT:=obj_new('REF_TABLE','KH','ND');
      _ref_table:=tab_tmp(,'REF','STRING[16]','$SC.ref()');
      _ref_table.REF:=_tab.REF;
      _ref_table.add();
      _args.CONTEXT.REF_TABLE:=_ref_table;
      _args.CONTEXT.KH:=_kh;
      _args.CONTEXT.ND:=null();
      exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'ZL',_zl);

      exec('mp_run','#b__box',_args)
   ?}
?};
_tab.cntx_pop();
ZGP.cntx_pop();
~~


\action_create_wk_gpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Akcja wystawienia dokumentu wydania do kooperacji (w oknie ZGP - WER_KOOM) dla grupy rekordów - Grupa przed
::----------------------------------------------------------------------------------------------------------------------
ZGP.cntx_psh();
ZGP.prefix();
{? ZGP.sel_size()>1
|| _continue:=FUN.ask(
      'Ilość zaznaczonych operacji: %1. '
      'Czy wystawić dokument wydania do kooperacji na podstawie zaznaczonych operacji?'@
      [form(ZGP.sel_size())]);
   {? _continue>0
   || KOMM.init(250,,'Wydanie do kooperacji'@,'');
      VAR.GRUPA:='T';
      _ref_table:=tab_tmp(,'REF','STRING[16]','$ZGP.ref()');
      _one_zl:=_one_kh:=1;
      _zl:=null();
      _kh:=null();
      _tabsel:=ZGP.sel_aget();
      {? _tabsel.first()
      || {!
         |?
            {? ZGP.seek(_tabsel.REF)
            ||
::             Sprawdzenie, czy można dołączyć operację (tutaj bez walidacji wg kontrahenta)
               {? exec('chk_zgp4koop','zl_koop',2,,,ST.ODDZ)
               || {? _one_zl>0
                  || {? _zl=null()
                     || _zl:=ZGP.ZL
                     |? _zl<>ZGP.ZL
                     || _one_zl:=0;
                        _zl:=null()
                     ?}
                  ?};
                  {? _one_kh>0
                  || {? _kh=null()
                     || _kh:=ZGP.KONTRAH
                     |? _kh<>ZGP.KONTRAH & ZGP.KONTRAH<>null()
                     || _one_kh:=0;
                        _kh:=null()
                     ?}
                  ?};
                  _ref_table.REF:=$ZGP.ref();
                  _ref_table.add()
               ?}
            ?};
            _tabsel.next()
         !}
      ?};
      ZGP.sel_adel();
      {? _ref_table.first()
      || {? _kh=null()
         ||
::          Operacje bez przypisanego kontrahenta lub z przypisanymi różnymi kontrahentami,
::          należy wskazać wybranego kontrahenta
            {? _one_kh>0
            || _msg:='Wybrane operacje nie mają przypisanego kontrahenta.\n'
                     'Należy wskazać kontrahenta, dla którego wystawiany będzie dokument.'@
            || _msg:='Wybrane operacje są przypisane do różnych kontrahentów.\n'
                     'Należy wskazać kontrahenta, dla którego wystawiany będzie dokument.'@
            ?};
            FUN.info(_msg);
            _kh:=exec('kh_sel','zl_koop')
         ?};
         {? _kh<>null()
         || _args:=exec('mp_run_a','#b__box');
            _args.ACT_UID:='TTE_WYK_DKOW';
            {? _one_zl>0 & _zl<>null()
            || _args.UIDREF:=exec('FindAndGet','#table',ZL,_zl,,"uidref()",'')
            ?};
            _args.AKCJA:='WYSTAW';
            _args.PROC_START:='T';
            _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
            _args.CONTEXT:=obj_new('REF_TABLE','KH','ND');
            _args.CONTEXT.REF_TABLE:=_ref_table;
            _args.CONTEXT.KH:=null();
            _args.CONTEXT.ND:=null();

            {? _one_zl>0 & _zl<>null()
            || exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'ZL',_zl);
               _args.CONTEXT.KH:=_kh
            || exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'KH',_kh)
            ?};
            exec('mp_run','#b__box',_args)
         ?}
      || KOMM.select();
         FUN.info('Brak operacji spełniających wymagania'@)
      ?};
      VAR.GRUPA:='N'
   ?}
?};
ZGP.cntx_pop();
0


\action_create_pk_gpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Akcja wystawienia dokumentu przyjęcia z kooperacji (w oknie Produktów w koop) dla grupy rekordów - Grupa przed
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
ZGP.cntx_psh();
_tab.cntx_psh();
_tab.prefix();
{? _tab.sel_size()>1
|| _continue:=FUN.ask(
      'Ilość zaznaczonych rekordów: %1. '
      'Czy wystawić dokument przyjęcia z kooperacji na podstawie zaznaczonych rekordów?'@
      [form(_tab.sel_size())]);
   {? _continue>0
   || KOMM.init(250,,'Przyjęcie z kooperacji'@,'');
      VAR.GRUPA:='T';
      _ref_table:=tab_tmp(,'REF','STRING[16]','$SC.ref()');
      _kh_table:=tab_tmp(,'REF','STRING[16]','$KH.ref()');
      _one_zl:=1;
      _zl:='';
      _tabsel:=_tab.sel_aget();
      {? _tabsel.first()
      || {!
         |?
            {? _tab.seek(_tabsel.REF)
            ||
::             Sprawdzenie, czy można dołączyć produkt (tutaj bez walidacji wg kontrahenta)
               {? exec('chk_sck4koop','zl_koop',_tab,2)
               || {? _one_zl>0
                  || {? _zl=''
                     || _zl:=_tab.ZL_REF
                     |? _zl<>_tab.ZL_REF
                     || _one_zl:=0;
                        _zl:=''
                     ?}
                  ?};
::                Dodanie produktu kooperacji (dostawy) do tabeli
                  _ref_table.REF:=_tab.REF;
                  _ref_table.add();
::                Dodanie kontrahenta do tabeli tymczasowej
                  {? ~_kh_table.find_key(_tab.KH_REF,)
                  || _kh_table.REF:=_tab.KH_REF;
                     _kh_table.add()
                  ?}
               ?}
            ?};
            _tabsel.next()
         !}
      ?};
      _tab.sel_adel();

      {? _ref_table.first() & _kh_table.first()
      || {? _kh_table.size()=1
         || _kh:=exec('FindAndGet','#table',KH,_kh_table.REF,,,null())
         || _kh:=null()
         ?};
         _zl:=exec('FindAndGet','#table',ZL,_zl,,,null());
         {? _kh=null()
         ||
::          Operacje z przypisanymi różnymi kontrahentami, należy wskazać wybranego kontrahenta
             _msg:='Wybrane operacje są przypisane do różnych kontrahentów.\n'
                    'Należy wskazać kontrahenta, dla którego wystawiany będzie dokument.'@;
            FUN.info(_msg);
            _kh:=exec('kh_sel','zl_koop',_kh_table)
         ?};
         {? _kh<>null()
         || _args:=exec('mp_run_a','#b__box');
            _args.ACT_UID:='TTE_WYK_DKOP';
            {? _one_zl>0 & _zl<>null()
            || _args.UIDREF:=exec('FindAndGet','#table',ZL,_zl,,"uidref()",'')
            ?};
            _args.AKCJA:='WYSTAW';
            _args.PROC_START:='T';
            _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
            _args.CONTEXT:=obj_new('REF_TABLE','KH','ND');
            _args.CONTEXT.REF_TABLE:=_ref_table;
            _args.CONTEXT.KH:=null();
            _args.CONTEXT.ND:=null();

            {? _one_zl>0 & _zl<>null()
            || exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'ZL',_zl);
               _args.CONTEXT.KH:=_kh
            || exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'KH',_kh)
            ?};
            exec('mp_run','#b__box',_args)
         ?}
      || KOMM.select();
         FUN.info('Brak operacji spełniających wymagania'@)
      ?};
      VAR.GRUPA:='N'
   ?}
?};
_tab.cntx_pop();
ZGP.cntx_pop();
0


\action_create_wk_gpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Akcja wystawienia dokumentu wydania do kooperacji (w oknie ZGP - WER_KOOM) dla grupy rekordów - Grupa po
::----------------------------------------------------------------------------------------------------------------------
~~


\kh_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Wskazuje z listy kontrahenta, dla którego dołączany będzie dokument wydania do kooperacji
::   WE: [_a] - tabela z listą dozwolonych kontrahentów - tabela z polem REF przechowująca $KH.ref()
::              Gdy podana, to do wyboru będą wyłącznie przekazani w tabeli kontrahenci
::   WY: KH.ref() lub null()
::----------------------------------------------------------------------------------------------------------------------
_reftab:={? var_pres('_a')>100 || _a || ~~ ?};
_kh:=null();
KH.cntx_psh();
KH.win_sel('SEL');
KH.index('KOD');
KH.prefix();
_sort:='KOD';
_where:='P=2';
{? type_of(_reftab)<>type_of(~~)
|| _where+=' and KH.REFERENCE in (select REF from :_a) '
?};
_from:='';
KH.f_set(_sort,_from,_where,_reftab);
{? KH.select(,1)
|| _kh:=KH.ref()
?};
KH.cntx_pop();
{? KH.f_active() || KH.f_clear() ?};
_kh


\chk_zgp4koop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Sprawdza, czy na podstawie danej operaji (ZGP) można zarejestrować pozycję dokumentu wydania do kooperacji
::       Pracuje na aktualnym buforze tabeli ZGP
::   WE: [_a] - czy wyświetlać dialogi: 0 - brak, [1] - na ekran, 2 - do KOMM
::       [_b] - kontrahent KH.ref() - jak podany to musi być zgodny
::       [_c] - zlecenie ZL.ref() - jak podany to musi być zgodny
::       [_d] - kod oddziału - jak podany to musi być zgodny
::   WY: 0/1, 0 - nie można zarejestrować, 1 - wszystko ok, można rejestrować
::----------------------------------------------------------------------------------------------------------------------
_dialog:={? var_pres('_a')=type_of(0) || _a || 1 ?};
_kh:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_zl:={? var_pres('_c')=type_of(null()) || _c || null() ?};
_oddz:={? var_pres('_d')=type_of('') || _d || '' ?};
_res:=0;
_chkak:=exec('get','#params',500631,2);
ZL.cntx_psh(); ZGH.cntx_psh();
_msg:={? _dialog=2 || ZGP.NRZLP().NRPRZ+', poz. %1: '@[exec('ZGP','#to_string',1)] || '' ?};
_msg+='Nie można wydać do kooperanta '@;
{? _kh<>null() & ZGP.KONTRAH<>null() & ZGP.KONTRAH<>_kh
|| _msg+=' - niezgodny kontrahent.'@
|? _zl<>null() & ZGP.ZL<>null() & ZGP.ZL<>_zl
|| _msg+=' - niezgodne zlecenie.'@
|? _oddz<>'' & ZGP.ZL().ODDZ<>_oddz
|| _msg+=' - niezgodny oddział.'@
|? ZGP.ZL().STAN<>'O'
|| _msg+=' - zlecenie nie jest otwarte.'@
|? ZGP.ZL().OD>date(ST.AR,ST.AM,0)
|| _msg+='- zlecenie powołane z datą późniejszą niż wybrany okres.'@
|? ZGP.NRZLP().STAT_REJ<>'T'
|| _msg+=' - rejestracja przewodnika nie została zakończona.'@
|? ZGP.ILOSC-(ZGP.IL+ZGP.IL_BRAK)-ZGP.IL_KOOP<=0
|| _msg+=' - cała ilość została już wydana do kooperacji.'@
|? _chkak='T' & ZGP.STATUS<>exec('status_pending','zl_guide')
|| _msg+=' - brak zarejestrowanych wykononań w operacjach poprzedzających.'@
|? _chkak='T' & ZGP.STATUS<>exec('status_pending','zl_guide')
|| _msg+=' - operacja została już wykonana.'@
|? ZGP.SRW<>'M'
|| _msg+=' - operacja nie obsługuje rejestracji poprzez moduł magazynowy.'@
|? ZGP.PROBLEM='T'
|| _msg+=' - do operacji zgłoszono problem.'@
||
:: Wszystko ok
   _res:=1
?};
{? _res=0
|| {? _dialog=1
   || FUN.info(_msg)
   |? _dialog=2
   || KOMM.add(_msg)
   ?}
?};
ZL.cntx_pop(); ZGH.cntx_pop();
_res


\chk_sck4koop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Sprawdza, czy na podstawie rekordu produktu kooperacji można zarejestrować pozycję
::       dokumentu przyjęcia z kooperacji.
::   WE: _a - tabela tymczasowa z listą produktów kooperacji (_sck) - pracuje na aktualnym rekordzie tej tabeli
::       [_b] - czy wyświetlać dialogi: 0 - brak, [1] - na ekran, 2 - do KOMM
::       [_c] - kontrahent KH.ref() - jak podany to musi być zgodny
::       [_d] - zlecenie ZL.ref() - jak podany to musi być zgodny
::   WY: 0/1, 0 - nie można zarejestrować, 1 - wszystko ok, można rejestrować
::----------------------------------------------------------------------------------------------------------------------
_tab:={? var_pres('_a')>100 || _a || return(0) ?};
_dialog:={? var_pres('_b')=type_of(0) || _b || 1 ?};
_kh:={? var_pres('_c')=type_of(null()) || _c || null() ?};
_zl:={? var_pres('_d')=type_of(null()) || _d || null() ?};
_res:=0;
_msg:={? _dialog=2
      || exec('FindAndGet','#table',ZGP,_tab.ZGP,,"ZGP.NRZLP().NRPRZ+', poz. %1: '@[exec('ZGP','#to_string',1)]",'')
      || ''
      ?};
_msg+='Nie można przyjąć produktu z kooperacji '@;
{? _kh<>null() & _tab.KH_REF<>'' & _tab.KH_REF<>$_kh
|| _msg+=' - niezgodny kontrahent.'@
|? _zl<>null() & _tab.ZL_REF<>'' & _tab.ZL_REF<>$_zl
|| _msg+=' - niezgodne zlecenie.'@
|? _tab.SD<=0
|| _msg+=' - zerowa ilość produktu w kooperacji.'@
|? _tab.ZL_REF<>'' & exec('FindAndGet','#table',ZL,_tab.ZL_REF,,"ZL.OD",date())>date(ST.AR,ST.AM,0)
|| _msg+='- zlecenie powołane z datą późniejszą niż wybrany okres.'@
||
:: Wszystko ok
   _res:=1
?};
{? _res=0
|| {? _dialog=1
   || FUN.info(_msg)
   |? _dialog=2
   || KOMM.add(_msg)
   ?}
?};
_res


\kh4zlec_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Zbiera listę kontrahentów, do których zostały wydane dokumenty kooperacji do danego zlecenia.
::       Pracuje na aktualnym rekordzie tabeli ND
::   WE: [_a] - rodzaj wywołania: [1] - tworzy tabelę z listą kontrahentów
::                                 0 - nie tworzy tabeli,  jak tylko jeden powiązany kontrahent to go zwraca
::   WY: gdy _a=1 to ~~, w przeciwnym wypadku ref kontrahenta lub null
::----------------------------------------------------------------------------------------------------------------------
_mktab:={? var_pres('_a')=type_of(0) || _a || 1 ?};
_kh:=null();
:: Tabela z listą kontrahentów, dla których wydano dokumenty do danego zlecenia
_ref_table:=exec('ref_table','#table');
_one_kh:=1;
_sck:=exec('koop_akt_table','zl_koop');
_ndx:=_sck.ndx_tmp(,,'KH_REF',,,'KH_KOD',,);
_sck.index(_ndx);
exec('koop_akt_load','zl_koop',_sck,null(),ND.ZL,null());
:: Uzupełnienie tabeli kontrahentów
{? _sck.first()
|| {!
   |?
      _ref_table.add(_sck.KH_REF);
      {? _sck.SD>0
      ||
::       Sprawdzenie, czy do zlecenia wydano dokumenty kooperacji do więcej niż jednego kontrahenta
         {? _one_kh>0
         || {? _kh=null()
            || _kh:=exec('FindAndGet','#table',KH,_sck.KH_REF,,,null())
            ?};
            {? $_kh<>_sck.KH_REF
            || _one_kh:=0;
               _kh:=null()
            ?}
         ?}
      ?};
      _sck.next()
   !}
?};
{? _mktab>0
||
:: Utworzenie tabeli z danymi kontrahentów powiązanych ze zleceniem
   _kh_tab:=_ref_table.tab;
   {? _kh_tab.first()
   || {? var_pres('__KH4ZL')>100
      || _tab:=__KH4ZL;
         _tab.erase()
      || _tab:=__KH4ZL:=exec('kh4zlec_tab','zl_koop')
      ?};
      KH.cntx_psh();
      KH.prefix();
      {!
      |?
         {? KH.seek(_kh_tab.SQL)
         || _tab.blank();
            _tab.KOD:=KH.KOD;
            _tab.SKR:=KH.SKR;
            _tab.NAZ_P:=KH.NAZ_P;
            _tab.MIASTO:=KH.MIASTO;
            _tab.UL:=KH.UL;
            _tab.S_VAT:=KH.S_VAT;
            _tab.NIP:=KH.NIP;
            _tab.KH_REF:=$KH.ref();
::          Zebranie ilości wydanych, w kooperacji, w przyjęciu dla kontrahenta
            _ilw:=_ilwk:=_ilwp:=0;
            _sck.cntx_psh();
            _sck.prefix($KH.ref());
            {? _sck.first()
            || {!
               |?
                  _ilw+=_sck.ILW;
                  _ilwk+=_sck.SD;
                  _ilwp+=_sck.ILWP;
                  _sck.next()
               !}
            ?};
            _sck.cntx_pop();
            _tab.ILW:=_ilw;
            _tab.ILWK:=_ilwk;
            _tab.ILWP:=_ilwp;
            _tab.add()
         ?};
         _kh_tab.next()
      !};
      KH.cntx_pop()
   ?}
?};

{? _mktab>0 || ~~ || _kh ?}


\kh_grp_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Tworzy okno z zakładkami dla kartoteki kontrahentów - dodatkowa zakłada z listą kontrahentów,
::       do których wydano produkty w kooperacji
::   WE: [_a] - NUMBER - czy ustawić utworzone okno jako okno selekcji/słownikowe dla tabeli kontrahentów
::   WY: utworzone okno grupowe
::----------------------------------------------------------------------------------------------------------------------
_set:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_tab_zl:=var_pres('__KH4ZL')>100;
_grp:=KH.grp_make('Kontrahenci'@,,'khwer_koopgrp');
KH.grp_sel(_grp,,'WER',{? _tab_zl>0 || ' Kontrahenci' || '' ?},,,,,,,,,'maximized',,1);
KH.actions('WER','WM:M');
{? _tab_zl>0
|| _before:="
      _tab:=cur_tab(1,1);
      _tab.first();
::    Podczytanie kontrahenta
      _tab.find_tab(,'KH_REF',,'=',$KH.ref());
      ~~
   ";
   KH.grp_sel(_grp,__KH4ZL,__KH4ZL.win_sel('?'),' Kontrahenci wg zlecenia'@,,,,,_before,,,,'maximized')
?};
{? _set>0
|| KH.win_sel(_grp);
   KH.win_dict(_grp)
?};
_grp


\kh4zlec_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Tworzy tabelę przechowującą listę kontrahentów, do których wydano produkty w kooperacji dla danego zlecenia
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(,
   'KOD','STRING[8]','Kod',
   'SKR','STRING[10]','Skrót',
   'NAZ_P','STRING[60]','Nazwa pełna',
   'MIASTO','STRING[30]','Miasto',
   'UL','STRING[150]','Ulica',
   'S_VAT','STRING[1]','VAT',
   'NIP','STRING[20]','NIP',
   'ILW','REAL','Ilość wydana',
   'ILWK','REAL','W kooperacji',
   'ILWP','REAL','W przyjęciu',
   'KH_REF','STRING[16]','KH.ref'
);

_win:=_tab.mk_sel('Kontrahenci'@,'P',0,'khqwer_koop',1,1,,,'U','T',,,,'maximized');
_tab.win_fld(_win,,'KOD',,,8);
_tab.win_fld(_win,,'SKR',,,11);
_tab.win_fld(_win,,'NAZ_P',,,25);
_tab.win_fld(_win,,'MIASTO',,,15);
_tab.win_fld(_win,,'UL',,,'15,17,17');
_tab.win_fld(_win,,'S_VAT',,,'3,7,7',,,,,,2,,"'T'","'N'","");
_tab.win_fld(_win,,'NIP',,,'20,20,20');
_tab.win_fld(_win,,'ILW',,,12,ST.DOKL);
_tab.win_fld(_win,,'ILWK',,,12,ST.DOKL);
_tab.win_fld(_win,,'ILWP',,,12,ST.DOKL);
_tab.win_act(_win,0,'Formuła','Wybierz'@@,'','Wybór pozycji ze słownika'@,
   "exec('sel_exit_','#window')","",1,0,"","",'W',0,'mobile=1,target=record');

_before:="
   _tab:=cur_tab(1,1);
:: Podczytanie kontrahenta
   KH.seek(_tab.KH_REF);
   ~~
";
_tab.win_act(_win,0,'Rekord',,,,_before);

_tab.win_act(_win,0,'Wyświetl',,,,"params_exec('kh_wys1','kontrahent')");
_tab.win_sel(_win);
_tab

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 c106b42c0643e771721208bb8691acb6c172d59a5e05b220d5b061bc3b624e8fdef635108209e4755eba0a5e03017b6d2c876d2bdbec46e16c508e96b3062e860c1121575810018bbf016c72a7a6b5838c967d56edd75a8a70bebfac7131347ffeef193c0e2f686c7944c6c06d6daa15d895b357a52724657dfa1755a3538863
