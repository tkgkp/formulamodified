:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: prc_gpdwl.fml
:: Utworzony: 16.11.2017
:: Autor: TMR
::======================================================================================================================
:: Zawartość: Formuły do obsługi grup podwładnych
::======================================================================================================================

\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Kasowanie danych w tabeli WT_GPDWL
::   WE: _a [INTEGER] - Moment wywołania:
::                      1 - Start TOMCATA - kasowane są wszystkie rekordy związane z identyfikatorem serwera.
::                      2 - Zakończenie sesji webTerma - kasowane są tylko rekordy związane z daną sesją.
::                      3 - Zamknięcie zakładki - kasowane są tylko rekordy związane z daną zakładką
::                          (obecnie wywoływane "ręcznie")
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & (0<_a & _a<=3)
|| _tryb:=_a
|| return(0)
?};

WT_GPDWL.index('PPOD');
{? _tryb=1
|| _tcid:=app_info('web_tcid');
   WT_GPDWL.prefix(_tcid,)
|? _tryb=2
|| _tcid:=app_info('web_tcid');
   _sesid:=app_info('web_sesid');
   WT_GPDWL.prefix(_tcid,_sesid,)
|? _tryb=3
|| _tcid:=app_info('web_tcid');
   _sesid:=app_info('web_sesid');
   _tabid:=app_info('web_tabid');
   WT_GPDWL.prefix(_tcid,_sesid,_tabid,)
?};
{? WT_GPDWL.first()
|| {!
   |? WT_GPDWL.del()
   !}
?};
1


\wt_gpdwl_wer_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Przed obsługą okna WER tabeli WT_GPDWL (grupy podwładnych)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('set_env','pkw_por');
~~


\wt_gpdwl_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Po odświeżeniu okna WER tabeli WT_GPDWL (grupy podwładnych)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('fill','prc_gpdwl');
~~


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Wyświetla okno z grupami podwładnych
::   WE: _a [INTEGER] - czy odświeżać okno z kontrolką (domyślnie tak)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_refresh:={? var_pres('_a')=type_of(0) || _a || 1 ?};

:: ustalenie podwładnych
_sKod:=exec('kod_zaleznosci','prc_dane');
exec('p_web_cx_set','p_web',_sKod,,0,'GRUPY');
exec('wt_gpdwl_wer_ar','prc_gpdwl');

:: zapamiętanie ostatniej modyfikacji dla rekodru WT_GPDWL - jako maskę podaje 8 ostatnich znaków z web_tabid
:: bo chcę kontrolować zmiany dokonane tylko w bieżącej zakładce
_tabid:=app_info('web_tabid');
_last_mod:=exec('last_mod_get','#table',WT_GPDWL,_tabid+8);
_esc_form:="
   _tabid:=app_info('web_tabid');
:: jeżeli po wywołaniu okna coś się zmieniło to odświeżamy dane w kontrolce planowania
   {? web_params_get().refresh & (exec('last_mod_get','#table',WT_GPDWL,_tabid+8)>web_params_get().last_mod)
   || exec('clean','prc_gpdwl',2);
      exec('wszystkie_dane','prc_dane')
   ?}
";
web_params_set('last_mod',_last_mod,
               'refresh',_refresh,
               'ESC_FORM',_esc_form);

WT_GPDWL.web_select('WER',,,,"
   exec('sel_exit_','#window')
")


\fill
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Wypełnia tabelę sesyjną WT_GPDWL - danymi o pracownikach podwładnych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tcid:=app_info('web_tcid');
_sesid:=app_info('web_sesid');
_tabid:=app_info('web_tabid');
_p_ref:=exec('get_p_web_cl','p_web','JA');
_os_ref:=OPERATOR.USER().OSOBA;

_add:="
   WT_GPDWL.blank();
   WT_GPDWL.P:=$_a;
   WT_GPDWL.POD:=$_b;
   WT_GPDWL.NAZWA:=_c;
   WT_GPDWL.NAZWISKO:=_d;
   WT_GPDWL.PIERWSZE:=_e;
   WT_GPDWL.JOS:=_f;
   WT_GPDWL.JON:=_g;
   WT_GPDWL.STN:=_h;
   WT_GPDWL.ZA:=_i;
   WT_GPDWL.F_ZATR:=_j;
   WT_GPDWL.W:=_k;
   WT_GPDWL.add()
";

:: czyścimy dane sesyjne (z zakładki) aby ponownie je odświeżyć
exec('clean','prc_gpdwl',3);

WT_GPDWL.index('NAZWA');
WT_GPDWL.prefix(_tcid,_sesid,_tabid,$_p_ref);
{? ~WT_GPDWL.size()
||
:: pobranie wszystkich otwartych okresów
   _tab_okr:=exec('getOkrFromDate','grafik',,,,,,'O');
   _data_o:={? _tab_okr.first() || _tab_okr.OD || date() ?};

   P_WEB_CX.cntx_psh();
   P.cntx_psh();
   OSOBA.cntx_psh();
   UD_SKL.cntx_psh();
   STN.cntx_psh();
   F_ZATR.cntx_psh();

   _kod:=exec('kod_zaleznosci','prc_dane');
   exec('p_web_cx_set_prefix','p_web',_kod,'SETID','GRUPY');
   {? P_WEB_CX.first()
   || {!
      |? P_WEB_CX.P().OSOBA();
::       ograniczenie pobierania zwolnionych pracownikow tylko do aktualnie otwartych okresow
         {? (P.DZ=date(0,0,0) | P.DZ>=_data_o)
         || _nazwa:=exec('find_p_gr_p','prc_gpdwl',_p_ref,P_WEB_CX.P);

            _add(_p_ref,
                 P_WEB_CX.P,
                 _nazwa,
                 OSOBA.NAZWISKO,
                 OSOBA.PIERWSZE,
                 P.WYDZIAL().SYMBOL,
                 P.WYDZIAL().OPIS,
                 P.ST().ST,
                 P.ZA,
                 P.F_ZATR().KOD,
                 exec('is_pw','prc_gpdwl',_p_ref,P_WEB_CX.P)
            )
         ?};
         P_WEB_CX.next()
      !}
   ?};
   F_ZATR.cntx_pop();
   STN.cntx_pop();
   UD_SKL.cntx_pop();
   OSOBA.cntx_pop();
   P.cntx_pop();
   P_WEB_CX.cntx_pop()
?};
~~


\is_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.10]
:: OPIS: Czy podwładny ma być widoczny w planowaniu i grafikach
::   WE: _a [REFERENCE] - wskazanie na pracownika będacego kierownikiem
::       _b [REFERENCE] - wskazanie na pracownika podwladnego
::     [_c] [INTEGER]   - czy zawsze zwracamy 'T' dla osoby "pytającej" (domyślnie nie)
::   WY: 'T/N'
::  OLD: \is_pw/plan_kal.fml
::----------------------------------------------------------------------------------------------------------------------
_ret_val:='N';
_p1_ref:={? var_pres('_a')=type_of(null()) || _a || return(_ret_val) ?};
_p2_ref:={? var_pres('_b')=type_of(null()) || _b || return(_ret_val) ?};
_yes4me:={? var_pres('_c')=type_of(0)      || _c || 0                ?};

P.cntx_psh();
P.index('OSOBA');
P.prefix();
_os1_ref:={? P.seek(_p1_ref) || P.OSOBA || null() ?};
_os2_ref:={? P.seek(_p2_ref) || P.OSOBA || null() ?};

{? _os1_ref=_os2_ref & _yes4me
|| _ret_val:='T'
|| P_GR_PW.cntx_psh();
   P_GR_PW.index('PPOD');
   P_GR_PW.prefix(_p1_ref,_p2_ref);
   {? P_GR_PW.first()
   || _ret_val:=P_GR_PW.W
   || P_GR_PW.blank(1);
      P_GR_PW.P:=_p1_ref;
      P_GR_PW.POD:=_p2_ref;
      P_GR_PW.W:='T';
      {? P_GR_PW.add()
      || _ret_val:='T'
      ?}
   ?};
   P_GR_PW.cntx_pop()
?};
P.cntx_pop();
_ret_val


\pgrp_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Dodaje podwladnego do grupy kierownika
::   WE: _a [REFERENCE] - wskazanie na pracownika (kierownika)
::       _b [REFERENCE] - wskazanie na podwladnego
::       _c [REFERENCE] - wskazanie na grupę w przypadku pustego refa usuwa podwladnego z grupy
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
    _p_ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};
  _pod_ref:={? var_pres('_b')=type_of(null()) || _b || return(_result) ?};
_grupa_ref:={? var_pres('_c')=type_of(null()) || _c || null()          ?};

P.cntx_psh();
P_GR_P.cntx_psh();
P_GR.cntx_psh();
P_GR.clear();
:: sprawdza czy istnieje grupa dla kierownika - jeżeli nie to zeruje wskazanie na grupę
{? ~(P_GR.seek(_grupa_ref) & (P_GR.P=_p_ref))
|| _grupa_ref:=null()
?};

P_GR_P.index('PPOD');
P_GR_P.prefix(_p_ref,_pod_ref);
{? P_GR_P.first()
||
:: aktualizacja wpisu dla podwładnego jeżeli znaleziono wczesniej grupę
   {? _grupa_ref
   || P_GR_P.GRUPA:=_grupa_ref;
      _result:=P_GR_P.put()
   ||
::    jeęeli nie podano nazwy grupy to podwladny jest usuwany
      {? _grupa_ref=null()
      || _result:=P_GR_P.del(,1)
      ?}
   ?}
||
:: dodanie wpisu dla podwładnego
   {? _grupa_ref
   || P_GR_P.prefix();
      P_GR_P.blank();
      P_GR_P.P:=_p_ref;
      P_GR_P.POD:=_pod_ref;
      P_GR_P.GRUPA:=_grupa_ref;
      _result:=P_GR_P.add()
   ?}
?};
P_GR.cntx_pop();
P_GR_P.cntx_pop();
P.cntx_pop()


\pgrp_wid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Ustala widoczność pracownika w planowaniu i grafikach
::   WE: _a [REFERENCE] - wskazanie na pracownika (kierownika)
::       _b [REFERENCE] - wskazanie na podwladnego
::       _c [REFERENCE] - wskazanie na grupę w przypadku pustego refa usuwa podwladnego z grupy
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
    _p_ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};
  _pod_ref:={? var_pres('_b')=type_of(null()) || _b || return(_result) ?};
      _wid:={? var_pres('_c')=type_of('')     || _c || ''              ?};

P_GR_PW.cntx_psh();
{? (_wid='T') | (_wid='N')
|| {? _pod_ref
   || P_GR_PW.index('PPOD');
      P_GR_PW.prefix(_p_ref, _pod_ref);
      {? P_GR_PW.first()
      || P_GR_PW.W:=_wid;
         _result:=P_GR_PW.put()
      || P_GR_PW.clear();
         P_GR_PW.blank(1);
         P_GR_PW.P:=_p_ref;
         P_GR_PW.POD:=_pod_ref;
         P_GR_PW.W:=_wid;
         _result:=P_GR_PW.add()
      ?}
   ?}
?};
P_GR_PW.cntx_pop();
_result


\find_p_gr_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.10]
:: OPIS: Znajduje grupe do ktorej przypisany jest podwladny w portalu
::   WE: _a  [REFERENCE] - wskazanie na pracownika będacego kierownikiem
::       _b  [REFERENCE] - wskazanie na pracownika podwladnego
::      [_c] [STRING]    - jaką informację zwracać - ref grupy czy nazwę grupy (domyślnie)
::   WY:     [STRING]    - ref sql grupy lub nazwa grupy
::  OLD: \find_p_gr_p/plan_kal.fml
::----------------------------------------------------------------------------------------------------------------------
_ret_val:='';
_p1_ref:={? var_pres('_a')=type_of(null()) || _a || return(_ret_val) ?};
_p2_ref:={? var_pres('_b')=type_of(null()) || _b || return(_ret_val) ?};
    _co:={? var_pres('_c')=type_of('')     || _c || 'NAZWA'          ?};

P.cntx_psh();
P.index('OSOBA');
P.prefix();
_os1_ref:={? P.seek(_p1_ref) || P.OSOBA || null() ?};
_os2_ref:={? P.seek(_p2_ref) || P.OSOBA || null() ?};
P_GR.cntx_psh();
P_GR_P.cntx_psh();
P_GR_P.index('PPOD');
P_GR_P.prefix(_p1_ref,_p2_ref);
{? P_GR_P.first()
|| _ret_val:={? _co='NAZWA' || P_GR_P.GRUPA().NAZWA || $P_GR_P.GRUPA ?}
|? _os1_ref=_os2_ref
|| _ret_val:={? _co='NAZWA' || 'Użytkownik'@ || '' ?}
|| _ret_val:={? _co='NAZWA' || 'Podwładni'@ || '' ?}
?};
P_GR_P.cntx_pop();
P_GR.cntx_pop();
P.cntx_pop();
_ret_val


\wt_gpdwl_wer_grupy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Obsługa akcji/przycisku "Grupy" z okna wertowania WER tabeli WT_GPDWL.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
WT_GPDWL.web_cntx_save(1);
_p_ref:=exec('get_p_web_cl','p_web','JA');

:: ustawienie formuły na zamknięcie okna - żeby można było ją wykorzystac w standardowej obsłudze sel_exit_
web_params_set('ESC_FORM',"
   WT_GPDWL.web_cntx_load(1);
   web_top_refresh(1)
");

P_GR.index('PRACNAZ');
P_GR.prefix(_p_ref);
P_GR.web_select('WEB_WER',,,,"
   exec('sel_exit_','#window')
")


\wt_gpdwl_wer_zmien_grupe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Obsługa akcji/przycisku "Zmień grupę" z okna wertowania WER tabeli WT_GPDWL.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('zmien','prc_gpdwl',0);
~~


\wt_gpdwl_wer_zmien_grupe_grb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Obsługa akcji/przycisku "Zmień grupę" z okna wertowania WER tabeli WT_GPDWL - dla akcji grupowej.
::   WE:
::   WY: 0
::----------------------------------------------------------------------------------------------------------------------
exec('zmien','prc_gpdwl',1);
0


\setid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Zwraca identyfikator zestawu danych wykorzystywany do obsługi zaznaczania rekordów
::   WE:
::   WY: [STRING]
::----------------------------------------------------------------------------------------------------------------------
'WT_GPDWL'


\zmien
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Wspólna formuła dla akcji "Zmień" i grupowej akcji "Zmień"
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_grupowa:={? var_pres('_a')=type_of(0) || _a || 0 ?};
{? exec('env_wt','b_proces')
|| _setid:=exec('setid','prc_gpdwl');
:: odznaczamy rekordy
   exec('del','wt_group',_setid);

:: ustawiamy znacznik zaznaczenia zdognie z wyborem
   {? _grupowa
   || exec('add_selected','wt_group',_setid,,1)
   || exec('add','wt_group',_setid,WT_GPDWL.uidref())
   ?};

:: uruchamiamy formułę po wyborze akcji
   WT_GPDWL.web_cntx_save(1);
   _p_ref:=exec('get_p_web_cl','p_web','JA');
   P_GR.index('PRACNAZ');
   P_GR.prefix(_p_ref);
   P_GR.web_select('WEB_SEL','#p_gr_20110202_')
?};
~~


\p_gr_web_wer_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Obsługa akcji/przycisku "Dołącz" w oknie WEB_WER tabeli P_GR
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
P_GR.cntx_psh();
P_GR.blank();
P_GR.web_edit('WEB_RED','#p_gr_20171119_',,,"
 _close:=1;
 {? _a='OK'
 || _p_ref:=exec('get_p_web_cl','p_web','JA');
    _close:=exec('p_gr_add','prc_gpdwl',_p_ref,P_GR.NAZWA)
 ?};
 {? _close
 || web_top_close();
    web_top_refresh(1)
 ?}
");
P_GR.cntx_pop();
~~


\p_gr_web_wer_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Obsługa akcji/przycisku "Popraw" w oknie WEB_WER tabeli P_GR
::   WE: _a -
::       _b -
::   WY:
::----------------------------------------------------------------------------------------------------------------------
P_GR.cntx_psh();
P_GR.web_edit('WEB_RED','#p_gr_20171120_',,,"
 _close:=1;
 {? _a='OK'
 || _p_ref:=exec('get_p_web_cl','p_web','JA');
    _close:=exec('p_gr_edit','prc_gpdwl',P_GR.ref(),P_GR.NAZWA);
    {? _close || exec('wt_gpdwl_update','prc_gpdwl',P_GR.P) ?}
 ?};
 {? _close
 || web_top_close();
    web_top_refresh(1)
 ?}
");
P_GR.cntx_pop();
~~


\p_gr_web_wer_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Obsługa akcji/przycisku "Usuń" w oknie WEB_WER tabeli P_GR
::   WE: _a -
::       _b -
::   WY:
::----------------------------------------------------------------------------------------------------------------------
P_GR.web_cntx_save(1);
web_ask("
 P_GR.web_cntx_load(1);
 {? _a=1
 || _p_ref:=exec('get_p_web_cl','p_web','JA');
    exec('p_gr_del','prc_gpdwl',_p_ref,P_GR.ref());
    exec('wt_gpdwl_update','prc_gpdwl',_p_ref)
 ?};
 web_top_refresh()
",'Czy usunąć wybraną grupę?'@,'Grupy podwładnych'@);
~~


\p_gr_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Dodaje grupę pracownika
::   WE: _a  [REFERENCE] - wskazanie na pracownika
::       _b  [STRING]    - nazwa grupy
::      [_c] [INTEGER]   - czy wyświetlać komunikaty (domyślnie tak)
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_p_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};
_nazwa:={? var_pres('_b')=type_of('')   || _b || return(_result) ?};
  _msg:={? var_pres('_c')=type_of(0)    || _c || 1               ?};

P_GR.cntx_psh();
P_GR.index('PRACNAZ');
P_GR.prefix(_p_ref,_nazwa,_nazwa);
{? P_GR.first()
|| {? _msg || FUN.info('Grupa o podanej nazwie już istnieje.'@) ?}
|| P_GR.prefix();
   P_GR.blank();
   P_GR.P:=_p_ref;
   P_GR.NAZWA:=_nazwa;
   _result:=P_GR.add()
?};
P_GR.cntx_pop();
_result


\p_gr_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Edytuje grupę pracownika
::   WE: _a  [REFERENCE] - wskazanie na grupę
::       _b  [STRING]    - nazwa grupy
::      [_c] [INTEGER]   - czy wyświetlać komunikaty (domyślnie tak)
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_gr_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};
 _nazwa:={? var_pres('_b')=type_of('')   || _b || return(_result) ?};
   _msg:={? var_pres('_c')=type_of(0)    || _c || 1               ?};

P_GR.cntx_psh();
P_GR.clear();
{? P_GR.seek(_gr_ref)
|| P_GR.NAZWA:=_nazwa;
   {? P_GR.put()
   || _result:=1
   || {? _msg || FUN.info('Nie udało się zmienić nazwy dla grupy'@) ?}
   ?}
|| {? _msg || FUN.info('Nie znaleziono grupy'@) ?}
?};
P_GR.cntx_pop();
_result


\p_gr_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Usuwa grupę pracownika
::   WE: _a  [REFERENCE] - wskazanie na pracownika
::       _b  [REFERENCE] - wskazanie na grupę
::      [_c] [INTEGER]   - czy wyświetlać komunikaty (domyślnie tak)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
 _p_ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};
_gr_ref:={? var_pres('_b')=type_of(null()) || _b || return(_result) ?};
   _msg:={? var_pres('_c')=type_of(0)      || _c || 1               ?};

_msg_text:='';
P_GR.cntx_psh();
P_GR.clear();
{? P_GR.seek(_gr_ref) & (P_GR.P=_p_ref)
||
:: zalozenie transakcji i usuniecie przypietych pracownikow
   _mydo:=do_state()=0;
   {? _mydo || do() ?};
   P_GR_P.cntx_psh();
   P_GR_P.index('GRUPA');
   P_GR_P.prefix(_gr_ref);
   {? P_GR_P.first()
   || {!
      |? P_GR_P.del()
      !}
   ?};
   {? P_GR.count()=0
   || {? P_GR.del(,1)
      || _result:=1
      || undo();
         _msg_text:='Nie udało się usunąć grupy'@
      ?}
   || undo();
      _msg_text:='Nie można usunąć grupy'@
   ?};
   P_GR_P.cntx_pop();
   {? _mydo || end() ?}
|| _msg_text:='Nie znaleziono grupy'@
?};
P_GR.cntx_pop();
{? _msg & (+_msg_text) || FUN.info(_msg_text) ?};
_result


\p_gr_web_red_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS:
::   WE: _a -
::       _b -
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\p_gr_web_sel_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\p_gr_web_sel_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\p_gr_web_sel_wybierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Obsługa akcji/przycisku "Wybierz" w oknie WEB_SEL tabeli P_GR
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
web_top_close();
_ref:=P_GR.ref();
exec('ustaw_grupe','prc_gpdwl',_ref);
WT_GPDWL.web_cntx_load(1);
web_top_refresh(1);
~~


\wt_gpdwl_wer_usun_grupe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Obsługa akcji/przycisku "Usuń grupę" w oknie WER tabeli WT_GPDWL
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_setid:=exec('setid','prc_gpdwl');
exec('del','wt_group',_setid);
exec('add','wt_group',_setid,WT_GPDWL.uidref());
exec('ustaw_grupe','prc_gpdwl',null());
web_top_refresh();
~~


\wt_gpdwl_wer_usun_grupe_grb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Obsługa akcji/przycisku "Usuń grupę" w oknie WER tabeli WT_GPDWL - akcja grupowa
::   WE:
::   WY: 0
::----------------------------------------------------------------------------------------------------------------------
_setid:=exec('setid','prc_gpdwl');
exec('del','wt_group',_setid);
exec('add_selected','wt_group',_setid,,1);
exec('ustaw_grupe','prc_gpdwl',null());
web_top_refresh();
0


\ustaw_grupe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Ustawia grupę dla pracownika. Funkcja bazuje na rekordach przekazanych do tabeli WT_GROUP
::   WE: _a [REFERENCE] - wskazanie na grupę
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_ref:={? var_pres('_a')=type_of(null()) || _a || return(~~) ?};

:: pobieramy wcześniej zaznaczone rekordy tabeli WT_GPDWL
_setid:=exec('setid','prc_gpdwl');
_tab:=exec('get','wt_group',_setid);
{? type_of(_tab)>0
|| P.use('pracowni');
   P.cntx_psh();
   P.prefix();
:: znajdujemy rekordy w tabeli WT_GPDWL
   WT_GPDWL.cntx_psh();
   WT_GPDWL.prefix();
   {? _tab.first()
   || _tabid:=app_info('web_tabid');
      {!
      |? {? WT_GPDWL.seek(_tab.KEY)
         || _p_ref:={? P.seek(WT_GPDWL.P) || P.ref() || null() ?};
            _pod_ref:={? P.seek(WT_GPDWL.POD) || P.ref() || null() ?};
            {? exec('pgrp_add','prc_gpdwl',_p_ref,_pod_ref,_ref)
            || WT_GPDWL.NAZWA:=exec('find_p_gr_p','prc_gpdwl',_p_ref,_pod_ref);
               _idput:=WT_GPDWL.idput_value();
               {? WT_GPDWL.put()
               || {? _idput<>WT_GPDWL.idput_value()
                  || exec('last_mod_set','#table',WT_GPDWL,_tabid+8)
                  ?}
               ?}
            ?}
         ?};
         _tab.next()
      !}
   ?};
   WT_GPDWL.cntx_pop();
   P.cntx_pop()
?};
~~


\wt_gpdwl_wer_uwzgl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Obsługa akcji/przycisku "Uwzględnij"
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('uwzglednij','prc_gpdwl',0,'T');
~~


\wt_gpdwl_wer_uwzgl_grb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Obsługa akcji/przycisku "Uwzględnij" - grupowa
::   WE:
::   WY: 0
::----------------------------------------------------------------------------------------------------------------------
exec('uwzglednij','prc_gpdwl',1,'T');
0


\wt_gpdwl_wer_pomin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS:
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('uwzglednij','prc_gpdwl',0,'N');
~~


\wt_gpdwl_wer_pomin_grb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS:
::   WE:
::   WY: 0
::----------------------------------------------------------------------------------------------------------------------
exec('uwzglednij','prc_gpdwl',1,'N');
0


\uwzglednij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Wspólna formuła dla akcji "Uwzględnij"
::   WE: _a  [INTEGER] - znacznik czy akcja grupowa
::      [_a] [STRING]  - znacznik czy uwzględniać pracownika ('T'/'N')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
   _grupowa:={? var_pres('_a')=type_of(0)  || _a || 0  ?};
_uwzglednij:={? var_pres('_b')=type_of('') || _b || '' ?};

{? _uwzglednij<>'T' & _uwzglednij<>'N'
|| return(~~)
?};

{? exec('env_wt','b_proces')
|| _setid:=exec('setid','prc_gpdwl');
:: odznaczamy rekordy
   exec('del','wt_group',_setid);

:: ustawiamy znacznik zaznaczenia zdognie z wyborem
   {? _grupowa
   || exec('add_selected','wt_group',_setid,,1)
   || exec('add','wt_group',_setid,WT_GPDWL.uidref())
   ?};

:: uruchamiamy formułę po wyborze akcji
:: pobieramy wcześniej zaznaczone rekordy tabeli WT_GPDWL
   _tab:=exec('get','wt_group',_setid);
   {? type_of(_tab)>0
   || _tabid:=app_info('web_tabid');
      P.use('pracowni');
      P.cntx_psh();
      P.prefix();
::    znajdujemy rekordy w tabeli WT_GPDWL
      WT_GPDWL.cntx_psh();
      WT_GPDWL.prefix();
      {? _tab.first()
      || {!
         |? {? WT_GPDWL.seek(_tab.KEY)
            || _p_ref:={? P.seek(WT_GPDWL.P) || P.ref() || null() ?};
               _pod_ref:={? P.seek(WT_GPDWL.POD) || P.ref() || null() ?};
               {? exec('pgrp_wid','prc_gpdwl',_p_ref,_pod_ref,_uwzglednij)
               || WT_GPDWL.W:=_uwzglednij;
                  _idput:=WT_GPDWL.idput_value();
                  {? WT_GPDWL.put()
                  || WT_GPDWL.get();
                     {? _idput<>WT_GPDWL.idput_value()
                     || exec('last_mod_set','#table',WT_GPDWL,_tabid+8)
                     ?}
                  ?}
               ?}
            ?};
            _tab.next()
         !}
      ?};
      WT_GPDWL.cntx_pop();
      P.cntx_pop()
   ?};
   web_top_refresh()
?};
~~


\wt_gpdwl_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
:: OPIS: Aktualizuje zapisy w tabeli WT_GPDWL
::   WE: _a [REFERENCE] - wskazanie na pracownika
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_p_ref:={? var_pres('_a')=type_of(null()) || _a || return(~~) ?};

_tcid:=app_info('web_tcid');
_sesid:=app_info('web_sesid');
_tabid:=app_info('web_tabid');

WT_GPDWL.cntx_psh();
WT_GPDWL.index('PPOD');
WT_GPDWL.prefix(_tcid,_sesid,_tabid,$_p_ref);
{? WT_GPDWL.first()
|| P.cntx_psh();
   P.use('pracowni');
   P.index('OSOBA');
   P.prefix();
   {!
   |? {? P.seek(WT_GPDWL.POD)
      || WT_GPDWL.W:=exec('is_pw','prc_gpdwl',_p_ref,P.ref());
         WT_GPDWL.NAZWA:=exec('find_p_gr_p','prc_gpdwl',_p_ref,P.ref());
         _idput:=WT_GPDWL.idput_value();
         {? WT_GPDWL.put()
         || {? _idput<>WT_GPDWL.idput_value()
            || exec('last_mod_set','#table',WT_GPDWL,_tabid+8)
            ?}
         ?}
      ?};
      WT_GPDWL.next()
   !};
   P.cntx_pop()
?};
WT_GPDWL.cntx_pop();
~~

:Sign Version 2.0 jowisz:1045 2021/09/17 15:17:10 a9ba3ab20c7e480d4c930d7a83c8eed286ad26f55e959f01c0b4e466608924d644000f63eedf842b8c7ebc32c4472d00c73e7eb0ef018cd67afa28ffbf54b81ba0e2cddd96bd1f75699d2aad71351c777d95a12aa5a1078fb5c4585b43aa254cfebd29ec0a198a4e35fe0ece1b5a9e631dcb6a9cff134ce8de3480ba9627e360
