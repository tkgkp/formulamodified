:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: obiegi.fml
:: Utworzony: 15.02.2016
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Obsługa obiegów dokumentów
::======================================================================================================================


\finfoslp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Przed redakcja pola ETYPY.PLATNOSC i EDOKUM.PLATNOSC
::  OLD: \finfoslp/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
{? XINFO.SLP<>null || XINFO.SLP(); _zwrot:=1 ?};
_zwrot


\sch_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Wartosc poczatkowa - typ obiegu
::  OLD: \sch_typ/skid_obi.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYPOBIEG


\bl_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Znajduje wartosc w tabeli TYPOBIEG
::   WE: _a - 1 - obiegi faktur zakupu
::            2 - obiegi wnioskow
::            3 - obieg delegacji
::  OLD: \bl_typ/skid_obi.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=null;
TYPOBIEG.cntx_psh(); TYPOBIEG.index('UNIK');
{? _a=1
|| TYPOBIEG.prefix('Obieg faktur','Obieg faktur')
|? _a=2
|| TYPOBIEG.prefix('Obieg wniosków','Obieg wniosków')
|? _a=3
|| TYPOBIEG.prefix('Obieg delegacji','Obieg delegacji')
?};
{? TYPOBIEG.first() || _zwrot:=TYPOBIEG.ref() ?};
TYPOBIEG.cntx_pop();
_zwrot


\dspsldob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Na wyswietl dla pola SKID.SL_KH
::  OLD: \dspsldob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| {? EDOKUM.KH<>null
   || SKID.SL_KH:=EDOKUM.KH().SLU().NAZ; SKID.SL_KH
   || _par:=web_global_params_get();
      {? type_of(_par)>100 & var_pres('ed_kh_ed',_par)>0 & ~_par.ed_kh_ed
      || SKID.SL_KH:={? EDOKUM.TYP().DOM_SL<>null || EDOKUM.TYP().DOM_SL().SLU().NAZ || '' ?}
      || ''
      ?}
   ?}
|| _tab:=cur_tab(1,1);
   {? _tab=EDOKUM | var_pres('objID')>0
   || {? ~exec('bdswniosek','obiegi')
      || 0
      || {? EDOKUM.KH<>null
         || SKID.SL_KH:=EDOKUM.KH().SLU().NAZ
         || {? -menu_txt<>'popraw' & -menu_txt<>'dołącz' & -menu_txt<>'rozpocznij'
               & -menu_txt<>'nowy' & -menu_txt<>'dokument w obiegu' & var_pres('utw_dob')<=0
            || SKID.SL_KH:={? EDOKUM.TYP().DOM_SL<>null || EDOKUM.TYP().DOM_SL().SLU().NAZ || '' ?}
            ?}
         ?}; 1
      ?}
   |? _tab=ETYPY
   || SKID.SL_KH:={? ETYPY.DOM_SL<>null || ETYPY.DOM_SL().SLU().NAZ || '' ?}; 1
   |? _tab=ZDARZT
   || SKID.SL_KH:={? ZDARZT.DOM_SL<>null || ZDARZT.DOM_SL().SLU().NAZ || '' ?}
   ?}
?}


\bdswniosek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Przed wyswietl dla pol na wniosku
::  OLD: \bdswniosek/skid_obi.fml
::----------------------------------------------------------------------------------------------------------------------
1


\bdsosobaobi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AB [1222]
:: OPIS: Przed wyswietl dla pola OBIEGI.OSOBAOBI
::  OLD: \bdswniosek/skid_obi.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.OSOBAOBI:={? EDOKUM.DOSTAWCA
                 || OBIEGI.OSOBAID:=EDOKUM.DOSTAWCA().IMEX;
                    OSOBA.PIERWSZE+' '+OSOBA.NAZWISKO
                 || OBIEGI.OSOBAID:=0;
                    ''
                 ?};
1


\disp_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Na wyswietl - sprawdzanie uprawnien
::  OLD: \disp_upr/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
1


\czy_wn_kadrowy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.50]
:: OPIS: Funkcja sprawdza czy jest to wniosek "kadrowy"
::   WE: _a - [STRING] - nazwa wniosku
::   WY: 0/1
::  OLD: \czy_wn_kadrowy/etypy.fml
::----------------------------------------------------------------------------------------------------------------------
_nazwa:={? var_pres('_a')=type_of('') || _a || return(0) ?};

_res:=0;
{? _nazwa=exec('nazwa_adres','obiegi2')     |
   _nazwa=exec('nazwa_awans','obiegi2')     |
   _nazwa=exec('nazwa_dane_os','obiegi2')   |
   _nazwa=exec('nazwa_nast_H_UM','obiegi2') |
   _nazwa=exec('nazwa_opieka','obiegi2')    |
   _nazwa=exec('nazwa_rachunek','obiegi')  |
   _nazwa=exec('nazwa_zatr','obiegi2')      |
   _nazwa=exec('nazwa_zwoln','obiegi2')     |
   _nazwa=exec('nazwa_adoUS','obiegi2')     |
   _nazwa=exec('nazwa_woz','obiegi')       |
   _nazwa=exec('nazwa_umzle','obiegi')     |
   _nazwa=exec('nazwa_worr','obiegi2')      |
   _nazwa=exec('nazwa_zdoNFZ','obiegi2')    |
   _nazwa=exec('nazwa_wop','obiegi2')       |
   _nazwa=exec('nazwa_woku','obiegi2')      |
   _nazwa=exec('nazwa_wozda','obiegi')     |
   _nazwa=exec('nazwa_dwwp','obiegi')      |
   _nazwa=exec('nazwa_dwwd','obiegi')      |
   _nazwa=exec('nazwa_drwd','obiegi')      |
   _nazwa=exec('nazwa_wou','obiegi')       |
   _nazwa=exec('nazwa_opif','obiegi')      |
   {? exec('is_pzd02','ppsf')
   || _nazwa=exec('nazwa_oopz','obiegi') |
      _nazwa=exec('nazwa_wpzds','obiegi') |
      _nazwa=exec('nazwa_wpzdo','obiegi')
   ?}
|| _res:=1
?};
_res


\nazwa_rachunek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.50]
:: OPIS: Funkcja zwraca nazwę dla wniosku o zmianę rachunku bankowego
::  OLD: \nazwa_rachunek/etypy.fml
::----------------------------------------------------------------------------------------------------------------------
'Zmiana rachunku bankowego'


\nazwa_woz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk] Michal Kocot [12.50]
:: OPIS: Funkcja zwraca nazwe dla wniosku o zatrudnienie
::  OLD: \nazwa_woz/etypy.fml
::----------------------------------------------------------------------------------------------------------------------
'Wniosek o zatrudnienie'


\nazwa_umzle
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk] Michal Kocot [12.50]
:: OPIS: Funkcje zwraca nazwe dla wniosku o umowe zlecenie
::  OLD: \nazwa_umzle/etypy.fml
::----------------------------------------------------------------------------------------------------------------------
'Wniosek o zawarcie umowy cywilnoprawnej'


\nazwa_wozda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk] Michal Kocot [12.50]
:: OPIS: Funkcja zwraca nazwe dla wniosku o zmiane danych adresowych
::  OLD: \nazwa_wozda/etypy.fml
::----------------------------------------------------------------------------------------------------------------------
'Wniosek o zmianę danych adresowych'


\nazwa_dwwp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Funkcja zwraca nazwę dla deklaracji wysokości wpłaty podstawowej
::  OLD: \nazwa_dwwp/etypy.fml
::----------------------------------------------------------------------------------------------------------------------
'PPK - Deklaracja wysokości wpłaty podstawowej'


\nazwa_dwwd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Funkcja zwraca nazwę dla deklaracji wysokości wpłaty dodatkowej
::  OLD: \nazwa_dwwd/etypy.fml
::----------------------------------------------------------------------------------------------------------------------
'PPK - Deklaracja wysokości wpłaty dodatkowej'


\nazwa_drwd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Funkcja zwraca nazwę dla deklaracji rezygnacji z wpłaty dodatkowej
::  OLD: \nazwa_drwd/etypy.fml
::----------------------------------------------------------------------------------------------------------------------
'PPK - Deklaracja rezygnacji z wpłaty dodatkowej'


\nazwa_wou
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Funkcja zwraca nazwę dla wniosku o uczestnictwo
::  OLD: \nazwa_wou/etypy.fml
::----------------------------------------------------------------------------------------------------------------------
'PPK - Wniosek o uczestnictwo'


\nazwa_opif
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Funkcja zwraca nazwę dla oświadczenia o podpisanych umowach o prowadzenie w innych Instytucjach Finansowych
::  OLD: \nazwa_opif/etypy.fml
::----------------------------------------------------------------------------------------------------------------------
'PPK - Oświadczenie o podpisanych umowach w IF'


\nazwa_nadg_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: Funkcja zwraca nazwę dla wniosku o pracę w godzinach nadliczbowych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Wniosek o pracę w godzinach nadliczbowych'


\nazwa_nadg_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: Funkcja zwraca nazwę dla wniosku o pracę w godzinach nadliczbowych - pracodawca
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Polecenie pracy w godzinach nadliczbowych'


\nazwa_odb_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [21.14]
:: OPIS: Funkcja zwraca nazwę dla wniosku o odbiór nadgodzin - pracownik
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Wniosek o odbiór nadgodzin'


\nazwa_odb_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [21.14]
:: OPIS: Funkcja zwraca nazwę dla wniosku o odbiór nadgodzin - firma
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Polecenie odbioru nadgodzin'


\nazwa_czw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [21.14]
:: OPIS: Funkcja zwraca nazwę dla wniosku o czas wolny (wyjście prywatne)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Wniosek o czas wolny'


\nazwa_dowu25
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.14]
:: OPIS: Funkcja zwraca nazwę dla deklaracji opłacania wpłat uczestnika PPK.
::----------------------------------------------------------------------------------------------------------------------
'PPK - Deklaracja opłacania wpłat uczestnika art.25'


\zambesl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Przed redakcja pola SKID.SL_KH
::  OLD: \zambesl/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
{? (((_tab=EDOKUM | _tab=EDOKOS | var_pres('REKORD',_tab)>0) & exec('bewniosek','obiegi')) | (_tab<>EDOKUM & _tab<>EDOKOS))
|| {? _tab=ETYPY
   || ETYPY.CZY_KH | typobi=1
   |? _tab=EDOKUM | var_pres('REKORD',_tab)>0
   || 1
   |? _tab=EDOKOS
   || ETYPY.CZY_KH
   || 0
   ?}
|| 0
?}


\bewniosek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Przed redakcja dla pol na wniosku
::  OLD: \bewniosek/skid_obi.fml
::----------------------------------------------------------------------------------------------------------------------
__dost_old:=EDOKUM.DOSTAWCA;
EDOKUM.TYP(); _fld:=cur_afld();
_edit:=exec('edit_upr','obiegi');
{? var_pres('typobi')>0 & typobi=2 & ETYPY.OBIEGKON=1
|| {? _fld='DATA_OD' | _fld='DATA_DO'
   || ETYPY.CZY_DATY
   |? _fld='GODZ_OD' | _fld='GODZ_DO'
   || ETYPY.CZY_DATY=2
   |? _fld='DOSTAWCA'
   || ETYPY.CZY_PRAC
   |? _fld='NIP' | _fld='SL_KH' | _fld='KH'
   || (ETYPY.CZY_KH | EDOKUM.DOKUM<>'') & _edit
   |? _fld='WART'
   || (ETYPY.CZY_WAR=1 | ETYPY.CZY_WAR=3) & _edit
   |? _fld='NETTO'
   || (ETYPY.CZY_WAR=2 | ETYPY.CZY_WAR=3) & _edit
   |? _fld='WAL'
   || ETYPY.CZY_WAR & _edit
   || 1
   ?}
|? var_pres('typobi')>0 & typobi=3
|| {? _fld='DATA_OD' | _fld='DATA_DO'
   || ETYPY.CZY_DATY
   |? _fld='GODZ_OD'
   || ETYPY.CZY_GODR
   |? _fld='GODZ_DO'
   || ETYPY.CZY_GODZ
   |? _fld='DOSTAWCA'
   || 1
   |? _fld='NIP' | _fld='SL_KH' | _fld='KH'
   || ETYPY.CZY_KH & _edit
   || 1
   ?}
|? ETYPY.OBIEGKON=2 & (_fld='KH' | _fld='NIP' | _fld='NETTO')
|| 0
|| 1
?}


\edit_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Przed redakcja - sprawdzanie uprawnien
::  OLD: \edit_upr/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
1


\etp_atr_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Selekcja schematu atrybutow typu
::  OLD: \etp_atr_sel/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
ETYPY.cntx_psh();
ETYP_ATR.cntx_psh();
{? 'TPs'*POMOC.W_PORTAL
|| ETYP_ATR.index('SECWP')
|| ETYP_ATR.index('KOLZ')
?};
ETYP_ATR.prefix(ETYPY.ref(),null);
POMOC.W_PORTAL:=ETYPY.W_PORTAL;
{? typobi=1
|| ETYP_ATR.win_sel('WER')
|| {? 'TPs'*POMOC.W_PORTAL || ETYP_ATR.win_sel('WERWWP') || ETYP_ATR.win_sel('WERW') ?}
?};
TAT.cntx_psh();
TAT.win_sel('WERO'); TAT.win_dict('WERO');
SLU.cntx_psh(); SLU.win_dict('SLO3'); SLU.prefix();
UD_SCH.cntx_psh(); UD_SCH.win_dict('WYB_KON'); UD_SCH.prefix();
{? 'TPs'*POMOC.W_PORTAL
|| TAT.win_patt('REDOWP'); TAT.win_edit('REDOWP');
   TAT.actions('WERO','D');
   ETYP_ATR.select(,,,'Z')
|? POMOC.W_PORTAL='S'
|| TAT.win_patt('RED_SEOD'); TAT.win_edit('RED_SEOD');
   TAT.actions('WERO','D');
   ETYP_ATR.select()
|| TAT.win_patt('REDO'); TAT.win_edit('REDO');
   TAT.actions('WERO');
   ETYP_ATR.select()
?};
UD_SCH.cntx_pop();
SLU.cntx_pop();
TAT.cntx_pop();
ETYP_ATR.cntx_pop(); ETYPY.cntx_pop()


\etypy_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zwrócenie aktualnego refa ETYPY
::  OLD: \etypy_ref/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? OBIEGI.TYP_ID='T'
|| ETYPY.ref()
|| null
?}


\etp_atr_tat_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Przed edycja pola ETUP_ATR.TAT
::  OLD: \etp_atr_tat_be/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.TAT:=fld();
~~


\etp_atr_tat_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Po edycji pola ETYP_ATR.TAT
::  OLD: \etp_atr_tat_ae/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::jak sie zmienil atrybut to usuniecie danych ktore moga byc bledne
{? ETYP_ATR.TAT=null
|| FUN.info('Nie wybrano atrybutu.'@); _wy:=0
|| {? ZNORMAT.TAT<>fld() ||  exec('etp_clear_def','obiegi');ETYP_ATR.DEF_FORM:='' ?};
   VAR.TYP_ATR:={? ETYP_ATR.TAT().TYP='L' || {? TAT.CZY_PREC<>'T' || 'Liczba' || 'Liczba zmiennoprzecinkowa' ?}
                |? ETYP_ATR.TAT().TYP='D' || 'Data'
                |? ETYP_ATR.TAT().TYP='C' || 'Czas'
                |? ETYP_ATR.TAT().TYP='I' || 'Data i czas'
                |? ETYP_ATR.TAT().TYP='T' || 'Tekst'
                |? ETYP_ATR.TAT().TYP='W' || 'Tekst wielolinijkowy'
                |? ETYP_ATR.TAT().TYP='B' || {? TAT.W_PORTAL='T' || 'Logiczny' || 'Tak/Nie' ?}
                |? ETYP_ATR.TAT().TYP='S' || 'Słownik'
                |? ETYP_ATR.TAT().TYP='U' || 'Schemat struktury'
                |? ETYP_ATR.TAT().TYP='X' || 'Dowolny słownik'
                |? ETYP_ATR.TAT().TYP='O' || {? TAT.W_PORTAL='T' || 'Etykieta' || 'Nagłówek' ?}
                || ''
                ?};
   {? ETYP_ATR.TAT().W_PORTAL='T' & 'LD'*TAT.TYP=0 || ETYP_ATR.MINVALUE:=0; ETYP_ATR.MAXVALUE:=0 ?};
   _wy:=1
?};
win_disp();
_wy


\etyp_atr_kol_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Wartosc poczatkowa ETYP_ATR.KOL
::   WE: _a - ref do ETYPY [ETYPY.ref]
::   WY: wartosc o 1 > od najwyszszego numeru pola
::  OLD: \etyp_atr_kol_wp/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null()))
   | (_a=null()) | ((ref_name(_a)<>ETYPY.name()) & (ref_name(_a)<>ZDARZT.name()))
|| {? OBIEGI.TYP_ID='K'
   || _a:=ZDARZT.ref()
   || _a:=ETYPY.ref()
   ?}
?};

ETYP_ATR.cntx_psh();
ETYP_ATR.index('KOLZ');
{? (ref_name(_a)=ZDARZT.name())
|| ETYP_ATR.prefix(null,_a)
|| ETYP_ATR.prefix(_a)
?};
{? ETYP_ATR.last()
|| _odp:=ETYP_ATR.KOL+1
|| _odp:=1
?};
ETYP_ATR.cntx_pop();
_odp


\etp_clear_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Usuniecie wartosci domyslnej z definicji atrybutu
::  OLD: \etp_clear_def/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
ETYP_ATR.DEFAULT:=''; {? var_press('DEF_MEMO',ETYP_ATR)>0 || ETYP_ATR.memo_set('','DEF_MEMO') ?}; ETYP_ATR.SLO:=ETYP_ATR.UD_SKL:=null();
~~


\etp_atr_nag_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Przed wyswietleniem pola ETYP_ATR.WYMAG, ETYP_ATR.EDIT
::   WY: 1 - tak, 0 - nie
::  OLD: \etp_atr_nag_bd/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.TAT().TYP<>'O' || 1 || 0 ?}


\etp_atr_nag_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Przed redagowaniem ETYP_ATR.WYMAG, ETYP_ATR.EDIT, ETYP_ATR.AE, ETYP_ATR.DEFAULT, ETYP_ATR.DEF_FORM
::   WY: 1 - tak, 0 - nie
::  OLD: \etp_atr_nag_be/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
ETYP_ATR.TAT().TYP<>'O'


\etp_atr_sp_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Przed wyswietleniem pola ETYP_ATR.SLOPOLE
::  OLD: \etp_atr_sp_bs/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.TAT().TYP='X' | ETYP_ATR.TAT().TYP='S' | ETYP_ATR.TAT().TYP='U' || 1 || 0 ?}


\etp_atr_sp_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Przed redagowaniem ETYP_ATR.SLOPOL
::   WY: 1 - tak, 0 - nie
::  OLD: \etp_atr_sp_be/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.WART_A:=fld();
'SUX'*ETYP_ATR.TAT().TYP


\etp_atr_dk_bv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Przed wyswietleniem ETYP_ATR.DEF_KIND
::  OLD: \etp_atr_dk_bv/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::Ustawienie statusow przyciskow
ETYP_ATR.btn_eopt('REDDEF','BTN_ETP_SET_DEF','state=normal');
{? (ETYP_ATR.DEFAULT='') & (ETYP_ATR.DEF_FORM='')
|| ETYP_ATR.btn_eopt('REDDEF','BTN_ETP_CLE_DEF','state=grayed')
|| ETYP_ATR.btn_eopt('REDDEF','BTN_ETP_CLE_DEF','state=normal')
?};
{? ETYP_ATR.TAT().TYP<>'O' || 1 || 0 ?}


\etp_atr_dk_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Po redagowaniu pola ETUP_ATR.DEF_KIND
::  OLD: \etp_atr_dk_ae/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.DEF_KIND='F'
|| exec('etp_clear_def','obiegi')
|| ETYP_ATR.DEF_FORM:=''
?};
win_disp()


\etp_atr_sp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Po redagowaniu ETYP_ATR.SLOPOL
::  OLD: \etp_atr_sp_ae/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZNORMAT.WART_A<>fld()
|| {? (ETYP_ATR.TAT().TYP='S') & (ETYP_ATR.SLO<>null())
   || ETYP_ATR.DEFAULT:={? fld()='K' || ETYP_ATR.SLO().KOD  || ETYP_ATR.SLO().TR ?}
   |? (ETYP_ATR.TAT().TYP='U') & (ETYP_ATR.UD_SKL<>null())
   || ETYP_ATR.DEFAULT:={? fld()='K' || ETYP_ATR.UD_SKL().SYMBOL  || ETYP_ATR.UD_SKL().OPIS ?}
   ?}
?};
~~


\etp_atr_dk_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Przed redagowaniem ETYP_ATR.DEF_KIND
::   WY: 1 - tak, 0 - nie
::  OLD: \etp_atr_dk_be/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
ETYP_ATR.TAT().TYP<>'O'


\etp_atr_ng1_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Przed wyswietleniem pola ETYP_ATR.AE, ETYP_ATR.DEFAULT, ETYP_ATR.DEF_FORM
::   WY: 1 - tak, 0 - wyszarzone
::  OLD: \etp_atr_ng1_bd/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.TAT().TYP<>'O' | (ETYP_ATR.TAT().TYP='O' & TAT.W_PORTAL='T') || 1 || exec('findfnv','#color') ?}


\etp_atr_df_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Przed redagowaniem ETYP_ATR.DEF_FORM
::  OLD: \etp_atr_df_be/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
ETYP_ATR.DEF_KIND='F'


\zdarzt_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JSz [12.30]
:: OPIS: Wartość początkowa pola ETYP_ATR.ZDARZT
::   WY: zwraca ref rekordu typu kontaktu, dla typu dokumentu w obiegu zwraca null
::  OLD: \zdarzt_ref/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? OBIEGI.TYP_ID='K'
|| ZDARZT.ref
|| null
?}


\bea_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [12.30]
:: OPIS: Przed edycją pola opis
::  OLD: \bea_opis/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.TAT().TYP='O'
|| 1
|| ETYP_ATR.memo_set(,'OPIS');
   0
?}


\bda_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [12.30]
:: OPIS: Przed wyswietleniem pola opis
::  OLD: \bda_opis/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.TAT<>null & ETYP_ATR.TAT().TYP='O' || 1 || exec('findfnv','#color') ?}


\be_tslo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.41]
:: OPIS: Przed redakcja pola ETYP_ATR.TSLO
::  OLD: \be_tslo/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.TAT<>null & ETYP_ATR.TAT().TYP='X' || 1 || 0 ?}


\etp_atr_tat_bds
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed wyświetl dla pola ETYP_ATR.TAT
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.TAT<>null & ETYP_ATR.TAT().TYP='X'
|| ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=1',ETYP_ATR,'TSLO')
|| ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=0',ETYP_ATR,'TSLO')
?};
{? ETYP_ATR.TAT<>null & ETYP_ATR.TAT().TYP='O'
|| ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=1',ETYP_ATR,'OPIS');
   ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=0',ETYP_ATR,'MAX_LENG')
|| ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=0',ETYP_ATR,'OPIS');
   ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=1',ETYP_ATR,'MAX_LENG')
?};
{? ETYP_ATR.TAT<>null & 'LD'*ETYP_ATR.TAT().TYP>0
|| ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=1',ETYP_ATR,'MINVALUE');
   ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=1',ETYP_ATR,'MAXVALUE')
|| ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=0',ETYP_ATR,'MINVALUE');
   ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=0',ETYP_ATR,'MAXVALUE')
?};
{? var_press('DEF_MEMO',ETYP_ATR)>0
|| {? ETYP_ATR.TAT<>null & ETYP_ATR.TAT().TYP='W'
   || ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=0',ETYP_ATR,'DEFAULT');
      ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=1',ETYP_ATR,'DEF_MEMO')
   || ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=1',ETYP_ATR,'DEFAULT');
      ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=0',ETYP_ATR,'DEF_MEMO')
   ?}
?};
1


\bs_tslo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.41]
:: OPIS: Przed wyswietleniem pola ETYP_ATR.TSLO
::  OLD: \bs_tslo/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.TAT<>null & ETYP_ATR.TAT().TYP='X' || 1 || exec('findfnv','#color') ?}


\etp_atr_cz_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Przed wyswietleniem pola ETYP_ATR.CZY_ZERO
::   WY: 1 - tak, 0 - nie
::  OLD: \etp_atr_cz_bd/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.TAT().TYP='L' || 1 || 0 ?}


\etp_atr_cz_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Przed redagowaniem ETYP_ATR.CZY_ZERO
::   WY: 1 - tak, 0 - nie
::  OLD: \etp_atr_cz_be/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
ETYP_ATR.TAT().TYP='L'


\etp_atr_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Dolaczenie nowego atrybutu do schematu atrybutow typu dokumentu w obiegu
::  OLD: \etp_atr_dolacz/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
_new_ref:=null;
_uzywany:=exec('czy_dokum4etyp','obiegi',ETYPY.ref(),0,1);
{? (_uzywany=0)
   | FUN.ask('Wprowadzono już dokumenty tego typu.'+
             '\nDodanie nowego elementu schematu spowoduje dopisanie go'+
             '\ndo pozycji informacji dodatkowych przy istniejących dokumentach.'+
             '\nPo dopisaniu do dokumentów nie będzie możliwe usunięcie elementu ze schematu.'+
             '\nKontynuować?'@)
||
   ETYP_ATR.cntx_psh();
   {? 'TPs'*ETYPY.W_PORTAL
   || ETYP_ATR.win_edit('REDWP')
   |? ETYPY.W_PORTAL='S'
   || ETYP_ATR.win_edit('RED_SEOD')
   || ETYP_ATR.win_edit('RED')
   ?};
   ETYP_ATR.prefix();
   ETYP_ATR.blank();
   VAR.TYP_ATR:='';
   ETYP_ATR.memo_set('','OPIS');
   {? ETYP_ATR.edit("exec('etp_atr_chk','obiegi2')")
   ||
      exec('etp_clear_def','obiegi');
      {? _uzywany
      ||
::       pobranie wartosci do wypelnienia pol, gdy schemat zostal uzyty
         exec('etp_set_default','obiegi')
      ?};
::    zablokowanie jakichkolwiek zmian atrybutow przez innych uzytkownikow
      {? ETYP_ATR.lock(1,1,1) & EDOK_ATR.lock(1,1,1)
      ||
         _do:=0;
::       >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
         {? do_state()=0 || do(); _do:=1 ?};
         {? ETYP_ATR.add(1)
         || {? var_press('DEF_MEMO',ETYP_ATR)>0 || ETYP_ATR.memo_put(,'DEF_MEMO') ?};
            ETYP_ATR.memo_put(,'OPIS');
            _new_ref:=ETYP_ATR.ref();
            {? _uzywany
            ||
::             wyszukanie dokumentow danego typu do kotorych dopisano atrybuty i uzupelnienie
               EDOKUM.cntx_psh();
               ROK_F.cntx_psh(); ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA);
               {? ROK_F.first()
               || {! |?
                     _mas:=($(ROK_F.POCZ_ROK~1)+2);
                     EDOKUM.use('skid_v'+_mas);
                     EDOKUM.index('TYP'); EDOKUM.prefix(ETYPY.ref());
                     {? EDOKUM.first() || exec('etp_atr_dolacz1','obiegi') ?};
                     ROK_F.next()
                  !}
               ?};
               ROK_F.cntx_pop(); EDOKUM.cntx_pop()
            ?};
            {? ETYPY.W_PORTAL='T'
            || ETYPY.put(,1)
            ?}
         || undo();
            FUN.info('Takie pole informacji dodatkowych jest już w schemacie.'@)
         ?};
         {? _do || end() ?};
::       <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
         ETYP_ATR.unlock(); EDOK_ATR.unlock()
      ||
         ETYP_ATR.unlock(); EDOK_ATR.unlock();
         FUN.info('Dane zablokowane przez innego użytkownika.\nDodanie pozycji nie powiodło się.'@)
      ?}
   ?};
   ETYP_ATR.cntx_pop()
?};
{? _new_ref<>null || ETYP_ATR.seek(_new_ref) ?};
~~


\etp_atr_dolacz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.40]
:: OPIS: Dolaczenie nowego atrybutu do schematu atrybutow typu dokumentu w obiegu - wewnętrzna
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
EDOK_ATR.cntx_psh();
exec('open_edk_atr','obiegi');
EDOK_ATR.index('REKKOLED');
{! |?
   _last:=exec('edk_atr_lastpoz','obiegi');
   {? _last>0
   || {! _rek:=1 .. _last
      |! {? OBIEGI.TYP_ID='K'
         || EDOK_ATR.prefix(null,DOKUM.ref,DOKUM.ONEID,_rek)
         || EDOK_ATR.prefix(EDOKUM.ref(),null,'',_rek)
         ?};
         {? EDOK_ATR.first()
         || EDOK_ATR.blank(1);
            EDOK_ATR.EDOKUM:={? OBIEGI.TYP_ID='K' || null || EDOKUM.ref() ?};
            EDOK_ATR.DOKUM:={? OBIEGI.TYP_ID='K' || DOKUM.ref() || null ?};
            EDOK_ATR.REKORD:=_rek;
            EDOK_ATR.KOL:=ETYP_ATR.KOL;
            EDOK_ATR.TAT:=ETYP_ATR.TAT;
            EDOK_ATR.WAR:=ETYP_ATR.DEFAULT;
            EDOK_ATR.SLO:=ETYP_ATR.SLO;
            EDOK_ATR.UD_SKL:=ETYP_ATR.UD_SKL;
            EDOK_ATR.add()
         ?}
      !}
   ?};
   {? OBIEGI.TYP_ID='K'
   || DOKUM.next()
   || EDOKUM.next()
   ?}
!};
EDOK_ATR.cntx_pop()


\etp_set_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Redagowanie wartosci domyslnej
::  OLD: \etp_set_default/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
_title:='Podaj wartość, dla tego pola informacji dodatkowych w istniejących dokumentach?'@;
{? ETYP_ATR.TAT().TYP='L'
|| undefine();
   define('WAR',#STR.gsub(ETYP_ATR.DEFAULT,',','.'),ETYP_ATR.TAT().NA,ETYP_ATR.TAT().OPIS,20);
   _zapisz:=def_btn('text=%1'['Zapisz'@],'key:F2');
   _anuluj:=def_btn('text=%1'['Anuluj'@],'key:Esc');
   def_bopt(_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
   def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
   {? def_edit(,_title)
   || ETYP_ATR.DEFAULT:=form(DEFINE.WAR,,,'9,')
   ?};
   undefine()
|? ETYP_ATR.TAT().TYP='T'
|| undefine();
   define('WAR',ETYP_ATR.DEFAULT,ETYP_ATR.TAT().NA,ETYP_ATR.TAT().OPIS,80,80);
   _zapisz:=def_btn('text=%1'['Zapisz'@],'key:F2');
   _anuluj:=def_btn('text=%1'['Anuluj'@],'key:Esc');
   def_bopt(_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
   def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
   {? def_edit(,_title)
   || ETYP_ATR.DEFAULT:=DEFINE.WAR
   ?};
   undefine()
|? ETYP_ATR.TAT().TYP='D'
|| undefine();
   define('WAR',date(0,0,0),ETYP_ATR.TAT().NA,ETYP_ATR.TAT().OPIS,10,10);
   _zapisz:=def_btn('text=%1'['Zapisz'@],'key:F2');
   _anuluj:=def_btn('text=%1'['Anuluj'@],'key:Esc');
   def_bopt(_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
   def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
   {? def_edit(,_title)
   || ETYP_ATR.DEFAULT:=$DEFINE.WAR
   ?};
   undefine()
|? ETYP_ATR.TAT().TYP='C'
|| undefine();
   define('WAR',time(0,0,0),ETYP_ATR.TAT().NA,ETYP_ATR.TAT().OPIS,10,10);
   _zapisz:=def_btn('text=%1'['Zapisz'@],'key:F2');
   _anuluj:=def_btn('text=%1'['Anuluj'@],'key:Esc');
   def_bopt(_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
   def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
   {? def_edit(,_title)
   || _time:=DEFINE.WAR;
      {? _time>=time(24,0,0) || _time:=time(23,59,59) ?};
      ETYP_ATR.DEFAULT:=_time $ 3
   ?};
   undefine()
|? ETYP_ATR.TAT().TYP='B'
|| ETYP_ATR.DEFAULT:=exec('set_tak_nie','obiegi',ETYP_ATR.TAT().OPIS,'')
|? ETYP_ATR.TAT().TYP='S'
|| SLO.cntx_psh();
   SLO.index('SL'); SLO.prefix(ETYP_ATR.TAT().SLU);
   SLO.win_sel('ONE_SEL');
   {? SLO.select(,1,1)
   || ETYP_ATR.SLO:=SLO.ref();
      ETYP_ATR.DEFAULT:={? ETYP_ATR.SLOPOLE='T' || SLO.TR || SLO.KOD ?}
   ?};
   SLO.cntx_pop()
|? ETYP_ATR.TAT().TYP='U'
|| UD_DEF.cntx_psh(); UD_DEF.index('SYMBOL'); UD_DEF.prefix(ETYP_ATR.TAT().UD_SCH);
   UD_DEF.win_sel('WYB');
   {? UD_DEF.select(,1,1)
   || ETYP_ATR.UD_SKL:=UD_DEF.UD_SKL;
      ETYP_ATR.DEFAULT:={? ETYP_ATR.SLOPOLE='T' || UD_DEF.UD_SKL().OPIS || UD_DEF.UD_SKL().SYMBOL ?}
   ?};
   UD_DEF.cntx_pop()
|| ~~
?}


\open_edk_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Otwarcie maski EDOK_ATR tak aby byla zgodna z maska biezacego EDOKUM lub DOKUM
::   WE: ref rekordu tabeli EDOKUM lub DOKUM
::   WY: 1 - maska otwarta/0 nie
::  OLD: \open_edk_atr/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null())) | (_a=null())
|| {? OBIEGI.TYP_ID='K'
   || _a:=DOKUM.ref()
   || _a:=EDOKUM.ref()
   ?}
?};
{? ref_name(_a)=DOKUM.name()
|| {? (EDOK_ATR.name(0)='') | (EDOK_ATR.name(0)+3)<>'d__'
   || EDOK_ATR.use((EDOK_ATR.name(1)-3)+('d__'))
   || 1
   ?}
|| {? (EDOK_ATR.name(0)='')
   | (EDOK_ATR.name(0)+3)<>('t'+(EDOKUM.name(0)+2))
   || EDOK_ATR.use((EDOK_ATR.name(1)-3)+'t'+(EDOKUM.name(0)+2))
   || 1
   ?}
?}


\edk_atr_lastpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zwraca numer ostatniej pozycji atrybutow danego EDOKUM
::   WE: _a - EDOKUM.ref() lub DOKUM.ref [biezacy]
::   WY: Numer najwyzszej pozycji EDOK_ATR.REKORD,
::       -1 jesli wystapil blad
::  OLD: \edk_atr_lastpoz/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null()))
   | (_a=null()) | ((ref_name(_a)<>EDOKUM.name()) & (ref_name(_a)<>DOKUM.name()))
|| {? OBIEGI.TYP_ID='K'
   || _a:=DOKUM.ref()
   || _a:=EDOKUM.ref()
   ?}
?};
{? ref_name(_a)=DOKUM.name()
|| _tab:=DOKUM
|| _tab:=EDOKUM
?};
::zabezpieczenie na brak otwarcia maski (portsl)
_tab.cntx_psh();
{? _tab.ref()<>_a
|| _tab.use(ref_name(_a)); _tab.prefix();
   _go:=_tab.seek(_a)
|| _go:=1
?};
::Sprawdzenie, czy maska EDOK_ATR jest otwarta (PORTAL), jesli nie to otwarcie
{? _go & exec('open_edk_atr','obiegi')
||
   _odp:=0;
   _tab.cntx_psh();
   _tab.prefix();
   {? _tab.seek(_a)
   ||
      EDOK_ATR.cntx_psh();
      EDOK_ATR.index('REKKOLED');
      {? _tab=DOKUM
      || EDOK_ATR.prefix(null,_a,DOKUM.ONEID,)
      || EDOK_ATR.prefix(_a)
      ?};
      {? EDOK_ATR.last() || _odp:=EDOK_ATR.REKORD ?};
      EDOK_ATR.cntx_pop()
   ?};
   _tab.cntx_pop()
|| _odp:=-1
?};
_tab.cntx_pop();
_odp


\czy_dokum4etyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Sprawdzenie, czy w danym roku istnieja dokumenty danego typu
::       lub w zaleznosci od parametru c, czy dodano parametry do jakiegos dokumentu
::   WE: _a - ref do ETYPY lub ZDARZT [ETYPY.ref]
::       _b - czy komunikat (1-tak,0-nie) [0]
::       _c - sprawdz czy ktorys ma atrybuty (<>0 - sprawdzaj, 0 - nie sprawdzaj) [1]
::   WY: 1- tak (jest dokument gdy _c=0 lub jest dokument z atrybutami, gdy _c<>0),
::       0 - gdy _c=0 nie ma dokumentu tego typu,
::           gdy _c<>0 dokumentu tego typu z atrybutmi,
::           lub nie znaleziono ETYPY podenrgo w parametrze
::  OLD: \czy_dokum4etyp/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null()))
   | (_a=null()) | ((ref_name(_a)<>ETYPY.name()) & (ref_name(_a)<>ZDARZT.name()))
|| {? OBIEGI.TYP_ID='K'
   || _a:=ZDARZT.ref()
   || _a:=ETYPY.ref()
   ?}
?};
{? (_<2) | (_b=~~) || _b:=0 ?};
{? (type_of(_b)<>type_of(0)) || &_b;_b:=0 ?};
{? (_<3) | (_c=~~) || _c:=1 ?};
{? (type_of(_c)<>type_of(0)) || &_c;_c:=1 ?};

{? (ref_name(_a)=ZDARZT.name())
|| _tab:=ZDARZT
|| _tab:=ETYPY
?};
_tab.cntx_psh();
_tab.prefix();
{? _tab.seek(_a)
||
   {? _tab=ETYPY
   || _odp:=0;
      EDOKUM.cntx_psh();
      _name:=EDOKUM.names();
      {? _name.first()
      || {! |?
            EDOKUM.use(_name.NAME); EDOKUM.index('TYP'); EDOKUM.prefix(_tab.ref());
            _odp:=EDOKUM.first();
            ~_odp & _name.next()
         !}
      ?}
   || DOKUM.cntx_psh();
      DOKUM.index('DOT'); DOKUM.prefix(_tab.ref());
      _odp:=DOKUM.first()
   ?};
   {? (_odp>0) & _c
   ||
      _odp:=0;
      EDOK_ATR.cntx_psh();
      exec('open_edk_atr','obiegi');
      {!
      |?
         _odp+=exec('edk_atr_lpoz','obiegi');
         (_odp=0) & {? _tab=ETYPY || EDOKUM.next() || DOKUM.next() ?}
      !};
      EDOK_ATR.cntx_pop()
   ?};
   {? _tab=ETYPY
   || EDOKUM.cntx_pop()
   || DOKUM.cntx_pop()
   ?}
|| {? _b || FUN.error('Nie znaleziono typu dokumentu.'@) ?};
   _odp:=0
?};
_tab.cntx_pop();
_odp


\edk_atr_lpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zwraca liczbe pozycji (roznych wartosci REKORD) atrybutow danego EDOKUM
::   WE: _a - EDOKUM.ref() [biezacy]
::   WY: -1 - bledny parametr, >=0 - liczba roznych wartosci pozycji
::  OLD: \edk_atr_lpoz/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (_a=null())
|| {? OBIEGI.TYP_ID='K'
   || _a:=DOKUM.ref()
   || _a:=EDOKUM.ref()
   ?}
?};
::jeseli nieprawidlowy parametr to zwrot komunikatu o blednym parametrze
{? (type_of(_a)<>type_of(null())) | (((ref_name(_a)-2)<>(EDOKUM.name(1)-2)) & ((ref_name(_a))<>DOKUM.name))
|| return(-1)
?};

{? ref_name(_a)=DOKUM.name()
|| _tab:=DOKUM
|| _tab:=EDOKUM
?};

_odp:=0;
_go:=1;
::zabezpieczenie na brak otwarcia maski (portal)
_tab.cntx_psh();
{? _tab.ref()<>_a
|| _tab.use(ref_name(_a)); _tab.prefix();
   _go:=_tab.seek(_a)
?};

{? _go & exec('open_edk_atr','obiegi')
||
   EDOK_ATR.cntx_psh();
   EDOK_ATR.index('REKKOLED');
   {? _tab=DOKUM
   || EDOK_ATR.prefix(null,_a,DOKUM.ONEID,)
   || EDOK_ATR.prefix(_a)
   ?};
   {? EDOK_ATR.first()
   ||
      _odp+=1;
      _nrbiez:=EDOK_ATR.REKORD;
      {!
      |?
         {? EDOK_ATR.REKORD>_nrbiez
         || _odp+=1; _nrbiez:=EDOK_ATR.REKORD
         ?};
         EDOK_ATR.next()
      !}
   ?};
   EDOK_ATR.cntx_pop()
|| _odp:=-1
?};
_tab.cntx_pop();
_odp


\etp_atr_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Pozwolenie na edycje schematu atrybutow typu dokumentu
::   WY: 1 - tak, 0 -nie
::  OLD: \etp_atr_be/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? 'TPs'*ETYPY.W_PORTAL
|| ETYP_ATR.win_edit('REDWP')
|? ETYPY.W_PORTAL='S'
|| ETYP_ATR.win_edit('RED_SEOD')
|| ETYP_ATR.win_edit('RED')
?};
{? exec('czy_dokum4etyp','obiegi',ETYPY.ref())
|| FUN.info('Wprowadzono już dokumenty tego typu.'@); 0
|| ETYP_ATR.memo_get(,'OPIS');
   1
?}


\etp_atr_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Formula po edycji schematu atrybutu typu dokumentu w obiegu
::  OLD: \etp_atr_ae/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
ETYP_ATR.memo_put(,'OPIS')


\etp_atr_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Akcja Usun w oknie schematow informacji dodatkowych
::  OLD: \etp_atr_del/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.ZDARZT<>null
|| _zd:=ETYP_ATR.ZDARZT;
   _td:=null
|? ETYP_ATR.ETYPY<>null
|| _zd:=null;
   _td:=ETYP_ATR.ETYPY
?};
_tat:=ETYP_ATR.TAT;
_find:=0;

EDOK_ATR.cntx_psh();
_names:=EDOK_ATR.names();
{? _names.first()
|| {! |?
      EDOK_ATR.use(_names.NAME);
      {? _zd<>null
      || EDOK_ATR.index('TATWARTD'); EDOK_ATR.prefix(_zd,_tat);
         _find:=EDOK_ATR.first()
      ?};
      {? _td<>null
      || EDOK_ATR.index('TATWARTE'); EDOK_ATR.prefix(_td,_tat);
         _find:=EDOK_ATR.first()
      ?};
      _find=0 & _names.next()
   !}
?};

{? _find=0
|| {? FUN.ask('Usunąć wskazany atrybut ze schematu?'@)
   || {? _names.first()
      || {! |?
            {? _zd<>null
            || EDOK_ATR.use(_names.NAME);
               EDOK_ATR.index('TATWARTD');
               EDOK_ATR.prefix(_zd,_tat);
               {? EDOK_ATR.first()
               || {! |? EDOK_ATR.del() !}
               ?}
            ?};
            {? _td<>null
            || EDOK_ATR.index('TATWARTE');
               EDOK_ATR.prefix(_td,_tat);
               {? EDOK_ATR.first()
               || {! |? EDOK_ATR.del() !}
               ?}
            ?};
            _names.next()
         !}
      ?};
      {? ETYP_ATR.del()
      || ETYP_ATR.cntx_psh();
         ETYP_ATR.index('KOLZ');
         ETYP_ATR.prefix(_td,_zd);
         {? ETYP_ATR.first()
         || _i:=1;
            {! |?
               {? ETYP_ATR.KOL<>_i
               || ETYP_ATR.KOL:=_i;
                  ETYP_ATR.put()
               ?};
               _i+=1;
               ETYP_ATR.next()
            !}
         ?};
         ETYP_ATR.cntx_pop()
      ?}
   ?}
|| FUN.info('Wskazany atrybut został użyty w danych. Akcji nie można wykonać.'@)
?};

EDOK_ATR.cntx_pop()


\etyp_atr_dopis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.41]
:: OPIS: Modyfikacja opisu dodatkowego atrybutu (opisu wyświetlanego na portalu w 'dymku').
::  OLD: \etyp_atr_dopis/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
ETYP_ATR.memo_get(,'DOPIS');
ETYP_ATR.memo_edi(,'DOPIS');
ETYP_ATR.memo_put(,'DOPIS')


\etp_atr_wg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zamiana wartosci w polu ETYP_ATR.KOL pomiedzy biezacym i poprzednim rekordem, tak, ze zamieniaja sie miejscami
::  OLD: \etp_atr_wg/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.KOL>1
||
   _ja:=ETYP_ATR.ref();
   _etyp:=ETYP_ATR.ETYPY;
   _ktyp:=ETYP_ATR.ZDARZT;
   _mojkol:=ETYP_ATR.KOL;
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ');
   ETYP_ATR.prefix(_etyp,_ktyp);
   {? ETYP_ATR.seek(_ja) & ETYP_ATR.prev()
   ||
      _poprzkol:=ETYP_ATR.KOL;
      _poprz:=ETYP_ATR.ref();
      _do:=0;
::    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
      {? do_state()=0 || do();_do:=1 ?};
      ETYP_ATR.KOL:=-1; ETYP_ATR.put();
      {? ETYP_ATR.seek(_ja)
      || ETYP_ATR.KOL:=_poprzkol;  ETYP_ATR.put();
         {? ETYP_ATR.seek(_poprz)
         || ETYP_ATR.KOL:=_mojkol;  ETYP_ATR.put()
         || undo()
         ?}
      || undo()
      ?};
      {? _do || end() ?}
::    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
   ?};
   ETYP_ATR.cntx_pop();
   ETYP_ATR.seek(_ja)
?};
~~


\etp_atr_wd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zamiana wartosci w polu ETYP_ATR.KOL pomiedzy biezacym i nastepnym rekordem, tak, ze zamieniaja sie miejscami
::  OLD: \etp_atr_wd/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
_ja:=ETYP_ATR.ref();
_etyp:=ETYP_ATR.ETYPY;
_ktyp:=ETYP_ATR.ZDARZT;
_mojkol:=ETYP_ATR.KOL;
ETYP_ATR.cntx_psh();
ETYP_ATR.index('KOLZ'); ETYP_ATR.prefix(_etyp,_ktyp);
{? ETYP_ATR.seek(_ja) & ETYP_ATR.next()
||
   _nastkol:=ETYP_ATR.KOL;
   _nast:=ETYP_ATR.ref();
   _do:=0;
:: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   {? do_state()=0 || do();_do:=1 ?};
   ETYP_ATR.KOL:=-1; ETYP_ATR.put();
   {? ETYP_ATR.seek(_ja)
   || ETYP_ATR.KOL:=_nastkol;  ETYP_ATR.put();
      {? ETYP_ATR.seek(_nast)
      || ETYP_ATR.KOL:=_mojkol;  ETYP_ATR.put()
      || undo()
      ?}
   || undo()
   ?};
   {? _do || end() ?}
:: <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
?};
ETYP_ATR.cntx_pop();
ETYP_ATR.seek(_ja);
~~


\etp_atr_ed_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Edycja danych wartosci domyslnej atrybutu
::  OLD: \etp_atr_ed_def/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYPY.W_PORTAL='S'
|| ETYP_ATR.win_edit(exec('ETP_REDDEF_SEOD','portal_seod'))
|| ETYP_ATR.memo_get(,'OPIS');
   ETYP_ATR.win_edit('REDDEF');
   {? ETYP_ATR.TAT<>null & ETYP_ATR.TAT().TYP='O'
   || ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=1',ETYP_ATR,'OPIS')
   || ETYP_ATR.efld_opt(ETYP_ATR.win_edit('?'),'mark=0,enable=0',ETYP_ATR,'OPIS')
   ?}
?};
{? ETYP_ATR.edit()
|| ETYP_ATR.put();
   ETYP_ATR.memo_put(,'OPIS')
?};
ETYP_ATR.win_edit('RED');
~~


\etp_atr_rp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Rekord przed ETYP_ATR
::  OLD: \etp_atr_rp/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
VAR.TYP_ATR:={? ETYP_ATR.TAT().TYP='L' || {? TAT.CZY_PREC<>'T' || 'Liczba' || 'Liczba zmiennoprzecinkowa' ?}
             |? ETYP_ATR.TAT().TYP='D' || 'Data'
             |? ETYP_ATR.TAT().TYP='C' || 'Czas'
             |? ETYP_ATR.TAT().TYP='I' || 'Data i czas'
             |? ETYP_ATR.TAT().TYP='T' || 'Tekst'
             |? ETYP_ATR.TAT().TYP='W' || 'Tekst wielolinijkowy'
             |? ETYP_ATR.TAT().TYP='B' || {? ETYPY.W_PORTAL='T' || 'Logiczny' || 'Tak/Nie' ?}
             |? ETYP_ATR.TAT().TYP='S' || 'Słownik'
             |? ETYP_ATR.TAT().TYP='U' || 'Schemat struktury'
             |? ETYP_ATR.TAT().TYP='X' || 'Dowolny słownik'
             |? ETYP_ATR.TAT().TYP='O' || {? TAT.W_PORTAL='T' || 'Etykieta' || 'Nagłówek' ?}
             || ''
             ?};
{? ETYPY.W_PORTAL='T'
|| ETYP_ATR.win_edit('REDWP')
|| ETYP_ATR.win_edit('RED')
?};
ETYP_ATR.cntx_psh(); ETYP_ATR.index('KOLZ');
ETYP_ATR.prefix(ETYPY.ref(),null);
_gray:='';
ETYP_ATR.cntx_psh();
{? ~ETYP_ATR.prev() || _gray+='G' ?};
ETYP_ATR.cntx_pop();
ETYP_ATR.cntx_psh();
{? ~ETYP_ATR.next() || _gray+='W' ?};
ETYP_ATR.cntx_pop();
ETYP_ATR.actions_grayed(ETYP_ATR.win_sel('?'),_gray);
ETYP_ATR.cntx_pop();
~~


\etp_atr_ra
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Rekord po ETYP_ATR
::  OLD: \etp_atr_ra/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? ETYP_ATR.win_edit('?')='RED'
|| {? __CHK.index(ETYP_ATR,-menu_txt(,)='popraw')<>'' || _zwrot:='TAT' ?}
|? ETYP_ATR.win_edit('?')='REDWP'
|| {? __CHK.index(ETYP_ATR,-menu_txt(,)='popraw')<>'' || _zwrot:='TAT' ?};
   {? _zwrot='' & ETYP_ATR.ID_WP=''
   || FUN.info('Nie wprowadzono identyfikatora.'@); _zwrot:='ID_WP'
   ?};
   {? _zwrot='' & ETYP_ATR.ID_WP<>'' & ~exec('etp_atr_chk_id','obiegi2',ETYP_ATR.ID_WP)
   || FUN.info('Istnieje już atrybut dokumentu o tym identyfikatorze.'@); _zwrot:='ID_WP'
   ?}
?};
_zwrot


\etyp_atr_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Formula na wyswietl w oknie WER tabeli ETYP_ATR
::  OLD: \etyp_atr_disp/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? 'TPs'*ETYPY.W_PORTAL
|| ETYP_ATR.win_edit('REDWP')
|? ETYPY.W_PORTAL='S'
|| ETYP_ATR.win_edit('RED_SEOD')
|| ETYP_ATR.win_edit('DISP')
?};
ETYP_ATR.display();
{? ETYPY.W_PORTAL<>'T' || ETYP_ATR.win_edit('RED') ?};
1


\etp_set_def_for
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Umozliwienie podania wartosci domyslnej w zaleznosci od ETYP_ATR.DEF_KIND
::  OLD: \etp_set_def_for/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.DEF_KIND='W'
|| exec('etp_set_default','obiegi')
|| undefine();
   define('FOR',ETYP_ATR.DEF_FORM,'Formuła'@,,100,100);
   _ok:=def_btn('text=%1'['OK'@],'key:F2');
   _anuluj:=def_btn('text=%1'['Anuluj'@],'key:Esc');
   def_bopt(_ok,'tooltip='+exec('help_red_ok','#window','P'));
   def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
   {? def_edit(,'Formuła na obliczenie wartości początkowej'@)
   || ETYP_ATR.DEF_FORM:=DEFINE.FOR
   ?};
   undefine()
?};
win_disp();
''


\tat_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Akcja na wyswietl w oknie wertowania TAT
::  OLD: \tat_display/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
TAT.cntx_psh();
TAT.get();
TAT.display();
TAT.cntx_pop()


\bdodddob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Formula przed wyswietleniem pola EDOKUM.ODD
::  OLD: \bdodddob/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| exec('env_wt','b_proces');
   OPERATOR.USER:={? exec('getUser','users',app_info('web_user')) || USERS.ref() || null ?};
   {? exec('usr_fjks_any','b_perm')
   || return(1)
   || EDOKUM.ODD:=null;
      return(1)
   ?}
?};
ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(EDOKUM.FIRMA);
_odd:={? ODD.size()=1 & ODD.first() || 1 || 0 ?};
ODD.cntx_pop();
{? _odd || exec('findfnrd','color') || 1 ?}


\beodddob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Przed redakcja pola EDOKUM.ODD
::  OLD: \beodddob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? OPERATOR.DEPT<>null | (EDOKUM.TYP<>null & EDOKUM.TYP().OBIEGKON=2)
|| _res:=0
|? EDOKUM.ODD=null
|| _res:=1
|? app_info('web_sesid')='' & cur_tab()=DOK
|| _res:=1
|| ODD.cntx_psh();
   ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
   _zwrot:=(ODD.size()>1);
   ODD.cntx_pop();
   {? app_info('web_sesid')<>''
   || _zwrot & var_pres('dol_dob')>0 & dol_dob
   || _res:=(PARSES.ODD_ZAK='W' | (OPERATOR.DEPT=null & -menu_txt()='dołącz'))
   ?}
?};
{? _res=0 & app_info('web_sesid')='' &  EDOKUM.win_edit('?')<>''
|| EDOKUM.efld_opt(EDOKUM.win_edit('?'), 'editable=grayed',, 'ODD')
?};
_res

\aeodddob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola EDOKUM.ODD
::  OLD: \aeodddob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? EDOKUM.ODD=null
|| _zwrot:=0; FUN.info('Nie wybrano jednostki księgowej.'@)
|| {? EDOKUM.TYP<>null
   || ETYPY.cntx_psh();
      ETYPY.index('UNIK'); ETYPY.prefix(exec('bl_typ','obiegi',typobi));
      _naz:=EDOKUM.TYP().NAZWA;
      EDOKUM.TYP:={? ETYPY.find_key(_naz,_naz) || ETYPY.ref() || null ?};
      ETYPY.cntx_pop();
      exec('ustaw_pola_wt','obiegi2')
   ?}
?};
_zwrot


\betyped
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Przed redakcja pola EDOKUM.TYP
::  OLD: \betyped/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? (var_pres('typ_ust')>0 & typ_ust<>null) | (EDOKUM.TYP<>null & EDOKUM.TYP().OBIEGKON=2)
|| 0
|| SSTALE.AR();
   {? app_info('web_sesid')<>''
   || var_pres('dol_dob')>0 & dol_dob
   || {? typobi=1 || ETYPY.win_edit('RED') |? typobi=2 || ETYPY.win_edit(exec('REDW','obiegi2')) || ETYPY.win_edit('REDD') ?};
      -menu_txt()<>'popraw'
   ?}
?}


\aetyped
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola EDOKUM.TYP
::   WE: _a - zadeklarowane - dekretacja grupowa komunikatow EDI
::  OLD: \aetyped/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? EDOKUM.TYP<>null
|| {? var_pres('grup_edi')<=0 | (var_pres('grup_edi')>0 & var_pres('_a')>0)
   || EDOKUM.TYP();
      {? ETYPY.AUT_ID='T' & EDOKUM.ID=''
      || exec('ustal_numer','obiegi',typobi,SSTALE.AR,1);
         {? var_pres('id_edok')>0 & id_edok<>'' || EDOKUM.ID:=id_edok ?}
      ?};
      {? ~exec('bedob4','obiegi') || EDOKUM.HAN:=null ?};
      {? typobi=3 & ~ETYPY.CZY_PRAC & ~EDOKUM.DOSTAWCA
      || EDOKUM.DOSTAWCA:=OPERATOR.USER().OSOBA;
         OBIEGI.OSOBAOBI:={? EDOKUM.DOSTAWCA
                          || OBIEGI.OSOBAID:=EDOKUM.DOSTAWCA().IMEX;
                             OSOBA.PIERWSZE+' '+OSOBA.NAZWISKO
                          || OBIEGI.OSOBAID:=0;
                             ''
                          ?}
      ?};
      {? EDOKUM.TYP().TYPVATPR
      || EDOKUM.NETTO:=EDOKUM.WART;
         EDOKUM.PLATNOSC:=null
      || {? EDOKUM.PLATNOSC=null
         || EDOKUM.PLATNOSC:=ETYPY.PLATNOSC;
            _rd:=exec('get_par','slo_slu',EDOKUM.PLATNOSC,6);
            EDOKUM.TP:={? _rd='S' || EDOKUM.DOP |? _rd='O' || EDOKUM.DO || EDOKUM.DW ?}+#exec('get_par','slo_slu',EDOKUM.PLATNOSC,2)
         ?}
      ?};
      {? EDOKUM.KH=null & EDOKUM.TYP().DOM_SL<>null
      || EDOKUM.TYP().DOM_SL().SLU();
         SKID.SL_KH:=SLU.NAZ
      ?};
      EDOKUM.SP_WYM:={? EDOKUM.TYP().TYPVATPR=0 || EDOKUM.TYP().SP_WYM || 'N' ?};
      exec('ae_typ_zal','obiegi')
   ?};
   {? app_info('web_sesid')=''
   || _win:=EDOKUM.win_edit('?');
      {? _win='' || return(_zwrot) ?};
      {? EDOKUM.TYP().TYPVATPR
      || EDOKUM.efld_opt(_win, 'mark=0',, 'PLATNOSC')
      ?};
      {? EDOKUM.TYP().DEKR='N'
      || {? typobi>2 || EDOKUM.efld_opt(_win,'mark=0,enable=0',,'ODD') ?}
      || {? typobi>2 || EDOKUM.efld_opt(_win,'mark=1,enable=1',,'ODD')?}
      ?};
      EDOKUM.efld_opt(_win,'mark=0,enable=1',,'DATDOK');
      EDOKUM.efld_opt(_win,'mark=0,enable=1',,'REJ');
      EDOKUM.efld_opt(_win,'mark=0,enable=1',,'NREJ');
      {? typobi=1 & var_press('btn_idpf')>0 & var_pres('dol_dob')<=0
      || EDOKUM.btn_eopt(_win,btn_idpf[6],{? EDOKUM.TYP().POZF='N' || 'state=grayed' || 'state=normal' ?});
         EDOKUM.btn_eopt(_win,btn_idpf[1],{? EDOKUM.TYP().TYPVATPR=1 || 'state=grayed' || 'state=normal' ?})
      ?}
   ?};
   exec('ustaw_pola_wt','obiegi2')
?};
{? app_info('web_sesid')=''
|| exec('kolor_typu','obiegi','EDOKUM');
   {? var_pres('dol_dob')<=0 || win_disp() ?}
?};
_zwrot


\bekwdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Przed redakcja kwot w naglowku dokumentu w obiegu
::  OLD: \bekwdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('bewniosek','obiegi')
|| {? typobi=2
   || 1
   || {? app_info('web_sesid')<>'' || exec('czytaj','#stalesys',,FINFO) ?};
      {? EDOKUM.TYP().TYPVATPR
      || cur_afld()='WART'
      || {? EDOKUM.WAL<>FINFO.NAROD
         || {? var_pres('DOK_VAT',ETYPY)>0 & ETYPY.DOK_VAT='T'
            || 0
            || 1
            ?}
         ?}
      ?}
   ?}
|| 0
?}


\aekwdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Po redakcji pole EDOKUM.WART i EDOKUM.NETTO
::  OLD: \aekwdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| _fld:=web_top_fld_acr();
   {? _fld='NETTO'
   || EDOKUM.NETTO:=EDOKUM.NETTO$2
   || EDOKUM.WART:=EDOKUM.WART$2
   ?}
|| fld(fld()$2); _fld:=cur_afld()
?};
EDOKUM.TYP();
{? typobi=1
|| {? _fld='WART' & ETYPY.TYPVATPR || EDOKUM.NETTO:=EDOKUM.WART ?}
|? typobi=2
|| {? ETYPY.OBIEGKON=2
   || {? _fld='WART' || EDOKUM.NETTO:=EDOKUM.WART ?}
   || {? _fld='NETTO' & (ETYPY.CZY_WAR=2 | EDOKUM.WART$2=0)
      || EDOKUM.WART:=EDOKUM.NETTO
      |? _fld='WART' & (ETYPY.CZY_WAR=1 | EDOKUM.NETTO$2=0)
      || EDOKUM.NETTO:=EDOKUM.WART
      ?}
   ?};
   {? ETYPY.CZY_ZALP='T' & ETYPY.ETYPZAL
   || EDOKUM.NETTO:=EDOKUM.WART
   ?}
?}; 1


\f3sldob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Na klawisz F3 dla pola SKID.SL_KH
::  OLD: \f3sldob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| {? var_pres('TABDOBSL')=type_of(SYSLOG)
   || _usuntmp:=0
   || exec('tabkhini','kontrahent');
      _usuntmp:=1
   ?};
   _tab:=cur_tab(1,1);
   TABDOBSL.prefix();
   {? ~TABDOBSL.find_key(SKID.SL_KH) || TABDOBSL.first() ?};
   {? TABDOBSL.select(,1)
   || SKID.SL_KH:=TABDOBSL.NAZ;
      {? (_tab=EDOKUM | var_pres('objID')>0) & EDOKUM.KH<>null
      || {? EDOKUM.KH().SLU().NAZ<>TABDOBSL.NAZ || EDOKUM.KH:=null ?}
      ?}
   |? (_tab=EDOKUM | var_pres('objID')>0) & SKID.SL_KH=''
   || EDOKUM.KH:=null
   ?};
   {? _usuntmp=1 || VAR_DEL.delete('TABDOBSL') ?};
   SLU.index('NAZ'); SLU.prefix(SKID.SL_KH); SLU.first();
   SKID.SL_KH
|| exec('tab_form','obiegi','TAB_WT','wyb_slu_kh','obiegi','','');
   _tcid:=app_info('web_tcid');
   _mbid:=app_info('web_mbid');
   _sesid:=app_info('web_sesid');
   _tabid:=app_info('web_tabid');
   TAB_WT.index('INDEX05'); TAB_WT.prefix(_tcid,_tabid,3);
   EDOKUM.web_cntx_save(1);
   TAB_WT.web_select('WER03',,1)
?}


\wyb_slu_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wybór słownika kontrahentów - webterm w EDOKUM
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.web_cntx_load(1)
|| {? EDOKUM.KH().SLU().NAZ<>TAB_WT.NAZ || EDOKUM.KH:=null ?};
   SKID.SL_KH:=TAB_WT.NAZ;
   TAB_WT.web_close();
   {? exec('get_wt_par','obiegi2','dynamic')=1
   || web_top_def_fld_update(1,1,TAB_WT.NAZ)
   || web_top_fld_update(1,1)
   ?}
?};
1


\aesldob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola SKID.SL_KH
::  OLD: \aesldob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| _tab:=cur_tab(1,1);
   TABDOBSL.prefix();
   SLO.index('SL'); SLO.prefix();
   {? +SKID.SL_KH
   || {? TABDOBSL.find_key(SKID.SL_KH)
      || exec('aesldob1','obiegi')
      || {? TABDOBSL.select()
         || exec('aesldob1','obiegi')
         || {? _tab=EDOKUM | var_pres('objID')>0
            || EDOKUM.KH:=null
            |? _tab=ETYPY
            || ETYPY.DOM_SL:=null
            |? _tab=ZDARZT
            || ZDARZT.DOM_SL:=null
            ?};
            SKID.SL_KH:=SKID.NIP:=''
         ?}
      ?};
      {? _tab=EDOKUM & typobi=3 || exec('win_del_ini','obiegi2',cur_win(1,1)) ?}
   || {? _tab=EDOKUM
      || EDOKUM.KH:=null
      |? _tab=ETYPY
      || ETYPY.DOM_SL:=null
      |? _tab=ZDARZT
      || ZDARZT.DOM_SL:=null
      ?};
      SKID.SL_KH:=SKID.NIP:=''
   ?}
|| _dynamic:=exec('get_wt_par','obiegi2','dynamic');
   {? _dynamic=1
   || _flds:=web_def_get();
      SKID.SL_KH:=_flds.SL_KH
   ?};
   {? +SKID.SL_KH
   || _tcid:=app_info('web_tcid');
      _tabid:=app_info('web_tabid');
      TAB_WT.index('INDEX05'); TAB_WT.prefix(_tcid,_tabid,3,SKID.SL_KH);
      {? TAB_WT.first()
      || SKID.SL_KH:=TAB_WT.NAZ;
         {? EDOKUM.KH & EDOKUM.KH().SLU().NAZ<>TAB_WT.NAZ || EDOKUM.KH:=null ?}
      ?}
   || EDOKUM.KH:=null;
      SKID.SL_KH:=SKID.NIP:=''
   ?};
   {? _dynamic=1
   || _flds.SL_KH:=SKID.SL_KH;
      _flds.NIP:=SKID.NIP
   || exec('ustaw_pola_wt','obiegi2')
   ?}
?};
1


\aesldob1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola SKID.SL_KH
::  OLD: \aesldob1/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
SKID.SL_KH:=TABDOBSL.NAZ;
{? (_tab=EDOKUM | var_pres('objID')>0) & EDOKUM.KH<>null
|| {? EDOKUM.KH().SLU().NAZ<>TABDOBSL.NAZ || EDOKUM.KH:=null ?}
|? _tab=ETYPY | _tab=ZDARZT
|| SLUAPPL.cntx_psh();
   SLUAPPL.index('NAZ'); SLUAPPL.prefix('F');
   cur_tab.DOM_SL:={? SLUAPPL.find_key(SKID.SL_KH) & (SLUAPPL.SLU().NAZ=SKID.SL_KH)
                   || SLUAPPL.ref()
                   || null
                   ?};
   SLUAPPL.cntx_pop()
?};
1


\bewaldob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Przed redakcja pola EDOKUM.WAL
::  OLD: \bewaldob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
{? app_info('web_sesid')<>'' || exec('czytaj','#stalesys',,FINFO) ?};
{? exec('bewniosek','obiegi')
|| _zwrot:=1;
   {? -menu_txt()<>'dołącz'
   || EVAT.index('EDOKUM'); EVAT.prefix(EDOKUM.ref());
      _zwrot:=~EVAT.first()
   ?};
   {? _zwrot || FINFO.SLWAL().SLU() ?}
?};
_zwrot


\aewaldob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Jsz [12.30]
:: OPIS: Akcja po redagowaniu pola EDOKUM.WAL
::  OLD: \aewaldob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| {? typobi=1
   || {? EDOKUM.WAL=FINFO.NAROD
      || EDOKUM.WART:=EDOKUM.NETTO:=EDOKUM.KURS:=0;
         EVAT.cntx_psh(); EVAT.index('EDOKUM'); EVAT.prefix(EDOKUM.ref());
         {? ~EVAT.first || EDOKUM.btn_eopt(EDOKUM.win_edit('?'),btn_idpf[5],'state=grayed') ?};
         EVAT.cntx_pop()
      || exec('zak_akt','obiegi')
      ?};
      exec('kolor_typu','obiegi','EDOKUM') ?}
|| exec('czytaj','#stalesys',,FINFO); FINFO.SLWAL().SLU()
?};
{? var_pres('DOK_VAT',ETYPY)>0
|| {? EDOKUM.WAL().KOD<>'PLN' & EDOKUM.KURS=0 & EDOKUM.TYP().KURSF<>''
   || EDOKUM.KURS:=($EDOKUM.TYP().KURSF)()
   |? EDOKUM.WAL().KOD='PLN'
   || EDOKUM.KURS:=0
   ?};
   {? EDOKUM.WAL().KOD<>'PLN' & EDOKUM.TYP().DOK_VAT='T'
   || EDOKUM.NETTO:=0;
      EDOKUM.WART:=0
   ?}
?};
1


\acces_wnio
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk] Michal Kocot [12.50]
:: OPIS: Lista niedostępnych wniosków
::   WE: I_USERS
::   WY:
::  OLD: \acces_wnio/form_ob.fml
::----------------------------------------------------------------------------------------------------------------------
XR_INS.cntx_psh();
_ndx:=XR_INS.ndx_tmp('System, Operator',
   ,'RAPORT','SYSTEM',
   ,'OPERATOR',,
   );
XR_INS.index(_ndx);
XR_INS.prefix('KALI-WN','IU'+($_a+8));
_ret:='';
{? XR_INS.first()
|| {!|?
      {? XR_INS.STAN<>'T'
      || _ret+='\''+XR_INS.RAPORT().OPIS+'\','
      ?};
      XR_INS.next()
   !};
   {? +|_ret || _ret:=_ret-1 ?}
?};
XR_INS.cntx_pop();
XR_INS.ndx_drop(_ndx);
_ret


\bedob4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Przed redakcja pola EDOKUM.HAN
::  OLD: \bedob4/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.TYP<>null & ~EDOKUM.TYP().TYPVATPR


\kolor_typu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JSz [12.30]
:: OPIS: Korowanie etykiet pól w okienkach redagowania w zależności od wybranego typu
::   WE: _a - akronim tabeli
::  OLD: \kolor_typu/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='EDOKUM'
|| _win:=EDOKUM.win_edit('?');
   {? _win='' || return() ?};
   EDOKUM.TYP();
   {? typobi<>1
   || {? ETYPY.CZY_DATY=2
      || EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'DATA_OD');
         EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'DATA_DO')
      || EDOKUM.efld_opt(_win,'mark=0',EDOKUM,'DATA_OD');
         EDOKUM.efld_opt(_win,'mark=0',EDOKUM,'DATA_DO')
      ?};
      {? ETYPY.CZY_GODR=2
      || EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'GODZ_OD')
      || EDOKUM.efld_opt(_win,'mark=0',EDOKUM,'GODZ_OD')
      ?};
      {? ETYPY.CZY_GODZ=2
      || EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'GODZ_DO')
      || EDOKUM.efld_opt(_win,'mark=0',EDOKUM,'GODZ_DO')
      ?}
   ?};
   {? typobi=1
   || {? EDOKUM.WAL<>FINFO.NAROD & ETYPY.OBIEGKON=1 &  ~EDOKUM.TYP().TYPVATPR
      || EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'NETTO')
      || EDOKUM.efld_opt(_win,'mark=0',EDOKUM,'NETTO')
      ?};
      {? (EDOKUM.WAL<>FINFO.NAROD | (EDOKUM.WAL=FINFO.NAROD & ETYPY.TYPVATPR)) & ETYPY.OBIEGKON=1
      || EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'WART')
      || EDOKUM.efld_opt(_win,'mark=0',EDOKUM,'WART')
      ?}
   ?}
|? _a='EDOKUMP'
||  _win:=EDOKUMP.win_edit('?');
   {? EDOKUMP.SRODTRAN<>'I'
   || EDOKUMP.efld_opt(_win,'mark=1',VAR,'SAMREF')
   || EDOKUMP.efld_opt(_win,'mark=0',VAR,'SAMREF')
   ?}
?}


\wzkhdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Formula na wzorzec dla pola EDOKUM.KH
::  OLD: \wzkhdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || return('') ?};
{? -(6+menu_txt())='szukaj'
|| {? +SKID.SL_KH
   || SLUAPPL.cntx_psh(); SLUAPPL.index('NAZ'); SLUAPPL.prefix('F');
      {? SLUAPPL.find_key(SKID.SL_KH)
      || SKID.SL_KH:=SLUAPPL.SLU().NAZ
      || FUN.info('Nie znaleziono słownika "%1".'@[SKID.SL_KH]); _zwrot:=0
      ?};
      SLUAPPL.cntx_pop()
   ?};
   win_disp()
?};
''


\bekhdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Przed redakcja pola EDOKUM.KH
::  OLD: \bekhdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
{? exec('bewniosek','obiegi')
|| _zwrot:=1;
   {? +SKID.SL_KH
   || SLUAPPL.cntx_psh(); SLUAPPL.index('NAZ'); SLUAPPL.prefix('F');
      {? SLUAPPL.find_key(SKID.SL_KH) & (SLUAPPL.SLU().NAZ=SKID.SL_KH)
      || KH.win_sel('WER'); SLUAPPL.SLU();
         SLO.win_dict('ONE');
         SLO.win_sel('ONE');
         SLO.hdr_sel(); SLO.hdr_sel(SKID.SL_KH)
      || FUN.info('Nie znaleziono słownika "%1".'@[SKID.SL_KH]); _zwrot:=0
      ?};
      SLUAPPL.cntx_pop()
   || _zwrot:=0
   ?}
?};
EdokKh:=EDOKUM.KH;
_zwrot


\aekhdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola EDOKUM.KH
::  OLD: \aekhdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| exec('aekhdob1','obiegi')
|| {? cur_tab(1,1)=EDOKOS
   || win_disp()
   |? cur_tab(1,1)=EDOKUM
   || exec('aekhdob1','obiegi');
      win_disp()
   || win_disp()
   ?}
?};
1


\aekhdob1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola EDOKUM.KH - wewnętrzna
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.KH<>null & EDOKUM.TYP<>null & ~EDOKUM.TYP().TYPVATPR &
   (EDOKUM.HAN=null | EDOKUM.PLATNOSC=null | EDOKUM.DEL_MIE='' | EDOKUM.TP=date(0,0,0))
|| RS.cntx_psh(); RS.index('RS'); RS.prefix();
   EDOKUM.KH().SLU();
   {? RS.find_key(SLU.WZ)
   || KH.cntx_psh(); KH.index('KOD'); KH.prefix(2);
      {? KH.find_key(SLO.KOD)
      || {? EDOKUM.HAN=null
         || {? var_press('__War_f')<=0
            || __War_f:="exec('FindInSet','#table',_a,_a,_c,REF.FIRMA,$(_a+'.'+_b))"
            ?};
            EDOKUM.HAN:=__War_f('KH_DOD','HAN',KH.ref)
         ?};
         {? EDOKUM.PLATNOSC=null
         || EDOKUM.PLATNOSC:=KH.PLATNOSC;
            {? EDOKUM.PLATNOSC<>null & EDOKUM.DW<>date(0,0,0)
            || EDOKUM.TP:=EDOKUM.DW+#exec('get_par','slo_slu',EDOKUM.PLATNOSC,2)
            ?}
         |? EDOKUM.PLATNOSC<>null & EDOKUM.TP=date(0,0,0)
         || {? EDOKUM.DW<>date(0,0,0)
            || EDOKUM.TP:=EDOKUM.DW+#exec('get_par','slo_slu',EDOKUM.PLATNOSC,2)
            ?}
         ?};
         {? EDOKUM.DEL_MIE='' || EDOKUM.DEL_MIE:=KH.MIASTO ?}
      ?};
      KH.cntx_pop()
   ?};
   RS.cntx_pop()
?};
{? var_pres('RB',EDOKUM)>0 & app_info('web_sesid')=''
|| {? EDOKUM.KH().TR=''
   || EDOKUM.efld_opt(EDOKUM.win_edit('?'),'editable=grayed',EDOKUM,'RB'); win_disp()
   || EDOKUM.efld_opt(EDOKUM.win_edit('?'),'editable=1',EDOKUM,'RB'); win_disp()
   ?}
?};
{? var_pres('RB',EDOKUM)>0 & ((var_press('EdokKh')>0 & EdokKh<>EDOKUM.KH) | EDOKUM.KH=null )
|| EDOKUM.RB:=null
?};
{? EDOKUM.KH<>null & EDOKUM.TYP<>null &
   (var_press('EdokKh')>0 & EdokKh<>EDOKUM.KH | var_press('EdokNip')>0 & EdokNip<>gsub(gsub(SKID.NIP,' ',''),'-','') | EDOKUM.KH_FULL='' | EDOKUM.UL='' | EDOKUM.MIASTO='' | EDOKUM.POCZ='')
|| RS.cntx_psh(); RS.index('RS'); RS.prefix();
   EDOKUM.KH().SLU();
   {? RS.find_key(SLU.WZ)
   || KH.cntx_psh(); KH.index('KOD'); KH.prefix(2);
      {? KH.find_key(SLO.KOD)
      || EDOKUM.KH_FULL:=KH.NAZ_P;
         EDOKUM.UL:=KH.UL;
         EDOKUM.MIASTO:=KH.MIASTO;
         EDOKUM.POCZ:=KH.POCZ;
         EDOKUM.DOM:=KH.DOM;
         EDOKUM.LOKAL:=KH.LOKAL;
         EDOKUM.KPOCZ:=KH.KPOCZ;
         EDOKUM.KHKH:=KH.ref();
         {? app_info('web_sesid')<>''
         || EdokKh:=KH.ref()
         ?};
         exec('RB','object');
         SKID_RBK.f_clear;
         _rb:=RACHBANK.KB_3R;
         PAR_WYDR.TABAKR:='KH';
         PAR_WYDR.REF:=#KH.ref();
         SKID_RBK.seek(null,,,1);
         {? _rb=''
         || _rb:=RB.get_drb(4,PAR_WYDR.TABAKR,#KH.ref())
         ?};
         {? _rb<>'' & RB.getrrban(_rb,PAR_WYDR.TABAKR,#KH.ref(),null,1) & SKID_RBK.REF<>#KH.ref()
         || _rb:=''
         || EDOKUM.RB:=SKID_RBK.ref()
         ?}
      ?};
      KH.cntx_pop()
   ?};
   RS.cntx_pop()
?}


\aekordo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Po redakcji pola EDOKUM.KOREKTA
::  OLD: \aekordo/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.KOREKTA='N'
|| EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=1,enable=0',,'SYM_KOR');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=0',,'KOR_PRZY');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=0',,'KOR_OKR');
   EDOKUM.SYM_KOR:='';
   EDOKUM.KOR_PRZY:='';
   EDOKUM.KOR_OKR:='';
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=0',,'DWKOR');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=0',,'NRKSEFK');
   EDOKUM.DWKOR:=date(0,0,0);
   EDOKUM.NRKSEFK:=''
|| EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=1,enable=1',,'SYM_KOR');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=1',,'KOR_PRZY');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=1',,'KOR_OKR');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=1',,'DWKOR');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=1',,'NRKSEFK')
?};
1


\bdskordo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla pola EDOKUM.KOREKTA
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || return() ?};
{? EDOKUM.KOREKTA='N'
|| EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=1,enable=0',,'SYM_KOR');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=0',,'KOR_PRZY');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=0',,'KOR_OKR');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=0',,'DWKOR');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=0',,'NRKSEFK')
|| EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=1,enable=1',,'SYM_KOR');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=1',,'KOR_PRZY');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=1',,'KOR_OKR');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=1',,'DWKOR');
   EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=1',,'NRKSEFK')
?};
1


\besymkdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Przed redakcja pola EDOKUM.SYM_KOR
::  OLD: \besymkdo/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.KOREKTA='T'


\bdstermin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Na wyswietl dla pola EDOKUM.TP
::  OLD: \bdstermin/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || return() ?};
_wysw:=1;
{? EDOKUM.TYP
|| EDOKUM.TYP();
   {? var_pres('typobi')<=0
   || {? EDOKUM.TYP().TYPOBIEG().NAZWA='Obieg faktur'
      || typobi:=1
      |? EDOKUM.TYP().TYPOBIEG().NAZWA='Obieg wniosków'
      || typobi:=2
      |? EDOKUM.TYP().TYPOBIEG().NAZWA='Obieg delegacji'
      || typobi:=3
      ?}
   ?};
   {? ETYPY.OBIEGKON=2
   || _wysw:=0
   |? EDOKUM.TYP().TYPOBIEG().NAZWA='Obieg faktur'
   || _wysw:=1
   || _wysw:={? ETYPY.ZAPOT || 1 || 0 ?}
   ?}
|| _wysw:=1
?};
{? _wysw
||
:: ustawianie przedzialow wyrozniania pola termin platnosci (param. _a musi byc mniejszy niz parametr _b)
   _a:=-3;
   _b:=0;
   {? EDOKUM.ZAM<>'T' & EDOKUM.TP<>date(0,0,0)
   || _d:=date()-EDOKUM.TP;
      {? _d<=_a || ''
      |? _d>_a & _d<=_b || exec('flddisp','color','EDOKUM#TP#01')
      |? _d>_b || exec('flddisp','color','EDOKUM#TP#02')
      ?}
   || ''
   ?}
|| 0
?}


\betermin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Przed redakcja pola EDOKUM.TP
::  OLD: \betermin/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.TP<>date(0,0,0)
|| _rd:=exec('get_par','slo_slu',EDOKUM.PLATNOSC,6);
   EDOKUM.TP:={? _rd='S' || EDOKUM.DOP |? _rd='O' || EDOKUM.DO || EDOKUM.DW ?}+#exec('get_par','slo_slu',EDOKUM.PLATNOSC,2)
|| EDOKUM.TP:=date(0,0,0)
?};
{? EDOKUM.TYP
|| EDOKUM.TYP();
   {? ETYPY.OBIEGKON=2
   || 0
   |? typobi=1
   || 1
   || ETYPY.ZAPOT
   ?}
|| 0
?}


\aedwdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola EDOKUM.DW
::  OLD: \aedwdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.DW=date(0,0,0)
|| {? typobi=3
   || FUN.info('Wprowadź datę polecenia wyjazdu.'@)
   || FUN.info('Wprowadź datę wystawienia dokumentu.'@)
   ?}; 0
|| {? app_info('web_sesid')<>'' || exec('ustaw_pola_wt','obiegi2') ?};
   exec('datarozldel','obiegi');
   {? EDOKUM.DO=date(0,0,0) || EDOKUM.DO:=EDOKUM.DW ?};
   1
?}


\ae_id_edokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji pola EDOKUM.ID
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || exec('ustaw_pola_wt','obiegi2') ?};
1


\datarozldel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1230]
:: OPIS: Data rozliczenia delegacji
::  OLD: \datarozldel/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? typobi=3
|| _data:=date(0,0,0);
   {? EDOKUM.DATA_DO<>date(0,0,0) || _data:=EDOKUM.DATA_DO ?};
   {? _data=date(0,0,0) || _data:=EDOKUM.DATA_OD ?};
   {? _data=date(0,0,0) || _data:=EDOKUM.DW ?};
   {? _data<>date(0,0,0) & EDOKUM.DOP<_data || EDOKUM.DOP:=_data ?}
?};
1


\del_etat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Etaty dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_tcid:=app_info('web_tcid');
_mbid:=app_info('web_mbid');
_sesid:=app_info('web_sesid');
_tabid:=app_info('web_tabid');
TAB_WT.index('INDEX04'); TAB_WT.prefix(_tcid,_tabid,5);
do();
{? TAB_WT.first()
|| {! |?
      _delr:=TAB_WT.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
{? EDOKUM.DOSTAWCA<>null
|| exec('__F_ZATR','object');
   _data:=EDOKUM.DW;
   P.cntx_psh();
   P.use('pracowni');
   P.index('PRACOSOB');
   P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P,EDOKUM.DOSTAWCA);
   H.cntx_psh();
   H.use('_hist');
   H.index('_HISTKOD');
   {? P.first() & _data<>date(0,0,0)
   || {! |?
         _ok:=0;
         H.prefix(P.ref(),'Z');
         {? H.first()
         || {! |?
               {? _data>=H.OD & (_data<=H.DO | H.DO=date(0,0,0))
               || _ok:=1;
                  TAB_WT.blank(1);
                  TAB_WT.SESID:=_sesid;
                  TAB_WT.MBID:=_mbid;
                  TAB_WT.TCID:=_tcid;
                  TAB_WT.TABID:=_tabid;
                  TAB_WT.TYP:=5;
                  TAB_WT.STR01:=form(P.T+
                                     {? H.WYDZIAL || ' - '+H.WYDZIAL().SYMBOL || ''?}+
                                     {? H.ST ||  ' - '+H.ST().ST || ''?}
                                    );
                  TAB_WT.STR02:=$P.ref();
                  TAB_WT.add()
               ?};
               ~_ok & H.next()
            !}
         ?};
         P.next()
      !}
   ?};
   P.cntx_pop(); H.cntx_pop()
?};
end()


\f3_del_etat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JSz [12.30]
:: OPIS: Akcje na F3 zmiennej OBIEGI.DEL_ETAT
::  OLD: \f3_del_etat/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=exec('tab_form','obiegi','TAB_WT','wyb_etat','obiegi','','');
{? app_info('web_sesid')<>''
|| EDOKUM.web_cntx_save(1);
   _tcid:=app_info('web_tcid');
   _tabid:=app_info('web_tabid')
|| _tcid:=_tabid:=''
?};
TAB_WT.index('INDEX06'); TAB_WT.prefix(_tcid,_tabid,5);
{? app_info('web_sesid')<>''
|| TAB_WT.web_select('WER05',,1)
|| params_set('par',_par);
   TAB_WT.win_sel('WER05J');
   TAB_WT.select()
?}


\wyb_etat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wybór etatu w delegacji
::----------------------------------------------------------------------------------------------------------------------
_wt:=app_info('web_sesid')<>'';
{? _wt || EDOKUM.web_cntx_load(1) ?};
OBIEGI.DEL_ETAT:=TAB_WT.STR01;
EDOKUM.REFPRAC:=TAB_WT.STR02;
{? _wt
|| TAB_WT.web_close();
   web_top_fld_update(1,1)
|| sel_exit()
?};
1


\po_del_etat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JSz [12.30]
:: OPIS: Po redagowaniu zmiennej OBIEGI.DEL_ETAT
::  OLD: \po_del_etat/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_tcid:=app_info('web_tcid');
_tabid:=app_info('web_tabid');
{? OBIEGI.DEL_ETAT<>''
|| TAB_WT.index('INDEX06'); TAB_WT.prefix(_tcid,_tabid,5,OBIEGI.DEL_ETAT,);
   {? TAB_WT.first()
   || EDOKUM.REFPRAC:=TAB_WT.STR02; 1
   || FUN.info('Brak takiego etatu dla pracownika.'@); 0
   ?}
|| TAB_WT.index('INDEX06'); TAB_WT.prefix(_tcid,_tabid,5);
   {? TAB_WT.first()
   || EDOKUM.REFPRAC:=TAB_WT.STR02
   || EDOKUM.REFPRAC:=''
   ?};
   1
?}


\aedodob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola EDOKUM.DO
::  OLD: \aedodob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.DO=date(0,0,0)
|| FUN.info('Wprowadź datę otrzymania dokumentu.'@); 0
|| 1
?}


\bddopdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Formula przed wyswietleniem pola EDOKUM.DOP
::  OLD: \bddopdob/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || return() ?};
exec('settypobi','obiegi2');
{? typobi=2 & EDOKUM.TYP().CZY_DOPE='N' || exec('findfnrd','color') || 1 ?}


\bedopdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Formula przed redakcją pola EDOKUM.DOP
::  OLD: \bedopdob/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
{? typobi=2 & EDOKUM.TYP().CZY_DOPE='N' || 0 || 1 ?}


\aedopdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola EDOKUM.DOP
::   WE: [_a] - czy ustawiać okno
::  OLD: \aedopdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
{? typobi=3
|| _zwrot:=1
|| {? EDOKUM.DOP=date(0,0,0)
   || {? typobi=1
      || FUN.info('Wprowadź datę sprzedaży.'@)
      || FUN.info('Wprowadź datę operacji.'@)
      ?}
   || {? EDOKUM.DO=date(0,0,0) || EDOKUM.DO:=EDOKUM.DOP ?};
      {? EDOKUM.DW=date(0,0,0)
      || EDOKUM.DW:=EDOKUM.DOP;
         exec('aeslpdob','obiegi')
      ?};
      _zwrot:=1
   ?};
   {? var_press('_a')<=0 | _a || exec('ustaw_pola_wt','obiegi2') ?}
?};
_zwrot


\aeslpdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola EDOKUM.PLATNOSC
::  OLD: \aeslpdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || exec('czytaj','#stalesys',,FINFO) ?};
{? EDOKUM.TP=date(0,0,0) & ~(~EDOKUM.TYP().TYPVATPR & EDOKUM.PLATNOSC=null & typobi<>2)
|| _rd:=exec('get_par','slo_slu',EDOKUM.PLATNOSC,6);
   EDOKUM.TP:={? _rd='S' || EDOKUM.DOP |? _rd='O' || EDOKUM.DO || EDOKUM.DW ?}+#exec('get_par','slo_slu',EDOKUM.PLATNOSC,2)
?};
1


\bdshandob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Przed wyswietl dla pola EDOKUM.HAN
::  OLD: \bdshandob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || return() ?};
{? exec('bedob4','obiegi') || 1 || exec('findfnv','#color') ?}


\ae_przek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola EDOKUM.PRZEKAZ
::  OLD: \ae_przek/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.PRZEKAZ='N'
|| EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=0',,'OPIS_PRZ'); EDOKUM.OPIS_PRZ:=null
|| EDOKUM.efld_opt(EDOKUM.win_edit('?'),'enable=1',,'OPIS_PRZ')
?};
1


\bds_przek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed wyświetl dla pola EDOKUM.PRZEKAZ
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || return() ?};
{? EDOKUM.PRZEKAZ='N'
|| EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=0',,'OPIS_PRZ'); EDOKUM.OPIS_PRZ:=null
|| EDOKUM.efld_opt(EDOKUM.win_edit('?'),'enable=1',,'OPIS_PRZ')
?};
1


\be_przek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Przed redakcja pola EDOKUM.OPIS_PRZ
::  OLD: \be_przek/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.PRZEKAZ='T'


\blobdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Przed redakcja pola EDOKUM.EDOKUM
::  OLD: \blobdo/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
var_pres('edi_add')<=0


\aeblobdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola EDOKUM.EDOKUM
::  OLD: \aeblobdo/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.bl_file('EDOKUM',0)='' & ~EDOKUM.EDOKUM
|| EDOKUM.EPODPIS:=null; EDOKUM.bl_file('EPODPIS',1)
?}; 1


\bdsblobdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed wyświetl pola EDOKUM.EDOKUM
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| {? EDOKUM.bl_file('EDOKUM',0)='' & ~EDOKUM.EDOKUM
   || EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=0',,'EPODPIS')
   || EDOKUM.efld_opt(EDOKUM.win_edit('?'),'mark=0,enable=1',,'EPODPIS')
   ?}
?};
1


\bepodpis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Przed redakcja pola EDOKUM.EPODPIS
::  OLD: \bepodpis/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.bl_file('EDOKUM')<>'' | EDOKUM.EDOKUM<>null


\aewniosek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JSz [12.30]
:: OPIS: Po redagowaniu pola EDOKUM.DOSTAWCA
::  OLD: \aewniosek/skid_obi.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| {? __dost_old<>EDOKUM.DOSTAWCA
   || OBIEGI.DEL_ETAT:='';
      EDOKUM.REFPRAC:=''
   ?};
   &__dost_old
|| exec('ustaw_pola_wt','obiegi2');
   exec('RB','object');
   {? EDOKUM.N<>'' & RB.getrrban(EDOKUM.N,REF.FIRMA().SYMBOL+'OSOBA',#EDOKUM.DOSTAWCA)=null
   || EDOKUM.N:=''
   ?};
   {? EDOKUM.TYP & typobi=2 & EDOKUM.N='' & EDOKUM.DOSTAWCA &
      EDOKUM.KASPRZEL='P' & EDOKUM.TYP().CZY_ZALP='T' & ETYPY.ETYPZAL
   || exec('RB','object'); EDOKUM.N:=RB.get_drb(4,REF.FIRMA().SYMBOL+'OSOBA',#EDOKUM.DOSTAWCA)
   ?}
?};
{? EDOKUM.DOSTAWCA<>null
|| exec('del_etat','obiegi');
   _tcid:=app_info('web_tcid');
   _tabid:=app_info('web_tabid');
   TAB_WT.index('INDEX06'); TAB_WT.prefix(_tcid,_tabid,5);
   {? TAB_WT.first()
   || EDOKUM.REFPRAC:=TAB_WT.STR02;
      exec('pw_del_etat','obe')
   || EDOKUM.REFPRAC:='';
      exec('pw_del_etat','obe')
   ?}
?};
1


\be_id_edokum1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2011]
:: OPIS: Przed redakcja pola EDOKUM.ID
::  OLD: \be_id_edokum/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.TYP<>null & (EDOKUM.TYP().ED_ID='T' | EDOKUM.AUTOMAT=2)


\be_id_edokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2011]
:: OPIS: Przed redakcja pola EDOKUM.ID
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.TYP<>null & (EDOKUM.TYP().ED_ID='T' | EDOKUM.AUTOMAT=2 | EDOKUM.ID='')


\af_dgodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JSz [12.10]
:: OPIS: Funkcja sprawdza poprawnosc wprowadzonej godziny
::   WY: 1/0
::  OLD: \af_dgodz/skid_obi.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| _pole:=web_top_fld_acr();
   {? _pole='GODZ_OD' | _pole='GODZ_DO'
   || _wart:={? _pole='GODZ_OD' || EDOKUM.GODZ_OD || EDOKUM.GODZ_DO ?};
      {? _wart>time(24,00,00)
      || FUN.info('Podany czas nie może być większy od 24:00:00'@); 0
      || 1
      ?}
   || 1
   ?}
|| {? fld()>time(24,00,00)
   || FUN.info('Podany czas nie może być większy od 24:00:00'@); 0
   || 1
   ?}
?}


\bv_zapot_edokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Przed wyswietleniem pol controllingowych w tabeli EDOKUM, EDOKLOG, EDOKOS
::  OLD: \bv_zapot_edokum/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
1


\be_edokum_gr_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Przed radakcja pol GRAN_DAT, GRAN_GDZ, GRAN_DPW, GRAN_GPW tabeli EDOKUM
::  OLD: \be_edokum_gr_d/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.TYP().DEL_ZAGR || 1 || 0 ?}


\be_slo_cel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Przed radakcja pola EDOKUM.DEL_CEL
::  OLD: \be_slo_cel/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO);
{? XINFO.SLU_CEL<>null
|| SLU.prefix();
   SLU.seek(XINFO.SLU_CEL)
|| 0
?}


\bledok1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Ref dokumentu w obiegu
::  OLD: \bledok1/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('vat_sekr')<=0 || EDOKUM.ref() || null ?}


\fld2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS:
::  OLD: \fld2/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
fld(fld()$2); 1


\aeprdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola EVAT.PR
::  OLD: \aeprdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? EVAT.VAT$2<>0 | EVAT.NETTO$2<>0
|| EVAT.VAT:=(0.01*EVAT.NETTO*exec('vat','dok_fks',EVAT.PR().KOD))$2;
   EVAT.BRUTTO:=(EVAT.NETTO+EVAT.VAT)$2
?}; 1


\vatreddo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Przed redakcja pola EVAT.VAT
::  OLD: \vatreddo/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? EVAT.VAT=0 || EVAT.VAT:=(0.01*EVAT.NETTO*exec('vat','dok_fks',EVAT.PR().KOD))$2 ?};
{? EVAT.BRUTTO=0 || EVAT.BRUTTO:=(EVAT.NETTO+EVAT.VAT)$2 ?};
1


\vatredbd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Przed redakcja pola EVAT.BRUTTO
::  OLD: \vatredbd/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? EVAT.NETTO$2=0 & EVAT.VAT$2<>0
|| _pr:={? EVAT.PR<>null ||exec('vat','dok_fks',EVAT.PR().KOD) || 0 ?};
   EVAT.NETTO:={? _pr<>0 || (100*EVAT.VAT/(_pr))$2 || 0 ?};
   EVAT.BRUTTO:=(EVAT.NETTO+EVAT.VAT)$2
|? EVAT.BRUTTO$2=0
|| EVAT.BRUTTO:=(EVAT.NETTO+EVAT.VAT)$2
?};
1


\aebrutdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola EVAT.BRUTTO
::  OLD: \aebrutdo/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| EVAT.BRUTTO:=EVAT.BRUTTO$2;
   _wart:=EVAT.BRUTTO
|| _wart:=fld(fld()$2)
?};
{? EVAT.NETTO$2=0 & EVAT.VAT$2=0
|| EVAT.NETTO:=(_wart/(1+0.01*exec('vat','dok_fks',EVAT.PR().KOD)))$2;
   EVAT.VAT:=(EVAT.BRUTTO-EVAT.NETTO)$2
?}; 1


\blpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Wartosc poczatkowa pola SKID.PR
::   WE: _a - 1 - wejscie automatyczne
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=ETYPY.PR().KOD;
SLU.cntx_psh(); SLU.index('NAZ'); SLU.prefix();
SLO.cntx_psh(); SLO.index('SL'); SLO.prefix();
_tab:={? app_info('web_sesid') <> '' || web_top_tab() || cur_tab(1,1) ?};
{? var_pres('_tab') & 4+_tab.name()='pozv'
|| _kod_kr:={? DOK.RVAT<>null || DOK.KRAJ().KOD || '' ?}
|? var_pres('_tab') & 3+_tab.name()='vpd'
|| _kod_kr:={? POZDOK.RVAT<>null || POZDOK.RVAT().RVAT().KRAJ().KOD || '' ?}
|| _kod_kr:='PL'
?};
{? _kod_kr='' ||  _kod_kr:='PL' ?};
{? SLU.find_key('~STAWKI VAT '+_kod_kr)
|| SLO.prefix(SLU.ref());
   {? SLO.find_key(_zwrot) || _ref:=SLO.ref(); _slo_kod:=SLO.KOD ?}
|| _ref:=null;
   _slo_kod:=''
?};
SLU.cntx_pop(); SLO.cntx_pop();
SKID.PR:=_slo_kod;
_ref


\blsekret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Wartosc poczatkowa pola EVAT.SEKRET
::   WE: _a - 1 - wejscie automatyczne
::  OLD: \blsekret/sekret1.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('vat_sekr')>0 || SEKRET.ref() || null ?}


\bledokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Wartosc poczatkowa pola EPODZ.EDOKUM
::  OLD: \bledokum/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' & web_top_kind()='s'
|| EDOKUM.web_cntx_load(0)
?};
EDOKUM.ref()


\bl_epodz_mb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula na wartosc poczatkowa pola EPODZ.SKID_MB. Formula wypelnia
::       pole wartoscia domyslna jezeli jest przypisany model dla controllingu
::       do typu dokumentu w obiegu/ typu zapotrzebowania lub jezeli jest
::       zdefiniowany jeden model
::   WY: _ref - modelu dla konrolingu
::  OLD: \bl_epodz_mb/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
EPODZ.cntx_psh();
EPODZ.get();
_ref_org:=EPODZ.SKID_MB;
{? _ref_org
|| UD_POM.MODEL_WT:=EPODZ.SKID_MB().KOD
?};
EPODZ.cntx_pop();
SKID_MBN.cntx_psh(); EDOKUM.cntx_psh();
SKID_MBN.prefix();
{? _ref_org<>null
|| _ref:=_ref_org
|? EPODZ.EDOKUM().TYP().SKID_MB
|| _ref:=EPODZ.EDOKUM().TYP().SKID_MB;
   UD_POM.MODEL_WT:=EPODZ.EDOKUM().TYP().SKID_MB().KOD;
   {? _ref_org<>_ref
   || UD_POM.JORG:=''; EPODZ.JORG:=null;
      UD_POM.OKOSZ:=''; EPODZ.OKOSZ:=null;
      UD_POM.PBUD:=''; EPODZ.PBUD:=null;
      UD_POM.WYM4:=''; EPODZ.WYM4:=null;
      UD_POM.WYM5:=''; EPODZ.WYM5:=null
   ?}
|? SKID_MBN.size()=1
|| SKID_MBN.first(); _ref:=SKID_MBN.ref;
   UD_POM.MODEL_WT:=SKID_MBN.KOD
|| _ref:=null
?};
SKID_MBN.cntx_pop(); EDOKUM.cntx_pop();
_ref


\epodz_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.xx]
:: OPIS: Wartośc początkowa dla pól EPODZ.PBUD, EPODZ.JORG, EPODZ.OKOSZ, EPODZ.WYM5, EPODZ.WYM5, EPODZ.WAL, EPODZ.JM
::   WE: _a - 1 - 5 - numer wymiaru
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=null;
EPODZ.cntx_psh();
{? EPODZ.get()
|| _zwrot:={? _a=1
           || EPODZ.PBUD
           |? _a=2
           || EPODZ.JORG
           |? _a=3
           || EPODZ.OKOSZ
           |? _a=4
           || EPODZ.WYM4
           |? _a=5
           || EPODZ.WYM5
           |? _a=6
           || EPODZ.WAL
           || EPODZ.JM
           ?}
?};
EPODZ.cntx_pop();
_zwrot


\be_epodz_mb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula przed redakcja pola EPODZ.SKID_MB. Blokuje redakcje pola jezeli jest zdefiniowany tylko jeden model
::   WY: 1 - mozna redagowac pole
::       0 - wpp
::  OLD: \be_epodz_mb/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| SKID_MBN.win_dict('WER');
   SKID_MBN.prefix();
   {? EPODZ.win_edit('?')='RED1'
   || SKID_MBN.f_clear()
   || {? PAR_SKID.get(459)='T'
      || SKID_MBN.f_set(
            'KOD',
            'join SKID_MBP using(SKID_MBN.REFERENCE,SKID_MBP.SKID_MBN) '
            'join K_ROLE_D using(SKID_MBP.REFERENCE,K_ROLE_D.SKID_MBP) '
            'join K_ROLE using(K_ROLE_D.K_ROLE,K_ROLE.REFERENCE) '
            'join K_ROLE_U using (K_ROLE_U.K_ROLE,K_ROLE.REFERENCE) ',
            'K_ROLE_U.USERS=:_a and K_ROLE.TYPE=\'B\' ',
             OPERATOR.USER
         )
      || SKID_MBN.f_set(
            'KOD',,
            'SKID_MBN.CZY_OFZ=\'T\''
         )
      ?}
   ?}
?};
SKID_MBN.cntx_psh();
SKID_MBN.prefix();
_rr:=SKID_MBN.size()<>1;
SKID_MBN.cntx_pop();
UD_POM.SKID_MBN:=EPODZ.SKID_MB;
UD_POM.MODEL_WT:=EPODZ.SKID_MB().KOD;
_rr & EPODZ.EDOKRZAP=null & (app_info('web_sesid')<>'' | -EDOKUM.TYP().W_PORTAL<>'s')


\bdsetzapot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Na wyswietl dla pol wniosku dotyczacych zapotrzebowan
::  OLD: \bdsetzapot/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.TYP();
_edit:=exec('disp_upr','obiegi');
_fld:=cur_afld();
{? _fld='NETTO'
|| {? (ETYPY.CZY_WAR=2 | ETYPY.CZY_WAR=3) & _edit || 1 || 0 ?}
|? _fld='WART'
|| {? (ETYPY.CZY_WAR=1 | ETYPY.CZY_WAR=3) & _edit || 1 || 0 ?}
|| 1
?}


\beetzapot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Przed redakcja dla pol wniosku dotyczacych zapotrzebowan
::  OLD: \beetzapot/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.TYP();
_fld:=cur_afld();
_edit:=exec('edit_upr','obiegi');
{? _fld='NETTO'
|| (ETYPY.CZY_WAR=2 | ETYPY.CZY_WAR=3) & _edit
|? _fld='WART'
|| (ETYPY.CZY_WAR=1 | ETYPY.CZY_WAR=3) & _edit
|| 1
?}


\upr_etap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Sprawdza uprawnienia do bieżącej czynności obiegu
::   WE: _a - 1/0 - czy dawac komunikat
::  OLD: \upr_etap/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
EDOKOS.cntx_psh(); EDOKOS.use('skid_y'+(EDOKUM.name()+2));
EDOKOS.index('EDOKUM'); EDOKOS.prefix(EDOKUM.ref(),OBIEGI.B_PREL,OPERATOR.USER);
_zwrot:=EDOKOS.first();
EDOKOS.cntx_pop();
_zwrot


\dol_edokos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Dolaczanie rekordow w tabeli EDOKOS - wprowadzanie
::   WE: _a - opcja - wskazanie na obiekt procesu
::  OLD: \dol_edokos/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKOS.cntx_psh();
{? var_pres('zakres')<=0 | zakres=1
|| _dalej:=1; _add:=0;
   _user:={? var_pres('no_us')>0 || no_us || EDOKUM.USERS ?};
   {? _dalej
   || {? EDOKUM.name()+2<>EDOKOS.name()+2
      || EDOKOS.use('skid_y'+(EDOKUM.name()+2))
      ?};
      EDOKOS.index('SZUK'); EDOKOS.prefix(EDOKUM.ref(),_user,'W');
      {? ~EDOKOS.first()
      || EDOKOS.blank(1); _add:=1
      || _add:=0
      ?};
      EDOKOS.EDOKUM:=EDOKUM.ref();
      {? _add || EDOKOS.STATUS:='N' ?};
      {? PAR_SKID.get(457)='T' || EDOKOS.UW_KR:=exec('szuk_uwagi','obiegi',EDOKUM.ref()) ?};
      EDOKOS.OPERACJA:='W';
      EDOKOS.OPER_NUM:=1;
      EDOKOS.USERS:=_user;
      EDOKOS.B_PREL:=OBIEGI.B_PREL;
      EDOKOS.B_PRELS:=OBIEGI.B_PRELS;
      EDOKOS.WID:='T';
      {? _add
      || {? var_pres('jest_op')<=0
         || EDOKOS.LP:=exec('lp_edokos','obiegi');
            {? EDOKOS.add() & _
            || exec('ust_biez_czynn','obiegi2');
               exec('ustaw_edokpar','obiegi',_a,EDOKOS.EDOKUM,EDOKOS.B_PREL,EDOKOS.B_PRELS)
            ?}
         || VAR_DEL.delete('BUFEDS');
            BUFEDS:=obj_new(@.CLASS.BUFFER,'EDOKOS');
            BUFEDS.save()
         ?}
      || {? EDOKOS.put() & _ || exec('ustaw_edokpar','obiegi',_a,EDOKOS.EDOKUM,EDOKOS.B_PREL,EDOKOS.B_PRELS) ?}
      ?};
      OBIEGI.EDOKOS:=EDOKOS.ref()
   ?}
?};
EDOKOS.cntx_pop()


\dol_edokos3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Dolaczanie rekordow w tabeli EDOKOS - dekretacja
::----------------------------------------------------------------------------------------------------------------------
{? OBIEGI.B_PREL<>'' & EDOKUM.TYP().DEKR='T'
|| EDOKOS.cntx_psh(); EDOKOS.index('SZUK2'); EDOKOS.prefix(EDOKUM.ref(),'D');
   {? ~EDOKOS.first()
   || EDOKOS.blank(1); EDOKOS.STATUS:='N'; _add:=1
   || {? var_pres('wym_stat')>0 || EDOKOS.STATUS:={? wym_stat=2 || 'O' || 'N' ?} ?}; _add:=0
   ?};
   EDOKOS.EDOKUM:=EDOKUM.ref();
   EDOKOS.OPERACJA:='D';
   EDOKOS.OPER_NUM:=3;
   EDOKOS.B_PREL:=OBIEGI.B_PREL;
   EDOKOS.B_PRELS:=OBIEGI.B_PRELS;
   EDOKOS.WID:={? var_pres('wid_eds')>0 || wid_eds || 'T' ?};
   {? EDOKOS.B_PREL<>''
   || {? _add
      || EDOKOS.LP:=exec('lp_edokos','obiegi'); EDOKOS.add()
      || EDOKOS.put()
      ?}
   ?};
   OBIEGI.EDOKOS:=EDOKOS.ref();
   EDOKOS.cntx_pop()
?}


\ust_biez_czynn1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawia bieżącą czynność w bieżącym EDOKUM dla B_PREL i B_PRELS
::   WE: _a - B_PREL
::       _b - B_PRELS
::       _c - 0/1 - Nie ustawiaj/Ustawiaj bieżącą czynność
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('no_bprel')>0 & no_bprel=1 & (var_pres('no_bl')<=0 | _a=no_bl)
|| no_bprel:=0
|| {? _c & _a<>'' & _b<>''
   || EDOKUM.cntx_psh(); EDOKUM.prefix();
      EDOKUM.B_PREL:=_a;
      EDOKUM.B_PRELS:=_b;
      {? EDOKUM.DOKUM<>''
      || DOKUM.cntx_psh(); DOKUM.prefix();
         {? DOKUM.seek(EDOKUM.DOKUM) & DOKUM.OBKONETP<>EDOKUM.B_PRELS
         || DOKUM.OBKONETP:=EDOKUM.B_PRELS; DOKUM.put()
         ?};
         DOKUM.cntx_pop()
      ?};
      EDOKUM.put();
      EDOKUM.cntx_pop()
   ?}
?};
1


\ustaw_edokpar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawia pola tabeli EDOKPAR według parametrów czynności przy wprowadzaniu dokumentu
::   WE: _a - uchwyt do parametru wejściowego
::       _b - EDOKUM.ref()
::       _c - B_PREL
::       _d - B_PRELS
::----------------------------------------------------------------------------------------------------------------------
{? _c<>'' & _b
|| EDOKPAR.cntx_psh();
   {? ref_name(_b)+2<>EDOKPAR.name()+2
   || EDOKPAR.use('skidh_'+(ref_name(_b)+2))
   ?};
   EDOKPAR.index('UNIK'); EDOKPAR.prefix(_b,_c);
   {? ~EDOKPAR.first()
   || EDOKPAR.blank();
      _ref:=EDOKPAR.EDOKUM:=_b;
      EDOKPAR.B_PREL:=_c;
      EDOKPAR.B_PRELS:=_d;
      EDOKPAR.ED_PRZEJ:={? var_pres('ED_PRZEJ',_a)>0 & _a.ED_PRZEJ<>''
                        || {? _a.ED_PRZEJ='Redakcja'
                           || 'R'
                           |? _a.ED_PRZEJ='Wymagane uzupełnienie'
                           || 'W'
                           |? _a.ED_PRZEJ='Podgląd bez redakcji'
                           || 'P'
                           || 'N'
                           ?}
                        || 'N'
                        ?};
      EDOKPAR.ED_DIET:={? var_pres('ED_DIET',_a)>0 & _a.ED_DIET<>''
                       || {? _a.ED_DIET='Redakcja'
                          || 'R'
                          |? _a.ED_DIET='Wymagane uzupełnienie'
                          || 'W'
                          |? _a.ED_DIET='Podgląd bez redakcji'
                          || 'P'
                          || 'N'
                          ?}
                       || 'N'
                       ?};
      EDOKPAR.ED_WYD:={? var_pres('ED_WYD',_a)>0 & _a.ED_WYD<>''
                      || {? _a.ED_WYD='Redakcja'
                         || 'R'
                         |? _a.ED_WYD='Wymagane uzupełnienie'
                         || 'W'
                         |? _a.ED_WYD='Podgląd bez redakcji'
                         || 'P'
                         || 'N'
                         ?}
                      || 'N'
                      ?};
      EDOKPAR.ED_ZAL:={? var_pres('ED_ZAL',_a)>0 & _a.ED_ZAL<>''
                      || {? _a.ED_ZAL='Redakcja'
                         || 'R'
                         |? _a.ED_ZAL='Wymagane uzupełnienie'
                         || 'W'
                         |? _a.ED_ZAL='Podgląd bez redakcji'
                         || 'P'
                         || 'N'
                         ?}
                      || 'N'
                      ?};
      EDOKPAR.ED_PODZ:={? var_pres('ED_PODZ',_a)>0 & _a.ED_PODZ<>''
                       || {? _a.ED_PODZ='Redakcja'
                          || 'R'
                          |? _a.ED_PODZ='Wymagane uzupełnienie'
                          || 'W'
                          || 'P'
                          ?}
                       || 'P'
                       ?};
      {? _ref<>null & 3+EDOKPAR.B_PRELS='Akc' & EDOKPAR.ED_PODZ<>'P' & typobi=1
      || exec('tagger_tip_csh','tagger',_ref)
      ?};
      EDOKPAR.ED_PROJ:={? var_pres('ED_PROJ',_a)>0 & _a.ED_PROJ<>''
                       || {? _a.ED_PROJ='Redakcja'
                          || 'R'
                          |? _a.ED_PROJ='Wymagane uzupełnienie'
                          || 'W'
                          || 'P'
                          ?}
                       || 'P'
                       ?};
      EDOKPAR.KONT_BUD:={? var_pres('KONT_BUD',_a)>0 & _a.KONT_BUD<>''
                        || {? _a.KONT_BUD='Tak'
                           || 'T'
                           || 'N'
                           ?}
                        || 'N'
                        ?};
      EDOKPAR.ED_INND:={? var_pres('ED_INND',_a)>0 & _a.ED_INND<>''
                       || {? _a.ED_INND='Redakcja'
                          || 'R'
                          || 'P'
                          ?}
                       || 'P'
                       ?};
      EDOKPAR.ED_WAR:={? var_pres('ED_WAR',_a)>0 & _a.ED_WAR<>''
                      || {? _a.ED_WAR='Redakcja'
                         || 'R'
                         |? _a.ED_WAR='Wymagane uzupełnienie'
                         || 'W'
                         |? _a.ED_WAR='Podgląd bez redakcji'
                         || 'P'
                         || 'N'
                         ?}
                      || 'N'
                      ?};
      EDOKPAR.ED_KH:={? var_pres('ED_KH',_a)>0 & _a.ED_KH<>''
                     || {? _a.ED_KH='Redakcja'
                        || 'R'
                        |? _a.ED_KH='Wymagane uzupełnienie'
                        || 'W'
                        |? _a.ED_KH='Podgląd bez redakcji'
                        || 'P'
                        || 'N'
                        ?}
                     || 'N'
                     ?};
      EDOKPAR.BLZMROL:={? var_pres('BLZMROL',_a)>0 & _a.BLZMROL<>''
                       || {? _a.BLZMROL='Tak'
                          || 'T'
                          || 'N'
                          ?}
                       || 'N'
                       ?};
      EDOKPAR.BLZMUSR:={? var_pres('BLZMUSR',_a)>0 & _a.BLZMUSR<>''
                       || {? _a.BLZMUSR='Tak'
                          || 'T'
                          || 'N'
                          ?}
                       || 'N'
                       ?};
      EDOKPAR.ED_OPOP:={? var_pres('ED_OPOP',_a)>0 & _a.ED_OPOP<>''
                       || {? _a.ED_OPOP='Tak'
                          || 'T'
                          || 'N'
                          ?}
                       || 'N'
                       ?};
      EDOKPAR.JEDEN_OP:={? var_pres('JEDEN_OP',_a)>0 & _a.JEDEN_OP<>''
                        || {? _a.JEDEN_OP='Tak'
                           || 'T'
                           || 'N'
                           ?}
                        || 'N'
                        ?};
      SCH_FORM.cntx_psh(); _ndx:=SCH_FORM.ndx_tmp('',1,'FIRMA',,0, 'TYP',,0, 'TRESC',,0);
      SCH_FORM.index(_ndx); SCH_FORM.prefix(EDOKUM.FIRMA,'E');
      _find_form:="
         _tr:=_a;
         {? SCH_FORM.find_key(_tr,)
         || 1
         || _prfx:='formuła_';
            _nr:=1;
            SCH_FORM.cntx_psh();
            SCH_FORM.index('UNIK');
            SCH_FORM.prefix(EDOKUM.FIRMA,'E',_prfx);
            {? SCH_FORM.last()
            || _nr:=(#((+_prfx)-SCH_FORM.SKROT))+1
            ?};
            SCH_FORM.prefix(EDOKUM.FIRMA,'E');
            {!
            |? _skr:=_prfx+$_nr;
               {? SCH_FORM.find_key(_skr,)
               || _nr+=1;
                  1
               || SCH_FORM.blank(1);
                  SCH_FORM.FIRMA:=EDOKUM.FIRMA;
                  SCH_FORM.TYP:='E';
                  SCH_FORM.SKROT:=_skr;
                  SCH_FORM.NAZWA:='Dodana automatycznie';
                  SCH_FORM.SYSTEM:='N';
                  SCH_FORM.TRESC:=_tr;
                  SCH_FORM.add();
                  0
               ?}
            !};
            SCH_FORM.cntx_pop();
            SCH_FORM.find_key(_tr,)
         ?}
      ";
      EDOKPAR.FORM_WAL:={? var_pres('FORM_WAL',_a)>0 & _a.FORM_WAL<>'' & _find_form(_a.FORM_WAL)
                        || SCH_FORM.ref()
                        || null
                        ?};
      EDOKPAR.FORM_PRZ:={? var_pres('FORM_PRZ',_a)>0 & _a.FORM_PRZ<>'' & _find_form(_a.FORM_PRZ)
                        || SCH_FORM.ref()
                        || null
                        ?};
      EDOKPAR.FORM_ADD:={? var_pres('FORM_ADD',_a)>0 & _a.FORM_ADD<>'' & _find_form(_a.FORM_ADD)
                        || SCH_FORM.ref()
                        || null
                        ?};
      EDOKPAR.FORM_ODR:={? var_pres('FORM_ODR',_a)>0 & _a.FORM_ODR<>'' & _find_form(_a.FORM_ODR)
                        || SCH_FORM.ref()
                        || null
                        ?};
      EDOKPAR.FORMWODR:={? var_pres('FORMWODR',_a)>0 & _a.FORMWODR<>'' & _find_form(_a.FORMWODR)
                        || SCH_FORM.ref()
                        || null
                        ?};
      EDOKPAR.B_ROLEF:={? var_pres('B_ROLEF',_a)>0 & _a.B_ROLEF<>'' & _find_form(_a.B_ROLEF)
                       || SCH_FORM.ref()
                       || null
                       ?};
      EDOKPAR.USR_FORM:={? var_pres('USR_FORM',_a)>0 & _a.USR_FORM<>'' & _find_form(_a.USR_FORM)
                        || SCH_FORM.ref()
                        || null
                        ?};
      SCH_FORM.cntx_pop();
      SCH_FORM.ndx_drop(_ndx);
      B_ROLE.cntx_psh(); B_ROLE.index('UNIK'); B_ROLE.prefix(EDOKUM.FIRMA);
      EDOKPAR.B_ROLE:={? var_pres('B_ROLE',_a)>0 & _a.B_ROLE<>'' & B_ROLE.find_key(_a.B_ROLE,)
                      || B_ROLE.ref()
                      || null
                      ?};
      B_ROLE.cntx_pop();
      EDOKPAR.UWODRWYM:={? var_pres('UWODRWYM',_a)>0 & _a.UWODRWYM<>''
                        || {? _a.UWODRWYM='Tak' || 'T' || 'N' ?}
                        || 'N'
                        ?};
      {? var_pres('POZF_WYM',EDOKPAR) > 0
      || EDOKPAR.POZF_WYM:={? var_pres('POZF_WYM',_a)>0 & _a.POZF_WYM<>''
                        || {? _a.POZF_WYM='Tak' || 'T' || 'N' ?}
                        || 'N'
                        ?}
      ?};
      {? var_pres('POZV_WYM',EDOKPAR) > 0
      || EDOKPAR.POZV_WYM:={? var_pres('POZV_WYM',_a)>0 & _a.POZV_WYM<>''
                        || {? _a.POZV_WYM='Nie' || 'N' || 'T' ?}
                        || 'T'
                        ?}
      ?};
      {? var_pres('ED_POZV',EDOKPAR) > 0
      || EDOKPAR.ED_POZV:={? var_pres('ED_POZV',_a)>0 & _a.ED_POZV<>''
                           || {? _a.ED_POZV='Tak' || 'T' || 'N' ?}
                           || 'N'
                           ?}
      ?};
      {? var_pres('ED_POZF',EDOKPAR) > 0
      || EDOKPAR.ED_POZF:={? var_pres('ED_POZF',_a)>0 & _a.ED_POZF<>''
                           || {? _a.ED_POZF='Tak' || 'T' || 'N' ?}
                           || 'N'
                           ?}
      ?};
      {? EDOKPAR.add(1)
      || {? var_pres('TYPY_ZAL',EDOKPAR)>0 & var_pres('TYPY_ZAL',_a)>0 & _a.TYPY_ZAL<>''
         || EDOKPAR.memo_set(_a.TYPY_ZAL,'TYPY_ZAL');
            EDOKPAR.memo_put(,'TYPY_ZAL');
            EDOKPAR.put()
         ?}
      ?}
   ?};
   EDOKPAR.cntx_pop()
?}


\lp_edokos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dołączanie EDOKOS - ustalanie LP
::----------------------------------------------------------------------------------------------------------------------
_lp:=1;
EDOKOS.cntx_psh(); EDOKOS.index('SZUK9'); EDOKOS.prefix(EDOKOS.EDOKUM);
{? EDOKOS.last() || _lp:=EDOKOS.LP+=1 ?};
EDOKOS.cntx_pop();
_lp


\szuk_uwagi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Zwraca poprzednie uwagi/tresc
::   WY: _a - EDOKUM.ref
::  OLD: \szuk_uwagi/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:='';
EDOKOS.cntx_psh();
_ndx:=EDOKOS.ndx_tmp('status',1,'EDOKUM',,0,'STATUS',,0,'OPERACJA',,0,'WID',,0,'DATA',,0,'TIME',,0);
EDOKOS.index(_ndx);
EDOKOS.prefix(_a,'T','A','T');
{? EDOKOS.last()
|| _wy:=EDOKOS.UW_KR
|| EDOKOS.prefix(_a,'O','A','T');
   {? EDOKOS.last()
   || _wy:=EDOKOS.UW_KR
   || _wy:=EDOKUM.TR
   ?}
?};
EDOKOS.ndx_drop(_ndx);
EDOKOS.cntx_pop();
_wy


\faktury_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Wyswietlanie i edycja faktur w obiegu
::   WE: _a - 1 - dekretacja z poziomu dokumentów księgowych (DOK)
::            0 - wszystkie dokumenty
::       [_b] - link do rekordu EDOKUM
::----------------------------------------------------------------------------------------------------------------------
_dalej:=1;
_link:=var_pres('_b')>0 & type_of(_b)=type_of('') & _b<>'' & +_b=48;
{? ~OBIEGI.TYPOBIEG || FUN.info('Nie znaleziono typu obiegu.'@); _dalej:=0 ?};
{? _dalej
|| {? typobi=1
   || {? _a=0
      || _dalej:=(exec('hasAction','users','OBG_FZO_DARK') | exec('hasAction','users','OBG_FZO_ZBRK') |
                  exec('hasAction','users','OBG_FZO_CPRZ') | exec('hasAction','users','OBG_FZO_EAKC') |
                  exec('hasAction','users','FKS_DKS_DFZO') | exec('hasAction','users','OBG_FZO_DASK') |
                  exec('hasAction','users','OBG_FZO_ZAMK') | exec('hasAction','users','CTR_OBA_PBKP') |
                  exec('hasAction','users','CTR_OBA_PBUD'));
         {? ~_dalej || FUN.info('Brak uprawnień do obsługi faktur w obiegu.'@) ?}
      || _dalej:=exec('hasAction','users','FKS_DKS_DFZO');
         {? ~_dalej || FUN.info('Brak uprawnień do dekretacji faktur w obiegu.'@) ?}
      ?}
   |? typobi=2
   || _dalej:=exec('hasAction','users','FKS_DKS_DFWO') | exec('hasAction','users','OBE_FAW_DARP') |
              exec('hasAction','users','FKS_DKS_EAKP');
      {? ~_dalej || FUN.info('Brak uprawnień do obsługi wniosków w obiegu.'@) ?}
   || _dalej:=exec('hasAction','users','FKS_DKS_DFDM');
      {? ~_dalej || FUN.info('Brak uprawnień do dekretacji delegacji w obiegu.'@) ?}
   ?}
?};

:: obsługa w przypadku przekazania linku
{? _dalej & _link
|| _dalej:=exec('link','obiegi2',_b)
?};

{? _dalej
|| dek_fakt:=_a; __ofz:='T';
   exec('okn_fakt','obiegi2',_a);
   EPODZ.win_edit('RED');
   EDOKUM.prefix(); EDOKUM.f_clear();
   DOK.cntx_psh();
   __edoref:='';
   {? _link
   || _form:=exec('form','obiegi2',_b);
      {? _form<>''
      || __edoref:=_b;
         EDOKUM.select(,1,2,,,$_form);
         __edoref:=''
      || FUN.emsg('Brak możliwości wyświetlenia dokumentu przekazanego linkiem: niewystarczające uprawnienia.'@)
      ?}
   || EDOKUM.select()
   ?};
   DOK.cntx_pop();
   VAR_DEL.delete('dek_fakt','__ofz')
?};
exec('del_zm','obg')


\bobs_epodz_jt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą EPODZ - JTERM
::----------------------------------------------------------------------------------------------------------------------
 exec('set_var_podz','obiegi');
_fget:={? EDOKUM.f_active() & EDOKUM.sel_size()=0
       || EDOKUM.f_get()
       || EDOKUM.get()
       ?};
{? ~_fget
|| SKID.SKXDRAZE:=SKID.SKXDPOZO:=0;
   EPODZ.index('EDOKUMDS'); EPODZ.prefix(null);
   EPODZ.actions('WER_FAK','dpuA:dA','P',1)
?};
1


\edokum_rfr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PG [12.30]
:: OPIS: Po odswiezeniu EDOKUM
::   WE: _a - identyfikator kontrolki
::       _b - akronim okienka kontrolki
::  OLD: \edokum_rfr/skid_blb.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~EDOKUM.sel_size()
|| {? EDOKUM.f_size()=0 | EDOKUM.f_get()=0
   || EDOKUMZ.index('NULL'); EDOKUMZ.prefix(null,null)
   |? EDOKUM.f_get() & EDOKUM.ZAM<>'T'
   || EDOKUMZ.index('DISP'); EDOKUMZ.prefix(EDOKUM.ref())
   ?};
   {? ~EDOKUMZ.get() || EDOKUMZ.first() ?};
   __CTR.BTAB:='EDOKUMZ';
   __CTR.TAB:='EDOKUM';
   __CTR.BBLOB:='EDOKUM';
   __CTR.WIN_ID:=_a;
   __CTR.WIN_ACR:=_b;
   exec('getblobs','bloby',__CTR.WIN_ID);
   grp_disp(($(__CTR.BTAB))(),__CTR.WIN_ACR,1,)
?};
1


\edokum_rfr1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Po odswiezeniu EDOKUM - wnioski, delegacje i faktury
::  OLD: \edokum_rfr/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.sel_size() || return(1) ?};
{? ~EDOKUM.f_get()
|| {? typobi=1
   || tab_hide(1,1,'tab2');
      tab_hide(2,1,'tab2');
      tab_hide(3,1,'tab2');
      tab_hide(4,1,'tab2');
      tab_hide(5,1,'tab2');
      grp_disp(EPODZ,'WER_FAK',,1)
   |? typobi=2 | typobi=3
   || tab_hide(1,1,'tab2');
      tab_hide(2,1,'tab2');
      tab_hide(3,1,'tab2')
   ?};
   {? typobi=3
   || tab_hide(3,1,'tab2');
      tab_hide(4,1,'tab2');
      tab_hide(5,1,'tab2');
      tab_hide(6,1,'tab2')
   ?}
|| {? typobi=1
   || tab_show(3,'tab2');
:: projekty
      EDOKUMPR.win_edit('RED');
      tab_show(1,'tab2');
      _dalej:=1; OBIEGI.EDOKOS();
      {? ~EDOKUM.TYP().OBS_PROJ
      || tab_hide(1,1,'tab2'); _dalej:=0
      ?};
      {? _dalej
      || _blok:=exec('blok_proj','obiegi_proj');
         EDOKUMPR.index('DISP'); EDOKUMPR.prefix(EDOKUM.ref());
         {? ~_blok
         || EDOKUMPR.actions('WER',,'D:D',1)
         || EDOKUMPR.actions('WER','DPU:D',,1)
         ?};
         grp_disp(EDOKUMPR,'WER',,1)
      ?};
:: podziały
      EPODZ.win_edit('RED');
      tab_show(2,'tab2');
      _dalej:=1; OBIEGI.EDOKOS();
      {? EDOKUM.TYP().ED_PODZ<>'T' | PAR_SKID.get(80)='N'
      || tab_hide(2,1,'tab2'); _dalej:=0
      ?};
      {? _dalej
      || _blok:=exec('blok_podz','obiegi');
         EPODZ.index('EDOKUMDS'); EPODZ.prefix(EDOKUM.ref());
         {? ~_blok
         || EPODZ.actions('WER_FAK',,'d:d',1)
         || EPODZ.actions('WER_FAK','Adpu:dA','P',1)
         ?};
         PAR_WYDR.RPAR3:=EDOKUM.NETTO;
         exec('sum_podz','obiegi');
         grp_disp(EPODZ,'WER_FAK',,1)
      ?};
:: Businesscheck
      {? exec('upgrade2325_blbc1','zbl')
      || tab_show(5,'tab2');
         grp_disp(DOKUMZBC,'WER_EDOK')
      ?}
   || _stat:=exec('spr_stat','obiegi');
:: inne dane
      _dalej:=1; OBIEGI.EDOKOS();
      tab_show(1,'tab2');
      tab_show(2,'tab2');
      ETYP_ATR.cntx_psh(); ETYP_ATR.index('KOLZ'); ETYP_ATR.prefix(EDOKUM.TYP,null);
      {? ~ETYP_ATR.first()
      || tab_hide(2,1,'tab2'); _dalej:=0
      ?};
      ETYP_ATR.cntx_pop();
      {? _dalej
      || _act:=_actb:='';
         {? BPMN.AREA='OBE_FAD'
         || EDOK_ATK.index('EDOKUM'); EDOK_ATK.prefix(EDOKUM.ref());
            _grey:='';
            {? EDOKUM.TYP().ATR_ONE
            || _grey+='D'
            ?};
            {? exec('blok_innd','obiegi')
            ||_grey+='DPUWG:D'
            ?};
            EDOK_ATK.actions_grayed('WER2',_grey);
            grp_disp(EDOK_ATK,'WER2',,1)
         || {? ~EDOKUM.sel_size()
            || EDOK_ATR.index('REKKOLED'); EDOK_ATR.prefix(EDOKUM.ref());
               {? ~EDOK_ATR.get() || EDOK_ATR.first() ?}
            ?};
            {? EDOKUM.ZAM='T' | _stat='T' | _stat='X' | EDOKUM.STDEKRD | EDOKUM.REFLISTA<>'' |
               EDOKUM.ZD_NAG<>''
            || _act:='DdPpUuWwGg'; _actb:='Dd'
            ?};
            _act:=_act+{? +_actb || ':'+_actb || _act ?};
            EDOK_ATR.actions('WER',_act,,1);
            grp_disp(EDOK_ATR,'WER',,1)
         ?}
      ?}
   ?}
?}


\blok_podz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdza, czy można dać akcje edycyjne w podziałach
::   WY: 1/0 - czy założona blokada
::----------------------------------------------------------------------------------------------------------------------
_blok:=0;
{? var_pres('zakres')>0 || exec('rkprz1','obiegi',zakres) ?};
{? EDOKUM.TYP().ED_PODZ<>'T' | EDOKUM.ZAM='T' | EDOKUM.STDEKRD | EDOKUM.REFLISTA<>'' | EDOKUM.ZD_NAG<>'' | zakres=5
|| _blok:=1
|? zakres<>3
|| {? OBIEGI.EDOKOS
   || EDOKOS.use('skid_y'+(EDOKUM.name()+2));
      OBIEGI.EDOKOS();
      {? ~(exec('szuk_edokpar','obiegi') & (EDOKPAR.ED_PODZ='R' | EDOKPAR.ED_PODZ='W')) &
         OBIEGI.B_PREL=OBIEGI.EDOKOS().B_PREL
      || _blok:=1
      ?};
      {? ~_blok
      || _stat:=exec('spr_stat','obiegi');
         _blok:=(_stat='T' | _stat='X')
      ?}
   ?}
?};
_blok


\blok_innd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdza, czy można dać akcje edycyjne w informacjach dodatkowych
::  [_a] - sprawdzanie po B_PREL
::   WY: 1/0 - czy założona blokada
::----------------------------------------------------------------------------------------------------------------------
_b_prel:={? var_pres('_a')>0 || _a || '' ?};
_blok:=0;
{? var_pres('zakres')>0 || exec('rkprz1','obiegi',zakres) ?};
{? EDOKUM.ZAM='T' | EDOKUM.STDEKRD | EDOKUM.REFLISTA<>'' | EDOKUM.ZD_NAG<>'' |
   (var_pres('zakres')>0 & zakres=5)
|| _blok:=1
?};
{? ~_blok
|| ETYP_ATR.cntx_psh(); ETYP_ATR.index('KOLZ'); ETYP_ATR.prefix(EDOKUM.TYP,null);
   {? ~ETYP_ATR.first() || _blok:=1 ?};
   ETYP_ATR.cntx_pop()
?};
{? ~_blok & var_pres('zakres')>0 & zakres<>3
|| {? OBIEGI.EDOKOS
   || EDOKOS.use('skid_y'+(EDOKUM.name()+2));
      OBIEGI.EDOKOS();
      {? ~(exec('szuk_edokpar','obiegi') & EDOKPAR.ED_INND='R') &
         OBIEGI.B_PREL=OBIEGI.EDOKOS().B_PREL
      || _blok:=1
      ?};
      {? ~_blok
      || _stat:=exec('spr_stat','obiegi');
         _blok:=(_stat='T' | _stat='X')
      ?}
   |? _b_prel<>''
   || {? ~(exec('szuk_edokpar','obe_faw',EDOKUM.ref(),_b_prel) & EDOKPAR.ED_INND='R')
      || _blok:=1
      ?}
   ?}
?};
_blok


\etp_cle_def_for
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Usuniecie wartosci domyslnej lub formulu zaleznie od ETYP.DEF_KIND
::  OLD: \etp_cle_def_for/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? ETYP_ATR.DEF_KIND='W'
|| exec('etp_clear_def','obiegi')
|| ETYP_ATR.DEF_FORM:=''
?};
win_disp();
''


\po_edokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Formula przed obsluga dla okienka EDOKUM
::   WE: _a - 1 - rejestracja
::            2 - akceptacja
::            3 - dekretacja
::            5 - przekazanie do akceptacji
::       _b - opcja dla WT - 'F' - faktury
::                           'W' - wnioski
::                           'D' - delegacje
::       _c - opcja dla WT - 0 - zalogowanego użytkownika
::                           1 - wszystkich użytkowników
::                           2 - wszystkich użytkowników wg grup
::  OLD: \po_edokum/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_all:=0;
VAR_DEL.delete('zapobobs');
{? app_info('web_sesid')<>''
|| {? _b='F'
   || exec('init_www','obg')
   |? _b='W'
   || exec('init_www','obe')
   |? _b='D'
   || exec('init_www_del','obe')
   ?};
   _mas:={? SSTALE.AR
         || ($(SSTALE.AR().POCZ_ROK~1)+2)
         || '__'
         ?};
   EDOKUMW.use('skidv1'+_mas);
   exec('maski_w','obiegi',0);
   {? _=3 || _all:=_c ?}
|| {? _a=1
   || _all:={? wla_dok<=1 || wla_dok:=~wla_dok || wla_dok:=2 ?}
   |? _a=2
   || _all:={? wla_dok1<=1 || wla_dok1:=~wla_dok1 || wla_dok1:=2 ?}
   |? _a=3
   || _all:=0
   || _all:={? wla_dok2<=1 || wla_dok2:=~wla_dok2 || wla_dok2:=2 ?}
   ?}
?};
wybortyp:=0;
wyborzam:=0;
{? _a=1
|| exec('zakres','obiegi',1,zakr_wpr,_all,0); zakres:=1
|? _a=2
|| exec('zakres','obiegi',2,zakr_mer,_all,0); zakres:=2
|? _a=3
|| exec('zakres','obiegi',3,zakr_ks,_all,0); zakres:=3
|| exec('zakres','obiegi',5,zakr_pak,_all,0); zakres:=5
?};
{? var_pres('__edoref')>0 & type_of(__edoref)=type_of('') & __edoref<>''
|| {? ~exec('link_test','obiegi2')
   || OBIEGI.CZY_ZAM:='W';
      {? typobi=1
      || _uprall:=exec('hasAction','users','OBG_FZO_ZBRK')
      |? typobi=2
      || _uprall:=exec('hasAction','users','OBE_FAW_ZBRP')
      |? typobi=3
      || _uprall:=exec('hasAction','users','OBE_FDL_ZBSP')
      || _uprall:=0
      ?};
      {? _uprall
      || exec('zakres','obiegi',_a,4,1,0)
      || exec('zakres','obiegi',_a,4,0,0)
      ?};
      zakres:=_a
   ?}
?};
VAR_DEL.delete('wybortyp','wyborzam')


\po_edokum1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą zakładek w okienku EDOKUM
::   WE: _a - 1 - rejestracja
::            2 - akceptacja
::            5 - przekazanie do akceptacji
::       _b - 'F' - faktury
::            'W' - wnioski
::            'D' - delegacje
::----------------------------------------------------------------------------------------------------------------------
web_params_set(web_params_get());
exec('env_wt','b_proces');
_mas:={? SSTALE.AR
      || ($(SSTALE.AR().POCZ_ROK~1)+2)
      || '__'
      ?};
EDOKUMW.use('skidv1'+_mas);
exec('maski_w','obiegi',0);
_tcid:=app_info('web_tcid');
_tabid:=app_info('web_tabid');
_rodzaj:={? _a=1 || 'R' |? _a=2 || 'A' || 'P' ?};
web_global_params_set(exec('obj_ntab_set','#array',web_global_params_get(),'rodzaj',_rodzaj));
EDOKUMW.index('DISP'); EDOKUMW.prefix(_tcid,_tabid,_rodzaj)


\czy_inn_dan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie parametru czynności - czy edycja informacjach dodatkowych
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Informacje dodatkowe'@,1,'Redakcja'@,'Podgląd bez redakcji'@);
{? _choice
|| {? _choice=1
   || 'Redakcja'
   |? _choice=2
   || 'Podgląd bez redakcji'
   ?}
|| ~~
?}


\czy_ed_podz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie parametru czynności - czy edycja podziałów controllingowych
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Podziały controllingowe'@,1,
                    'Redakcja'@,'Wymagane uzupełnienie'@,'Podgląd bez redakcji'@);
{? _choice
|| {? _choice=1
   || 'Redakcja'
   |? _choice=2
   || 'Wymagane uzupełnienie'
   |? _choice=3
   || 'Podgląd bez redakcji'
   ?}
|| ~~
?}


\czy_ed_proj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.14]
:: OPIS: Ustawianie parametru czynności - czy edycja projektów dla dokumentu
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Projekty'@,1,'Redakcja'@,'Wymagane uzupełnienie'@,'Podgląd bez redakcji'@);
{? _choice
|| {? _choice=1
   || 'Redakcja'
   |? _choice=2
   || 'Wymagane uzupełnienie'
   |? _choice=3
   || 'Podgląd bez redakcji'
   ?}
|| ~~
?}


\kont_bud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie parametru czynności - czy kontrola budżetu
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:='Tak'@ ?};
{? _a='Tak'@
|| _sel:=1
|? _a='Nie'@
|| _sel:=2
|| _sel:=0
?};
_pyt:=FUN.choice('Kontrola budżetu?'@,_sel,'Tak'@,'Nie'@);
{? _pyt
|| {? _pyt=1
   || 'Tak'
   || 'Nie'
   ?}
|| ~~
?}


\czy_ed_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie parametru czynności - czy edycja kontrahenta
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Kontrahent'@,1,
                    'Redakcja'@,'Wymagane uzupełnienie'@,'Podgląd bez redakcji'@);
{? _choice
|| {? _choice=1
   || 'Redakcja'
   |? _choice=2
   || 'Wymagane uzupełnienie'
   |? _choice=3
   || 'Podgląd bez redakcji'
   ?}
|| ~~
?}


\czy_ed_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie parametru czynności - czy edycja wartości
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Wartość'@,1,
                    'Redakcja'@,'Wymagane uzupełnienie'@,'Podgląd bez redakcji'@);
{? _choice
|| {? _choice=1
   || 'Redakcja'
   |? _choice=2
   || 'Wymagane uzupełnienie'
   |? _choice=3
   || 'Podgląd bez redakcji'
   ?}
|| ~~
?}


\czy_ed_przej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie parametru czynności - czy edycja przejazdów
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Przejazdy'@,1,
                    'Redakcja'@,'Wymagane uzupełnienie'@,'Podgląd bez redakcji'@);
{? _choice
|| {? _choice=1
   || 'Redakcja'
   |? _choice=2
   || 'Wymagane uzupełnienie'
   |? _choice=3
   || 'Podgląd bez redakcji'
   ?}
|| ~~
?}


\czy_ed_diet
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie parametru czynności - czy edycja diet
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Diety'@,1,
                    'Redakcja'@,'Wymagane uzupełnienie'@,'Podgląd bez redakcji'@);
{? _choice
|| {? _choice=1
   || 'Redakcja'
   |? _choice=2
   || 'Wymagane uzupełnienie'
   |? _choice=3
   || 'Podgląd bez redakcji'
   ?}
|| ~~
?}


\czy_ed_wyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie parametru czynności - czy edycja diet
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Wydatki'@,1,
                    'Redakcja'@,'Wymagane uzupełnienie'@,'Podgląd bez redakcji'@);
{? _choice
|| {? _choice=1
   || 'Redakcja'
   |? _choice=2
   || 'Wymagane uzupełnienie'
   |? _choice=3
   || 'Podgląd bez redakcji'
   ?}
|| ~~
?}


\czy_ed_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie parametru czynności - czy edycja zaliczek
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Wydatki'@,1,
                    'Redakcja'@,'Wymagane uzupełnienie'@,'Podgląd bez redakcji'@);
{? _choice
|| {? _choice=1
   || 'Redakcja'
   |? _choice=2
   || 'Wymagane uzupełnienie'
   |? _choice=3
   || 'Podgląd bez redakcji'
   ?}
|| ~~
?}


\czy_ed_opop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.02]
:: OPIS: Ustawianie parametru czynności - czy edycja opisu operacji podczas akceptacji
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Edycja opisu operacji podczas akceptacji?'@,1,
                 'Tak'@,'Nie'@);
{? _choice
|| {? _choice=1
   || 'Tak'
   || 'Nie'
   ?}
|| ~~
?}


\form_etap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wybór formuł do czynności
::       _a [STRING] - Typ formuły OBIEGI.TYPFOR
::       _b [STRING] - Wskazanie bieżącej pozycji słownika [SCH_FORM.TRESC]
::   WY: [STRING] SCH_FORM.TRESC albo ~~
::----------------------------------------------------------------------------------------------------------------------
_a;
OBIEGI.TYPFOR:=_a;
_cur:={? _b<>~~ || _b || '' ?};
_zwrot:=~~;
SCH_FORM.cntx_psh();
SCH_FORM.index('UNIK'); SCH_FORM.prefix(B_PROC.FIRMA,_a);
SCH_FORM.win_sel('WER');
SCH_FORM.find_key(_cur);
{? SCH_FORM.select(,1,-1) || _zwrot:=SCH_FORM.TRESC ?};
SCH_FORM.cntx_pop();
_zwrot


\sch_typ_for
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Wartosc poczatkowa pola SCH_FORM.TYP
::  OLD: \sch_typ_for/skid_obi.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYPFOR


\sch_form_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Usuwanie formuly do obslugi obiegu informacji
::  OLD: \sch_form_usu/skid_obi.fml
::----------------------------------------------------------------------------------------------------------------------
_del:=1;
{? SCH_FORM.SYSTEM='T'
|| FUN.info('Formuła systemowa. Usunięcie niemożliwe.'@); _del:=0
|? SCH_FORM.count()
|| FUN.info('Formuła wykorzystywana w danych. Usunięcie niemożliwe.'@); _del:=0
?};
{? _del & FUN.ask('Usunąć formułę?'@) || SCH_FORM.del() ?}


\rekpr_sch_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Rekord przed w tabeli SCH_FORM
::  OLD: \rekpr_sch_form/skid_obi.fml
::----------------------------------------------------------------------------------------------------------------------
_gray:={? SCH_FORM.SYSTEM='T' || 'pU' || '' ?};
SCH_FORM.actions_grayed('WER',_gray);
0


\rekpo_sch_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Rekord po w tabeli SCH_FORM
::  OLD: \rekpo_sch_form/skid_obi.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? SCH_FORM.SKROT=''
|| FUN.info('Nie wprowadzono skróconej nazwy formuły.'@); _zwrot:='SKROT'
?};
{? _zwrot=''
|| _skrot:=SCH_FORM.SKROT; _ref:=SCH_FORM.ref();
   SCH_FORM.cntx_psh(); SCH_FORM.index('UNIK'); SCH_FORM.prefix(REF.FIRMA,OBIEGI.TYPFOR);
   {? SCH_FORM.find_key(_skrot,_skrot) & (-menu_txt<>'popraw' | _ref<>SCH_FORM.ref())
   || FUN.info('Istnieje formuła o podanym skrócie.'@); _zwrot:='SKROT'
   ?};
   SCH_FORM.cntx_pop()
?};
{? _zwrot='' & SCH_FORM.NAZWA=''
|| FUN.info('Nie wprowadzono nazwy formuły.'@); _zwrot:='NAZWA'
?};
{? _zwrot='' & SCH_FORM.TRESC=''
|| FUN.info('Nie wprowadzono treści formuły.'@); _zwrot:='TRESC'
?};
_zwrot


\wybor_typu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wybór typu dokumentu w obiegu
::   WE: _a - 1 - faktury
::            2 - wnioski
::            3 - delegacje
::       _b [STRING] - Wskazanie bieżącej pozycji słownika [ETYPY.NAZWA][;ETYPY.W_PORTAL]
::   WY: [STRING] ETYPY.NAZWA+';'+ETYPY.W_PORTAL albo ~~
::----------------------------------------------------------------------------------------------------------------------
_cur:={? _>1 & _b<>~~ || _b || '' ?};
_res:=~~;
{? exec('cli_functions','#system')=0
|| FUN.emsg(exec('indevice_nacc_msg','#system'));
   return(_res)
?};

_jest:=var_press('typobi')>0;
{? _jest || _typ:=typobi ?};
typobi:=_a;
exec('typobieg','obiegi');
ETYPY.cntx_psh();
ETYPY.index('U_WP_A');
ETYPY.prefix(exec('bl_typ','obiegi',typobi),'T');
ETYPY.win_sel('SLO_WYB'); ETYPY.hdr_sel();
{? typobi=1
|| ETYPY.hdr_sel('Typy faktur w obiegu'@);
   ETYPY.win_edit('RED')
|? typobi=2
|| ETYPY.hdr_sel('Typy wniosków'@);
   ETYPY.win_edit(exec('REDW','obiegi2'))
|| ETYPY.hdr_sel('Typy delegacji'@);
   ETYPY.win_edit('REDD')
?};
_obj:=exec('obj_typ_dok','obiegi2');
_obj.set(_cur);
_nazwa:=_obj.NAZWA;
_w_portal:=_obj.W_PORTAL;
ETYPY.find_key(_w_portal,_nazwa);
{? ETYPY.select(,1,-1)
|| _res:=_obj.get()
?};
ETYPY.cntx_pop();
{? _jest=0
|| VAR_DEL.delete('typobi')
|| typobi:=_typ
?};
_res


\typobieg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Typy obiegów
::  OLD: \typobieg/!zws_par_otyp.fml
::----------------------------------------------------------------------------------------------------------------------
TYPOBIEG.cntx_psh(); TYPOBIEG.index('UNIK'); TYPOBIEG.prefix();
{? ~TYPOBIEG.find_key('Obieg faktur')
|| TYPOBIEG.blank(1); TYPOBIEG.NAZWA:='Obieg faktur'; TYPOBIEG.add(1)
?};
{? ~TYPOBIEG.find_key('Obieg wniosków')
|| TYPOBIEG.blank(1); TYPOBIEG.NAZWA:='Obieg wniosków'; TYPOBIEG.add(1)
?};
{? ~TYPOBIEG.find_key('Obieg delegacji')
|| TYPOBIEG.blank(1); TYPOBIEG.NAZWA:='Obieg delegacji'; TYPOBIEG.add(1)
?};
TYPOBIEG.cntx_pop()


\blzmrol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Parametr, czy dopuszczalna zmiana roli wybieranych użytkowników
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Blokowanie zmiany roli przez użytkownika?'@)
|| 'Tak'
|| 'Nie'
?}


\blzmusers
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Parametr, czy dopuszczalna zmiana uzytkowników
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Blokowanie zmiany wybranych użytkowników?'@)
|| 'Tak'
|| 'Nie'
?}


\rola
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wybór roli do czynności
::       _a [STRING] - Wskazanie bieżącej pozycji słownika [B_ROLE.NAME]
::   WY: [STRING] B_ROLE.NAME albo ~~
::----------------------------------------------------------------------------------------------------------------------
_cur:={? _a<>~~ || _a || '' ?};

_zwrot:=~~;
B_ROLE.cntx_psh(); B_ROLE.index('UNIK'); B_ROLE.prefix(B_PROC.FIRMA);
_wer:=B_ROLE.mk_sel('Role'@,'P',,'#broleakcsel',,,,,'U');
B_ROLE.win_fld(_wer,,'NAME',,,,,,,1);
B_ROLE.win_act(_wer,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
B_ROLE.win_sel(_wer);
B_ROLE.find_key(_cur);
{? B_ROLE.select(,1,-1) || _zwrot:=B_ROLE.NAME ?};
B_ROLE.cntx_pop();
_zwrot


\dok_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Tworzy okno redagowania faktury w obiegu
::----------------------------------------------------------------------------------------------------------------------
_okn:=EDOKUM.mk_edit('Faktura w obiegu'@);
{? EDOKUM.EDOKUM & 'pdf;bmp;png;tiff;tif;jpeg;jpg'*(-EDOKUM.bl_info('EDOKUM','EXTENSION'))>0
|| EDOKUM.win_ewin(_okn,,'WPR_TEST')
|| EDOKUM.win_ewin(_okn,,'WPR')
?};
btn_idpf[6]:=EDOKUM.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Poz. &faktury'@],
                             "zawin:=7; 'key:F2'"
                             );
EDOKUM.btn_eopt(_okn,btn_idpf[6],'tooltip='+'Pozycje faktury'@);
btn_idpf[1]:=EDOKUM.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&Poz. VAT'@],
                             "zawin:=2; 'key:F2'"
                             );
EDOKUM.btn_eopt(_okn,btn_idpf[1],'tooltip='+'Pozycje VAT dokumentu w obiegu'@);
btn_idpf[2]:=EDOKUM.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Podział&y'@],
                             "zawin:=3; 'key:F2'"
                             );
EDOKUM.btn_eopt(_okn,btn_idpf[2],'tooltip='+'Podziały controllingowe dokumentu w obiegu'@);
btn_idpf[7]:=EDOKUM.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['P&rojekty'@],
                             "zawin:=8; 'key:F2'"
                             );
EDOKUM.btn_eopt(_okn,btn_idpf[7],'tooltip='+'Projekty controllingowe dokumentu w obiegu'@);
btn_idpf[4]:=EDOKUM.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&Informacje'@],
                             "zawin:=5; 'key:F2'");
EDOKUM.btn_eopt(_okn,btn_idpf[4],'tooltip='+'Informacje dodatkowe dokumentu w obiegu'@);
btn_idpf[3]:=EDOKUM.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Załą&czniki'@],
                             "zawin:=4; 'key:F2'");
btn_idpf[9]:=EDOKUM.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&Historia'@],
                      "exec('okn_opis','obiegi'); ''"
                      );
EDOKUM.btn_eopt(_okn,btn_idpf[9],'tooltip='+'Etapy obiegu - szczegóły'@);
btn_idpf[8]:=EDOKUM.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&E-dokument'@],
                   "exec('dspedob','obiegi'); ''");
{? exec('upgrade2325_blbc1','zbl') & exec('fin_dokumzbc_seek','zbl',EDOKUM)
|| btn_idpf[10]:=EDOKUM.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&Businesscheck'@],
                       "exec('dokumzbc_select','dok_fks1')"
                       )
?};
EDOKUM.btn_eopt(_okn,btn_idpf[3],'tooltip='+'Wyświetlanie dokumentu źródłowego'@);
EDOKUM.btn_eopt(_okn,btn_idpf[3],'tooltip='+'Załączniki dokumentu w obiegu'@);
btn_idpf[5]:=EDOKUM.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Wyślij'@],
                             "zawin:=6; 'key:F2'");
_btn2:=EDOKUM.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['Zapisz'@],"'key:F2'");
EDOKUM.btn_eopt(_okn,_btn2,'tooltip='+exec('help_red_ok','#window','Z'));
EDOKUM.btn_eopt(_okn,btn_idpf[4],'tooltip='+'Informacje dodatkowe dokumentu w obiegu'@);
_anuluj:=EDOKUM.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Anuluj'@],'key:Esc');
EDOKUM.btn_eopt(_okn,_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
{? EDOKUM.TYP().TYPVATPR
|| EDOKUM.efld_opt(EDOKUM.win_edit('?'), 'mark=0',, 'PLATNOSC')
?};
{? var_pres('RB',EDOKUM)>0
|| {? EDOKUM.KH().TR=''
   || EDOKUM.efld_opt(_okn,'editable=grayed',EDOKUM,'RB','N')
   || EDOKUM.efld_opt(_okn,'editable=1',EDOKUM,'RB','N')
   ?}
?};
EDOKUM.efld_opt(_okn, 'mark='+$(EDOKUM.TYP().W_PORTAL='S'),, 'KH');
EDOKUM.efld_opt(_okn, 'mark='+$(EDOKUM.TYP().W_PORTAL='S'),OBIEGI, 'OSOBAOBI');
{? OPERATOR.DEPT<>null || EDOKUM.efld_opt(_okn, 'editable=grayed',, 'ODD') ?};
{? EDOKUM.TYP<>null || EDOKUM.efld_opt(_okn, 'editable=grayed',, 'TYP') ?};
EDOKUM.efld_opt(_okn, 'editable=grayed',, 'ID');
EDOKUM.win_edit(_okn);
1


\okna_r_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawia widoczność przycisków w EDOKUM
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.btn_eopt(EDOKUM.win_edit('?'),btn_idpf[1],{? EDOKUM.TYP().TYPVATPR || 'state=grayed' || 'state=normal' ?});
EDOKUM.btn_eopt(EDOKUM.win_edit('?'),btn_idpf[2],{? ~_b || 'state=grayed' || 'state=normal' ?});
EDOKUM.btn_eopt(EDOKUM.win_edit('?'),btn_idpf[3],{? ~_c || 'state=grayed' || 'state=normal' ?});
EDOKUM.btn_eopt(EDOKUM.win_edit('?'),btn_idpf[4],{? ~_d || 'state=grayed' || 'state=normal' ?});
EDOKUM.btn_eopt(EDOKUM.win_edit('?'),btn_idpf[5],{? ~_e || 'state=grayed' || 'state=normal' ?});
EDOKUM.btn_eopt(EDOKUM.win_edit('?'),btn_idpf[7],{? ~_f || 'state=grayed' || 'state=normal' ?});
EDOKUM.btn_eopt(EDOKUM.win_edit('?'),btn_idpf[6],{? EDOKUM.TYP().POZF='N' || 'state=grayed' || 'state=normal' ?});
EDOKUM.btn_eopt(EDOKUM.win_edit('?'),btn_idpf[8],{? ~_g || 'state=grayed' || 'state=normal' ?});
EDOKUM.btn_eopt(EDOKUM.win_edit('?'),btn_idpf[9],{? ~_h || 'state=grayed' || 'state=normal' ?})


\dol_dob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Dołączanie dokumentów, wniosków i delegacji
::   WE: _a - 1 - wejście z okienka obszaru roboczego na akcję Dołącz
::            2 - uruchomienie jako czynność startowa
::  OLD: \dol_dob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_mp:=_args.mp;
_we:=_args.in;
_wy:=_args.out;
exec('typ_ust','obiegi',_we);
VAR_DEL.delete('numer','oldnumer');
exec('tabkhini','kontrahent');
SKID.SL_KH:='';
OPERATOR.USER();
_ref:=null;
{? _a=1
|| EDOKUM.cntx_psh();
   {? EDOKUM.get() || _ref:=EDOKUM.ref() ?};
   EDOKUM.cntx_pop()
|? _a=2
||   SKID.fld_fml('NIP','F3',"exec('aenipdob','obiegi',1)")
?};
EDOKUM.blank();
EDOKUM.TYP:=typ_ust;
{? EDOKUM.ODD=null || EDOKUM.ODD:=exec('one_odd','obiegi') ?};
{? EDOKUM.ODD=null || EDOKUM.ODD:=exec('edokum_odd','obiegi2') ?};
EDOKUM.DOSTAWCA:=OPERATOR.USER().OSOBA;
EDOKUM.FIRMA:=REF.FIRMA;
EDOKUM.ROK_F:=SSTALE.AR;
EDOKUM.UNIK_ID:=tm_stamp();
EDOKUM.add();
{? EDOKUM.TYP & EDOKUM.TYP().AUT_ID='T' & EDOKUM.ID=''
|| exec('ustal_numer','obiegi',typobi,SSTALE.AR,1);
   EDOKUM.ID:={? var_pres('id_edok')>0 || id_edok || '' ?}
?};
EDOKUM.bl_file('EDOKUM',1); EDOKUM.bl_file('EPODPIS',1);
EDOKUM.memo_set('','UW_OPDL');
{? exec('dat_not','dok_fks',date()) || EDOKUM.DO:=date() ?};
{? typobi=3
|| EDOKUM.DW:=EDOKUM.DATA_OD:=EDOKUM.DATA_DO:=date();
   {? EDOKUM.DW<>date(0,0,0)
   || EDOKUM.DOP:=EDOKUM.DW
   || EDOKUM.DOP:=date()
   ?}
?};
dol_dob:=1;
{? EDOKUM.TYP || exec('aetyped','obiegi') ?};
VAR_DEL.delete('dol_dob');
OBIEGI.DEL_ETAT:='';
EDOKUM.win_edit('WPR');
exec('kolor_et','obiegi','EDOKUM');
{? typobi=1 & PAR_SKID.get(458)='T' || EDOKUM.fld_fml('SYM','AFTER_EDIT',"exec('spr_sym_fakt','obiegi2')") ?};
exec('dok_edit','obiegi');
_zak_btn:={? EDOKPAR.POZV_WYM='N' & EDOKPAR.POZF_WYM='N' || 1 || 0 ?};
exec('okna_r_btn','obiegi',1,1,1,1,_zak_btn,1,0,0);
_eddok:=0; zawin:=0; zak_rej_ed:=0; pozvedit:=0; zakres:=1; _formadd:=0;
exec('odd_filtr','fst');
{! |?
   {? zawin || EDOKUM.get() ?};
   {? EDOKUM.edit("exec('spr_dok','obiegi')")
   || menu_txt(,'Popraw'@);
      exec('zak_akt','obiegi');
      EDOKUM.cntx_psh(); EDOKUM.prefix();
      do();
      _ref:=null;
      EDOKUM.KHKH:=exec('edokum_khkh','obiegi');
      {? EDOKUM.put() & EDOKUM.memo_put(,'UW_OPDL')
      || exec('dol_edokos','obiegi',_we);
         {? EDOKUM.TYP().ATR_G1R>0
         || exec('edk_atr_dolacz','obiegi',0)
         ?};
         OBIEGI.EDOKOS();
         {? ~_formadd & exec('szuk_edokpar','obiegi') & EDOKPAR.FORM_ADD
         || ($EDOKPAR.FORM_ADD().TRESC)();
            _formadd:=1
         ?}
      ?};
      end();
      _wy.EDOKUM:=EDOKUM.ref();
      _mp.save(,_wy);
      _eddok:=1;
      _ref:=EDOKUM.ref();
      exec('putbloby','obiegi');
      {? zawin
      || {? zawin=2
         || params_exec('pozvdob','obiegi')
         |? zawin=3
         || params_exec('podz_dob','obiegi')
         |? zawin=4
         || exec('zalaczniki','obiegi')
         |? zawin=5
         || exec('inne_dane','obiegi')
         |? zawin=6
         || exec('zak_rej_dok','obiegi');
            {? zak_rej_ed || zawin:=0 ?}
         |? zawin=7
         || exec('pozf_edokum','obiegi')
         |? zawin=8
         || exec('proj_dob','obiegi_proj')
         ?}
      || {? ~pozvedit & EDOKUM.WAL=FINFO.NAROD
         || exec('pozvdob','obiegi',1); EDOKUM.get();
            {? _a=2 || zawin:=1  ?}
         ?}
      ?};
      EDOKUM.cntx_pop();
      {? zawin
      || exec('okna_r_btn','obiegi',1,1,1,1,1,1,1,1); zawin:=0; EDOKUM.get(); 1
      || {? EDOKUM.f_active()
         || EDOKUM.f_rfresh();
            {? _ref<>null || EDOKUM.f_seek(_ref) ?}
         ?};
         0
      ?}
   |? ~_eddok
   || exec('ustal_numer','obiegi',typobi,SSTALE.AR,2);
      EDOKUMW.cntx_psh(); EDOKUMW.use('skidv1'+(EDOKUM.name()+2));
      EDOKUMW.index('UNIK1'); EDOKUMW.prefix(EDOKUM.ref());
      {? EDOKUMW.first() || {! |? EDOKUMW.del() !} ?};
      EDOKUMW.cntx_pop();
      exec('edokum_del_tab','obiegi2');
      EDOKUM.get();
      EDOKUM.del();
      _mp.cancel(); 0
   ?}
!};
{? _a=2 || SKID.fld_fml('NIP','F3',"*") ?};
{? EDOKUM.f_active()
|| EDOKUM.f_rfresh();
   {? _ref<>null || EDOKUM.f_seek(_ref) ?}
?};
{? typobi=1 & PAR_SKID.get(458)='T' || EDOKUM.fld_fml('SYM','AFTER_EDIT',"*") ?};
exec('tabkhdel','kontrahent');
VAR_DEL.delete('numer','oldnumer','id_edok','typ_ust','zawin','pozvedit')


\dol_dob_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dołączanie dokumentów w obiegu - WEBTERM
::   WE: _a - obiekt z parametrami wejściowymi
::       _b - 2 - wnioski
::            3 - delegacje
::       _c - 1 - uruchamiane z TODO
::            0 - uruchamiane z obszaru roboczego
::            2 - uruchamiane z pulpitu
::----------------------------------------------------------------------------------------------------------------------
SSTALE.AO:=null;
exec('env_wt','b_proces');
{? SSTALE.AO=null
|| FUN.info('Nie ustawiono parametrów pracy systemu.'@); return(0)
?};
akcja:='dołącz';
{? _b=2
|| exec('env_edokum','obiegi','WW',2,1)
|| exec('env_edokum','obiegi','WD',2,1)
?};
VAR_DEL.delete('akcja');
_get:=web_params_get(1); web_params_set(_get);
{? var_pres('R_WYW',_a)>0 & _a.R_WYW='HRP'
|| FUN.info('Proces nie może zostać uruchomiony. Typ dokumentu tylko dla Portalu HR.'@);
   return(0)
?};
exec('typ_ust','obiegi',_a);
{? ~exec('dol_dob_wt_ini','obiegi2',_c) || return(0) ?};

EDOKUM.prefix();

{? EDOKUM.add()
|| EDOKUMW.use('skidv1'+(EDOKUM.name()+2)); EDOKUMW.prefix();
   _tcid:=app_info('web_tcid');
   _mbid:=app_info('web_mbid');
   _sesid:=app_info('web_sesid');
   _tabid:=app_info('web_tabid');
   EDOKUMW.blank(1);
   EDOKUMW.EDOKUM:=EDOKUM.ref();
   EDOKUMW.SESID:=_sesid;
   EDOKUMW.MBID:=_mbid;
   EDOKUMW.TCID:=_tcid;
   EDOKUMW.TABID:=_tabid;
   EDOKUMW.RODZAJ:='R';
   EDOKUMW.KH:=EDOKUM.KH;
   EDOKUMW.TYP:=EDOKUM.TYP;
   EDOKUMW.ALERTY:=EDOKUM.ALERTY;
   EDOKUMW.STDEKRD:=EDOKUM.STDEKRD;
   EDOKUMW.DOSTAWCA:=EDOKUM.DOSTAWCA;
   EDOKUMW.DEL_CEL:=EDOKUM.DEL_CEL;
   EDOKUMW.ZAM:=EDOKUM.ZAM;
   EDOKUMW.USERS:=EDOKUM.USERS;
   EDOKUMW.add(1);
   EDOKUMW.web_cntx_save()
?};
{? EDOKUM.TYP & EDOKUM.TYP().AUT_ID='T' & EDOKUM.ID=''
|| exec('ustal_numer','obiegi',typobi,SSTALE.AR,1);
   EDOKUM.ID:={? var_pres('id_edok')>0 || id_edok || '' ?};
   EDOKUM.TYP:=typ_ust;
   EDOKUM.put()
?};
EDOKUM.bl_file('EDOKUM',1); EDOKUM.bl_file('EPODPIS',1);
EDOKUM.memo_set('','UW_OPDL');
{? exec('dat_not','dok_fks',date()) || EDOKUM.DO:=date() ?};
{? typobi=3
|| EDOKUM.DW:=EDOKUM.DATA_OD:=EDOKUM.DATA_DO:=date();
   {? EDOKUM.DW<>date(0,0,0)
   || EDOKUM.DOP:=EDOKUM.DW
   || EDOKUM.DOP:=date()
   ?}
|? typobi=2
|| EDOKUM.DOP:=date()
?};
OBIEGI.DEL_ETAT:='';
web_global_params_set(exec('obj_ntab_set','#array',web_global_params_get(),
                           'act_ok',0
                     ));
_okno:={? typobi=2
       || {? _c=1 || 'WW021' |? _c=2 || 'WW022' || 'WW020' ?}
       || {? _c=1 || 'WD021' |? _c=2 || 'WD022' || 'WD020' ?}
       ?};
POMOC.W_PORTAL:='N';
OBIEGI.DEL_ETAT:=''; SKID.SL_KH:=SKID.NIP:=''; SKID.ZAPOT:=0;
{? EDOKUM.DOSTAWCA<>null
|| OBIEGI.OSOBAOBI:=EDOKUM.DOSTAWCA().PIERWSZE+' '+EDOKUM.DOSTAWCA().NAZWISKO; OBIEGI.OSOBAID:=EDOKUM.DOSTAWCA().IMEX
|| OBIEGI.OSOBAOBI:=''; OBIEGI.OSOBAID:=0
?};
_dynamic:=_b=2;
exec('set_wt_par','obiegi2','dynamic',_dynamic);
{? _dynamic
|| _ed_inn:=var_press('ED_INND',_a)>0 & _a.ED_INND='Redakcja';
   _red:=exec('win_red_wnioski','obiegi2',,,_ed_inn);
   EDOKUMW.web_cntx_save();
   EDOKUM.web_cntx_save();
   SSTALE.AR:=SSTALE.AO().ROK;
   web_def_edit(_red,"
      EDOKUMW.web_cntx_load();
      EDOKUM.web_cntx_load();
      _get:=web_params_get();
      _par:=web_global_params_get();
      _dalej:=1;
      {? _a<>'ANULUJ'
      || exec('env_edokum_get1','obiegi');
         exec('set_edokum','obiegi2',_b);
         _pole:=exec('spr_dok','obiegi');
         {? _pole='' & _a<>'DEL'
         || _pole:=exec('chk_atr','obiegi2',_b)
         ?};
         {? type_of(_pole)=type_of('') & _pole<>''
         || web_def_update(web_top_win(),_b,_pole);
            _dalej:=0
         || exec('set_atr','obiegi2',_b);
            EDOKUM.cntx_psh();
            _act_ok:=exec('get_wt_par','obiegi2','act_ok');
            {? _act_ok=~~ | _act_ok=0
            || params_exec('dol_dob_wt1','obiegi2')
            || params_exec('pop_dob_wt1','obiegi2')
            ?};
            EDOKUM.cntx_pop()
         ?}
      ?};
      {? _dalej
      || {? _a='OK'
         || web_def_close();
            {? exec('get_wt_par','obiegi2','path_run')<>'Proc'
            || exec('find_edokum','obiegi',EDOKUM.ref);
               EDOKUMW.web_refresh('WPRGW','WPR')
            ?}
         |? _a='ANULUJ'
         || exec('env_edokum_get1','obiegi');
            {? type_of(_par)>100 & var_pres('act_ok',_par)>0
            || {? ~_par.act_ok || exec('del_edok','obiegi') ?}
            || exec('del_edok','obiegi')
            ?};
            web_def_close()
         || exec('inne_akcje','obiegi2',_a)
         ?}
      ?}
   ",'Wniosek w obiegu'@)
|| _grey:=Plugin.run('ACT_GREY_EDOKUM_001',OPERATOR.USER,'EDOKUM',_okno);
   {? type_of(_grey)=type_of('') & _grey<>''
   || STR.split(_grey,',');
      STR.get_word();
      _word:=STR.get_word();
      {? _word<>''
      || {!
         |? EDOKUM.web_btn_einit(_okno,,_word,'state=grayed');
            _word:=STR.get_word();
            _word<>''
         !}
      ?}
   ?};
   EDOKUM.web_edit(_okno,,,,"
      EDOKUMW.web_cntx_load();
      _get:=web_params_get();
      _par:=web_global_params_get();
      {? _a='OK'
      || {? _get.akcja='dołącz'
         || {? _par.act_ok
            || _pole:=params_exec('pop_dob_wt2','obiegi',0,0);
               {? type_of(_pole)=type_of('') & _pole<>''
               || web_top_update(0,,,_pole)
               || EDOKUM.web_eclose();
                  {? ~(type_of(_par)>100 & var_pres('path_run',_par)>0 & _par.path_run='Proc')
                  || {? var_pres('typobi',_get)>0 & _get.typobi=2
                     || exec('find_edokum','obiegi',EDOKUM.ref);
                        EDOKUMW.web_refresh('WPRGW','WPR')
                     || exec('find_edokum','obiegi',EDOKUM.ref);
                        EDOKUMW.web_refresh('WPRGD','WPR')
                     ?}
                  ?}
               ?}
            || _pole:=params_exec('dol_dob_wt2','obiegi',1,1);
               {? type_of(_pole)=type_of('') & _pole<>'' || web_top_update(0,,,_pole) ?}
            ?}
         ?}
      || {? type_of(_par)>100 & var_pres('act_ok',_par)>0
         || {? ~_par.act_ok || exec('del_edok','obiegi') ?}
         || exec('del_edok','obiegi')
         ?};
         EDOKUM.web_eclose();
         {? ~(type_of(_par)>100 & var_pres('path_run',_par)>0 & _par.path_run='Proc')
         || {? var_pres('typobi',_get)>0 & _get.typobi=2
            || exec('find_edokum','obiegi',EDOKUM.ref);
               EDOKUMW.web_refresh('WPRGW','WPR')
            || exec('find_edokum','obiegi',EDOKUM.ref);
               EDOKUMW.web_refresh('WPRGD','WPR')
            ?}
         ?}
      ?}
   ")
?}


\dol_dob_wt2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dołączanie dokumentów w obiegu - WEBTERM + wewnętrzna
::   WE: _a - 1/0 - czy zamknąć okno
::       _b - 1/0 - czy odświeżyć pod spodem
::----------------------------------------------------------------------------------------------------------------------
exec('env_edokum_get1','obiegi');
_pole:=exec('spr_dok','obiegi');
{? _pole=''
|| EDOKUM.cntx_psh();
   refr_okn:=_a;
   params_exec('dol_dob_wt1','obiegi2');
   VAR_DEL.delete('refr_okn');
   EDOKUM.cntx_pop();
   {? _a || EDOKUM.web_eclose() ?};
   {? _b
   || _par:=web_global_params_get();
      _get:=web_params_get();
      {? ~(type_of(_par)>100 & var_pres('path_run',_par)>0 & _par.path_run='Proc')
      || {? var_pres('typobi',_get)>0 & _get.typobi=2
         || exec('find_edokum','obiegi',EDOKUM.ref);
            EDOKUMW.web_refresh('WPRGW','WPR')
         || exec('find_edokum','obiegi',EDOKUM.ref);
            EDOKUMW.web_refresh('WPRGD','WPR')
         ?}
      ?}
   ?}
?};
_pole


\pop_dob_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Poprawianie dokumentów w obiegu - WEBTERM
::   WE: _a - 2 - wnioski
::            3 - delegacje
::       _b - 1 - uruchamiane z TODO
::            0 - uruchamiane z obszaru roboczego
::            2 - uruchamiane z pulpitu
::      [_c]- etap (W - rejestracja,P - przekazanie, A - Akceptacja)
::----------------------------------------------------------------------------------------------------------------------
akcja:='popraw';
_etap:={? var_pres('_c')>0 || _c || 'W' ?};
{? _a=2
|| {? _b=1
   || exec('todo_run','obiegi',1); todo_run:=1
   ?};
   exec('env_edokum','obiegi',_etap+'W',0,1)
|| exec('env_edokum','obiegi',_etap+'D',0,1)
?};
VAR_DEL.delete('akcja','todo_run');
_get:=web_params_get(1); web_params_set(_get);
dol_dob:=0; SKID.SL_KH:=''; kh_ask:=0;
OBIEGI.OBIEGKON:=OBIEGI.FAKT_DEL:=1;
exec('typobi','obiegi');
{? EDOKUM.get()
|| OBIEGI.EDOKOS();
   _dalej:=exec('pop_dob_spr','obiegi2');
   {? _dalej
   || exec('tabkhini','kontrahent');
      _dynamic:=_a=2;
      exec('set_wt_par','obiegi2','dynamic',_dynamic);
      {? _dynamic
      || {? _b=0
         || SKID.NIP:=EDOKUM.KHKH().NIP;
            _red:=exec('win_red_wnioski','obiegi2',_etap,,~exec('blok_innd','obiegi'));
            EDOKUMW.web_cntx_save();
            EDOKUM.web_cntx_save();
            web_def_edit(
               _red,"
                  EDOKUMW.web_cntx_load();
                  EDOKUM.web_cntx_load();
                  _dalej:=1;
                  {? _a<>'ANULUJ' & _a<>'EDIT'
                  || exec('set_edokum','obiegi2',_b);
                     _pole:=params_exec('pop_dob_wt2','obiegi',0,1);
                     _edit:=exec('get_wt_par','obiegi2','editWni');
                     {? type_of(_edit)<>type_of(0) | _edit
                     || {? _pole='' & _a<>'DEL'
                        || _pole:=exec('chk_atr','obiegi2',_b)
                        ?};
                        {? _pole<>''
                        || web_def_update(web_top_win(),_b,_pole);
                           _dalej:=0
                        || exec('set_atr','obiegi2',_b)
                        ?}
                     ?}
                  ?};
                  {? _dalej
                  || {? _a='OK'
                     || exec('update_edokumw','obiegi2');
                        web_def_close()
                     || exec('inne_akcje','obiegi2',_a,0)
                     ?}
                  ?}
               ",
               'Wniosek w obiegu'@
            )
         |? _b=1
         || _red:=exec('win_red_wnioski','obiegi2',_etap,,~exec('blok_innd','obiegi'));
            BI_TODO.web_cntx_save();
            EDOKUM.web_cntx_save();
            web_def_edit(
               _red,"
                  BI_TODO.web_cntx_load();
                  EDOKUM.web_cntx_load();
                  _dalej:=1;
                  {? _a<>'ANULUJ' & _a<>'EDIT'
                  || exec('set_edokum','obiegi2',_b);
                     _pole:=params_exec('pop_dob_wt2','obiegi',0,0);
                     _edit:=exec('get_wt_par','obiegi2','editWni');
                     {? type_of(_edit)<>type_of(0) | _edit
                     || {? _pole=''
                        || _pole:=exec('chk_atr','obiegi2',_b)
                        ?};
                        {? _pole<>''
                        || web_def_update(web_top_win(),_b,_pole);
                           _dalej:=0
                        || exec('set_atr','obiegi2',_b)
                        ?}
                     ?}
                  ?};
                  {? _dalej
                  || {? _a='OK'
                     || web_def_close();
                        BI_TODO.web_refresh(web_top_win(1))
                     || exec('inne_akcje','obiegi2',_a,1)
                     ?}
                  ?}
               ",
               'Wniosek w obiegu'@
            )
         ?}
      || _okno:={? typobi=2
                || {? _b=1 || 'WW021' |? _b=2 || 'WW022' || 'WW020' ?}
                || {? _b=1 || 'WD021' |? _b=2 || 'WD022' || 'WD020' ?}
                ?};
         OBIEGI.DEL_ETAT:=''; SKID.ZAPOT:=0;
         SKID.SL_KH:={? EDOKUM.KH || EDOKUM.KH().SLU().NAZ || '' ?};
         SKID.NIP:={? EDOKUM.KHKH || EDOKUM.KHKH().NIP || '' ?};
         {? EDOKUM.DOSTAWCA<>null
         || OBIEGI.OSOBAOBI:=EDOKUM.DOSTAWCA().PIERWSZE+' '+EDOKUM.DOSTAWCA().NAZWISKO; OBIEGI.OSOBAID:=EDOKUM.DOSTAWCA().IMEX
         || OBIEGI.OSOBAOBI:=''; OBIEGI.OSOBAID:=0
         ?};
         EDOKUM.web_efld_init(_okno,,'win_dict=SLO_WT, enable=1, editable=0',EDOKUM,'ODD');
         EDOKUM.web_efld_init(_okno,,'win_dict=SLO_WYBW, enable=1,editable=0',EDOKUM,'TYP');
         exec('okna_ini','obiegi',_okno);
         {? EDOKUM.TYP
         || {? ETYPY.ED_PODZ='T'
            || EDOKUM.web_btn_einit(_okno,,'btnPODZ','state=normal')
            || EDOKUM.web_btn_einit(_okno,,'btnPODZ','state=grayed')
            ?};
            {? ETYPY.OBS_PROJ
            || EDOKUM.web_btn_einit(_okno,,'btnPROJ','state=normal')
            || EDOKUM.web_btn_einit(_okno,,'btnPROJ','state=grayed')
            ?}
         ?};
         {? typobi=2
         || {? exec('dok_pow_log','obiegi_log')
            || EDOKUM.web_btn_einit(_okno,,'btnDOK_POW','state=normal')
            || EDOKUM.web_btn_einit(_okno,,'btnDOK_POW','state=grayed')
            ?}
         ?};
         web_global_params_set(exec('obj_ntab_set','#array',web_global_params_get(),
                              'act_ok',0
                        ));
         EDOKUM.memo_get(,'UW_OPDL');
         {? _b=1
         || BI_TODO.web_cntx_save();
            _grey:=Plugin.run('ACT_GREY_EDOKUM_001',OPERATOR.USER,'EDOKUM',_okno);
            {? type_of(_grey)=type_of('') & _grey<>''
            || STR.split(_grey,',');
               STR.get_word();
               _word:=STR.get_word();
               {? _word<>''
               || _opt:='';
                  {!
                  |? EDOKUM.web_btn_einit(_okno,,_word,'state=grayed');
                     _opt+=_word:=STR.get_word();
                     _word<>''
                  !};
                  EDOKUM.web_win_opt(_okno,,'grayed='+_opt)
               ?}
            ?};
            EDOKUM.web_edit(_okno,,,,"{? _a='OK'
                                      || _pole:=params_exec('pop_dob_wt2','obiegi',1,0);
                                         {? type_of(_pole)=type_of('') & _pole<>'' || web_top_update(0,,,_pole) ?};
                                         BI_TODO.web_cntx_load();
                                         BI_TODO.web_refresh(web_top_win(1))
                                      || EDOKUM.web_eclose()
                                      ?}")
         |? _b=2
         || _grey:=Plugin.run('ACT_GREY_EDOKUM_001',OPERATOR.USER,'EDOKUM',_okno);
            {? type_of(_grey)=type_of('') & _grey<>''
            || STR.split(_grey,',');
               STR.get_word();
               _word:=STR.get_word();
               {? _word<>''
               || {!
                  |? EDOKUM.web_btn_einit(_okno,,_word,'state=grayed');
                     _opt+=_word:=STR.get_word();
                     _word<>''
                  !};
                  EDOKUM.web_win_opt(_okno,,'grayed='+_opt)
               ?}
            ?};
            EDOKUM.web_edit(_okno,,,,"{? _a='OK'
                                      || _pole:=params_exec('pop_dob_wt2','obiegi',1,0);
                                         {? type_of(_pole)=type_of('') & _pole<>'' || web_top_update(0,,,_pole) ?}
                                      || EDOKUM.web_eclose()
                                      ?}")
         || EDOKUMW.web_cntx_save();
            _grey:=Plugin.run('ACT_GREY_EDOKUM_001',OPERATOR.USER,'EDOKUM',_okno);
            {? type_of(_grey)=type_of('') & _grey<>''
            || STR.split(_grey,',');
               STR.get_word();
               _word:=STR.get_word();
               {? _word<>''
               || {! |?
                  EDOKUM.web_btn_einit(_okno,,_word,'state=grayed');
                  _word:=STR.get_word();
                  _word<>''
                  !}
               ?}
            ?};
            EDOKUM.web_edit(_okno,,,,"EDOKUMW.web_cntx_load();
                                      {? _a='OK'
                                      || _pole:=params_exec('pop_dob_wt2','obiegi',1,1);
                                         {? type_of(_pole)=type_of('') & _pole<>'' || web_top_update(0,,,_pole) ?};
                                         exec('update_edokumw','obiegi2')
                                      || EDOKUM.web_eclose()
                                      ?}")
         ?}
      ?}
   ?}
|| exec('errnodok','obiegi')
?}


\pop_dob_wt2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Poprawianie dokumentów w obiegu - WEBTERM - wewnętrzna
::   WE: _a - 1/0 - czy zamknąć okno
::       _b - 1/0 - czy odświeżyć pod spodem
::----------------------------------------------------------------------------------------------------------------------
exec('env_edokum_get1','obiegi');
_pole:={? zakres<>1 & typobi=2
       || ''
       || exec('spr_dok','obiegi')
       ?};
{? _pole=''
|| EDOKUM.cntx_psh();
   params_exec('pop_dob_wt1','obiegi2');
   EDOKUM.cntx_pop();
   {? _a || EDOKUM.web_eclose() ?};
   {? _b
   || {? typobi=2
      || {? var_pres('zakres')>0 & zakres=2
         || EDOKUMW.web_refresh('WPRGW','AKC')
         || EDOKUMW.web_refresh('WPRGW','WPR')
         ?}
      || EDOKUMW.web_refresh('WPRGD','WPR')
      ?}
   ?}
?};
_pole


\find_edokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Szuka dokumentu po dołączeniu
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
{? _a
|| EDOKUMW.blank(1); EDOKUMW.EDOKUM:=_a;
   {? EDOKUMW.find_rec() || _zwrot:=1 || EDOKUMW.first() ?}
|| EDOKUMW.first()
?};
_zwrot


\del_edok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Kasowanie dokumentu
::----------------------------------------------------------------------------------------------------------------------
exec('ustal_numer','obiegi',typobi,null,2);
EDOKUMW.cntx_psh();
EDOKUMW.index('UNIK1'); EDOKUMW.prefix(EDOKUM.ref());
{? EDOKUMW.first() || {! |? EDOKUMW.del() !} ?};
EDOKUMW.cntx_pop();

:: tabele powiązane
exec('edokum_del_tab','obiegi2');

:: usunięcie delegacji
EDOKUM.del()


\ae_typ_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji typu wniosku zaliczkowego
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.TYP & typobi=2 & EDOKUM.TYP().CZY_ZALP='T' & ETYPY.ETYPZAL
|| ETYPY.ETYPZAL();
   EDOKUM.PLACE:=ETYPZAL.DOT_WYN;
   exec('wni_aeplace','zaliczki',0);
   EDOKUM.KASPRZEL:=ETYPZAL.KASPRZEL;
   {? EDOKUM.KASPRZEL='K'
   || EDOKUM.N:=''
   |? EDOKUM.N=''
   || exec('RB','object'); EDOKUM.N:=RB.get_drb(4,REF.FIRMA().SYMBOL+'OSOBA',#EDOKUM.DOSTAWCA)
   ?}
?}


\pop_dob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Poprawianie dokumentow w obiegu
::   WE: _a - 1 - wejście z okienka obszaru roboczego na akcję Popraw
::            2 - uruchomienie z TODO
::  OLD: \pop_dob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('popdokks')<=0
|| _args:=params_get();
   _mp:=_args.mp;
   _we:=_args.in;
   zakres:=1
|| zakres:=3
?};
_ok:=0;
_tab_edokum:=type_of(cur_tab(1,1))=118 & cur_tab(1,1)=EDOKUM;
exec('odd_filtr','fst');
{? _tab_edokum & EDOKUM.f_active() || EDOKUM.prefix(); EDOKUM.f_rfresh() ?};
{? {? _tab_edokum & EDOKUM.f_active() || EDOKUM.f_get() || EDOKUM.get() ?}
|| {? EDOKUM.r_lock(1,1,1)
   || OBIEGI.EDOKOS();
      _dalej:=EDOKUM.AUTOMAT=2 | exec('pop_dob_spr','obiegi2');
      {? _dalej
      || exec('tabkhini','kontrahent');
         exec('kolor_et','obiegi','EDOKUM');
         EDOKUM.memo_get(,'UW_OPDL');
         {? typobi=1
         || {? EDOKUM.EDOKUM & 'pdf;bmp;png;tiff;tif;jpeg;jpg'*(-EDOKUM.bl_info('EDOKUM','EXTENSION'))>0
            || EDOKUM.win_edit('WPR_TEST');
               OBIEGI.PREVIEW:=EDOKUM.EDOKUM
            || EDOKUM.win_edit('WPR');
               OBIEGI.bl_file('PREVIEW',1,'')
            ?}
         ?};
         EdokKh:=EDOKUM.KH;
         {? EDOKUM.KH=null || SKID.SL_KH:={? ETYPY.DOM_SL<>null || ETYPY.DOM_SL().SLU().NAZ || '' ?} ?};
         {? typobi=1 & PAR_SKID.get(458)='T' || EDOKUM.fld_fml('SYM','AFTER_EDIT',"exec('spr_sym_fakt','obiegi2')") ?};
         exec('dok_edit','obiegi');
         {? var_pres('popdokks')>0
         || exec('okna_r_btn','obiegi',0,0,0,0,0,0,0,0)
         || exec('okna_r_btn','obiegi',1,1,1,1,1,1,1,1)
         ?};
         exec('putbloby','obiegi');
         zawin:=0; kh_ask:=0;
         {! |?
            {? zawin || EDOKUM.get() ?};
            _ref:=EDOKUM.ref();
            {? EDOKUM.edit("exec('spr_dok','obiegi')")
            || _ok:=1; zak_rej_ed:=0;
               _ref:=EDOKUM.ref();
               {? var_pres('popdokks')<=0 || EDOKUM.USERS:=OPERATOR.USER ?};
               {? typobi=1 & EDOKUM.AUTOMAT=2 || EDOKUM.AUTOMAT:=1 ?};
               EDOKUM.KHKH:=exec('edokum_khkh','obiegi');
               {? EDOKUM.put() & EDOKUM.memo_put(,'UW_OPDL')
               || exec('putbloby','obiegi');
                  {? OBIEGI.EDOKOS().OPERACJA='W' & var_pres('popdokks')<=0
                  || exec('dol_edokos','obiegi',_we)
                  ?};
                  exec('putbloby','obiegi');
                  {? zawin=2
                  || params_exec('pozvdob','obiegi')
                  |? zawin=3
                  || params_exec('podz_dob','obiegi')
                  |? zawin=4
                  || exec('zalaczniki','obiegi')
                  |? zawin=5
                  || exec('inne_dane','obiegi')
                  |? zawin=6
                  || exec('zak_rej_dok','obiegi');
                     {? zak_rej_ed || zawin:=0 ?}
                  |? zawin=7
                  || exec('pozf_edokum','obiegi')
                  |? zawin=8
                  || exec('proj_dob','obiegi_proj')
                  ?};
                  {? _tab_edokum & EDOKUM.f_active() || EDOKUM.f_rfresh() ?}
               ?}
            ?};
            {? zawin
            || zawin:=0; 1
            || {? _tab_edokum & EDOKUM.f_active() || EDOKUM.f_rfresh() ?};
               0
            ?}
         !};
         {? typobi=1 & PAR_SKID.get(458)='T' || EDOKUM.fld_fml('SYM','AFTER_EDIT',"*") ?};
         {? EDOKUM.win_edit('?')='WPR_TESX' || EDOKUM.win_edit('WPR') ?};
         exec('tabkhdel','kontrahent')
      ?};
      {? var_pres('popdokks')<=0 & ~zak_rej_ed || _mp.descTodo() ?};
      EDOKUM.r_unlock()
   || exec('err_kom','obiegi')
   ?}
|| exec('errnodok','obiegi')
?};
VAR_DEL.delete('zawin','EdokKh','kh_ask');
_ok


\okna_ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie okienek przed dołącz i popraw
::   WE: _a - akronim okienka
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys');
_okno:=_a;
{? typobi=2
|| EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'TR')
|? typobi=3
|| {? XINFO.CZY_CEL
   || EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'DEL_CEL')
   || EDOKUM.web_efld_init(_okno,,'mark=0, enable=1, editable=1',EDOKUM,'DEL_CEL')
   ?};
   EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'DEL_MIE');
   EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'DW')
?};
{? EDOKUM.TYP
|| EDOKUM.TYP();
   {? ~(_okno='WF03' | _okno='WW01' | _okno='WD01')
   || {? ETYPY.ED_PODZ='T'
      || EDOKUM.web_btn_einit(_okno,'','btnPODZ','state=normal')
      || EDOKUM.web_btn_einit(_okno,'','btnPODZ','state=grayed')
      ?}
   ?};
   {? exec('be_id_edokum1','obiegi')
   || EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'ID')
   || EDOKUM.web_efld_init(_okno,,'mark=0, enable=1, editable=0',EDOKUM,'ID')
   ?};
   {? typobi=2
   || {? ETYPY.CZY_ZALP='T' & ETYPY.ETYPZAL
      || {? ETYPY.CZY_PRAC
         || EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',OBIEGI,'OSOBAOBI')
         || EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=0',OBIEGI,'OSOBAOBI')
         ?};
         EDOKUM.web_efld_init(_okno,,'mark=1',EDOKUM,'TP')
      || {? ETYPY.CZY_PRAC
         || EDOKUM.web_efld_init(_okno,,'mark=0, enable=1, editable=1',OBIEGI,'OSOBAOBI')
         || EDOKUM.web_efld_init(_okno,,'mark=0, enable=1, editable=0',OBIEGI,'OSOBAOBI')
         ?};
         EDOKUM.web_efld_init(_okno,,'mark=0',EDOKUM,'TP')
      ?};
      {? ETYPY.CZY_DOPE='N'
      || EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'DOP')
      || EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'DOP')
      ?};
      {? ETYPY.CZY_WAR | (ETYPY.CZY_ZALP='T' & ETYPY.ETYPZAL & ETYPY.ETYPZAL().ED_WAL='T')
      || EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1, win_dict=DICTWSWT',EDOKUM,'WAL')
      || EDOKUM.web_efld_init(_okno,,'mark=0, enable=1, editable=0',EDOKUM,'WAL')
      ?};
      {? ETYPY.CZY_DATY=0
      || EDOKUM.web_efld_init(_okno,,'enable=0',EDOKUM,'DATA_OD');
         EDOKUM.web_efld_init(_okno,,'enable=0',EDOKUM,'DATA_DO');
         EDOKUM.web_efld_init(_okno,,'enable=0',EDOKUM,'GODZ_OD');
         EDOKUM.web_efld_init(_okno,,'enable=0',EDOKUM,'GODZ_DO')
      |? ETYPY.CZY_DATY=1
      || EDOKUM.web_efld_init(_okno,,'enable=1, editable=1',EDOKUM,'DATA_OD');
         EDOKUM.web_efld_init(_okno,,'enable=1, editable=1',EDOKUM,'DATA_DO');
         EDOKUM.web_efld_init(_okno,,'enable=0',EDOKUM,'GODZ_OD');
         EDOKUM.web_efld_init(_okno,,'enable=0',EDOKUM,'GODZ_DO')
      || EDOKUM.web_efld_init(_okno,,'enable=1, editable=1',EDOKUM,'DATA_OD');
         EDOKUM.web_efld_init(_okno,,'enable=1, editable=1',EDOKUM,'DATA_DO');
         EDOKUM.web_efld_init(_okno,,'enable=1, editable=1',EDOKUM,'GODZ_OD');
         EDOKUM.web_efld_init(_okno,,'enable=1, editable=1',EDOKUM,'GODZ_DO')
      ?};
      {? (ETYPY.CZY_WAR=2 | ETYPY.CZY_WAR=3) & ~(ETYPY.CZY_ZALP='T' & ETYPY.ETYPZAL)
      || EDOKUM.web_efld_init(_okno,,'enable=1, editable=1',EDOKUM,'NETTO')
      || EDOKUM.web_efld_init(_okno,,'enable=0',EDOKUM,'NETTO')
      ?};
      {? ETYPY.CZY_ZALP='T' & ETYPY.ETYPZAL
      || EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'WART')
      |? ETYPY.CZY_WAR=1 | ETYPY.CZY_WAR=3
      || EDOKUM.web_efld_init(_okno,,'mark=0, enable=1, editable=1',EDOKUM,'WART')
      || EDOKUM.web_efld_init(_okno,,'mark=0, enable=0, editable=0',EDOKUM,'WART')
      ?};
      {? ETYPY.CZY_ZALP='T' & ETYPY.ETYPZAL
      || EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'KASPRZEL');
         {? EDOKUM.KASPRZEL='P' & EDOKUM.DOSTAWCA
         || EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'N')
         || EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'N')
         ?};
         EDOKUM.web_efld_init(_okno,,'enable=1, editable=1',EDOKUM,'PLACE');
         EDOKUM.web_efld_init(_okno,,'enable=1, editable=1',EDOKUM,'POTRODDN')
      || EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'KASPRZEL');
         EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'N');
         EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'PLACE');
         EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'POTRODDN')
      ?};
      {? ETYPY.DEKR='N'
      || EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'ODD');
         EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'DATDOK');
         EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'REJ');
         EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'NREJ')
      || EDOKUM.web_efld_init(_okno,,'mark=0, enable=1, editable=1',EDOKUM,'ODD');
         EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'DATDOK');
         EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'REJ');
         EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'NREJ')
      ?}
   |? typobi=3
   || {? ETYPY.CZY_PRAC
      || EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'DOSTAWCA')
      || EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=0',EDOKUM,'DOSTAWCA')
      ?};
      {? ETYPY.CZY_DATY
      || {? ETYPY.CZY_DATY=2
         || EDOKUM.web_efld_init(_okno,,'editable=1, enable=1, mark=1',EDOKUM,'DATA_OD');
            EDOKUM.web_efld_init(_okno,,'editable=1, enable=1, mark=1',EDOKUM,'DATA_DO')
         |? ETYPY.CZY_DATY=1
         || EDOKUM.web_efld_init(_okno,,'editable=1, enable=1, mark=0',EDOKUM,'DATA_OD');
            EDOKUM.web_efld_init(_okno,,'editable=1, enable=1, mark=0',EDOKUM,'DATA_DO')
         ?}
      || EDOKUM.web_efld_init(_okno,,'enable=0, mark=0',EDOKUM,'DATA_OD');
         EDOKUM.web_efld_init(_okno,,'enable=0, mark=0',EDOKUM,'DATA_DO')
      ?};
      {? ETYPY.CZY_GODR
      || {? ETYPY.CZY_GODR=2
         || EDOKUM.web_efld_init(_okno,,'editable=1, enable=1, mark=1',EDOKUM,'GODZ_OD')
         |? ETYPY.CZY_GODR=1
         || EDOKUM.web_efld_init(_okno,,'editable=1, enable=1, mark=0',EDOKUM,'GODZ_OD')
         ?}
      || EDOKUM.web_efld_init(_okno,,'enable=0, mark=0',EDOKUM,'GODZ_OD')
      ?};
      {? ETYPY.CZY_GODZ
      || {? ETYPY.CZY_GODZ=2
         || EDOKUM.web_efld_init(_okno,,'editable=1, enable=1, mark=1',EDOKUM,'GODZ_DO')
         |? ETYPY.CZY_GODZ=1
         || EDOKUM.web_efld_init(_okno,,'editable=1, enable=1, mark=0',EDOKUM,'GODZ_DO')
         ?}
      || EDOKUM.web_efld_init(_okno,,'enable=0, mark=0',EDOKUM,'GODZ_DO')
      ?};
      {? ETYPY.DEL_ZAGR
      || EDOKUM.web_efld_init(_okno,,'editable=1, enable=1, mark=0',EDOKUM,'GRAN_DAT');
         EDOKUM.web_efld_init(_okno,,'editable=1, enable=1, mark=0',EDOKUM,'GRAN_GDZ');
         EDOKUM.web_efld_init(_okno,,'editable=1, enable=1, mark=0',EDOKUM,'GRAN_DPW');
         EDOKUM.web_efld_init(_okno,,'editable=1, enable=1, mark=0',EDOKUM,'GRAN_GPW')
      || EDOKUM.web_efld_init(_okno,,'enable=0, mark=0',EDOKUM,'GRAN_DAT');
         EDOKUM.web_efld_init(_okno,,'enable=0, mark=0',EDOKUM,'GRAN_GDZ');
         EDOKUM.web_efld_init(_okno,,'enable=0, mark=0',EDOKUM,'GRAN_DPW');
         EDOKUM.web_efld_init(_okno,,'enable=0, mark=0',EDOKUM,'GRAN_GPW')
      ?};
      {? ETYPY.DEKR='N'
      || EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'ODD');
         EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'DATDOK');
         EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'REJ');
         EDOKUM.web_efld_init(_okno,,'mark=0, enable=0',EDOKUM,'NREJ')
      || {? +app_info('web_sesid')
         || _parses:=__PARSES.getVal('JednostkaKsięgowa');
            {? _parses.ODD_ZAK = 'J'
            || EDOKUM.web_efld_init(_okno,,'mark=0, enable=1, editable=0',EDOKUM,'ODD')
            || EDOKUM.web_efld_init(_okno,,'mark=0, enable=1, editable=1',EDOKUM,'ODD')
            ?}
         ?};
         EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'DATDOK');
         EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'REJ');
         EDOKUM.web_efld_init(_okno,,'mark=1, enable=1, editable=1',EDOKUM,'NREJ')
      ?};
      exec('del_etat','obiegi')
   ?};
   {? typobi=2 | typobi=3
   || {? ETYPY.CZY_KH
      || EDOKUM.web_efld_init(_okno,,'enable=1, editable=1',SKID,'SL_KH');
         web_global_params_set(exec('obj_ntab_set','#array',web_global_params_get(),'ed_kh_ed',1))
      || EDOKUM.web_efld_init(_okno,,'enable=0',SKID,'SL_KH');
         web_global_params_set(exec('obj_ntab_set','#array',web_global_params_get(),'ed_kh_ed',0))
      ?};
      {? ETYPY.CZY_KH & +SKID.SL_KH
      || EDOKUM.web_efld_init(_okno,,'enable=1, editable=1',SKID,'NIP')
      || EDOKUM.web_efld_init(_okno,,'enable=0',SKID,'NIP')
      ?};
      {? +SKID.SL_KH & ETYPY.CZY_KH
      || SLU.cntx_psh(); SLU.index('NAZ'); SLU.prefix();
         {? SLU.find_key(SKID.SL_KH) & (SLU.NAZ=SKID.SL_KH)
         || EDOKUM.web_efld_init(_okno,,'enable=1, editable=1, win_dict=DICTWSWT',EDOKUM,'KH')
         || EDOKUM.web_efld_init(_okno,,'enable=0',EDOKUM,'KH')
         ?};
         SLU.cntx_pop()
      || EDOKUM.web_efld_init(_okno,,'enable=0',EDOKUM,'KH')
      ?}
   ?}
?}


\us_dob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Usuwanie dokumentow w obiegu
::   WE: [_a] - 0 usuwanie bez powiadamień użytkownika, 1 (domyślnie) włączone powiadomienia
::       [_b] - podczytac rekord? [1]-tak 0-nie
::  OLD: \us_dob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? var_pres('_b') <=0 || _b:=1 ?};
_size:=EDOKUM.sel_size();
_refb:=EDOKUM.ref();
_refn:=null;
{? ~_size
|| {? EDOKUM.f_active()
   || EDOKUM.f_rfresh();
      {? EDOKUM.f_next()
      || _refn:=EDOKUM.ref()
      || {? EDOKUM.f_prev()
         || _refn:=EDOKUM.ref()
         ?}
      ?};
      EDOKUM.f_seek(_refb)
   ?}
?};
{? _size | _b=0 | EDOKUM.f_get()
|| {? EDOKUM.r_lock(1,1,1)
   || OBIEGI.EDOKOS();
      _dalej:=EDOKUM.AUTOMAT=2 | EDOKUM.ZAM='T' | exec('us_dob_spr','obiegi2');
      _co:={? typobi=1
           || 'Usunąć fakturę w obiegu?'@
           |? typobi=2
           || 'Usunąć wniosek w obiegu?'@
           |? typobi=3
           || 'Usunąć delegację w obiegu?'@
           ?};
      {? _dalej & (_size | {? _a || _dalej:=FUN.ask(_co) || 1 ?})
      || {? EDOKUM.EDOKUM & ~EDOKUM.sel_size()
         || {? _a
            || _dalej:=ask('Z fakturą: %1, związany jest dokument elektroniczny.\n'
                           'Usunięcie faktury w obiegu spowoduje usunięcie dokumentu elektronicznego.\n'
                           'Usunąć fakturę w obiegu z dokumentem elektronicznym czy \n'
                           'zapisać dokument elektroniczny przed usunięciem faktury w obiegu?'@[EDOKUM.SYM],
                           'Uwaga!'@,0,'Rezygnacja'@,'Usunąć dokument elektroniczny'@,
                           'Zapisać dokument elektroniczny'@)
            || _dalej:=1
            ?};
            {? _dalej=2 || _dalej:=exec('pobierz','obiegi') ?}
         ?};
         {? _dalej || exec('us_dob1','obiegi') ?}
      ?};
      unlock_r()
   || {? ~_size || exec('err_kom','obiegi') ?}
   ?}
|? ~_size
|| exec('errnodok','obiegi')
?};
{? ~_size
|| {? EDOKUM.f_active()
   || EDOKUM.f_rfresh();
      {? ~EDOKUM.f_seek(_refb)
      || {? _refn<>null || EDOKUM.f_seek(_refn) ?}
      ?}
   ?}
?};
_dalej


\us_dob_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Usuwanie dokumentów w obiegu - webterm
::   WE: _a - 2 - wnioski
::            3 - delegacje
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUMW.get()
|| EDOKUM.use('skid_v'+(EDOKUMW.name()+2));
   EDOKUM.prefix(); EDOKUMW.EDOKUM();
   {? _a=2
   || exec('env_edokum','obiegi','WW',0,1)
   || exec('env_edokum','obiegi','WD',0,1)
   ?};
   {? exec('us_dob_spr','obiegi2')
   || {? _a=2
      || _us:="{? _a
               || exec('env_edokum_get','obiegi');
                  _params:=exec('mp_run_a','#b__box');
                  _params.ACT_UID:='OBE_FAW_DARP';
                  _params.AKCJA:='Usuń';
                  _params.UIDREF:=EDOKUM.uidref();
                  _params.WT_SKIP:=1;
                  _params.CONTEXT:=obj_new('EDOKUM');
                  _params.CONTEXT.EDOKUM:=EDOKUM.ref();
                  exec('mp_run','#b__box',_params);
                  EDOKUMW.web_refresh('WPRGW','WPR')
               ?}";
         web_ask(_us,'Usunąć wniosek w obiegu?'@,FUN.TYT)
      || _us:="{? _a
               || exec('env_edokum_get','obiegi');
                  _params:=exec('mp_run_a','#b__box');
                  _params.ACT_UID:='OBE_FDL_DBRP';
                  _params.AKCJA:='Usuń';
                  _params.UIDREF:=EDOKUM.uidref();
                  _params.WT_SKIP:=1;
                  _params.CONTEXT:=obj_new('EDOKUM');
                  _params.CONTEXT.EDOKUM:=EDOKUM.ref();
                  exec('mp_run','#b__box',_params);
                  EDOKUMW.web_refresh('WPRGD','WPR')
               ?}";
         web_ask(_us,'Usunąć delegację w obiegu?'@,FUN.TYT)
      ?}
   ?}
|| exec('errnodok','obiegi');
   {? _a=2
   || exec('dob_refresh','obiegi','W','W')
   || exec('dob_refresh','obiegi','W','D')
   ?}
?}


\spr_czy_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdza, czy dokument można edytować
::   WE: _a - 'W' - podczas wprowadzania
::            'D' - podczas dekretacji
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
EDOKOS.cntx_psh(); EDOKOS.use('skid_y'+(EDOKUM.name()+2));
{? EDOKUM.WYCOF_DO<>''
|| EDOKOS.index('SZUK5');
   EDOKOS.prefix(EDOKUM.ref(),_a,'T');
   _zwrot:=EDOKOS.first()
|| EDOKOS.index('SZUK8');
   EDOKOS.prefix(EDOKUM.ref(),_a,'N','T');
   _zwrot:=EDOKOS.first();
   {? ~_zwrot
   || EDOKOS.prefix(EDOKUM.ref(),_a,'O','T'); _zwrot:=EDOKOS.first()
   ?}
?};
EDOKOS.cntx_pop();
_zwrot


\us_dob1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Usuwanie dokumentow w obiegu - wewnętrzna
::----------------------------------------------------------------------------------------------------------------------
do();
EDOKUMW.index('UNIK1'); EDOKUMW.prefix(EDOKUM.ref());
{? EDOKUMW.first() || {! |? EDOKUMW.del() !} ?};
EDOKPAR.index('UNIK'); EDOKPAR.prefix(EDOKUM.ref());
{? EDOKPAR.first() || {! |? EDOKPAR.del() !} ?};
EDOKUSER.index('UNIK'); EDOKUSER.prefix(EDOKUM.ref());
{? EDOKUSER.first() || {! |? EDOKUSER.del() !} ?};
EVAT.index('EDOKUM'); EVAT.prefix(EDOKUM.ref());
{? EVAT.first() || {! |? EVAT.del() !} ?};
EPODZ.index('EDOKUM'); EPODZ.prefix(EDOKUM.ref());
{? EPODZ.first() || {! |? EPODZ.del() !} ?};
EDOKUMPR.index('DISP'); EDOKUMPR.prefix(EDOKUM.ref());
{? EDOKUMPR.first() || {! |? EDOKUMPR.del() !} ?};
EDOKOS.index('EDOKUM'); EDOKOS.prefix(EDOKUM.ref());
{? EDOKOS.first() || {! |? EDOKOS.del() !} ?};
EDOKGR.index('UNIK'); EDOKGR.prefix(EDOKUM.ref());
{? EDOKGR.first() || {! |? EDOKGR.del() !} ?};
EDOKLOG.index('DISP'); EDOKLOG.prefix(EDOKUM.ref());
{? EDOKLOG.first() || {! |? EDOKLOG.del() !} ?};
EDOKUMZ.index('DISP'); EDOKUMZ.prefix(EDOKUM.ref());
{? EDOKUMZ.first()
|| EDOKUMZS.index('EDOKUMZ');
   {!
   |? EDOKUMZS.prefix(EDOKUMZ.ref());
      {? EDOKUMZS.first() || {! |? EDOKUMZS.del !} ?};
      EDOKUMZ.del()
   !}
?};
EDOKRZAP.index('EDOKUM'); EDOKRZAP.prefix(EDOKUM.ref());
{? EDOKRZAP.first() || {! |? EDOKRZAP.del() !} ?};
POZF.cntx_psh();
POZF.use('pozf__'+(EDOKUM.name()+2));
POZF.index('EDOKUM'); POZF.prefix(EDOKUM.ref());
{? POZF.first() || {! |? POZF.del() !} ?};
POZF.cntx_pop();
exec('open_edk_atr','obiegi',EDOKUM.ref);
EDOK_ATR.index('REKKOLED'); EDOK_ATR.prefix(EDOKUM.ref());
{? EDOK_ATR.first() || {! |? EDOK_ATR.del() !} ?};
EDOK_ATK.cntx_psh();
EDOK_ATK.use('edoknt'+(EDOKUM.name()+2));
EDOK_ATK.index('EDOKUM'); EDOK_ATK.prefix(EDOKUM.ref());
{? EDOK_ATK.first() || {! |? EDOK_ATK.del !} ?};
EDOK_ATK.cntx_pop();
EDOKPAR.cntx_psh();
EDOKPAR.use('skidh___');
EDOKPAR.index('UNIK'); EDOKPAR.prefix(EDOKUM.ref());
{? EDOKPAR.first() || {! |? EDOKPAR.del !} ?};
EDOKPAR.cntx_pop();
exec('bl_dokum_unlink','dokum_zal',$EDOKUM.ref());
{? EDOKUM.DOKUM<>''
|| DOKUM.cntx_psh(); DOKUM.prefix();
   _ref:=BB.sqlint(EDOKUM.DOKUM); _nam:=form(EDOKUM.DOKUM-8);
   {? _ref<>0 & _nam<>'' & DOKUM.seek(_ref,_nam)
   || DOKUM.EDOKUMR:=DOKUM.OBKONETP:=DOKUM.REFSQL:='';
      DOKUM.put()
   ?};
   DOKUM.cntx_pop()
?};
_co:='';
{? typobi=3
|| EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref);
   {? EDOKUMP.first() || {! |? EDOKUMP.del() !} ?};
   EDOKUMD.index('DELEG'); EDOKUMD.prefix(EDOKUM.ref);
   {? EDOKUMD.first() || {! |? EDOKUMD.del() !} ?};
   EDOK_ZAL.index('WAL'); EDOK_ZAL.prefix(EDOKUM.ref);
   {? EDOK_ZAL.first()
   || {! |?
         EDOKUMZ.cntx_psh(); EVAT.cntx_psh();
         EDOKUM.cntx_psh(); EDOKUM.prefix();
         EDOKUMZ.index('WYDATEK'); EDOKUMZ.prefix(EDOK_ZAL.ref());
         EDOKOS.cntx_psh(); EDOKOS.index('EDOKUM');
         {? EDOKUMZ.first()
         || {! |?
               _delr:=EDOKUMZ.del(,1);
               {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
            !}
         ?};
         EDOKUMZ.cntx_pop(); EVAT.cntx_pop(); EDOKUM.cntx_pop(); EDOKOS.cntx_pop();
         _delr:=EDOK_ZAL.del(,1);
         {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
      !}
   ?}
?};
{? EDOKUM.DOK_POW<>''
|| {? (5+(EDOKUM.DOK_POW+16))='zdnag'
   || ZD_NAG.cntx_psh();
      {? ZD_NAG.seek(EDOKUM.DOK_POW,ref_name(EDOKUM.DOK_POW),1,1)
      || ZD_NAG.OBI_POW:='';
         {? ~ZD_NAG.put() || undo() ?}
      ?};
      ZD_NAG.cntx_pop()
   |? (5+(EDOKUM.DOK_POW+16))='zknag'
   || ZK_N.cntx_psh();
      {? ZK_N.seek(EDOKUM.DOK_POW,ref_name(EDOKUM.DOK_POW),1,1)
      || ZK_N.OBI_POW:='';
         {? ~ZK_N.put() || undo() ?}
      ?};
      ZK_N.cntx_pop()
   |? 8+(EDOKUM.DOK_POW+16)='skan_dok'
   || SKAN_DOK.cntx_psh();
      SKAN_DOK.prefix();
      {? SKAN_DOK.seek(EDOKUM.DOK_POW)
      || SKAN_DOK.STATUS:='D';
         SKAN_DOK.put()
      ?};
      SKAN_DOK.cntx_pop()
   |? 5+(EDOKUM.DOK_POW+16)='faktu'
   || FAKS.cntx_psh(); FAKS.index('FAK_SYM1'); FAKS.prefix();
      {? FAKS.seek(EDOKUM.DOK_POW,ref_name(EDOKUM.DOK_POW),1,1)
      || FAKS.OBI_POW:='';
         {? ~FAKS.put() || undo() ?}
      ?};
      FAKS.cntx_pop()
   |? (8+(EDOKUM.DOK_POW+16)*'webdok')>0
   || WEB_DOK.cntx_psh();
      _names:=WEB_DOK.names();
      _fnd:=0;
      {? _names.first()
      || {!
         |? WEB_DOK.use(_names.NAME);
            WEB_DOK.prefix();
            {? WEB_DOK.seek(EDOKUM.DOK_POW,ref_name(EDOKUM.DOK_POW),1,1)
            || {? WEB_DOK.MODYF=1
               || WEB_DOK.STATUS:='zmodyfikowany'
               || WEB_DOK.STATUS:='dodany'
               ?};
               _fnd:=1;
               WEB_DOK.ARH:='N'; WEB_DOK.UTW_DOK:='';
               {? ~WEB_DOK.put() || undo() ?}
            ?};
            _fnd=0 & _names.next()
         !}
      ?};
      WEB_DOK.cntx_pop()
   ?}
?};
_typ:=EDOKUM.TYP; _nr:=EDOKUM.NR;
{? EDOKUM.del(,1)
|| exec('del_numer','obiegi',_nr,_typ)
|| undo()
?};
end();
{? ~EDOKUM.size() || SKID.SUMNETTO:=SKID.SUMVAT:=SKID.SUMBRUT:=0 ?};
{? var_pres('ile_us')>0 || ile_us+=1 ?}


\spr_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Sprawdzanie parametrow przy wprowadzaniu dokumentu
::   WE: [_a] - miejsce sprawdzenia: dołacz, popraw
::  OLD: \spr_dok/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=''; EDOKUM.TYP();
{? var_pres('DOK_VAT',ETYPY)>0 || _fvat:=ETYPY.DOK_VAT || _fvat:='N' ?};
{? app_info('web_sesid')<>'' || exec('czytaj','#stalesys') ?};
{? typobi=2 & EDOKUM.DOP=date(0,0,0) & ETYPY.CZY_DOPE='N'
|| EDOKUM.DOP:=date();
   {? EDOKUM.DO=date(0,0,0) || EDOKUM.DO:=EDOKUM.DOP ?};
   EDOKUM.DW:=EDOKUM.DOP;
   {? app_info('web_sesid')='' || win_disp() ?}
?};
{? EDOKUM.DOP<>date(0,0,0) || exec('szuk_okr','okresy',EDOKUM.DOP) ?};
{? EDOKUM.ODD=null & typobi=1
|| FUN.info('Nie wybrano jednostki księgowej.'@); _zwrot:='ODD'
?};
{? _zwrot='' & EDOKUM.TYP=null
|| FUN.info('Nie wybrano typu.'@); _zwrot:='TYP'
?};
::{? _zwrot='' & EDOKUM.TYP().GRP_DOC<>null & ~exec('has_grp_perm','obiegi2',EDOKUM.TYP().GRP_DOC().N,{? typobi=1 || 'OBG_FZO_DARK' |? typobi=2 || 'OBE_FAW_DARP' |? typobi=3 || 'OBE_FDL_DBRP' ?})
::|| FUN.info('Brak uprawnienia do grupy '+EDOKUM.TYP().GRP_DOC().N+' dokumentów w obiegu'@); _zwrot:='ID'
::?};
{? _zwrot='' & ~exec('pr_sym','obiegi')
|| _zwrot:='SYM'
?};
{? _zwrot='' & EDOKUM.ID=''
|| FUN.info('Nie uzupełniono pola Identyfikator.'@); _zwrot:='ID'
?};
{? _zwrot='' & typobi=1 & EDOKUM.SYM=''
|| FUN.info('Nie wprowadzono symbolu dokumentu.'@); _zwrot:='SYM'
?};
{? _zwrot='' & typobi=1 & EDOKUM.KOREKTA='T' & EDOKUM.SYM_KOR=''
|| FUN.info('Nie wprowadzono symbolu dokumentu korygowanego.'@); _zwrot:='SYM_KOR'
?};
{? _zwrot='' & typobi=1 & EDOKUM.TYP().W_PORTAL='S' & ~EDOKUM.DOSTAWCA
|| FUN.info('Nie podano osoby dostarczającej faktury.'@); _zwrot:='OSOBAOBI'
?};
{? _zwrot='' & typobi<>2 & EDOKUM.DOP=date(0,0,0)
|| {? typobi=3
   || FUN.info('Nie wprowadzono daty rozliczenia delegacji.'@)
   || FUN.info('Nie wprowadzono daty operacji.'@)
   ?};
   _zwrot:='DOP'
?};
{? _zwrot='' & typobi=2 & EDOKUM.DOP=date(0,0,0) & ETYPY.CZY_DOPE<>'N'
|| FUN.info('Nie wprowadzono daty operacji.'@);
   _zwrot:='DOP'
?};
{? _zwrot='' & ETYPY.DEKR='T' & typobi<>1 &
   (exec('dat_not','dok_fks',EDOKUM.DOP,{? SSTALE.AR || SSTALE.AR || EDOKUM.ROK_F ?}); ROZNE.UT_OKROD=null)
|| {? ETYPY.CZY_DOPE='N'
   || FUN.info('Brak możliwości zmiany daty operacji dla wybranego typu.\n'+
               'Nie znaleziono w systemie okresu obrachunkowego dla daty operacji: %1'@[form(EDOKUM.DOP)]);
      _zwrot:='TYP'
   || {? typobi=3
      || FUN.info('Nie znaleziono w systemie okresu obrachunkowego dla podanej daty rozliczenia delegacji.'@)
      || FUN.info('Nie znaleziono w systemie okresu obrachunkowego dla podanej daty operacji.'@)
      ?};
      _zwrot:='DOP'
   ?}
?};
{? _zwrot='' &
   (
      (typobi=2 & ((ETYPY.DEKR='T' & ETYPY.CZY_KH) | EDOKUM.DOKUM<>'') & EDOKUM.KH=null) |
      typobi=1 & ETYPY.W_PORTAL='S' & EDOKUM.KH=null
   )
|| FUN.info('Nie wskazano kontrahenta.'@);
   {? SKID.SL_KH='' || _zwrot:='SL_KH' || _zwrot:='KH' ?}
?};
{? _zwrot='' & ETYPY.DEKR='T' & ROZNE.UT_OKROD().ZAM='T'
|| {? ETYPY.CZY_DOPE='N'
   || FUN.info('Brak możliwości zmiany daty operacji dla wybranego typu.\n'+
               'Okres obrachunkowy dla daty operacji: %1 jest zamknięty.'@[form(EDOKUM.DOP)]);
      _zwrot:='TYP'
   || {? typobi=3
      || FUN.info('Okres obrachunkowy dla podanej daty rozliczania delegacji jest zamknięty.'@);
         _zwrot:='DOP'
      |? typobi=2
      || FUN.info('Okres obrachunkowy dla podanej daty operacji jest zamknięty.'@);
         _zwrot:='DOP'
      ?}
   ?}
?};
{? _zwrot='' & typobi=1 & EDOKUM.DW=date(0,0,0)
|| FUN.info('Nie wprowadzono daty wystawienia dokumentu.'@); _zwrot:='DW'
?};
{? _zwrot='' & typobi=1 & EDOKUM.DO<>date(0,0,0) & EDOKUM.DO<EDOKUM.DW
|| FUN.info('Data otrzymania nie może być wcześniejsza niż data wystawienia dokumentu.'@);
   _zwrot:='DO'
?};
{? _zwrot='' & typobi=3 & EDOKUM.DW<>date(0,0,0) & EDOKUM.DW>EDOKUM.DATA_OD
|| FUN.info('Data polecenia wyjazdu nie może być późniejsza niż data początkowa delegacji.'@); _zwrot:='DW'
?};
{? _zwrot='' & typobi=3 & ~exec('dat_not','dok_fks',EDOKUM.DW,{? SSTALE.AR || SSTALE.AR || EDOKUM.ROK_F ?})
|| FUN.info('Data polecenia wyjazdu musi być z wybranego roku bilansowego.'@); _zwrot:='DW'
?};
{? _zwrot='' & EDOKUM.WAL=null &
   ((typobi=1 & ETYPY.OBIEGKON=1) |
    (typobi=2 & (ETYPY.CZY_WAR | (ETYPY.CZY_ZALP='T' & ETYPY.ETYPZAL & ETYPY.ETYPZAL().ED_WAL='T')))
    )
|| FUN.info('Nie wybrano waluty.'@); _zwrot:='WAL'
?};
{? _zwrot='' & typobi=1 & EDOKUM.NETTO$2=0 & ETYPY.OBIEGKON=1 &
   (EDOKUM.WAL<>FINFO.NAROD & _fvat='N') & ~EDOKUM.TYP().TYPVATPR
|| FUN.info('Nie wprowadzono wartości netto.'@); _zwrot:='NETTO'
?};
{? _zwrot='' & typobi=1 & EDOKUM.WART$2=0 & ETYPY.OBIEGKON=1 &
   (EDOKUM.WAL<>FINFO.NAROD & _fvat='N' | (EDOKUM.WAL=FINFO.NAROD & ETYPY.TYPVATPR))
|| FUN.info('Nie wprowadzono wartości brutto.'@); _zwrot:='WART'
?};
{? _zwrot='' & typobi=3 & EDOKUM.DOSTAWCA=null
|| FUN.info('Nie wprowadzono delegowanego.'@); _zwrot:='DOSTAWCA'
?};
{? _zwrot='' & typobi=3 & ETYPY.CZY_DATY=2 & EDOKUM.DATA_OD=date(0,0,0)
|| FUN.info('Nie wprowadzono daty początkowej.'@); _zwrot:='DATA_OD'
?};
{? _zwrot='' & typobi=3 & ETYPY.CZY_DATY=2 & EDOKUM.DATA_DO=date(0,0,0)
|| FUN.info('Nie wprowadzono daty końcowej.'@); _zwrot:='DATA_DO'
?};
{? _zwrot='' & typobi=3 & ETYPY.CZY_GODR=2 & EDOKUM.GODZ_OD=time(0,0,0)
|| FUN.info('Nie wprowadzono godziny początkowej.'@); _zwrot:='GODZ_OD'
?};
{? _zwrot='' & typobi=3 & ETYPY.CZY_GODZ=2 & EDOKUM.GODZ_DO=time(0,0,0)
|| FUN.info('Nie wprowadzono godziny końcowej.'@); _zwrot:='GODZ_DO'
?};
{? _zwrot='' & (typobi=2 | typobi=3) & EDOKUM.DATA_OD<>date(0,0,0) & EDOKUM.DATA_DO<>date(0,0,0) &
   EDOKUM.DATA_OD>EDOKUM.DATA_DO
|| {? typobi=2
   || FUN.info('Data początkowa nie może być późniejsza niż data końcowa.'@)
   || FUN.info('Wprowadzona data rozpoczęcia delegacji "Od dnia"  nie może być późniejsza '@+
               'niż data zakończenia delegacji "Do dnia".'@)
   ?}; _zwrot:='DATA_OD'
?};
{? _zwrot='' & (typobi=2 | typobi=3) & EDOKUM.GODZ_DO<>time(0,0,0) & EDOKUM.GODZ_OD<>time(0,0,0) &
   EDOKUM.DATA_OD=EDOKUM.DATA_DO & EDOKUM.GODZ_OD>EDOKUM.GODZ_DO & ETYPY.CZY_GODR
|| FUN.info('Godzina rozpoczęcia nie może być późniejsza niż godzina zakończenia.'@); _zwrot:='GODZ_OD'
?};
{? _zwrot='' & typobi=2
|| {? ETYPY.CZY_ZALP='T' & ETYPY.ETYPZAL
   || ETYPY.ETYPZAL();
      {? _zwrot='' & EDOKUM.DOSTAWCA=null
      || FUN.info('Nie wybrano osoby, dla której tworzony jest wniosek typu zaliczka.'@); _zwrot:='OSOBAOBI'
      ?};
      {? _zwrot='' & EDOKUM.KASPRZEL='P' & EDOKUM.N=''
      || FUN.info('Nie wybrano rachunku bankowego pracownika.'@); _zwrot:='N'
      ?};
      {? _zwrot='' & EDOKUM.KASPRZEL='P' & exec('wni_ae_ezaln','zaliczki')=0
      || _zwrot:='N'
      ?};
      {? _zwrot='' & EDOKUM.WART$2<=0
      || FUN.info('Kwota brutto zaliczki musi być większa od zera.'@); _zwrot:='WART'
      ?};
      {? _zwrot='' || _zwrot:=exec('wni_sprdatwyn','zaliczki') ?}
   ?}
?};
{? _zwrot='' & typobi=2 & EDOKUM.TR=''
|| FUN.info('Nie wprowadzono tematu wniosku.'@); _zwrot:='TR'
?};
{? _zwrot='' & typobi=2 & EDOKUM.PAPERLES & EDOKUM.REFPRAC=''
|| FUN.info('Nie wybrano pracownika dla wniosku.'@); _zwrot:='PRAC'
?};
{? _zwrot='' & typobi=3 & XINFO.CZY_CEL & EDOKUM.DEL_CEL=null
|| FUN.info('Nie wybrano celu delegacji (ze słownika celów).'@); _zwrot:='DEL_CEL'
?};
{? _zwrot='' & typobi=3 & EDOKUM.DEL_MIE=''
|| FUN.info('Nie wprowadzono miejsca delegacji.'@); _zwrot:='DEL_MIE'
?};
{? _zwrot='' & typobi=1 & EDOKUM.TP=date(0,0,0)
|| FUN.info('Nie wprowadzono terminu płatności.'@);
   _zwrot:='TP'
?};
{? _zwrot='' & typobi=1 & PAR_SKID.get(38)='N' & EDOKUM.TP<EDOKUM.DW
|| FUN.info('Termin płatności nie może być wcześniejszy od daty dokumentu.'@);
   _zwrot:='TP'
?};
{? _zwrot='' & EDOKUM.DOKUM<>''
|| {? ~kh_ask
   || _dokum_kh:=exec('FindAndGet','#table',DOKUM,EDOKUM.DOKUM,,"(@.DOKUM.KH().KOD)",'');
      _dokum_kh_fn:=exec('FindAndGet','#table',DOKUM,EDOKUM.DOKUM,,"(@.DOKUM.KH().NAZ_P)",'');
      {? _dokum_kh<>'' & _dokum_kh<>EDOKUM.KH().KOD
      || {? FUN.ask('Wybrany kontrahent jest inny niż w powiązanym kontakcie (%1).\nCzy na pewno chcesz zmienić kontrahenta?'@[_dokum_kh_fn])
         || kh_ask:=1
         || _zwrot:={? typobi=1 || 'KH_FULL' || 'KH' ?}
         ?}
      ?}
   ?}
?};
{? _zwrot='' & typobi=3
|| {? EDOKUM.DATA_OD<>date(0,0,0) & EDOKUM.DATA_DO<>date(0,0,0)
   || _od:=EDOKUM.DATA_OD;
      _do:=EDOKUM.DATA_DO
   |? EDOKUM.DATA_OD<>date(0,0,0) & EDOKUM.DATA_DO=date(0,0,0)
   || _od:=_do:=EDOKUM.DATA_OD
   |? EDOKUM.DATA_OD=date(0,0,0) & EDOKUM.DATA_DO<>date(0,0,0)
   || _od:=_do:=EDOKUM.DATA_DO
   || _od:=_do:=date(0,0,0)
   ?};
   {? _od<>date(0,0,0) & _do<>date(0,0,0)
   || exec('__F_ZATR','object');
      P.cntx_psh();
      P.use('pracowni'); P.index('PRACOSOW');
      P.prefix(exec('ref_firma','ustawienia'),EDOKUM.DOSTAWCA);
      _prac:=null;
      {? P.first()
      || {? P.size()=1
         || {? exec('czy_prac','obiegi',P.ref(),_od,_do) || _prac:=P.ref() ?}
         || {! |?
               {? exec('czy_prac','obiegi',P.ref(),_od,_do) || _prac:=P.ref() ?};
               _prac=null & P.next()
            !}
         ?};
         {? _prac=null
         || FUN.info('Osoba delegowana nie jest zatrudniona w zakresie czasowym delegacji.'@);
            _zwrot:='DOSTAWCA'
         ?}
      ?};
      P.cntx_pop();
      {? _zwrot='' & _prac<>null
      || {? ~exec('czy_obecny','obiegi',_prac,_od,_do)
         || FUN.info('Osoba delegowana w podanym terminie będzie nieobecna w pracy.'@);
            _zwrot:='DATA_OD'
         ?}
      ?}
   ?}
?};
{? _zwrot='' & typobi=2 & ETYPY.CZY_ZALP='T' & ETYPY.ETYPZAL
|| ETYPY.ETYPZAL();
   _zwrot:=exec('wni_sprdatwyn','zaliczki')
?};
::{? _zwrot='' & EDOKUM.ODD=null & (typobi=2 | typobi=3)
::|| FUN.info('Nie wybrano jednostki księgowej.'@); _zwrot:='ODD'
::?};
{? typobi=1 & _zwrot='' & ~exec('dat_not','dok_fks',EDOKUM.DO,{? SSTALE.AR || SSTALE.AR || EDOKUM.ROK_F ?}) &
   ~FUN.ask('Data otrzymania nie jest z bieżącego roku bilansowego. Kontynuować?'@)
|| _zwrot:='DO'
?};
{? typobi=1 & _zwrot='' & XINFO.TER_AKT='T' & XINFO.TER_KNT='T'
|| _par:=exec('ter_sprawdz_a','teryt');
   _par.TAB:='EDOKUM';
   _par.ULI_P:='UL';
   _par.MSC_P:='MIASTO';
   _par.ULI_ND:=1;
   _wyn:=exec('ter_sprawdz','teryt',_par);
   {? _wyn.WYNIK=0 || {? EDOKUM.EDOKUM || _zwrot:='KH' || _zwrot:=_wyn.POLE ?} ?}
?};
_menu:={? app_info('web_sesid')<>''
       || _par:=web_params_get();
          {? type_of(_par)>100 & var_pres('akcja',_par)>0
          || -_par.akcja
          || ''
          ?}
       |? app_info('web_sesid')=''
       || {? var_press('_a')>0
          || _a
          |? menu_txt()='Popraw'@
          || 'popraw'
          |? menu_pth()+2='DN' | menu_pth()+2='DP' | menu_pth()+1='O' | menu_pth()+1='D'
          || 'dołącz'
          || 'popraw'
          ?}
       ?};
{? _zwrot='' & typobi=3
|| {? ETYPY.CZY_DATY>0 & EDOKUM.DATA_OD<>date(0,0,0) & ETYPY.CZY_KNTR
      & _menu='dołącz' & (date()-EDOKUM.DATA_OD>ETYPY.KNTR_DNI)
   || FUN.info('Data początkowa wcześniejsza niż bieżąca o liczbę dni większą\n niż określono dla typu delegacji (%1).'@[$ETYPY.KNTR_DNI]);
      _zwrot:='DATA_OD'
   |? ETYPY.CZY_DATY>0 & EDOKUM.DATA_OD<>date(0,0,0) & ETYPY.CZY_KNTR
      & _menu='popraw' & (EDOKUM.DATAW-EDOKUM.DATA_OD>ETYPY.KNTR_DNI)
   || FUN.info('Data początkowa wcześniejsza niż data wprowadzenia (%1) o '
      'liczbę dni większą\n niż określono dla typu delegacji (%2).'@[$EDOKUM.DATAW,$ETYPY.KNTR_DNI]);
      _zwrot:='DATA_OD'
   ?}
?};
:: kontrola nakladania sie zakresow delegacji
{? _zwrot='' & typobi=3
|| _ref_ed:=EDOKUM.ref();
   _wyn:=exec('over_period','obiegi',EDOKUM.DATA_OD,EDOKUM.GODZ_OD,EDOKUM.DATA_DO,EDOKUM.GODZ_DO,
              EDOKUM.DOSTAWCA,ETYPY.CZY_DATY,ETYPY.CZY_GODR,ETYPY.CZY_GODZ,
              1,_ref_ed,OBIEGI.TYPOBIEG,'',_menu);
   {? _wyn<>''
   || FUN.info(_wyn);
      {? ETYPY.CZY_DATY>0
      || _zwrot:='DATA_OD'
      |? ETYPY.CZY_GODR>0
      || _zwrot:='GODZ_OD'
      |? ETYPY.CZY_GODZ>0
      || _zwrot:='GODZ_DO'
      || _zwrot:='DW'
      ?}
   ?}
?};
:: kontrola dat i godzin przekroczenia granicy dla delegacji zagranicznych
{? _zwrot='' & typobi=3
|| {? ETYPY.DEL_ZAGR
   || {? EDOKUM.GRAN_DAT<>date(0,0,0) & EDOKUM.GRAN_DPW<>date(0,0,0)
      || {? EDOKUM.GRAN_DAT>EDOKUM.GRAN_DPW
         || FUN.info('Data przekroczenia granicy: data powrotu wcześniejsza od wyjazdu.'@);
            _zwrot:='GRAN_DAT'
         ?};
         {? _zwrot='' & ETYPY.CZY_DATY>0
         || {? EDOKUM.GRAN_DAT<EDOKUM.DATA_OD
            || FUN.info('Data przekroczenia granicy nie może być wcześniejsza od daty początkowej delegacji.'@);
               _zwrot:='GRAN_DAT'
            ?}
         ?};
         {? _zwrot='' & ETYPY.CZY_DATY>0
         || {? EDOKUM.GRAN_DPW>EDOKUM.DATA_DO
            || FUN.info('Data przekroczenia granicy (powrót) nie może być późniejsza od daty końcowej delegacji.'@);
               _zwrot:='GRAN_DPW'
            ?}
         ?};
         {? _zwrot=''
         || {? EDOKUM.GRAN_GDZ<>time(0,0,0) & EDOKUM.GRAN_GPW<>time(0,0,0)
            || {? EDOKUM.GRAN_DAT=EDOKUM.GRAN_DPW & EDOKUM.GRAN_GDZ>EDOKUM.GRAN_GPW
               || FUN.info('Godzina przekroczenia granicy: godzina powrotu wcześniejsza od wyjazdu.'@);
                  _zwrot:='GRAN_GDZ'
               ?}
            ?};
            {? _zwrot='' & ETYPY.CZY_DATY>0 & ETYPY.CZY_GODR>0
            || {? EDOKUM.GRAN_DAT=EDOKUM.DATA_OD & EDOKUM.GRAN_GDZ<EDOKUM.GODZ_OD
               || FUN.info('Data i godzina przekroczenia granicy (%1 %2)'
                          '\nnie może być wcześniejsza niż początek delegacji (%3 %4).'@[$EDOKUM.GRAN_DAT,$EDOKUM.GRAN_GDZ,$EDOKUM.DATA_OD,$EDOKUM.GODZ_OD]);
                  _zwrot:='GRAN_DAT'
               ?}
            ?};
            {? _zwrot='' & ETYPY.CZY_DATY>0 & ETYPY.CZY_GODZ>0
            || {? ETYPY.CZY_GODZ=0 || _tmp_gdo:=time(24,0,0) || _tmp_gdo:=EDOKUM.GODZ_DO ?};
               {? EDOKUM.GRAN_DPW=EDOKUM.DATA_DO & EDOKUM.GRAN_GPW>_tmp_gdo
               || FUN.info('Data i godzina przekroczenia granicy - powrót (%1 %2)'
                          '\nnie może być późniejsza niż koniec delegacji (%3 %4).'@[$EDOKUM.GRAN_DPW,$EDOKUM.GRAN_GPW,$EDOKUM.DATA_DO,$EDOKUM.GODZ_DO]);
                  _zwrot:='GRAN_GPW'
               ?}
            ?}
         ?}
      ?}
   |? exec('on','#mwapi')
   || {? EDOKUM.GRAN_DAT<>date(0,0,0) |
         EDOKUM.GRAN_DPW<>date(0,0,0) |
         EDOKUM.GRAN_GDZ<>time(0,0,0) |
         EDOKUM.GRAN_GPW<>time(0,0,0)
      || FUN.info('Delegacja krajowa. Wypełniono daty i/lub czasy związane z przekroczeniem granicy.'@);
         _zwrot:='GRAN_DAT'
      ?}
   ?}
?};
::Kontrola czy rachunek bankowy pasuje do kontrahenta
{? var_pres('RB',EDOKUM)>0 & _zwrot='' & EDOKUM.RB().N<>''
|| _zwrot:=exec('chkrb','obiegi2')
?};
{? _zwrot<>'' & var_pres('zawin')>0 || zawin:=0 ?};
_zwrot


\zak_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Aktywna akcja zakończ po wejściu w dowolne pozycje dokumentu
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.btn_eopt(EDOKUM.win_edit('?'),btn_idpf[5],'state=normal')


\inne_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Informacje dodatkowe z poziomu okienka redagowania dokumentu w obiegu
::   WE:  _a  - opcja - 'AF' - akceptacja faktur
::                    'PF' - przekazanie faktur
::                    'AW' - akceptacja wniosków
::                    'PW' - przekazanie wniosków
::                    'WW' - wprowadzanie wniosków
::                    'WD' - wprowadzanie delegacji
::                    'AD' - akceptacja delegacji
::                    'PD' - przekazanie delegacji
::        _b  - opcja - 1 - dla EDOKUMW
::                    2 - dla EDOKUM
::       [_c] - obsługa przez komplet danych
::       [_d] - 0/1 - podgląd (bez edycji)
::----------------------------------------------------------------------------------------------------------------------
_display:={? var_pres('_d')>0 || _d || 0 ?};
EDOK_ATK.cntx_psh(); EDOK_ATR.cntx_psh(); EDOKUM.cntx_psh();
{? app_info('web_sesid')<>''
|| _dalej:=1;
   {? _b=1 & ~EDOKUMW.get()
   || {? _a='AF' | _a='PF'
      || FUN.info('Nie znaleziono faktury.'@);
         {? _a='PF'
         || exec('dob_refresh','obiegi','P','F')
         || exec('dob_refresh','obiegi','A','F')
         ?}
      |? _a='AW' | _a='PW' | _a='WW'
      || FUN.info('Nie znaleziono wniosku.'@);
         {? _a='WW'
         || exec('dob_refresh','obiegi','W','W')
         |? _a='PW'
         || exec('dob_refresh','obiegi','P','W')
         || exec('dob_refresh','obiegi','A','W')
         ?}
      || FUN.info('Nie znaleziono delegacji.'@);
         {? _a='WD'
         || exec('dob_refresh','obiegi','W','D')
         |? _a='PD'
         || exec('dob_refresh','obiegi','P','D')
         || exec('dob_refresh','obiegi','A','D')
         ?}
      ?};
      _dalej:=0
   ?};
   {? _dalej
   || _blok:=0;
      ETYPY.cntx_psh();
      {? _b=1
      || {? EDOKUMW.TYP
         || EDOKUMW.TYP();
            ETYP_ATR.index('KOLZ'); ETYP_ATR.prefix(ETYPY.ref(),null);
            {? ~ETYP_ATR.first() || _blok:=1 ?}
         || _blok:=1
         ?}
      || {? EDOKUM.TYP
         || EDOKUM.TYP();
            ETYP_ATR.index('KOLZ'); ETYP_ATR.prefix(ETYPY.ref(),null);
            {? ~ETYP_ATR.first() || _blok:=1 ?}
         || _blok:=1
         ?}
      ?};
      ETYPY.cntx_pop();
      {? _blok
      || FUN.info('Dla wybranego typu dokumentu nie zdefiniowano schematu informacji dodatkowych.'@)
      || {? _b=1
         || EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix(); EDOKUMW.EDOKUM()
         ?};
         _dalej:=exec('env_edokum','obiegi',_a,0);
         {? _dalej
         || _get:=web_params_get();
            {? type_of(_get)>100 & var_pres('akcja',_get)>0 & (_get.akcja='dołącz' | _get.akcja='popraw')
            || {? _get.akcja='dołącz'
               || _par:=web_global_params_get();
                  {? type_of(_par)>100 & var_pres('act_ok',_par)>0 & ~_par.act_ok
                  || _pole:=params_exec('dol_dob_wt2','obiegi',0,0);
                     {? type_of(_pole)=type_of('') & _pole<>''
                     || web_top_update(0,,,_pole)
                     || EDOKUM.get()
                     ?};
                     _dalej:=(_pole='')
                  ?}
               || _pole:=params_exec('pop_dob_wt2','obiegi',0,0);
                  {? type_of(_pole)=type_of('') & _pole<>''
                  || web_top_update(0,,,_pole)
                  || EDOKUM.get()
                  ?};
                  _dalej:=(_pole='')
               ?}
            ?}
         ?};
         {? _dalej & var_pres('_c')>0 & _c
         || EDOK_ATK.index('EDOKUM'); EDOK_ATK.prefix(EDOKUM.ref());
            _gray:='';
            zakres:={? (1+_a)='W' || 1 |? (1+_a)='A' || 2 || 5 ?};
            web_params_set(exec('obj_ntab_set','#array',web_params_get(),'zakres',zakres));
            {? exec('blok_innd','obiegi') | _display || _gray:='DPUSGW:D' ?};
            _okno:='WER';
            EDOK_ATK.web_win_init(_okno,web_top_ident(),'grayed='+_gray);
            EDOKUM.web_cntx_save(1);
            EDOK_ATK.web_select(_okno)
         |? _dalej
         || EDOK_ATR.index('REKKOLED'); EDOK_ATR.prefix(EDOKUM.ref());
            _okno:={? _a='AF' | _a='PF'
                   || 'WER_WWWF'
                   |? _a='WW' | _a='PW' | _a='AW'
                   || 'WER_WWWW'
                   || 'WER_WWW'
                   ?};
            _gray:='';
            zakres:={? (1+_a)='W' || 1 |? (1+_a)='A' || 2 || 5 ?};
            web_params_set(exec('obj_ntab_set','#array',web_params_get(),'zakres',zakres));
            {? exec('blok_innd','obiegi') | _display || _gray:='DPUSGW:D' ?};
            EDOK_ATR.web_win_init(_okno,web_top_ident(),'grayed='+_gray);
            EDOKUM.web_cntx_save(1);
            EDOK_ATR.web_select(_okno)
         ?}
      ?}
   ?}
|| _dalej:=1;
    ETYP_ATR.cntx_psh(); ETYP_ATR.index('KOLZ'); ETYP_ATR.prefix(EDOKUM.TYP,null);
    {? ~ETYP_ATR.first()
    || FUN.info('Dla wybranego typu dokumentu nie zdefiniowano schematu informacji dodatkowych.'@); _dalej:=0
    ?};
    ETYP_ATR.cntx_pop();
   {? _dalej
   || exec('open_edk_atr','obiegi');
      {? exec('blok_innd','obiegi') | _display
      || _act:='DdPpUuWwGg'; _actb:='Dd'
      |? EDOKUM.TYP().ATR_ONE
      || _act:='Dd'; _actb:='Dd';
         {? EDOKUM.TYP().ATR_G1R
         || _act+='Uu'
         ?}
      || _act:=_actb:=''
      ?};
      _act:=_act+{? +_actb || ':'+_actb || _act ?};
      {? EDOKUM.TYP().W_PORTAL='S'
      || VAR_DEL.delete('objID');
         objID:=_obj:=exec('obj','obe_faw');
         _obj.ADD:=1;
         _obj.set('REKORD',1);
         _red:=exec('create_red','obe_faw',_obj,1,'R');
         _tab:=_obj.getTab('REKORD');
         _tab.win_edit(_red);
         exec('get_atr','obe_faw',_obj);
         {? _tab.edit("exec('spr_atr','obe_faw',objID)")
         || exec('set_atr','obe_faw',_obj)
         ?};
         VAR_DEL.delete('objID')
      |? var_pres('_c')>0 & _c
      || EDOK_ATK.cntx_psh();
         EDOK_ATK.index('EDOKUM'); EDOK_ATK.prefix(EDOKUM.ref());
         EDOK_ATK.win_sel('WER2');
         EDOK_ATK.actions_grayed('WER2',_act);
         EDOK_ATK.select(,,,_act);
         EDOK_ATK.cntx_pop()
      || EDOK_ATR.index('REKKOLED'); EDOK_ATR.prefix(EDOKUM.ref());
         {? typobi=1
         || EDOK_ATR.win_sel('WERF')
         || EDOK_ATR.win_sel('WER')
         ?};
         {? exec('blok_innd','obiegi') | _display
         || _act:='DdPpUu'; _actb:='Dd'
         |? var_pres('genius_fin')>0
         || _act:='DdPpUuSs'; _actb:='Dd'
         || _act:=_actb:=''
         ?};
         _act:=_act+{? +_actb || ':'+_actb || _act ?};
         EDOK_ATR.select(,,,_act)
      ?}
   ?}
?};
EDOK_ATK.cntx_pop(); EDOK_ATR.cntx_pop(); EDOKUM.cntx_pop();
''


\edok_atr_arfr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po odświeżeniu okienka tabeli EDOK_ATR (WEBTERM)
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.use('skid_v'+(EDOK_ATR.name()+2));
EDOKOS.use('skid_y'+(EDOK_ATR.name()+2));
_gray:='';
{? EDOK_ATR.get()
|| {? EDOK_ATR.EDOKUM().TYP().ATR_ONE || _gray+='GW' ?};
   ETYP_ATR.cntx_psh(); ETYP_ATR.index('KOLZ');
   ETYP_ATR.prefix(EDOK_ATR.EDOKUM().TYP,null,EDOK_ATR.KOL);
   {? ~ETYP_ATR.first() || _gray+='I' ?};
   ETYP_ATR.cntx_pop();
   {? ~(EDOK_ATR.WAR<>'' | EDOK_ATR.UD_SKL) || _gray+='S' ?}
?};
zakres:={? web_top_kind()='s'
        || web_params_get().zakres
        || web_params_get(1).zakres
        ?};
{? exec('blok_innd','obiegi') || _gray+='DPUSGW:D' ?};
web_top_tab().web_win_opt(web_top_win(),web_top_ident(),'grayed='+_gray);
1


\bobs_edok_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą okienka wertowania EDOK_ATR (WEBTERM)
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.web_cntx_load(1);
1


\typ_ust
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawia typ dokumentu w obiegu wybrany w czynności
::   WE: _a - typ dokumentu w obiegu (string)
::----------------------------------------------------------------------------------------------------------------------
typ_ust:=null;
{? var_pres('TYP_DOK',_a)>0 & _a.TYP_DOK<>''
|| _obj:=exec('obj_typ_dok','obiegi2');
   _obj.set(_a.TYP_DOK);
   _nazwa:=_obj.NAZWA;
   _w_portal:=_obj.W_PORTAL;
   ETYPY.cntx_psh(); ETYPY.index('UNIK_WP'); ETYPY.prefix(exec('bl_typ','obiegi',typobi),_w_portal);
   {? ETYPY.find_key(_obj.NAZWA,) || typ_ust:=ETYPY.ref() ?};
   ETYPY.cntx_pop()
?}


\ustal_numer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1230]
:: OPIS: Ustala \ zwalnia numer kolejny i identyfikator delegacji
::   WE: _a - typ obiegu - 1 - faktury w obiegu
::                         2 - wnioski
::                         3 - delegacje
::       _b - ref roku obrachunkowego
::       _c - 1 - ustala numer
::            2 - zwalnia numer
::       _d - zapisywac numer
::  OLD: \ustal_numer/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_d')<=0 || _d:=1 ?};
_nr:=0;
EDOKUM.cntx_psh();
TYPOBIEG.cntx_psh(); TYPOBIEG.index('UNIK');
{? _a=1
|| TYPOBIEG.prefix('Obieg faktur','Obieg faktur')
|? _a=2
|| TYPOBIEG.prefix('Obieg wniosków','Obieg wniosków')
|| TYPOBIEG.prefix('Obieg delegacji','Obieg delegacji')
?};
{? TYPOBIEG.first()
|| ETYPY.cntx_psh();
   ETYPY.index('DISP1'); ETYPY.prefix(1,TYPOBIEG.ref());
   {? ETYPY.first()
   || POM.TAB:='EDOKUM';
      POM.TYPDOK:='DOB';
      {? _d
      || EDOKUM.TYP:=ETYPY.ref();
         EDOKUM.TYPOBIEG:=TYPOBIEG.ref()
      ?};
      {? _c=1
      || EDOKUM.NR:=exec('numer_new','numery','PACZKA');
         exec('znak','numery','EDOKUM');
         id_edok:=EDOKUM.SYM; _nr:=EDOKUM.NR
      || numer:=EDOKUM.NR; oldnumer:=1;
         exec('nr_old','numery')
      ?}
   ?};
   ETYPY.cntx_pop()
?};
EDOKUM.cntx_pop(); TYPOBIEG.cntx_pop();
{? _c=1 || EDOKUM.NR:=_nr ?};
1


\kolor_et
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JSz [12.30]
:: OPIS: KOrowanie etykiet pól w okienkach redagowania
::   WE: _a - akronim tabeli
::  OLD: \kolor_et/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_win:=($(_a+'.win_edit(\'?\')'))();
{? _win='' || return ?};
{? _a='EDOKUM'
|| EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'ODD','OD');
   EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'TYP','NAZWA');
   EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'ID');
   {? _win='WPR' | _win='WPR_TEST'
   || EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'DOP');
      EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'WAL');
      EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'SYM');
      EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'DW');
      EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'DO');
      EDOKUM.efld_opt(_win,'mark=1',EDOKUM,'TP')
   ?}
|? _a='EDOKUMP'
|| EDOKUMP.efld_opt(_win,'mark=1',EDOKUMP,'DATA_WYJ');
   EDOKUMP.efld_opt(_win,'mark=1',EDOKUMP,'GODZ_WYJ');
   EDOKUMP.efld_opt(_win,'mark=1',EDOKUMP,'DATA_PRZ');
   EDOKUMP.efld_opt(_win,'mark=1',EDOKUMP,'GODZ_PRZ');
   EDOKUMP.efld_opt(_win,'mark=1',EDOKUMP,'MIE_WYJ');
   EDOKUMP.efld_opt(_win,'mark=1',EDOKUMP,'MIE_PRZ')
|? _a='EDOKUMD'
|| EDOKUMD.efld_opt(_win,'mark=1',EDOKUMD,'DATA_OD');
   EDOKUMD.efld_opt(_win,'mark=1',EDOKUMD,'DATA_DO');
   EDOKUMD.efld_opt(_win,'mark=1',EDOKUMD,'GODZ_OD');
   EDOKUMD.efld_opt(_win,'mark=1',EDOKUMD,'GODZ_DO')
|? _a='EDOK_ZAL'
|| {? _win='RED' | _win='RED_PLAN'
   || EDOK_ZAL.efld_opt(_win,'mark=1',EDOK_ZAL,'ETYPWYD')
   ?}
?};
exec('kolor_typu','obiegi',_a)


\bobs_dict_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą okienka SLO
::----------------------------------------------------------------------------------------------------------------------
1


\czy_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Formula testuje czy delegowany (zgodnie ze stanem danych w systemie Kadry i płace)
::       jets zatrudniony w zadanym zakresie dat
::   WE: _a - (ref) wskazanie na pracownika
::       _b - (date) data od
::       _c - (date) data do
::   WY: 1 - ok pracuje, 0 - mogl nie pracowac w podanym zakresie dat
::  OLD: \czy_prac/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
_date:=_b;
_next:=1;
{! |?
   {? ~exec('jest_prac','obiegi',_a,_date)
   || _next:=0; _wy:=0
   ?};
   {? _next || _date+=1 ?};
   _next & _date<=_c
!};
_wy


\jest_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.10]
:: OPIS: Sprawdza, czy pracownik jest zatrudniony na dany dzien.
::   WE: _a - wskazanie na pracownika (ref lub integer)
::       _b - data, jesli pominieta lub typu innego niz date, to przyjeta zostanie data biezaca
::       _c - rozny od zero - nie odkladaj kontekstu tabeli P (bufor jest ustawiony)
::   WY: 0/1 - pracownik nie jest/jest zatrudniony na dany dzien
::  OLD: \jest_prac/kartprac.fml
::----------------------------------------------------------------------------------------------------------------------
_date:={? var_pres('_b')<>type_of(date) || date || _b ?};
_cntx:=(var_pres('_c')<>type_of(0) | ~_c);
_ret_val:=1;
_test:=0;
{? _cntx
|| P.cntx_psh;
   P.clear;
:  uwaga na mozliwe przekazanie ref'a pracownika jako integer'a
   _test:=~P.seek({? var_pres('_a')=type_of(null) || #_a || _a ?},)
?};
{? _test | _date<P.DZA | (P.DZ<>date(0,0,0) & P.DZ<_date)
:  brak pracownika lub nie jest on na dany dzien zatrudniony
|| _ret_val:=0
?};
{? _cntx
|| P.cntx_pop
?};
_ret_val


\edokum_khkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [$1210]
:: OPIS: Formula zwraca ref kontrahenta (KH) na podstawie pola EDOKUM.KH
::  OLD: \edokum_khkh/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=null;
KH.cntx_psh(); KH.index('KOD'); KH.prefix(2);
{? EDOKUM.KH<>null & KH.find_key(EDOKUM.KH().KOD) || _zwrot:=KH.ref() ?};
KH.cntx_pop();
_zwrot


\edk_atr_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Dolaczenie rekordow dla nowej pozycji zestawu danych dla biezacego EDOKUM
::   WE:  _a  - z dialogami (1) bez (0) [1]
::       [_b] - dodatkowe ustawienia
::       [_c] - czy formuła wywoływana przez dołączanie z okienka EDOK_ATR ; 1 - tak, 0 - nie (domyślnie 0)
::   WY: '' - powodzenie, lub komunikat o bledzie
::  OLD: \edk_atr_dolacz/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
_info:={? var_pres('_c')<>type_of(1) || 0 || _c ?};
OBIEGI.TYP_ID:='T';
{? var_press('_b')<=0 || _b:=1 ?};
{? app_info('web_sesid')<>'' & web_top_kind()='s' & _b
|| exec('env_edokum_get','obiegi')
?};
EDOKUM.cntx_psh();
{? (_<1) | (_a=~~) || _a:=1 ?};
{? type_of(_a)<>type_of(0) || &_a; _a:=1 ?};
_kom:='';
{? OBIEGI.TYP_ID='K'
|| _tab:=DOKUM;
   {? REF.FIRMA<>DOKUM.FIRMA
   || _kom:='Kontakt wprowadzony w innej firmie niż bieżąca. Akcja niemożliwa.'@
   ?}
|| _tab:=EDOKUM
?};
{? _kom='' || _kom:=exec('edk_atr_can','obiegi',_tab.ref(),'D',_info) ?};
{? _kom=''
||
   {? _tab.r_lock(1,1,1)
   || {? exec('open_edk_atr','obiegi',_tab.ref)
      || _nowybiez:=null();
         ETYP_ATR.cntx_psh();
         ETYP_ATR.index('KOLZ');
         {? OBIEGI.TYP_ID='K'
         || ETYP_ATR.prefix(null,_tab.DOT)
         || ETYP_ATR.prefix(_tab.TYP)
         ?};
         {? ETYP_ATR.first()
         ||
            _kom:='';
            _rec:=exec('edk_atr_lastpoz','obiegi',_tab.ref())+1;
            {? _rec>=0
            ||
               _do:=0;
::             >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
               {? do_state()=0 || do(); _do:=1 ?};
               EDOK_ATR.cntx_psh();
               EDOK_ATR.clear();
               EDOK_ATR.blank();
               EDOK_ATR.EDOKUM:={? _tab=EDOKUM || EDOKUM.ref() || null ?};
               EDOK_ATR.DOKUM:={? _tab=DOKUM || DOKUM.ref() || null ?};
               EDOK_ATR.REKORD:=_rec;
               EDOK_ATR.KOL:=0;

               EDOK_ATR.add();

               _war:=~~;
               {!
               |?
                  EDOK_ATR.blank();
                  EDOK_ATR.EDOKUM:={? _tab=EDOKUM || EDOKUM.ref() || null ?};
                  EDOK_ATR.DOKUM:={? _tab=DOKUM || DOKUM.ref() || null ?};
                  EDOK_ATR.REKORD:=_rec;
                  EDOK_ATR.KOL:=ETYP_ATR.KOL;
                  EDOK_ATR.TAT:=ETYP_ATR.TAT;
                  &_war;
                  _war:=exec('etp_get_default','obiegi',ETYP_ATR.ref());
                  {? type_of(_war)>100 | _war<>~~
                  ||
                     {? EDOK_ATR.TAT().TYP='L' || EDOK_ATR.WAR:=form(_war,,,'9,')
                     |? EDOK_ATR.TAT().TYP='T' || EDOK_ATR.WAR:=_war
                     |? EDOK_ATR.TAT().TYP='D' || EDOK_ATR.WAR:=$_war
                     |? EDOK_ATR.TAT().TYP='C' || EDOK_ATR.WAR:=_war $ 3
                     |? EDOK_ATR.TAT().TYP='B' || EDOK_ATR.WAR:=_war
                     |? EDOK_ATR.TAT().TYP='S' || EDOK_ATR.SLO:=_war;
                                                  EDOK_ATR.WAR:={? ETYP_ATR.SLOPOLE='K'
                                                                || EDOK_ATR.SLO().KOD
                                                                || EDOK_ATR.SLO().TR
                                                                ?}
                     |? EDOK_ATR.TAT().TYP='U' || EDOK_ATR.UD_SKL:=_war;
                                                  EDOK_ATR.WAR:={? ETYP_ATR.SLOPOLE='K'
                                                                || EDOK_ATR.UD_SKL().SYMBOL
                                                                || EDOK_ATR.UD_SKL().OPIS
                                                                ?}
                     |? EDOK_ATR.TAT().TYP='X' || EDOK_ATR.WAR:=_war[1];
                                                  EDOK_ATR.REF_SQL:=_war[2]
                     || ~~
                     ?}
                  ?};
                  {? EDOK_ATR.WAR='' & ETYP_ATR.TAT().TYP='O'
                  || EDOK_ATR.WAR:=STR.gsub(ETYP_ATR.memo_txt(,1,'OPIS'),'\n',' ')
                  ?};
                  EDOK_ATR.add();
                  {? _nowybiez=null() || _nowybiez:=EDOK_ATR.ref() ?};
                  ETYP_ATR.next()
               !};

               EDOK_ATR.cntx_pop();
               {? do_state=2 || _kom:='Nie udało się dołączyć nowego zestawu danych.'@ ?};
               {? _do || end() ?};
::             <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
               {? EDOK_ATR.f_active() || EDOK_ATR.f_rfresh() ?}
            || _kom:='Błąd wyznaczenia numeru ostatniej pozycji.'@
            ?}
         || _kom:='Do dokumentu tego typu nie zdefiniowano schematu informacji dodatkowych.'@
         ?};
         ETYP_ATR.cntx_pop();
::       ustawienie na 1 polu danych nowego rekordu
         {? _nowybiez<>null()
         || EDOK_ATR.seek(_nowybiez);
::          jezeli filtr to ustawiamy na ostatnim rekordzie
            {? EDOK_ATR.f_active() & EDOK_ATR.f_last() || EDOK_ATR.f_get() ?}
         ?}
      || _kom:='Nie można otworzyć maski tabeli informacji dodatkowych.'@
      ?}
   || _kom:='Dane dokumentu są właśnie redagowane przez innego użytkownika. Spróbuj za chwilę.'@
   ?};
   _tab.r_unlock()
?};
EDOKUM.cntx_pop();
{? _a & (_kom<>'') || FUN.info(_kom) ?};
_kom


\edk_atr_dolacz_refr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dołączanie z okienka EDOK_ATR z odświeżaniem
::----------------------------------------------------------------------------------------------------------------------
exec('edk_atr_dolacz','obiegi',,,1);
{? app_info('web_sesid')<>'' || web_top_refresh(0) ?}


\etp_get_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zwrocenie wartosci domyslnej dla pozycji schematu atrybutow podanej refem
::   WE: _a - ETYP_ATR.ref() [biezacy]
::   WY: obliczona wartosc
::       lub wartosc zerowa zgodna z typem atrybutu
::       lub ~~ gdy bledny parametr formula lub brak lub bledna wartosc domyslna
::  OLD: \etp_get_default/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
{? (_<1) | (_a=~~) || _a:=ETYP_ATR.ref() ?};
{? (type_of(_a)<>type_of(null())) | (ref_name(_a)<>ETYP_ATR.name()) || return(~~) ?};

::opracowanie wartosci
_wyn:=~~;
{? ETYP_ATR.DEF_KIND='W'
||
   {? ETYP_ATR.DEFAULT<>''
   ||
      {? ETYP_ATR.TAT().TYP='S' || _wyn:=ETYP_ATR.SLO
      |? ETYP_ATR.TAT().TYP='U' || _wyn:=ETYP_ATR.UD_SKL
      |? ETYP_ATR.TAT().TYP='D' || _wyn:=date(#(4+ETYP_ATR.DEFAULT),#(2+(5-ETYP_ATR.DEFAULT)),#(ETYP_ATR.DEFAULT+2))
      |? ETYP_ATR.TAT().TYP='C' ||
         _war:=ETYP_ATR.DEFAULT; _pos:=_war*':'; _gg:=_mm:=_ss:=0;
         {? _pos>0 || _gg:=#((_pos-1)+_war); _mm:=#(2+(_pos-_war)); _ss:=#(_war+2) ?};
         _wyn:=time(_gg,_mm,_ss)
      |? ETYP_ATR.TAT().TYP='L' || _wyn:=#STR.gsub(ETYP_ATR.DEFAULT,',','.')
      || _wyn:=ETYP_ATR.DEFAULT
      ?}
   ?}
||
   {? ETYP_ATR.DEF_FORM<>''
   ||
      on_error(2);
      _wyn:=($ETYP_ATR.DEF_FORM)();
      {? in_error() || _wyn:=~~ ?};
      on_error()
   ?}
?};
::sprawdzenie poprawnosci wartosci
::jezeli niepoprawna to nadanie wartosci zerowej
{? type_of(_wyn)>100 | _wyn<>~~
||
   {? ETYP_ATR.TAT().TYP='S'
   ||
      {? (type_of(_wyn)=type_of(null())) & (ref_name(_wyn)=SLO.name())
      ||
         SLO.cntx_psh(); SLO.prefix();
         {? (~SLO.seek(_wyn)) | (SLO.SLU<>ETYP_ATR.TAT().SLU) || _wyn:=~~ ?};
         SLO.cntx_pop()
      || _wyn:=~~
      ?}
   |? ETYP_ATR.TAT().TYP='U'
   ||
      {? (type_of(_wyn)=type_of(null())) & (ref_name(_wyn)=UD_SKL.name())
      ||
         UD_DEF.cntx_psh(); UD_DEF.index('PODTEC'); UD_DEF.prefix(ETYP_ATR.TAT().UD_SCH);
         {? UD_DEF.find_key(_wyn)
         ||
            {? UD_DEF.UD_SCH<>ETYP_ATR.TAT().UD_SCH || _wyn:=~~ ?}
         || _wyn:=~~
         ?};
         UD_DEF.cntx_pop()
      || _wyn:=~~
      ?}
   |? ETYP_ATR.TAT().TYP='D'
   ||
      {? type_of(_wyn)<>type_of(date()) || _wyn:=~~ ?}
   |? ETYP_ATR.TAT().TYP='C'
   ||
      {? type_of(_wyn)<>type_of(time()) || _wyn:=~~ ?}
   |? ETYP_ATR.TAT().TYP='L'
   ||
      {? type_of(_wyn)<>type_of(0) || _wyn:=~~ ?}
   |? ETYP_ATR.TAT().TYP='B'
   ||
      {? (type_of(_wyn)<>type_of(''))
         | ((_wyn<>exec('get_war_false','obiegi')) & (_wyn<>exec('get_war_true','obiegi')))
      || _wyn:=~~
      ?}
   |? ETYP_ATR.TAT().TYP='X'
   || {? type_of(_wyn)<=100 | type_of(_wyn[1])<>type_of('') | type_of(_wyn[2])<>type_of('')
      || _wyn:=~~
      ?}
   || {? (type_of(_wyn)<>type_of('')) || _wyn:=~~ ?}
   ?}
?};
_wyn


\edk_atr_can
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Czy mozna dodawac lub usuwac dane
::   WE: _a - EDOKUM.ref() lub DOKUM.ref() [biezacy]
::       _b - jaka akcja D-dolacz, P-popraw, U-usun [X- nieokreslona]
::       _c - czy formuła wywoływana przez dołączanie z okienka EDOK_ATR ; 1 - tak, 0 - nie (domyślnie 0)
::   WY: '' - tak lub powod braku zgody
::  OLD: \edk_atr_can/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
_info:={? var_pres('_c')<>type_of(1) || 0 || _c ?};
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) || {? OBIEGI.TYP_ID='K' || _a:=DOKUM.ref() || _a:=EDOKUM.ref() ?} ?};
::jeseli nieprawidlowy parametr to nie rob nic - i zabron
{? (type_of(_a)<>type_of(null())) | (((ref_name(_a)-2)<>(EDOKUM.name(1)-2)) & ((ref_name(_a))<>DOKUM.name))
|| return('Błędne wskazanie dokumentu.')
?};
{? _a=null() || {? OBIEGI.TYP_ID='K' || _a:=DOKUM.ref() || _a:=EDOKUM.ref() ?} ?};
{? (_<2) | (_b=~~) || _b:='X' ?};
{? type_of(_b)<>type_of('') || &_b; _b:='X' ?};
{? _b='' || _b:='X' ?};
{? ref_name(_a)='dokum'
|| _tab:=DOKUM
|| _tab:=EDOKUM
?};
_kom:=''; _ok:=1;
_tab.cntx_psh();
{? _tab.name()<>ref_name(_a) || _ok:=_tab.use(ref_name(_a)) ?};
{? _ok
|| _tab.prefix();
   {? _tab.seek(_a)
   || {? exec('czy_etp_atr','obiegi',{? _tab=EDOKUM || EDOKUM.TYP || DOKUM.DOT ?})>0
      || {? (_ok>0) & (_b='D') & ({? _tab=EDOKUM || EDOKUM.TYP().ATR_ONE<>0 || DOKUM.DOT().ATR_ONE<>0 ?})
         || {? exec('edk_atr_lpoz','obiegi',_tab.ref())<>0
            || _ok:=0;
               _kom:='Dla tego typu '@+{? _tab=DOKUM || 'kontaktu'@ || 'dokumentu w obiegu'@ ?}+
                     ' może być tylko jeden komplet informacji dodatkowych.'@
            ?}
         ?};
         {? _ok>0 & _tab=DOKUM & _tab.EDOKUMR<>''
         || _ok:=0;_kom:='Dla kontaktu został wcześniej uruchomiony obieg. Akcja niemożliwa.'@
         ?};
         {? _ok>0 & ({? _tab=EDOKUM || EDOKUM.TYP().ATR_G1R<>0 || DOKUM.DOT().ATR_G1R<>0 ?}) & _b='D' & _info=0
         || EDOK_ATR.cntx_psh();
            EDOK_ATR.index('REKKOLED'); EDOK_ATR.prefix(EDOKUM.ref());
            {? EDOK_ATR.first()
            || _ok:=0;
               _kom:='Dla tego '@+{? _tab=DOKUM || 'kontaktu'@ || 'dokumentu w obiegu'@ ?}+
                     ' został wygenerowany już pierwszy komplet informacji dodatkowych.'@
            ?};
            EDOK_ATR.cntx_pop()
         ?}
      || _ok:=0; _kom:='Ten typ dokumentu nie ma zdefiniowanego schematu informacji dodatkowych.'@
      ?}
   || _ok:=0; _kom:='Nie znaleziono dokumentu.'@
   ?}
|| _kom:='Nie otwarto maski dokumentów.'@
?};
_tab.cntx_pop();
_odp:='';
{? ~_ok || _odp:=_kom ?};
_odp


\czy_etp_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Odpowiada, Ile zdefiniowano kolumn w schemacie atrybutow dla danego ETYPY
::   WE: ETYPY.ref() [biezacy]
::   WY: liczba atrybutow w schemacie
::  OLD: \czy_etp_atr/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null()))
   | (_a=null()) | ((ref_name(_a)<>ETYPY.name()) & (ref_name(_a)<>ZDARZT.name()))
|| {? OBIEGI.TYP_ID='K'
   || _a:=ZDARZT.ref()
   || _a:=ETYPY.ref()
   ?}
?};

{? ref_name(_a)=ZDARZT.name()
|| _tab:=ZDARZT
|| _tab:=ETYPY
?};
_odp:=0;
_tab.cntx_psh();
_tab.prefix();
{? _tab.seek(_a)
||
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ');
   {? (ref_name(_a)=ZDARZT.name())
   || ETYP_ATR.prefix(null,_tab.ref())
   || ETYP_ATR.prefix(_tab.ref())
   ?};
   _odp:=ETYP_ATR.size();
   ETYP_ATR.cntx_pop()
?};
_tab.cntx_pop();
_odp


\czy_obecny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Formula testuje czy delegowany (zgodnie ze stanem danych w systemie Kadry i płace)
::       nie jest (nie byl) na urlopie lub chrobowym w zadanym zakresie dat
::   WE: _a - (ref) wskazanie na pracownika
::       _b - (date) data od
::       _c - (date) data do
::   WY: 1 - ok, 0 - moze byc nieobecny
::  OLD: \czy_obecny/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
_date:=_b;
_next:=1;
{! |?
   {? exec('czy_jest','obiegi',_a,_date)
   || _next:=0; _wy:=0
   ?};
   {? _next || _date+=1 ?};
   _next & _date<=_c
!};
_wy


\czy_jest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Formula na podstawie \czy_jest z nieobecn.fml
::   WE: _a - ref pracownika
::       _b - data
::   WY: 1 - pracownik nieobecny, 0 - pracownik obecny
::  OLD: \czy_jest/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_date:={? var_pres('_b')<>type_of(date) || date || _b ?};
_h_code:='BOW';
N.cntx_psh();
N.index('NIEOBECN');
N.prefix('N',_a);
{? N.find_le(_date) & _date<=N.DO
|| N.cntx_pop();
   return(1)
?};
N.cntx_pop();

H.cntx_psh(); H.use('_hist'); H.index('_HISTKOD');
{! _ndx:=1..+_h_code
|! H.prefix(_a,_ndx+_h_code+1);
   {? H.find_le(_date) & _date<=H.DO
   || H.cntx_pop();
      return(1)
   ?}
!};
H.cntx_pop();
0


\putbloby
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Zmienia zawartosc pol EDOKUM.EDOKUM i EDOKUM.EPODPIS
::  OLD: \putbloby/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_file1:=EDOKUM.bl_file('EDOKUM'))<>''
|| EDOKUM.bl_put('EDOKUM',_file1); EDOKUM.bl_file('EDOKUM',1)
?};
{? (_file2:=EDOKUM.bl_file('EPODPIS'))<>''
|| EDOKUM.bl_put('EPODPIS',_file2); EDOKUM.bl_file('EPODPIS',1)
?}


\ded_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Zalaczniki dla EDOKUM - EDOKUMZ - dolacz
::   WE: _a - 1 dla EDOKUM
::            2 dla EDOK_ZAL
::  OLD: \ded_add/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUMZ.blank(1);
exec('env_wt','b_proces');
{? _a=1
|| EDOKUM.web_cntx_load();
   EDOKUMZ.DOKUM:=EDOKUM.ref()
|| EDOK_ZAL.web_cntx_load();
   EDOKUMZ.EDOK_ZAL:=EDOK_ZAL.ref()
?};
EDOKUMZ.DATE:=date();
EDOKUMZ.TIME:=time();
EDOKUMZ.USER:=OPERATOR.USER().KOD;
EDOKUMZ.bl_file('EDOKUM',1);
EDOKUMZ.web_edit('RED_WW',,,,"{? _a='OK'
                              || exec('env_wt','b_proces');
                                 _pole:=exec('spr_edokumz','obiegi');
                                 {? _pole=''
                                 || {? EDOKUMZ.add()
                                    || EDOKUMZ.web_eclose();
                                       _file:=EDOKUMZ.bl_file('EDOKUM');
                                       {? _file<>''
                                       || EDOKUMZ.bl_put('EDOKUM',_file);
                                          EDOKUMZ.NAZWA:=EDOKUMZ.bl_info('EDOKUM','NAME');
                                          EDOKUMZ.put()
                                       ?};
                                       EDOKUMZ.web_refresh(web_top_win(1))
                                    ?}
                                 || web_top_update(0,,,_pole)
                                 ?}
                              || EDOKUMZ.web_eclose()
                              ?}")


\ded_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Zalaczniki dla EDOKUM - EDOKUMZ - popraw
::   WE: _a - 1 dla EDOKUM
::            2 - dla EDOK_ZAL
::  OLD: \ded_pop/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
exec('env_wt','b_proces');
{? _a=1
|| EDOKUM.web_cntx_load()
|| EDOK_ZAL.web_cntx_load()
?};
EDOKUMZ.web_edit('RED_WW',,,,"{? _a='OK'
                              || exec('env_wt','b_proces');
                                 _pole:=exec('spr_edokumz','obiegi');
                                 {? _pole=''
                                 || {? EDOKUMZ.put()
                                    || EDOKUMZ.web_eclose();
                                       _file:=EDOKUMZ.bl_file('EDOKUM');
                                       {? _file<>''
                                       || EDOKUMZ.bl_put('EDOKUM',_file);
                                          EDOKUMZ.NAZWA:=EDOKUMZ.bl_info('EDOKUM','NAME')
                                       ?};
                                       _file_name:=EDOKUMZ.bl_info('EDOKUM','NAME');
                                       {? _file_name<>EDOKUMZ.NAZWA
                                       || EDOKUMZ.NAZWA:=_file_name
                                       ?};
                                       EDOKUMZ.put();
                                       EDOKUMZ.web_refresh(web_top_win(1))
                                    ?}
                                 || web_top_update(0,,,_pole)
                                 ?}
                              || EDOKUMZ.web_eclose()
                              ?}")


\spr_edokumz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Sprawdzanie załączników
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? EDOKUMZ.KR_OP=''
|| FUN.info('Nie wprowadzono krótkiego opisu załącznika.'@); _zwrot:='KR_OP'
|? EDOKUMZ.bl_file('EDOKUM',0)='' & ~EDOKUMZ.EDOKUM
|| FUN.info('Nie wybrano załącznika.'@); _zwrot:='EDOKUM'
?};
_zwrot


\ded_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Zalaczniki dla EDOKUM - EDOKUMZ - usun
::  OLD: \ded_usu/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUMZ.web_cntx_save();
_us:="EDOKUMZ.web_cntx_load();
      {? _a
      || EDOKUMZ.del();
         EDOKUMZ.web_refresh(web_top_win(0))
      ?}";
web_ask(_us,'Usunąć wybrany załącznik?'@,FUN.TYT)


\zalaczniki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przeglądanie załączników z poziomu okienka redagowania dokumentu w obiegu
::   WE: _a - opcja - 'AF' - akceptacja faktur
::                    'PF' - przekazanie faktur
::                    'AW' - akceptacja wniosków
::                    'PW' - przekazanie wniosków
::                    'WW' - wprowadzanie wniosków
::                    'WD' - wprowadzanie delegacji
::                    'AD' - akceptacja delegacji
::                    'PD' - przekazanie delegacji
::       _b - opcja - 1 - dla EDOKUMW
::                    2 - dla EDOKUM
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| _dalej:=1;
   {? _b=1
   || {? ~EDOKUMW.get()
      || {? _a='AF' | _a='PF'
         || FUN.info('Nie znaleziono faktury.'@);
            {? _a='PF'
            || exec('dob_refresh','obiegi','P','F')
            || exec('dob_refresh','obiegi','A','F')
            ?}
         |? _a='AW' | _a='PW' | _a='WW'
         || FUN.info('Nie znaleziono wniosku.'@);
            {? _a='WW'
            || exec('dob_refresh','obiegi','W','W')
            |? _a='PW'
            || exec('dob_refresh','obiegi','P','W')
            || exec('dob_refresh','obiegi','A','W')
            ?}
         || FUN.info('Nie znaleziono delegacji.'@);
            {? _a='WD'
            || exec('dob_refresh','obiegi','W','D')
            |? _a='PD'
            || exec('dob_refresh','obiegi','P','D')
            || exec('dob_refresh','obiegi','A','D')
            ?}
         ?};
         _dalej:=0
      ?}
   ?};
   {? _dalej
   || {? _b=1
      || EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix(); EDOKUMW.EDOKUM()
      ?};
      _dalej:=exec('env_edokum','obiegi',_a,0)
   ?};
   {? _dalej
   || _get:=web_params_get();
      {? type_of(_get)>100 & var_pres('akcja',_get)>0 & (_get.akcja='dołącz' | _get.akcja='popraw')
      || {? _get.akcja='dołącz'
         || _par:=web_global_params_get();
            {? type_of(_par)>100 & var_pres('act_ok',_par)>0 & ~_par.act_ok
            || _pole:=params_exec('dol_dob_wt2','obiegi',0,0);
               {? type_of(_pole)=type_of('') & _pole<>''
               || web_top_update(0,,,_pole)
               || EDOKUM.get()
               ?};
               _dalej:=(_pole='')
            ?}
         || _pole:=params_exec('pop_dob_wt2','obiegi',0,0);
            {? type_of(_pole)=type_of('') & _pole<>''
            || web_top_update(0,,,_pole)
            || EDOKUM.get()
            ?};
            _dalej:=(_pole='')
         ?}
      ?}
   ?};
   {? _dalej
   || _okno:={? _a='AF' | _a='PF'
             || 'WER_WWF'
             |? _a='AW' | _a='PW' | _a='WW'
             || 'WER_WWW'
             || 'WER_WW'
             ?};
      EDOKUMZ.index('DISP'); EDOKUMZ.prefix(EDOKUM.ref());
      EDOKUM.web_cntx_save();
      EDOKUMZ.web_select(_okno,,,'RED_WW')
   ?}
|| EDOKUM.cntx_psh();
   _red:=XPERTIS.mk_edit(''@,,'esc_red_amk',,,,'auto');
   XPERTIS.win_ebtn(_red,'text=%1,panel=right,align=end,display=1'['Za&mknij'@],'key:Esc');
   exec('make_ctr','obiegi2');
   {? menu_pth()*'Z' & cur_tab(1)=EDOK_ZAL
   || _bf:=$('exec(\'bobs_edokumz_wydatki\',\'obiegi2\',1)');
      _title:='Załączniki do wydatku'@
   || _bf:=$('exec(\'bobs_edokumz\',\'obiegi\',1)');
      _title:='Załączniki do dokumentu'@
   ?};
   EDOKUMZ.cntx_psh();
   {? EDOKUMZ.name()+2<>ref_name(EDOKUM.ref())+2
   || EDOKUMZ.use('skid_n'+(ref_name(EDOKUM.ref())+2))
   ?};
   _grp:=EDOKUMZ.grp_make(_title,,'grp_edokum_zal');
   _fml:=$('exec(\'getblobs\',\'bloby\',__CTR.WIN_ID); grp_disp(($(__CTR.BTAB))(),__CTR.WIN_ACR,1,)');
   EDOKUMZ.grp_ctr(_grp,EDOKUMZ,__CTR.WIN_ACR,__CTR.WIN_ID,,,,,,,_bf,,,'maximized');
::   EDOKUMZ.grp_splt(_grp,,'vertical','X');
::   EDOKUMZ.grp_edit(_grp,XPERTIS,_red,,,,,,'maximized');
   EDOKUMZ.win_sel(_grp);
   RedZal:=1;
   EDOKUMZ.select();
   VAR_DEL.delete('RedZal');
   EDOKUMZ.cntx_pop();
   EDOKUM.cntx_pop();
   ''
?}


\bobs_edokumzw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą okienek wertowania tabeli EDOKUMZ
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.web_cntx_load(); 1


\pozvdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Pozycje VAT dla dokumentu w obiegu
::   WE: niezadeklarowane (=1) - wejscie na akcje, zadeklarowane - przy dolaczaniu dokumentu
::         _a - opcja dla WT - 'AF' - akceptacja faktur
::                             'PF' - przekazanie faktur
::                             'PDG' - podglad
::         _b - opcja dla WT- 1 - dla EDOKUMW
::                            2 - dla EDOKUM
::----------------------------------------------------------------------------------------------------------------------
exec('ustal_status','obiegi_log',EDOKUM.uidref());
{? var_pres('_a')<=0 || _a:=0 ?};
{? var_pres('pozvedit')>0 || pozvedit:=1 ?};
_dalej:=1;
{? app_info('web_sesid')<>''
|| {? _b=1
   || EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix(); EDOKUMW.EDOKUM()
   ?};
   _dalej:=exec('env_edokum','obiegi',_a,0)
?};
EDOKUM.cntx_psh();
{? var_pres('DOK_VAT',ETYPY)>0 || _fwal:=EDOKUM.TYP().DOK_VAT || _fwal:='N' ?};
{? ~EDOKUM.TYP().TYPVATPR & typobi=1 & _dalej
|| {? var_pres('WAL',ZZ_POM)>0 || ZZ_POM.WAL:=EDOKUM.WAL().KOD ?};
   {? app_info('web_sesid')<>'' || exec('czytaj','#stalesys',,FINFO) ?};
   {? {? _fwal='T' || 1 || EDOKUM.WAL=FINFO.NAROD ?}
   || {? EDOKUM.r_lock(1,1,1)
      || EVAT.index('EDOKUM'); EVAT.prefix(EDOKUM.ref());
         {? app_info('web_sesid')<>''
         || _okno:='WERFKW';
            {? _a='PF' | exec('blok_pozv','obiegi2')
            || _gray:='grayed=DPU:D'
            || _gray:='grayed='
            ?};
            EVAT.web_win_init(_okno,web_top_ident(),_gray);
            {? _a='AF'
            || EVAT.web_select(_okno,,,,"exec('a_zam_evat','obiegi2')")
            || EVAT.web_select(_okno)
            ?}
         || exec('sum_vat','obiegi',0);
            {? typobi=1
            || {? EDOKUM.EDOKUM & 'pdf;bmp;png;tiff;tif;jpeg;jpg'*(-EDOKUM.bl_info('EDOKUM','EXTENSION'))>0
               || _grp:=EVAT.grp_make('Pozycje VAT',,'grp_web_prv',,,,,'normal');
                  EVAT.grp_sel(_grp,,'WER_FK',,"exec('web_view_load_edokum','zbl_dok'); grp_disp(EVAT,'WER_FK')");
                  EVAT.grp_splt(_grp,,'vertical','webprv');
:: Podgląd dokumentu - okno wertowania
                  exec('web_view_edokum','zbl_dok',1,1);
:: podgląd załącznika
                  EVAT.grp_ctr(_grp,EDOKUM,__CTR_WB2.WIN_ACR,__CTR_WB2.WIN_ID,,,,,80,30,"","",,'maximized');
                  EVAT.win_sel(_grp);
                  OBIEGI.PREVIEW:=EDOKUM.EDOKUM
               || EVAT.win_sel('WER_FK');
                  OBIEGI.bl_file('PREVIEW',1,'')
               ?}
            || EVAT.win_sel('WER_FK')
            ?};
            EVAT.win_edit('RED');
            exec('rkprz1','obiegi',zakres); OBIEGI.EDOKOS();
            EDOKUM.cntx_psh(); EDOKUM.prefix();
            exec('naz_biez_etap','obiegi');
            _stat:=exec('spr_stat','obiegi');
            EDOKUM.cntx_pop();
            _hid:={? ((OBIEGI.B_PREL<>'' & OBIEGI.EDOKOS().OPERACJA='W') | (OBIEGI.EDOKOS().OPERACJA='D' & EDOKUM.TYP().DEKR='T'))
                     & _stat<>'T' & _stat<>'X' & EDOKUM.ZAM<>'T'
                     & (var_pres('zam_dob')<=0 | (var_pres('zam_dob')>0 & zam_dob=0))
                  || {? $_a='PDG' || 'DUP:DUP' || '' ?}
                  |? exec('szuk_edokpar','obiegi') & EDOKPAR.POZV_WYM<>'N'
                  || {? $_a='PDG' || 'DUP:DUP' |? EDOKPAR.ED_POZV='T' || '' || 'DUP:D' ?}
                  || 'DUP:D'
                  ?};
            EVAT.actions_grayed('WER_FK',_hid);
            EVAT.select();
            EVAT.actions_grayed('WER_FK')
         ?};
         EDOKUM.r_unlock()
      || exec('err_kom','obiegi')
      ?}
   || FUN.info('Pozycje VAT są edytowane tylko dla narodowej waluty transakcji.'@)
   ?}
?};
EDOKUM.cntx_pop();
EDOKUM.get()


\sum_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Zsumowanie pozycji VAT
::   WE: _a=1 - edycja pozycji VAT, 0 - wejscie do okienka
::  OLD: \sum_vat/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_edref:=EDOKUM.ref;
EDOKUM.cntx_psh();
SKID.SUMNETTO:=SKID.SUMVAT:=SKID.SUMBRUT:=0;
{? app_info('web_sesid')<>''
|| web_params_set(web_params_get());
   exec('env_wt','b_proces');
   {? EVAT.f_active()
   || EVAT.cntx_psh();
      _ref:={? EVAT.f_get() || EVAT.ref() || null ?};
      {? EVAT.f_first()
      || {! |?
            SKID.SUMNETTO+=EVAT.NETTO;
            SKID.SUMBRUT+=EVAT.BRUTTO;
            SKID.SUMVAT+=EVAT.VAT;
            EVAT.f_next()
         !}
      ?};
      EVAT.cntx_pop();
      {? _ref || EVAT.f_seek(_ref) ?}
   || EVAT.cntx_psh(); EVAT.index('EDOKUM'); EVAT.prefix(EDOKUM.ref());
      {? EVAT.first()
      || {! |?
            SKID.SUMNETTO+=EVAT.NETTO;
            SKID.SUMBRUT+=EVAT.BRUTTO;
            SKID.SUMVAT+=EVAT.VAT;
            EVAT.next()
         !}
      ?};
      EVAT.cntx_pop();
      EDOKUM.web_cntx_load();
      {? _a
      || EDOKUM.NETTO:=SKID.SUMNETTO;
         EDOKUM.WART:=SKID.SUMBRUT;
         EDOKUM.put()
      ?}
   ?}
|? type_of(cur_tab(1,1))=type_of(DOK) & cur_tab(1,1)=EVAT & EVAT.f_active()
|| EVAT.cntx_psh();
   {? EVAT.f_first()
   || {! |?
         SKID.SUMNETTO+=EVAT.NETTO;
         SKID.SUMBRUT+=EVAT.BRUTTO;
         SKID.SUMVAT+=EVAT.VAT;
         EVAT.f_next()
      !}
   ?};
   EVAT.cntx_pop()
|| {? type_of(cur_tab(1,1))<>type_of(DOKUM) & EDOKUM.f_active() || EDOKUM.prefix(); EDOKUM.f_rfresh() ?};
   {? _a=1 |
      {? type_of(cur_tab(1,1))<>type_of(DOKUM) & EDOKUM.f_active() || EDOKUM.f_get() || EDOKUM.get() ?}
   || {? _a=0 & EDOKUM.ref<>_edref || EDOKUM.seek(_edref) ?};
      EVAT.cntx_psh(); EVAT.index('EDOKUM'); EVAT.prefix(EDOKUM.ref());
      {? EVAT.first()
      || {! |?
            SKID.SUMNETTO+=EVAT.NETTO;
            SKID.SUMBRUT+=EVAT.BRUTTO;
            SKID.SUMVAT+=EVAT.VAT;
            EVAT.next()
         !}
      ?};
      EVAT.cntx_pop();
      {? _a
      || EDOKUM.NETTO:=SKID.SUMNETTO;
         EDOKUM.WART:=SKID.SUMBRUT;
         EDOKUM.put();
         {? exec('upr_etap','obiegi') || exec('dol_edokos','obiegi') ?}
      ?}
   ?}
?};
EDOKUM.cntx_pop()


\dsp_skid_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla pól z sumami w pozycjach VAT
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| {? cur_tab(1,1)=EVAT & f_usr_changed()
   || exec('sum_vat','obiegi',0)
   |? cur_tab(1,1)=EDOKRZAP & f_usr_changed()
   || exec('rzapsum','obiegi_zap')
   ?}
?};
1


\sum_vat1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Zsumowanie pozycji VAT (WEBTERM)
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.cntx_psh();
SKID.SUMNETTO:=SKID.SUMVAT:=SKID.SUMBRUT:=0;
{? EVAT.f_active()
|| EVAT.cntx_psh();
   _ref:={? EVAT.f_get() || EVAT.ref() || null ?};
   {? EVAT.f_first()
   || {! |?
         SKID.SUMNETTO+=EVAT.NETTO;
         SKID.SUMBRUT+=EVAT.BRUTTO;
         SKID.SUMVAT+=EVAT.VAT;
         EVAT.f_next()
      !}
   ?};
   EVAT.cntx_pop();
   {? _ref || EVAT.f_seek(_ref) ?}
|| EVAT.cntx_psh(); EVAT.index('EDOKUM'); EVAT.prefix(EDOKUM.ref());
   {? EVAT.first()
   || {! |?
         SKID.SUMNETTO+=EVAT.NETTO;
         SKID.SUMBRUT+=EVAT.BRUTTO;
         SKID.SUMVAT+=EVAT.VAT;
         EVAT.next()
      !}
   ?};
   EVAT.cntx_pop()
?};
EDOKUM.cntx_pop()


\rkprz_evat_www
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Rekord przed tabeli EVAT (WWW)
::----------------------------------------------------------------------------------------------------------------------
0


\dsp_sum_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla podsumowań EVAT
::----------------------------------------------------------------------------------------------------------------------
exec('sum_vat1','obiegi'); 1


\bobs_evat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą tabeli EVAT (WWW)
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.web_cntx_load(1);
exec('sum_vat','obiegi',0);
1


\bobs_pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [19.42]
:: OPIS: Przed obsługą tabeli POZF (WWW)
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.web_cntx_load(1);
1


\bobs_epodz_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą tabeli EPODZ (WWW)
::----------------------------------------------------------------------------------------------------------------------
COUNT_SUM:=1;
{? EPODZ.get() || UD_POM.SKID_MBN:=EPODZ.SKID_MB ?};
{? web_top_kind()='s'
|| EDOKUM.web_cntx_load(0)
?};
1


\bobs_epodz_wer1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą tabeli EPODZ (WWW) - jako okienko składowe EDOKRZAP
::----------------------------------------------------------------------------------------------------------------------
COUNT_SUM:=1;
{? EPODZ.get() || UD_POM.SKID_MBN:=EPODZ.SKID_MB ?};
{? web_top_kind()='s'
|| EDOKUM.web_cntx_load(0)
?};
1


\bobs_epodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą tabeli EPODZ (WWW)
::   WE: _a - 1 - przekazanie faktur
::            2 - akceptacja faktur
::----------------------------------------------------------------------------------------------------------------------
EDOKUMW.prefix();
_edokumw:={? _a=1
          || web_win_ref('PRZ')
          || web_win_ref('AKC')
          ?};
_ident:={? _a=1 || 'EPODZ_PRZ' || 'EPODZ_AKC' ?};
zakres:={? _a=1 || 5 |? _a=2 || 2 || 1 ?};
web_params_set(exec('obj_ntab_set','#array',web_params_get(),
               'zakres',zakres
               ));
web_global_params_set(exec('obj_ntab_set','#array',web_global_params_get(),
                         'typobi',1
                      ));
{? type_of(_edokumw)<>type_of(~~) & _edokumw & EDOKUMW.seek(_edokumw,ref_name(_edokumw),1)
|| EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix(); EDOKUMW.EDOKUM();
   EPODZ.use('skid_j'+(EDOKUMW.name()+2));
   EDOKUMPR.use('skid_i'+(EDOKUMW.name()+2));
   EPODZ.index('EDOKUMDS'); EPODZ.prefix(EDOKUMW.EDOKUM);
   exec('sum_podz','obiegi')
|| EPODZ.index('EDOKUMDS'); EPODZ.prefix(null); SKID.SKXDRAZE:=SKID.SKXDPOZO:=0
?};
1


\arfr_epodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po odświeżeniu EPODZ (WEBTERM)
::   WE: _a - identyfikator nadrzędnego (opcja)
::----------------------------------------------------------------------------------------------------------------------
_edokum:=1;
exec('env_wt','b_proces');
EDOKUM.use('skid_v'+(EPODZ.name()+2));
{? web_top_kind()='s'
|| EDOKUM.web_cntx_load();
   zakres:=web_params_get().zakres
|| {? _
   || _ref:=web_win_ref(_a);
      {? _a='PRZ' | _a='AKC'
      || {? type_of(_ref)<>type_of(~~) & _ref & EDOKUMW.seek(_ref,ref_name(_ref),1)
         || EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix(); EDOKUMW.EDOKUM()
         || _edokum:=0
         ?};
         zakres:=web_params_get(1).zakres
      || {? type_of(_ref)<>type_of(~~) & _ref & EDOKRZAP.seek(_ref,ref_name(_ref),1)
         || EDOKUM.use('skid_v'+(EDOKRZAP.name()+2)); EDOKUM.prefix(); EDOKRZAP.EDOKUM();
            zakres:=web_params_get(1).zakres
         || _edokum:=0; zakres:=5
         ?}
      ?}
   || {? EPODZ.get() || EPODZ.EDOKUM() || _edokum:=0 ?}
   ?}
?};
_gray:='';
{? _edokum
|| EPODZ.cntx_psh(); EDOKUMW.cntx_psh(); EDOKUM.cntx_psh();
   {? exec('blok_podz','obiegi') || _gray:='Adpu:d' ?};
   EPODZ.cntx_pop(); EDOKUMW.cntx_pop(); EDOKUM.cntx_pop()
?};
web_top_tab().web_win_opt(web_top_win(),web_top_ident(),'grayed='+_gray);
1


\bobs_red_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą okienka redakcji tabeli EPODZ (WWW)
::----------------------------------------------------------------------------------------------------------------------
_get:=web_params_get();
web_params_set(_get);
exec('env_wt','b_proces');
exec('FUN','#object');
UD_POM.MODEL_WT:=EPODZ.SKID_MB().KOD;
1


\pola_epodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie pól tabeli EPODZ (WWW)
::   WE: _a - 1 - init okienka
::            2 - po redakcji pola
::            3 - na popraw
::            4 - na display
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 || EPODZ.blank(1) ?};
{? _a=1 | _a=3
|| UD_POM.MODEL_WT:=EPODZ.SKID_MB().KOD
?};
{? _a=3 || _a:=1 ?};

web_params_set(web_params_get());
exec('env_wt','b_proces');
EPODZ.cntx_psh();
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(EPODZ.SKID_MB);
{? _a=1 & var_pres('no_ust')<0
|| web_global_params_set(exec('obj_ntab_set','#array',web_global_params_get(),
                         'mod_war',0
                        ))
?};
EDOKUM.cntx_psh();
EDOKUM.use('skid_v'+(EPODZ.name()+2)); EDOKUM.index('DISP'); EDOKUM.prefix();
_win:={? EPODZ.EDOKUM().TYPOBIEG().NAZWA='Obieg delegacji' || 'RED_WTD' || 'RED_WT' ?};
EDOKUM.cntx_pop();
{! _nr:=1..5
|! _jest:=SKID_MBP.find_key(_nr);
   _pole:={? _nr=1 || 'PBUD'
          |? _nr=2 || 'JORG'
          |? _nr=3 || 'OKOSZ'
          |? _nr=4 || 'WYM4'
          |? _nr=5 || 'WYM5'
          || ''
          ?};
   {? _a=1
   || EPODZ.web_efld_init(_win,,'enable='+$_jest,EPODZ,_pole);
      EPODZ.web_efld_init(_win,,'enable='+$_jest,UD_POM,_pole);
      EPODZ.web_efld_init(_win,,'enable='+$_jest,UD_POM,'NAZ_WYM'+$_nr);
      EPODZ.web_efld_init(_win,,'mark='+$_jest,UD_POM,'NAZ_WYM'+$_nr)
   || EPODZ.web_efld_opt(_win,,'enable='+$_jest,EPODZ,_pole);
      EPODZ.web_efld_opt(_win,,'enable='+$_jest,UD_POM,_pole);
      EPODZ.web_efld_opt(_win,,'enable='+$_jest,UD_POM,'NAZ_WYM'+$_nr);
      EPODZ.web_efld_opt(_win,,'mark='+$_jest,UD_POM,'NAZ_WYM'+$_nr)
   ?}
!};
SKID_MBP.cntx_pop();
EPODZ.cntx_pop();
~~


\epodz_dsp_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla tabeli EPODZ (WWW)
::----------------------------------------------------------------------------------------------------------------------
UD_POM.MODEL_WT:=EPODZ.SKID_MB().KOD;
EPODZ.web_display('RED_WTD',,"EPODZ.web_eclose()");
1


\bds_podz_wym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed wyświetl dla pól UD_POM - PBUD, JORG, OKOSZ, WYM4, WYM5
::   WE: _a - 1..5 (odpowiednio dla PBUD, JORG, OKOSZ, WYM4, WYM5)
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| UD_POM.PBUD:=EPODZ.PBUD().SYMBOL;
   exec('enable_wart','obiegi')
|? _a=2
|| UD_POM.JORG:=EPODZ.JORG().SYMBOL
|? _a=3
|| UD_POM.OKOSZ:=EPODZ.OKOSZ().SYMBOL
|? _a=4
|| UD_POM.WYM4:=EPODZ.WYM4().SYMBOL
|| UD_POM.WYM5:=EPODZ.WYM5().SYMBOL
?};
~~


\f3_podz_wym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: F3 dla pól UD_POM - PBUD, JORG, OKOSZ, WYM4, WYM5
::   WE: _a - 1..5 (odpowiednio dla PBUD, JORG, OKOSZ, WYM4, WYM5)
::----------------------------------------------------------------------------------------------------------------------
wart_wym:={? _a=1
          || UD_POM.PBUD
          |? _a=2
          || UD_POM.JORG
          |? _a=3
          || UD_POM.OKOSZ
          |? _a=4
          || UD_POM.WYM4
          || UD_POM.WYM5
          ?};
EPODZ.web_cntx_save();
exec('f3_dim','control',EPODZ.SKID_MB,_a)


\aed_podz_wym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji dla pól UD_POM - PBUD, JORG, OKOSZ, WYM4, WYM5
::   WE: _a - 1..5 (odpowiednio dla PBUD, JORG, OKOSZ, WYM4, WYM5)
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.use('skid_v'+(EPODZ.name()+2));
{? EPODZ.EDOKUM || EPODZ.EDOKUM() ?};
{? _a=1
|| {? UD_POM.PBUD='' || EPODZ.PBUD:=null; return(1) ?};
   wart_wym:=UD_POM.PBUD;
   _ref:=exec('ae_dim','control',EPODZ.SKID_MB,_a);
   {? _ref
   || {? app_info('web_sesid')<>''
      || typobi:=web_global_params_get().typobi;
         PAR_WYDR.RPAR3:=EDOKUM.NETTO;
         {? typobi=3 || PAR_WYDR.RPAR3:=100 ?}
      ?};
      EPODZ.PBUD:=_ref;
      UD_POM.PBUD:=EPODZ.PBUD().SYMBOL;
      SKIDXDUD.index('POZ'); SKIDXDUD.prefix(EPODZ.PBUD);
      {? SKIDXDUD.first()
      || {? SKIDXDUD.WART_IL='W'
         || EPODZ.WAL:={? SKIDXDUD.WSK_WAL='T'
                       || EDOKUM.WAL
                       || exec('wal_nar','dok_fks')
                       ?};
            EPODZ.JM:=null;
            {? EPODZ.WART=0
            || _typ:='VAT';
               _ile_juz:=0;
               SKIDXDUD.cntx_psh(); SKIDXDUD.index('POZ'); SKIDXDUD.prefix(EPODZ.PBUD);
               {? (_typ='VAT' | _typ='SAD') & (-(6+menu_txt()))<>'popraw'
               || EPODZ.cntx_psh(); EPODZ.index('EDOKUM'); EPODZ.prefix(EDOKUM.ref(),EPODZ.SKID_MB);
                  {? EPODZ.first()
                  || {!
                     |? SKIDXDUD.prefix(EPODZ.PBUD);
                        {? SKIDXDUD.first() & SKIDXDUD.WART_IL='W'
                        || _ile_juz+=EPODZ.WART
                        ?};
                        EPODZ.next()
                     !}
                  ?};
                  EPODZ.cntx_pop()
               ?};
               SKIDXDUD.cntx_pop();
               EPODZ.WART:=PAR_WYDR.RPAR3-_ile_juz
            ?}
         || {? EPODZ.JM=null || EPODZ.JM:=SKIDXDUD.JM ?};
            EPODZ.WAL:=null
         ?}
      ?};
      1
   ?}
|? _a=2
|| {? UD_POM.JORG='' || EPODZ.JORG:=null; return(1) ?};
   wart_wym:=UD_POM.JORG;
   _ref:=exec('ae_dim','control',EPODZ.SKID_MB,_a);
   {? _ref
   || EPODZ.JORG:=_ref;
      UD_POM.JORG:=EPODZ.JORG().SYMBOL;
      1
   ?}
|? _a=3
|| {? UD_POM.OKOSZ='' || EPODZ.OKOSZ:=null; return(1) ?};
   wart_wym:=UD_POM.OKOSZ;
   _ref:=exec('ae_dim','control',EPODZ.SKID_MB,_a);
   {? _ref
   || EPODZ.OKOSZ:=_ref;
      UD_POM.OKOSZ:=EPODZ.OKOSZ().SYMBOL;
      1
   ?}
|? _a=4
|| {? UD_POM.WYM4='' || EPODZ.WYM4:=null; return(1) ?};
   wart_wym:=UD_POM.WYM4;
   _ref:=exec('ae_dim','control',EPODZ.SKID_MB,_a);
   {? _ref
   || EPODZ.WYM4:=_ref;
      UD_POM.WYM4:=EPODZ.WYM4().SYMBOL;
      1
   ?}
|? _a=5
|| {? UD_POM.WYM5='' || EPODZ.WYM5:=null; return(1) ?};
   wart_wym:=UD_POM.WYM5;
   _ref:=exec('ae_dim','control',EPODZ.SKID_MB,_a);
   {? _ref
   || EPODZ.WYM5:=_ref;
      UD_POM.WYM5:=EPODZ.WYM5().SYMBOL;
      1
   ?}
?}


\bd_nazwym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed wyświetl dla pól UD_POM - NAZ_WYM1..NAZ_WYM5
::   WE: _a - 1..5
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| UD_POM.NAZ_WYM1:=exec('dim_name','control',EPODZ.SKID_MB,_a)
|? _a=2
|| UD_POM.NAZ_WYM2:=exec('dim_name','control',EPODZ.SKID_MB,_a)
|? _a=3
|| UD_POM.NAZ_WYM3:=exec('dim_name','control',EPODZ.SKID_MB,_a)
|? _a=4
|| UD_POM.NAZ_WYM4:=exec('dim_name','control',EPODZ.SKID_MB,_a)
|| UD_POM.NAZ_WYM5:=exec('dim_name','control',EPODZ.SKID_MB,_a)
?}


\set_var_podz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawia formuły zmiennych
::----------------------------------------------------------------------------------------------------------------------
UD_POM.UDDEFUPR:=exec('ud_def_upr_id','control');
{! _lp:=1..5
|! exec('set_fml','#field',UD_POM,'NAZ_WYM'+$_lp,"
      _nr:=#(cur_afld()+1);
      fld(exec('dim_name','control',EPODZ.SKID_MB,_nr))
   ")
!};
exec('set_fml','#field',UD_POM,'PBUD',
   "  UD_POM.PBUD:=EPODZ.PBUD().SYMBOL;
:      exec('enable_wart','obiegi');
      ~~
   ",
   "exec('be_dim','control',EPODZ.SKID_MB,1)",
   "exec('f3_dim','control',EPODZ.SKID_MB,1)",
   "  {? fld()='' || EPODZ.PBUD:=null; return(1) ?};
      _ref:=exec('ae_dim','control',EPODZ.SKID_MB,1);
      {? _ref
      || EPODZ.PBUD:=_ref;
         fld(EPODZ.PBUD().SYMBOL);
         SKIDXDUD.index('POZ'); SKIDXDUD.prefix(EPODZ.PBUD);
         {? SKIDXDUD.first()
         || {? SKIDXDUD.WART_IL='W'
            || EPODZ.WAL:={? SKIDXDUD.WSK_WAL='T'
                          || EDOKUM.WAL
                          || exec('wal_nar','dok_fks')
                          ?};
               EPODZ.JM:=null;
               {? EPODZ.WART=0
               || _typ:='VAT';
                  _ile_juz:=0;
                  SKIDXDUD.cntx_psh(); SKIDXDUD.index('POZ'); SKIDXDUD.prefix(EPODZ.PBUD);
                  {? (_typ='VAT' | _typ='SAD') & (-(6+menu_txt()))<>'popraw'
                  || EPODZ.cntx_psh(); EPODZ.index('EDOKUM'); EPODZ.prefix(EDOKUM.ref(),EPODZ.SKID_MB);
                     {? EPODZ.first()
                     || {!
                        |? SKIDXDUD.prefix(EPODZ.PBUD);
                           {? SKIDXDUD.first() & SKIDXDUD.WART_IL='W'
                           || _ile_juz+=EPODZ.WART
                           ?};
                           EPODZ.next()
                        !}
                     ?};
                     EPODZ.cntx_pop()
                  ?};
                  SKIDXDUD.cntx_pop();
                  EPODZ.WART:=PAR_WYDR.RPAR3-_ile_juz
               ?}
            || {? EPODZ.JM=null || EPODZ.JM:=SKIDXDUD.JM ?};
               EPODZ.WAL:=null
            ?}
         ?};
         1
      ?}
   "
);


exec('set_fml','#field',UD_POM,'JORG',
   "UD_POM.JORG:=EPODZ.JORG().SYMBOL; ~~",
   "exec('be_dim','control',EPODZ.SKID_MB,2)",
   "exec('f3_dim','control',EPODZ.SKID_MB,2)",
   "  {? fld()='' || EPODZ.JORG:=null; return(1) ?};
      _ref:=exec('ae_dim','control',EPODZ.SKID_MB,2);
      {? _ref
      || EPODZ.JORG:=_ref;
         fld(EPODZ.JORG().SYMBOL)
      ?}
   "
);
exec('set_fml','#field',UD_POM,'OKOSZ',
   "UD_POM.OKOSZ:=EPODZ.OKOSZ().SYMBOL; ~~",
   "exec('be_dim','control',EPODZ.SKID_MB,3)",
   "exec('f3_dim','control',EPODZ.SKID_MB,3)",
   "  {? fld()='' || EPODZ.OKOSZ:=null; return(1) ?};
      _ref:=exec('ae_dim','control',EPODZ.SKID_MB,3);
      {? _ref
      || EPODZ.OKOSZ:=_ref;
         fld(EPODZ.OKOSZ().SYMBOL)
      ?}
   "
);
exec('set_fml','#field',UD_POM,'WYM4',
   "UD_POM.WYM4:=EPODZ.WYM4().SYMBOL; ~~",
   "exec('be_dim','control',EPODZ.SKID_MB,4)",
   "exec('f3_dim','control',EPODZ.SKID_MB,4)",
   "  {? fld()='' || EPODZ.WYM4:=null; return(1) ?};
      _ref:=exec('ae_dim','control',EPODZ.SKID_MB,4);
      {? _ref
      || EPODZ.WYM4:=_ref;
         fld(EPODZ.WYM4().SYMBOL)
      ?}
   "
);
exec('set_fml','#field',UD_POM,'WYM5',
   "UD_POM.WYM5:=EPODZ.WYM5().SYMBOL; ~~",
   "exec('be_dim','control',EPODZ.SKID_MB,5)",
   "exec('f3_dim','control',EPODZ.SKID_MB,5)",
   "  {? fld()='' || EPODZ.WYM5:=null; return(1) ?};
      _ref:=exec('ae_dim','control',EPODZ.SKID_MB,5);
      {? _ref
      || EPODZ.WYM5:=_ref;
         fld(EPODZ.WYM5().SYMBOL)
      ?}
   "
)


\wprd_refresh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po odświeżeniu dla okna wertowania delegacji
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUMW.get()
|| ETYP_ATR.cntx_psh();
   EDOKUM.use('skid_v'+(EDOKUMW.name()+2));
   ETYP_ATR.index('KOLZ'); ETYP_ATR.prefix(EDOKUMW.EDOKUM().TYP);
   _opcja:='grayed=';
   {? ~ETYP_ATR.first() || _opcja+='I' ?};
   ETYP_ATR.cntx_pop();
   {? EDOKUMW.EDOKUM().TYP().ED_PODZ<>'T' || _opcja+='N' ?};
   {? ~EDOKUMW.EDOKUM().TYP().OBS_PROJ || _opcja+='T' ?};
   {? EDOKUMW.EDOKUM().ZAM='T' || _opcja+='PUCJ' ?};
   _grey:=Plugin.run('ACT_GREY_EDOKUM_001',OPERATOR.USER,'EDOKUMW','WPRD');
   {? type_of(_grey)=type_of('') & _grey<>''
   || STR.split(_grey,',');
      _opcja+=STR.get_word()
   ?};
   EDOKUMW.web_win_opt('WPRGD',web_top_ident(),_opcja)
?}


\rkprz_edokumw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Rekord przed dla tabeli EDOKUMW
::   WE: _a - 'AF' - akceptacja faktur
::            'PF' - przekazanie faktur
::            'AW' - akceptacja wniosków
::            'PF' - przekazywanie wniosków
::            'WW' - wprowadzanie wniosków
::            'WD' - wprowadzanie delegacji
::            'PD' - przekazywanie delegacji
::            'AD' - akceptacja delegacji
::----------------------------------------------------------------------------------------------------------------------
0


\fak_refr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po odświeżeniu dla tabeli EDOKUMW
::   WE: _a - 'AKC' - akceptacja faktur
::            'PRZ' - przekazanie faktur
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.use('skid_v'+(EDOKUMW.name()+2));
_gray:='';
{? EDOKUMW.get()
|| {? EDOKUMW.EDOKUM().TYP().ZAP_REAL<>'T' || _gray+='B' ?};
   ETYP_ATR.cntx_psh(); ETYP_ATR.index('KOLZ'); ETYP_ATR.prefix(EDOKUMW.EDOKUM().TYP,null);
   {? ~ETYP_ATR.first() || _gray+='I' ?};
   ETYP_ATR.cntx_pop();
   {? EDOKUMW.EDOKUM().ZAM='T'
   || {? _a='AKC'
      || _gray+='CRO'
      |? _a='PRZ'
      || _gray+='JO'
      ?}
   ?};
   {? EDOKUMW.EDOKUM().TYP().TYPVATPR || _gray+='V' ?};
   {? ~EDOKUMW.EDOKUM().TYP().OBS_PROJ || _gray+='E' ?}
?};
_grey:=Plugin.run('ACT_GREY_EDOKUM_001',OPERATOR.USER,'EDOKUMW',_a);
{? type_of(_grey)=type_of('') & _grey<>''
|| STR.split(_grey,',');
   _gray+=STR.get_word()
?};
EDOKUMW.web_win_opt(web_top_win(),_a,'grayed='+_gray);
1


\env_edokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.10]
:: OPIS: Ustawianie środowiska pracy dla dokumentu (EDOKUM) - WT
::   WE: _a - 'AF' - akceptacja faktur
::            'PF' - przekazanie faktur
::            'AW' - akceptacja wniosków
::            'PW' - przekazanie wniosków
::            'WW' - wprowadzanie wniosków
::            'WD' - wprowadzanie delegacji
::            'AD' - akceptacja delegacji
::            'PD' - przekazanie delegacji
::       _b - 1 - tabela EDOKUMW
::            0 - EDOKUM
::            2 - na podstawie stałych systemu (start systemu)
::       _c - bieżąca obsługa (opcja)
::  OLD: \env_edokum/obiegi.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<3 || _c:=0 ?};
{? _=1 || _b:=1 ?};
{? ~_b
|| EDOKUMW.use('skidv1'+(EDOKUM.name()+2))
?};
{? type_of(_a)=type_of('')
|| {? _a='AF'
   || zakres:=2; typobi:=1
   |? _a='PF'
   || zakres:=5; typobi:=1
   |? _a='AW'
   || zakres:=2; typobi:=2
   |? _a='PW'
   || zakres:=5; typobi:=2
   |? _a='WW'
   || zakres:=1; typobi:=2
   |? _a='WD'
   || zakres:=1; typobi:=3
   |? _a='AD'
   || zakres:=2; typobi:=3
   |? _a='PD'
   || zakres:=5; typobi:=3
   ?}
?};
_dalej:=1;
exec('env_wt','b_proces');
{? _b=0
|| exec('maski_w','obiegi',1)
|? _b=1
|| exec('maski_w','obiegi',0)
|| exec('maski_w','obiegi',2)
?};
exec('czytaj','#stalesys');
EDOKOS.cntx_psh(); EDOKOS.prefix();
_eds:={? EDOKOS.get() || $EDOKOS.ref() || '' ?};
EDOKOS.cntx_pop();
web_params_set(exec('obj_ntab_set','#array',web_params_get(_c),
              'ref_edos',_eds,
              'todo_run',var_pres('todo_run')>0,
              'akcja',{? var_pres('akcja')>0 & type_of(akcja)=type_of('') || akcja || '' ?},
              'zakres',{? var_pres('zakres')>0 || zakres || 0 ?},
              'typobi',{? var_pres('typobi')>0 || typobi || 0 ?}
              ));
{? _a<>'WW' & _a<>'WD'
|| exec('rkprz1','obiegi',zakres);
   {? (_b & ~EDOKUMW.get()) | (~_b & ~EDOKUM.get())
   || _dalej:=0
   || {? _b || EDOKUMW.EDOKUM() ?}
   ?}
?};
EDOKUM.web_cntx_save(1);
EDOKOS.web_cntx_save(1);
{? var_pres('typobi')>0
|| web_global_params_set(exec('obj_ntab_set','#array',web_global_params_get(),
                         'typobi',typobi,
                         'zakres',zakres
                        ))
?};
_dalej


\env_edokum_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.10]
:: OPIS: Odczytanie i ustawienie środowiska pracy - WT
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| _par:=web_params_get();
   web_params_set(_par);
   exec('env_wt','b_proces');
   {? ~_
   || EDOKUM.web_cntx_load(0);
      EDOKOS.web_cntx_load(0);
      EDOKUM.web_cntx_save(0);
      EDOKOS.web_cntx_save(0)
   ?};
   exec('maski_w','obiegi',1);
   exec('czytaj','#stalesys');
   {? type_of(_par)>100 & var_pres('typobi',_par)>0
   || VAR_DEL.delete('typobi');
      typobi:=_par.typobi
   ?};
   {? type_of(_par)>100 & var_pres('zakres',_par)>0
   || VAR_DEL.delete('zakres');
      zakres:=_par.zakres
   ?};
   {? type_of(_par)>100 & var_pres('zakres',_par)>0 & var_pres('typobi',_par)>0
   || exec('rkprz1','obiegi',zakres)
   ?};
   OBIEGI.TYP_ID:='T';
   exec('typobi','obiegi')
?}


\env_edokum_get1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.10]
:: OPIS: Odczytanie i ustawienie środowiska pracy - WT
::----------------------------------------------------------------------------------------------------------------------
params_exec('env_edokum_get','obiegi',1)


\podz_dob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Podzialy dla kontrolingu - przegladanie
::   WE: _a - opcja - 'AF' - akceptacja faktur
::                    'PF' - przekazanie faktur
::                    'AW' - akceptacja wniosków
::                    'PW' - przekazanie wniosków
::                    'WW' - wprowadzanie wniosków
::                    'WD' - wprowadzanie delegacji
::                    'AD' - akceptacja delegacji
::                    'PD' - przekazanie delegacji
::       _b - opcja - 1 - dla EDOKUMW
::                    2 - dla EDOKUM
::       _c - opcja - 0/1 - tylko podgląd
::  OLD: \podz_dob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_dalej:=1;
_display:={? var_press('_c')>0 || _c || 0 ?};
{? app_info('web_sesid')<>'' & _b=1
|| {? ~EDOKUMW.get()
   || {? _a='AF' | _a='PF'
      || FUN.info('Nie znaleziono faktury.'@);
         {? _a='PF'
         || exec('dob_refresh','obiegi','P','F')
         || exec('dob_refresh','obiegi','A','F')
         ?}
      |? _a='AW' | _a='PW' | _a='WW'
      || FUN.info('Nie znaleziono wniosku.'@);
         {? _a='WW'
         || exec('dob_refresh','obiegi','W','W')
         |? _a='PW'
         || exec('dob_refresh','obiegi','P','W')
         || exec('dob_refresh','obiegi','A','W')
         ?}
      || FUN.info('Nie znaleziono delegacji.'@);
         {? _a='WD'
         || exec('dob_refresh','obiegi','W','D')
         |? _a='PD'
         || exec('dob_refresh','obiegi','P','D')
         || exec('dob_refresh','obiegi','A','D')
         ?}
      ?};
      _dalej:=0
   ?}
?};
{? _dalej & app_info('web_sesid')<>''
|| {? _b=1
   || EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix(); EDOKUMW.EDOKUM()
   ?};
   _dalej:=exec('env_edokum','obiegi',_a,0);
   {? _dalej
   || _get:=web_params_get();
      {? type_of(_get)>100 & var_pres('akcja',_get)>0 & (_get.akcja='dołącz' | _get.akcja='popraw')
      || {? _get.akcja='dołącz'
         || _par:=web_global_params_get();
            {? type_of(_par)>100 & var_pres('act_ok',_par)>0 & ~_par.act_ok
            || _pole:=params_exec('dol_dob_wt2','obiegi',0,0);
               {? type_of(_pole)=type_of('') & _pole<>''
               || web_top_update(0,,,_pole)
               || EDOKUM.get()
               ?};
               _dalej:=(_pole='')
            ?}
         || _pole:=params_exec('pop_dob_wt2','obiegi',0,0);
            {? type_of(_pole)=type_of('') & _pole<>''
            || web_top_update(0,,,_pole)
            || EDOKUM.get()
            ?};
            _dalej:=(_pole='')
         ?}
      ?}
   ?}
?};
{? _dalej & PAR_SKID.get(80)='N'
|| FUN.info('W parametrach ustawiono na N parametr 80 (Dostępna ewidencja podziałów controllingowych).'@); _dalej:=0
?};
{? _dalej & EDOKUM.TYP().ED_PODZ<>'T'
|| FUN.info('Wybrany typ nie umożliwia rejestracji podziałów controllingowych.'@); _dalej:=0
?};
{? _dalej
|| {? app_info('web_sesid')<>''
   || _okno:={? _a='AF' | _a='PF'
             || 'WER_WTF'
             |? _a='AW' | _a='PW' | _a='WW'
             || 'WER_WTW'
             || 'WER_WTD'
             ?};
      _okno_r:={? _a='WD' | _a='PD' | _a='AD'
               || 'RED_WTD'
               || 'RED_WT'
               ?};
      EPODZ.index('EDOKUMDS'); EPODZ.prefix(EDOKUM.ref());
      zakres:={? (1+_a)='W' || 1 |? (1+_a)='A' || 2 || 5 ?};
      _gray:='';
      {? _display | exec('blok_podz','obiegi') || _gray:='Adpu:d' ?};
      EPODZ.web_win_init(_okno,web_top_ident(),'grayed='+_gray);
      EDOKUM.web_cntx_save();
      EPODZ.web_select(_okno,,,_okno_r)
   |? _dalej
   || exec('set_var_podz','obiegi');
      {? EDOKUM.r_lock(1,1,1)
      || PAR_WYDR.RPAR3:=EDOKUM.NETTO;
         exec('sum_podz','obiegi');
         {? typobi=1
         || EPODZ.win_sel('WER');
            SKID.fld_fml('SKXDRAZE','DISPLAY_FORMAT',"'out_prec=2'")
         |? typobi=2
         || EPODZ.win_sel('WER2');
            SKID.fld_fml('SKXDRAZE','DISPLAY_FORMAT',"'out_prec=2'")
         |? typobi=3
         || EPODZ.win_sel('WER4');
            PAR_WYDR.RPAR3:=100
         ?};
         {? typobi=3
         || EPODZ.win_edit('RED1')
         || EPODZ.win_edit('RED')
         ?};
         OBIEGI.ZAKL:='EPODZ';
         EPODZ.index('EDOKUMDS'); EPODZ.prefix(EDOKUM.ref());
         _act:=_actb:='';
         {? _display | exec('blok_podz','obiegi')
         || _act:='DdPpUuA'; _actb:='ADd';
            _act:=_act+{? +_actb || ':'+_actb || _act ?};
            EPODZ.select(,,,_act)
         || SKID_MBN.win_dict('WER');
            __ofz:='T';
            _act:=_act+{? +_actb || ':'+_actb || _act ?};
            EPODZ.select(,,,_act);
            &__ofz
         ?};
         SKID.fld_fml('SKXDRAZE','DISPLAY_FORMAT',"*");
         EDOKUM.r_unlock()
      || exec('err_kom','obiegi')
      ?};
      ''
   ?}
?}


\naz_biez_etap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Zwraca nazwę bieżącej czynności
::  OLD: \naz_biez_etap/skid_obi.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
OBIEGI.B_PREL:=EDOKUM.B_PREL;
OBIEGI.B_PRELS:=EDOKUM.B_PRELS;
_zwrot:={? EDOKUM.STDEKRD || 'zadekretowany' || EDOKUM.B_PRELS ?};
_zwrot


\err_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Komunikat, w przypadku obslugi dokumentu przez innego użytkownika
::  OLD: \err_kom/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? typobi=1
|| FUN.info('Faktura obsługiwana przez innego użytkownika systemu.'@)
|? typobi=2
|| FUN.info('Wniosek obsługiwany przez innego użytkownika systemu.'@)
|| FUN.info('Delegacja obsługiwana przez innego użytkownika systemu.'@)
?}


\spr_stat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [$1210]
:: OPIS: Sprawdza status dla biezacego EDOKOS
::  OLD: \spr_stat/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_sprall:={? _ || _a || 1 ?};
_status:='';
EDOKOS.cntx_psh();
EDOKOS.index('EDOKUM'); EDOKOS.prefix(EDOKOS.EDOKUM,OBIEGI.B_PREL,OPERATOR.USER);
{? EDOKOS.first() || _status:=EDOKOS.STATUS ?};
{? _status='' & _sprall
|| EDOKOS.prefix(EDOKOS.EDOKUM,OBIEGI.B_PREL);
   {? EDOKOS.first()
   || {! |?
         {? EDOKOS.STATUS<>'T' || _status:=EDOKOS.STATUS ?};
         _status='' & EDOKOS.next()
      !}
   ?};
   {? _status='' & EDOKOS.first() || _status:=EDOKOS.STATUS ?}
?};
EDOKOS.cntx_pop();
:{? var_pres('typobi')>0 & (typobi=2 | typobi=3) & var_pres('utw_dob')<=0 || _status:='T' ?};
_status


\over_period
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Funkcja kontroluje nakladanie sie zakresow delegacji
::   WE: _a = data od [date]
::       _b = godzina od [time]
::       _c = data do [date]
::       _d = godzina do [time]
::       _e = delegowany [ref]
::       _f = wartosc EDOKUM.TYP().CZY_DATY [int], 0 brak edycji, 1 - mozliwa edycja, 2 - wymagane wprowadzenie
::       _g = wartosc EDOKUM.TYP().CZY_GODR [int], 0 brak edycji, 1 - mozliwa edycja, 2 - wymagane wprowadzenie
::       _h = wartosc EDOKUM.TYP().CZY_GODZ [int], 0 brak edycji, 1 - mozliwa edycja, 2 - wymagane wprowadzenie
::       _i = 1
::       _j = ref delegacji (w przypadku poprawiania), [ref]
::       _k = typ obiegu [ref]
::       _l = null
::       _m = menu [string] - czy 'Popraw', czy 'Dołącz'
::   WY: [string] pusty jesli ok lub opis problemu
::  OLD: \over_period/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_result:='';
EDOKUM.cntx_psh();
{? _h=0 | (_h=1 & _d=time(0,0,0)) || _d:=time(24,0,0) ?};
_tm_od:=tm_stamp(_a~1,_a~2,_a~3,_b~1,_b~2,_b~3);
_tm_do:=tm_stamp(_c~1,_c~2,_c~3,_d~1,_d~2,_d~3);
_ref:=EDOKUM.ref();
EDOKUM.cntx_pop();
_drodzaj:='delegacji'@;
EDOKUM.cntx_psh();
EDOKUM.index('DELEGOWA');
EDOKUM.prefix(_k,_e);
{? EDOKUM.first()
|| {! |?
      {? EDOKUM.ZAM='T'
      || _pomin:=1
      || _pomin:=0
      ?};
      {? _pomin=0 & (_l='' | _l<>$EDOKUM.ref()) & _j<>EDOKUM.ref()
      || EDOKUM.cntx_psh();
         {? EDOKUM.TYP().CZY_GODZ=0 | (EDOKUM.TYP().CZY_GODZ=1 & EDOKUM.GODZ_DO=time(0,0,0))
         || EDOKUM.GODZ_DO:=time(24,0,0)
         ?};
         _tmp_od:=tm_stamp(EDOKUM.DATA_OD~1,EDOKUM.DATA_OD~2,EDOKUM.DATA_OD~3,EDOKUM.GODZ_OD~1,EDOKUM.GODZ_OD~2,EDOKUM.GODZ_OD~3);
         _tmp_do:=tm_stamp(EDOKUM.DATA_DO~1,EDOKUM.DATA_DO~2,EDOKUM.DATA_DO~3,EDOKUM.GODZ_DO~1,EDOKUM.GODZ_DO~2,EDOKUM.GODZ_DO~3);
         EDOKUM.cntx_pop();
         {? _tm_od <= _tmp_do & _tmp_od <= _tm_do & (-_m='dołącz' | _ref<>EDOKUM.ref())
         || _trodzaj:='istniejącą delegacją'@;
            _result:='Zakres czasowy '@+_drodzaj+' pokrywa się z '@+_trodzaj+': '+EDOKUM.ID
                    +' (od '@+$EDOKUM.DATA_OD+' '+$EDOKUM.GODZ_OD+' do '@+$EDOKUM.DATA_DO+' '+$EDOKUM.GODZ_DO+')'
         ?}
      ?};
      _result='' & EDOKUM.next()
   !}
?};
EDOKUM.cntx_pop();
_result


\dspnip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Na wyswietl dla pola SKID.NIP
::  OLD: \dspnip/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| SKID.NIP:='';
   _kh:=EDOKUM.KH; _kodkh:=EDOKUM.KH().KOD;
   {? _kh<>null || exec('dspnip1','obiegi',_kodkh) ?};
   1
|| SKID.NIP:='';
   {? ~exec('bdswniosek','obiegi')
   || 0
   || _kh:=EDOKUM.KH; _kodkh:=EDOKUM.KH().KOD;
      {? _kh<>null || exec('dspnip1','obiegi',_kodkh) ?};
      1
   ?}
?}


\dspnip1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.10]
:: OPIS: Na wyświetl dla pola SKID.NIP - wewnętrzna
::   WE: _a - kod kontrahenta
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
KH.index('KOD'); KH.prefix(2,_a);
{? KH.first() & KH.KOD=SLO.KOD || SKID.NIP:=KH.NIP ?};
KH.cntx_pop()


\benipdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Przed redakcja pola SKID.NIP
::  OLD: \benipdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:={? exec('bewniosek','obiegi') || SKID.SL_KH<>'' || 0 ?};
EdokNip:=gsub(gsub(SKID.NIP,' ',''),'-','');
_zwrot


\aenipdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Po redakcji pola SKID.NIP
::   WE: [_a] - Czy na F3
::  OLD: \aenipdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=0 ?};
_nip:='';
_zwrot:=1;
{? app_info('web_sesid')<>''
|| _par:=web_global_params_get();
   {? type_of(_par)>100 & var_pres('KH',_par)>0 & _par.KH
   || SLO.prefix();
      {? SLO.seek(_par.KH,SLO.name()) || EDOKUM.KH:=SLO.ref() ?};
      _par.KH:=0; web_global_params_set(_par);
      return(1)
   ?}
?};
{? SKID.NIP<>'' | _a
|| SLU.cntx_psh(); SLU.index('NAZ'); SLU.prefix();
   {? SLU.find_key(SKID.SL_KH) & SKID.SL_KH=SLU.NAZ
   || SLO.cntx_psh(); SLO.index('SL'); SLO.prefix(SLU.ref());
      {? SLO.first()
      || _snip:=exec('niptostr','#string',SKID.NIP);
         KH.cntx_psh(); KH.index('SNIP');
         {? _a
         || KH.prefix(2)
         || KH.prefix(2,_snip)
         ?};
         {? KH.first()
         || VAR_DEL.delete('TMPKHDOB');
            TMPKHDOB:=tab_tmp(3,'KOD','STRING[8]','Kod',
                                'SKR','STRING[20]','Skrót',
                                'NIP','STRING[20]','NIP',
                                'NAZ','STRING[100]','Nazwa',
                                'REFKHSLO','INTEGER','Ref',
                                'REFKH','INTEGER','Ref kh',
                                'JESTWSLO','INTEGER','Czy jest w SLO');
            _sel:=0;
            {! |?
               {? KH.NIP<>''
               || TMPKHDOB.JESTWSLO:=(SLO.find_key(KH.KOD) & SLO.KOD=KH.KOD);
                  {? ~TMPKHDOB.JESTWSLO || _sel:=1 ?};
                  TMPKHDOB.KOD:=KH.KOD;
                  TMPKHDOB.SKR:=KH.SKR;
                  TMPKHDOB.NAZ:=KH.NAZ;
                  TMPKHDOB.NIP:=KH.NIP;
                  TMPKHDOB.REFKHSLO:=#SLO.ref();
                  TMPKHDOB.REFKH:=KH.ref();
                  TMPKHDOB.add()
               ?};
               KH.next()
            !};
            {? TMPKHDOB.first()
            || {? app_info('web_sesid')<>''
               || {? _sel | TMPKHDOB.size()>1
                  || _tcid:=app_info('web_tcid');
                     _mbid:=app_info('web_mbid');
                     _sesid:=app_info('web_sesid');
                     _tabid:=app_info('web_tabid');
                     TAB_WT.index('INDEX04'); TAB_WT.prefix(_tcid,_tabid,4);
                     do();
                     {? TAB_WT.first()
                     || {! |?
                           _delr:=TAB_WT.del(,1);
                           {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
                        !}
                     ?};
                     {? TMPKHDOB.first()
                     || {! |?
                           TAB_WT.blank(1);
                           TAB_WT.SESID:=_sesid;
                           TAB_WT.MBID:=_mbid;
                           TAB_WT.TCID:=_tcid;
                           TAB_WT.TABID:=_tabid;
                           TAB_WT.TYP:=4;
                           TAB_WT.KOD:=TMPKHDOB.KOD;
                           TAB_WT.NAZ:=TMPKHDOB.NAZ;
                           TAB_WT.STR01:=TMPKHDOB.SKR;
                           TAB_WT.STR02:=TMPKHDOB.NIP;
                           TAB_WT.INT01:=TMPKHDOB.REFKHSLO;
                           TAB_WT.INT02:=TMPKHDOB.REFKH;
                           TAB_WT.INT03:=TMPKHDOB.JESTWSLO;
                           TAB_WT.add();
                           TMPKHDOB.next()
                        !}
                     ?};
                     end();
                     _tcid:=app_info('web_tcid');
                     _tabid:=app_info('web_tabid');
                     exec('tab_form','obiegi','TAB_WT','wyb_kh_po_nip','obiegi','','');
                     web_params_set(exec('obj_ntab_set','#array',web_params_get(1),
                                    'SL_KH',SKID.SL_KH
                                    ));
                     EDOKUM.web_cntx_save(1);
                     TAB_WT.index('INDEX01'); TAB_WT.prefix(_tcid,_tabid,4);
                     _zwrot:=0;
                     TAB_WT.web_select('WER04')
                  || SLO.prefix();
                     {? SLO.seek(TMPKHDOB.REFKHSLO,SLO.name()) || EDOKUM.KH:=SLO.ref() ?}
                  ?}
               || {? _sel | _a | TMPKHDOB.size()>1
                  || _tyt:={? _a
                           || 'Kontrahenci'
                           || 'Kontrahenci z NIP o początkowych znakach: %1'@[SKID.NIP]
                           ?};
                     _wer:=TMPKHDOB.mk_sel(_tyt,'P',,'tmpkhdob_wer',,,,,'U');
                     TMPKHDOB.win_fld(_wer,,'KOD');
                     TMPKHDOB.win_fld(_wer,,'SKR');
                     TMPKHDOB.win_fld(_wer,,'NIP',,,20);
                     TMPKHDOB.win_fld(_wer,,'NAZ',,,77);
                     TMPKHDOB.win_act(_wer,,'Formuła','Wybierz'@@,,'Wczytanie wybranego kontrahenta'@,,"sel_exit()",1);
                     TMPKHDOB.win_act(_wer,,'Formuła','Historia kontroli NIP-u'@@,,'Wyświetla historię kontroli NIP-u'@,,
                        "exec('hist_chk_nip','kontrahent',TMPKHDOB.REFKH)"
                     );
                     TMPKHDOB.win_act(_wer,,'Wyświetl',,,,"exec('dspkhnip','obiegi')");
                     TMPKHDOB.win_act(_wer,0,'Formuła','Legenda'@@,,'Opis znaczenia kolorów wierszy'@,,
                                      "exec('legenda','color','$Kontrahent obecny w słowniku '+SKID.SL_KH)");
                     TMPKHDOB.win_act(_wer,0,'Rekord',,,,"{? TMPKHDOB.JESTWSLO || exec('findtmp','#color') || '' ?} ");
                     TMPKHDOB.win_sel(_wer);
                     {? _a
                     || _tti:=TMPKHDOB.ndx_tmp('',1,'NIP',,0);
                        TMPKHDOB.index(_tti);
                        TMPKHDOB.prefix();
                        TMPKHDOB.find_key(SKID.NIP) | TMPKHDOB.first()
                     || TMPKHDOB.first()
                     ?};
                     {! |?
                        {? TMPKHDOB.select(,1,3)
                        || SLO.prefix();
                           {? SLO.seek(TMPKHDOB.REFKHSLO,SLO.name())
                           || {? ~TMPKHDOB.JESTWSLO
                              || {? FUN.ask('Wybrana pozycja nie jest obecna w słowniku %1.Dołączyć do słownika i wczytać'@[SKID.SL_KH])
                                 || SLO.cntx_psh(); SLO.prefix();
                                    {? SLU.DL=+form(TMPKHDOB.KOD)
                                    || SLO.SLU:=SLU.ref();
                                       SLO.KOD:=TMPKHDOB.KOD;
                                       SLO.TR:=TMPKHDOB.NAZ;
                                       {? SLO.add(1)
                                       || EDOKUM.KH:=SLO.ref();
                                          _nip:=TMPKHDOB.NIP
                                       || FUN.info('Operacja dodawania do słownika nie powiodła się.'@)
                                       ?}
                                    ?};
                                    SLO.cntx_pop();
                                    0
                                 || 1
                                 ?}
                              || EDOKUM.KH:=SLO.ref();
                                 _nip:=TMPKHDOB.NIP;
                                 {? var_press('KH_FULL',EDOKUM)>0 & (var_press('EdokKh')>0 & EdokKh<>EDOKUM.KH)
                                 || KH.cntx_psh();
                                    KH.prefix();
                                   {? KH.seek(TMPKHDOB.REFKH,)
                                   || EDOKUM.KH_FULL:=KH.NAZ_P;
                                      EDOKUM.UL:=KH.UL;
                                      EDOKUM.MIASTO:=KH.MIASTO;
                                      EDOKUM.POCZ:=KH.POCZ;
                                      EDOKUM.DOM:=KH.DOM;
                                      EDOKUM.LOKAL:=KH.LOKAL;
                                      EDOKUM.KPOCZ:=KH.KPOCZ
                                   ?};
                                   KH.cntx_pop()
                                 ?};
                                 0
                              ?}
                           || 0
                           ?}
                        || 0
                        ?}
                     !}
                  || SLO.prefix();
                     {? SLO.seek(TMPKHDOB.REFKHSLO,SLO.name())
                     || {? cur_tab(1,1)=EDOKUM | var_pres('objID')>0
                        || EDOKUM.KH:=SLO.ref();
{? var_press('EdokKh')>0 & EdokKh<>EDOKUM.KH
                          ||  KH.cntx_psh(); KH.prefix();
                           {? KH.seek(TMPKHDOB.REFKH,)
                           || EDOKUM.KH_FULL:=KH.NAZ_P;
                              EDOKUM.UL:=KH.UL;
                              EDOKUM.MIASTO:=KH.MIASTO;
                              EDOKUM.POCZ:=KH.POCZ;
                              EDOKUM.DOM:=KH.DOM;
                              EDOKUM.LOKAL:=KH.LOKAL;
                              EDOKUM.KPOCZ:=KH.KPOCZ
                           ?};
                           KH.cntx_pop()
                        ?}
                     ?}
                     ?}
                  ?};
                  VAR_DEL.delete('TMPKHDOB')
               ?}
            ?}
         ?};
         KH.cntx_pop()
      ?};
      SLO.cntx_pop()
   ?};
   SLU.cntx_pop()
?};
{? _a || _nip || _zwrot ?}


\wyb_kh_po_nip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wybór kontrahenta - po redakcji NIP-u
::----------------------------------------------------------------------------------------------------------------------
TAB_WT.web_close();
EDOKUM.web_cntx_load(1);
_dynamic:=exec('get_wt_par','obiegi2','dynamic');
{? _dynamic=1
|| SKID.SL_KH:=exec('get_wt_par','obiegi2','SL_KH')
|| SKID.SL_KH:=web_params_get().SL_KH
?};
SLU.index('NAZ'); SLU.prefix();
{? SLU.find_key(SKID.SL_KH) & SLU.NAZ=SKID.SL_KH
|| SLO.prefix();
   {? SLO.seek(TAB_WT.INT01,SLO.name())
   || {? ~TAB_WT.INT03
      || SLO.cntx_psh(); SLO.prefix();
         {? SLU.DL=+form(TAB_WT.KOD)
         || SLO.SLU:=SLU.ref();
            SLO.KOD:=TAB_WT.KOD;
            SLO.TR:=TAB_WT.NAZ;
            {? SLO.add(1) || EDOKUM.KH:=SLO.ref() ?}
         ?};
         SLO.cntx_pop()
      || EDOKUM.KH:=SLO.ref()
      ?}
   ?};
   {? EDOKUM.KH
   || exec('set_wt_par','obiegi2','KH',#EDOKUM.KH)
   || exec('set_wt_par','obiegi2','KH',0)
   ?};
   {? _dynamic=1
   || web_top_def_fld_update(1,1,TAB_WT.KOD)
   || web_top_fld_update(1,1)
   ?}
?}


\dspkhnip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Na wyswietl dla kontrahentow z takim samym symbolem NIP
::  OLD: \dspkhnip/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh(); KH.prefix();
{? KH.seek(TMPKHDOB.REFKH,KH.name())
|| exec('kh_dod_ini','kontrahent');
   KH.win_edit('RED'); KH.display()
?};
KH.cntx_pop()


\spr_edokrzap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Sprawdzenie, czy biezace zapotrzebowanie nie jest podpiete pod dokument w obiegu
::   WE: _a - 1/0 - czy dawac komunikat
::   WY: 1 - jest podpiete
::       0 - nie jest
::  OLD: \spr_edokrzap/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
ETYPY.cntx_psh(); TYPOBIEG.cntx_psh(); ROK_F.cntx_psh();
{? EDOKUM.TYP().TYPOBIEG().NAZWA='Obieg wniosków' & ETYPY.ZAPOT
|| ROK_F.index('KODG'); ROK_F.prefix(EDOKUM.name()+2);
   {? ROK_F.first()
   || _rok:=ROK_F.ref(); _ed:=EDOKUM.ref();
      ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
      {? ROK_F.first()
      || EDOKRZAP.cntx_psh();
         {! |?
            EDOKRZAP.use('skid_q'+ROK_F.KOD);
            EDOKRZAP.index('EZAPOT'); EDOKRZAP.prefix(_ed,_rok);
            _zwrot:=EDOKRZAP.first();
            ~_zwrot & ROK_F.next()
         !};
         EDOKRZAP.cntx_pop()
      ?}
   ?};
   {? _zwrot & _a || FUN.info('Wybrany wniosek jest podpięty pod fakturę w obiegu.'@) ?}
?};
ETYPY.cntx_pop(); TYPOBIEG.cntx_pop(); ROK_F.cntx_pop();
_zwrot


\errnodok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Komunikat, w przypadku, gdy nie znaleziono dokumentu
::  OLD: \errnodok/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? typobi=1
|| FUN.info('Nie znaleziono faktury.'@)
|? typobi=2
|| FUN.info('Nie znaleziono wniosku.'@)
|? typobi=3
|| FUN.info('Nie znaleziono delegacji.'@)
?}


\okn_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Okienko z wyświelaniem poszczególnych czynności obiegu informacji
::  OLD: \okn_opis/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.B_PREL<>''
|| EDOKLOG.cntx_psh(); EDOKLOG.index('DISP'); EDOKLOG.prefix(EDOKUM.ref());
   EDOKOS.cntx_psh(); EDOKOS.index('DISP1'); EDOKOS.prefix('T',EDOKUM.ref(),EDOKUM.B_PREL);
   _okn_grp:=EDOKLOG.grp_make('Obieg dokumentu'@,,'edoklog_selxx');
   EDOKLOG.grp_sel(_okn_grp,EDOKLOG,'WER','Wykonane operacje'@,,,,,,,,,'maximized');
   EDOKLOG.grp_sel(_okn_grp,EDOKOS,'WER','Bieżąca czynność'@,,,,,,,,,'maximized');
   EDOKLOG.win_sel(_okn_grp);
   EDOKLOG.select();
   EDOKOS.cntx_pop(); EDOKLOG.cntx_pop()
|| EDOKLOG.index('DISP'); EDOKLOG.prefix(EDOKUM.ref());
   EDOKLOG.win_sel('WER'); EDOKLOG.select()
?}


\okn_opis_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Okienko z opisem obiegu w WEBTERM
::   WE: _a - 1 - dla bieżącego EDOKUMW
::            2 - dla bieżącego EDOKUM
::            3 - dla bieżącego EDOKOS
::----------------------------------------------------------------------------------------------------------------------
{? _a=2 | _a=3 | (_a=1 & EDOKUMW.get())
|| _get1:=web_params_get();
   {? type_of(_get1)>100 & var_pres('akcja',_get1)>0 & _get1.akcja='dołącz'
   || FUN.info('Dokument niezapisany. Brak historii obiegu.'@)
   || {? _a=1
      || EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix(); EDOKUMW.EDOKUM()
      |? _a=2
      || EDOKUMW.use('skidv1'+(EDOKUM.name()+2)); EDOKUMW.prefix()
      || EDOKUM.use('skid_v'+(EDOKOS.name()+2)); EDOKOS.prefix(); EDOKOS.EDOKUM()
      ?};
      _mas:=EDOKUM.name()+2;
      EDOKLOG.use('skid_d'+_mas);
      EDOKOS.use('skid_y'+_mas);
      {? EDOKUM.B_PREL<>'' & EDOKUM.ZAM<>'T'
      || web_params_set(exec('obj_ntab_set','#array',_get1,
                        'ref_edok',$EDOKUM.ref()
                        ));
         EDOKLOG.index('DISP'); EDOKLOG.prefix(EDOKUM.ref());
         EDOKOS.index('DISP1'); EDOKOS.prefix('T',EDOKUM.ref(),EDOKUM.B_PREL);
         EDOKLOG.web_select('GR_WT')
      || EDOKLOG.index('DISP'); EDOKLOG.prefix(EDOKUM.ref());
         EDOKLOG.web_select('WER_WT')
      ?}
   ?}
|| FUN.info('Nie znaleziono dokumentu.'@)
?}


\bobs_wer_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą okienka historii obiegu
::   WE: _a - 1 - EDOKLOG
::            2 - EDOKOS
::----------------------------------------------------------------------------------------------------------------------
_mas:=ref_name(web_params_get.ref_edok)+2;
EDOKUM.use(ref_name(web_params_get.ref_edok)); EDOKUM.index('ID'); EDOKUM.prefix();
{? EDOKUM.seek(web_params_get.ref_edok)
|| {? _a=1
   || EDOKLOG.use('skid_d'+_mas);
      EDOKLOG.index('DISP'); EDOKLOG.prefix(EDOKUM.ref())
   || EDOKOS.use('skid_y'+_mas);
      EDOKOS.index('DISP1'); EDOKOS.prefix('T',EDOKUM.ref(),EDOKUM.B_PREL)
   ?}
?};
1


\rkprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Rekord przed - dokumenty w obiegu
::  OLD: \rkprz/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.EDOKOS:=null;
EDOK_ATR.use('edokat'+(EDOKUM.name()+2));
exec('rkprz1','obiegi',zakres);
exec('kolor_et','obiegi','EDOKUM');
_zwrot:='';
{? OBIEGI.EDOKOS<>null
|| OBIEGI.EDOKOS();
   exec('dni_realizacji','obiegi');
   _zwrot:={? EDOKUM.ZAM='T'
           || {? typobi=1
              || 'EDOKUM#01#06'
              |? typobi=2
              || 'EDOKUM#02#06'
              || 'EDOKUM#04#06'
              ?}
           |? zakres=3 & EDOKUM.TYP().DEKR='N'
           || {? typobi=1
              || 'EDOKUM#01#05'
              |? typobi=2
              || 'EDOKUM#02#05'
              || 'EDOKUM#04#05'
              ?}
           |? EDOKUM.STDEKRD
           || {? typobi=1
              || 'EDOKUM#01#02'
              |? typobi=2
              || 'EDOKUM#02#02'
              || 'EDOKUM#04#02'
              ?}
           |? (zakres=1 | zakres=2 | zakres=5) & EDOKOS.STATUS='T'
           || {? typobi=1
              || 'EDOKUM#01#01'
              |? typobi=2
              || 'EDOKUM#02#01'
              || 'EDOKUM#04#01'
              ?}
           |? (zakres=1 | zakres=2 | zakres=5) & EDOKOS.STATUS='O'
           || {? typobi=1
              || 'EDOKUM#01#03'
              |? typobi=2
              || 'EDOKUM#02#03'
              || 'EDOKUM#04#03'
              ?}
           || ''
           ?}
?};
exec('naz_biez_etap','obiegi');
{? typobi=1
|| _hid:={? ~EDOKUM.EDOKUM || 'E' || '' ?}; _hid2:='';
   _okno:={? zakres=1 || 'FWPR' |? zakres=2 || 'FAKC' |? zakres=3 || 'FDEK' || 'FPRZ' ?};
   {? EDOKUM.TYP().ZAP_REAL<>'T' || _hid+='B' ?};
   {? EDOKUM.TYP().POZF<>'T' || _hid+='O' ?};
   ETYP_ATR.cntx_psh(); ETYP_ATR.index('KOLZ'); ETYP_ATR.prefix(ETYPY.ref(),null);
   {? ~ETYP_ATR.first() || _hid+='I' ?};
   ETYP_ATR.cntx_pop();
   {? EDOKUM.TYP().TYPVATPR || _hid+='V' ?};
   {? EDOKUM.DOK_POW='' || _hid+='F(D)' ?};
   {? BPMN.SYM_DOM='ZWS' || _hid+='D'; _hid2+='D' ?};
   {? EDOKUM.ZAM='T'
   || {? zakres=1 || _hid+='PAM'
      |? zakres=5 || _hid+='JM'
      |? zakres=3 || _hid+='TRPJ'
      |? zakres=2 || _hid+='CRJ'
      ?}
   ?};
   {? EDOKUM.DOK_KS=''
   || _hid+='F(R)'
   ?};
   EDOKUM.actions_grayed(_okno,_hid)
|? typobi=2 | typobi=3
|| _hid:=''; _hid2:='';
   {? EDOKUM.TYP().ED_PODZ<>'T' || _hid+='N' ?};
   {? ~EDOKUM.TYP().OBS_PROJ || _hid+='J' ?};
   {? ~exec('dok_pow_log','obiegi_log') || _hid+='S' ?};
   {? zakres=2 & EDOKUM.PAPERLES || _hid+='D' ?};
   {? zakres=3 & EDOKUM.TYP().DEKR='N' || _hid+='P' ?};
   {? EDOKUM.ZAM='T'
   || _hid+='F(O)';
      {? zakres=2
      || _hid+='CDI'
      |? zakres=3
      || _hid+='TROP'
      ?}
   ?};
   {? BPMN.SYM_DOM='ZWS' || _hid+='D'; _hid2+='D' ?};
   _win:={? typobi=2
         || {? zakres=1
            || OBEWin.rwin
            |? zakres=5
            || OBEWin.pwin
            |? zakres=2
            || OBEWin.awin
            || 'WDEK'
            ?}
         || 'DDEK'
         ?};
   EDOKUM.actions_grayed(_win,_hid+':'+_hid2)
?};
echo();
_zwrot


\epodz_disp_format
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.02]
:: OPIS: Ustawienie dokładności dla wartości podziałów
::   WE: _a - opcjonalnie ilość miejsc po przecinku
::----------------------------------------------------------------------------------------------------------------------
_prec:=6;
{? _
|| _prec:=_a
|| _znal:=0;
   SKIDXDUD.cntx_psh(); SKIDXDUD.index('POZ');
   EPODZ.cntx_psh(); EPODZ.index('EDOKUM'); EPODZ.prefix(EDOKUM.ref());
   {? EPODZ.first()
   || {! |?
         SKIDXDUD.prefix(EPODZ.PBUD);
         _znal:=(SKIDXDUD.first() & SKIDXDUD.WART_IL<>'W');
         ~_znal & EPODZ.next()
      !}
   ?};
   {? ~_znal || _prec:=2 ?};
   SKIDXDUD.cntx_pop(); EPODZ.cntx_pop()
?};
_aaa:=$('\'out_prec='+$_prec+',empty=0\'');
EPODZ.fld_fml('WART','DISPLAY_FORMAT',_aaa);
SKID.fld_fml('SKXDRAZE','DISPLAY_FORMAT',_aaa);
SKID.fld_fml('SKXDPOZO','DISPLAY_FORMAT',_aaa)


\podz_disp_format
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.02]
:: OPIS: Ustawienie dokładności dla wartości podziałów
::   WE: _a - opcja dla WEBTERM - alias do tabeli z podziałami
::----------------------------------------------------------------------------------------------------------------------
_prec:=6;
{? (app_info('web_sesid')='' & (1+cur_kwin())='s') |
   (app_info('web_sesid')<>'' & (web_top_kind()='s' | web_top_kind()='g'))
|| _tab:={? app_info('web_sesid')='' || cur_tab(1,1) || EPODZ ?};
   SKIDXDUD.cntx_psh(); SKIDXDUD.index('POZ');
   _tab.cntx_psh(); _prec:=2;
   {? _tab.first()
   || {! |?
         SKIDXDUD.prefix(_tab.PBUD);
         {? SKIDXDUD.first() & SKIDXDUD.WART_IL<>'W' & SKIDXDUD.PREC>_prec
         || _prec:=SKIDXDUD.PREC
         ?};
         _tab.next()
      !}
   ?};
   SKIDXDUD.cntx_pop(); _tab.cntx_pop()
?};
'out_prec='+$_prec+',empty=0'


\podz_edit_format
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.02]
:: OPIS: Ustawienie dokładności dla wartości podziałów
::----------------------------------------------------------------------------------------------------------------------
'in_prec=6'


\rkprz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Rekord przed - dokumenty w obiegu
::   WE: _a - zakres
::  OLD: \rkprz1/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? +app_info('web_sesid')
|| OPERATOR.USER:={? exec('getUser','users',app_info('web_user')) || USERS.ref() || null ?}
?};
EDOKOS.cntx_psh();
EDOKOS.use('skid_y'+(EDOKUM.name()+2));
OBIEGI.EDOKOS:=null; OBIEGI.B_PREL:=''; OBIEGI.B_PRELS:='';
{? _a=1
|| {? OPERATOR.USER
   || EDOKOS.index('SZUK'); EDOKOS.prefix(EDOKUM.ref(),OPERATOR.USER,'W');
      {? EDOKOS.first()
      || OBIEGI.EDOKOS:=EDOKOS.ref();
         OBIEGI.B_PREL:=EDOKOS.B_PREL;
         OBIEGI.B_PRELS:=EDOKOS.B_PRELS
      ?}
   ?};
   {? OBIEGI.EDOKOS=null
   || EDOKOS.index('SZUK2'); EDOKOS.prefix(EDOKUM.ref(),'W');
      {? EDOKOS.first()
      || {! |?
            {? EDOKOS.STATUS<>'X'
            || OBIEGI.EDOKOS:=EDOKOS.ref();
               OBIEGI.B_PREL:=EDOKOS.B_PREL;
               OBIEGI.B_PRELS:=EDOKOS.B_PRELS
            ?};
            OBIEGI.EDOKOS=null & EDOKOS.next()
         !}
      ?}
   ?}
|? _a=5
|| {? OPERATOR.USER
   || EDOKOS.index('SZUK'); EDOKOS.prefix(EDOKUM.ref(),OPERATOR.USER,'P');
      {? EDOKOS.first()
      || OBIEGI.EDOKOS:=EDOKOS.ref();
         OBIEGI.B_PREL:=EDOKOS.B_PREL;
         OBIEGI.B_PRELS:=EDOKOS.B_PRELS
      ?}
   ?};
   {? OBIEGI.EDOKOS=null
   || EDOKOS.index('SZUK2'); EDOKOS.prefix(EDOKUM.ref(),'P');
      {? EDOKOS.first()
      || OBIEGI.EDOKOS:=EDOKOS.ref();
         OBIEGI.B_PREL:=EDOKOS.B_PREL;
         OBIEGI.B_PRELS:=EDOKOS.B_PRELS
      ?}
   ?}
|? _a=2
|| _etap:='';
   EDOKOS.index('SZUK8');  EDOKOS.prefix(EDOKUM.ref(),'A','N','T',date(0,0,0),time(0,0,0));
   {? EDOKOS.first() || _etap:=EDOKOS.B_PREL ?};
   {? _etap=''
   || EDOKOS.index('SZUK8');  EDOKOS.prefix(EDOKUM.ref(),'A','O','T',date(0,0,0),time(0,0,0));
      {? EDOKOS.first() || _etap:=EDOKOS.B_PREL ?}
   ?};
   {? _etap=''
   || EDOKOS.index('SZUK8');  EDOKOS.prefix(EDOKUM.ref(),'A','N','T');
      {? EDOKOS.last() || _etap:=EDOKOS.B_PREL ?}
   ?};
   {? _etap=''
   || EDOKOS.index('SZUK8');  EDOKOS.prefix(EDOKUM.ref(),'A','O','T');
      {? EDOKOS.last() || _etap:=EDOKOS.B_PREL ?}
   ?};
   {? _etap=''
   || EDOKOS.index('SZUK5'); EDOKOS.prefix(EDOKUM.ref(),'A','T');
      {? EDOKOS.last() || _etap:=EDOKOS.B_PREL ?}
   ?};
   {? _etap<>''
   || {? OPERATOR.USER
      || EDOKOS.index('EDOKUM'); EDOKOS.prefix(EDOKUM.ref(),_etap,OPERATOR.USER);
         {? EDOKOS.first()
         || {!
            |? EDOKOS.WID='S' & EDOKOS.next()
            !};
            OBIEGI.EDOKOS:=EDOKOS.ref();
            OBIEGI.B_PREL:=EDOKOS.B_PREL;
            OBIEGI.B_PRELS:=EDOKOS.B_PRELS
         ?}
      ?};
      {? OBIEGI.EDOKOS=null
      || EDOKOS.index('EDOKUM'); EDOKOS.prefix(EDOKUM.ref(),_etap);
         {? EDOKOS.first()
         || {! |?
               {? EDOKOS.STATUS<>'X' & EDOKOS.WID<>'S'
               || OBIEGI.EDOKOS:=EDOKOS.ref();
                  OBIEGI.B_PREL:=EDOKOS.B_PREL;
                  OBIEGI.B_PRELS:=EDOKOS.B_PRELS
               ?};
               OBIEGI.EDOKOS=null & EDOKOS.next()
            !}
         ?}
      ?}
    ?}
|? _a=3 | _a=4
|| EDOKOS.index('SZUK5'); EDOKOS.prefix(EDOKUM.ref(),'D','T');
   {? EDOKOS.first()
   || OBIEGI.EDOKOS:=EDOKOS.ref();
      OBIEGI.B_PREL:=EDOKOS.B_PREL;
      OBIEGI.B_PRELS:=EDOKOS.B_PRELS
   ?};
   {? OBIEGI.EDOKOS=null()
   || EDOKOS.index('SZUK11'); EDOKOS.prefix(EDOKUM.ref(),'T');
      {? EDOKOS.last()
      || OBIEGI.EDOKOS:=EDOKOS.ref();
         OBIEGI.B_PREL:=EDOKOS.B_PREL;
         OBIEGI.B_PRELS:=EDOKOS.B_PRELS
      ?}
   ?}
?};
EDOKOS.cntx_pop()


\dni_realizacji
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB[2011]
:: OPIS: Wyznacza czas realizacji dokumentu w obiegu. Ustala wartosc zmiennej ROZNE.INT
::   WY: Liczba dni realizacji
::  OLD: \dni_realizacji/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.INT:=0;
{? EDOKUM.ZAM<>'T'
|| _dt_betp:=EDOKOS.DATA;
   _dt_wpr:=EDOKOS.EDOKUM().DATAW;
   _b_etap:=EDOKOS.ref();
   _b_etlp:=EDOKOS.LP;
   _ref_ed:=EDOKOS.EDOKUM;
   {? _b_etlp=1
   || ROZNE.INT:={? _dt_betp<>date(0,0,0)
                 || _dt_betp-_dt_wpr
                 || date()-_dt_wpr
                 ?}
   || EDOKUM.cntx_psh();
      EDOKUM.index('ID'); EDOKUM.prefix();
      {? EDOKUM.seek(_ref_ed)
      || EDOKOS.cntx_psh(); EDOKOS.index('SZUK9'); EDOKOS.prefix(_ref_ed);
         {? EDOKOS.seek(_b_etap)
         || _dt_betp:=EDOKOS.DATA;
            _dt_petp:=date(0,0,0);
            {? EDOKOS.prev()
            || {! |? _dt_petp:=EDOKOS.DATA;
                     EDOKOS.prev() & _dt_petp=date(0,0,0)
               !}
            ?};
            ROZNE.INT:={? _dt_betp<>date(0,0,0)
                       || _dt_betp-_dt_petp
                       || date()-_dt_petp
                       ?}
        ?};
        EDOKOS.cntx_pop()
    ?};
    EDOKUM.cntx_pop()
   ?}
?};
ROZNE.INT


\enable_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawia dostępność pól związnych z wartościami podziałów
::   WE: _a - miejsce operacji
::            1-rejestracja podziałów
::----------------------------------------------------------------------------------------------------------------------
_typ:=''; _wal:=0;
SKIDXDUD.cntx_psh(); SKIDXDUD.index('POZ'); SKIDXDUD.prefix(EPODZ.PBUD);
{? SKIDXDUD.first()
|| UD_POM.WART_IL:=_typ:=SKIDXDUD.WART_IL;
   _wal:=SKIDXDUD.WSK_WAL='T'
?};
SKIDXDUD.cntx_pop();
{? app_info('web_sesid')=''
|| _mod:=EPODZ.SKID_MB<>null & EPODZ.PBUD<>null;
   EPODZ.efld_opt(EPODZ.win_edit('?'),'enable='+$(_mod & _typ='W' & _wal),SKIDXD,'WAL');
   EPODZ.efld_opt(EPODZ.win_edit('?'),'mark='+$(_mod & _typ='W' & _wal),SKIDXD,'WAL');
   EPODZ.efld_opt(EPODZ.win_edit('?'),'enable='+$(_mod & _typ='I'),SKIDXD,'JM')
?};
~~


\ae_wart_epodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji pól z wartościami podziałów
::----------------------------------------------------------------------------------------------------------------------
_jedn:=1;
RS.index('RS');
RS.prefix();
{? app_info('web_sesid')<>'' || exec('czytaj','#stalesys',,FINFO) ?};
{? EPODZ.WAL<>0 & FINFO.SLWAL & RS.find_key(FINFO.SLWAL().SLU().WZ)
|| {? ($(RS.TAB+'.prefix();'+RS.TAB+'.blank(1);'+RS.TAB+'.'+RS.KOD+':=EPODZ.WAL().KOD;'+RS.TAB
      +'.find_rec'))()
   || _jedn:=($(RS.TAB+'.J'))();
      {? _jedn=0 || _jedn:=1 ?}
   ?}
?};
_warunek:={? app_info('web_sesid')<>''
          || EPODZ.WART
          || cur_afld()='WART' & fld()
          ?};
{? _warunek
|| {? EPODZ.JM
   || _prec:=6;
      {? UD_TYP.index('SYMBOL'); UD_TYP.prefix('POZ_BUD','POZ_BUD'); UD_TYP.first()
      || {? UD_SKL.prefix(UD_TYP.ref(),UD_POM.PBUD,UD_POM.PBUD); UD_SKL.first()
         || SKIDXDUD.index('POZ'); SKIDXDUD.prefix(UD_SKL.ref());
            {? SKIDXDUD.first() || _prec:=SKIDXDUD.PREC ?}
         ?}
      ?};
      EPODZ.WART:=EPODZ.WART$_prec
   || EPODZ.WART:=EPODZ.WART$2
   ?}
?};
1


\sum_podz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Naliczenie podsumowan w okienku wertowania tabeli EPODZ
::   WE: _a - zadeklarowanme - akcja usun
::  OLD: \sum_podz/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_usun:=(var_pres('_a')>0);
_netto:={? EDOKUM.TYP().W_PORTAL='s'
        || exec('EDOKUM_netto','portal_seod')
        || EDOKUM.NETTO
        ?};
SKID.SKXDRAZE:=SKID.SKXDPOZO:=0;
{? ~_usun | (_usun & ~EPODZ.sel_size())
|| EPODZ.cntx_psh();
   EPODZ.index('EDOKUM'); EPODZ.prefix(EDOKUM.ref());
   {? EPODZ.first()
   || _model:=EPODZ.SKID_MB;
      {! |?
         _dsp_sum:=(_model=EPODZ.SKID_MB);
         _dsp_sum & EPODZ.next()
      !};
      {? _dsp_sum & EPODZ.first()
      || {! |?
            {? EPODZ.WAL=EDOKUM.WAL
            || SKIDXDUD.cntx_psh();
               SKIDXDUD.index('POZ'); SKIDXDUD.prefix(EPODZ.PBUD);
               _wart:=(SKIDXDUD.first() & SKIDXDUD.WART_IL='W');
               SKIDXDUD.cntx_pop();
               {? _wart || SKID.SKXDRAZE+=EPODZ.WART ?}
            ?};
            EPODZ.next()
         !};
         SKID.SKXDPOZO:=_netto-SKID.SKXDRAZE
      ?}
   || SKID.SKXDPOZO:=_netto
   ?};
   EPODZ.cntx_pop()
?};
1


\bd_epodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed usuń okna WER3 tabeli EPODZ
::  OLD: \bd_epodz/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? EPODZ.EDOKRZAP
|| {? app_info('web_sesid')<>'' | EPODZ.sel_size()=0
   || _zwrot:=FUN.ask('Podział związany z realizacją zapotrzebowań. Czy na pewno usunąć?'@)
   || _zwrot:=0
   ?}
|? EPODZ.EDOKUMPR
|| {? app_info('web_sesid')<>'' | EPODZ.sel_size()=0
   || FUN.info('Podział związany z projektem dla dokumentu. Usunięcie niemożliwe.'@)
   ?}; _zwrot:=0
|| _zwrot:=1
?};
_zwrot


\rbskidxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Rekord przed tabel z podzialami
::  OLD: \rbskidxd/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_cur_tab:=EPODZ;
UD_POM.PBUD:=_cur_tab.PBUD().SYMBOL;
UD_POM.JORG:=_cur_tab.JORG().SYMBOL;
UD_POM.OKOSZ:=_cur_tab.OKOSZ().SYMBOL;
UD_POM.WYM4:=_cur_tab.WYM4().SYMBOL;
UD_POM.WYM5:=_cur_tab.WYM5().SYMBOL;
echo(_cur_tab.PBUD().OPIS+
{? _cur_tab.JORG || ' / '+_cur_tab.JORG().OPIS || '' ?}+
{? _cur_tab.OKOSZ || ' / '+_cur_tab.OKOSZ().OPIS || '' ?}+
{? _cur_tab.WYM4 || ' / '+_cur_tab.WYM4().OPIS || '' ?}+
{? _cur_tab.WYM5 || ' / '+_cur_tab.WYM5().OPIS || '' ?});
SKID.SUMMA:=0;
{? EPODZ.EZAPOT
|| EPODZ.cntx_psh();
   _name:=ref_name(EPODZ.EZAPOT);
   EPODZ.use('skid_j'+(_name+2));
   EPODZ.index('EDOKUM');
   EPODZ.prefix(EPODZ.EZAPOT,EPODZ.SKID_MB,EPODZ.PBUD,EPODZ.JORG,EPODZ.OKOSZ,EPODZ.WYM4,EPODZ.WYM5);
   {? EPODZ.first() || SKID.SUMMA:=EPODZ.WART ?};
   EPODZ.cntx_pop()
?};
{? var_pres('typobi')>0 & typobi=3
|| EPODZ.cntx_psh(); EPODZ.index('EDOKUM'); EPODZ.prefix(EDOKUM.ref(),EPODZ.SKID_MB);
   {? EPODZ.first()
   || {! |?
         SKID.SUMMA+=EPODZ.WART;
         EPODZ.next()
      !}
   ?};
   EPODZ.cntx_pop()
?};
{? var_pres('COUNT_SUM')>0 & COUNT_SUM
|| COUNT_SUM:=0;
   exec('sum_podz','obiegi')
?};
0


\raskidxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Rekord po tabel z podzialami
::  OLD: \raskidxd/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
po_ok:=1;
_ref_mb:=EPODZ.SKID_MB;
SKID_MBP.cntx_psh();
SKID_MBP.index('LP');
SKID_MBP.prefix(_ref_mb);
_wym:=obj_new(5); _naz:=obj_new(5); _typ:=obj_new(5);
{? SKID_MBP.first()
|| _wym[1]:=SKID_MBP.UD_SCH().SYMBOL;
   _naz[1]:=-SKID_MBP.NAZ;
   _typ[1]:=SKID_MBP.UD_SCH().UD_TYP().SYMBOL;
   {! _i:=2..5
   |! {? SKID_MBP.next()
      || _wym[_i]:=SKID_MBP.UD_SCH().SYMBOL;
         _naz[_i]:=SKID_MBP.NAZ;
         _typ[_i]:=SKID_MBP.UD_SCH().UD_TYP().SYMBOL
      || _wym[_i]:=_naz[_i]:=_typ[_i]:=''
      ?}
   !}
|| {! _i:=1..5 |! _wym[_i]:=_naz[_i]:=_typ[_i]:='' !}
?};
SKID_MBP.cntx_pop();
{? _wym[1]<>''
|| {? ~+UD_POM.PBUD
   || FUN.info('Nie wskazano elementu wymiaru %1.'@[_naz[1]]);
      VAR_DEL.delete('po_ok'); return('PBUD')
   ?};
   {? ~exec('chk_skl','control',_typ[1],UD_POM.PBUD,0,_wym[1])
   || FUN.info('Podany element wymiaru %1 nie występuje w schemacie.'@[_naz[1]]);
      VAR_DEL.delete('po_ok'); return('PBUD')
   ?};
   {? EPODZ.PBUD=null
   || {? UD_TYP.prefix(_typ[1],_typ[1]); UD_TYP.first()
      || {? UD_SKL.prefix(UD_TYP.ref(),UD_POM.PBUD,UD_POM.PBUD); UD_SKL.first()
         || {? UD_SKL.LISTA='T'
            || SKIDXDUD.index('POZ'); SKIDXDUD.prefix(UD_SKL.ref());
               {? SKIDXDUD.first()
               || {? SKIDXDUD.WART_IL='W'
                  || {? app_info('web_sesid')<>'' & var_pres('typobi')>0
                     || PAR_WYDR.RPAR3:=EDOKUM.NETTO;
                        {? typobi=3 || PAR_WYDR.RPAR3:=100 ?}
                     ?};
                     _wal_nar:=exec('wal_nar','dok_fks');
                     EPODZ.WAL:=EDOKUM.WAL;
                     _typ_d:='VAT';
                     {? RPODZ.WART=0
                     || _ile_juz:=0;
                        SKIDXDUD.cntx_psh(); SKIDXDUD.index('POZ'); SKIDXDUD.prefix(EPODZ.PBUD);
                        {? (_typ_d='VAT' | _typ_d='SAD') & (-(6+menu_txt()))<>'popraw' & SKIDXDUD.WART_IL='W'
                        || EPODZ.cntx_psh(); EPODZ.index('EDOKUM'); EPODZ.prefix(EDOKUM.ref(),EPODZ.SKID_MB);
                           {? EPODZ.first()
                           || {! |?
                                 {? (SKIDXDUD.prefix(EPODZ.PBUD);
                                     SKIDXDUD.first() & SKIDXDUD.WART_IL='W')
                                 || _ile_juz+=EPODZ.WART
                                 ?};
                                 EPODZ.next()
                              !}
                           ?};
                           EPODZ.cntx_pop()
                        ?};
                        SKIDXDUD.cntx_pop();
                        EPODZ.WART:=PAR_WYDR.RPAR3-_ile_juz
                     ?};
                     EPODZ.JM:=null
                  || EPODZ.JM:=SKIDXDUD.JM; EPODZ.WAL:=null
                  ?};
                  SSTALE.AR();
                  UD_POM.WART_IL:=SKIDXDUD.WART_IL
               ?};
               EPODZ.PBUD:=UD_SKL.ref()
            || FUN.info('Wybrana pozycja nie jest wykorzystywana w ewidencji.'@); _ret:=0
            ?}
         ?}
      ?}
   ?}
?};
{? _wym[2]<>''
|| {? ~+UD_POM.JORG
   || FUN.info('Nie wskazano elementu wymiaru %1.'@[_naz[2]]);
      VAR_DEL.delete('po_ok'); return('JORG')
   ?};
   {? ~exec('chk_skl','control',_typ[2],UD_POM.JORG,0,_wym[2])
   || FUN.info('Podany element wymiaru %1 nie występuje w schemacie.'@[_naz[2]]);
      VAR_DEL.delete('po_ok'); return('JORG')
   ?};
   {? EPODZ.JORG=null
   || {? UD_TYP.prefix(_typ[2],_typ[2]); UD_TYP.first()
      || {? UD_SKL.prefix(UD_TYP.ref(),UD_POM.JORG,UD_POM.JORG); UD_SKL.first()
         || EPODZ.JORG:=UD_SKL.ref()
         ?}
      ?}
   ?}
?};
{? _wym[3]<>''
|| {? ~+UD_POM.OKOSZ
   || FUN.info('Nie wskazano elementu wymiaru %1.'@[_naz[3]]);
      VAR_DEL.delete('po_ok'); return('OKOSZ')
   ?};
   {? ~exec('chk_skl','control',_typ[3],UD_POM.OKOSZ,0,_wym[3])
   || FUN.info('Podany element wymiaru %1 nie występuje w schemacie.'@[_naz[3]]);
      VAR_DEL.delete('po_ok'); return('OKOSZ')
   ?};
   {? EPODZ.OKOSZ=null
   || {? UD_TYP.prefix(_typ[3],_typ[3]); UD_TYP.first()
      || {? UD_SKL.prefix(UD_TYP.ref(),UD_POM.OKOSZ,UD_POM.OKOSZ); UD_SKL.first()
         || EPODZ.OKOSZ:=UD_SKL.ref()
         ?}
      ?}
   ?}
?};
{? _wym[4]<>''
|| {? ~+UD_POM.WYM4
   || FUN.info('Nie wskazano elementu wymiaru %1.'@[_naz[4]]);
      VAR_DEL.delete('po_ok'); return('WYM4')
   ?};
   {? ~exec('chk_skl','control',_typ[4],UD_POM.WYM4,0,_wym[4])
   || FUN.info('Podany element wymiaru %1 nie występuje w schemacie.'@[_naz[4]]);
      VAR_DEL.delete('po_ok'); return('WYM4')
   ?};
   {? EPODZ.WYM4=null
   || {? UD_TYP.prefix(_typ[4],_typ[4]); UD_TYP.first()
      || {? UD_SKL.prefix(UD_TYP.ref(),UD_POM.WYM4,UD_POM.WYM4); UD_SKL.first()
         || EPODZ.WYM4:=UD_SKL.ref()
         ?}
      ?}
   ?}
?};
{? _wym[5]<>''
|| {? ~+UD_POM.WYM5
   || FUN.info('Nie wskazano elementu wymiaru %1.'@[_naz[5]]);
      VAR_DEL.delete('po_ok'); return('WYM5')
   ?};
   {? ~exec('chk_skl','control',_typ[5],UD_POM.WYM5,0,_wym[5])
   || FUN.info('Podany element wymiaru %1 nie występuje w schemacie.'@[_naz[5]]);
      VAR_DEL.delete('po_ok'); return('WYM5')
   ?};
   {? EPODZ.WYM5=null
   || {? UD_TYP.prefix(_typ[5],_typ[5]); UD_TYP.first()
      || {? UD_SKL.prefix(UD_TYP.ref(),UD_POM.WYM5,UD_POM.WYM5); UD_SKL.first()
         || EPODZ.WYM5:=UD_SKL.ref()
         ?}
      ?}
   ?}
?};
{? EPODZ.WART=0
|| FUN.info('Brak możliwości utworzenia podziału o zerowej wartości.'@);
   return('WART')
?};
{? var_pres('typobi')>0
|| {? typobi=3
   || _sum:=0;
      _tmp_war:=EPODZ.WART;
      _tmp_mod:=EPODZ.SKID_MB;
      _tmp_dob:=EPODZ.EDOKUM;
      {? menu_pth()+1='P' || _tmp_ep:=EPODZ.ref() || _tmp_ep:=null ?};
      EPODZ.cntx_psh();
      EPODZ.index('EDOKUM');
      EPODZ.prefix(_tmp_dob,_tmp_mod);
      {? EPODZ.first()
      || {! |?
            {? EPODZ.ref()=_tmp_ep
            || _sum+=_tmp_war
            || _sum+=EPODZ.WART
            ?};
            EPODZ.next()
         !};
         {? menu_pth()+1='D' || _sum+=_tmp_war ?}
      ?};
      {? _sum>100
      || FUN.info('Suma podziałów controlingowych dla modelu nie może przekroczyć 100%%.'@);
         VAR_DEL.delete('po_ok');
         EPODZ.cntx_pop();
         return('WART')
      ?};
      EPODZ.cntx_pop()
   ?}
?};
VAR_DEL.delete('po_ok');
''


\pobierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Zapisywanie na dysk pliku powiazanego
::   WY: 1/0 - czy zapisano plik (pliki)
::  OLD: \pobierz/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1; _tab:={? var_pres('dsp_wyd')>0 || EDOKUM || cur_tab(1,1) ?};
{? ~_tab.EDOKUM
|| FUN.info('Brak dokumentu źródłowego.'@); _zwrot:=0
?};
{? _zwrot
||
   _zwrot:=0;
   _vname:=_tab.bl_info('EDOKUM','NAME');
   _ext:=_vname;
   {! |? _pos:=_ext*'.'; _ext:=_pos-_ext; _pos !};


   __dir_controling:=fmk_tmp_dir(0);
   _vpath:=__dir_controling.get_path()+'/'+_vname;

   {? 2+_vpath<>'\\\\' & 2+_vpath<>'//'
   ||
      _vpath:= _vpath
   ?};
   {? +_vpath>1
   || _zwrot:=_tab.bl_get('EDOKUM',_vpath,0);
      {? _zwrot & _tab=EDOKUM & EDOKUM.EPODPIS
      || {! |?
            {? (_vpath+1)='\\' | (_vpath+1)='/'
            || 0
            || _vpath:=_vpath-1; 1
            ?}
         !};
         _vname:=EDOKUM.bl_info('EPODPIS','NAME');
         _vpath+=_vname;
         _zwrot:=EDOKUM.bl_get('EPODPIS',_vpath,0)
      ?}
   ?};
   dlg_save(_vpath,0);

   VAR_DEL.delete('__dir_controling')
?};
_zwrot


\del_numer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Zwalnia numer dokumentu w obiegu
::   WE: _a - numer zwalniany
::       _b - typ dokumentu
::  OLD: \del_numer/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.cntx_psh();
ETYPY.cntx_psh(); ETYPY.prefix();
TYPOBIEG.cntx_psh(); TYPOBIEG.prefix();
{? ETYPY.seek(_b)
|| EDOKUM.TYP:=ETYPY.ref();
   EDOKUM.TYPOBIEG:=EDOKUM.TYP().TYPOBIEG;
   POM.TAB:='EDOKUM';
   POM.TYPDOK:='DOB';
   numer:=_a; oldnumer:=1;
   exec('nr_old','numery');
   VAR_DEL.delete('numer','oldnumer')
?};
EDOKUM.cntx_pop(); ETYPY.cntx_pop(); TYPOBIEG.cntx_pop()


\gpusdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Grupa przed - usuwanie dokumentow w obiegu
::  OLD: \gpusdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? typobi=1
|| _zwrot:=FUN.ask('Usunąć zaznaczone faktury?'@)
|? typobi=2
|| _zwrot:=FUN.ask('Usunąć zaznaczone wnioski?'@)
|| _zwrot:=FUN.ask('Usunąć zaznaczone delegacje?'@)
?};
{? _zwrot || _zwrot:=exec('us_zal','obiegi',EDOKUM) ?};
_zwrot


\us_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Usuwanie zapotrzebowan, dokumentow w obiegu - grupa przed
::   WE: _a - alias do tabeli
::   WY: 0/1 - czy usuwac
::  OLD: \us_zal/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1; _edoc:=0;
_co:={? _a=EDOKUM || 1 || 2 ?};
_a.cntx_psh();
ED_SEL:=_a.sel_aget();
{? ED_SEL.first()
|| {! |?
      {? _a.seek(ED_SEL.REF,_a.name()) & _a.EDOKUM
      || _zwrot:=0
      ?};
      _zwrot & ED_SEL.next()
   !}
?};
{? ~_zwrot
|| _edoc:={? _co=1
          || {? typobi=1
             || FUN.choice('Wśród zaznaczonych faktur w obiegu są takie, które zawierają e-dokumenty.\n'
                           'Usunięcie tych dokumentów spowoduje usunięcie związanych z nimi\n'
                           'dokumentów elektronicznych.\nUsunąć dokumenty z załącznikami\n'
                           'czy pominąć usuwanie dokumentów zawierających e-dokumenty?'@,,'Z załącznikami'@,'Pominąć'@)
             || FUN.choice('Wśród zaznaczonych wniosków są takie, które zawierają e-dokumenty.\n'
                           'Usunięcie tych wniosków spowoduje usunięcie związanych z nimi\n'
                           'dokumentów elektronicznych.\nUsunąć wnioski z załącznikami\n'
                           'czy pominąć usuwanie wniosków zawierających e-dokumenty?'@,,'Z załącznikami'@,'Pominąć'@)
             ?}
          || FUN.choice('Wśród zaznaczonych zapotrzebowań są takie, które zawierają e-dokumenty.\n'
                       'Usunięcie tych zapotrzebowań spowoduje usunięcie związanych z nimi\n'
                       'dokumentów elektronicznych.\nUsunąć zapotrzebowania z załącznikami\n'
                       'czy pominąć usuwanie zapotrzebowań zawierających e-dokumenty?'@,,'Z załącznikami'@,'Pominąć'@)
          ?};
   {? _edoc<>0 || _zwrot:=1 ?}
?};
{? _zwrot
|| ile_zazn:=_a.sel_size(); ile_us:=0;
   {? _edoc=2
   || {? ED_SEL.first()
      || {! |?
            {? _a.seek(ED_SEL.REF,_a.name()) & _a.EDOKUM || _a.sel_del() ?};
            ED_SEL.next()
         !}
      ?}
   ?}
?};
VAR_DEL.delete('ED_SEL');
_a.cntx_pop();
_zwrot


\gousdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Grupa po - usuwanie dokumentow w obiegu
::  OLD: \gousdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_ile:=(+$ile_zazn);
{? typobi=1
|| FUN.info(form(form('Faktur zaznaczonych: ',25)+$ile_zazn,25+_ile)+'\n'+
            form(form('Faktur usuniętych: ',25)+$ile_us,25+_ile))
|? typobi=2
|| FUN.info(form(form('Wniosków zaznaczonych: ',24)+$ile_zazn,24+_ile)+'\n'+
            form(form('Wniosków usuniętych: ',24)+$ile_us,24+_ile))
|| FUN.info(form(form('Delegacji zaznaczonych: ',24)+$ile_zazn,24+_ile)+'\n'+
            form(form('Delegacji usuniętych: ',24)+$ile_us,24+_ile))
?};
VAR_DEL.delete('ile_zazn','ile_us')


\edok_zal_pln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Ustala wartosc EDOK_ZAL w walucie PLN
::  OLD: \edok_zal_pln/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
exec('czytaj','#stalesys',,XINFO);
{? EDOK_ZAL.WAL<>null
|| {? EDOK_ZAL.WAL().KOD='PLN'
   || _zwrot:=EDOK_ZAL.KWROZPRA
   |? XINFO.BDEKRDEL<>null & XINFO.KURSTYPD<>'' & XINFO.SLWAL
   || SLU.cntx_psh();
      SLU.prefix();
      XINFO.SLWAL();
      SLO.cntx_psh();
      SLO.index('SL');
      SLO.prefix(SLU.ref(),'PLN');
      _wal:={? SLO.first() || SLO.ref() || null ?};
      SLO.cntx_pop();
      SLU.cntx_pop();
      {? _wal<>null
      || TKRS.cntx_psh();
         TKRS.index('TKRS_DT');
         TKRS.prefix(XINFO.BDEKRDEL,_wal);
         _data:=exec('dzienRob','kalendarz',EDOKUM.DOP-1,1,1,0,-1);
         {? _data<>date(0,0,0) & TKRS.find_le(_data)
         || _kurs:=0;
            KRS.cntx_psh();
            KRS.index('KRS_WAL');
            KRS.prefix(TKRS.ref(),EDOK_ZAL.WAL);
            {? KRS.first()
            || {? XINFO.KURSTYPD='K' || _kurs:=KRS.KP
               |? XINFO.KURSTYPD='S' || _kurs:=KRS.SP
               |? XINFO.KURSTYPD='R' || _kurs:=KRS.SR
               ?}
            ?};
            KRS.cntx_pop();
            _jedn:=exec('jed_wal','waluty',EDOK_ZAL.WAL().KOD);
            _zwrot:=(EDOK_ZAL.KWROZPRA*_kurs/_jedn)$2
         ?};
         TKRS.cntx_pop()
      ?}
   ?}
?};
_zwrot


\bf_edokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2011]
:: OPIS: Formula szukaj przed w okienku WPR tabeli EDOKUM
::  OLD: \bf_edokum/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
SLU.index('NAZ'); SLU.prefix(SKID.SL_KH);
SLU.first();
1


\edokum_atr_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JSz [12.30]
:: OPIS: Wartość początkowa pola EDOK_ATR.EDOKUM
::   WY: zwraca ref rekordu dokumentu w obiegu EDOKUM, dla typu kontaktu zwraca null
::  OLD: \edokum_atr_ref/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? OBIEGI.TYP_ID<>'K' | app_info('web_sesid')<>''
|| EDOKUM.ref
|| null
?}


\dokum_atr_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JSz [12.30]
:: OPIS: Wartość początkowa pola EDOK_ATR.DOKUM
::   WY: zwraca ref rekordu kontaktu DOKUM, dla typu dokumentu w obiegu zwraca null
::  OLD: \dokum_atr_ref/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? OBIEGI.TYP_ID='K'
|| DOKUM.ref
|| null
?}


\edok_atr_del_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Usuwanie wartości innej danej
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' & web_top_kind()='s'
|| exec('env_edokum_get','obiegi')
?};
_kom:='';
OBIEGI.TYP_ID:='T';
{? OBIEGI.TYP_ID='K'
|| _tab:=DOKUM
|| _tab:=EDOKUM
?};
{? exec('get_atr_edit','obiegi',{? _tab=DOKUM || DOKUM.DOT || EDOKUM.TYP ?},EDOK_ATR.KOL)<>'T'
|| FUN.info('Założono blokadę edycji tego atrybutu.'@);
   return(0)
?};
_kom:=exec('edk_atr_can','obiegi',,'P');
{? _kom=''
|| {? _tab.r_lock(1,1,1)
   || {? (EDOK_ATR.TAT<>null()) | (EDOK_ATR.KOL>0)
      || {? EDOK_ATR.TAT().TYP='O'
         || FUN.info('Atrybutu typu "%1" nie można poprawiać.'@[{? TAT.W_PORTAL='T' || 'Etykieta'@ || 'Nagłówek'@ ?}])
         |? TAT.TYP='L' | TAT.TYP='T' | TAT.TYP='D' | TAT.TYP='C' |
            TAT.TYP='B' | TAT.TYP='S' | TAT.TYP='U' | TAT.TYP='X'
         || _us:="EDOK_ATR.web_cntx_load();
                  {? _a
                  || EDOK_ATR.WAR:=''; EDOK_ATR.UD_SKL:=null; EDOK_ATR.REF_SQL:=''; EDOK_ATR.SLO:=null();
                     {? EDOK_ATR.put() || exec('po_red','obiegi',EDOKUM) ?};
                     web_top_refresh(0)
                  ?}";
            EDOK_ATR.web_cntx_save();
            web_ask(_us,'Usunąć wartość w polu?'@,FUN.TYT)
         ?}
      || FUN.info('Ten element nie może mieć nadawanej wartości.'@)
      ?}
   || FUN.info('Dane dokumentu są właśnie redagowane przez innego użytkownika. Spróbuj za chwilę.'@)
   ?};
   _tab.r_unlock()
|| FUN.info(_kom)
?};
1


\pr_sym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [17.42]
:: OPIS: Sprawdza poprawność pola EDOKUM.SYM
::   WY: Czy symbol jest poprawny?
::----------------------------------------------------------------------------------------------------------------------
_par71:=PAR_SKID.get(71);
_zwrot:=1;
{? _par71='K' & EDOKUM.KH & -EDOKUM.KH().TR<>'kontrahent jednorazowy'
|| _a:=1;
   _nk:=EDOKUM.SYM; _typ:=EDOKUM.TYP().NAZWA;
   _popraw:=-menu_txt(,)<>'dołącz';
   EDOKUM.cntx_psh();
   _ref:=EDOKUM.ref();
   EDOKUM.index('KHSYM');
   EDOKUM.prefix(0,EDOKUM.KH,EDOKUM.SYM,);
   {? EDOKUM.first()
   || _ile_dok:=0; _size:=EDOKUM.size();
      {? _size=1 & {? _popraw || EDOKUM.ref()<>_ref || 1 ?}
      || _ile_dok:=1
      ?};
      {? ~_ile_dok & _size>1
      || _ile_dok:=2
      ?};
      {? _ile_dok=1
      || _zwrot:=
         FUN.choice('Istnieje już faktura VAT o symbolu: %1'
                    '\nw roku: %2'@[_nk,SSTALE.AR().NAZ],,'Kontynuuj'@);
         _jedn:=1
      |? _ile_dok=2
      || _zwrot:=
         FUN.choice('Istnieją już faktury VAT o symbolu: %1'
                    '\nw roku: %2'@[_nk,SSTALE.AR().NAZ],,'Kontynuuj'@);
         _jedn:=1
      ?}
   ?};
   EDOKUM.cntx_pop()
?};
_zwrot


\edk_atr_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Poprawa wartosci atrybutu
::  OLD: \edk_atr_popraw/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' & web_top_kind()='s'
|| exec('env_edokum_get','obiegi')
?};
EDOK_ATR.TAT().SLU();
_kom:='';
OBIEGI.TYP_ID:='T';
{? OBIEGI.TYP_ID='K'
|| _tab:=DOKUM
|| _tab:=EDOKUM
?};
{? exec('get_atr_edit','obiegi',{? _tab=DOKUM || DOKUM.DOT || EDOKUM.TYP ?},EDOK_ATR.KOL)<>'T'
|| FUN.info('Założono blokadę edycji tego atrybutu.'@);
   return(0)
?};
_kom:=exec('edk_atr_can','obiegi',,'P');
{? _kom=''
|| {? _tab.r_lock(1,1,1)
   || {? (EDOK_ATR.TAT<>null()) | (EDOK_ATR.KOL>0)
      || _po_red:=0;
         {? EDOK_ATR.TAT().TYP='O'
         || FUN.info('Atrybutu typu "%1" nie można poprawiać.'@[{? TAT.W_PORTAL='T' || 'Etykieta'@ || 'Nagłówek'@ ?}])
         |? TAT.TYP='L' & app_info('web_sesid')=''
         || undefine();
            define('WAR',
                   #STR.gsub(STR.gsub(EDOK_ATR.WAR,' ',''),',','.'),
                   EDOK_ATR.TAT().OPIS,EDOK_ATR.TAT().OPIS,20);
            _zapisz:=def_btn('text=%1'['Zapisz'@],'key:F2');
            _anuluj:=def_btn('text=%1'['Anuluj'@],'key:Esc');
            def_bopt(_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
            def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
            {? def_edit(,'Wartość pola'@)
            || _prec:=exec('get_atr_prec','obiegi',{? _tab=DOKUM || DOKUM.DOT || EDOKUM.TYP ?},EDOK_ATR.KOL);
               _tsep:=form(exec('get_atr_tsep','obiegi',{? _tab=DOKUM || DOKUM.DOT || EDOKUM.TYP ?},EDOK_ATR.KOL));
               EDOK_ATR.WAR:=form(DEFINE.WAR$_prec,,,{? _tsep='T' || ' ,' || '9,'?});
               _po_red:=EDOK_ATR.put()
            ?};
            undefine()
         |? TAT.TYP='L' & app_info('web_sesid')<>''
         || exec('tat_l_wt','obiegi')
         |? TAT.TYP='T'  & app_info('web_sesid')=''
         || undefine();
            define('WAR',
                   EDOK_ATR.WAR,
                   EDOK_ATR.TAT().OPIS,EDOK_ATR.TAT().OPIS,80,80);
            _zapisz:=def_btn('text=%1'['Zapisz'@],'key:F2');
            _anuluj:=def_btn('text=%1'['Anuluj'@],'key:Esc');
            def_bopt(_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
            def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
            {? def_edit(,'Wartość pola'@)
            || EDOK_ATR.WAR:=DEFINE.WAR;
               _po_red:=EDOK_ATR.put()
            ?};
            undefine()
         |? TAT.TYP='T' & app_info('web_sesid')<>''
         || exec('tat_t_wt','obiegi2')
         |? TAT.TYP='D' & app_info('web_sesid')=''
         || undefine();
            define('WAR',
                   date(#(4+EDOK_ATR.WAR),
                        #(2+(5-EDOK_ATR.WAR)),
                        #(EDOK_ATR.WAR+2)),
                   EDOK_ATR.TAT().OPIS,EDOK_ATR.TAT().OPIS,10,10);
            _zapisz:=def_btn('text=%1'['Zapisz'@],'key:F2');
            _anuluj:=def_btn('text=%1'['Anuluj'@],'key:Esc');
            def_bopt(_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
            def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
            {? def_edit(,'Wartość pola'@)
            || EDOK_ATR.WAR:=$DEFINE.WAR;
               _po_red:=EDOK_ATR.put()
            ?};
            undefine()
         |? TAT.TYP='D' & app_info('web_sesid')<>''
         || exec('tat_d_wt','obiegi')
         |? TAT.TYP='C' & app_info('web_sesid')=''
         || undefine();
            _war:=EDOK_ATR.WAR;
            _pos:=_war*':';
            _gg:=_mm:=_ss:=0;
            {? _pos>0
            || _gg:=#((_pos-1)+_war);
               _mm:=#(2+(_pos-_war));
               _ss:=#(_war+2)
            ?};
            define('WAR',
                   time(_gg,_mm,_ss),
                   EDOK_ATR.TAT().OPIS,EDOK_ATR.TAT().OPIS,10,10);
            _zapisz:=def_btn('text=%1'['Zapisz'@],'key:F2');
            _anuluj:=def_btn('text=%1'['Anuluj'@],'key:Esc');
            def_bopt(_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
            def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
            {? def_edit(,'Wartość pola'@)
            || _time:=DEFINE.WAR;
               {? _time>=time(24,0,0) || _time:=time(23,59,59) ?};
               EDOK_ATR.WAR:=_time $ 3;
               _po_red:=EDOK_ATR.put()
            ?};
            undefine()
         |? TAT.TYP='C' & app_info('web_sesid')<>''
         || exec('tat_c_wt','obiegi')
         |? TAT.TYP='B' & app_info('web_sesid')=''
         || EDOK_ATR.WAR:=exec('set_tak_nie','obiegi',EDOK_ATR.TAT().OPIS,EDOK_ATR.WAR);
            _po_red:=EDOK_ATR.put()
         |? TAT.TYP='B' & app_info('web_sesid')<>''
         || exec('set_tak_nie_wt','obiegi2',EDOK_ATR.TAT().OPIS,EDOK_ATR.WAR)
         |? TAT.TYP='S' & app_info('web_sesid')=''
         || SLO.cntx_psh();
            SLO.index('SL'); SLO.prefix(EDOK_ATR.TAT().SLU);
            {? EDOK_ATR.SLO<>null
            || SLO.seek(EDOK_ATR.SLO)
            || SLO.first()
            ?};
            SLO.win_sel('ONE_SEL');
            {? SLO.select(,1,1)
            || EDOK_ATR.SLO:=SLO.ref();
               _pole:=exec('get_atr_slopol','obiegi',{? _tab=DOKUM || DOKUM.DOT || EDOKUM.TYP ?},EDOK_ATR.KOL);
               EDOK_ATR.WAR:={? _pole='T' || SLO.TR || SLO.KOD ?};
               _po_red:=EDOK_ATR.put()
            || {? (EDOK_ATR.SLO<>null()) & FUN.ask('Usunąć istniejącą wartość?'@)
               || EDOK_ATR.WAR:=''; EDOK_ATR.SLO:=null(); _po_red:=EDOK_ATR.put()
               ?}
            ?};
            SLO.cntx_pop()
         |? TAT.TYP='S' & app_info('web_sesid')<>''
         || exec('tab_form','obiegi','SLO','wyb_slo_innd','obiegi2','bobs_tat_s_wt','obiegi');
            exec('tat_s_wt','obiegi')
         |? TAT.TYP='U' & app_info('web_sesid')=''
         || UD_DEF.cntx_psh();
            UD_DEF.prefix();
::          odnalezienie UD_DEF odpowiadajacego wybranemu UD_SKL aby ewentualnie odpowiednio ustawic okienko
            _cur:=null();
            {? EDOK_ATR.UD_SKL<>null()
            || UD_DEF.index('SKLREF');
               UD_DEF.prefix(EDOK_ATR.UD_SKL);
               {? UD_DEF.first() || _cur:=UD_DEF.ref() ?}
            ?};
            UD_DEF.index('SYMBOL'); UD_DEF.prefix(EDOK_ATR.TAT().UD_SCH);
            UD_DEF.first();
            {? _cur<>null() || UD_DEF.seek(_cur) ?};
            UD_DEF.win_sel('WYB');
            {? UD_DEF.select(,1,1)
            || EDOK_ATR.UD_SKL:=UD_DEF.UD_SKL;
               _pole:=exec('get_atr_slopol','obiegi',EDOKUM.TYP,EDOK_ATR.KOL);
               EDOK_ATR.WAR:={? _pole='T' || UD_DEF.UD_SKL().OPIS || UD_DEF.UD_SKL().SYMBOL ?};
               _po_red:=EDOK_ATR.put()
            || {? (EDOK_ATR.UD_SKL<>null()) & FUN.ask('Usunąć istniejącą wartość?'@)
               || EDOK_ATR.WAR:=''; EDOK_ATR.UD_SKL:=null(); _po_red:=EDOK_ATR.put()
               ?}
            ?};
            UD_DEF.cntx_pop()
         |? TAT.TYP='U' & app_info('web_sesid')<>''
         || exec('tab_form','obiegi','UD_DEF','wyb_ud_def_innd','obiegi','bobs_tat_u_wt','obiegi');
            exec('tat_u_wt','obiegi')
         |? TAT.TYP='X' & app_info('web_sesid')=''
         || _tab.cntx_psh();
            _tab.prefix();
            {? _tab.seek({? _tab=DOKUM || EDOK_ATR.DOKUM || EDOK_ATR.EDOKUM ?})
            || _t_slo:=exec('get_atr_form','obiegi',{? _tab=DOKUM || DOKUM.DOT || EDOKUM.TYP ?},EDOK_ATR.KOL,'TSLO');
               {? _t_slo<>''
               || no_msg(1); on_error(3);
                  _t_slo:=($_t_slo)();
                  {? in_error()
                  || FUN.info('Formuła na słownik tymczasowy zawiera błąd.'@);
                     on_error(); no_msg(0)
                  |? var_pres('_t_slo')<>type_of(tab_tmp(1,'AA','STRING[1]','aa'))
                  || FUN.info('Formuła na słownik tymczasowy nie zwraca wskazania na słownik.'@);
                     on_error(); no_msg(0)
                  || on_error(); no_msg(0);
                     _t_slo.index(_t_slo.ndx_tmp(,,_t_slo.fld_acr(3),,));
                     _acr_sel:=_t_slo.mk_sel(EDOK_ATR.TAT().OPIS,,0);
                     _t_slo.win_fld(_acr_sel,,_t_slo.fld_acr(1),,,8,,1,'Kod'@);
                     _t_slo.win_fld(_acr_sel,,_t_slo.fld_acr(2),,,80,,1,'Treść'@);
                     _t_slo.win_act(_acr_sel,0,'Formuła','Wybierz'@@,,'Wybór bieżącego rekordu'@,"sel_exit()",,1);
                     _t_slo.win_act(_acr_sel,0,'Szukaj',,,,,,0);
                     _t_slo.win_sel(_acr_sel);
                     {? var_pres('_t_slo')=type_of(SYSLOG)
                        & ((EDOK_ATR.REF_SQL<>'' & _t_slo.find_key(EDOK_ATR.REF_SQL)) | _t_slo.first())
                        & _t_slo.select(,1,1)
                     || _pole:=exec('get_atr_slopol','obiegi',{? _tab=DOKUM || DOKUM.DOT || EDOKUM.TYP ?},EDOK_ATR.KOL);
                        EDOK_ATR.WAR:={? _pole='T' || _t_slo[2] || _t_slo[1] ?};
                        EDOK_ATR.REF_SQL:=_t_slo[3];
                        _po_red:=EDOK_ATR.put()
                     || {? (EDOK_ATR.REF_SQL<>'') & FUN.ask('Usunąć istniejącą wartość?'@)
                        || EDOK_ATR.WAR:=''; EDOK_ATR.REF_SQL:=''; _po_red:=EDOK_ATR.put()
                        ?}
                     ?}
                  ?}
               || FUN.info('Brak wskazania słownika.'@)
               ?}
            || FUN.info('Nie znaleziono dokumentu.'@)
            ?};
            _tab.cntx_pop()
         |? TAT.TYP='X' & app_info('web_sesid')<>''
         || exec('tab_form','obiegi','UD_DEF','wyb_x_innd','obiegi','bobs_tat_x_wt','obiegi');
            exec('tat_x_wt','obiegi',_tab)
         || ~~
         ?};
         {? _po_red & app_info('web_sesid')=''
         || exec('po_red','obiegi',_tab)
         ?}
      || FUN.info('Ten element nie może mieć nadawanej wartości.'@)
      ?}
   || FUN.info('Dane dokumentu są właśnie redagowane przez innego użytkownika. Spróbuj za chwilę.'@)
   ?};
   _tab.r_unlock()
|| FUN.info(_kom)
?};
~~


\tab_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawia formuły uruchamiające się na akcję wybierz i przed obsługą dla dowolnej tabeli
::   WE: _a - akronim tabeli
::       _b - formuła na wybierz
::       _c - plik na wybierz
::       _d - formuła na przed obsługą
::       _e - plik na przed obsługą
::       _f - opcja - ta sama obsługa
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of('') & type_of(_b)=type_of('') &
   type_of(_c)=type_of('') & type_of(_d)=type_of('') & type_of(_e)=type_of('')
|| {? app_info('web_sesid')<>''
   || _opcja:={? _=6 & _f || 1 || 0 ?};
      web_params_set(
         exec('obj_ntab_set','#array',
            web_params_get(_opcja),
            'tab_wyb',_a,
            'form_wyb',_b,
            'file_wyb',_c,
            'form_bob',_d,
            'file_bob',_e
         )
      )
   || _par:=obj_new(
         'tab_wyb',
         'form_wyb',
         'file_wyb',
         'form_bob',
         'file_bob'
      );
      _par.tab_wyb:=_a;
      _par.form_wyb:=_b;
      _par.file_wyb:=_c;
      _par.form_bob:=_d;
      _par.file_bob:=_e;
      _par
   ?}
?}


\wyb_tab_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wybór rekordu ze słownika - webterm
::----------------------------------------------------------------------------------------------------------------------
_par:={? app_info('web_sesid')<>''
      || web_params_get()
      || _all:=params_get();
         {? var_pres('_all')>0 & var_pres('par',_all)>0
         || _all.par
         || ~~
         ?}
      ?};
{? type_of(_par)>100 & var_pres('form_wyb',_par)=type_of('') & var_pres('file_wyb',_par)=type_of('')
|| {? _par.form_wyb<>'' & _par.file_wyb<>''
   || exec(_par.form_wyb,_par.file_wyb)
   ?}
|? type_of(_par)>100 & var_pres('tab_wyb',_par)=type_of('')
|| ($('_a.web_close()'))(($_par.tab_wyd)())
?};
1


\bobs_tab_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obługą okienka wertowania - webterm
::----------------------------------------------------------------------------------------------------------------------
_par:=web_params_get();
{? type_of(_par)>100 & var_pres('form_bob',_par)=type_of('') & var_pres('file_bob',_par)=type_of('') &
   _par.form_bob<>'' & _par.file_bob<>''
|| exec(_par.form_bob,_par.file_bob)
?};
1


\tat_l_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Edycja atrybutu typu L (liczba) - webterm
::----------------------------------------------------------------------------------------------------------------------
_def:=web_define();
web_def_fld(_def,'WAR',#STR.gsub(STR.gsub(EDOK_ATR.WAR,' ',''),',','.'),
            EDOK_ATR.TAT().NA,EDOK_ATR.TAT().OPIS,20,20,TAT.PREC,);
EDOK_ATR.web_cntx_save();
web_def_edit(_def,"EDOK_ATR.web_cntx_load();
                   EDOKUM.use('skid_v'+(EDOK_ATR.name()+2)); EDOK_ATR.EDOKUM();
                   {? _a='OK'
                   || _war:=web_def_get(web_top_win()).WAR;
                      _prec:=exec('get_atr_prec','obiegi',EDOKUM.TYP,EDOK_ATR.KOL);
                      _tsep:=form(exec('get_atr_tsep','obiegi',EDOKUM.TYP,EDOK_ATR.KOL));
                      EDOK_ATR.WAR:=form(_war$_prec,,,{? _tsep='T' || ' ,' || '9,'?});
                      {? EDOK_ATR.put() || exec('po_red','obiegi',EDOKUM) ?}
                   ?};
                   web_def_close(web_top_win());
                   web_top_refresh(1)
                  ",'Informacje dodatkowe'@)


\tat_d_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Edycja atrybutu typu D (data) - webterm
::----------------------------------------------------------------------------------------------------------------------
_def:=web_define();
web_def_fld(_def,'WAR',date(#(4+EDOK_ATR.WAR),#(2+(5-EDOK_ATR.WAR)),#(EDOK_ATR.WAR+2)),
            EDOK_ATR.TAT().NA,EDOK_ATR.TAT().OPIS,10,10,,);
EDOK_ATR.web_cntx_save();
web_def_edit(_def,"EDOK_ATR.web_cntx_load();
                   EDOKUM.use('skid_v'+(EDOK_ATR.name()+2)); EDOK_ATR.EDOKUM();
                   {? _a='OK'
                   || EDOK_ATR.WAR:=$web_def_get(web_top_win()).WAR;
                      {? EDOK_ATR.put() || exec('po_red','obiegi',EDOKUM) ?}
                   ?};
                   web_def_close(web_top_win());
                   web_top_refresh(1)
                  ",'Informacje dodatkowe'@)


\tat_c_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Edycja atrybutu typu C (czas) - webterm
::----------------------------------------------------------------------------------------------------------------------
_war:=EDOK_ATR.WAR;
_pos:=_war*':';
_gg:=_mm:=_ss:=0;
{? _pos>0
|| _gg:=#((_pos-1)+_war);
   _mm:=#(2+(_pos-_war));
   _ss:=#(_war+2)
?};
_def:=web_define();
web_def_fld(_def,'WAR',time(_gg,_mm,_ss),EDOK_ATR.TAT().NA,EDOK_ATR.TAT().OPIS,10,10,,);
EDOK_ATR.web_cntx_save();
web_def_edit(_def,"EDOK_ATR.web_cntx_load();
                   EDOKUM.use('skid_v'+(EDOK_ATR.name()+2)); EDOK_ATR.EDOKUM();
                   {? _a='OK'
                   || _time:=web_def_get(web_top_win()).WAR;
                      {? _time>=time(24,0,0) || _time:=time(23,59,59) ?};
                      EDOK_ATR.WAR:=_time$3;
                      {? EDOK_ATR.put() || exec('po_red','obiegi',EDOKUM) ?}
                   ?};
                   web_def_close(web_top_win());
                   web_top_refresh(1)
                  ",'Informacje dodatkowe'@)


\tat_s_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Edycja atrybutu typu S (słownik użytkownika) - webterm
::----------------------------------------------------------------------------------------------------------------------
SLO.index('SL'); SLO.prefix(EDOK_ATR.TAT().SLU);
{? EDOK_ATR.SLO<>null
|| SLO.seek(EDOK_ATR.SLO)
|| SLO.first()
?};
EDOK_ATR.web_cntx_save(1);
SLO.web_select('DICTW_WT',,1)


\bobs_tat_s_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.14]
:: OPIS: Przed obsługą dla okienka atrybutu typu S (słownik użytkownika) - webterm
::----------------------------------------------------------------------------------------------------------------------
EDOK_ATR.web_cntx_load(1);
EDOKUM.use('skid_v'+(EDOK_ATR.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix(); EDOK_ATR.EDOKUM();
exec('env_edokum_get1','obiegi')


\tat_u_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Edycja atrybutu typu U (UD_DEF) - webterm
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.prefix();
_cur:=null();
{? EDOK_ATR.UD_SKL<>null()
|| UD_DEF.index('SKLREF');
   UD_DEF.prefix(EDOK_ATR.UD_SKL);
   {? UD_DEF.first() || _cur:=UD_DEF.ref() ?}
?};
UD_DEF.index('SYMBOL'); UD_DEF.prefix(EDOK_ATR.TAT().UD_SCH);
UD_DEF.first();
{? _cur<>null() || UD_DEF.seek(_cur) ?};
EDOK_ATR.web_cntx_save(1);
UD_DEF.web_select('DICTW_WT',,1)


\bobs_tat_u_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.14]
:: OPIS: Przed obsługą dla okienka atrybutu typu U (UD_DEF) - webterm
::----------------------------------------------------------------------------------------------------------------------
EDOK_ATR.web_cntx_load(1);
EDOKUM.use('skid_v'+(EDOK_ATR.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix(); EDOK_ATR.EDOKUM();
exec('env_edokum_get1','obiegi')


\wyb_ud_def_innd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła na wybór rekordu w UD_DEF - webterm
::----------------------------------------------------------------------------------------------------------------------
EDOK_ATR.web_cntx_load(1);
EDOKUM.use('skid_v'+(EDOK_ATR.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix(); EDOK_ATR.EDOKUM();
exec('env_edokum_get1','obiegi');
_pole:=exec('get_atr_slopol','obiegi',EDOKUM.TYP,EDOK_ATR.KOL);
EDOK_ATR.WAR:={? _pole='T' || UD_DEF.UD_SKL().OPIS || UD_DEF.UD_SKL().SYMBOL ?};
EDOK_ATR.UD_SKL:=UD_DEF.UD_SKL;
{? EDOK_ATR.put()
|| exec('po_red','obiegi',EDOKUM)
?};
UD_DEF.web_close();
web_top_refresh(1)


\tat_x_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Edycja atrybutu typu X (dowolny słownik) - webterm
::   WE: _a - alias tabeli źródłowej
::----------------------------------------------------------------------------------------------------------------------
_a.cntx_psh();
_a.prefix();
{? _a.seek({? _a=DOKUM || EDOK_ATR.DOKUM || EDOK_ATR.EDOKUM ?})
|| _t_slo:=exec('get_atr_form','obiegi',{? _a=DOKUM || DOKUM.DOT || EDOKUM.TYP ?},EDOK_ATR.KOL,'TSLO');
   {? _t_slo<>''
   || no_msg(1); on_error(3);
      _t_slo:=($_t_slo)();
      {? in_error()
      || FUN.info('Formuła na słownik tymczasowy zawiera błąd.'@);
         on_error(); no_msg(0)
      |? var_pres('_t_slo')<>type_of(tab_tmp(1,'AA','STRING[1]','aa'))
      || FUN.info('Formuła na słownik tymczasowy nie zwraca wskazania na słownik.'@);
         on_error(); no_msg(0)
      || on_error(); no_msg(0);
         _tcid:=app_info('web_tcid');
         _mbid:=app_info('web_mbid');
         _sesid:=app_info('web_sesid');
         _tabid:=app_info('web_tabid');
         TAB_WT.index('INDEX01'); TAB_WT.prefix(_tcid,_tabid,1);
         do();
         {? TAB_WT.first()
         || {! |?
               _delr:=TAB_WT.del(,1);
               {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
            !}
         ?};
         {? _t_slo.first()
         || {! |?
               TAB_WT.blank(1);
               TAB_WT.SESID:=_sesid;
               TAB_WT.MBID:=_mbid;
               TAB_WT.TCID:=_tcid;
               TAB_WT.TABID:=_tabid;
               TAB_WT.KOD:=_t_slo.KOD;
               TAB_WT.TR:=_t_slo.TR;
               TAB_WT.REF_SQL:=_t_slo.REF_SQL;
               TAB_WT.TYP:=1;
               TAB_WT.add();
               _t_slo.next()
            !}
         ?};
         end();
         _index:=TAB_WT.ndx_tmp(,,'TCID',,,'TABID',,,'TYP',,,'KOD',,,'TR',,);
         {? EDOK_ATR.REF_SQL<>''
         || TAB_WT.index('INDEX03'); TAB_WT.prefix(_tcid,_tabid,1,EDOK_ATR.REF_SQL);
            {? ~TAB_WT.first()
            || TAB_WT.index(_index); TAB_WT.prefix(_tcid,_tabid,1); TAB_WT.first()
            || TAB_WT.index(_index); TAB_WT.prefix(_tcid,_tabid,1)
            ?}
         || TAB_WT.index(_index); TAB_WT.prefix(_tcid,_tabid,1); TAB_WT.first()
         ?};
         EDOK_ATR.web_cntx_save(1);
         TAB_WT.web_select('WER01');
         TAB_WT.ndx_drop(_index)
      ?}
   || FUN.info('Brak wskazania słownika.'@)
   ?}
|| FUN.info('Nie znaleziono dokumentu.'@)
?};
_a.cntx_pop()


\bobs_tat_x_wt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.14]
:: OPIS: Przed obsługą dla okienka atrybutu typu X (dowolny słownik) - webterm
::----------------------------------------------------------------------------------------------------------------------
EDOK_ATR.web_cntx_load(1);
EDOKUM.use('skid_v'+(EDOK_ATR.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix(); EDOK_ATR.EDOKUM();
exec('env_edokum_get1','obiegi')


\wyb_x_innd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła na wybór rekordu w UD_DEF - webterm
::----------------------------------------------------------------------------------------------------------------------
EDOK_ATR.web_cntx_load(1);
EDOKUM.use('skid_v'+(EDOK_ATR.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix(); EDOK_ATR.EDOKUM();
exec('env_edokum_get1','obiegi');
_pole:=exec('get_atr_slopol','obiegi',EDOKUM.TYP,EDOK_ATR.KOL);
EDOK_ATR.WAR:={? _pole='T' || TAB_WT.TR || TAB_WT.KOD ?};
EDOK_ATR.REF_SQL:=TAB_WT.REF_SQL;
{? EDOK_ATR.put() || exec('po_red','obiegi',EDOKUM) ?};
TAB_WT.web_close();
web_top_refresh(1)


\po_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wykonanie formuły po edycji atrybutu
::   WE: _a - alias tabeli źródłowej
::----------------------------------------------------------------------------------------------------------------------
_form:=exec('get_atr_form','obiegi',{? _a=DOKUM || DOKUM.DOT || EDOKUM.TYP ?},EDOK_ATR.KOL,'AE');
{? |_form<>''
|| no_msg(1); on_error(3);
   _wynik:=($_form)();
   {? in_error() || FUN.info('Formuła po edycji atrybutu zawiera błąd.'@)
   |? var_pres('_wynik')=type_of('') & _wynik<>'' || FUN.info(_wynik)
   ?};
   on_error(); no_msg(0)
?}


\set_tak_nie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zwraca wartosc odpowiadajaca prawdzie lub falszowi dla atrybutow typu tak/nia
::   WE: _a - tresc pytania ['']
::       _b -  wartosc przy braku odpowiedzi ['']
::   WY: wartosc dla atrybutu typu Tak/Nie
::  OLD: \set_tak_nie/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_<1) | (_a=~~) || _a:='' ?};
{? (_<2) | (_b=~~) || _b:='' ?};
{? type_of(_a)<>type_of('') || &_a; _a:='' ?};
{? type_of(_b)<>type_of('') || &_b; _b:='' ?};

_odp:=FUN.choice(_a,'ASK','Tak','Nie');
{? _odp=1 || exec('get_war_true','obiegi')
|? _odp=2 || exec('get_war_false','obiegi')
|| _b
?}


\get_war_true
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zwraca lancuch odpowiadajacy potwierdzeniu w atrybucie typu Tak/Nie
::   WY: Lancuch dla potwierdzenia
::  OLD: \get_war_true/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
'Tak'@


\get_war_false
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zwraca lancuch odpowiadajacy zaprzeczeniu  w atrybucie typu Tak/Nie
::   WY: Lancuch dla zaprzeczenia
::  OLD: \get_war_false/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
'Nie'@


\get_atr_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [12.30]
:: OPIS: Zwraca czy edycyjne wypelnienie wartosci dla atrybutu podanej KOL typu ETYPY
::   WE: _a - ETYPY.ref() lub ZDARZT.ref() [biezacy]
::       _b - ETYP_ATR.KOL
::   WY: 1 - tak; 0 - nie
::  OLD: \get_atr_edit/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null()))
   | (_a=null()) | ((ref_name(_a)<>ETYPY.name()) & (ref_name(_a)<>ZDARZT.name()))
|| {? OBIEGI.TYP_ID='K'
   || _a:=ZDARZT.ref()
   || _a:=ETYPY.ref()
   ?}
?};
{? (_<2) | (_b=~~) || _b:=0 ?};
{? (type_of(_b)<>type_of(0)) || &_b;_b:=0 ?};

_odp:='T';
{? _b>0
||
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ');
   {? (ref_name(_a)=ZDARZT.name())
   || ETYP_ATR.prefix(null,_a,_b)
   || ETYP_ATR.prefix(_a,null,_b)
   ?};
   {? ETYP_ATR.first()
   ||
:sprawdz blokade pola
      _odp:={? ETYP_ATR.EDIT<>'T' || 'T' || 'N' ?}
   ?};
   ETYP_ATR.cntx_pop()
?};
_odp


\get_atr_prec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [12.30]
:: OPIS: Zwraca precyzje dla atrybutu typu liczbowego
::   WE: _a - ETYPY.ref() lub ZDARZT.ref() [biezacy]
::       _b - ETYP_ATR.KOL
::   WY: 1 - tak; 0 - nie
::  OLD: \get_atr_prec/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null()))
   | (_a=null()) | ((ref_name(_a)<>ETYPY.name()) & (ref_name(_a)<>ZDARZT.name()))
|| {? OBIEGI.TYP_ID='K'
   || _a:=ZDARZT.ref()
   || _a:=ETYPY.ref()
   ?}
?};
{? (_<2) | (_b=~~) || _b:=0 ?};
{? (type_of(_b)<>type_of(0)) || &_b;_b:=0 ?};

_odp:=0;
{? _b>0
||
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ');
   {? (ref_name(_a)=ZDARZT.name())
   || ETYP_ATR.prefix(null,_a,_b)
   || ETYP_ATR.prefix(_a,null,_b)
   ?};
   {? ETYP_ATR.first()
   ||
      _odp:=ETYP_ATR.TAT().PREC
   ?};
   ETYP_ATR.cntx_pop()
?};
_odp


\get_atr_slopol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zwraca wartosc pola SLOPOLE dla atrybutu podanej KOL typu ETYPY
::   WE: _a - ETYPY.ref() [biezacy]
::       _b - ETYP_ATR.KOL
::   WY: '' - gdy nieokreslono
::       ETYP_ATR.SLOPOL
::  OLD: \get_atr_slopol/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null()))
   | (_a=null()) | ((ref_name(_a)<>ETYPY.name()) & (ref_name(_a)<>ZDARZT.name()))
|| {? OBIEGI.TYP_ID='K'
   || _a:=ZDARZT.ref()
   || _a:=ETYPY.ref()
   ?}
?};
{? (_<2) | (_b=~~) || _b:=0 ?};
{? (type_of(_b)<>type_of(0)) || &_b;_b:=0 ?};

_odp:='';
{? _b>0
||
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ');
   {? (ref_name(_a)=ZDARZT.name())
   || ETYP_ATR.prefix(null,_a,_b)
   || ETYP_ATR.prefix(_a,null,_b)
   ?};
   {? ETYP_ATR.first()
   ||
      _odp:=ETYP_ATR.SLOPOLE
   ?};
   ETYP_ATR.cntx_pop()
?};
_odp


\get_atr_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [12.30]
:: OPIS: Zwraca czy jest formuła po edycji dla atrybutu podanej KOL typu ETYPY
::   WE: _a - ETYPY.ref() lub ZDARZT.ref() [biezacy]
::       _b - ETYP_ATR.KOL
::       _c - pole
::   WY: 1 - tak; 0 - nie
::  OLD: \get_atr_form/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null()))
   | (_a=null()) | ((ref_name(_a)<>ETYPY.name()) & (ref_name(_a)<>ZDARZT.name()))
|| {? OBIEGI.TYP_ID='K'
   || _a:=ZDARZT.ref()
   || _a:=ETYPY.ref()
   ?}
?};
{? (_<2) | (_b=~~) || _b:=0 ?};
{? (type_of(_b)<>type_of(0)) || &_b;_b:=0 ?};
{? (type_of(_c)<>type_of('')) || _c:='AE' ?};

_odp:='';
{? _b>0
||
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ');
   {? (ref_name(_a)=ZDARZT.name())
   || ETYP_ATR.prefix(null,_a,_b)
   || ETYP_ATR.prefix(_a,null,_b)
   ?};
   {? ETYP_ATR.first()
   ||
      _odp:=($('ETYP_ATR.'+_c))()
   ?};
   ETYP_ATR.cntx_pop()
?};
_odp


\get_atr_tsep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [12.30]
:: OPIS: Zwraca zawartość pola 'czy separator tysięcznych' dla pola liczbowego
::   WE: _a - ETYPY.ref() lub ZDARZT.ref() [biezacy]
::       _b - ETYP_ATR.KOL
::   WY: 1 - tak; 0 - nie
::  OLD: \get_atr_tsep/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null()))
   | (_a=null()) | ((ref_name(_a)<>ETYPY.name()) & (ref_name(_a)<>ZDARZT.name()))
|| {? OBIEGI.TYP_ID='K'
   || _a:=ZDARZT.ref()
   || _a:=ETYPY.ref()
   ?}
?};
{? (_<2) | (_b=~~) || _b:=0 ?};
{? (type_of(_b)<>type_of(0)) || &_b;_b:=0 ?};

_odp:=0;
{? _b>0
||
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ');
   {? (ref_name(_a)=ZDARZT.name())
   || ETYP_ATR.prefix(null,_a,_b)
   || ETYP_ATR.prefix(_a,null,_b)
   ?};
   {? ETYP_ATR.first()
   ||
      _odp:=ETYP_ATR.TAT().TSEP
   ?};
   ETYP_ATR.cntx_pop()
?};
_odp


\edk_atr_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Usuniecie rekordow dla biezacej pozycji zestawu danych dla biezacego EDOKUM
::       W przypadku gdy user nalozyl filtr to najpierw ustawia rekord wg filtra
::   WE: _a - z dialogami (1) bez (0) [1]
::   WY: '' - wykonano bez bledu
::       komunikat o bledzie
::  OLD: \edk_atr_usun/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' & web_top_kind()='s'
|| exec('env_edokum_get','obiegi')
?};
OBIEGI.TYP_ID:='T';
{? (_<1) | (_a=~~) || _a:=1 ?};
{? type_of(_a)<>type_of(0) || &_a; _a:=1 ?};

{? OBIEGI.TYP_ID='K'
|| _tab:=DOKUM
|| _tab:=EDOKUM
?};

{? EDOK_ATR.f_active() || EDOK_ATR.f_get() ?};
_kom:='';
_kom:=exec('edk_atr_can','obiegi',_tab.ref(),'U');
{? _kom=''
|| {? _tab.r_lock(1,1,1)
   || {? EDOK_ATR.size()
      || _rek:=EDOK_ATR.REKORD;
         _edok:=EDOK_ATR.EDOKUM;
         _dok:=EDOK_ATR.DOKUM;
         _dokoid:=EDOK_ATR.DOKUMOID;
         {? _rek>0
         || {? app_info('web_sesid')<>''
            || EDOK_ATR.web_cntx_save();
               EDOK_ATK.web_cntx_save()
            ?};
            EDOK_ATR.cntx_psh(); EDOK_ATR.index('REKKOLED'); EDOK_ATR.prefix(_edok,_dok,_dokoid,_rek,);
            {? EDOK_ATR.first()
            || {? app_info('web_sesid')=''
               || {? {? _a
                     || FUN.ask('Usunąć dane pozycji %1?'@[$_rek])
                     || 1
                     ?}
                  || exec('edk_atr_usun1','obiegi',_a,_tab)
                  ?}
               || _us:="{? _a
                        || EDOK_ATR.web_cntx_load();
                           EDOK_ATK.web_cntx_load();
                           EDOKUM.use('skid_v'+(EDOK_ATR.name()+2)); EDOKUM.prefix();
                           exec('edk_atr_usun1','obiegi',0,EDOKUM);
                           web_top_refresh(0)
                        ?}";
                  web_ask(_us,'Usunąć dane pozycji %1?'@[$_rek],FUN.TYT)
               ?}
            ?};
            EDOK_ATR.cntx_pop();
            {? EDOK_ATR.f_active()
            || EDOK_ATR.f_rfresh(); EDOK_ATR.f_first(); EDOK_ATR.f_get()
            ?}
         ?}
      || _kom:='Brak pozycji do usunięcia.'@
      ?}
   || _kom:='Dane dokumentu są właśnie redagowane przez innego użytkownika. Spróbuj za chwilę.'@
   ?};
   _tab.r_unlock()
?};
{? _a & (_kom<>'') || FUN.info(_kom) ?};
_kom


\edk_atr_usun1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Usuwanie danych dodatkowych - wewnętrzna
::   WE: _a - z dialogami (1) bez (0) [1]
::       _b - alias dla tabeli z której usuwamy dane
::   WY: Komentarz o ewentualnym błedzie
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| EDOK_ATR.cntx_psh();
   EDOK_ATR.index('REKKOLED'); EDOK_ATR.prefix(EDOK_ATR.EDOKUM,EDOK_ATR.DOKUM,EDOK_ATR.DOKUMOID,EDOK_ATR.REKORD);
   EDOKUM.use('skid_v'+(EDOK_ATR.name()+2)); EDOK_ATR.EDOKUM();
   EDOK_ATR.EDOKUM()
?};
_kom:=''; _do:=0;
{? do_state()=0 || do(); _do:=1 ?};
{! |? EDOK_ATR.del() !};
exec('edk_atr_renum','obiegi',_b.ref(),_a);
{? do_state()=2 || _kom:='Błąd funkcji usuwania informacji dodatkowych.'@ ?};
{? _do || end() ?};
{? app_info('web_sesid')<>''
|| EDOK_ATR.cntx_pop()
?};
_kom


\edk_atr_renum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Uporzadkowanie numeracji rekordow atrybutow denego EDOKUM
::   WE: _a - EDOKUM.ref lub DOKUM.ref [biezacy]
::       _b - z dialogami (1) bez (0) [1]
::   WY: '' - wykonano bez bledu
::       komunikat o bledzie
::  OLD: \edk_atr_renum/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (_a=null())
|| {? OBIEGI.TYP_ID='K'
   || _a:=DOKUM.ref()
   || _a:=EDOKUM.ref()
   ?}
?};
::jeseli nieprawidlowy parametr to nie rob nic
{? (type_of(_a)<>type_of(null())) | ((ref_name(_a)<>EDOKUM.name()) & (ref_name(_a)<>DOKUM.name()))
|| return('Nie wskazano dokumentu w obiegu.')
?};
{? (_<2) | (_b=~~) || _b:=1 ?};
{? type_of(_b)<>type_of(0) || &_b; _b:=1 ?};

{? ref_name(_a)=DOKUM.name()
|| _tab:=DOKUM
|| _tab:=EDOKUM
?};

_stop:=0; _kom:='';
::zabezpieczenie na brak otwarcia maski (portsl)
_tab.cntx_psh();
{? _tab.ref()<>_a
|| _tab.use(ref_name(_a)); _tab.prefix();
   _stop:=~_tab.seek(_a)
?};
{? _stop=0
||
   {? exec('open_edk_atr','obiegi')
   ||
      EDOK_ATR.cntx_psh();
      EDOK_ATR.index('REKKOLED');
      {? _tab=DOKUM
      || EDOK_ATR.prefix(null,_a,DOKUM.ONEID,)
      || EDOK_ATR.prefix(_a)
      ?};
      {? EDOK_ATR.first()
      ||
         _oczek:=1;
         _biez:=EDOK_ATR.REKORD;
         _do:=0;
::       >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
         {? do_state()=0 || do(); _do:=1 ?};
::       ewentualne sprawdzenie,czy numeracja nie zeszla ponizej 1 jesli tak to naprawa
         {? EDOK_ATR.REKORD<1
         || _biez:=1+(-EDOK_ATR.REKORD);
            {? EDOK_ATR.last()
            ||
               {! |? EDOK_ATR.REKORD+=_biez; EDOK_ATR.put(); EDOK_ATR.prev() !}
            ?}
         ?};
::       przenumerowanie pola REKORD poczynajac od 1
         EDOK_ATR.first();
         _oczek:=1;
         _biez:=EDOK_ATR.REKORD;
         {!
         |?
            {? EDOK_ATR.REKORD>_biez || _biez:=EDOK_ATR.REKORD; _oczek+=1 ?};
            {? EDOK_ATR.REKORD>_oczek
            || EDOK_ATR.REKORD:=_oczek;
               EDOK_ATR.put()
            || EDOK_ATR.next()
            ?}
         !};
         {? do_state()=2 || _kom:='Błąd funkcji porządkowania pól informacji dodatkowych.'@ ?};
         {? _do || end() ?}
::     <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      ?};
      EDOK_ATR.cntx_pop()
   || _kom:='Nie udało się otworzyć właściwej maski informacji dodatkowych dokumentu.'@
   ?}
|| _kom:='Nie znaleziono dokumentu.'@
?};
_tab.cntx_pop();
{? _b & (_kom<>'') || FUN.info(_kom) ?};
_kom


\edk_atr_wgore
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Przesuniecie w gore o jedna pozycje danych biezacej pozycji
::   WE: _a - z dialogami (1) bez (0) [1]
::   WY: '' - wykonano bez bledu
::       komunikat o bledzie
::  OLD: \edk_atr_wgore/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? app_info('web_sesid')<>'' & web_top_kind()='s'
|| exec('env_edokum_get','obiegi')
?};
{? (_<1) | (_a=~~) || _a:=1 ?};
{? type_of(_a)<>type_of(0) || &_a; _a:=1 ?};

{? OBIEGI.TYP_ID='K'
|| _tab:=DOKUM
|| _tab:=EDOKUM
?};

{? EDOK_ATR.f_active() || EDOK_ATR.f_get() ?};
_kom:=exec('edk_atr_can','obiegi',{? _tab=DOKUM || EDOK_ATR.DOKUM || EDOK_ATR.EDOKUM ?},'P');
{? _kom=''
||
   {? _tab.r_lock(1,1,1)
   ||
      EDOK_ATR.cntx_psh();
      _edok:=EDOK_ATR.EDOKUM;
      _mojrek:=EDOK_ATR.REKORD;
      _dok:=EDOK_ATR.DOKUM;
      _dokoid:=EDOK_ATR.DOKUMOID;
      _prevrek:=exec('edk_poprz_rek','obiegi');
      {? _prevrek>0
      ||
         EDOK_ATR.index('REKKOLED');
         EDOK_ATR.prefix(_edok,_dok,_dokoid,_mojrek);
         {? EDOK_ATR.first()
         ||
            _do:=0;
::          >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            {? do_state()=0 || do();_do:=1 ?};
            {? exec('zmien_nr_rek','obiegi',{? _tab=DOKUM || _dok || _edok ?},_mojrek,-1)
            || {? exec('zmien_nr_rek','obiegi',{? _tab=DOKUM || _dok || _edok ?},_prevrek,_mojrek)
               || {? ~exec('zmien_nr_rek','obiegi',{? _tab=DOKUM || _dok || _edok ?},-1,_prevrek)
                  || undo()
                  ?}
               || undo()
               ?}
            || undo()
            ?};
            {? do_state()=2 || _kom:='Błąd funkcji przesuwania informacji dodatkowych.'@ ?};
            {? _do || end() ?}
::          <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
         ?}
      ?};
      EDOK_ATR.cntx_pop();
      {? EDOK_ATR.f_active() || EDOK_ATR.f_rfresh() ?}
   || _kom:='Dane dokumentu są właśnie redagowane przez innego użytkownika. Spróbuj za chwilę.'@
   ?};
   _tab.r_unlock()
?};
{? _a & (_kom<>'') || FUN.info(_kom) ?};
{? app_info('web_sesid')<>'' || web_top_refresh(0) ?};
_kom


\edk_atr_wdol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Przesuniecie w dol o jedna pozycje danych biezacej pozycji
::   WE: _a - z dialogami (1) bez (0) [1]
::   WY: '' - wykonano bez bledu
::       komunikat o bledzie
::  OLD: \edk_atr_wdol/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? app_info('web_sesid')<>'' & web_top_kind()='s'
|| exec('env_edokum_get','obiegi')
?};
{? (_<1) | (_a=~~) || _a:=1 ?};
{? type_of(_a)<>type_of(0) || &_a; _a:=1 ?};

{? OBIEGI.TYP_ID='K'
|| _tab:=DOKUM
|| _tab:=EDOKUM
?};

{? EDOK_ATR.f_active() || EDOK_ATR.f_get() ?};
_kom:=exec('edk_atr_can','obiegi',{? _tab=DOKUM || EDOK_ATR.DOKUM || EDOK_ATR.EDOKUM ?},'P');
{? _kom=''
||
   {? _tab.r_lock(1,1,1)
   ||
      EDOK_ATR.cntx_psh();
      _edok:=EDOK_ATR.EDOKUM;
      _mojrek:=EDOK_ATR.REKORD;
      _dok:=EDOK_ATR.DOKUM;
      _dokid:=EDOK_ATR.DOKUMOID;
      _nastrek:=exec('edk_nast_rek','obiegi');
      {? _nastrek>0
      ||
         EDOK_ATR.index('REKKOLED');
         EDOK_ATR.prefix(_edok,_dok,_dokid,_mojrek);
         {? EDOK_ATR.first()
         ||
            _do:=0;
::          >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            {? do_state()=0 || do();_do:=1 ?};
            {? exec('zmien_nr_rek','obiegi',{? _tab=DOKUM || _dok || _edok ?},_mojrek,-1)
            || {? exec('zmien_nr_rek','obiegi',{? _tab=DOKUM || _dok || _edok ?},_nastrek,_mojrek)
               || {? ~exec('zmien_nr_rek','obiegi',{? _tab=DOKUM || _dok || _edok ?},-1,_nastrek)
                  || undo()
                  ?}
               || undo()
               ?}
            || undo()
            ?};
            {? do_state()=2 || _kom:='Błąd funkcji przesuwania informacji dodatkowych.'@ ?};
            {? _do || end() ?}
::          <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
         ?}
      ?};
      EDOK_ATR.cntx_pop();
      {? EDOK_ATR.f_active() || EDOK_ATR.f_rfresh() ?}
   || _kom:='Dane dokumentu są właśnie redagowane przez innego użytkownika. Spróbuj za chwilę.'@
   ?};
   _tab.r_unlock()
?};
{? _a & (_kom<>'') || FUN.info(_kom) ?};
{? app_info('web_sesid')<>'' || web_top_refresh(0) ?};
_kom


\zmien_nr_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zmiana wartosci REKORD na podana w parametrze
::   WE: _a - EDOKUM.ref()
::       _b - wartosc REKORD biezaca
::       _c - wartosc REKORD nowa
::   WY: 1 - zmiana wykonana, 0 - bledne parametry
::  OLD: \zmien_nr_rek/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? _<3 || return(0) ?};
{? (_a=~~) | (_a=null())
|| {? OBIEGI.TYP_ID='K'
   || _a:=DOKUM.ref()
   || _a:=EDOKUM.ref()
   ?}
?};
::jeseli nieprawidlowy parametr to nie rob nic
{? (type_of(_a)<>type_of(null())) | ((ref_name(_a)<>EDOKUM.name()) & (ref_name(_a)<>DOKUM.name()))
|| return(0)
?};
{? (type_of(_b)<>type_of(0)) | (type_of(_c)<>type_of(_b)) || return(0) ?};
{? _b=_c || return(0) ?};

{? ref_name(_a)=DOKUM.name()
|| _tab:=DOKUM
|| _tab:=EDOKUM
?};

_go:=1;
::zabezpieczenie na brak otwarcia maski (portal)
_tab.cntx_psh();
{? _tab.ref()<>_a
|| _tab.use(ref_name(_a)); _tab.prefix();
   _go:=_tab.seek(_a)
?};
{? _go & exec('open_edk_atr','obiegi')
||
   {? _tab=DOKUM
   || EDOK_ATR.prefix(null,_a,DOKUM.ONEID,_b)
   || EDOK_ATR.prefix(_a,null,'',_b)
   ?};
   {? EDOK_ATR.first()
   ||
      {!
      |?
         EDOK_ATR.cntx_psh();
         EDOK_ATR.prefix();
         EDOK_ATR.REKORD:=_c;
         EDOK_ATR.put();
         EDOK_ATR.cntx_pop();
         EDOK_ATR.first()
      !}
   ?}
|| _go:=0
?};
_tab.cntx_pop();
_go


\edk_nast_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zwraca wartosc EDOK_ATR.REKORD dla nastepnej pozycji
::   WY: Wartosc REKORD dla nastepnej pozycji lub 0 gdy brak
::  OLD: \edk_nast_rek/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
{? EDOK_ATR.f_active() || EDOK_ATR.f_get() ?};
_odp:=0;
EDOK_ATR.cntx_psh();
_edok:=EDOK_ATR.EDOKUM;
_mojrek:=EDOK_ATR.REKORD;
_dok:=EDOK_ATR.DOKUM;
_dokoid:=EDOK_ATR.DOKUMOID;
EDOK_ATR.index('REKKOLED'); EDOK_ATR.prefix(_edok,_dok,_dokoid,);
{? EDOK_ATR.find_key(_mojrek,0)
||
   {!
   |? (EDOK_ATR.REKORD=_mojrek) & EDOK_ATR.next()
   !};
   {? EDOK_ATR.REKORD>_mojrek || _odp:=EDOK_ATR.REKORD ?}
?};
EDOK_ATR.cntx_pop();
_odp


\edk_poprz_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zwraca wartosc EDOK_ATR.REKORD dla poprzedzajacej pozycji
::   WY: Wartosc REKORD dla poprzedniej pozycji lub 0 gdy brak
::  OLD: \edk_poprz_rek/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
{? EDOK_ATR.f_active() || EDOK_ATR.f_get() ?};
_odp:=0;
EDOK_ATR.cntx_psh();
_edok:=EDOK_ATR.EDOKUM;
_mojrek:=EDOK_ATR.REKORD;
_dok:=EDOK_ATR.DOKUM;
_dokoid:=EDOK_ATR.DOKUMOID;
EDOK_ATR.index('REKKOLED');EDOK_ATR.prefix(_edok,_dok,_dokoid,);
{? EDOK_ATR.find_key(_mojrek,0)
|| {? EDOK_ATR.prev() || _odp:=EDOK_ATR.REKORD ?}
?};
EDOK_ATR.cntx_pop();
_odp


\edok_atr_dopis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Wyswietlenie opisu dodatkowego atrybutu (opisu wyświetlanego na portalu w 'dymku').
::  OLD: \edok_atr_dopis/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? app_info('web_sesid')<>'' & web_top_kind()='s'
|| exec('env_edokum_get','obiegi');
   EDOKUM.use('skid_v'+(EDOK_ATR.name()+2)); EDOK_ATR.EDOKUM()
?};

{? OBIEGI.TYP_ID='K'
|| _tab:=DOKUM
|| _tab:=EDOKUM
?};
EDOKUM.cntx_psh(); DOKUM.cntx_psh();
_ref:={? _tab=DOKUM || EDOK_ATR.DOKUM().DOT || EDOK_ATR.EDOKUM().TYP ?};
_kol:=EDOK_ATR.KOL;

ETYP_ATR.cntx_psh();
ETYP_ATR.index('KOLZ');
{? _tab=DOKUM
|| ETYP_ATR.prefix(null,_ref,_kol)
|| ETYP_ATR.prefix(_ref,null,_kol)
?};
{? ETYP_ATR.first()
|| {? ETYP_ATR.memo_get(,'DOPIS')
   || {? app_info('web_sesid')<>''
      || ETYP_ATR.web_display('OPD_WWW',,"ETYP_ATR.web_eclose()")
      || ETYP_ATR.memo_vie(,'DOPIS')
      ?}
   ?}
?};
ETYP_ATR.cntx_pop();
EDOKUM.cntx_pop(); DOKUM.cntx_pop()


\edk_atr_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Rekord przed EDOK_ATR
::   WY: Kolor
::  OLD: \edk_atr_rb/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rekprzed','color','EDOK_ATR#01')


\edk_atr_cl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Kolorowanie rekordow EDOK_ATR
::   WY: kod koloru
::  OLD: \edk_atr_cl/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';

_gray:='';
_tab:={? OBIEGI.TYP_ID='K' || DOKUM || EDOKUM ?};
{? exec('get_atr_edit','obiegi',{? _tab=DOKUM || DOKUM.DOT || EDOKUM.TYP ?},EDOK_ATR.KOL)<>'T' || _gray+='P' ?};
{? ~exec('edk_poprz_rek','obiegi')| EDOKPAR.ED_INND<>'R' || _gray+='G' ?};
{? ~exec('edk_nast_rek','obiegi')| EDOKPAR.ED_INND<>'R' || _gray+='W' ?};
EDOK_ATR.actions_grayed(EDOK_ATR.win_sel('?'),_gray);
{? EDOK_ATR.KOL=0
|| 'EDOK_ATR#01#01'
|? EDOK_ATR.TAT().TYP='O'
|| 'EDOK_ATR#01#03'
|? exec('get_atr_wym','obiegi2',EDOK_ATR.EDOKUM().TYP,EDOK_ATR.KOL)
   & ( EDOK_ATR.WAR=''
      |
       (EDOK_ATR.TAT().TYP='L'
        & exec('get_atr_cz','obiegi',EDOK_ATR.EDOKUM().TYP,EDOK_ATR.KOL)=0
        & #STR.gsub(STR.gsub(EDOK_ATR.WAR,' ',''),',','.')=0
       )
     )
|| 'EDOK_ATR#01#02'
|| 'EDOK_ATR#01#00'
?}


\get_atr_cz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Zwraca czy zero jest wartoscia pusta czy dopuszczalna wartosci dla atrybutu podanej KOL typu ETYPY
::   WE: _a - ETYPY.ref() lub ZDARZT.ref() [biezacy]
::       _b - ETYP_ATR.KOL
::   WY: 1 - dopuszczalne zero; 0 - zero jest wartoscia pusta
::  OLD: \get_atr_cz/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null()))
   | (_a=null()) | ((ref_name(_a)<>ETYPY.name()) & (ref_name(_a)<>ZDARZT.name()))
|| {? OBIEGI.TYP_ID='K'
   || _a:=ZDARZT.ref()
   || _a:=ETYPY.ref()
   ?}
?};
{? (_<2) | (_b=~~) || _b:=0 ?};
{? (type_of(_b)<>type_of(0)) || &_b;_b:=0 ?};

_odp:=0;
{? _b>0
||
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ');
   {? (ref_name(_a)=ZDARZT.name())
   || ETYP_ATR.prefix(null,_a,_b)
   || ETYP_ATR.prefix(_a,null,_b)
   ?};
   {? ETYP_ATR.first()
   ||
      _odp:=(ETYP_ATR.CZY_ZERO='D')
   ?};
   ETYP_ATR.cntx_pop()
?};
_odp


\trig_edokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Trigger dla EDOKUM - popraw po
::----------------------------------------------------------------------------------------------------------------------
EDOKUMW.cntx_psh(); EDOKUMW.use('skidv1'+(EDOKUM.name()+2));
EDOKUMW.index('UNIK1'); EDOKUMW.prefix(EDOKUM.ref());
{? EDOKUMW.first()
|| {! |?
      EDOKUMW.KH:=EDOKUM.KH;
      EDOKUMW.TYP:=EDOKUM.TYP;
      EDOKUMW.ALERTY:=EDOKUM.ALERTY;
      EDOKUMW.STDEKRD:=EDOKUM.STDEKRD;
      EDOKUMW.DOSTAWCA:=EDOKUM.DOSTAWCA;
      EDOKUMW.DEL_CEL:=EDOKUM.DEL_CEL;
      EDOKUMW.put();
      EDOKUMW.next()
   !}
?};
{? bfld('USERS')=null & EDOKUM.USERS<>null || ntc_eat(,'ksefauto'+EDOKUM.uidref()) ?};
EDOKUMW.cntx_pop();
~~


\trig_edokum1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Trigger dla EDOKUM - dołącz przed
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('no_us')<=0
|| _kod:=app_info('app_user');
   USERS.index('USR_AKOD'); USERS.prefix();
   OPERATOR.USER:={? USERS.find_key('T',_kod,) & USERS.AKT='T' || USERS.ref() || null() ?};
   EDOKUM.USERS:=OPERATOR.USER
?};
ETYPY.cntx_psh();
EDOKUM.PAPERLES:=EDOKUM.TYP().W_PORTAL='P';
{? EDOKUM.TYP().ZAPOT=2 || EDOKUM.BUDZ_AKT:='T' ?};
ETYPY.cntx_pop();
{? EDOKUM.ZAM='' || EDOKUM.ZAM:='N' ?};
exec('Plugin','#object');
Plugin.run('EDOKUM_B_ADD');
1


\dspedob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Wyswietlanie dokumentu zrodlowego w skojarzonym programie
::  OLD: \dspedob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:={? _ || _a |? var_pres('dsp_wyd')>0 || EDOKUM || cur_tab(1,1) ?};
{? _tab.EDOKUM
|| exec('bl_view','#blob',_tab,'EDOKUM')
|| FUN.info('Brak dokumentu źródłowego.'@)
?}


\parses_edokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła ustala PARSES dla czynności na podstawie maski tabeli EDOKUM
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
_rok:='';
{? _mp.pathTodo()
|| {? (var_pres('EDOKUM',_out) & var_pres('EDOKUM',_out)=type_of(null()) &
       _out.EDOKUM<>null & EDOKUM.seek(_out.EDOKUM,ref_name(_out.EDOKUM),1)) |
      (var_pres('EDOKUM',_in) & var_pres('EDOKUM',_in)=type_of(null()) &
       _in.EDOKUM<>null & EDOKUM.seek(_in.EDOKUM,ref_name(_in.EDOKUM),1))
   || _rok:=EDOKUM.ROK_F().KOD
   ?}
|? var_pres('context',_mp)>0 & var_pres('ROK',_mp.context)>0
|| ROK_F.cntx_psh();
   ROK_F.prefix();
   {? ROK_F.seek(_mp.context.ROK)
   || _rok:=ROK_F.KOD
   ?};
   ROK_F.cntx_pop()
?};
{? _rok<>''
|| _result:=0;
   ROK_F.cntx_psh(); ROK_F.index('KODG'); ROK_F.prefix(_rok);
   {? ROK_F.first()
   || OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
      {? OKRO_F.first() & OKRO_F.next()
      || __PARSES.setVal('OkresRok',OKRO_F.ref());
         _result:=1
      ?};
      OKRO_F.cntx_pop()
   ?};
   ROK_F.cntx_pop()
?};
_result


\uprawnienia_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Uprawnienia do rejestracji dokumentu w obiegu
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
_mp:=params_get().mp;
_user:=params_get().user;
_user_r:=params_get().user_r;
_in:=params_get().in;
_out:=params_get().out;
_release:={? Plugin.runnable('OB_REG_PERM') &
             (var_pres('EDOKUM',_in)>0 & _in.EDOKUM | var_pres('EDOKUM',_out)>0 & _out.EDOKUM)
          || Plugin.run('OB_REG_PERM',params_get())
          || 0
          ?};
::_co:='';
::USERS.cntx_psh(); USERS.prefix();
::{? _user<>~~ & _user & USERS.seek(_user) || _co+='User 1: '+USERS.DANE ?};
::{? _user_r<>~~ & _user_r & USERS.seek(_user_r) || _co+=', User 2: '+USERS.DANE ?};
::USERS.cntx_pop();
EDOKUM.cntx_psh(); EDOKOS.cntx_psh();
{? var_pres('EDOKUM',_in)>0 & _in.EDOKUM & EDOKUM.seek(_in.EDOKUM,ref_name(_in.EDOKUM),1)
|| {? EDOKUM.USERS=null
   || EDOKOS.use('skid_y'+(EDOKUM.name()+2));
      no_us:=_user; _zwrot:=1
::Zmienne tworzone są w przypadku, gdy użyto zwonienie lub przydzielenie zadania w obiegach
   |? (~_release | var_pres('zw_act')<=0) & var_pres('prz_act')<=0
   || _zwrot:=(_user & EDOKUM.USERS=_user);
      {? ~_zwrot & _user_r<>~~ || _zwrot:=(EDOKUM.USERS=_user_r) ?}
   ?}
|? var_pres('EDOKUM',_out)>0 & _out.EDOKUM & EDOKUM.seek(_out.EDOKUM,ref_name(_out.EDOKUM),1)
|| {? EDOKUM.USERS=null
   || EDOKOS.use('skid_y'+(EDOKUM.name()+2));
      no_us:=_user; _zwrot:=1
::Zmienne tworzone są w przypadku, gdy użyto zwonienie lub przydzielenie zadania w obiegach
   |? (~_release | var_pres('zw_act')<=0) & var_pres('prz_act')<=0
   || _zwrot:=(_user & EDOKUM.USERS=_user);
      {? ~_zwrot & _user_r<>~~ || _zwrot:=(EDOKUM.USERS=_user_r) ?}
   ?}
?};
{? _zwrot || _zwrot:=params_exec('uprawnienia','obiegi',0) ?};
{? _zwrot || _zwrot:=exec('akt_rola_us','obiegi_akc',_user,_mp.b_prel) ?};
{? _zwrot & _user_r<>~~ || _zwrot:=exec('akt_rola_us','obiegi_akc',_user_r,_mp.b_prel) ?};
{? _zwrot
|| {? var_pres('EDOKUM',_in)>0 & _in.EDOKUM & EDOKUM.seek(_in.EDOKUM,ref_name(_in.EDOKUM),1)
   || {? _release & var_pres('zw_act')>0 & EDOKUM.USERS<>null
      || EDOKUM.USERS:=null(); EDOKUM.put()
      ?}
   |? var_pres('EDOKUM',_out)>0 & _out.EDOKUM & EDOKUM.seek(_out.EDOKUM,ref_name(_out.EDOKUM),1)
   || {? _release & var_pres('zw_act')>0 & EDOKUM.USERS<>null
      || EDOKUM.USERS:=null(); EDOKUM.put()
      ?}
   ?}
?};
{? _zwrot & var_pres('no_us')>0 & no_us
|| zakres:=1;
   _us_old:=OPERATOR.USER; OPERATOR.USER:=no_us;
   exec('rkprz1','obiegi',1);
   exec('dol_edokos','obiegi',_in);
   OPERATOR.USER:=_us_old
?};
EDOKUM.cntx_pop(); EDOKOS.cntx_pop();
VAR_DEL.delete('no_us');
_zwrot


\uprawnienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła na uprawnienia do danych dla czynności
::   WE: _a - 0/1 - czy sprawdzać wtyczkę OB_PRZ_PERM - formuła na uprawnienia do rejestracji
::             dokumentów, dla których zadanie zostało zwolnione
::   WY: 0 - użytkownik nie ma uprawnień do danych dla czynności
::       1 - użytkownik ma uprawnienia do danych czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_out:=params_get().out;
_user:=params_get().user;
_user_r:=params_get().user_r;
_mp:=params_get().mp;
_result:=0;
_a:={? var_pres('_a')>0 || _a || 1 ?};
_release:={? _a
          || {? Plugin.runnable('OB_PRZ_PERM') &
                (var_pres('EDOKUM',_in)>0 & _in.EDOKUM | var_pres('EDOKUM',_out)>0 & _out.EDOKUM)
             || Plugin.run('OB_PRZ_PERM',params_get())
             || 0
             ?}
          || 1
          ?};
_czyObg:=exec('b_prelGetDomain','obiegi2')='OBG';
_result:=1;
::_co:='';
::USERS.cntx_psh(); USERS.prefix();
::{? _user<>~~ & _user & USERS.seek(_user) || _co+='User 1: '+USERS.DANE ?};
::{? _user_r<>~~ & _user_r & USERS.seek(_user_r) || _co+=', User 2: '+USERS.DANE ?};
::USERS.cntx_pop();
::msg(_co);
{? ~_release & var_pres('zw_act')>0
|| EDOKUM.cntx_psh();
   {? var_pres('EDOKUM',_in)>0 & _in.EDOKUM & EDOKUM.seek(_in.EDOKUM,ref_name(_in.EDOKUM),1)
   || _result:=(_user & zw_act_usr=_user);
      {? ~_result & _user_r<>~~ || _result:=(zw_act_usr=_user_r) ?}
   |? var_pres('EDOKUM',_out)>0 & _out.EDOKUM & EDOKUM.seek(_out.EDOKUM,ref_name(_out.EDOKUM),1)
   || _result:=(_user & zw_act_usr=_user);
      {? ~_result & _user_r<>~~ || _result:=(zw_act_usr=_user_r) ?}
   ?};
   EDOKUM.cntx_pop()
?};
{? _result
|| USERS.cntx_psh(); USERS.prefix();
   {? USERS.seek(_user)
   || {? _czyObg
      || {? var_pres('EDOKUM',_in) & var_pres('EDOKUM',_in)=type_of(null()) & _in.EDOKUM<>null()
         || EDOKUM.cntx_psh(); EDOKUM.use(form(($_in.EDOKUM)-8));
            {? EDOKUM.seek(_in.EDOKUM,form(($_in.EDOKUM)-8),1)
            || _result:=exec('usr_fjks','b_perm',EDOKUM.ODD().OD,USERS.ref())


            ?};
            EDOKUM.cntx_pop()
         ||
:: czy w ogóle user ma uprawnienia do jakiejkolwiek jednostki księgowej
            _result:=exec('usr_fjks_any','b_perm',USERS.ref())

         ?}
      || {? var_pres('EDOKUM',_in) & var_pres('EDOKUM',_in)=type_of(null()) & _in.EDOKUM<>null()
         || EDOKUM.cntx_psh(); EDOKUM.use(form(($_in.EDOKUM)-8));
            {? EDOKUM.seek(_in.EDOKUM,form(($_in.EDOKUM)-8),1) || _result:=exec('upr_p','obiegi_akc',_in,,,_mp) ?};
            EDOKUM.cntx_pop()
         |? var_pres('EDOKUM',_out) & var_pres('EDOKUM',_out)=type_of(null()) & _out.EDOKUM<>null()
         || EDOKUM.cntx_psh(); EDOKUM.use(form(($_out.EDOKUM)-8));
            {? EDOKUM.seek(_out.EDOKUM,form(($_out.EDOKUM)-8),1) || _result:=exec('upr_p','obiegi_akc',_out,,,_mp) ?};
            EDOKUM.cntx_pop()
         ?}
      ?}
   ?};
   USERS.cntx_pop()
?};
{? _result || _result:=exec('akt_rola_us','obiegi_akc',_user,_mp.b_prel) ?};
{? _result || _result:=exec('wycofaj_upr','obiegi2',_user,_user_r,_in) ?};
_result


\dobprzks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Wprowadzenie opisu o przekazaniu dzialowi ksiegowosci
::  OLD: \dobprzks/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_size:=EDOKUM.sel_size();
{? _size | EDOKUM.f_get()
|| {? EDOKUM.r_lock(1,1,1)
   || {? ~_size
      || undefine();
         define('OPIS_PRZ',{? EDOKUM.OPIS_PRZ<>null || EDOKUM.OPIS_PRZ().OPIS || '' ?},'Opis przekazania'@,'Opis przekazania'@,100,100);
         _ok:=def_btn('text=%1'['OK'@],'key:F2');
         _anuluj:=def_btn('text=%1'['Anuluj'@],'key:Esc');
         def_bopt(_ok,'tooltip='+exec('help_red_ok','#window','P'));
         def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
         _dalej:=def_edit(,'Przekazanie faktury działowi księgowości'@)
      || _dalej:=1
      ?};
      {? _dalej
      || EDOKUM.PRZEKAZ:='T';
         {? DEFINE.OPIS_PRZ<>''
         || EWYSOPIS.index('UNIK'); EWYSOPIS.prefix(DEFINE.OPIS_PRZ,DEFINE.OPIS_PRZ);
            _dalej:={? ~EWYSOPIS.first()
                    || EWYSOPIS.OPIS:=DEFINE.OPIS_PRZ; EWYSOPIS.add()
                    || 1
                    ?};
            {? _dalej || EDOKUM.OPIS_PRZ:=EWYSOPIS.ref() ?}
         || EDOKUM.OPIS_PRZ:=null
         ?};
         {? _dalej & EDOKUM.put() & var_pres('ile_przek')>0 || ile_przek+=1 ?}
      ?};
      EDOKUM.r_unlock()
   |? ~_size
   || exec('err_kom','obiegi')
   ?}
|? ~_size
|| exec('errnodok','obiegi')
?};
{? ~_size || undefine; EDOKUM.f_rfresh() ?}


\bedobprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Wprowadzenie opisu o przekazaniu dzialowi ksiegowosci - grupa przed
::  OLD: \bedobprz/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Zaznaczyć w wybranych fakturach przekazanie działowi księgowości?'@)
|| undefine();
   define('OPIS_PRZ','','','Opis przekazania'@,100,100);
   _ok:=def_btn('text=%1'['OK'@],'key:F2');
   _anuluj:=def_btn('text=%1'['Anuluj'@],'key:Esc');
   def_bopt(_ok,'tooltip='+exec('help_red_ok','#window','P'));
   def_bopt(_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
   {? def_edit(,'Przekazanie faktur działowi księgowości'@)
   || ile_zazn:=EDOKUM.sel_size(); ile_przek:=0; 1
   || 0
   ?}
|| 0
?}


\aedobprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Wprowadzenie opisu o przekazaniu dzialowi ksiegowosci - grupa po
::  OLD: \aedobprz/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_ile:=(+$ile_zazn);
FUN.info(form(form('Pozycji zaznaczonych: ',22)+$ile_zazn,22+_ile)+'\n'+
         form(form('Pozycji przekazanych: ',22)+$ile_przek,22+_ile));
VAR_DEL.delete('ile_zazn','ile_przek'); undefine()


\wysw_opis_typu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Wyswietla opis typu dokumentu
::  OLD: \wysw_opis_typu/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.TYP();
ETYPY.win_edit('OPIS');
_txt:={? OBIEGI.TYPOBIEG=1
      || 'Opis typu faktury'@
      |? OBIEGI.TYPOBIEG=2
      || 'Opis typu wniosku'@
      |? OBIEGI.TYPOBIEG=3
      || 'Opis typu delegacji'@
      || ''
      ?};
ETYPY.hdr_edit(_txt);
ETYPY.display()


\obg_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zmiana parametrów pracy
::----------------------------------------------------------------------------------------------------------------------
_rok:=SSTALE.AR;
_okr:=SSTALE.AO;
_odd:=OPERATOR.DEPT;
_wal:=SSTALE.WAL;
_grp:=__PARSES.getVal('GrupaObiegu').KOD;
{? __PARSES.editDom('OBG','OBE','FKS','CTR')
|| {? _rok<>SSTALE.AR | _odd<>OPERATOR.DEPT | _okr<>SSTALE.AO | _wal<>SSTALE.WAL | _grp<>__PARSES.getVal('GrupaObiegu').KOD
   || AreaTitle.setTitle();
      exec('po_edokum','obiegi',zakres);
      {? typobi=1 || exec('zapot_fill','obiegi_zap') ?}
   ?}
?}


\zak_rej_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zakończenie rejestracji dokumentu w obiegu
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.sel_size() || return(0) ?};
_pr:=0;
EVAT.cntx_psh();
EVAT.index('EDOKUM');
EVAT.prefix(EDOKUM.ref);
{? EVAT.first()
|| {! |? {? EVAT.PR=null || _pr:=1; 0 || EVAT.next() ?} !}
?};
EVAT.cntx_pop();
{? typobi=1
|| {? _pr | EDOKUM.SYM='' | EDOKUM.DOP=date(0,0,0) | EDOKUM.DW=date(0,0,0) | EDOKUM.DO=date(0,0,0)
   || FUN.info('Faktura nie posiada uzupełnionych danych. Operacja niemożliwa.'@);
      return(0)
   ?}
?};
EDOKOS.cntx_psh(); EDOKOS.prefix();
_refb:=EDOKUM.ref();
_refn:=null;
{? EDOKUM.f_active()
|| EDOKUM.f_rfresh();
   {? EDOKUM.f_seek(_refb)
   || {? EDOKUM.f_next()
      || _refn:=EDOKUM.ref()
      || {? EDOKUM.f_prev()
         || _refn:=EDOKUM.ref()
         ?}
      ?}
   ?}
?};
{? {? EDOKUM.f_active() || {? EDOKUM.f_seek(_refb) || EDOKUM.f_get() || EDOKUM.seek(_refb) ?} || EDOKUM.get() ?}
|| {? EDOKUM.r_lock(1,1,1)
   || _zwrot:=1;
      EDOKOS.use('skid_y'+(EDOKUM.name()+2));
      exec('rkprz1','obiegi',1);
      OBIEGI.EDOKOS();
:: sprawdzanie statusu
      {? exec('spr_edokrzap','obiegi',1) || _zwrot:=0 ?};
      {? _zwrot & EDOKUM.ZAM='T'
      || {? typobi=1
         || FUN.info('Faktura zamknięta.'@)
         |? typobi=2
         || FUN.info('Wniosek zamknięty.'@)
         |? typobi=3
         || FUN.info('Delegacja zamknięta.'@)
         ?};
         _zwrot:=0
      ?};
      {? _zwrot
      || _sprall:=1;
         {? var_pres('wla_dok1')>0 & wla_dok1=1 || _sprall:=0 ?};
         _stat:=exec('spr_stat','obiegi',_sprall);
         {? _stat='T'
         || {? typobi=1
            || FUN.info('Rejestracja faktury została zakończona.'@)
            |? typobi=2
            || FUN.info('Rejestracja wniosku została zakończona.'@)
            |? typobi=3
            || FUN.info('Rejestracja planu delegacji/delegacji została zakończona.'@)
            ?}; _zwrot:=0
         |? _stat=''
         || FUN.info('Użytkownik nie jest przypisany do bieżącej czynności.'@); _zwrot:=0
         ?}
      ?};
      {? _zwrot
      ||
:: dolacza użytkownika jesli ten nie byl wczesniej na liscie
         EDOKOS.cntx_psh(); EDOKOS.index('EDOKUM'); EDOKOS.prefix(EDOKUM.ref(),OBIEGI.B_PREL,OPERATOR.USER);
         jest_op:=EDOKOS.first();
         EDOKOS.cntx_pop();
         exec('dol_edokos','obiegi');
         {? ~jest_op & var_pres('BUFEDS')>0 || BUFEDS.restore() ?};
:: obiekt do sprawdzania i sprawdzenie etapu
         exec('spr_etap','obiegi_akc',1);
:: sprawdzanie wprowadzonych pozycji faktury na dokumencie VAT
         {? typobi=1 || exec('spr_pozf','obiegi2') ?};
:: sprawdzanie wprowadzonych pozycji VAT na dokumencie VAT
         brutdob:=netdob:=0;
         {? zakres=1 & typobi=1
         || {? ~EDOKUM.TYP().TYPVATPR
            || exec('spr_pvat','obiegi2',0,0)
            || brutdob:=EDOKUM.WART; netdob:=EDOKUM.NETTO
            ?}
         ?};
:: sprawdzanie projektów
         exec('spr_proj','obiegi_proj');
:: sprawdzanie podzialow
         exec('spr_podz','obiegi2',1);
:: sprawdzenie informacji dodatkowych
         exec('spr_inn_dan','obiegi2');
:: Sprawdzanie danych delegacyjnych
         {? typobi=3 || exec('spr_dan_del','obiegi') ?};
         __OBISPR.prefix(1);
         {? __OBISPR.first() || _zwrot:=0 ?};
         _ok:=exec('okn_obispr','obiegi_akc');
         {? _zwrot || _zwrot:=_ok ?};
         {? _zwrot
         || __OBISPR.prefix(3);
            {? __OBISPR.first() || _zwrot:=FUN.ask('Czy zakończyć dokument pomimo uwag?'@) ?}
         ?};
         exec('tab_con_del','obe_budz');
         VAR_DEL.delete('__OBISPR')
      ?};
      {? _zwrot
      || {? jest_op=0
         || EDOKOS.add();
            OBIEGI.EDOKOS:=EDOKOS.ref();
            OBIEGI.B_PREL:=EDOKOS.B_PREL;
            OBIEGI.B_PRELS:=EDOKOS.B_PRELS
         ?};
         EDOKUM.cntx_psh(); EDOKUM.prefix(); _reftagger:=null;
         do();
:: zamykanie zapisow w tabeli EDOKOS
         exec('generuj_zak_dok','obiegi',EDOKOS.ref());
:: uzupełnianie brakujacych pól
         {? ~EDOKUM.DOSTAWCA || EDOKUM.DOSTAWCA:=OPERATOR.USER().OSOBA ?};
         {? ~EDOKUM.USERS || EDOKUM.USERS:=OPERATOR.USER ?};
         {? EDOKUM.put()
         || {? var_pres('zak_rej_ed')>0 || zak_rej_ed:=1 ?}
         || undo()
         ?};
:: Aktualizacja kontaktu powiązanego z dokumentem
         {? EDOKUM.DOKUM<>'' || exec('dokum_put','obiegi2') ?};
:: dodawanie zapisu w tabeli logowan
         _log:={? typobi=1
               || 'Faktura w obiegu - zakończenie rejestracji'
               |? typobi=2
               || 'Wniosek - zakończenie rejestracji'
               |? typobi=3
               || 'Delegacja - zakończenie rejestracji'
               || ''
               ?};
         EDOKOS.prefix();
         exec('add_elog','obiegi_akc',_log,1);
         end();
         EDOKUM.cntx_pop();
         {? EDOKUM.f_active()
         || EDOKUM.f_rfresh();
            {? ~EDOKUM.f_seek(_refb)
            || {? _refn<>null || EDOKUM.f_seek(_refn) ?}
            ?}
         ?}
      ?};
      unlock_r();
      VAR_DEL.delete('brutdob','netdob')
   || exec('err_kom','obiegi')
   ?}
|| exec('errnodok','obiegi')
?};
EDOKOS.cntx_pop();
VAR_DEL.delete('jest_op','BUFEDS')


\generuj_zak_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zamykanie zapisów na bieżącym poziomie przy przekazywaniu dokumentu (wprowadzanie)
::----------------------------------------------------------------------------------------------------------------------
EDOKOS.cntx_psh(); EDOKOS.index('SZUK3'); EDOKOS.prefix(EDOKUM.ref(),'W');
{? EDOKOS.first()
|| {! |?
      {? EDOKOS.ref()=_a
      || EDOKOS.STATUS:='T';
         EDOKOS.DATA:=date();
         EDOKOS.TIME:=time();
         {? EDOKOS.put() & exec('szuk_edokpar','obiegi') & EDOKPAR.FORM_PRZ
         || ($EDOKPAR.FORM_PRZ().TRESC)()
         ?}
      || EDOKOS.STATUS:='X';
         EDOKOS.DATA:=date(0,0,0);
         EDOKOS.TIME:=time(0,0,0);
         EDOKOS.put()
      ?};
      EDOKOS.next()
   !}
?};
EDOKOS.cntx_pop()


\szuk_edokpar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Szuka EDOKPAR dla bieżącego EDOKOS
::----------------------------------------------------------------------------------------------------------------------
EDOKPAR.use('skidh_'+(EDOKOS.name()+2));
_zwrot:=0;
{? EDOKOS.EDOKUM & EDOKOS.B_PREL<>''
|| EDOKPAR.index('UNIK'); EDOKPAR.prefix(EDOKOS.EDOKUM,EDOKOS.B_PREL);
   _zwrot:=EDOKPAR.first()
?};
_zwrot


\add_kom_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Dodanie rekordu do tabelki z komunikatami
::   WE: _a - tresc komunikatu
::  OLD: \add_kom_del/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
KOM_DEL.index(komdind1); KOM_DEL.prefix();
_lp:={? KOM_DEL.last() || KOM_DEL.LP+1 || 1 ?};
KOM_DEL.LP:=_lp;
KOM_DEL.OPIS:=_a;
KOM_DEL.ID:=id_del;
KOM_DEL.add()


\spr_dan_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Sprawdzanie danych delegacyjnych
::  OLD: \spr_dan_del/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.cntx_psh(); EDOKOS.cntx_psh(); OBIEGI.EDOKOS();
_zwrot:=1;
:: przejazdy
{? EDOKUM.TYP().DEL_POZ & exec('szuk_edokpar','obiegi') & EDOKPAR.ED_PRZEJ='W'
|| EDOKUMP.cntx_psh(); EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref());
   {? ~EDOKUMP.first()
   || _zwrot:=0;
      exec('add_kom','obiegi',1,1,'Nie wprowadzono danych o przejazdach.'@)
   ?};
   EDOKUMP.cntx_pop()
?};
:: diety
{? exec('szuk_edokpar','obiegi') & EDOKPAR.ED_DIET='W'
|| EDOKUMD.cntx_psh(); EDOKUMD.index('DELEG'); EDOKUMD.prefix(EDOKUM.ref());
   {? ~EDOKUMD.first()
   || _zwrot:=0;
      exec('add_kom','obiegi',1,1,'Nie wprowadzono danych o dietach.'@)
   ?};
   EDOKUMD.cntx_pop()
?};
:: wydatki
{? exec('szuk_edokpar','obiegi') & EDOKPAR.ED_WYD='W'
|| EDOK_ZAL.cntx_psh(); EDOK_ZAL.index('WAL'); EDOK_ZAL.prefix(EDOKUM.ref(),'W');
   {? ~EDOK_ZAL.first()
   || {? _vv=2
      || _zwrot:=0;
         exec('add_kom','obiegi',1,1,'Nie wprowadzono danych o wydatkach.'@)
      ?}
   || {!
      |? {? EDOK_ZAL.EDOKUMF & ~EDOK_ZAL.EDOKUMF().TYP().TYPVATPR
         || EVAT.cntx_psh(); EVAT.index('EDOKUM'); EVAT.prefix(EDOK_ZAL.EDOKUMF);
            {? ~EVAT.first()
            || _zwrot:=0;
               exec('add_kom','obiegi',1,1,
                    'Nie wprowadzono pozycji VAT wydatku rozszerzonego %1 dla faktury %2'@[EDOK_ZAL.ETYPWYD().NAZWA,EDOK_ZAL.EDOKUMF().SYM]
               )
            ?};
            EVAT.cntx_pop()
         ?};
         EDOK_ZAL.next
      !}
   ?};
   EDOK_ZAL.cntx_pop()
?};
:: zaliczki
{? exec('szuk_edokpar','obiegi') & EDOKPAR.ED_ZAL='W'
|| EDOK_ZAL.cntx_psh(); EDOK_ZAL.index('WAL'); EDOK_ZAL.prefix(EDOKUM.ref(),'Z');
   {? ~EDOK_ZAL.first()
   || _zwrot:=0;
      exec('add_kom','obiegi',1,1,'Nie wprowadzono danych o zaliczkach.'@)
   ?};
   EDOK_ZAL.cntx_pop()
?};
EDOKOS.cntx_pop(); EDOKUM.cntx_pop();
_zwrot


\dobalert
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2009]
:: OPIS: Wlaczanie\wylaczanie dokumentow z alertowania
::   WE: _a - 1 - zaniechanie alertowania
::            2 - przywrócenie alertowania
::  OLD: \dobalert/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_co:={? typobi=1 || 'fakturę' || 'wniosek' ?};
{? _a=1 & EDOKUM.ALERTY='T' &
   {? typobi=1 || FUN.ask('Zaniechać alertowanie faktury?'@) || FUN.ask('Zaniechać alertowanie wniosku?'@) ?}
|| EDOKUM.ALERTY:='N'; EDOKUM.put()
|? _a=2 & (-EDOKUM.ALERTY='n' | EDOKUM.ALERTY='t') &
   {? typobi=1 || FUN.ask('Przywrócić alertowanie faktury?'@) || FUN.ask('Przywrócić alertowanie wniosku?'@) ?}
|| EDOKUM.ALERTY:='T'; EDOKUM.put()
?}


\bi_todo_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.10]
:: OPIS: Triggery dla tabeli BI_TODO
::   WE: _a - 2 - del przed
::            3 - add po
::            4 - put po
::       _b - symbol czynności
::----------------------------------------------------------------------------------------------------------------------
{? BI_TODO.USERS
|| B_KEYREF.cntx_psh(); B_KEYREF.index('BI_PREL'); B_KEYREF.prefix(ref_name(BI_TODO.BI_PREL),BI_TODO.BI_PREL);
   {? B_KEYREF.first()
   || _znal:=0;
      {! |?
         {? B_KEYREF.KEY_REF<>'' & (6+ref_name(B_KEYREF.KEY_REF))='skid_v'
         || _znal:=1;
            EDOKUM.cntx_psh();
            {? EDOKUM.seek(B_KEYREF.KEY_REF,ref_name(B_KEYREF.KEY_REF),1)
            || EDOKOS.cntx_psh(); EDOKOS.use('skid_y'+(EDOKUM.name()+2));
               {? _a=4 & bfld('USERS')<>BI_TODO.USERS
               || EDOKOS.index('EDOKUM'); EDOKOS.prefix(EDOKUM.ref(),BI_TODO.B_PREL().IDADD,bfld('USERS'));
                  {? EDOKOS.first() || {! |? EDOKOS.del() !} ?}
               ?};
               _put:=0;
               {? (_a=3 | _a=4)
               || {? (_b='OBG_FZO_DARK' | _b='OBE_FAW_DARP' | _b='OBE_FDL_DBRP') &
                     (EDOKUM.USERS=null() | var_pres('prz_act')>0) & BI_TODO.BI_STAT=exec('TODO_MOJE','#bi_stat')
                  || EDOKUM.USERS:=BI_TODO.USERS; _put:=1
                  ?};
                  {? EDOKUM.WYCOF_DO<>'' || EDOKUM.WYCOF_DO:=''; _put:=1 ?}
               ?};
               {? _put || EDOKUM.put() ?};
               {? _a=3 |
                  (_a=4 & (bfld('USERS')<>BI_TODO.USERS))
               || {? _a=3
                  || _bi_prel:=$BI_TODO.BI_PREL;
                     BI_PREL.cntx_psh(); B_PREL.cntx_psh();
                     _b_ele:=BI_TODO.BI_PREL().B_PREL().B_ELE;
                     B_PREL.cntx_pop(); BI_PREL.cntx_pop();
                     _kind_in:=exec('kind_in','#b_port');
                     _in:=exec('getPorts','#b_port',_b_ele,_kind_in,BI_TODO.B_PREL);
                     exec('fillPorts','#bi_port',BI_TODO.BI_PREL,_kind_in,_in);
                     {? var_pres('STATUS',_in)>0 & -_in.STATUS='o'
                     || wym_stat:=2
                     || wym_stat:=1
                     ?}
                  ?};
                  OBIEGI.B_PREL:=BI_TODO.B_PREL().IDADD;
                  OBIEGI.B_PRELS:=B_PREL.SYMBOL;
                  {? _b='OBG_FZO_CPRZ' | _b='OBE_FAW_CPRZ' | _b='OBE_FDL_CPRZ'
                  || params_exec('dol_edokos2','obiegi2',BI_TODO.USERS)
                  |? _b='FKS_DKS_DFZO' | _b='FKS_DKS_DFWO' | _b='FKS_DKS_DFDM'
                  || params_exec('dol_edokos3','obiegi',BI_TODO.USERS)
                  |? _b='OBG_FZO_EAKC' | _b='OBE_FAW_EAKP' | _b='OBE_FDL_EBKP'
                  || params_exec('dol_edokos1','obiegi2',BI_TODO.USERS,_a)
                  |? _b='OBG_FZO_DARK' | _b='OBE_FAW_DARP' | _b='OBE_FDL_DBRP'
                  || params_exec('dol_edokos','obiegi2',BI_TODO.USERS,_a)
                  ?};
                  {? OBIEGI.EDOKOS || BI_TODO.SOURCE:=OBIEGI.EDOKOS().IDADD ?};
                  VAR_DEL.delete('wym_stat')
               |? _a=2
               || BI_TODO.cntx_psh(); BI_TODO.index('UNIQUE'); BI_TODO.prefix(BI_TODO.BI_PREL,BI_TODO.USERS);
                  {? BI_TODO.size()=1
                  || EDOKOS.index('EDOKUM'); EDOKOS.prefix(EDOKUM.ref(),BI_TODO.B_PREL().IDADD,BI_TODO.USERS);
                     {? EDOKOS.first()
                     || {!
                        |? {? var_pres('TmpToDo') & EDOKOS.WID='S'
                           || exec('edokos2tmp','portal_wnioski')
                           ?};
                           EDOKOS.del()
                        !}
                     ?}
                  ?};
                  BI_TODO.cntx_pop()
               ?};
               EDOKOS.cntx_pop()
            ?};
            EDOKUM.cntx_pop()
         ?};
         ~_znal & B_KEYREF.next()
      !}
   ?};
   B_KEYREF.cntx_pop()
?};
1


\ustaw_bprel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.10]
:: OPIS: Ustawianie zmiennych
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
OBIEGI.B_PREL:=OBIEGI.B_PRELS:='';
B_PREL.cntx_psh(); B_PREL.prefix();
{? B_PREL.seek(_mp.b_prel)
|| OBIEGI.B_PREL:=B_PREL.IDADD;
   OBIEGI.B_PRELS:=B_PREL.SYMBOL
?};
B_PREL.cntx_pop()


\maski_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.10]
:: OPIS: Ustawianie masek plików w zależności od maski EDOKUMW
::   WE: _a - 0 - na podstawie EDOKUMW
::            1 - na podstawie EDOKUM
::            2 - na podstawie stałych systemu
::----------------------------------------------------------------------------------------------------------------------
_mas:={? _a=0 || EDOKUMW.name()+2
      |? _a=1 || {? app_info('web_sesid')<>'' & EDOKUM.name()+2='' || EDOKUM.web_cntx_load(0) ?}; EDOKUM.name()+2
      || {? SSTALE.AR || ($(SSTALE.AR().POCZ_ROK~1)+2) || '__' ?}
      ?};
{? _mas<>''
|| {? _a=0 || EDOKUM.use('skid_v'+_mas) |? _a=1 || EDOKUMW.use('skidv1'+_mas) || EDOKUMW.use('skidv1'+_mas); EDOKUM.use('skid_v'+_mas) ?};
   EDOK_ZAL.use('edokzl'+_mas);
   EDOKGR.use('skid_c'+_mas);
   EDOKLOG.use('skid_d'+_mas);
   EDOKOS.use('skid_y'+_mas);
   EDOKPAR.use('skidh_'+_mas);
   EDOKUSER.use('skidk_'+_mas);
   EDOKRZAP.use('skid_q'+_mas);
   EDOKUMD.use('bdiety'+_mas);
   EDOKUMP.use('skidpu'+_mas);
   EDOKUMZ.use('skid_n'+_mas);
   EPODZ.use('skid_j'+_mas);
   EDOKUMPR.use('skid_i'+_mas);
   EVAT.use('skid_a'+_mas);
   EDOK_ATK.use('edoknt'+_mas);
   EDOK_ATR.use('edokat'+_mas)
?}


\obg_web_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Parametry obiegów - WWW
::   WE: _a - 'W' - wprowadzanie
::            'P' - przekazanie
::            'A' - akceptacja
::       _b - 'F' - faktury
::            'W' - wnioski
::            'D' - delegacje
::----------------------------------------------------------------------------------------------------------------------
web_params_set(web_params_get());
exec('www_parses','zws','after_parses','obiegi',_a,_b,1)


\after_parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła wykonywana po ustawieniu parametrów systemu
::   WE: _a - 'W' - wprowadzanie
::            'P' - przekazanie
::            'A' - akceptacja
::       _b - 'F' - faktury
::            'W' - wnioski
::            'D' - delegacje
::----------------------------------------------------------------------------------------------------------------------
OPERATOR.DEPT:={? PARSES.ODD_ZAK='W' || null || PARSES.ODD ?};
USRCONST.STANKAS:=exec('FindInSet','#table','KUSERUPR','KU_ST',PARSES.STANKAS,OPERATOR.USER);
exec('ustaw_zmienne','parses',__PARSES,PARSES.OKRO_R<>'W');
exec('maski_w','obiegi',2);
exec('AreaTitle','#object');
{? _b='D'
|| AreaTitle.setArea('OBE_FDL')
|? _b='F'
|| AreaTitle.setArea('OBG_FZP')
|| AreaTitle.setArea('OBE_FAW')
?};
_jedn:={? OPERATOR.DEPT
       || ', jednostka księgowa: '@+OPERATOR.DEPT().OD
       || ', wszystkie jednostki księgowe'@
       ?};
web_title('%1, %2: %3'[exec('nazwa','#system'),'Firma '@+REF.FIRMA().SYMBOL,AreaTitle.getTitle()+' rok: '@+SSTALE.AR().NAZ+_jedn],'all');
exec('dob_refresh','obiegi',_a,_b);
1


\fak_ob_odrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Odrzucanie faktur w obiegu
::   WE: _a - równe 1 - odpalanie z TODO na WEBTERM równe 0 - odpalenie z pulpitu na WEBTERM
::       _b - akronim zakładki AF - Akceptacja PF - Przekazanie
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| {? _a=1
   || exec('todo_run','obiegi',1); todo_run:=1;
      _dalej:=exec('env_edokum','obiegi',_b,0)
   |? _a=0
   || exec('todo_run','obiegi',0);
      _dalej:=exec('env_edokum','obiegi',_b,1);
      EDOKUM.use('skid_v'+(EDOKUMW.name()+2));
      EDOKUM.prefix(); EDOKUMW.EDOKUM()
   ?};
   VAR_DEL.delete('todo_run');
   {? _dalej
   || {? zakres=2
      || _params:=exec('mp_run_a','#b__box');
         _params.ACT_UID:='OBG_FZO_EAKC';
         _params.AKCJA:='chkWT';
         _params.UIDREF:=EDOKUM.uidref();
         _params.WT_SKIP:=1;
         _params.CONTEXT:=obj_new('EDOKUM','SPR_WT');
         _params.CONTEXT.EDOKUM:=EDOKUM.ref();
         _params.CONTEXT.SPR_WT:=0;
         exec('mp_run','#b__box',_params);
         {? _params.CONTEXT.SPR_WT
         || EDOKOS.use('skid_y'+(EDOKUM.name()+2));
            BPMN.END:=1;
            exec('rkprz1','obiegi',2); OBIEGI.EDOKOS();
            params_exec('odrzuc','obiegi_akc')
         ?}
      |? zakres=5
      || _params:=exec('mp_run_a','#b__box');
         _params.ACT_UID:='OBG_FZO_CPRZ';
         _params.AKCJA:='chkWT';
         _params.UIDREF:=EDOKUM.uidref();
         _params.WT_SKIP:=1;
         _params.CONTEXT:=obj_new('EDOKUM','SPR_WT');
         _params.CONTEXT.EDOKUM:=EDOKUM.ref();
         _params.CONTEXT.SPR_WT:=0;
         exec('mp_run','#b__box',_params);
         {? _params.CONTEXT.SPR_WT
         || EDOKOS.use('skid_y'+(EDOKUM.name()+2));
            BPMN.END:=1;
            exec('rkprz1','obiegi',5); OBIEGI.EDOKOS();
            params_exec('odrzuc','obiegi_akc')
         ?}
      ?}
   ?}
|| {? zakres=5
   || _params:=exec('mp_run_a','#b__box');
      _params.ACT_UID:='OBG_FZO_CPRZ';
      _params.AKCJA:='Odrzuć';
      _params.UIDREF:=EDOKUM.uidref();
      _params.WT_SKIP:=1;
      _params.CONTEXT:=obj_new('EDOKUM');
      _params.CONTEXT.EDOKUM:=EDOKUM.ref();
      exec('mp_run','#b__box',_params)
   |? zakres=2
   || _params:=exec('mp_run_a','#b__box');
      _params.ACT_UID:='OBG_FZO_EAKC';
      _params.AKCJA:='Odrzuć';
      _params.UIDREF:=EDOKUM.uidref();
      _params.WT_SKIP:=1;
      _params.CONTEXT:=obj_new('EDOKUM');
      _params.CONTEXT.EDOKUM:=EDOKUM.ref();
      exec('mp_run','#b__box',_params)
   |? zakres=3
   || _params:=exec('mp_run_a','#b__box');
      _params.ACT_UID:='FKS_DKS_DFZO';
      _params.AKCJA:='Odrzuć';
      _params.UIDREF:=EDOKUM.uidref();
      _params.WT_SKIP:=1;
      _params.CONTEXT:=obj_new('EDOKUM');
      _params.CONTEXT.EDOKUM:=EDOKUM.ref();
      exec('mp_run','#b__box',_params)
   || FUN.info('Operacja odrzucania dotyczy wyłącznie akceptacji, przekazania i dekretacji.'@)
   ?}
?}


\wn_ob_odrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Odrzucanie wniosków w obiegu
::   WE: _a - zadeklarowane i równe 1 - odpalanie z TODO na WEBTERM
::       _b - akronim zakładki AW - Akceptacja PW - Przekazanie
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| {? _a=1
   || exec('todo_run','obiegi',1); todo_run:=1;
      _dalej:=exec('env_edokum','obiegi',_b,0)
   |? _a=0
   || exec('todo_run','obiegi',0);
      _dalej:=exec('env_edokum','obiegi',_b,1);
      EDOKUM.use('skid_v'+(EDOKUMW.name()+2));
      EDOKUM.prefix(); EDOKUMW.EDOKUM()
   ?};
   VAR_DEL.delete('todo_run');
   {? _dalej
   || {? zakres=2
      || _params:=exec('mp_run_a','#b__box');
         _params.ACT_UID:='OBE_FAW_EAKP';
         _params.AKCJA:='chkWT';
         _params.UIDREF:=EDOKUM.uidref();
         _params.WT_SKIP:=1;
         _params.CONTEXT:=obj_new('EDOKUM','SPR_WT');
         _params.CONTEXT.EDOKUM:=EDOKUM.ref();
         _params.CONTEXT.SPR_WT:=0;
         exec('mp_run','#b__box',_params);
         {? _params.CONTEXT.SPR_WT
         || EDOKOS.use('skid_y'+(EDOKUM.name()+2));
            BPMN.END:=1;
            exec('rkprz1','obiegi',2); OBIEGI.EDOKOS();
            params_exec('odrzuc','obiegi_akc')
         ?}
      |? zakres=5
      || _params:=exec('mp_run_a','#b__box');
         _params.ACT_UID:='OBE_FAW_CPRZ';
         _params.AKCJA:='chkWT';
         _params.UIDREF:=EDOKUM.uidref();
         _params.WT_SKIP:=1;
         _params.CONTEXT:=obj_new('EDOKUM','SPR_WT');
         _params.CONTEXT.EDOKUM:=EDOKUM.ref();
         _params.CONTEXT.SPR_WT:=0;
         exec('mp_run','#b__box',_params);
         {? _params.CONTEXT.SPR_WT
         || EDOKOS.use('skid_y'+(EDOKUM.name()+2));
            BPMN.END:=1;
            exec('rkprz1','obiegi',5); OBIEGI.EDOKOS();
            params_exec('odrzuc','obiegi_akc',_a)
         ?}
      ?}
   ?}
?}


\del_ob_odrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Odrzucanie delegacji w obiegu
::   WE: _a - zadeklarowane i równe 1 - odpalanie z TODO na WEBTERM
::       _b - akronim zakładki AD - Akceptacja PD - Przekazanie
::  OLD: \del_ob_odrz/obiegi.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| {? _a=1
   || exec('todo_run','obiegi',1); todo_run:=1;
      _dalej:=exec('env_edokum','obiegi',_b,0)
   |? _a=0
   || exec('todo_run','obiegi',0);
      _dalej:=exec('env_edokum','obiegi',_b,1);
      EDOKUM.use('skid_v'+(EDOKUMW.name()+2));
      EDOKUM.prefix(); EDOKUMW.EDOKUM()
   ?};
   VAR_DEL.delete('todo_run');
   {? _dalej
   || {? zakres=2
      || _params:=exec('mp_run_a','#b__box');
         _params.ACT_UID:='OBE_FDL_EBKP';
         _params.AKCJA:='chkWT';
         _params.UIDREF:=EDOKUM.uidref();
         _params.WT_SKIP:=1;
         _params.CONTEXT:=obj_new('EDOKUM','SPR_WT');
         _params.CONTEXT.EDOKUM:=EDOKUM.ref();
         _params.CONTEXT.SPR_WT:=0;
         exec('mp_run','#b__box',_params);
         {? _params.CONTEXT.SPR_WT
         || EDOKOS.use('skid_y'+(EDOKUM.name()+2));
            BPMN.END:=1;
            exec('rkprz1','obiegi',2); OBIEGI.EDOKOS();
            params_exec('odrzuc','obiegi_akc')
         ?}
      |? zakres=5
      || _params:=exec('mp_run_a','#b__box');
         _params.ACT_UID:='OBE_FDL_CPRZ';
         _params.AKCJA:='chkWT';
         _params.UIDREF:=EDOKUM.uidref();
         _params.WT_SKIP:=1;
         _params.CONTEXT:=obj_new('EDOKUM','SPR_WT');
         _params.CONTEXT.EDOKUM:=EDOKUM.ref();
         _params.CONTEXT.SPR_WT:=0;
         exec('mp_run','#b__box',_params);
         {? _params.CONTEXT.SPR_WT
         || EDOKOS.use('skid_y'+(EDOKUM.name()+2));
            BPMN.END:=1;
            exec('rkprz1','obiegi',5); OBIEGI.EDOKOS();
            params_exec('odrzuc','obiegi_akc')
         ?}
      ?}
   ?}
?}


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Kasowanie danych w tabelach tymczasowych
::   WE: _a - 1 - start TOMCATA
::            2 - zakończenie sesji webterma
::----------------------------------------------------------------------------------------------------------------------
_tcid:=app_info('web_tcid');
_webses:=app_info('web_sesid');
TAB_WT.cntx_psh(); TAB_WT.index('INDEX02');
{? _a=1
|| TAB_WT.prefix(_tcid)
|| TAB_WT.prefix(_tcid,_webses)
?};
{? TAB_WT.first()
|| {! |?  TAB_WT.del() !}
?};
TAB_WT.cntx_pop();
EDOKUMW.cntx_psh();
_names:=EDOKUMW.names();
{? _names.first()
|| {! |?
      EDOKUMW.use(_names.NAME); EDOKUMW.index('DEL');
      {? _a=1
      || EDOKUMW.prefix(_tcid)
      || EDOKUMW.prefix(_tcid,_webses)
      ?};
      {? EDOKUMW.first()
      || {! |?  EDOKUMW.del() !}
      ?};
      _names.next()
   !}
?};
EDOKUMW.cntx_pop();
{? _a=2
|| EDOKUMPT.index('EDOKUMPT');
   EDOKUMPT.prefix(_webses);
   {? EDOKUMPT.first() || {! |? EDOKUMPT.del() !} ?};
   SAM_TMP.index('SAM_TMP');
   SAM_TMP.prefix(_webses);
   {? SAM_TMP.first() || {! |? SAM_TMP.del() !} ?}
?};
exec('clean_k_bud','obiegi2',{? _a=1 || _tcid || _tcid+_webses ?})


\dsp_dokob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla dokumentu w obiegu
::   WE: _a - 'W' - wnioski
::            'F' - faktury
::            'D' - delegacje
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUMW.get()
|| EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix();
   EDOKUMW.EDOKUM();
   EDOKUM.memo_get(,'UW_OPDL');
   EDOKUMW.web_cntx_save();
   SKID.SL_KH:=SKID.NIP:='';
   web_global_params_set(exec('obj_ntab_set','#array',web_global_params_get(),'ed_kh_ed',0));
   {? _a='F'
   || typobi:=1;
      exec('okna_ini','obiegi','WF03');
      exec('bobs_edokum','obiegi','F');
      EDOKUM.web_display('WF03',,"EDOKUMW.web_cntx_load(); EDOKUM.web_eclose(); web_top_refresh(1)")
   |? _a='W'
   || {? 1
      || EDOKUM.web_cntx_save();
         _red:=exec('win_red_wnioski','obiegi2','D');
         web_def_fld_opt(_red, 'editable=0',);
         web_def_disp(_red,"
               EDOKUM.web_cntx_load();
               exec('inne_akcje','obiegi2',_a,,1)
            ",
            'Wniosek w obiegu'@
         )
      || typobi:=2;
         exec('okna_ini','obiegi','WW01',0);
         exec('bobs_edokum','obiegi','W');
         EDOKUM.web_display('WW01',,"EDOKUMW.web_cntx_load(); EDOKUM.web_eclose(); web_top_refresh(1)")
      ?}
   || typobi:=3;
      exec('okna_ini','obiegi','WD01');
      exec('bobs_edokum','obiegi','D');
      EDOKUM.web_display('WD01',,"EDOKUMW.web_cntx_load(); EDOKUM.web_eclose(); web_top_refresh(1)")
   ?}
|| {? _a='F'
   || FUN.info('Nie znaleziono faktury.'@)
   |? _a='W'
   || FUN.info('Nie znaleziono wniosku.'@)
   || FUN.info('Nie znaleziono delegacji.'@)
   ?}
?}


\bobs_wpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą okienka do wprowadzania dokumentów w obiegu
::----------------------------------------------------------------------------------------------------------------------
_par:=web_global_params_get();
{? type_of(_par)>100 & var_pres('EDOKUM',_par)>0 & _par.EDOKUM
|| _par.EDOKUM:=0; web_global_params_set(_par)
?};
EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix();
{? EDOKUMW.get() || EDOKUMW.EDOKUM() ?};
1


\create_kom_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Tworzy tabele na komunikaty
::  OLD: \create_kom_tab/obiegi_akc.fml
::----------------------------------------------------------------------------------------------------------------------
__OBISPR:=tab_tmp(2,
   'BLOKAKC','INTEGER','Blokujący'@,
   'OPIS','STRING[255]','Opis'@,
   'DETAILS','INTEGER',
)


\add_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodaje komunikat do tabeli
::   WE:  _a  - pokazywać komunikat
::        _b  - czy z blokadą
::        _c  - tresc komunikatu
::       [_d] - czy dostępna akcja szczegóły? 0-nie wpp-nr akcji
::----------------------------------------------------------------------------------------------------------------------
{? _a & var_pres('__OBISPR')<=0
|| FUN.info(_c)
|? var_pres('__OBISPR')>0
|| __OBISPR.blank(1);
   __OBISPR.BLOKAKC:=_b;
   __OBISPR.OPIS:=_c;
   {? var_press('_d')>0 || __OBISPR.DETAILS:=_d ?};
   __OBISPR.add()
?}


\bobs_edokumz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PG [12.30]
:: OPIS: Przed obsluga EDOKUMZ
::  OLD: \bobs_edokumz/skid_blb.fml
::----------------------------------------------------------------------------------------------------------------------
__CTR.BTAB:='EDOKUMZ';
__CTR.TAB:='EDOKUM';
__CTR.BBLOB:='EDOKUM';
_fget:={? ~_ & EDOKUM.f_active() & EDOKUM.sel_size()=0
       || EDOKUM.f_get()
       || EDOKUM.get()
       ?};
{? _fget & EDOKUM.ZAM<>'T' & var_pres('zapobobs')<=0
||
   EDOKUMZ.index('DISP'); EDOKUMZ.prefix(EDOKUM.ref());
   __CTR.DND:=1;
   ctr_set(__CTR.WIN_ID,'ctr_id','removeAllActions');
   exec('initf','bloby',__CTR.WIN_ID)
||
   {? _fget=0
   || EDOKUMZ.index('NULL'); EDOKUMZ.prefix(null,null)
   ?};
   __CTR.DND:=0;
   ctr_set(__CTR.WIN_ID,'ctr_id','removeAllActions');
   _btab:=($(__CTR.BTAB))();
   {? _btab.size()
   ||
      ctr_set(__CTR.WIN_ID,'ctr_id','addToolbarAction','setview','','xwin16.png:47','Widok',0,0);
      ctr_set(__CTR.WIN_ID,'ctr_id','addToolbarSeparator');
      ctr_set(__CTR.WIN_ID,'ctr_id','addAction', 'view','P&OKAŻ','','Pokazanie dokumentu',1,1);
      ctr_set(__CTR.WIN_ID,'ctr_id','addAction', 'save','Zap&isz','','Kopiowanie dokumentu na wybraną lokalizację',2,0);
      ctr_set(__CTR.WIN_ID,'ctr_id','addAction', 'disp','&Właściwości','','Wyświetlenie większej ilości informacji',1,0)
   ?};
   ctr_call(__CTR.WIN_ID,'ctr_id','initToolbar' )
?};
{? _
|| exec('getblobs','bloby',__CTR.WIN_ID,_)
?}

\bobs_edokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.10]
:: OPIS: Przed obsługą okienka redagowania tabeli EDOKUM
::   WE: _a - 'F' - faktura
::            'W' - wniosek
::            'D' - delegacja
::----------------------------------------------------------------------------------------------------------------------
_par:=web_global_params_get();
{? ~(type_of(_par)>100 & var_pres('todo_run',_par)>0 & _par.todo_run>0)
|| exec('env_edokum_get1','obiegi')
|| exec('env_wt','b_proces')
?};
web_params_set(_par);
typobi:={? _a='F' || 1 |? _a='W' || 2 || 3 ?};
exec('typobi','obiegi');
OBIEGI.OBIEGKON:=1;
OBIEGI.FAKT_DEL:=0;
OBIEGI.DEL_ETAT:='';
POMOC.W_PORTAL:='N';
POMOC.RODZ_WP:=0;
XINFO.KRAJ:=null;
SKID.ZAPOT:=0;
1


\bobs_edokos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.10]
:: OPIS: Przed obsługą okienka redagowania tabeli EDOKOS
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.web_cntx_load(2);
_par:=web_global_params_get();
{? ~(type_of(_par)>100 & var_pres('todo_run',_par)>0 & _par.todo_run>0)
|| exec('env_edokum_get1','obiegi')
?};
web_params_set(_par);
OBIEGI.POPETAP:='';
{? type_of(_par)>0 & var_pres('popetap',_par)>0
|| OBIEGI.POPETAP:=_par.popetap
?};
1


\todo_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie parametru przy uruchamianiu z TODO
::   WE: _a - 1 - TODO
::           -1 - start z pulpitu
::            0 - wpw
::----------------------------------------------------------------------------------------------------------------------
web_global_params_set(exec('obj_ntab_set','#array',web_global_params_get(),
                      'todo_run',_a
                     ))


\poz_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Pozycje delegacji
::   WE: _a - 'WD' - wprowadzanie delegacji
::            'AD' - akceptacja delegacji
::            'PD' - przekazanie delegacji
::       _b - 1 - dla EDOKUMW
::            2 - dla EDOKUM
::----------------------------------------------------------------------------------------------------------------------
{? _<2 || _b:=1 ?};
{? app_info('web_sesid')<>''
|| _dalej:=1;
   {? _b=1 & ~EDOKUMW.get()
   || FUN.info('Nie znaleziono delegacji.'@);
      {? _a='WD'
      || exec('dob_refresh','obiegi','W','D')
      |? _a='PD'
      || exec('dob_refresh','obiegi','P','D')
      || exec('dob_refresh','obiegi','A','D')
      ?};
      _dalej:=0
   ?};
   {? _dalej
   || {? _b=1
      || EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix(); EDOKUMW.EDOKUM()
      ?};
      _dalej:=exec('env_edokum','obiegi',_a,0)
   ?};
   {? _dalej
   || _get:=web_params_get();
      {? type_of(_get)>100 & var_pres('akcja',_get)>0 & (_get.akcja='dołącz' | _get.akcja='popraw')
      || {? _get.akcja='dołącz'
         || _par:=web_global_params_get();
            {? type_of(_par)>100 & var_pres('act_ok',_par)>0 & ~_par.act_ok
            || _pole:=params_exec('dol_dob_wt2','obiegi',0,0);
               {? type_of(_pole)=type_of('') & _pole<>''
               || web_top_update(0,,,_pole)
               || EDOKUM.get()
               ?};
               _dalej:=(_pole='')
            ?}
         || _pole:=params_exec('pop_dob_wt2','obiegi',0,0);
            {? type_of(_pole)=type_of('') & _pole<>''
            || web_top_update(0,,,_pole)
            || EDOKUM.get()
            ?};
            _dalej:=(_pole='')
         ?}
      ?}
   ?};
   {? _dalej
   || {? _b=1 || EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix() ?};
      {? _b=2 | EDOKUM.seek(EDOKUMW.EDOKUM)
      || EDOKUM.web_cntx_save(1);
         EDOKUMD.use('bdiety'+(EDOKUM.name()+2));
         EDOKUMD.index('DELEG'); EDOKUMD.prefix(EDOKUM.ref());
         EDOKUMP.use('skidpu'+(EDOKUM.name()+2));
         EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref());
         _txt:=EDOKUM.ID+', '+EDOKUM.DOSTAWCA().PIERWSZE+' '+EDOKUM.DOSTAWCA().NAZWISKO+', '+$EDOKUM.DATA_OD+' - '
               +$EDOKUM.DATA_DO+', '+EDOKUM.DEL_MIE+', '+EDOKUM.DEL_CEL().TR;
         EDOKUMD.web_win_init('POZ_DEL',,'title=": '+_txt+'"');
:: widoczność zakładek zależnie od definicji typu delegacji
         {? EDOKUM.TYP().DEL_POZ=0
         || EDOKUMD.web_win_init('POZ_DEL','poz_del_przejazdy','tab_visible=0')
         || EDOKUMD.web_win_init('POZ_DEL','poz_del_przejazdy','tab_visible=1')
         ?};
         zakres:={? _a='WD' || 1 |? _a='AD' || 2 || 5 ?};
         _gray1:='';
         {? exec('blok_przej','obiegi_proj') || _gray1:='DPU:D' ?};
         EDOKUMD.web_win_init('POZ_DEL','poz_del_przejazdy','grayed='+_gray1);
         _gray2:='';
         {? exec('blok_diety','obiegi_proj') || _gray2:='DPU:D' ?};
         EDOKUMD.web_win_init('POZ_DEL','poz_del_diety','grayed='+_gray2);
         _gray3:='';
         {? exec('blok_wyd','obiegi_proj') || _gray3:='DPU:D' ?};
         EDOKUMD.web_win_init('POZ_DEL','poz_del_wydatki','grayed='+_gray3);
         VAR_DEL.delete('zakres');
         EDOKUMD.web_select('POZ_DEL','_poz_del')
      || FUN.emsg('Nie udało się ustalić bieżącego rekordu delegacji.'@)
      ?}
   ?}
|| EDOKUMD.win_sel('POZ_DELJ'); EDOKUMD.select();
   ''
?}


\ae_tp_dob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji pola EDOKUM.TP
::----------------------------------------------------------------------------------------------------------------------
{? +app_info('web_sesid') & typobi=2
|| EDOKUM.TYP();
   {? ETYPY.CZY_ZALP='T' & ETYPY.ETYPZAL || exec('wni_aeplace','zaliczki',0) ?}
?};
1


\ae_etypwyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Po redakcji pola EDOK_ZAL.ETYPWYD
::  OLD: \ae_etypwyd/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOK_ZAL.ETYPWYD=null
|| FUN.info('Nie wybrano typu wydatku.'@); 0
|| EDOK_ZAL.ETYPWYD();
   {? EDOK_ZAL.RWYD=null || EDOK_ZAL.RWYD:=ETYPWYD.DOM_RWYD ?};
   {? ETYPWYD.ED_FULL=1
   || EDOK_ZAL.BRUTTO:=0;
      {? app_info('web_sesid')<>''
      || EDOK_ZAL.web_efld_opt('RED',,'mark=1, editable=1',EDOK_ZAL,'NETTO');
         EDOK_ZAL.web_efld_opt('RED',,'mark=0, editable=0',EDOK_ZAL,'BRUTTO')
      || EDOK_ZAL.efld_opt('RED','mark=1, editable=1',EDOK_ZAL,'NETTO');
         EDOK_ZAL.efld_opt('RED','mark=0, editable=0',EDOK_ZAL,'BRUTTO')
      ?}
   |? ETYPWYD.ED_FULL=2
   || EDOK_ZAL.NETTO:=0;
      {? app_info('web_sesid')<>''
      || EDOK_ZAL.web_efld_opt('RED',,'mark=0, editable=0',EDOK_ZAL,'NETTO');
         EDOK_ZAL.web_efld_opt('RED',,'mark=1, editable=1',EDOK_ZAL,'BRUTTO')
      || EDOK_ZAL.efld_opt('RED','mark=0, editable=0',EDOK_ZAL,'NETTO');
         EDOK_ZAL.efld_opt('RED','mark=1, editable=1',EDOK_ZAL,'BRUTTO')
      ?}
   || {? app_info('web_sesid')<>''
      || EDOK_ZAL.web_efld_opt('RED',,'mark=1, editable=1',EDOK_ZAL,'NETTO');
         EDOK_ZAL.web_efld_opt('RED',,'mark=1, editable=1',EDOK_ZAL,'BRUTTO')
      || EDOK_ZAL.efld_opt('RED','mark=1, editable=1',EDOK_ZAL,'NETTO');
         EDOK_ZAL.efld_opt('RED','mark=1, editable=1',EDOK_ZAL,'BRUTTO')
      ?}
   ?};
   {? app_info('web_sesid')<>'' || exec('czytaj','#stalesys',,FINFO) ?};
   {? EDOK_ZAL.WAL=null || EDOK_ZAL.WAL:=FINFO.NAROD ?};
   exec('aerozlprac','obiegi');
   1
?}


\aerozlprac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Po redakcji pola EDOK_ZAL.ROZLPRAC
::  OLD: \aerozlprac/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~EDOK_ZAL.ROZLPRAC
|| EDOK_ZAL.ROZLZAL:=0;
   {? app_info('web_sesid')<>''
   || EDOK_ZAL.web_efld_opt('RED',,'editable=0',EDOK_ZAL,'ROZLZAL')
   || EDOK_ZAL.efld_opt('RED','editable=0',EDOK_ZAL,'ROZLZAL')
   ?}
|| {? app_info('web_sesid')<>''
   || EDOK_ZAL.web_efld_opt('RED',,'editable=1',EDOK_ZAL,'ROZLZAL')
   || EDOK_ZAL.efld_opt('RED','editable=1',EDOK_ZAL,'ROZLZAL')
   ?}
?}; 1


\edit_wydatki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Edycja wydatkow
::   WE: _a - 1 - dolacz
::            2 - popraw
::            4 - wyswietl (spacja)
::  OLD: \edit_wydatki/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| web_params_set(_get:=web_params_get());
   exec('env_wt','b_proces');
   {? EDOKUM.web_cntx_load(1)
   || EDOKUM.web_cntx_save(1);
      {? _a=1 | _a=2
      || _zwrot:=1;
         {? EDOKUM.ZAM='T'
         || FUN.info('Delegacja zamknięta, nie podlega modyfikacjom.'@);
            _zwrot:=0
         || exec('czytaj','#stalesys');
            {? ~XINFO.SLU_WYD
            || FUN.info('Nie wybrano słownika rodzajów wydatków.'@); _zwrot:=0
            |? ~FINFO.SLWAL
            || FUN.info('Nie wybrano słownika walut.'@); _zwrot:=0
            ?}
         ?};
         {? _zwrot
         || {? _a=1
            || EDOK_ZAL.web_efld_init('RED',,'win_dict=SLO_WT, mark=1, editable=1',EDOK_ZAL,'ETYPWYD');
               EDOK_ZAL.blank(1);
               EDOK_ZAL.EDOKUM:=EDOKUM.ref();
               EDOK_ZAL.ZW:='W';
               _form:="web_params_set(web_params_get());
                       exec('env_wt','b_proces');
                       {? _a='OK'
                       || _chk:=exec('spr_edok_zal','obiegi2');
                          {? _chk=''
                          || EDOK_ZAL.prefix();
                             EDOK_ZAL.add();
                             EDOK_ZAL.web_eclose();
                             EDOKUMD.use('bdiety'+(EDOK_ZAL.name()+2)); EDOKUMD.index('DELEG'); EDOKUMD.prefix();
                             EDOKUMD.web_refresh('POZ_DEL','poz_del_wydatki')
                          || web_top_update(0,,,_chk)
                          ?}
                       || EDOK_ZAL.web_eclose()
                       ?}"
            || EDOK_ZAL.web_efld_init('RED',,'win_dict=SLO_WT, mark=0, editable=0',EDOK_ZAL,'ETYPWYD');
               _form:="web_params_set(_get:=web_params_get());
                       exec('env_wt','b_proces');
                       {? _a='OK'
                       || _chk:=exec('spr_edok_zal','obiegi2');
                          {? _chk=''
                          || EDOK_ZAL.prefix();
                             EDOK_ZAL.put();
                             EDOK_ZAL.web_eclose();
                             EDOKUMD.use('bdiety'+(EDOK_ZAL.name()+2)); EDOKUMD.index('DELEG'); EDOKUMD.prefix();
                             EDOKUMD.web_refresh('POZ_DEL','poz_del_wydatki')
                          || web_top_update(0,,,_chk)
                          ?}
                       || EDOK_ZAL.web_eclose()
                       ?}"
            ?};
            EDOK_ZAL.web_edit('RED',,,,_form)
         ?}
      |? _a=4
      || EDOK_ZAL.web_display('REDD',,"EDOK_ZAL.web_eclose()")
      ?}
   ?}
|| {? _a=1 | _a=2
   || _zwrot:=1;
      EDOKUM.use('skid_v'+(EDOK_ZAL.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix();
      {? EDOKUM.ZAM='T'
      || FUN.info('Delegacja zamknięta, nie podlega modyfikacjom.'@);
         _zwrot:=0
      || exec('czytaj','#stalesys');
         {? ~XINFO.SLU_WYD
         || FUN.info('Nie wybrano słownika rodzajów wydatków.'@); _zwrot:=0
         |? ~FINFO.SLWAL
         || FUN.info('Nie wybrano słownika walut.'@); _zwrot:=0
         ?}
      ?};
      {? _zwrot
      || {? _a=2
         || EDOK_ZAL.fld_fml('WAL','BEFORE_EDIT',"XINFO.SLWAL(); 1");
            EDOK_ZAL.efld_opt('RED_W','mark=0, editable=0',EDOK_ZAL,'ETYPWYD');
            _form:="_chk:=exec('spr_edok_zal','obiegi2');
                    {? _chk=''
                    || EDOK_ZAL.cntx_psh(); EDOK_ZAL.prefix();
                       EDOK_ZAL.put();
                       EDOKUMD.use('bdiety'+(EDOK_ZAL.name()+2)); EDOKUMD.index('DELEG'); EDOKUMD.prefix();
                       EDOK_ZAL.cntx_pop()
                    ?}";
            EDOK_ZAL.win_edit('RED_W');
            EDOK_ZAL.edit(_form);
            EDOK_ZAL.fld_fml('WAL','BEFORE_EDIT',"*")
         ?}
      ?}
   ?}
?}


\wydatek_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła wyświetla rekord w tabeli wydatków
::----------------------------------------------------------------------------------------------------------------------
EDOK_ZAL.win_edit('RED_W'); EDOK_ZAL.display()


\del_wydatki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Usuniecie wydatkow
::  OLD: \del_wydatki/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.use('skid_v'+(EDOK_ZAL.name()+2));
{? EDOK_ZAL.EDOKUM().ZAM='T'
|| FUN.info('Delegacja zamknięta, nie podlega modyfikacjom.'@);
   return()
?};
EDOK_ZAL.web_cntx_save();
_form:="{? _a=1
        ||
           {? EDOK_ZAL.web_cntx_load()
           || do();
              EDOKUMZ.cntx_psh(); EDOKUMZ.use('skid_n'+(EDOK_ZAL.name()+2));
              EDOKUMZ.index('WYDATEK'); EDOKUMZ.prefix(EDOK_ZAL.ref());
              {? EDOKUMZ.first()
              || {! |?
                    _delr:=EDOKUMZ.del(,1);
                    {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
                 !}
              ?};
              {? ~EDOK_ZAL.del(,1) || undo() ?};
              EDOKUMZ.cntx_pop();
              end();
              EDOKUMD.use('bdiety'+(EDOK_ZAL.name()+2)); EDOKUMD.index('DELEG'); EDOKUMD.prefix();
              EDOKUMD.web_refresh('POZ_DEL','poz_del_wydatki')
           ?}
        ?}";
web_ask(_form,'Usunąć wydatek?'@,FUN.TYT)


\wyd_ae_net
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji pola EDOK_ZAL.NETTO
::----------------------------------------------------------------------------------------------------------------------
EDOK_ZAL.NETTO:=EDOK_ZAL.NETTO$2; 1


\wyd_ae_bru
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji pola EDOK_ZAL.BRUTTO
::----------------------------------------------------------------------------------------------------------------------
EDOK_ZAL.BRUTTO:=EDOK_ZAL.BRUTTO$2; 1


\zal_wyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Załączniki dla wydatków
::----------------------------------------------------------------------------------------------------------------------
EDOKUMZ.use('skid_n'+(EDOK_ZAL.name()+2));
EDOKUMZ.index('WYDATEK'); EDOKUMZ.prefix(EDOK_ZAL.ref());
EDOK_ZAL.web_cntx_save();
EDOKUMZ.web_select('WER_WYD',,,'RED_WW')


\get_atr_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [12.30]
:: OPIS: Zwraca czy edycyjne wypelnienie wartosci dla atrybutu podanej KOL typu ETYPY
::   WE: _a - ETYPY.ref() lub ZDARZT.ref() [biezacy]
::       _b - ETYP_ATR.KOL
::   WY: 1 - tak; 0 - nie
::  OLD: \get_atr_opis/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null()))
   | (_a=null()) | ((ref_name(_a)<>ETYPY.name()) & (ref_name(_a)<>ZDARZT.name()))
|| {? OBIEGI.TYP_ID='K'
   || _a:=ZDARZT.ref()
   || _a:=ETYPY.ref()
   ?}
?};
{? (_<2) | (_b=~~) || _b:=0 ?};
{? (type_of(_b)<>type_of(0)) || &_b;_b:=0 ?};

_odp:='';
{? _b>0
||
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ');
   {? (ref_name(_a)=ZDARZT.name())
   || ETYP_ATR.prefix(null,_a,_b)
   || ETYP_ATR.prefix(_a,null,_b)
   ?};
   {? ETYP_ATR.first()
   ||
      _odp:={? ETYP_ATR.memo_get(,'OPIS') || ETYP_ATR.memo_txt(0,1,'OPIS') || '' ?}
   ?};
   ETYP_ATR.cntx_pop()
?};
_odp


\get_atr_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [12.30]
:: OPIS: Zwraca ref do typu atrybutu
::   WE: _a - ETYPY.ref() lub ZDARZT.ref() [biezacy]
::       _b - ETYP_ATR.KOL
::   WY: 1 - tak; 0 - nie
::  OLD: \get_atr_ref/deleg_at.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.TYP_ID:='T';
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null()))
   | (_a=null()) | ((ref_name(_a)<>ETYPY.name()) & (ref_name(_a)<>ZDARZT.name()))
|| {? OBIEGI.TYP_ID='K'
   || _a:=ZDARZT.ref()
   || _a:=ETYPY.ref()
   ?}
?};
{? (_<2) | (_b=~~) || _b:=0 ?};
{? (type_of(_b)<>type_of(0)) || &_b;_b:=0 ?};

_odp:=0;
{? _b>0
||
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ');
   {? (ref_name(_a)=ZDARZT.name())
   || ETYP_ATR.prefix(null,_a,_b)
   || ETYP_ATR.prefix(_a,null,_b)
   ?};
   {? ETYP_ATR.first()
   ||
      _odp:=ETYP_ATR.ref
   ?};
   ETYP_ATR.cntx_pop()
?};
_odp


\trig_users
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.10]
:: OPIS: Triggery ustawiające pole TAB.USERS
::   WE: _a - alias do tabeli
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('no_us')<=0
|| _kod:=app_info('app_user');
   USERS.index('USR_AKOD'); USERS.prefix();
   OPERATOR.USER:={? USERS.find_key('T',_kod,) & USERS.AKT='T' || USERS.ref() || null() ?};
   _a.USERS:=OPERATOR.USER
?};
{? _a=EDOK_ATR
||
   {? EDOK_ATR.DOKUM=null()
   ||
      EDOK_ATR.DOT:=null()
   ||
      DOKUM.cntx_psh();
      DOKUM.use(ref_name(EDOK_ATR.DOKUM));
      EDOK_ATR.DOKUMOID:=EDOK_ATR.DOKUM().ONEID;
      EDOK_ATR.DOT:=DOKUM.DOT;
      DOKUM.cntx_pop()
   ?}
?};
1


\zakres_dob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.10]
:: OPIS: Zakres dokumentów
::   WE: _a - operacja - 'R'ejestracja, 'P'rzekazanie, 'A'kceptacja
::       _b - rodzaj dokumentów - 'W'nioski, 'F'aktury, 'D'elegacje
::       _c - 'U'żytkownika, 'W'szystkich użytkowników, 'G'szystkich użytkowników wg grup
::       _d - dla rejestracji - 'N'iezakończone, 'Z'akończone, 'O'drzucone, 'W'szystkie
::            dla przekazania - 'N'ieprzekazane, 'P'przekazane, 'O'drzucone, 'W'szystkie
::            dla akceptacji - 'N'iezaakceptowane, 'Z'aakceptowane, 'O'drzucone, 'W'szystkie
::----------------------------------------------------------------------------------------------------------------------
_zakres:={? _b='W'
         || {? _a='R' || 'WW' |? _a='P' || 'PW' || 'AW' ?}
         |? _b='D'
         || {? _a='R' || 'WD' |? _a='P' || 'PD' || 'AD' ?}
         || {? _a='P' || 'PF' || 'AF' ?}
         ?};
exec('env_edokum','obiegi',_zakres,1,1);
_typ:={? EDOKUMW.get() || EDOKUMW.TYP || null ?};
OBIEGI.TYP:=_typ;
OBIEGI.CZY_TYP:='W';
OBIEGI.CZY_ZAM:='N';
web_params_set(exec('obj_ntab_set','#array',web_params_get(1),
               'parzakr1',_a,
               'parzakr2',_b,
               'parzakr3',_c,
               'parzakr4',_d
              ));
exec('typobi','obiegi');
EDOKUMW.web_cntx_save();
OBIEGI.web_efld_init('TYP_WT',,'mark=0, enable=0, editable=0',OBIEGI,'TYP');
OBIEGI.web_edit('TYP_WT',,,,"{? _a='OK'
                             || _load:=EDOKUMW.web_cntx_load();
                                EDOKUM.use('skid_v'+(EDOKUMW.name()+2));
                                {? _load & EDOKUMW.get() || EDOKUMW.EDOKUM() ?};
                                OBIEGI.web_eclose();
                                _get:=web_params_get();
                                exec('zakres_dob1','obiegi',_get.parzakr1,_get.parzakr2,_get.parzakr3,_get.parzakr4,1);
                                {? typobi=1
                                || _okno:={? PAR_SKID.get(80)='T' || 'WPRGF' || 'WPRGF1' ?};
                                   EDOKUMW.web_refresh(_okno,'PRZ');
                                   EDOKUMW.web_refresh(_okno,'AKC')
                                |? typobi=2
                                || EDOKUMW.web_refresh('WPRGW','WPR');
                                   EDOKUMW.web_refresh('WPRGW','PRZ');
                                   EDOKUMW.web_refresh('WPRGW','AKC')
                                || EDOKUMW.web_refresh('WPRGD','WPR');
                                   EDOKUMW.web_refresh('WPRGD','PRZ');
                                   EDOKUMW.web_refresh('WPRGD','AKC')
                                ?}
                             || OBIEGI.web_eclose()
                             ?}")


\typobi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie typu obiegu w zmiennej OBIEGI.TYPOBIEG
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('typobi')>0
|| TYPOBIEG.cntx_psh(); TYPOBIEG.index('UNIK');
   {? typobi=1
   || TYPOBIEG.prefix('Obieg faktur','Obieg faktur')
   |? typobi=2
   || TYPOBIEG.prefix('Obieg wniosków','Obieg wniosków')
   || TYPOBIEG.prefix('Obieg delegacji','Obieg delegacji')
   ?};
   OBIEGI.TYPOBIEG:={? TYPOBIEG.first() || TYPOBIEG.ref() || null ?};
   TYPOBIEG.cntx_pop()
|| OBIEGI.TYPOBIEG:=null
?}


\zakres_dob1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.10]
:: OPIS: Zakres wniosków w webterm - wewnętrzna
::   WE: _a - operacja - 'R'ejestracja, 'P'rzekazanie, 'A'kceptacja
::       _b - rodzaj dokumentów - 'W'nioski, 'F'aktury, 'D'elegacje
::       _c - 'U'żytkownika, 'W'szystkich użytkowników, 'G'szystkich użytkowników wg grup
::       _d - dla rejestracji - 'N'iezakończone, 'Z'akończone, 'O'drzucone, 'W'szystkie
::            dla przekazania - 'N'ieprzekazane, 'P'przekazane, 'O'drzucone, 'W'szystkie
::            dla akceptacji - 'N'iezaakceptowane, 'Z'aakceptowane, 'O'drzucone, 'W'szystkie
::       _e - 1 - dla wyświetlonego okienka
::            0 - dla przygotowywanego okienka
::----------------------------------------------------------------------------------------------------------------------
web_params_set(web_params_get());
exec('env_wt','b_proces');
wyb_typ:=_wyb_typ:={? OBIEGI.CZY_TYP='B' & OBIEGI.TYP || 1 || 0 ?};
_ref:=null;
EDOKUM.prefix();
{? EDOKUM.get() || _ref:=EDOKUM.ref() ?};
_tytul:='';
{? _b='W'
|| typobi:=2; _tytul+='Wnioski '@
|? _b='F'
|| typobi:=1; _tytul+='Faktury '@
|| typobi:=3; _tytul+='Delegacje '@
?};
{? _a='R'
|| zakr_wpr:={? _d='N'
             || _tytul+='niezakończone, '@; 1
             |? _d='Z'
             || _tytul+='zakończone, '@; 2
             |? _d='O'
             || _tytul+='odrzucone, '@;3
             || _tytul+='wszystkie, '@; 4
             ?};
   wla_dok:={? _c='U'
            || 0
            |? _c='W'
            || 1
            |? _c='G'
            || 2
            ?};
   _tytul+={? wla_dok=0
           || 'zalogowanego użytkownika'@
           |? wla_dok=1
           || 'wszystkich użytkowników'@
           |? wla_dok=2
           || {? __PARSES.getVal('GrupaObiegu').KOD <> ''
              || 'wszystkich użytkowników wg grupy '+__PARSES.getVal('GrupaObiegu').KOD
              || 'wszystkich użytkowników wg wszystkich uprawnionych grup '
              ?}
           ?};




   exec('po_edokum','obiegi',1,_b,wla_dok)
|? _a='A'
|| zakr_mer:={? _d='N'
             || _tytul+='niezaakceptowane, '@; 1
             |? _d='Z'
             || _tytul+='zaakceptowane, '@; 2
             |? _d='O'
             || _tytul+='odrzucone, '@; 3
             || _tytul+='wszystkie, '@; 4
             ?};
   wla_dok1:={? _c='U'
             || 0
             |? _c='W'
             || 1
             |? _c='G'
             || 2
             ?};
   _tytul+={? wla_dok1=0
           || 'zalogowanego użytkownika'@
           |? wla_dok1=1
           || 'wszystkich użytkowników'@
           |? wla_dok1=2
           || {? __PARSES.getVal('GrupaObiegu').KOD <> ''
              || 'wszystkich użytkowników wg grupy '+__PARSES.getVal('GrupaObiegu').KOD
              || 'wszystkich użytkowników wg wszystkich uprawnionych grup '
              ?}
           ?};
   exec('po_edokum','obiegi',2,_b,wla_dok1)
|? _a='P'
|| zakr_pak:={? _d='N'
             || _tytul+='nieprzekazane, '@; 1
             |? _d='P'
             || _tytul+='przekazane, '@; 2
             |? _d='O'
             || _tytul+='odrzucone, '@; 3
             || _tytul+='wszystkie, '@; 4
             ?};
   wla_dok2:={? _c='U'
             || 0
             |? _c='W'
             || 1
             |? _c='G'
             || 2
             ?};
   _tytul+={? wla_dok2=0
           || 'zalogowanego użytkownika'@
           |? wla_dok2=1
           || 'wszystkich użytkowników'@
           |? wla_dok2=2
           || {? __PARSES.getVal('GrupaObiegu').KOD <> ''
              || 'wszystkich użytkowników wg grupy '+__PARSES.getVal('GrupaObiegu').KOD
              || 'wszystkich użytkowników wg wszystkich uprawnionych grup '
              ?}
           ?};
   exec('po_edokum','obiegi',5,_b,wla_dok2)
?};
{? _wyb_typ & OBIEGI.TYP || _tytul+=', typu '@+OBIEGI.TYP().NAZWA ?};
_par:=web_global_params_get();
_id:={? _a='R' || 'WPR' |? _a='P' || 'PRZ' || 'AKC' ?};
_okno:={? _b='W'
       || 'WPRGW'
       |? _b='F'
       || {? PAR_SKID.get(80)='T' || 'WPRGF' || 'WPRGF1' ?}
       || 'WPRGD'
       ?};
{? _e
|| {? type_of(_par)>100 & var_pres('zakrdr1',_par)>0
   || {? _a='R'
      || _par.zakrdr1:=_d; _par.zakrdr2:=_c; _par.zakrdr3:={? OBIEGI.TYP || $OBIEGI.TYP || '' ?}
      |? _a='P'
      || _par.zakrdp1:=_d; _par.zakrdp2:=_c; _par.zakrdp3:={? OBIEGI.TYP || $OBIEGI.TYP || '' ?}
      || _par.zakrda1:=_d; _par.zakrda2:=_c; _par.zakrda3:={? OBIEGI.TYP || $OBIEGI.TYP || '' ?}
      ?};
      web_global_params_set(_par)
   ?};
   EDOKUMW.web_win_opt(_okno,_id,'title="'+_tytul+'"');
   {? _ref
   || EDOKUMW.blank(1); EDOKUMW.EDOKUM:=_ref;
      {? ~EDOKUMW.find_rec() || EDOKUMW.first() ?}
   ?}
|| EDOKUMW.web_win_init(_okno,_id,'title="'+_tytul+'"');
   web_global_params_set(exec('obj_ntab_set','#array',_par,
                         'zakrdr1','N','zakrdr2','U','zakrdr3','',
                         'zakrdp1','N','zakrdp2','U','zakrdp3','',
                         'zakrda1','N','zakrda2','U','zakrda3',''
                        ))
?}


\ae_czy_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji pola OBIEGI.CZY_TYP
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| {? OBIEGI.CZY_TYP='B'
   || OBIEGI.efld_opt(OBIEGI.win_edit('?'),'mark=0,enable=1',OBIEGI,'TYP')
   || OBIEGI.efld_opt(OBIEGI.win_edit('?'),'mark=0,enable=0',OBIEGI,'TYP')
   ?}
|| _okno:=web_top_win();
   {? OBIEGI.CZY_TYP='B'
   || OBIEGI.web_efld_opt(_okno,,'mark=0, enable=1, editable=1',OBIEGI,'TYP')
   || OBIEGI.web_efld_opt(_okno,,'mark=0, enable=0, editable=0',OBIEGI,'TYP')
   ?}
?};
1


\zakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [21.37]
:: OPIS: Wywołanie zasadniczej formuły na zakres która została przeniesiona do pliku obiegi2.fml
::       ze względu na przepełnienie pliku obiegi.fml
::   WE: _a - 1 - rejestracja
::            2 - akceptacja
::            3 - dekretacja
::            5 - przekazanie do akceptacji
::
::       _b - 1 - niezakończone (wprowadzanie)
::            2 - zakończone (wprowadzanie)
::            3 - odrzucone (wprowadzanie)
::            4 - wszystkie (wprowadzanie)
::
::            1 - nieprzekazane (przekazanie)
::            2 - przekazane (przekazanie)
::            3 - odrzucone (przekazanie)
::            4 - wszystkie (przekazanie)
::
::            1 - niezaakceptowane (akceptacja)
::            2 - zaakceptowane (akceptacja)
::            3 - odrzucone (akceptacja)
::            4 - wszystkie (akceptacja)
::
::            1 - niezadekretowane (dekretacja)
::            2 - zadekretowane (dekretacja)
::            3 - wszystkie dekretowane (dekretacja)
::            4 - zarejestrowane (dekretacja)
::
::       _c - 0 - bieżącego użytkownika
::            1 - wszystkich użytkowników
::            2 - wszystkich użytkowników wg grup
::
::       _d - 0 - nie blokować wtyczki na zakres (domyślnie)
::            1 - blokować wtyczkę na zakres
::----------------------------------------------------------------------------------------------------------------------
exec('zakres0','obiegi2',_a,_b,_c,{? var_pres('_d')>0 || _d || 0 ?})


\zakres1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [1210]
:: OPIS: Zakres dokumentow - wewnetrzna
::   WE: _a - 1 - rejestracja
::            2 - akceptacja
::            3 - dekretacja
::            5 - przekazanie do akceptacji
::  OLD: \zakres1/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_podz:={? PAR_SKID.get(80)='T' || '' || 'N' ?};
_dekr:={? var_pres('dek_fakt')>0 & dek_fakt || 'RY' || '' ?};
{? _a=3
|| {? typobi=1
   || EDOKUM.win_edit('WPR')
   |? typobi=2
   || EDOKUM.win_edit('KSW')
   |? typobi=3
   || EDOKUM.win_edit('KSD')
   ?};
   {? typobi=1
   || EDOKUM.actions('FDEK',_dekr+':'+_dekr,'T',1)
   |? typobi=2
   || EDOKUM.actions('WDEK',_podz+_dekr+':'+_dekr,'T',1)
   |? typobi=3
   || EDOKUM.actions('DDEK',_dekr+':'+_dekr,'T',1)
   ?}
|? _a=5
|| EDOKUM.win_edit('WPR')
?};
{? ~EDOKUM.f_get() || EDOKUM.f_first() ?}


\bobs_wyb_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą wyboru typu w zakresie
::----------------------------------------------------------------------------------------------------------------------
_load:=EDOKUMW.web_cntx_load();
EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.index('ID'); EDOKUM.prefix();
{? _load & EDOKUMW.get() || EDOKUMW.EDOKUM() ?};
OBIEGI.OBIEGKON:=1;
SKID.blank(1);
OBIEGI.FAKT_DEL:=0;
exec('env_edokum_get1','obiegi');
1


\edok_atr_pref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawienie dziedziny EDOK_ATR
::   WE: _a - akronim okienka z dokumentami
::----------------------------------------------------------------------------------------------------------------------
_ref:=web_win_ref(_a);
zakres:={? _a='WPR' || 1 |? _a='AKC' || 2 || 5 ?};
web_params_set(exec('obj_ntab_set','#array',web_params_get(),'zakres',zakres));
{? type_of(_ref)>0 & _ref & EDOKUMW.seek(_ref,ref_name(_ref),1)
|| EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix();
   {? EDOKUMW.EDOKUM
   || EDOKUMW.EDOKUM();
      EDOK_ATK.use('edoknt'+(EDOKUMW.name()+2));
      EDOK_ATK.index('EDOKUM'); EDOK_ATK.prefix(EDOKUMW.EDOKUM);
      EDOK_ATR.use('edokat'+(EDOKUMW.name()+2));
      EDOK_ATR.index('REKKOLED'); EDOK_ATR.prefix(EDOKUMW.EDOKUM,null,'',)
   ?}
|| EDOK_ATK.use('edoknt__');
   EDOK_ATK.index('EDOKUM'); EDOK_ATK.prefix(null);
   EDOK_ATR.use('edokat__');
   EDOK_ATR.index('REKKOLED'); EDOK_ATR.prefix(null,null,'',)
?};
1


\pozf_edokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Pozycje faktury w obiegu
::   WE:   _a -                'PDG' - podglad
::              opcje dla WT:
::                             'AF' - akceptacja faktur
::                             'PF' - przekazanie faktur
::         _b - opcja dla WT- 1 - dla EDOKUMW
::                            2 - dla EDOKUM
::  OLD: \pozf_edokum/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<=0 || _a:='' ?};
{? EDOKUM.TYP().POZF='T'
|| {? EDOKUM.r_lock(1,1,1)
   ||
      {? app_info('web_sesid')<>''
      ||
         PozFEdok:=1;
         {? _b=1
         || EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix(); EDOKUMW.EDOKUM()
         ?};
         _dalej:=exec('env_edokum','obiegi',_a,0);
         {? ~EDOKUM.TYP().TYPVATPR & typobi=1 & _dalej
         || {? app_info('web_sesid')<>'' || exec('czytaj','#stalesys',,FINFO) ?}
         ?};
         POZF.use('pozf__'+(EDOKUM.name()+2));
         POZF.index('EDOKUM'); POZF.prefix(EDOKUM.ref());
         {? EDOKUM.EDI='P' | EDOKUM.EDI='S'
         ||  _okno:='WEREEDIW'
         ||  _okno:='WERFW'
         ?};
         PLUGINS.cntx_psh();
         PLUGINS.index('KOD');
         PLUGINS.prefix('OBG_IMP_POZF_001',);
         _hideImp:={? PLUGINS.first() & PLUGINS.FORMULA<>'' || '' || 'I' ?};
         PLUGINS.cntx_pop();
         {? _a='PF' | exec('blok_pozf','obiegi2')
         || _gray:='grayed=DIPU:DI'
         || _gray:='grayed='+_hideImp+':'+_hideImp
         ?};
         POZF.web_win_init(_okno,,_gray);
         POZF.web_select(_okno)
      ||
         PozFEdok:=1;
         POZF.cntx_psh();
         POZF.use('pozf__'+(EDOKUM.name()+2));
         POZF.index('EDOKUM'); POZF.prefix(EDOKUM.ref());
         _okn:=POZF.mk_edit(,,,,,,'wrapped');
         _zamknij:=POZF.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=top,align=end,display=1'['Zamknij okno'@],"'key:Esc'");
         POZF.btn_eopt(_okn,_zamknij,'tooltip='+exec('help_red_esc','#window','P'));
         _grp:=POZF.grp_make('Pozycje faktury'@,"grp_edisp(EDOKUM,'INFO')",'#pozfsel',,,,,);
         POZF.grp_edit(_grp,EDOKUM,'INFO',,,,,,'maximized',,);
         POZF.grp_splt(_grp,,'horizontal','bottom');
         {? EDOKUM.EDI='P' | EDOKUM.EDI='S' || _win:='WEREEDI' || _win:='WERF' ?};
         exec('bvpozfcen','!fks_dks_dark');
         POZF.fld_opt(_win,'col_name="%1"'[HELPJPK.KOL_CEN],POZF,'C');
         POZF.grp_sel(_grp,,_win,,,,,20,,,,,'maximized_with_title',,1);
         POZF.grp_splt(_grp,'bottom','horizontal','bottom2',',90%');
         POZF.grp_edit(_grp,,_okn,,,,,,'maximized');
         POZF.win_sel(_grp);
         EDOKUM.cntx_psh(); EDOKUM.prefix();
         exec('naz_biez_etap','obiegi');
         EDOKUM.cntx_pop();
         _full:=OBIEGI.B_PREL<>'' & OBIEGI.EDOKOS().OPERACJA='W' & EDOKOS.STATUS<>'T' & EDOKOS.STATUS<>'X' & EDOKUM.ZAM<>'T' &
                (var_pres('zam_dob')<=0 | (var_pres('zam_dob')>0 & zam_dob=0))
                |
                OBIEGI.EDOKOS().OPERACJA='D' & EDOKUM.TYP().DEKR='T' & EDOKOS.STATUS<>'T' & EDOKOS.STATUS<>'X' & EDOKUM.ZAM<>'T' &
                (var_pres('zam_dob')<=0 | (var_pres('zam_dob')>0 & zam_dob=0));
         {? _a='PDG' | zakres=5 || _full:=0 ?};
         PLUGINS.cntx_psh();
         PLUGINS.index('KOD');
         PLUGINS.prefix('OBG_IMP_POZF_001',);
         _hideImp:= {? PLUGINS.first() & PLUGINS.FORMULA<>'' || '' || 'I' ?};
         PLUGINS.cntx_pop();
         {? _win='WERF'
         || POZF.actions(_win,
                        {? _full | exec('szuk_edokpar','obiegi') & var_pres('ED_POZF',EDOKPAR) > 0 & EDOKPAR.ED_POZF='T'
                        || _hideImp+{? EDOKUM.WAL<>FINFO.NAROD ||'T'||''?}+'Z:Z'+_hideImp
                        || 'DpUTZI:DZI'
                        ?})
         || POZF.actions(_win,
                        {? _full | exec('szuk_edokpar','obiegi') & var_pres('ED_POZF',EDOKPAR) > 0 & EDOKPAR.ED_POZF='T'
                        || _hideImp+{? EDOKUM.WAL<>FINFO.NAROD ||'T'||''?}+':'+_hideImp
                        || 'DpUTI:DI'
                        ?})
         ?};
         {? EDOKUM.TYP().RODZ_DOK='Z' || POZF.win_edit('RED_Z') || POZF.win_edit('RED_S') ?};
         POZF.select();
         POZF.cntx_pop()
      ?};
      EDOKUM.r_unlock()
   || FUN.info('Faktura obsługiwana przez innego użytkownika systemu.'@)
   ?};
   VAR_DEL.delete('PozFEdok')
|| FUN.info('Akcja niedostępna dla wskazanego typu faktury.'@)
?}


\rkprz_edokos_okno
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Rekord przed - okienko EDOKOS
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.STATUS:={? EDOKOS.STATUS='T' || 'Tak' || 'Nie' ?};
0


\ae_druk_ety
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Po redakcji okna z iloscia sztuk/stron etykiet
::   WE: _a - 1-sztuk 2-stron
::  OLD: \ae_druk_ety/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| DEFINE.SZTUK:=DEFINE.SZTUK$0;
   {? DEFINE.SZTUK<1 | DEFINE.SZTUK>1000
   || FUN.info('Liczba sztuk powinna być z zakresu 1-1000.'@); 0
   || 1
   ?}
|| DEFINE.ARKUSZY:=DEFINE.ARKUSZY$0;
   {? DEFINE.ARKUSZY<1 | DEFINE.ARKUSZY>1000
   || FUN.info('Liczba arkuszy powinna być z zakresu 1-1000.'@); 0
   || 1
   ?}
?}


\todo_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zadania związane z dokumentem
::----------------------------------------------------------------------------------------------------------------------
exec('todo_select','#b__box',EDOKUM.uidref());
{? EDOKUM.f_active() || EDOKUM.f_rfresh() ?}


\todo_selectw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zadania związane z dokumentem - webterm
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUMW.get()
|| EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix(); EDOKUMW.EDOKUM();
   exec('todo_select','#b__box',EDOKUM.uidref())
|| FUN.info('Nie znaleziono dokumentu.'@)
?}


\one_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zwraca ref jednostki księgowej (ODD) jeśli jest jedyną zadeklarowaną w firmie
::   WY: ODD.ref() lub null
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=null;
ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? ODD.first() & ODD.size()=1 || _zwrot:=ODD.ref() ?};
ODD.cntx_pop();
_zwrot


\bds_atr_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed wyświetl dla pola ETYPY.ATR_ONE
::----------------------------------------------------------------------------------------------------------------------
1


\dsp_edokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla tabeli EDOKUM
::----------------------------------------------------------------------------------------------------------------------
{? typobi=1
|| _okn:=EDOKUM.mk_edit('Faktura w obiegu'@);
   {? EDOKUM.EDOKUM & 'pdf;bmp;png;tiff;tif;jpeg;jpg'*(-EDOKUM.bl_info('EDOKUM','EXTENSION'))>0
   || OBIEGI.PREVIEW:=EDOKUM.EDOKUM;
      EDOKUM.win_ewin(_okn,,'WPR_TEST')
   || EDOKUM.win_ewin(_okn,,'WPR')
   ?};
   {? exec('upgrade2325_blbc1','zbl') & exec('fin_dokumzbc_seek','zbl',EDOKUM)
   || btn_idpf[10]:=EDOKUM.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&Businesscheck'@],
                          "exec('dokumzbc_select','dok_fks1')"
                          )
   ?};
   EDOKUM.win_edit(_okn);
   EDOKUM.display()
|? typobi=2
|| {? EDOKUM.TYP().W_PORTAL='T'
   || exec('akc_display','obe_faw')
   || EDOKUM.win_edit('KSW');
      EDOKUM.display()
   ?}
|| EDOKUM.win_edit('KSD');
   EDOKUM.display()
?}


\bobs_b_usrrol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługa dla tabeli B_USRROL
::----------------------------------------------------------------------------------------------------------------------
exec('env_wt','b_proces');
OBIEGI.B_ROLE:=null;
B_ROLE.index('UNIK'); B_ROLE.prefix(REF.FIRMA);
_par:=web_global_params_get();
{? type_of(_par)>0 & var_pres('B_ROLE',_par)>0 & _par.B_ROLE<>'' & B_ROLE.find_key(_par.B_ROLE)
|| OBIEGI.B_ROLE:=B_ROLE.ref()
?};
1


\dsp_kasprzel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla pola OBIEGI.KASPRZEL
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.KASPRZEL:={? EDOK_ZAL.KASPRZEL='K' || 'Wypłata w kasie' || 'Przelew' ?};
OBIEGI.KASPRZEL


\dob_refresh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Odświeżenie dokumentów w obiegu w WEBTERM
::   WE: _a - 'W' - wprowadzanie
::            'P' - przekazanie
::            'A' - akceptacja
::       _b - 'F' - faktury
::            'W' - wnioski
::            'D' - delegacje
::----------------------------------------------------------------------------------------------------------------------
co_dalej:={? _a='W' || 'R' || _a ?};
typobi:={? _b='F' || 1 |? _b='W' || 2 || 3 ?};
EDOKUM.use('skid_v'+(EDOKUMW.name()+2)); EDOKUM.prefix();
EDOKUMW.prefix();
_ref:={? EDOKUMW.get() || EDOKUMW.EDOKUM(); EDOKUM.ref() || null ?};
_glo:=web_global_params_get();
{? typobi=1
|| {? type_of(_glo)>100 & var_pres('zakrdr1',_glo)>0
   || exec('obiegi_typ','obiegi_akc',_glo.zakrdp3);
      exec('zakres_dob1','obiegi','P','F',_glo.zakrdp2,_glo.zakrdp1,1);
      exec('obiegi_typ','obiegi_akc',_glo.zakrda3);
      exec('zakres_dob1','obiegi','A','F',_glo.zakrda2,_glo.zakrda1,1)
   ?};
   exec('activate','obiegi_akc',_ref);
   _okno:={? PAR_SKID.get(80)='T' || 'WPRGF' || 'WPRGF1' ?};
   EDOKUMW.web_refresh(_okno,'PRZ');
   EDOKUMW.web_refresh(_okno,'AKC')
|? typobi=2
|| {? type_of(_glo)>100 & var_pres('zakrdr1',_glo)>0
   || exec('obiegi_typ','obiegi_akc',_glo.zakrdr3);
      exec('zakres_dob1','obiegi','R','W',_glo.zakrdr2,_glo.zakrdr1,1);
      exec('obiegi_typ','obiegi_akc',_glo.zakrdp3);
      exec('zakres_dob1','obiegi','P','W',_glo.zakrdp2,_glo.zakrdp1,1);
      exec('obiegi_typ','obiegi_akc',_glo.zakrda3);
      exec('zakres_dob1','obiegi','A','W',_glo.zakrda2,_glo.zakrda1,1)
   ?};
   exec('activate','obiegi_akc',_ref);
   EDOKUMW.web_refresh('WPRGW','WPR');
   EDOKUMW.web_refresh('WPRGW','PRZ');
   EDOKUMW.web_refresh('WPRGW','AKC')
|| {? type_of(_glo)>100 & var_pres('zakrdr1',_glo)>0
   || exec('obiegi_typ','obiegi_akc',_glo.zakrdr3);
      exec('zakres_dob1','obiegi','R','D',_glo.zakrdr2,_glo.zakrdr1,1);
      exec('obiegi_typ','obiegi_akc',_glo.zakrdp3);
      exec('zakres_dob1','obiegi','P','D',_glo.zakrdp2,_glo.zakrdp1,1);
      exec('obiegi_typ','obiegi_akc',_glo.zakrda3);
      exec('zakres_dob1','obiegi','A','D',_glo.zakrda2,_glo.zakrda1,1)
   ?};
   exec('activate','obiegi_akc',_ref);
   EDOKUMW.web_refresh('WPRGD','WPR');
   EDOKUMW.web_refresh('WPRGD','PRZ');
   EDOKUMW.web_refresh('WPRGD','AKC')
?}


\atr_wym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla pola OBIEGI.ATR_WYM
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.use(ref_name(EDOK_ATR.EDOKUM)); EDOKUM.prefix(); EDOK_ATR.EDOKUM().TYP();
ETYP_ATR.index('KOLZ'); ETYP_ATR.prefix(ETYPY.ref(),null,EDOK_ATR.KOL);
OBIEGI.ATR_WYM:={? ETYP_ATR.first() & ETYP_ATR.WYMAG='T' || 'T' || 'N' ?};
OBIEGI.ATR_WYM


\edokum_idadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Ustawia EDOKUM na podstawie IDADD
::   WE: _a - akronim tabeli
::       _b - IDADD lub refsql
::   WY: Czy udało się ustawienie?
::----------------------------------------------------------------------------------------------------------------------
_tab:=($_a)();
{? _b*'/'=0
|| _tab.use(8+_b);
   _tab.prefix();
   {? _tab.seek(BIT.sqlint(_b),)
   || _tab.index('IDADD');
      _tab.prefix(_tab.IDADD);
      {? _a<>'EDOKUM'
      || EDOKUM.use('skid_v'+(8+_b+2))
      ?};
      1
   ?}
|| _sql:=sql('select REFERENCE as REF from @'+_a+' where IDADD=\':_a\'',_b);
   {? _sql.first()
   || {? _a<>'EDOKUM'
      || EDOKUM.use('skid_v'+(8+_sql.REF+2))
      ?};
      _tab.use(8+_sql.REF);
      _tab.index('IDADD');
      _tab.prefix(_b);
      _tab.first()
   ?}
?}


\be_edokum_tr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.02]
:: OPIS: Przed redakcją pola EDOKUM.TR
::----------------------------------------------------------------------------------------------------------------------
{? (6+cur_tab(1,1).name())='skid_y'
|| exec('szuk_edokpar','obiegi') & EDOKPAR.ED_OPOP='T'
|| 1
?}


\bu_skid_mbn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Przed obsługa okna grupowego SKID_MBN po webTermrm
::----------------------------------------------------------------------------------------------------------------------
SKID_MBN.prefix();
{? PAR_SKID.get(459)='T'
|| OPERATOR.USER:={? exec('getUser','users',app_info('web_user')) || USERS.ref() || null ?};
   SKID_MBN.f_set(
      'KOD',
      'join SKID_MBP using(SKID_MBN.REFERENCE,SKID_MBP.SKID_MBN) '
      'join K_ROLE_D using(SKID_MBP.REFERENCE,K_ROLE_D.SKID_MBP) '
      'join K_ROLE using(K_ROLE_D.K_ROLE,K_ROLE.REFERENCE) '
      'join K_ROLE_U using (K_ROLE_U.K_ROLE,K_ROLE.REFERENCE) ',
      'K_ROLE_U.USERS=:_a and K_ROLE.TYPE=\'B\'',
      OPERATOR.USER
   )
|| SKID_MBN.f_set(
      'KOD',,
      'SKID_MBN.CZY_OFZ=\'T\''
   )
?};
1


\wt_skid_mbn_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Akcja Wybierz okna SLO_WT2 tabeli SKID_MBN
::----------------------------------------------------------------------------------------------------------------------
EPODZ.web_cntx_load();
UD_POM.MODEL_WT:=SKID_MBN.KOD;
web_top_close();
web_top_fld_update(1,1);
~~


\bv_wt_model
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Przed wyświetleniem pola UD_POM.MODEL_WT
::----------------------------------------------------------------------------------------------------------------------


\be_wt_model
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Przed redakcją pola UD_POM.MODEL_WT
::----------------------------------------------------------------------------------------------------------------------
exec('be_epodz_mb','obiegi')


\f3_wt_model
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Klawisz F3 dla pola UD_POM.MODEL_WT
::----------------------------------------------------------------------------------------------------------------------
EPODZ.web_cntx_save();
SKID_MBN.web_select('SLO_WT_G')


\ae_wt_model
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Po redakcji pola UD_POM.MODEL_WT
::----------------------------------------------------------------------------------------------------------------------
{? UD_POM.MODEL_WT=''
|| FUN.info('Nie wybrano modelu.'@); 0
|| SKID_MBN.index('OFZ'); SKID_MBN.prefix('O','T',UD_POM.MODEL_WT);
   {? SKID_MBN.first()
   || _ok:=0;
      {? PAR_SKID.get(459)='T'
      || OPERATOR.USER:={? exec('getUser','users',app_info('web_user')) || USERS.ref() || null ?};
         _sql:=sql(
            'select SKID_MBN.KOD, SKID_MBN.REFERENCE as REF from SKID_MBN '
            'join SKID_MBP using(SKID_MBN.REFERENCE,SKID_MBP.SKID_MBN) '
            'join K_ROLE_D using(SKID_MBP.REFERENCE,K_ROLE_D.SKID_MBP) '
            'join K_ROLE using(K_ROLE_D.K_ROLE,K_ROLE.REFERENCE) '
            'join K_ROLE_U using (K_ROLE_U.K_ROLE,K_ROLE.REFERENCE) '
            'where K_ROLE_U.USERS=:_a and K_ROLE.TYPE=\'B\' order by 1',
            OPERATOR.USER
         );
         {? _sql.find_key(UD_POM.MODEL_WT)
         || SKID_MBN.prefix();
            {? SKID_MBN.seek(_sql.REF,)
            || _ok:=1
            ?}
         ?}
      || _ok:=1
      ?};
      {? _ok
      || EPODZ.SKID_MB:=SKID_MBN.ref();
         UD_POM.MODEL_WT:=EPODZ.SKID_MB().KOD;
         exec('ae_skidxd_mb','control')
      || FUN.info('Nie znaleziono modelu: %1.'@[UD_POM.MODEL_WT]); 0
      ?}
   || FUN.info('Nie znaleziono modelu: %1.'@[UD_POM.MODEL_WT]);
      0
   ?}
?}


\pocz_dob_obg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [WS] [1210]
:: OPIS: wart. pocz. data operacji DOK.DOP
::  OLD: \pocz_dop/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| date(0,0,0)
|| {? date()>=SSTALE.AO().POCZ & date()<=SSTALE.AO().KON
   || date()
   |? POMOC.DT>=SSTALE.AO().POCZ & POMOC.DT<=SSTALE.AO().KON
   || POMOC.DT
   |? date()>SSTALE.AO().KON
   || SSTALE.AO().KON
   |? date()<SSTALE.AO().POCZ
   || SSTALE.AO().POCZ
   ?}
?}


\pocz_dw_obg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [WS] [1210]
:: OPIS: wart. pocz. data operacji DOK.DOP
::  OLD: \pocz_dop/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| date(0,0,0)
|| {? date()>=SSTALE.AO().POCZ & date()<=SSTALE.AO().KON
   || date()
   |? POMOC.DT>=SSTALE.AO().POCZ & POMOC.DT<=SSTALE.AO().KON
   || POMOC.DT
   |? date()>SSTALE.AO().KON
   || SSTALE.AO().KON
   |? date()<SSTALE.AO().POCZ
   || SSTALE.AO().POCZ
   ?}
?}


\pocz_do_obg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [WS] [1210]
:: OPIS: wart. pocz. data operacji DOK.DOP
::  OLD: \pocz_dop/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| date(0,0,0)
|| {? date()>=SSTALE.AO().POCZ & date()<=SSTALE.AO().KON
   || date()
   |? POMOC.DT>=SSTALE.AO().POCZ & POMOC.DT<=SSTALE.AO().KON
   || POMOC.DT
   |? date()>SSTALE.AO().KON
   || SSTALE.AO().KON
   |? date()<SSTALE.AO().POCZ
   || SSTALE.AO().POCZ
   ?}
?}

\rodz_biez_etap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Zwraca rodzaj biezacego etapu
::   WE: _a - EDOKUM.ref [biezacy]
::   WY: SCH_OBE.RODZAJ
::  OLD: \rodz_biez_etap/skid_obi.fml
::----------------------------------------------------------------------------------------------------------------------
::   Uwaga PRC - formula wykorzystywana przez procedury wbudowane!
::----------------------------------------------------------------------------------------------------------------------
{? (_=0) | (_a=~~) | (type_of(_a)<>type_of(null()))
   | (_a=null()) | (ref_name(_a)<>EDOKUM.name())
|| _a:=EDOKUM.ref()
?};

_odp:=''; _ok:=1;
EDOKOS.cntx_psh();
{? (EDOKOS.name()+2)<>(EDOKUM.name()+2)
|| EDOKOS.use((EDOKOS.name(1)-2)+(EDOKUM.name()+2))
?};
EDOKOS.index('SZUK2'); EDOKOS.prefix(EDOKUM.ref(),'D');
{? EDOKOS.first() || _odp:='D' ?};
{? _odp=''
|| EDOKOS.index('SZUK11'); EDOKOS.prefix(_a,'T');
   {? EDOKOS.last() || _odp:=EDOKOS.OPERACJA ?}
?};
EDOKOS.cntx_pop();
_odp


\besldob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Przed redkacją SKID.SL_KH
::----------------------------------------------------------------------------------------------------------------------
exec('tabkhini','kontrahent');
1


\be_kurs_dob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [20xx]
:: OPIS: Przed redakcją EDOKUM.KURS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.WAL<>FINFO.NAROD || 1 || 0 ?}


\ae_kurs_dob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [20xx]
:: OPIS: Po redakcji EDOKUM.KURS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
fld(fld$6);1


\nazwa_ppsf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Funkcja zwraca nazwę dla wniosku o pracę poza siedzibą firmy
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Wniosek o pracę poza siedzibą firmy'


\nazwa_ppsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Funkcja zwraca nazwę dla wniosku o polecenie pracy poza siedzibą firmy
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Polecenie pracy poza siedzibą firmy'


\nazwa_oopz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Funkcja zwraca nazwę dla oświadczenia o warunkach pracy zdalnej
::----------------------------------------------------------------------------------------------------------------------
'Oświadczenie o pracy zdalnej'


\nazwa_wpzds
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Funkcja zwraca nazwę dla wniosku o pracę zdalną stałą
::----------------------------------------------------------------------------------------------------------------------
'Wniosek o pracę zdalną stałą'


\nazwa_wpzdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Funkcja zwraca nazwę dla wniosku o pracę zdalną okazjonalną
::----------------------------------------------------------------------------------------------------------------------
'Wniosek o pracę zdalną okazjonalną'

:Sign Version 2.0 jowisz:1045 2023/12/28 17:39:52 2766cac71bcbb67058868a8b2a10e73c915f3d9f58bf51dd007883a9e8d2ed4fe3f0aaa01b45e658c8861c6319bbc1e819d82514cfb633d8e1fe4f053097da8a57a02cae7d2169008c59869a471ae5fae22205ed9d1a64ca036314cf32c353b70e8020103266bbc91bc2f4bc19d8004a3fd5f60081522a6201b359090f605743
