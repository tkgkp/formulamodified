:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: phr_druk.fml
:: Utworzony: 12.07.2017
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuly pomocnicze dla raportów obszarów zarządzania kapitałem ludzkim.
::======================================================================================================================


\string2rep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formatuje podany tekst dla dyrektywy REP.
::   WE:  _a  [STRING] - Tekst do sformatowania dla dyrektywy REP.
::       [_b] [NUMBER] - Położenie lewego marginesu (w znakach) [domyślnie: 0].
::       [_c] [NUMBER] - Długość linii (w znakach) [domyślnie: charleft()].
::   WY: ciąg znaków dla dyrektywy REP
::  OLD: \string2rep/zz_print.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | form(_a)='' || return('') ?};
_margin:={? var_pres('_b')<>type_of(0) | _b<=0 || 0 || _b ?};
_width:={? var_pres('_c')<>type_of(0) | _c<=0 || charleft()-_margin || _c ?};

_text:=form(_a);
_pat1:=obj_new(2);
_rep1:=obj_new(2);
_pat1[1]:='\t';
_rep1[1]:=' ';
_pat1[2]:='\'';
_rep1[2]:='\\\'';
_text:=gsub(_text,_pat1,_rep1);

_pat2:=obj_new(5);
_pat2[1]:='  ';
_pat2[2]:=' .';
_pat2[3]:=' ,';
_pat2[4]:=' ?';
_pat2[5]:=' !';
{! _ndx:=1 .. obj_len(_pat2)
|! _str:=_pat2[_ndx];
   {!
   |? _text*_str
   |! _text:=gsub(_text,_str,_str+1)
   !}
!};

_str:=spli_str(_text,'\n');
_text:='';
{! _ii:=1 .. obj_len(_str)
|! _text+='{JUSTIFY}';
   STR.spl_word();
   STR.split(_str[_ii]);
   {!
   |? +(_linia:=STR.line(_width))
   |! _text+=
         {? STR.next()
         || '{<%1>%2 \'%3\' }' [$_margin,$(_margin+_width),_linia]
         || '{CENTER}{<%1 \'%2\' }' [$_margin,_linia]
         ?}+'{LINE}'
   !}
!};

_text


\memo2rep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Zwraca zawartość pola notatnikowego podzieloną na linie o określonej długości.
::   WE: _a - alias do tabeli z której ma być pobrany tekst pola notatnikowego
::       _b - akronim pola, w którym przechowywana jest treść notatki
::       _c - wskazanie na rekord, dla którego ma być pobrana notatka
::       _d - (opcjonalny) położenie lewego marginesu (w znakach)
::       _e - (opcjonalny) długość linii (w znakach)
::   WY: ciąg znaków dla dyrektywy REP
::  OLD: \memo2rep/zz_print.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(SYSLOG) | var_pres('_b')<>type_of('') | _b='' | var_pres('_c')<>type_of(null) | _c=null
|| return('')
?};

_text:='';
_a.cntx_psh();
_a.prefix();
{? _a.seek(_c)
|| _text:=_a.memo_txt(,1,_b);
   _text:=exec('string2rep','phr_druk',_text,
      {? var_pres('_d')=type_of(0) || _d ?},
      {? var_pres('_e')=type_of(0) || _e ?}
   )
?};
_a.cntx_pop();
_text


\web_chart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2011]
:: OPIS: Generuje wykres pajęczynowy dla oceny całkowitej (ZO_TEST).
::   WE: _a [REFERENCE] - Wskazanie na rekord w tabeli ZO_TEST [domyślnie: bieżący].
:: ~OST: INTMPDIR, INFCOPY, INFEXISTS, INBLPUT
::  OLD: \web_chart/zz_data.fml
::----------------------------------------------------------------------------------------------------------------------
{? -cli_ver()<>'jterm'
:: Funkcjonalność tworzenia wykresu dostępna jest (ze względów technologicznych) WYŁĄCZNIE dla jTerm-a.
|| return(0)
?};

_jar:='spider.jar';
_img:='wykres.png';
_dir:=tmp_dir();
_path:=gsub(_dir+'/'+_jar,'\\','/');
_file:=gsub(_dir+'/'+_img,'\\','/');

{? ~fcopy(_jar,'@'+_path,1,0,1)
|| return(0)
?};

_lib:=lib_load(_path,1,1);
: czy wczytano biblioteke?
{? _lib<=0
|| return()
?};

: mapuj metody biblioteczne
_clear:=lib_decl(_lib,,'void','clear');
_title:=lib_decl(_lib,,'void','setTitle','char *');
_knot:=lib_decl(_lib,,'void','putKnot','char *','char *','double');
_radius:=lib_decl(_lib,,'void','putRadius','char *','char *');
_thread:=lib_decl(_lib,,'void','putThread','char *','char *');
_color:=lib_decl(_lib,,'void','putColor','char *','char *');
_value:=lib_decl(_lib,,'void','putValue','char *','double');
_spin:=lib_decl(_lib,,'void','spin');

_set_name:=lib_decl(_lib,,'void','setName','char *');
_get_name:=lib_decl(_lib,,'String','getName');

ZO_TEST.cntx_psh();
{? var_pres('_a')=type_of(null()) & ref_tab(_a)=ZO_TEST
|| ZO_TEST.prefix();
   {? ~ZO_TEST.seek(_a)
   || ZO_TEST.cntx_pop();
      lib_free(_lib);
      return()
   ?}
?};

exec('for_each','phr_tab',"_a.cntx_psh",ZZ_KOMPS,ZZ_KOMPZ,ZO_KOMP,ZO_OCENA);

: przygotowanie danych
lib_call(_set_name,_file);
lib_call(_title,ZO_TEST.ZO_OSOBA().ZO_PROC().ZO_PROG().NAZWA);
_typ_ou:=exec('typ_ou','phr_dane');

ZO_KOMP.index('OCENA');
ZO_OCENA.index('NAZWA');
ZO_OCENA.prefix(ZO_TEST.ref());
_loop:=ZO_OCENA.first();
{!
|? _loop
|! {? ZO_OCENA.ZZ_KOMP
   || ZO_OCENA.ZZ_KOMP();
      lib_call(_radius,$ZZ_KOMP.ref(),ZZ_KOMP.NAZWA)
   ?};
   {? ZO_OCENA.ZZ_TYP
   || ZO_OCENA.ZZ_TYP();
      lib_call(_thread,$ZZ_TYP.ref(),ZZ_TYP.NAZWA);
      _rgb:=
         {? ZZ_TYP.KOD='ED' || '255:255:0'
         |? ZZ_TYP.KOD='HR' || '255:128:0'
         |? ZZ_TYP.KOD='PB' || '255:0:0'
         |? ZZ_TYP.KOD='PS' || '0:255:0'
         |? ZZ_TYP.KOD='PW' || '128:0:0'
         |? ZZ_TYP.KOD='WB' || '0:0:255'
         |? ZZ_TYP.KOD='WI' || '0:0:128'
         |? ZZ_TYP.KOD='OU' || '128:0:128'
         || '0:0:0'
         ?};
      lib_call(_color,$ZZ_TYP.ref(),_rgb)
   ?};
   {? ZO_OCENA.ZZ_KOMP & ZO_OCENA.ZZ_TYP & ZO_OCENA.AE
   || lib_call(_knot,$ZZ_KOMP.ref(),$ZZ_TYP.ref(),ZO_OCENA.AE)
   ?};
   {? ZO_OCENA.ZZ_KOMP & ~ZO_OCENA.ZZ_TYP
   || lib_call(_thread,'zz_typ_1','wartość oczekiwana');
      lib_call(_color,'zz_typ_1','128:128:128');
      lib_call(_knot,$ZZ_KOMP.ref(),'zz_typ_1',ZO_OCENA.EX);
:     ocene calkowita dodaj tylko gdy nie ma uzgodnionej
      ZO_KOMP.prefix(ZO_TEST.ref(),ZO_OCENA.ZZ_KOMP);
      {? ~ZO_KOMP.find_key(_typ_ou)
      || lib_call(_thread,'zz_typ_2','ocena całkowita');
         lib_call(_color,'zz_typ_2','128:0:128');
         lib_call(_knot,$ZZ_KOMP.ref(),'zz_typ_2',ZO_OCENA.AE)
      ?};

      ZZ_KOMPS.index('OPIS');
      ZZ_KOMPS.prefix(ref_name(ZO_TEST.ZZ_DOK),ZO_TEST.ZZ_DOK,ZZ_KOMP.ref());
      _loop:=ZZ_KOMPS.first();
      {? ~_loop
      || ZZ_KOMPS.prefix(ref_name(ZZ_KOMP.ZZ_DOK),ZZ_KOMP.ZZ_DOK,ZZ_KOMP.ref());
         _loop:=ZZ_KOMPS.first()
      ?};
      {!
      |? _loop
      |! lib_call(_value,$ZZ_KOMP.ref(),ZZ_KOMPS.WARTOSC);
         _loop:=ZZ_KOMPS.next()
      !};
      ZZ_KOMPZ.index('UNIQUE');
      ZZ_KOMPZ.prefix(ref_name(ZO_TEST.ZZ_DOK),ZO_TEST.ZZ_DOK,ZZ_KOMP.ref());
      _first:=ZZ_KOMPZ.first();
      {? ~_first
      || ZZ_KOMPZ.prefix(ref_name(ZZ_KOMP.ZZ_DOK),ZZ_KOMP.ZZ_DOK,ZZ_KOMP.ref());
         _first:=ZZ_KOMPZ.first()
      ?};
      {? _first
      || {! _n:=ZZ_KOMPZ.MIN .. ZZ_KOMPZ.MAKS
         |! lib_call(_value,$ZZ_KOMP.ref(),_n)
         !}
      ?}
   ?};
   _loop:=ZO_OCENA.next()
!};

exec('for_each','phr_tab',"_a.cntx_pop()",ZZ_KOMPS,ZZ_KOMPZ,ZO_KOMP,ZO_OCENA);

lib_call(_spin);

{? fexists('@'+_file,0)
|| ZZ_DOKZ.cntx_psh();
   UD_DEF.cntx_psh();
   _typ:=exec('typzal_rep','phr_dane',ZO_TEST,1).UD_SKL;
   UD_DEF.cntx_pop();
   {? exec('get_dokz','phr_dane',ZO_TEST,_typ,'Wykres wyników','WYKRES-1')
   || {? ZZ_DOKZ.bl_put('PLIK','@'+_file,0,,_img,1)
      || ZZ_DOKZ.bl_file('PLIK',1)
      ?}
   ?};
   ZZ_DOKZ.cntx_pop();
   ferase(_file,0)
?};

ZO_TEST.cntx_pop();
lib_free(_lib)


\save_buf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2011]
:: OPIS: Tworzy i wypelnia tablice zawierajaca aktualne wartosci pol bufora tabeli lub zmiennej.
::   WE: _a - alias do tabeli lub zmiennej
::----------------------------------------------------------------------------------------------------------------------
_len:=_a.fld_num;
_buf:=obj_new(_len);
{! _fld:=1.._len
|! _buf[_fld]:=_a[_fld]
!};
_buf


\zz_komps
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Zwraca tekst sformatowany na podstawie wartości słownikowych.
::   WE: _a - wskazanie na rekord, dla którego mają być pobrane dane
::       _b - wskazanie na kompetencję
::       _c - (opcjonalny) położenie lewego marginesu (w znakach)
::  OLD: \zz_komps/zz_print.fml
::----------------------------------------------------------------------------------------------------------------------
_margin:={? var_pres('_b')<>type_of(0) | _b<=0 || 0 || _b ?}+3;
_text:='';

ZZ_KOMPS.cntx_psh();
ZZ_KOMPS.index('WARTOSC');
ZZ_KOMPS.prefix(ref_name(_a),_a,_b);
_loop:=ZZ_KOMPS.first();
{!
|? _loop
|! _text+='{>'+$_margin+' '+$ZZ_KOMPS.WARTOSC+'}';
   _text+=exec('string2rep','phr_druk',ZZ_KOMPS.OPIS,_margin+2,125);
   _text+=exec('memo2rep','phr_druk',ZZ_DOK,'NOTA',ZZ_KOMPS.ZZ_DOK,_margin+2);
   _loop:=ZZ_KOMPS.next()
!};
ZZ_KOMPS.cntx_pop();
_text


\zz_kompk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Zwraca tekst sformatowany na podstawie wartości kodowanych.
::   WE: _a - wskazanie na rekord, dla którego mają być pobrane dane
::       _b - wskazanie na kompetencję
::       _c - (opcjonalny) położenie lewego marginesu (w znakach)
::  OLD: \zz_kompk/zz_print.fml
::----------------------------------------------------------------------------------------------------------------------
_margin:={? var_pres('_c')<>type_of(0) | _c<=0 || 0 || _c ?}+3;
_text:='';

ZZ_KOMPK.cntx_psh();
ZZ_KOMPK.index('WARTOSC');
ZZ_KOMPK.prefix(ref_name(_a),_a,_b);
_loop:=ZZ_KOMPK.first();
{!
|? _loop
|! _text+='{>'+$_margin+' '+$ZZ_KOMPK.WARTOSC+'}';
   _text+=exec('string2rep','phr_druk',ZZ_KOMPK.KOD+' '+ZZ_KOMPK.OPIS,_margin+2,125);
   _text+=exec('memo2rep','phr_druk',ZZ_DOK,'NOTA',ZZ_KOMPK.ZZ_DOK,_margin+2);
   _loop:=ZZ_KOMPK.next()
!};
ZZ_KOMPK.cntx_pop();
_text


\zz_kompz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Zwraca tekst sformatowany na podstawie wartości bezpośrednich.
::   WE: _a - wskazanie na rekord, dla którego mają być pobrane dane
::       _b - wskazanie na kompetencję
::       _c - (opcjonalny) położenie lewego marginesu (w znakach)
::  OLD: \zz_kompz/zz_print.fml
::----------------------------------------------------------------------------------------------------------------------
_margin:={? var_pres('_b')<>type_of(0) | _b<=0 || 0 || _b ?}+3;
_text:='';

exec('zz_komzb_fill','phr_widok',_a,_b);
_loop:=ZZ_KOMZB.first();
{!
|? _loop
|! _text+='{>'+$_margin+' '+$ZZ_KOMZB.WARTOSC+'}';
   _text+=exec('string2rep','phr_druk',ZZ_KOMZB.NAZWA,_margin+2,125);
   _loop:=ZZ_KOMZB.next()
!};
_text

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:20 1fc33a74727fc33f9e38b66f5b59fb8e12f09f1d17180fb179975a9c29892a3190f78b6c6b6dd3ad062a5032868026ef1b0dcd692b360674b43df7dd701606cb0fbe46bf05bc265bafd87a5d0edc9b3ab05ab9b0dfe75deae46c3a8d1d4f9a33927922709be2a23ae88637056dba2d6004e77381c537a181db9c803d9c06126e
