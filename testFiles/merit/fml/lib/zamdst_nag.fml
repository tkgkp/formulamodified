:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zamdst_nag.fml
:: Utworzony: 09.09.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Zamówienia dostaw - nagłówek
::======================================================================================================================


\be_znmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed redakcja pola ZD_NAG.MG
::   WY: 0/1 czy mozna redagowac pole
::  OLD: \be_znmag/zd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('magazyny','zamdst_wspolne');
_var_zdnagpop:=params_get().var_zdnagpop;
_wyn:=PD_Z.WHERE='';
_var_zdnagpop.MG:=fld();
_wyn


\ae_znmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed edycja dla ZD_NAG.MG
::   WY: 1/0
::  OLD: \ae_znmag/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? ZD_NAG.MG<>null() & ZD_NAG.MG().COS='T'
|| {? ZD_NAG.MG().DLAKH<>null() & ZD_NAG.KH<>ZD_NAG.MG().DLAKH
   || FUN.info('Wskazano magazyn konsygnacyjny dla %1.\n'
               'Wybór magazynu niemożliwy.'@[ZD_NAG.MG().DLAKH().SKR]);
      _wyn:=0
   |? ~ZD_NAG.KH().COS
   || FUN.info('Nie zdefiniowano obsługi magazynów konsygnacyjnych dla dostawcy: %1.\n'
               'Wybór magazynu niemożliwy.'@[ZD_NAG.KH().SKR]);
      _wyn:=0
   ?}
?};
_wyn


\be_zd_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed edycja dla ZD_NAG.KH
::   WY: 1/0
::  OLD: \be_zd_kh/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZD_NAG.PROJEKTY
   & ZD_NAG.KH
   & ZD_NAG.T().PROJZKH='T'
|| return(0)
?};

exec('czy_ptw','zamdst_ptw')


\ae_zd_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po edycji kontrahenta w naglowku zamowienia dostaw
::   WE: [_a] 0 - wywołanie po edycji pola (domyślnie), 1 - wywołanie programowe
::  OLD: \ae_zd_kh/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0)
|| _a:=0
?};

_f_nip_pole:=(cur_tfld()=INTRAST & cur_afld()='F_NIP');
{? ~_a & ~_f_nip_pole & fld()=null
|| exec('find_sql','#table','KH','SNIP;KOD;NAZ;SKR;MIASTO;UL;DOM;LOKAL','','ZD_NAG.KH','13;5;25;10;15','RED','','')
?};
{? exec('ae_kh','kontrahent',,ZD_NAG.KH)
||
:: NIP UE
   {? INTRAST.NIP<>''
   ||
      _nip:=INTRAST.NIP;
      _snip:={? (1+(2-_nip))=' ' || (2+_nip)+(3-_nip) || _nip ?};
      NIPY.index('SNIP');
      NIPY.prefix(ZD_NAG.KH,_snip);
      {? NIPY.first()
      ||
         INTRAST.NIP:=ZD_NAG.NIP_UE:={? NIPY.next() || '' || exec('nip_ue','kontrahent') ?}
      ||
         INTRAST.NIP:=ZD_NAG.NIP_UE:=''
      ?}
   ?};
   {? INTRAST.NIP=''
    & (ZD_NAG.KH().TYP='U' | (ZD_NAG.T().TYPYDOK<>null() & ZD_NAG.T().TYPYDOK().UE='T'))
   ||
      ZD_NAG.NIP_UE:='';
      NIPY.index('SNIP');
      NIPY.prefix(ZD_NAG.KH);
      {? NIPY.first()
      ||
         INTRAST.NIP:=ZD_NAG.NIP_UE:={? NIPY.next() || '' || exec('nip_ue','kontrahent') ?};
         {? INTRAST.NIP=''
         ||
::          Jeżeli do kontrahenta przypisano więcej NIP-ów, to sprawdzam czy posiada NIP domyślny
            NIPY.index('DEFAULT');
            NIPY.prefix(ZD_NAG.KH,'T');
            {? NIPY.first()
            ||
               INTRAST.NIP:=ZD_NAG.NIP_UE:={? NIPY.next() || '' || exec('nip_ue','kontrahent') ?}
            ?}
         ?}
      ?}
   ?};
:: NIP
   {? ZD_NAG.KH
   || {? ZD_NAG.KH().SNIP=ZD_NAG.KH().PESEL
      || INTRAST.F_NIP:=''
      || INTRAST.F_NIP:=ZD_NAG.KH().SNIP
      ?}
   || INTRAST.F_NIP:=''
   ?};
   _poz_pl:=0;
   ZD_NAG.PL:=
      {? XINFO.SLP<>null & ZD_NAG.KH<> null()
      || _plat:=exec('sp_plat','kontrahent',ZD_NAG.KH);
         {? _plat=null & ZD_NAG.PL<>null
            & FUN.ask('Kontrahent %1 - %2 \nnie ma przypisanej domyślnej formy płatności.\n'
                  'Czy pozostawić aktualnie podaną?'@[ZD_NAG.KH().KOD, ZD_NAG.KH().NAZ])
         || _poz_pl:=-1;
            ZD_NAG.PL
         || _plat
         ?}
      || null
      ?};
   {? _poz_pl<>-1
   || FZ.FORMAPLA:=ZD_NAG.PL().KOD;
      FZ.PL:=ZD_NAG.PL;
      FZ.TERMPLAT:={? ~_poz_pl || exec('term_plat','faktury_plat',,'N',ZD_NAG.ref()) || FZ.TERMPLAT ?};
      ZD_NAG.TZ:=FZ.TERMPLAT
   ?};
   exec('set_efld_opt','zamdst_nag')
?}


\ae_zdkon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: Po redakcji pola ZD_NAG.ZKON
::  OLD: \ae_zdkon/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()<>null
|| {? ZD_NAG.KH=null
   || ZD_NAG.KH:=ZD_NAG.ZKON().KH;
      exec('ae_zd_kh','zamdst_nag',1)
   ?}
?};
1


\zdnag_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: dolaczenie nowego zamowienia dostaw
::  OLD: \zd_dol/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_bie_zam:=#ZD_NAG.ref;
POM.TAB:='ZD_NAG';
POM.TYPDOK:=BEER.TYPYZAM().KOD;
INTRAST.NIPUE:='';

exec('magazyny','zamdst_wspolne');

ZD_NAG.cntx_psh();
ZD_NAG.win_edit('RED');
ZD_NAG.blank();
exec('zd_pst','zamdst_nag');
ZD_NAG.clear();
_new_zam:=null;
{? ZD_NAG.add() & ZD_NAG.r_lock(1,1,1)
||
   _new_zam:=ZD_NAG.ref();

   _var_zdnagpop:=exec('var_zdnagpop','zamdst_nag');
   _var_zdnagpop.KH:=null();
   _var_zdnagpop.WAL:=null();
   _var_zdnagpop.KRS:=0;
   _var_zdnagpop.MG:=null();
   _var_zdnagpop.D_POTW:=date(0,0,0);
   _var_zdnagpop.KH_MSC:=null();
   _var_zdnagpop.PO_FIRST:=1;

:: Parametr 'context' wykorzystywany w:
:: - exec('zamdst_pozycje_red','zamdst_nag')
:: - exec('zamdst_zakoncz_red','zamdst_nag')
:: Parametr 'var_zdnagpop' wykorzystywany w:
:: - exec('zamdst_pozycje_red','zamdst_nag')
:: - exec('zamdst_zakoncz_red','zamdst_nag')
:: - exec('zdnag_pop_po','zamdst_nag',_dod_nag)
   params_set('context',params_get(),'var_zdnagpop',_var_zdnagpop);

   exec('zdnag_win_edit_set','zamdst_nag');
   ZD_NAG.memo_set('','UW');

:: Wtyczka do uzupełnienia projektu lub ewentualnie innych wartości początkowych
   {? Plugin.runnable('ZWS_PROJ_003')
   || _proj_ref:={? var_pres('__PROJ_REF')=type_of('') || __PROJ_REF || '' ?};
      Plugin.run('ZWS_PROJ_003','ZD_NAG',_proj_ref)
   ?};

   {? ZD_NAG.edit("params_exec('zdnag_chk','zamdst_nag')")
:: dodanie zamówienia
   || {? ZD_NAG.NR<>0 & ZD_NAG.SYM='' || exec('znak','numery','ZD_NAG') ?};
      ZD_NAG.BL_STAT:=exec('zdnag_blstat_bl','zamdst_nag');
      _wyn:=ZD_NAG.put();
      {? _wyn & _var_zdnagpop.PO_FIRST=1
      ||
         ZD_NAG.memo_put(,'UW');
         {? exec('FindInSet','#table','ZD_POZ','POZ',ZD_NAG.ref())=null()
         || BPMN.END:=1;
            exec('zd_poz','zamdst_poz');
            {? BPMN.END=2 & exec('FindInSet','#table','ZD_POZ','POZ',ZD_NAG.ref())<>null()
            || exec('zdnag_zakoncz_red','zamdst_nag')
            ?}
         ?};
         exec('inf_dod','fakso',0,'zdnag')
      |? _wyn
      || exec('inf_dod','fakso',0,'zdnag')
      ?};
      ZD_NAG.r_unlock()
:: rezygnacja z dodania zamówienia
   || _uidref:=ZD_NAG.uidref();
      exec('zdnag_usu','zamdst_nag',1);
      {? ~ZD_NAG.seek(_uidref) || _new_zam:=null ?}
   ?}
|| FUN.info('Nieudana próba zablokowania tabeli nagłówków zamówień.\nSpróbuj ponownie.'@)
?};
ZD_NAG.cntx_pop();
{? _new_zam=null
||
   {? _bie_zam>0 || ZD_NAG.seek(_bie_zam,) ?}
||
   {? ZD_NAG.seek(_new_zam)=0
   ||
      FUN.info('Aktualnie zredagowane zamówienie nie jest dostępne w ustawionym zakresie widoku zamówień.'@);
      {? _bie_zam>0 || ZD_NAG.seek(_bie_zam,) ?}
   ?}
?};
MG.f_clear();
_wyn


\zdnag_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja rekord po dla ZD_NAG
::  OLD: \zdn_chk/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_var_zdnagpop:=params_get().var_zdnagpop;
_mg:=_var_zdnagpop.MG;
_po_first:=_var_zdnagpop.PO_FIRST;

{? _po_first=1
|| _var_zdnagpop.MG:=ZD_NAG.MG;
   _var_zdnagpop.D_POTW:=ZD_NAG.D_POTW
?};
{? ZD_NAG.KH_MSC<>_var_zdnagpop.KH_MSC || ZD_NAG.put(1); _var_zdnagpop.KH_MSC:=ZD_NAG.KH_MSC ?};

_wyn:=__CHK.record(ZD_NAG,,'KH','DATA');
{? _wyn=''
||
   OKR.cntx_psh();
   OKR.index('OKR');
   OKR.prefix(REF.FIRMA,ZD_NAG.DATA~1);
   {? ~OKR.first()
   ||
      FUN.info('Data zamówienia musi zawierać się w zdefiniowanych okresach obrachunkowych.'@);
      _wyn:='DATA'
   ?};
   OKR.cntx_pop()
?};
{? _wyn='' & ZD_NAG.D_POTW<>date(0,0,0) & ZD_NAG.D_POTW<ZD_NAG.DATA
|| FUN.info('Potwierdzona data dostawy nie może być mniejsza od daty zamówienia %1.'@[$ZD_NAG.DATA]);
   _wyn:='D_POTW'
?};
{? _wyn=''
|| _mag:=ZD_NAG.MG;
   _d_potw:=ZD_NAG.D_POTW;
   ZD_POZ.index('POZ');
   ZD_POZ.prefix(ZD_NAG.ref);
   _zmmag:=_var_zdnagpop.MG<>_mag & _mag<>null();
   _zmptw:=_var_zdnagpop.D_POTW<>_d_potw;
   {? (_zmmag | _zmptw) & ZD_POZ.first()>0
   ||
      {? {? _zmmag & ~_zmptw
         || FUN.ask('Zmiana magazynu w nagłówku zamówienia.\n'
                    'System zmieni magazyn na pozycjach zamówienia.\n\n'
                    'Akceptujesz zmianę?'@)
         |? _zmptw & ~_zmmag
         || FUN.ask('Zmiana potwierdzonej daty dostawy w nagłówku zamówienia.\n'
                    'System zmieni potwierdzoną datę dostawy na pozycjach zamówienia.\n'
                    'Pominięte zostaną pozycje potwierdzone dokumentami potwierdzeń zamówień dostaw.\n'
                    'Uwaga. Późniejsze daty dostawy na pozycjach nie zostaną zmienione.\n\n'
                    'Akceptujesz zmianę?'@)
         |? _zmptw & _zmmag
         || FUN.ask('Zmiana magazynu oraz potwierdzonej daty dostawy w nagłówku zamówienia.\n'
                    'System zmieni magazyn oraz potwierdzoną datę dostawy na pozycjach zamówienia.\n'
                    'Pominięte zostaną pozycje potwierdzone dokumentami potwierdzeń zamówień dostaw.\n'
                    'Uwaga. Późniejsze daty dostawy na pozycjach nie zostaną zmienione.\n\n'
                    'Akceptujesz zmianę?'@)
         || 0
         ?}
      ||
         _do_state:=do_state();
         {? _do_state=0 || do() ?};
         {? ZD_POZ.first()
         ||
            {!
            |?
               {? _zmmag
               || ZD_POZ.MG:={? ZD_POZ.M().RODZ='T' || _mag || null() ?};
                  {? (1+ZD_POZ.MG().TYP)<>'D' || ZD_POZ.DK_C:=null() ?}
               ?};
               {? _zmptw
                 & (exec('obl_ptw','zamdst_ptw',$ZD_POZ.ref(),1); __zdp_sum.IL_PTW=0)
                 & ZD_POZ.IL_POZ>0
                 & ZD_POZ.D_POTW<_d_potw
               || ZD_POZ.D_POTW:=_d_potw
               ?};
               ZD_POZ.put();
               ZD_POZ.next()
            !}
         ?};
         {? _do_state=0 || end() ?};
         _var_zdnagpop.MG:=ZD_NAG.MG:=_mag;
         _var_zdnagpop.D_POTW:=ZD_NAG.D_POTW:=_d_potw
      || _wyn:={? _zmmag || 'MG' || 'D_POTW' ?};
         ZD_NAG.MG:=_var_zdnagpop.MG;
         ZD_NAG.D_POTW:=_var_zdnagpop.D_POTW
      ?}
   ?}
?};
{? _wyn='' & exec('spr_ww','eurusd',0) & ZD_NAG.WAL<>INFO.NAROD & ZD_NAG.KRS=0
|| FUN.info('Uzupełnij kurs %1.'@[ZD_NAG.WAL().KOD]); _wyn:='KRS'
?};
{? _wyn='' & ZD_NAG.WAL<>INFO.NAROD & ZD_NAG.KRS<>0 & ZD_NAG.DTK=date(0,0,0)
|| FUN.info('Uzupełnij datę kursu.'@); _wyn:='DTK'
?};
{? _wyn='' & ZD_NAG.WAL=INFO.NAROD || ZD_NAG.KRS:=0; ZD_NAG.DTK:=date(0,0,0) ?};
{? _wyn=''
||
   ZD_NAG.RR:=ZD_NAG.DTPREAL~1;
   ZD_NAG.RM:=ZD_NAG.DTPREAL~2;
   ZD_NAG.RT:=exec('NumberOfWeek','#datetime',ZD_NAG.DTPREAL)
?};

{? _wyn='' & ZD_NAG.NR=0 & ZD_NAG.SYM=''
:: Wyznaczenie numeru jeśli nie określony w trakcie redakcji nagłówka
:: !!! Wyznaczenie numeru ma być na końcu tej funkcji !!!
|| {? exec('wol_nr','numery','ZD_NAG',,1)
   || _wyn:='NR'
   ?}
?};
:: kontrola wypełnienia miejsca dostawy dla transportu zewnętrznego
{? _wyn='' & ZD_NAG.TR_ZEWN<>null() & ZD_NAG.TR_ZEWN().WYB_MSC & ZD_NAG.KH_MSC=null()
|| FUN.info('Dla Rodzaju dostawy %1 należy podać Miejsce dostawy.'@[ZD_NAG.TR_ZEWN().KOD]);
   _wyn:='KH_MSC'
?};
{? _wyn=''
|| ZD_NAG.R:=ZD_NAG.DATA~1;
   ZD_NAG.M:=ZD_NAG.DATA~2;
   ZD_NAG.K:=exec('zwr_okr','#datetime',date(ZD_NAG.R,ZD_NAG.M,1),5)
?};
_wyn


\var_zdnagpop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zmienna - Poprawa nagłowka
::   WY: uchwyt do zmiennej
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new('PO_FIRST','PROJEKTY','KH','WAL','KRS','MG','D_POTW','KH_MSC');
_wyn.PROJEKTY:=null();
_wyn


\zdnag_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Ustawia okno redakcji tabeli ZD_NAG, wymagane pola, okna słowników
::   WE: [_a] - 1-tryb Display 0-(domyślnie) nie
::       [_b] - bez zakładki "Podgląd", doda ją "dispWithFakso", 1-tak, 0-(domyślnie) nie
::----------------------------------------------------------------------------------------------------------------------
_disp:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_bez_dokumi:={? var_pres('_b')=type_of(0) || _b || 0 ?};

BPMN.END:=0;
_win_red:=exec('zdnag_win_edit','zamdst_nag',{? _disp || 'RED' || '' ?},_bez_dokumi);
{? ~_disp
|| {? ZD_NAG.STAN='N'
   || _ff:="params_exec('zdnag_pozycje_red','zamdst_nag')";
      _btn:=ZD_NAG.win_ebtn(_win_red,'text='+'Poz&ycje'@+',btn_label_align=center,panel=bottom,align=begin',_ff);
      ZD_NAG.btn_opt(_btn,'tooltip='+'Pozycje zamówienia'@);

       _ff:="params_exec('priority_action_red','#b__box')";
      ZD_NAG.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Pr&iorytet'@],_ff);

      {? ZD_NAG.STAT_REJ='N'
      || _ff:="params_exec('zdnag_zakoncz_red','zamdst_nag')";
         exec('zakoncz','#window',ZD_NAG,_win_red,1,_ff,0,exec('help_red_zakoncz','#window','Z'),
         exec('text_red_zakoncz','#window','Z'))
      ?}
   ?};
   exec('ok_esc','#window',ZD_NAG,_win_red,1,,,,,exec('help_red_ok','#window','Z'),exec('text_red_ok','#window')
   ,exec('help_red_esc','#window','A'))
?};
ZD_NAG.win_edit(_win_red);
exec('set_efld_opt','zamdst_nag',_win_red);
exec('sel_win_kh','ustawienia')


\zdnag_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca okno redakcji tabeli ZD_NAG
::   WE: [_a] - akronim okna
::       [_b] - bez zakładki "Podgląd", doda ją "dispWithFakso", 1 - tak, 0 - nie (domyślnie)
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || _a:='' ?};
{? var_pres('_b')<>type_of(0) || _b:=0 ?};

_win_akr:=
   {? _a<>''                     || _a
   |? ZD_NAG.STAN='N'
     & ZD_NAG.STAT_REJ='N'       || 'RED'
   |? (';ACN'*ZD_NAG.STAN)>1
     & ZD_NAG.STAT_REJ<>'N'      || 'DATA'
                                 || ''
   ?};
_bez_dokumi:=_b;

{? _win_akr='RED'
:: Tymczasowe okno redakcji
|| {? _bez_dokumi
   || _dokum_view:=0
   || _dokum:=exec('dokum_seek','zbl',ZD_NAG);
      _dokum_view:=_dokum & DOKUM.DOKUMI
   ?};
   _win_red:=ZD_NAG.mk_edit('Zamówienie do dostawcy'@,,,,,'html_maximized');
   {? _dokum_view
   || ZD_NAG.win_etab(_win_red,'Dane podstawowe'@)
   ?};
   ZD_NAG.win_ewin(_win_red,,_win_akr);
   {? _dokum_view
   || ZD_NAG.win_etab(_win_red,'Podgląd'@);
      ZD_NAG.win_ewin(_win_red,DOKUM,'DOKUMI')
   ?};
   _win_red
|? _win_akr='DATA'
:: Tymczasowe okno redakcji
|| _win_red:=ZD_NAG.mk_edit('Zamówienie do dostawcy'@,,,,,'html_maximized');
   ZD_NAG.win_ewin(_win_red,,_win_akr);
   _win_red
:: Okno redkacji
|| _win_akr
?}


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zaznacza wymagalne pola w nagłówku zamówienia dostawy
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || ZD_NAG.win_edit('?') ?};

:: Dostawca
ZD_NAG.efld_opt(_win_red,'mark=1',,'KH','KOD');
:: Numer
ZD_NAG.efld_opt(_win_red,'mark=1',,'NR');
:: Data zamówienia
ZD_NAG.efld_opt(_win_red,'mark=1',,'DATA');
:: Planowana data realizacji
{? ZD_NAG.TRN='T'
|| ZD_NAG.efld_opt(_win_red,'mark=1',,'DTPREAL')
|| ZD_NAG.efld_opt(_win_red,'mark=0',,'DTPREAL')
?};

:: Projekt
{? ZD_NAG.PROJEKTY=null() & (ZD_NAG.T().PROJZAKR='' | TYPYZAM.PROJZAKR=exec('projzakr_nie_dotyczy','projekty'))
|| ZD_NAG.efld_opt(_win_red,'enable=0',,'PROJEKTY')
|| ZD_NAG.efld_opt(_win_red,'enable=1',,'PROJEKTY')
?};

:: Waluta i wartość w walucie
{? exec('spr_ww','eurusd',0)
|| ZD_NAG.efld_opt(_win_red,'enable=1',,'WAL');
   ZD_NAG.efld_opt(_win_red,'enable=1',,'WARW')
|| ZD_NAG.efld_opt(_win_red,'enable=0',,'WAL');
   ZD_NAG.efld_opt(_win_red,'enable=0',,'WARW')
?};
:: Kurs, data kursu dla waluty opodatkowania
{? exec('spr_ww','eurusd',0) & ZD_NAG.WAL<>INFO.NAROD
|| ZD_NAG.efld_opt(_win_red,'mark=1',,'KRS');
   ZD_NAG.efld_opt(_win_red,'mark=1',,'DTK');
   ZD_NAG.efld_opt(_win_red,'enable=1',,'SWAL');
   ZD_NAG.efld_opt(_win_red,'enable=1',,'KRS');
   ZD_NAG.efld_opt(_win_red,'enable=1',,'DTK')
|| ZD_NAG.efld_opt(_win_red,'mark=0',,'KRS');
   ZD_NAG.efld_opt(_win_red,'mark=0',,'DTK');
   ZD_NAG.efld_opt(_win_red,'enable=0',,'SWAL');
   ZD_NAG.efld_opt(_win_red,'enable=0',,'KRS');
   ZD_NAG.efld_opt(_win_red,'enable=0',,'DTK')
?};
:: Miejsce dostawy
{? ZD_NAG.TR_ZEWN<>null() & ZD_NAG.TR_ZEWN().WYB_MSC=1
|| ZD_NAG.efld_opt(_win_red,'mark=1',,'KH_MSC')
|| ZD_NAG.efld_opt(_win_red,'mark=0',,'KH_MSC')
?};
''


\spr_kontrakt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: formula sprawdzajaca wypelnienie pol w tabeli ZKON
::  OLD: \spr_kontrakt/zk.fml
::----------------------------------------------------------------------------------------------------------------------
__CHK.record(ZKON,,'SYM')


\zd_pst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: ustawnianie zmiennej POM.STAN
::  OLd: \zd_pst/zd.fml
::----------------------------------------------------------------------------------------------------------------------
POM.STAN:=
   {? (ZD_NAG.name()+2)<>'__' || 'Archiwalne'
   |? ZD_NAG.STAN='N' || 'Nowe'
   |? ZD_NAG.STAN='A' || 'Do realizacji'
   |? ZD_NAG.STAN='O' || 'Bez akceptacji zapotrzebowania'
   |? ZD_NAG.STAN='C' || 'Częściowo zrealizowane'
   |? ZD_NAG.STAN='M' || 'Zamknięte'
   |? ZD_NAG.STAN='Q' || 'Odrzucone zapotrzebowanie'
   |? ZD_NAG.STAN='Z' || 'Zrealizowane'
   |? ZD_NAG.STAN='U' || 'Anulowane'
   || ''
   ?};
''


\zdnag_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: rekord przed dla naglowka zamowienia
::  OLD: \zd_rek/zd.fml
::----------------------------------------------------------------------------------------------------------------------
:: wstawia opisowy status
exec('zd_pst','zamdst_nag');
:: dodaje info o potwierdzeniu
{? ZD_NAG.POTW='C'
|| POM.STAN+=' - częściowo potwierdzone'
|? ZD_NAG.POTW='T'
|| POM.STAN+=' - potwierdzone'
?};
{? POM.STAN<>'' & (_lock:=ZD_NAG.r_lock(1,1,1);_lock) & ZD_NAG.STATUS<>POM.STAN
|| ZD_NAG.STATUS:=POM.STAN;
   ZD_NAG.put(1)
?};
{? _lock || ZD_NAG.r_unlock() ?};
exec('set_efld_opt','zamdst_nag');
exec('rekprzed','color','DOS#01')


\zdnag_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: poprawa naglowka zamowienia dostaw
::  OLD: \zdnag_pop/zd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('magazyny','zamdst_wspolne');
BEER.KRS:=ZD_NAG.KRS;
_wal:=ZD_NAG.WAL;
_kh:=#ZD_NAG.KH;
ZD_NAG.cntx_psh();
{? exec('zam_lock','zamdst_nag') & ZD_NAG.r_lock(1,1,1)
||
   _var_zdnagpop:=exec('var_zdnagpop','zamdst_nag');
   _var_zdnagpop.PROJEKTY:=ZD_NAG.PROJEKTY;
   _var_zdnagpop.KH:=ZD_NAG.KH;
   _var_zdnagpop.WAL:=ZD_NAG.WAL;
   _var_zdnagpop.KRS:=ZD_NAG.KRS;
   _var_zdnagpop.MG:=ZD_NAG.MG;
   _var_zdnagpop.D_POTW:=ZD_NAG.D_POTW;
   _var_zdnagpop.KH_MSC:=ZD_NAG.KH_MSC;
   _var_zdnagpop.PO_FIRST:=0;

:: Parametr 'context' wykorzystywany w:
:: - exec('zamdst_pozycje_red','zamdst_nag')
:: - exec('zamdst_zakoncz_red','zamdst_nag')
:: Parametr 'var_zdnagpop' wykorzystywany w:
:: - exec('zamdst_pozycje_red','zamdst_nag')
:: - exec('zamdst_zakoncz_red','zamdst_nag')
:: - exec('zdnag_pop_po','zamdst_nag',_dod_nag)
   params_set('context',params_get(),'var_zdnagpop',_var_zdnagpop);

   exec('zdnag_win_edit_set','zamdst_nag');
   ZD_NAG.memo_get(,'UW');
   {? ZD_NAG.STAN='N' | ZD_NAG.STAN='A' | ZD_NAG.STAN='C'
   ||
      _stat_rej:=ZD_NAG.STAT_REJ;
      {? ZD_NAG.edit("params_exec('zdnag_chk','zamdst_nag')")
      || {? _stat_rej=ZD_NAG.STAT_REJ || exec('zdnag_pop_po','zamdst_nag') ?}
      ?}
   ||
      FUN.info('Modyfikacja zamówienia możliwa tylko dla zamówień o statusie "Nowe".'
               '\nModyfikacja planowanej daty realizacji możliwa tylko dla zamówień'
               '\n"Do realizacji" i "Częściowo zrealizowanych".'
               '\n\nModyfikacja nagłówka zamówienia niemożliwa.'@)
   ?}
?};
ZD_NAG.r_unlock();
ZD_NAG.cntx_pop();
MG.f_clear();
''


\zdnag_pop_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Obsługa popraw po zakończeniu edycji (ZD_NAG.edit)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_var_zdnagpop:=params_get().var_zdnagpop;
_projekty:=_var_zdnagpop.PROJEKTY;
_kh:=_var_zdnagpop.KH;
_wal:=_var_zdnagpop.WAL;
_krs:=_var_zdnagpop.KRS;
_kh_msc:=_var_zdnagpop.KH_MSC;
_po_first:=_var_zdnagpop.PO_FIRST;

{? _po_first=1
:: Dodyczy wywołania dla Dołącz - wtedy jako wartości przd ustawia zmienne z nagłówka
|| _projekty:=ZD_NAG.PROJEKTY;
   _kh:=ZD_NAG.KH;
   _war:=ZD_NAG.WAL;
   _krs:=ZD_NAG.KRS;
   _kh_msc:=ZD_NAG.KH_MSC
?};

{? ZD_NAG.STAN='N'
||
   ZD_NAG.BL_STAT:=exec('zdnag_blstat_bl','zamdst_nag');
   {? ZAKR.KH<>null & ZD_NAG.KH<>ZAKR.KH
   || FUN.info('Aktualnie zredagowane zamówienie nie jest dostępne w ustawionym zakresie widoku zamówień.'@)
   |? ZAKR.MAG<>null & ZD_NAG.MG<>ZAKR.MAG
   || FUN.info('Aktualnie zredagowane zamówienie nie jest dostępne w ustawionym zakresie widoku zamówień.'@)
   ?};
   ZD_NAG.cntx_psh();
   ZD_NAG.clear();

   {? ZD_NAG.put()
    & ZD_NAG.memo_put() & (ZD_NAG.KH<>_kh | ZD_NAG.WAL<>_wal | ZD_NAG.KRS<>BEER.KRS
                        | ZD_NAG.PROJEKTY<>_projekty
                        | ZD_NAG.KH_MSC<>_kh_msc)
   ||

      ZD_POZ.index('POZ');
      ZD_POZ.prefix(ZD_NAG.ref);
      {? ZD_POZ.first()
      ||
         {!
         |?
            {? ZD_NAG.KH<>_kh || ZD_POZ.KH:=ZD_NAG.KH ?};
            {? ZD_NAG.KH_MSC<>_kh_msc || ZD_POZ.KH_MSC:=ZD_NAG.KH_MSC ?};
            {? ZD_NAG.WAL<>_wal
            ||
               {? ZD_NAG.WAL<>ZD_POZ.WAL || ZD_POZ.CWAL:=0; ZD_POZ.CENA2:=0 ?};
               ZD_POZ.WAL:=ZD_NAG.WAL
            ?};
            {? ZD_NAG.KRS<>BEER.KRS
            ||
               ZD_POZ.KRS:=ZD_NAG.KRS;
               {? ZD_POZ.KRS>0 & ZD_POZ.CWAL=0
               ||
                  ZD_POZ.CWAL:=(ZD_POZ.CENA/ZD_POZ.KRS)$ZD_POZ.M().DOKL_Z;
                  ZD_POZ.CENA2=0
               ?};
               exec('zdp_obl','zamdst_poz')
            ?};
            {? ZD_NAG.PROJEKTY || ZD_POZ.PROJEKTY:=ZD_NAG.PROJEKTY ?};

            ZD_POZ.put();
            ZD_POZ.next
         !};
         exec('war_zam','zamdst_wspolne',ZD_NAG.ref)
      ?}
   ?};

   ZD_NAG.cntx_pop()

|? ZD_NAG.STAN='A' | ZD_NAG.STAN='C'
||
   ZD_NAG.RR:=ZD_NAG.DTPREAL~1;
   ZD_NAG.RM:=ZD_NAG.DTPREAL~2;
   ZD_NAG.RT:=exec('NumberOfWeek','#datetime',ZD_NAG.DTPREAL);
   ZD_NAG.put()
?}


\zam_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: lock naglowka zamowien
::   WE: [_a] - czy pytac o wyswietlenie osoby blokujacej lub dodanie do komunikatu (0- tak, 1 -nie)
::   WY: _wyn - 0-zablokowany 1-bez blokady
::  OLD: \zam_lock/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_wyn:=ZD_NAG.r_lock(1,1,1);
{? _a=0 & _wyn=0
||
   _txt:='Zamówienie %1 obsługuje inny użytkownik.'@[ZD_NAG.SYM];
   {?
      _wyn=0
         &
      {? var_pres('__kom')>100
      || exec('add_kom','#message',_txt,4);0
      || FUN.ask(_txt+'\n'+'Czy chcesz zobaczyć kto?'@)
      ?}
   ||
      ZD_NAG.r_lock(1,,1)
   ?}
?};
ZD_NAG.r_unlock();
_wyn


\zdnag_pozycje_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zamówienia dostaw - Pozycje - okno redagowania
::   WE: params_get()   - ustawiane w exec('zdnag_pop','zamdst_nag')
::                      - ustawiane w exec('zddol','zamdst_nag')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_btnRuleResult:='';

_mag:=ZD_NAG.MG;
_kh:=ZD_NAG.KH;
_fld:=params_exec('zdnag_edit_finisher','zamdst_nag',ZD_NAG.ref());

{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| BPMN.END:=1;
   exec('zd_poz','zamdst_poz',1);
   ZD_NAG.get();
   ZD_NAG.MG:=_mag;
   ZD_NAG.KH:=_kh;
   {? BPMN.END=2 || _btnRuleResult:=params_exec('zdnag_zakoncz_red','zamdst_nag') ?}
?};

_btnRuleResult


\zdnag_zakoncz_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zamówienia dostaw - Zakończ - okno redagowania
::   WE: params_get()   - ustawiane w exec('zdnag_pop','zamdst_nag')
::                      - ustawiane w exec('zddol','zamdst_nag')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().context.mp;
_autoakc:=exec('autoAkc','#b__box',_mp,200180,'LZK_ZDS_AZAD');

_btnRuleResult:='';

_fld:=params_exec('zdnag_edit_finisher','zamdst_nag',ZD_NAG.ref());
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| {? exec('zakoncz','zamdst_nag',_autoakc)
   || _btnRuleResult:='key:F2';
      _mp.done()
   ?}
?};

_btnRuleResult


\zdnag_edit_finisher
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Kod wykańczający po ZD_NAG.edit() w różnych kontekstach
::   WE: _a - ZD_NAG.ref()
::   WE: params_get()   - ustawiane w exec('zdnag_pop','zamdst_nag')
::                      - ustawiane w exec('zddol','zamdst_nag')
::----------------------------------------------------------------------------------------------------------------------
:: Sprawdzenie poprawności wypełnienia pól nagłówka dokumentu sprzedaży
_fld:=params_exec('zdnag_chk','zamdst_nag');
{? _fld<>''
|| _fld
|| _faks:=_a;
   _out:=params_get().context.out;
   _mp:=params_get().context.mp;
   _akcja:=params_get().context.akcja;
   _var_zdnagpop:=params_get().var_zdnagpop;

   {? _akcja='Dołącz' | _akcja='START_TODO' | _mp.pathProc()
   || params_set('var_zdnagpop',_var_zdnagpop);
      exec('zdnag_pop_po','zamdst_nag');
      _var_zdnagpop.PO_FIRST:=2
   |? _akcja='Popraw' | _mp.pathTodo()
   || params_set('var_zdnagpop',_var_zdnagpop);
      exec('zdnag_pop_po','zamdst_nag')
   |? _akcja='Zamówienie'
   || params_set('var_zdnagpop',_var_zdnagpop);
      exec('zdnag_pop_po','zamdst_nag')
   ?};
   ''
?}


\zdnag_usu_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: usuwanie zamowien (przed funkcja grupowa)
::  OLD: \zdnabusu/zd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ini_kom','#message','Usuń zamówienie dostawy'@);
{? ~FUN.ask('Usunąć zaznaczone zamówienia?'@)
|| ZD_NAG.sel_adel()
?};
sel_nchk();
''


\zdnag_usu_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: usuwanie zamowien (po funkcji grupowej)
::  OLD: \zdnaausu/zd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('end_kom','#message');
1


\zdnag_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: Usuwanie zamowien
::   WE: [_a] - 0-Zawsze pytanie, 1-Nie pytać jeśli brak pozycji, 2-po prostu nie pytać
::   WY: (0/1) - czy usunięto
::  OLD: \zdna_usu/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || _a:=0 ?};
_wyn:=0;
ZD_NAG.cntx_psh();

:: wlaczenie tabeli komunikatow
{? ZD_NAG.sel_size=0
|| _txt:={? exec('czy_ptw','zamdst_ptw')=0 || 'Na pozycjach zamówienia podano daty dostawy.\n\n'@ || '' ?};
   exec('ini_kom','#message','Usuń zamówienie dostawy'@);
   _ok:=
      {? _a=0 | _a=1 & exec('FindInSet','#table','ZD_POZ','POZ',ZD_NAG.ref())
      || FUN.ask('%1Usunąć zamówienie %2?'@[_txt,ZD_NAG.SYM])
      || 1
      ?}
||
   _ok:=1
?};

{? ZD_NAG.STAT_REJ='A'
||
   exec('add_kom','#message','Zamówienie jest anulowane. Usunięcie zamówienia niedostępne.'@,1,ZD_NAG.SYM);
   _wyn:=1;
   _ok:=0
?};

{? _ok=1
||
   _czy_usu:=1;
   __kom_gr:=ZD_NAG.SYM;
   __lp:=0;

:: sprawdzamy czy mozna usuwac
   {? ZD_NAG.STAT_REJ<>'N'
   || exec('add_kom','#message','Zamówienie musi być niezakończone i niezaakceptowane.'@,4);
      _czy_usu:=0
   |? ZD_NAG.STAN<>'N'
   ||
      exec('add_kom','#message','Zamówienie musi mieć status [Nowe].'@,4);
      _czy_usu:=0
   ?};
   {? exec('czy_ptw','zamdst_ptw')=0 & ZD_NAG.sel_mark()
   ||
      exec('add_kom','#message','Na pozycjach zamówienia podano daty dostawy.'@,4);
      _czy_usu:=1
   ?};
:: kontrola r_lock
   _czy_usu:=_czy_usu & exec('zam_lock','zamdst_nag');

:: kontrola powiazania z zamowieniami sprzedazy
   {? _czy_usu & exec('czy_del_zd4zk','zamowienia')
   ||
::    zalozenie lock na pozycje planu dostaw
      {? _a=1 | exec('pdk_lock4zamdel','zamdst_nag',ZD_NAG.ref())
      ||
::       usuwamy
         {? _czy_usu=1
         || _uid:=ZD_NAG.uidref();
            {? exec('zdna2usu','zamdst_nag',ZD_NAG.ref())
            || {? _a=0 || exec('add_kom','#message','Zamówienie zostało usunięte.'@,1) ?};
::             Uruchamian cleanera - czyszcze pozostałe po zamówienia zadania na TODO
               exec('clean_record','#b__box',_uid,0);
               _wyn:=1
            ?}
         ||
            exec('add_kom','#message','Usunięcie zamówienia niemożliwe.'@,2)
         ?};
         {? _a<>1 || exec('pdk_unlock4sid','zamdst_nag') ?}
      ?}
   ?}
?};

VAR_DEL.delete('__Lock');
{? ZD_NAG.sel_size=0 || exec('end_kom','#message') ?};
ZD_NAG.cntx_pop();
_wyn


\pdk_lock4zamdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: lokowanie pozycji koszyka dla zamowienia _a
::   WE: _a - ZD_NAG.ref() lub ZK_N.ref()
::  OLD: \pdk_lock4zamdel/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

_wyn:=1;

PD_K.cntx_psh();
PD_K.index('ZAM_REF1'); PD_K.prefix($_ref);
_loop1:=PD_K.first();
{!
|? _loop1
|!
   _loop1:=
      {? exec('pd_k_lock','plan_dostaw',0)
      || PD_K.next()
      || exec('add_kom','#message','Pozycja koszyka (%1) '
            'planu dostaw %2 '
            'obsługiwana przez innego użytkownika.'[$PD_K.ID,PD_K.PD_N().SYM],4);
         _wyn:=0;
         0
      ?}
!};
PD_K.cntx_pop();

{? _wyn=0 || exec('pdk_unlock4sid','zamdst_nag') ?};

_wyn


\pdk_unlock4sid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: unlock wszystkich PD_K ktorych PD_K.SES_ID=PD_K.ses_id()
::  OLD: \pdk_unlock4sid/pd_zam.fml
::----------------------------------------------------------------------------------------------------------------------
PD_K.cntx_psh();
PD_K.index('SID'); PD_K.prefix(PD_K.ses_id());
_loop:=PD_K.first();
{!
|? _loop
|!
   exec('pd_k_unlock','plan_dostaw');
   _loop:=PD_K.first()
!};
PD_K.cntx_pop()


\zdna2usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: usuwanie zamowienia dostaw (nag + poz +...)
::   WE:  _a  ref naglowka zamowienia
::   WY: wartosc zwrocona przez funkcje del
::  OLD: \zdna2usu/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_do_state:=do_state();
{? _do_state=0 || do() ?};
:: usuwamy pozycje
ZD_POZ.index('POZ');
ZD_POZ.prefix(_a);
{!
|? ZD_POZ.first()
|! exec('zdpo2usu','zamdst_poz')
!};

::  usuwamy zamowienie
{? do_state<2 & ~Plugin.run('BEFORE_DELTAB_001',ZD_NAG.ref()) & do_state() || undo() ?};
POM.TAB:='ZD_NAG';
POM.TYPDOK:=BEER.TYPYZAM().KOD;
numer:=ZD_NAG.NR;
oldnumer:=1;
exec('nr_old','numery');
FAKSO.cntx_psh();
FAKSO.use('fakto'+ST.ODDZ+'__');
exec('delprzyp','fakso','FAKSO','ZD_NAG',ZD_NAG.ref);
FAKSO.cntx_pop();
:: usuwamy zalaczniki
{? ~exec('deladok','dokum','ZD_NAG')
|| exec('add_kom','#message','Nie można usunąć powiązanych załączników. Usunięcie zamówienia niemożliwe.'@,2);
   undo()
?};
:: usuwanie polaczenia z koszykiem planu dostaw
exec('del_lnk','plan_dostaw',_a);
ZD_NAG.index('SYM');
ZD_NAG.prefix(BEER.TYPYZAM);
_wyn:=ZD_NAG.del(1);
{? _do_state=0 || end() ?};
_wyn


\be_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: przed redakcja waluty handlowej
::  OLD: \be_wal/eurusd.fml
::----------------------------------------------------------------------------------------------------------------------
ZD_Z.WAL:=fld();
exec('jakiwal','eurusd','SLWAL','walut')


\ae_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: po redakcji waluty handlowej
::  OLD: \ae_wal/eurusd.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()=null
||
   FUN.info('Niewypełnione pole.'@);
   return(0)
|? fld()<>ZD_Z.WAL
||
   ZD_NAG.KRS:=0;
   ZD_NAG.SWAL:=2;
   ZD_NAG.RTK:=0;
   ZD_NAG.NTK:='';
   ZD_NAG.DTK:=date(0,0,0);
   ZD_NAG.BTK:=''
?};
exec('set_efld_opt','zamdst_nag');
1


\zdnag_trn_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Po redakcji ZD_NAG.TRN
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('set_efld_opt','zamdst_nag');

1


\zakr_zamd_zmien
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
edit_start();
''


\zakr_zd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: Edycja i ustawienie zakresu zamówień dostaw
::       formula przed akcji Zakres okna ZD_NAG.WER
::  OLD: \zakr_zd/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().lzkzds_env;
_win_red:=exec('zakr_win_zamd','zamdst_nag');
exec('ok_esc','#window',ZAKR,_win_red);
ZAKR.win_edit(_win_red);
MG.f_clear();
{? ZAKR.edit()
|| exec('zakr_set','zamdst_nag',0)
?};
''


\zakr_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Pobranie wartości zmiennej ZAKR
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_user:=exec('name','users');
OZ.index('OZ');
OZ.prefix(_user,_user);
{? OZ.first()
|| ZAKR.KH:=OZ.ZD_KH;
   ZAKR.MAG:=OZ.ZD_MG;
   ZAKR.T:=OZ.ZD_ST
|| ZAKR.T:='W'
?}


\zakr_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Ustawienie zakresu zamówień dostaw
::   WE: [_a] - 1-(domyślnie) zmiana wyłącznie prefiksu, 0- nie
::----------------------------------------------------------------------------------------------------------------------
_prf:={? var_pres('_a')=type_of(0) || _a || 1 ?};

_user:=OPERATOR.USER().KOD;
OZ.index('OZ');
OZ.prefix(_user,_user);
{? ~OZ.first()
|| OZ.blank();
   OZ.USER:=_user;
   OZ.US:=OPERATOR.USER;
   OZ.add()
?};
OZ.ZD_KH:=ZAKR.KH; OZ.ZD_MG:=ZAKR.MAG; OZ.ZD_ST:=ZAKR.T; OZ.ZD_US:={? ZAKR.US=null || 2 || 1 ?};
OZ.put(1);
_curprf:=ZD_NAG.cur_prfx();
no_msg(1); exec('zakr_ind','zamdst_nag',_prf); _err:=errno(); no_msg(0)


\zakr_ind
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: ustawia zakres na zamowieniach dostaw
::   WE: [_a] - 1-(domyślnie) zmiana wyłącznie prefiksu, 0- nie
::  OLD: \zakr_set/zd.fml
::  OLD: \zakr_ind/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_only:={? var_pres('_a')=type_of(0) || _a || 1 ?};
BEER.ZAKR:={? ZAKR.ARCH_ROK<>'' || 'ARCHIWALNE Z '+ZAKR.ARCH_ROK+' ROKU '
           |? ZAKR.T='N' || 'NOWE  '
           |? ZAKR.T='A' || 'DO REALIZACJI'
           |? ZAKR.T='C' || 'CZĘŚCIOWO ZREALIZOWANE  '
           |? ZAKR.T='M' || 'ZAMKNIĘTE  '
           |? ZAKR.T='Z' || 'ZREALIZOWANE  '
           || 'WSZYSTKIE  '
           ?};
_maska:={? ZAKR.ARCH_ROK='' || '__' || ZAKR.ARCH_ROK+2 ?};
_zm_maski:=(ZD_NAG.name+2)<>_maska;
{? _zm_maski || exec('openzd','open_tab',ST.ODDZ+_maska) ?};

{? _only & ZD_NAG.index('?')='SYM' || _only:=0 ?};
ZD_NAG.clear;
{? (ZAKR.T='W' & ZAKR.WG ='W')
||
   ZD_NAG.index('SYM');
   ZD_NAG.prefix(BEER.TYPYZAM)
||
   _ind:={? BEER.TYPYZAM<>null || '''T'',,,' || '''T'',''R'',,' ?};
   _prf:={? BEER.TYPYZAM<>null || 'BEER.TYPYZAM,' || '\'D\',' ?};

   {? ZAKR.T<>'W'
   || _ind+='''STAN'',,,';_prf+='ZAKR.T,'
   ?};
   {? ZAKR.KH<>null
   || _ind+='''KH'',,,';_prf+='ZAKR.KH,';
      BEER.ZAKR+=' kontr. '+ZAKR.KH().KOD+' | '
   ?};
   {? ZAKR.MAG<>null
   || _ind+='''MG'',,,';_prf+='ZAKR.MAG,';
      BEER.ZAKR+=' magazyn '+ZAKR.MAG().SYM+' | '
   ?};
   {? ZAKR.US <>null
   || _ind+='''US'',,,';_prf+='ZAKR.US,';
      BEER.ZAKR+=' użytkownik '+ZAKR.US().KOD+' | '
   ?};
   {? ZAKR.PROJEKTY<>null
   || _ind+='''PROJEKTY'',,,';_prf+='ZAKR.PROJEKTY,';
      BEER.ZAKR+=' projekt '+ZAKR.PROJEKTY().SYM+' | '
   ?};
   _ind+='''SYM'',,,';
   BEER.ZAKR:=BEER.ZAKR-2;

   {? _ind<>''
   || _ind:=_ind-1;_prf:=_prf-1;
      _curprfx:=ZD_NAG.cur_prfx();
      {? ~_only
      || ZD_NAG.ndx_drop();
         _ndx:=($('ZD_NAG.ndx_tmp('''',,'+_ind+')'))();
         ZD_NAG.index(_ndx)
      ?};
      ($('ZD_NAG.prefix('+_prf+')'))()
   ?}
?};
''


\zdnag_win_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca okno szczegółów tabeli ZD_NAG
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
'INFO'


\zakr_win_zamd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca okno parametrów filtrowania zamówień dostaw
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_win_red:=ZAKR.mk_edit('Zakres zamówień'@,,'efjalksdjfkdsj');
ZAKR.win_ewin(_win_red,,'ZAM_D');
_win_red


\zd_stan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: zmiana statusu zamowienia
::   WE: _a - 'Akceptuj'/'Wycofaj'
::   WY: - rezultat
::  OLD: \zd_stan/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? exec('zam_lock','zamdst_nag') & ZD_NAG.r_lock(1,1,1)
||
   {? _a='Wycofaj' & (';CT'*ZD_NAG.POTW)>1 & ZD_NAG.STAN<>'M'
   || ZD_NAG.r_unlock();
      FUN.info('Zamówienie %1 zostało potwierdzone.\nZmiana stanu niemożliwa.'@[ZD_NAG.SYM])
   |? _a='Wycofaj' & ZD_NAG.EDI_W='T'
   || ZD_NAG.r_unlock();
      FUN.info('Na podstawie zamówienia %1 utworzono komunikat EDI.\nZmiana stanu niemożliwa.'@[ZD_NAG.SYM])
   |? _a<>'Zamknij' & ZD_NAG.STAN<>'M' & (_rek:=exec('dokWITHrek','reklamacje',ZD_NAG.uidref()); _rek<>'')
   || FUN.info('Zamówienie %1 powiązane z reklamacją dostaw %2.\nZmiana stanu niemożliwa.'@[ZD_NAG.SYM,2-_rek])
   || _wyn:=exec('zdstan','zamdst_nag',_a);
      ZD_NAG.r_unlock();
      exec('zakr_set','zamdst_nag')
   ?}
?};
_wyn


\zdstan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: zmiana statusu zamowienia
::   WE: _a - 'Akceptuj'/'Wycofaj'
::   WY: 0-nie zakończono redakcji; 1-zakończono redakcję
::  OLD: \zdstan/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

_upr:=exec('chk_EndOrAcc','#b__box','LZK_ZDS_DZAD','LZK_ZDS_AZAD');

_stan:=ZD_NAG.STAN;

_akc:=_a='Akceptuj' | _a='Zamknij';
_rea:=~_akc & _stan='M';

{? ~_akc & ZD_NAG.T().VALREC<>null() & ~exec('validate','wzorce',ZD_NAG.T().VALREC,ZD_NAG,ZD_NAG.ref())
|| return(0)
|? ZD_NAG.OBI_POW<>''
||
   {? _akc
   ||
      {? ZD_NAG.OBI_POW<>'' & exec('edokum_status','obiegi_log',ZD_NAG.OBI_POW)=''
      ||
         FUN.info('Nie zakończono jeszcze obiegu zamówienia.\nAkceptacja niemożliwa.'@);
         return(0)

      |? ZD_NAG.OBI_POW<>'' & exec('edokum_status','obiegi_log',ZD_NAG.OBI_POW)='N'
      ||
         FUN.info('Obieg zamówienia zakończył się odrzuceniem.\nAkceptacja niemożliwa.'@);
         _mp.error('Obieg zamówienia zakończył się odrzuceniem. Akceptacja niemożliwa.');
         return(1)
      ?}
   ||
      FUN.info('Zamówienie zostało przesłane do obiegu.\nWycofanie akceptacji niemożliwe.'@);
      return(0)
   ?}
|? ZD_NAG.OBI_MUS='T' & ZD_NAG.OBI_POW=''
|| FUN.info('Nie rozpoczęto jeszcze obiegu zamówienia.\nAkceptacja niemożliwa.'@);
   return(0)
?};

_stat:=tab_tmp(1
   ,'POZ','INTEGER','Pozycja'
   ,'STATUS','STRING[30]','Status'
   ,'OPIS','STRING[80]','Opis'
   ,'STAT','STRING[1]','Status');

_czy_ptw:=0;
_czy_zre:=0;
_czy_rea:=0;
_czy_end:=0;

ZD_POZ.index('POZ');
ZD_POZ.prefix(ZD_NAG.ref());
{? (_czy_poz:=ZD_POZ.first())
|| _czy_zre:=ZD_POZ.size();
   {!
   |? _czy_end+=ZD_POZ.END;
      _czy_zre-=ZD_POZ.IL_POZ<=0 | ZD_POZ.END;
      {? ~_czy_rea || _czy_rea:=~ZD_POZ.END & ~(ZD_POZ.IL_POZ=ZD_POZ.IL) ?};
      ZD_POZ.next()
   !};
   _czy_zre:=~_czy_zre
?};

{? ~_akc
|| {? ZD_NAG.STAT_REJ<>'N' & (_upr=1 | _upr=2) & ~((';CT'*ZD_NAG.POTW)>1)
   || _stat.POZ:=1;
      _stat.STATUS:='Nowe';
      _stat.OPIS:='- zamówienie nowe (możliwa edycja zamówienia)';
      _stat.STAT:={? ~_czy_zre || 'N' || '' ?};
      {? _stat.STAT<>'' & ~_czy_rea || _stat.add() ?}
   ?};
   {? ZD_NAG.STAT_REJ='T' & (_upr=1 | _upr=4) & ~((';CT'*ZD_NAG.POTW)>1)
   || _stat.POZ:=1;
      _stat.STATUS:='Nowe (do akceptacji)';
      _stat.OPIS:='- zamówienie z zakończoną redakcją (do akceptacji)';
      _stat.STAT:={? ~_czy_zre & (';AMN'*ZD_NAG.STAN)>1 & _czy_poz=1 || 'X' || '' ?};
      {? ~_rea & _stat.STAT<>'' || _stat.add() ?}
   ?}
?};

_stat.POZ:=2;
_stat.STATUS:='Do realizacji';
_stat.OPIS:='- zamówienie wysłane do dostawcy'+{? _czy_poz=0 || ' (UWAGA: brak pozycji zamówienia!)' || '' ?};
_stat.STAT:={? ~_czy_zre & 'AC'*ZD_NAG.STAN=0 & _czy_poz=1 || 'A' || {? _rea || 'A' || '' ?} ?};
{? (_akc | _rea) & _stat.STAT<>'' || _stat.add() ?};

_stat.POZ:=3;
_stat.STATUS:='Częściowo zrealizowane';
_stat.OPIS:='- (automatycznie zmieniany) gdy realizacja jest częściowa';
_stat.STAT:='';
:: _stat.add();

_stat.POZ:=4;
_stat.STATUS:='Zamknięte';
_stat.OPIS:='- rezygnujemy z dalszej realizacji zamówienia';
_stat.STAT:={? ZD_NAG.STAN<>'M' || 'M' || '' ?};
{? _akc & _stat.STAT<>'' || _stat.add() ?};

_stat.POZ:=5;
_stat.STATUS:='Zrealizowane';
_stat.OPIS:='- (automatycznie zmieniany) zamówienie całkowicie zrealizowane';
_stat.STAT:='';
:: _stat.add();

_stat_sel:=_stat.mk_sel('Status zamówienia'@,'N',,,,,5);
_stat.win_fld(_stat_sel,,'STATUS',,,,,,'Status'@);
_stat.win_fld(_stat_sel,,'OPIS',,,,,,'Opis'@);
_stat.win_act(_stat_sel,,'Formuła','Us&taw status'@@,,'Zmiana statusu zamówienia'@,,"sel_exit()",1,,,,'U');
:: _stat.win_act(_stat_sel,,'Rekord',,,,"cur_tab.actions(cur_tab.win_sel('?'),{? cur_tab.STAT='' || 'T' || '' ?},,1);cur_tab.STAT<>''");
_stat.win_sel(_stat_sel);

_ok:=1;
_recplug:=0;

{? ~_stat.first()
|| {? _akc
   || FUN.info('Akceptacja zabroniona.'@)
   || FUN.info('Wycofanie zabronione.'@)
   ?};
   _ok:=0
|? _ok>0 & _stat.select()
||
   _ok:={? _stat.STAT='O' || exec('zdnagedz','zamdst_nag')
        || 1
        ?};
   {? _ok
   || _refz:=ZD_NAG.ref();
      ZD_NAG.prefix();
      ZD_NAG.ST:=ZD_NAG.STAN:={? _stat.STAT='X' || 'N' || _stat.STAT ?};
      ZD_NAG.PR:=exec('obl_limi','zamdst_nag',ZD_NAG.ref());
      _del_autoadd:=0;
      {? _akc & (_stat.STAT='A' | _stat.STAT='M')
      || ZD_NAG.STAT_REJ:='T'
      |? ~_akc & _stat.STAT='N'
      || _recplug:=2;
         _del_autoadd:=1;
         ZD_NAG.STAT_REJ:='N'
      |? ~_akc & _stat.STAT='X'
      || _recplug:=2;
         _del_autoadd:=1;
         ZD_NAG.STAT_REJ:='Z'
      ?};
      ZD_NAG.BL_STAT:=exec('zdnag_blstat_bl','zamdst_nag');
      {? ZD_NAG.put()
      || _recplug:={? _recplug=2 || 1 || 0 ?};
         _wyn:=ZD_NAG.STAT_REJ={? _akc || 'T' || 'N' ?}
      ?};
      {? _del_autoadd || exec('del_autoadd','dokum',ZD_NAG.ref()) ?};
      exec('aktu_zam','zamdst_wspolne',ZD_NAG.ref);
      {? _recplug=1 || Plugin.run('AFTER_RECALL_001','ZD') ?}
   ?}
?};
_wyn


\zdnagedz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: generacja zapotrzebowania na podstawie zamowienia dostaw / zamowienia wewnetrznego
::   WE: [_a] 0(domyslnie)-zam.dostaw 1-zam.wewnetrzne
::   WY: 1-udalo sie wygenerowac zapotrzebowanie 0-nie udalo sie
::  OLD: \zdnagedz/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
_wyn:=0;
SKID.ROK_F:=exec('zwrrok_f','okresy',date(ST.AR,ST.AM,0));
_odd:=exec('FindInSet','#table','ODDZ','KOD','ODD',ST.ODDZ);
_czy_zap:=exec('fks_lic','fks')='T';
_czytzap:=SKID.ROK_F<>null & _odd<>null;
_typ_zap:=null;
{? _czytzap
|| _typ_zap:=exec('zwr_zapo','zamdst_wspolne',BEER.TYPYZAM,SKID.ROK_F,_odd);
   _czytzap:=(_typ_zap<>null)
?};
{? ~_czy_zap
|| _wyn:=0
|? _czy_zap & _czytzap & _odd & {? ~_a || ZD_NAG.EZAPOT='' || ZK_N.EZAPOT='' ?}
|| _dalej:=1;
   {? INFO.SLKHD___=null
   || FUN.info('Brak w parametrach systemu domyślnego słownika dostawców.'@+'\n'
               'Niemożliwe wystawienie zapotrzebowania.'@); _dalej:=0
   ?};
   {? _dalej & _odd=null
   || FUN.info('Brak przypisania do oddziału jednostki księgowej.'@+'\n'
               'Niemożliwe wystawienie zapotrzebowania.'@); _dalej:=0
   ?};
   {? _dalej & SKID.ROK_F=null
   || FUN.info('Brak roku obrachunkowego.'@); _dalej:=0
   ?};
   {? _dalej
   || ETZAPZAM.cntx_psh();
      ETZAPZAM.index('TZAM'); ETZAPZAM.prefix(BEER.TYPYZAM,SKID.ROK_F,_odd);
      _odds:='';
      ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
      {? ODD.seek(_odd) || _odds:=ODD.OD ?};
      ODD.cntx_pop();
      FUN.info('Brak powiązanego z typem zamówienia typu zapotrzebowania.'@+'\n'+
               'Rok: %1 jednostka księgowa: %2.'@[SKID.ROK_F().NAZ,_odds]);
      _dalej:=0;
      ETZAPZAM.cntx_pop()
   ?};
   {? _dalej
   ||
      ROK_F.cntx_psh(); ROK_F.prefix(); ROK_F.seek(SKID.ROK_F);
      ETYPY.cntx_psh(); ETYPY.prefix();
      ODD.cntx_psh(); ODD.prefix();
      ETZAPZAM.cntx_psh(); ETZAPZAM.prefix();
      {? ETZAPZAM.seek(_typ_zap)
      || ETZAPZAM.ETYPY(); ETZAPZAM.ODD(); ETZAPZAM.ROK_F();
         _wyn:=exec('zdnagedz1','zamdst_nag',_a)
      ?};
      ROK_F.cntx_pop(); ETZAPZAM.cntx_pop(); ETYPY.cntx_pop(); ODD.cntx_pop()
   ?}
|| _wyn:=1
?};
_wyn


\zdnagedz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Zeneracja zapotrzebowania na podstawie zamowienia dostaw / zamowienia wewnetrznego
::   WE: _a - 0 - zamowienie dostaw
::            1 - zamowienie wewnetrzne
::   WY: 1-udalo sie wygenerowac zapotrzebowanie 0-nie udalo sie
::  OLD: \zdnagedz1/zd.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('numer','oldnumer');
_wyn:=0; typobi:=2;
TYPOBIEG.cntx_psh();
TYPOBIEG.index('UNIK'); TYPOBIEG.prefix('Obieg wniosków','Obieg wniosków');
OBIEGI.TYPOBIEG:={? TYPOBIEG.first() || TYPOBIEG.ref() || null ?};
TYPOBIEG.cntx_pop();
EDOKUM.cntx_psh(); EDOKUM.use('skid_v'+ROK_F.KOD);
EDOKOS.cntx_psh(); EDOKOS.use('skid_y'+ROK_F.KOD);
EDOKPAR.cntx_psh(); EDOKPAR.use('skidh_'+ROK_F.KOD);
EDOKGR.cntx_psh(); EDOKGR.use('skid_c'+ROK_F.KOD);
EDOKLOG.cntx_psh(); EDOKLOG.use('skid_d'+ROK_F.KOD);
EDOKUM.blank();
EDOKUM.bl_file('EDOKUM',1); EDOKUM.bl_file('EPODPIS',1);
EDOKUM.memo_set('','UW_OPDL');
EDOKUM.ODD:=ODD.ref();
EDOKUM.TYP:=ETYPY.ref();
EDOKUM.ID:={? ~_a || ZD_NAG.SYM || ZK_N.SYM ?};
EDOKUM.TR:={? ~_a
           || 'Dot.zam.dostaw nr: '+ZD_NAG.SYM+' UWAGI: '+ZD_NAG.UWAGI
           || 'Dot.zam.wewnętrznego nr: '+ZK_N.SYM
           ?};
EDOKUM.ZD_NAG:={? ~_a || $ZD_NAG.ref || $ZK_N.ref() ?};
{? ETYPY.CZY_WAR
|| {? ~_a
   || EDOKUM.WAL:=ZD_NAG.WAL; _netto:=0;
      ZD_POZ.cntx_psh();
      ZD_POZ.index('POZ'); ZD_POZ.prefix(ZD_NAG.ref());
      {? ZD_POZ.first()
      || {! |?
            _netto+={? ZD_NAG.WAL<>INFO.NAROD || ZD_POZ.WAR$2 || ZD_POZ.WARW$2 ?};
            ZD_POZ.next
         !}
      ?};
      ZD_POZ.cntx_pop();
      {? ETYPY.CZY_WAR=2 | ETYPY.CZY_WAR=3 || EDOKUM.NETTO:=_netto ?};
      {? ETYPY.CZY_WAR=1 | ETYPY.CZY_WAR=3 || EDOKUM.WART:=_netto ?}
   || EDOKUM.WAL:={? ZK_N.WAL || ZK_N.WAL || INFO.NAROD ?};
      _netto:=_brutto:=0;
      ZK_P.index('TYPN'); ZK_P.prefix('A',BEER.TYP,ZK_N.ref(),1);
      {? ZK_P.first
      || {! |?
            {? EDOKUM.WAL=INFO.NAROD
            || _netto+=ZK_P.NETTO$2; _brutto+=ZK_P.BRUTTO$2
            |? ZK_P.WAL=EDOKUM.WAL | ZK_P.WAL=null
            || _netto+=ZK_P.NETTOW$2; _brutto+=ZK_P.BRUTTOW$2
            ?};
            ZK_P.next
         !}
      ?};
      {? ETYPY.CZY_WAR=2 | ETYPY.CZY_WAR=3 || EDOKUM.NETTO:=_netto ?};
      {? ETYPY.CZY_WAR=1 | ETYPY.CZY_WAR=3 || EDOKUM.WART:=_brutto ?}
   ?}
?};
{? ETYPY.CZY_KH & ~_a
|| EDOKUM.KHKH:=ZD_NAG.KH;
   EDOKUM.KH:=exec('FindInSet','#table','SLO','SL',ZD_NAG.KH().KOD,INFO.SLKHD___().SLU)
?};
_dop:={? ~_a || ZD_NAG.DATA || ZK_N.DP ?};
EDOKUM.DOP:={? _dop<>date(0,0,0) & _dop>=ROK_F.POCZ_ROK & _dop<=ROK_F.KON_ROK
            || _dop
            |? date()>=ROK_F.POCZ_ROK & date()<=ROK_F.KON_ROK
            || date()
            || ROK_F.POCZ_ROK
            ?};
EDOKUM.TP:={? ~_a || ZD_NAG.DTPREAL || ZK_N.DT ?};
do();

{? EDOKUM.add()
|| {? ~_a
   || ZD_NAG.EZAPOT:=$EDOKUM.ref();
      {? ~ZD_NAG.put() || undo() ?}
   || ZK_N.EZAPOT:=$EDOKUM.ref();
      {? ~ZK_N.put() || undo() ?}
   ?};
   zakres:=1;
   {? EDOKUM.TYP().ATR_G1R>0
   || EDOK_ATR.cntx_psh();
      EDOK_ATR.use('edokat'+(EDOKUM.name()+2)); EDOK_ATR.prefix();
      exec('edk_atr_dolacz','obiegi',0);
      EDOK_ATR.cntx_pop()
   ?};
   VAR_DEL.delete('zakres')
|| undo()
?};
_wyn:=do_state();
end();
EDOKUM.cntx_pop(); EDOKOS.cntx_pop(); EDOKGR.cntx_pop(); EDOKLOG.cntx_pop(); EDOKPAR.cntx_pop();
VAR_DEL.delete('typobi');
VAR_DEL.delete('numer','oldnumer','id_edok');
_wyn


\zdnag_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła określiająca ikony
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
"
   {? ZD_NAG.STAT_REJ='T' || exec('zaakceptowany','icon')
   |? ZD_NAG.STAT_REJ='Z' || exec('zarejestrowany','icon')
   |? ZD_NAG.STAT_REJ='N' || exec('pusta','#icon')
   |? ZD_NAG.STAT_REJ='A' || exec('anulowany','icon')
   || exec('pusta','#icon')
   ?}
"


\dos_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: REDDS
:: OPIS: formula kolorujaca dla akcji Rekord przed dla okienek wertowania 'WER' tabeli ZD_NAG
::  OLD: \dos_kol/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZD_NAG.STAT_REJ='N' & ZD_NAG.STAN<>'M' || 'DOS#01#01'
|? ZD_NAG.STAN='C'                        || 'DOS#01#03'
|? 'MQ'*ZD_NAG.STAN                       || 'DOS#01#04'
|? ZD_NAG.STAN='Z'                        || 'DOS#01#05'
|? ZD_NAG.STAT_REJ='T'                    || 'DOS#01#02'
|? ZD_NAG.STAT_REJ='A'                    || 'DOS#01#06'
|| ''
?}


\zd_nag_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: wyswietlanie zalacznikow do zamowien dostaw
::  OLD: \zd_nag_zal/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZD_NAG.name+2='__'
|| exec('sel_dok','dokum','ZD_NAG',,ZD_NAG.STAT_REJ='A',,1)
|| exec('sel_dok','dokum','ZD_NAG',0,1,,1)
?};
''


\pr_zakr_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: przed redakcją stanu zakresu zamówień
::   WY: 1-oki 0-nie
::----------------------------------------------------------------------------------------------------------------------
ZAKR.ARCH_ROK=''


\f3_arch_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: f3 dla pola Archiwum rok
::----------------------------------------------------------------------------------------------------------------------
OKR.cntx_psh();
OKR.win_sel('WYB_ROK');
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first()
|| OKR.find_key(#ZAKR.ARCH_ROK);
   {? OKR.select(,1) || ZAKR.ARCH_ROK:=$OKR.ROK ?}
?};
OKR.cntx_pop();
~~


\po_arch_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: po polu Archiwum rok
::   WY: 1-oki 0-nie
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_fld:=ZAKR.ARCH_ROK;
{? _fld='' | ((#_fld)>2000 & exec('FindInSet','#table','OKR','OKR',#_fld,REF.FIRMA))
|| _wyn:=1
|| FUN.info('Brak podanego roku w kartotece okresów obrachunkowych.'@);
   ZAKR.ARCH_ROK:='';
   _fld:='';
   _wyn:=0
?};
{? _wyn & _fld<>'' || ZAKR.T:='W' ?};
_wyn


\zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zamówienie dostaw - Zakończenie rejestracji
::   WE: params_get()   - ustawiane w main w !lzk_zak_ezak.fml
::       [_a] - 1-automatyczna akceptacja 0(domyślnie)-nie
::  OLD: \zakoncz/!lzk_zds_azad.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_autoakc:={? var_pres('_a')=type_of(0) || _a || 0 ?};

ZD_NAG.get();
ZD_NAG.cntx_psh();
{? ZD_NAG.STAT_REJ='T'
|| FUN.info('Zamówienie zostało już zaakceptowane.'@);
   _result:=1
|? ZD_NAG.STAT_REJ='Z'
|| _txt:='Zakończono już rejestrację zamówienia.'@;
   FUN.info(_txt);
   _result:=1
|? ZD_NAG.T().VALIDATE<>null() & ~exec('validate','wzorce',ZD_NAG.T().VALIDATE,ZD_NAG,ZD_NAG.ref())
|| _result:=0
|| _ok:=1;
   {? ZD_NAG.KH=null()
   || FUN.info('Należy uzupełnić dostawcę w nagłówku zamówienia.'@);
      _ok:=0
   ?};
   {? _ok
   ||
      _mag:=1;
      {? ZD_NAG.ST='N'
      ||
         _txt:='';
         ZD_NAG.cntx_psh();
         ZD_POZ.cntx_psh();
         ZD_POZ.index('POZ');
         ZD_POZ.prefix(ZD_NAG.ref());
         {? ZD_POZ.first()
         || _mag:={? ZD_NAG.MG<>null || 2 || 1 ?};
            {!
            |? {? _mag=1 & ZD_POZ.MG=null & ZD_POZ.M().RODZ<>'U'
               || _txt+='\n'+'Należy uzupełnić magazyn w nagłówku zamówienia lub w każdej pozycji.'@;
                  _mag:=0
               ?};
               ZD_POZ.KH:=ZD_POZ.ZD_NAG().KH;
               ZD_POZ.KH_MSC:=ZD_POZ.ZD_NAG().KH_MSC;
               ZD_POZ.put(1);
               ZD_POZ.next()
            !};
            _ok:=_mag
         || _txt:='Zamówienie nie ma pozycji.'@;
            _ok:=0
         ?};
         ZD_POZ.cntx_pop();
         ZD_NAG.cntx_pop();
         {? _ok=0 || FUN.info(_txt+'\n'+'Zakończenie niemożliwe.'@) ?}
      ?}
   ?};

   {? _ok & (BPMN.END=2 | FUN.ask('Zakończyć rejestrację zamówienia %1?'@[ZD_NAG.SYM]))
   || ZD_NAG.STAT_REJ:='Z';
      ZD_NAG.BL_STAT:=exec('zdnag_blstat_bl','zamdst_nag');
      {? ZD_NAG.put()
      || exec('del_lnk','plan_dostaw',ZD_NAG.ref(),null());
         _result:=1
      ?}
   ?}
?};
{? _result & _autoakc || exec('zdnag_akceptuj','zamdst_nag',1) ?};
ZD_NAG.cntx_pop();
exec('aktu_zam','zamdst_wspolne',ZD_NAG.ref());
ZD_NAG.get();

_result


\obl_limi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: oblicz licznik i mianownik ... dla procentu realizacji realizacji
::   WE: _a - ref ZD_NAG
::   WY: procent realizacji
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_licznik:=0; _mianownik:=0;
ZD_NAG.cntx_psh();
ZD_POZ.cntx_psh();
ZD_POZ.index('POZ');
ZD_POZ.prefix(_a);
{? ZD_POZ.first()
|| {!
   |? _cn:={? ZD_POZ.CENA=0 || 1 || ZD_POZ.CENA ?};
      _mianownik+=(_cn*ZD_POZ.IL)$2;
      _licznik+=(_cn*ZD_POZ.IL_ZRE)$2;
      ZD_POZ.next()
   !}
?};
ZD_NAG.cntx_pop();
ZD_POZ.cntx_pop();
_wyn:={? _mianownik>0 || (_licznik/_mianownik) || 0 ?}*100 $2;
_wyn


\zdnag_wys_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła określająca ikony
::----------------------------------------------------------------------------------------------------------------------
"
{? EANX.WYS='T'
|| EANX.WYS:=''; 'xwin16.png:166'
|? EANX.WYS='W'
|| EANX.WYS:=''; 'xwin16.png:165'
|? EANX.WYS='A'
|| EANX.WYS:=''; 'xwin16.png:164'
|? EANX.WYS='R'
|| EANX.WYS:=''; 'xwin16.png:167'
|? EANX.WYS='J'
|| EANX.WYS:=''; 'xwin16.png:164'
|? EANX.WYS='I'
|| EANX.WYS:=''; 'xwin16.png:167'
|? EANX.WYS='K'
|| EANX.WYS:=''; 'xwin16.png:168'
|| ''
?}"


\zdnag_zap_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła określająca ikony
::----------------------------------------------------------------------------------------------------------------------
"
{? EANX.ZAP='A'
|| EANX.ZAP:=''; 'xwin16.png:38'
|? EANX.ZAP='T'
|| EANX.ZAP:=''; 'xwin16.png:61'
|? EANX.ZAP='N'
|| EANX.ZAP:=''; 'xwin16.png:37'
|? EANX.ZAP='O'
|| EANX.ZAP:=''; 'xwin16.png:185'
|| ''
?}"


\who_rlock_zdnag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: Sprawdzenie kto blokuje rekord ZD_NAG
::   WE: _a - 0-sprawdzać kto blokuje, 1-nie sprawdzać i zapisać informację do __kom
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & _a
|| __kom.add('Dokument obsługuje inny użytkownik.'@,7)
|| {? FUN.ask('Dokument %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@ [ZD_NAG.SYM]) & ZD_NAG.r_lock(1,,1)
   || ZD_NAG.r_unlock()
   ?}
?}


\zptw_win_zamd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Zwraca okno parametrów filtrowania zamówień dostaw
::----------------------------------------------------------------------------------------------------------------------
_win_red:=ZAKR.mk_edit('Zakres potwierdzeń'@,,'zakr_potw_dost');
ZAKR.win_ewin(_win_red,,'ZAM_P');
_win_red


\zdnag_tra_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Formuła określiająca ikony
::----------------------------------------------------------------------------------------------------------------------
"  _tra:=exec('czyTRANSPORT','transport_wspolne',ZD_NAG.uidref());
   {? _tra || exec('transpZ','icon')
   || exec('pusta','#icon')
   ?}
"


\ae_zd_dtpreal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: po radakcji ZD_NAG.DTPREAL - planowana data realizacji
::----------------------------------------------------------------------------------------------------------------------
exec('akt_tz','faktury_plat');
~~


\zdnag_sym_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Formuła określająca ikony
::----------------------------------------------------------------------------------------------------------------------
"{? ZD_NAG.OBI_POW<>''
 || 'xwin16.png:90'
 || exec('pusta','#icon')
 ?}
"


\zd_clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Uniwersalna funkcja czyszcząca czynności dla zamówień dostaw - w razie potrzeby jak nie ma rekordu kluczowego
::       zrobi done albo error. Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: _a - _mp - obiekt Menadżera procesów
::       _b - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::----------------------------------------------------------------------------------------------------------------------
_mp:=_a;
_in:=_b;

_can_continue:=1;
_obj:=obj_new('RESULT','ZD_NAG','ZDP_NAG');
_obj.RESULT:=0;
_obj.ZD_NAG:=null();
_obj.ZDP_NAG:=null();

_keyRefs:=_mp.getRefs();

{? obj_len(_keyRefs)>0
||
   {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];
      {? type_of(_kref)>0
      ||
         {? (5+ref_name(_kref))=(5+ZD_NAG.name())
         || _obj.ZD_NAG:=exec('FindAndGet','#table',ZD_NAG,_kref,,,null());

            {? _obj.ZD_NAG=null()
            ||
::             Nie znaleziono rekordu kluczowego powiązanego z zamówieniem, więc robię error
               _can_continue:=0;
               exec('zam_deleted_in_proc','zamowienia',_mp)
            |? ~_mp.isMicro() & exec('FindAndGet','#table',ZD_NAG,_obj.ZD_NAG,,"(name()+2)<>'__'",0)
            ||
::             Zamówienie przeniesione do archiwum, robię error
               _can_continue:=0;
               exec('zam_deleted_in_proc','zamowienia',_mp,,,1)
            |? ~_mp.isMicro() & exec('FindAndGet','#table',ZD_NAG,_obj.ZD_NAG,,"STAT_REJ='A'",0)
            ||
::             Zamówienie anulowane, robię error
               _can_continue:=0;
               exec('zam_deleted_in_proc','zamowienia',_mp,,,2)
            ?}
         |? (5+ref_name(_kref))=(5+ZDP_NAG.name())
         || _obj.ZDP_NAG:=exec('FindAndGet','#table',ZDP_NAG,_kref,,,null());

            {? _obj.ZDP_NAG=null()
            ||
::             Nie znaleziono rekordu kluczowego powiązanego z potwierdzeniem zamówieniem, więc robię error
               _can_continue:=0;
               exec('zam_deleted_in_proc','zamowienia',_mp,,1)
            |? ~_mp.isMicro() & exec('FindAndGet','#table',ZDP_NAG,_obj.ZDP_NAG,,"(name()+2)<>'__'",0)
            ||
::             Zamówienie przeniesione do archiwum, robię error
               _can_continue:=0;
               exec('zam_deleted_in_proc','zamowienia',_mp,,1,1)
            ?}
         ?}
      ?}
   !}
?};

{? _can_continue>0
||
:: jest parametr wejściowy ZD_NAG
   {? _obj.ZD_NAG=null() & var_pres('ZD_NAG',_in)=type_of(null())
   || _obj.ZD_NAG:=_in.ZD_NAG
   ?};
:: jest parametr wejściowy ZDP_NAG
   {? _obj.ZDP_NAG=null() & var_pres('ZDP_NAG',_in)=type_of(null())
   || _obj.ZDP_NAG:=_in.ZDP_NAG
   ?}
?};

{? _can_continue>0
|| _obj.RESULT:=1
?};
_obj


\zdnag_obimus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.37]
:: OPIS: oznaczenie wymogu obiegu dla zamówienia dostawy
::   WE: _a - ZD_NAG.ref()
::----------------------------------------------------------------------------------------------------------------------
ZD_NAG.cntx_psh();
ZD_NAG.clear();
{? ZD_NAG.seek(_a,,1)
|| ZD_NAG.OBI_MUS:='T';
   ZD_NAG.put(1)
?};
ZD_NAG.cntx_pop();
~~


\zdnag_akceptuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument zakupu - Akceptuj
::       Obsługa w formule main
::   WE: [_a] - 0(domyślnie) 1-automatyczna akcja
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_AZAD';
_params.UIDREF:=ZD_NAG.uidref();
_params.AKCJA:={? var_pres('_a')=type_of(0) & _a || 'AkceptujAuto' || 'Akceptuj' ?};
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZD_NAG',ZD_NAG.ref());

exec('mp_run','#b__box',_params);

exec('zakr_set','zamdst_nag')


\zdnag_blstat_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [22.26]
:: OPIS: Wartość początkowa ZD_NAG.BL_STAT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_return:='';
{? ZD_NAG.STAT_REJ='T' & ZD_NAG.KH
|| _kh:=ZD_NAG.KH;
   _typyzam:=ZD_NAG.T;
   _dw:=ZD_NAG.DATA;
   {? exec('rodzaje_zam_edokumentu','zbl_dok',_kh,_typyzam,_dw)<>''
   || _return:=exec('not_created','zbl_stat')
   ?}
?};
_return


\zdnag_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Podgląd nagłówka zamówienia
::----------------------------------------------------------------------------------------------------------------------
_edit:=ZD_NAG.win_edit('?');
_win_red:=exec('zdnag_win_edit','zamdst_nag','RED');
ZD_NAG.win_edit(_win_red);
exec('set_efld_opt','zamdst_nag');
ZD_NAG.display();
ZD_NAG.win_edit(_edit);
~~

:Sign Version 2.0 jowisz:1045 2023/10/18 13:16:54 79675bdd4f75c42ea8a8f74db55405755c6afefc0646fda6d510ff01b77a5446d0a2eea458cccca055186d2153c4b8bcc07d1fd7372e9330b46aebc4c83085844bc2ed7282ac232a513fb3b2c2f99bad7b139127d6af460655c2be0c081f4f2df41119ae9cfef7930eb4cdbfd29d80eecd2eba65e2d67c61173082561592d57b
