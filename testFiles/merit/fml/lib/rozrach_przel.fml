:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: rozrach_przel.fml
:: Utworzony: 02.04.2015
:: Autor: PJ
::======================================================================================================================
:: Zawartość: Procedury do obsługi przelewów z rozrachunków i dokumentów księgowych
::======================================================================================================================


\set_kbr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Ustawia zmienne do redakcji rachunku bankowego licencjobiorcy
::  OLD: \set_kbr/skid_ror.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.TABAKR:=REF.INFO;
RACHBANK.KB_1R:='';
RACHBANK.KB_1R_BD:='exec(\'bd_varrb\',\'rachunki\',\'RACHBANK\',\'KB_1R\',REF.INFO,0)';
RACHBANK.KB_1R_BE:='exec(\'set_kbr1\',\'rozrach_przel\')';
RACHBANK.KB_1R_AE:='exec(\'ae_kb\',\'rachunki\')';
RACHBANK.KB_1R_F3:='exec(\'f3_vrbup\',\'rachunki\',\'RACHBANK\',\'KB_1R\',REF.INFO,0)'


\set_kbr1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Pomocnicza do \set_kbr
::  OLD: \set_kbr1/skid_ror.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.TABAKR:=REF.INFO;
ROZNE.KKBAN:=1;
SKID_RBK.index('TAB'); SKID_RBK.prefix(null,REF.INFO,REF.INFO);
SKID_RBK.win_edit('RED_RACH'); SKID_RBK.win_sel('SLO_RACH')


\upr_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula weryfikuje uprawnienia
::  OLD: \upr_rb/skid_ror.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_RBK.win_fml('SLO_RACH',RACHBANK,'KB_5R',,'ICON_BEFORE',"
   {? ~exec('usr_hrb','b_perm',RACHBANK.KB_5R)
   || 'xwin16.png:3'
   || ''
   ?}");
1


\wind_pbt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Wypelnia tabele OPTMP przelewami
::       Wykorzystanie pol tabeli OPTMP: OPTMP.DATA - OP.TZ (termin platnosci); OPTMP.DATAO - data
::       eksportu; OPTMP.KH - OP.KH (kontrahent); OPTMP.KONTO - OP.AN (konto analityczne);
::       OPTMP.SYM - OP.SYM (termin platnosci); OPTMP.SAL - kwota do zaplaty;
::       OPTMP.RB - OP.RB (nr rachunku bankowego do zaplaty); OPTMP.ZNACZ - znacznik maski pbxxxx;
::       OPTMP.ZNACZ2 - znacznik przekazania (wyeksportowania);
::       OPTMP.PAR1 - maska (8 znaków) i ref tabeli PB (kolejne 8 znaków), 17 znak - znacznik czy zatwierdzony
::   WE: _a: zakres przelewow: 1 - dla rozrachunku; 2 - dla kontrahenta z analizy działań windykacyjnych;
::           3 - dla kontrahenta z bazy kontrahentow
::  OLD: \wind_pbt/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
OPTMP.blank(); OPTMP.USER:=v_user3; OPTMP.DATA:=PB.DP;
OPTMP.KH:={? _a=1 || OP.KH |? _a=2 || WIND_KH.KH || KH.ref() ?};
OPTMP.KONTO:=PB.AN; OPTMP.TYT:=PB.TYT; OPTMP.ZNACZ2:=PB.PR; OPTMP.RB:=PB.RW; OPTMP.B:=PB.NBW;
{? OP.KH().TYP='R' || OPTMP.TYT+=' Data VAT RR:'+$OP.DO ?};
OPTMP.ZNACZ:={? PB.name='pbxxxx' || 'T' || 'N' ?}; OPTMP.PAR1:=form(PB.name(),8)+$#PB.ref();
OPTMP.PAR1+=((16-(+OPTMP.PAR1))*' ')+PB.ZT;
::Poczatek modyfikacji dla Maclex
{? MLEX.FIKSB
|| OPTMP.RZ:=PB.RZ; OPTMP.PG:=PB.PG; OPTMP.ZAD:=PB.ZAD
?};
::Koniec modyfikacji dla Maclex
PB_OP.prefix(PB.ref());
{? PB_OP.first()
|| {? PB_OP.size()=1
   || {? (_a=1 & OP.SYM_ROK=PB_OP.SYM_ROK) | _a<>1
      || OPTMP.SYM:=PB_OP.SYM; OPTMP.KONTO:=PB_OP.AN; OPTMP.SAL:=PB.KW; OPTMP.DATAO:=PB.D_EXP;
         OPTMP.SYM_ROK:=PB_OP.SYM_ROK; OPTMP.ODD:=PB_OP.ODD; ROZRACH.SUM4+=PB.KW; OPTMP.add()
      ?}
   || {! |?
         {? (_a=1 & OP.SYM_ROK=PB_OP.SYM_ROK) | _a<>1
         || OPTMP.KONTO:=PB_OP.AN; OPTMP.SYM:=PB_OP.SYM; OPTMP.SAL:=PB_OP.K; OPTMP.DATAO:=PB.D_EXP;
            OPTMP.SYM_ROK:=PB_OP.SYM_ROK; OPTMP.ODD:=PB_OP.ODD; ROZRACH.SUM4+=PB_OP.K; OPTMP.add()
         ?};
         PB_OP.next()
      !}
   ?}
|| {? _a<>1
   || OPTMP.SYM:=PB.SYM; OPTMP.SYM_ROK:=PB.SYM_ROK; OPTMP.SAL:=PB.KW; OPTMP.ODD:=PB.ODD;
      ROZRACH.SUM4+=PB.KW; OPTMP.add()
   ?}
?}


\wind_pbl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Dodaje rekordy do OPTMP do wyswietlania przelewow dla kontrahentow lub rozrachunkow.
::   WE: _a: maska dla tabel PB i PB_OP
::       _b: zakres przelewow: 1 - dla rozrachunku; 2 - dla kontrahenta z analizy działań windykacyjnych;
::           3 - dla kontrahenta z bazy kontrahentow
::  OLD: \wind_pbl/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
PB.use('pb'+_a); PB_OP.use('pop'+_a); PBHIST.use('ph'+_a); PB_OP.index('PB');
{? _b=1
|| pb_sql:='KH=\''+$KH.ref()+'\'';
   exec('setf','hbn_filtr',0,'E','D')
|? _b=2
|| pb_sql:='KH=\''+$WIND_KH.KH+'\'';
   exec('setf','hbn_filtr',0,'E','B')
|| pb_sql:='KH=\''+$KH.ref()+'\'';
   exec('setf','hbn_filtr',0,'E','B')
?};
{? PB.f_first() || {! |? exec('wind_pbt','rozrach_przel',_b); PB.f_next() !} ?}


\kwota_gen_przel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [$12.10]
:: OPIS: Ustalenie kwoty na podstawie pozycji VAT dokumentu ksiegowego na potrzeby generowanego przelewu
::  OLD: \kwota_gen_przel/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
_zapl:=0;
VPOZ.index('VDOK');
VPOZ.prefix(DOK.ref);
{? VPOZ.first()
|| {!
   |? {? DOK.WAL=null | DOK.WAL=FINFO.NAROD
      || _zapl+=VPOZ.BRUTTO
      || _zapl+=VPOZ.WARW
      ?};
      VPOZ.next()
   !}
?};
_zapl


\kwota_vat_przel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.22]
:: OPIS: Ustalenie kwoty VAT na podstawie pozycji VAT dokumentu ksiegowego na potrzeby generowanego przelewu
::----------------------------------------------------------------------------------------------------------------------
_vat:=0;
VPOZ.index('VDOK');
VPOZ.prefix(DOK.ref);
{? VPOZ.first()
|| {!
   |? {? DOK.WAL=null | DOK.WAL=FINFO.NAROD
      || _vat+={? ~( 'ZakOpod,ZakOpoZ'*VPOZ.RVAT().RVAT().KVAT().SYM & 1+VPOZ.GRVAT().GRVAT().KOD='Z')
               || VPOZ.VAT
               || 0
               ?}
      ?};
      VPOZ.next()
   !}
?};
_vat


\gen_kon2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Pomocnicza dla gen_kon.
::  OLD: \gen_kon2/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.KKBAN:=1; PAR_WYDR.TABAKR:='KH'; PAR_WYDR.REF:=#KH.ref();
SKID_RBK.win_edit('RED_RBO');
SKID_RBK.win_sel('SLO_RBO');
RACHBANK.AKTYWNY:='T';
exec('rb_aktywne','rachunki','KH',#KH.ref(),' dla kontrahenta: %1'@[KH.SKR]);
_default:=SKID_RBK.actions('SLO_RBO','Wk:Wk');
_ret:={? SKID_RBK.select() || SKID_RBK.ref() || 0 ?};
SKID_RBK.actions('SLO_RBO',,_default);
_ret


\naszdane
::----------------------------------------------------------------------------------------------------------------------
::  UTW:
:: OPIS: Uzupelnienie danych licencjobiorcy w przelewie
::  OLD: \naszdane/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
PB.KD:='HBN: Prosty';
PB.RD:=RB.get_rbel(2,RACHBANK.KB_1R,'');
PB.NBD:=RB.getrbank(3,RACHBANK.KB_1R);
PB.WAL:=SSTALE.WAL;
PB.ODD:=exec('set_odd','homebank');
{? _a='us'
|| PB.DP:=PAR_WYDR.DPAR1; PB.KW:=PAR_WYDR.RPAR1$2;
   {? XINFO.NIP<>''
   || PB.USNIPREG:=exec('niptostr','#string',XINFO.NIP); PB.USTYPID:='N'
   || PB.USNIPREG:=XINFO.REGON; PB.USTYPID:='R'
   ?};
   PB.RZ:=PAR_WYDR.RZ;
   PB.PG:=PAR_WYDR.PG;
   PB.ZAD:=PAR_WYDR.ZAD
|? _a='zus'
|| {? XINFO.NIP<>''
   || PB.NIP:=exec('niptostr','#string',XINFO.NIP);
      {? XINFO.REGON<>'' || PB.USNIPREG:=XINFO.REGON; PB.USTYPID:='R' ?}
   || PB.USNIPREG:=XINFO.REGON; PB.USTYPID:='R'
   ?}
|| PB.DP:=WYDRUKIN.DATA;
   {? var_pres('DRB',@.CLASS)<0 || exec('obj_drbt','raty') ?};
   {? var_pres('DRB')>0 || obj_del(DRB) ?}; DRB:=obj_new(@.CLASS.DRB);
   _vtp:={? DRB.set_tab(OP.ref()) || DRB.get_drat(WYDRUKIN.DATA) || OP.TZ ?};
   {? var_pres('v_zakr')>0 & v_zakr=1 & (WYDRUKIN.DATA-_vtp>=0)
   || _vk:=0;
      PB.KW:=exec('f_pbgnt2','homebank',WYDRUKIN.DATA)
   || PB.KW:=0
   ?};
   PB.TYT:=WYDRUKIN.SLONAZ
?}


\khdane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Ustawienie w PB pol zwiazanych z kontrahentem.
::  OLD: \khdane/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _ & _a
|| _vr:=_a
|| _vr:=RB.get_drb(1,'KH',#KH.ref())
?};
{? _vr
|| SKID_RBK.cntx_psh(); SKID_RBK.prefix();
   {? SKID_RBK.seek(_vr)
   || PB.NBW:=SKID_RBK.BANK; PB.KRAJ_BAN:=SKID_RBK.KRAJ;
      PB.SWIFT:={? SKID_RBK.SWIFT<>'' || SKID_RBK.SWIFT || SKID_RBK.BANK().SWIFT ?};
      RACHBANK.RB_KH_PB:=RB.get_rbtx(1,SKID_RBK.ref(),SKID_RBK.KRAJ().KODISO);
      PB.RW:=RB.get_rbel(2,RACHBANK.RB_KH_PB);
      _vs:=KH.STR_PZ; PB.STR:={? ~+_vs || PAR_SKID.get(69) || _vs ?}
   ?};
   SKID_RBK.cntx_pop()
|| PB.NBW:=PB_KRAJ_BANK:=null; PB.SWIFT:=PB.RW:=RACHBANK.RB_KH_PB:=''
?};
PB.W:=KH.NAZ;
PB.KP:={? KH.KRAJISO().KODISO='PL' | KH.TYP='P' || KH.KPOCZ || '' ?};
PB.M:=KH.MIASTO;
PB.UL:=exec('kh_ul','rozrach_przel');
PB.KH:=KH.ref();
PB.KRAJ_KH:=KH.KRAJISO


\spr_pbr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.60]
:: OPIS: Sprawdza poprawnosc wypelnienia danych dla przelewu wprowadzanego z dokumentu
::  OLD: \spr_pbr/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
_v:=''; _vw:='Niewypełniono pola ';
_ve:={? PB.win_edit('?')='EDIT_US' || 0 || 1 ?};
{? PB.W=''
|| FUN.emsg(_vw+'Nazwa odbiorcy.'@); _v:='W'
|| {? PB.KW=0
   || FUN.emsg('Wprowadzono zerową kwotę.'@); _v:='KW'
   || {? PB.KW<0 & ~(PAR_SKID.get(67)='T' & DOK.DOK_REJ().KOR='T')
      || FUN.emsg('Wprowadzono ujemną kwotę.'@); _v:='KW'
      || {? RACHBANK.KB_1R=''
         || FUN.emsg(_vw+'Rachunek bankowy zleceniodawcy.'@); _v:='KB_1R'
         || {? (_ve & RACHBANK.RB_KH_PB='') | (~_ve & RACHBANK.RB_US_PB='')
            || FUN.emsg(_vw+'Rachunek bankowy odbiorcy.'@); _v:={? _ve || 'RB_KH_PB' || 'RB_US_PB' ?}
            || {? PB.TYT=''
               || FUN.emsg('%1Tytuł'@[_vw]); _v:='TYT'
               || {? PB.DP=date(0,0,0)
                  || FUN.emsg('Podano zerową datę przelewu.'@); _v:='DP'
                  || {? PB.RODZ='W' & ~PB.KRAJ_KH
                     || FUN.emsg('%1Kraj odbiorcy.'@[_vw]); _v:='KRAJ_KH'
                     |? PB.RODZ='W' & ~PB.KRAJ_BAN
                     || FUN.emsg('%1Kraj banku.'@[_vw]); _v:='KRAJ_BAN'
                     || {? PB.RODZ='W' & PB.RODZZAGR=null

                        || FUN.emsg('Brak rodzaju płatności dla przelewu zagranicznego.'@);
                           _v:='RODZZAGR'
                        || {? PB.RODZ='W' & WYDRUKI.WAL<>FINFO.NAROD
                              & PB.NBW<>null & PB.KRAJ_BAN<>PB.NBW().KODISO
                           || FUN.emsg('Kraj banku niezgodny ze wskazanym bankiem.'@);
                              _v:='KRAJ_BAN'
                           || SKID_RBK.cntx_psh(); SKID_RBK.clear(); _vrbk:='';
                              {? _ve
                              || _vrb:=RB.getrrban(RACHBANK.RB_KH_PB,'KH')
                              || _vrb:=RB.getrrban(RACHBANK.RB_US_PB,'US')
                              ?};
                              {? _vrb & SKID_RBK.seek(_vrb)
                              || _vrbk:=SKID_RBK.BANK().KODISO().KODISO
                              ?};
                              SKID_RBK.cntx_pop();
                              {? WYDRUKI.WAL<>FINFO.NAROD& +_vrbk & _vrbk<>PB.KRAJ_BAN().KODISO
                              || FUN.emsg('Kraj rachunku bankowego odbiorcy niezgodny ze wskazanym krajem banku.'@);
                                 _v:={? _ve || 'RB_KH_PB' || 'RB_US_PB' ?}
                              || {? ~PB.WAL
                                 || FUN.emsg('%1 Waluta.'@[_vw]); _v:='WAL'
                                 || {? PB.WAL<>SSTALE.WAL
                                    || {? ~FUN.ask('Wybrano walutę przelewów inną niż waluta '
                                          'ustawiona w stałych systemu.\nUtworzone przelewy '
                                          'będą widoczne dopiero po zmianie waluty w stałych '
                                          'systemu!\nKontynuować?'@)
                                       || _v:='WAL'
                                       ?}
                                    ?}
                                 ?}
                              ?}
                           ?}
                        ?}
                     ?}
                  ?}
               ?}
            ?}
         ?}
      ?}
   ?}
?};
{? _v=''
|| {? PB.RODZ='KU' & PB.USTYPPL=''
   || FUN.emsg('Pole Typ płatności dla przelewu do US nie może być niewypełnione.'@);
      _v:='USTYPPL'
   ?}
?};
{? _v='' & PB.SP='T'
|| PB.RD:=RB.get_rbel(2,RACHBANK.KB_1R);
   SKID_RBK.cntx_psh();
   SKID_RBK.index('NUMER');
   SKID_RBK.prefix(PB.RD,PB.RD);
   _innwal:='';
   _wal:=null;
   _pln:=0;
   {? SKID_RBK.first()
   || _innwal:=SKID_RBK.INNWAL;
      _vat:=SKID_RBK.VAT='T';
      _pln:=SKID_RBK.WAL().KOD='PLN'
   || FUN.emsg('Podany rachunek nie występuje w bazie rachunków licencjobiorcy.'@);
      _wy:='KB_1R'
   ?};
   SKID_RBK.cntx_pop();
   {? ~_pln
   || FUN.emsg('Płatności typu Split payment są możliwe tylko z rachunku bankowego w PLN.'@);
      _v:='KB_1R'
   ?};
   {? _v='' & PB.RW=PB.RD & PB.NBD=PB.NBW
   || {? ~FUN.ask('Rachunek wierzyciela i dłużnika są identyczne. Kontynuować?'@)
      || _v:='KB_1R'
      ?}
   ?};
   {? _v='' & _vat
   || {? ~FUN.ask('Podany rachunek jest rachunkiem do obsługi VAT (Split payment). Kontynuować?'@)
      || _v:='KB_1R'
      ?}
   ?};
   {? _v='' & PB.KHNIP=''
   || FUN.emsg('Pole NIP w przypadku obsługi podzielonej płatności powinno być wypełnione.'@);
      _v:='KHNIP'
   ?};
   {? _v='' & exec('nip_ok','#id',PB.KHNIP)=0
   || _v:='KHNIP'
   ?};
   {? _v=''
   || {? PB.KHNIP<>PB.KH().NIP
      || {? ~FUN.ask('Podany numer NIP jest różny od numeru NIP w kartotece kontrahentów. Zaakceptować?'@)
         || _v:='KHNIP'
         ?}
      ?}
   ?};
   {? _v='' & PB.NRFAK=''
   || FUN.emsg('Pole Numer faktury w przypadku obsługi podzielonej płatności powinno być wypełnione.'@);
      _v:='NRFAK'
   ?};
   {? _v='' & PB.SP_V<=0 & PB.KW>=0
   || FUN.emsg('Kwota VAT w przypadku obsługi podzielonej płatności powinna być większa od zera.'@);
      _v:='SP_V'
   ?};
   {? _v='' & PB.KW<0 & PB.SP_V>0
   || FUN.emsg('Kwota VAT nie może być większa od zera, jeżeli kwota przelewu jest ujemna.'@);
      _v:='SP_V'
   ?};
   {? _v='' & PB.SP_V>PB.KW & PB.SP_V>0 & PB.KW>0
   || FUN.emsg('Kwota VAT nie może być większa od kwoty przelewu.'@);
      _v:='SP_V'
   ?};
   {? _v='' & |PB.SP_V>|PB.KW & PB.SP_V<0 & PB.KW<0
   || FUN.emsg('Kwota VAT mniejsza niż kwota przelewu.'@);
      _v:='SP_V'
   ?};
   {? _v='' & PB.KH & exec('is_pb_zb','rozrach_przel') & exec('is_zb_pyt','rozrach_przel')=0
   || _v:='NRFAK'
   ?}
?};
_v


\f_pbgen4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Dane rozrachunku generowanego przelewu elektronicznego.
::  OLD: \f_pbgen4/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
PB_OP.prefix(); PB_OP.blank(); PB_OP.PB:=PB.ref(); PB_OP.WAL:=OP.WAL().KOD; PB_OP.ODD:=OP.ODD;
PB_OP.DP:={? OP.TZ>WYDRUKIN.DATA || OP.TZ || WYDRUKIN.DATA ?};
PB_OP.AN:=OP.AN;
PB_OP.SYM:=OP.SYM; PB_OP.SYM_ZEW:=OP.SYM_ZEW; PB_OP.SYM_ROK:=OP.SYM_ROK;
PB_OP.K:=PB.KW; PB_OP.TYT:=PB.TYT;
PB_OP.SP_V:={? PB.SP='T' || PB.SP_V ?};
::Poczatek modyfikacji dla Maclex 13.10.2009 AK [1120]
{? MLEX.FIKSB
|| PB_OP.RZ:=PB.RZ; PB_OP.PG:=PB.PG; PB_OP.ZAD:=PB.ZAD
?};
::Koniec modyfikacji dla Maclex
PB_OP.add()


\addornot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Dodaje przelew "zwykly"
::   WE: _a - ??
::  OLD: \addornot/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
{? menu_txt()=''
|| PB.RODZ:='K';
   exec('okno_pb','homebank','EDIT',1)
|| PB.RODZ:={? menu_txt()*'walutowy' | var_pres('v_zakr')>0 & v_zakr=4 &  SSTALE.WAL<>FINFO.NAROD || 'W' || 'K' ?};
   exec('okno_pb','homebank',{? PB.RODZ='W' || 'PB_EDIW' || 'EDIT' ?})
?};
RACHBANK.RB_LB_PB:='';
{? ~(_ & _a) || RACHBANK.RB_KH_PB:='' ?};
{? PB.RODZ='W' || RACHBANK.RB_LB_PB:=PB.RD ?};
__PBCONF:=0;
exec('odd_filtr','fst');
exec('set_split_field','homebank');
_f2:=PB.edit("exec('spr_pbr','rozrach_przel')");
{? __PBCONF=1 | _f2
|| {? PB.SP<>'T' || PB.SP_V:=0; PB.KHNIP:=''; PB.NRFAK:='' ?};
   PB.USER_GEN:=exec('usr_zar','dok_fks'); PB.DZ:=date();
   {? PB.SP<>'T' || VAR_EDIT.KW:=0 ?};
   _ok:=1;
   {? exec('cond_pb','blp')
:: Sprawdzenie RB z BLP
   || {? XINFO.BLP_SG='T' || exec('chk_pb','blp',PB,0) || exec('s_vat_skid_rbk','blp',PB) ?};
:: Blokada generowania przelewu w przypadku niezgodności z BLP
      {? exec('lock_pb','blp',XINFO.BLP_BG,,PB) || _ok:=0 ?}
   ?};
   {? _ok & PB.add()
   || {? PAR_SKID.get(48)='T' || exec('pb_confirm','hbn') ?};
      {? PB.ZT='T' || PAR_WYDR.RPAR1+=PB.KW || PAR_WYDR.RPAR2+=PB.KW ?}; PAR_WYDR.RPAR3:=PAR_WYDR.RPAR1+PAR_WYDR.RPAR2;
      {? WYDRUKIN.REJPRZEK
      || _sk_rbk:=RB.getrrban(PB.RD,REF.INFO,0); {? _sk_rbk=0 || _sk_rbk:=null ?};
         {? var_pres('GIODOTMP')>0 || exec('gen_tmp','giodo',PB.KH().KOD) ?};
         exec('przel','giodo','kh',PB.KH,_sk_rbk,WYDRUKIN.DATPRZEK)
      ?};
      {? var_pres('v_zakr')>0
      || {? v_zakr=1 | v_zakr=4 & __op_ref<>null || exec('f_pbgen4','rozrach_przel') ?}
      ?};
      pbcn+=1;
      {? ~(var_pres('v_zakr')>0 & v_zakr=4)
      || {? _=0 & PB.f_active() || PB.f_add() ?}
      ?}
   ?};
   TYPYTRAN.actions('WER2')
?};
VAR_DEL.delete('__F3PBKH','__BEPBKH')


\gen_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Generowanie przelewow "zwyklych"
::   WE: [_a] - tytulem
::       [_b] - kwota
::       [_c] - wskazanie na rachunek bankowy odbiorcy
::       [_d] - kwota vat dla przelewów split payment
::   WY: liczba wygenerowanych przelewów
::  OLD: \gen_kon/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
_lwp:=0; _warunek:=var_pres('v_zakr')>0 & v_zakr=4; _ret:=1;
WYDRUKIN.STOPE:='N'; VAR_EDIT.KW:=0; _walop:=exec('czywal','dok_fks_ks',FINFO.NAROD);
{? ~(menu_txt()*'walutowy' ) & SSTALE.WAL<>FINFO.NAROD & _warunek=0
|| FUN.emsg('Przelew zwykły nie może być wykonany w walucie innej niż narodowa.'@); _ret:=0
|? menu_txt()*'walutowy' & SSTALE.WAL=FINFO.NAROD & _warunek=0
|| {? _walop<>''
   || _ret:=FUN.ask('Rozrachunek ma powiązany rozrachunek w walucie innej niż narodowa.\n'
                    'Zapłata w PLN może spowodować nie rozliczenie odpowiadającego rozrachunku w '+_walop+'.\n'
                    'Czy chcesz kontynuować realizację przelewu walutowego w walucie narodowej\n'
                    'na konto bankowe prowadzone w PLN?'@)
   ?}
|? menu_txt()*'krajowy' & _warunek=0
|| {? _walop<>''
   || _ret:=FUN.ask('Rozrachunek ma powiązany rozrachunek w walucie innej niż narodowa.\n'
              'Zapłata w PLN może spowodować nie rozliczenie odpowiadającego rozrachunku w '+_walop+'.\n'
              'Czy kontynuować?'@)
    ?}
?};
{? _ret
|| {? _=0 || _a:=''; _b:=-1 |? _=1 || _b:=-1 ?};
   exec('ini_tmp','giodo'); exec('set_kbr','rozrach_przel'); danodane:=pbcn:=pbst:=0; _v_rb:=null;
   RACHBANK.KB_5R_BD:='RACHBANK.KB_5R:=RB.get_rbtx(1,SKID_RBK.ref(),SKID_RBK.KRAJ().KODISO)';
   WYDRUKIN.DATPRZEK:=date(); WYDRUKIN.REJPRZEK:=1; WYDRUKIN.SLONAZ:=_a; WYDRUKIN.win_edit('PRZELEW2');
   WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'mark=1',,'DATPRZEK');
   _va1:='Nie ustawiono domyślnego rachunku bankowego kontrahenta!\nCzy wybrać rachunek bankowy kontrahenta '@;
    _vt:='Generowanie przelewów'@;
   _va2:='Brak rachunku bankowego kontrahenta!\nCzy dołączyć rachunek bankowy dla kontrahenta '@;
   {? WYDRUKIN.edit("
      {? WYDRUKIN.REJPRZEK
      || _ret:=__CHK.record3(RACHBANK,'KB_1R','Konto bankowe',WYDRUKIN,'DATPRZEK',)
      || _ret:=__CHK.record3(RACHBANK,'KB_1R','Konto bankowe')
      ?};
      {? ~+_ret
      || SKID_RBK.cntx_psh();
         _v:=RB.getrrban(RACHBANK.KB_1R,REF.INFO);
         {? _v & SKID_RBK.seek(_v)
         || {? SKID_RBK.WAL<>SSTALE.WAL & SKID_RBK.INNWAL<>'T'
            || FUN.emsg('Z wybranego rachunku bankowego nie można dokonać przelewu w walucie %1.'@[SSTALE.WAL().KOD]);
                _ret:='KB_1R'
            ?}
         ?};
         SKID_RBK.cntx_pop()
      ?}; _ret")
   || {? var_pres('v_zakr')>0
      || _v:=pbst:=1;
         _vkh:={? v_zakr=1
               || OP.KH
               |? v_zakr=2
               || WIND_KH.KH
               |? v_zakr=4
               || KH.cntx_psh();
                  KH.index('SKR');
                  KH.prefix(2,DOK.KH);
                  {? KH.first()
                  || _ref:=KH.ref()
                  ?};
                  KH.cntx_pop();
                  _ref
               || KH.ref()
               ?};
         KH.seek(_vkh);
         SKID_RBK.cntx_psh(); SKID_RBK.index('RD');
         {? v_zakr=1 & OP.RB
         || _v_rb:=OP.RB
         |? var_pres('_c')>0 & _c<>null
         || _v_rb:=_c
         || {? SKID_RBK.prefix(RACHBANK.FIRMA,'KH',#KH.ref()); SKID_RBK.first()
            || {? SKID_RBK.size()>1
               || {? SKID_RBK.find_key('T')
                  || _v_rb:=SKID_RBK.ref()
                  || _v:=FUN.ask('Nie ustawiono domyślnego rachunku bankowego kontrahenta.\n'
                                 'Czy wybrać rachunek bankowy kontrahenta %1 ?'@[KH.SKR]);
                     {? _v || _v_rb:=exec('gen_kon2','rozrach_przel') ?}
                  ?}
               || _v_rb:=SKID_RBK.ref()
               ?}
            || _v:=FUN.ask('Brak rachunku bankowego kontrahenta.\n'
                           'Czy dołączyć rachunek bankowy dla kontrahenta %1 ?'@[KH.SKR]);
               {? _v || _v_rb:=exec('gen_kon2','rozrach_przel') ?}
            ?}
         ?};
         SKID_RBK.cntx_pop();
         PB.cntx_psh();
         PB.prefix();
         PB.blank();
         _vr:=PB.ref();
         exec('naszdane','rozrach_przel',' kontrahent');
         {? _b<>-1 || PB.KW:=_b ?};
         exec('khdane','rozrach_przel',_v_rb);
         {? v_zakr=1 | v_zakr=4 & var_pres('__op_ref')>0 & __op_ref<>null
         || PB.KH:=OP.KH;
            PB.SYM:=OP.SYM; PB.SYM_ROK:=OP.SYM_ROK; PB.SYM_ZEW:=OP.SYM_ZEW;
            PB.AN:=OP.AN;
            {? OP.KH().TYP='R' || PB.TYT+=' Data VAT RR:'+$OP.DO ?};
            PB.F_VAT:={? exec('chk_fvat','hbn') || 'T' || 'N' ?};
            {? |PB.TYT<>OP.SYM_ZEW
            || PB.TYT+={? |PB.TYT<>'' || ' ' || '' ?}+OP.SYM_ZEW
            ?};
            {? 'TWZ'*OP.SP>0
            || _ret:=exec('f_vat','fks_sp',OP.ref(),1);
               PB.win_efml('EDIT',,'SP_V',,'ICON_BEFORE',"{? VAR_EDIT.KW || 'xmenu16.png:7' || ''?}");
               PB.SP:='T';
               PB.SP_V:={? _>=4 || _d || _ret ?};

               PB.KHNIP:=OP.KH().NIP;
               PB.NRFAK:=OP.SYM_ZEW
            ?}
         |? v_zakr=2
         || PB.KH:=WIND_KH.KH
         || PB.KH:=KH.ref()
         ?};
         exec('addornot','rozrach_przel',1,);
         {? PB.ref()<>_vr || _vr:=PB.ref() || _vr:=null ?};
         PB.cntx_pop(); PB.seek(_vr)
      || KH.index('KOD'); KH.prefix(2); KH.win_sel('WERHOME'); KH.first();
         _vrbl:=SKID_RBK.ref();
         {! |? KH.select(,1) |!
            _kb1rbe:=RACHBANK.KB_1R_BE; VAR_EDIT.KW:=0;
            RACHBANK.KB_1R_BE:='{? menu_txt()*\'ZUS\' | menu_txt()=\'walutowy\' || 0 || '+_kb1rbe+' ?}';
            SKID_RBK.clear(); SKID_RBK.seek(_vrbl); SKID_RBK.BANK();
            _v:=pbst:=1; PB.cntx_psh(); PB.prefix();
            PB.blank(); _vr:=PB.ref();
            exec('naszdane','rozrach_przel',' kontrahent');
            {? _b<>-1 || PB.KW:=_b ?};
            exec('khdane','rozrach_przel'); exec('addornot','rozrach_przel');
            {? PB.ref()<>_vr || _vr:=PB.ref() || _vr:=null ?};
            RACHBANK.KB_1R_BE:=_kb1rbe;
            PB.cntx_pop(); PB.seek(_vr)
         !};
         KH.win_sel('WER')
      ?}
   ?};
   {? _warunek=0
   || {? pbst
      || FUN.emsg('Liczba wygenerowanych przelewów: %1'@[$pbcn]);
        {? _>0 & PB.f_active()>0
        || PB.f_rfresh()
        |? _=0
        || OPTMP.prefix(v_user3);
           {? OPTMP.first() || {! |? OPTMP.del() !} ?};

           exec('wind_pb_viscera','rozrach_przel',1,,1)

        ?}
      ?}
   || OPTMP.prefix(v_user3);
      {? OPTMP.first() || {! |? OPTMP.del() !} ?}
   ?};
   RACHBANK.KB_5R_BD:='RACHBANK.KB_5R:=RB.get_rbtx(2,PB.RD,PB.NBD().KODISO().KODISO)';
   exec('del_tmp','giodo');
   _lwp:=pbcn;
   VAR_DEL.delete('pbcn','pbst','DRB')
?};
TYPYTRAN.actions('WER2');
_lwp


\gen_przelew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [$12.10]
:: OPIS: Generowanie przelewu na podstawie dokumentu VAT zwiazanego z nabyciem
::  OLD: \gen_przelew/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
__op_ref:=null;
_kwota_v:=exec('kwota_gen_przel','rozrach_przel');
_kw_vat:=exec('kwota_vat_przel','rozrach_przel');
VAR_DEL.delete('__PRZEL');
__PRZEL:=sql('select '+
           'POZ.KON as KON, POZ.ID as ID, POZ.WAL as WAL, POZ.ODD as ODD, '+
           'sum( case when POZ.STR=''Wn'' then -POZ.SUM else POZ.SUM end) as SUMA, '+
           'sum( case when POZ.STR=''Wn'' then -POZ.SUMW else POZ.SUMW end) as SUMAW, '+
           'POZ.SYM_ROK as SYM_ROK, POZ.TP as TP '+
           'from POZ '+
           'left join SLO using(POZ.WAL, SLO.reference) '+
           'where POZ.ID<>'''' and POZ.DOK='':_a'' '+
           'group by '+
           'POZ.KON, POZ.ID, POZ.WAL, POZ.ODD, POZ.SYM_ROK, POZ.TP '+
           'order by 1, 2, 3, 4',$DOK.ref);
{? type_of(__PRZEL)<>type_of(SYSLOG) || VAR_DEL.delete('__PRZEL','__op_ref'); return(0) ?};
_il:=__PRZEL.size();
{? _il=0
|| _wal:={? DOK.WAL=null | DOK.WAL=FINFO.NAROD || FINFO.NAROD || DOK.WAL ?};
   {? DOK.D3>WYDRUKIN.DATA || WYDRUKIN.DATA:=DOK.D3 ?};
   SSTALE.cntx_psh();
   SSTALE.WAL:=_wal;
   {? DOK.RB<>null
   || _wy:=exec('gen_kon','rozrach_przel',DOK.SYM_ZEW,_kwota_v,DOK.RB,_kw_vat)
   || _wy:=exec('gen_kon','rozrach_przel',DOK.SYM_ZEW,_kwota_v,,_kw_vat)
   ?};
   SSTALE.cntx_pop()
|? _il=1
|| _ok:=1;
   OP.index('KON_O');
   _rb:=null;
   {? __PRZEL.WAL=''
   || _wal:=FINFO.NAROD
   || SLO.cntx_psh();
      SLO.prefix();
      {? SLO.seek(BB.sqlint(8-__PRZEL.WAL),) || _wal:=SLO.ref() || _wal:=FINFO.NAROD ?};
      SLO.cntx_pop()
  ?};
   OP.prefix(_wal,BB.sqlint(8-__PRZEL.ODD),__PRZEL.KON,__PRZEL.ID,__PRZEL.ID,__PRZEL.SYM_ROK);
   __op_ref:={? OP.first() || _wy:=1; _rb:=OP.RB; OP.ref || null ?};
   {? var_pres('DRB',@.CLASS)<0 || exec('obj_drbt','raty') ?};
   {? var_pres('DRB')>0 || obj_del(DRB) ?};
   DRB:=obj_new(@.CLASS.DRB);
   {? __op_ref<>null
   || {? DRB.set_tab(OP.ref())
      || _vtp:=DRB.get_drat(WYDRUKIN.DATA)
      || {? OP.TZ>WYDRUKIN.DATA || WYDRUKIN.DATA:=OP.TZ ?};
         _vtp:=OP.TZ
      ?};
      _ok:=DOK.DTW<=DOK.D3 |
         FUN.ask(
            'Data zapisu dokumentu jest późniejsza niż termin płatności.\n\n'
            'Podpowiadana kwota przelewu uzyskana w oparciu o taki dokument będzie nieprawidłowa.\n'
            'Kontynuować tworzenie przelewu?'@
         );
      {? _ok
      || PbKw:=0;
         _kwota:=exec('f_pbgnt2','homebank',_vtp);
         {? _kwota<_kwota_v | DOK.DOK_REJ().SLO().KOD='PROSTY'
         || _kwota_v:=_kwota
         ?};
         _kw_vatw:=exec('pb_saldovat','homebank',1);
         {? _kw_vatw<_kw_vat
         || _kw_vat:=_kw_vatw
         ?};
         {? PbKw & _kwota_v=0
         || _ok:=FUN.choice('Wykonano już przelew dla dokumentu.'@,1,'Utwórz przelew'@);
            {? _ok=0 || _wy:=-1 ?}
         ?};
         VAR_DEL.delete('PbKw')
      || _wy:=0
      ?}
   ?};
   {? _ok>0
   || SSTALE.cntx_psh();
      SSTALE.WAL:=_wal;
      {? _rb<>null
      || _wy:=exec('gen_kon','rozrach_przel',DOK.SYM_ZEW,_kwota_v,_rb,_kw_vat)
      || _wy:=exec('gen_kon','rozrach_przel',DOK.SYM_ZEW,_kwota_v,,_kw_vat)
      ?};
      SSTALE.cntx_pop()
   ?};
   VAR_DEL.delete('DRB')
|| FUN.info('W przypadku, gdy w dokumencie występuje kilka pozycji rozrachunkowych\n'
             'nie można wygenerować przelewów korzystając z bieżącej opcji.'@)
?};
VAR_DEL.delete('__PRZEL','__op_ref');
{? _wy>1 || _wy:=1 ?};
_wy


\set_rbop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.10]
:: OPIS: Ustawienie wyswietlania rachunkow bankowych dla rozrachunku (FIKS)
::  OLD: \set_rbop/skid_ror.fml
::----------------------------------------------------------------------------------------------------------------------
RACHBANK.KB_1R:=RACHBANK.KB_3R:='';
{? _ & _a='OP'
|| RACHBANK.KB_1R_BD:=' '+
                      'RACHBANK.KB_1R:=RB.get_rbtx(2,OP.RB().N,OP.RB().KRAJ().KODISO,\''+REF.FIRMA().SYMBOL+'KH2\','+
                      '#OP.KH)';
   RACHBANK.KB_3R_BD:=' RACHBANK.KB_3R:=RB.get_rbtx(2,OP.RB().N,OP.RB().KRAJ().KODISO,\'KH\',#OP.KH)'
|| RACHBANK.KB_1R_BD:='RACHBANK.KB_1R:={? ~+RACHBANK.KB_1R || RB.get_rbtx(2,OP.RB().N,'
      +'OP.RB().KRAJ().KODISO,\''+REF.FIRMA().SYMBOL+'KH2\',#OP.KH) || RB.get_rbtx(2,RACHBANK.KB_1R) ?}';
   RACHBANK.KB_3R_BD:='RACHBANK.KB_3R:={? ~+RACHBANK.KB_3R || RB.get_rbtx(2,OP.RB().N,'
      +'OP.RB().KRAJ().KODISO,\'KH\',#OP.KH) || RB.get_rbtx(2,RACHBANK.KB_3R) ?}'
?};
RACHBANK.KB_1R_BE:='{? OP.KH & exec(\'ps_65\',\'rachunki\')=\'T\' || 1 || 0 ?}';
RACHBANK.KB_3R_BE:='{? OP.KH || 1 || 0 ?}';
RACHBANK.KB_1R_F3:='exec(\'f3_rb_op\',\'rozrach_przel\',\''+REF.FIRMA().SYMBOL+'KH2\')';
RACHBANK.KB_3R_F3:='exec(\'f3_rb_op\',\'rozrach_przel\',\'KH\')';
RACHBANK.KB_1R_AE:='{? RACHBANK.KB_1R<>\'\' & RB.get_rbtx(2,RACHBANK.KB_1R,\'\',\''+REF.FIRMA().SYMBOL+'KH2\','
   +'#OP.KH)=\'\' || FUN.emsg(\'Należy wybrać rachunek znajdujący się w słowniku.\'@); 0 || '
   +'{? RACHBANK.KB_1R<>\'\' || OP.RB:=RB.getrrban(RACHBANK.KB_1R,\''+REF.FIRMA().SYMBOL+'KH2\',#OP.KH) || OP.RB:=null '
   +'?}; 1 ?}';
RACHBANK.KB_3R_AE:='{? RACHBANK.KB_3R<>\'\' & RB.get_rbtx(2,RACHBANK.KB_3R,\'\',\'KH\','
   +'#OP.KH)=\'\' || FUN.emsg(\'Należy wybrać rachunek znajdujący się w słowniku.\'@); 0 || '
   +'{? RACHBANK.KB_3R<>\'\' || OP.RB:=RB.getrrban(RACHBANK.KB_3R,\'KH\',#OP.KH) || OP.RB:=null '
   +'?}; 1 ?}';
RACHBANK.KB_5R_BD:='RACHBANK.KB_5R:=RB.get_rbtx(1,SKID_RBK.ref())'


\f3_rb_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: F3 w polu rachunku bankowego na poziomie OP
::  OLD: \f3_rb_op/skid_ror.fml
::----------------------------------------------------------------------------------------------------------------------
_vref:=null;
ROZNE.KKBAN:=1;
RACHBANK.AKTYWNY:='T';
{? _a=REF.FIRMA().SYMBOL+'KH2'
|| SKID_RBK.win_edit('RED_RBS'); SKID_RBK.win_sel('SLO_RBS');
   ROZNE.KH_WYB:=OP.KH;
   RACHBANK.KB_2R_BD:='{? -(1+menu_txt())<>\'d\' || SKID_RBK.cntx_psh(); SKID_RBK.prefix(); '
      +'{? SKID_RBK.SKID_RBK<>0 & SKID_RBK.size()>0 || '
      +'RACHBANK.KB_2R:=RB.get_rbtx(1,SKID_RBK.SKID_RBK) || RACHBANK.KB_2R:=\'\' ?}; '
      +'SKID_RBK.cntx_pop() || 1 ?}';
   _vref:=RB.getrrban(RACHBANK.KB_1R,_a,#OP.KH);
   exec('rb_aktywne','rachunki',_a,#OP.KH);
   {? _vref || SKID_RBK.seek(_vref) ?};
   {? SKID_RBK.select(,1) || RACHBANK.KB_1R:=SKID_RBK.N ?}
|? _a='KH'
|| PAR_WYDR.TABAKR:=_a;
   PAR_WYDR.REF:=#OP.KH;
   SKID_RBK.win_edit('RED_RBO'); SKID_RBK.win_sel('SLO_RBO');
   _vref:=RB.getrrban(RACHBANK.KB_1R,_a,#OP.KH);
   exec('rb_aktywne','rachunki',_a,#OP.KH);
   {? _vref || SKID_RBK.seek(_vref) ?};
   {? SKID_RBK.select(,1) || RACHBANK.KB_3R:=SKID_RBK.N ?}
?}


\wind_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Przygotowuje tabele OPTMP do wyswietlania przelewow dla kontrahentow lub rozrachunkow.
::   WE: _a: zakres przelewow: 1 - dla rozrachunku; 2 - dla kontrahenta z analizy działań windykacyjnych;
::           3 - dla kontrahenta z bazy kontrahentow
::           4 - dla kontrahenta na podstawie faktury nabycia
::       _b: 2-czyszczenie zmiennych; 1-pokazywac okno selekcji; 0-nie pokazywac okna selekcji
::  OLD: \wind_pb/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? var_pres('_b')<>type_of(1) || _b:=1 ?};
__par_a:=_a;
__par_b:=_b;
{? _a=1
|| _vt:=' dla rozrachunku: %1'@[OP.SYM];
   OPTMP.win_fml('PBR',,'TYT',,'ICON_BEFORE',"
      {? PB.ZT='T' || 'xwin16.png:13' || ''?}
      ")
|? _a=2
|| _vt:=' dla kontrahenta: %1'@[WIND_KH.KH().SKR]
|? _a=3
|| _vt:=' dla kontrahenta: %1'@[KH.SKR]
|| _vt:=' dla kontrahenta: %1'@[KH.SKR]
:: +', na podstawie dookumentu: '+DOK.NK
?};
__setf_m:=0;
KH.cntx_psh();
{? _a=1 & OP.KH=null
|| FUN.info('Rozrachunek nie jest związany z kontrahentem.'@)
|| {? _b=0 || {? _a<>4 || OPTMP.actions('PB','O:O',,1) ?} ?};
   {? _b=1 | _b=0
   || exec('setf','hbn_filtr',0,'E','D');
      exec('get_pfz','hbn_filtr',0,'E','D')
   ?};
   {? _b=1 | _b=0
   || exec('wind_pb_viscera','rozrach_przel',_a,_b)
   ?};
   {? _b=1
   || OPTMP.fld_opt(OPTMP.win_sel('?'),'col_name="%1"'[ROZRACH.SYMR],OPTMP,'SAL');
      OPTMP.select()
   ?};
   {? _a=4
   || _wy:=exec('gen_przelew','rozrach_przel');
      1
   ?};
   {? _b=1 | _b=2
   || OPTMP.hdr_sel(); OPTMP.prefix(v_user3);
      {? OPTMP.first() || {! |? OPTMP.del() !} ?};
      VAR_DEL.delete('v_user3','v_zakr');
      exec('set_rbop','rozrach_przel');
      VAR_DEL.delete('TAB_SPEC','TT_TYPP','TT_JKS','TT_SORT','ws_tp','ws_jk','ssort','sfrom','swhere','STAB_SPE','STT_TYPP','STT_JKS','STT_SORT');
      VAR_DEL.delete('pb_sql')
   ?};
   {? _b=2 || OPTMP.actions('PB') ?}
?};
{? _b=1 | _b=2 || VAR_DEL.delete('__par_a','__par_b') ?};
KH.cntx_pop();
__setf_m:=0;
{? _a=4 || _wy || 1 ?}


\wind_pb_viscera
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: wnetrznosci procedury wind_pb
::   WE: _a: zakres przelewow: 1 - dla rozrachunku; 2 - dla kontrahenta z analizy działań windykacyjnych;
::           3 - dla kontrahenta z bazy kontrahentow;
::           4 - dla kontrahenta z dokumentu nabycia
::       _b: 2-czyszczenie zmiennych; 1-pokazywac okno selekcji; 0-nie pokazywac okna selekcji
::     [_c]: 1 - bez ustawiania hdr_sel
::  OLD: \wind_pb_viscera/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
v_zakr:=_a; ROZRACH.SUM4:=0; v_user3:=tm_form(OPTMP.tm_stamp())+24;
OPTMP.use('optmp__'); OPTMP.index('ZNACZ'); OPTMP.prefix(v_user3);
exec('wind_pbl','rozrach_przel','xxxx',v_zakr);
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(SSTALE.AR); OKRO_F.seek(SSTALE.AO);
{? OKRO_F.POCZ<>date(0,0,0)
|| _vr:=4+$OKRO_F.POCZ
|| {? OKRO_F.next() || _vr:=4+$OKRO_F.POCZ() || {? OKRO_F.prev() || _vr:=4+$OKRO_F.POCZ() ?} ?}
?};
OKRO_F.cntx_pop();
exec('wind_pbl','rozrach_przel',_vr,v_zakr);
_vr:=$(#_vr-1); exec('wind_pbl','rozrach_przel',_vr,v_zakr);
_vr:=$(#_vr+2); exec('wind_pbl','rozrach_przel',_vr,v_zakr);
PB.use('pbxxxx'); PB_OP.use('popxxxx'); PBHIST.use('phxxxx'); OPTMP.first();
{? _a=1
|| _vt:=' dla rozrachunku: %1'@[OP.SYM]
|? _a=2
|| _vt:=' dla kontrahenta: %1'@[WIND_KH.KH().SKR]
|| _vt:=' dla kontrahenta: %1'@[KH.SKR]
?};
VAR_DEL.delete('SETFOPTM');
KH.win_dict('WERHOME'); ROZNE.SZUK:=1; {? _a=1 || OPTMP.win_sel('PBR') || OPTMP.win_sel('PB') ?};
OPTMP.win_patt('PB'); {? _<3 | _c<>1 || OPTMP.hdr_sel(_vt) ?}


\f_pbop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Formula do wyswietlania rozrachunkow zwiazanych
::       z przelewem elektronicznym.
::   WE: _a: tabela PB lub PW
::  OLD: \f_pbop/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
_vr:=1;
{? PW.TYPTRAN<>''
|| _find_tt:=exec('findttr','hbn');
   {? _find_tt & TYPYTRAN.ROZR='N'
   || _vr:=0
   ?}
?};
{? _vr
|| _vtabr:={? _a='PB' || PB_OP || PW_OP ?}; _vtab:=($(_a))();
   _vtabr.index(_a); _vtabr.prefix(_vtab.ref()); _vtabr.win_sel('WER_OP');
   {? _vtab=PB
   || _vkw:=PB.KW
   || _vkw:={? PW.KW_WAL || PW.KW_WAL || PW.KW ?};
      {? PW.KH=null
      || KH.cntx_psh();
         KH.index('NAZ');
         KH.prefix(2,PW.KONTR,);
         {? KH.first()
         || {? KH.size()=1
            || PW.KH:=KH.ref();
               PW.put()
            ?}
         ?};
         KH.cntx_pop()
      ?}
   ?};
   ROZRACH.SUM1:=_vkw;
   PAR_WYDR.REF:=_vkw;
   {? _vtabr.first()
   || exec('rozr','rozrach_przel',1,_vtabr)
   || {? _vtab=PB & PB.USTYPPL<>'' & PB.RODZ='KU'
      || FUN.emsg('Funkcja niedostępna dla przelewów do urzędu skarbowego.'@)
      |? _vtab=PB & PB.RODZ='KZ'
      || FUN.emsg('Funkcja niedostępna dla przelewów do ZUS.'@)
      || exec('rozr','rozrach_przel',0,_vtabr)
      ?}
   ?}
|| FUN.emsg('Przelew nie związany z rozrachunkami.'@)
?}


\rozr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BogNal [12.30]
:: OPIS: Dolaczanie rozrachunkow do zaimportowanych przelewow
::  OLD: \rozr/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a & _b=PB_OP
|| {? PB.get() & (PB.WSK_S='N' | PB.r_lock(1,1,1))
   || _b.select();
      PB.r_unlock()
   || FUN.info('Przelew obsługuje inny użytkownik.'@)
   ?}
|? _b=PW_OP
|| VAR_DEL.delete('rozr', 'roz_poz');
   roz_poz:=sql(
      'select PW_OP.reference PW_OP, to_string(DP) DP, OD, SYM, AN, K, 0 Z, WAL, SP_V '+
      'from PW_OP '+
      'left join ODD where PW_OP.PW=:_a order by Z',
      PW.ref
   );
   exec('podsuma','rozrach_przel');
   _o:=roz_poz.mk_sel('Rozrachunki'@,'T',,'pw_op',,,,,,,,,,,,'disabled');
   roz_poz.win_fld(_o,,'DP',,, 10,,, 'Data księgowania'@);
   roz_poz.win_fld(_o,,'OD',,, 10,,, 'Jednostka księgowa'@);
   roz_poz.win_fld(_o,,'SYM',,, 30,,,'Rozrachunek'@);
   roz_poz.win_fld(_o,,'AN',,, 35,,, 'Konto księgowe'@);
   roz_poz.win_fld(_o,,'K',,, 15,2,, 'Kwota'@);
   roz_poz.win_fld(_o,,'SP_V',,, 15,2,, 'Kwota VAT');
   roz_poz.win_fld(_o,,'WAL',,,6,,,'Waluta'@);

   roz_poz.win_act(_o,,'Wyświetl',,,,"exec('disp_rozr','rozrach_przel','PW_OP',roz_poz.PW_OP)");
   roz_poz.win_act(_o,1,'Formuła','Dołącz'@@,,'Dołącznie nowego rozrachunku'@,,"exec('dol_pw','rozrach_przel')",1,,,,'D');
   roz_poz.win_act(_o,,'Formuła','Dołącz'@@,,'Dołącznie nowego rozrachunku'@,,"exec('dol_pw','rozrach_przel')",1,,,,'D');
   roz_poz.win_act(_o,,'Formuła','Usuń'@@,,'Usunięcie rozrachunku'@,"FUN.ask('Czy usunąć bieżący wiersz?'@)","exec('usu_pw','rozrach_przel')",,,,,'U');
   roz_poz.win_act(_o,,'Rekord',,,,"exec('rek_pw','rozrach_przel', 4+roz_poz.AN)");

   roz_poz.win_sel(_o);
   _size:=roz_poz.size();
   roz_poz.select();

   _an:=1;
   {? roz_poz.first()
   || {! |?
         {? roz_poz.Z=0 & roz_poz.AN='' || _an:=0 ?};
         _an & roz_poz.next()
      !}
   ?};

   {? __rozpis.K=0 & __rozpis.SP_V=0 & roz_poz.first() & _an
   || _pozycje:=0;
      roz_poz.first();
      {! |?
         {? roz_poz.DP<>''
         || _pozycje+=1;
            _poz_an:=roz_poz.AN;
            _poz_sym:=roz_poz.SYM
         ?};
         roz_poz.next()
      !};
      {? _pozycje=1
      || PW.AN:=_poz_an;
         PW.SYM:=_poz_sym
      || PW.AN:='';
         PW.SYM:=''
      ?};
      PW.WSK_R:='T'
   || PW.WSK_R:='N';
      {? ~roz_poz.first() | roz_poz.next()
      || PW.AN:='';
         PW.SYM:=''
      || PW.AN:={? roz_poz.Z || '' || roz_poz.AN ?};
         PW.SYM:={? roz_poz.Z || '' || roz_poz.SYM ?}
      ?}
   ?};
   PW.put();
   VAR_DEL.delete('rozr','roz_poz','__rozpis')
|| FUN.emsg('Brak rozrachunków związanych z przelewem.'@)
?}


\rozlicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BogNal [12.30]
:: OPIS: Dodawanie rekordow do bazy PW_OP
::   WE:  _a  - kwota
::        _b  - kwota VAT
::       [_c] - konto AN
::  OLD: \rozlicz/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')<>type_of('string') || _c:=PW.AN ?};
{? _a>__rozpis.K
|| FUN.emsg('Kwota z wybranego rozrachunku jest większa niż kwota do rozpisania.'@)
|? _b>__rozpis.SP_V
|| FUN.emsg('Kwota VAT z wybranego rozrachunku jest większa niż kwota VAT do rozpisania.'@)
|| PW_OP.blank();
   PW_OP.AN:=_c;
   PW_OP.DP:=PW.DK;
   PW_OP.K:=_a;
   PW_OP.ODD:=PW.ODD;
   PW_OP.PW:=PW.ref;
   PW_OP.SYM:=rozr.SYM;
   PW_OP.TYT:=PW.TYTOP;
   PW_OP.WAL:=PW.WAL;
   PW_OP.SP_V:=_b;
   {? PW_OP.add(1)
   || roz_poz.PW_OP:=$PW_OP.ref;
      roz_poz.DP:=$PW.DK;
      roz_poz.AN:=_c;
      roz_poz.OD:=PW.ODD().OD;
      roz_poz.SYM:=rozr.SYM;
      roz_poz.K:=_a;
      roz_poz.SP_V:=_b;
      roz_poz.Z:=0;
      roz_poz.WAL:=PW.WAL;
      roz_poz.add()
   ?}
?}


\dol_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BogNal [12.30]
:: OPIS: Wyswietlanie slownika rozrachunkow do dolazenia do bazy PW_OP
::  OLD: \dol_pw/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
{? __rozpis.K=0 & __rozpis.SP_V=0
|| FUN.emsg('Kwota rozliczona całkowicie.'@);
   return(0)
?};
VAR_DEL.delete('rozr');
_dsp:=var_press('DSP',OP)>0;
rozr:=sql(
  'select OD, AN, SYM, WN, MA, DO, TZ, 0 ZW, TYP, CAST(0 AS REAL_TYPE) SAL, CAST(0 AS REAL_TYPE) SAL_V, OP.REFERENCE OP, SLO.KOD '+
  {? _dsp || ', DSP ' || '' ?}+
  'from OP left join ODD left join SLO using(OP.WAL,SLO.REFERENCE) '+
  'where '+
  '  (OP.AN=\':_a\' or OP.KH=:_e) '+
  '  and SLO.KOD=\':_d\' '+
  '  and ((OP.MA>OP.WN and \':_c\'=\'Wn\') or (OP.MA<OP.WN and \':_c\'=\'Ma\')) '+
  '  and OP.SYM not in (select SYM from :_b) '+
  ' order by DO'
  , PW.AN, roz_poz, PW.STR, PW.WAL, PW.KH
);
{? rozr.first()
|| OP.cntx_psh();
   OP.prefix();
   {!
   |? {? 1+rozr.TYP='N' | 1+rozr.TYP='Z'
      || rozr.ZW:=date-rozr.TZ;
         rozr.SAL:={? rozr.WN>rozr.MA || rozr.WN-rozr.MA || rozr.MA-rozr.WN ?};
         {? OP.seek(BIT.sqlint(rozr.OP),)
         || rozr.SAL_V:=exec('f_vat','fks_sp',OP.ref())
         ?};
         rozr.put();
         rozr.next()
      || rozr.del()
      ?}
   !};
   OP.cntx_pop()
?};
_o:=rozr.mk_sel('Rozrachunki'@,'P',,'pw_rozr',,,,,'U');
rozr.win_fld(_o,,'OD',,, 10,,, 'Oddział'@);
rozr.win_fld(_o,,'AN',,, 20,,, 'Konto księgowe'@);
rozr.win_fld(_o,,'SYM',,, 15,,, 'Rozrachunek'@);
{? _dsp
|| rozr.win_fld(_o,,'DSP',,, 10,,, 'Data wystawienia'@)
?};
rozr.win_fld(_o,,'DO',,, 10,,, 'Data otwarcia'@);
rozr.win_fld(_o,,'TZ',,, 10,,, 'Termin zapłaty'@);
rozr.win_fld(_o,,'ZW',,, 5,,, 'Zwłoka'@);
rozr.win_fld(_o,,'SAL',,, 15,2,, 'Saldo');
rozr.win_fld(_o,,'SAL_V',,,15,2,, 'Saldo VAT');

rozr.win_act(_o,,'Wyświetl',,,,"exec('disp_rozr','rozrach_przel','OP',rozr.OP)");
rozr.win_act(_o,,'Formuła','Zapłata całkowita'@@,,'Wybranie rozrachunku'@,,"
   _k:={? rozr.SAL>__rozpis.K || __rozpis.K || rozr.SAL ?};
   _v:={? rozr.SAL_V>__rozpis.SP_V || __rozpis.SP_V || rozr.SAL_V ?};
   exec('rozlicz', 'rozrach_przel',_k,_v,rozr.AN);
   sel_exit()
",1,1,,,'Z');
rozr.win_act(_o,,'Formuła','Z&apłata częściowa'@@,,'Wybranie rozrachunku'@,,"
   undefine();
   _k:={? rozr.SAL>__rozpis.K || __rozpis.K || rozr.SAL ?};
   _v:={? rozr.SAL_V>__rozpis.SP_V || __rozpis.SP_V || rozr.SAL_V ?};
   define('kw',_k,'Kwota rozliczenia '@,,15,15, 2);
   define('kw_v',_v,'Kwota VAT rozliczenia '@,,15,15, 2);
   {? def_edit(\"exec('chk_kw_roz','rozrach_przel')\",rozr.SYM)
   || exec('rozlicz', 'rozrach_przel', DEFINE.kw, DEFINE.kw_v, rozr.AN);
      sel_exit
   ?};
   undefine()
",,,,,'A');
rozr.win_act(_o,,'Szukaj');
rozr.win_act(_o,,'Kolejność');
rozr.win_sel(_o);
rozr.select();
exec('podsuma', 'rozrach_przel')


\disp_rozr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.30]
:: OPIS: Wyswietla dane rozrachunku
::   WE: _a - akronim tabeli dla której jest przekazany w parm. _b sql_ref
::       _b - ref sql tabeli z przekazanej przez par. _a
::  OLD: \disp_rozr/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='OP' & _b<>''
|| OP.prefix();
   OP.cntx_psh();
   {? OP.seek(BB.sqlint(_b),)
   || OP.win_edit('RED');
      OP.display()
   ?};
   OP.cntx_pop()
|? _a='PW_OP' & _b<>''
|| PW_OP.prefix();
   {? PW_OP.seek(BB.sqlint(_b),)
   || OP.cntx_psh();
      OP.index('KON_O'); OP.prefix();
      SLO.index('SL'); SLO.prefix(FINFO.SLWAL().SLU,PW_OP.WAL);
      _wal:={? SLO.first() & SLO.KOD=PW_OP.WAL || SLO.ref || null ?};
      {? OP.find_key(_wal,PW_OP.ODD,PW_OP.AN,PW_OP.SYM,PW_OP.SYM)
      || OP.win_edit('RED');
         OP.display()
      ?};
      OP.cntx_pop()
   ?}
?}


\podsuma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BogNal [12.30]
:: OPIS: Wyswietlanie podsum w bazie tymczasowej
::  OLD: \podsuma/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__rozpis');
__rozpis:=obj_new('K','SP_V');
__rozpis.K:=0;
__rozpis.SP_V:=0;
_ref:=roz_poz.ref();
{? roz_poz.first()
|| {!
   |? {? roz_poz.Z || roz_poz.del || roz_poz.next ?}
   !};
   _x:=sql('select sum(K) K, sum(SP_V) SP_V from :_a', roz_poz);
   {? _x.first & _x.K>0
   ||
::      PW.SYM:='';
::      PW.put;
      roz_poz.blank;
      roz_poz.K:=_x.K;
      roz_poz.SP_V:=_x.SP_V;
      roz_poz.Z:=1;
      roz_poz.WAL:=PW.WAL;
      roz_poz.AN:='suma wybranych rozrachunków';
      roz_poz.add
   ?};
   roz_poz.blank;
   _rbk_wal:=exec('rbk_wal','rozrach_przel');
   {? (PW.WAL<>FINFO.NAROD().KOD | PW.WAL<>_rbk_wal) & PW.KW_WAL<>0
   || roz_poz.K:=PW.KW_WAL-_x.K
   || roz_poz.K:=PW.KW-_x.K;
      roz_poz.SP_V:=PW.SP_V-_x.SP_V
   ?};
   roz_poz.Z:=1;
   roz_poz.AN:='pozostało do rozpisania';
   roz_poz.WAL:=PW.WAL;
   __rozpis.K:=roz_poz.K;
   __rozpis.SP_V:=roz_poz.SP_V;
   roz_poz.add;
   roz_poz.seek(_ref)
|? PW.WAL<>FINFO.NAROD().KOD
|| __rozpis.K:=PW.KW_WAL
|| __rozpis.K:=PW.KW;
   __rozpis.SP_V:=PW.SP_V
?}
\rbk_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.51]
:: OPIS: Zwraca walutę konta bankowego licencjobiorcy
::   WY: waluta konta bankowego licencjobiorcy
::----------------------------------------------------------------------------------------------------------------------
_rbk_wal:='';
SKID_RBK.cntx_psh();
SKID_RBK.index('NUMER');SKID_RBK.prefix();
{? SKID_RBK.find_key(RB.get_rbel(2,PW.RBL),) || _rbk_wal:=SKID_RBK.WAL().KOD ?};
SKID_RBK.cntx_pop();
_rbk_wal


\rek_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BogNal [12.30]
:: OPIS: Kolorowanie rokordow w bazie tymczasowej
::  OLD: \rek_pw/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
_win:=roz_poz.win_sel('?');
{? _a='suma' || roz_poz.actions(_win,'U',,1); '0:0:0,200:200:200'
|? _a='pozo' || roz_poz.actions(_win,'U',,1); '0:0:0,150:150:220'
||  roz_poz.actions(_win,,,1); 0
?}


\usu_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BogNal [12.30]
:: OPIS: Usuwanie rekordow z bazy PW_OP
::  OLD: \usu_pw/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
PW_OP.prefix();
{? PW_OP.seek(BB.sqlint(roz_poz.PW_OP),)
|| PW_OP.del();
   roz_poz.del();
   exec('podsuma','rozrach_przel')
?}


\chk_kw_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.30]
:: OPIS: Sprawdza poprawnosc wprowadzonej kwoty czesciowego rozliczenia
::  OLD: \chk_kw_roz/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
_a:='';
DEFINE.kw:=DEFINE.kw$2;
DEFINE.kw_v:=DEFINE.kw_v$2;
{? DEFINE.kw<=0
|| FUN.emsg('Kwota rozliczenia musi być większa od zera.'@);
   _a:='kw'
|? DEFINE.kw>rozr.SAL
|| FUN.emsg('Kwota rozliczenia musi być mniejsza lub równa kwocie rozrachnku.'@);
   DEFINE.kw:=rozr.SAL;
   _a:='kw'
|? DEFINE.kw>__rozpis.K
|| FUN.emsg('Kwota rozliczenia musi być mniejsza lub równa kwocie do rozliczenia.'@);
   DEFINE.kw:=__rozpis.K;
   _a:='kw'
|? DEFINE.kw_v<=0 & (PW.SP<>'N' | DEFINE.kw_v<0)
|| FUN.emsg('Kwota VAT rozliczenia musi być większa od zera.'@);
   _a:='kw_v'
|? DEFINE.kw_v>rozr.SAL_V
|| FUN.emsg('Kwota VAT rozliczenia musi być mniejsza lub równa kwocie VAT rozrachnku.'@);
   DEFINE.kw_v:=rozr.SAL_V;
   _a:='kw_v'
|? DEFINE.kw_v>__rozpis.SP_V
|| FUN.emsg('Kwota VAT rozliczenia musi być mniejsza lub równa kwocie VAT do rozliczenia.'@);
   DEFINE.kw_v:=__rozpis.SP_V;
   _a:='kw_v'
?};
_a


\pb_op_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Trigger dla tabeli PB_OP - add przed i put przed
::  OLD: \pb_op_trig/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? PB_OP.SYM_ZEW='' || PB_OP.SYM_ZEW:=PB_OP.SYM ?};
1


\rpdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2009+]
:: OPIS: Szuka rozrachunku i ustawia date otwarcia
::   WE: _a - 1 - tabela PB_OP
::            2 - tabela OPTMP
::  OLD: \rpdo/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.DO:=date(0,0,0);
{? _a=1
|| _odd:=PB_OP.ODD; _an:=PB_OP.AN; _sym:=PB_OP.SYM; _usym:=PB_OP.SYM_ROK; _wal:=PB_OP.PB().WAL
|| _odd:=OPTMP.ODD; _an:=OPTMP.KONTO; _sym:=OPTMP.SYM; _usym:=OPTMP.SYM_ROK; _wal:=FINFO.NAROD
?};
_znal:=0;
{? _odd<>null & _an<>'' & _sym<>'' & _usym<>''
|| OP.cntx_psh();
   ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
   {? ROK_F.last()
   || {! |?
         OP.use('operac'+ROK_F.KOD); OP.index('KON_O'); OP.prefix();
         {? OP.find_key(_wal,_odd,_an,_sym,_sym,_usym)
         || ROZRACH.DO:=OP.DO; _znal:=1
         ?};
         ~_znal & ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev()
      !};
:: weryfikacja czy jest e-dokument
      {? _a=1 & _znal=1
      || ZAP_OP.cntx_psh();
         ZAP_OP.use('rozzap'+ROK_F.KOD);
         ZAP_OP.clear();
         ZAP_OP.index('OP');
         ZAP_OP.prefix(OP.ref());
         {? ~ZAP_OP.first()
         || _znal:=0
         || {? ZAP_OP.POZDOK
            || POZ.cntx_psh(); DOK.cntx_psh();
               _mask:=ref_name(ZAP_OP.POZDOK)+4;
               POZ.use('pozy'+_mask); POZ.prefix();
               DOK.use('doku'+_mask); DOK.prefix();
               {? POZ.seek(ZAP_OP.POZDOK)
               || {? ~DOK.seek(POZ.DOK) | ~DOK.E_DOC || _znal:=0 ?}
               || _znal:=0
               ?};
               POZ.cntx_pop(); DOK.cntx_pop()
            || _znal:=0
            ?}
         ?};
         ZAP_OP.cntx_pop()
      ?}
   ?};
   ROK_F.cntx_pop(); OP.cntx_pop()
?};
{? ~_znal
|| PB_OP.actions_grayed(PB_OP.win_sel('?'),'D(E)')
|| PB_OP.actions_grayed(PB_OP.win_sel('?'),'')
?};
0


\f_optpbr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Formula do wyswietlania rozrachunkow zwiazanych z przelewem elektronicznym w OPTMP.
::  OLD: \f_optpbr/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
PB.cntx_psh(); PB_OP.cntx_psh(); PB.use(form(8+OPTMP.PAR1)); PB_OP.use('pop'+(4+(2-OPTMP.PAR1)));
PBHIST.use('ph'+(4+(2-OPTMP.PAR1)));
PB.prefix(); PB.seek(#(8+(8-OPTMP.PAR1)),form(8+OPTMP.PAR1)); exec('f_pbop','rozrach_przel','PB');
PB.cntx_pop(); PB_OP.cntx_pop()


\przel_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Edycja przelewu dla kontrahenta
::   WE: _a - Czy wyświetlać komunikat? ( 0 - nie /1 - tak(domyślnie) )
::----------------------------------------------------------------------------------------------------------------------
_info:={? var_pres('_a')>0 || _a || 1 ?};
_maska:=form(8+OPTMP.PAR1);
_ref:=#form(8+(8-OPTMP.PAR1));
PB.use(_maska);PB.prefix();
{? PB.seek(_ref,_maska)
|| _wy:=1
|| {? _info || FUN.emsg('Nie znaleziono przelewu.'@) ?};
   _wy:=0
?};
_wy


\can_gen_przel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Czy można generować przelew z dokumentu? Sprawdza czy faktura zakupowa.
::----------------------------------------------------------------------------------------------------------------------
_wyn:=Plugin.run('PB_VALID_F_001');
{? _wyn<>-1
|| _wyn
|| _klasa:=DOK.RVAT().RVAT().KVAT().SYM;
   3+_klasa='Zak' | 6+_klasa='_WWspN' | 3+_klasa='Imp' |
   (DOK.DOK_REJ().SLO().KOD='PROSTY' & (DOK.DOK_REJ().CZY_DP='T' | DOK.DOK_REJ().CZY_DP='O')
    & DOK.DOK_REJ().CZY_RRB='T'
    & DOK.RB<>null
    & DOK.D3<>date(0,0,0))
?}


\gen_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Uruchomienie czynności generowania przelewów z rozrachunków
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='HBN_PRZ_DROW';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID);
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\gen_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Uruchomienie czynności generowania przelewu z rozrachunku
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='HBN_PRZ_DROW';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OP',OP.ref());
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\optmp_pb_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.22]
:: OPIS: Formuła na wyświetl dla okna PBR tabeli OPTMP
::----------------------------------------------------------------------------------------------------------------------
PB.cntx_psh();
_maska:=form(8+OPTMP.PAR1);
_ref:=#form(8+(8-OPTMP.PAR1));
PB.use(_maska);
PB.prefix();
{? PB.seek(_ref,_maska)
|| _wy:=1
|| FUN.emsg('Nie znaleziono przelewu.'@);
   _wy:=0
?};
{? _wy || exec('bv_pb','homebank') ?};
PB.cntx_pop()


\kwota_bru_przel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.51]
:: OPIS: Ustalenie kwoty BRUTTO na podstawie pozycji VAT dokumentu ksiegowego na potrzeby generowanego przelewu
::----------------------------------------------------------------------------------------------------------------------
_bru:=0;
VPOZ.index('VDOK');
VPOZ.prefix(DOK.ref);
{? VPOZ.first()
|| {!
   |? {? DOK.WAL=null | DOK.WAL().KOD='PLN'
      || _bru+={? ~( 'ZakOpod,ZakOpoZ'*VPOZ.RVAT().RVAT().KVAT().SYM & 1+VPOZ.GRVAT().GRVAT().KOD='Z')
               || VPOZ.BRUTTO
               || VPOZ.NETTO
               ?}
      ?};
      VPOZ.next()
   !}
?};
_bru

\f3_optmp_rozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Klawisz F3 dla pola OPTMP.ROZL
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.SP='N'
|| FUN.info('Akcja dostępna dla płatności typu split payment.'@);
   return(~~)
?};
VAR_DEL.delete('Tab');
Tab:=obj_new('tab','add','select','suma','header','value');
Tab.tab:=tab_tmp(3,
   'T','STRING[2]','Typ',
   'TS','STRING[10]','Typ wyświetlany',
   'B','REAL','Kwota brutto',
   'V','REAL','Kwota VAT',
   'S','INTEGER','Zaznaczono'
);
Tab.select:="
   _tab:=.tab;
   _o:=_tab.mk_sel('Do zapłaty'@,'P',,'optmpspwym',,,5,,'U');
   _tab.win_fld(_o,,'S',,,,,,,,,2,,\"1\",\"0\");
   _tab.win_fld(_o,,'TS',,,15,,,'Split payment'@);
   _tab.win_fld(_o,,'B');
   _tab.win_fld(_o,,'V');
   _tab.win_act(_o,,'Formuła','Zaznacz/Odznacz'@,,,\"
      _tab:=cur_tab();
      _sel:=_tab.S;
      _tab.cntx_psh();
      {? _sel
      || {!
         |? _tab.S:=~_sel;
            _tab.put();
            _tab.next()
         !}
      || {!
         |? _tab.S:=~_sel;
            _tab.put();
            _tab.prev()
         !}
      ?};
      _tab.cntx_pop();
      Tab.header()
   \",,1);
   _tab.win_act(_o,,'Formuła','Kontynuuj'@,,,\"sel_exit()\");
   _tab.win_sel(_o);
   _tab.win_fml(_o,,'TS',,'ICON_BEFORE',\"exec('ikony','fks_sp',cur_tab().T+1)\");
   .header();
   {? _tab.select()
   || 1
   ?}
";
Tab.suma:="
   _suma:=obj_new('B','V');
   _suma.B:=0;
   _suma.V:=0;
   _tab:=.tab;
   _tab.cntx_psh();
   {? _tab.first()
   || {!
      |? {? _tab.S
         || _suma.B+=_tab.B;
            _suma.V+=_tab.V
         ?};
         _tab.next()
      !}
   ?};
   _tab.cntx_pop();
   _suma
";
Tab.header:="
   _suma:=.suma();
   _tab:=.tab;
   _tab.hdr_sel();
   _tab.hdr_sel(' - Brutto: %1; VAT: %2'@[form(_suma.B$2,,2,' ,'),form(_suma.V$2,,2,' ,')])
";
Tab.add:="
   {? _b>0
   || _tab:=.tab;
      _tab.blank(1);
      _tab.T:=_a;
      _tab.TS:={? _a='1W' || 'Wymagany'@ |? _a='2Z' || 'Zalecany'@ || 'Pozostały'@ ?};
      _tab.V:=_b;
      {? var_press('_c')>0
      || _tab.B:=_c
      || {? OPTMP.SP_VSAL || _tab.B:=(OPTMP.SAL*_b/OPTMP.SP_VSAL)$2 ?}
      ?};
      _tab.S:=0;
      {? _tab.B
      || {? _tab.B<=.value
         || _tab.S:=1;
            .value-=_tab.B
         || .value:=0
         ?};
         _tab.add()
      ?}
   ?}
";
Tab.value:=fld();
Tab.add('1W',OPTMP.SP_VWYM);
Tab.add('2Z',OPTMP.SP_VZAL);
Tab.add('3T',OPTMP.SP_VSAL-OPTMP.SP_VWYM-OPTMP.SP_VZAL);
{? Tab.select()
|| _suma:=Tab.suma();
   VAR_DEL.delete('Tab');
   fld(_suma.B)
?};
~~


\zbiorczy_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Tworzy zbiorcze przelewy typu split payment
::----------------------------------------------------------------------------------------------------------------------
{? SSTALE.WAL().KOD<>'PLN'
|| FUN.info('Możliwość tworzenia zbiorczych przelewów split-payment nie jest dostępna\n'
            'w przypadku, gdy aktywną walutą nie jest PLN (obecnie: %1).'@[SSTALE.WAL().KOD]);
   return()
?};
UNPAR.P2:=1; UNPAR.P2_BV:=UNPAR.P2_BE:=UNPAR.P2_AE:='';
NoWalRb:=1;
RACHBANK.KB_1R:=RACHBANK.KB_1R_BD:=RACHBANK.KB_1R_BE:=RACHBANK.KB_1R_F3:=RACHBANK.KB_1R_AE:='';
exec('set_kbr','rozrach_przel');
WYDRUKI.WAL:=FINFO.NAROD;
WYDRUKIN.DATA:=date();
{? ROZNE.ROKKON=null
|| exec('szuk_okr','okresy',date());
   {? ROZNE.UT_OKROD<>null
   || ROZNE.ROKKON:=anal_rok:=SSTALE.AR:=ROZNE.UT_OKROD().ROK;
      SSTALE.AO:=ROZNE.UT_OKROD;
      exec('open_tabele','open_tab','F')
   ?}
?};

{? var_pres('DRB',@.CLASS)<0 || exec('obj_drbt','raty') ?};
{? var_pres('DRB')>0 || obj_del(DRB) ?}; DRB:=obj_new(@.CLASS.DRB);
PAR_WYDR.PAR2:=1;
UNPAR.P4:=date(WYDRUKIN.DATA~1,WYDRUKIN.DATA~2,1); UNPAR.P4_BV:=UNPAR.P4_BE:=UNPAR.P4_AE:='';
UNPAR.P5:=WYDRUKIN.DATA; UNPAR.P5_BV:=UNPAR.P5_BE:=UNPAR.P5_AE:='';
UNPAR.P3:=2; UNPAR.P3_BV:=UNPAR.P3_BE:=UNPAR.P3_AE:='';
ROZRACH.OPIS2:='Przelew zbiorczy';
WYDRUKIN.DATPRZEK:=date(); WYDRUKIN.REJPRZEK:=1;
WYDRUKIN.win_edit('PB_GENZB');
{? WYDRUKIN.edit("exec('chk_zb_sp','rozrach_przel')")
|| g_rachb:=RACHBANK.KB_1R;
   pbcn:=pbzb:=pbzbs:=0;
   exec('initmpkh','rozrach_kor');
   {? UNPAR.P2=1
   || KH.cntx_psh();
      KH.index('KOD'); KH.prefix(2);
      {? KH.first() || {! |? TMPKH.KOD:=KH.KOD; TMPKH.REF:=$KH.ref(); TMPKH.add(); KH.next() !} ?};
      KH.cntx_pop()
   || KH.select()
   ?};
   _sql:=sql(
      'select OP.KH, OP.DSP, 0 as ZAP, 0 as FV, 0 as BRUTTO, OP.REFERENCE as REF '+
      'from OP '+
      'where OP.TYP=\'ZOB\' and OP.KH in (select REF from :_a) and OP.WAL=:_b and '+
      'OP.DSP between to_date(:_c) and to_date(:_d)'+
      'order by 1,2 ',
      TMPKH,WYDRUKI.WAL,UNPAR.P4,UNPAR.P5
   );
   exec('deltmpkh','rozrach_kor');
   _ind1:=_sql.index('?');
   _ind2:=_sql.ndx_tmp('',1,'KH',,0, 'DSP',,0, 'ZAP',,0);
   _ind3:=_sql.ndx_tmp('',1,'ZAP',,0);
   _data:=WYDRUKIN.DATA;
:: Oznaczenie rozrachunków z płatnościami
   {? _sql.first()
   || OP.cntx_psh();
      OP.prefix();
      {!
      |? {? OP.seek(BIT.sqlint(_sql.REF),) & exec('rozr_wal','rozrach_kor')=1
         || _caly:=OP.MA;
            _saldo:=exec('f_pbgnt2','homebank',_data);
            _sql.ZAP:=_caly<>_saldo;
            _sql.FV:=exec('chk_fvat','hbn',_sql);
            _sql.put();
            _sql.next()
         || _sql.del()
         ?}
      !};
      OP.cntx_pop()
   ?};
:: Usunięcie rozrachunków bez płatności, gdy na dany dzień jest jakaś płatność
   _sql.cntx_psh();
   _sql.index(_ind3);
   _sql.prefix(1);
   {? _sql.first()
   || {!
      |? _sql.cntx_psh();
         _sql.index(_ind2); _sql.prefix(_sql.KH,_sql.DSP,0);
         {? _sql.first() || {! |? _sql.del !} ?};
         _sql.cntx_pop();
         _sql.next()
      !}
   ?};
   _sql.cntx_pop();

   VAR_DEL.delete('TabOP');
   TabOP:=tab_tmp(5,
      'NAG','INTEGER','Nagłowek',
      'TP','DATE','Term pł.',
      'DSP','DATE','Data wyst.',
      'ODD','STRING[8]','Jedn. ks.',
      'SYM','STRING[20]','Symbol',
      'KON','STRING[39]','Konto',
      'S','REAL','Saldo',
      'SV','REAL','Saldo VAT',
      'OP','STRING[16]','Rozrachunek',
      'SP','STRING[1]','SP',
      'BRUTTO','REAL','Brutto'
   );
   _opsel:=TabOP.mk_sel('Rozrachunki'@,'P',,'tabopsel',,,,,'U');
   TabOP.win_fld(_opsel,,'ODD');
   TabOP.win_fld(_opsel,,'SYM',,,33);
   TabOP.win_fld(_opsel,,'KON',,,30);
   TabOP.win_fld(_opsel,,'DSP');
   TabOP.win_fld(_opsel,,'TP');
   TabOP.win_fld(_opsel,,'SP',,,4,,,'SP'@);
   TabOP.win_fld(_opsel,,'S',,,12,2);
   TabOP.win_fld(_opsel,,'SV',,,12,2);
   TabOP.win_act(_opsel,,'Kolejność');
   TabOP.win_act(_opsel,,'Formuła','Legenda'@,,,"exec('legenda','color','TabOP#01')");
   TabOP.win_sel(_opsel);
   TabOP.win_fml(_opsel,,'SP',,'ICON_BEFORE',"exec('ikony','fks_sp',TabOP.SP)");

   VAR_DEL.delete('v_user1','TT_KHRB');
   v_user1:=tm_form(OPTMP.tm_stamp())+24;
   TT_KHRB:=tab_tmp(2,'KH','STRING[10]','KH','RB','REAL','RB');
   OPTMP.use('optmp__');
   OPTMP.prefix();
   {? _sql.first()
   || KH.prefix();
      _dz:=date(0,0,0);
      OP.cntx_psh();
      OP.prefix();
      {!
      |? OPTMP.blank();
         OPTMP.USER:=v_user1;
         OPTMP.KH:={? KH.seek(BIT.sqlint(_sql.KH),) || KH.ref() || null ?};
         _kh:=OPTMP.KH:={? KH.seek(BIT.sqlint(_sql.KH),) || KH.ref() || null ?};
         _rb:={? OPTMP.KH<>null || OPTMP.RB:=exec('f_pbgnkr','rozrach_przel',0,0) || '' ?};
         OPTMP.DATA_OD:=_dz;
         OPTMP.SP:='Z';
         OPTMP.SPP:='N';
         OPTMP.TYT:={? UNPAR.P3=1 || '' || ROZRACH.OPIS2 ?};
         _add:=0;
         _sql.prefix(_sql.KH);
         {? _sql.first()
         || {!
            |? {? _sql.ZAP
               || {? _add
                  || {? OPTMP.L<2 | OPERATOR.DEPT & OPTMP.ODD<>OPERATOR.DEPT
                     || TabOP.cntx_psh();
                        TabOP.prefix(#OPTMP.ref());
                        {? TabOP.first() || {! |? TabOP.del !} ?};
                        TabOP.cntx_pop();
                        OPTMP.del()
                     ?}
                  ?};
                  OPTMP.KH:=_kh;
                  OPTMP.RB:=_rb;
                  OPTMP.F_VAT:={? _sql.FV || 'T' || 'N' ?};
                  OPTMP.BRUTTO:=0;
                  OPTMP.DATA:=OPTMP.DATA_OD:=_dz;
                  OPTMP.SAL:=OPTMP.SP_VSAL:=0;
                  OPTMP.SPP:='N';
                  OPTMP.L:=0;
                  _add:=0
               || {? OPTMP.DATA_OD=_dz || OPTMP.DATA_OD:=_sql.DSP ?};
                  {? _add=0
                  || _add:=OPTMP.add()
                  ?};
                  OPTMP.L+=1;
                  TabOP.blank(1);
                  TabOP.NAG:=#OPTMP.ref();
                  TabOP.OP:=_sql.REF;
                  {? OP.seek(BIT.sqlint(_sql.REF),)
                  || TabOP.ODD:=OP.ODD().OD;
                     TabOP.SYM:=OP.SYM;
                     TabOP.KON:=OP.AN;
                     TabOP.TP:=OP.TZ;
                     TabOP.DSP:=OP.DSP;
                     TabOP.S:=OP.MA;
                     TabOP.SV:=exec('f_vat','fks_sp');
                     TabOP.SP:=OP.SP;
                     TabOP.BRUTTO:=_sql.BRUTTO;
                     OPTMP.SAL+=OP.MA;
                     OPTMP.SP_VSAL+=TabOP.SV;
                     OPTMP.BRUTTO+=_sql.BRUTTO
                  ?};
                  TabOP.add();
                  OPTMP.DATA_DO:=_sql.DSP;
                  {? OPTMP.DATA=_dz | OPTMP.DATA>TabOP.TP
                  || OPTMP.DATA:=TabOP.TP
                  ?};
                  {? UNPAR.P3=1
                  || OPTMP.TYT+=TabOP.SYM+';'
                  ?};
                  {? OPTMP.L=1
                  || OPTMP.ODD:=OP.ODD
                  |? OPTMP.ODD<>OP.ODD
                  || OPTMP.ODD:=null
                  ?};
                  _spp:='NTZW'*TabOP.SP;
                  _spn:='NTZW'*OPTMP.SPP;
                  {? _spn<_spp
                  || OPTMP.SPP:=TabOP.SP
                  ?};
                  OPTMP.put()
               ?};
               _sql.next()
            !}
         ?};
         {? _add
         || {? OPTMP.L<2 | OPERATOR.DEPT & OPTMP.ODD<>OPERATOR.DEPT
            || TabOP.cntx_psh();
               TabOP.prefix(#OPTMP.ref());
               {? TabOP.first() || {! |? TabOP.del !} ?};
               TabOP.cntx_pop();
               OPTMP.del()
            ?}
         ?};
         _sql.prefix();
         _sql.next()
      !};
      OP.cntx_pop()
   ?};
   exec('f_rozrach_rf','!hbn_prz_drow');
   _grp:=OPTMP.grp_make('Lista płatności zbiorczych split payment'@,,'optmpsel');
   OPTMP.grp_sel(_grp,,'PB_ZB',,"
      {? OPTMP.get()
      || TabOP.prefix(#OPTMP.ref())
      || TabOP.prefix(0)
      ?};
      TabOP.first();
      grp_disp(TabOP,TabOP.win_sel('?'))
   ",,,,,,,,'maximized');
   OPTMP.grp_splt(_grp,,'horizontal','bottom',20);
   OPTMP.grp_sel(_grp,TabOP,_opsel,,,,,,,,,,'maximized_with_title');
   OPTMP.win_sel(_grp);
   OPTMP.index('ZB'); OPTMP.prefix(v_user1);
   ROZRACH.fld_fml('SUM1','BEFORE_DISPLAY',"exec('bs_rozrach_sum1','fks')");
   OPTMP.win_fml('PB_ZB',OPTMP,'S_VAT',,'ICON_BEFORE',"exec('icona_svat','blp',OPTMP.S_VAT)");
:: Sprawdzenie RB z BLP
   {? XINFO.BLP_SG='T' & (XINFO.BLP_FVAT='N' | (XINFO.BLP_FVAT='T' & OPTMP.F_VAT='T'))
   || exec('chk_optmp','blp',v_user1)
   ?};
   OPTMP.select();
   ROZRACH.fld_fml('SUM1','BEFORE_DISPLAY',"*");
   OPTMP.cntx_psh();
   OPTMP.index('ZNACZ'); OPTMP.prefix(v_user1,'T');
   {? OPTMP.first() & FUN.ask('Wygenerować zatwierdzone przelewy zbiorcze?'@)
   || exec('gen_zb','rozrach_przel')
   ?};
   OPTMP.cntx_pop();
   exec('f_rozrach_rf','!hbn_prz_drow');
   {? pbcn | pbzb | pbzbs
   || _txt:={? pbcn || 'Liczba wygenerowanych przelewów zbiorczych split payment: %1.\n'@[$pbcn] || '' ?}+
            {? pbzb || 'Liczba istniejących przelewów zbiorczych split payment: %1.\n'@[$pbzb] || '' ?}+
            {? pbzbs || 'Liczba przelewów zbiorczych split payment ze zmienionym saldem rozrachunków '
                        'od momentu generowania: %1.\n'[$pbzbs] || '' ?};
      FUN.info(_txt)
   ?};
   OPTMP.index('SYM'); OPTMP.prefix(v_user1); {? OPTMP.first() || {! |? OPTMP.del() !} ?};
   VAR_DEL.delete('v_user1','TT_KHRB','pbcn','pbzb','pbzbs')
?};
VAR_DEL.delete('NoWalRb')


\chk_zb_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Sprawdzenie parametrów generowania przelewów zbiorczych
::----------------------------------------------------------------------------------------------------------------------
_ret:=__CHK.record3(RACHBANK,'KB_1R',,UNPAR,'P4',,UNPAR,'P5',);
{? _ret=''
|| {? UNPAR.P4>UNPAR.P5
   || FUN.info('Data wystawienia od jest późniejsza niż do.'@);
      _ret:='P4'
   |? UNPAR.P4~1<>UNPAR.P5~1 | UNPAR.P4~2<>UNPAR.P5~2
   || FUN.info('Daty wystawienia od i do pochodzą z różnych miesięcy.'@)
   |? UNPAR.P5<date(2019,11,1)
   || FUN.info('Możliwość tworzenia zbiorczych przelewów split-payment nie jest dostępna\n dla daty wystawienia przed 1 listopada 2019.'@);
      _ret:='P4'
   ?}
?};
_ret


\zap_zb_full
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Zapłata całkowiata z przelew zbiorczy split payment
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.ZNACZ<>'T'
|| {? OPTMP.RB=''
   || OPTMP.RB:=exec('f_pbgnkr','rozrach_przel',1,1); OPTMP.B:=RB.getrbank(3,OPTMP.RB)
   ?};
   {? XINFO.BLP_FVAT='N' | (XINFO.BLP_FVAT='T' & OPTMP.F_VAT='T') & OPTMP.RB<>'' &
      OPTMP.KH & exec('spr_typ','blp',OPTMP.KH) & exec('spr_rb','blp','OPTMP')
:: Sprawdzenie RB z BLP
   || {? XINFO.BLP_SG='T' || exec('chk_pb','blp') || exec('s_vat_skid_rbk','blp',OPTMP) ?};
:: Blokada generowania przelewu w przypadku niezgodności z BLP
      {? exec('lock_pb','blp',XINFO.BLP_BG) || return(0) ?}
   ?};
   {? OPTMP.RB<>''
   || OPTMP.ZNACZ:='T';
      OPTMP.ROZL:=OPTMP.SAL;
      OPTMP.SP_VDOZ:=OPTMP.SP_VSAL;
      OPTMP.put()
   ?}
|| OPTMP.ZNACZ:='N';
   OPTMP.ROZL:=OPTMP.SP_VDOZ:=0;
   OPTMP.put()
?};
exec('f_rozrach_rf','!hbn_prz_drow');
1


\br_gen_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Rekord przed okna PG_ZB tabeli OPTMP
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.ZNACZ='T'
|| Color.fnd_kol('OPTMP#04#01')
|| ''
?}


\gen_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Akcja generuj okna PB_ZB tabeli OPTMP
::----------------------------------------------------------------------------------------------------------------------
PB.cntx_psh();
OPTMP.cntx_psh(); OPTMP.index('ZNACZ'); OPTMP.prefix(v_user1,'T');
{? OPTMP.first()
|| _size:=OPTMP.size();
   RACHBANK.KB_1R:=g_rachb;
   {!
   |? {? OPTMP.ZNACZ='T' & OPTMP.ROZL & exec('can_zb','rozrach_przel')
      || {? exec('gen_zb1','rozrach_przel')
         || ROZRACH.SUM1-=OPTMP.SAL; ROZRACH.SUM2-=OPTMP.ROZL;
            {? var_pres('SP',OPTMP)>0 & OPTMP.SP='T'
            || ROZRACH.SUM1_VAT-=OPTMP.SP_VSAL; ROZRACH.SUM2_VAT-=OPTMP.SP_VDOZ
            ?}
         ?}
      ?};
      _next:=OPTMP.del();
      echo('Trwa przetwarzanie: %1 %%'@[form(100-((OPTMP.size()/_size)*100),0,2)]);
      _next
   !};
   echo()
|| FUN.info('Brak zaznaczonych płatności do generowania przelewów.'@)
?};
OPTMP.cntx_pop();
PB.cntx_pop();
exec('f_rozrach_rf','!hbn_prz_drow')


\gen_zb1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Generowanie przelewów zbiorczych split paeyment
::----------------------------------------------------------------------------------------------------------------------
PB.cntx_psh();
PB.index('PB_S'); PB.prefix(); PB.blank();
exec('f_pbgen1','!hbn_prz_drow');
exec('f_pbgen2','!hbn_prz_drow');
{? PB.RW=PB.RD
   & ~FUN.ask('Przelew: %1 (%2, %3, %4).\nRachunek wierzyciela i dłużnika są identyczne!\n\n'
              'Wygenerować przelew?'@[PB.TYT,$PB.DP,form(PB.KW,,2),PB.WAL().KOD])
|| PB.cntx_pop();
   return(0)
?};
{? PB.add()
|| g_pbref:=PB.ref();
   {? WYDRUKIN.REJPRZEK
   || _sk_rbk:=RB.getrrban(PB.RD,REF.INFO,0); {? _sk_rbk=0 || _sk_rbk:=null ?};
      {? var_pres('GIODOTMP')>0 || exec('gen_tmp','giodo',PB.KH().KOD) ?};
      exec('przel','giodo','kh',PB.KH,_sk_rbk,WYDRUKIN.DATPRZEK)
   ?};
   TabOP.prefix(#OPTMP.ref());
   {? TabOP.first()
   || {!
      |? exec('gen_zb2','rozrach_przel');
         TabOP.next()
      !}
   ?};
   PB.cntx_pop();
   {? PB.seek(g_pbref)
   || PB.f_add()
   ?};
   pbcn+=1;
   ~~
|| PB.cntx_pop()
?};
1


\gen_zb2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [19.22_03]
:: OPIS: Dodanie rozrachunku do przelewu zborczego split payment
::----------------------------------------------------------------------------------------------------------------------
OP.prefix();
{? OP.seek(BIT.sqlint(TabOP.OP),)
|| PB_OP.prefix();
   PB_OP.blank();
   PB_OP.PB:=PB.ref();
   PB_OP.WAL:=FINFO.NAROD().KOD;
   PB_OP.ODD:=OP.ODD;
   PB_OP.DP:=PB.DP;
   PB_OP.AN:=OP.AN;
   PB_OP.SYM:=OP.SYM;
   PB_OP.SYM_ZEW:=OP.SYM_ZEW;
   PB_OP.SYM_ROK:=OP.SYM_ROK;
   PB_OP.K:=TabOP.S;
   PB_OP.TYT:=OPTMP.TYT;
   {? var_pres('SP_V',PB_OP)>0
   || PB_OP.SP_V:=TabOP.SV;
      PB_OP.DSP:=TabOP.DSP
   ?};
   PB_OP.add()
?}


\can_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Czy można wykonać przelew zbiorczy
::----------------------------------------------------------------------------------------------------------------------
_jest:=0;
{! _ii:=0..OPTMP.DATA_DO-OPTMP.DATA_OD
|? _jest=0
|! _data:=OPTMP.DATA_OD+_ii;
   _jest:=exec('is_zb','rozrach_przel',OPTMP.KH,_data)
!};
{? _jest=0
|| TabOP.prefix(#OPTMP.ref());
   {? TabOP.first()
   || OP.cntx_psh();
      OP.prefix();
      {!
      |? {? OP.seek(BIT.sqlint(TabOP.OP),)
         || _new:=exec('f_pbgnt2','homebank',WYDRUKIN.DATA);
            _jest:={? TabOP.S<>_new || 2 ?}
         ?};
         _jest=0 & TabOP.next()
      !};
      OP.cntx_pop()
   ?}
?};
{? _jest
|| {? _jest=1 & var_pres('pbzb')>0
   || pbzb+=1
   |? _jest=2 & var_pres('pbzbs')>0
   || pbzbs+=1
   ?}
?};
~_jest


\nrfak_okro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Czy podany symbol dotyczy okresu zbiorczego przelewy split payment
::   WE: _a - symbol (np.: 2019/12/01-2019/12/07)
::----------------------------------------------------------------------------------------------------------------------
{? +_a=21 & 11+_a+1='-' & exec('znak','rozrach_przel',_a,'/',5,8,16,19)
|| _ds1:=10+_a;
   _ds2:=_a+10;
   _gd:="
      on_error(3);
      no_msg(1);
      _data:=date(#(4+_a),#(2+(_a+5)),#(_a+2));
      no_msg();
      _err:=in_error();
      on_error(0);
      {? _err
      || date(0,0,0)
      || _data
      ?}
   ";
   _d1:=_gd(_ds1);
   _d2:=_gd(_ds2);
   _dz:=date(0,0,0);
   _d1<>_dz & _d2<>_dz
?}


\znak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Czy w podanym symbolu jest znak na podanych pozycjach
::   WE: _a - symbol (np.: 2019/12/01-2019/12/07)
::       _b - znak
::       _c, ... - numery pozycji
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{! _ii:=3.._
|? _ok
|! _poz:=_[_ii];
   _zn:=_poz+_a+1;
   _ok:=_zn=_b
!};
_ok


\imp_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Odnajduje pasujący przelew zbiorczy split payment i uzupełnia wyciąg o rozrachunki przelewu
::   WE: _a - maska pb
::----------------------------------------------------------------------------------------------------------------------
_jest:=0;
PB.cntx_psh();
PB.use('pb'+_a);
_kh:={? PW.KH<>null || PW.KH || KH.ref() ?};
PB.index('ZB'); PB.prefix(_kh,PW.SP_NRFAK,PW.KW,PW.SP_V,PW.RBL,);
PB_OP.cntx_psh();
PB_OP.use('pop'+_a);
PB_OP.index('PB'); PW_OP.prefix();
PBHIST.cntx_psh();
PBHIST.use('ph'+_a);
{? PB.first()
|| {!
   |? {? PB.PR='T'
      || PB_OP.prefix(PB.ref());
         {? PB_OP.first()
         || {!
            |? PW_OP.blank();
               PW_OP.PW:=PW.ref();
               PW_OP.WAL:=PB_OP.WAL;
               PW_OP.ODD:=PB_OP.ODD;
               PW_OP.AN:=PB_OP.AN;
               PW_OP.SYM:=PB_OP.SYM;
               PW_OP.SYM_ZEW:=PB_OP.SYM_ZEW;
               PW_OP.K:=PB_OP.K;
               PW_OP.DP:=PB_OP.DP;
               PW_OP.TYT:=PB_OP.TYT;
               PW_OP.SP_V:=PB_OP.SP_V;
               PW_OP.add();
               PB_OP.next()
             !};
             _jest:=1
         ?}
      ?};
      PB.next()
   !}
?};
PBHIST.cntx_pop();
PB_OP.cntx_pop();
PB.cntx_pop();
_jest


\prn_pb_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Wydruk przelewów zbiorczych
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','','fks_pbz',,,,,,,,'W')


\find_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Poszukuje rozrachunku na podstawie PB_OP
::----------------------------------------------------------------------------------------------------------------------
_data:=0;
{? PB_OP.SYM_ROK<> '' || _data:=#(PB_OP.SYM_ROK+4) ?};
{? _data<>0
|| OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.FIRMA,date(_data,1,1))
|| OKRO_F.index('ROK'); OKRO_F.prefix(SSTALE.AR)
?};
_jest_op:=0;
ROK_F.index('KOD');
ROK_F.prefix(REF.FIRMA);
{? OKRO_F.first()
|| _rok:=OKRO_F.ROK
|| ROK_F.first();
   _rok:=ROK_F.ref()
?};
{? ROK_F.seek(_rok)
|| {!
   |? _maska:=ROK_F.KOD;
      OP.use('operac'+_maska);
      OP.index('KON_O');
      OP.prefix(PB_OP.PB().WAL,PB_OP.ODD,PB_OP.AN,PB_OP.SYM,PB_OP.SYM,PB_OP.SYM_ROK);
      {? OP.first()
      || _jest_op:=1;
         0
      || ROK_F.next()
      ?}
   !}
?};
_jest_op


\is_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Czy dla rozrachunku istnieje już przelew zbiorczy split payment
::   WE: [_a] - kontrahent
::       [_b] - data
::       [_c] - wynik w postaci obiektu
::       [_d] - kontrolować dokładnie dokument
::----------------------------------------------------------------------------------------------------------------------
_kh:={? var_press('_a')>0 || _a || OP.KH ?};
_data:={? var_press('_b')>0 || _b || OP.DSP ?};
_obj:={? var_pres('_c')>0 & _c || obj_new('jest','OD','DO') || ~~ ?};
_full:={? var_pres('_d')>0 || _d ?};
{? var_pres('_obj')>0
|| _obj.jest:=0;
   _obj.OD:=_obj.DO:=date(0,0,0)
?};
_jest:=exec('is_zb1','rozrach_przel','xxxx',_kh,_data,_obj,_full);
{? ~_jest
|| _rok:=SSTALE.AR().POCZ_ROK~1;
   _jest:=exec('is_zb1','rozrach_przel',$_rok,_kh,_data,_obj,_full);
   {? ~_jest || _jest:=exec('is_zb1','rozrach_przel',$(_rok-1),_kh,_data,_obj,_full) ?};
   {? ~_jest || _jest:=exec('is_zb1','rozrach_przel',$(_rok-2),_kh,_data,_obj,_full) ?}
?};
{? var_pres('_obj')>0 || _obj || _jest ?}


\is_zb1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Czy dla rozrachunku istnieje już przelew zbiorczy split payment
::   WE: _a - maska tabeli PB
::       _b - kontrahent
::       _c - data
::       _d - obiekt na wynik
::       _e - kontrola dokładna dokumentu
::----------------------------------------------------------------------------------------------------------------------
PB.cntx_psh();
PB.use('pb'+_a);
PB.index('ZB2'); PB.prefix(_b,'T','T',);
_jest:=PB.find_le(_c) & PB.PR<>'A' & PB.DATA_DO>=_c;
{? _jest & _e
|| _jest2:=0;
   PB_OP.cntx_psh();
   PB_OP.use('pop'+_a);
   PB_OP.index('PB');
   PB_OP.prefix(PB.ref());
   POZ.cntx_psh();
   POZ.index('DOK'); POZ.prefix(DOK.ref());
   {? POZ.first()
   || {!
      |? _wal:={? POZ.WAL || POZ.WAL().KOD || FINFO.NAROD().KOD ?};
         _jest2:=POZ.ID<>'' & PB_OP.find_key(_wal,POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK,);
         _jest2=0 & POZ.next()
      !}
   ?};
   POZ.cntx_pop();
   PB_OP.cntx_pop();
   {? _jest2 || _jest:=0 ?}
?};
{? var_pres('_d')>0
|| _d.jest:=_jest;
   {? _jest
   || _d.OD:=PB.DATA_OD;
      _d.DO:=PB.DATA_DO
   ?}
?};
PB.cntx_pop();
_jest


\is_zb_pyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Pytanie o zapłatę gdy jest przelew zbiorczy
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Istnieje przelew zbiorczy split payment.\nCzy mimo to wykonać zapłatę?'@)


\is_pb_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Sprawdzenie czy jest przelew zbiorczy dla generowanego przelewu
::----------------------------------------------------------------------------------------------------------------------
{? var_press('DSP',OP)>0
|| _data:=date(0,0,0);
   OP.cntx_psh();
   OP.index('KHSM'); OP.prefix(FINFO.NAROD,PB.KH,PB.NRFAK,);
   {? OP.first()
   || {? ~OP.next()
      || _data:=OP.DSP
      |? OP.first()
      || {!
         |? {? OP.ODD=PB.ODD
            || _data:=OP.DSP;
               0
            || 1
            ?} & OP.next()
         !}
      ?}
   ?};
   OP.cntx_pop();
   {? _data<>date(0,0,0)
   || exec('is_zb','rozrach_przel',PB.KH,_data)
   ?}
?}


\optmp_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Zwraca OP na podstawie OPTMP
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh(); SLU.cntx_psh(); SLUAPPL.cntx_psh();
SLO.index('SL'); SLO.prefix(FINFO.SLWAL().SLU,OPTMP.WAL().SYM);
_wal:={? SLO.first() || SLO.ref() || FINFO.NAROD ?};
SLO.cntx_pop(); SLU.cntx_pop(); SLUAPPL.cntx_pop();
OP.cntx_psh();
OP.index('KON_O');
OP.prefix(_wal,OPTMP.ODD,OPTMP.KONTO,OPTMP.SYM,OPTMP.SYM,OPTMP.SYM_ROK);
_op:={? OP.first() || OP.ref() || null ?};
OP.cntx_pop();
_op


\f_pbgnkr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Ustala rachunek bankowy kontrahenta. W pierwszej kolejnosci pobiera rachunek z OP. Jesli
::       nie wypelniono rachunku w OP ustala rachunek bankowy z danych kontrahenta. Jesli nie
::       istnieje lub jest wiele rachunkow i brak domyslnego oraz wywolano funkcje z parametrem 1
::       (praca z komunikatami), nawiazuje dialog z uzytkownikiem. Ustalony rachunek (ref)
::       zapisuje do tabeli tymczasowej. Wykorzystywana przy generowaniu przelewow elektronicznych.
::   WE: _a: 0 - praca bez dialogu z uzytkownikiem; 1 - praca z dialogiem z uzytkownikiem
::       _b: 0 - korzysta tylko z tabeli KH; 1 - uwzglednia wartosc pola OPTMP.RB
::   WY: Ustalony nr rachunku bankowego oraz ustawia SKID_RBK (jesli znaleziono rachunek bankowy)
::  OLD: \f_pbgnkr/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
_v:='';
_vt:='Generowanie przelewów elektronicznych';
{? _b & OPTMP.RB<>''
:: Rachunek bankowy z rozrachunku
|| _v:=RB.get_rbel(2,OPTMP.RB)
:: Rachunek bankowy z danych kontrahenta
|| _v:=RB.get_drb(3,'KH',#KH.ref());
:: Jezeli nie znaleziono lub nie ma domyslnego
   {? _v=''
   || SKID_RBK.index('RD');
      SKID_RBK.prefix(RACHBANK.FIRMA,'KH',#KH.ref());
      {? SKID_RBK.first()
::       Jezeli znaleziono rachunek kontrahenta
      || {? SKID_RBK.find_key('T')
::          Jezeli znaleziono domyslny
         || {? ~TT_KHRB.find_key(KH.SKR)
            || TT_KHRB.KH:=KH.SKR;
               TT_KHRB.RB:=#SKID_RBK.ref();
               TT_KHRB.add();
               _v:=SKID_RBK.N
            ?}
::          Jezeli nie znaleziono domyslnego
         || {? ~TT_KHRB.find_key(KH.SKR)
            || {? _a & FUN.ask('~~Nie ustawiono domyślnego rachunku bankowego kontrahenta!\nCzy '
                               'wybrać rachunek bankowy kontrahenta %1?'@[KH.SKR])
               || ROZNE.KKBAN:=1;
                  PAR_WYDR.TABAKR:='KH';
                  PAR_WYDR.REF:=#KH.ref();
                  SKID_RBK.index('TAB');
                  SKID_RBK.prefix(RACHBANK.FIRMA,'KH','KH',#KH.ref());
                  SKID_RBK.win_edit('RED_RBO');
                  SKID_RBK.win_sel('SLO_RBO');
                  SKID_RBK.hdr_sel();
                  SKID_RBK.hdr_sel(' dla kontrahenta: %1'@[KH.SKR]);
                  RACHBANK.KB_5R_BD:='RACHBANK.RB_KH_SR:=RACHBANK.KB_5R:=RB.get_rbtx(1,SKID_RBK.ref(),SKID_RBK.KRAJ().KODISO) ';
                  {? SKID_RBK.select()
                  || TT_KHRB.KH:=KH.SKR;
                     TT_KHRB.RB:=#SKID_RBK.ref();
                     TT_KHRB.add();
                     _v:=SKID_RBK.N
                  ?}
               ?}
            || _v:=RB.get_rbel(1,TT_KHRB.RB)
            ?}
         ?}
::       Jezeli nie znaleziono rachunku kontrahenta
      || {? ~TT_KHRB.find_key(KH.SKR)
         || {? _a & FUN.ask('~~Brak rachunku bankowego kontrahenta!\nCzy dołączyć rachunek bankowy dla kontrahenta %1?'@[KH.SKR])
            || ROZNE.KKBAN:=1;
               PAR_WYDR.TABAKR:='KH';
               PAR_WYDR.REF:=#KH.ref();
               SKID_RBK.index('TAB');
               SKID_RBK.prefix(RACHBANK.FIRMA,'KH','KH',#KH.ref());
               SKID_RBK.win_edit('RED_RBO');
               SKID_RBK.win_sel('SLO_RBO');
               SKID_RBK.hdr_sel();
               SKID_RBK.hdr_sel(' dla kontrahenta: %1'@[KH.SKR]);
               {? SKID_RBK.select()
               || TT_KHRB.KH:=KH.SKR;
                  TT_KHRB.RB:=#SKID_RBK.ref();
                  TT_KHRB.add();
                  _v:=SKID_RBK.N
               ?}
            ?}
         ?}
      ?}
   ?}
?};
{? _v<>'' & 'TZ'*OPTMP.SP
|| _vrb:=RB.getrrban(_v,'KH');
   SKID_RBK.cntx_psh();
   SKID_RBK.prefix();
   {? _vrb & SKID_RBK.seek(_vrb) & SKID_RBK.WAL<>FINFO.NAROD
   || {? _a
      || FUN.info('Wskazano walutowy rachunek bankowy odbiorcy dla płatności split payment.'@)
      ?};
      {? TT_KHRB.find_key(KH.SKR)
      || TT_KHRB.del()
      ?};
      _v:=''
   ?};
   SKID_RBK.cntx_pop()
?};
_v


\kh_ul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Zwraca ulice z adresu kontrahenta razem z numerem doku i lokalem
::----------------------------------------------------------------------------------------------------------------------
KH.UL+{? KH.DOM<>'' || ' '+KH.DOM || '' ?}+{? KH.LOKAL<>'' || ' / '+KH.LOKAL || '' ?}

:Sign Version 2.0 jowisz:1045 2024/02/12 13:26:58 4c5d91b19b34a52cbc96108e2a680b749d7cd40ff6e05bd64c558c2b67ede0d81c27031e846b2accadcd6622314c0f81f0317a5a9b8c5e7657526b6909002d7fa1801a949e118c4109811eef6fc6198adb7b9171033938dee49b888e0be7cde1e0d5ecd0806f231fa6cb685bc84d8f85ed308236397facad3958d45feee5248b
