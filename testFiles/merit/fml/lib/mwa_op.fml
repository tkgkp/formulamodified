:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: mwa_op.fml
:: Utworzony: 26.04.2019
:: Autor: MB
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi rozrachunków przez MacroWebAPI
::======================================================================================================================


\start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Formuła serializująca poczatek i koniec danych
::   WE:  _a  - parametry
::       [_b] - uchwyt do pliku
::   WY: uchwyt do pliku
::----------------------------------------------------------------------------------------------------------------------
_start:=var_press('_b')<=0;
_file:={? _start || fopen(null,'Uw',,1,1) || _b ?};
{? _start
|| _file.fwrite('<?xml version="1.0" encoding="UTF-8"?>');
   _file.fwrite('<p:'+_a.METHOD+'Response'+' xmlns:p="'+_a.OUTNSPC+'">');
   _file.fwrite('<p:status>OK</p:status>');
   VAR_DEL.delete('ZapOp');
   ZapOp:=obj_new('WN','MA','VWN','VMA')
|| _file.fwrite('</p:'+_a.METHOD+'Response'+'>');
   VAR_DEL.delete('ZapOp')
?};
_file


\serialize
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Formuła pomocnicza do serializacji rozrachunków
::   WE: _a - parametry
::       _b - uchwyt do pliku
::       _c - data
::       _d - stan
::----------------------------------------------------------------------------------------------------------------------
_start:=var_press('_b')<=0;
_file:={? _start || exec('start','mwa_op',_a) || _b ?};
_filtr:=OP.f_active();
{? _filtr & OP.f_first() | ~_filtr & OP.first()
|| {!
   |? exec('serialize_one','mwa_op',_a,_file,_c,_d);
      _filtr & OP.f_next() | ~_filtr & OP.next()
   !}
?};
_file


\serialize_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Formuła pomocnicza do serializacji rozrachunków
::   WE: _a - parametry
::       _b - uchwyt do pliku
::       _c - data
::       _d - stan
::       _e - pojedyńczy zapis
::----------------------------------------------------------------------------------------------------------------------
_start:=var_press('_b')<=0;
_file:={? _start || exec('start','mwa_op',_a) || _b ?};
ZapOp.WN:=ZapOp.MA:=ZapOp.VWN:=ZapOp.VMA:=0;
ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref());
{? ZAP_OP.first()
|| {!
   |? {? ZAP_OP.DATA<=_c
      || ZapOp.WN+=ZAP_OP.WN;
         ZapOp.MA+=ZAP_OP.MA;
         ZapOp.VWN+=ZAP_OP.SP_V_WN;
         ZapOp.VMA+=ZAP_OP.SP_V_MA
      ?};
      ZAP_OP.next()
   !}
?};
{? _d='' | _d='W' | _d='N' & ZapOp.WN<>ZapOp.MA | _d='R' & ZapOp.WN=ZapOp.MA
|| _txt:=OP.xml_buf(,,'data','p',,'noheader=1,norecord=0,nodata=1,indentation=1',
      'REFERENCE',,
      'UIDREF',"{? var_press('IDADD',OP)>0 || OP.uidref() || $OP.ref() ?}",
      'FIRMA',"$FIRMA.ref()",
      'FIRMA_SYM',"FIRMA.SYMBOL",
      'ODD_OD',"OP.ODD().OD",
      'KH',,
      'KH:KH_KOD','KOD',
      'SYM',,
      'SYM_ZEW',,
      'AN',,
      'TYP',,
      'DO',,
      'TZ',,
      'WAL_KOD',"OP.WAL().KOD",
      'OBROTY_WN',"gsub($ZapOp.WN,',','.')",
      'OBROTY_MA',"gsub($ZapOp.MA,',','.')",
      'SALDO_WN',"gsub($F.SWn(ZapOp.WN,ZapOp.MA),',','.')",
      'SALDO_MA',"gsub($F.SMa(ZapOp.WN,ZapOp.MA),',','.')",
      'OBROTY_V_WN',"gsub($ZapOp.VWN,',','.')",
      'OBROTY_V_MA',"gsub($ZapOp.VMA,',','.')",
      'SALDO_V_WN',"gsub($F.SWn(ZapOp.VWN,ZapOp.VMA),',','.')",
      'SALDO_V_MA',"gsub($F.SMa(ZapOp.VWN,ZapOp.VMA),',','.')"
   );
   _file.fwrite(_txt)
?};
{? var_press('_e')>0 & _e
|| exec('start','mwa_op',_a,_file)
?};
_file


\read_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Zwraca listę rozrachunków
::   WY: uchwyt do pliku z danymi
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();

_firma_str:=exec('get_option','mwapi',_par,'firma').value;
_firma:=null;
{? _firma_str<>''
|| FIRMA.cntx_psh();
   FIRMA.index('SYMBOL'); FIRMA.prefix(_firma_str,);
   {? FIRMA.first()
   || _firma:=FIRMA.ref()
   ?};
   FIRMA.cntx_pop()
|| _firma_str:=REF.FIRMA().SYMBOL;
   _firma:=REF.FIRMA
?};
{? _firma_str<>'' & _firma=null
|| _result:=exec('serialize_error','mwa_op',_par,'Nie znaleziono firmy: %1.'@[_firma_str]);
   return(_result)
?};
{? ~exec('hasArea','users','FKS_ROZ',,_firma)
|| _result:=exec('serialize_error','mwa_op',_par,'Brak uprawnień do przeglądania rozrachunków w firmie: %1.'@[_firma_str]);
   return(_result)
?};
_odd_str:=exec('get_option','mwapi',_par,'odd').value;
{? _odd_str<>''
|| ODD.cntx_psh();
   ODD.index('ODDZIALY'); ODD.prefix(_firma,_odd_str,);
   _odd:={? ODD.first() || ODD.ref() || null ?};
   ODD.cntx_pop();
   {? _odd=null
   || _result:=exec('serialize_error','mwa_op',_par,'Nie znaleziono jednostki księgowej: %1 w firmie: %2.'@[_odd_str,_firma_str]);
      return(_result)
   ?};
   {? ~exec('usr_fjks','b_perm',_odd)
   || _result:=exec('serialize_error','mwa_op',_par,'Brak uprawnień do danych z jednostki księgowej: %1 w firmie: %2.'@[_odd_str,_firma_str]);
      return(_result)
   ?}
|? ~exec('usr_fjks_any','b_perm',,_firma)
|| _result:=exec('serialize_error','mwa_op',_par,'Brak uprawnień do jednostek księgowych w firmie: %1.'@[_firma_str]);
   return(_result)
?};
_wal_str:=exec('get_option','mwapi',_par,'wal').value;
_wal:=null;
{? _wal_str<>''
|| exec('czytaj','#stalesys',,XINFO,'SLWAL');
   {? XINFO.SLWAL
   || _wal:=exec('find_slo_slu','slo_slu',XINFO.SLWAL,_wal_str)
   || _result:=exec('serialize_error','mwa_op',_par,'Nie ustawiono słownika walut.'@);
      return(_result)
   ?}
?};
{? _wal_str<>'' & _wal=null
|| _result:=exec('serialize_error','mwa_op',_par,'Nie znaleziono waluty: %1 w słowniku: %2.'@[_wal_str,XINFO.SLWAL().NAZ]);
   return(_result)
?};
_kh_str:=exec('get_option','mwapi',_par,'kh').value;
_kh:=null;
{? _kh_str<>''
|| KH.cntx_psh();
   KH.index('KOD'); KH.prefix(2,_kh_str,);
   {? KH.first()
   || _kh:=KH.ref()
   ?};
   KH.cntx_pop()
?};
{? _kh_str<>'' & _kh=null
|| _result:=exec('serialize_error','mwa_op',_par,'Nie znaleziono kontrahenta o kodzie: %1.'@[_kh_str]);
   return(_result)
?};
_typ_str:=exec('get_option','mwapi',_par,'typ').value;
_odat:=exec('data','mwa_op',_par);
{? _odat.ok=0 || return(_odat.file) ?};
_data:=_odat.data;
_stan:=exec('get_option','mwapi',_par,'stan').value;
_sym:=exec('get_option','mwapi',_par,'sym').value;
_sym:=gsub(_sym,'\'','\'\'');
_sym_zew:=exec('get_option','mwapi',_par,'sym_zew').value;
_sym_zew:=gsub(_sym_zew,'\'','\'\'');
_an:=exec('get_option','mwapi',_par,'konto').value;
_an:=gsub(_an,'\'','\'\'');
FIRMA.cntx_psh();
FIRMA.index('SYMBOL');
FIRMA.prefix();
FIRMA.seek(_firma);
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ');
_from:='';
_where:='OP.DO<=to_date(:_a) ';
_odd_sel:=~~;
{? _odd_str<>''
|| _odd_str:=gsub(_odd_str,'\'','\'\'');
   _from+='join ODD using(OP.ODD,ODD.REFERENCE) ';
   _where+='and ODD.OD=\'%1\' '[_odd_str]
|? ~Perm.hasFull('FJKS')
|| _where+='and OP.ODD in (select REF from :_b) ';
   _odd_sel:=sql('select DEPT as REF from USERSDEP where USERS=:_a and FIRMA=:_b',OPERATOR.USER,_firma)
?};
{? _wal || _where+=' and OP.WAL=\'%1\' '[$_wal] ?};
{? _kh || _where+=' and OP.KH=\'%1\''[$_kh] ?};
{? _typ_str<>'' || _where+=' and OP.TYP=\'%1\''[_typ_str] ?};
{? _sym_zew<>''
|| {? var_press('SYM_ZEW',OP)>0
   || _where+=' and OP.SYM_ZEW=\'%1\''[_sym_zew]
   || _where+=' and OP.SYM=\'%1\''[_sym_zew]
   ?}
|? _sym<>''
|| _where+=' and OP.SYM=\'%1\''[_sym]
?};
{? _an<>'' || _where+=' and OP.AN=\'%1\''[_an] ?};
ROK_F.prefix(_firma);
{? ROK_F.find_le(_data)
|| _result:=exec('start','mwa_op',_par);
   OP.cntx_psh();
   OP.use('operac'+ROK_F.KOD);
   ZAP_OP.cntx_psh();
   ZAP_OP.use('rozzap'+ROK_F.KOD);
   OP.prefix();
   OP.f_set('SYM',_from,_where,_data,_odd_sel);
   exec('serialize','mwa_op',_par,_result,_data,_stan);
   OP.f_clear();
   ZAP_OP.cntx_pop();
   OP.cntx_pop();
   exec('start','mwa_op',_par,_result)
|| _result:=exec('serialize_error','mwa_op',_par,'Nie znaleziono roku dla daty: %1 w firmie: %2.'@[$_data,_firma_str])
?};
ROK_F.cntx_pop();
FIRMA.cntx_pop();
_result


\serialize_error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Formuła pomocnicza do serializacji umów
::   WE: _a - parametry
::       _b - STRING - treść błędu
::       _c - _wsenv
::----------------------------------------------------------------------------------------------------------------------
{? _ >= 3
|| _wsenv:=_c
|| _wsenv:=exec('wsenv','#mwapi')
?};
_wsenv.erase();
_wsenv.add_error(_b);
_resp:=_wsenv.to_json();
_result:=exec('serialize_res','mwapi',_a,_resp);
_result


\data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Pobiera datę
::   WE: _a - parametry
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new('data','file','ok');
_data_str:=exec('get_option','mwapi',_a,'data').value;
_obj.data:=date(0,0,0);
_obj.ok:=1;
{? _data_str<>''
|| _err:=0;
   {? +_data_str=10
   || _dr:=#(4+_data_str);
      _dm:=#(5-_data_str-3);
      _dd:=#(_data_str+2);
      {? _dr & _dm & _dd & _dr>1900 & _dm<=12 & _dd<=31
      || _msg:=no_msg(1); errno; on_error(3);
         _obj.data:=date(_dr,_dm,_dd);
         no_msg(_msg); on_error(); _err:=errno;
         {? _err<>0  || _obj.data:=date(0,0,0) ?}
      || _err:=1
      ?}
   ?};
   {? _obj.data=date(0,0,0)
   || {? _err
      || _obj.file:=exec('serialize_error','mwa_op',_a,'Nieprawidłowa data: %1.'@[_data_str])
      || _obj.file:=exec('serialize_error','mwa_op',_a,'Nieprawidłowy format daty: %1. Wymagany: RRRR/MM/DD.'@[_data_str])
      ?};
      _obj.ok:=0
   ?}
?};
{? _obj.data=date(0,0,0) || _obj.data:=date() ?};
_obj


\firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Zwraca tablicę z danymi firmy na podstawie maski rozrachunków
::   WE: _a - maska rozrachunku
::----------------------------------------------------------------------------------------------------------------------
_firma:=obj_new('SYMBOL','REF');
_kod:=_a+2;
ROK_F.cntx_psh();
ROK_F.index('KODG'); ROK_F.prefix(_kod,);
{? ROK_F.first()
|| _firma.REF:=ROK_F.FIRMA;
   _firma.SYMBOL:=ROK_F.FIRMA().SYMBOL
|| _firma.REF:=null;
   _firma.SYMBOL:=''
?};
ROK_F.cntx_pop();
_firma


\prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Formuła startowa usługi sieciowej
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
exec('prolog','mwapi',_par);
exec('F','object');
exec('Perm','#object');
~~


\epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Fomuła końcowa usługi sieciowej
::----------------------------------------------------------------------------------------------------------------------
exec('epilog','mwapi');
~~

:Sign Version 2.0 jowisz:1045 2023/11/08 13:56:26 cb585b90e80d0eb86346a01d6fb665c261a155f8493aa8c26e0492597080681b9d40f41c9a53df2b73d1d4600ea4fb1b8a27d44e8c7faf9fb5784d309e9301b02bde82c203851379ff067807babf359631a7cd0d753cc16e5133c9ae4e0d4ffe0b9d8498a9b02913c5979dad6d3d1e677efd2377adaf7da28aa359452393bdc2
