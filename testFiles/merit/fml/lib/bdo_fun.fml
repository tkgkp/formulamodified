:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: bdo_fun.fml
:: Utworzony: 22.11.2019
:: Autor: TS
::======================================================================================================================
:: Zawartość: Funkcje współpracy z BDO, w szczególności takie, które są różne w Merit i Xpertis
::======================================================================================================================


\is_active
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Sprawdza, czy współpraca z BDO jest aktywna
::----------------------------------------------------------------------------------------------------------------------
exec('get','#params',100330)='T'


\is_configured
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Sprawdza, czy jest wprowadzona niezbędna konfiguracja systemu z BDO
::   WE: [_a] - [0] sprawdza wszystkie parametry: 100191..100195 i 100331..100334
::              1 - sprawdza tylko parametry 100191..100195 (kontrahenci i odbiorcy)
::              2 - sprawdza tylko parametry 100191..100192 (kontrahent i odbiorca podstawowy)
::              3 - sprawdza tylko parametry 100331..100334 (dane wspólpracy z portalem BDO)
::              każda inna wartość zwróci 1
::   WY: 0 / 1
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _param:=_a
|| _param:=0
?};
_result:=1;
{? _param=0 | _param=1 | _param=2
|| _result:=
      _result &
      exec('get','#params',100191)<>'' &
      exec('get','#params',100192)<>''
?};
{? _param=0 | _param=1
|| _result:=
      _result &
      exec('get','#params',100193)<>'' &
      exec('get','#params',100194)<>'' &
      exec('get','#params',100195)<>''
?};
{? _param=0 | _param=3
|| _result:=
      _result &
      exec('get','#params',100331)<>'' &
      exec('get','#params',100333)<>'' &
      exec('get','#params',100334)<>''
?};
_result


\address
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Adres usługi
::----------------------------------------------------------------------------------------------------------------------
exec('get','#params',100331)


\ClientId
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Zwraca ClientId do usługi BDO
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('get','#params',100333);

BDOID.index('USER');
BDOID.prefix(OPERATOR.USER);
{? BDOID.first()
|| {? BDOID.ID<>'' || _wyn:=BDOID.ID ?}
?};
_wyn


\ClientSecret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Zwraca ClientSecret do usługi BDO
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('get','#params',100334);

BDOID.index('USER');
BDOID.prefix(OPERATOR.USER);
{? BDOID.first()
|| {? BDOID.PASS<>'' || _wyn:=BDOID.PASS ?}
?};
_wyn


\is_verbose
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Czy logowanie zapytań jest aktywne
::----------------------------------------------------------------------------------------------------------------------
exec('get','#params',100335)='T'


\is_mwac_log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.14]
:: OPIS: Czy logowanie do rejestru zdarzeń jest aktywne
::----------------------------------------------------------------------------------------------------------------------
exec('get','#params',100336)


\WasteCode_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
::   WE: _a - kod odpadu (w stylu '01' albo '01 01' albo '01 01 01'
::      [_b] - Czy z dialogami (0/[1])
:: OPIS: Sprawdza, czy podany kod odpadu istnieje w bazie, zwraca obiekt o poniższej strukturze albo ~~
::  {
::    "wasteCodeId": 0,
::    "dateCreated": "2019-11-20T12:59:12.734Z",
::    "code": "string",
::    "description": "string",
::    "isDangerous": true,
::    "deleted": true,
::    "level": 0,
::    "parentId": 0
::  }
::----------------------------------------------------------------------------------------------------------------------
_code:=_a;
{? var_pres('_b')=type_of(0) || _dialog:=_b || _dialog:=1 ?};

_result:=~~;
_can_continue:=1;

_obj0:=exec('HealthCheck','bdo_api');
{? _obj0.STATUS=200
|| _obj:=exec('WasteCode_search','bdo_api',_code);
   {? _obj.STATUS=200
   || _tab:=json_parse(_obj.DATA);
      {? var_pres('_tab')>100
      || _obj_len:=obj_len(_tab);
         _it:=0;
         {!
         |? _it+=1;
            {? _tab[_it].code=_code
            || _result:=_tab[_it];
               {? _dialog || FUN.info('Poprawny kod odpadu \'%1\'.'@[_code]) ?};
               _can_continue:=0
            ?};
            _it<_obj_len
         !};
         {? _can_continue & _dialog || FUN.emsg('Błędny kod odpadu \'%1\'.'@[_code]) ?}
      ?}
   || {? _dialog || FUN.emsg('Błędny kod odpadu \'%1\'.'@[_code]+'\n\n'+_obj.MESSAGE) ?}
   ?}
|| {? _dialog || FUN.emsg(_obj0.MESSAGE) ?}
?};

_result


\KH_put_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Zapisuje id podmiotu w bazie BDO w powiązaniu z kontrahentem
::   WE: _a - KH.ref()
::       [_b] - czy wyświetlać dialog
::       [_c] - czy wymusić aktualizację id (domyślnie 0)
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
{? var_pres('_b')=type_of(0) || _dialog:=_b || _dialog:=1 ?};
{? var_pres('_c')=type_of(0) || _force:=_c || _force:=0 ?};

_params:=params_get();
{? type_of(_params)>100 & var_pres('env',_params)>100 & var_pres('BDOenv',_params.env)=type_of('')
|| _env:=params_get().env;
   params_set(params_get())
|| _env:=exec('env_create','odpady');
   params_set('env',_env)
?};

{? __BDO_TOKEN='' || return() ?};

:: Sprawdzenie, czy numer jest już zapamiętany
_companyId:=exec('KH_get_id','bdo_fun',_ref);

::{? _companyId<>'' & ~_force & _dialog
::|| FUN.info('Identyfikator został już wcześniej pobrany i zapisany w danych kontrahenta.'@);
::   return()
::?};

{? _force | _companyId='' | (_dialog & ~_force & FUN.ask('Czy wykonać synchronizację z BDO?'@))
|| _companyId:='';
   KH.cntx_psh();
   KH.prefix();
   {? KH.seek(_ref)
   || exec('del_rek','#sync_id','BDO_KH_ID',KH.uidref());
      {? KH.NRREJDBO=''
      || {? _dialog || FUN.info('Nie można pobrać danych, brak numeru rejestrowego BDO kontrahenta.'@) ?}
      || _obj:=exec('Search_searchcompany','bdo_api',KH.NRREJDBO);
         {? _obj.STATUS=200
         || _company:=json_parse(_obj.DATA);
            _size:=obj_len(_company);
            _id:=null();
            {! _it:=1.. _size
            |! _companyId:=_company[_it].companyId;
               _nazwa:=_company[_it].name;
               _nip:=_company[_it].nip;
               _registrationNumber:=_company[_it].registrationNumber;
               {? _companyId<>'' & _registrationNumber=KH.NRREJDBO
               || _id:=exec('add_id','#sync_id',
                     'BDO_KH_ID',exec('FindAndGet','#table',KH,_ref,,"KH.uidref()",''),_companyId
                  );
                  {? _id<>null()
                  || {? _dialog
                     || _txt:='Pobrano identyfikator i zapisano w danych kontrahenta.'@+'\n\n';
                        _txt+='Nazwa z BDO: %1'@[_nazwa]+'\n';
                        _txt+='Nazwa z ERP: %1'@[KH.NAZ_P]+'\n\n';
                        {? _nip=KH.SNIP
                        || _txt+='NIP zgodny (%1).'@[_nip]
                        || _txt+='NIP niezgodny z ERP.'@
                        ?};
                        FUN.info(_txt)
                     ?}
                  ?}
               ?}
            !};
            {? _dialog & _id=null()
            || FUN.emsg(
                  'Nie udało się pobrać identyfikatora z bazy BDO.\n'
                  'Należy sprawdzić poprawność wypełnienia numeru rejestrowego BDO kontrahenta.'@
               )
            ?}
         || {? _dialog || FUN.emsg(_obj.MESSAGE) ?}
         ?}
      ?}
   ?};
   KH.cntx_pop()
?};
~~


\KH_get_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Pobiera id podmiotu w bazie BDO z kontrahenta
::   WE: _a - KH.ref()
::   WY: companyId
::----------------------------------------------------------------------------------------------------------------------
_uidref:=exec('FindAndGet','#table',KH,_a,,"KH.uidref()",'');
_id:='';

_id_tab:=exec('get_id','#sync_id','BDO_KH_ID',_uidref);

{? type_of(_id_tab)>0
|| {? _id_tab.first()
   || _id:=_id_tab.ID
   ?}
?};

_id


\KH_ODB_put_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Zapisuje id miejsca prowadzenia działalności w bazie BDO w powiązaniu z odbiorcą kontrahenta
::   WE: _a - KH_ODB.ref()
::       [_b] - czy wyświetlać dialog (domyślnie 1)
::       [_c] - czy wymusić aktualizację id (domyślnie 0)
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
{? var_pres('_b')=type_of(0) || _dialog:=_b || _dialog:=1 ?};
{? var_pres('_c')=type_of(0) || _force:=_c || _force:=0 ?};

_params:=params_get();
{? type_of(_params)>100 & var_pres('env',_params)>100 & var_pres('BDOenv',_params.env)=type_of('')
|| _env:=params_get().env;
   params_set(params_get())
|| _env:=exec('env_create','odpady');
   params_set('env',_env)
?};

{? __BDO_TOKEN='' || return() ?};

:: Sprawdzenie, czy numer jest już zapamiętany
_eupId:=exec('KH_ODB_get_id','bdo_fun',_ref);

::{? _eupId<>'' & ~_force & _dialog
::|| FUN.info('Identyfikator został już wcześniej pobrany i zapisany w danych odbiorcy kontrahenta.'@);
::   return()
::?};

{? _force | _eupId='' | (_dialog & ~_force & FUN.ask('Czy wykonać synchronizację z BDO?'@))
|| _eupId:='';
   KH_ODB.cntx_psh();
   KH_ODB.prefix();
   {? KH_ODB.seek(_ref)
   || exec('del_rek','#sync_id','BDO_KH_ODB_ID',KH_ODB.uidref());
      {? KH_ODB.NRMPDBDO=''
      || {? _dialog || FUN.info('Nie można pobrać danych, brak numeru miejsca prowadzenia działalności BDO.'@) ?}

      || _companyId:=exec('KH_get_id','bdo_fun',KH_ODB.KH,0);
::       Próba pobrania identyfikatora kontrahenta
         {? _companyId=''
         || exec('KH_put_id','bdo_fun',KH_ODB.KH,0);
            _companyId:=exec('KH_get_id','bdo_fun',KH_ODB.KH,0)
         ?};
         {? _companyId=''
         || {? _dialog
            || FUN.info('Nie można pobrać danych, najpierw należy pobrać identyfikator dla kontrahenta.'@)
            ?}
         || _obj:=exec('Search_searcheupsbycompanyid','bdo_api',_companyId,KH_ODB.NRMPDBDO);
            {? _obj.STATUS=200
            || _eups:=json_parse(_obj.DATA);
               {? var_pres('_eups')>100
               || {! _it:=1 .. obj_len(_eups)
                  |! {? _eups[_it].registrationNumber=KH_ODB.NRMPDBDO
                     || _eupId:=_eups[_it].eupId;
                        _ref:=exec('add_id','#sync_id','BDO_KH_ODB_ID',KH_ODB.uidref(),_eupId);
                        {? _ref<>null()
                        || {? _dialog || FUN.info('Pobrano identyfikator i zapisano w danych odbiorcy kontrahenta.'@) ?}
                        ?}
                     ?}
                  !}
               ?};
               {? _eupId=''
               || {? _dialog
                  || FUN.emsg(
                        'Nie udało się pobrać identyfikatora z bazy BDO.\n'
                        'Należy sprawdzić poprawność wypełnienia numeru miejsca prowadzenia działalności BDO.'@
                     )
                  ?}
               ?}
            || {? _dialog || FUN.emsg(_obj.MESSAGE) ?}
            ?}
         ?}
      ?}
   ?};
   KH_ODB.cntx_pop()
?};
~~


\KH_ODB_get_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Pobiera id miejsca prowadzenia działalności w bazie BDO z odbiorcy kontrahenta
::   WE: _a - KH_ODB.ref()
::   WY: eupId
::----------------------------------------------------------------------------------------------------------------------
_uidref:=exec('FindAndGet','#table',KH_ODB,_a,,"KH_ODB.uidref()",'');
_id:='';

_id_tab:=exec('get_id','#sync_id','BDO_KH_ODB_ID',_uidref);

{? type_of(_id_tab)>0
|| {? _id_tab.first()
   || _id:=_id_tab.ID
   ?}
?};

_id


\KH_get_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Pobiera ref() kontrahenta w ERP przypisany do id partnera w BDO
::   WE: _a - companyId
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('get_rek','#sync_id','BDO_KH_ID',_a);

_ref:=null();

{? _tab.first()
|| _ref:=exec('FindAndGet','#table',KH,_tab.REK,,"ref()",null())
?};

_ref


\KH_ODB_get_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Pobiera ref() odbiorcy kontrahenta w ERP przypisany do id miejsca prowadzenia działalności w BDO
::   WE: _a - eupId
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('get_rek','#sync_id','BDO_KH_ODB_ID',_a);

_ref:=null();

{? _tab.first()
|| _ref:=exec('FindAndGet','#table',KH_ODB,_tab.REK,,"ref()",null())
?};

_ref


\set_token
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Ustala aktywny token wg miejsca prowadzenia działalności
::   WE: _a - numer miejsca prowadzenia działalności (KH_ODB.NRMPDBDO)
::       [_b] - wymuszenie wygenerowania nowego tokena 1/[0]
::   WY: czy udało się ustawić token ('OK','MESSAGE')
::----------------------------------------------------------------------------------------------------------------------
_mpd:=_a;
{? var_pres('_b')=type_of(0) || _force:=_b || _force:=0 ?};

_user:=null();
BDOID.cntx_psh();
BDOID.index('USER');
BDOID.prefix(OPERATOR.USER);
{? BDOID.first()
|| {? BDOID.ID<>'' & BDOID.PASS<>'' || _user:=OPERATOR.USER ?}
?};
BDOID.cntx_pop();

BDOTOKEN.cntx_psh();
BDOTOKEN.index('MPD');
BDOTOKEN.prefix(_mpd,_user);

_set_token:=obj_new('OK','MESSAGE');
_set_token.OK:=0;
_set_token.MESSAGE:=
   'Błąd połączenia z systemem BDO.'@+'\n'+
   'Funkcje współpracy z BDO zostaną wyłączone.'@;

{? BDOTOKEN.first()
||
:: Unieważnić bieżący token
   {? _force
   || BDOTOKEN.EXPIRES:=exec('create','#tm_stamp');
      {? BDOTOKEN.put()
      || BDOTOKEN.memo_set('');
         BDOTOKEN.memo_put(,'TOKEN')
      ?}
:: Znaleźć token w tabeli, jeżeli ważny, to ok
   || {? BDOTOKEN.EXPIRES>exec('create','#tm_stamp')
      || __BDO_TOKEN:=BDOTOKEN.memo_txt(,1,'TOKEN');
         _set_token.OK:=1
      ?}
   ?}
?};

{? _set_token.OK=0
|| _obj:=exec('AccessToken','bdo_api',_mpd);
   {? type_of(_obj)>100
   || {? BDOTOKEN.first()
      || BDOTOKEN.EXPIRES:=exec('create','#tm_stamp')+1000*exec('minute','#tm_stamp');
         {? BDOTOKEN.put()
         || BDOTOKEN.memo_set(_obj.AccessToken);
            BDOTOKEN.memo_put(,'TOKEN')
         ?}
      || BDOTOKEN.MPD:=_mpd;
         BDOTOKEN.EXPIRES:=exec('create','#tm_stamp')+1000*exec('minute','#tm_stamp');
         BDOTOKEN.USERS:=_user;
         {? BDOTOKEN.add()
         || BDOTOKEN.memo_set(_obj.AccessToken);
            BDOTOKEN.memo_put(,'TOKEN')
         ?}
      ?};
      __BDO_TOKEN:=_obj.AccessToken;
      _set_token.OK:=1
   || __BDO_TOKEN:=''
   ?}

:: Sprawdzenie czy system działa
|| _obj:=exec('HealthCheck','bdo_api');
   {? _obj.STATUS<>200
   || __BDO_TOKEN:='';
      _set_token.OK:=0;
      _set_token.MESSAGE:=_obj.MESSAGE
   ?}
?};

BDOTOKEN.cntx_pop();
_set_token


\get_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Pobiera wartość parametru
::   WE: _a - numer parametru
::       [_b] - typ parametru
::   WY: wartość parametru
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')=type_of(0)
|| exec('get','#params',_a,_b)
|| exec('get','#params',_a)
?}


\bdo_permissions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Konfigurowanie uprawnień użytkownika w BDO
::   WE: [_a] - tryb administratora [0]/1
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _admin:=_a || _admin:=0 ?};

_update:=0;

BDOID.cntx_psh();
BDOID.win_sel('WERUS');
BDOID.win_edit('REDUS');
BDOID.index('USER');

{? _admin=0
|| _valid:="__CHK.record(BDOID,,'ID','PASS')";
   BDOID.prefix(OPERATOR.USER);
   {? BDOID.first()
   || _client:=BDOID.ID;
      _secret:=BDOID.PASS;
      {? BDOID.edit(_valid)
      || {? BDOID.put() & (_client<>BDOID.ID | _secret<>BDOID.PASS) || _update:=1 ?}
      ?}
   || BDOID.blank();
      {? BDOID.edit(_valid)
      || {? BDOID.add() || _update:=1 ?}
      ?}
   ?};
   _env:=params_get().env;
   {? _update & exec('is_active','bdo_fun')
   || _set_token:=exec('set_token','bdo_fun',exec('FindAndGet','#table',KH_ODB,_env.KH_ODB,,"KH_ODB.NRMPDBDO",''),1);
      {? _set_token.OK=0
      || FUN.emsg(_set_token.MESSAGE)
      ?}
   ?}

|| BDOID.prefix();
   BDOID.select()
?};

BDOID.cntx_pop();
~~


\bdo_spr_miej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [20.14]
:: OPIS: Wyświetla miejsca prowadzenia działalności kontrahenta
::----------------------------------------------------------------------------------------------------------------------
_env:=exec('env_create','odpady');
params_set('env',_env);

_companyId:=exec('KH_get_id','bdo_fun',BEER.KH);
{? _companyId=''
|| FUN.info('Należy pobrać identyfikator BDO dla kontrahenta.'@)
||
   _tab:=tab_tmp(1
      ,'REGNR','STRING[255]','registrationNumber'
      ,'EUPID','STRING[255]','eupId'
      ,'COMPANY','STRING[255]','companyId'
      ,'NAME','STRING[255]','name'
      ,'ADDRESS','STRING[255]','address'
      ,'BUILDING','STRING[255]','buildingNumber'
      ,'LOCAL','STRING[255]','localNumber'
      ,'POSTCODE','STRING[255]','postalCode'
      ,'TERYT','STRING[255]','teryt'
   );

   _wer:=_tab.mk_sel('Miejsca prowadzenia działalności BDO'@,'T',,'mpdbdower',,,,,'U');
   _tab.win_fld(_wer,,'REGNR',,,20,,,'Numer MPD'@);
   _tab.win_fld(_wer,,'NAME',,,100,,,'Nazwa'@);
   _tab.win_sel(_wer);
   _red:=_tab.mk_edit('Dane miejsca prowadzenia działalności BDO'@,,'mpdbdored');
   _tab.win_esep(_red,'Dane podstawowe'@);
   _tab.win_efld(_red,,'REGNR',,,100,,,'Numer MPD'@);
   _tab.win_efld(_red,,'NAME',,,100,,,'Nazwa'@);
   _tab.win_efld(_red,,'ADDRESS',,,100,,,'Adres'@);
::   _tab.win_efld(_red,,'BUILDING',,,100,,,'Numer budynku'@);
::   _tab.win_efld(_red,,'LOCAL',,,100,,,'Numer lokalu'@);
::   _tab.win_efld(_red,,'POSTCODE',,,100,,,'Kod pocztowy'@);
   _tab.win_esep(_red,'Identyfikatory'@);
   _tab.win_efld(_red,,'COMPANY',,,100,,,'Podmiot'@);
   _tab.win_efld(_red,,'EUPID',,,100,,,'Miejsce prowadzenia działalności'@);
   _tab.win_edit(_red);

   _eup_nr:=0;

:: Dopuszczalna liczba "dziur" w numeracji MPD
   _holes:=5;

   prgs_clr();
   progress(,'Trwa sprawdzanie miejsc prowadzenia działalności.'@,FUN.TYT,1,0);

   {!
   |?
::    Zakładamy, że MPD ma format 9999/NRBDO
      _eup_nr+=1;
      _query:='%1/%2'[form(_eup_nr,-4,,'99'),BEER.KH().NRREJDBO];

      _obj:=exec('Search_searcheupsbycompanyid','bdo_api',_companyId,_query);
      {? _obj.STATUS=200
      || progress(,'Trwa sprawdzanie miejsc prowadzenia działalności: %1.'@[_query],FUN.TYT,1,0);
         _eups:=json_parse(_obj.DATA);
         {? var_pres('_eups')>100
         || _can_continue:=0;
            {! _it:=1.. obj_len(_eups)
            |! {? _eups[_it].registrationNumber=_query
               || _can_continue:=1;
                  _tab.EUPID:={? var_pres('eupId',_eups[_it])=type_of('') || _eups[_it].eupId || '' ?};
                  _tab.COMPANY:={? var_pres('companyId',_eups[_it])=type_of('') || _eups[_it].companyId || '' ?};
                  _tab.REGNR:={? var_pres('registrationNumber',_eups[_it])=type_of('') || _eups[_it].registrationNumber || '' ?};
                  _tab.NAME:={? var_pres('name',_eups[_it])=type_of('') || _eups[_it].name || '' ?};
                  _tab.ADDRESS:={? var_pres('address',_eups[_it])=type_of('') || _eups[_it].address || '' ?};
                  _tab.BUILDING:={? var_pres('buildingNumber',_eups[_it])=type_of('') || _eups[_it].buildingNumber || '' ?};
                  _tab.LOCAL:={? var_pres('localNumber',_eups[_it])=type_of('') || _eups[_it].localNumber || '' ?};
                  _tab.POSTCODE:={? var_pres('postalCode',_eups[_it])=type_of('') || _eups[_it].postalCode || '' ?};
                  _tab.TERYT:={? var_pres('teryt',_eups[_it])=type_of('') || _eups[_it].teryt || '' ?};
                  _tab.add()
               ?}
            !};
            obj_del(_eups);
            {? _can_continue=0
            || _holes-=1
            ?}
         || _holes-=1
         ?}

      || FUN.emsg(_obj.MESSAGE)
      ?};

      obj_del(_obj);

      _holes>0
   !};

   prgs_clr();

   _tab.select()

?};
~~


\MPD_get_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Pobiera identyfikator miejsca prowadzenia działalności na podstawie id podmiotu i numeru MPD
::   WE: _a - companyId
::       _b - MPD
::----------------------------------------------------------------------------------------------------------------------
_companyId:=_a;
_MPD:=_b;

_dialog:=0;

_eupId:='';

_obj:=exec('Search_searcheupsbycompanyid','bdo_api',_companyId,_MPD);

{? _obj.STATUS=200
|| _eups:=json_parse(_obj.DATA);
   {? var_pres('_eups')>100
   || {! _it:=1.. obj_len(_eups)
      |! {? _eups[_it].registrationNumber=_MPD
         || _eupId:=_eups[_it].eupId
         ?}
      !}
   ?}
|| {? _dialog || FUN.emsg(_obj.MESSAGE) ?}
?};

_eupId


\bdo_adm_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Administracyjna zmiana statusu BDO karty
::----------------------------------------------------------------------------------------------------------------------
_status_old:=KPO.KPO_STAT().NAZ;
params_set('status_old',_status_old);

KPO_STAT.cntx_psh();
KPO_STAT.index('NAZ');
KPO_STAT.prefix();
_wer:=KPO_STAT.mk_sel('Statusy kart przekazania odpadów'@,,,'statusykart',,,,,'U');
KPO_STAT.win_fld(_wer,,'NAZ');
KPO_STAT.win_fld(_wer,,'KOD');
_formula:="
   {? FUN.ask(
         'Czy na pewno zmienić status karty \'\'%1\'\' z \'\'%2\'\' na \'\'%3\'\'?'@
         [KPO.SYM,params_get().status_old,KPO_STAT.NAZ]
      )
   || sel_exit()
   ?}
";
KPO_STAT.win_act(_wer,,'Formuła','Wybierz'@@,,,_formula,,1,,,,'W');
KPO_STAT.win_sel(_wer);
{? KPO_STAT.select() || KPO.KPO_STAT:=KPO_STAT.ref(); KPO.put() ?};
KPO_STAT.cntx_pop();
~~


\find_kpo_by_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Znajduje KPO na podstawie identyfikatora BDO
::   WE: _a - identyfikator BDO
::   WY: KPO.uidref()
::----------------------------------------------------------------------------------------------------------------------
:: Szukanie w bieżącej masce - docelowo iteracja po pozostałych, gdy nie znajdzie
_res:='';
{? var_pres('_a')=type_of('')
|| _id:=_a;
   KPO.cntx_psh();
   KPO.index('BDO_ID');
   KPO.prefix(_id,);
   {? KPO.first()
   || _res:=KPO.uidref()
   ?};
   KPO.cntx_pop();
   {? _res=''
   ||
::    Przeszukuje pozostałe maski
      VAR_DEL.delete('__res');
      __res:='';
      _rule:="
         _res:='';
         _args:=_b;
         _id:=_args.ID;
         _skip_mask:=_args.SKIP_MASK;
         {? _skip_mask<>KPO.name()
         || KPO.cntx_psh();
            KPO.index('BDO_ID');
            KPO.prefix(_id,);
            {? KPO.first()
            || __res:=_res:=KPO.uidref()
            ?};
            KPO.cntx_pop()
         ?};
         _res
      ";
      _args:=obj_new('ID','SKIP_MASK');
      _args.ID:=_id;
      _args.SKIP_MASK:=KPO.name();
      exec('for_each_mask','#table',KPO,_rule,,,_args,'');
      _res:=__res;
      VAR_DEL.delete('__res')
   ?}
?};
_res


\countryId
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Znajduje kraj na podstawie skróconej nazwy
::   WE: _a - kod kraju, np. 'PL'
::   WY: identyfikator kraju w słowniku BDO
::----------------------------------------------------------------------------------------------------------------------
_country:=_a;
_res:=0;

{? _country='' || return(_res) ?};

_find:="
   _res:=0;
   _country:=_a;
   _obj:=exec('Country_search','bdo_api',_country);
   {? _obj.STATUS=200
   || _jman:=exec('json_man','__jsonm',_obj.DATA);
      _res:={? _jman.isPath('[1].countryId') || _jman.getValue('[1].countryId') || 0 ?}
   ?};
   _res
";

KRAJE.cntx_psh();
KRAJE.index('KODISO');
KRAJE.prefix(_country,);
{? KRAJE.first()
|| {? KRAJE.BDO_ID<>0
   || _res:=KRAJE.BDO_ID
   || _res:=_find(_country);
      {? _res<>0
      || KRAJE.BDO_ID:=_res;
         KRAJE.put()
      ?}
   ?}
|| _res:=_find(_country)
?};
KRAJE.cntx_pop();
_res


\countryRef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Zwraca KRAJE.ref() na podstawie identyfikatora z systemu BDO
::   WE: _a - identyfikator kraju w słowniku BDO
::   WY: KRAJE.ref() / null()
::----------------------------------------------------------------------------------------------------------------------
_res:=null();
{? var_pres('_a')=type_of(0) & _a<>0
|| _id:=_a
|| return(_res)
?};

KRAJE.cntx_psh();
KRAJE.index('BDO');
KRAJE.prefix(_id);
{? KRAJE.first()
|| _res:=KRAJE.ref()
|| _obj:=exec('Country','bdo_api');
   {? _obj.STATUS=200
   || _jman:=exec('json_man','__jsonm',_obj.DATA);
      _size:=_jman.countChildren();
      {? _size>0
      || _jman1:=_jman.new('{}');
         {! _it:=1.. _size
         |! _jman1.load(_jman.getJSON('[%1]'[$_it]));
            {? _jman1.getValue('countryId')=_id
            || KRAJE.cntx_psh();
               KRAJE.index('KODISO');
               _codeName:=_jman1.getValue('codeName');
               _name:=_jman1.getValue('name');
               KRAJE.prefix(_codeName,);
               {? KRAJE.first()
               || KRAJE.BDO_ID:=_id;
                  KRAJE.put();
                  _res:=KRAJE.ref()
               || KOMM.error('Brak kraju %1 (%2) w tabeli krajów.'@[_codeName,_name],0)
               ?};
               KRAJE.cntx_pop()
            ?}
         !}
      ?}
   ?}
?};

KRAJE.cntx_pop();
_res


\wasteCode
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Konwertuje ODP.ref() na wasteCode
::   WE: _a - ODP.ref()
::       [_b] - czy dodawać * dla odpadu niebezpiecznego [1]/0
::   WY: wasteCode w formacie '01 01 01*'
::----------------------------------------------------------------------------------------------------------------------
_odp:=_a;
_haz:={? var_pres('_b')=type_of(0) || _b || 1 ?};

_res:='';

ODP.cntx_psh();
ODP.prefix();
{? ODP.seek(_a)
|| _res:='%1 %2 %3%4'[ODP.ODPG().KOD,ODP.ODPP().KOD,ODP.K,{? ODP.NB='T' || '*' || '' ?}]
?};
ODP.cntx_pop();
_res


\bdoid_ra
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Obsługa 'rekord po' w oknie BDOID
::----------------------------------------------------------------------------------------------------------------------
_chk:='';
_mode:=(-menu_txt()='popraw');
{? _chk='' & _mode=0
|| BDOID.cntx_psh();
   BDOID.index('USER');
   BDOID.prefix(OPERATOR.USER);
   {? BDOID.first()
   || FUN.info('Dla użytkownika %1 dane autoryzacyjne zostały już wprowadzone.'@[OPERATOR.USER().KOD]);
      _chk:='ID'
   ?};
   BDOID.cntx_pop()
?};
{? _chk=''
|| _chk:=__CHK.record(BDOID,,'ID','PASS')
?};
_chk

:Sign Version 2.0 jowisz:1045 2021/09/17 15:17:05 79b3bb06d97394c1fc2d2b42b92ddd7c7bad0e1755b90abd5455d43d3f5f1f905b5f460e45ff13c518a39ff34fd09f2b4da48b1f9361bf1c987f97c6e2c18ab234d4b5475c2b733b3228d39c8464110db3f84c4cac5e9a15f9861aa5c3119a2facd2d2e7a7a50b2420568ce8325374d7d97858a5f09839e17293fed6c20d8e34
