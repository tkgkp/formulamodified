:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: normatyw.fml
:: Utworzony: 17.03.2015 [17.42]
:: Autor: GZ
::======================================================================================================================
:: Zawartość: Formuły do obsługi norm wyposażenia
::======================================================================================================================


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.42]
:: OPIS: Wyświetlenie obszaru roboczego WYP_LWN - normy wyposażenia
::----------------------------------------------------------------------------------------------------------------------
_norm_role:=exec('chk_role','#b__box',OPERATOR.USER,'WYP_LWN_WNOR');
_atr_role:=exec('chk_role','#b__box',OPERATOR.USER,'WYP_LWN_WWYM');

{? ~_norm_role & ~_atr_role
|| FUN.emsg('Brak uprawnień do czynności obszaru: Normy wyposażenia.'@);
   return()
?};
P.cntx_psh();
P.clear();

NORMWSP.cntx_psh(); NORMWSP.clear();
MGRP.cntx_psh(); MGRP.index('KOD'); MGRP.clear(); MGRP.first();
RODZPR.cntx_psh(); RODZPR.index('NAZ'); RODZPR.clear(); RODZPR.first();
SLU.cntx_psh();
SLO.cntx_psh(); SLO.index('SL'); SLO.prefix(XINFO.SLWYDZIA);
SLO.actions('SLO_FO','IW:');
STN.cntx_psh(); STN.actions('WYB','W:W');
PGRUPY.cntx_psh();
PGRUPY.actions('WER','dpu:d');
_red:=exec('mk_mgrp_edit','material');
MGRP.win_edit(_red);
PGRUPY.actions('WER','DPUNA:DNA');
NORMWSP.win_fml('WER',,'MGRP','KOD','ICON_BEFORE',"Icon.icon_before(NORMWSP.MGRP().IKONA)");

_fa:='';
{? _norm_role
|| {? _atr_role
   || _fa+='exec(\'ov_n_gaf\',\'normatyw\');exec(\'rozmp_f\',\'normatyw\')'
   ?}
|| {? _atr_role
   || _fa+='exec(\'rozmp_f\',\'normatyw\')'
   ?}
?};
_gwernor:=P.grp_make('',$_fa,'ov_rozmp',,,"exec('exit','zws',_a)");
_fb:={? _norm_role
     || 'exec(\'ov_n_gaf\',\'normatyw\')'
     || ''
     ?};
P.grp_sel(_gwernor,,'WYP_ATR','Pracownicy'@,$_fa
                                         ,,,,"",,,,'maximized');
{? _norm_role
|| P.tab_splt(_gwernor,,'vertical','NORMWSP');
   P.grp_sel(_gwernor,NORMWSP,'WER',,"",,,20,"",,,,'maximized_with_title');
   {? _atr_role
   ||
      P.tab_splt(_gwernor,'NORMWSP','horizontal','ROZMP');
      P.grp_sel(_gwernor,ROZMP,'WER',,,,,,"
            {? grp_empty(P,'WYP_ATR')
            || '#disable'
            || _grayed:={? exec('blk_lock','#table','ROZMP',ROZMP.ref()) || '' || 'Dpu:D' ?};
               ROZMP.actions_grayed('WER',_grayed);
               ~~
            ?}
         ","exec('blk_unlock','#table','ROZMP',ROZMP.ref())",,,'maximized_with_title')
   ?}
|| {? _atr_role
   || P.tab_splt(_gwernor,,'vertical','ROZMP');
      P.grp_sel(_gwernor,ROZMP,'WER',,,,,,"
            {? grp_empty(P,'WYP_ATR')
            || '#disable'
            || _grayed:={? exec('blk_lock','#table','ROZMP',ROZMP.ref()) || '' || 'Dpu:D' ?};
               ROZMP.actions_grayed('WER',_grayed);
               ~~
            ?}
         ","exec('blk_unlock','#table','ROZMP',ROZMP.ref())",,,'maximized_with_title')
   ?}
?};
{? _norm_role
|| P.grp_sel(_gwernor,PGRUPY,'WER','Grupy pracowników'@,"exec('gp_gaf','normatyw')"
                                            ,,,,"",,,,'maximized');
   P.tab_splt(_gwernor,,'vertical','NORMWSG');
   P.grp_sel(_gwernor,NORMWSP,'WER',,"",,,20,"",,,,'maximized_with_title');

   P.grp_sel(_gwernor,STN,'WYB','Stanowiska'@,"exec('stn_gaf','normatyw')"
                                            ,,,,"",,,,'maximized');
   P.tab_splt(_gwernor,,'vertical','NORMWSS');
   P.grp_sel(_gwernor,NORMWSP,'WER',,"",,,20,"",,,,'maximized_with_title');

   P.grp_sel(_gwernor,SLO,'SLO_FO','Wydziały'@,"exec('wyd_gaf','normatyw')"
                                            ,,,,"",,,,'maximized');
   P.tab_splt(_gwernor,,'vertical','NORMWSW');
   P.grp_sel(_gwernor,NORMWSP,'WER',,"",,,20,"",,,,'maximized_with_title');

   P.grp_sel(_gwernor,RODZPR,'WER','Rodzaje prac'@,"exec('rpr_gaf','normatyw')"
                                            ,,,,"",,,,'maximized');
   P.tab_splt(_gwernor,,'vertical','NORMWSR');
   P.grp_sel(_gwernor,NORMWSP,'WER',,"",,,20,"",,,,'maximized_with_title')
?};

P.win_sel(_gwernor);

_p6520:=exec('get','#params',6520,2,OPERATOR.USER);
_filtr_ok:=exec('filtruj_p','wyp',1+_p6520,_p6520+1);
{? _filtr_ok<>'' || FUN.info(_filtr_ok) ?};

AreaTitle.setTabWin(P,_gwernor);
AreaTitle.setTitle();

P.fld_attr(,2);
P.fld_attr('DZ',3);
P.fld_attr('DZA',3);
P.fld_attr('F_ZATR',3);
F_ZATR.fld_attr(,2);
F_ZATR.fld_attr('OPIS',3);
P.select();
P.fld_attr(,1);
F_ZATR.fld_attr(,1);
PGRUPY.actions('WER','');
MGRP.cntx_pop(); RODZPR.cntx_pop(); NORMWSP.cntx_pop(); STN.cntx_pop(); PGRUPY.cntx_pop();
SLU.cntx_pop(); SLO.cntx_pop();

P.cntx_pop();
~~


\bd_w_mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Przed wyświetleniem grupy materiałowej (POMOC.MGRW)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
1


\be_w_mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Przed redakcją grupy materiałowej (POMOC.MGRW)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab()=KARO
|| {? type_of(params_get())>100 & var_pres('env_karo',params_get())
   || params_get().env_karo.MAT_EDIT
   || 1
   ?}
|| 1
?}


\ae_w_mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Po redakcji grupy materiałowej (POMOC.MGRW)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
HELP.MGR:=POMOC.MGRW;
{? cur_tab.MGRP <> null & cur_tab.MGRP().MGR<>POMOC.MGRW
|| cur_tab.MGRP:=null()
?};
{? cur_tab()=KARO & POMOC.MGRW<>null & cur_tab.M <> null & cur_tab.M().MGR<>POMOC.MGRW
|| KARO.M:=null();
   VAR1.M:=''
?};
1


\nwsczas_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Formuła na F3 dla pola czas tabeli NORMWSP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
popup(0,'Wybierz zakres czasu:'@,'365',,"NORMWSP.CZAS:=365",'182',,"NORMWSP.CZAS:=182",'92',,"NORMWSP.CZAS:=92",
'31',,"NORMWSP.CZAS:=31")


\nwswy_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wartosc poczatkowa pola wydzial w normatywie ogolnym
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.WYD


\nwsst_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wartosc poczatkowa pola stanowisko w normatywie ogolnym
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.STN


\nwsgp_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wartosc poczatkowa pola grupa w normatywie ogolnym
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.PGRUPA


\nwsp_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wartosc poczatkowa pola pracownik w normatywie ogolnym
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.P


\nwsos_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wartosc poczatkowa pola osoba w normatywie ogolnym
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.OSOBA


\nwsr_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wartosc poczatkowa pola rodzaj prac w normatywie ogolnym
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.RODZPR


\norm_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Nadanie wartości domyslnych na podstawie rodzaju wyposazenia
::----------------------------------------------------------------------------------------------------------------------
NORMWSP.CZAS:=NORMWSP.MGRP().DCU;
NORMWSP.TOLER:=exec('obl_toler','normatyw');
NORMWSP.ZWROT:=NORMWSP.MGRP().ZWROT;
~~


\obl_toler
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: obliczenie dni tolerancji wg podanych w MGRP
::----------------------------------------------------------------------------------------------------------------------
ceil(NORMWSP.CZAS*(NORMWSP.MGRP().TOLER/100))


\nwsmgrp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Po redakcji pola NORMWSP.M
::----------------------------------------------------------------------------------------------------------------------
{? NORMWSP.CZAS=0 || exec('norm_default','normatyw') ?};
1


\nwsil_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Po redakcji pola NORMWSP.IL
::----------------------------------------------------------------------------------------------------------------------
:: {? (ZNORMAT.WYD<>null())|(ZNORMAT.RODZPR<>null()) || fld()>0 || fld()>=0 ?}
1


\normdokl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Dokladnosc wyswietlania/redagowania NORMWSP.IL
::----------------------------------------------------------------------------------------------------------------------
'_prec='+$exec('mgrp_m_dokl','wyp',NORMWSP.MGRP().M)


\nwsil_df
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Format wyswietlania NORMWSP.IL
::----------------------------------------------------------------------------------------------------------------------
'out'+exec('normdokl','normatyw')


\nwsil_ef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Format redagowania NORMWSP.IL
::----------------------------------------------------------------------------------------------------------------------
'in'+exec('normdokl','normatyw')


\nwstol_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS:  przed redakcja tolerancji dla wzorcow ogolnych
::----------------------------------------------------------------------------------------------------------------------
fld(exec('obl_toler','normatyw'));
~~


\norm_key_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS:  Przywrocenie wartości domyslnych na podstawie rodzaju wyposazenia
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy przywrócić wartości domyślne na podstawie podgrupy materiałowej?'@)
|| exec('norm_default','normatyw')
?};
''


\norws_ra
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Formuła na rekord po redakcji normatywu ogólnego
::----------------------------------------------------------------------------------------------------------------------
{? ZNORMAT.WYD=null & ZNORMAT.RODZPR=null
|| _odp:=__CHK.record(NORMWSP,,'MGRP')
|| _odp:=__CHK.record(NORMWSP,,'MGRP','IL')
?};

{? (_odp='')&(NORMWSP.ZWROT<>'B')&(NORMWSP.CZAS=0)
|| FUN.emsg('Czas normatywu musi być większy od 0.'@);
   _odp:='CZAS'
|| {? __CHK.index(NORMWSP,-menu_txt='popraw')<>''
   || _odp:='MGRW'
   ?}
?};
_odp


\nwszwrot_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Przed wyświetleniem
::----------------------------------------------------------------------------------------------------------------------
{? NORMWSP.ZWROT='T'
|| VAR.ZWROT:='Wymagany zwrot'
|? NORMWSP.ZWROT='B'
|| VAR.ZWROT:='Zwrot bez terminu'
|| VAR.ZWROT:='Nie wymagany zwrot'
?}


\norm_af
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wspólna część procedur odświeżania okien grupowych normatywów
::----------------------------------------------------------------------------------------------------------------------
grp_disp(NORMWSP,'WER');
~~


\prf_zn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: ustawienie prefixu wg ZNORMAT
::----------------------------------------------------------------------------------------------------------------------
NORMWSP.index('WSGPORK');
NORMWSP.prefix(ZNORMAT.WYD,ZNORMAT.STN,ZNORMAT.PGRUPA,ZNORMAT.P,ZNORMAT.OSOBA,ZNORMAT.RODZPR);
~~


\kopiuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS:  Kopiowanie noramtywu wg ustalonych wczesniej parametrow
::----------------------------------------------------------------------------------------------------------------------
{? NORMWSP.first()
||
   {!
   |?
      _ref:=NORMWSP.ref();
      NORMWSP.cntx_psh();
      NORMWSP.clear();
      {? NORMWSP.seek(_ref)
      ||
         NORMWSP.WYD:=ZNORMAT.WYD;
         NORMWSP.STN:=ZNORMAT.STN;
         NORMWSP.PGRUPY:=ZNORMAT.PGRUPA;
         NORMWSP.P:=ZNORMAT.P;
         NORMWSP.OSOBA:=ZNORMAT.OSOBA;
         NORMWSP.RODZPR:=ZNORMAT.RODZPR;
         NORMWSP.add()
      ?};
      NORMWSP.cntx_pop();
      NORMWSP.next()
   !}
?}


\normkop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS:  skopiowanie normatywu z innego elementu tego samego rodzaju
::----------------------------------------------------------------------------------------------------------------------
NORMWSP.cntx_psh();
::ustalenie zrodla danych do kopiowania
{? ~NORMWSP.first()
||
   _ok:=0;
   {? ZNORMAT.WYD
   ||
      SLO.cntx_psh();
      SLO.win_sel('ONE_SEL');
      SLO.actions('ONE_SEL','dpOABCERMJuW:d');
      {? SLO.select()
      ||
         NORMWSP.prefix(exec('szukaj_ud_skl','schemat','PODZORG',SLO.KOD),null(),null(),null(),null(),null());
         _ok:=1
      ?};
      SLO.cntx_pop()
   |? ZNORMAT.STN
   ||
      STN.cntx_psh();
      STN.clear();STN.win_sel('WYB');
      STN.actions('WYB',':','W');
      {? STN.select()
      ||
         NORMWSP.prefix(null(),STN.ref(),null(),null(),null(),null());
         _ok:=1
      ?};
      STN.cntx_pop()
   |? ZNORMAT.PGRUPA
   ||
      PGRUPY.cntx_psh();
      PGRUPY.index('SYM');PGRUPY.clear();PGRUPY.win_sel('SEL');PGRUPY.actions('SEL');
      {? PGRUPY.select()
      ||
         NORMWSP.prefix(null(),null(),PGRUPY.ref(),null(),null(),null());
         _ok:=1
      ?};
      PGRUPY.actions('SEL','T');
      PGRUPY.cntx_pop()
   |? ZNORMAT.P
   ||
      P.cntx_psh();
      P.win_sel('WYP_SEL');
      {? P.select()
      ||
         NORMWSP.prefix(null(),null(),null(),P.ref(),null(),null());
         _ok:=1
      ?};
      P.cntx_pop()
   |? ZNORMAT.RODZPR
   ||
      RODZPR.cntx_psh();
      RODZPR.clear();RODZPR.win_sel('SEL');
      {? RODZPR.select()
      ||
         NORMWSP.prefix(null(),null(),null(),null(),null(),RODZPR.ref());
         _ok:=1
      ?};
      RODZPR.cntx_pop()
   || ~~
   ?};
:  kopiowanie
   {? _ok || exec('kopiuj','normatyw') ?}
|| FUN.emsg('Kopiować można tylko do pustego normatywu.'@)
?};
NORMWSP.cntx_pop()


\kop_rodzpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Kopiowanie norm wyposażenia z rodzajów prac
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
RODZPR.cntx_psh();
RODZPR.win_sel('SEL_GR');
RODZPR.select();
RODZPR.cntx_pop()


\wyb_rodz_kop_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Grupa - przed dla obslugi wyboru normatywow z rodzaju prac do skopiowania na inny normatyw
::   WE:
::----------------------------------------------------------------------------------------------------------------------
VAR.GRUPA:='T';
RODZPR.cntx_psh();
{? RODZPR.size()>0 & exec('nor_upr','normatyw')
|| _sel_rec:=RODZPR.sel_aget();
:: RODZPR.index('NAZ');
   {? _sel_rec.first()
   || _sel_rec.REF:=RODZPR.ref();
      _sel_rec.add();
      _licz:=0;
      {!
      |?
         {? RODZPR.seek(_sel_rec.REF,)
         || exec('rodz_kop_core','normatyw',RODZPR.ref())
         ?};
         _sel_rec.next()
      !};
      RODZPR.first()
   ?}
?};
RODZPR.cntx_pop();
sel_exit();
~~


\wyb_rodz_kop_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Grupa -po dla obslugi wyboru normatywow z rodzaju prac do skopiowania na inny normatyw
::   WE:
::----------------------------------------------------------------------------------------------------------------------
VAR.GRUPA:='N';
~~


\rodz_kop_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Obsługa pojedynczej akcji Wybierz podczas kopiowania norm wyposażenia z rodzajów prac
::----------------------------------------------------------------------------------------------------------------------
{? VAR.GRUPA<>'T' & exec('nor_upr','normatyw')
|| exec('rodz_kop_core','normatyw',RODZPR.ref())
?};
sel_exit();
~~


\rodz_kop_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
NORMWSP.cntx_psh();
NORMWSP.index('WSGPORR');
_rodzpr:=RODZPR.ref();
NORMWSP.prefix(null(),null(),null(),null(),null(),_rodzpr);
{? NORMWSP.first()
||
   {!
   |?
      _nil:=NORMWSP.IL;_nczas:=NORMWSP.CZAS;_nzwrot:=NORMWSP.ZWROT;
      _toler:=NORMWSP.TOLER;_mgrp:=NORMWSP.MGRP;
      NORMWSP.cntx_psh(); NORMWSP.clear();
      _jest:=NORMWSP.find_key(ZNORMAT.WYD,ZNORMAT.STN,ZNORMAT.PGRUPA,ZNORMAT.P,
                              ZNORMAT.OSOBA,ZNORMAT.RODZPR,_mgrp);
      {? _jest
      ||
::                jezeli proponowany normatyw jest korzystniejszy to nadgranie w pozostalych wypadkach nic
         {? exec('comp_normat','normatyw',_nil,_nczas,_nzwrot,NORMWSP.IL,NORMWSP.CZAS,NORMWSP.ZWROT)=1
         ||
            NORMWSP.IL:=_nil; NORMWSP.CZAS:=_nczas; NORMWSP.ZWROT:=_nzwrot;
            NORMWSP.WYD:=ZNORMAT.WYD; NORMWSP.STN:=ZNORMAT.STN; NORMWSP.PGRUPY:=ZNORMAT.PGRUPA; NORMWSP.P:=ZNORMAT.P;
            NORMWSP.OSOBA:=ZNORMAT.OSOBA;
            NORMWSP.RODZPR:=null();
            NORMWSP.put()
         ?}
      ||
::                dopisanie bo nie ma
         NORMWSP.IL:=_nil; NORMWSP.CZAS:=_nczas; NORMWSP.ZWROT:=_nzwrot;
         NORMWSP.TOLER:=_toler; NORMWSP.MGRP:=_mgrp;
         NORMWSP.WYD:=ZNORMAT.WYD; NORMWSP.STN:=ZNORMAT.STN; NORMWSP.PGRUPY:=ZNORMAT.PGRUPA; NORMWSP.P:=ZNORMAT.P;
         NORMWSP.OSOBA:=ZNORMAT.OSOBA;
         NORMWSP.RODZPR:=null();
         NORMWSP.add()
      ?};
      NORMWSP.cntx_pop();
      NORMWSP.next()
   !}
?};
NORMWSP.cntx_pop();
~~


\nor_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Uprawnienia do redakcji pozycji normatywu
::----------------------------------------------------------------------------------------------------------------------
::jesli z ZNORMAT same null(), to nie mozna wykonac akcji
{? ZNORMAT.WYD | ZNORMAT.STN | ZNORMAT.PGRUPA | ZNORMAT.P | ZNORMAT.OSOBA | ZNORMAT.RODZPR
|| {? -menu_txt()='popraw' || POMOC.MGRW:=NORMWSP.MGRP().MGR || POMOC.MGRW:=null() ?};
   {? ZNORMAT.WYD=null & ZNORMAT.RODZPR=null
   || NORMWSP.efld_opt('RED','mark=0',NORMWSP,'IL')
   || NORMWSP.efld_opt('RED','mark=1',NORMWSP,'IL')
   ?};
   1
|| FUN.info('Brak możliwości edycji normatywu.'@);
   0
?}


\nrmwspdr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wydruk danych z aktualnego okna normatywu
::----------------------------------------------------------------------------------------------------------------------
rep_exec('wyp_nwspakt')


\add_norm_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Grupowe dołączanie norm wyposażenia
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(2
   ,'MGR','STRING[8]','Grupa'@
   ,'KOD','STRING[8]','Kod'@
   ,'NAZ','STRING[30]','Nazwa'@
   ,'IKONA','STRING[64]','Ikona'@
   ,'SELECTED','STRING[1]','Zaznaczony?'@
   ,'REF','STRING[16]','$MGRP.ref()'
);

MGR.cntx_psh(); MGRP.cntx_psh(); NORMWSP.cntx_psh();
MGRP.index('KOD');
MGRP.prefix();
{? MGRP.first()
|| {!
   |? NORMWSP.index('WSGPORR');
      NORMWSP.prefix(ZNORMAT.WYD,ZNORMAT.STN,ZNORMAT.PGRUPA,ZNORMAT.P,ZNORMAT.OSOBA,ZNORMAT.RODZPR,MGRP.ref());
      {? ~NORMWSP.first()
      || _tab.SELECTED:='N';
         _tab.MGR:=MGRP.MGR().KOD;
         _tab.KOD:=MGRP.KOD;
         _tab.NAZ:=MGRP.NAZ;
         _tab.IKONA:=MGRP.IKONA;
         _tab.REF:=$MGRP.ref();
         _tab.add()
      ?};
      MGRP.next()
   !}
?};
MGR.cntx_pop(); MGRP.cntx_pop(); NORMWSP.cntx_pop();

_wer:=_tab.mk_sel('Podgrupy'@,,,'wybmgrp',,,,,'U');
_tab.win_fld(_wer,,'MGR');
_tab.win_fld(_wer,,'KOD',,,12);
_tab.win_fld(_wer,,'NAZ');
_tab.win_fml(_wer,,'KOD',,'ICON_BEFORE',"Icon.icon_before(cur_tab(1,1).IKONA)");
:: Wybierz
_fb:="
   _tab:=cur_tab(1,1);
   {? _tab.sel_size()=0
   || _tab.SELECTED:='T';
      _tab.put()
   || sel_nchk();
      _sel:=_tab.sel_aget();
      {? _sel.first()
      || {!
         |? {? _tab.seek(_sel.REF)
            || _tab.SELECTED:='T';
               _tab.put()
            ?};
            _sel.next()
         !}
      ?}
   ?};
   exec('add_norm_grp_core','normatyw',_tab);
   sel_exit();
   0
";
_tab.win_act(_wer,,'Formuła','Wybierz'@@,,,_fb,,1,1,_fb,,'W');
_tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=bottom,align=end'['Wybierz'@],'menu:W');
_tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=bottom,align=end'['A&nuluj'@],'key:Esc');

_tab.win_sel(_wer);
_tab.select();

~~


\add_norm_grp_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Grupowe dołączanie norm wyposażenia - właściwe dołączanie
::   WE: _a - tabela tymczasowa zawierająca $MGRP.ref()
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;

ZNORMAT.cntx_psh();
RODZPR.cntx_psh();
NORMWSP.cntx_psh();
MGRP.cntx_psh();

{? _tab.first()
|| NORMWSP.index('WSGPORR');
   NORMWSP.clear();
   {? FUN.ask('Czy skopiować zaznaczone rodzaje wyposażenia do normatywu?'@)
   || {!
      |? {? _tab.SELECTED='T'
         || NORMWSP.MGRP:=exec('FindAndGet','#table',MGRP,_tab.REF);
            NORMWSP.WYD:=ZNORMAT.WYD;
            NORMWSP.STN:=ZNORMAT.STN;
            NORMWSP.PGRUPY:=ZNORMAT.PGRUPA;
            NORMWSP.P:=ZNORMAT.P;
            NORMWSP.OSOBA:=ZNORMAT.OSOBA;
            NORMWSP.RODZPR:=ZNORMAT.RODZPR;
            NORMWSP.IL:=1;
            exec('norm_default','normatyw');
            NORMWSP.add()
         ?};
         _tab.next()
      !};
      sel_exit()
   ?}
?};

MGRP.cntx_pop();
NORMWSP.cntx_pop();
RODZPR.cntx_pop();
ZNORMAT.cntx_pop();
~~


::======================================================================================================================
:: Definiowanie normatywow pracownikow
::======================================================================================================================


\set_znp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Ustawienie parametrow ZNORMAT dla danego pracownika
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.WYD:=null();
ZNORMAT.STN:=null();
ZNORMAT.PGRUPA:=null();
{? grp_empty(P,'WYP_ATR')=1
|| ZNORMAT.P:=null()
|| ZNORMAT.P:=P.ref()
?};
ZNORMAT.OSOBA:=null();
ZNORMAT.RODZPR:=null();
~~


\norm_key_defaul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Przywrocenie wartości domyslnych na podstawie rodzaju wyposazenia
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy przywrócić wartości domyślne wg podanych w definicji dla tej grupy materiałowej?'@)
|| exec('norm_default','normatyw')
?};
''


\ov_n_gaf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Po dswiezeniu widoku normatywu pracownikow
::----------------------------------------------------------------------------------------------------------------------
exec('set_znp','normatyw');
exec('prf_zn','normatyw');
NORMWSP.win_sel('WER');
NORMWSP.first();
NORMWSP.hdr_sel();
NORMWSP.hdr_sel(' '+P.OSOBA().NAZWISKO+' '+P.OSOBA().PIERWSZE);
exec('norm_af','normatyw');
~~


::======================================================================================================================
:: Obliczenia normatywow wynikowych
::======================================================================================================================

::----------------------------------------------------------------------------------------------------------------------
:: wynikowy normatyw pracownika
::----------------------------------------------------------------------------------------------------------------------


\drop_wnp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Ewentualne usuniecie wynikowego normatywu pracownika
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__WYNNOP') > 0 || obj_del(__WYNNOP); &__WYNNOP ?}


\load_wnp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Ladowanie danych do WNP z ustawionej dziedziny NORMWSP
::   WE: _a - znacznik pochodzenia danych
::----------------------------------------------------------------------------------------------------------------------
{? NORMWSP.first()
|| _f:=" __WYNNOP.IL:=NORMWSP.IL;
         __WYNNOP.CZAS:=NORMWSP.CZAS;
         __WYNNOP.TOLER:=NORMWSP.TOLER;
         __WYNNOP.ZWROT:=NORMWSP.ZWROT;
         __WYNNOP.ZWROT_T:={? NORMWSP.ZWROT='T'
                         || 'Wymagany zwrot'
                         |? NORMWSP.ZWROT='B'
                         || 'Zwrot bez terminu'
                         || 'Nie wymagany zwrot'
                         ?};
         __WYNNOP.SKAD:={? _a='W'
                        || 'Wydział'
                        |? _a='G'
                        || 'Grupa pracownicza'
                        |? _a='S'
                        || 'Stanowisko'
                        |? _a='P'
                        || 'Pracownik'
                        ?}
      ";
   {!
   |?
:: jezeli istnieje juz taki ref to nadpisanie danych liczbowych, jesli nie to dopisanie
      {? __WYNNOP.find_key(#NORMWSP.MGRP)
      || _f(_a);
         __WYNNOP.put()
      || __WYNNOP.blank();
         __WYNNOP.ZWROT:=NORMWSP.ZWROT;
         __WYNNOP.ZWROT_T:={? NORMWSP.ZWROT='T'
                         || 'Wymagany zwrot'
                         |? NORMWSP.ZWROT='B'
                         || 'Zwrot bez terminu'
                         || 'Nie wymagany zwrot'
                         ?};
         _f(_a);
         __WYNNOP.REF:=#NORMWSP.MGRP;
         __WYNNOP.KOD:=NORMWSP.MGRP().KOD;
         __WYNNOP.NAZ:=NORMWSP.MGRP().NAZ;
         __WYNNOP.CTRLIL:=NORMWSP.MGRP().CTRLIL;
         __WYNNOP.add()
      ?};
      NORMWSP.next()
   !}
?}


\cr_wnp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Utworzenie tabeli tymczasowej na dane wynikowego normatywu biezacego pracownika - biezacego P
::       Normatyw wynikowy powstaje na podstawie danych normatywu wydzialu i stanowiska przypisanych do pracownika
::       oraz normatywu grupy do ktrej nalez oraz jego wlasnego normatywu.
::       Kazda pozycja jest rozpoznawana na podstawie #refa do RODZO, w normatywie RODZO nie powtarzaja sie.
::       Najpierw odczytywany jest normatyw wydzialu i wszystkie pozycje ladowane do tabeli __WYNNOP
::       Nastepnie odczytywany jest normatyw stanowiska.
::       Wszystkie nowe pozycje sa doladowywane, a te ktore byly sa nadpisywane danymi stanowiska.
::       Nastepnie pobierany jest ewentualny normatyw grupy
::       i nowe pozycje towarowe sa dopisywane a istniejace nadpisywane.
::       Jako ostatni pobierany jest normatyw pracownika
::       wszystkie nowe pozycje sa dopisywane, a istniejace nadpisywane.
::       UWAGA: pole ILST jest wypelniane oddzielna procedura, uruchamiana niezaleznie
::       jesli procedura nie jest uruchomiona, to ILST=0.
::   WE: _a - ref do wydzialu (UD_SKL)
::       _b - ref do stanowiska (STN)
::       _c - ref do grupy pracownika (PGRUPY))
::       _d - ref do pracownika (P)
::       Jezeli nie podano parametrow, to za domyslne przyjmuje dane aktualnego rekordu P
::   WY: Liczba rekordow normatywu wynikowego
::----------------------------------------------------------------------------------------------------------------------
::ewentualne ustawienie wartosci domyslnych
{? (_<1)| (_a=~~) || _a:=P.WYDZIAL ?};
{? (_<2)| (_b=~~) || _b:=P.ST ?};
{? (_<3)| (_c=~~) || _c:=exec('ref_gp','normatyw',P.ref()) ?};
{? (_<4)| (_d=~~) || _d:=P.ref() ?};
exec('drop_wnp','normatyw');
__WYNNOP:=tab_tmp(1,'REF','INTEGER','REF',
                    'KOD','STRING[50]','Kod'@,
                    'NAZ','STRING[100]','Nazwa'@,
                    'IL','REAL','Ilość'@,
                    'ILST','REAL','Stan przy - toler'@,
                    'ILSTM','REAL','Stan przy + toler'@,
                    'CZAS','INTEGER','Czas'@,
                    'TOLER','INTEGER','Tolerancja [dni]'@,
                    'ZWROT','STRING[1]','Zwrot'@,
                    'ZWROT_T','STRING[20]','Zwrot'@,
                    'SKAD','STRING[20]','Źródło',
                    'CTRLIL','STRING[20]','Rodzaj kontroli');
__WYNNOP.fld_fml('IL','DISPLAY_FORMAT',
                  "'out_prec='+{? MGRP.seek(__WYNNOP.REF,) || $exec('mgrp_m_dokl','wyp',MGRP.M) || '-1' ?}");
MGRP.cntx_psh();
NORMWSP.cntx_psh();
NORMWSP.index('WSGPORR');
NORMWSP.prefix(_a,null(),null(),null(),null(),null());
exec('load_wnp','normatyw','W');
NORMWSP.prefix(null(),_b,null(),null(),null(),null());
exec('load_wnp','normatyw','S');
NORMWSP.prefix(null(),null(),_c,null(),null(),null());
exec('load_wnp','normatyw','G');
NORMWSP.prefix(null(),null(),null(),_d,null(),null());
exec('load_wnp','normatyw','P');
NORMWSP.cntx_pop();
MGRP.cntx_pop();
__WYNNOP.size()


\jaka_umo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wyszukanie jaki rekord h oznaczajacy umowe o prace obowiazuje dla pracownika w podanym dniu
::   WE: _a - data, w ktorej nalezy sprawdzic warunki
::       _b - P.ref do pracownika
::   WY: H.ref() ref do obowiazujacego w tym dniu okresu lub null() gdy w tym dniu nie zatrudniony
::----------------------------------------------------------------------------------------------------------------------
{? (_<1) | (_a=~~) || return(null()) ?};
{? type_of(_a)<>type_of(date()) || return(null()) ?};
{? _a=date(0,0,0) || return(null()) ?};
{? (_<2) | (_b=~~) | (ref_name(_b)<>P.name()) | (_b=null()) || return(null()) ?};
::sprawdzane sa tylko zmiany dotyczace przeszeregowania
H.cntx_psh();
H.index('_HISTKOD');H.prefix(_b,'Z');
::ref rekordu obowiazujacego (tu zerowanie)
_curref:=null();
{? H.first()
||
::sprawdzenie zatrudnienia pracownika w podanym parametrem dniu
  {!
  |?
::   sprawdzenie czy ten okres jest obowiazujacy i jesli tak to zapamietanie
     {? (H.OD<=_a)&((~#H.DO)|(H.DO>=_a)) || _curref:=H.ref() ?};
     {? _curref<>null() || 0 || H.next() ?}
  !}
?};
H.cntx_pop();
_curref


\prep_wnp4prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Utworzenie wynikowego normatywu dla pracownika podanego refem na zadany dzien
::       jesli podana data z przeszlosci to przyjmowana biezaca
::       jesli data z przyszlosci, to pobieranie normatywu z zadanego dnia
::       czyli sprawdzenie, czy nie zmieni sie przeszeregowanie pracownika bo to ma wplyw na
::       normatyw stanowiska i wydzialu
::       Dla innego zatrudnienia niz na umowe o prace sprawdzane jest czy nie skonczy sie do podanej daty
::   WE: _a - P.ref() [biezacy]
::       _b - na jaki dzien sprawdzic normatyw [date()]
::   WY: Liczba rekordow normatywu wynikowego
::----------------------------------------------------------------------------------------------------------------------
exec('drop_wnp','normatyw');
::walidacja parametrow, data jesli nie podana lub bledny parametr przyjmowana biezaca
{? (_<1) | (_a=~~) || _a:=P.ref() ?};
{? ref_name(_a)<>P.name() || return(0) ?};
{? (_<2) | (_b=~~) || _b:=date() ?};
::jezeli data jest przeszla lub parametr niepoprawny, to badany jest normatyw na dzis, jesli przyszla to na podana data
_data:={? type_of(_b)<>type_of(date()) || date() || {? _b<=date() || date() || _b ?} ?};
P.cntx_psh(); P.clear();
_odp:={? P.seek(_a)
      ||
         {? _data<>date()
         ||
::          normatyw na przyszla date
::          zatrudnienie na umowe o prace, w przyszlosci moze zmienic sie stanowisko lub wydzial
            _refh:=exec('jaka_umo','normatyw',_data,P.ref());
            {? _refh<>null()
            ||
               H.cntx_psh(); H.clear();
::             rekord na pewno istnieje
               H.seek(_refh);
               _stn:=H.ST;
               _wyd:=H.WYDZIAL;
::             exec('get_wyd','wypos_ud',H.WYDZIAL,1);
               H.cntx_pop();
               exec('cr_wnp','normatyw',_wyd,_stn,exec('ref_gp','normatyw',P.ref()),P.ref())
            ||
::             nie bedzie zatrudniony w tym dniu
               0
            ?}
         ||
::          normatyw na dzis
            exec('cr_wnp','normatyw')
         ?}
      || 0
      ?};
P.cntx_pop();
_odp


\p_fulnorm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wyswietlenie wynikowego normatywu biezacego pracownika
::----------------------------------------------------------------------------------------------------------------------
{? exec('cr_wnp','normatyw')
||
   MGRP.cntx_psh(); MGRP.clear();
:: tworzenie odpowiedniego indeksu
   _ind:=__WYNNOP.ndx_tmp(,,'KOD',,);
   __WYNNOP.index(_ind);
   _okno:=__WYNNOP.mk_sel('Normatyw wynikowy pracownika: %1 %2'@[P.OSOBA().NAZWISKO,P.OSOBA().PIERWSZE]
                          ,,,'wynnormp',,,,,'U');
   __WYNNOP.win_fld(_okno,,'KOD',,,20,,1);
   __WYNNOP.win_fld(_okno,,'NAZ',,,40,,1);
   __WYNNOP.win_fld(_okno,,'IL',,,7,,1);
   __WYNNOP.win_fld(_okno,,'CZAS',,,5,0,1);
   __WYNNOP.win_fld(_okno,,'TOLER',,,-4,0,1);
   __WYNNOP.win_fld(_okno,,'ZWROT_T',,,-30,,1,'Zwrot'@,,,,,);
   __WYNNOP.win_fld(_okno,,'SKAD',,,-10,0,1,'Źródło'@);
   __WYNNOP.win_act(_okno,0,'Formuła','Druku&j'@@,,,,"rep_exec('wyp_wynnormp')",1,,,,'J',,'icon=print');
   __WYNNOP.win_sel(_okno);
   __WYNNOP.select();
   __WYNNOP.ndx_drop(_ind);
   MGRP.cntx_pop()
|| FUN.info('Normatyw wynikowy jest pusty.'@)
?};
exec('drop_wnp','normatyw');
~~

::----------------------------------------------------------------------------------------------------------------------
:: wynikowy normatyw osoby
::----------------------------------------------------------------------------------------------------------------------


\comp_normat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Porownanie normatywow
::       przyjeto, ze korzystniejszy jest normatyw, na wieksza ilosc
::       a gdy taka sama, to na krotrzy czas lub zwrot ktoregos = 'B'
::       a gdy taki sam, to kolejno zwroty 'N', 'T', 'B'
::   WE: wymagane jest podanie wszystkich parametrow
::       _a - IL pierwszego
::       _b - CZAS pierwszego
::       _c - ZWROT pierwszego
::       _d - IL drugiego
::       _e - CZAS drugiego
::       _f - ZWROT drugiego
::   WY: 0 - takie same
::       1 - korzystniejszy pierwszy
::       2 - korzystniejszy drugi
::      -1 - porownanie niemozliwe
::----------------------------------------------------------------------------------------------------------------------
{? (_<6) | (_a=~~) | (_b=~~) | (_c=~~) | (_d=~~) | (_e=~~) | (_f=~~)
   | (type_of(_a)<>type_of(0))| (type_of(_b)<>type_of(0)) | (type_of(_c)<>type_of(''))
   | (type_of(_d)<>type_of(0))| (type_of(_e)<>type_of(0)) | (type_of(_f)<>type_of(''))
|| retutn(-1)
?};
::ilosc
{? _a>_d || 1
|? _d>_a || 2
||
:: formula okreslajaca korzystniejszy normatyw ze wzgledu na zwrot
   _zwrot:="{? _a<>_b
            || {? _a='B' || 2
               |? _b='B' || 1
               || {? _a='T' || 2 || 1 ?}
               ?}
            || 0
            ?}";
:: czas - jezeli ktorys z normatywow ma zwrot B to nie da sie porownac czasu
   {? (_c<>'B')&(_f<>'B')
   || {? _b<_e || 1
      |? _e<_b || 2
      || _zwrot(_c,_f)
      ?}
   || _zwrot(_c,_f)
   ?}
?}


\drop_wno
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: - Ewentualne usuniecie wynikowego normatywu osoby
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__WYNORO') > 0 || obj_del(__WYNORO);&__WYNORO ?}


\cr_wno
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Utworzenie tabeli tymczasowej na dane wynikowego normatywu dla biezacego OSOBA.ref()
::       na podany dzien
::       Program pobiera kolejno wszystkie normatywy aktywnych zatrudnien osoby.
::       Kazda pozucja w __WYNORO dotyczy innego MGRP i nie ma w niej powtorzen MGRP.
::       Jezeli MGRP pobieranej pozycji z __WYNNOP dla danego P nie ma w __WYNORO, to jest dopisywana.
::       Jezeli jest, to program za pomoca procedury comp_normat/normatyw ocenia, ktura jest korzystniejsza:
::       czy ta istniejaca, czy ta z __WYNNOP i do __WYNORO trafia korzystniejsza (czyli pozostawia lub nadpisuje).
::   WE: _a  - data na jaka podac normatyw [biezaca]
::   WY: Liczba rekordow normatywu wynikowego osoby
::----------------------------------------------------------------------------------------------------------------------
exec('drop_wno','normatyw');
::walidacja parametrow, data jesli nie podana
::procedura wywolywana sprawdza dodatkowo poprawnosc _a
{? (_<1) | (_a=~~) || _a:=date() ?};
::tabela tymczasowa wynikowego normatywu osoby
__WYNORO:=tab_tmp(1,'REF','INTEGER','REF'@,
                    'KOD','STRING[50]','Kod'@,
                    'NAZ','STRING[100]','Nazwa'@,
                    'IL','REAL','Ilość'@,
                    'ILST','REAL','Stan przy - toler'@,
                    'ILSTM','REAL','Stan przy + toler'@,
                    'CZAS','INTEGER','Czas'@,
                    'TOLER','INTEGER','Tolerancja [dni]'@,
                    'ZWROT','STRING[1]','Zwrot'@,
                    'ZWROT_T','STRING[20]','Zwrot'@,
                    'SKAD','STRING[20]','Źródło'@,
                    'INFO','STRING[80]','Charakter zatrudnienia'@,
                    'CTRLIL','STRING[1]','Rodzaj kontroli'@
                 );
__WYNORO.fld_fml('IL','DISPLAY_FORMAT',
                  "'out_prec='+{? MGRP.seek(__WYNORO.REF,) || $exec('mgrp_m_dokl','wyp',MGRP.M) || '-1' ?}");
{? OSOBA.ref()<>null()
||
   _przep:="__WYNORO.INFO:=P.F_ZATR().OPIS;
            __WYNORO.IL:=__WYNNOP.IL;
            __WYNORO.ILST:=__WYNNOP.ILST;
            __WYNORO.CZAS:=__WYNNOP.CZAS;
            __WYNORO.TOLER:=__WYNNOP.TOLER;
            __WYNORO.ZWROT:=__WYNNOP.ZWROT;
            __WYNORO.ZWROT_T:=__WYNNOP.ZWROT_T;
            __WYNORO.CTRLIL:=__WYNNOP.CTRLIL;
            __WYNORO.SKAD:=__WYNNOP.SKAD
           ";
   P.cntx_psh(); P.index('OSOZATR'); P.prefix(FIRMA.ref(),OSOBA.ref());
   {? P.first()
   || {!
      |?
         {? exec('test_zatr','phr_dane',_a)>0 & (exec('prep_wnp4prac','normatyw',P.ref(),_a)>0) & (__WYNNOP.first())
         ||
            {!
            |?
               {? __WYNORO.find_key(__WYNNOP.REF)
               ||
                  {? exec('comp_normat','normatyw',
                          __WYNNOP.IL,__WYNNOP.CZAS,__WYNNOP.ZWROT,__WYNORO.IL,__WYNORO.CZAS,__WYNORO.ZWROT)
                      =1
                  || _przep();
                     __WYNORO.put()
                  ?}
               || __WYNORO.blank();
                  __WYNORO.REF:=__WYNNOP.REF;
                  __WYNORO.KOD:=__WYNNOP.KOD;
                  __WYNORO.NAZ:=__WYNNOP.NAZ;
                  _przep();
                  __WYNORO.add()
               ?};
               __WYNNOP.next()
            !}
         ?};
         P.next()
      !}
   ?};
   P.cntx_pop()
?};
__WYNORO.size()


\prep_wno4os
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Utworzenie wynikowego normatywu dla OSOBA podanego refem
::   WE: _a - OSOBA.ref() [biezacy]
::       _b - data na jaka podac normatyw [biezaca]
::   WY: Liczba rekordow normatywu wynikowego
::----------------------------------------------------------------------------------------------------------------------
exec('drop_wno','normatyw');
{? (_<1)| (_a=~~) || _a:=OSOBA.ref() ?};
{? ref_name(_a)<>OSOBA.name() || return(0) ?};
::procedura wywolywana sprawdza dodatkowo poprawnosc _b
{? (_<2) | (_b=~~) || _b:=date() ?};
OSOBA.cntx_psh(); OSOBA.clear();
_odp:={? OSOBA.seek(_a) || exec('cr_wno','normatyw',_b) || 0 ?};
OSOBA.cntx_pop();
_odp


\o_fulnorm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wyswietlenie wynikowego normatywu biezacej osoby
::----------------------------------------------------------------------------------------------------------------------
{? exec('cr_wno','normatyw')
||
   MGRP.cntx_psh(); MGRP.clear();
:: tworzenie odpowiedniego indeksu
   _ind:=__WYNORO.ndx_tmp(,,'KOD',,);
   __WYNORO.index(_ind);
   _okno:=__WYNORO.mk_sel('Normatyw wynikowy osoby: %1'@[exec('osoba_npd','wyp')],,,'wynnormo',,,,,'U');
   __WYNORO.win_fld(_okno,,'KOD',,,20,,1);
   __WYNORO.win_fld(_okno,,'NAZ',,,40,,1);
   __WYNORO.win_fld(_okno,,'IL',,,7,,1);
   __WYNORO.win_fld(_okno,,'CZAS',,,5,0,1);
   __WYNORO.win_fld(_okno,,'TOLER',,,4,0,1);
   __WYNORO.win_fld(_okno,,'ZWROT_T',,,-30,,1,'Zwrot'@,,,,,);
   __WYNORO.win_fld(_okno,,'SKAD',,,-10,0,1,'Źródło'@);
   __WYNORO.win_fld(_okno,,'INFO',,,20,0,1);
   __WYNORO.win_act(_okno,0,'Formuła','Druku&j'@@,,,,"rep_exec('wyp_wynnormo')",1,,,,'J',,'icon=print');
   __WYNORO.win_sel(_okno);
   __WYNORO.select();
   __WYNORO.ndx_drop(_ind);
   MGRP.cntx_pop()
|| FUN.info('Normatyw wynikowy jest pusty.'@)
?};
exec('drop_wno','normatyw');
~~


::----------------------------------------------------------------------------------------------------------------------
:: Przygotowanie tabel z normatywami dla zadanego P i na zadana date
::----------------------------------------------------------------------------------------------------------------------


\drop_norm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: usuniecie tabel tymczasowych z normatywami
::----------------------------------------------------------------------------------------------------------------------
exec('drop_wnp','normatyw'); exec('drop_wno','normatyw');
~~


\prep_norm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Przygotowanie normatywow pracownika i osoby dla zadanych nparametrow
::   WE: _a - P.ref() [biezacy]
::       _b - data na jaki dzien [biezaca]
::   WY: 0 - brak normatywow
::       1 - niepusty normatyw pracownika pusty osoby
::       2 - pusty normatyw pracownika niepusty osoby
::       3 - niepuste oba normatywy
::----------------------------------------------------------------------------------------------------------------------
exec('drop_norm','normatyw');
::walidacja parametrow, data jesli nie podana lub bledny parametr przyjmowana biezaca
{? (_<1) | (_a=~~) || _a:=P.ref() ?};
{? ref_name(_a)<>P.name() || return(0) ?};
{? (_<2) | (_b=~~) || _b:=date() ?};
_odp:=0;
::UWAGA nie wolno zmieniac kolejnosci wywolan ponizszych procedur
_odp+={? exec('prep_wno4os','normatyw',P.OSOBA,_b)>0 || 2 || 0 ?};
_odp+={? exec('prep_wnp4prac','normatyw',P.ref(),_b)>0 || 1 || 0 ?};
_odp


::======================================================================================================================
:: Definiowanie normatywow stanowisk
::======================================================================================================================


\stn_gaf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: po odswiezeniu okna stanowisk w ramach okna grupowego
::----------------------------------------------------------------------------------------------------------------------
exec('set_zns','normatyw');
exec('prf_zn','normatyw');
NORMWSP.win_sel('WER');
NORMWSP.first();
NORMWSP.hdr_sel();
NORMWSP.hdr_sel(' '+STN.ST);
exec('norm_af','normatyw')


\set_zns
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: ustawienie parametrow ZNORMAT dla danego stanowiska
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.WYD:=null();
ZNORMAT.STN:=STN.ref();
ZNORMAT.PGRUPA:=null();
ZNORMAT.P:=null();
ZNORMAT.OSOBA:=null();
ZNORMAT.RODZPR:=null();
~~


::======================================================================================================================
:: Definiowanie normatywow grup pracownikow
::======================================================================================================================


\gp_gaf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Po dswiezeniu widoku normatywu grup
::----------------------------------------------------------------------------------------------------------------------
exec('set_zng','normatyw');
NORMWSP.win_sel('WER');
exec('prf_zn','normatyw');
NORMWSP.first();
NORMWSP.hdr_sel();
NORMWSP.hdr_sel(' '+PGRUPY.SYM);
exec('norm_af','normatyw')


\set_zng
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Ustawienie parametrow ZNORMAT dla danej grupy
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.WYD:=null();
ZNORMAT.STN:=null();
ZNORMAT.PGRUPA:=PGRUPY.ref();
ZNORMAT.P:=null();
ZNORMAT.OSOBA:=null();
ZNORMAT.RODZPR:=null();
~~


::======================================================================================================================
:: Definiowanie normatywow wydzialow
::======================================================================================================================


\wyd_gaf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: po odswiezeniu okna wydzialy w ramach okna grupowego
::----------------------------------------------------------------------------------------------------------------------
exec('set_znw','normatyw');
exec('prf_zn','normatyw');
NORMWSP.win_sel('WER');
NORMWSP.first();
NORMWSP.hdr_sel();
NORMWSP.hdr_sel(' '+UD_DEF.SYMBOL);
exec('norm_af','normatyw')


\set_znw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: ustawienie parametrow ZNORMAT dla danego wydzialu
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.WYD:=exec('szukaj_ud_skl','schemat','PODZORG',SLO.KOD);
ZNORMAT.STN:=null();
ZNORMAT.PGRUPA:=null();
ZNORMAT.P:=null();
ZNORMAT.OSOBA:=null();
ZNORMAT.RODZPR:=null();
~~


::======================================================================================================================
:: Definiowanie normatywow rodzajow prac
::======================================================================================================================


\rpr_gaf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: po odswiezeniu okna rodzaje prac w ramach okna grupowego
::----------------------------------------------------------------------------------------------------------------------
exec('set_znr','normatyw');
exec('prf_zn','normatyw');
NORMWSP.win_sel('WER');
NORMWSP.first();
NORMWSP.hdr_sel();
NORMWSP.hdr_sel(' '+RODZPR.NAZ);
exec('norm_af','normatyw');
~~


\set_znr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: ustawienie parametrow ZNORMAT dla biezacego rodzaju prac
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.WYD:=null();
ZNORMAT.STN:=null();
ZNORMAT.PGRUPA:=null();
ZNORMAT.P:=null();
ZNORMAT.WYD:=null();
ZNORMAT.RODZPR:=RODZPR.ref();
~~


\setrozm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Przygotowanie okna do i pobranie od uzutkownika wartosci atrybutu
::   WE: _a - alias tabeli ktorej dotycza dane
::----------------------------------------------------------------------------------------------------------------------
::zaladowanie danych do zmiennej
exec('load_rzp','normatyw',_a);
::wybor okna redagowania i nadanie wartosci
{? _a.TAT().TYP='L' || ZNORMAT.win_edit('ROZMP_R');
                       on_error(2);ZNORMAT.WART_R:=#_a.WAR;on_error()
|? _a.TAT().TYP='T' || ZNORMAT.win_edit('ROZMP_A');ZNORMAT.WART_A:=_a.WAR
|? _a.TAT().TYP='D' || ZNORMAT.win_edit('ROZMP_D');
                       on_error(2);ZNORMAT.WART_D:=exec('str2date','#convert',_a.WAR);on_error()
|? _a.TAT().TYP='C' || ZNORMAT.win_edit('ROZMP_C');
                       on_error(2);ZNORMAT.WART_C:=exec('str2time','#convert',_a.WAR);on_error()
|| SLO.win_sel('ONE_SEL');SLO.index('SL');SLO.prefix(ZNORMAT.SLU);SLU.clear();SLU.seek(ZNORMAT.SLU);
   {? +_a.WAR
   || {? SLO.find_key(_a.WAR) || ZNORMAT.SLO:=SLO.ref() || _a.WAR:='' ?}
   || SLO.blank()
   ?};
   ZNORMAT.win_edit('ROZMP_S')
?};
{? ZNORMAT.edit()
|| _a.WAR:={? _a.TAT().TYP='L' || {? ZNORMAT.WART_R>0 || $ZNORMAT.WART_R || '' ?}
           |? _a.TAT().TYP='T' || ZNORMAT.WART_A
           |? _a.TAT().TYP='D' || ZNORMAT.WART_D$1
           |? _a.TAT().TYP='C' || ZNORMAT.WART_C$3
           || ZNORMAT.SWAR
           ?};
::  sprawdzenie czy jest wartosc
   {? +_a.WAR
   || 1
   || FUN.emsg('Nie podano wartości atrybutu.'@); 0
   ?}
|| 0
?}


\load_rzp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Zaladowanie danych dotyczacych atrybutu osoby do zmiennej
::   WE: _a - alias tabeli ktorej dotycza dane
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.SLU:=_a.TAT().SLU;
{? ZNORMAT.SLU<>null() || SLU.clear();SLU.seek(ZNORMAT.SLU) ?};
~~


\ref_gp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Zwraca ref grupy pracownikow dla pracownika podanego refem
::   WE: P.ref()
::   WY: PGRUPY.ref() lub null()
::  OLD: \ref_gp/wypdefin.fml
::----------------------------------------------------------------------------------------------------------------------
_odp:=null();
{? (_>0) & (_a<>~~) & (type_of(_a)=type_of(null())) & (ref_name(_a)=P.name())
||
   POZPG.cntx_psh();
   POZPG.index('P');
   POZPG.clear();
   {? POZPG.find_key(_a) || _odp:=POZPG.PGRUPY ?};
   POZPG.cntx_pop()
?};
_odp


\pgrupa_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ML [17.42]
:: OPIS: Usunięcie Grupy pracowników
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('blk_lock','#table','PGRUPA',PGRUPY.ref(),,,'Grupa \'%1\' jest redagowana'@[PGRUPY.SYM])
|| _wy:=FUN.ask('Czy na pewno usunąć bieżący zapis?'@);

   exec('blk_unlock','#table','PGRUPA',PGRUPY.ref())
|| _wy:=0
?};
{? _wy
|| do();
   POZPG.cntx_psh();
   POZPG.index('DANE');
   POZPG.prefix(PGRUPY.ref());
   {? POZPG.first()
   || {! |? POZPG.del() !}
   ?};
   POZPG.cntx_pop();
  {? ~PGRUPY.del(1,1)
  || undo()
  ?};
   end()
?}


\find_norm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Ustawienie obu normatywow na informacje o wskazanym rodzaju wyposazenia
::   WE: _a - #MGRP.ref()
::   WY: 0 - brak w normatywach
::       1 - jest w normatywie pracownika brak w normatywie osoby
::       2 - brak w normatywie pracownika jest w normatywie osoby
::       3 - jest w obu normatywach
::----------------------------------------------------------------------------------------------------------------------
{? (_<1) | (_a=~~) || return(0)  ?};
{? type_of(_a)<>type_of(0) || return(0) ?};
{? _a<=0 || return(0) ?};
_odp:=0;
_odp+={? (var_pres('__WYNNOP') > 0) & __WYNNOP.find_key(_a) || 1 || 0 ?};
_odp+={? (var_pres('__WYNORO') > 0) & __WYNORO.find_key(_a) || 2 || 0 ?};
_odp


\pgrupy_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.42]
:: OPIS: Selekcja grup pracowników
::   WY: PGRUPY.ref lub null
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
PGRUPY.cntx_psh();
PGRUPY.index('SYM');
PGRUPY.clear();
PGRUPY.win_sel('SEL');
PGRUPY.actions('SEL');
{? PGRUPY.select()
|| _result:=PGRUPY.ref()
?};
PGRUPY.cntx_pop();
_result


\znor_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ML [17.42]
:: OPIS: Obsługa na F3 słownika
::   WY: tekst wybrany ze słownika
::----------------------------------------------------------------------------------------------------------------------
_slu:=ZNORMAT.SLU;
_ref:=ZNORMAT.SWAR;

_res:='';
{? _slu<>null()
|| SLO.win_sel('ONE_SEL');
   SLO.index('SL');
   SLO.prefix(_slu);
   {? _ref<>''
   || SLO.find_key(_ref,)
   ?};
   {? SLO.select(,1,10)
   || _res:=SLO.KOD
   ?}
?};
_res


\znor_slo_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW:  ML [17.42]
:: OPIS: Przed redakcją pola ZNORMAT.SWAR
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.SWAR:=ROZMP.WAR;
1


\znor_slo_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW:  ML [17.42]
:: OPIS: Po redakcji pola ZNORMAT.SWAR
::----------------------------------------------------------------------------------------------------------------------
_slu:=ZNORMAT.SLU;

_res:=0;
{? _slu<>null()
|| {? fld()=''
   || ROZMP.WAR:='';
      _res:=1
   || SLO.index('SL');
      SLO.prefix(_slu,fld());
      {? SLO.first()
      || ROZMP.WAR:=SLO.KOD;
         _res:=1
      || _wyb:=FUN.choice('Brak pozycji w słowniku.'@,1,'Powtórz'@,'Wyświetl &słownik'@);
         {? _wyb=0
         || ROZMP.WAR:=fld();
             return(0)
         |? _wyb=2
         || {? exec('znor_f3','normatyw')<>''
            || ROZMP.WAR:=ZNORMAT.SWAR:=SLO.KOD;
               _res:=1
            ?}
         ?}
      ?}
   ?}
?};
_res


\norm_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Przed wyświetl dla tabeli NORMWSP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
POMOC.MGRW:=NORMWSP.MGRP().MGR;
NORMWSP.display();
1


::======================================================================================================================
:: Formuły do obsługi atrybutów pracowników
::======================================================================================================================


\rozmp_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Rekord przed ROZMP
::  OLD: \rozmp_rb/normatyw.fml
::----------------------------------------------------------------------------------------------------------------------
::zaladowanie danych do zmiennej
exec('load_rzp','normatyw',ROZMP);
~~


\setwym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Rekord przed ROZMP
::   WE: _a - alias tabeli ktorej dotycza dane
::       _b - OSOBA.ref()
::  OLD: \setwym/normatyw.fml
::----------------------------------------------------------------------------------------------------------------------
:: pobranie wymiaru i przygotowanie do edycji wartosci
POMOC.TAT_M:='L';
ZNORMAT.win_edit('ROZMP_WM');
{? ZNORMAT.edit()
|| _a.blank();
   _a.TAT:=ZNORMAT.TAT;
   _a.OSOBA:=_b;
   ZNORMAT.SLU:=ZNORMAT.TAT().SLU;
   exec('load_rzp','normatyw',_a);
   1
|| 0
?}


\rozmp_db
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Dolacz przed ROZMP
::   WY: wybrano wymiar 0/1
::  OLD: \rozmp_db/normatyw.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('fltr_wymc','normatyw')
||
:: Pobranie wymiaru
   ZNORMAT.blank();
   ZNORMAT.ATROSO:='T';
   exec('setwym','normatyw',ROZMP,OSOBA.ref())
|| 0
?}


\rozmp_da
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Dolacz po ROZMP
::  OLD: \rozmp_da/normatyw.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('setrozm','normatyw',ROZMP) || ROZMP.add() ?};
{? TAT.f_active() || TAT.f_clear ?}


\rozmp_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Popraw przed ROZMP
::  OLD: \rozmp_pb/normatyw.fml
::----------------------------------------------------------------------------------------------------------------------
ZNORMAT.blank();
ZNORMAT.TAT:=ROZMP.TAT;
ZNORMAT.SLU:=ROZMP.TAT().SLU;
ZNORMAT.ATROSO:='T';
{? ZNORMAT.SLU<>null() || SLU.clear();SLU.seek(ZNORMAT.SLU) ?};
~~


\rozmp_pa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Popraw po ROZMP
::  OLD: \rozmp_pa/normatyw.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('setrozm','normatyw',ROZMP) || ROZMP.put() ?}


\gen_rozm4os
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Generacja brakujacych pozycji na rozmiarow osoby dla podanego rekordu OSOBA
::       Jezeli na TAT nalozony jest wczesniej filtr, to nie jest zmieniany.
::       To zabezpiecza przed wygaszeniem filtra, gdy przed uruchomieniem formuly byl w oknie.
::       Jezeli formula ma byc uruchomiona w ramach filtra nalozonego wczesniej
::       to nalezy zapewnic aby ograniczal dziedzine wlasciwie do kontekstu wywolania.
::       Jezeli jest uruchamiana jako wolna, to sama ograniczy filtr.
::   WE: _a - OSOBA.ref()
::  OLD: \gen_rozm4os/normatyw.fml
::----------------------------------------------------------------------------------------------------------------------
_licz:=0;
{? (_<1)|(_a=~~)|(type_of(_a)<>type_of(OSOBA.ref()))|(_a=null())
|| return()
||
   _bylfltr:=TAT.f_active();
   TAT.cntx_psh();TAT.clear();
   {? _bylfltr | exec('fltr_wymc','normatyw')
   ||   {? TAT.f_first()
      || ROZMP.cntx_psh();ROZMP.index('OSOBA');ROZMP.prefix(_a);
         {!
         |?
            {? ~ROZMP.find_key(TAT.ref())
            || ROZMP.blank();
               ROZMP.OSOBA:=_a;
               ROZMP.TAT:=TAT.ref();
               ROZMP.add();
               _licz:=1
            ?};
            TAT.f_next()
         !};
         ROZMP.cntx_pop()
      || FUN.emsg('Brak atrybutów dotyczących osób.'@);
         _licz:=1
      ?};
      {? _licz=0
      || {? VAR.GRUPA='T'
         || KOMM.add('Brak pozycji do wygenerowania dla osoby: '@ + OSOBA.NAZWISKO + ' ' + OSOBA.PIERWSZE +'.')
         || FUN.emsg('Brak pozycji do wygenerowania.'@)
         ?}
      ?}
   || FUN.error('Nie udało się założyc filtra na tabelę atrybutów.'@)
   ?};
   {? ~_bylfltr || {? TAT.f_active() || TAT.f_clear ?} ?};
   TAT.cntx_pop()
?};
~~


\rozmpgen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Generacja brakujacych pozycji na rozmiary osoby dla biezacego rekordu OSOBA
::  OLD: \rozmpgen/normatyw.fml
::----------------------------------------------------------------------------------------------------------------------
exec('gen_rozm4os','normatyw',OSOBA.ref())


\rozmp_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wypelnianie i odswiezanie ROZMP
::  OLD: \rozmp_rb/normatyw.fml
::----------------------------------------------------------------------------------------------------------------------
ROZMP.prefix(OSOBA.ref());
ROZMP.first();
grp_disp(ROZMP,'WER');
~~


\rozmpgpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Generacja brakujacych pozycji na rozmiarow osoby wszystkim osobom
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy uzupełnić brakujące pozycje wymagań zaznaczonym pracownikom ?'@)
||
   VAR.GRUPA:='T';
   KOMM.init('Uzupełnienie wymagań osób'@)
?};
~~


\rozmpgpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Generacja brakujacych pozycji na rozmiarow osoby wszystkim osobom
::----------------------------------------------------------------------------------------------------------------------
KOMM.add('Zakończono uzupełnianie wymagań osób'@);
KOMM.select();
VAR.GRUPA:='N'


\prn_rozmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Drukowanie wymagań osoby - dane z tabeli ROZMP
::----------------------------------------------------------------------------------------------------------------------
rep_exec('wyp_wymos01')


\fltr_wymc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wertowanie RODZO w definicjach
::   WY: czy filtr zalozony
::  OLD: \filtrwymc/wyprodzo.fml
::       \tat_zakr_fltr/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
TAT.clear();
TAT.index('NA');
TAT.f_set('NA',,'TAT.WYMCZ = \'T\' and TAT.MIEJSCE=\'L\'')


\drukuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.02]
:: OPIS: Drukowanie wymagan osób - wydruki zbiorcze wołane z okna pracowników
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','WYP_LWN_XXXX','wyp_wymzb*','Wydruki wymagań osób',1)

:Sign Version 2.0 jowisz:1045 2024/01/26 10:18:28 0da4fe6dff8ef79c1e15fe39db7e2701c3bd045ef51fe116018a8a3e247296103c9003057c32be7417802eda14a31aa4657a433f148e19c8df89d56d77badbf7afebfc6dd9546f2f1dd3b0edb086bc9f1cc3bd4e9e890a420a2177819ea8ee2a493a7034024d83c8814f9fadb9adb0f4f5ce43371858897d017cd76c56f15126
