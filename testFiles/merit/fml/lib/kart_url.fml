:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: kart_url.fml
:: Utworzony: 17.11.2015
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły obsługi karty urlopowej.
::            W związku ze zmianą sposobu wyliczania urlopu "naukowego" całkowicie rezygnujemy z funkcji:
::  OLD: \kurlnxbe/kart_url.fml
::  OLD: \kurlnxbd/kart_url.fml
::======================================================================================================================


\pomniejsza_wymiar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła sprawdza, czy podana rubryka zmniejsza wymiar urlopu.
::       Uwaga. Zmiana w sposobie podejścia do daty.
::   WE:  _a  [INTEGER/REFERENCE] - Wskazanie rubryki płacowej.
::       [_b] [DATE]              - Data badania stanu atrybutu [domyślnie:date()].
::   WY: Wskazana nieobecność (_a) pomniejsza wymiar urlopu wypoczynkowego:
::       1 - Tak;
::       0 - Nie. Wartość 0 zwracana jest również w przypadku błędnych parametrów wywołania.
::  OLD: \niebez/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');

_vp:=var_pres('_a');
{? _vp=type_of(0) | (_vp=type_of(null()) & _a<>null() & ref_tab(_a)=R)
|| _rn:=_a
|| return(0)
?};
_dt:={? var_pres('_b')=type_of(date()) || _b || date() ?};
__RUB.sys_attr(_rn,134,_dt)


\kart_url_sumuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Formuła odpowiedzialna za aktualizację zmiennych podsumowujących wszystkie limity urlopowe.
::   WE:
::   WY: ~~
::  OLD: \sum_url/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
EDIT_VAR.RAZEM:=KART_URL.LIM_ZAL+KART_URL.LIM_AKT+KART_URL.URL_DOD;
EDIT_VAR.RAZEMG:=KART_URL.LIM_ZALG+KART_URL.LIM_AKTG+KART_URL.URL_DODG;
EDIT_VAR.RAZ_NSP:=KART_URL.NSP_ZAL+KART_URL.URL_NSP;
EDIT_VAR.RAZ_NSPG:=KART_URL.NSP_ZALG+KART_URL.URL_NSPG;
~~


\kart_url_aktualizuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła odpowiedzialna za aktualizację pól zbiorczych w tabeli KART_URL (URL_POZ i URL_POZG).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('kart_url_sumuj','kart_url');
KART_URL.URL_POZ:=EDIT_VAR.RAZEM-KART_URL.URL_WYK;
KART_URL.URL_POZG:=EDIT_VAR.RAZEMG-KART_URL.URL_WYKG;
KART_URL.NSP_POZ:=EDIT_VAR.RAZ_NSP-KART_URL.NSP_WYK;
KART_URL.NSP_POZG:=EDIT_VAR.RAZ_NSPG-KART_URL.NSP_WYKG;
~~


\kart_url_find
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła dla bieżącego pracownika odnajduje i wczytuje do bufora kartę urlopową za wskazany rok.
::       Uwaga: w stosunku do wersji 12.41 w wersji [17.00] zmieniło się znaczenie wyniku funkcji.
::   WE: _a [INTEGER] - Rok karty urlopowej.
::   WY: 1 - Karta została znaleziona.
::       0 - Karty nie udało się znaleźć.
::  OLD: \zn_karte/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _rok:=_a
|| FUN.error('"%1" - nieprawidłowy argument wywołania.\n%2'@ ['_a','\\kart_url_find/kart_url.fml']);
   return(0)
?};

_ret:=0;
KART_URL.index('PRAC_ROK');
KART_URL.prefix(P.ref(),_rok);
{? KART_URL.first()
|| _ret:=1
|| KART_URL.blank(1)
?};
exec('kart_url_sumuj','kart_url');
_ret


\kart_url_dostepna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła sprawdza, czy dla bieżącego pracownika i wskazanego roku ma sens zakładanie karty urlopowej.
::       Analizowane są: data zatrudnienia i data zwolnienia w kontekście badanego roku.
::   WE:  _a  [INTEGER] - Badany rok.
::       [_b] [INTEGER] - Tryb wsadowy (brak komunikatów)):
::                      0 - Nie [domyślnie].
::                      1 - Tak.
::       [_c] [INTEGER] - Wynik rozszerzony?
::                      0 - Nie [domyślnie].
::                      1 - Tak.
::   WY: Zależnie od parametru _c:
::          _c=0 -> Wynikiem będzie odpowiedź 0/1.
::          _c=1 -> Wynikiem będzie treść komunikatu lub '' przy braku błędów.
::  OLD: \spr_prac/kart_url.fml
::  OLD: \popr_prz/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_tn:=type_of(0);
_batch:=var_pres('_b')=_tn & _b;
_ext:=var_pres('_c')=_tn & _c;

{? var_pres('_a')<>type_of(0)
|| _ret:='"_a" - nieprawidłowy argument wywołania.\n\\kart_url_dostepna/kart_url.fml';
   {? ~_batch
   || FUN.emsg(_ret)
   ?};
   {? _ext
   || return(_ret)
   || return(_ret='')
   ?}

|| _rok:=_a
?};

_ret:='';
_d0:=date(0,0,0);
{? P.DZA=_d0
|| _ret:='Brak informacji o zatrudnieniu pracownika.'
|? _rok<P.DZA~1
|| _ret:=
      'Pracownik został zatrudniony w '+$(P.DZA~1)+' roku.\n'+
      'Edycja karty urlopowej za rok '+$_rok+' nie jest możliwa.'
|? P.DZ<>_d0 & P.DZ~1<_rok
|| _ret:='Pracownik został zwolniony w '+$(P.DZ~1)+' roku.\nEdycja karty urlopowej za rok '+$_rok+' nie jest możliwa.'
|? date()~1<_rok-1
|| _ret:='W roku '+$(date()~1)+' edycja karty urlopowej za rok '+$_rok+' nie jest możliwa.'
?};

{? _ret<>'' & ~_batch
|| FUN.emsg(_ret)
?};

{? _ext
|| _ret
|| _ret=''
?}


\kontynuacja_zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: Formuła sprawdza, czy rozpoczynające się zatrudnienie jest kontynuacją dotychczasowego zatrudnienia u innego
::       pracodawcy lub tego samego (wieloetatowość) - zgodność co do roku i miesiąca. IS - dodano sprawdzanie
::       zgodności co do dnia.
::   WE: _a [DATE] - Data początku nowego (badanego) zatrudnienia.
::   WY: Kontynuacja zatrudnienia:
::       1 - Tak;
::       0 - Nie.
::  OLD: \konzat/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;

STAZ.cntx_psh();
STAZ.index('_STAZE');
STAZ.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
{? STAZ.first()
|| {!
   |? ~(_ret:=STAZ.DZ~1=_a~1 & STAZ.DZ~2=_a~2 & STAZ.UP<>'T' & STAZ.DZ~3<_a~3) & STAZ.next()
   !}
?};
STAZ.cntx_pop();

{? ~_ret
|| _ref:=P.ref();
   P.cntx_psh();
   P.index('PRACOSOB');
   P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
   {? P.first()
   || {!
      |? {? P.ref()<>_ref
         || ~(_ret:=P.DZ~1=_a~1 & P.DZ~2=_a~2 & P.DZ~3<_a~3)
         || 1
         ?} & P.next()
      !}
   ?};
   P.cntx_pop()
?};

_ret<>0


\czy_nowy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła sprawdza, czy pracownikowi przysługuje urlop na nowych zasadach obowiązujących od 2004 roku.
::   WE:
::   WY:
::  OLD: \nowy/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_nowy:=2004<=P.DZA~1;

STAZ.cntx_psh();
STAZ.index('_STAZE');
STAZ.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
{? STAZ.first()
|| _nowy:=_nowy & 2004<=STAZ.DR~1
?};
STAZ.cntx_pop();

{? _nowy
|| H.cntx_psh();
   H.index('_HISTOSD');
   H.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
   _P_ref:=P.ref();
   _P_jest:=0;
   P.cntx_psh();
   {? H.first()
   || {!
      |? {? H.P().F_ZATR().KOD<>'P'
         || _P_jest:=0
         || {? H.P<>_P_ref
            || _nowy:=_nowy & 2004<=H.OD~1
            ?};
            _P_jest:=1
         ?};
         ~_P_jest & H.next()
      !}
   ?};
   P.cntx_pop();
   H.cntx_pop()
?};
_nowy


\wykorzystany
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ATA [2007]
:: OPIS: Funkcja zliczająca wykorzystany urlop przed (w ramach roku) lub po (do daty badania) podanej dacie.
::   WE:  _a  [DATE]    - Data graniczna badania stanu.
::       [_b] [INTEGER] - Tryb pracy - sumowanie urlopu:
::             0 - Przed podaną datą [domyślnie];
::             1 - Po podanej dacie.
::       [_c] [INTEGER] - Tyb wyniku:
::             0 - Liczba wykorzystanych dni urlopu wypoczynkowego[domyślnie].
::             1 - Tablica z elementami nazwanymi:
::                   G - Godziny robocze;
::                   D - Dni robocze;
::                   DG - Godziny robocze urlopu dodatkowego
::                   DD - Dni robocze urlopu dodatkowego
::             2 - Suma wykorzystanych dni urlopu wypoczynkowego i dodatkowego;
::       [_d] [INTEGER] - Typ raportowanej nieobecności:
::                         0 = 1 + 2 + 3 + 4 [domyślnie];
::                         1 - Tylko urlop "zwykły";
::                         2 - Tylko urlop "na żądanie";
::                         3 - Tylko urlop "dodatkowy";
::                         4 - Tylko urlop "oddelegowanie".
::       [_e] [INTEGER] - Czy wyliczać dni z godzin?
::             0 - Zawsze zgodnie z przepisami (w zależności od roku {2004} dni są brane z nieobecności
::                 lub przeliczane z godzin) [domyślnie]
::             1 - Zawsze nie przeliczać (dni zawsze brane z nieobecności - liczba godzin nie ma znaczenia)
::   WY: Określony przez parametr _c.
::  OLD: \wykorz/kart_url.fml
::  OLD: \wykorz_urlopu/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
{? var_pres('_a')=type_of(date())
|| _data:=_a
|| FUN.error('"%1" - nieprawidłowy argument wywołania.\n%2'@ ['_a','\\wykorzystany/kart_url.fml']);
   return(0)
?};
_ge:=var_pres('_b')=type_of(0) & _b;
_tr:={? var_pres('_c')=type_of(0) & _c>0 & _c<3 || _c || 0 ?};
_tn:={? var_pres('_d')=type_of(0) & _d>=0 & _d<5 || _d || 0 ?};
_niePrzeliczaj:={? var_pres('_e')=type_of(0) || _e || 0 ?};

_ret:=obj_new('G','D','DG','DD');
_ret.G:=_ret.D:=_ret.DG:=_ret.DD:=0;

_fnorma:=exec('norma_fml','godziny');
_nowy:=(2004<=_data~1);

_rn:=__RUB.sys_kod(1113,,1);
_R_ODD:=__RUB.sys_rub(1114);

N.cntx_psh();
N.index('NIPRACNB');
{! _lp:=1 .. 4
|! {? _tn=0 | _lp=_tn
   || {? _lp<>4 | _R_ODD.first()
      || {!
         |? N.prefix('N',P.ref(),{? _lp=1
                                 || KST_PAR.URLOP().RN
                                 |? _lp=2
                                 || KST_PAR.URL_CHOR().RN
                                 |? _lp=3 & _rn<>0
                                 || _rn
                                 |? _lp=4
                                 || _R_ODD.RN
                                 ?});
            {? {? _ge || N.find_ge(_data) || N.find_le(_data) ?} & N.OD~1=_data~1
            || {!
               |? {? _lp=3
                  || _ret.DG+=N.NG;
                     _ret.DD+=
                     {? ~_niePrzeliczaj & _nowy
                     || N.NG/_fnorma(N.OD)
                     || N.NR
                     ?}
                  || _ret.G+=N.NG;
                     _ret.D+=
                     {? ~_niePrzeliczaj & _nowy
                     || N.NG/_fnorma(N.OD)
                     || N.NR
                     ?}
                  ?};
                  {? _ge || N.next() || N.prev() ?} & N.OD~1=_data~1
               !}
            ?};

            _lp=4 & _R_ODD.next()
         !}
      ?}
   ?}
!};
N.cntx_pop();
obj_del(_R_ODD);

_sum_dni:=_ret.D+_ret.DD;
{? _tr=0
|| _ret.D
|? _tr=1
|| _ret
|? _tr=2
|| _sum_dni
?}


\pobierz_limit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Funkcja zwraca limit urlopu wypoczynkowego w zależności od stażu pracy.
::   WE:  _a  [INTEGER] - Rok kalendarzowy.
::        _b  [INTEGER] - Staż pracy.
::       [_c] [INTEGER] - Tryb pracy (wyszukiwania]:
::             0 - Wyszukuje limit dokładnie dla podanego stażu. Może służyć do sprawdzenia, czy podany staż nie jest
::                 stażem "granicznym", stażem zmiany limitu.
::             1 - Wyszukuje limit "poprzedni" - przysługujący dla danego stażu [domyślnie].
::             2 - Wyszukuje limit "następny", który będzie obowiązywał w przyszłości.
::             x - Wyszukuje pierwszy zdefiniowany limit. Może służyć do sprawdzenia, czy limity są założone.
::   WY: Limit lub 0 (w przypadku błędów wywołania lub braku danych).
::----------------------------------------------------------------------------------------------------------------------
_tn:=type_of(0);
{? var_pres('_a')<>_tn
|| FUN.error('"%1" - nieprawidłowy argument wywołania.\n%2'@ ['_a','\\pobierz_limit/kart_url.fml']);
   return(0)
|?  var_pres('_b')<>_tn
|| FUN.error('"%1" - nieprawidłowy argument wywołania.\n%2'@ ['_b','\\pobierz_limit/kart_url.fml']);
   return(0)
?};
{? var_pres('_c')<>_tn || _c:=1 ?};

KST_URL.cntx_psh();
KST_URL.index('KST_URL');
KST_URL.prefix(_a);
_ret:=
   {? {? _c=0
      || KST_URL.find_key(_b)
      |? _c=1
      || KST_URL.find_le(_b)
      |? _c=2
      || KST_URL.find_ge(_b)
      || KST_URL.first()
      ?}
   || KST_URL.LIMIT
   ?};
KST_URL.cntx_pop();
_ret


\wymiar_urlopu_wypoczynkowego
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Dla wyliczenia wymiaru urlopu podstawowego i dodatkowego z uwzględnieniem wymiaru zatrudnienia
::       i nieobecności zmniejszających wymiar urlopu (urlopy bezpłatne, wychowawcze, NN, ...).
::   WE: _a [DATE]    - Początek badanego okresu (roku).
::       _b [DATE]    - Koniec badanego okresu (roku).
::       _c [INTEGER] - Rodzaj rozpatrywanego urlopu:
::                      2 - Kolejny lub pierwszy
::       _d [DATE]    - Data dla testu kontynuacji zatrudnienia.
::   WY: Tablica z wymiarem zatrudnienia na każdy miesiąc badanego przedziału (_a,_b). Ostatnim elementem tablicy
::       jest rok początku badanego okresu. Jeżeli za dany miesiąc urlop nie przysługuje - tablica zawiera 0 (zamiast
::       wymiaru).
::  OLD: \wymzat/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');

_par:=params_get();
params_set(_par);

_off:=_b~1-_a~1;
_size:=12*(_off+1);

_msc:=obj_new(_size+1);
{! _lp:=1 .. _size+1
|! _msc[_lp]:=0
!};
_msc[_size+1]:=_a~1;

_nieob:=obj_new(_size);
_nie:=obj_new(_size);
{! _lp:=1 .. _size
|! _nieob[_lp]:=_nie[_lp]:=0
!};

_d0:=date(0,0,0);
_pierwszy:=0;
_year_end:=date(P.DZA~1,12,31);
_dni_end:={? P.DZ=#0 | P.DZ>_year_end || _year_end || P.DZ ?};

H.cntx_psh();
H.index('_HISTKOD');
H.prefix(P.ref(),'Z');
{? H.find_le(_b) & (H.DO=_d0 | _a<=H.DO)
|| {!
   |? _od:={? H.OD<_a || _a || H.OD ?};
      _do:={? _b<H.DO || _b || H.DO ?};
      _beg:=
         {? _off || (_od~1-_a~1)*12 ?}+
         _od~2+
         {? _c=2 & _a<H.OD & date(H.OD~1,H.OD~2,1)=date(P.DZA~1,P.DZA~2,1) & H.OD~3<>1
         || exec('kontynuacja_zatrudnienia','kart_url',_d)
         ?};
      _end:=
         {? H.DO=_d0 | _b<H.DO
         || _b~2+_off*12
         || H.DO~2+{? _off || (_do~1-_a~1)*12 ?}
         ?};
      {! _lp:=_beg .. _end
      |! _wym:=
            {? 2004<=_b~1
            || H.cntx_psh();
               H.index('_HISTKOD');
               H.prefix(P.ref(),'Z');
               _rok:=_a~1; _mc:=_lp;
               {? _mc>12 || _rok+=1; _mc-=12 ?};
               {? H.find_le(date(_rok,_mc,1))
               || _wym:=H.RWY
               || H.first;
                  _wym:=H.RWY
               ?};
               H.cntx_pop();
               _wym
            || 1
            ?};
         {? _msc[_lp]<_wym
         || _msc[_lp]:=_wym
         ?}
      !};
      H.prev() & _a<=H.DO
   !}
?};
:: Nowe rozwiązanie
:: Rozwiązanie ma na celu znaleźć urlop wychowawczy, który kończy się w danym roku i nieprzerwanie trwa i rozpoczyna
:: się w poprzednich latach. Tylko w takim wypadku pracownik nabywa prawa do urlopu wypoczynkowego w pierwszym dniu
:: po zakończeniu tegoż urlopu wychowawczego.
:: Każde kolejne wystąpienie w danym roku urlopu wychowawczego nie wpływa na fakt nabycia praw do urlopu wypoczynkowego
:: a zatem na wymiar urlopu wypoczynkowego nie wpływa zmiana wymiaru zatrudnienia od pierwszego dnia po powrocie do
:: pracy. Nowy wymiar zatrudnienia w takim wypadku będzie miał wpływ dopiero od początku następnego miesiąca.
N.cntx_psh();
N.index('NIPRACNB');
N.prefix('N',P.ref(),3);
_dow:=date(0,0,0);
{? N.find_le(_a)
|| {!
   |? {? _a<=N.DO & N.DO<=_b
      || _dow:=N.DO;
         {? N.next() & N.OD=_dow+1
         || {? N.DO>=_b
            || _dow:=date(0,0,0)
            || _dow:=N.DO
            ?}
         ?}
      ?};
      N.next() & _dow<>date(0,0,0)
   !}
?};
N.cntx_pop();
{? _dow<>date(0,0,0)
|| H.prefix(P.ref(),'Z');
   {? H.find_key(_dow+1)
   || _msc[_dow~2]:=H.RWY
   ?}
?};
:: Koniec nowego rozwiązania
H.cntx_pop();

{? _c=2
|| _tabn:=tab_tmp(3,
      'W','INTEGER','Urlop wychowawczy?',
      'OD','DATE','Od',
      'DO','DATE','Do'
   );

_update:="
   _tabn:=_a;
   _uw:=_b;
   _od:=_c;
   _do:=_d;
   _tabn.prefix(_uw);
   {? _tabn.find_le(_od) & _tabn.DO+1=_od
:     Dodawany przedział wydłuża istniejący w prawo.
   || _do:=_tabn.DO:=_do;
      _tabn.put();
:     Czy wstawiany rekord nie łączy sąsiadujących?
:     Czy następny nie stanie się przedłużeniem bieżącego?
      _tabn.cntx_psh();
      {? _tabn.next() & _do+1=_tabn.OD
      || _do:=_tabn.DO;
         _tabn.del()
      ?};
      _tabn.cntx_pop();
      {? _tabn.DO<_do
      || _tabn.DO:=_do;
         _tabn.put()
      ?}

   |? _tabn.find_key(_do+1)
:     Dodawany przedział wydłuża istniejący w lewo.
   || _tabn.OD:=_od;
      _tabn.put()

   || _tabn.blank();
      _tabn.W:=_uw;
      _tabn.OD:=_od;
      _tabn.DO:=_do;
      _tabn.add()
   ?}
";

   N.cntx_psh();
   N.index('NIEOBECN');
   N.prefix('N',P.ref());
   {? N.find_ge(date(_a~1,1,1)-1) & N.OD<=_b+1
   || _pom:=_a~1>=2003;
      {!
      |? {? __RUB.sys_attr(N.NB,133,N.OD)
         || _update(_tabn,1,N.OD,N.DO)
         |? _pom & exec('pomniejsza_wymiar','kart_url',N.NB,N.OD)
         || _update(_tabn,0,N.OD,N.DO)
         ?};
         N.next() & N.OD<=_b+1
      !};
      &_pom
   ?};
   N.cntx_pop();

:  Urlopy wychowawcze kończące się przed 1 X 2013 traktowane są jako nieobecności pomniejszające wymiar urlopu,
:  kwalifikacja następuje dopiero teraz, ze względu na ewentualną ciągłość. Podobnie urlopy rozpoczęte w poprzednim
:  roku kalendarzowym lub rozpoczęte 1 I. W tym ostatnim przypadku pracownik NIE nabył prawa do urlopu - nie ma
:  zastosowania Art. 155^2 par. 2 Kp.
   _tabn.prefix(1);
   {? _tabn.first()
   || {!
      |? {? _tabn.DO<date(2013,10,1) | _tabn.OD<=date(_tabn.DO~1,1,1)
         || {? _tabn.next()
            || _ref:=_tabn.ref();
               _tabn.prev()
            || _ref:=null()
            ?};
            _od:=_tabn.OD;
            _do:=_tabn.DO;
            _tabn.del();
            _update(_tabn,0,_od,_do);
            _tabn.prefix(1);
            {? _ref<>null()
            || _tabn.seek(_ref)
            ?}
         ?}
      !}
   ?};

:  Jeżeli urlop wychowawczy trwał cały rok - urlop wypoczynkowy nie przysługuje.
   {! _rok:=_a~1 .. _b~1
   |! {? _tabn.first()
      || {!
         |? {? _tabn.OD<=date(_rok,1,1) & (_tabn.DO=date(0,0,0) | date(_rok,12,31)<=_tabn.DO)
            || {! _mc:=1 .. 12
               |! _nie[(_rok-_a~1)*12+_mc]+=date(_rok,_mc,0)~3
               !}
            ?};
            _tabn.next()
         !}
      ?}
   !};

:  Analiza danych - nieobecności pomniejszających wymiar urlopu.
   _tabn.prefix(0);
   {? _tabn.first()
   || _pierwszy:=KART_URL.PIERWSZY='T';
      {? _pierwszy
      || _dni_nab:=obj_new((_dni_end - P.DZA)+1);
         _dni_nab_len:=obj_len(_dni_nab);
         {! _ind:=1 .. _dni_nab_len
         |! _dni_nab[_ind]:=1
         !}
      ?};
      {!
      |? {? (_pierwszy & (_tabn.OD<=_b & P.DZA<=_tabn.DO) | _tabn.OD<=_b & _a<=_tabn.DO) &
:           ^ Nieobecność ma część wspólną z analizowanym przedziałem i ...
:           v nieobecność kończy się w analizowanym przedziale lub obejmuje go w całości.
:             Na szczególną uwagę zasługuje warunek _tabn.DO<_b (a nie _tabn.DO<=_b).
:             Obniżenie wymiaru urlopu wypoczynkowego dotyczy pracownika powracającego w danym roku kalendarzowym
:             do pracy (Kodeks Pracy Art. 155^2). Jeżeli więc nieobecność kończy się w ostatnim dniu kalendarzowym roku
:             (_b) - pracownik nie powrócił do pracy - nie obniża się zatem wymiaru urlopu
::            (nie dotyczy pierwszego urlopu).
            (_pierwszy | (_a<=_tabn.DO & _tabn.DO<_b) | (_tabn.OD<=_a & _b<=_tabn.DO)) &
:             Te same zasady mają zastosowanie w przypadku, gdy pracownik nie powrocil do pracy do dnia rozwiazania
:             umowy wyznaczonego w danym roku kalendarzowym - również w takim przypadku nie obniza sie wymiaru urlopu.
            {? ~_pierwszy & P.DZ<>date(0,0,0) & P.DZ~1=_b~1 & _tabn.OD>_a & _tabn.DO<=_b || _tabn.DO<P.DZ || 1 ?}
         || _od:={? _tabn.OD<_a || _a || _tabn.OD ?};
            _do:={? _b<_tabn.DO || _b || _tabn.DO ?};
            {? _do=P.DZ & _od<=date(P.DZ~1,1,1)
:              Obsługa sytuacji wyjątkowej - jeżeli nieobecność (pomniejszająca wymiar urlopu) kończy się
:              w dniu rozwiązania umowy a zaczęła się 1 stycznia lub wcześniej, to pracownik NIE nabył prawa do urlopu -
:              przyjmijmy, że nie przepracowal całego miesiąca.
            || _tabn.DO:=_do:=date(_do~1,_do~2,0)
            ?};
            {? obj_ntab(_par) & var_pres('kart_url',_par)>100 & var_pres('wyk_prze',_par.kart_url)>=0
            || {? var_pres('_ret')>0 || obj_del(_ret) ?};
               _ret:=exec('wykorzystany','kart_url',_od,0,1);
               _par.kart_url.wyk_prze:=_ret.D;
               _par.kart_url.wyk_prze_D:=_ret.DD
            ?};
            _beg:={? _off || (_od~1-_a~1)*12 ?}+_od~2;
            _end:={? _off || (_do~1-_a~1)*12 ?}+_do~2;
            {! _lp:=_beg .. _end
            |! _d1:=date(_a~1+_lp%12,_lp%*12,1);
               _d2:=date(_d1~1,_d1~2,0);
               _nie[_lp]+={? _tabn.DO<_d2 || _tabn.DO || _d2 ?}-{? _d1<_tabn.OD || _tabn.OD || _d1 ?}+1
            !};
            {? _pierwszy
            || _n_od:={? _tabn.OD<P.DZA || P.DZA || _tabn.OD ?};
               _n_do:={? _dni_end<_tabn.DO || _dni_end || _tabn.DO ?};
               {! _ind:=#_n_od .. #_n_do
               |! _dni_nab[_dni_nab_len-(_dni_end-#_ind)]:=0
               !}
            ?}
         ?};
         _tabn.next()
      !};
      {? _pierwszy
      || _tab_pie:=tab_tmp(,
            'M','INTEGER','Miesiąc nabycia',
            'D','DATE','Data nabycia'
         );
         _start:=_dni_end-_dni_nab_len+1;
         _miesiac:=0;
         {! _ind:=1 .. _dni_nab_len
         |! _miesiac+=_dni_nab[_ind];
            {? _miesiac=30
            || _miesiac:=0;
               _tab_pie.D:=_start+_ind-1;
               _tab_pie.M:=_tab_pie.D~2;
               _tab_pie.add()
            ?}
         !}
      ?}
   ?}
?};

_cnt:=0;
{! _lp:=1 .. obj_len(_nie)
|! _dni:=date(_a~1+_lp%12,_lp%*12,0)~3;
   _cnt+=({? _nie[_lp]=_dni || 30 || _nie[_lp] ?}/30)$10;
   _msc_lp:=_msc[_lp];
   {? _cnt$10>=1
   || _msc[_lp]:=0;
      _nieob[_lp]:=1;
      _cnt-=1
   ?};
   {? _pierwszy
   || _tab_pie.prefix(_lp);
      _msc[_lp]:={? _tab_pie.first() || _msc_lp || 0 ?}
   ?}
!};

{? obj_ntab(_par) & var_pres('kart_url',_par)>100 & var_pres('nieob',_par.kart_url)>=0
|| {? var_pres('nieob',_par.kart_url)>100
   || obj_del(_par.kart_url.nieob)
   ?};
   _par.kart_url.nieob:=_nieob
?};

_msc


\wymiar_urlopu0
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła koryguje "nominalny" wymiar urlopu. Niespójne okresy o tych samych wymiarach uwzględniane są OSOBNO.
::   WE: _a [ARRAY]   - Tablica z wymiarem zatrudnienia na każdy miesiąc badanego przedziału (_a,_b).
::                       Ostatnim elementem tablicy jest rok początku badanego okresu.
::       _b [INTEGER] - Wymiar urlopu (liczba dni).
::       _c [DATE]    - Data początku badanego okresu.
::       _d [DATE]    - Data końca badanego okresu.
::       _e [INTEGER] - Wyniki pośredni obcinać [1] do liczby całkowitej lub brać w pełnej dokładności [0].
::       _f [INTEGER] - Wynik końcowy zaokrąglić do 2 miejsc po przecinku [1] lub obcinać [0] do liczby całkowitej.
::       _g [DICT]    - Obiekt z informacją o miesiącach w których nastąpiła zmiania umowy o pracę
::   WY: Ostateczny wymiar urlopu.
::  OLD: \wymur0/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_wym:=0;
_msc:=1;

_rok:=_a[obj_len(_a)];
_beg:=_c~2+(_c~1-_rok)*12;
_end:=_d~2+(_d~1-_rok)*12;
_okr:=_end-_beg+1;
_zm_um:=_g;

{! _lp:=_beg .. _end
|! {? {? _lp+1>_end
      || 1
      |? _a[_lp]=_a[_lp+1]
      || {? _zm_um[_lp+1] || 1 || _msc+=1; 0 ?}
      || 1
      ?}
   || {? _a[_lp]
      || _wms:=ceil(_b*_a[_lp])*_msc/_okr;
         _wym+={? _e & ~_f || ceil(_wms) || _wms ?}
      || KART_URL.UWAGI:='Urlop proporcjonalny'
      ?};
      _msc:=1
   ?}
!};

_ret:={? ~_f || ceil(_wym) || _wym$2 ?};
{? _b<_ret
|| _b
|| _ret
?}


\wymiar_urlopu1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła koryguje "nominalny" wymiar urlopu. Niespójne okresy o tych samych wymiarach uwzględniane są RAZEM.
::   WE: _a [ARRAY]   - Tablica z wymiarem zatrudnienia na każdy miesiąc badanego przedziału (_a,_b).
::                       Ostatnim elementem tablicy jest rok początku badanego okresu.
::       _b [INTEGER] - Wymiar urlopu (liczba dni).
::       _c [DATE]    - Data początku badanego okresu.
::       _d [DATE]    - Data końca badanego okresu.
::       _e [INTEGER] - Wyniki pośredni obcinać [1] do liczby całkowitej lub brać w pełnej dokładności [0].
::       _f [INTEGER] - Wynik końcowy zaokrąglić do 2 miejsc po przecinku [1] lub obcinać [0] do liczby całkowitej.
::   WY: Ostateczny wymiar urlopu.
::  OLD: \wymur1/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_wym:=0;

_iela:=obj_len(_a);
_rok:=_a[_iela];
_beg:=_c~2+(_c~1-_rok)*12;
_end:=_d~2+(_d~1-_rok)*12;
_okr:=_end-_beg+1;

_test:=0;
{! _lp:=_beg .. _end
|! _test+=(_a[_lp]<>0)
!};
{? _test<12
|| KART_URL.UWAGI:='Urlop proporcjonalny'
?};

:Ze względu na algorytm wymagana jest modyfikacja tabeli _a - wymiaru zatrudnienia.
:Przygotujmy wiec robocza kopia tablicy _a.
_a1:=obj_new(_iela);
{! _lp:=1 .. _iela
|! _a1[_lp]:=_a[_lp]
!};

{!
|? _test
|! _wza:=0;
   _msc:=0;
   {! _lp:=_beg .. _end
   |! {? ~_wza & _a1[_lp]
      || _msc+=1;
         _test-=1;
         _wza:=_a1[_lp];
         _a1[_lp]:=0
      |? _a1[_lp] & _a1[_lp]=_wza
      || _msc+=1;
         _test-=1;
         _a1[_lp]:=0
      ?}
   !};
   _wms:=_b*_wza*_msc/_okr;
   _wym+={? _e & ~_f || ceil(_wms) || _wms ?}
!};

{? ~_f
|| ceil(_wym)
|| _wym$2
?}


\wymiar_urlopu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła koryguje "nominalny" wymiar urlopu.
::   WE:  _a  [ARRAY]   - Tablica z wymiarem zatrudnienia na każdy miesiąc badanego przedziału (_a,_b).
::                        Ostatnim elementem tablicy jest rok początku badanego okresu.
::        _b  [INTEGER] - Wymiar urlopu (liczba dni).
::        _c  [DATE]    - Data początku badanego okresu.
::        _d  [DATE]    - Data końca badanego okresu.
::       [_e] [INTEGER] - Obcinać wynik końcowy do liczby całkowitej?
::       [_f] [DICT]    - Obiekt z informacją o miesiącach w których nastąpiła zmiania umowy o pracę
::             0 - Nie [domyślnie].
::             1 - Tak.
::   WY: Ostateczny wymiar urlopu.
::  OLD: \wymurl/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();

_rok:=_a[obj_len(_a)];
_beg:=_c~2+(_c~1-_rok)*12;
_end:=_d~2+(_d~1-_rok)*12;

:: określenie czy w trakcie zakresu miesięcy _beg, _end wskazanego roku nastąpiła zmiana umowy
{? var_pres('_f')>100
|| _zm_um:=_f
|| _zm_um:=obj_new(_end-_beg+1);
   {! _ind:=_beg.._end |! _zm_um[_ind]:=0 !}
?};

_sa_nieob:=0;
{? obj_ntab(_par) & var_pres('kart_url',_par)>100 & var_pres('nieob',_par.kart_url)>100
|| {! _lp:=_beg .. _end
   |! {? _par.kart_url.nieob[_lp]
      || _sa_nieob+=1
      ?}
   !}
?};

{? _sa_nieob
|| exec('wymiar_urlopu1','kart_url',_a,_b,_c,_d,1,var_pres('_[5]')=type_of(0) & _[5],_zm_um)
|| exec('wymiar_urlopu0','kart_url',_a,_b,_c,_d,1,var_pres('_[5]')=type_of(0) & _[5],_zm_um)
?}


\urlop_dodatkowy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Wyliczenie wymiaru urlopu dodatkowego dla osob o umiarkowanym lub znacznym stopniu niepełnosprawności.
::       O nabyciu prawa do urlopu decydują informacje zawarte w kartotece danych ubezpieczeniowych.
::   WE:  _a  [NUMBER] - rok karty urlopowej
::       [_b] [NUMBER] - rezygnacja z zaokragleń [0*/1]
::   WY:
::  OLD: \licz_dod/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
: Sprawdzenie, czy dany pracownik ma prawo korzystać z urlopu dodatkowego. Przeszukanie informacji ubezpieczeniowych
: pod kątem wystąpienia zapisów, dla których kod stopnia niepełnosprawności jest '2' lub '3'.
_d0:=date(0,0,0);
_beg:=date(_a,1,1);
_end:=_end_org:=date(_a,12,0);
_nie_zao:=var_pres('_b')=type_of(0) & _b;
_test:=0;
_last_od:=_end;

: Wyzeruj pola dla urlopu dodatkowego
KART_URL.URL_NSP:=KART_URL.URL_NSPG:=0;
KART_URL.DATA_NSP:=_d0;

P_INFO.cntx_psh();
P_INFO.index('OD');
P_INFO.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
{? P_INFO.last()
|| _OKR_NSP:=~~;
   {!
   |? {? (P_INFO.STNP().KOD='2' | P_INFO.STNP().KOD='3') & P_INFO.STNP_OD<=_end
      || {? ~type_of(_OKR_NSP)
         || _OKR_NSP:=tab_tmp(2,'OD','DATE',,'DO','DATE',,'DEL','INTEGER',)
         ?};
         _OKR_NSP.OD:=P_INFO.STNP_OD;
         _OKR_NSP.DO:={? P_INFO.STNP_DO>_end | P_INFO.STNP_DO=_d0 || _end || P_INFO.STNP_DO ?};
         {? ~_OKR_NSP.find_rec()
         || _OKR_NSP.add()
         ?};
         {? ~_test
         || _test:=(P.DZA<_last_od) & {? P.DZ<>_d0 || P_INFO.STNP_OD<=P.DZ || 1 ?}
         ?}
      || _last_od:=P_INFO.OD;
         {? _last_od-1<_end || _end:=_last_od-1 ?}
      ?};
      P_INFO.prev()
   !};
   _end:=_end_org;

   {? ~type_of(_OKR_NSP) | ~_OKR_NSP.first()
   || _test:=0
   ?}
?};
P_INFO.cntx_pop();

{? ~_test
:  Brak orzeczeń w dotychczasowym okresie zatrudnienia (urlop nie przysługuje - zakończ działanie).
|| return()
?};

{? ~_OKR_NSP.first()
|| obj_del(_OKR_NSP);
   return
|| _ok:=1;
   {! |? {? _OKR_NSP.DO~1=_a || _ok:=0 || _OKR_NSP.next() ?} !};
   {? _ok
   || obj_del(_OKR_NSP);
      return
   ?}
?};
{? _OKR_NSP.first()
|| {! |? {? _OKR_NSP.DO~1=_end~1 || _OKR_NSP.DO:=_end; _OKR_NSP.put() ?}; _OKR_NSP.next() !}
?};


: Znalezione zostały zapisy, z których może wynikać, że pracownik jest uprawniony do korzystania z urlopu dodatkowego
: z tytułu niepełnosprawności - normalizacja zapisów.
_od:=_OKR_NSP.OD;
_do:=_OKR_NSP.DO;
_ref:=_OKR_NSP.ref();
{!
|? _OKR_NSP.next()
|! {? _OKR_NSP.OD<=_do & _OKR_NSP.DO<=_do
   || _OKR_NSP.del();
      _OKR_NSP.seek(_ref)
   |? _OKR_NSP.OD<=_do & _do<_OKR_NSP.DO
   || _do:=_OKR_NSP.DO;
      _OKR_NSP.del();
      _OKR_NSP.seek(_ref);
      _OKR_NSP.DO:=_do;
      _OKR_NSP.put()
   || _ref:=_OKR_NSP.ref();
      _od:=_OKR_NSP.OD;
      _do:=_OKR_NSP.DO
   ?}
!};

: Wyliczenie daty nabycia prawa do urlopu, bez uwzględnienia przerw w zatrudnieniu, urlopów bezpłatnych i wychowawczych
: przypadających na okresy, na które wydane zostały orzeczenia.
_OKR_NSP.last();
_stop:=_OKR_NSP.DO;
_OKR_NSP.first();
:: rozpoczynamy liczenie przepracowanego roku po dniu uzyskania orzeczenia
_start:=_OKR_NSP.OD+1;
_beg:=date(_start~1,1,1);

_dni:=obj_new(_end-_beg+1);
{! _lp:=1 .. obj_len(_dni)
|! _dni[_lp]:=~~
!};
_ustaw:="{! _lp:=_c-_b+1 .. _d-_b+1 |! _e(_a,_lp,_f) !}";
_met:="_a[_b]:=_c";

{!
|? _ustaw(_dni,_beg,_OKR_NSP.OD,_OKR_NSP.DO,_met,0);
   _OKR_NSP.next()
!};

obj_del(_OKR_NSP);
&_OKR_NSP;

: Pracownik nabywa prawo do dodatkowego urlopu wypoczynkowego, po przepracowaniu roku - należy w zasadzie wyliczyć
: "staż niepełnosprawności" i wykonać wyliczenia tak jak dla "normalnego" urlopu (z uwzględnieniem wymiaru zatrudnienia
: oraz w razie potrzeby zastosować zasadę proporcjonalności).
_met:="{? type_of(_a[_b])=1 || _a[_b]+=_c ?}";
STAZ_H.cntx_psh();
STAZ_H.index('OSOBA');
STAZ_H.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
{? STAZ_H.first()
|| {!
   |? {? STAZ_H.OD<=_end & (STAZ_H.DO=_d0 | _beg<=STAZ_H.DO)
      || _od:={? STAZ_H.OD<_beg || _beg || STAZ_H.OD ?};
         _do:={? STAZ_H.DO=_d0 | _end<STAZ_H.DO || _end || STAZ_H.DO ?};
         _ustaw(_dni,_beg,_od,_do,_met,{? STAZ_H.ZM().KZ='Z' || 1 || -1 ?})
      ?};
      STAZ_H.next()
   !}
?};
STAZ_H.cntx_pop();

P.cntx_psh();
H.cntx_psh();
H.index('_HISTOSD');
H.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
{? H.first()
|| {!
   |? {? H.P().F_ZATR().KOD='P'
      || {? H.OD<=_end & (H.DO=_d0 | _beg<=H.DO)
         || _od:={? H.OD<_beg || _beg || H.OD ?};
            _do:={? H.DO=_d0 | _end<H.DO || _end || H.DO ?};
            _ustaw(_dni,_beg,_od,_do,_met,{? H.KZ().KZ='Z' || 1 || -1 ?})
         ?}
      ?};
      H.next()
   !}
?};
H.cntx_pop();
P.cntx_pop();

&_od;
&_do;
&_ustaw;
&_met;

: Ustal datę nabycia prawa do urlopu dodatkowego.

_test:=0;
_nab_url:=_start;
{! _lp:=(_start-_beg+1) .. obj_len(_dni)
|? _test<365
|! _nab_url+=1;
   _interr:={? type_of(_dni[_lp]) || 0 || 1 ?};
   {? ~_interr || _test+=(_dni[_lp]>0) || _test*=0 ?}
!};

{? &_test<365
:  Łączny, kwalifikowany okres nie przekracza roku (urlop dodatkowy nie przysługuje)
|| return()
?};

{? _end<_nab_url
:  Bez prawa do urlopu
|| return()
?};

: _f_n_url - data nabycia pierwszego urlopu (data może być sprzed rozpoczęcia zatrudnienia)
_f_n_url:=_nab_url;
{? _nab_url<P.DZA
: Pracownik może być uprawniony do korzystania z urlopu dodatkowego z dniem zatrudnienia - orzeczenia wydane za okresy
: pracy u poprzednich pracodawców.
|| _nab_url:=P.DZA
?};

: Przygotuj tablicę zawierającą współczynniki dla każdego z miesięcy zadanego okresu
: potrzebną do proporcjonalnego wyliczenia wymiaru urlopu.
_d1:=date(_a,1,1);
_d2:=date(_a,12,0);

: ER/WRT/XP/12.51/2211/0041
: pracownik:
: - otrzymuje pierwszy urlop dodatkowy w całości, natomiast kolejny proporcjonalnie
: - w przypadku gdy w roku nabycia pierwszego urlopu dodatkowego ustaje stosunek pracy wymiar urlopu przysługuje w
:   wymiarze proporcjonalnym
: - nie ma pomniejszanego wymiaru urlopu gdy w ciągu roku nastąpi zmiana stopnia orzeczenia o niepelnosprawności
: - ma pomniejszany wymiar proporcjonalnie do końca daty zatrudnienia
: - jeśli nie dostarczy wszystkich dokumentów związanych z orzeczniem o niepełnosprawności z przeszłości (nie ma takiego
:   obowiązku) a na podstawie analizowanych danych będzie to dla pracownika pierwszy urlop to otrzyma go w całości
_wym:=exec('wymiar_urlopu_wypoczynkowego','kart_url',_d1,_d2,2,P.DZA);

: sprawdzenie, czy na poprzednich świadectwach była informacja o wykorzystanym urlopie dodatkowym
STAZ.cntx_psh();
STAZ.index('_STAZE');
STAZ.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
_dodatkowy:=0;
{? STAZ.first()
|| {!
   |? {? STAZ.DZ~1=_a
      || _dodatkowy:=STAZ.WUNSP>0
      ?};
      ~_dodatkowy & STAZ.next()
   !}
?};
STAZ.cntx_pop();

_zm_um:=exec('zmiana_umowy','kart_url',P.ref(),date(_a,1,1),date(_a,12,0),P.DZA);
_zmiana_umowy:=_zm_um[13];
_czesc_etatu:=0;
_zmiana_wymiaru:=0;
_last_wym:=0;
{? _a=P.DZA~1
|| _rok_end:=12;
   {! _lp:=(P.DZA~2).._rok_end
   |! _last_wym:=_wym[_lp];
      {? _lp+1<=_rok_end & _wym[_lp]>0 & _wym[_lp+1]>0
      || _zmiana_wymiaru+=_wym[_lp]<>_wym[_lp+1]
      ?};
      {? ~_czesc_etatu
      || _czesc_etatu:=_wym[_lp]>0 & _wym[_lp]<1
      ?}
   !}
?};
:: MicKoc 23.02.2023 w miesiącu zatrudnienia obowiązuje wymiar zatrudnienia zgodny z umową, nie 1
:: poniższe robimy tylko dla karty urlopowej z roku zatrudnienia oraz
:: 1. jeżeli rok daty nabycia pierwszego urlopu jest równy lub większy niż roku karty urlopowej
:: 2. jeżeli pracownik pracuje w ostatnim miesiącu roku karty urlopowej
:: 3. jeżeli nie było informacji o wykorzystanym u poprzednich pracodawców urlopie dodatkowym
:: 4. jeżeli nie było zmiany umowy w roku
:: 5. jeżeli nie było zmiany wymiaru etatu

_uzupelniaj:=(_a=@.P.DZA~1) & (_f_n_url~1>=_a) & ~_zmiana_umowy & ~_zmiana_wymiaru & _wym[12]<>0 & ~_dodatkowy;
{? _uzupelniaj
|| {! _lp:=1..(@.P.DZA~2-1) |! {? _czesc_etatu || _wym[_lp]:=_last_wym || _wym[_lp]:=1 ?} !}
?};

: Wylicz wymiar należnego urlopu dodatkowego
_url:=exec('wymiar_urlopu','kart_url',_wym,KST.LIM_NSP,_d1,_d2,_nie_zao,_zm_um);

: Ustal datę, która będzie wykazywana w karcie urlopowej, jeśli aktualnie ustalona data jest wcześniejsza od pierwszego
: dnia roku kalendarzowego, dla którego wyliczana jest karta, to przyjęty zostanie pierwszy dzień, w którym pracownik
: jest zatrudniony i posiada orzeczenie o niepełnosprawności.
_d1:=date(_end~1,1,1);
{? _nab_url<_d1
|| _od:=_d1-_beg+1;
   _do:=_end-_beg+1;
   {! _dx:=_od .. _do
   |? _nab_url<_d1
   |! {? type_of(_dni[_dx]) & _dni[_dx]
      || _nab_url:=_beg+_dx-1
      ?}
   !}
?};

: Ustaw pola karty urlopowej
{? KART_URL.URL_NSP:=ceil(_url)
|| KART_URL.DATA_NSP:=_nab_url
?}


\limit_urlopu_naukowego
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Limit urlopu naukowego
::   WE: [_a] [DATE] - Data badania stanu [domyślnie:date()].
::   WY: Limit urlopu naukowego.
::  OLD: \lim_n/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_dt:={? var_pres('_a')=type_of(date()) || _a || date() ?};
_ret:=KST.LIM_NAUK;
exec('czytaj','#stalesys',_dt,KST,'LIM_NAUK');
_ret==KST.LIM_NAUK


\wymiar_urlopu_naukowego
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Procedura ustala miesiące, w których pracownikowi przysługuje urlop z tytułu Ustawy o instytutach badawczych.
::   WE: _a [DATE]  - Początek badanego okresu.
::       _b [DATE]  - Koniec badanego okresu.
::       _c [ARRAY] - Tablica z wymiarami zatrudnienia w badanym okresie.
::   WY: Tablica z wymiarami zatrudnienia w miesiącach zakwalifikowanych do urlopu "naukowego".
::  OLD: \url_n/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_beg:=_a;
_end:=_b;
_wym:=_c;

_size:=obj_len(_wym);
_wymn:=obj_new(_size);
{! _lp:=1 .. _size-1
|! _wymn[_lp]:=0
!};
_wymn[_size]:=_wym[_size];

_d0:=date(0,0,0);
_dp:=date(_beg~1,1,1);
_dk:=date(_end~1,12,31);

_dni:=obj_new(_dk-_dp+1);
{! _lp:=1 .. obj_len(_dni)
|! _dni[_lp]:=0
!};

_ok:=0;
STN.cntx_psh();
STN.prefix();
H.cntx_psh();
H.index('_HISTKOD');
H.prefix(P.ref(),'Z');
{? H.find_le(_dk) & (H.DO=_d0 | _dp<=H.DO)
|| {!
   |? {? H.OD<=_dk & (H.DO=_d0 | _dp<=H.DO) & H.ST().URL_NAUK='T'
      || _od:={? H.OD<_dp || _dp || H.OD ?};
         _do:={? H.DO=_d0 | _dk<=H.DO || _dk || H.DO ?};
         {! _nrd:=_od-_dp+1 .. _do-_dp+1 |! _dni[_nrd]:=1 !};
         _ok+=1
      ?};
      H.prev() & _dp<=H.DO
   !}
?};
H.cntx_pop();
STN.cntx_pop();

{? ~_ok || return(_wymn) ?};

:Zawartość tablicy współczynników musi być zmodyfikowana (nie uwzględnia ona informacji o okresach, kiedy pracownikowi
:nie przysługiwał urlop naukowy. Miesiąc będzie "wyłączony" jeśli w jego trakcie pracownik nie byl "naukowy" na chociaż
:jeden dzień, czyli nie istniała podstawa do udzielenia urlopu. Wyjątkiem jest zatrudnienie lub zwolnienie - dni,
:w których pracownik nie był "naukowy" bo nie był zatrudniony, nie są dyskwalifikujące.
{! _mc:=1 .. _size-1
|! {? _wym[_mc]>0
   || _wymn[_mc]:=_wym[_mc];
      _od:=date(_dp~1+_mc%12,_mc%*12,1);
      {? _od~1=P.DZA~1 & _od~2=P.DZA~2
      || _od:=P.DZA
      ?};
      _do:=date(_od~1,_od~2,0);
      {? _do~1=P.DZ~1 & _do~2=P.DZ~2
      || _do:=P.DZ
      ?};
      {! _nrd:=_od-_dp+1 .. _do-_dp+1
      |? _wymn[_mc]>0
      |! {? ~_dni[_nrd]
         || _wymn[_mc]:=0
         ?}
      !};
      {? _wymn[_mc]>0
      || _wym[_mc]:=0
      ?}
   ?}
!};

_wymn


\pierwszy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Wymiar pierwszego urlopu wypoczynkowego w podziale na miesiące. Formuła przygotowuje tabelę tymczasową z
::       danymi.
::   WE: _a [INTEGER] - Tryb wsadowy
::            0 - Nie [DOMYŚLNIE] - wyniki są prezentowane w okienku wertowania.
::            1 - Tak.
::   WY: Dla trybu wsadowego wynikiem jest przygotowana tabela.
::  OLD: \purl_po/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;

_wymurl:=0;
_rok:=date()~1;

KART_URL.cntx_psh();
KART_URL.index('PRAC_ROK');
KART_URL.prefix(P.ref());
{? KART_URL.first()
|| _rok:=KART_URL.ROK;
   _wymurl:=KART_URL.LIM_AKT
?};
KART_URL.cntx_pop();

_lim:=tab_tmp(1,
   'N','INTEGER','Numer',
   'M','STRING[11]','Miesiąc',
   'W','REAL','Dni'
);
{? ~_batch
|| _lim.fld_attr(,2,3);
   _wnd:=_lim.mk_sel('Pierwszy urlop'@,'N',,'#kart_url_p01',,,13,,,,,,,,,'on');
   _lim.win_fld(_wnd,,'M');
   _lim.win_fld(_wnd,,'W',,,,,5);
   _lim.win_sel(_wnd)
?};

_d1:=P.NAB_URL;
_d2:=date(_rok,12,0);
{? P.DZ~1=_rok
|| _dp:=P.NAB_URL;
   _dz:=P.DZ;
   _d2:=
      {? _dz=date(_dz~1,_dz~2,0)
      || _dz
      |? _dp=date(_dp~1,_dp~2,0)
      || {? _dz<>date(_dz~1,_dz~2,0)
         || date(_dz~1,_dz~2,1)-1
         || _dz
         ?}
      |? date(_dz~1,_dz~2,0)~3<_dp~3
      || date(_dz~1,_dz~2,0)
      || _dp:=date(_dz~1,_dz~2,_dp~3);
         {? _dz<_dp
         || date(_dz~1,_dz~2,1)-1
         || _dz
         ?}
      ?};
   {? _d2<_d1
   || _d2:=date(_d1~1,_d2~2,0)
   ?}
?};
_wymp:=exec('wymiar_urlopu_wypoczynkowego','kart_url',_d1,_d2,2,P.DZA);
_wymn:=exec('wymiar_urlopu_naukowego','kart_url',_d1,_d2,_wymp);

_wspp:=_wspn:=0;
{! _mc:=1 .. 12
|! _wspp+=_wymp[_mc];
   _wspn+=_wymn[_mc]
!};

_lim_p_rok:=exec('pobierz_limit','kart_url',_rok,0,4);
_lim_n_rok:=exec('limit_urlopu_naukowego','kart_url');
_wup:=
   {? _wspp
   || {? _wspn
      || _wspp*_lim_p_rok/12$2
      || _wymurl
      ?}
   ?};
_wun:=_wspn*_lim_n_rok/12$2;

{? _wup+_wun=_wymurl
:  Jeżeli udało się nam odtworzyć sposób liczenia aktualnego wymiaru urlopu, to jesteśmy w stanie
:  "rozbić" go na miesiące.
:  Dla 20 dni urlopu mamy:
:     20/12 = 1.66(6) -> 1.67, ale 1.67*12=20.04 (!).
:  Ze względu na zaokrąglenia, limity miesięczne będziemy wyliczali "narastająco" - nie w każdym miesiącu wartość
:  będzie taka sama, ale będziemy dbali o to, żeby suma wszystkich wcześniejszych miesięcy była prawidłowa.
|| _tp:=obj_new('s','i');
   _tp.s:=_tp.i:=0;
   _tn:=obj_new('s','i');
   _tn.s:=_tn.i:=0;
   {! _mc:=1 .. 12
   |! _lim.W:=0;
      {? _wymp[_mc]>0
      || _tp.i+=_wymp[_mc];
         _val:=(_lim_p_rok*_tp.i/12)$2;
         _lim.W:=_val-_tp.s;
         _tp.s+=_lim.W
      ?};
      {? _wymn[_mc]>0
      || _tn.i+=_wymn[_mc];
         _val:=(_lim_n_rok*_tn.i/12)$2;
         _lim.W:=_val-_tn.s;
         _tn.s+=_lim.W
      ?};
      {? _lim.W
      || _lim.M:=date(_rok,_mc,1)$8-5;
         _lim.N:=_mc;
         _lim.add()
      ?}
   !}
|? ~_batch
|| FUN.emsg('Karta urlopowa wymaga przeliczenia.'@)
?};

{? _batch
|| _lim
|| _lim.select()
?}


\oblicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS
:: OPIS: Główna formuła wyliczająca pozycje karty urlopowej.
::       Uwaga - zmiana parametrów.
::   WE:  _a  [INTEGER] - Rok kalendarzowy, dla którego obliczana jest karta urlopowa.
::       [_b] [INTEGER] - Wymuszenie ustawienia nowych wartości również dla zapisu bez flagi autoaktualizacji:
::                0 - Nie, wartości zostaną zaktualizowane jeżeli flaga autoaktualizacji jest ustawiona [domyślnie].
::                1 - Tak, wartości zostaną zaktualizowane, bez względu na ustawienie flagi.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__KAL','object');
{? var_pres('_a')=type_of(0) & 1900<=_a & _a<=5+date()~1
|| _rok:=_a
|| FUN.error('"%1" - nieprawidłowy argument wywołania.\n%2'@ ['_a','\\oblicz/kart_url.fml']);
   return()
?};
_force:=var_pres('_b')=type_of(0) & _b;

_d0:=date(0,0,0);
: początek roku
_beg:=date(_rok,1,1);
: ograniczenie z dołu
_start:={? _beg<P.DZA || P.DZA || _beg ?};
: koniec roku
_end:=date(_rok,12,0);
: ograniczenie z góry
_stop:={? P.DZ=_d0 || _end || P.DZ ?};
{? _end<_stop
|| _stop:=_end
?};

: czy urlop na nowych zasadach?
_nowy:=(2004<=P.DZA~1);
: rok ostatniego zapisu w STAZ
_czy2004:=date()~1;

: nabycie prawa do urlopu
_url_od:=_d0;
:data uzupełnienia urlopu
_uzu_od:=_d0;
:dodatkowy urlop od dnia
_dod_od:=_d0;

_Uwagi:='Bez prawa do urlopu';

_kart_url:=obj_new('wymiar','nieob','wyk_prze','wyk_prz1','wyk_prze_D','wyk_prz1_D');
: Elementy tablicy wykorzystywanej w bieżącej formule i wywoływanych przez nią.
: wymiar     - wymiar urlopu pobrany do obliczeń
: nieob      - tablica przechowyjąca informacje czy są nieobecności w wybranym miesiącu
: wyk_prze   - urlop wykorzystany podstawowy
: wyk_prze_D - urlop wykorzystany dodatkowy
_kart_url.wymiar:=0;
_kart_url.wyk_prze:=0;
_kart_url.wyk_prz1:=0;
_kart_url.wyk_prze_D:=0;
_kart_url.wyk_prz1_D:=0;
params_set('kart_url',_kart_url);

_pob_lim:="params_get().kart_url.wymiar:=exec('pobierz_limit','kart_url',_a,_b,_c)";

: ┌──────────────────────────────────────────────────┐
: │   zlicz wykorzystane urlopy ze świadectw pracy   │
: │   ustal sposób wyliczania wymiaru urlopu         │
: └──────────────────────────────────────────────────┘
_temp:=_oz_test:=_first_d:=_d0;
_first_u:=_first_k:=0;

_lim_wyk:=obj_new(
   'zwWykorzystany','zwPierwszy','zwPierwszyGodz','ekwiwalent','ekwiwalentGodz','zwLimit','czyNaukowy',
   'dodWykorzystany','dodWykorzystanyDni','dodWykorzystanyGodz','zwRazem','dodRazem'
);
: 1 - Limit wykorzystany/przyznany w bieżącym roku w ramach innych umów lub u poprzedniego pracodawcy.
: 6 - Limit nominalny
: 7 - Czy u poprzedniego pracodawcy pracował na stanowisku naukowym lub badawczo-technicznym?
: 8 - Urlop dodatkowy: limit wykorzystany/przyznany w bieżącym roku w ramach innych umów
: 9 - Suma nieobecności z urlopu dodatkowego oraz ekwiwalentu za urlop dodatkowy (dni)
: 10 - Suma nieobecności z urlopu dodatkowego oraz ekwiwalentu za urlop dodatkowy (godziny)
: 11-12 - Suma przyznanego urlopu
{! _lp:=1 .. obj_len(_lim_wyk)
|! _lim_wyk[_lp]:=0
!};
:: ilości miesięcy etatu i okresów zatrudnienia w rozpatrywanym roku, do zmiany warunku kontroli limitu
_mcyStazTab:=tab_tmp(1,
   'IDADD','IDADD','Id',
   'OD','DATE','Od',
   'DO','DATE','Do',
   'MC','INTEGER','Ilość miesięcy',
   'WY','REAL','Wymiar zatrudnienia',
   'RODZ','STRING[20]','Rodzaj'
);
_mcyStaz:="
   '_a - tabela';
   '_b - miesiąc';
   '_c - od';
   '_d - do';
   '_e - wymiar';
   '_f - rodzaj';
   {? _b & _c<>_d
   || _a.MC:=_b;
      _a.WY:=_e;
      _a.RODZ:=_f;
      {? _a.first()
      || {! |?
            {? _a.DO~2=_c~2 & _a.DO<=_c & _e=_a.WY & _a.RODZ=_f
            || _a.DO:=_d;
               _a.MC:=_a.DO~2-_a.OD~2+1;
               _a.put()
            |? (_a.DO+1)~2=_c~2 & _a.DO<=_c & _e=_a.WY & _a.RODZ=_f
            || _a.DO:=_d;
               _a.MC:=_a.DO~2-_a.OD~2+1;
               _a.put()
            |? _a.OD~2=_d~2 & _a.OD>=_d & _e=_a.WY & _a.RODZ=_f
            || _a.OD:=_c;
               _a.MC:=_a.DO~2-_a.OD~2+1;
               _a.put
            || _a.OD:=_c;
               _a.DO:=_d;
               _a.MC:=_a.DO~2-_a.OD~2+1;
               _a.WY:=_e;
               _a.RODZ:=_f;
               _a.add()
            ?};
            _a.next()
         !}
      || _a.OD:=_c;
         _a.DO:=_d;
         _a.add()
      ?}
   ?}";
_mcyEtat:=0;
_obnizDoLimitu:=0;
STAZ.cntx_psh();
STAZ_H.cntx_psh();
STAZ.index('_STAZE');
STAZ.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
STAZ_H.index('ZM');
{? STAZ.first()
|| _do_staz:=0;
   STN.cntx_psh();
   STN.prefix();
   P.cntx_psh();
   _start0:=_stop0:=#0;
   {!
   |? {? STAZ.DR<P.DZA
      || {? ~_do_staz & STAZ.DU='T' & STAZ.UP<>'T'
         || _oz_test:=STAZ.DR;
            _nowy:=_nowy & 2004<=STAZ.DR~1;
            _do_staz:=1
         ?};
         {? _nowy & _do_staz=1
         || __KAL.rdat(STAZ.DR,{? STAZ.DZ=date(0,0,0) | P.DZA<=STAZ.DZ || P.DZA-1 || STAZ.DZ ?});
            _first_u+=__KAL.year*12+__KAL.month;
            _first_k+=__KAL.day;
            _first_d:=STAZ.DZ
         ?};

         {? _temp<STAZ.DZ
         || _temp:=STAZ.DZ
         ?};
         {? STAZ.DZ~1=_rok
         || _lim_wyk.zwWykorzystany+=STAZ.WU;
            _lim_wyk.dodWykorzystany+=STAZ.WUNSP;
            _lim_wyk.czyNaukowy+=STAZ.STN().URL_NAUK='T';
            _stop0:={? STAZ.DZ<=P.DZA || STAZ.DZ || P.DZA ?};
            _stop0:={? STAZ.DZ<=P.DZ | P.DZ=#0 || STAZ.DZ || P.DZ ?};
            _obnizDoLimitu+=P.DZA<=STAZ.DZ;
            {? STAZ.DR<_beg
            || _start0:=_beg
            || _start0:=STAZ.DR
            ?};
            STAZ_H.prefix(STAZ.ref(),'Z',);
            {? STAZ_H.first()
            || {!
               |? _od:={? _start0<=STAZ_H.OD || STAZ_H.OD || _start0 ?};
                  _do:={? _stop0>=STAZ_H.DO || STAZ_H.DO || _stop0 ?};
                  _mcyStaz(_mcyStazTab,_do~2-_od~2+1,_od,_do,STAZ_H.RWY,'STAZ');
                  &_od;&_do;
                  STAZ_H.next()
               !}
            ?}
         ?};
         _czy2004:=STAZ.DZ~1;
         STAZ.next()
      ?}
   !};
   STN.cntx_pop();
   P.cntx_pop();
   &_do_staz;
   &_start0;
   &_stop0
?};
STAZ.cntx_pop();
STAZ_H.cntx_pop();
__KAL.rdat(date(_start~1,_start~2,1),date(_stop~1,_stop~2,0));
_mcyEtat:=__KAL.year*12+__KAL.month;
_first_u:=_first_u & _first_u<12;
:: sytuacja gdzie nie mamy przepracowanego pełnego miesiąca ale jest to pierwszy urlop
{? ~_first_u & _first_k>0
|| _first_u:=1
?};
_dza:=P.DZA;
_dz:=P.DZ;
_ref:=P.ref();
KART_URL.cntx_psh();
KART_URL.index('PRAC_ROK');
P.cntx_psh();
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),'P',P.OSOBA);
{? P.first()
|| STN.cntx_psh();
   H.cntx_psh();
   H.index('_HISTKOD');
   _test:=0;
   {!
   |? {? _ref<>P.ref() & P.DZ~1=_dza~1 & _rok=P.DZ~1
      || H.prefix(P.ref(),'Z',);
         {? H.find_le(date(_rok,1,1)) | H.first()
         || {!
            |? {? H.OD<=P.DZ & H.DO~1=_rok
               || _test:=1;
                  _start0:={? H.OD<_beg || _beg || H.OD ?};
                  _stop0:={? H.DO<=_dz || H.DO || _dz ?};
                  {? _stop0=#0 || _stop0:=_end ?};
                  _mcyStaz(_mcyStazTab,_stop0~2-_start0~2+1,_start0,_stop0,H.WY,'H')
               ?};
               H.next()
            !}
         ?};
         {? _test & P.DZ<_dza
         || KART_URL.prefix(P.ref(),_rok);
            {? KART_URL.first()
            || _lim_wyk.zwWykorzystany+=
                  {? KART_URL.URL_WYK-KART_URL.LIM_ZAL>0 || KART_URL.URL_WYK-KART_URL.LIM_ZAL || KART_URL.URL_WYK ?};
               _lim_wyk.dodWykorzystany+=KART_URL.NSP_WYK;
               _lim_wyk.zwRazem+=KART_URL.LIM_AKT+KART_URL.URL_DOD;
               _lim_wyk.dodRazem+=KART_URL.URL_NSP
            ?};
            _lim_wyk.czyNaukowy+=P.ST().URL_NAUK='T'
         ?};
         _obnizDoLimitu+=_dza<=P.DZ
      ?};
      P.next()
   !};
   H.cntx_pop();
   STN.cntx_pop()
?};
P.cntx_pop();
KART_URL.cntx_pop();

{? _nowy
|| P.cntx_psh();
   H.cntx_psh();
   H.index('_HISTOSD');
   H.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
   _P_jest:=0;
   {? H.first()
   || {!
      |? {? H.P().F_ZATR().KOD<>'P'
         || _P_jest:=0
         || {? H.P<>_ref
            || _nowy:=_nowy & 2004<=H.OD~1;
               {? H.P().DZA<_dza & (_oz_test=_d0 | P.DZA<_oz_test)
               || _oz_test:=P.DZA
               ?}
            ?};
            _P_jest:=1
         ?};
         ~_P_jest & H.next()
      !}
   ?};
   H.cntx_pop();
   P.cntx_pop();
   &_P_jest
?};
&_dza;
&_ref;

: ┌───────────────────────────────────────────────────────┐
: │   Określ datę nabycia prawa do korzystania z urlopu   │
: └───────────────────────────────────────────────────────┘
_uzu_pi:=_d0;
_przs_d:='';
{? _nowy
|| exec('oblicz','staz',1,0,_rok,1);
   {? P.DS<P.DZA & (_oz_test=_d0 | _oz_test~1=P.DZA~1)
   || _tt:=P.DS;
      {!
      |? _tt<P.DZA
      |! _td:=_tt~3;
         _tm:=(P.DZA~1*12+P.DZA~2)-(_tt~1*12+_tt~2);
         _tr:=_tt~1+_tm%12;
         _tm:=_tm%*12;
         _tm:=_tt~2+{? _tm || _tm || 1 ?};
         {? _tm>=13 || _tm:=1; _tr+=1 ?};
         _td:={? _td>(_tt:=date(_tr,_tm,0)~3) || _tt || _td ?};
         _tt:=date(_tr,_tm,_td)
      !};
      _url_od:=_tt-=1;
:     jeśli kontynuacja pierwszego urlopu
      {? _first_u & _first_d~1=P.DZA~1
      || _url_od:=P.DZA;
         {? _url_od~3=1
::          jeżeli rozpoczęcie pracy od 1 dnia miesiąca - nabywa prawo do urlopu z końcem tego miesiąca
         || _url_od:=date(_url_od~1,_url_od~2,0)
         || {? _first_k
::          w przeciwnym przypadku nabywa po 30 dniach pracy, jeżeli w poprzednim zakładzie pracownik
::          nie przepracował pełnego miesiąca
            || _url_od+=30
::             lub po miesiącu od daty rozpoczęcia pracy - nieprzerwany okres miesiąca pracy upływa w dniu
::             poprzedzającym dzień, który datą odpowiada początkowemu dniowi tego
::             okresu, a gdyby takiego dnia w takim miesiącu nie było - w ostatnim dniu tego miesiąca
            || {? _url_od~2=12
               || _url_od:=date(_url_od~1+1,1,_url_od~3-1)
               || _lnmd:=date(_url_od~1,_url_od~2+1,0)~3;
                  _url_od:={? _url_od~3>_lnmd
                           || date(_url_od~1,_url_od~2+1,0)
                           || date(_url_od~1,_url_od~2+1,_url_od~3-1)
                           ?}
               ?}
            ?}
         ?};
         _url_od:=_url_od-(_first_k%*30)
      ?};

      {? _url_od<P.DZA
      || {? _url_od=date(_url_od~1,_url_od~2,0)
         || _url_od+=1; _url_od:=date(_url_od~1,_url_od~2,0)
         || _d:=_url_od~3;
            _m:=_url_od~2+1;
            _r:=_url_od~1+{? _m>=13 || _m:=1 ?};
            _d:={? _d>(_url_od:=date(_r,_m,0)~3) || _url_od || _d ?};
            _url_od:=date(_r,_m,_d)-1
         ?}
      ?}

   || _tt:=P.DS;
      {? _tt~3>1 & __KAL.w_days(date(_tt~1,_tt~2,1),_tt-1)=0
      || _tt:=date(_tt~1,_tt~2,1)
      ?};
      _url_od:=_tt;
      {? (P.DZA-_url_od)>=30 | P.DS=P.DZA
      || {? _url_od~3=1
::          jeżeli rozpoczęcie pracy od 1 dnia miesiąca - nabywa prawo do urlopu z końcem tego miesiąca
         || _url_od:=date(_url_od~1,_url_od~2,0)
         || {? _url_od~2=12
            || _url_od:=date(_url_od~1+1,1,_url_od~3-1)
            || _lnmd:=date(_url_od~1,_url_od~2+1,0)~3;
               _url_od:={? _url_od~3>_lnmd
                        || date(_url_od~1,_url_od~2+1,0)
                        || date(_url_od~1,_url_od~2+1,_url_od~3-1)
                        ?}
            ?}
         ?}
      ?};
      _url_od:={? _url_od<P.DZA || P.DZA || _url_od ?}
   ?};
:: Sprawdzam czy w pierwszym miesiącu pracy (przed nabyciem prawa do urlopu) był jakiś urlop bezpłatny
   {? P.DZA~2<>12
   || _url_od:=exec('ile_nieob','kart_url',_url_od)
   ?};
   exec('oblicz','staz',1,,_rok);
   {? P.DZA~1<_url_od~1
   || _url_od:=date(_url_od~1,1,1)
   ?}

|| {? _rok-1=P.DZA~1
   || exec('oblicz','staz',1,,_rok-1)
   || exec('oblicz','staz',1,,_rok)
   ?};
   _td:=P.DS~3;
   _tm:=P.DS~2+6;
   _tr:=P.DS~1+{? _tm>=13 || _tm-=12; 1 ?};
   _td:=date(_tr,_tm,{? _td>(_tt:=date(_tr,_tm,0)~3) || _tt || _td ?})-1;
   _url_od:=_td;
   _td:=P.DS~3;
   _tm:=P.DS~2;
   _tr:=P.DS~1+1;
   _td:=date(_tr,_tm,{? _td>(_tt:=date(_tr,_tm,0)~3) || _tt || _td ?})-1;
   _uzu_pi:={? _start<=_td & _td<=_stop || _uzu_od:=_td || _td ?};
   {? _rok-1=P.DZA~1
   || exec('oblicz','staz',1,,_rok)
   ?};
   {? _start<=_uzu_pi
   || _uzu_od:=_d0;
      _td:=P.DS~3;
      _tm:=P.DS~2;
      _tr:=P.DS~1+1;
      _td:=date(_tr,_tm,{? _td>(_tt:=date(_tr,_tm,0)~3) || _tt || _td ?})-1;
      _uzu_pi:={? _start<=_td & _td<=_stop || _uzu_od:=_td || _td ?}
   ?}
?};

: ┌───────────────────┐
: │   Rodzaj urlopu   │
: └───────────────────┘

_url:=
   {? _stop<_url_od
:     Bez prawa do urlopu
   || 0
   |? _nowy
:     Kolejny lub pierwszy
   || 2
   |? &_uzu_pi<_start
:     Kolejny urlop
   || 2
   |? {? _czy2004<2004
      || _url_od<=_stop & _start<=_url_od
      || _url_od<=_stop & _beg<=_url_od
      ?}
:     Połowa wymiaru urlopu
   || 1
   |? _uzu_od<>_d0
:     Tylko uzupełniający
   || -1
   ?};
{? _url_od<P.DZA
|| _url_od:=P.DZA
?};
_kar_zal:=0;
: ┌───────────────────────────┐
: │   szczególne przypadki    │
: └───────────────────────────┘
{? ~_nowy
|| KART_URL.cntx_psh();
   KART_URL.index('PRAC_ROK');
   {? _url_od~1=_rok-1 & _uzu_od~1=_rok
   || KART_URL.prefix(P.ref(),_rok-1);
      _kar_zal:={? KART_URL.first() || KART_URL.LIM_AKT=0 || 1 ?}
   ?};
   {? _url=1 | _url=-1
   || STAZ.cntx_psh();
      STAZ.index('_STAZE');
      STAZ.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
      {? STAZ.first()
      || {!
         |? {? STAZ.DZ~1<>_rok
            || _lim_wyk.zwWykorzystany+=STAZ.WU;
               _lim_wyk.dodWykorzystany+=STAZ.WUNSP
            ?};
            STAZ.next()
         !}
      ?};
      STAZ.cntx_pop();
      KART_URL.prefix(P.ref());
      {? {? KART_URL.first() & KART_URL.PIERWSZY='T'
         || KART_URL.next() & KART_URL.PIERWSZY='T'
         || 1
         ?} & KART_URL.ROK<_rok
      || _tr:=KART_URL.ROK+1;
         {? KART_URL.DATA_DOD<>_d0 | (KART_URL.next() & KART_URL.ROK=_tr & KART_URL.DATA_DOD<>_d0)
         || _url:=2
         ?}
      ?}
   ?};
   KART_URL.cntx_pop()
?};

: ┌────────────────────────────────┐
: │   Wylicz pełny wymiar urlopu   │
: └────────────────────────────────┘
_pod_url:=_uzu_url:=_dod_url:=0;
{? _url
|| _tr:=0;
   {? _url=1 | _url=-1
   || {? ~_tr
      || _tr:=1
      ?};
      _Uwagi:='Połowa wymiaru';
      _td:=P.DS~3;
      _tm:=P.DS~2+6;
      _tt:=P.DS~1+{? _tm>=13 || _tm-=12; 1 ?};
      _td:=date(_tt,_tm,1)+_td-2;
      {? _td>=P.DZA
      || _pod_url:=_lim_wyk.zwLimit:=_pob_lim(_rok,_tr,1)/2
      || {? _temp=_d0 | P.DZA<_temp
         || _temp:=_url_od
         ?};
         _temp:=_temp~1;
         _pod_url:=_lim_wyk.zwLimit:=_pob_lim(_temp,_tr,1)/2
      ?};
      {? _uzu_od<>_d0
      || _uzu_url:=_pob_lim(_rok,_tr,1)-_pod_url;
         {? _uzu_url<0
         || _uzu_url:=0
         ?}
      ?};
      {? (_url=-1 & ~_kar_zal) | _url_od<P.DZA
      || _pod_url:=0;
         {? _uzu_od=_d0
         || _Uwagi:=''
         ?}
      ?}
   |? _url=2
:     przy określaniu wymiaru urlopu wykorzystuj datę uwzględniającą okres nauki przypadający na czas wykonywania pracy
   || {? P.DU<>_d0
      || __KAL.rdat(_start,P.DU);
         _r0:=_tr;
         _tr+=__KAL.year;
         _tm:=P.DU~2;
         _td:=P.DU~3;
         _tt:=_rok+(_tm=1 & _td=1);
         _dod_od:=date(_tt,_tm,1)+_td-2;
         __KAL.rdat(_dod_od,P.DU);
         _r0+=__KAL.year;
         _dod_url:=_pob_lim(_rok,_r0,0);
         &_r0
      ?};
      {? _dod_od<_start | _stop<_dod_od
      || _dod_od:=_d0;
         _dod_url:=0
      ?};
      _pod_url:=_lim_wyk.zwLimit:=_pob_lim(_rok,_tr,1);
      {? ~_pod_url & _dod_url
      || _pod_url:=_lim_wyk.zwLimit:=_dod_url;
         _dod_url:=0
      ?};
      {? ~_dod_url
      || _dod_od:=_d0
      ?};
      {? _pod_url<_dod_url & _dod_od~1=_rok
      || _dod_url-=_pod_url
      || _dod_od:=_d0;
         _dod_url:=0
      ?};
      {? _beg<>_start
      || _Uwagi:='Urlop proporcjonalny'
      || _Uwagi:='Pełny wymiar urlopu'
      ?};
      {? _dod_od<>_d0
      || _Uwagi:='Urlop uzupełniający'
      ?}
   ?}
?};
{? var_pres('_temp')>=0
|| &_temp
?};
&_pob_lim;
{? var_pres('_tr')>=0 || &_tr ?};
{? var_pres('_tm')>=0 || &_tm ?};
{? var_pres('_td')>=0 || &_td ?};
{? var_pres('_tt')>=0 || &_tt ?};
_rok_zal:=_rok;
_lim_zal:=_lim_zag:=0;
_nsp_zal:=_nsp_zag:=0;
: ┌────────────────────────────────────────────────────────┐
: │   określ liczbę dni zaległego urlopu - poprzedni rok   │
: └────────────────────────────────────────────────────────┘
KART_URL.cntx_psh();
KART_URL.index('PRAC_ROK');
KART_URL.prefix(P.ref());
{? KART_URL.find_le(_rok)
|| {? _rok<>KART_URL.ROK | KART_URL.prev()
   || _lim_zag:=KART_URL.URL_POZG;
      _lim_zal:=KART_URL.URL_POZ;
      _nsp_zag:=KART_URL.NSP_POZG;
      _nsp_zal:=KART_URL.NSP_POZ
   ?};
   {? _lim_zal<0
   || _lim_zal:=0
   ?};
   {? _lim_zag<0
   || _lim_zag:=0
   ?};
   {? _nsp_zal<0
   || _nsp_zal:=0
   ?};
   {? _nsp_zag<0
   || _nsp_zag:=0
   ?};
   {? KART_URL.ROK=_rok-1
:     "Przeniesienie" połowy wymiaru w pierwszym roku zatrudnienia do roku następnego (w którym następuje uzupełnienie
:     o kolejną połowę) ale jako urlop bieżący a nie zaległy.
   || {? _url=1 | _url=-1
      || _lim_zal:=_wyk_zal:=_lim_zag:=0;
         _pod_url+=KART_URL.LIM_AKT;
         _lim_wyk.zwPierwszy+=KART_URL.URL_WYK;
         _lim_wyk.zwPierwszyGodz+={? KART_URL.URL_WYKG || KART_URL.URL_WYKG || KART_URL.URL_WYK*8 ?}

      |? _dod_url & _dod_od<>_d0
:        Warunkowanie uzupełnienia urlopu do zwiększonego wymiaru. Gdy wprowadzone zostały urlopy bezpłatne mogłoby
:        dojść do "powtórnego" uzupełnienia.
      || {!
         |? {? KART_URL.LIM_AKT=0
            || 1
            |? {? KART_URL.PIERWSZY<>'T' & KART_URL.DATA_DOD<>_d0
               || {? KART_URL.prev()
                  || KART_URL.PIERWSZY<>'T'
                  || 1
                  ?}
               ?}
            || _pod_url+=_dod_url;
               _lim_wyk.zwLimit:=_pod_url;
               _dod_od:=_d0;
               _dod_url:=0
            ?} & KART_URL.prev()
         !}
      ?}
   ?}
|? _url=1 | _url=-1
|| _rok_zal-=1
?};
KART_URL.cntx_pop();

{? _rok=P.DZA~1 | P.NAB_URL=_d0 | _url_od<P.NAB_URL | +_przs_d
|| P.NAB_URL:=&_url_od;
   P.put()
?};

: ┌────────────────────┐
: │   ustaw wartości   │
: └────────────────────┘
_td:={? _rok=date()~1 || date() || date(_rok,12,0) ?};
_norma:=exec('norma','godziny',&_td);

{? _force | KART_URL.STATUS='A'
|| KART_URL.UWAGI:='';
   _nie_zao:=0;
   KART_URL.PIERWSZY:=
      {? _nowy
      || {? (_oz_test=_d0 | _oz_test~1=P.DZA~1) & P.DZA~1=_rok
         || _nie_zao:=(P.DZA~1=P.NAB_URL~1);
            'T'
         || 'N'
         ?}

       |? _url=1 | _url=-1 | _rok<>_rok_zal
       || 'T'
       || 'N'
       ?};
   KART_URL.LIM_ZAL:=&_lim_zal;
   KART_URL.LIM_ZALG:=&_lim_zag;
   KART_URL.NSP_ZAL:=&_nsp_zal;
   KART_URL.NSP_ZALG:=&_nsp_zag;

   _d1:=
      {? _nie_zao
      || {? P.NAB_URL=_d0
         || _Uwagi:='Bez prawa do urlopu';
            KART_URL.PIERWSZY:='T';
            _pod_url:=0;
            _url:=0;
            _end
         || P.NAB_URL
         ?}
     |? _url=1 | _url=-1
     || date(P.DZA~1,1,1)
     || _beg
     ?};
   _d2:=_end;
   {? _nie_zao & P.DZ~1=_rok
   || _td:=P.NAB_URL;
      _tt:=P.DZ;
      _d2:=
         {? _tt=date(_tt~1,_tt~2,0)
         || _tt
         |? _td=date(_td~1,_td~2,0)
         || {? _tt<>date(_tt~1,_tt~2,0)
            || date(_tt~1,_tt~2,1)-1
            || _tt
            ?}
         || {? date(_tt~1,_tt~2,0)~3<_td~3
            || date(_tt~1,_tt~2,0)
            || _td:=date(_tt~1,_tt~2,_td~3);
               {? _tt<_td
               || date(_tt~1,_tt~2,1)-1
               || _tt
               ?}
            ?}
         ?};
      &_tt; &_td;
      {? _d2<_d1
      || _d2:=date(_d1~1,_d2~2,0)
      ?}
   ?};
   _wym:=exec('wymiar_urlopu_wypoczynkowego','kart_url',_d1,_d2,_url,P.DZA);
   _wym1:=exec('wymzatf','kart_url',_d1,_d2,_url,P.DZA);
   _wymn:=exec('wymiar_urlopu_naukowego','kart_url',_d1,_d2,_wym);
   _lmc:=obj_new('kp','uip');
   _lmc.kp:=_lmc.uip:=0;
   {! _lp:=1 .. obj_len(_wymn)-1
   |! _lmc.kp+=_wym[_lp]>0;
      _lmc.uip+=_wymn[_lp]>0
   !};

   _kart_url.wyk_prze-=KART_URL.LIM_ZAL;
   {? _kart_url.wyk_prze<0
   || _kart_url.wyk_prze:=0
   ?};

   _d1:=_beg;
   _d2:=_end;
   {? _url=1 | _url=-1
   || _d1:=P.DZA;
      _d2:=P.NAB_URL
   ?};

   {? _lmc.uip
   || _opis:=KART_URL.UWAGI;
:     Brak urlopu naukowego w danym miesiącu może wynikać z braku pracy na odpowiednim stanowisku.
:     Wyciąganie wniosku, że jest to "Urlop proporcjonalny" nie jest zatem prawidłowe.
:     Dlatego chroniona jest wartość pola KART_URL.UWAGI - zapamiętana przed wywołaniem procedury ...
      _url_n:=exec('wymiar_urlopu','kart_url',
         _wymn,exec('limit_urlopu_naukowego','kart_url'),_d1,_d2,_nie_zao);
:     ... i odtworzona po.
      KART_URL.UWAGI:=_opis
   || _url_n:=0
   ?};

   {? _url_n & _dod_url
:     Jeżeli urlop uzupełniający przysługiwałby w czasie, kiedy pracownik korzysta już z urlopu naukowego -
:     anulujemy go. Sprawdzamy, czy po dacie _dod_od, jest choć jeden miesiąc "nie-naukowy".
   || _kp:=0;
      {! _lp:=12*(_dod_od~1-_d1~1)+_dod_od~2-_d1~2+1 .. obj_len(_wym)-1
      |? ~_kp
      |! _kp:=_wym[_lp]>0
      !};
      {? ~&_kp
      || _dod_url:=0
      ?}
   ?};

   _zm_um:=exec('zmiana_umowy','kart_url',P.ref(),_d1,_d2,P.DZA);
   KART_URL.LIM_AKT:=exec('wymiar_urlopu','kart_url',_wym,_pod_url,_d1,_d2,_nie_zao,_zm_um)+_url_n;

   _lim_akt:=exec('wymiar_urlopu','kart_url',_wym1,_pod_url,_d1,_d2,_nie_zao,_zm_um);
   _lim_akt_uzup:=exec('wymiar_urlopu','kart_url',_wym1,_pod_url+_dod_url,_d1,_d2)
                  -exec('wymiar_urlopu','kart_url',_wym,_pod_url,_d1,_d2);
   {? _lim_wyk.czyNaukowy & _lmc.uip
:     Naukowy był i jest
   || _lim_wyk.zwLimit:=exec('limit_urlopu_naukowego','kart_url')
   |? _lim_wyk.czyNaukowy
:     Naukowy był, ale już nie jest
   || _lim_wyk.zwLimit:=
         ceil((12-_lmc.kp)*exec('limit_urlopu_naukowego','kart_url')/12)+ceil((_lmc.kp)*_lim_wyk.zwLimit/12)
   |? _lmc.uip
:     Naukowy nie był, ale jest
   || _lim_wyk.zwLimit:=
         ceil((12-_lmc.uip)*_lim_wyk.zwLimit/12)+ceil(_lmc.uip*exec('limit_urlopu_naukowego','kart_url')/12)
   ?};

   _test:=0;
   _granica:=0;
   _tmp:=0;
   {? _mcyStazTab.first()
   || {!
      |? _test+=ceil(_mcyStazTab.WY*_mcyStazTab.MC*_lim_wyk.zwLimit/12);
         {? ',H,'*(','+_mcyStazTab.RODZ+',')
         || _tmp+=_mcyStazTab.MC
         || _granica+=ceil(_mcyStazTab.WY*_mcyStazTab.MC*_lim_wyk.zwLimit/12)
         ?};
         _mcyStazTab.next()
      !}
   ?};

:: opis/możliwe przypadki:
::    _test - wymiar urlopu wynikający ze wszystkich zapisów poprzedniego zatrudnienia i zatrudnień równoległych
::    _granica - wymiar urlopu u poprzednich pracodawców, część z _test
::    _tmp - ilość miesięcy wynikająca z równoległych zatrudnień
::
::    _obnizDoLimitu -
::       0 domyślnie, brak nakładających się
::       >0 jeśli praca u poprzednich pracodawców, poprzednie zatrudnienia z bieżącym się nakłada
:: _test<>_tmp+_granica bo różne są zaokrąglenia

   _granica+=ceil(&_tmp*_lim_wyk.zwLimit/12);
:: _granica - suma limitu, to co u poprzednich pracodawców + równoległe zatrudnienia + bieżący wymiar
:: jeżeli zatrudnienie kończy się przed końcem roku, to granicą jest limit przysługujący pracownikowi w danym roku
   {? _stop=_end || _granica+=KART_URL.LIM_AKT || _granica:=_lim_wyk.zwLimit ?};

   _korekta1:=0;
   {? ~_obnizDoLimitu & _lim_wyk.zwLimit<_granica
   || _granica:=_lim_wyk.zwLimit;
      _korekta1:=1
   ?};
:: może nastąpić różnica, np 26<>27 z uwagi na sumy zaokrąglane, uwzględniamy tą różnicę lub nie
:: zależy od tego, czy poprzednie zatrudnienia i/lub róznoległe etaty się zazębiają

   _test:=KART_URL.LIM_AKT+_test;
   {? _granica<KART_URL.LIM_AKT+_lim_wyk.zwWykorzystany
   || KART_URL.LIM_AKT-=KART_URL.LIM_AKT+_lim_wyk.zwWykorzystany-_granica
   ?};
   {? _test<_lim_akt+_lim_wyk.zwWykorzystany
   || _lim_akt-=(_lim_akt+_lim_wyk.zwWykorzystany)-_lim_wyk.zwLimit
   ?};
   {? _granica<_lim_akt+_lim_wyk.zwWykorzystany || _lim_akt-=KART_URL.LIM_AKT+_lim_wyk.zwWykorzystany-_granica ?};

   _kart_url.wyk_prz1:=_kart_url.wyk_prze;
   _kart_url.wyk_prz1_D:=_kart_url.wyk_prze_D;
   {? KART_URL.LIM_AKT+_lim_wyk.zwWykorzystany>_granica | KART_URL.LIM_AKT+_lim_wyk.zwRazem>_granica
   || KART_URL.LIM_AKT-=&_korekta1
   ?};
   {? KART_URL.LIM_AKT<0 || KART_URL.LIM_AKT:=0 ?};
   {? _lim_akt<0 || _lim_akt:=0 ?};

:  Wylicz wymiar dodatkowego urlopu wypoczynkowego dla osób z orzeczonym
:  umiarkowanym lub znacznym stopniem niepełnosprawności.

:: 2. Urlop, o którym mowa w ust. 1, nie przysługuje osobie uprawnionej do urlopu wypoczynkowego w wymiarze
::    przekraczającym 26 dni roboczych lub do urlopu dodatkowego na podstawie odrębnych przepisów.
   {? (_url_n+_kart_url.wymiar)<=26
   || exec('urlop_dodatkowy','kart_url',_rok,_nie_zao);
      _test:=0;
      _granica:=ceil((_stop~2-_start~2+1)*KST.LIM_NSP/12);
      {? _mcyStazTab.first()
      || {!
         |? _test+=ceil(_mcyStazTab.WY*_mcyStazTab.MC*KST.LIM_NSP/12);
            {? ~(',H,'*(','+_mcyStazTab.RODZ+','))
            || _granica+=ceil(_mcyStazTab.MC*KST.LIM_NSP/12)
            ?};
            _mcyStazTab.next()
         !}
      ?};
      {? _stop=_end
      || {? _test<>0
         || {? _test<_lim_wyk.dodWykorzystany
            || KART_URL.URL_NSP-=_lim_wyk.dodWykorzystany-_test
            ?}
         || {? KST.LIM_NSP<KART_URL.URL_NSP+_lim_wyk.dodWykorzystany
            || KART_URL.URL_NSP-=KART_URL.URL_NSP+_lim_wyk.dodWykorzystany-KST.LIM_NSP
            ?}
         ?}
      || _granica:=KST.LIM_NSP
      ?};
      {? _granica<KART_URL.URL_NSP+_lim_wyk.dodWykorzystany-_test
      || KART_URL.URL_NSP-=KART_URL.URL_NSP+_lim_wyk.dodWykorzystany-_granica-_test
      ?};

::    Podwyższanie limitu urlopu dodatkowego do ilości wykorzystanej, gdy występują nieobecności
::    wpływające na wymiar urlopu
      _lim_akt_D:=exec('wymiar_urlopu','kart_url',_wym1,KST.LIM_NSP,_d1,_d2,_nie_zao);
      {? KART_URL.URL_NSP>0 & KART_URL.URL_NSP<_kart_url.wyk_prz1_D
      || {? _kart_url.wyk_prz1_D>_lim_akt_D
         || KART_URL.URL_NSP:=_lim_akt_D
         || KART_URL.URL_NSP:=_kart_url.wyk_prz1_D
         ?}
      ?}
   || KART_URL.URL_NSP:=KART_URL.URL_NSPG:=0;
      KART_URL.DATA_NSP:=_d0
   ?};
   {? ~_obnizDoLimitu & _lim_wyk.dodWykorzystany+KART_URL.URL_NSP>KST.LIM_NSP
   || KART_URL.URL_NSP-=_lim_wyk.dodWykorzystany+KART_URL.URL_NSP-KST.LIM_NSP
   ?};
   {? _lim_wyk.dodRazem+KART_URL.URL_NSP>KST.LIM_NSP
   || KART_URL.URL_NSP-=_lim_wyk.dodRazem+KART_URL.URL_NSP-KST.LIM_NSP
   ?};

   KART_URL.URL_DOD:=
      {? _uzu_url
      || _tm:=P.NAB_URL~2+1;
         _td:=date(P.NAB_URL~1+{? _tm>=13 || _tm-=12; 1 ?},&_tm,1);
         {? _uzu_od<_td
         || _td:=_uzu_od
         ?};
         exec('wymiar_urlopu','kart_url',_wym,_uzu_url,&_td,_uzu_od)
      ?}+
      {? _dod_url
:        Urlop proporcjonalny zatrudnienie lub zwolnienie w trakcie roku i nie pierwszy urlop według starych zasad.
      || {? _url=2 & ( (P.DZA~1=_beg~1 & _beg<P.DZA) | (P.DZ~1=_end~1 & P.DZ<_end) )
         || _dodn:=exec('wymiar_urlopu','kart_url',_wym,_pod_url+_dod_url,_d1,_d2);
            _lim_wyk.zwLimit+=_dodn;
            {? _lim_wyk.zwLimit<_dodn+_lim_wyk.zwWykorzystany
            || _dodn-=(_dodn+_lim_wyk.zwWykorzystany)-_lim_wyk.zwLimit;
               {? _dodn<0
               || _dodn:=0
               ?}
            ?};
::          jeżeli pracownikowi przysługuje urlop naukowy, to jest on już wliczony w LIM_AKT
            _dodn-(KART_URL.LIM_AKT-{? _lmc.uip || _url_n || 0 ?})

         || _dod:=
:              Wymiar urlopu uzupełniającego jest ustalany jako różnica między nowym i starym wymiarem.
               exec('wymiar_urlopu','kart_url',_wym,_pod_url+_dod_url,_beg,_end)
               -exec('wymiar_urlopu','kart_url',_wym,_pod_url,_beg,_end);
            {? _dod_url<_dod
            || _dod:=_dod_url
            ?};
            _dod
         ?}
      ?};

   _kart_url.wyk_prz1_D-=KART_URL.URL_NSP;
   _kart_url.wyk_prz1-=KART_URL.URL_DOD;
   {? _kart_url.wyk_prz1<0 || _kart_url.wyk_prz1:=0 ?};
   {? _kart_url.wyk_prz1_D<0 || _kart_url.wyk_prz1_D:=0 ?};

:  Podwyższanie limitu urlopu do ilości wykorzystanej, gdy występują nieobecności wpływające na wymiar urlopu

   {? KART_URL.LIM_AKT<_kart_url.wyk_prz1
   || {? _kart_url.wyk_prz1>_lim_akt
      || KART_URL.LIM_AKT:=_lim_akt
      || KART_URL.LIM_AKT:=_kart_url.wyk_prz1
      ?}
   ?};
   {? KART_URL.URL_DOD>0 & KART_URL.LIM_AKT+KART_URL.URL_DOD<_kart_url.wyk_prz1+KART_URL.URL_DOD
   || KART_URL.URL_DOD:=_kart_url.wyk_prz1+KART_URL.URL_DOD-KART_URL.LIM_AKT
   ?};
   {? KART_URL.LIM_AKT<0 || KART_URL.LIM_AKT:=0 ?};
   {? KART_URL.LIM_ZALG=0
   || KART_URL.LIM_ZALG:=KART_URL.LIM_ZAL*_norma
   ?};
   KART_URL.LIM_AKTG:=KART_URL.LIM_AKT*_norma;
   KART_URL.URL_DODG:=KART_URL.URL_DOD*_norma;

   {? KART_URL.URL_NSP<0 || KART_URL.URL_NSP:=0 ?};
   {? KART_URL.NSP_ZALG=0
   || KART_URL.NSP_ZALG:=KART_URL.NSP_ZAL*_norma
   ?};
   KART_URL.URL_NSPG:=KART_URL.URL_NSP*_norma;

   {? _url<>2 | KART_URL.UWAGI=''
   || KART_URL.UWAGI:=_Uwagi
   ?};
   KART_URL.DATA_DOD:=
      {? ~KART_URL.URL_DOD
      || _d0
      |? _uzu_od<>_d0
      || _uzu_od
      || _dod_od
      ?};
   KART_URL.STATUS:='A'
?};
&_oz_test;
&_mcyEtat;
&_mcyStaz;
&_mcyStazTab;

:  ┌────────────────────────────────────────────────────────┐
:  │   zlicz wykorzystane urlopy z kartoteki nieobecności   │
:  └────────────────────────────────────────────────────────┘
_wyk:=exec('wykorzystany','kart_url',date(_rok,12,31),0,1);
_lim_wyk.ekwiwalent+=_wyk.D;
_lim_wyk.ekwiwalentGodz+=_wyk.G;
_lim_wyk.dodWykorzystanyDni+=_wyk.DD;
_lim_wyk.dodWykorzystanyGodz+=_wyk.DG;
obj_del(_wyk);
&_wyk;

: Zlicz ekwiwalent.
_fnorma:=exec('norma_fml','godziny');
H_UM.cntx_psh();
H_UM.index('OD');
H_UM.prefix(P.ref());
{? H_UM.find_le(date(_rok,12,31))
|| {!
   |? {? H_UM.DO~1=_rok & (H_UM.EKW | H_UM.EKW_NSP)
      || _lim_wyk.ekwiwalent+=H_UM.EKW/_fnorma(H_UM.DO);
         _lim_wyk.ekwiwalentGodz+=H_UM.EKW;
         _lim_wyk.dodWykorzystanyDni+=H_UM.EKW_NSP/_fnorma(H_UM.DO);
         _lim_wyk.dodWykorzystanyGodz+=H_UM.EKW_NSP
      ?};
      H_UM.prev() & H_UM.DO~1=_rok
   !}
?};
H_UM.cntx_pop();
&_fnorma;

KART_URL.URL_WYK:=_lim_wyk.zwPierwszy+_lim_wyk.ekwiwalent$2;
KART_URL.URL_WYKG:=_lim_wyk.zwPierwszyGodz+_lim_wyk.ekwiwalentGodz;
KART_URL.NSP_WYK:=_lim_wyk.dodWykorzystanyDni$2;
KART_URL.NSP_WYKG:=_lim_wyk.dodWykorzystanyGodz;

:: zwiększenie aktualnego wymiaru
_arg:=obj_new('P','OSOBA','ROK');
_arg.P:=P.ref();
_arg.OSOBA:=P.OSOBA;
_arg.ROK:=_rok;
_val:=Plugin.run('PKD_AKT_URL_001',_arg);
{? type_of(_val)=type_of(0)
|| _val:=_val$0;
   KART_URL.LIM_AKT+=_val;
   KART_URL.LIM_AKTG+=_val*_norma
?};

exec('kart_url_aktualizuj','kart_url')


\aktualizuj_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła aktualizuje/zakłada kartę urlopową dla bieżącego pracownika na wskazany rok kalendarzowy.
::       UWAGA: obliczenia maja sens wyłącznie dla współpracowników z formą współpracy P.
::   WE:  _a  [INTEGER] - Rok kalendarzowy.
::       [_b] [INTEGER] - Tryb zakładania karty?
::                      0 - Nie [domyślnie].
::                      1 - Tak.
::       [_c] [INTEGER] - Aktualizacja karty urlopowej poprzedzona aktualizacją stażu?
::                      0 - Nie [domyślnie].
::                      1 - Tak.
::       [_d] [INTEGER] - Aktualizacja karty urlopowej również w następnych latach?
::                      0 - Nie [domyślnie].
::                      1 - Tak.
::   WY: ~~
::  OLD: \akt_dane/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_tn:=type_of(0);

{? var_pres('_a')=_tn
|| _rok:=_a
|| FUN.error('"%1" - nieprawidłowy argument wywołania.\n%2'@ ['_a','\\aktualizuj_rok/kart_url.fml']);
   return(0)
?};
_new:=var_pres('_b')=_tn & _b;

KART_URL.cntx_psh();
KART_URL.index('PRAC_ROK');
KART_URL.prefix(P.ref());
{? exec('kart_url_dostepna','kart_url',_rok,1,0)
|| {? {? ~KART_URL.find_key(_rok) & _new
      || KART_URL.blank();
         KART_URL.ROK:=_rok;
         KART_URL.add()
      |? KART_URL.find_ge(_rok)
      || _rok:=KART_URL.ROK
      ?}
   || {? var_pres('_c')=_tn & _c
      || exec('oblicz','staz',1,,_rok)
      ?};
      exec('oblicz','kart_url',_rok);
      KART_URL.put(,exec('lic','#b_domain','POR'));
      {? ~_new | (var_pres('_d')=_tn & _d)
      || exec('aktualizuj_rok','kart_url',_rok+1)
      ?}
   ?}
?};
KART_URL.cntx_pop();
~~


\aktualizuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła aktualizuje kartę urlopową dla wskazanego pracownika/osoby. Aktualizowana jest karta z BIEŻĄCEGO roku
::       i z następnych. Obliczenia dotyczą tylko formy współpracy "P".
::   WE:  _a  [REFERENCE] - Wskazanie pracownika lub osoby.
::   WY:
::  OLD: \czy_akt/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) & _a<>null() & (ref_tab(_a)=P | ref_tab(_a)=OSOBA)
|| _TAB:=ref_tab(_a);
   _ref:=_a
|| FUN.error('"%1" - nieprawidłowy argument wywołania.\n%2'@ ['_a','\\aktualizuj/kart_url.fml']);
   return(0)
?};

_d0:=date(0,0,0);
_br:=date()~1;
_ret:=0;
_TAB.cntx_psh();
_TAB.prefix();
{? _TAB.seek(_ref)
|| F_ZATR.cntx_psh();
   {? _TAB=P & P.F_ZATR().KOD='P'
   || _rok:={? P.DZ<>_d0 & P.DZ~1<_br || P.DZ~1 || _br ?};
      exec('aktualizuj_rok','kart_url',_rok,,1,1);
      _ret:=1
   |? _TAB=OSOBA
   || P.cntx_psh();
      P.index('PRACOSOB');
      P.prefix(exec('ref_firma','ustawienia'),'P',OSOBA.ref());
      {? P.first()
      || {!
         |? _rok:={? P.DZ<>_d0 & P.DZ~1<_br || P.DZ~1 || _br ?};
            exec('aktualizuj_rok','kart_url',_rok,,1,1);
            P.next()
         !}
      ?};
      P.cntx_pop();
      _ret:=1
   ?};
   F_ZATR.cntx_pop()
|| FUN.error('"%1" - nieprawidłowy argument wywołania.\n%2'@ ['_a','\\aktualizuj/kart_url.fml'])
?};
_TAB.cntx_pop();
_ret


\kart_url_update_add_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła aktualizuje kartę urlopową po dodaniu nieobecności.
::   WE: [_a] [INTEGER] - Nieobecność z przełomu roku.
::   WY:
::  OLD: \nieo_dod/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_zm_rok:=var_pres('_a')=type_of(0) & _a;
{? _zm_rok | N.OD$0+4='0101' | N.NB=KST_PAR.URLOP | N.NB=KST_PAR.URL_CHOR |
   __RUB.sys_attr(N.NB,1113) | __RUB.sys_attr(N.NB,1114) |
:: Nieobecności rozpoczynające sie 1 I mogą sprawić, że pracownik nie nabywa prawa do urlopu wypoczynkowego, a roczny
:: wymiar będzie proporcjonalny.
   exec('pomniejsza_wymiar','kart_url',N.NB,N.OD)
|| {! _lp:=0 .. _zm_rok
   |! _rok:=N.OD~1+_lp;
      _new:=~exec('kart_url_find','kart_url',_rok);
      exec('aktualizuj_rok','kart_url',_rok,_new,0,1)
   !}
?}


\kart_url_update_put_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła aktualizuje kartę urlopową po poprawieniu nieobecności.
::   WE: _a [ARRAY] - Tablica z elementami nazwanymi zawierająca wartości z przed zmiany
::                    (patrz \n_params/nieobecność.fml).
::   WY:
::  OLD: \nieo_pop/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_org:=_a;
_przed:=_org.OD$0+4='0101' | _org.NB=KST_PAR.URLOP | _org.NB=KST_PAR.URL_CHOR | __RUB.sys_attr(_org.NB,1113) |
   __RUB.sys_attr(_org.NB,1114) | exec('pomniejsza_wymiar','kart_url',_org.NB,_org.OD);
_po:=N.OD$0+4='0101' | N.NB=KST_PAR.URLOP | N.NB=KST_PAR.URL_CHOR | __RUB.sys_attr(N.NB,1113) |
   __RUB.sys_attr(N.NB,1114) | exec('pomniejsza_wymiar','kart_url',N.NB,N.OD);
{? _przed | _po
|| {? _przed & (_org.OD~1<N.OD~1 | ~_po)
   || exec('aktualizuj_rok','kart_url',_org.OD~1,1,0,1)
   ?};
   {? _po
   || _new:=~exec('kart_url_find','kart_url',N.OD~1);
      exec('aktualizuj_rok','kart_url',N.OD~1,_new,0,1)
   ?}
?}


\kart_url_update_del_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła aktualizuje kartę urlopową po usunięciu nieobecności.
::   WE: _a [ARRAY] - Tablica z elementami nazwanymi zawierająca wartości z przed zmiany.
::                     (patrz \n_params/nieobecność.fml).
::   WY:
::  OLD: \nieo_usu/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_org:=_a;
{? _org.OD$0+4='0101' | _org.NB=KST_PAR.URLOP | _org.NB=KST_PAR.URL_CHOR |
   __RUB.sys_attr(_org.NB,1113) | __RUB.sys_attr(_org.NB,1114) |
:: Nieobecności rozpoczynające sie 1 I mogą sprawić, że pracownik nie nabywa prawa do urlopu wypoczynkowego, a roczny
:: wymiar będzie proporcjonalny.
   exec('pomniejsza_wymiar','kart_url',_org.NB,_org.OD)
|| exec('aktualizuj_rok','kart_url',_org.OD~1,0,0,1)
?}


\kart_url_show_os_szkol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: Formuła przeprowadza symulację wyliczeń karty urlopowej dla sytuacji, w której nie są pomijane żadne informacje
::       o ukończonych szkołach i dla wariantu określonego aktualnie przez operatora.
::   WE:
::   WY: ~~
::  OLD: \prac_szk/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_rok:=date()~1;

OS_SZKOL.cntx_psh();
URLNFO.blank();
KART_URL.index('PRAC_ROK');
KART_URL.prefix(P.ref(),_rok);
{? ~KART_URL.first()
|| KART_URL.blank
?};

do();
OS_SZKOL.index('OD');
OS_SZKOL.prefix(OSOBA.ref());
{? OS_SZKOL.last()
|| {!
   |? OS_SZKOL.POMIN:={? date(_rok,1,1)<=OS_SZKOL.OD | _rok<OS_SZKOL.DO~1 || 'T' || 'N' ?};
      OS_SZKOL.put();
      OS_SZKOL.prev()
   !}
?};
exec('oblicz','staz',1,,_rok);
exec('oblicz','kart_url',_rok,1);
URLNFO.WSZ_AKT:=KART_URL.LIM_AKT;
URLNFO.WSZ_DOD:=KART_URL.URL_DOD;
URLNFO.WSZ_DATA:=KART_URL.DATA_DOD;
undo();
end();

OS_SZKOL.cntx_pop();

exec('oblicz','staz',1,,_rok);
exec('oblicz','kart_url',_rok,1);
URLNFO.WYB_AKT:=KART_URL.LIM_AKT;
URLNFO.WYB_DOD:=KART_URL.URL_DOD;
URLNFO.WYB_DATA:=KART_URL.DATA_DOD;

URLNFO.hdr_edit('Urlop wyliczony na rok %1'@ [$_rok]);
URLNFO.display();
~~


\kart_url_usun_nadmiarowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.10]
:: OPIS: Usuwa nadmaiarowe karty urlopowe bieżącego pracownika. Nadmiarowe, czyli te dotyczące lat po dacie zwolnienia.
::   WE: [_a] [INTEGER] - Tryb wsadowy (pozbawiony komunikatów):
::          0 - Nie (komunikaty będą wyświetlane) [domyślnie].
::          1 - Tak (bez komunikatów).
::  OLD: \wer_nadm/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
: Pracownik wciąż jest zatrudniony
{? P.DZ=date(0,0,0)
|| return()
?};

_batch:=var_pres('_a')=type_of(0) & _a;

_rok:=P.DZ~1;

KART_URL.cntx_psh();
KART_URL.index('PRAC_ROK');
KART_URL.prefix(P.ref());
{!
|? KART_URL.find_ge(_rok+=1)
|! {? _batch |
      FUN.ask(
         'Dla pracownika %1 zwalnianego w roku %2\n'
         'znaleziono kartę urlopową na rok %3.\n\n'
         'Czy usunąć nadmiarową kartę urlopową?'@
         [P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE,$(P.DZ~1),$KART_URL.ROK]
      )
   || KART_URL.del()
   ?}
!};
KART_URL.cntx_pop();

~~


\wymzatf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MKG [12.40]
:: OPIS: Dla wyliczenia wymiaru urlopu podstawowego i dodatkowego z uwzglednieniem wymiaru zatrudnienia
::       bez zmniejszania o nieobecnosci zmniejszajacych wymiar urlopu (urlopy bezplatne, wychowawcze, NN, ...).
::   WE: _a - poczatek roku
::       _b - koniec roku
::       _c - rodzaj rozpatrywanego urlopu
::       _d - data dla testu kontynuacji zatrudnienia
::   WY: Tablica z wymiarem zatrudnienia na kazdy miesiac badanego przdzialu (_a,_b). Ostatnim elementem tablicy
::       jest rok poczatku badanego okresu. Jezeli za dany miesiac urlop nie przysluguje - tablica zawiera 0 (zamiast
::       wymiaru).
::----------------------------------------------------------------------------------------------------------------------
_off:=_b~1-_a~1;
_size:=12*(_off+1);

_msc:=obj_new(_size+1);
{! _lp:=1.._size+1 |! _msc[_lp]:=0 !};
_msc[_size+1]:=_a~1;

_d0:=date(0,0,0);

H.cntx_psh();
H.index('_HISTKOD');
H.prefix(P.ref(),'Z');
{? H.find_le(_b) & (H.DO=_d0 | _a<=H.DO)
|| {!
   |? _od:={? H.OD<_a || _a || H.OD ?};
      _do:={? _b<H.DO || _b || H.DO ?};
      _beg:=
         {? _off || (_od~1-_a~1)*12 ?}+_od~2+
         {? _c=2 & _a<H.OD & date(H.OD~1,H.OD~2,1)=date(P.DZA~1,P.DZA~2,1) & H.OD~3<>1
         || exec('kontynuacja_zatrudnienia','kart_url',_d)
         ?};
      _end:={? H.DO=_d0 | _b<H.DO
            || _b~2+{? _off || _off*12 ?}
            || H.DO~2+{? _off || (_do~1-_a~1)*12 ?}
            ?};
      {! _lp:=_beg.._end
      |!
         _wym:={? 2004<=_b~1
               || H.cntx_psh();
                  H.index('_HISTKOD');
                  H.prefix(P.ref(),'Z');
                  _rok:=_a~1; _mc:=_lp;
                  {? _mc>12 || _rok+=1; _mc-=12 ?};
                  {? H.find_le(date(_rok,_mc,1))
                  || _wym:=H.RWY
                  || H.first;
                     _wym:=H.RWY
                  ?};
                  H.cntx_pop();
                  _wym
               || 1
               ?};
         {? _msc[_lp]<_wym || _msc[_lp]:=_wym ?}
      !};
      H.prev() & _a<=H.DO
   !}
?};
H.cntx_pop();
_msc


\ile_nieob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [12.51]
:: OPIS: ER/WRT/XP/19.42/2002/0011 Sprawdza czy pojawiły się bezpłatne nieobecności w zadanym okresie dla pracownika
::       wykorzystywana przy przesuwaniu daty prawa nabycia pierwszego urlopu
::   WE: _a - koniec okresu (data prawa do nabycia urlopu)
::   WY: Liczba dni
::----------------------------------------------------------------------------------------------------------------------
N.cntx_psh();
_url_od:=_a;

:: dla pierwszego urlopu _url_od powinien być większy od daty zatrudnienia
_od_pierwszego_dnia:=P.DZA=_url_od;

N.index('NIPRACNB');
N.prefix('N',P.ref(),2);
{? N.first()
|| _od:=P.DZA;
   _year_end:=date(P.DZA~1,12,31);
   _do:={? P.DZ=#0 | P.DZ>_year_end || _year_end || P.DZ ?};
   _dni_nab:=obj_new((_do - _od)+1);
   _dni_nab_len:=obj_len(_dni_nab);
   {! _ind:=1 .. _dni_nab_len
   |! _dni_nab[_ind]:=1
   !};
   {!
   |? {? N.OD<=_do & _od<=N.DO
      || _n_od:={? N.OD<_od || _od || N.OD ?};
         _n_do:={? _do<N.DO || _do || N.DO ?};
         {! _ind:=#_n_od .. #_n_do
         |! _dni_nab[_dni_nab_len-(_do-#_ind)]:=0
         !};
         N.next()
      || 0
      ?}
   !};

   _tab_pie:=tab_tmp(,
      'M','INTEGER','Miesiąc nabycia',
      'D','DATE','Data nabycia'
   );
   _start:=_do-_dni_nab_len+1;
   _miesiac:=0;
   {! _ind:=1 .. _dni_nab_len
   |! _nab:=_dni_nab[_ind];
      {? _nab
      || _miesiac+=_nab
::       przesuwamy datę nabycia urlopu jeżeli od pierwszego dnia mamy nieobecność bezpłatną
      || {? _od_pierwszego_dnia & ((_start+_ind-1)=_url_od) || _url_od+=1 ?}
      ?};
      {? _miesiac=30
      || _miesiac:=0;
         _tab_pie.D:=_start+_ind-1;
         _tab_pie.M:=_tab_pie.D~2;
         _tab_pie.add()
      ?}
   !};
   {? _tab_pie.first() & _tab_pie.D>_url_od & ~_od_pierwszego_dnia
   || _url_od:=_tab_pie.D
   ?}
?};
N.cntx_pop();
_url_od


\zmiana_umowy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Analiza czy nastąpiła zmiana umowy w podanym zakresie dat (daty muszą być z tego samego roku)
::   WE: _a [REFERENCE] - wskazanie na pracownika
::       _b [DATE]      - data od
::       _c [DATE]      - data do
::       _d [DATE]      - data zatrudnienia pracownika
::   WY: obiekt z informacją czy w danym miesiącu nastąpiła zmiana umowy
::       (w przypadku błędnych parametrów w polu nr 13 będzie wartość -1)
::----------------------------------------------------------------------------------------------------------------------
:: zawsze tworzymy tablicę na cały rok + 1 pole informacyjne
_zm_um:=obj_new(13); {! _ind:=1..13 |! _zm_um[_ind]:=0 !};
_zm_um[13]:=-1;

_p_ref:={? var_pres('_a')=type_of(null) || _a || return(_zm_um) ?};
   _od:={? var_pres('_b')=type_of(#0)   || _b || return(_zm_um) ?};
   _do:={? var_pres('_c')=type_of(#0)   || _c || return(_zm_um) ?};
  _dza:={? var_pres('_d')=type_of(#0)   || _d || return(_zm_um) ?};

:: sprawdzenie musi być robione dla zakresu dat należących do tego samego roku
{? _od~1<>_do~1 || return(_zm_um) ?};

_sql:=''+"select /*+MASK_FILTER(H_UM,'h_um')*/ OD from @H_UM where
          H_UM.P=:_a and
          H_UM.OD>=to_date(:_b) and
          H_UM.OD<=to_date(:_c)";

_H_UM:=sql(_sql,_p_ref,_od,_do);

:: w polu 13 będzie przechowywana informacja o tym, czy nastąpiła zmiana umowy w badanym zakresie
_zm_um[13]:=_H_UM.size()>1 | (_H_UM.first() & _H_UM.OD>_dza);
{? _zm_um[13]
|| {? _H_UM.first()
   || {!
      |? {? _H_UM.OD>@.P.DZA
         || _zm_um[_H_UM.OD~2]:=1
         ?};
         _H_UM.next()
      !}
   ?}
?};
_zm_um

:Sign Version 2.0 jowisz:1045 2024/01/02 14:23:33 366d5989e02931e893e128abc8cf7ce0f7ad0f18aa550eeb80ad2de91dd6024a651ca882270a4819401a68cfbc16ef6830e56a620d242b565d49eb7991a02a04126bd70c06c304b052a4a8b468eb657c0a9cb5f5d8c941ae5a079e056f3f685a0228bd70d350bbea0104d971b51d4e6fa489c8d294c325e0cfaeb9c6d1f0157d
