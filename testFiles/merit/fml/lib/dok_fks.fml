:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: dok_fks.fml
:: Utworzony: 11.03.2015 [17.00]
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły do obsługi dokumentów księgowych
::======================================================================================================================


\spr_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Sprawdza czy dokument powstal z istniejacego dokumentu dla wielu jednostek ksiegowych
::   WY: 1 - istnieje zrodlowy dokument, 0 - nie istnieje
::  OLD: \spr_mod/akcept.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
DOK.cntx_psh();
{? type_of(ref_tab(DOK.DOKZRODL))<>0 & ref_tab(DOK.DOKZRODL)=DOK & +DOK.DOKZRODL=16
|| DOK.use(8+DOK.DOKZRODL); DOK.prefix();
   {? DOK.seek(BB.sqlint(8-DOK.DOKZRODL),8+DOK.DOKZRODL)
   || {? DOK.DOK_REJ().M_ODD='T'
      || _ret:=1
      ?}
   ?}
?};
DOK.cntx_pop();
_ret


\dokaut
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Sprawdza czy pozycja oparta na dokumencie automatycznym.
::       Sprawdzenie dla aktualnego DOK.ref
::   WY: (1/0)
::  OLD: \dokaut/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_sys:={? +DOK.ZAR & DOK.ZAR*':' || (DOK.ZAR*':'-1)+DOK.ZAR || '' ?};
+DOK.DOKZRODL & +_sys &
( _sys='LSP' & +DOK.DOKZRODL>3
  | _sys='LZK' & +DOK.DOKZRODL>3
  | _sys='LMG' & +DOK.DOKZRODL>3
  | _sys='PPL' & +DOK.DOKZRODL>3
  | _sys='FST' & +DOK.DOKZRODL>0
  | _sys='LUM' & +DOK.DOKZRODL>4
  | _sys='KAS' & 3+DOK.DOKZRODL='krp'
  | _sys='KAS' & (3+DOK.DOKZRODL='kpo' | 3+DOK.DOKZRODL='kpd')
  | _sys='FKS' & (4+DOK.DOKZRODL='UDTR'
                   | DOK.DOKZRODL*'row_nag'
                   | DOK.DOKZRODL*'par_nag'
                   | DOK.DOKZRODL*'ser_nag'
                   | 2+DOK.DOKZRODL='pw'
                   | 8+DOK.DOKZRODL='skid_hzl'
                   | 4+DOK.DOKZRODL='doku'
                  )
)


\dat_not
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: procedura sprawdza, czy data jest z aktualnego roku bilansowego
::   WE: _a - data
::       _b - rok (opcja)
::  OLD: \dat_not/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
_rok:={? _=2 || _b || SSTALE.AR ?};
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(_rok);
{? OKRO_F.first() & OKRO_F.next() || _pocz:=OKRO_F.POCZ ?};
{? OKRO_F.last() & OKRO_F.prev() || _kon:=OKRO_F.KON ?};
OKRO_F.cntx_pop();
{? _a<_pocz | _a>_kon
|| 0
|| 1
?}


\fdokwys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Wypelnia puste pole wystawcy dokumentu (DOK.WYS), formy platnosci (DOK.SP_PL) i termin platnosci (DOK.D3)
::  OLD: \fdokwys/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.WYS=null & SLOSLU.SLSLU<>''
|| SLU.index('NAZ'); SLU.prefix(SLOSLU.SLSLU);
   RS.cntx_psh(); RS.index('RS'); RS.prefix();
   {? SLU.first() & RS.find_key(SLU.WZ) & RS.TAB='KH'
   || _c:=($('SLO.KOD:='+RS.TAB+'.'+RS.KOD))();
      {? SLO.index('SL'); SLO.prefix(SLU.ref());
         SLO.find_key(_c) & _c=SLO.KOD
      || DOK.WYS:=SLO.ref()
      |? (var_pres('_a')>0 &
          FUN.ask('Nie znaleziono pozycji o '+{? _a='nip' || 'symbolu NIP "'+KH.NIP || 'skrócie "'+KH.SKR ?}+
                  '"\nw słowniku "'+SLOSLU.SLSLU+'". Dodać do słownika?')) & exec('ten_slo','slo_slu')<>2
      || DOK.WYS:=SLO.ref()
      || DOK.WYS:=null
      ?}
   ?};
   RS.cntx_pop()
?};
{? DOK.SP_PL=null & XINFO.SLP<>null & DOK_REJ.PR<>'T'
|| DOK.SP_PL:=KH.PLATNOSC; exec('be_dplat','dok_fks')
?}


\be_dplat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGO
:: OPIS: Przed redakcją daty płatności dokumentu VAT
::  OLD: \be_dplat/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('be_dplat','dok_fks1')


\load_tp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [2008]
:: OPIS: Przywraca ustawienia terminu platnosci (DOK.D3)
::  OLD: \load_tp/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('pamietaj')>100
|| {? pamietaj[1]=DOK.DTO & pamietaj[2]=DOK.SP_PL
   || DOK.D3:=pamietaj[3]; 0
   || exec('save_tp','dok_fks'); 1
   ?}
|| 1
?}


\save_tp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [2008]
:: OPIS: Zapamietuje zmienne zwiazane z ustawieniami terminu platnosci (DOK.D3)
::  OLD: \save_tp/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('pamietaj')<100 || VAR_DEL.delete('pamietaj'); pamietaj:=obj_new(3) ?};
pamietaj[1]:=DOK.DTO;
pamietaj[2]:=DOK.SP_PL;
pamietaj[3]:=DOK.D3;
1


\poz_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Przejście z nagłówka do pozycji dokumentu źródłowego.
::       Funkcja wywoływana na akcje Pozycje w okienku wertowania tabeli DOK
::  OLD: \poz_dok/dok_zrd.fml
::   WE: [_a] - tylko podgląd
::----------------------------------------------------------------------------------------------------------------------
{? var_press('PozView')<0 || PozView:=var_press('_a')>0 & _a ?};
{? (DOK.WSK_XD='T' & DOK.A='T' & DOK.ZP='T' & PAR_SKID.get(107)<>'T' & DOK.r_lock(0,1)) | DOK.r_lock(1,1)
|| exec('odd_filtr','fst');
   korekta:=exec('czy_korekta','dok_fks');
   KA.WAL_DOK:=DOK.JORG;
   DOK.get(); REJ.cntx_psh();
   SLO.win_sel('ONE'); SLO.win_dict('ONE');
   _maska:=SSTALE.AR().KOD+form(SSTALE.AO().NR,-2);
   P_V.use('p_v_'+_maska);
   P_W.use('p_w_'+_maska);
   VPOZ.use('pozv'+_maska);
   FAK.use('fak_'+_maska);
   VROZ.use('povr'+_maska);
   VPOW.use('pozw'+_maska);
   SKIDXD.use('skxd'+_maska);
   {? DOK.DOK_REJ().M_ODD='T'
   || POZ.index('DOK_MOD')
   || POZ.index('DOK')
   ?};
   POZ.prefix(DOK.ref);
   VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref);
   SKIDXD.index('DOKDSP'); SKIDXD.prefix(DOK.ref());
   POZ.first(); VPOZ.first; SKIDXD.first();
   ROZNE.GRVAT:=null;
   exec('bl_grvat','dok_fks');
   ROZNE.WCLO:=ROZNE.WARW:=0;
   ROZNE.KRS2:=exec('ust_krs2','dok_fks',DOK.WAL);
   ROZRACH.TABELA:='POZ';
   ROZNE.KRS:=ROZNE.WCLO:=0;
   exec('poz_dnd','dok_fks');
   __PozTabs:=0;
   {? ~Perm.hasFull('FJKS')
   || POZ.fld_fml('ODD','AFTER_EDIT',"
         {? KS.ROZR='R' & POZ.ODD=null
         || FUN.emsg('Operator nie posiada uprawnień do wszystkich jednostek księgowych.'
                    '\nNależy wypełnić odpowiednio pole jednostka księgowa.'@);
            0
         |? POZ.ODD<>null
         || {? exec('usr_fjks','b_perm',POZ.ODD().OD)
            || 1
            || FUN.emsg('Brak uprawnień do wybranej jednostki księgowej'@);
               0
            ?}
         || 1
         ?}
      ")
   ?};
   exec('set_win_poz','dok_fks1',DOK.DOK_REJ().SLO().KOD);
   exec('okna_vr','dok_fks');
   exec('grp_sel_poz','dok_fks1');
   REJ.cntx_pop();
   DOK.r_unlock();
   VAR_DEL.delete('__ACTSEL','__ACTACT','__ACTDOM','__PozTabs','korekta')
|| FUN.info('Dokument obsługuje inny operator.'@)
?};
{? var_pres('ERP_fks')<=0 || VAR_DEL.delete('PozView') ?}


\poz_hidactions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ukrywanie akcji w POZ
::----------------------------------------------------------------------------------------------------------------------
{? ~DOK.E_DOC || __ACTACT:='E'+__ACTACT+'E' ?};
{? var_pres('__ACTSEL')>0 & DOK.DOK_REJ().PR<>'T'
|| __ACTACT:='N'+__ACTACT
?};
{? ~exec('jest_auto','dok_fks','P') || __ACTACT:='A'+__ACTACT+'A' ?};
{? PAR_SKID.get(80)='N' | ~exec('jest_auto','dok_fks','K') || __ACTACT:='T'+__ACTACT+'T' ?};
{? exec('spr_mod','dok_fks')
|| __ACTACT:='ADvpUF'+__ACTACT+'ADrF'
?};
_hid:={? -DOK.A='t' | var_press('PozView')>0 & PozView
      || ':Z'
      |? POZ.size=0
      || ':ZM'
      || ''
      ?};
_poz_grey_act:=POZ.actions_grayed(POZ.win_sel('?'));
{? _hid=''
|| _hid:=_poz_grey_act
|? _poz_grey_act*':'
|| _hid:=STR.gsub(_poz_grey_act,':',_hid)
?};
POZ.actions_grayed(__ACTSEL,_hid);
1


\ok_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2006]
:: OPIS: Ustawia okienko SEL lub powiazane dla tabeli POZ
::  OLD: \ok_sel/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(80)='T'
|| _w:=DOK.DOK_REJ().SLO().KOD;
   _war:=DOK.WSK_XD<>'T' & (var_press('PozView')<=0 | ~PozView);
   {? _w='VAT' | _w='SAD' | _w='WEW'
   || {? _war
      || _act:='';
         {? PAR_SKID.get(211)='T' || _act:='ZM'+_act+':ZM' ?};
         SKIDXD.actions('WERV',_act,'d:d',1);
         SKIDXD.actions_grayed('WERV')
      || _act:='duApR:dr';
         {? PAR_SKID.get(211)='T' || _act:='ZM'+_act+'ZM' ?};
         SKIDXD.actions('WERV',_act,,1);
         SKIDXD.actions_grayed('WERV','Z:Z')
      ?}
   || {? _war
      || _act:='';
         {? PAR_SKID.get(211)='T' || _act:='ZM'+_act+':ZM' ?};
         SKIDXD.actions('WER',_act,'d:d',1);
         SKIDXD.actions_grayed('WER')
      || _act:='duApR:dr';
         {? PAR_SKID.get(211)='T' || _act:='ZM'+_act+'ZM' ?};
         SKIDXD.actions('WER',_act,,1);
         SKIDXD.actions_grayed('WER','Z:Z')
      ?}
   ?}
?}


\ok_vsel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2006]
:: OPIS: Ustawia okienko SEL lub powiazane dla tabeli POZ
::   WE: _a - pokazywać GTU
::  OLD: \ok_vsel/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
_war:=DOK.WSK_XD<>'T' & (var_press('PozView')<=0 | ~PozView);
{? PAR_SKID.get(211)='T' || _actz:='ZM' || _actz:='' ?};
{? var_pres('_a')>0 & _a
|| _poz:={? DOK.DOK_REJ().M_ODD='T' || 'VSELM' || 'VSEL' ?};
   _grp:=POZ.grp_make('',,'#pozsel4');
   POZ.grp_sel(_grp,,_poz,'Pozycje',,,,,"
      _poz:={? DOK.DOK_REJ().M_ODD='T' || 'VSELM' || 'VSEL' ?};
      POZ.win_sel(_poz)
   ",,,,'maximized');
   {? PAR_SKID.get(80)='T'
   || {? _war
      || SKIDXD.actions('WERV',_actz+':'+_actz,'d:d')
      || SKIDXD.actions('WERV',_actz+'duApR:dr'+_actz)
      ?};
      POZ.grp_sel(_grp,SKIDXD,'WERV','Podziały controllingowe',"",,,,"exec('beobskxd','control')")
   ?};
   exec('gtu4dok','jpk_v',POZ,_grp,,,,1);
   POZ.win_sel(_grp)
|? PAR_SKID.get(80)='T'
|| _gray:='';
   SKIDXD.win_sel('WERV');
   {? _war
   || SKIDXD.actions('WERV',_actz+':'+_actz,'d:d')
   || SKIDXD.actions('WERV',_actz+'duApR:dr'+_actz);
      _gray:='Z:Z'
   ?};
   SKIDXD.actions_grayed('WERV',_gray)
|| {? DOK.DOK_REJ().M_ODD='T'
   || POZ.win_sel('VSELM')
   || POZ.win_sel('VSEL')
   ?}
?}


\bl_grvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mariusz Godlewski
:: OPIS: Funkcja na wartość początkową grupy podatkowej dla pozycji dokumentu VAT
::  OLD: \bl_grvat/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ.cntx_psh(); VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
GR_VAT.cntx_psh();
_zwrot:={? ROZNE.GRVAT<>null & VPOZ.size()
        || ROZNE.GRVAT
        || {? DOK.RVAT().RVAT().GRVAT=null
           || null
           || GR_VAT.index('REJ_GR'); GR_VAT.prefix();
              {? GR_VAT.find_key(DOK.REJ,DOK.RVAT().RVAT().GRVAT)
              || GR_VAT.ref()
              || null
              ?}
           ?}
        ?};
GR_VAT.cntx_pop();
VPOZ.cntx_pop();
_zwrot


\ust_krs2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.50]
:: OPIS: Formula ustala kurs do wyceny VAT
::    WE: _a - waluta (SLO)
::    WY: kurs sredni
::  OLD: \ust_krs2/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.TRKS_V<>null
|| KRS.index('KRS_WAL');
   KRS.prefix(DOK.TRKS_V,_a);
   {? KRS.first() || KRS.SR || 0 ?}
|| 0
?}


\poz_dnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Ustawia d&d na tabeli POZ - zmiana kolejnosci i kopiowanie rekordow
::   WE: [_a] - jesli podano usuwa d&d
::  OLD: \poz_dnd/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=1 | DOK.A='T'
|| POZ.dnd_sel('SEL',,'records.POZ');
   POZ.dnd_sel('VSEL',,'records.POZ')
|| _fun:="exec('poz_dnd1','dok_fks')";
   POZ.dnd_sel('SEL',,'records.POZ',_fun);
   POZ.dnd_sel('VSEL',,'records.POZ',_fun)
?}


\okna_vr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula ustawia okienka redakcyjne dla tabeli VPOZ
::   WE: [_a] parametr opcjonalny (jesli 1 okienka ustawiane na akcje wyswietl)
::  OLD: \okna_vr/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~_ || _a:=0 ?};
{? DOK.KRAJ=exec('kod_pl','slo_slu')
|| DOK.RVAT().RVAT();
   DOK.DOK_REJ().SLO();
   _s:=RVAT.KVAT().SYM;
   {? SLO.KOD='WEW' || VPOZ.win_edit('RED_WEW')
   |? 4+_s='ImpT'
   || {? PAR_SKID.get(83)='T' || VPOZ.win_edit('IMP_PR') || VPOZ.win_edit('IMP') ?}
   || KA.ITAB:={? -menu_txt()<>'dołącz' | _a || exec('czy2tab','dok_fks') || 0 ?};
      _ile_wal:=exec('ile_wal','dok_fks');
      {? _ile_wal=1 & KA.ITAB=1
      || {? PAR_SKID.get(83)='T' || VPOZ.win_edit('RED_W2PR') || VPOZ.win_edit('RED_W2') ?}
      |? _ile_wal=1 & KA.ITAB=0
      || {? PAR_SKID.get(83)='T' || VPOZ.win_edit('RED_W_PR') || VPOZ.win_edit('RED_W') ?}
      || {? 1+_s='_'
         || {? PAR_SKID.get(83)='T' || VPOZ.win_edit('RED2_PR') || VPOZ.win_edit('RED2') ?}
         || {? PAR_SKID.get(83)='T' || VPOZ.win_edit('RED_PR') || VPOZ.win_edit('RED') ?}
         ?}
      ?}
   ?}
|| KA.WALUTA:=null; {? PAR_SKID.get(83)='T'
                    || VPOZ.win_edit('WW_PR')
                    || {? DOK_REJ.SLO().KOD='WEW' || VPOZ.win_edit('RED_WEW') || VPOZ.win_edit('WW') ?}
                    ?}
?}


\czy2krs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.50]
:: OPIS: Czy walutowa wycena pozycji VAT - inna niz dekretow
::   WE: _a - 1/0 - czy sprawdzac biezacy rekord VPOZ
::  OLD: \czy2krs/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~_ || _a:=0 ?};
_k2:={? _a || exec('czy2tab','dok_fks') || 0 ?};
{? _k2=0
|| VPOZ.cntx_psh();
   VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
   {? VPOZ.first()
   || {! |?
         _k2:=exec('czy2tab','dok_fks');
         _k2=0 & VPOZ.next()
      !}
   ?};
   VPOZ.cntx_pop()
?};
_k2 | (DOK.TRKS_V<>null & DOK.TKRS<>null &
      (DOK.TRKS_V<>DOK.TKRS | (DOK.TRKS_V=DOK.TKRS & DOK.TYPKRS<>'R')))


\czy2tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.50]
:: OPIS: Czy wypelniano wartosci do dekretacji w pozycji VAT
::  OLD: \czy2tab/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
(VPOZ.KURS_D$4<>0 & VPOZ.KURS$4<>VPOZ.KURS_D$4) |
(VPOZ.NETTO_D$2<>0 & VPOZ.NETTO$4<>VPOZ.NETTO_D$4) |
(VPOZ.VAT_D$2<>0 & VPOZ.VAT$4<>VPOZ.VAT_D$4) |
(VPOZ.BRUTTO_D$2<>0 & VPOZ.BRUTTO$4<>VPOZ.BRUTTO_D$4)


\ile_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.50]
:: OPIS: Formula zwraca czy w dokumencie (naglowek, dokumenty powiazane)
::       uzywana jest jedna waluta obca
::  WY: 0/1
::  OLD: \ile_wal/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
_wal:={? DOK.WAL & DOK.WAL<>FINFO.NAROD || KA.WALUTA:=DOK.WAL; 1 ?};
FAK.cntx_psh();
FAK.index('FAK');
FAK.prefix(DOK.ref());
{? FAK.first() || {!|? {? FAK.WAL<>null & FAK.WAL<>DOK.WAL || KA.WALUTA:=FAK.WAL; _wal+=1 ?}; FAK.next() !} ?};
FAK.cntx_pop();
{? _wal<>1 || KA.WALUTA:=null; 0 || 1 ?}


\jest_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdzanie czy rejestr lub rodzaj dokumentu ma przypisane zaakceptowane automaty
::   WE: _a - rodzaj automatu
::----------------------------------------------------------------------------------------------------------------------
_jest:=0;
DOK_REJ.cntx_psh(); REJ.cntx_psh(); P_AUTOKS.cntx_psh();
DOK.DOK_REJ(); DOK.REJ();
P_AUTOKS.index('AUTO_REJ'); P_AUTOKS.prefix(null,SSTALE.AR,_a,DOK_REJ.ref(),'T');
_jest:=P_AUTOKS.first();
{? ~_jest
|| P_AUTOKS.index('AUTO_REJ'); P_AUTOKS.prefix(REJ.ref,SSTALE.AR,_a,null(),'T');
   _jest:=P_AUTOKS.first()
?};
DOK_REJ.cntx_pop(); REJ.cntx_pop(); P_AUTOKS.cntx_pop();
_jest


\suma_dok_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Oblicza i wyswietla sume obrotow Wn i Ma pozycji dokumentu
::       Funkcja wywolywana przed wykonaniem POZ.select. Sumuje jedynie pozycje dla waluty narodowej
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('NSumDok')<0 & f_usr_changed()
|| {? POZ.f_active()
   || SUM.SUMWN:=SUM.SUMMA:=SUM.SALWN:=SUM.SALMA:=SUM.POZAWN:=SUM.POZAMA:=0;
         _ref:=null;
         {? POZ.f_get() || _ref:=POZ.ref() ?};
         {? POZ.f_first()
         || {! |?
               SUM.SUMWN+=POZ.WN; SUM.SUMMA+=POZ.MA;
               {? exec('fnd_ks','dok_fks') & -(1+KS.TYP)<>'p'
               || SUM.POZAWN+=POZ.WN; SUM.POZAMA+=POZ.MA
               ?};
               POZ.f_next()
            !}
         ?};
         {? _ref || POZ.f_seek(_ref) ?};
         SUM.SALWN:=F.SWn(SUM.POZAWN,SUM.POZAMA);
         SUM.SALMA:=F.SMa(SUM.POZAWN,SUM.POZAMA)
   |? POZ.sel_size()=0
   || exec('suma_dok','dok_fks')
   ?}
?};
~~


\ust_krs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula ustala kurs na podstawie tabeli w DOK.TKRS
::   WE: _a - ref WAL
::   WY: kurs
::  OLD: \ust_krs/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
KRS.index('KRS_WAL');
KRS.prefix(DOK.TKRS,_a);
{? KRS.first()
|| {? DOK.TYPKRS='K'
   || KRS.KP
   |? DOK.TYPKRS='R'
   || KRS.SR
   |? DOK.TYPKRS='S'
   || KRS.SP
   || 0
   ?}
|| 0
?}


\suma_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Oblicza i wyswietla sume obrotow Wn i Ma pozycji dokumentu
::       Funkcja wywolywana przed wykonaniem POZ.select. Sumuje jedynie pozycje dla waluty narodowej
::  OLD: \suma_dok/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('F','object');
_asynt:=ROZNE.ROKKON().SYNT;
SUM.SUMWN:=SUM.SUMMA:=SUM.SALWN:=SUM.SALMA:=SUM.POZAWN:=SUM.POZAMA:=0;
POZ.cntx_psh();
{? POZ.first
|| {! |?
        {? POZ.STR='Wn' || SUM.SUMWN+=POZ.SUM || SUM.SUMMA+=POZ.SUM ?};
        {? exec('fnd_ks','dok_fks',_asynt) & -(1+KS.TYP)<>'p'
        || {? POZ.STR='Wn' || SUM.POZAWN+=POZ.SUM || SUM.POZAMA+=POZ.SUM ?}
        ?};
        POZ.next()
   !}
?};
SUM.SALWN:=F.SWn(SUM.POZAWN,SUM.POZAMA);
SUM.SALMA:=F.SMa(SUM.POZAWN,SUM.POZAMA);
POZ.cntx_pop()


\suma_f_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Oblicza i wyswietla sume obrotow Wn i Ma pozycji dokumentu
::----------------------------------------------------------------------------------------------------------------------
exec('F','object');
_asynt:=ROZNE.ROKKON().SYNT;
SUM.SUMWN:=SUM.SUMMA:=SUM.SALWN:=SUM.SALMA:=SUM.POZAWN:=SUM.POZAMA:=0;
POZ.cntx_psh();
{? POZ.f_active() & POZ.f_first()
|| {! |?
      {? POZ.STR='Wn' || SUM.SUMWN+=POZ.SUM || SUM.SUMMA+=POZ.SUM ?};
      {? exec('fnd_ks','dok_fks',_asynt) & -(1+KS.TYP)<>'p'
      || {? POZ.STR='Wn' || SUM.POZAWN+=POZ.SUM || SUM.POZAMA+=POZ.SUM ?}
      ?};
      POZ.f_next()
   !}
?};
SUM.SALWN:=F.SWn(SUM.POZAWN,SUM.POZAMA);
SUM.SALMA:=F.SMa(SUM.POZAWN,SUM.POZAMA);
POZ.cntx_pop()


\fnd_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula ustawia KS na podstawie POZ.KON
::   WY: 1/0 - jest KS lub nie
::  OLD: \fnd_ks/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZ.KON='' || _ok:=0; return(0) || _ok:=1 ?};
{? _=0 || _asynt:=ROZNE.ROKKON().SYNT || _asynt:=_a ?};
{? POZ.KOM<>null || POZ.KOM().KS() ?};
{? POZ.KOM=null | (|(KS.SYM)<>(_asynt+POZ.KON))
|| KS.index('SYM');
   KS.prefix(ROZNE.ROKKON);
   {? ~KS.find_key(_asynt+POZ.KON) || _ok:=0 ?}
?};
_ok


\gr_bufor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Ustawia zmienne zwiazane z grupa dokumentow
::   WE: [_a] - akronim tabeli DOK, POZ lub brak aby wyczyscic pola
::       [_b] - gdy ustawiony, czyszczony jest bufor dla POZa
::  OLD: \gr_bufor/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0
|| ROZNE.GR_SYM:=''; ROZNE.GR_SLO:=ROZNE.GR_DOK:=null
|| GR_EL.cntx_psh(); GR_EL.index(_a);
   _ref:=($(_a+'.ref()'))();
   GR_EL.prefix(REF.FIRMA,ref_name(_ref)+4, _ref);
   GR_DOK.cntx_psh(); GR_DOK.prefix(REF.FIRMA);
   ROZNE.GR_DOK:={? _=1 & GR_EL.first()
                 || {? _a='POZ' | GR_EL.CALY_DOK || GR_EL.GR_DOK || null ?}
                 || {? _a='POZ' & exec('seek_el','dok_fks','DOK',{? _=1 || POZ.DOK || DOK.ref() ?})
                       & GR_EL.CALY_DOK
                    || GR_EL.GR_DOK
                    || null
                    ?}
                 ?};
   {? ROZNE.GR_DOK ||
      ROZNE.GR_SYM:=ROZNE.GR_DOK().SYM;
      ROZNE.GR_SLO:=ROZNE.GR_DOK().SLO
   || ROZNE.GR_SYM:=''; ROZNE.GR_SLO:=null
   ?};
   GR_DOK.cntx_pop();
   GR_EL.cntx_pop()
?}


\okna_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Ustawianie okienek tabeli DOK
::  OLD: \okna_r/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('btn_idp','PrZakD');
btn_idp:=obj_new(7); {! _i:=1..7 |! btn_idp[_i]:='' !};
okno_dok:='';
{? _a='PROSTY' || {? var_press('DokBez')>0 & DokBez=2
                  || PrZakD:=1
                  || DokBez:=1; PrZakD:=1
                  ?}
?};
{? (_a='VAT' | _a='SAD') & POMOC.V
|| _fml:="{? POMOC.D
          || POMOC.D().KOR_NAG='T'
          || DOK.DOK_REJ().KOR_NAG='T'
          ?}";
   _war:=_fml();
   POMOC.V(); _v:=VAT_REJ.RVAT().RT; _nd:=VAT_REJ.RVAT().KVAT().SYM;
   {? _v='I'
   || okno_dok:='DOK_IMP'; exec('set_rbd','rachunki',1)
   |? _v='W'
   || {? _war
      || okno_dok:='DOK_KORN'
      || {? 6+_nd='_WWspD'
         || okno_dok:='DOK_WWD'; exec('set_rbd','rachunki',2)
         |? 6+_nd='_WWspN'
         || okno_dok:='DOK_WWN'; exec('set_rbd','rachunki',1)
         || okno_dok:='DOK_WW'
         ?}
      ?}
   |? _v='Z'
   || okno_dok:='DOK_VAT'; exec('set_rbd','rachunki',3)
   |? _v='S'
   || {? _war
      || okno_dok:='DOK_KORN'
      || okno_dok:='DOK_SPR'
      ?};
      exec('set_rbd','rachunki',3)
   |? _v='E'
   || {? _war
      || okno_dok:='DOK_KORN'
      || okno_dok:='DOK_EXP'
      ?};
      exec('set_rbd','rachunki',2)
   ?};
   OKRO_F.cntx_psh();
   PARAM.OKROTXT:=DOK.OKRVAT().NAZ;
   PARAM.OKROVAT:={? +DOK.OKRVAT().NAZ || DOK.OKRVAT().NAZ+'/'+DOK.OKRVAT().ROK().NAZ || '' ?};
   OKRO_F.cntx_pop()
|| DOK_REJ.cntx_psh();
   _v:={? POMOC.D || POMOC.D().WEW || DOK.DOK_REJ().WEW ?};
   okno_dok:={?  _a='WEW' || {?_v='S' || 'DOK_WEWS' || 'DOK_WEWZ' ?} || 'DOK_PRO' ?};
   exec('set_rbd','rachunki',1);
   DOK_REJ.cntx_pop()
?};
okno_dok


\dok_edit1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Tworzy okno redagowania dokumentu księgowego
::   WE:  _a  - bazowe okno redagowania
::       [_b] - tylko wyświetlenie
::----------------------------------------------------------------------------------------------------------------------
_wys:=var_press('_b')>0 & _b;
{? _a<>''
|| _okn:=DOK.mk_edit('Dokument księgowy'@,,'dokeditmain');
   DOK.win_etab(_okn,'Dane podstawowe'@);
   DOK.win_ewin(_okn,,_a);
   {? _a='DOK_EXP' | _a='DOK_IMP' | _a='DOK_SPR' | _a='DOK_VAT' | _a='DOK_WW' | _a='DOK_WWD' | _a='DOK_WWN'
   || __sprKraj:=1
   || VAR_DEL.delete('__sprKraj')
   ?};
   {? DOK_REJ.SLO().KOD<>'WEW' & ~DOK.RVAT || DOK.RVAT:=exec('new_vat','!fks_dks_dark') ?};
   {? DOK.RVAT
   || VAR_DEL.delete('TAB2POLA','TAB2FAKSPOLA');
      TAB2POLA:=DOKPOLA;
      TAB2FAKSPOLA:=DOK;
      DOK.win_etab(_okn,'Dane dodatkowe'@);
      DOK.win_ewin(_okn,DOKPOLA,'RED_DOD')
   ?};
   {? _a='DOK_WEWS' | _a='DOK_WEWZ'
   || DOK.win_etab(_okn,'Kontrahent'@);
      DOK.win_ewin(_okn,,'KH')
   |? _a<>'DOK_PRO' & _a<>'DOK_STAT'
   || DOK.win_etab(_okn,'Kontrahent'@);
      {? 4+-DOK.RVAT().RVAT().KVAT().SYM='sprz' | 5+-KVAT.SYM='_wwspd'
      || {? POMOC.D().KOR_NAG='T' | DOK.DOK_REJ().KOR_NAG='T'
         || DOK.win_ewin(_okn,,'KH_KORN')
         || DOK.win_ewin(_okn,,'KH_ODB')
         ?}
      || DOK.win_ewin(_okn,,'KH_WYST')
      ?}
   ?};
   {? DOK.RVAT
   || DOK.win_etab(_okn,'Dane e-dokumentu'@);
      DOK.win_ewin(_okn,DOKUM,'EDOKUMEN')
   ?};
   DOK.win_etab(_okn,'Status'@);
   DOK.win_ewin(_okn,,'DOK_STAT');
   {? DOK.E_DOC & 'pdf;bmp;png;tiff;tif;jpeg;jpg'*(-DOK.bl_info('E_DOC','EXTENSION'))>0
   || DOK.win_etab(_okn,'Podgląd'@);
      DOK.win_ewin(_okn,,'EDOK');
      HELP.PREVIEW:=DOK.E_DOC
   ?};
   {? _wys
   || DOK.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&Pozycje'@],"
         exec('poz_dok','dok_fks',1);''
      ");
      _an:=DOK.win_ebtn(_okn,
           'text=%1, btn_label_align=center, panel=bottom, align=end, display=1'['&Anuluj'@],'key:Esc');
      DOK.btn_eopt(_okn,_an,'tooltip='+exec('help_red_esc','#window','A'))
   || {? (var_press('DokBez')<=0 | DokBez=0) | ( var_pres('PrZakD')>0 & PrZakD=1 )
      || btn_idp[1]:=DOK.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin'['&Pozycje'@],"
            {? var_pres('dolndok')>0
            || _spr:=exec('dok_spr','dok_fks');
               {? _spr<>''
               || 'edit:'+_spr
               || {? dolndok=0
                  || {? exec('chk_nr','dok_fks',0)
                     || {? exec('dol_dok3','dok_fks',0,1)
                        || {? DOK.A='T'
                           || 'key:Esc'
                           || ''
                           ?}
                        ?}
                     || 'edit:NR'
                     ?}
                  || DOK.put();
                     exec('edit','dok_ksef',2);
                     {? exec('poz_dok','dok_fks')
                     || {? DOK.A='T'
                        || 'key:Esc'
                        || ''
                        ?}
                     ?}
                  ?}
               ?}
            || _spr:=exec('dok_spr','dok_fks');
               {? _spr<>''
               || 'edit:'+_spr
               |? exec('chk_nr','dok_fks',1)=0
               || 'edit:NR'
               || DOK.put();
                  exec('edit','dok_ksef',2);
                  exec('dokzrodl','!fks_dks_dark');
                  exec('poz_dok','dok_fks');
                  {? DOK.A='T'
                  || 'key:Esc'
                  || ''
                  ?}
               ?}
            ?}"
         )
      ?};
      {? var_press('DokBez')<=0 | DokBez=0
      || btn_idp[4]:=DOK.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Nr dok. &mag.'@],"exec('dokpola_memo','dok_ksef',DOKPOLA,'WZ')");
         DOK.btn_eopt(_okn,btn_idp[4],'tooltip='+'Numery dokumentów magazynowych'@);
         btn_idp[5]:=DOK.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Nr fak. za&l.'@],"exec('dokpola_memo','dok_ksef',DOKPOLA,'NRFAZAL')");
         DOK.btn_eopt(_okn,btn_idp[5],'tooltip='+'Numery faktur zaliczkowych'@);
         btn_idp[6]:=DOK.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Nr fak. &kor.'@],"exec('dokpola_memo','dok_ksef',DOK,'NRKSEFDK')");
         DOK.btn_eopt(_okn,btn_idp[6],'tooltip='+'Numery KSeF faktur korygowanych'@);
         {? exec('upgrade2325_blbc1','zbl') & exec('fin_dokumzbc_seek','zbl',DOK)
         || btn_idp[7]:=DOK.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Businesscheck'@],"exec('dokumzbc_select','dok_fks1')");
            DOK.btn_eopt(_okn,btn_idp[7],'tooltip='+'Rezultat kontroli Businesscheck'@)
         ?}
      ?};
      {? (var_press('DokBez')<=0 | DokBez=0) | ( var_pres('PrZakD')>0 & PrZakD=1 )
      || btn_idp[2]:=DOK.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=end'[exec('text_red_zakoncz','#window','D')],"
               _acr:=exec('dok_spr','dok_fks');
               {? _acr='' & var_pres('dolndok')>0 & dolndok=0
               || FUN.info('Nie można zakończyć rejestracji dokumentu.\nBrak pozycji w dokumencie.'@); ''
               |? _acr='' & exec('chk_nr','dok_fks',1) &
                  DOK.put() & exec('edit','dok_ksef',2) &
                  exec('akceptuj','dok_fks1') & DOK.get()
               || {? var_pres('BtnZak')>0 || BtnZak:=1 ?};
                  'key:F2'
               || {? _acr<>''
                  || 'edit:'+_acr
                  || ''
                  ?}
               ?}"
            );
         DOK.btn_eopt(_okn,btn_idp[2],'tooltip='+exec('help_red_zakoncz','#window','DK'))
      ?};
      btn_idp[3]:=DOK.win_ebtn(_okn,'text=%1, btn_label_align=center, panel=bottom, align=end'[exec('text_red_ok','#window')],"'key:F2'");
      DOK.btn_eopt(_okn,btn_idp[3],'tooltip='+exec('help_red_ok','#window','Z'));
      _anuluj:=DOK.win_ebtn(_okn,'text=%1, btn_label_align=center, panel=bottom, align=end'['&Anuluj'@],'key:Esc');
      DOK.btn_eopt(_okn,_anuluj,'tooltip='+exec('help_red_esc','#window','A'))
   ?};
   DOK.win_edit(_okn);
   exec('wal_edi_dok','dok_fks',_okn)
?};
{? var_press('DokBez')>0 & DokBez=2
|| VAR_DEL.delete('PrZakD')
|| VAR_DEL.delete('DokBez','PrZakD')
?};
1


\okna_r_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawia widoczność przycisków w DOK
::----------------------------------------------------------------------------------------------------------------------
{? btn_idp[1]<>''
|| DOK.btn_eopt(DOK.win_edit('?'),btn_idp[1],{? ~_a || 'state=grayed' || 'state=normal' ?})
?};
{? btn_idp[2]<>''
|| DOK.btn_eopt(DOK.win_edit('?'),btn_idp[2],{? ~_b || 'state=grayed' || 'state=normal' ?})
?};
{? var_pres('BtnZak')<=0
|| DOK.btn_eopt(DOK.win_edit('?'),btn_idp[3],{? ~_c || 'state=grayed' || 'state=normal' ?})
?}


\wn_maf3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Popup z opcjami Wn, Ma
::  OLD: \wn_maf3/skid_pom.fml
::----------------------------------------------------------------------------------------------------------------------
_jest:=fld();
_zwrot:=exec('popup','dok_fks','Wn','Ma');
{? _zwrot='' || _jest || _zwrot ?}


\popup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja z argumentami typu string - lista wyboru, zwraca wybrany napis sposrod argumentow
::  OLD: \popup/skid_pom.fml
::----------------------------------------------------------------------------------------------------------------------
_y:='';
{! _i:=1.._ |! _y+='''' + _[_i] + ''''+',' !};
_y:=_y-1;
exec('f3_pop','dok_fks',_y)


\f3_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja powoluje obiekt klasy POPUP i wykonuje metode select()
::   WE: _a - argumenty metody select w postaci stringu
::  OLD: \f3_pop/skid_pom.fml
::----------------------------------------------------------------------------------------------------------------------
exec(,'_misc');
exec(,'_popup');
PL_XXX:=obj_new(@.CLASS.POPUP);
_z:='PL_XXX.select('+_a+')';
_z:=($_z)();
obj_del(PL_XXX);
_z


\br_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Rekord przed w okienkach wertowania tabeli POZ
::  OLD: \op_kont2/opis_kon.fml
::----------------------------------------------------------------------------------------------------------------------
_last:={? var_pres('_a')>0 || _a || 1 ?};
{? _last
|| {? var_pres('sum_wn')=1 & var_pres('sum_ma')=1
   || SUM.SUMWN:=sum_wn; SUM.SUMMA:=sum_ma; &sum_wn; &sum_ma
   ?};
   DOK.cntx_psh();
   POZ.DOK();
   {? DOK.DOK_REJ().M_ODD='T'
   || {? POZ.DOK_MOD().ODD=POZ.ODD_KS
      || POMOC_DM.REJW:=POMOC_DM.ODDW:=0;
         POMOC_DM.NR_W:=POMOC_DM.NK_W:=''
      || POMOC_DM.ODDW:=POZ.ODD_KS;
         {? DOK.A='T'
         || POMOC_DM.REJW:=DOK.REJ;
            POMOC_DM.NK_W:=DOK.NK;
            POMOC_DM.NR_W:=$DOK.NR
         || DOK.cntx_psh();
            DOK.clear();
            DOK.index('ODDZRODL');
            {? DOK.find_key(POZ.ODD_KS,$POZ.DOK,$POZ.DOK)
            || POMOC_DM.REJW:=DOK.REJ;
               POMOC_DM.NK_W:=DOK.NK;
               POMOC_DM.NR_W:=$DOK.NR
            || POMOC_DM.NR_W:=POMOC_DM.NK_W:='';
               DOKM_DOK.clear();
               DOKM_DOK.index('DOKM');
               {? DOKM_DOK.find_key(DOK.DOK_REJ,POZ.ODD_KS)
               || POMOC_DM.REJW:=DOKM_DOK.REJ
               ?}
            ?};
            DOK.cntx_pop()
         ?}
      ?}
   ?};
   exec('bd_wprat','dok_fks');
   exec('rozr_edi','dok_fks');
   exec('wyr_edi','dok_fks');
   exec('wal_edi','dok_fks');
   _hid:='R';
   {? PAR_SKID.get(35)='T' & PAR_SKID.get(36)='T' & (var_press('PozView')<=0 | ~PozView)
   || KOM.cntx_psh(); KS.cntx_psh(); KS_W.cntx_psh();
      POZ.KOM().KS();
      KS_W.index('LP'); KS_W.prefix(KS.ref());
      {? KS_W.first() || _hid:='' ?};
      KOM.cntx_pop(); KS.cntx_pop(); KS_W.cntx_pop()
   ?};
   _hid_d:='';
   {? PAR_SKID.get(82)='N'
   || DOKUM.index('DOKUM'); DOKUM.prefix(REF.FIRMA,$POZ.DOK().ref);
      {? ~DOKUM.first() || _hid_d+='Z' ?}
   ?};
   {? DOK.DOKZRODL='' || _hid_d+='D' ?};
   {? ~DOK.E_DOC || _hid_d+='E' ?};
   {? _hid_d<>'' || _hid+='E('+_hid_d+')' ?};
   {? (-menu_txt='pozycje' | (var_pres('TREE_REJ')>0 & cur_tab=TREE_REJ & cur_tab(1,1)=POZ)) & DOK.A='T' | var_press('PozView')>0 & PozView
   || _hid:='ZC'+_hid+':ZC'
   || {? DOK.A='T' || _hid:='C'+_hid+':C' ?}
   ?};
   KOM.cntx_psh(); KS.cntx_psh();
   POZ.KOM().KS();
   {? KS.MW<>'T'
   || _hid+='G'
   ?};
   {? PAR_SKID.get(211)='T' || _hid+='ZM'; _hid:='ZM'+_hid  ?};
   KOM.cntx_pop(); KS.cntx_pop();
   POZ.actions_grayed(POZ.win_sel('?'),_hid);
   DOK.cntx_pop()
?};
{? ~(var_pres('TABPOZUS')>0)
|| exec('rekprzed','color','POZ#01')


?}


\bd_wprat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Przed wyswietleniem znacznika rat w POZ przy redakcji.
::  OLD: \bd_wprat/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('dolpoz')<=0
|| {? ROZRACH.TABELA='POZ' & POZ.ID=''
   || ROZRACH.WSK_PRAT:='N'
   |? ROZRACH.TABELA<>'POZ' | (ROZRACH.TABELA='POZ' & POZ.ID<>'')
   || ROZRACH.WSK_PRAT:={? exec('czyLista','raty',($ROZRACH.TABELA)()) || 'T' || 'N' ?}
   ?}
?};
1


\ustal_ka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Formula uzupelnia pola zmiennej KA (KA.S1..KA.S6 KA.KW1..KA.KW6)
::       na podstwie istniejacych wyroznikow dla pozycji POZ lub definicji (z KS_W), o ile parametr nr 35 ='T'.
::   WE: [_b] - 1 jesli rozdzielnik to pobieraj pierwsza wartosc
::  OLD: \ustal_ka/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<>type_of(0) || _b:=0 ?};
ROK_F.cntx_psh(); ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA); ROK_F.find_key(4-POZ.name()-2);
_put:={? var_pres('PowPut')>0 || PowPut || 2 ?};
{? PAR_SKID.get(35)='T' & (_k:=exec('jak_kon','konto',ROK_F.SYNT+POZ.KON))<>null
|| KS_W.cntx_psh();KS_W.index('LP');KS_W.prefix(_k);
   SLU.cntx_psh();
   SLUAPPL.cntx_psh();
   POW.cntx_psh();POW.index('POZ');POW.prefix(POZ.ref());
   _bo:=exec('roz_bo','dok_fks');
   {! _i:=1..6 |!
      {? KS_W.find_key(_i)
      || ($('KA.S'+$_i+':=KS_W.SLU().SLU().NAZ'))();
         SLO.cntx_psh();
         SLO.index('SL');
         SLO.prefix(KS_W.SLU().SLU);
         _tmp_kaeX:=$('KA.E'+$_i);
         _findPow:=POW.find_key(_i);
         _zerowanie:=~(SLO.find_key(_tmp_kaeX()) & _findPow );
         SLO.cntx_pop();
         {? _put=2 | _put=0 | _put & ( ($('KA.KW'+$_i))()=null | _=1 )
         || {? _put>0 & (_=0 | _=2) & _findPow & POW.SLU=KS_W.SLU & (_b | KS_W.ROZDZ<>'T') & ~_bo
            || ($('KA.KW'+$_i+':=POW.SLO'))();
               ($('KA.E'+$_i+':=POW.SLO().KOD'))();
               {? _b & KS_W.ROZDZ='T'
               || _pow:=POW.ref();
                  POW.cntx_psh();
                  POW.prefix(POZ.ref(),_i);
                  {? POW.first() & POW.size()>1
                  || _txtg:=__komt+'; Dokument źródłowy '+POZ.DOK().NK+' ma zdefiniowany podzielnik na koncie '+POZ.KON;

                     {!
                     |?
                        _txt:=POW.SLO().SLU().NAZ+': '+POW.SLO().KOD+'; kwota: '+form(POW.KW,,2,' ,');
                        {? _pow=POW.ref()
                        || _txt+='; (uwzlędniono)'
                        ?};
                        exec('add_kom','#message',_txt,4,_txtg,,1);
                        POW.next()
                     !}
                  ?};
                  POW.cntx_pop()
               ?}
            || {? KS_W.ROZDZ='T' | _bo
               || ($('KA.E'+$_i+':=''<- F3 ->'''))()
               || {? _zerowanie || ($('KA.E'+$_i+':='''''))() ?}
               ?};
               ($('KA.KW'+$_i+':=null'))()
            ?}
         ?}
      || ($('KA.S'+$_i+':='''''))();
         ($('KA.KW'+$_i+':=null'))();
         ($('KA.E'+$_i+':='''''))()
      ?}
  !};
  KS_W.cntx_pop();
  SLU.cntx_pop();
  SLUAPPL.cntx_pop();
  POW.cntx_pop()
|| {! _i:=1..6 |!
      ($('KA.S'+$_i+':='''''))();
      ($('KA.KW'+$_i+':=null'))();
      ($('KA.E'+$_i+':='''''))()
   !}
?};
ROK_F.cntx_pop()


\roz_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Czy obsluga wyroznikow jak dla rozdzielnikow:
::       rok inny niz pierwszy, okres bilans otwarcia, typ dokumentu BO
::   WY: Czy obsluga wyroznikow jak dla rozdzielnikow? 1-tak, 0-nie
::  OLD: \roz_bo/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
SSTALE.AO();
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_fr:={? ROK_F.first() || ROK_F.ref() || null ?};
SLO.cntx_psh();
_ok:=_fr & _fr<>OKRO_F.ROK & POZ.DOK().DOK_REJ().SLO().KOD='BO';
SLO.cntx_pop(); ROK_F.cntx_pop();
_ok


\seek_el
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Ustawia element grupy dokumentow
::   WE:  _a  - akronim tabeli DOK lub POZ
::       [_b] - wskazanie na DOKa lub POZa
::  OLD: \seek_el/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
GR_EL.index(_a);
_ref:={? _=1 || ($(_a+'.ref()'))() || _b ?};
GR_EL.prefix(REF.FIRMA,ref_name(_ref)+4, _ref);
GR_EL.first()


\salk_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.62]
:: OPIS: Ustawia w zmiennych ROZNE.POZ_WN i ROZNE.POZ_MA saldo konta  POZ.KON w walucie narodowej
::  OLD: \salk_poz/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.POZ_WN:=ROZNE.POZ_MA:=0;
{? |POZ.KON<>''
|| AN.cntx_psh(); AN.index('WALSYM'); AN.prefix(FINFO.NAROD,POZ.KON);
   {? AN.first()
   || F.set_odd(OPERATOR.DEPT);
      _nr:=SSTALE.AO().NR;
      F.Obr(AN.SYM,0,_nr);
      ROZNE.POZ_WN:=F.SWn(F.wn,F.ma); ROZNE.POZ_MA:=F.SMa(F.wn,F.ma)
   ?};
   AN.cntx_pop()
?};
1


\fp_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: przed wyswietleniem ROZRACH.FORMAPLA
::  OLD: \fp_bd/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? 4+cur_tab.name='doku' & (DOK.DOK_REJ().SLO().KOD='PROSTY' | DOK_REJ.SLO().KOD='WEW') & DOK.DOK_REJ().CZY_DP='O'
|| DOK.efld_opt(DOK.win_edit('?'),'mark=0',DOK,'D3')
|? 4+cur_tab.name='doku' & (DOK.DOK_REJ().SLO().KOD='PROSTY' | DOK_REJ.SLO().KOD='WEW') & DOK.DOK_REJ().CZY_DP<>'T'
|| DOK.efld_opt(DOK.win_edit('?'),'mark=0',DOK,'D3'); exec('findfnv','#color')
|| {? 4+cur_tab.name='doku'
   || exec('fp_bd','raty',DOK)
   |? 4+cur_tab.name='pozy'
   || exec('fp_bd','raty',POZ)
   || exec('fp_bd','raty')
   ?}
?}

\pw_rejv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: przed wyswietleniem pola REJESTR.REJV
::  OLD: \pw_rejv/param.fml
::----------------------------------------------------------------------------------------------------------------------
{? DVAT.get
|| _a:=DVAT.DOKOKRO().ROK().KOD+form(DVAT.DOKOKRO().NR,-2);
   {? _a<>POMOC.USE
   || POMOC.USE:=_a;
      DOK.use('doku'+_a);
      POZ.use('pozy'+_a);
      POW.use('pow_'+_a);
      AN.use('koan__'+ROK_F.KOD);
      AN_SLU.use('koansl'+ROK_F.KOD)
   ?};
   REJESTR.REJV:=DVAT.DOK().REJ
|| REJESTR.REJV:=null
?};
1


\pw_nrv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Przed wyświetleniem pola zmiennej REJESTR.RNV
::----------------------------------------------------------------------------------------------------------------------
REJESTR.NRV:=DVAT.DOK;
1


\efakview
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Wyswietlenie dokumentu e-faktury
::   WE: [_a: miejsce uruchomienia: 0 - DOK (domyslne), 1 - DVAT]
::  OLD: \efakview/efaktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~_ || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _a || exec('pw_rejv','dok_fks') ?};
_msg:=0;
{? cur_tab(1,1)=POZ
|| exec('efakview2','dok_fks',POZ.DOK)
|? cur_tab(1,1)=ROZLVAT
|| exec('efakview2','dok_fks',ROZLVAT.DOK)
|? cur_tab(1,1)=ZAP_OP | _b=1
|| {? ZAP_OP.POZDOK
   || POZ.cntx_psh();
      DOK.cntx_psh();
      _mask:=ref_name(ZAP_OP.POZDOK)+4;
      POZ.use('pozy'+_mask);
      POZ.prefix();
      DOK.use('doku'+_mask);
      {? POZ.seek(ZAP_OP.POZDOK)
      || exec('efakview2','dok_fks',POZ.DOK)
      || _msg:=1
      ?};
      POZ.cntx_pop();
      DOK.cntx_pop()
   || _msg:=1
   ?}
|| exec('efakview2','dok_fks',{? _a || DVAT.DOK || DOK.ref() ?})
?};
{? _msg || FUN.info('Brak dokumentu elektronicznego.'@) ?};
1


\efakview2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Wyswietlenie dokumentu e-faktury
::   WE: _a - wskazanie na dokument
::  OLD: \efakview2/efaktury.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh();
DOK.prefix();
{? DOK.seek(_a)
|| {? exec('czy_rej_zal','dok_fks')
   || {? DOK.E_DOC
      || _pyt:=FUN.choice('Dokument elektroniczny.'@,1,'Wyświetl'@,'Edytuj'@)
      || _pyt:=2
      ?};
      {? _pyt=1 || exec('bl_view','#blob',DOK,'E_DOC')
      |? _pyt=2 || exec('edok_edit','dok_fks')
      ?}
   |? DOK.E_DOC
   || exec('bl_view','#blob',DOK,'E_DOC')
   || FUN.info('Brak dokumentu elektronicznego.'@)
   ?}
|| FUN.info('Brak dokumentu.'@)
?};
DOK.cntx_pop()


\edok_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Edycja e-dokumentow dokumentu ksiegowego
::  OLD: \edok_edit/efaktury.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh();
_red:=DOK.mk_edit('e-dokumenty'@,0,'#dokedokedit');
DOK.win_efld(_red,,'E_DOC',,,50,,,'e-dokument'@);
DOK.win_efld(_red,,'E_DOCP',,,50,,,'e-podpis'@);
DOK.win_edit(_red);
DOK.bl_file('E_DOC',0);
DOK.bl_file('E_DOCP',0);
{? DOK.edit()
|| DOK.put();
   exec('putbloby','dok_fks')
?};
DOK.bl_file('E_DOC',1);
DOK.bl_file('E_DOCP',1);
DOK.cntx_pop()


\putbloby
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Zmiania zawartosc pol DOK.E_DOC i DOK.E_DOCP
::  OLD: \putbloby/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_file1:=DOK.bl_file('E_DOC'))<>''
|| DOK.bl_put('E_DOC',_file1)
?};
{? (_file2:=DOK.bl_file('E_DOCP'))<>''
|| DOK.bl_put('E_DOCP',_file2)
?}


\czy_rej_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Czy redakcja zalaznikow i e-dokumentow gdy dokument zaksiegowany
::  OLD: \czy_rej_zal/skid_att.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_SKID.get(82)='T'


\efaksave
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Pobranie dokumentu e-faktury
::   WE: [_a: miejsce uruchomienia: 0 - DOK (domyslne), 1 - DVAT]
::  OLD: \efaksave/efaktury.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~_ || _a:=0 ?};
{? _a || exec('pw_rejv','dok_fks') ?};
{? (_a & DVAT.DOK().E_DOC) | (~_a & DOK.E_DOC)
|| exec('saveedok','dok_fks')
|| FUN.info('Brak dokumentu elektronicznego.'@)
?}; 1


\saveedok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Zapisuje dokument elektroniczny
::   WY: 1/0 - czy zapisano plik (pliki)
::  OLD: \saveedok/efaktury.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
{? DOK.E_DOC
|| _vname:=DOK.bl_info('E_DOC','NAME');
   _ext:=_vname;
   {! |? _pos:=_ext*'.'; _ext:=_pos-_ext; _pos !};
   __dir_controling:=fmk_tmp_dir(0);
   _vpath:=__dir_controling.get_path()+'\\'+_vname;
   {? +_vpath
   || {? 2+_vpath<>'\\\\' & 2+_vpath<>'//' || _vpath:='@'+_vpath ?};
      _zwrot:=DOK.bl_get('E_DOC',_vpath,0);
      {? _zwrot & DOK.E_DOCP
      || {! |?
            {? (_vpath+1)='\\' | (_vpath+1)='/'
            || 0
            || _vpath:=_vpath-1; 1
            ?}
         !};
         _vname:=DOK.bl_info('E_DOCP','NAME');
         _vpath+=_vname;
         {? 1+_vpath = '@'
         || _vpath:=1-_vpath
         ?};
         _zwrot:=DOK.bl_get('E_DOCP',_vpath,0)
      ?}
   ?};
   {? 1+_vpath = '@'
   || _vpath:=1-_vpath
   ?};
   __dir_controling.get_path();
   dlg_save(_vpath,0);
   VAR_DEL.delete('__dir_controling')
|| FUN.info('Brak dokumentu źródłowego.'@)
?};
_zwrot


\b_skanuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula przed uruchomieniem skanowania dokumentow
::   WY: 1 - mozna skanowac dokmenty
::       0 - w p.p.
::  OLD: \b_skanuj/skid_scn.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('cli_functions','#system')=0
|| FUN.emsg(exec('indevice_nacc_msg','#system'));
   return(0)
?};
_msg:='Istnieje już przypisany dokument źródłowy.\nNadpisać go innym dokumentem?'@;
{? var_pres('dsp_wyd')>0 | cur_tab(1,1)=EDOKUM
|| {? OBIEGI.EDOKOS().STATUS='T'
   || FUN.info('Dokument zaakceptowany.'@); 0
   |? EDOKUM.EDOKUM
   || FUN.ask(_msg)
   || 1
   ?}
|? cur_tab(1,1)=DOK
|| {? ~exec('dokm_edit','dok_fks')
   || 0
   |? DOK.A='T' & ~exec('czy_rej_zal','dok_fks')
   || {? DOK.ZK='N' & DOK.ZP='T'
      || FUN.info('Dokument zaksięgowany próbnie.'@)
      |? DOK.ZK='T'
      || FUN.info('Dokument zaksięgowany końcowo.'@)
      || FUN.info('Dokument ma zakończoną rejestrację.'@)
      ?};
      0
   |? DOK.E_DOC
   || {? exec('czy_rej_zal','dok_fks')
      || _pyt:=FUN.choice('Istnieje już przypisany dokument źródłowy.'@,,'Nadpisz'@,'Usuń'@);
         {? _pyt=2
         || DOK.E_DOC:=null();
            DOK.put();
            0
         || _pyt
         ?}
      || FUN.ask(_msg)
      ?}
   || 1
   ?}
|? cur_tab(1,1)=EDOKUMZ
|| {? EDOKUMZ.EDOKUM
   || FUN.ask(_msg)
   || 1
   ?}
|? cur_tab(1,1)=DOKUMZ
|| {? DOKUMZ.DOKUM
   || FUN.ask(_msg)
   || 1
   ?}
?}


\a_skanuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula inicjujaca skanowanie dokumentow
::   WE: _a - tabela
::       _b - pole tabeli - string
::  OLD: \a_skanuj/skid_scn.fml
:: ~OST: INFERASE,INFEXISTS,INFOPEN,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
_count:=0;
{? var_pres('dsp_wyd')<=0 & cur_tab(1,1)=DOK & _a<>DOK
|| exec('b_skanuj','dok_fks')
|| ferase('@'+tmp_dir()+'/faktura.jpg');
   ferase('@'+tmp_dir()+'/faktura.pdf');
   _numer:=_loop:=1;
   {! |?
      {? fexists('@'+tmp_dir()+'/faktura'+$_numer+'.pdf',0)
      || ferase('@'+tmp_dir()+'/faktura'+$_numer+'.pdf');
         _numer+=1
      |? fexists('@'+tmp_dir()+'/faktura'+$_numer+'.jpg',0)
      || ferase('@'+tmp_dir()+'/faktura'+$_numer+'.jpg');
         _numer+=1
      || _loop:=0
      ?};
      _loop
   !};
   exec('run_java_exec','dok_fks','skaner.jar',0);

   {? cur_tab(1,1)=EDOKUMZ
   || _p1:=EDOKUMZ.DATE;
      _p2:=EDOKUMZ.DOKUM;
      _p3:=EDOKUMZ.KR_OP;
      _p4:=EDOKUMZ.TIME;
      _p5:=EDOKUMZ.USER;
      _p6:=EDOKUMZ.EDOK_ZAL
   |? cur_tab(1,1)=DOKUMZ
   || _p1:=DOKUMZ.DATE;
      _p2:=DOKUMZ.DOK;
      _p3:=DOKUMZ.KR_OP;
      _p4:=DOKUMZ.TIME;
      _p5:=DOKUMZ.P_OCR
   ?};

   {? _plik:=fopen('@'+tmp_dir()+'/faktura.jpg','br')
   || {? _a.bl_put(_b,_plik,,,'faktura.jpg')
      || {? var_pres('dsp_wyd')<=0
         || {? cur_tab(1,1)=EDOKUMZ
            || EDOKUMZ.NAZWA:=EDOKUMZ.bl_info('EDOKUM','NAME'); EDOKUMZ.put()
            |? cur_tab(1,1)=DOKUMZ
            || DOKUMZ.NAZWA:=DOKUMZ.bl_info('DOKUM','NAME'); DOKUMZ.put()
            ?}
         ?};
         _count+=1;
         _ok:=1
      || FUN.info('Nie udało się dodać dokumentu źródłowego w postaci załącznika.'@)
      ?};
      fclose(_plik);
      ferase('@'+tmp_dir()+'/faktura.jpg')
   |? _plik:=fopen('@'+tmp_dir()+'/faktura.pdf','br')
   || {? _a.bl_put(_b,_plik,,,'faktura.pdf')
      || {? var_pres('dsp_wyd')<=0
         || {? cur_tab(1,1)=EDOKUMZ
            || EDOKUMZ.NAZWA:=EDOKUMZ.bl_info('EDOKUM','NAME'); EDOKUMZ.put()
            |? cur_tab(1,1)=DOKUMZ
            || DOKUMZ.NAZWA:=DOKUMZ.bl_info('DOKUM','NAME'); DOKUMZ.put()
            ?}
         ?};
         _count+=1;
         _ok:=1
      || FUN.info('Nie udało się dodać dokumentu źródłowego w postaci załącznika.'@)
      ?};
      fclose(_plik);
      ferase('@'+tmp_dir()+'/faktura.pdf')
   ?};
:: jezeli udalo sie dodac plik faktura.pdf lub jpg to szuka dalszych
   {? _count
   || _loop:=_numer:=1;
      {! |?
         {? _plik:=fopen('@'+tmp_dir()+'/faktura'+$_numer+'.jpg','br')
         || _typ:='jpg'
         |? _plik:=fopen('@'+tmp_dir()+'/faktura'+$_numer+'.pdf','br')
         || _typ:='pdf'
         ?};
         {? _plik
         || {? cur_tab(1,1)=EDOKUMZ
            || EDOKUMZ.blank(1);
               EDOKUMZ.DATE:=_p1;
               EDOKUMZ.DOKUM:=_p2;
               EDOKUMZ.KR_OP:=_p3;
               EDOKUMZ.TIME:=_p4;
               EDOKUMZ.USER:=_p5;
               EDOKUMZ.EDOK_ZAL:=_p6;
               {? EDOKUMZ.add()
               || _a.bl_put(_b,_plik,,,'faktura'+$_numer+'.'+_typ);
                  EDOKUMZ.NAZWA:=EDOKUMZ.bl_info('EDOKUM','NAME');
                  EDOKUMZ.put();
                  _count+=1
               ?}
            |? cur_tab(1,1)=DOKUMZ
            || DOKUMZ.DATE:=_p1;
               DOKUMZ.DOK:=_p2;
               DOKUMZ.KR_OP:=_p3;
               DOKUMZ.TIME:=_p4;
               DOKUMZ.P_OCR:=_p5;
               {? DOKUMZ.add()
               || _a.bl_put(_b,_plik,,,'faktura'+$_numer+'.'+_typ);
                  DOKUMZ.NAZWA:=DOKUMZ.bl_info('DOKUM','NAME');
                  DOKUMZ.put();
                  _count+=1
               ?}
            |? _a=EDOKUM
            || EDOKUMZ.blank(1);
               EDOKUMZ.DATE:=date();
               EDOKUMZ.DOKUM:=EDOKUM.ref();
               EDOKUMZ.KR_OP:='';
               EDOKUMZ.TIME:=time();
               EDOKUMZ.USER:=app_info('app_user');
               EDOKUMZ.EDOK_ZAL:=null;
               {? EDOKUMZ.add()
               || EDOKUMZ.bl_put('EDOKUM',_plik,,,'faktura'+$_numer+'.'+_typ);
                  EDOKUMZ.NAZWA:=EDOKUMZ.bl_info('EDOKUM','NAME');
                  EDOKUMZ.put();
                  _count+=1
               ?}
            |? _a=DOK
            || DOKUM.cntx_psh();
               DOKUM.prefix();
               POM.TAB:='DOKUM';
               POM.TYPDOK:='SYS';
               DOKUM.blank();
               DOKUM.TYP:='I';
               DOKUM.REFSQL:=$_a.ref();
               DOKUM.NR:=exec('numer_new','numery','PACZKA');
               DOKUM.memo_set(,'OPIS');
               exec('znak','numery','DOKUM',0);
               {? DOKUM.add()
               || DOKUM.bl_put('DOKUM',_plik,,,'faktura'+$_numer+'.'+_typ);
                  DOKUM.NAZWA:=DOKUM.bl_info('DOKUM','NAME');
                  DOKUM.put();
                  _count+=1
               ?};

               DOKUM.cntx_pop()
            ?};
            fclose(_plik);
            ferase('@'+tmp_dir()+'/faktura'+$_numer+'.'+_typ);
            _numer+=1
         || _loop:=0
         ?};
         _loop
      !};
      {? _count=1
      || FUN.info('Dodano dokument źródłowy w postaci załącznika.'@)
      |? _count>1
      || FUN.info('Dodano dokumenty źródłowe w postaci załączników (%1).'@[$_count])
      ?}
   ?}
?};
_ok


\dokm_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie, czy dokument mozna edytowac
::  OLD: \dokm_edit/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('spr_mod','dok_fks')
|| FUN.info('Dokument powstał na podstawie dokumentu dla wielu jednostek księgowych.\n'
      'Wszelkie modyfikacje niemożliwe.'@);
   0
|| 1
?}


\prz_wys2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Przed wyświetl PARAM.OKRVAT
::  OLD: \prz_wys2/param.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.DOK_REJ().KOR_NAG='T' & cur_afld='OKRVAT1'
|| PARAM.efld_opt('PARAMOKR','enable='+$(PARAM.OKRVAT1=''),PARAM,'A_VAT');
   {? DOKN.OKRVAT1
   || PARAM.OKRVAT1:={? +DOKN.OKRVAT1().NAZ || OKRO_F.NAZ+'/'+OKRO_F.ROK().NAZ || '' ?};
      {? DOKN.OKRVAT1<>SSTALE.AO || exec('flddisp','color','DVAT#01#01') || '' ?}
   || PARAM.OKRVAT1:=''
   ?}
|| PARAM.efld_opt('PARAMOKR','enable='+$(PARAM.OKROVAT=''),PARAM,'A_VAT');
   {? DOK.OKRVAT & var_pres('vpozvat')=-1
   || PARAM.OKROVAT:={? +DOK.OKRVAT().NAZ || OKRO_F.NAZ+'/'+OKRO_F.ROK().NAZ || '' ?};
      {? DOK.CZY_CZ='T'
      || Color.fnd_kol('DOK#01#05')
      |? DOK.OKRVAT<>SSTALE.AO
      || Color.fnd_kol('DVAT#01#01')
      || ''
      ?}
   |? VPOZ.OKRVAT & var_pres('vpozvat')>0 | cur_tab()=ROZLVAT
   || PARAM.OKROVAT:={? +VPOZ.OKRVAT().NAZ || OKRO_F.NAZ+'/'+OKRO_F.ROK().NAZ || '' ?}
   |? +PARAM.OKROVAT & var_pres('vpozvat')>0
   || ''
   || PARAM.OKROVAT:='';
      {? cur_tab()=DOK & -menu_txt(,)<>'dołącz'
      || {? exec('sprvpozp','dok_fks',DOK.ref())
         || exec('flddisp','color','DVAT#01#01')
         || exec('findfnv','#color')
         ?}
      || ''
      ?}
   ?}
?}


\sprvpozp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Sprawdzenie, czy wartosci pol OKRVAT, A_VAT sa zgodne dla wszystkich pozycji VAT
::       dokumentu
::   WE: _a - DOK.ref
::   WY: 1 - zgodne, 0 - brak zgodnosci
::  OLD: \sprvpozp/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
VPOZ.cntx_psh();
VPOZ.index('VDOK'); VPOZ.prefix(_a);
{? VPOZ.first()
|| _okrvat:=VPOZ.OKRVAT; _a_vat:=VPOZ.A_VAT;
   {! |?
      _zwrot:=(_okrvat=VPOZ.OKRVAT & VPOZ.OKR_Z=null & VPOZ.OKR_C=null)*(_a_vat=VPOZ.A_VAT);
      _zwrot & VPOZ.next
   !}
?};
VPOZ.cntx_pop();
_zwrot


\vpoz_dek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: ustawienie znacznikow Zadekretowany (VPOZ.Z)
::  OLD: \vpoz_dek/skid.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ.cntx_psh();
P_V.cntx_psh();
P_V.index('V_P');
P_V.prefix();
do();
{? VPOZ.first()
|| VPOZ.trig_off('*','*');
   {!
   |? P_V.prefix(VPOZ.ref);
      _z:='';
      {? P_V.first()
      || POZ.cntx_psh();
         POZ.prefix();
         _ok:=1;
         {!
         |? _ok:=POZ.seek(P_V.POZ);
            _ok & P_V.next()
         !};
         POZ.cntx_pop();
         _z:={? ~_ok || {? P_V.first() || {! |? P_V.del() !} ?}; '' || 'T' ?}
      ?};
      {? VPOZ.Z<>_z
      || VPOZ.Z:=_z;
         VPOZ.put()
      ?};
      VPOZ.next()
   !};
   VPOZ.trig_on('*','*')
?};
end();
P_V.cntx_pop();
VPOZ.cntx_pop();
1


\suma_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Podsumowanie pozycji VAT
::   WE:  _a  - akronim tabeli z pozycjami VAT
::       [_b] - z rozliczeniami
::  OLD: \suma_vat/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='VPOZ'
|| VPOZ.cntx_psh();
   ROZLICZ.NETTO3:=ROZLICZ.VAT3:=ROZLICZ.BRUTTO3:=0;
   ROZLICZ.NETTO4:=ROZLICZ.VAT4:=ROZLICZ.BRUTTO4:=0;
   SUM.SUMN:=SUM.SUMV:=SUM.SUMB:=0;
   {? VPOZ.first()
   || {!
      |? ROZLICZ.NETTO3+=VPOZ.NETTO; ROZLICZ.VAT3+=VPOZ.VAT; ROZLICZ.BRUTTO3+=VPOZ.BRUTTO;
         {? _=1 | VPOZ.OKRVAT=null
         || SUM.SUMN+=VPOZ.NETTO; SUM.SUMV+=VPOZ.VAT; SUM.SUMB+=VPOZ.BRUTTO;
            {? _=2
            || VPOZ_ROZ.index('VPOZ_ROZ'); VPOZ_ROZ.prefix(VPOZ.ref());
               {? VPOZ_ROZ.first()
               || {!
                  |? SUM.SUMN-=VPOZ_ROZ.NETTO; SUM.SUMV-=VPOZ_ROZ.VAT; SUM.SUMB-=VPOZ_ROZ.BRUTTO;
                     VPOZ_ROZ.next()
                  !}
               ?}
            ?}
         ?};
         VPOZ.next()
      !};
      ROZLICZ.NETTO4:=ROZLICZ.NETTO3-SUM.SUMN;
      ROZLICZ.VAT4:=ROZLICZ.VAT3-SUM.SUMV;
      ROZLICZ.BRUTTO4:=ROZLICZ.BRUTTO3-SUM.SUMB
   ?};
   VPOZ.cntx_pop(); 1
|| PVAT.cntx_psh();
   SUM.SUMN:=SUM.SUMV:=SUM.SUMB:=SUM.SUMWC:=0;
   {? PVAT.first()
   || {! |?
         SUM.SUMN+=PVAT.SUM2; SUM.SUMV+=PVAT.VAT; SUM.SUMB+=PVAT.SUM1; SUM.SUMWC+=PVAT.SUMC;
         PVAT.next()
      !}
   ?};
   PVAT.cntx_pop();1
?}


\pw_sumn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MM] [8.50]
:: OPIS: Formula przed wyswielt dla pola SUMN zmiennej SUM
::  OLD: \pw_sumn/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? 4+cur_tab(1,1).name()='fak_'
|| FAK.cntx_psh();
   {? f_usr_changed()
   || SUM.SUMN:=SUM.SUMB:=0;
      {? FAK.f_active()
      || {? FAK.f_first()
         || _wal:=''; _mix:=0;
            {! |?
               {? ~_mix & _wal<>'' & _wal<>FAK.WAL().KOD || _mix:=1; SUM.SUMN:=0 ?};
               _wal:=FAK.WAL().KOD;
               {? ~_mix || SUM.SUMN+=FAK.WARW ?};
               SUM.SUMB+=FAK.WAR;
               FAK.f_next()
            !}
         ?}
      || {? FAK.first()
         || _wal:=''; _mix:=0;
            {! |?
               {? ~_mix & _wal<>'' & _wal<>FAK.WAL().KOD || _mix:=1; SUM.SUMN:=0 ?};
               _wal:=FAK.WAL().KOD;
               {? ~_mix || SUM.SUMN+=FAK.WARW ?};
               SUM.SUMB+=FAK.WAR;
               FAK.next()
            !}
         ?}
      ?}
   ?};
   FAK.cntx_pop();

   FAK.cntx_psh();
   _w:={? FAK.size>1
       || _idx:=FAK.ndx_tmp(,1,'DOK',,0,'WAL','KOD',0); _l:=0;
          {? _idx<>''
          || FAK.index(_idx); FAK.prefix(DOK.ref()); FAK.first(); _wal:='';
             {!
             |? {? FAK.WAL().KOD<>_wal || _l+=1 ?};
                _wal:=FAK.WAL().KOD;
                FAK.next()
             !};
             FAK.ndx_drop(_idx)
          ?};
          _l<=1
       || 1
       ?};
   FAK.cntx_pop(); _w
|? cur_tab()=VPOZ & cur_win(1)<>'R_SEL'
|| SUM.SUMN:=SUM.SUMV:=SUM.SUMB:=0;
   {? VPOZ.f_active()
   || {? VPOZ.f_first()
      || {!
         |? SUM.SUMN+=VPOZ.NETTO;
            SUM.SUMV+=VPOZ.VAT;
            SUM.SUMB+=VPOZ.BRUTTO;
            VPOZ.f_next()
         !}
      ?}
   || _sum:=sql('select sum(NETTO) sn, sum(VAT) sv, sum(BRUTTO) sb from prefixed_table(:_a)',VPOZ);
      {? _sum.first()
      || SUM.SUMN:=_sum.SN;
         SUM.SUMV:=_sum.SV;
         SUM.SUMB:=_sum.SB
      ?}
   ?};
   ~~
|| 1
?}


\obl_net
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula oblicza wartosci pocz. VPOZ.NETTO z dokumentow powiazanych
::  OLD: \obl_net/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAK.first()
|| _czy_wal:=exec('ile_wal','dok_fks');
   {!
   |? {? FAK.ZN<>'T'
      || ROZNE.WCLO+={? DOK.JORG=FINFO.NAROD
                     || FAK.WAR
                     |? DOK.JORG=FAK.WAL
                     || FAK.WARW
                     || 0
                     ?}
      ?};
      {? _czy_wal || ROZNE.WARW+=FAK.WARW ?};
      FAK.next()
  !}
?}


\pw_akcyz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.50]
:: OPIS: Formula przed wysw. pola VPOZ.AKCYZA
::  OLD: \pw_akcyz/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ.RVAT().RVAT();
_r:=RVAT.KVAT().SYM;
{? 1+_r='_' | 4+_r='ImpT' | DOK.KRAJ().KOD<>'PL' || exec('be_edok_fld','dok_fks1') || 0 ?}


\pw_vwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.50]
:: OPIS: Formula przed wysw. pola VPOZ.WARW, VPOZ.KURS, VPOZ.KURS_D
::  OLD: \pw_vwal/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? KA.WALUTA<>null || exec('be_edok_fld','dok_fks1') || 0 ?}


\pw_vwal_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MP] [21.14]
:: OPIS: Formula przed wysw. pola KA.WAL_DOK dla okna VPOZ
::  OLD: \pw_vwal/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
KA.WAL_DOK<>null


\dopusc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [??]
:: OPIS: Warunki modyfikacji dokumentu.
::       Funkcja wywoływana przed wykonaniem akcji na tabelach DOK i POZ.
::       Sprawdza, czy:  1. dokument jest wtórny do dokumentu dla wielu jednostek ksiegowych
::                       2. dokument jest zaakceptowany,
::                       3. dokument jest zaksięgowany
::   WE: [ _a - 0 = dla akcji tabeli POZ: dolacz,automat;
::         _a - 1 = dla akcji tabeli POZ: popraw;
::         _a - 2 = dla akcji tabeli POZ: dolacz (na strzalke w dol)
::         _a - 3 = dla akcji tabeli POZ: Uruchom schemat podziałów cont. ]
::         - brak parametrow dla akcji tabeli DOK: usun, popraw
::   WY: 1/0
::   OLD: \dopusc/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
_grsel:=var_pres('DokWyk')>0 & DokWyk=0; VAR_DEL.delete('RmRef');
{? var_pres('dokpop')<=0 & (-menu_txt(,)='popraw') & cur_tab(1,1)=POZ & POZ.sel_size()=0
|| exec('rozr_edi','dok_fks');
   exec('wyr_edi','dok_fks');
   exec('wal_edi','dok_fks')
?};
{? exec('czy_okr_zam_con','konsolidacja',DOK.sel_size()=0 & POZ.sel_size()=0 & _grsel=0) | exec('is_okr_blck','!zws_par_aokr',SSTALE.AO,OPERATOR.USER,1)
|| return(0)
|| {? _>0 & _a=3 & DOK.WSK_XD='T'
   || FUN.info('Dokument ma zaakceptowane podziały conttrollingowe.'@);
      return(0)
   ?}
?};
{? exec('spr_mod','dok_fks')
|| {? DOK.sel_size()=0 & POZ.sel_size()=0 & _grsel=0
   || FUN.info('Dokument powstał na podstawie dokumentu dla wielu jednostek księgowych.\n'
               'Wszelkie modyfikacje niemożliwe.'@)
   ?}
|? DOK.A='T' & DOK.sel_size()=0 & POZ.sel_size()=0 & _grsel=0
|| {? DOK.ZK='N' & DOK.ZP='T'
   || {? -(6+menu_txt(,))='popraw'
      || FUN.info('Dokument zaksięgowany próbnie.\nPoprawianie niemożliwe.'@)
      |? -(4+menu_txt(,))='usuń'
      || FUN.info('Dokument zaksięgowany próbnie.\nUsunięcie niemożliwe.'@)
      || FUN.info('Dokument zaksięgowany próbnie.'@)
      ?}
   |? DOK.ZK='T'
   || {? -(6+menu_txt(,))='popraw'
      || FUN.info('Dokument zaksięgowany końcowo.\nPoprawianie niemożliwe.'@)
      |? -(4+menu_txt(,))='usuń'
      || FUN.info('Dokument zaksięgowany końcowo.\nUsunięcie niemożliwe.'@)
      || FUN.info('Dokument zaksięgowany końcowo.'@)
      ?}
   || {? -(6+menu_txt(,))='popraw'
      || FUN.info('Dokument ma zakończoną rejestrację.\nPoprawianie niemożliwe.'@)
      |? -(4+menu_txt(,))='usuń'
      || FUN.info('Dokument ma zakończoną rejestrację.\nUsunięcie niemożliwe.'@)
      || FUN.info('Dokument ma zakończoną rejestrację.'@)
      ?}
   ?};
   0
|? 1+DOK.DOKZRODL='M' & (
      _test:=0;
      ND.cntx_psh();
      _reffak:=#(4-DOK.DOKZRODL);
      ND.use('nagdo'+(3+(1-DOK.DOKZRODL)));
      ND.prefix();
      {? ND.seek(_reffak,ND.name()) & ND.KOR='T'
      || _test:=1
      ?};
      ND.cntx_pop();
      _test
   )
||
   FUN.info('Do dokumentu wystawiono korektę w systemie Logistyka.\nModyfikacje niemożliwe.'@);
   0
|? type_of(cur_tab(1,1))<>0 & (cur_tab(1,1)=DOK | cur_tab(1,1)=VPOZ) & PAR_SKID.get(441)='N' &
   exec('status_bl','dok_fks1') & DOK.sel_size()=0 & VPOZ.sel_size()=0 & _grsel=0 &
   ~FUN.ask('Dokument elektroniczny jest \'gotowy do wysłania\' lub \'wysłany\'.\n'
            'Czy na pewno chcesz zmodyfikować rekord?'@)
|| 0
|| {? _>0
   || {? _a=1
      || exec('gr_bufor','dok_fks','POZ');
::Poczatek modyfikacji dla Maclex 12.10.2009 AK [1120]
         {? MLEX.FIKSB
         || exec('ob_bz','ml_zad');
            exec('zbz_get','ml_zad')
         ?}
::Koniec modyfikacji dla Maclex
      || exec('gr_bufor','dok_fks','POZ',1)
      ?};
      {? -(6+menu_txt(,))='popraw' | -(6+menu_txt(,))='dołącz' | _a=2
      || {? _a=1
         || {? POZ.KOM().KS().OBTYPROZ || POZ.TID:=KS.T_ROZ ?};
            KA.CZY_WYR:='T'; exec('ustal_ka','dok_fks'); exec('kas_tpow','dok_fks')
         || KA.CZY_WYR:='N'; exec('ini_tpow','dok_fks')
         ?};
         KA.AKCJA:=1;
         SSTALE.AR();
         pop_kon:=ROK_F.SYNT+POZ.KON; pop_konc:=POZ.KON; pop_wal:=POZ.WAL; pop_idc:=POZ.ID;
         PAR_WYDR.PAR1:={? exec('czyLista','raty',($('POZ'))(),1) || 1 || 0 ?};
         {? 1+POZ.TID='R' & POZ.ID<>'' & -menu_txt='popraw'
         || RMK.cntx_psh();
            RMK.index('NAZ'); RMK.prefix();
            {? RMK.find_key(POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK,POZ.TID,)
            || RmRef:=RMK.ref()
            ?};
            RMK.cntx_pop()
         ?}
      |?  -(7+menu_txt(,))='automat'
      || KA.CZY_WYR:='N';
         {? var_pres('TPOW')>100 || obj_del(TPOW) ?}
      ?}
   || exec('gr_bufor','dok_fks','DOK')
   ?};
   1
?}


\ini_tpow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Kasowanie lub utworzenie tabeli TPOW
::  OLD: \ini_tpow/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TPOW')>100
|| TPOW.erase()
|| TPOW:=tab_tmp(3,'LP','INTEGER','Lp',
                   'SLU','STRING[20]','Słownik',
                   'SLO','STRING[8]','Kod',
                   'KW','REAL','Kwota');
   _ndx_pow:=TPOW.ndx_tmp(,,'LP',,0,'SLU',,0,'SLO',,0,'SLO',,0);
   TPOW.index(_ndx_pow)
?}


\kas_tpow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Funkcja kasuje tabele TPOW
::  OLD: \kas_tpow/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(35)='T'
|| {? var_pres('TPOW')>100 || TPOW.erase() || exec('ini_tpow','dok_fks') ?};
   POW.index('POZ');
   POW.prefix(POZ.ref());
   {? POW.first()
   || {!|? {? ($('KA.KW'+$POW.LP))()=null
           || TPOW.LP:=POW.LP; TPOW.KW:=POW.KW$2; TPOW.SLO:=POW.SLO().KOD;
              TPOW.SLU:=POW.SLU().SLU().NAZ;
              TPOW.prefix();
              TPOW.add()
           ?};
           POW.next()
      !}
   ?}
?}


\poz_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [??]
:: OPIS: Dołączenie nowej pozycji dokumentu.
::       Funkcja wywoływana po Dołącz pozycji dokumentu POZ.
::  OLD: \poz_dol/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('poz_dol2','dok_fks',_a)


\pus_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Funkcja zeruje pola zmiennej KA (KA.S1..KA.S6 i KA.KW1..KA.KW6)
::  OLD: \pus_wyr/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(35)='T'
|| {! _i:=1..6 |!
     ($('KA.S'+$_i+':='''''))();
     ($('KA.E'+$_i+':='''''))();
     ($('KA.KW'+$_i+':=null'))()
   !};
::Poczatek modyfikacji dla Maclex Fiks 04-10-2009 AK [1120]
   TPOW.clear;{? TPOW.first || {! |? TPOW.del !} ?}
::Koniec modyfikacji dla Maclex Fiks
?};
1


\spr_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [??]
:: OPIS: Formuła po redakcji pozycji dokumentu.
::       Funkcja wywoływana po redakcji pozycji dokumentu POZ.
::       Sprawdza, czy wypełniono komentarz, kwotę i stronę księgową.
::  OLD: \spr_poz/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('spr_poz2','dok_fks')


\wal_nar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2006]
:: OPIS: Zwraca walute narodowa (ref)
::   WE: _a - zadeklarowany - podczytac walute narodowa
::  OLD: \wal_nar/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || exec('czytaj','#stalesys',,FINFO) ?};
{? _ || FINFO.NAROD() ?}; FINFO.NAROD


\spr_poz2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [??]
:: OPIS: Formula po redakcji pozycji dokumentu.
::       Funkcja wywolywana po redakcji pozycji dokumentu POZ.
::  OLD: \spr_poz/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=1;
SSTALE.AO().ROK();
exec('fnd_ks','dok_fks');
{? POZ.TID='' & KS.OBTYPROZ
|| POZ.TID:=KS.T_ROZ;
   win_disp()
?};
{? -KS.SP<>'t' & POZ.SP_V || POZ.SP_V:=0 ?};
{? -KS.ROZR='r'
|| {? form(POZ.ID)='' | POZ.TID='' | POZ.DO=date(0,0,0) | POZ.TP=date(0,0,0) |
      ((DOK.DOK_REJ().CZY_ROZL='T' | OKRO_F.NAZ='Bilans otwarcia') & POZ.DATA_R=date(0,0,0))
   || FUN.info('Konto %1 jest rozrachunkowe.\n Wprowadź dane rozrachunku.'@[POZ.KON]); _a:=0
   ?}
|? -KS.ROZR='p' & form(POZ.ID)<>'' & (POZ.DO=date(0,0,0) | POZ.TP=date(0,0,0) | POZ.DATA_R=date(0,0,0) | POZ.TID='')
|| FUN.info('Wprowadź poprawnie lub usuń dane rozrachunkowe.'@); _a:=0
?};
{? _a=0
|| {? form(POZ.ID)=''
   || _a:=-7
   |? POZ.TID=''
   || _a:=-6
   |? POZ.DO=date(0,0,0)
   || _a:=-8
   |? POZ.TP=date(0,0,0)
   || _a:=-9
   |? POZ.DATA_R=date(0,0,0)
   || _a:=-10
   || _a:=1
   ?}
?};
{? _a=1 & POZ.KON=''
|| FUN.info('Wprowadź konto księgowe.'@); _a:=-5
?};
{? _a=1 & POZ.SUM=0
|| FUN.info('Wprowadź kwotę.'@); _a:=-2
?};
{? POZ.ODD=null & |POZ.ID<>''
|| _w:={? POZ.WAL=null || exec('wal_nar','dok_fks') || POZ.WAL ?};
   POZ.ODD:=exec('wyp_odd','rozrach')
?};
{? |POZ.ID='' & -KS.ROZR<>'r' || POZ.ODD:=null; POZ.TID:='' ?};
{? _a=1 & PAR_SKID.get(38)='N' & POZ.DO>POZ.TP & ~(DOK.DOK_REJ().PR='T' & POZ.TP=date(0,0,0))
|| FUN.info('Data otwarcia rozrachunku jest późniejsza od terminu płatności.'@);
   _a:=-8
?};
{? _a=1
|| {? -(~POZ.STR)<>'wn' & -(~POZ.STR)<>'ma'
   || FUN.info('Wprowadź poprawnie stronę księgową: \n Wn - debet \n  Ma - kredyt.'@); _a:=-1
   ?}
?};
{? _a=1 & (-POZ.TID='rmk' | -POZ.TID='rmp') & form(POZ.ID)<>''
|| KS.cntx_psh(); KS.prefix(); _a:=exec('rmk_add','rmk');
   KOM.cntx_psh(); KOM.prefix();
   RMK.index('NAZ'); RMK.prefix();
   {? ~RMK.find_key(POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK)
   || FUN.info('Pozycja rozrachunkowa typu \'rozliczenia międzyokresowe\'.\nNależy wprowadzić dane RMK lub RMP lub zmienić typ.'@);
      _a:={? POZ.KOM().KS().OBTYPROZ || -7 || -6 ?}
   ?};
   KS.cntx_pop(); KOM.cntx_pop()
?};
{? _a=1
|| {? POZ.WAL<>null ||
      {? POZ.SUMW=0 || FUN.info('Nie podano kwoty w walucie obcej.'@); _a:=-3 ?};
      {? POZ.KURS=0 & _a<>-3 || FUN.info('Nie podano kursu waluty.'@); _a:=-4 ?}
   ?}
?};
{? _a=1
|| {? KS.WIELO='N' & (POZ.WAL<>null | POZ.SUMW$2<>0 | POZ.KURS$4<>0)
   || FUN.info('Dla konta niewalutowego podano informacje o zapisie walutowym.'@);_a:=-5
   ?}
?};
_x:={? _a=1
    || {? POZ.SUM=0
       || FUN.info('Nie wprowadzono kwoty w PLN.'@); 'SUM'
       |? POZ.STR=''
       || FUN.info('Nie wybrano strony konta.'@); 'STR'
       |? POZ.SP_V
       || {? POZ.SUM>0 & POZ.SP_V>POZ.SUM
          || FUN.info('Kwota Split payment VAT większa niż kwota PLN.'@); 'SP_V'
          |? POZ.SUM<0 & POZ.SP_V<POZ.SUM
          || FUN.info('Kwota Split payment VAT mniejsza niż kwota PLN.'@); 'SP_V'
          |? POZ.SUM<0 & POZ.SP_V>0 | POZ.SUM>0 & POZ.SP_V<0
          || FUN.info('Kwota Split payment VAT ma inny znak niż kwota PLN.'@); 'SP_V'
          || ''
          ?}
       || ''
       ?}
    |? _a=-1 || 'STR'
    |? _a=-2 || 'SUM'
    |? _a=-3 || 'SUMW'
    |? _a=-4 || 'KURS'
    |? _a=-5 || 'KON'
    |? _a=-6 || 'TID'
    |? _a=-7 || 'ID'
    |? _a=-8 || 'DO'
    |? _a=-9 || 'TP'
    || 'DATA_R'
    ?};
{? _x='' || _x:=exec('spr_wyr_w','dok_fks',~~,1) ?};
_x


\spr_wyr_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Formula wywolywana po redakcji okienka tabeli POZ.
::       Funkcja sprawdza poprawnosc wypenienia kodow wyroznikow dla pozycji.
::   WE: _a =~~ - sprawdzenie wypelnienia zmiennych KA.KW1..KA.KW6.
::       _a ='' - sprawdzenie wypelnienia rekordow tabeli POW dla POZ.
::       _b = 1  pojedyńczy dokument
::          = 2  wiele dokumentow (np. podczas akceptacji)
::   WY: akronim niewlasciwie wypelnionego pola lub ''
::  OLD: \spr_wyr/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
_x:='';
{? PAR_SKID.get(36)='T' & PAR_SKID.get(35)='T'
|| POW.cntx_psh(); POW.index('POZ');
   KS_W.cntx_psh(); KS_W.index('LP');
   _ks:={? POZ.KOM=null
        || SSTALE.AR();
           exec('jak_kon','konto',ROK_F.SYNT+POZ.KON)
        || POZ.KOM().KS
        ?};
   KS_W.prefix(_ks);
   {? KS_W.first()
   || {! |?
         {? _a=''
         || POW.prefix(POZ.ref(),KS_W.LP); _k:=0;
            {? POW.first() || {! |? _k+=POW.KW$2; POW.next !} ?}
         ?};
         {? KS_W.WYM='T'
         || {? _a=''
            || {? _k$2<>POZ.SUM$2
               || _x:='Wymagane wypełnienie wyróżnika nr '+$KS_W.LP+' dla pozycji '+$POZ.POZ
               ?}
            |? KS_W.ROZDZ<>'T' & ($('KA.KW'+$KS_W.LP))()=null
            || FUN.info('Wymagane wypełnienie wyróżnika nr %1.'@[$KS_W.LP]);
               _x:='E'+$KS_W.LP
            |? KS_W.ROZDZ='T'
            || _x:=exec('spr_rozd','dok_fks',1)
            ?}
         |? _a='' & _k$2<>0 & ((POZ.SUM$2<0 & _k$2<POZ.SUM$2) | (POZ.SUM$2>0 & _k$2>POZ.SUM$2))
         || _x:='Suma wyróżników jest większa od kwoty pozycji\n'+
                'dla wyróżnika nr '+$KS_W.LP+' w pozycji '+$POZ.POZ
         |? _a=~~ & KS_W.ROZDZ='T'
         || _k:=0;
            TPOW.prefix(KS_W.LP);
            {? TPOW.first() || {! |? _k+=TPOW.KW$2; TPOW.next() !} ?};
            {? _k$2<>0 & ((POZ.SUM$2<0 & _k$2<POZ.SUM$2) | (POZ.SUM$2>0 & _k$2>POZ.SUM$2)) & _>0
            || FUN.info('Suma wyróżników jest większa od kwoty pozycji\ndla wyróżnika nr %1'@[$KS_W.LP]);
               _x:='E'+$KS_W.LP
            ?}
         ?};
         _x='' & KS_W.next()
      !}
   ?};
   KS_W.cntx_pop();  POW.cntx_pop()
?};
_x


\spr_rozd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Kontrola wypelnienia wyroznika z rozdzielnikiem
::  OLD: \spr_rozd/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
_k:=0;
TPOW.prefix(KS_W.LP);
{? TPOW.first() || {! |? _k+=TPOW.KW$2; TPOW.next() !} ?};
{? _k$2<>POZ.SUM$2 & _>0
|| FUN.info('Wymagane wypełnie rozdzielnika dla wyróżnika nr %1.\n'
            'Suma kwot z rozdzielnika różna od kwoty dekretu.'@[$KS_W.LP]);
   'E'+$KS_W.LP
|| ''
?}


\pozpradd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Po dolacz POZ, redakcja platnosci ratalnych
::  OLD: \pozpradd/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZRACH.WSK_PRAT='T' & ~exec('e_opdrb','rozrach')
|| exec('fp_f3','raty',POZ)
?};
1


\is_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Czy dokument lub pozycja naleza do grupy dokumentow?
::   WE:  _a  - akronim tabeli DOK lub POZ
::       [_b] - wskazanie na DOKa lub POZa
::  OLD: \is_gr/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
GR_EL.cntx_psh();
_ref:={? _=1 || ($(_a+'.ref()'))() || _b ?};
_ok:=exec('seek_el','dok_fks',_a,_ref) & (_a='POZ' | GR_EL.CALY_DOK);
GR_EL.cntx_pop();
_ok


\pop_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Modyfikacja pola ROZNE.GR_DOK
::   WE:  _a  - akronim tabeli POZ lub DOK
::       [_b] - czy w transakcji? [1]-tak 0-nie
::  OLD: \pop_poz/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:='POZ'; _b:=1 |? _=1 || _b:=1 ?};
{? ROZNE.GR_DOK<>null | exec('is_gr','dok_fks',_a)
|| {? _a='DOK' | ~exec('is_gr','dok_fks','DOK')
   || exec('add_poz','dok_fks',ROZNE.GR_DOK,_a,_b)
   ?}
?}


\poz_dol2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [??]
:: OPIS: Dołączenie nowej pozycji dokumentu.
::       Funkcja wywoływana po Dołącz pozycji dokumentu POZ.
::  OLD: \poz_dol/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
dolpoz:=1;
POZ.cntx_psh();
_nr:=POZ.POZ+_a;
{? ~POZ.first() || _nr:=1?};
POZ.cntx_pop();
{! |?
::Poczatek modyfikacji dla Maclex 13.10.2009 AK [1120]
   {? MLEX.FIKSB
   || exec('ob_bz','ml_zad')
   ?};
::Koniec modyfikacji dla Maclex
   POZ.blank(); exec('pus_wyr','dok_fks');
   POZ.POZ:=_nr;
   POZ.POZ_MOD:={? DOK.DOK_REJ().M_ODD='T' || _nr ?};
   exec('gr_bufor','dok_fks','POZ',1);
   _k:=(SUM.SALWN-SUM.SALMA)$2;
   {? _k>0 || POZ.STR:='Ma'; POZ.SUM:=_k
   |? _k<0 || POZ.STR:='Wn'; POZ.SUM:=-_k
   ?};
   ROZRACH.WSK_PRAT:='N';
   exec('rozr_edi','dok_fks');
   exec('wyr_edi','dok_fks');
   exec('wal_edi','dok_fks');
   {? POZ.edit("exec('spr_poz','dok_fks')")
   || POZ.cntx_psh();
      {? POZ.last()
      || POZ.trig_off('*','*');
         {! |? {? POZ.POZ>=_nr || POZ.POZ:={? DOK_REJ.M_ODD='T' || POZ.POZ_MOD+=1 || POZ.POZ+1 ?}; POZ.put(); POZ.prev() ?} !};
         POZ.trig_on('*','*')
      ?};
      POZ.cntx_pop(); POZ.POZ:=_nr; POZ.add();
      {? ROZRACH.WSK_PRAT='T' || exec('pozpradd','dok_fks') ?};
      exec('dod_wyr','wyrozniki'); exec('suma_dok','dok_fks');
      exec('pop_poz','dok_fks','POZ');
:: zmiana dla Maclex - WS [1120] 12.10.2009
::  dodano aktualizacje tabeli ML_BZAD
      {? MLEX.FIKSB
      ||   exec('dod_poz','ml_zad')
      ?};
:: koniec Maclex
      win_disp();
      _nr+=1
   ?}
!};
VAR_DEL.delete('dolpoz'); 1


\gr_pod_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Typ grupy podatkowej
::   WE: _a - grupa podatkowa
::  OLD: \gr_pod_typ/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? 1+_a='Z'
||
::Brak odliczenia
   {? '@ZInwNPod@ZPozNPal@ZPozNPod@ZakupNpr@ZakuPodN@ZInwPodN@ZakPRopN@'*('@'+_a+'@')
   || 0
::Czesciowe odliczenie
   |? '@ZInwPodZ@ZInwPodS@ZInwPods@ZakPRopZ@ZakuPodZ@ZakuPodS@ZakuPods@'*('@'+_a+'@')
   || 1
::Calkowite
   || 2
   ?}
|| -1
?}


\add_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Dodaje biezacy dokument lub pozycje do grupy dokumentow
::   WE:  _a  - wskazanie na grupe dokumentow
::       [_b] - akronim tabeli [POZ] lub DOK
::       [_c] - czy z transakcja? [1]-tak, 0-nie
::  OLD: \add_poz/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=1 || _b:='POZ'; _c:=1 |? _=2 || _c:=1 ?};
_maska:=($('ref_name('+_b+'.ref)'))()+4;
{? _c || do() ?};
GR_EL.cntx_psh(); GR_EL.index(_b); GR_EL.prefix(REF.FIRMA,_maska,($(_b+'.ref'))());
GR_DOK.index('GR_SYM'); GR_DOK.prefix(REF.FIRMA,'N',null);
{? GR_EL.first()
|| {? GR_EL.GR_DOK=_a
   || 0
   || _gr_dok:=GR_EL.GR_DOK;
      {? _a=null
      || GR_EL.del
      || GR_EL.GR_DOK:=_a;
         GR_EL.put();
         {? _b='POZ' ||
            GR_EL.index('GR_EL'); GR_EL.prefix(REF.FIRMA,_a,_maska,POZ.DOK);
            {? ~GR_EL.first() ||
               DOK.use(ref_name(POZ.DOK));
               GR_EL.GR_DOK:=_a;
               GR_EL.MASKA:=_maska;
               GR_EL.POZ:=null;
               GR_EL.DOK:=POZ.DOK;
               GR_EL.ODD:=POZ.DOK().ODD;
               GR_EL.CALY_DOK:=0;
               GR_EL.add()
            ?}
         ?}
      ?};
      {? _b='POZ' || exec('upd_gr','dok_fks',_gr_dok,_maska,POZ.DOK,0) ?}
   ?}
|| {? _a=null
   || 0
   || GR_EL.GR_DOK:=_a;
      GR_EL.MASKA:=_maska;
      {? _b='POZ'
      || GR_EL.cntx_psh(); GR_EL.index('GR_EL'); GR_EL.prefix(REF.FIRMA,_a,_maska,POZ.DOK);
         DOK.use(ref_name(POZ.DOK));
         {? ~GR_EL.first() ||
            GR_EL.GR_DOK:=_a;
            GR_EL.MASKA:=_maska;
            GR_EL.POZ:=null;
            GR_EL.DOK:=POZ.DOK;
            GR_EL.ODD:=POZ.DOK().ODD;
            GR_EL.CALY_DOK:=0;
            GR_EL.add()
         ?};
         GR_EL.cntx_pop();
         GR_EL.POZ:=POZ.ref();
         GR_EL.DOK:=null;
         GR_EL.ODD:=POZ.DOK().ODD;
         GR_EL.CALY_DOK:=0;
         GR_EL.add()
      || GR_EL.POZ:=null;
         GR_EL.DOK:=DOK.ref();
         GR_EL.ODD:=DOK.ODD;
         GR_EL.CALY_DOK:=1;
         GR_EL.add()
      ?}
   ?}
?};
GR_EL.cntx_pop();
{? _c || end() ?}


\upd_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Aktualizacja tabeli GR_DOK i GR_EL
::   WE: _a - wskazanie na GR_DOK
::       _b - maska
::       _c - wskazanie na DOK lub null
::       _d - usunac pusta grupe? 1-tak 0-nie
::  OLD: \upd_gr/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
GR_EL.cntx_psh(); GR_EL.index('GR_EL');
{? _c ||
   GR_EL.prefix(REF.FIRMA,_a,_b);
   POZ.cntx_psh(); POZ.use('pozy'+_b); POZ.prefix();
   _ok:=1;
   {? GR_EL.first() ||
      {! |?
         {? GR_EL.MASKA=_b & GR_EL.POZ & GR_EL.POZ().DOK=_c || _ok:=0 ?};
         _ok & GR_EL.next()
      !}
   ?};
   POZ.cntx_pop();
   {? _ok & GR_EL.find_key(_c) || GR_EL.del() ?}
?};
{? _d & (GR_EL.prefix(REF.FIRMA,_a); ~GR_EL.first()) ||
   GR_DOK.prefix(REF.FIRMA);
   {? GR_DOK.seek(_a) ||
      {? ROZNE.GR_DOK=GR_DOK.ref() || exec('gr_bufor','dok_fks') ?};
      GR_DOK.del();
      {? var_pres('T_GR')>100 || T_GR.del() ?}
   ?}
?};
GR_EL.cntx_pop()


\aegrslu2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Po redakcji pola GR_DOK.SLU
::  OLD: \aegrslu2/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_DOK.SLU
|| {? WYDRUKI.SLO().SLU<>GR_DOK.SLU || WYDRUKI.SLO:=null ?};
   1
|| WYDRUKI.SLO:=null
?}


\bldzrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2006]
:: OPIS: Wartosc poczatkowa pola GR_DOK.REJ
::  OLD: \bldzrej/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
REJ.ref()


\nag_pre
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Do obslugi zrodla pochodzenia dokumentu
::       funkcja obsluguje pole zrodlo pochodzenia, które redaguje się w naglowku dokumentu zrodlowego. Przed redakcja
::       pola zapamietywana jest w zmiennej zrodlo (zrodlo pochodzenia) wartosc (SLOSLU.NAGSL) SLOSLU.SLSLU
::  OLD: \nag_pre/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1)=DOK
|| exec('nag_dsp','dok_fks');
   {? DOK_REJ.POCH<>null & DOK_REJ.ZM_POCH='N' || 0 || 1 ?};
   {? var_pres('__KORNAG')<=0 | POMOC.KNAG=1 | cur_tfld()=DOK || exec('be_edok_fld','dok_fks1') || 0 ?}
|| cur_tab()<>POZOPER | (cur_tab=POZOPER & POZOPER.FIKS_TIP='T')
?}


\nag_dsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: funkcja obsluguje pole zrodlo pochodzenia, które redaguje się w nagłowku dokumentu zrodlowego.
::       Funkcja sprawdza, czy zrodlo pochodzenia bylo juz redagowane. Jesli tak to wyswietla odpowiedni slownik.
::  OLD: \nag_dsp/slo_slu.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1)=DOK
|| {? DOK.WYS<>null
   || SLOSLU.SLSLU:=DOK.WYS().SLU().NAZ
   || {? SLOSLU.SLSLU=''
      || {? DOK_REJ.POCH
         || SLOSLU.SLSLU:=DOK_REJ.POCH().SLU().NAZ;
            win_disp()
         ?}
      ?}
   ?};
   1
|| SLOSLU.SLSLU:={? cur_tab(1,1)=POZDOK || POZDOK.POZOPER().DOTYCZY().NAZ || cur_tab(1,1).DOTYCZY().NAZ ?}
?}


\nag_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: F3 dla pola SLOSLU.SLSLU
::  OLD: \nag_f3/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1)<>DOK
|| exec('nag_f31','dok_fks')
|| SLUAPPL.cntx_psh();
   SLUAPPL.index('POM');
   SLUAPPL.prefix('F','T');
   SLUAPPL.win_sel('WYB');
   {? ~SLUAPPL.find_key(SLOSLU.SLSLU) || SLUAPPL.first() ?};
   {? SLUAPPL.select(,1)
   || SLOSLU.SLSLU:=SLUAPPL.SLU().NAZ;
      {? DOK.WYS().SLU().NAZ<>SLUAPPL.SLU().NAZ || DOK.WYS:=0 ?};
      SLO.prefix(SLUAPPL.SLU)
   || {? SLOSLU.SLSLU='' || DOK.WYS:=0 ?}
   ?};
   SLUAPPL.cntx_pop();
   SLOSLU.SLSLU
?}


\nag_f31
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: funkcja F3 dla zmiennej
::  OLD: \nag_f3/slo_slu.fml
::----------------------------------------------------------------------------------------------------------------------
SLUAPPL.cntx_psh();
SLUAPPL.index('POM');
SLUAPPL.prefix();
SLUAPPL.prefix();
{? ~SLUAPPL.find_key('F','T',SLOSLU.SLSLU)
|| SLUAPPL.first()
?};
SLUAPPL.win_sel('SLO2');
{? SLUAPPL.select(,1)
|| SLOSLU.SLSLU:=SLUAPPL.SLU().NAZ;
   cur_tab.DOTYCZY:=SLUAPPL.SLU
?};
SLUAPPL.cntx_pop()


\prz_okr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: NN [12.10]
:: OPIS: Na F3 dla pola PARAM.OKROVAT
::  OLD: \prz_okr2/param.fml
::----------------------------------------------------------------------------------------------------------------------
OKRO_F.win_sel('WER');
wyb:=0; _okr:=0;
OKRO_F.index('NAZ'); OKRO_F.prefix();
{? ($('PARAM.'+cur_afld))()<>''
|| {? ($('PARAM.'+cur_afld))()*'/'
   || ROK_F.cntx_psh(); ROK_F.index('NAZWA'); ROK_F.prefix(REF.FIRMA);
      _okr_ok:=ROK_F.find_key((($('PARAM.'+cur_afld))()*'/')-($('PARAM.'+cur_afld))()) &
      OKRO_F.find_key(REF.FIRMA,ROK_F.NAZ,(($('PARAM.'+cur_afld))()*'/'-1)+($('PARAM.'+cur_afld))());
      ROK_F.cntx_pop();
      _okr_ok
   || OKRO_F.find_key(REF.FIRMA,SSTALE.AR().NAZ,($('PARAM.'+cur_afld))())
   ?}
|| SSTALE.AO()
?};
OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.FIRMA);
OKRO_F.hdr_sel();
{? OKRO_F.select(,1)
|| PARAM.OKRES:=OKRO_F.ref;
   {? var_pres('vpozvat')=-1
   || {? cur_afld='OKRVAT1' || DOKN.OKRVAT1:=OKRO_F.ref() || DOK.OKRVAT:=OKRO_F.ref ?}
   || VPOZ.OKRVAT:=OKRO_F.ref; VPOZ.A_VAT:=null
   ?};
   ($('PARAM.'+cur_afld))():={? +OKRO_F.NAZ || OKRO_F.NAZ+'/'+OKRO_F.ROK().NAZ || '' ?};
   PARAM.ROK:=OKRO_F.ROK
?};
($('PARAM.'+cur_afld))()


\por_okr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Po redakcji pola PARAM.OKROVAT
::  OLD: \por_okr2/param.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.DOK_REJ().KOR_NAG='T' & cur_afld='OKRVAT1'
|| _a:=exec('por_okr2','knag')
|| OKRO_F.index('NAZ'); OKRO_F.prefix(REF.FIRMA);
   _a:=1;
   {? PARAM.OKROVAT<>''
   || {? {? PARAM.OKROVAT*'/'
         || OKRO_F.find_key((PARAM.OKROVAT*'/')-PARAM.OKROVAT,(PARAM.OKROVAT*'/'-1)+PARAM.OKROVAT)
         || OKRO_F.find_key(SSTALE.AR().NAZ,PARAM.OKROVAT)
         ?}
      || {? OKRO_F.POCZ=date(0,0,0)
         || FUN.info('Okresem rozliczenia VAT nie może być\n"Bilans otwarcia" i "Bilans zamknięcia".'@); _a:=0
         || PARAM.OKRES:=OKRO_F.ref(); DOK.OKRVAT:=OKRO_F.ref();
            PARAM.OKROVAT:={? +OKRO_F.NAZ || OKRO_F.NAZ+'/'+OKRO_F.ROK().NAZ || '' ?};
            {? var_pres('vpozvat')=-1 || DOK.OKRVAT:=OKRO_F.ref() || VPOZ.OKRVAT:=OKRO_F.ref() ?};
            _a:=1
         ?}
      || FUN.info('Błędna nazwa okresu.'@); PARAM.OKRES:=null; _a:=0
      ?}
   ?};
   {? _a
   || {? PARAM.OKROVAT=''
      || PARAM.OKRES:=null;
         {? var_pres('vpozvat')=-1 || DOK.OKRVAT:=null || VPOZ.OKRVAT:=null ?}
      ?};
      {? -menu_txt(,)<>'dołącz' & var_pres('vpozvat')>0
      || {? VPOZ.sel_size()=0
         || _a:=exec('spr_okvat1','dok_fks')
         || _a:=exec('spr_okvat2','dok_fks')
         ?}
      ?}
   ?};
   OKRO_F.index('ROK');
   {? _a & fld<>'' || {? var_pres('vpozvat')=-1 || DOK.A_VAT:=null || PARAM.A_VAT:=VPOZ.A_VAT:=null ?} ?};
   DOK.efld_opt(DOK.win_edit('?'),'enable='+$(DOK.OKRVAT=null),DOK,'A_VAT');
   PARAM.efld_opt('PARAMOKR','enable='+$(PARAM.OKROVAT=''),PARAM,'A_VAT');
   PARAM.win_edit('PARAMOKR');
   win_disp()
?};
_a


\spr_okvat1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [11.21]
:: OPIS: Sprawdzanie i ewentualne przeliczenie procentu struktury VAT (dla pojedynczych rekordow)
::   WY: 1,2/0 - czy akceptowac zmiany
::  OLD: \spr_okvat1/param.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? exec('gr_pod_typ','dok_fks',VPOZ.GRVAT().GRVAT().KOD)=1
|| VPOZ.cntx_psh();
   {? VPOZ.get()
   || UD_POM.ROK_POCZ:={? VPOZ.OKRVAT=null || SSTALE.AR || VPOZ.OKRVAT().ROK ?};
      UD_POM.ROK_KON:={? PARAM.OKRES=null || SSTALE.AR || PARAM.OKRES().ROK ?};
      {? UD_POM.ROK_POCZ<>UD_POM.ROK_KON & UD_POM.ROK_POCZ().PROC_VAT<>UD_POM.ROK_KON().PROC_VAT
      || P_V.cntx_psh();
         P_V.index('V_P'); P_V.prefix(VPOZ.ref());
         {?  P_V.first()
         || _zwrot:=FUN.choice('Zmieniono rok, wg którego liczono strukturę podatku VAT (na %1).'
                            '\nWymagane jest przeliczenie kwoty podatku VAT do odliczenia i bez odliczenia.'
                            '\nIstnieją już dekrety w dokumencie dla wybranej pozycji VAT.'
                            ''@[UD_POM.ROK_KON().NAZ],0,'Kontynuuj bez przeliczania'@,'Przelicz kwoty VAT'@)
         || _zwrot:=FUN.choice('Zmieniono rok, wg którego liczono strukturę podatku VAT (na %1).'
                            '\nWymagane jest przeliczenie kwoty podatku VAT do odliczenia i bez odliczenia.'
                           ''@[UD_POM.ROK_KON().NAZ],0,'Kontynuuj bez przeliczania'@,'Przelicz kwoty VAT'@)
         ?};
         P_V.cntx_pop()
      ?}
   ?};
   VPOZ.cntx_pop();
   {? _zwrot=2
   || _proc:={? PAR_SKID.get(83)='T' & VPOZ.C_PROC_S=0
             || 100
             || {? Plugin.runnable('GRVAT_STRUKTURA')
                || Plugin.run('GRVAT_STRUKTURA')
                || UD_POM.ROK_KON().PROC_VAT
                ?}
             ?};
      _prewsk:={? PAR_SKID.get(83)='T' & VPOZ.C_PREWSK
               || {? Plugin.runnable('GRVAT_PREWSKAZNIK')
                  || Plugin.run('GRVAT_PREWSKAZNIK')
                  || UD_POM.ROK_KON().PREWSK
                  ?}
               || 100
               ?};
      {? (SLO.KOD='ZakuPodS' | SLO.KOD='ZInwPodS')
      || VPOZ.VAT_ODL:=(VPOZ.VAT*(_proc/100)*(_prewsk/100)*(50/100))$2
      |? (SLO.KOD='ZakuPods' | SLO.KOD='ZInwPods')
      || VPOZ.VAT_ODL:=(VPOZ.VAT*(50/100))$2
      || VPOZ.VAT_ODL:=(VPOZ.VAT*(_proc/100)*(_prewsk/100))$2
      ?};
      VPOZ.VATKOSZT:=VPOZ.VAT-VPOZ.VAT_ODL
   ?}
?};
_zwrot


\spr_okvat2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [11.21]
:: OPIS: Sprawdzanie i ewentualne przeliczenie procentu struktury VAT (dla grupy rekordow)
::   WY: 1,2/0 - czy akceptowac zmiany
::  OLD: \spr_okvat2/param.fml
::----------------------------------------------------------------------------------------------------------------------
_komunik:=0; odl_cz:=1;
UD_POM.ROK_KON:={? PARAM.OKRES=null || SSTALE.AR || PARAM.OKRES().ROK ?};
VPOZ.cntx_psh(); VPOZ.prefix();
VPOZ_SEL:=VPOZ.sel_aget();
{? VPOZ_SEL.first()
|| {! |?
      {? VPOZ.seek(VPOZ_SEL.REF,VPOZ.name()) & exec('gr_pod_typ','dok_fks',VPOZ.GRVAT().GRVAT().KOD)=1
      || UD_POM.ROK_POCZ:={? VPOZ.OKRVAT=null || SSTALE.AR || VPOZ.OKRVAT().ROK ?};
         {? UD_POM.ROK_POCZ<>UD_POM.ROK_KON & UD_POM.ROK_POCZ().PROC_VAT<>UD_POM.ROK_KON().PROC_VAT
         || odl_cz:=FUN.choice('W wybranych pozycjach zmieniono rok, wg którego liczono strukturę podatku VAT (na %1).'
                               '\nWymagane jest przeliczenie kwoty podatku VAT do odliczenia i bez odliczenia.'
                               '\nMogą istnieć już w dokumencie dekrety dla pozycji VAT.'@[UD_POM.ROK_KON().NAZ],
                               0,'Kontynuuj bez przeliczania'@,'Przelicz kwoty VAT'@);
           _komunik:=1
         ?}
      ?};
      ~_komunik & VPOZ_SEL.next()
   !}
?};
VAR_DEL.delete('VPOZ_SEL');
VPOZ.cntx_pop();
odl_cz


\be_grdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Przed redakcja pola ROZNE.GR_SYM
::  OLD: \be_grdok/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
_czy_poz:=cur_tab=POZ;
{? _czy_poz & POZ.DOK=null
|| return(0)
|? -menu_txt(,)<>'popraw'
|| {? _czy_poz
   || ~exec('is_gr','dok_fks','DOK')
   || 1
   ?}
|| GR_DOK.cntx_psh(); GR_DOK.prefix(REF.FIRMA);
   GR_EL.cntx_psh(); GR_EL.index({? _czy_poz || 'POZ' || 'DOK' ?});
   GR_EL.prefix(REF.FIRMA,ref_name(cur_tab(1).ref())+4,cur_tab(1).ref());
   _ok:={? GR_EL.first()
        || (_czy_poz | GR_EL.CALY_DOK)
        || {? _czy_poz
           || ~exec('is_gr','dok_fks','DOK',POZ.DOK)
           || 1
           ?}
        ?};
   GR_EL.cntx_pop();
   GR_DOK.cntx_pop();
   _ok
?}


\f3_grdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Na klawisz F3 pola ROZNE.GR_SYM
::  OLD: \f3_grdok/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
GR_DOK.cntx_psh(); GR_DOK.index('GR_SYM');
_system:={? ROZNE.GR_DOK
         || ROZNE.GR_DOK().SYSTEM
         || exec('blsystemdok','dok_fks')
         ?};
GR_DOK.prefix(REF.FIRMA,'N',null,_system);
_jest:=GR_DOK.find_key(ROZNE.GR_SLO,ROZNE.GR_SYM,ROZNE.GR_SYM);
GR_DOK.index('SYM'); GR_DOK.prefix(REF.FIRMA,'N',null,_system);
GR_DOK.win_sel('SLO');
{? ~_jest & ~GR_DOK.find_key(ROZNE.GR_SYM) || GR_DOK.first() ?};
_ok:={? GR_DOK.select(,1)
     || ROZNE.GR_DOK:=GR_DOK.ref();
        ROZNE.GR_SLO:=GR_DOK.SLO;
        ROZNE.GR_SYM:=GR_DOK.SYM
     || 0
     ?};
GR_DOK.cntx_pop();
_ok


\ae_grdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Po redakcja pola ROZNE.GR_SYM
::  OLD: \ae_grdok/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.GR_SYM<>''
|| GR_DOK.cntx_psh();
   _system:={? ROZNE.GR_DOK
            || ROZNE.GR_DOK().SYSTEM
            || exec('blsystemdok','dok_fks')
            ?};
   GR_DOK.index('GR_SYM'); GR_DOK.prefix(REF.FIRMA,'N',null,ROZNE.GR_DOK().SYSTEM, ROZNE.GR_SLO, ROZNE.GR_SYM, ROZNE.GR_SYM);
   _ok:={? GR_DOK.first()
        || 1
        || GR_DOK.index('SYM'); GR_DOK.prefix(REF.FIRMA,'N',null,_system,ROZNE.GR_SYM);
           {? GR_DOK.first()
           || ROZNE.GR_DOK:=GR_DOK.ref();
              ROZNE.GR_SYM:=GR_DOK.SYM;
              ROZNE.GR_SLO:=GR_DOK.SLO;
              1
           || FUN.info('Brak grupy dokumentów o symbolu: %1'@[ROZNE.GR_SYM]);0
           ?}
        ?};
   GR_DOK.cntx_pop();
   _ok
|| ROZNE.GR_DOK:=ROZNE.GR_SLO:=null; 1
?}


\usr_zar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: wartosc poczatkowa uzytkownika systemu
::       Formula zwraca tekst bedacy zlaczeniem nazwy systemu i nazwy uzytkownika, ktory jest w nim zalogowany
::       (np.: 'ESTRA:szef')
::  OLD: \poczoper/skid.fml
::  OLD: \usr_zar/skid_usr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('sourcedk')>0 || sourcedk+': ' || 'FKS: ' ?}+app_info('app_user')


\blsystemdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wartość początkowa pola DOK.SYSTEM
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('sourcedk')>0 || sourcedk || 'PROCES' ?}


\pop_poz_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [??]
:: OPIS: Funkcja wywoływana po Popraw pozycji dokumentu POZ.
::  OLD: \pop_poz/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
KOMT:='';
KS.cntx_psh();
exec('pop_wyr','wyrozniki');
exec('pop_poz','dok_fks');
exec('suma_dok','dok_fks');
:: zmiana dla Maclex - WS [1120] 13.10.2009
::  dodano aktualizacje tabeli ML_BZAD
KS.cntx_pop();
{? MLEX.FIKSB
|| exec('zbz_prr','ml_zad',1);
   exec('zbz_pop','ml_zad')
?};
:: koniec Maclex
{? ROZRACH.WSK_PRAT='N'
|| {? exec('czyLista','raty',POZ) || exec('outLista','raty',POZ) ?}
|| {? exec('e_opdrb','rozrach')
   || exec('outLista','raty',POZ)
   || {? POZ.SUM<>exec('wartPlat','raty','WAR',,POZ,POZ.ref())
      || exec('fp_f31','raty',1,0)
      ?}
   ?}
?};
&pop_kon; &pop_konc; &pop_idc; &pop_wal;
{? KOMT<>'' || FUN.emsg(KOMT) ?};
1


\ar_dz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2006]
:: OPIS: Rekord po okna WER_DZ tabeli GR_DOK
::  OLD: \ar_dz/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=__CHK.record2(GR_DOK,'SYM',);
{? _r=''
|| _ref:=GR_DOK.ref();
   GR_DOK.cntx_psh(); GR_DOK.index('REJ');
   GR_DOK.prefix(REF.FIRMA,'T',SSTALE.AO,REJ.ref());
   {? GR_DOK.find_key(GR_DOK.SYM,GR_DOK.SYM) & (-menu_txt(,)='dołącz' | _ref<>GR_DOK.ref())
   || FUN.info('Istnieje dokument zbiorczy o symbolu: %1'@[GR_DOK.SYM]);
      _r:='SYM'
   ?};
   GR_DOK.cntx_pop()
?};
{? _r='' || GR_DOK.SYSTEM:='' ?};
_r


\poz_up
exec('zmien_lpa','#dragdrop','POZ','DOK',,,'U')

\poz_down
exec('zmien_lpa','#dragdrop','POZ','DOK',,,'D')

\poz_number
exec('zmien_lpa','#dragdrop','POZ','DOK',,,'N')

\poz_dnd1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Formula na drop w oknach POZ
::  OLD: \poz_dnd1/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_zm_kol:=0;
POZ.cntx_psh(); POW.cntx_psh();
_tab:=dnd_info('dropped_records');
{? _tab.first()
|| _name:=dnd_info('table_name');
   {? _name=POZ.name()
   || _zm_kol:=POZ.seek(_tab.REF,)
   ?};
   _ref:=dnd_info('dest_record');
   {? _zm_kol
   || {? _ref=null & POZ.last() || _ref:=POZ.ref() ?};
      {? POZ.seek(_ref) || exec('zmien_lp','#dragdrop','POZ','DOK',_tab) ?}
   |? exec('spr_mod','dok_fks')
   || FUN.info('Dokument docelowy powstał z dokumentu\ndla wielu jednostek księgowych.\nOperacja niemożliwa.'@)
   || _v_sel:=_tab.size(); _v_ok:=0; _v_crc:=0;
      {? _ref=null
      || {? ~POZ.last()
         || POZ.DOK:=DOK.ref();
            POZ.POZ:=0
         ?};
         _ok:=1
      || _ok:=POZ.seek(_ref)
      ?};
      {? _ok
      || _dok:=POZ.DOK;
         _nr:=POZ.POZ+(_ref=null);
         _nam:=POZ.name();
        _ile:=_tab.size();
         {? _ref<>null & POZ.last()
         || {!
            |? POZ.POZ+=_ile; POZ.put();
               _ref<>POZ.ref() & POZ.prev()
            !}
         ?};
         SSTALE.AR();
         KS.index('SYM'); KS.prefix(ROK_F.ref());
         KOM.index('SYS');
         {!
         |? POZ.use(_name); POZ.prefix();
            POW.use('pow_'+(_name+4)); POW.index('POZ');
            {? POZ.seek(_tab.REF,)
            || {? POZ.crc()=_tab.CRC
               || _poz_ref:=_ks:=null;
                  POZ.cntx_psh();
                  POZ.use(_nam); POZ.prefix();
                  POZ.DOK:=_dok;
                  POZ.POZ:=_nr; _nr+=1;
                  POZ.VAT:=null;
                  POZ.A:=POZ.ZP:=POZ.ZK:='N';
                  POZ.PKON:='';
                  POZ.ODD_KS:=POZ.DOK_MOD:=null;
                  POZ.POZ_MOD:=0;
                  _sym:=ROK_F.SYNT+POZ.KON;
                  {? POZ.KON<>'' & KS.find_key(_sym) & KS.SYM=_sym
                  || _ks:=KS.ref();
                     KOM.prefix(KS.ref(),'T');
                     {? KOM.first() || POZ.KOM:=KOM.ref() ?};
                     {? KS.ROZR='Z'
                     || POZ.ID:=POZ.SYM_ZEW:=''; POZ.ODD:=null; POZ.TID:=POZ.SYM_ROK:='';
                        POZ.DO:=POZ.TP:=POZ.DATA_R:=date(0,0,0)
                     || {? POZ.ID<>'' & POZ.DATA_R<>date(0,0,0)
                        || POZ.DO:=POZ.TP:=POZ.DATA_R:=date(0,0,0);
                           exec('ust_roz','dok_fks')
                        ?}
                     ?}
                  ?};
                  {? POZ.add()
                  || _poz_ref:=POZ.ref();
                     _v_ok+=1
                  ?};
                  POZ.cntx_pop();
                  POW.prefix(POZ.ref());
                  {? _poz_ref & _ks & POW.first()
                  || {!
                     |? POW.cntx_psh();
                        POW.use('pow_'+(_nam+4)); POW.prefix();
                        POW.POZ:=_poz_ref;
                        POW.add();
                        POW.cntx_pop();
                        POW.next()
                     !};
                     POW.cntx_psh();
                     POW.use('pow_'+(_nam+4)); POW.prefix();
                     exec('czy_ok','wyrozniki',_ks,_poz_ref);
                     POW.cntx_pop()
                  ?}
               || _v_crc+=1
               ?}
            ?};
            _tab.next()
         !};
         {? _v_sel<>_v_ok
         || FUN.info('Liczba zaznaczonych pozycji: '+$_v_sel+'\n'+
                     'Liczba skopiowanych pozycji: '+$_v_ok+
                     {? _v_crc
                     || '\nLiczba zmieninych pozycji\n'+
                        'od momentu zaznaczenia: '+$_v_crc
                     || ''
                     ?}
                    )
         ?}
      ?}
   ?}
?};
POZ.cntx_pop(); POW.cntx_pop();
{? _zm_kol=0 || exec('suma_dok','dok_fks') ?}


\dat_otw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Formula na datę rozliczenia pozycji rozrachunku
::  OLD: \dat_otw/automat.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(37)='T' || DOK.DTO || DOK.DTW ?}


\ust_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009+]
:: OPIS: Ustawia pola zwiazane z rozrachunkiem
::  OLD: \ust_roz/skid_op.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZ.DATA_R=date(0,0,0) || POZ.DATA_R:=exec('dat_otw','dok_fks') ?};
exec('ust_do','dok_fks');
exec('ust_tp','dok_fks');
POZ.SYM_ROK:=exec('op_unik_sym','rozrach',POZ.ID,POZ.DO)


\ust_do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009+]
:: OPIS: Ustawia date otwarcia rozrachunku
::  OLD: \ust_do/skid_op.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZ.DO=date(0,0,0) || POZ.DO:=DOK.DTO ?}


\ust_tp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009+]
:: OPIS: Ustawia termin platnosci rozrachunku
::  OLD: \ust_tp/skid_op.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.RVAT |
   ((DOK.DOK_REJ().SLO().KOD='PROSTY' | DOK_REJ.SLO().KOD='WEW') & (DOK_REJ.CZY_DP='T' | DOK_REJ.CZY_DP='O') & DOK.D3<>date(0,0,0))
|| {? DOK_REJ.PR<>'T' | ROZRACH.WSK_PRAT<>'T' || POZ.TP:=DOK.D3 ?}
|| {? POZ.TP=date(0,0,0) & DOK.DTO<>date(0,0,0) || POZ.TP:=DOK.DTO+FINFO.OKRROZ ?}
?}


\usu_vats
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula Usun w okienku WER tabeli VAT_SR
::      _u - czy usunac ?, 0 - nie,1 - tak z transakcja, 2 - tak bez transakcji
::  OLD: \usu_vats/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
_u:=0;
{? _=1
|| _u:=2
|| {? VAT_SR.ROZL='T'
   || FUN.info('Nabycie środka rozliczone.\nOperacja usunięcia rozliczonego nabycia niemożliwa.'@)
   || _u:=FUN.ask('Usunąć bieżący wiersz?'@)
   ?}
?};
{? _u
|| {? VAT_SR.r_lock(1,1)
   || {? _u=1 || do() ?};
      VAT_KW.index('VAT_KW');
      VAT_KW.prefix(VAT_SR.ref);
      {? VAT_KW.first() || {!|? VAT_KW.del() !} ?};
      VAT_SR.del();
      {? _u=1 || end() ?}
   || {? _=0 || FUN.info('Dane środka redaguje inny operator.'@)  ?}; 0
   ?}
?}


\dok_zal_okro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Szuka okresu (tabela OKRO_F) dla dokumentu ksiegowego.
::   WY: ref okresu
::  OLD: \dok_zal_okro/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=null;
ROK_F.cntx_psh(); ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA);
{? ROK_F.find_key(2+(DOK.name()+4))
|| OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref(),#(DOK.name()+2));
   {? OKRO_F.first() || _zwrot:=OKRO_F.ref() ?};
   OKRO_F.cntx_pop()
?};
ROK_F.cntx_pop();
_zwrot


\del_att
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Usuwa wszystkie zalaczniki zwiazane z biezacym rekordem tabeli
::   WE: [_a] - refsql rekordu dla ktorego zostana usuniete zalaczniki
::  OLD: \del_att/skid_att.fml
::----------------------------------------------------------------------------------------------------------------------
_refsql:={? _=0 || $cur_tab(1,1).ref() || _a ?};
DOKUM.cntx_psh();
DOKUM.index('DOKUM'); DOKUM.prefix(REF.FIRMA,_refsql);
{? DOKUM.first()
|| {!
   |?
      POM.TAB:='DOKUM';
      POM.TYPDOK:='SYS';
      numer:=DOKUM.NR;
      oldnumer:=1;
      exec('nr_old','numery');
      exec('dokumz_del','dokum_zal');
      DOKTYP.index('DOKDC'); DOKTYP.prefix(DOKUM.ref());
      {? DOKTYP.first() || {! |? DOKTYP.del() !} ?};
      _uid:=DOKUM.uidref(); _rr:=DOKUM.del(); exec('dokumlog_del','zbl_dok',_uid);
      _rr
   !}
?};
DOKUM.cntx_pop()


\znak_not
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Znakowanie dokumentu powiązanego do DOK
::  OLD: \znak_not/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
{? -(7+_a)='ser_nag'
|| SER_NAG.cntx_psh(); SER_NAG.prefix(REF.FIRMA);
   {? SER_NAG.seek(#(7-DOK.DOKZRODL),'ser_nag')
   || SER_NAG.REJ:=null; SER_NAG.NREJ:=0; SER_NAG.DATDOK:=date(0,0,0); SER_NAG.ST_DEK:='N';
      _ok:=SER_NAG.put()
   ?};
   SER_NAG.cntx_pop()
|? -(7+_a)='par_nag'
|| PAR_NAG.cntx_psh(); PAR_NAG.prefix();
   {? PAR_NAG.seek(#(7-DOK.DOKZRODL),PAR_NAG.name())
   || PAR_NAG.REJ:=null; PAR_NAG.NREJ:=0; PAR_NAG.DATADOK:=date(0,0,0);
      PAR_NAG.SYMDOK:=''; PAR_NAG.ST_DEK:='N'; _ok:=PAR_NAG.put()
   ?};
   PAR_NAG.cntx_pop()
|? _b<>''
|| _ref:=BB.sqlint(DOK.EDOKUM); _nam:=form(DOK.EDOKUM-8);
   {? _ref<>0 & _nam<>''
   || TYPOBIEG.cntx_psh(); TYPOBIEG.prefix();
      EDOKUM.cntx_psh(); EDOKUM.use(_nam); EDOKUM.index('ID'); EDOKUM.prefix();
      {? EDOKUM.seek(_ref,_nam)
      || EDOKUM.REJ:=null; EDOKUM.NREJ:=0; EDOKUM.DATDOK:=date(0,0,0); EDOKUM.DOK_KS:='';
         _ok:=EDOKUM.put();
         ETYPY.cntx_psh(); ETYPY.prefix();
         {? _ok
         || EDOKUM.STDEKRD:=exec('zn_deleg','obiegi_dekr',EDOKUM.ref()); _ok:=EDOKUM.put()
         ?};
         ETYPY.cntx_pop();
         {? _ok
         || EDOKUM.cntx_psh();
            ETYPY.cntx_psh(); ETYPY.prefix();
            {? EDOKUM.TYPOBIEG().NAZWA='Obieg delegacji' & EDOKUM.TYP().FAKT_DEL=2
            || _ok:=0;
               EDOK_ZAL.cntx_psh(); EDOK_ZAL.index('EDOKUMF'); EDOK_ZAL.prefix(EDOKUM.ref());
               {? EDOK_ZAL.first() & EDOK_ZAL.EDOKUM<>null
               || EDOK_ZAL.EDOKUM(); _ok:=1
               ?};
               EDOK_ZAL.cntx_pop()
            ?};
            {? _ok
            || EDOKOS.cntx_psh(); EDOKOS.index('SZUK2'); EDOKOS.prefix(EDOKUM.ref(),'D');
               {? EDOKOS.first() & ~EDOKUM.STDEKRD
               || EDOKOS.STATUS:='N';
                  EDOKOS.DATA:=date(0,0,0);
                  EDOKOS.TIME:=time(0,0,0);
                  EDOKOS.USERS:=null;
                  _ok:=EDOKOS.put()
               ?};
               {? _ok
               || _log:={? EDOKUM.TYPOBIEG().NAZWA='Obieg faktur' || 'faktury'
                        |? EDOKUM.TYPOBIEG().NAZWA='Obieg wniosków' || 'wniosku'
                        || 'planu delegacji / delegacji'
                        ?};
                  exec('add_elog','obiegi_akc','Wycofanie dekretacji '+_log,0)
               ?};
               EDOKOS.cntx_pop()
            ?};
            EDOKUM.cntx_pop(); ETYPY.cntx_pop()
         ?}
      ?};
      EDOKUM.cntx_pop(); TYPOBIEG.cntx_pop()
   ?}
|| _ok:=1
?};
_ok


\znacznik_log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: ustawia znacznik na zaksiegowania na dokumencie
::   WY: czy znacznik zostal ustawiony
::  OLD: \znacznik/ksg.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
_par496:=var_pres('DOK2',FAKS)>0 & PAR_SKID.get(496)='T';
{? form(DOK.DOKZRODL)<>''
|| _kod:=POMOC.OKR().ROK().KOD;
   _nr:=POMOC.OKR().NR;
   {? 1+DOK.DOKZRODL='D'
   || FAKS.cntx_psh();
      _reffak:=#(4-DOK.DOKZRODL);
      FAKS.use('faktu'+(3+(1-DOK.DOKZRODL)));
      FAKS.prefix();
      {? FAKS.seek(_reffak,FAKS.name())
      || FAKS.ZAK:='N';
         FAKS.DOK:='';
         exec('fakskh_clr','dok_fks',FAKS.ref());
         _ok:=FAKS.put()
      ?};
      FAKS.cntx_pop()
   |? 1+DOK.DOKZRODL='P' | 1+DOK.DOKZRODL='K' | 1+DOK.DOKZRODL='X'
   || FAKS.cntx_psh();
      FAKS.use('faktu'+(3+(1-DOK.DOKZRODL)));
      _reffak:={? 1+DOK.DOKZRODL='K' | 1+DOK.DOKZRODL='X' || #(4-DOK.DOKZRODL) || 0 ?};
      FAKS.prefix();
      {? 1+DOK.DOKZRODL='P' &  _par496
      || _pow:=sql('select FAKS.REFERENCE REF from FAKS where FAKS.DOK=\':_a\' or FAKS.DOK2=\':_a\'',$DOK.ref)
      || _pow:=sql('select FAKS.REFERENCE REF from FAKS where FAKS.DOK=\':_a\'',$DOK.ref)
      ?};
      {? _pow.first()
      || {!|?
            {? FAKS.seek(BB.sqlint(_pow.REF),form(8+_pow.REF))
            || {? 1+DOK.DOKZRODL='P' &  _par496
               || FAKS.DOK2:=''; FAKS.ZAK2:='N'
               || FAKS.DOK:=''; FAKS.ZAK:='N'
               ?};
               _ok:=FAKS.put()
            ?};
            _pow.next()
         !}
      ?};
      {? _ok & _reffak & FAKS.seek(_reffak,FAKS.name())
      || FAKS.ZAK:='N';
         _ok:=FAKS.put()
      ?};
      FAKS.cntx_pop()
   || ND.cntx_psh();
      _reffak:=#(4-DOK.DOKZRODL);
      ND.use('nagdo'+(3+(1-DOK.DOKZRODL)));
      ND.prefix();
      {? ND.seek(_reffak,ND.name())
      || ND.ZAK:='N';
         _ok:=ND.put()
      ?};
      ND.cntx_pop()
   ?}
|| _ok:=1
?};
_ok


\znacznik_ke
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Ustawia znacznik na zaksięgowanym dokumencie
::  OLD: \znacznik/ksg_es.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
{? form(DOK.DOKZRODL)<>'' & 2+DOK.DOKZRODL<>'EF' & 2+DOK.DOKZRODL<>'EP' & 2+DOK.DOKZRODL<>'ED'
|| {? 1+DOK.DOKZRODL<>'S'
   || SRDO.use('srdo'+'r'+REF.FIRMA().SYMBOL);
      SRDO.prefix();
      {? SRDO.seek(#DOK.DOKZRODL,SRDO.name())
      || SRDO.K:='N';
         SRDO.DOKKSIEG:='';
         _ok:=SRDO.put()
      ?}
   || DOK.DOKZRODL:=(1-DOK.DOKZRODL);
      SRSR.use('srsr'+'r'+REF.FIRMA().SYMBOL);
      SRSR.prefix();
      {? SRSR.seek(#(1-DOK.DOKZRODL),SRSR.name())
      || SRSR.DOKKSIEG:='';
         SRSR.FKS:='N';
         _ok:=SRSR.put()
      ?}
   ?}
|? 2+DOK.DOKZRODL='EF' | 2+DOK.DOKZRODL='EP' | 2+DOK.DOKZRODL='ED'
|| _ref:=#(2-DOK.DOKZRODL);
   OKRO_F.cntx_psh();
   OKRO_F.prefix();
   {? OKRO_F.seek(_ref,OKRO_F.name()) || _okr:=OKRO_F.ref() || _okr:=null ?};
   OKRO_F.cntx_pop();
   SRST.cntx_psh();
   SRST.use('srst'+'r'+REF.FIRMA().SYMBOL);
   SRST.index('OKR_O_W');
   SRST.prefix(_okr,DOK.ODD);
   _ok:=1;
   {? SRST.first()
   || {! |?
         {? SRST.DEKRET='T'
         || SRST.DEKRET:='N';
            __SRSTOF:=1;
            {? ~SRST.put() || _ok:=0 ?};
            __SRSTOF:=0
         ?};
         SRST.next()
      !}
   ?};
   SRST.cntx_pop()
|| _ok:=1
?};
_ok


\kali_dokdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Usuwanie informacji o zadekretowaniu listy plac i rachunku ze zlecenia
::       _a - ref do dokumentu dekretujacego DOK.ref
::  OLD: \kali_dokdel/skid.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_umowy:=0;
O.cntx_psh();
O.prefix();
{!
|? O.find_tab(1,'DOK',,'=',$_a)
|! O.DOK:='';
   _wyn:=O.put(1);
   {? _wyn
   || {? O.F_ZATR().KOD='Z'
      || _umowy:=1
      ?}
   ?}
!};
O.cntx_pop();
{? ~_wyn | _umowy
|| RH.cntx_psh();
   RH.prefix();
   {? ~RH.find_tab(1,'DOK',,'=',$_a)
   || _wyn:=1
   || {!
      |? RH.find_tab(1,'DOK',,'=',$_a)
      |!
         RH.DOK:='';
         _wyn:=RH.put(1)
      !}
   ?};
   RH.cntx_pop()
?};
_wyn


\mask2stale
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia SSTALE.AR i SSTALE.AO na podstawie znaków maski
::   WE: _a - 4 znaki maski (RRMM)
::----------------------------------------------------------------------------------------------------------------------
_kod:=2+_a;
_nr:=#(_a+2);
ROK_F.cntx_psh();
ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA,_kod);
{? ROK_F.first()
|| OKRO_F.cntx_psh();
   OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.FIRMA,ROK_F.POCZ_ROK,_nr);
   {? OKRO_F.first()
   || SSTALE.AR:=ROK_F.ref();
      SSTALE.AO:=OKRO_F.ref()
   ?};
   OKRO_F.cntx_pop()
?};
ROK_F.cntx_pop()


\ustaw_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Szukanie rozrachunku dla waluty, jednostki ksiegowej, konta i symbolu w biezacym roku, poprzednim i nastepnym
::   WE: _a - zadeklarowane - przy odtwarzaniu rozrachunkow
::  OLD: \ustaw_roz/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_par42:=PAR_SKID.get(42);
{? ~_ || _a:=0 ?};
{? _par42='N' | (_par42='F' & DOK.DOK_REJ().ZAPL='T')
|| OP.cntx_psh();
   _mwal:={? POZ.WAL=null || FINFO.NAROD || POZ.WAL ?};
   _modd:={? POZ.ODD<>null || POZ.ODD || DOK.ODD ?};
   OP.index('KON_O'); OP.prefix(_mwal,_modd,POZ.KON,POZ.ID,POZ.ID);
   _znal:=0;
   {? OP.first()
   || {? POZ.SYM_ROK<>OP.SYM_ROK
      || POZ.DO:=OP.DO; POZ.TP:=OP.TZ; POZ.TID:=OP.TYP;
         POZ.SYM_ROK:=OP.SYM_ROK;
         POZ.SYM_ZEW:=OP.SYM_ZEW;
         {? _a<>2 || POZ.put() ?}
      ?};
      _znal:=1
   ?};
   ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
   OKRO_F.cntx_psh(); OKRO_F.index('ROK');
   {? ~_znal & (_par42='F' & DOK.DOK_REJ().ZAPL='T')
   || SSTALE.AR();
      {? ROK_F.prev()
      || SSTALE.AR();
         OKRO_F.prefix(ROK_F.ref()); _kon1:=POZ.KON;
         {? OKRO_F.first()
         || POZ.cntx_psh();
            POZ.use('pozy'+ROK_F.KOD+form(OKRO_F.NR,-2)); POZ.index('KON'); POZ.prefix(_kon1);
            {? POZ.first() || _kon1:=POZ.PKON ?};
            POZ.cntx_pop()
         ?};
         {? ROK_F.prev()
         || OP.use('operac'+ROK_F.KOD); OP.index('KON_O'); OP.prefix(_mwal,_modd,_kon1,POZ.ID,POZ.ID);
            {? OP.first() & POZ.SYM_ROK<>OP.SYM_ROK
            || POZ.DO:=OP.DO; POZ.TP:=OP.TZ; POZ.TID:=OP.TYP;
               {? _
               || POZ.SYM_ROK:=OP.SYM_ROK;
                  POZ.SYM_ZEW:=OP.SYM_ZEW
               ?};
               {? _a<>2 || POZ.put() ?}; _znal:=1
            ?}
         ?}
      ?}
   ?};
   {? ~_znal
   || SSTALE.AR();
      {? ROK_F.next()
      || OKRO_F.prefix(ROK_F.ref()); _kon1:=POZ.KON;
         {? OKRO_F.first()
         || POZ.cntx_psh();
            POZ.use('pozy'+ROK_F.KOD+form(OKRO_F.NR,-2)); POZ.index('PKON'); POZ.prefix(_kon1);
            {? POZ.first() || _kon1:=POZ.KON ?};
            POZ.cntx_pop()
         ?};
         OP.use('operac'+ROK_F.KOD); OP.index('KON_O'); OP.prefix(_mwal,_modd,_kon1,POZ.ID,POZ.ID);
         {? OP.first() & POZ.SYM_ROK<>OP.SYM_ROK
         || POZ.DO:=OP.DO; POZ.TP:=OP.TZ; POZ.TID:=OP.TYP;
            {? _
            || POZ.SYM_ROK:=OP.SYM_ROK;
               POZ.SYM_ZEW:=OP.SYM_ZEW
            ?};
            {? _a<>2 || POZ.put() ?}
         ?}
      ?}
   ?};
   ROK_F.cntx_pop(); OKRO_F.cntx_pop(); OP.cntx_pop()
?}


\tstwalop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Sprawdza pozycje w dokumencie
::  OLD: \tstwalop/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_euro','waluty',POZ.WAL().KOD,_b<>2)
|| _odd:=POZ.ODD; _konto:=POZ.KON; _sym:=POZ.ID; _usym:=POZ.SYM_ROK; _ok:=0;
   POZ.cntx_psh();
   POZ.index('ROZR2');
   POZ.prefix(DOK.ref(),_odd,_konto,_sym,_sym,_usym);
   {? POZ.first()
   || {! |?
         _ok:=POZ.WAL<>null & POZ.WAL<>_a & exec('euro','waluty',_a,POZ.WAL);
         _ok=0 & POZ.next()
      !}
   ?};
   POZ.cntx_pop();
   _ok
?}


\spr_dok1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Sprawdza, czy podzialy sa prawidlowo zdefiniowane
::   WY: (1/0) - zaakceptowac/nie zaakceptowac controllingowo
::  OLD: \spr_dok1/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
SKIDXD.cntx_psh(); SKIDXD.index('DOK'); SKIDXD.prefix(DOK.ref());
SKID_MBN.cntx_psh(); SKID_MBN.prefix();
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix();
UD_SKL.cntx_psh(); UD_SKL.prefix();
_form:=$('UD_SKL.LISTA=\'T\' & UD_SKL.AKTYWNY=\'T\' & SKID_MBP.UD_SCH().UD_TYP=UD_SKL.UD_TYP');
{? SKIDXD.first()
|| {! |?
      _zwrot:=(SKIDXD.SKID_MB<>null);
      {? _zwrot
      || SKIDXD.SKID_MB();
         SKID_MBP.prefix(SKID_MBN.ref());
         {? SKID_MBP.first()
         || _size:=SKID_MBP.size();
            _zwrot:={? _size=1 || SKIDXD.JORG=null & SKIDXD.OKOSZ=null & SKIDXD.WYM4=null & SKIDXD.WYM5=null
                    |? _size=2 || SKIDXD.OKOSZ=null & SKIDXD.WYM4=null & SKIDXD.WYM5=null
                    |? _size=3 || SKIDXD.WYM4=null & SKIDXD.WYM5=null
                    |? _size=4 || SKIDXD.WYM5=null
                    || 1
                    ?};
            {? _zwrot & _size>=1
            || _zwrot:=(SKIDXD.PBUD<>null);
               {? _zwrot || SKIDXD.PBUD(); _zwrot:=_form() ?}
            ?};
            {? _zwrot & _size>=2 & SKID_MBP.next()
            || _zwrot:=(SKIDXD.JORG<>null);
               {? _zwrot || SKIDXD.JORG(); _zwrot:=_form() ?}
            ?};
            {? _zwrot & _size>=3 & SKID_MBP.next()
            || _zwrot:=(SKIDXD.OKOSZ<>null);
               {? _zwrot || SKIDXD.OKOSZ(); _zwrot:=_form() ?}
            ?};
            {? _zwrot & _size>=4 & SKID_MBP.next()
            || _zwrot:=(SKIDXD.WYM4<>null);
               {? _zwrot || SKIDXD.WYM4(); _zwrot:=_form() ?}
            ?};
            {? _zwrot & _size=5 & SKID_MBP.next()
            || _zwrot:=(SKIDXD.WYM5<>null);
               {? _zwrot || SKIDXD.WYM5(); _zwrot:=_form() ?}
            ?}
         || _zwrot:=0
         ?}
      ?};
      _zwrot & SKIDXD.next()
   !}
?};
UD_SKL.cntx_pop(); SKIDXD.cntx_pop(); SKID_MBN.cntx_pop(); SKID_MBP.cntx_pop();
_zwrot


\tab_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Utworzenie tabelki tymczasowej dla sprawdzania pod wzgledem controllingowym dokumentu
::   WE: _a - 1-tabela 2-okno 3-tabela i okna
::       _b - (opcja) - zadeklarowane - nie dodawac akcji
::  OLD: \tab_dok/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 | _a=3
|| KONT_ZG:=tab_tmp(1,'MODEL','STRING[8]','Model',
                      'RODZKOSZ','STRING[50]','Rodzaj kosztu',
                      'MODEL_R','STRING[16]','Model Ref',
                      'STR','STRING[2]','Strona',
                      'SUM_POZ','REAL','Suma z pozycji',
                      'SUM_KON','REAL','Suma z podziałów',
                      'ROZNICA','REAL','Różnica');
   KONTIND1:=KONT_ZG.ndx_tmp('',1,'RODZKOSZ',,1,'STR',,1,'MODEL_R',,1);
   KONTIND2:=KONT_ZG.ndx_tmp('',1,'RODZKOSZ',,1,'MODEL_R',,1)
?};
{? _a=2 | _a=3
|| _okno:=KONT_ZG.mk_sel('Rodzaje kosztów w dokumencie'@,'P',,'kont_zg',,,,,'U');
   {? var_press('_b')>0
   || KONT_ZG.win_act(_okno,0,'Formuła','aNuluj ak. podziałów'@@,,'Kontynuacja bez akceptacji podz. controllingowych'@,,
                      "zwrot:=0; sel_exit()",1);
      KONT_ZG.win_act(_okno,0,'Formuła','Akceptacja'@@,,'Akceptacja podz. controllingowych'@,,
                      "zwrot:=1; sel_exit()")
   ?};
   KONT_ZG.win_fld(_okno,,'MODEL');
   KONT_ZG.win_fld(_okno,,'RODZKOSZ');
   KONT_ZG.win_fld(_okno,,'STR');
   KONT_ZG.win_fld(_okno,,'SUM_POZ',,,16,2);
   KONT_ZG.win_fld(_okno,,'SUM_KON',,,16,2);
   KONT_ZG.win_fld(_okno,,'ROZNICA',,,16,2);
   KONT_ZG.win_sel(_okno)
?}


\tab_dokd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Skasowanie tabelki tymczasowej dla sprawdzania pod wzgledem controllingowym dokumentu
::  OLD: \tab_dokd/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('KONT_ZG','KONTIND1','KONTIND2')


\spr_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Sprawdza wartosci wpisane w podzialach dla controllingu z wartosciami w pozycjach dla dokumentu
::   WE: _a - (0/1) - bez komunikatow/z komunikatami
::   WY: (1/0) - zaakceptowac/nie zaakceptowac controllingowo
::  OLD: \spr_dok/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
SKIDXMPO.cntx_psh(); SKIDXMPO.index('UNIK1');
SKIDXDPO.cntx_psh(); SKIDXDPO.prefix();
SKIDXSTR.cntx_psh();
SKIDXDUD.cntx_psh(); SKIDXDUD.index('POZ'); SKIDXDUD.prefix();
SKIDXD.cntx_psh(); SKIDXD.index('SKIDXD');
SKID_MBN.cntx_psh(); SKID_MBN.index('EWID'); SKID_MBN.prefix('T','O');
POZ.cntx_psh(); POZ.index('DOK'); POZ.prefix(DOK.ref());
KOM.cntx_psh(); KOM.prefix();
KS.cntx_psh(); KS.prefix();
{? SKID_MBN.first()
|| {! |?
      SKIDXMPO.prefix(REF.FIRMA,SKID_MBN.ref());
      {? SKIDXMPO.first()
      || SKIDXD.prefix(DOK.ref, SKID_MBN.ref);
         {! |?
            SKIDXMPO.SKIDXDPO();
            SKIDXSTR.index('UNIK1');
            KONT_ZG.index(KONTIND2); KONT_ZG.prefix();
            {? POZ.first()
            || {! |?
                  {? POZ.KOM<>null
                  || POZ.KOM().KS();
                     SKIDXSTR.prefix(SKIDXMPO.ref,KS.ref());
                     {? SKIDXSTR.first()
                     || {? KONT_ZG.find_key(SKIDXDPO.NAZWA,$SKID_MBN.ref())
                        || KONT_ZG.SUM_POZ+={? -POZ.STR='wn' || POZ.SUM$2 || -POZ.SUM$2 ?}; KONT_ZG.put()
                        || KONT_ZG.prefix();
                           KONT_ZG.blank(1);
                           KONT_ZG.RODZKOSZ:=SKIDXDPO.NAZWA;
                           KONT_ZG.MODEL_R:=$SKID_MBN.ref();
                           KONT_ZG.MODEL:=SKID_MBN.KOD;
                           KONT_ZG.SUM_POZ:={? -POZ.STR='wn' || POZ.SUM$2 || -POZ.SUM$2 ?};
                           KONT_ZG.add()
                        ?}
                     ?}
                  ?};
                  POZ.next()
               !}
            ?};
            SKIDXSTR.index('UNIK3');
            KONT_ZG.index(KONTIND2); KONT_ZG.prefix();
            {? SKIDXD.first()
            || {! |?
                  {? SKIDXD.PBUD<>null & SKIDXDUD.find_key(SKIDXD.PBUD)
                  || SKIDXSTR.prefix(SKIDXMPO.ref,SKIDXD.PBUD);
                     {? SKIDXSTR.first()
                     || {? KONT_ZG.find_key(SKIDXDPO.NAZWA,$SKID_MBN.ref())
                        || KONT_ZG.SUM_KON+={? -SKIDXDUD.STR='wn' || SKIDXD.WART$2 || -SKIDXD.WART$2 ?};
                           KONT_ZG.put()
                        || KONT_ZG.blank(1);
                           KONT_ZG.RODZKOSZ:=SKIDXDPO.NAZWA;
                           KONT_ZG.MODEL_R:=$SKID_MBN.ref();
                           KONT_ZG.MODEL:=SKID_MBN.KOD;
                           KONT_ZG.SUM_KON:={? -SKIDXDUD.STR='wn' || SKIDXD.WART$2 || -SKIDXD.WART$2 ?};
                           KONT_ZG.add()
                        ?}
                     ?}
                  ?};
                  SKIDXD.next()
               !}
            ?};
            SKIDXMPO.next()
         !}
      ?};
      SKID_MBN.next()
   !}
?};
SKID_MBN.cntx_pop(); SKIDXD.cntx_pop(); SKIDXMPO.cntx_pop(); SKIDXSTR.cntx_pop(); SKIDXDPO.cntx_pop();
SKIDXDUD.cntx_pop(); POZ.cntx_pop(); KOM.cntx_pop(); KS.cntx_pop();
KONT_ZG.prefix();
{? KONT_ZG.first()
|| {! |?
      {? KONT_ZG.SUM_POZ=KONT_ZG.SUM_KON
      || KONT_ZG.del()
      || KONT_ZG.ROZNICA:=KONT_ZG.SUM_POZ-KONT_ZG.SUM_KON; KONT_ZG.put();
         KONT_ZG.next()
      ?}
   !};
   _zwrot:=~KONT_ZG.first()
?};
{? ~_zwrot & _a
|| exec('tab_dok','dok_fks',2,1);
   {? var_pres('akc_dok')>0 & akc_dok=1
   || {! |?
         _dalej:=0;
         _pyt:=ask('Wykryto niezgodności pomiędzy podziałami dla controllingu\n'
                   'a kwotami w pozycjach dokumentu.'@,'Uwaga!'@,0,
                   'Nie akc. dokumentu i podziałów'@,'Nie akceptuj podziałów'@,
                   'Akceptuj pomimo niezgodności'@,'Pokaż niezgodności'@);
         {? _pyt=0
         || _zwrot:=-1
         |? _pyt=2
         || _zwrot:=1
         |? _pyt=3
         || zwrot:=_zwrot;
            {? ~KONT_ZG.select() || _dalej:=1 ?};
            _zwrot:=zwrot; &zwrot
         ?};
         _dalej
      !}
   || _pyt:=ask('Wykryto niezgodności pomiędzy podziałami dla controllingu a\n'
                'kwotami w pozycjach dokumentu.'@,'Uwaga!'@,0,
                'Nie akceptuj podziałów'@,'Akceptuj pomimo niezgodności'@,'Pokaż niezgodności'@);
      {? _pyt=1
      || _zwrot:=1
      |? _pyt=2
      || zwrot:=_zwrot;
         KONT_ZG.select();
         _zwrot:=zwrot; &zwrot
      ?}
   ?}
?};
_zwrot


\odd_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wartosc poczatkowa pola DOK.ODD
::  OLD: \odd_dok/skid.fml
::  OLD: \odd_pocz/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPERATOR.DEPT || OPERATOR.DEPT || REJ.ODD ?}


\rozr_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie redagowalności i widoczności pól związanych z rozrachunkami
::----------------------------------------------------------------------------------------------------------------------
KOM.cntx_psh();
_opcja:={? POZ.KOM & POZ.KOM().KS & POZ.KOM().KS().ROZR<>'Z'
        || 'enable=1'
        || 'enable=0'
        ?};
KOM.cntx_pop();
_okno:=POZ.win_edit('?');
{? _okno<>''
|| POZ.efld_opt(_okno,_opcja,,'ID');
   POZ.efld_opt(_okno,_opcja,,'TID');
   POZ.efld_opt(_okno,_opcja,,'SYM_ZEW');
   POZ.efld_opt(_okno,_opcja,,'ODD');
   POZ.efld_opt(_okno,_opcja,,'DO');
   POZ.efld_opt(_okno,_opcja,,'TP');
   POZ.efld_opt(_okno,_opcja,,'SLO_PROJ');
   POZ.efld_opt(_okno,_opcja,ROZRACH,'WSK_PRAT');
   _opcja:={? POZ.KOM & POZ.KOM().KS & POZ.KOM().KS().ROZR<>'Z' & DOK.DOK_REJ().CZY_ROZL='T'
           || 'enable=1'
           || 'enable=0'
           ?};
   POZ.efld_opt(_okno,_opcja,,'DATA_R');
   _opcja:={? POZ.KOM & POZ.KOM().KS & POZ.KOM().KS().ROZR<>'Z' & DOK.DOK_REJ().SP_PRZEL='T'
           || 'enable=1'
           || 'enable=0'
           ?};
   POZ.efld_opt(_okno,_opcja,,'SP_V')
?}


\wyr_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie redagowalności i widoczności pól związanych z wyróżnikami
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(35)='T'
|| _okno:=POZ.win_edit('?');
   {? _okno<>''
   || {! _i:=1..6
      |! POZ.efld_opt(_okno,'enable=0',KA,'S'+$_i);
         POZ.efld_opt(_okno,'enable=0',KA,'E'+$_i);
         POZ.efld_opt(_okno,'enable=0',KA,'KW'+$_i)
      !};
      KOM.cntx_psh();
      {? ~(POZ.KOM=null | POZ.KOM().KS=null)
      || {! _i:=1..6
         |! POZ.efld_opt(_okno,'enable=0',KA,'S'+$_i);
            POZ.efld_opt(_okno,'enable=0',KA,'E'+$_i);
            POZ.efld_opt(_okno,'enable=0',KA,'KW'+$_i)
         !};
         KS_W.cntx_psh(); KS_W.index('LP'); KS_W.prefix(POZ.KOM().KS);
         {? KS_W.first()
         || _i:=0;
            {! |?
               _i+=1;
               POZ.efld_opt(_okno,'enable=1',KA,'S'+$_i);
               POZ.efld_opt(_okno,'enable=1',KA,'E'+$_i);
               POZ.efld_opt(_okno,'enable=1',KA,'KW'+$_i);
               KS_W.next()
            !}
         ?};
         KS_W.cntx_pop()
      ?};
      KOM.cntx_pop()
   ?}
?}


\wal_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie redagowalności i widoczności pól związanych z wartościami w walucie w POZ
::----------------------------------------------------------------------------------------------------------------------
KOM.cntx_psh(); KS.cntx_psh();
_opcja:={? POZ.KOM & POZ.KOM().KS & -POZ.KOM().KS().WIELO='t'
        || {? POZ.WAL || 'enable=1,mark=1' || 'enable=1,mark=0' ?}
        || 'enable=0,mark=0'
        ?};
KOM.cntx_pop(); KS.cntx_pop();
_okno:=POZ.win_edit('?');
{? _okno<>''
|| POZ.efld_opt(_okno,_opcja,,'KURS');
   POZ.efld_opt(_okno,_opcja,,'SUMW');
   POZ.efld_opt(_okno,_opcja,,'WAL')
?}


\wal_edi_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie redagowalności i widoczności pól związanych z wartościami w DOK
::----------------------------------------------------------------------------------------------------------------------
REJ.cntx_psh(); DOK_REJ.cntx_psh(); SLO.cntx_psh();
_typ:={? POMOC.D || POMOC.D().SLO().KOD || DOK.DOK_REJ().SLO().KOD ?};
_dkb:={? POMOC.D || POMOC.D().CZY_DKB || DOK.DOK_REJ().CZY_DKB ?};
_korekta:={? POMOC.D || POMOC.D().KOR || DOK.DOK_REJ().KOR ?};

_opcja:={? -DOK.REJ().WAL='t'
        || 'enable=1'
        || 'enable=0'
        ?};
DOK.efld_opt(_a,_opcja,,'WAL');
DOK.efld_opt(_a,_opcja,,'BANK');
DOK.efld_opt(_a,_opcja,,'TKRS');
DOK.efld_opt(_a,_opcja,,'TRKS_V');
DOK.efld_opt(_a,_opcja,,'TYPKRS');

_opcja:={? (_typ='PROSTY' & DOK.DOK_REJ().CZY_DKB='T') | _typ<>'PROSTY'
        || 'enable=1'
        || 'enable=0'
        ?};
DOK.efld_opt(_a,_opcja,,'SUMWAL');

_opcja:={? _typ='KOR_BO' || 'mark=0' || 'mark=1' ?};
DOK.efld_opt(_a,_opcja,,'D3');

_opcja:={? -_korekta='t' || 'mark=1, enable=1' || 'mark=0, enable=0' ?};
DOK.efld_opt(_a,_opcja,,'KOR');
DOK.efld_opt(_a,_opcja,,'DWKOR');
DOK.efld_opt(_a,_opcja,,'KOR_ZEW');
DOK.efld_opt(_a,_opcja,,'KOR_PRZY');

_opcja:={? -_korekta='t' || {? DOK.DTW>=date(2019,7,1) || 'mark=0, enable=1' || 'mark=1, enable=1' ?} || 'mark=0, enable=0' ?};
DOK.efld_opt(_a,_opcja,,'KOR_OKR');
REJ.cntx_pop(); DOK_REJ.cntx_pop(); SLO.cntx_pop();
{? exec('lic','#b_domain',exec('domain_ref','#b_domain','CTR'))
|| DOK.efld_opt('DOK_STAT','enable=1',DOK,'WSK_XD')
|| DOK.efld_opt('DOK_STAT','enable=0',DOK,'WSK_XD')
?};
{? -_korekta='t'
|| _fml:="{? fld()='' & DOK.DTW<date(2019,7,1) || FUN.info('Pole musi być wypełnione.'@); 0 || 1 ?}";
::   DOK.fld_fml('KOR_PRZY','AFTER_EDIT',"{? fld='' || FUN.info('Pole musi być wypełnione.'@);0 || 1 ?}");
   DOK.fld_fml('KOR_OKR','AFTER_EDIT',_fml);
   DOK.fld_fml('KOR','AFTER_EDIT',"{? fld=''
                                   || 1
                                   |? ~exec('bekorzew','!fks_dks_dark')
                                   || DOK.KOR_ZEW:=fld(); 1
                                   || 1 ?}");
   {? DOK.ID_S_VAT=''
   || DOK.efld_opt('DOK_STAT','editable=grayed, enable=0',,'ID_S_VAT')
   ?};
   {? POMOC.KNAG<>2
   || DOK.efld_opt(DOK.win_edit('?'),'editable=grayed, enable=0',DOKN,'A_VAT1')
   ?}
|? DOK_REJ.WEW<>'N'
|| DOK.efld_opt('KH','editable=grayed, enable=0',,'ID_S_VAT')
?};
1


\ob_dokm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Formula przed okienkiem wertowania pozycji dokumentu dla wielu jednostek ksiegowych
::  OLD: \ob_dokm/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.fld_attr('DOK',2);
POMOC_DM.blank(1);
1


\oa_dokm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Formula po okienku wertowania pozycji dokumentu dla wielu jednostek ksiegowych
::  OLD: \oa_dokm/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.fld_attr('DOK',1);
1


\wyswietl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PB] [8.60]
:: OPIS: Formula do wyswietlenia okienka dekretu
::   WE: _a - maska roku i okresu rrmm (rr - kolejny kod roku, mm - kolejny nr okresu w roku)
::       _b - ref rekordu z tabeli POZ
::  OLD: \wyswietl/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a<>''
|| DOK.cntx_psh; POZ.cntx_psh; POW.cntx_psh;
   _maska:=SSTALE.AR().KOD+form(SSTALE.AO().NR,-2);
   {? _a<>_maska
   || POZ.use('pozy'+_a);
      DOK.use('doku'+_a);
      POW.use('pow_'+_a)
   ?};
   POZ.index('DOK'); POZ.prefix();
   {? POZ.seek(_b,)
   || POZ.DOK();
      KOMPEN.WN:=KOMPEN.MA:=0;
      SIK.WALUTA:=null;
      {? POZ.WAL<>null
      ||   'waluta obca'; wys_sum:=1;
         SIK.WALUTA:=FINFO.NAROD;
         {? -POZ.STR='wn'
         || KOMPEN.WN:=POZ.SUM; KOMPEN.MA:=0
         || KOMPEN.WN:=0;       KOMPEN.MA:=POZ.SUM
         ?}
      ||  'waluta narodowa'; wys_sum:=0
      ?};
      exec('gr_bufor','dok_fks','POZ');
      POZ.win_edit('C_WYS');
      POZ.display;
      &wys_sum
   || FUN.info('Dekret nie został odnaleziony.'@)
   ?};
   POW.cntx_pop; POZ.cntx_pop; DOK.cntx_pop
?};
1


\wyswietl_edok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PB] [2010]
:: OPIS: Formula wyswietla dokument elektroniczny lub sprawdza czy istnieje
::   WE: _a - maska roku i okresu rrmm (rr - kolejny kod roku, mm - kolejny nr okresu w roku)
::       _b - ref rekordu z tabeli POZ
::       [_c]- 1 lub brak wyswietla edokument o ile istnieje, 0 nie wyswietla e-dokumentu a tylko
::            sprawdza czy edokument jest podpiety
::   WY: 1 gdy edokument istnieje,
::       0 wpp
::  OLD: \wyswietl_edok/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? _<3 || _c:=1 ?};
{? _a<>''
|| DOK.cntx_psh; POZ.cntx_psh;
   {? _a<>SSTALE.AR().KOD+form(SSTALE.AO().NR,-2)
   || POZ.use('pozy'+_a);
      DOK.use('doku'+_a)
   ?};
   POZ.index('DOK'); POZ.prefix();
   {? POZ.seek(_b,)
   || {? POZ.DOK().E_DOC
      || _wy:=1; {? _c
                 || exec('bl_view','#blob',DOK,'E_DOC')
                 ?}
      || {? _c || FUN.info('Brak dokumentu elektronicznego.'@) ?}
      ?}
   || {? _c || FUN.info('Dekret nie został odnaleziony.'@) ?}
   ?};
   POZ.cntx_pop; DOK.cntx_pop
?};
_wy


\suma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PB] [8.60]
:: OPIS: Formula do prezentacji obrotow i sald dekretow z tabeli TABTMP
::   WE: [_a] - parametr wejscia ([D] - Dokumenty, K - Ksiegi)
::  OLD: \suma/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:='D' ?};
exec('sumator','dok_fks',_a);
ROZNE.win_edit('OBROTY1');
ROZNE.hdr_edit();
_tytul:='Podsumowanie obrotów ('+
        {? var_pres('dwiewal')>0 & dwiewal>0 || UNPAR.PSLO().KOD
        |? _a='D' || FINFO.NAROD().KOD
        || SSTALE.WAL().KOD
        ?}+')'+
        {? TABTMP.f_active<>0 || ' z uwzględnieniem bieżącego filtra' || '' ?};
ROZNE.hdr_edit(_tytul);
ROZNE.display();
ROZNE.hdr_edit()


\sumator
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PB] [2011]
:: OPIS: Formula pomocniczna do prezentacji obrotow i sald dekretow z tabeli TABTMP
::   WE: _a - parametr wejscia (D - Dokumenty, K - Ksiegi)
::  OLD: \sumator/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.WN:=ROZNE.MA:=0;
TABTMP.cntx_psh;
_formula:=" {? TABTMP.f_active=0 | (TABTMP.f_active<>0 & TABTMP.f_test<>0)
            || {? SSTALE.WAL=FINFO.NAROD | ver='D'
               || ROZNE.WN+=TABTMP.WN$2; ROZNE.MA+=TABTMP.MA$2
               || ROZNE.WN+=TABTMP.WWN$2; ROZNE.MA+=TABTMP.WMA$2
               ?}
            ?}
          ";
ver:=_a;
TABTMP.for_each(_formula);
&ver;
TABTMP.cntx_pop;
ROZNE.SWN:=F.SWn(ROZNE.WN,ROZNE.MA);
ROZNE.SMA:=F.SMa(ROZNE.WN,ROZNE.MA);
1


\suma_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PB] [8.60]
:: OPIS: Formula 'Oblicz obroty'  przy wyswietlaniu dekretow i ksiegowan
::       dla maski kont i w zakresie dat
::   WE: [_a] - parametr wejscia ([D] - Dokumenty, K - Ksiegi)
::  OLD: \suma_tmp/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:='D' ?};
WYDRUKI.MASKA:=TABTMP.KONTO;
{? TABTMP.sel_size()=0
|| WYDRUKI.win_edit('MASKAAN');
   _ok:=WYDRUKI.edit("{? WYDRUKI.MASKA=35*'?'||''||''?}")
|| _ok:=1
?};
_maska:=WYDRUKI.MASKA;
_prefiks:={? _maska*'?'>0 || _maska*'?'+_maska-1 ||_maska ?};
SSTALE.AR();
{! |? _maska+1='?' | _maska+1=ROK_F.SEP |! _maska:=_maska-1 !};
{? _ok
|| {? var_pres('TOBR')<100
   || TOBR:=tab_tmp(1,'MASKA','STRING[35]','Maska',
                      'KON','STRING[35]','Konto',
                      'POZ','STRING[6]','Lp',
                      'WN','REAL','Wn',
                      'MA','REAL','Ma',
                      'TR','STRING[100]','Opis',
                      'ZN','STRING[1]','')
   ?};
   {? var_pres('JAK')>0 & JAK=1
   || {? TABTMP.f_active=0 | (TABTMP.f_active<>0 & TABTMP.f_test<>0)
        || TOBR.KON:=TABTMP.KONTO; TOBR.ZN:='A';
         {? SSTALE.WAL=FINFO.NAROD | _a='D'
         || TOBR.WN:=TABTMP.WN; TOBR.MA:=TABTMP.MA
         || TOBR.WN:=TABTMP.WWN; TOBR.MA:=TABTMP.WMA
         ?};
         TOBR.TR:=TABTMP.TR;
         TOBR.add()
      ?}
   || TABTMP.cntx_psh();
      {? ~TOBR.find_key(_maska) & (TABTMP.index(ind);TABTMP.prefix(_prefiks); TABTMP.first())
      || {!|? {? F.spr_mask(_maska,TABTMP.KONTO) & (TABTMP.f_active=0 | (TABTMP.f_active<>0 & TABTMP.f_test<>0))
              || TOBR.KON:=TABTMP.KONTO;
                 TOBR.ZN:='A';
                 TOBR.MASKA:=_maska;
                 {? SSTALE.WAL=FINFO.NAROD | _a='D'
                 || TOBR.WN:=TABTMP.WN; TOBR.MA:=TABTMP.MA
                 || TOBR.WN:=TABTMP.WWN; TOBR.MA:=TABTMP.WMA
                 ?};
                 TOBR.TR:=TABTMP.TR;
                 TOBR.add()
              ?};
              TABTMP.next()
         !}
      ?};
      TABTMP.cntx_pop();
      {? TABTMP.sel_size()=0 || exec('wys_tobr','dok_fks') ?}
   ?}
?}


\wys_tobr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.60]
:: OPIS: Wyswielenie pozycji dla akcji 'Oblicz obroty w dok.' dla pozycji dokumentu
::  OLD: \wys_tobr/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? TOBR.first()
|| _w:=TOBR.mk_sel(,,,'tobr_wer');
  {? var_pres('TABTMP')<>118 || TOBR.win_fld(_w,,'POZ',,,6)?};
   TOBR.win_fld(_w,,'KON',,,20);
   TOBR.win_fld(_w,,'WN',,,14,2);
   TOBR.win_fld(_w,,'MA',,,14,2);
   TOBR.win_fld(_w,,'TR',,,30);
   TOBR.win_act(_w,,'Formuła','Opi&s konta'@@,,'Opis poziomów konta'@,,"exec('op_konta','konto',TOBR.KON)",,,,,'S');
   TOBR.win_act(_w,0,'Rekord',,,,"
                     {? TOBR.ZN<>'A'
                     || TOBR.actions(TOBR.win_sel('?'),'S',,1)
                     || TOBR.actions(TOBR.win_sel('?'),,'S',1)
                     ?};
                     {? TOBR.ZN='A'
                     || exec('op_konta','konto',TOBR.KON,null,2);
                        exec('ka_opis','konto');
                        ''
                    || echo();
                       exec('findtmp','#color')
                    ?}");
   TOBR.win_sel(_w);
   TOBR.hdr_sel({? var_pres('JAK')<0
                || 'Pozycje dla maski konta: %1'@[WYDRUKI.MASKA]
                |? JAK=1
                || 'Obroty zaznaczonych kont'@
                |? JAK=2
                || 'Obroty dla zaznaczonych masek pozycji'@
                ?} +
                {? var_pres('TABTMP')=118 & TABTMP.f_active<>0 & cur_tab<>POZ
                || ' z uwzględnieniem bieżącego filtra'@
                || ''
                ?});
   _ind:=TOBR.ndx_tmp('',1,'ZN',,0,'POZ',,0);
   TOBR.index(_ind);
   _wn:=_ma:=0;
   {? TOBR.first()
   || {! |? _wn+=TOBR.WN; _ma+=TOBR.MA; TOBR.next() !};
      TOBR.TR:='';
      TOBR.POZ:=''; TOBR.WN:=_wn; TOBR.MA:=_ma; TOBR.ZN:='B';
      TOBR.KON:='Suma:'; TOBR.add();
      TOBR.WN:=F.SWn(_wn,_ma); TOBR.MA:=F.SMa(_wn,_ma); TOBR.ZN:='C';
      TOBR.KON:='Saldo:'; TOBR.add()
   ?};
   TOBR.select()
|| {? var_pres('TABTMP')<>118
   || FUN.info('Brak pozycji w dokumencie\ndla maski konta: %1'@[WYDRUKI.MASKA])
   || FUN.info('Brak pozycji \ndla maski konta: %1'@[WYDRUKI.MASKA])
   ?}
?};
obj_del(TOBR)


\zapisy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PB] [8.60]
:: OPIS: Formula do wyswietlenia dekretow zrodlowych z dokumentu
::   WE: _a - maska roku i okresu rrmm
::           (rr - kolejny kod roku, mm - kolejny nr okresu w roku)
::       _b - ref rekordu z tabeli POZ (liczba)
::       _c - czy waluta parametrow pracy rozna od waluty narodowej o ile
::            jest to istotne dla obslugi wyswietlania dekretow
::       _d - (opcja) ref rekordu z tabeli REJ (tylko jesli _b jest 0)
::       _e - (opcja) pozycja (DOK.NR) - (tylko jesli _b jest 0)
::       [_f] - wyrózniki ukrywanych akcji
::       Jesli zmienna ust_wal zadeklarowana to waluta pobierana ze
::       zmiennej UNPAR.PSLO
::  OLD: \zapisy/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_f')<=0 || _f:='' ?};
{? _a<>''
|| DOK.cntx_psh(); POZ.cntx_psh(); POW.cntx_psh(); SKIDXD.cntx_psh(); VPOZ.cntx_psh();
   _maska:={? (DOK.name()+2)='__' || (DOK.name()+4) || SSTALE.AR().KOD+form(SSTALE.AO().NR,-2) ?};
   {? _a=_maska
   || _ok:=1; rokpoz:=SSTALE.AR
   || _ok:=0;
      POZ.use('pozy'+_a);
      DOK.use('doku'+_a);
      POW.use('pow_'+_a);
      SKIDXD.use('skxd'+_a);
      VPOZ.use('pozv'+_a);
      VPOZ_ROZ.use('pozr'+_a);
      ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA,2+_a);
      {? ROK_F.first() || rokpoz:=ROK_F.ref() ?}
   ?};
   DOK.index('REJ');
   POZ.prefix();
   {? (_b<>0 & POZ.seek(_b,)) |
      (_d<>null & _e<>0 & (DOK.prefix(_d,_e); DOK.first()))
   || {? _b<>0 || POZ.DOK() ?};
      {? exec('usr_fjks','b_perm',DOK.ODD().OD,,ODD.FIRMA)
      || {? (exec('spr_mod','dok_fks') & SSTALE.ODDZ=0 &
             FUN.ask('Czy chcesz zobaczyć zapisy źródłowego dokumentu dla wielu jednostek księgowych?'@)
            ) | DOK.DOK_REJ().M_ODD='T' & 'doku'=4+DOK.DOKZRODL
         || {? _c || POZ.index('CECH_MOD') || POZ.index('DOK_MOD') ?};
            DOK.clear();
            DOK.seek(BB.sqlint(8-DOK.DOKZRODL),8+DOK.DOKZRODL)
         || {? _c || POZ.index('CECHY') || POZ.index('DOK') ?}
         ?};
         {? _c
         || {? var_pres('ust_wal')>0
            || POZ.prefix(DOK.ref(),UNPAR.PSLO)
            || POZ.prefix(DOK.ref(),SSTALE.WAL)
            ?}
         || POZ.prefix(DOK.ref())
         ?};
         {? _ok
         || _naz_okr:=OKRO_F.NAZ +' '+ROK_F.NAZ
         || OKRO_F.cntx_psh;
            SSTALE.AR();
            OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref(),#(2-_a));
            {? OKRO_F.first || _naz_okr:=OKRO_F.NAZ +' '+ROK_F.NAZ ?};
            OKRO_F.cntx_pop
         ?};
         {? _c
         || POZ.win_sel('C_WER');
            POZ.hdr_sel();
            {? var_pres('ust_wal')>0
            || POZ.hdr_sel('Zapisy w walucie %1'@[UNPAR.PSLO().KOD])
            || POZ.hdr_sel('Zapisy w walucie %1'@[SSTALE.WAL().KOD])
            ?}
         || exec('okna_poz','dok_fks',DOK.DOK_REJ().SLO().KOD,_a,{? DOK.A='T' || 'dPu' || '' ?},{? DOK.A='T' || 'd' || '' ?});
            POZ.hdr_sel();
            POZ.hdr_sel('Zapisy w walucie %1'@[FINFO.NAROD().KOD]);
            exec('suma_dok','dok_fks')
         ?};
         ROZRACH.TABELA:='POZ';
         {? MLEX.FIKSB=0 || _zabl:='B' || _zabl:='' ?};
         _zabl+={? _c || 'AR:A' || 'A:A' ?};
         {? REF.S_FIRMA=REF.GRUPA || _zabl:='F'+_zabl ?};
         {? _f<>'' || _zabl:=_f+_zabl+_f ?};
         POZ.f_clear();
         POZ.select(,1,POZ.POZ,_zabl)
      || FUN.info('Zalogowany użytkownik nie ma uprawnień do jednostki księgowej %1, w której został'
                  '\nzarejestrowany powiązany dokument.'@[DOK.ODD().OD])
      ?}
   || FUN.info('Dekret nie został odnaleziony.'@)
   ?};
   POW.cntx_pop(); POZ.cntx_pop(); DOK.cntx_pop(); SKIDXD.cntx_pop(); VPOZ.cntx_pop();
   VAR_DEL.delete('rokpoz')
?};
1


\okna_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PB] [8.60]
:: OPIS: Formula ustawiajaca okna wertowania i redagowania tabeli POZ
::   WE: _a - Kod rodzaju dokumentu
::       _b - maska roku i okresu rrmm
::           (rr - kolejny kod roku, mm - kolejny nr okresu w roku)
::       _c - wylaczone akcje niepustej dziedziny
::       _d - wylaczone akcje pustej dziedziny
::  OLD: \okna_poz/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')<=0 || _c:='' ?};
{? var_pres('_d')<=0 || _d:='' ?};
{? cur_tab(1,1)=ZAP_OP & cur_win(1,1)='ROZL1' || _c+='ZMC' ?};
_prok:=#(2+_b)=1; _okrbo:=#(2-_b)=0;
{? _okrbo & ~_prok
|| {? _a='BO'
   || {? PAR_SKID.get(36)='T' & PAR_SKID.get(35)='T'
      || POZ.win_edit('POZ_BO2')
      || POZ.win_edit('POZ_BO')
      ?};
      POZ.win_sel('BO'); POZ.actions('BO','pDUK','O:Z')
   |? _a='KOR_BO'
   || {? PAR_SKID.get(36)='T' & PAR_SKID.get(35)='T'
      || POZ.win_edit('POZ_PR'+{? MLEX.FIKSB || 'B' || 'R' ?}+'2')
      || POZ.win_edit('POZ_PR'+{? MLEX.FIKSB || 'B' || 'R' ?})
      ?};
      exec('ok_sel','dok_fks');
      {? exec('dokaut','dok_fks')
      || POZ.actions('SEL',_c+'TADvpUZ:ADr'+_d,'O:Z',1)
      || POZ.actions('SEL',_c+'TADvpUZF:ADrF'+_d,'O:Z',1)
      ?}
   ?}
|| _s_mod:={? DOK.DOK_REJ().M_ODD='T' || 'M' || '' ?};
   {? _a='VAT' | _a='SAD'
   || exec('ok_vsel','dok_fks',1);
      POZ.win_sel('VSEL'+_s_mod);
      POZ.dnd_sel('VSEL',,'records.POZ');
      {? exec('dokaut','dok_fks')
      || POZ.actions('VSEL'+_s_mod,_c+'TADvpU:AD'+_d,'O:Z',1)
      || POZ.actions('VSEL'+_s_mod,_c+'TADvpUF:ADF'+_d,'O:Z',1)
      ?}
   || exec('ok_sel','dok_fks');
      POZ.win_sel('SEL'+_s_mod);
      POZ.dnd_sel('SEL',,'records.POZ');
      {? exec('dokaut','dok_fks')
      || POZ.actions('SEL'+_s_mod,_c+'TADvpUZ:ADr'+_d,'O:Z',1)
      || POZ.actions('SEL'+_s_mod,_c+'TADvpUZF:ADrF'+_d,'O:Z',1)
      ?}
   ?};
   {? PAR_SKID.get(36)='T' & PAR_SKID.get(35)='T' & ~_okrbo
   || {? _s_mod='M' || POZ.win_edit('POZ_MOD2') || POZ.win_edit('POZ_PR'+{? MLEX.FIKSB || 'B' || 'R' ?}+'2') ?}
   || {? _s_mod='M' || POZ.win_edit('POZ_MOD') ||  POZ.win_edit('POZ_PR'+{? MLEX.FIKSB || 'B' || 'R' ?}) ?}
   ?}
?};
1


\pr_obl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.60]
:: OPIS: Formula przed akcja grupowa 'Oblicz obroty w dok.' dla pozycji dokumentu
::  OLD: \pr_obl/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
:: TODO: [MB] Grupowa akcja obrotów
::{? 2+PATH.menu_pth()='DR'
{? 0
|| JAK:=FUN.choice(
      'Obliczyć obroty dla zaznaczonych?'@,3,
      'Pozycji'@,
      'Masek pozycji'@,
      'pozycji (w Drzewku)'@
   )
|| JAK:=FUN.choice(
      'Obliczyć obroty dla zaznaczonych?'@,1,
      'Pozycji'@,
      'Masek pozycji'@
   )
?}


\po_obl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.60]
:: OPIS: Formula po akcji grupowej 'Oblicz obroty w dok.' dla pozycji dokumentu
::  OLD: \po_obl/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? JAK=3
|| {? TTPOZILE<>TTPOZOK
   || FUN.ask('Istnieją pozycje dokumentu z błędnymi kontami.\nWyświetlić obroty dla pozostałych kont?'@)
   || 1
   ?} & TTPOZOBR.select(,,,'OB');
   VAR_DEL.delete('TTPOZOBR','dwie_wal','TTPOZILE','TTPOZOK')
|| exec('wys_tobr','dok_fks')
?};
&JAK


\dok_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Wyswietlenie nagłówka dokumentu z pozycji dokumentu
::  OLD: \dok_poz/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.DOK();
exec('dok_spac','dok_fks')


\dok_spac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja do wyświetlania nagłówka dokumentu źródłowego (tabela DOK)
::  OLD: \dok_spac/dok_zrd.fml
::   WE: [_a] - wskazanie na dokument księgowych
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
DOKN.cntx_psh();
PozView:=1;
{? var_press('_a')>=0
|| _ar:=SSTALE.AR;
   _ao:=SSTALE.AO;
   {? type_of(_a)=7
   || exec('RB','object');
      DOK.cntx_psh();
      _ref:=($_a)+16;
      DOK.use(8+_ref);
      DOK.prefix();
      exec('mask2stale','dok_fks',4+(4-_ref));
      exec('open_tabele','open_tab','F');
      _ok:=DOK.seek(_a)
   || _ok:=0
   ?}
?};
{? _ok
|| exec('gr_bufor','dok_fks','DOK');
   POMOC.V:=DOK.RVAT; POMOC.D:=DOK.DOK_REJ;
   exec('dok_edit1','dok_fks',exec('okna_r','dok_fks',DOK.DOK_REJ().SLO().KOD),var_press('_a')>0);
   exec('wal_edi_dok','dok_fks',okno_dok);
   SLOSLU.SLSLU:={? DOK.WYS>0 || DOK.WYS().SLU().NAZ || '' ?};
   {? DOK.DOK_REJ().KOR_NAG='T'
   || __KORNAG:=1;
      {? 4+DOK.KN='doku'
      || POMOC.KNAG:=2; __KORNAG:=1;
         DOK.cntx_psh();
         _ref:=BB.sqlint(DOK.KN);
         DOK.use(8+DOK.KN);
         DOK.prefix();
         {? _ref<>0 & DOK.seek(_ref,)
         || exec('dok2dokn','knag')
         ?};
         DOK.cntx_pop()
      |? 4+DOK.KN='dokn'
      || POMOC.KNAG:=1;
         DOKN.use(8+DOK.KN);
         DOKN.prefix();
         _ref:=BB.sqlint(DOK.KN);
         {?  _ref<>0 & DOKN.seek(_ref,)
         || 1
         || FUN.info('Nie znaleziono źródłowego dokumentu dla korekty nagłówkowej.'@)
         ?}
      ?}
   ?};
   exec('edit','dok_ksef',1);
   DOK.memo_get(,'NRKSEFDK',0);
   VAR_DEL.delete('editdpolazn');
   editdpolazn:=1;
   DOK.display()
|| FUN.info('Nie znaleziono dokumentu księgowego.'@)
?};
VAR_DEL.delete('PozView','editdpolazn');
DOKN.cntx_pop();
{? var_press('_a')>0
|| DOK.cntx_pop();
   SSTALE.AR:=_ar;
   SSTALE.AO:=_ao
?}


\zap_kont
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [8.70]
:: OPIS: Wyswietla zapisy ksiegowe dokumentu, z ktorego pochodzi biezacy zapis
::  OLD: \zap_kont/obr_an.fml
::----------------------------------------------------------------------------------------------------------------------
_sumwn:=SUM.SUMWN; _summa:=SUM.SUMMA; _salwn:=SUM.SALWN; _salma:=SUM.SALMA;
POZ.cntx_psh;
DOK.cntx_psh;
POZ.DOK();
POZ.index('DOK');
POZ.prefix(DOK.ref);
_maska:=DOK.name+4;
SKIDXD.cntx_psh();
SKIDXD.use('skxd'+_maska);
SKIDXD.index('DOKDSP'); SKIDXD.prefix(DOK.ref());
{? SSTALE.AO().NR=0
|| POZ.win_sel('BO');
   POZ.actions('BO','ZpDUK','O:Z')
||  exec('ok_sel','dok_fks');
      _hid_d:=''; _hid:='';
       {? PAR_SKID.get(82)='N'
       ||     DOKUM.index('DOKUM');
              DOKUM.prefix(REF.FIRMA,$DOK.ref);
              {? DOKUM.first()
              ||  ''
              || _hid_d+='Z'
              ?}
       ?};'załącznik';
       {? DOK.DOKZRODL='' || _hid_d+='D' ?};'dokument źródłowy';
       {? ~DOK.E_DOC || _hid_d+='E' ?};'skan ';
       {? _hid_d='ZDE' || _hid:='E' || _hid:='' ?};
       {? var_press('zakladka')=1 & zakladka=3
       || {? menu_pth='IZ' || _hid+='Z' ?};
          POZ.actions(POZ.win_sel('?'),_hid+'RdGgWANDvpU:ADr','O:Z')
       || POZ.actions(POZ.win_sel('?'),_hid+'ZANDvpU:ADr','O:Z')
      ?}
?};
_after_refresh_poz:="POZ.hdr_sel(); POZ.hdr_sel('%1'@[DOK.DOK_REJ().NAZ])";
_b_poz:="exec('suma_dok','dok_fks')";
_okno:=SKIDXD.grp_make('Zapisy dokumentu'@,,'#poz_skidxd',,,,,'normal');
_default:=SKIDXD.actions('WER','',,);
SKIDXD.actions('WER',':R',_default,1);
SKIDXD.grp_sel(_okno,POZ,POZ.win_sel('?'),'Pozycje'@,_after_refresh_poz,,,,_b_poz,,,,,'poz_sel');
SKIDXD.grp_sel(_okno,SKIDXD,'WER','Podziały controllingowe'@,,,,,"
   SKIDXD.actions_grayed('WER','DPUZ:DPUZ');
   exec('set_var','control')
");
SKIDXD.win_sel(_okno);
SKIDXD.select();
SKIDXD.cntx_pop();
DOK.cntx_pop;
POZ.cntx_pop;
SUM.SUMWN:=_sumwn ; SUM.SUMMA:=_summa; SUM.SALWN:=_salwn; SUM.SALMA:=_salma;
1


\poz_pref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.60]
:: OPIS: Formula 'Oblicz obroty w dok.'  dla pozycji dokumentu
::  OLD: \poz_pref/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZ.sel_size() & JAK=3 | POZ.sel_size()=0 & _=0
|| exec('poz_obr','dok_fks'); return(0)
?};
WYDRUKI.MASKA:={? _ || TTPOZOBR.KON || POZ.KON ?};
{? POZ.sel_size()=0
|| ROK_F.cntx_psh();
   ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA);
   anal_rok:={? ROK_F.find_key(4-POZ.name-2) || ROK_F.ref() || null ?};
   WYDRUKI.win_edit('MASKAAN');
   _ok:=WYDRUKI.edit("{? WYDRUKI.MASKA=35*'?'
                      || FUN.info('Proszę wprowadzić maskę konta.'@); 'MASKA'
                      ||''
                      ?}");
   VAR_DEL.delete('anal_rok');
   ROK_F.cntx_pop()
|| _ok:=1
?};
_maska:=WYDRUKI.MASKA;
SSTALE.AR();
{!|? _maska+1='?' | _maska+1=ROK_F.SEP |! _maska:=_maska-1 !};
{? _ok
|| {? var_pres('TOBR')<100
   || TOBR:=tab_tmp(1,'MASKA','STRING[35]','Maska',
                      'KON','STRING[35]','Konto',
                      'POZ','STRING[6]','Lp',
                      'WN','REAL','Wn',
                      'MA','REAL','Ma',
                      'TR','STRING[100]','Opis',
                      'ZN','STRING[1]','')
   ?};
   {? var_pres('JAK')>0 & JAK=1
   || TOBR.KON:=POZ.KON; TOBR.POZ:=form(POZ.POZ,6); TOBR.ZN:='A'; TOBR.TR:=POZ.OP;
      {? SSTALE.WAL=FINFO.NAROD
      || {? 1+POZ.STR='W' || TOBR.WN:=POZ.SUM; TOBR.MA:=0 || TOBR.MA:=POZ.SUM; TOBR.WN:=0 ?}
      || {? 1+POZ.STR='W' || TOBR.WN:=POZ.SUMW; TOBR.MA:=0 || TOBR.MA:=POZ.SUMW; TOBR.WN:=0 ?}
      ?};
      TOBR.add()
   || POZ.cntx_psh();
      {? ~TOBR.find_key(_maska) & POZ.first()
      || {!|? {? F.spr_mask(_maska,POZ.KON)
              || TOBR.KON:=POZ.KON; TOBR.POZ:=form(POZ.POZ,6); TOBR.ZN:='A';
                 TOBR.MASKA:=_maska; TOBR.TR:=POZ.OP;
                 {? 1+POZ.STR='W' || TOBR.WN:=POZ.SUM; TOBR.MA:=0 || TOBR.MA:=POZ.SUM; TOBR.WN:=0 ?};
                 TOBR.add()
              ?};
              POZ.next()
         !}
      ?};
      POZ.cntx_pop();
      {? POZ.sel_size()=0 || exec('wys_tobr','dok_fks') ?}
   ?}
?}


\poz_obr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Wyswietla obroty kont z pozycji dokumentu
::  OLD: \poz_obr/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TTPOZOBR')<0
|| TTPOZOBR:=tab_tmp(2,
      'TREEREF','TREE_REF',,
      'KON','STRING[35]','Konto / pozycja'@,
      'OWN','REAL','Obroty Wn'@,
      'OMA','REAL','Obroty Ma'@,
      'SWN','REAL','Saldo Wn'@,
      'SMA','REAL','Saldo Ma'@,
      'OP','STRING[255]','Opis konta'@,
      'REF','INTEGER',,
      'ZN','INTEGER',
   );
   _op:={? POZ.sel_size() || 'zaznaczonych '@ || '' ?};
   _o:=TTPOZOBR.mk_sel('Obroty na kontach %1pozycji dokumentu: %2'@[_op,DOK.NK],'P',0,'ttpozobrwer1',,,,1);
   TTPOZOBR.win_fld(_o,,'KON',,,35);
   TTPOZOBR.win_fld(_o,,'OWN',,,15);
   TTPOZOBR.win_fld(_o,,'OMA',,,15);
   TTPOZOBR.win_fld(_o,,'SWN',,,15);
   TTPOZOBR.win_fld(_o,,'SMA',,,15);
   TTPOZOBR.win_fml(_o,,'KON',,'ICON_BEFORE',"
      {? TTPOZOBR.ZN=2
      || 'xwin16.png:76'
      || {? TTPOZOBR.tr_state()=1
         || 'xwin16.png:75'
         || 'xwin16.png:74'
         ?}
      ?}
   ");
   TTPOZOBR.win_act(_o,,'Formuła','Zwiń/&rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,
      "exec('zwrw_all','#tree','TTPOZOBR','TREEREF')",,,,,,'R');

   TTPOZOBR.win_act(_o,,'Formuła','Obroty dla maski'@@,,'Wyodrębnienie pozycji dokumentu dla wybranej maski konta'@,,"
      {? TTPOZOBR.ZN=2
      || FUN.info('Akcja dostępna z poziomu konta.'@)
      || exec('poz_pref','dok_fks',1)
      ?}
   ",1,,,,'O');
   TTPOZOBR.win_act(_o,,'Formuła','O&blicz obroty'@@,,'Obroty i salda zaznaczonych pozycji'@,,
      "exec('obl_obr','dok_fks',TTPOZOBR,TTPOZOBR.OWN,TTPOZOBR.OMA,TTPOZOBR.SWN,TTPOZOBR.SMA)",,
      1,"exec('be_gobr','dok_fks')","exec('ae_gobr','dok_fks')",'B');
   TTPOZOBR.win_act(_o,,'Formuła','Opi&s konta'@@,,'Opis poziomów konta'@,,"
      {? TTPOZOBR.ZN=2
      || FUN.info('Akcja niedostępna z poziomu pozycji.'@)
      || exec('op_konta','konto',TTPOZOBR.KON)
      ?}
      ",,,,,'S');
   TTPOZOBR.win_act(_o,,'Rekord',,,,"echo(TTPOZOBR.OP)");
   TTPOZOBR.win_act(_o,,'Wyświetl',,,,"
      {? TTPOZOBR.REF
      || POZ.cntx_psh(); POZ.seek(TTPOZOBR.REF,);
         exec('poz_dsp','dok_fks');
         POZ.cntx_pop()
      ?}
   ");
   TTPOZOBR.win_sel(_o);
   dwie_wal:=dwiewal:=0;
   TTPOZILE:=TTPOZOK:=0
?};
_fun:="
   {? POZ.KOM=null || SSTALE.AR() || POZ.KOM().KS().ROK() ?};
   _ts:=exec('kon_fun','konto',POZ.KON);
   {? obj_len(_ts)=2
   || _kon:=_op:='';
      _tt:=0;
      _len:=obj_len(_ts[1]);
      {! _i:=1.._len
      |! _kon+=_ts[1][_i];
         _op+=_ts[2][_i];
         {? TTPOZOBR.find_key(_tt,_kon) & TTPOZOBR.KON=_kon
         || {? -POZ.STR='wn' || TTPOZOBR.OWN+=POZ.SUM || TTPOZOBR.OMA+=POZ.SUM ?};
            TTPOZOBR.SWN:=F.SWn(TTPOZOBR.OWN,TTPOZOBR.OMA)$2;
            TTPOZOBR.SMA:=F.SMa(TTPOZOBR.OWN,TTPOZOBR.OMA)$2;
            TTPOZOBR.put()
         || TTPOZOBR.blank();
            TTPOZOBR.TREEREF:=_tt;
            TTPOZOBR.KON:=_kon;
            {? -POZ.STR='wn' || TTPOZOBR.OWN:=POZ.SUM || TTPOZOBR.OMA:=POZ.SUM ?};
            TTPOZOBR.SWN:=F.SWn(TTPOZOBR.OWN,TTPOZOBR.OMA)$2;
            TTPOZOBR.SMA:=F.SMa(TTPOZOBR.OWN,TTPOZOBR.OMA)$2;
            TTPOZOBR.OP:=_op;
            TTPOZOBR.ZN:=_i=_len;
            TTPOZOBR.add()
         ?};
         _kon+={? SSTALE.AR().SEP=',' || '' || ROK_F.SEP ?};
         _op+=' / ';
         _tt:=#TTPOZOBR.ref()
      !};
      TTPOZOBR.blank();
      TTPOZOBR.TREEREF:=#TTPOZOBR.ref();
      _poz:={? DOK.DOK_REJ().M_ODD='T' || POZ.POZ_MOD || POZ.POZ ?};
      TTPOZOBR.KON:=$_poz+{? POZ.OP<>'' || ' - '+POZ.OP || '' ?};
      {? -POZ.STR='wn' || TTPOZOBR.OWN:=POZ.SUM || TTPOZOBR.OMA:=POZ.SUM ?};
      TTPOZOBR.SWN:=F.SWn(TTPOZOBR.OWN,TTPOZOBR.OMA)$2;
      TTPOZOBR.SMA:=F.SMa(TTPOZOBR.OWN,TTPOZOBR.OMA)$2;
      TTPOZOBR.OP:='';
      TTPOZOBR.REF:=#POZ.ref();
      TTPOZOBR.ZN:=2;
      TTPOZOBR.add();
      obj_del(_ts);
      1
   ?}
";
{? POZ.sel_size()
|| TTPOZILE+=1;
   TTPOZOK+=_fun()
|| _ile:=0; _ok:=0;
   POZ.cntx_psh();
   {? POZ.first()
   || {!
      |? _ile+=1;
         _ok+=_fun();
         POZ.next()
      !}
   ?};
   POZ.cntx_pop();
   {? _ile<>_ok
   || FUN.ask('Istnieją pozycje dokumentu z błędnymi kontami.\nWyświetlić obroty dla pozostałych kont?'@)
   || 1
   ?} & TTPOZOBR.select();
   VAR_DEL.delete('TTPOZOBR','dwie_wal','dwiewal')
?}


\poz_dsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja wywoływana na spację w POZ.
::  OLD: \poz_dsp/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
KA.AKCJA:=0;
POZ.cntx_psh();
exec('bd_wprat','dok_fks');
exec('ustal_ka','dok_fks');
exec('gr_bufor','dok_fks','POZ');
exec('bv_poz_spv','fks_sp',1);
::Poczatek modyfikacji dla Maclex 13.10.2009 AK [1120]
{? MLEX.FIKSB
|| exec('ob_bz','ml_zad');
   OKRO_F.cntx_psh();
   OKRO_F.index('KON'); OKRO_F.prefix(REF.FIRMA);
   _okro:=SSTALE.AO;
   {? OKRO_F.find_key(date(POZ.DOK().DTW~1,POZ.DOK().DTW~2,0), date(POZ.DOK().DTW~1,POZ.DOK().DTW~2,1))
   || _okro:=OKRO_F.ref
   ?};
   OKRO_F.cntx_pop();
   exec('zbz_get','ml_zad',POZ.DOK().ODD,POZ.ref(),_okro)
?};
::Koniec modyfikacji dla Maclex
KOMPEN.WN:=KOMPEN.MA:=0;
SIK.WALUTA:=null;
{? POZ.WAL<>null
|| wys_sum:=1;
   SIK.WALUTA:=FINFO.NAROD;
   {? -POZ.STR='wn'
   || KOMPEN.WN:=POZ.SUM; KOMPEN.MA:=0
   || KOMPEN.WN:=0; KOMPEN.MA:=POZ.SUM
   ?}
|| wys_sum:=0
?};
{? POZ.win_edit('?')='' || POZ.win_edit('C_WYS') ?}; POZ.display();
POZ.cntx_pop()


\obl_obr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.60]
:: OPIS: Obliczenie obrotow i sald dla pozycji
::   WE: _a - alias do tabeli tymczasowej
::       _b, _c, _d, _e - kolejne kwoty
::  OLD: \obl_obr/obroty.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1).sel_size()=0
|| ROZNE.WN:=_b$2; ROZNE.MA:=_c$2;
   ROZNE.SWN:=F.SWn(ROZNE.WN,ROZNE.MA); ROZNE.SMA:=F.SMa(ROZNE.WN,ROZNE.MA);
   {? var_pres('dwiewalo')>0 & dwiewalo
   || ROZNE.WN_N:=_d$2; ROZNE.MA_N:=_e$2;
      ROZNE.SWN_N:=F.SWn(ROZNE.WN_N,ROZNE.MA_N); ROZNE.SMA_N:=F.SMa(ROZNE.WN_N,ROZNE.MA_N);
      ROZNE.win_edit('OBROTY3')
   || ROZNE.win_edit('OBROTY1')
   ?};
   ROZNE.hdr_edit();
   ROZNE.hdr_edit('Obroty i salda zaznaczonych pozycji'@);
   ROZNE.display();
   ROZNE.hdr_edit()
|| ROZNE.WN+=_b$2; ROZNE.MA+=_c$2;
   {? var_pres('dwiewalo')>0 & dwiewalo || ROZNE.WN_N+=_d$2; ROZNE.MA_N+=_e$2 ?}
?}


\be_gobr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.60]
:: OPIS: Grupa przed dla liczenia obrotow
::  OLD: \be_gobr/obroty.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.WN:=ROZNE.MA:=ROZNE.SWN:=ROZNE.SMA:=0;
{? var_pres('dwiewalo')>0 & dwiewalo
|| ROZNE.WN_N:=ROZNE.MA_N:=ROZNE.SWN_N:=ROZNE.SMA_N:=0;
   ROZNE.win_edit('OBROTY3')
|| ROZNE.win_edit('OBROTY1')
?};
ROZNE.hdr_edit();
ROZNE.hdr_edit('Obroty i salda zaznaczonych pozycji'@);
1


\ae_gobr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.60]
:: OPIS: Grupa po dla liczenia obrotow
::  OLD: \ae_gobr/obroty.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.SWN:=F.SWn(ROZNE.WN$2,ROZNE.MA$2);
ROZNE.SMA:=F.SMa(ROZNE.WN$2,ROZNE.MA$2);
ROZNE.SWN_N:=F.SWn(ROZNE.WN_N,ROZNE.MA_N);
ROZNE.SMA_N:=F.SMa(ROZNE.WN_N,ROZNE.MA_N);
ROZNE.display();
ROZNE.hdr_edit()


\rpm_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS:
::  OLD: \init/dekret.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('synt','an','se_p','kol');
synt:='';
an:=obj_new(10) ;
se_p:=obj_new(10);
kol:=obj_new(11)


\rpm_clear
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS:
::  OLD: \clear/dekret.fml
::----------------------------------------------------------------------------------------------------------------------
{! _a:=1..10
|! an[_a]:='';
   se_p[_a]:='';
   kol[_a]:=0
!};
synt:=''


\rpm_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Wypelnienie tabel an, kol i se_p wartosciami ze zmiennej syn, przechowujacej symbol analityki
::   WY: 'T' - wypelnione wszystkie poziomy,
::       'N' - nie wypelnione wszystkie poziomy bez dziur,
::       'N' - z dziurami
::  OLD: \display/dekret.fml
::----------------------------------------------------------------------------------------------------------------------
red:=poz_a:=kom:=0;
_e:='T';
BUD.index('KS');
BUD.prefix(KS.ref);
BUD.first();
:........................... ustawienie okienka
_b:=$('KA.win_edit(''RED'+$(BUD.size)+''');
KA.hdr_edit;
KA.hdr_edit(KS.NAZ)');
_b();
{? BUD.first()
|| SLO.index('SL');
   kol[1]:=+KS.SYM;
:........................wypełnienie wartości kolumn i separatorów
   {! poz_a:=1 .. BUD.size |!
      BUD.SLU().SLU();
      se_p[poz_a]:={? BILANSP.ASEP=','
                  || ''
                  |? BILANSP.ASEP =''
                  || ' '
                  || BILANSP.ASEP
                  ?};
      kol[poz_a+1]:=kol[poz_a]+SLU.DL+(+se_p[poz_a]);
      BUD.next
   !};
   BUD.first;
   {! poz_a:=1 .. BUD.size |!
      SLO.prefix;
      BUD.SLU().SLU();
      SLO.prefix(SLU.ref);
      _f:=($('KA.P'+$poz_a+'<>DOK.WYS'))();
      _d:=|(+se_p[poz_a]+kol[poz_a]-synt-(+synt-kol[poz_a+1]));
      {? (SLO.find_key(_d) & SLO.KOD=_d) ||
         kom:=SLO.ref
      ||
         {? _e='T' ||
            _e:='N'
         ?};
         kom:=0
      ?};
      _c:=$('KA.P'+$poz_a+':=kom');
      _c();
      _f:=($('KA.P'+$poz_a+'<>DOK.WYS'))();
      BUD.next
   !};
   KA.KS:=synt
||
   KA.KS:=synt:=KS.SYM;
   KA.P1:=null;
   _e:='T'
?};
&red; &poz_a; &kom;
_e


\list_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [12.30]
:: OPIS: zwraca liste rejestrow VAT dla dokumentu
::  OLD: \list_rvat/wydruki.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ.cntx_psh;
VPOZ.index('VDOK');
VPOZ.prefix(DOK.ref);
_rvat_sym:=DOK.RVAT().SYM+', ';
{? VPOZ.first
|| {!
   |? _vr:=VPOZ.RVAT().SYM+', ';
      {? ~(_rvat_sym*(_vr))
      || _rvat_sym+=_vr
      ?};
      VPOZ.next
   !}
?};
_rvat_sym:=_rvat_sym-2;
VPOZ.cntx_pop;
_rvat_sym


\kon_dat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: kontrola dat "od - do"
::       Kontroluje, aby DATAOD <= DATADO (w zmiennej WYDRUKIN)
::       sciezka:  "rekord po" dla pola DATADO zmiennej WYDRUKIN
::  OLD: \kon_dat/rozrach.fml
::----------------------------------------------------------------------------------------------------------------------
{? __CHK.field(WYDRUKIN,'DATADO')
|| _dalej:=1
|| FUN.emsg('Pole Do dnia należy wypełnić.'@);
   _dalej:=0
?};
{? _dalej
|| {? WYDRUKIN.DATADO<WYDRUKIN.DATAOD
   || FUN.info('Niepoprawnie wprowadzone daty.\nData Do dnia nie może być wcześniejsza niż data Od dnia.'@);
      WYDRUKIN.DATADO:=WYDRUKIN.DATAOD;
      0
   || 1
   ?}
?}


\chk_data_od
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola WYDRUKIN.DATAOD
::----------------------------------------------------------------------------------------------------------------------
{? __CHK.field(WYDRUKIN,'DATAOD')
|| 1
|| FUN.emsg('Pole Na dzień należy wypełnić.'@);
   0
?}


\vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011B]
:: OPIS: Zwraca procent VAT
::   WE: _a - kod slownika ze stawkami VAT
::  OLD: \vat/skid.fml
::----------------------------------------------------------------------------------------------------------------------
_p:=_a*'%';
{? _p
|| #form(_p+_a-1)
|| #form(_a,2)
?}


\skid_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: przed redakcja pola dla tabeli DOK
::   WY: 1/0
::  OLD: \skid_typ/skid.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__tagvpztip'); {? DOK.RVAT || exec('be_edok_fld','dok_fks1') || 0 ?}


\sel_vroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula wyswietlajaca konta do dekretacji dla pola w VPOZ o akronimie
::       zapisanym w VAT7.TYP
::  OLD: \sel_vroz/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.SZUK:=0; POMOC.F1:=0;
{? VPOZ.KURS_D<>0 & VPOZ.KURS_D$4<>VPOZ.KURS$4
|| VAT7.NETTO:=VPOZ.NETTO_D;
   VAT7.BRUTTO:=VPOZ.BRUTTO_D;
   VAT7.STVAT:=VPOZ.PR;
   VAT7.VAT:=VPOZ.VAT_D
|| VAT7.NETTO:=VPOZ.NETTO;
   VAT7.BRUTTO:=VPOZ.BRUTTO;
   VAT7.STVAT:=VPOZ.PR;
   VAT7.VAT:=VPOZ.VAT
?};
_sum:="sql('select sum(KW) skw from prefixed_table(:_a)',VROZ)";
KA.fld_fml('SUM','BEFORE_DISPLAY',"
   _kw:=0;
   {? VROZ.f_active()
   || {? VROZ.f_first()
      || {!
         |? _kw+=VROZ.KW;
            VROZ.f_next()
         !}
      ?}
   || _sum:=_sum();
      {? _sum.first()
      || _kw:=_sum.SKW
      ?}
   ?};
   KA.SUM:=_kw;
   ~~
");
VROZ.win_sel('WER');
VROZ.index('VROZ');
VROZ.prefix(VPOZ.ref(),VAT7.TYP);
VROZ.select;
_sum:=_sum();
{? _sum.first || POMOC.F1:=_sum.SKW ?};
KA.fld_fml('SUM','BEFORE_DISPLAY',"*");
ROZNE.SZUK:=0;
''


\sum_vroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula wypelnia KA.SUM wartoscia sumy rozdzielnika dla pola w VPOZ
::       o akronimie w VAT7.TYP
::  OLD: \sum_vroz/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
VROZ.cntx_psh();
VROZ.index('VROZ');
VROZ.prefix(VPOZ.ref(),VAT7.TYP);
KA.SUM:=0;
{? VROZ.first || {! |? KA.SUM+=VROZ.KW; VROZ.next !} ?};
VROZ.cntx_pop()


\ust_vkk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula ustawia pole zmiennej VAT7 o akronimie w _a
::   WE: _a - akronim zmiennej
::  OLD: \ust_vkk/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
VROZ.index('VROZ'); VROZ.prefix(VPOZ.ref,_a);
{? VROZ.first()
|| {? _=1 || ($('VAT7.'+_a+':=''T''' ))() ?};
   ($('VPOZ.'+_a+':=''<- F3 ->''' ))();0
|| {? _=1 || ($('VAT7.'+_a+':=''N''' ))() ?};
   _v:=($('VPOZ.'+_a))();
   {? 2+_v='<-' & _v+2='->' || ($('VPOZ.'+_a+':=''''' ))() ?}; 1
?}


\czy_brutto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Czy kwota w walucie dla pozycji VAT to kwota brutto
::   WY: 1 - tak (brutto) 0 - nie (netto)
::  OLD: \czy_brutto/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
RVAT.cntx_psh(); VAT_REJ.cntx_psh(); KVAT.cntx_psh(); DOK_REJ.cntx_psh();
DOK.cntx_psh(); DOK.use('doku'+(VPOZ.name()+4)); DOK.index('REJ'); DOK.prefix();
_pole:=VPOZ.DOK().DOK_REJ().WARWKR;
_zwrot:=(VPOZ.RVAT().RVAT().KVAT().SYM='SprzKraj' | VPOZ.RVAT().RVAT().KVAT().SYM='ZakupKraj') & _pole=0 &
        DOK.WAL & DOK.WAL<>FINFO.NAROD & DOK.KRAJ().KOD='PL';
RVAT.cntx_pop(); VAT_REJ.cntx_pop(); KVAT.cntx_pop(); DOK_REJ.cntx_pop(); DOK.cntx_pop();
_zwrot


\def_met
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Definicje metod wirtualnych wykorzystywanych podczas dzialania schematow dekretacj VAT
::  OLD: \def_met/met_virt.fml
::----------------------------------------------------------------------------------------------------------------------
fak:=exec('czy_fak','dok_fks');
exec('ile_wal','dok_fks');
{? _a=2
|| set_virt(SD_OB,'loop',
       "{? ($(_a+'.first()'))()
        ||  {!|? .sd_loop();
                 fak:=0;
                 ($(_a+'.next()'))()
            !};
            {? .SumaWn$2 <> .SumaMa$2
            || .er_rout(2)
            ?}
        ?};
        &fak
       ")
|? _a=1
|| set_virt(SD_OB,'loop',
       ".sd_loop();
        {? .SumaWn$2 <> .SumaMa$2
        || .er_rout(2)
        ?};
        &fak
       ")
?};

set_virt(SD_OB,'tmp_add',
    "TMPPOZ.SUM+=.DEK_OBJ.KW_PLN$2;
     _synt:=SSTALE.AR().SYNT;
     _ks:=_synt+TMPPOZ.KON;
     _isbl:=1;
     KS.cntx_psh();
     KS.index('SYM');KS.prefix(SSTALE.AR,_ks);
     {? KS.first
     ||  {? KS.TYP='PB' | KS.TYP='P1' | KS.TYP='PC' || _isbl:=0 ?}
     ?};
     KS.cntx_pop();
     {? _isbl
     ||  {? TMPPOZ.STR=.Wn
         || .SumaWn+=.DEK_OBJ.KW_PLN$2
         || .SumaMa+=.DEK_OBJ.KW_PLN$2
         ?}
     ?};
     TMPPOZ.SUMW+=.DEK_OBJ.KW_WAL$2
    ");

set_virt(SD_OB,'sd_ind',
    "DEK.index('DEK');
     FAK.index('FAK');
     VROZ.index('VROZ');
     SKIDXD.index('DOK');
     POZF.index('DOK')
    ");

set_virt(SD_OB,'sd_pref',
    "DEK.prefix(DOK.DOK_REJ().AV);
     FAK.prefix(DOK.ref());
     SKIDXD.prefix(DOK.ref());
     POZF.prefix(DOK.ref())
    ");

set_virt(SD_OB,'fnd_1st',
    "{?-VPOZ.Z<>'t'
     || .sd_ind();
        .sd_pref();
        FAK.first();
        DEK.first();
        _rodzkKOD:=DEK.RODZK().KOD;
        VROZ.prefix(VPOZ.ref(),{? _rodzkKOD='Konto(1)' | _rodzkKOD='VatKonto' || 'KK' |? _rodzkKOD='Konto(2)' || 'K2' || 'XX'?});
        vroz:=VROZ.first();
        SKIDXD.first();
        POZF.first();
        1
     ?}
    ");

set_virt(SD_OB,'fnd_nxt',
    "_rodzkKOD:=DEK.RODZK().KOD;
     {? (-_rodzkKOD='warfak' | -_rodzkKOD='warcit') & FAK.next() & fak
     || 1
     |? (5+_rodzkKOD='Konto' | _rodzkKOD='VatKonto') & VROZ.next() & vroz
     || 1
     |? (-_rodzkKOD='pkontrol' | -_rodzkKOD='vatpkont') & SKIDXD.next() & fak
     || 1
     |? 2+_rodzkKOD='pf' & POZF.next() & fak
     || 1
     || FAK.first();
        SKIDXD.first();
        _ok:=DEK.next();
        _rodzkKOD:=DEK.RODZK().KOD;
        VROZ.prefix(VPOZ.ref(),{? _rodzkKOD='Konto(1)' | _rodzkKOD='VatKonto' || 'KK' |? _rodzkKOD='Konto(2)' || 'K2' || 'XX'?});
        vroz:=VROZ.first();
        POZF.first();
        _ok
     ?}
    ");

set_virt(SD_OB,'opt_is',
    "DEK.OPTYM='T'
    ");

set_virt(SD_OB,'vat',
    "1
    ");


set_virt(SD_OB,'opt_wyr',
    "''
    ");

set_virt(SD_OB,'for_1',
    "_rodzkKOD:=DEK.RODZK().KOD;
     {? _rodzkKOD<>'PKontrol' | (_rodzkKOD='PKontrol' & PAR_SKID.get(80)='T')
     || .DEK_OBJ.run2();
        .for_1(1+DEK.STR)
     || 1
     ?}
    ",-1,-1);

set_virt(SD_OB,'for_1',
    "{? .DEK_OBJ.KONTO<>''
     || .dek2tmp(_a)
     ?}; 1
    ",2);

set_virt(SD_OB,'wyr_be',
    "SKID_WYR.index('SLU');
     SKID_WYR.prefix(REF.FIRMA,'DEK',DEK.name,#DEK.ref,'X')
    ")


\czy_fak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Sprawdzenie, czy dla pozycji VAT są rekordy w P_V
::  OLD: \czy_fak/met_virt.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
P_V.cntx_psh(); P_V.index('V_P');
VPOZ.cntx_psh(); VPOZ.index('VDOK');
VPOZ.prefix(DOK.ref());
{? VPOZ.first()
|| {! |?
      P_V.prefix(VPOZ.ref());
      {? P_V.first() || _ok:=0 ?};
      _ok & VPOZ.next()
   !}
?};
VPOZ.cntx_pop();
P_V.cntx_pop();
_ok


\dsp_stv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011A]
:: OPIS: Formula na wyswietl dla pola SKID.PR (VPOZ, VPD, EVAT)
::  OLD: \dsp_stv/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| SKID.PR:={? 4+cur_tab(1,1).name()='pozv'
            || {? VPOZ.PR || VPOZ.PR().KOD || '' ?}
            |? 3+cur_tab(1,1).name()='vpd'
            || {? VPD.PR || VPD.PR().KOD || '' ?}
            |? 6+cur_tab(1,1).name()='skid_a'
            || {? EVAT.PR || EVAT.PR().KOD || '' ?}
            |? 6+cur_tab(1,1).name()='skid_e'
            || {? ETYPY.PR || ETYPY.PR().KOD || '' ?}
            ?}
|| SKID.PR:={? 4+web_top_tab().name()='pozv'
            || {? VPOZ.PR || VPOZ.PR().KOD || '' ?}
            |? 3+web_top_tab().name()='vpd'
            || {? VPD.PR || VPD.PR().KOD || '' ?}
            |? 6+web_top_tab().name()='skid_a'
            || {? EVAT.PR || EVAT.PR().KOD || '' ?}
            |? 6+web_top_tab().name()='skid_e'
            || {? ETYPY.PR || ETYPY.PR().KOD || '' ?}
            ||
               {? 4+web_top_tab(1).name()='pozv'
               || {? VPOZ.PR || VPOZ.PR().KOD || '' ?}
               |? 3+web_top_tab(1).name()='vpd'
               || {? VPD.PR || VPD.PR().KOD || '' ?}
               |? 6+web_top_tab(1).name()='skid_a'
               || {? EVAT.PR || EVAT.PR().KOD || '' ?}
               |? 6+web_top_tab(1).name()='skid_e'
               || {? ETYPY.PR || ETYPY.PR().KOD || '' ?}
               ?}
            ?}
?};
1


\f3_stv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011A]
:: OPIS: Formula na klawisz F3 dla pola SKID.PR (VPOZ, VPD, EVAT)
::  OLD: \f3_stv/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| _zwrot:=SKID.PR
|| _zwrot:=fld()
?};
SLU.cntx_psh(); SLU.index('NAZ'); SLU.prefix();
SLO.cntx_psh(); SLO.index('SL'); SLO.prefix();
_tab:={? app_info('web_sesid') <> ''
      || web_top_tab()
      || cur_tab(1,1)
      ?};
{? 4+_tab.name()='pozv'
|| _kod_kr:={? DOK.RVAT<>null || DOK.KRAJ().KOD || '' ?}
|? 3+_tab.name()='vpd'
|| _kod_kr:={? POZDOK.RVAT<>null || POZDOK.RVAT().RVAT().KRAJ().KOD || '' ?}
|| _kod_kr:='PL'
?};
{? _kod_kr='' ||  _kod_kr:='PL' ?};
{? SLU.find_key('~STAWKI VAT '+_kod_kr)
|| SLO.prefix(SLU.ref());
   {? ~SLO.find_key(_zwrot) || SLO.first() ?};
   {? app_info('web_sesid') <> ''
   ||
      EVAT.web_cntx_save(1);
      SLO.web_select('DICTW_EV')
   ||
      SLO.win_sel('ONE_SEL');
      SLO.hdr_sel('Stawki VAT - %1'[_kod_kr]);
      {? SLO.select(,1,,'A') || _zwrot:=SLO.KOD || _zwrot:=0 ?};
      SLO.hdr_sel()
   ?}
|| FUN.info('Brak słownika: %1.'@[_a])
?};
SLU.cntx_pop(); SLO.cntx_pop();
_zwrot


\ae_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011A]
:: OPIS: Formula po redakcji pola SKID.PR (VPOZ, VPD, EVAT)
::  OLD: \ae_pr/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| _tab:=web_top_tab();
   _wart:=SKID.PR
|| _tab:=cur_tab(1,1);
   _wart:=fld()
?};
{? _wart=''
|| {? 4+_tab.name()='pozv' || VPOZ.PR:=null
   |? 3+_tab.name()='vpd' || VPD.PR:=null
   |? 6+_tab.name()='skid_a' || EVAT.PR:=null
   |? 6+_tab.name()='skid_e' || ETYPY.PR:=null()
   || ETYPY.PR
   ?}
|| SLU.cntx_psh(); SLU.index('NAZ'); SLU.prefix();
   SLO.cntx_psh(); SLO.index('SL'); SLO.prefix();
   {? 4+_tab.name()='pozv'
   || _kod_kr:={? DOK.RVAT<>null || DOK.KRAJ().KOD || '' ?};
      {? _kod_kr='PL' & _wart='2' || _wart:={? exec('rok_stale','dok_fks')>2010 || '23' || '22' ?} ?}
   |? 3+_tab.name()='vpd'
   || _kod_kr:={? POZDOK.RVAT<>null || POZDOK.RVAT().RVAT().KRAJ().KOD || '' ?};
      {? _kod_kr='PL' & _wart='2' || _wart:={? APARAM.ROK>2010 || '23' || '22' ?} ?}
   || _kod_kr:='PL';
      {? _wart='2' || _wart:={? exec('rok_stale','dok_fks')>2010 || '23' || '22' ?} ?}
   ?};
   {? _kod_kr='' ||  _kod_kr:='PL' ?};
   {? SLU.find_key('~STAWKI VAT '+_kod_kr) & SLO.find_key(SLU.ref(),_wart)
   || {? 4+_tab.name()='pozv' || VPOZ.PR:=SLO.ref()
      |? 3+_tab.name()='vpd' || VPD.PR:=SLO.ref()
      |? 6+_tab.name()='skid_a' || EVAT.PR:=SLO.ref()
      || ETYPY.PR:=SLO.ref()
      ?}
   || FUN.info('Nie znaleziono wybranej stawki VAT w słowniku\n~STAWKI VAT %1'@[_kod_kr])
   ?};
   SLU.cntx_pop(); SLO.cntx_pop()
?};
{? 4+_tab.name()='pozv'
|| exec('uzu_wart','dok_fks1')
|? 3+_tab.name()='vpd'
|| VPD.VAT:=(0.01*VPD.NETTO*exec('vat','dok_fks',VPD.PR().KOD))$2;
   VPD.BRUTTO:=(VPD.NETTO+VPD.VAT)$2
|? 6+_tab.name()='skid_a'
|| exec('aeprdob','obiegi')
?};
{? 4+_tab.name()='pozv' & VPOZ.NETTO<>0 & menu_txt<>'Popraw'
|| exec('tagger_tip_vpz','tagger',DOK.WYS,{? 6+DOK.EDOKUM='skid_v' || 'OF' |? 5+DOK.DOKZRODL='dokum' || 'DK' || 'DO' ?},
        {? DOK.DOK_REJ().KOR='T' || 1 || 0 ?})
?};
{? var_pres('__tagvpztip')>0 || win_disp() ?};
1


\setvatodl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Ustawia wartosci pol VAT_ODL i VATKOSZT tabeli VPOZ
::  OLD: \setvatodl/skid.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:=exec('gr_pod_typ','dok_fks',VPOZ.GRVAT().GRVAT().KOD);
{? _typ=0
|| VPOZ.VAT_ODL:=0
|? _typ=2
|| VPOZ.VAT_ODL:=VPOZ.VAT
|? _typ=1
|| _proc:={? PAR_SKID.get(83)='T' & VPOZ.C_PROC_S=0
          || 100
          ||  {? Plugin.runnable('GRVAT_STRUKTURA')
              || Plugin.run('GRVAT_STRUKTURA')
              |? VPOZ.OKRVAT
              || VPOZ.OKRVAT().ROK().PROC_VAT
              || SSTALE.AR().PROC_VAT
              ?}
          ?};
   _prewsk:={? PAR_SKID.get(83)='T' & VPOZ.C_PREWSK
            || {? Plugin.runnable('GRVAT_PREWSKAZNIK')
               || Plugin.run('GRVAT_PREWSKAZNIK')
               |? VPOZ.OKRVAT
               || VPOZ.OKRVAT().ROK().PREWSK
               || SSTALE.AR().PREWSK
               ?}
            || 100
            ?};
   {? (SLO.KOD='ZakuPodS' | SLO.KOD='ZInwPodS')
   || VPOZ.VAT_ODL:=(VPOZ.VAT*(_proc/100)*(_prewsk/100)*(50/100))$2
   |? (SLO.KOD='ZakuPods' | SLO.KOD='ZInwPods')
   || VPOZ.VAT_ODL:=(VPOZ.VAT*(50/100))$2
   || VPOZ.VAT_ODL:=(VPOZ.VAT*(_proc/100)*(_prewsk/100))$2
   ?}
|| VPOZ.VAT_ODL:=VPOZ.VATKOSZT:=0;
   return(0)
?};
VPOZ.VATKOSZT:=VPOZ.VAT-VPOZ.VAT_ODL;
1


\obl_vwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula oblicza wartosci w PLN dla pozycji VAT w walucie obcej
::  OLD: \obl_vwal/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.JORG<>FINFO.NAROD
|| _jedn:=exec('jed_wal','waluty',DOK.JORG().KOD);
   VPOZ.WCLO:=(VPOZ.KOS*VPOZ.NETTO/_jedn)$2;
   VPOZ.CLO:=(VPOZ.KOS*VPOZ.VAT/_jedn)$2;
   VPOZ.AKCYZA:=(VPOZ.KOS*VPOZ.BRUTTO/_jedn)$2
?}


\rok_stale
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Zwraca rok ze stalych systemu
::  OLD: \rok_stale/spr_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_rok:=0;
OKRO_F.cntx_psh();
OKRO_F.index('ROK'); OKRO_F.prefix();
{? SSTALE.AO().POCZ~1
|| _rok:=(SSTALE.AO().POCZ~1)
|| OKRO_F.prefix(SSTALE.AR); SSTALE.AO();
   {? OKRO_F.next() | OKRO_F.prev() || _rok:=(OKRO_F.POCZ~1) ?}
?};
OKRO_F.cntx_pop();
_rok


\walutazp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: Przed wyswietl SIK.WALUTAZP
::  OLD: \walutazp/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WALUTAZP:={? POZ.WAL=null || FINFO.NAROD || POZ.WAL ?}; 1


\bd_pavat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Przed wyswietleniem pola PARAM.A_VAT
::  OLD: \bd_pavat/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? |PARAM.OKROVAT<>''
|| exec('findfnv','#color')
|| ''
?}


\pr_pavat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Przed redakcja pola PARAM.A_VAT
::  OLD: \pr_pavat/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
win_disp();
{? FINFO.SLAVAT<>null & |PARAM.OKROVAT=''
|| SLO.win_dict('ONE'); SLO.win_sel('ONE');
   SLO.win_edit('RED');
   FINFO.SLAVAT().SLU()
|| 0
?}


\ust_utokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Ustawia wartosc pol ROZNE.UT_OKROD, ROZNE.UT_OKRDO
::       po redakcji pol ROZNE.UT_ROKOD, ROZNE.UT_ROKDO
::  OLD: \ust_utokr/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.win_edit('?')*'KOR_VAT'>0
|| {? cur_afld()='UT_ROKOD'
   || {? fld()=null | ROZNE.UT_OKROD().ROK<>fld()
      || ROZNE.UT_OKROD:=null
      || 1
      ?}
   |? cur_afld()='UT_ROKDO'
   || {? fld()=null | ROZNE.UT_OKRDO().ROK<>fld()
      || ROZNE.UT_OKRDO:=null
      || 1
      ?}
   || 1
   ?}
|? ROZNE.win_edit('?')*'SYS_UTIL'>0
|| {? ~ROZNE.UT_ROKOD
   || ROZNE.UT_OKROD:=null
   |? ~ROZNE.UT_ROKDO
   || ROZNE.UT_OKRDO:=null
   ?};
   OKRO_F.index('ROK'); OKRO_F.prefix(ROZNE.UT_ROKOD);
   {? ROZNE.UT_OKROD & ~OKRO_F.seek(ROZNE.UT_OKROD) || ROZNE.UT_OKROD:=null ?};
   OKRO_F.prefix(ROZNE.UT_ROKDO);
   {? ROZNE.UT_OKRDO & ~OKRO_F.seek(ROZNE.UT_OKRDO) || ROZNE.UT_OKRDO:=null ?}; 1
|| 1
?}


\be_utokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Przed redakcja pol ROZNE.UT_OKROD, ROZNE.UT_OKRDO
::  OLD: \be_utokr/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=cur_afld;
{? ROZNE.win_edit('?')*'SYS_UTIL'>0
|| {? _a='UT_OKROD'
   || {? ~ROZNE.UT_ROKOD
      || 0
      || ROZNE.UT_ROKOD(); 1
      ?}
   || {? ~ROZNE.UT_ROKDO
      || 0
      || ROZNE.UT_ROKDO(); 1
      ?}
   ?}
|? {? cur_tab()=WYDRUKI & WYDRUKI.win_edit('?')='OKRESY1' || WYDRUKI.P1=2 || 1 ?}
|| {? ($('ROZNE.'+cur_afld))()<>null || ($('ROZNE.UT_ROK'+(cur_afld+2)+'()'))() ?}; 1
|| 0
?}


\bv_utokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Przed wyswietl pol ROZNE.UT_OKROD, ROZNE.UT_OKRDO
::  OLD: \bv_utokr/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab()=WYDRUKI & WYDRUKI.win_edit('?')='OKRESY1'
|| WYDRUKI.P1=2
::|? cur_tab()=PAR_WYDR & PAR_WYDR.win_edit('?')='DZIESKR2'
::|| ROZNE.UT_OKROD:=SSTALE.AO;
::   ROZNE.UT_OKRDO:=SSTALE.AO;
::   1
|| 1
?}


\bf_kvokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Przed redakcja ROZNE.KV_OKROD, ROZNE.KV_OKRDO
::  OLD: \bf_kvokr/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.win_edit('?')*'KOR_VAT'=1
|| {? cur_afld()='KV_OKROD'
   || {? ROZNE.KV_ROKOD<>null & VAT7.ZAKRES<>'N'
      || ROZNE.KV_OKROD(); 1
      || 0
      ?}
   |? cur_afld()='KV_OKRDO'
   || {? ROZNE.KV_ROKDO<>null & VAT7.ZAKRES<>'N'
      || ROZNE.KV_OKRDO(); 1
      || 0
      ?}
   || 1
   ?}
|| 1
?}


\bf_kv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Przed redakcja ROZNE.KV_ROKOD, ROZNE.KV_ROKDO
::  OLD: \bf_kv/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.win_edit('?')*'KOR_VAT'=1
|| {? VAT7.ZAKRES<>'N'
   || 1
   || 0
   ?}
|| 1
?}


\ust_kvokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Ustawia wartosc pol ROZNE.KV_OKROD, ROZNE.KV_OKRDO
::       po redakcji pol ROZNE.KV_ROKOD, ROZNE.KV_ROKDO
::  OLD: \ust_kvokr/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.win_edit('?')*'KOR_VAT'>0
|| {? cur_afld()='KV_ROKOD'
   || {? fld()=null | ROZNE.KV_OKROD().ROK<>fld()
      || ROZNE.KV_OKROD:=null
      || 1
      ?}
   |? cur_afld()='KV_ROKDO'
   || {? fld()=null | ROZNE.KV_OKRDO().ROK<>fld()
      || ROZNE.KV_OKRDO:=null
      || 1
      ?}
   || 1
   ?}
|| 1
?}


\kor_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Sprawdza poprawnosc danych okienka KOR_VAT zmiennej ROZNE
::  OLD: \kor_vat/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~ROZNE.UT_ROKOD | ~ROZNE.UT_ROKDO | ~ROZNE.UT_OKROD | ~ROZNE.UT_OKRDO |
   ~(OKRO_F.index('ROK'); OKRO_F.prefix(ROZNE.UT_ROKOD); OKRO_F.seek(ROZNE.UT_OKROD)) |
   ~(OKRO_F.prefix(ROZNE.UT_ROKDO); OKRO_F.seek(ROZNE.UT_OKRDO)) |
   ROZNE.UT_ROKOD().POCZ_ROK>ROZNE.UT_ROKDO().POCZ_ROK |
   (ROZNE.UT_ROKOD=ROZNE.UT_ROKDO & ROZNE.UT_OKROD().NR>ROZNE.UT_OKRDO().NR)
|| FUN.info('Nie wprowadzono poprawnie przedziału okresów dla nabycia.'@); 'UT_ROKOD'
|| {? ROZNE.KV_ROKOD | ROZNE.KV_ROKDO | ROZNE.KV_OKROD | ROZNE.KV_OKRDO
   || {? ~ROZNE.KV_ROKOD | ~ROZNE.KV_ROKDO | ~ROZNE.KV_OKROD | ~ROZNE.KV_OKRDO |
         ~(OKRO_F.index('ROK'); OKRO_F.prefix(ROZNE.KV_ROKOD); OKRO_F.seek(ROZNE.KV_OKROD)) |
         ~(OKRO_F.prefix(ROZNE.KV_ROKDO); OKRO_F.seek(ROZNE.KV_OKRDO)) |
         ROZNE.KV_ROKOD().POCZ_ROK>ROZNE.KV_ROKDO().POCZ_ROK |
         (ROZNE.KV_ROKOD=ROZNE.KV_ROKDO & ROZNE.KV_OKROD().NR>ROZNE.KV_OKRDO().NR)
      || FUN.info('Nie wprowadzono poprawnie przedziału okresów dla zbycia.'@); 'KV_ROKOD'
      || 1
      ?}
   || 1
   ?}
?}


\nas_lat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formuła sprawdzająca, czy podane lata są kolejne
::   WE: _a - rok (ref ROK_F)
::       _b - rok (ref ROK_F)
::   WY: 1/0
::  OLD: \nas_lat/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:='';
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(_a);
{? OKRO_F.last() & OKRO_F.prev()
|| _d1:=OKRO_F.KON;
   OKRO_F.prefix(_b);
   {? OKRO_F.first() & OKRO_F.next()
   || _wynik:=_d1+1=OKRO_F.POCZ
   ?}
?};
OKRO_F.cntx_pop();
_wynik


\zak_vats
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formuła zakres w okienku WER tabeli VAT_SR
::  OLD: \zak_vats/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
VAT7.win_edit('ZAKRES');
{? VAT7.edit() || exec('ust_zak','dok_fks') ?}


\ust_zak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Ustalenie dziedziny tabeli VAT_SR w zalezności od zmiennych VAT7.ZAKRES
::  OLD: \ust_zak/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
VAT_SR.hdr_sel();
_t:={? VAT7.ZAKRES='T'
    || 'Rozliczone'@
    |? VAT7.ZAKRES='N'
    || 'Nierozliczone'@
    || 'Wszystkie'@
    ?};
_t+={? VAT7.ROK<>null || ', Rok nabycia : '@+VAT7.ROK().NAZ || '' ?};
VAT_SR.hdr_sel(' Zakres: %1'@[_t]);
{? VAT7.ZAKRES='' & VAT7.ROK=null
|| VAT_SR.index('OK'); VAT_SR.prefix(REF.FIRMA)
|? VAT7.ZAKRES='' & VAT7.ROK<>null
|| VAT_SR.index('ROK'); VAT_SR.prefix(REF.FIRMA,VAT7.ROK)
|? VAT7.ZAKRES<>'' & VAT7.ROK=null
|| VAT_SR.index('ROZL'); VAT_SR.prefix(REF.FIRMA,VAT7.ZAKRES)
|? VAT7.ZAKRES<>'' & VAT7.ROK<>null
|| VAT_SR.index('ROZL'); VAT_SR.prefix(REF.FIRMA,VAT7.ZAKRES,VAT7.ROK)
?}


\spr_dok1v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Zlicza wartosc podatku VAT dla pozycji VAT biezacego dokumentu
::       z grupa 'ZInwPodZ'
::   WY: suma VAT pozycji o grupie 'ZInwPodZ''
::  OLD: \spr_dok/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ.cntx_psh();
VPOZ.index('VDOK');
_w:=0;
VPOZ.prefix(DOK.ref());
{? VPOZ.first()
|| {!
   |? _grvat:=VPOZ.GRVAT().GRVAT().KOD;
      {? _grvat='ZInwPodZ'
      || _w+=VPOZ.VAT
      |? _grvat='ZInwPodS'
      || _w+=(VPOZ.VAT/2)$2
      ?};
      VPOZ.next()
   !}
?};
VPOZ.cntx_pop();
_w


\bl_vatkw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Wartosc poczatkowa VAT_KW.VAT_SR
::  OLD: \bl_vatkw/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
VAT_SR.ref()


\bl_r_vk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Wartość początkowa pola VAT_KW.ROK
::  OLD: \bl_r_vk/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
VAT7.ROK_N


\bl_vk_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Wart. pocz. pola VAT_KW.PROC
::  OLD: \bl_vk_pr/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('proc_rok_next','dok_fks',VAT_KW.ROK,1)


\sr_rozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula przed Dolacz, Usun, Popraw w okienku WER tabeli VAT_KW
::  OLD: \sr_rozl/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? -menu_txt(,)='usuń'
|| VAT_KW.cntx_psh();
   VAT_KW.index('VAT_KW');
   VAT_KW.prefix(VAT_SR.ref);
   _ok:=~VAT_KW.next();
   {? _ok=0
   || FUN.info('Można usunąć tylko ostatnią chronologicznie korektę.'@)
   ?};
   VAT_KW.cntx_pop()
?};
{? _ok
|| _okn:={? PAR_SKID.get(83)='T' || '_PR' || '' ?};
   {? VAT_SR.ROZL='T'
   || {? VAT_KW.OKRES=null
      || {? _okn='' || VAT_KW.win_edit() || VAT_KW.win_edit('RED'+_okn) ?}
      || VAT_KW.win_edit('RED'+_okn)
      ?};
      {? -menu_txt(,)='dołącz'
      || FUN.info('Nabycie środka rozliczone.\nDodawanie kwot korekt zabronione.'@); 0
      || FUN.ask('Nabycie środka rozliczone.\nKontynuować?'@)
      ?}
   || {? -menu_txt(,)='usuń'
      || FUN.ask('Usunąć bieżący wiersz?'@)
      |? -menu_txt(,)='popraw'
      || {? _okn='' || VAT_KW.win_edit() || VAT_KW.win_edit('RED'+_okn) ?};
         1
      |? -menu_txt(,)='dołącz'
      || {? _okn='' || VAT_KW.win_edit() || VAT_KW.win_edit('RED'+_okn) ?};
         VAT_KW.cntx_psh();
         {? VAT_KW.last()
         || ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
            {? ROK_F.seek(VAT_KW.ROK) & ROK_F.next()
            || VAT7.ROK_N:=ROK_F.ref()
            || FUN.info('Brak definicji kolejnego roku bilansowego.'@);
               VAT7.ROK_N:=null
            ?}
         || VAT7.ROK_N:=VAT_SR.OKRES().ROK
         ?};
         VAT_KW.cntx_pop();
         VAT_KW.ROK:=VAT7.ROK_N;
         VAT7.ROK_N<>null
      || 1
      ?}
   ?}
?}


\po_vk_us
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula po Usuń w okienku WER tabeli VAT_KW
::  OLD: \po_vk_us/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
VAT_KW.del();
VAT_KW.cntx_psh();
VAT_SR.cntx_psh(); VAT_SR.prefix(REF.FIRMA);
_ok:=0;
{? VAT_SR.ROZL='T' & VAT_KW.size()<VAT_SR.ILE_LAT
|| VAT_SR.ROZL:='N'; _ok:=VAT_SR.put();
   FUN.info('Zmiana statusu nabycia środka\n na: nierozliczone.'@)
?};
VAT_SR.cntx_pop();
{? _ok || VAT_SR.ROZL:='N' ?};
VAT_KW.cntx_pop()


\prek_vak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula Rekord przed w okienku WER tabeli VAT_KW
::  OLD: \prek_vak/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
VAT_SR.get();
exec('rekprzed','color','VAT_KW#01#01')


\kol_vatk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula decydująca o kolorowaniu rekordow w okienku WER tabeli VAT_KW
::  OLD: \kol_vatk/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAT_KW.OKRES<>null || 'VAT_KW#01#01' || '' ?}


\rek_vatk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula Rekord po w okienku WER tabeli VAT_KW
::  OLD: \rek_vatk/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
VAT_KW.VAT_SR(); VAT_KW.cntx_psh();
{? VAT_SR.ROZL='N' &
  ((-menu_txt(,)='dołącz' & VAT_KW.size()+1=VAT_SR.ILE_LAT)
   | (-menu_txt(,)='popraw' & VAT_KW.size()=VAT_SR.ILE_LAT))
|| _zm:=1
|| _zm:=0
?};
VAT_KW.cntx_pop();
{? _zm=1
|| VAT_SR.cntx_psh();
   VAT_SR.prefix(REF.FIRMA);
   VAT_SR.ROZL:='T'; VAT_SR.put();
   VAT_SR.cntx_pop();
   VAT_SR.ROZL:='T';
   FUN.info('Zmiana statusu nabycia środka na rozliczone.'@)
?};
1


\wys_vatk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula Wyświetl w okienku WER tabeli VAT_KW
::  OLD: \wys_vatk/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAT_KW.OKRES=null
|| 1
|| _okn:={? PAR_SKID.get(83)='T' || '_PR' || '' ?};
   VAT_KW.win_edit('RED'+_okn);
   VAT_KW.display();
   VAT_KW.win_edit()
?}


\be_oddn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.60]
:: OPIS: Przed redakcja VAT7.ODD_N
::  OLD: \be_oddn/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
VAT7.TRYB=0 & VAT7.WYP=0 & VAT_SR.OKRES<>null


\ae_oddn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.60]
:: OPIS: Po redakcji VAT7.ODD_N
::  OLD: \ae_oddn/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
{? chk_fld()
|| {? VAT7.ODD_N<>VAT7.REJ_N().ODD ||
      VAT7.SYM_N:=''; VAT7.DATA_N:=date(0,0,0);
      VAT7.REJ_N:=VAT7.RVAT_N:=null;
      VAT7.NR_N:=0
   ?}; 1
|| 0
?}


\pr_v_rkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formuła przed redakcją pola VAT7.REJ_N
::  OLD: \pr_v_rkn/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.AKC:='s';
VAT7.TRYB=0 & VAT7.WYP=0 & VAT_SR.OKRES<>null & VAT7.ODD_N<>null


\pr_v_dkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula przed redakcją pola VAT7.NR_N
::  OLD: \pr_v_dkn/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
VAT7.TRYB=0 & VAT7.WYP=0 & VAT7.REJ_N<>null


\f3_v_dkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula na F3 dla pola VAT7.NR_N
::  OLD: \f3_v_dkn/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh();
VPOZ.cntx_psh();
DOK.use('doku'+VAT_SR.OKRES().ROK().KOD+form(VAT_SR.OKRES().NR,-2));
VPOZ.use('pozv'+VAT_SR.OKRES().ROK().KOD+form(VAT_SR.OKRES().NR,-2));
DOK.index('REJ');
DOK.prefix(VAT7.REJ_N);
DOK.find_key(VAT7.NR_N);
_nr:=exec('sel_dok','dok_fks');
DOK.cntx_pop();
VPOZ.cntx_pop();
{? _nr<>0 || _nr || '' ?}


\sel_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formuła wywietlenia dokumentów z okresu i rejestru
::   WY: Numer wybranego dokumentu
::  OLD: \sel_dok/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
_dsel:=DOK.mk_sel(,'P',0,'dok_wer1');
DOK.win_fld(_dsel,,'REJ','KOD',,8);
DOK.win_fld(_dsel,,'NR',,,5);
DOK.win_fld(_dsel,,'NK',,,20);
DOK.win_fld(_dsel,,'DTO',,,10);
DOK.win_fld(_dsel,,'DOP',,,10);
DOK.win_fld(_dsel,,'DTW',,,10);
DOK.win_act(_dsel,,'Formuła','Wybierz'@@,,'Wybór dokumentu'@,,"sel_exit;1",1,,,,'W');
DOK.win_act(_dsel,,'Wyświetl',,,,,"exec('dok_okn','dok_fks');DOK.display()");
DOK.win_act(_dsel,,'Formuła','pozycje &VAT'@@,,'Pozycje VAT'@,,"VPOZ.index('VDOK');VPOZ.prefix(DOK.ref);
  {? VPOZ.first || exec('okna_vr','dok_fks'); VPOZ.select(,,,'RN') || FUN.info('Brak pozycji VAT.'@) ?} ",,,,,'V');
DOK.win_act(_dsel,,'Szukaj');
DOK.win_sel(_dsel);
VPOZ.win_sel('Z_SEL');
{? PAR_SKID.get(83)='T' || VPOZ.win_edit('RED_PR') || VPOZ.win_edit('RED') ?};
DOK.hdr_sel();
DOK.hdr_sel('Wybierz dokument źródłowy (%1 %2)'@[OKRO_F.NAZ,OKRO_F.ROK().NAZ]);
{? DOK.select(,1) || _nr:=DOK.NR || _nr:=0 ?};
_nr


\dok_okn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Ustwienie okienka red. dla aktualnego rekordu DOK
::  OLD: \dok_okn/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.RVAT
|| _v:=DOK.RVAT().RVAT().KVAT().SYM;
   {? 4+_v='ImpT' || DOK.win_edit('DOK_IMP')
   |? 1+_v='_' || DOK.win_edit('DOK_WW')
   |? (1+_v='Z') | (1+_v='I') || DOK.win_edit('DOK_VAT')
   |? _v='SprzEksp' || DOK.win_edit('DOK_EXP')
   |? 1+_v='S' || DOK.win_edit('DOK_SPR')
   ?}
|| DOK.win_edit('DOK_PRO')
?}


\be_odds
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.60]
:: OPIS: Przed redakcja VAT7.ODD_S
::  OLD: \be_odds/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
VAT_SR.OKRES_S<>null


\ae_odds
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.60]
:: OPIS: Po redakcji VAT7.ODD_S
::  OLD: \ae_odds/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
{? chk_fld()
|| {? VAT7.ODD_S<>VAT7.REJ_S().ODD ||
      VAT7.SYM_S:=''; VAT7.DATA_S:=date(0,0,0);
      VAT7.REJ_S:=null;
      VAT7.NR_S:=0
   ?}; 1
|| 0
?}


\pr_v_rks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula przed redakcją dla pola VAT7.REJ_S
::  OLD: \pr_v_rks/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.AKC:='S';
VAT_SR.OKRES_S<>null & VAT7.ODD_S<>null


\pr_v_dks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formuła przed redakcją dla pola VAT7.NR_S
::  OLD: \pr_v_dks/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
VAT7.REJ_S<>null


\f3_v_dks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formuła na F3 dla pola VAT7.NR_S
::  OLD: \f3_v_dks/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh();
DOK.use('doku'+VAT_SR.OKRES_S().ROK().KOD+form(VAT_SR.OKRES_S().NR,-2));
DOK.index('REJ');
DOK.prefix(VAT7.REJ_S);
DOK.find_key(VAT7.NR_S);
_nr:=exec('sel_dok','dok_fks');
DOK.cntx_pop();
{? _nr<>0 || _nr || '' ?}


\ROZ_WAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS:
::  OLD: \ROZ_WAL/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.WAL


\pozdekv3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Pokazuje znacznik automatycznego zadekretowania: A-tak
::  OLD: \pozdekv3/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
P_V.cntx_psh(); P_V.index('P_V'); P_V.prefix(POZ.ref);
{? P_V.first() || POMOC.AKC:='A' || POMOC.AKC:='' ?};
P_V.cntx_pop();
1


\dok_tr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS:
::  OLD: \dok_tr/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.TR


\poz_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Zwraca POZ.ODD
::  OLD: \poz_odd/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.ODD


\szukajk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2010]
:: OPIS: Formula wolana przed akcja szukaj ustawia odpowiednio zmienna ROZNE.SZUK
::  OLD: \szukajk/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.SZUK:=1


\par_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: ustalenie banku i tab. kursow w stalych systemu (ksiega glowna)
::  OLD: \par_w/param.fml
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.SLWAL=0
|| FUN.info('Nie zdefiniowano słownika walut.'@);   0
|| SLO.index('SL'); SLO.prefix(XINFO.SLWAL);
   XINFO.SLWAL();
   SLO.win_dict('ONE'); SLO.win_sel('ONE');
   1
?}


\vat_pocz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Wywolanie formuly poczatkowej dla formuly kontrolujacej zgodnosc
::       pozycji VAT z dekretacja na kontach
::       zmienna KOMUNIKAT (jesli jest) decyduje czy wyswietlac komunikat
::   WE: formula - wymagane 2 parametry (3 opcjonalny)
::       _a  - prefix konta do dekretacji naleznego VAT LUB naliczonego VAT
::       _b  - prefix konta do dekretacji naleznego zawieszonego VAT LUB naliczonego zawieszonego VAT
::      [_c] - prefiks konta do dekretacji naliczonego VAT idacego w koszty
::             wartosci _a i _b oznaczaja podatek VAT do odliczenia
::   WE: wydruk - wymagane 2 lub 4 parametry
::       gdy 2 parametry - opis jak dla formuli
::       gdy 4 parametry - opis, kolejnosc taka:
::         _a - prefix konta do dekretacji naleznego VAT                KONTO.K1
::         _b - prefix konta do dekretacji naleznego zawieszonego VAT   KONTO.K3
::         _c - prefix konta do dekretacji naliczonego VAT              KONTO.K2
::         _d - prefix konta do dekretacji naliczonego zawieszonego VAT KONTO.K4
::         _e - prefix konta do dekretacji naliczonego VATu w koszty    KONTO.K5
::  OLD: \vat_pocz/spr_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_rdoku:=DOK.DOK_REJ().SLO().KOD;
kewid:=DOK.RVAT().RVAT().EWID().KOD;
vat0:=vat1:=vat10:=vat11:=vat2:=vat3:=vat4:=vat5:=vat0k:=vat10k:=vat1k:=vat11k:=0;
{? _rdoku='VAT' | _rdoku='SAD'
|| {? _<2
   || {? var_pres('KOMUNIKAT')>0 & KOMUNIKAT
      || FUN.info('Brak parametrów formuły kontrolnej.\nPodaj prefiksy kont do ewidencji podatku VAT.'@)
      ?}; 0
   |? _<4 & (6+kewid='_WWspN' | 8+kewid='ImpUsług') & var_pres('KOMUNIKAT')<=0
   || FUN.info('Brak parametrów formuły kontrolnej.\nPodaj prefiksy kont do ewidencji podatku VAT.'@); 0
   || {? var_pres('KOMUNIKAT')>0
      || {? 4+kewid='Sprz' | 6+kewid='_WWspD'
         || kvat1:=_a; kvat3:=_b; kvat2:=kvat4:=''
         |? 4+kewid='Zaku' | 4+kewid='ImpT'
         || kvat2:=_a; kvat4:=_b; kvat1:=kvat3:=''
         |? 6+kewid='_WWspN' | 8+kewid='ImpUsług'
         || kvat1:=_a;
            kvat2:={? var_pres('_c')>0 || _c || '' ?};
            kvat3:=_b;
            kvat4:={? var_pres('_d')>0 || _d || '' ?}
         || kvat1:=kvat2:=kvat3:=kvat4:=''
         ?};
         {? _=3 || kvat5:=_c
         |? _=5 || kvat5:=_e
         ?}
      || kvat1:=_a; kvat2:=_c; kvat3:=_b; kvat4:=_d; {? _=5 || kvat5:=_e ?}
      ?};
      {? var_pres('vat5')>0 || vatk:=0 ?};
      _kraj:=DOK.KRAJ().KOD='PL';
      VPOZ.index('VDOK');
      VPOZ.prefix(DOK.ref());
      {? VPOZ.first()
      || {! |?
            {? 4+kewid='Sprz' | 6+kewid='_WWspD' | 6+kewid='_WWspN' | 8+kewid='ImpUsług'
            ||
::               vat nalezny
                {? _kraj
               || {? VPOZ.OKRVAT=SSTALE.AO
                  || vat0+=VPOZ.VAT$2
                  || vat10+=VPOZ.VAT$2
                  ?}
               || {? VPOZ.OKRVAT=SSTALE.AO || vat0+=VPOZ.CLO$2 || vat10+=VPOZ.CLO$2 ?}
               ?}
            ?};
            {? 4+kewid='Zaku' | 6+kewid='_WWspN' | 4+kewid='ImpT' | 8+kewid='ImpUsług'
            ||
::               vat naliczony
               {? _kraj
               || {? VPOZ.OKRVAT=SSTALE.AO
                  || {? var_pres('kvat5')>0
                     || vat1+=VPOZ.VAT_ODL$2; vat1k+=VPOZ.VATKOSZT$2
                     || vat1+=VPOZ.VAT$2
                     ?}
                  || {? var_pres('kvat5')>0
                     || vat11+=VPOZ.VAT_ODL$2
                     || vat11+=VPOZ.VAT$2
                     ?}
                  ?}
               || {? VPOZ.OKRVAT=SSTALE.AO || vat1+=VPOZ.CLO$2 || vat11+=VPOZ.CLO$2 ?}
               ?}
            ?};
            VPOZ.next
         !}
      ?};1
   ?}
|| 1
?}


\spr_one_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Sprawdza, czy dokument ma wylacznie jeden rejestr VAT w pozycjach
::  OLD: \spr_one_rvat/spr_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
VPOZ.cntx_psh(); VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
{? VPOZ.first()
|| _rvat:=VPOZ.RVAT;
   {? VPOZ.next()
   || {! |?
         _zwrot:=(_rvat=VPOZ.RVAT);
         _zwrot & VPOZ.next()
      !}
   ?}
?};
VPOZ.cntx_pop();
_zwrot


\vat_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Wywolanie formuly dla pozycji dla formuly kontrolujacej zgodnosc
::       pozycji VAT z dekretacja na kontach
::   WY: 0/1
::  OLD: \vat_poz/spr_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('vat0')>0 & var_pres('vat1')>0 & var_pres('vat2')>0 & var_pres('vat3')>0 & var_pres('vat4')>0 & var_pres('vat5')>0 &
   var_pres('kvat1')>0 & var_pres('kvat2')>0 & var_pres('kvat3')>0 & var_pres('kvat4')>0
|| {? kvat1<>'' & (+kvat1)+POZ.KON=kvat1 & 1+POZ.STR='M' & (4+kewid='Sprz' | 6+kewid='_WWspD' | 6+kewid='_WWspN' | 8+kewid='ImpUsług')
   ||
:     nalezny - biez. okres
      vat2+=POZ.SUM$2
   ?};
   {? kvat2<>'' & (+kvat2)+POZ.KON=kvat2 & 1+POZ.STR='W' &(4+kewid='Zaku' | 6+kewid='_WWspN' | 4+kewid='ImpT' | 8+kewid='ImpUsług')
   ||
:     naliczony - biez. okres
      vat3+=POZ.SUM$2
   ?};
   {? kvat3<>'' & (+kvat3)+POZ.KON=kvat3 & 1+POZ.STR='M' & (4+kewid='Sprz' | 6+kewid='_WWspD' | 6+kewid='_WWspN' | 8+kewid='ImpUsług')
   ||
:     nalezny - nast. okres
      vat4+=POZ.SUM$2
   ?};
   {? kvat4<>'' & (+kvat4)+POZ.KON=kvat4 & 1+POZ.STR='W' & (4+kewid='Zaku' | 6+kewid='_WWspN' | 4+kewid='ImpT' | 8+kewid='ImpUsług')
   ||
:     naliczony - nast. okres
      vat5+=POZ.SUM$2
   ?}

?};
{? var_pres('kvat5')>0 & kvat5<>'' & (+kvat5)+POZ.KON=kvat5
|| vatk+=POZ.SUM$2
?};
1


\vat_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Wywolanie formuly koncowej dla formuly kontrolujacej zgodnosc
::       pozycji VAT z dekretacja na kontach
::       zmienna KOMUNIKAT (jesli jest) decyduje czy wyswietlac komunikat
::   WE: [_a - 1 - pytanie, w p.w. - komunikat]
::       [_b - jesli jest nie kasowac zmienne]
::   WY: 0/1
::  OLD: \vat_kon/spr_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? var_pres('vat0')>0 & var_pres('vat1')>0 & var_pres('vat10')>0 & var_pres('vat11')>0 & var_pres('vat2')>0 & var_pres('vat3')>0 & var_pres('vat4')>0 & var_pres('vat5')>0 &
   var_pres('kvat1')>0 & var_pres('kvat2')>0 & var_pres('kvat3')>0 & var_pres('kvat4')>0
|| {? vat0$2<>vat2$2 & kvat1<>''
      | vat1$2<>vat3$2 & kvat2<>''
      | var_pres('vat1k')>0 & vat1k$2<>vatk
      | vat11$2<>vat5$2 & kvat4<>'' & kvat2<>kvat4
      | vat10$2<>vat4$2 & kvat3<>'' & kvat1<>kvat3
   || _ok:=0;
     {? var_pres('KOMUNIKAT')>0 & KOMUNIKAT
     || _t:='Niezgodność w ewidencji i dekretacji podatku VAT!'@+
        {? vat0$2<>vat2$2 & kvat1<>''
        || '\n\n'+(('Kwota podatku należnego do rozliczenia w bieżącym okresie:'@+((75-56)*' '))+80)+
           '\n'+ ((80*' ' + 'z pozycji VAT:'@)+52) + form(vat0,15,2)+
           '\n'+ ((80*' ' + 'na koncie '@+kvat1+':')+52) + form(vat2,15,2)
        || ''
        ?}+
        {? vat1$2<>vat3$2 & kvat2<>''
        || '\n\n'+(('Kwota podatku naliczonego do rozliczenia w bieżącym okresie:'@+((75-56)*' '))+80)+
           '\n'+ ((80*' ' + 'z pozycji VAT:'@)+52) + form(vat1,15,2)+
           '\n'+ ((80*' ' + 'na koncie '@+kvat2+':')+52) + form(vat3,15,2)
        || ''
        ?}+
        {? var_pres('vat1k')>0 & vat1k$2<>vatk & kvat5<>''
        || '\n\n'+(('Kwota podatku naliczonego do przeniesienia w koszty w bieżącym okresie:'@+((75-68)*' '))+80)+
           '\n'+ ((80*' ' + 'z pozycji VAT:'@)+52) + form(vat1k,15,2)+
           '\n'+ ((80*' ' + 'na koncie '@+kvat5+':')+52) + form(vatk,15,2)
        || ''
        ?}+
        {? vat11$2<>vat5$2 & kvat4<>''
        || '\n\n'+(('Kwota podatku naliczonego do rozliczenia w innych okresach:'@+((74-56)*' '))+80)+
           '\n'+ ((80*' ' + 'z pozycji VAT:'@)+52) + form(vat11,15,2)+
           '\n'+ ((80*' ' + 'na koncie '@+kvat4+':')+52) + form(vat5,15,2)
        || ''
        ?}+
        {? vat10$2<>vat4$2 & kvat3<>''
        || '\n\n'+(('Kwota podatku należnego do rozliczenia w innych okresach:'@+((74-56)*' '))+80)+
           '\n'+ ((80*' ' + 'z pozycji VAT:'@)+52) + form(vat10,15,2)+
           '\n'+ ((80*' ' + 'na koncie '@+kvat3+':')+52) + form(vat4,15,2)
        || ''
        ?};
        {? _=0 | _a=1
        || _ok:=ask(_t,,0,'Przerwij'@,'Kontynuuj'@)
        || FUN.info(_t)
        ?}
      ?}
   ?};
   {? _=1 || &vat0; &vat1; &vat10; &vat11; &vat2; &vat3; &vat4; &vat5; &kvat1; &kvat2; &kvat3; &kvat4; &kewid ?}
?};
_ok


\title
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia tytuł okna obszarów roboczych
::   WE: _a - tabele okna
::       [_b] - opcjonalnie akronim okna
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || AreaTitle.setTabWin(_a,_b) || AreaTitle.setTabWin(_a,~~) ?};
AreaTitle.setTitle()


\be_rozne_prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed redakcją ROZNE.PREFIX
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1).win_edit('?')='ZAKR_WYS'
|| exec('be_konto','edkonto',"
      ROZNE.TYP_WYS='P'
   ")
|| exec('be_konto','edkonto',"
      {? ROZNE.PAR4=0 & cur_tab(1,1).win_edit('?')<>'ZAKRESOP' |
         cur_tab(1,1).win_edit('?')='ZAKRESOP' & ROZNE.ZAKR_ROZ=1
      || 1
      || 0
      ?}
   ")
?}


\be_rozne_maska
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed redakcją ROZNE.MASKA
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1).win_edit('?')='ZAKR_WYS'
|| exec('be_konto','edkonto',"
      ROZNE.TYP_WYS='M'
   ")
|| exec('be_konto','edkonto',"
      {? ROZNE.PAR4=2 |
         cur_tab(1,1).win_edit('?')='ZAKRESOP' & ROZNE.ZAKR_ROZ=4
      || 1
      || 0
      ?}
   ")
?}


\be_rozne_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed redakcja ROZNE.ODD
::  OLD: \oddred/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ROZNE.TYP_WYS='' | ROZNE.TYP_WYS='M') & OPERATOR.DEPT=null
|| ODD.prefix();
   ODD.f_clear();
   {? ROZNE.win_edit('?')<>'ANR05'
   || ODD.f_set('OD,N',
                'left join USERSDEP using(USERSDEP.DEPT,ODD.REFERENCE)',
                '(:_a=1 or USERSDEP.USERS=:_b) and ODD.FIRMA=:_c',Perm.hasFull('FJKS'),OPERATOR.USER,REF.FIRMA)
   ?};
   1
|| 0
?}


\stalear
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2010]
:: OPIS: Formula na wartosc poczatkowa pola AUTOKSIE.ROK_F
::  OLD: \stalear/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('rok_ref')>0
|| rok_ref
|| SSTALE.AR
?}


\bg_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Przed akcja grupowa usun tabel T_GR, GR_EL, POZ (okno GR_DOK) i innych
::   WE: _a - 0 - usuwa grupe
::            1 - usuwa dokument
::            2 - usuwa pozycje
::            4 - komunikat usuwania bedzie podany w parametrze
::       [_b - komunikat usuwania]
::  OLD: \bg_del/gr_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{?
    {? _a=4
    || FUN.ask(_b)
    ||  {? _a=0
        ||   FUN.ask('Usunąć zaznaczone grupy i ich powiązania?'@)
        |? _a=1
        ||   FUN.ask('Usunąć zaznaczone dokumenty z grupy i ich powiązania?'@)
        |? _a=2
        ||   FUN.ask('Usunąć zaznaczone pozycje z grupy'@)
         ?}
    ?}
|| sel_nchk();
   gr_sel:=cur_tab(1,1).sel_size();
   gr_ok:=0;
   1
|| 0
?}


\ag_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Po akcji grupowej usun tabel T_GR, GR_EL, POZ (okno GR_DOK) i innych
::   WE: _a - 0 - usuwa grupe
::            1 - usuwa dokument
::            2 - usuwa pozycje
::            4 - komunikat usuwania bedzie podany w parametrze
::       [_b - komunikat usuwania]
::  OLD: \ag_del/gr_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_t:={? _a=0 || 'grup'@ |? _a=1 || 'dokumentów grupy'@ |? _a=4 || _b || 'pozycji grupy'@ ?};
{? gr_sel=gr_ok
|| FUN.info('Liczba zaznaczonych i usuniętych %1 : %2'@[_t,$gr_sel])
|| FUN.info('Liczba zaznaczonych %1: %2\nLiczba usuniętych %3: %4'@[_t,$gr_sel,_t,$gr_ok])
?};
&gr_sel; &gr_ok


\ae_par1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Po redakcji pola ROZNE.RPAR1
::  OLD: \ae_par1/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab=ROZNE & ROZNE.win_edit('?')='KS_2' & ROZNE.PAR4=5
|| _a:=ROZNE.KON_WYDR().SA;
   {? var_pres('SA')>0 || SA:={? fld=1 || 'S' || 'A' ?} ?};
   {? (fld=1 & (_a='A' | +_a=0)) | (fld=2 & (_a='S' | +_a=0))
   || ROZNE.KON_WYDR:=exec('bl_konwy','dok_fks',{? fld=1 || 'S' || 'A'?})
   ?}
?}; 1


\bl_konwy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Ustawia domyslny zestaw kont dla roku
::   WE: _a: (S)yntetyka, (A)nalityka
::   WY: ref domyslnego zestawu kont dla uzytkownika
::  OLD: \bl_konwy/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? +_a=1
|| _r:=null;
   KON_WYDR.cntx_psh();
   KON_WYDR.index('DOM');
   KON_WYDR.prefix(SSTALE.AR,_a,'T');
   {? KON_WYDR.first()
   || _r:=KON_WYDR.ref()
   ?}; KON_WYDR.cntx_pop();
   _r
?}


\c_tmprej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Tworzy tabele tymczasowa z rejestrami do zaznaczenia,
::       wywoluje funkcje dla kazdego zaznaczonego rekordu
::   WY: 1-kopiowac zaznaczone 0-nie kopiowac
::  OLD: \c_tmprej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
REJ.cntx_psh();
ROK_F.cntx_psh();
{? var_pres('TMP_REJ')>0 || obj_del(TMP_REJ) ?};
TMP_REJ:=tab_tmp(3,'ROK','STRING[20]','Rok',
                   'ODD','STRING[8]','Jednostka księgowa',
                   'SYM','STRING[8]','Symbol',
                   'NAZ','STRING[60]','Nazwa',
                   'ZN','STRING[1]','Z',
                   'REJ','INTEGER','REJ');
indr:=TMP_REJ.index('?');
_i:=REJ.ndx_tmp(,,'ROK','FIRMA',1,'ODD',,1);
REJ.index(_i);
{? OPERATOR.DEPT || REJ.prefix(REF.S_FIRMA,OPERATOR.DEPT) || REJ.prefix(REF.S_FIRMA) ?};
{? REJ.first()
|| {! |?
      {? REJ.ODD<>null | REJ.ROK<>null ||
         TMP_REJ.blank();
         TMP_REJ.ODD:=REJ.ODD().OD;
         TMP_REJ.ROK:=REJ.ROK().NAZ;
         TMP_REJ.SYM:=REJ.KOD;
         TMP_REJ.NAZ:=REJ.NAZ;
         TMP_REJ.REJ:=#REJ.ref();
         TMP_REJ.add()
      ?};
      REJ.next()
   !}
?};
REJ.cntx_pop();
REJ.ndx_drop(_i);
indo:=TMP_REJ.ndx_tmp('',1,'ODD',,0,'SYM',,0);
indz:=TMP_REJ.ndx_tmp('',0,'ZN',,0);
_wer:=TMP_REJ.mk_sel('Wybór rejestrów przeznaczonych do kopiowania'@,,,'tmp_rej_wer');
TMP_REJ.win_fld(_wer,,'ROK');
{? ~OPERATOR.DEPT || TMP_REJ.win_fld(_wer,,'ODD') ?};
TMP_REJ.win_fld(_wer,,'SYM');
TMP_REJ.win_fld(_wer,,'NAZ');
TMP_REJ.win_sel(_wer);
TMP_REJ.win_act(_wer,,'Rekord',,,'Wybór do jakiego rejestru kopiować'@,
                      "{? TMP_REJ.ZN='T' || exec('findtmp','#color') ?}");
TMP_REJ.win_act(_wer,,'Formuła','Zaznacz/odznacz'@@,,'Wybór do jakiego rejestru kopiować'@,,
                 "TMP_REJ.ZN:={? TMP_REJ.ZN='T' || '' || 'T' ?}; TMP_REJ.put",1,1,,,'Z');
TMP_REJ.win_act(_wer,,'Formuła','Zmień zak&res'@@,,'Zmiana zakresu: Rok, Jednostka księgowa'@,,
               "REJESTR.win_edit('ROK_ODD');
               POMOC.AKC:='X';
               {? REJESTR.edit() ||
                  {? REJESTR.ROK
                  || TMP_REJ.index(indr);
                     {? REJESTR.ODD
                     || TMP_REJ.prefix(REJESTR.ROK().NAZ,REJESTR.ODD().OD)
                     || TMP_REJ.prefix(REJESTR.ROK().NAZ)
                     ?}
                  || {? REJESTR.ODD
                     || TMP_REJ.index(indo);
                        TMP_REJ.prefix(REJESTR.ODD().OD)
                     || TMP_REJ.index(indr);
                        TMP_REJ.prefix()
                     ?}
                  ?}
               ?}",0,,,,'R');
TMP_REJ.win_act(_wer,,'Formuła','Kopiuj'@@,,'Rozpoczyna kopiowanie'@,,"
   TMP_REJ.cntx_psh();
   TMP_REJ.index(indz); TMP_REJ.prefix('T');
   _ok:=TMP_REJ.first();
   TMP_REJ.cntx_pop();
   {? _ok || sel_exit() || FUN.info('Nie wybrano docelowych rejestrów księgowych.'@) ?}",,,,,'K');
TMP_REJ.win_act(_wer,,'Szukaj');
_ok:=TMP_REJ.select();
{? _ok
|| TMP_REJ.index(indz);
   TMP_REJ.prefix('T')
?};
POMOC.AKC:='';
ROK_F.cntx_pop();
_ok


\f_tmprej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Wywoluje funkcje dla kazdego zaznaczonego rekordu
::       w tabeli tymczasowej
::   WE: _a - formula do wykonania dla kazdego zaznaczonego rekordu
::   WY: do ilu rejestrow skopiowano
::  OLD: \f_tmprej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
REJ.cntx_psh(); REJ.prefix();
_copy:=0;
{? TMP_REJ.first()
|| {! |?
      _copy+=(_a)();
      TMP_REJ.next()
   !}
?};
REJ.cntx_pop();
_copy


\d_tmprej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Usuwa tabele tymczasowe z rejestrami do zaznaczenia
::  OLD: \d_tmprej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
TMP_REJ.ndx_drop(indo);
TMP_REJ.ndx_drop(indz);
obj_del(TMP_REJ);
&indr; &indo; &indz


\oblicz_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: _dokref - DOK.ref
::       _pozref - POZ.ref
::       _tabacr - akronim tabeli (Kartoteka)
::       _tabnr - numer tabeli _tabacr (SrcDBF)
::       _mstart -  MaskStart
::       _mstop -  MaskStop
::       _mtxt -  MaskaTxt - FORM.MASKA
::       _inmask - InternalMask
::       Pos - nr pozycji w tabeli POZ
::       _kwota - Kwota
::       _maska - Maska
::   WE: [_a - AUTOKSIE.NAZ]
::       [_b - AUTOKSIE.TYP]
::  OLD: \oblicz_f/auto.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
exec('ini_tpow','dok_fks');
AN.cntx_psh();
OBR.cntx_psh();
SKIDXD.cntx_psh();
AN_SLU.cntx_psh();
MSK:='';
_j:=obj_new(10);
_inmask:=_maska:='';
PARAM.AUTOMAT:='P';
wyb:=1;
_v:=1;
_typ:={? _>0
      || {? type_of(_a)=2
         || AUTOKSIE.index('NAZ');
            AUTOKSIE.prefix();
            {? AUTOKSIE.find_key(SSTALE.AR, _a) & AUTOKSIE.NAZ=_a
            || 1
            || _v:=0
            ?}
         || exec('autowyb','dok_fks',{? _>1 || _b || 'P' ?})
         ?};
         AUTOKSIE.TYP
      || 'N'
      ?};
_stat:=0;
{? _v & wyb
||
:: statystyki użycia - start
   exec('stat_add','st_common','A_AUTOKSIE',AUTOKSIE.NAZ,AUTOKSIE.OP,AUTOKSIE.TYP);
   _stat:=1
?};
{? _v & wyb & AUTOKSIE.FORMPOCZ<>''
|| _v:=($AUTOKSIE.FORMPOCZ)();
   {? type_of(_v)<>1
   || _v:=-1;
      wyb:=0;
      {? var_pres('fun_cont')<=0
      || FUN.emsg('Nieprawidłowy typ wyniku formuły początkowej: %1.\n'
                  'Działanie schematu dokumentów zostało zatrzymane.'@[AUTOKSIE.NAZ])
      ?};
      _ok:=0
   || {? AUTOKSIE.TYP='D'
      || {? _stat
         ||
::          statystyki użycia - stop
            exec('stat_add','st_common','A_AUTOKSIE_E',AUTOKSIE.NAZ,AUTOKSIE.OP,AUTOKSIE.TYP);
            _stat:=0
         ?};
         &MSK;&wyb;
         AN.cntx_pop();
         OBR.cntx_pop();
         SKIDXD.cntx_pop();
         AN_SLU.cntx_pop();
         obj_del(TPOW);
         exec('pozdekv2','dok_fks');
         return(_ok)
      ?};
      echo()
   ?}
?};
{? wyb & _v<>-1 & _typ<>PARAM.AUTOMAT & var_pres('fun_cont')<=0 & _typ<>'L'
|| wyb:=0;
   FUN.info('Niewłaściwe miejsce wywołania schematu dokumentów.'@); _ok:=0
?};
{? var_pres('dalej_rmk')>0 & ~dalej_rmk
|| wyb:=0;  _ok:=0
?};
{? wyb
|| {? AUTOKSIE.TYP='P' & AUTOKSIE.WYR='T'
   || _poz:=POZ.ref();
      POZ.cntx_psh();
      {? POZ.last()
      || FORM.index('AUTOKSIE'); FORM.prefix(AUTOKSIE.ref());
         exec('spr_f_nr','dok_fks');
         _max:=POZ.POZ;
         _more:=POZ.prev();
         _all:=2;
         {? _more
         || _all:=FUN.choice('Dla których pozycji wykonać automat\ntworzący pozycje z wyróżnikami?'@,2,'Wszystkich'@,'Bieżacej'@)
         ?};
         do();
         FORM.index('MASKA');
         {? _all=1 & POZ.first() | _all=2 & POZ.seek(_poz)
         || {!
            |? _synt:=SSTALE.AR().SYNT+POZ.KON;
               _kw:=POZ.SUM;
               _proc:=0;
               FORM.prefix(AUTOKSIE.ref(),_synt);
               {? FORM.first()
               || {!
                  |? _proc+=FORM.PROCENT;
                     FORM.next()
                  !};
                  _ost:=FORM.ref()
               ?};
               {? FORM.first()
               || {!
                  |? {? exec('comp_an','dok_fks',POZ.KON,FORM.MASKA)
                     || POZ.cntx_psh();
                        _nr:={? POZ.last() || POZ.POZ+1 || 1 ?};
                        POZ.cntx_pop();
                        {? _proc=100 & FORM.ref()=_ost
                        || _sum:=_kw
                        || _sum:=(POZ.SUM*FORM.PROCENT/100)$2
                        ?};
                        {? _sum
                        || POZ.cntx_psh();
                           POZ.prefix();
                           POZ.POZ:=_nr;
                           POZ.SUM:=_sum;
                           {? POZ.add()
                           || _kw-=_sum;
                              {! _i:=1..6
                              |! _typ:=($('FORM.SW'+$_i))();
                                 _slo:=null;
                                 {? _typ='S'
                                 || _slo:=($('FORM.W'+$_i))()
                                 |? _typ='F'
                                 || KS.index('SYM'); KS.prefix(SSTALE.AR,_synt,);
                                    {? KS.first
                                    || KS_W.index('LP'); KS_W.prefix(KS.ref(),_i);
                                       {? KS_W.first()
                                       || SLU.prefix();
                                          KS_W.SLU().SLU();
                                          _fslo:=($($('FORM.FW'+$_i))())();
                                          {? type_of(_fslo)=type_of('')
                                          || SLO.index('SL'); SLO.prefix(SLU.ref(),_fslo,);
                                             _slo:={? SLO.first() || SLO.ref() || null ?}
                                          |? type_of(_fslo)=type_of(null)
                                          || _slo:=_fslo
                                          ?}
                                       ?}
                                    ?}
                                 ?};
                                 {? type_of(_slo)=type_of(null) & _slo<>null
                                 || POW.POZ:=POZ.ref();
                                    POW.LP:=_i;
                                    POW.KW:=POZ.SUM;
                                    POW.SLO:=_slo;
                                    SLUAPPL.index('REF'); SLUAPPL.prefix(POW.SLO().SLU);
                                    {? SLUAPPL.first()
                                    || POW.SLU:=SLUAPPL.ref();
                                       POW.prefix();
                                       POW.add()
                                    ?}
                                 ?}
                              !}
                           ?};
                           POZ.cntx_pop()
                        ?}
                     ?};
                     FORM.next()
                  !}
               ?};
               {? _kw
               || _pkw:=POZ.SUM;
                  POZ.SUM:=_kw;
                  {? POZ.put()
                  || POW.cntx_psh();
                     POW.index('POZ'); POW.prefix(POZ.ref());
                     {? POW.first()
                     || {!
                        |? {? POW.KW=_pkw
                           || POW.KW:=_kw;
                              POW.put()
                           ?};
                           POW.next()
                        !}
                     ?};
                     POW.cntx_pop()
                  ?};
                  _dalej:=POZ.next()
               || _max-=1;
                  _dalej:=exec('usun_poz1','dok_fks',0)
               ?};
               _all=1 & _dalej & POZ.POZ<=_max
            !}
         ?};
         end()
      || FUN.info('Brak pozycji do rozpisania wyróżników.'@)
      ?};
      POZ.cntx_pop();
      ~~
   |? AUTOKSIE.TYP='K'
   || _poz_fun:='';
      {? var_pres('fun_cont')>0
      || {? CON_FUN.MODEL=null
         || FORM.index('AUTOKSIE'); FORM.prefix(AUTOKSIE.ref())
         || FORM.index('AUTOCON'); FORM.prefix(AUTOKSIE.ref(),CON_FUN.MODEL)
         ?};
         _poz_fun:=CON_FUN.WAR_POZ
      || FORM.index('AUTOKSIE'); FORM.prefix(AUTOKSIE.ref());
         exec('spr_f_nr','dok_fks')
      ?};
      {? FORM.first()
      || echo('Trwa obliczanie formuł...'@);
         POZ.cntx_psh();
         POZ.index('D_KON2');
         UD_TYP.index('SYMBOL'); UD_SKL.index('SYMBOL');
         SKIDXD.index('AUT1'); SKIDXD.prefix('T',DOK.ref());
         {? SKIDXD.first() & var_pres('fun_cont')<=0
         || _ch:=FUN.choice('Istnieją już podziały dla controllingu.'@,,'Usunąć istniejące'@,'Dopisać po ostatnim'@);
            {? _ch=2 || _ch:=3 ?}
         || _ch:=2
         ?};
         {? _ch=1 || {! |? SKIDXD.del() !} ?};
         {? _ch
         || _new:=0;
            do();
            {!
            |? _pp:=FORM.MASKA*'?';
               {? _pp>1
               || POZ.prefix(DOK.ref(),_pp+FORM.MASKA-1);
                  _vkon:=(_pp-1)-FORM.MASKA
               |? _pp=1
               || POZ.prefix(DOK.ref());
                  _vkon:=FORM.MASKA
               || POZ.prefix(DOK.ref(),FORM.MASKA)
               ?};
               {? POZ.first()
               || {! |?
                     {? (_pp=0 | exec('comp_an','dok_fks',_vkon,{? _pp>1 || (_pp-1)-POZ.KON || POZ.KON ?})) &
                        (_poz_fun='' | ($_poz_fun)())
                     || SKIDXD.blank();
                        _cont:=1;
                        _skid_mb:=FORM.SKID_MB;
                        SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(_skid_mb); _ile:=SKID_MBP.size();
                        {? _skid_mb=null | ~_ile
                        || {? var_pres('fun_cont')>0
                           || OKRO_F.cntx_psh(); REJ.cntx_psh(); ROK_F.cntx_psh();
                              exec('add_kom','dok_fks',3,'',CON_FUN.SYM,
                              'Błędna definicja tworzenia podziału dla dokumentu '+DOK.NK+' ('+$SSTALE.AO().NR+'/'+
                              SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
                              0,ROK_F.ref(),SSTALE.AO,null,$DOK.ref());
                              OKRO_F.cntx_pop(); REJ.cntx_pop(); ROK_F.cntx_pop()
                           ?}
                        || _ud_typ:=obj_new(_ile); _wym:=obj_new(_ile);
                           {! _i:=1.._ile
                           |! _ud_typ[_i]:={? SKID_MBP.find_key(_i) || SKID_MBP.UD_SCH().UD_TYP().SYMBOL || '' ?}
                           !};
                           {? _ile
                           || _wym[1]:={? FORM.PBUD_SF='S' || FORM.PBUD_S || ($FORM.PBUD_F)() ?};
                              {? _wym[1]='' || _cont:=0 ?}
                           ?};
                           {? _ile>1
                           || _wym[2]:={? FORM.JORG_SF='S' || FORM.JORG_S || ($FORM.JORG_F)() ?};
                              {? _wym[2]='' || _cont:=0 ?}
                           ?};
                           {? _ile>2
                           || _wym[3]:={? FORM.OKOSZ_SF='S' || FORM.OKOSZ_S || ($FORM.OKOSZ_F)() ?};
                              {? _wym[3]='' || _cont:=0 ?}
                           ?};
                           {? _ile>3
                           || _wym[4]:={? FORM.WYM4_SF='S' || FORM.WYM4_S || ($FORM.WYM4_F)() ?};
                              {? _wym[4]='' || _cont:=0 ?}
                           ?};
                           {? _ile>4
                           || _wym[5]:={? FORM.WYM5_SF='S' || FORM.WYM5_S || ($FORM.WYM5_F)() ?};
                              {? _wym[5]='' || _cont:=0 ?}
                           ?};
                           SKIDXD.SKID_MB:=_skid_mb;
                           {? _ile>1
                           || {! _i:=2.._ile
                              |! {? _ud_typ[_i]<>'' & _wym[_i]<>''
                                 || UD_TYP.prefix(_ud_typ[_i],_ud_typ[_i]);
                                    {? UD_TYP.first()
                                    || UD_SKL.prefix(UD_TYP.ref(),_wym[_i],_wym[_i]);
                                       {? UD_SKL.first()
                                       || {? _i=2 || SKIDXD.JORG:=UD_SKL.ref()
                                          |? _i=3 || SKIDXD.OKOSZ:=UD_SKL.ref()
                                          |? _i=4 || SKIDXD.WYM4:=UD_SKL.ref()
                                          |? _i=5 || SKIDXD.WYM5:=UD_SKL.ref()
                                          ?}
                                       ?}
                                    ?}
                                 ?}
                              !}
                           ?};
                           {? _cont
                           || _str:=''; _wald:=0;
                              UD_TYP.prefix('POZ_BUD','POZ_BUD');
                              {? UD_TYP.first()
                              || UD_SKL.prefix(UD_TYP.ref(),_wym[1],_wym[1]);
                                 {? UD_SKL.first()
                                 || SKIDXD.PBUD:=UD_SKL.ref();
                                    SKIDXDUD.index('POZ'); SKIDXDUD.prefix(UD_SKL.ref());
                                    {? SKIDXDUD.first()
                                    || _str:=SKIDXDUD.STR;
                                       {? SKIDXDUD.WART_IL='W'
                                       || {? SKIDXDUD.WSK_WAL='T' || _wald:=1 ?};
                                          SKIDXD.WAL:={? POZ.WAL & _wald || POZ.WAL || FINFO.NAROD ?}
                                       || SKIDXD.JM:=SKIDXDUD.JM
                                       ?}
                                    ?}
                                 || _cont:=0
                                 ?}
                              ?};
                              {? ~_cont & var_pres('fun_cont')>0
                              || OKRO_F.cntx_psh(); REJ.cntx_psh(); ROK_F.cntx_psh();
                                 exec('add_kom','dok_fks',3,'',CON_FUN.SYM,
                                      'Nieudane dodanie podziału dla dokumentu '+DOK.NK+' ('+$SSTALE.AO().NR+'/'+SSTALE.AR().NAZ+
                                      ', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
                                      0,ROK_F.ref(),SSTALE.AO,null,$DOK.ref());
                                 OKRO_F.cntx_pop(); REJ.cntx_pop(); ROK_F.cntx_pop()
                              ?}
                           ?};
                           {? var_pres('fun_cont')>0 & ~exec('spr_wym','control',_skid_mb,1,_ile) || _cont:=0 ?};
                           {? _cont
                           || SKIDXD.WART:={? POZ.STR=_str || POZ.SUM || -POZ.SUM ?};
                              {? _wald
                              || SKIDXD.WARTW:={? POZ.STR=_str || POZ.SUMW || -POZ.SUMW ?};
                                 SKIDXD.KURS:=POZ.KURS
                              ?};
                              SKIDXD.GEN_AUT:='T';
                              SKIDXD.AN:=POZ.KON;
                              {? var_pres('zm_znak')>0 & zm_znak
                              || SKIDXD.WART:=-SKIDXD.WART; SKIDXD.WARTW:=-SKIDXD.WARTW
                              ?};
                              _put:=0; _wart:=SKIDXD.WART; _wartw:=SKIDXD.WARTW;
                              _pbud:=SKIDXD.PBUD; _jorg:=SKIDXD.JORG; _okosz:=SKIDXD.OKOSZ;
                              _wym4:=SKIDXD.WYM4; _wym5:=SKIDXD.WYM5;
                              SKIDXD.cntx_psh();
                              SKIDXD.index('KONTO'); SKIDXD.prefix(SKIDXD.DOK,SKIDXD.SKID_MB,SKIDXD.WAL,SKIDXD.JM,SKIDXD.GEN_AUT,SKIDXD.AN,);
                              {? _ch=2 & SKIDXD.first() & _pbud=SKIDXD.PBUD & _jorg=SKIDXD.JORG & _okosz=SKIDXD.OKOSZ
                                 & _wym4=SKIDXD.WYM4 & _wym5=SKIDXD.WYM5
                              || SKIDXD.WART+=_wart; SKIDXD.WARTW+=_wartw;
                                 _put:=SKIDXD.put();
                                 {? ~_put & var_pres('fun_cont')>0
                                 || OKRO_F.cntx_psh(); REJ.cntx_psh(); ROK_F.cntx_psh();
                                    exec('add_kom','dok_fks',3,'',CON_FUN.SYM,
                                         'Nieudane uaktualnienie podziału dla dokumentu '+DOK.NK+' ('+$SSTALE.AO().NR+'/'+SSTALE.AR().NAZ+
                                         ', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
                                         0,ROK_F.ref(),SSTALE.AO,null,$DOK.ref());
                                    OKRO_F.cntx_pop(); REJ.cntx_pop(); ROK_F.cntx_pop()
                                 ?}
                              ?};
                              SKIDXD.cntx_pop();
                              {? ~_put
                              || _new:=SKIDXD.add();
                                 {? ~_new & var_pres('fun_cont')>0
                                 || OKRO_F.cntx_psh(); REJ.cntx_psh(); ROK_F.cntx_psh();
                                    exec('add_kom','dok_fks',3,'',CON_FUN.SYM,
                                         'Nieudane dodanie podziału dla dokumentu '+DOK.NK+' ('+$SSTALE.AO().NR+'/'+
                                         SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
                                         0,ROK_F.ref(),SSTALE.AO,null,$DOK.ref());
                                    OKRO_F.cntx_pop(); REJ.cntx_pop(); ROK_F.cntx_pop()
                                 ?}
                              ?}
                           ?};
                           obj_del(_ud_typ); obj_del(_wym)
                        ?};
                        SKID_MBP.cntx_pop()
                     ?};
                     POZ.next()
                  !}
               ?};
               FORM.next()
            !};
            end();
            {? var_pres('fun_cont')<=0
            || {? _new
               || FUN.emsg('Dodano pozycje w podziałach controllingowych.'@)
               || FUN.emsg('Pozycje w podziałach controllingowych nie zostały wygenerowane.'
                           '\n\nPozycje dekretu nie spełniają kryteriów dla których'
                           '\nsą wykonywane automaty dla controllingu.'@)
               ?}
            ?}
         || _ok:=0
         ?};
         POZ.cntx_pop();
         echo()
      ?}
   || Pos:=0;
      Ostatnie:=0;
      FORM.index('AUTOKSIE'); FORM.prefix(AUTOKSIE.ref());
      exec('spr_f_nr','dok_fks');
      {? FORM.first()
      || echo('Trwa obliczanie formuł ...'@);
         _dokref:=DOK.ref;
         {? POZ.size() || _pozref:=POZ.ref || _pozref:=0 ?};
         _a:=POZ.first();
         _ask:=1;
         {? _a & (AUTOKSIE.TYP='P' | AUTOKSIE.TYP='D')
         || _ask:=FUN.ask('Dopisać po ostatniej pozycji w dokumencie?'@)
         ?};
         {? _ask & _a
         || {? ~exec('magwal_spli_poz0','dok_fks_ks')
            || _ask:=0
            ?}
         ?};
         _tran:={? do_state()=0 || do(); 0 || 1 ?};
         {? _ask
         || {? _a
            || POZ.last();
               Pos:=POZ.POZ+1
            || Pos:=1
            ?};
            {!
            |? POZ.blank();
               POZ.OP:=AUTOKSIE.OP;
               POZ.POZ:=Pos;
               _mtxt:=FORM.MASKA;
               {? FORM.KARTOTEK<>''
               || _tabacr:=FORM.KARTOTEK;
                  {? ~(_tabnr:=exec('find_dbf','dok_fks',_tabacr))
                  || undo();
                     FUN.info('Kartoteka: %1 nie istnieje.'@[_tabacr])
                  ?}
               || _tabacr:='';
                  _tabnr:=0
               ?};
               {? _tabnr<>0
               || ($(_tabacr+'.cntx_psh()'))();
                  {? FORM.INDEKS<>''
                  || ( $(_tabacr+'.index('''+FORM.INDEKS+''')') )()
                  ?};
                  _mstop:=+_mtxt;
                  _mstart:=1;
                  {!|? (_mstop>0) & ( (((_mstop-1)-_mtxt)+1<>'?') & (((_mstop-1)-_mtxt)+1<>'!') )
                  |! _mstop-=1
                  !};   '---- _mstop - pozycja ostatniego ? lub ! ---';
                  {? _mstop=0 || _mstop:=+_mtxt+1 ?};
                  {!|? (_mstart<=_mstop) & (1+((_mstart-1)-_mtxt)<>'?') & (1+((_mstart-1)-_mtxt)<>'!')
                  |! _mstart+=1
                  !};      '-----_mstart pozycja pierwszego ? lub ! ---';
                  {? _mtxt<>'' || ($(_tabacr+'.prefix('''+((_mstart-1)+_mtxt)+''')'))() ?};
                  _kwota:=0;
                  Ostatnie:=0;
                  {? ($(_tabacr+'.first()'))()
                  || _inmask:=exec('dopasuj','dok_fks',_mtxt,_mstart,_mstop,_tabacr,1)
                  || _inmask:=exec('dopasuj','dok_fks',_mtxt,_mstart,_mstop,_tabacr,0)
                  ?};
                  _maska:=_inmask;
                  {!|? ~Ostatnie
                  |! ($(_tabacr+'.cntx_psh()'))();
                     _kwota:=_kwota+exec('evalform','dok_fks');
                     ($(_tabacr+'.cntx_pop()'))();
                     {? ($(_tabacr+'.next()'))()
                     || _inmask:=exec('dopasuj','dok_fks',_mtxt,_mstart,_mstop,_tabacr,1)
                     || _inmask:=exec('dopasuj','dok_fks',_mtxt,_mstart,_mstop,_tabacr,0)
                     ?};
                     {? Ostatnie | (_maska<>_inmask) | (_mtxt='')
                     || ($(_tabacr+'.cntx_psh()'))();
                        exec('additem','dok_fks',1,_kwota,_dokref);
                        exec('additem','dok_fks',0,_kwota,_dokref);
                        _kwota:=0;
                        ($(_tabacr+'.cntx_pop()'))();
                        _maska:=_inmask
                     ?}
                  !};
                  ($(_tabacr+'.cntx_pop()'))()
               |? AUTOKSIE.TYP='D'
               || SKIDXD.index('DOK');
                  {? FORM.PBUD
                  || SKIDXD.prefix(_dokref,FORM.PBUD,FORM.SKID_MB)
                  || SKIDXD.prefix(_dokref)
                  ?};
                  {? SKIDXD.first()
                  || {! |?
                        _kwota:=exec('evalform','dok_fks');
                        SKIDXDUD.index('POZ'); SKIDXDUD.prefix(SKIDXD.PBUD);
                        {? SKIDXDUD.first()
                        || {? SKIDXD.WAL<>FINFO.NAROD
                           || exec('additem','dok_fks',1,_kwota,_dokref,SKIDXD.WAL,,SKIDXD.KURS);
                              exec('additem','dok_fks',0,_kwota,_dokref,SKIDXD.WAL,,SKIDXD.KURS)
                           || exec('additem','dok_fks',1,_kwota,_dokref);
                              exec('additem','dok_fks',0,_kwota,_dokref)
                           ?}
                        ?};
                        SKIDXD.next()
                     !}
                  ?}
               |? AUTOKSIE.TYP='L'
               || exec('dekret_deleg','dok_fks',_dokref)
               || POZ.cntx_psh();
                  {? _pozref<>0 || POZ.seek(_pozref) ?};
                  _kwota:=exec('evalform','dok_fks');
                  {? type_of(_kwota)=1 & _kwota<>0
                  || _kwn:=($FORM.KWN)();
                     {? type_of(_kwn)=2 & _kwn<>''
                     || exec('additem','dok_fks',1,_kwota,_dokref)
                     ?};
                     _kma:=($FORM.KMA)();
                     {? type_of(_kma)=2 & _kma<>''
                     || exec('additem','dok_fks',0,_kwota,_dokref)
                     ?}
                  ?};
                  POZ.cntx_pop();
                  {? POZ.last() || Pos:=POZ.POZ+1 ?}
               ?};
               FORM.next()
            !}
         ?};
         {? _pozref
         || {? ~POZ.seek(_pozref)
            || undo(); FUN.info('Nie znaleziono pozycji dokumentu.'@)
            ?}
         || POZ.last()
         ?};
         KS.prefix();
         {? ~_tran
         || end()

         ?};
        {? (AUTOKSIE.TYP='P' | AUTOKSIE.TYP='D') & POZ.size()
         || exec('suma_dok','dok_fks')
         ?};
         {? AUTOKSIE.TYP='D'
         || {? _stat
            ||
::             statystyki użycia - stop
               exec('stat_add','st_common','A_AUTOKSIE_E',AUTOKSIE.NAZ,AUTOKSIE.OP,AUTOKSIE.TYP);
               _stat:=0
            ?};
            &MSK;&wyb;
            AN.cntx_pop();
            OBR.cntx_pop();
            SKIDXD.cntx_pop();
            AN_SLU.cntx_pop();
            obj_del(TPOW);
            &Pos; &Ostatnie;
            echo();
            exec('pozdekv2','dok_fks');
            return(_ok)
         ?};
         echo()
     ?};
     &Pos;
     &Ostatnie
   ?}
?};
{? _stat
||
:: statystyki użycia - stop
   exec('stat_add','st_common','A_AUTOKSIE_E',AUTOKSIE.NAZ,AUTOKSIE.OP,AUTOKSIE.TYP)
?};
AN.cntx_pop();
OBR.cntx_pop();
SKIDXD.cntx_pop();
AN_SLU.cntx_pop();
VAR_DEL.delete('dalej_rmk','wyb','MSK','TPOW');
_ok


\autowyb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Wybór schematów dokumentów
::   WE: _a - typ formuly (N/P/D/K)
::  OLD: \autowyb/auto.fml
::----------------------------------------------------------------------------------------------------------------------
wyb:=0;
PARAM.AUTOMAT:=_a;
{? _a='N' | (DOK.ODD<>0 & (_a='P' | _a='D' | _a='K'))
|| F.set_odd(DOK.ODD); _jest:=0;
   {? _a='P' | _a='D' | _a='K'
   || DOK.DOK_REJ(); DOK.REJ();
      P_AUTOKS.index('AUTO_REJ'); P_AUTOKS.prefix(null,SSTALE.AR,_a,DOK_REJ.ref,'T');
      {? P_AUTOKS.first
      || _jest:=1;
         {? P_AUTOKS.size>1
         || ROZNE.A_REJ:=REJ.ref; ROZNE.A_DOK_R:=DOK_REJ.ref;
            P_AUTOKS.win_sel('SLO'); P_AUTOKS.select
         || wyb:=1; P_AUTOKS.AUTOKSIE()
         ?}
      ?};
      DOK.REJ()
   ?};
   {? wyb=0
   || P_AUTOKS.index('AUTO_REJ'); P_AUTOKS.prefix(REJ.ref,SSTALE.AR,_a,null,'T');
      {? P_AUTOKS.first
      || {? P_AUTOKS.size>1
         || ROZNE.A_REJ:=REJ.ref; ROZNE.A_DOK_R:=null;
            P_AUTOKS.win_sel('SLO'); P_AUTOKS.select
         || wyb:=1; P_AUTOKS.AUTOKSIE()
         ?}
      || {? _a='P' & ~_jest
         || FUN.info('Wybrany rejestr i rodzaj dokumentu nie mają przyporządkowanych\n'
                     'zaakceptowanych schematów dokumentów (wywoływanych z pozycji dokumentu).'@)
         || FUN.info('Wybrany rejestr nie ma przyporządkowanych zaakceptowanych schematów dokumentów.'@)
         ?}
      ?}
   ?};
   F.resetodd()
|| FUN.info('W nagłówku dokumentu nie wypełniono pola JEDNOSTKA KSIĘGOWA.'@)
?};
wyb


\pozdekv2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formula wykonywana w okienku wertowania tabeli VPOZ na  'wyswietl dekrety'
::       Wyswietla dekrety danego dokumentu.
::  OLD: \pozdekv2/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.TABELA:='POZ';
exec('suma_dok','dok_fks');
SLO.win_sel('ONE'); SLO.win_dict('ONE');
POZ.hdr_sel(); POZ.hdr_sel(' %1'@[DOK.DOK_REJ().NAZ]);
_winsel:=POZ.win_sel('?');
{? _winsel='SEL' | _winsel='VSEL'
|| {? var_press('__PozTabs')>0
   || tab_sel(__PozTabs,'bottom')
   || _before:=_after:='';
      {? PAR_SKID.get(80)='N' || _before:='T' ?};
      {? ~exec('dokaut','dok_fks') || _before+='F'; _after+='F' ?};
      _menustr:=_before; {? _after<>'' || _menustr+=(':'+_after) ?};
      POZ.cntx_psh();
      POZ.win_sel('ZWER');
      SUM.fld_fml('SUMWN','BEFORE_DISPLAY',"exec('suma_dok_new','dok_fks')");
      POZ.select(,,,_menustr);
      SUM.fld_fml('SUMWN','BEFORE_DISPLAY',"*");
      POZ.cntx_pop()
   ?}
|| {? PARWYD.DOKUMLT<>1
   || POZ.first()
   || {? -menu_txt(,)='automat'
      || {? cur_tab=SKIDXD || POZ.select() ?}
      || POZ.select()
      ?}
   ?}
?};
ROZRACH.TABELA:='DOK';
exec('vpoz_dek','dok_fks')


\spr_f_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: sprawdzenie spojnosci numerowania formul
::  OLD: \spr_f_nr/auto.fml
::----------------------------------------------------------------------------------------------------------------------
{? FORM.first()
|| _nr:=1;
   {! |?
      {? FORM.POZ<>_nr
      || FORM.POZ:=_nr; FORM.put()
      ?};
      _nr+=1;
      FORM.next()
   !}
?}


\find_dbf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS:
::   WE: _a - akronim poszukiwanej tabeli
::   WY: nr tabeli
::  OLD: \find_dbf/auto.fml
::----------------------------------------------------------------------------------------------------------------------
_c:=0;
{! _b:=1..tab_num |? ~_c |!
   {? tab_acr(_b)=_a & tab_real(_b) || 'znalazl' ;_c:=1 ?}
!};
{? _c || _b || 0 ?}


\comp_an
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Porownuje zgodnosc masek dwoch kont
::   WE: _a: konto 1; _b: konto 2
::   WY: 0 - maski niezgodne; 1 - maski zgodne
::  OLD: \comp_an/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
{! ..35 |? _ret |!
   {? 1+_a='?' | 1+_b='?' | 1+_b=1+_a || _a:=1-_a; _b:=1-_b || _ret:=0 ?}
!}; _ret


\add_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Zapisanie elementu
::   WE: _a - 1 - element jest grupa
::            2 - element jest funkcja
::            3 - element jest opisem bledu
::       _b - symbol elementu
::       _c - symbol nadrzednego
::       _d - opis elementu
::       _e - (1/0) - sprawdzanie, czy komunikatu nie bylo dla funkcji a nie globalnie
::       _f - wskazanie na rok bilansowy
::       _g - wskazanie na okres obrachunkowy
::       _h - wskazanie na model controllingowy
::       _i - wskazanie na dokument
::  OLD: \add_kom/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_nadrz:=0;
{? var_pres('KOM_CON')<=0 || return(1) ?};
{? _c<>''
|| KOM_CON.index(ndx_con2); KOM_CON.prefix(_c,_c);
   {? KOM_CON.first() || _nadrz:=#KOM_CON.ref() ?}
?};
{? _e & _a=3
|| KOM_CON.index(ndx_con5); KOM_CON.prefix(_nadrz,_d,_d)
|| KOM_CON.index(ndx_con3); KOM_CON.prefix(_d,_d)
?};
{? ~KOM_CON.first()
|| KOM_CON.prefix();
   KOM_CON.TREE:=_nadrz;
   KOM_CON.SYM:=_b;
   KOM_CON.OPIS:=_d;
   KOM_CON.GRUPBL:=_a;
   KOM_CON.SYM_NAD:=_c;
   KOM_CON.ROK_F:=#_f;
   KOM_CON.OKRO_F:=#_g;
   KOM_CON.SKID_MBN:=#_h;
   {? KOM_CON.GRUPBL=3
   || FIRMA.cntx_psh();
      KOM_CON.FIRMA:=#REF.FIRMA;
      KOM_CON.FIRMASYM:=REF.FIRMA().SYMBOL;
      FIRMA.cntx_pop()
   ?};
   KOM_CON.DOKSQL:=_i;
   KOM_CON.add()
?}


\dopasuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS:
::   WE: _a-MaskaTxt   - prefix
::       _b-MaskStart  - pozycja pierwszego ? lub !
::       _c-MaskStop   - pozycja ostatniego
::       _d-SrcDF      - nazwa tabeli
::       _e - czy istnieje rekord w dziedzinie
::  OLD: \dopasuj/auto.fml
::----------------------------------------------------------------------------------------------------------------------
_f:=1; _h:='';
{? _e
|| '--- sprawdzenie poprawności klucza ---';
   _tab:={? FORM.KARTOTEK<>'' || FORM.KARTOTEK || 'AN' ?};
   {!|? {? FORM.INDEKS=''
        || _ndx_nr:=1
        || _ndx_nr:=($(_tab+'.ndx_no('''+FORM.INDEKS+''')'))()
        ?};
        {? _ndx_nr<>0
        || on_error(2);
           _fld:=($( _tab + '.ndx_afld(' + $_ndx_nr + ',1)' ))();
           _h:=($(_tab+'.'+_fld))();
           {? in_error()
           || _h:=''
           || {? type_of(_h) <> 0 & type_of(_h) <> 2
              || _h:='';
                 undo();
                 FUN.info('Nieprawidłowy typ wyniku schematu %1'
                          ' dla klucza %2\n (Pozycja formuły %3).'@[AUTOKSIE.NAZ,_fld,$FORM.POZ])
              ?}
           ?};
           on_error(0)
        ?};
        {? _h<>''
        || {? exec('eqm','dok_fks',_h,_a,_b,_c)
           || _g:='';  'sufix';
              {! _i:=_b..(+_a)
              |! {?  1+((_i-1)-_a)='!'
                 || _g:=_g+(1+((_i-1)-_h))
                 ?}
              !};
              _f:=0
           || ($(_d+'.next()'))()
           ?}
        ?}
   !}
:'warunek końca pętli: _h=puste | TAB.next=0 | klucz pasuje'
?};
{? _f
|| _g:='';
   Ostatnie:=1
?};
MSK:=(+_a)+_h;
_g


\eqm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: sprawdzenie zgodnosci klucza z maska
::   WE: _a - SortKeyType - klucz
::       _b - MaskaTxt    - maska
::       _c - MaskStart   - poz pierwszego !?
::       _d - MaskStop    - poz ostatniego ?!
::   WY: boolean
::  OLD: \eqm/auto.fml
::----------------------------------------------------------------------------------------------------------------------
_eqm:=1;
_f:=1;
::warunek kontynuacji
 {? _b<>'' ||
   {? (+_a>+_b) || 'maska jest krótsza od klucza';
      _eqm:=0; _f:=0
   ?};
   {! _mpos:=_c.._d |? _f |!
     {? (1+((_mpos-1)-_b)<>'?') & (1+((_mpos-1)-_b)<>'!') & (1+((_mpos-1)-_b)<>'') &
        ( 1+((_mpos-1)-_b)  <>  1+((_mpos-1)-_a)  )
     || _f:=0;
        _eqm:=0
     ?}
   !}
 ?};
_eqm


\evalform
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: wykonuje formule
::   WY: -1 - blad,
::       liczbę - wynik formuly
::       ~~ - typ pusty
::  OLD: \evalform/auto.fml
::----------------------------------------------------------------------------------------------------------------------
 _a:=0;
on_error(2);
_fml:=FORM.memo_txt(0,1,'FML');
{? +_fml || _a:=($_fml)() || _a:=0 ?};
{? in_error()
|| _a:=-1
|| {? type_of(_a)<>1
   || _a:=-1;
      undo();
      FUN.info('Nieprawidłowy typ wyniku schematu %1'@[AUTOKSIE.NAZ])
   ?}
?};
on_error(0);
_a


\additem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Dodanie pozycji dokumentu
::       _e[1] - Account
::       _e[2] - AccountFormula
::       _e[3] - komentarz
::   WE:  _a   - dla kwoty podanej w walucie narodowej: 1-Wn, 0-Ma
::               dla kwoty w walucie obcej: 3-Wn, 2-Ma
::        _b   - kwota
::        _c   - ref DOK
::       [_d]  - waluta (SLO REFERENCE)
::        _e   - pusty
::       [_f]  - kurs waluty
::       [_g]  - konto
::       [_h   - symbol rozrachunku
::          _i - termin platnosci rozrachunku
::          _j - typ rozrachunku
::          _k - jednostka ksiegowa rozrachunku
::          _l - data otwarcia rozrachunku
::          _m - data rozliczenia rozrachunku
::       ]
::  OLD: \additem/auto.fml
::----------------------------------------------------------------------------------------------------------------------
_e:=obj_new(4); _e[1]:=''; _e[3]:=0; _pozref:=null;
{? var_pres('_g')>0
|| _e[2]:=_e[1]:=_g
|| {? _a%*2
   || _e[2]:=FORM.KWN
   || _e[2]:=FORM.KMA
   ?}
?};
{? var_pres('_h')<=0 || _h:='' ?};
:: sprawdzenie poprawnosci formuly wyliczajacej konto pozycji
{? var_pres('_g')<0 & _e[2]<>'' & _b<>0
|| on_error(2);
   _e[1]:=($_e[2])();
   {? in_error()
   || _e[1]:=''
   || {? type_of(_e[1]) <> 0 & type_of(_e[1]) <> 2
      || _e[1]:='';
         undo();
         FUN.info('Nieprawidłowy typ wyniku schematu '+ AUTOKSIE.NAZ+
                  '\ndla symbolu konta '+_e[2]+ '\n (Pozycja formuły '+$FORM.POZ+')')
      ?}
   ?};
   on_error(0)
?};
{? FORM.AUTOKSIE().TYP='D' & _e[1]=20*'?' || _e[1]:='' ?};
{? (+_e[1]<>0)
|| _rozr:=0;
:: wyliczylismy konto
   AN.index('SYM');
   AN.prefix(_e[1]);
   {? AN.first
   || AN.KS();
      _rozr:=_h<>'' & KS.ROZR<>'Z';
      KOM.index('SYS');
      KOM.prefix(KS.ref, 'T');
      {? (~KOM.first)
      || undo();
         FUN.info('Komentarz nie istnieje.\n(Pozycja formuły %1).'@[$FORM.POZ])
      || _e[3]:=KOM.ref
      ?}
   || KS.index('SYM'); KS.prefix(SSTALE.AO().ROK);
      {? KS.find_key(BILANSP.ASYNT+_e[1])
      || _rozr:=_h<>'' & KS.ROZR<>'Z';
         KOM.index('SYS');
         KOM.prefix(KS.ref, 'T');
         {? (~KOM.first)
         || undo();
            FUN.info('Komentarz nie istnieje.\n(Pozycja formuły %1).'@[$FORM.POZ])
         || _e[3]:=KOM.ref
         ?}
      ?}
   ?};
   {? _e[1]<>''
   || POZ.POZ:=Pos;
      POZ.KON:=_e[1];
      {? _e[3]<>0 || POZ.KOM:=_e[3] || POZ.KOM:=0 ?};
      {? _a%*2 || POZ.STR:='Wn' || POZ.STR:='Ma' ?};
      POZ.DOK:=_c;
      {? _a>1
      || POZ.SUMW:=_b;
         {? var_pres('_d')>0 & POZ.KOM().KS().WIELO='T'
         || POZ.WAL:=_d;
            _jedn:={? POZ.WAL || exec('jed_wal','waluty',POZ.WAL().KOD) || 1 ?};
            POZ.KURS:=_f;
            POZ.SUM:=(POZ.SUMW*POZ.KURS/_jedn)$2;
            _ok:=1
         |? var_pres('_d')>0 & POZ.KOM().KS().WIELO='N'
         || POZ.WAL:=_d;
            _jedn:={? POZ.WAL || exec('jed_wal','waluty',POZ.WAL().KOD) || 1 ?};
            POZ.SUM:=(POZ.SUMW*_f/_jedn)$2;
            POZ.KURS:=POZ.SUMW:=0;
            POZ.WAL:=null;
            _ok:=1
         || _ok:=0
         ?}
      || POZ.SUM:=_b;
         {? var_pres('_d')>0 & POZ.KOM().KS().WIELO='T'
         || POZ.WAL:=_d;
            _jedn:={? POZ.WAL || exec('jed_wal','waluty',POZ.WAL().KOD) || 1 ?};
            POZ.KURS:=_f;
            POZ.SUMW:=(_jedn*POZ.SUM/POZ.KURS)$2
         || POZ.WAL:=0; POZ.SUMW:=POZ.KURS:=0
         ?};
         _ok:=1
      ?};
      {? _ok
      || synt:=POZ.KON;
         POZ.A:=POZ.ZP:=POZ.ZK:='N';
         {? var_pres('rozr_dek')>0
         || {? rozr_dek[7]<>'' || POZ.OP:=rozr_dek[7] ?};
            {? POZ.KOM & POZ.KOM().KS().ROZR<>'Z'
            || {? rozr_dek[1]<>''
               || POZ.ID:=rozr_dek[1];
                  POZ.TID:=rozr_dek[2];
                  POZ.DO:=POZ.DATA_R:=rozr_dek[3];
                  POZ.TP:=rozr_dek[4];
                  POZ.ODD:=rozr_dek[5];
                  POZ.SYM_ROK:=exec('op_unik_sym','rozrach',POZ.ID,POZ.DO);
                  POZ.SLO_PROJ:=rozr_dek[6]
               ?}
            || POZ.ODD:=POZ.SLO_PROJ:=null;
               POZ.ID:=POZ.TID:=POZ.SYM_ROK:='';
               POZ.DO:=POZ.TP:=POZ.DATA_R:=date(0,0,0)
            ?}
         |? _rozr & _>7
         || POZ.ID:=_h;
            POZ.TP:=_i;
            POZ.TID:=_j;
            POZ.ODD:=_k;
            POZ.DO:=_l;
            POZ.SYM_ROK:=exec('op_unik_sym','rozrach',POZ.ID,POZ.DO);
            POZ.DATA_R:=_m
         || POZ.ODD:=null
         ?};
         {? var_pres('podz_del')>0 & podz_del & var_pres('PODZDEL')>0 & var_pres('kod_del')>0 & var_pres('rek_del')>0
         || PODZDEL.prefix(rek_del,kod_del,);
            {? ~PODZDEL.first()
            || PODZDEL.REK:=rek_del; PODZDEL.POLE:=kod_del; PODZDEL.KWOTA:=POZ.SUM$2; PODZDEL.add()
            ?}
         ?};
         POZ.cntx_psh();
         POZ.prefix();
         {? POZ.add(1) || _pozref:=POZ.ref(); POZ.cntx_pop() || POZ.cntx_pop(); undo() ?};
         exec('po_kon','dok_fks','FORM');
         {? _pozref<>null & POZ.seek(_pozref) || exec('dod_wyr','wyrozniki') ?};
         Pos+=1
      ?}
   ?}
?};
+_e[1]


\po_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Formula po redakcji POZ.KOM. Formula uzupelnia pola zmiennej KA
::       (KA.S1..KA.S6 KA.KW1..KA.KW6) na podstwie istniejacych wyroznikow
::       dla pozycji POZ lub definicji (z KS_W), o ile parametr nr 35 ='T'.
::  OLD: \po_kon/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(35)='T'
|| SLO.cntx_psh();
   SSTALE.AR();
   {? _=0 & (KA.CZY_WYR='N' | pop_kon<>ROK_F.SYNT+POZ.KON)
   || {? var_pres('TPOW')>100
      || TPOW.prefix(); {? TPOW.first() || {!|? TPOW.del !} ?}
      ?};
      exec('ustal_ka','dok_fks','');
      {? type_of(cur_tab(1,1))=type_of(SYSLOG) & cur_tab(1,1)=POZ || win_disp() ?}
   || exec('ustal_ka','dok_fks')
   ?};
   SLUAPPL.cntx_psh();
   SLU.cntx_psh();
   SLO.index('SL'); SLO.prefix();
   SKID_WYR.cntx_psh(); SKID_WYR.index('SLU'); SKID_WYR.prefix(REF.FIRMA);
   exec('wyr_edi','dok_fks');
   KS_W.cntx_psh(); KS_W.index('LP'); KS_W.prefix(POZ.KOM().KS);
   {? KS_W.first()
   || {! |?
         _f:=$('KA.KW'+$KS_W.LP);
         {? _>0
         || _b:=($('#'+_a+'.ref'))(); _kw:=0; _sum:=0;
            SKID_WYR.prefix(REF.FIRMA,_a,($(_a+'.name()'))(),_b,1+POZ.STR,KS_W.SLU);
            _end:=0;
            {? SKID_WYR.first()
            || {!|? _kod:='';
                    {? SKID_WYR.KWOTA<>null & SKID_WYR.KOD=null & SKID_WYR.FORMULA=null
                    || SLO.cntx_psh();
                       SLO.index('SL'); SLO.prefix(KS_W.SLU().SLU);
                       {? SLO.first()
                       || TPOW.prefix();
                          {!|?
                            {? ~TPOW.find_key(KS_W.LP,SKID_WYR.SLU().SLU().NAZ,SLO.KOD,SLO.KOD)
                            ||  _kw_f:=($SKID_WYR.KWOTA().FORMULA)();
                                {? type_of(_kw_f)=1 & _kw_f$2<>0
                                || TPOW.KW:=_kw_f$2;
                                   TPOW.LP:=KS_W.LP;
                                   TPOW.SLO:=SLO.KOD;
                                   TPOW.SLU:=SKID_WYR.SLU().SLU().NAZ;
                                   TPOW.add();
                                   _end:=1
                               ?}
                            ?};
                            SLO.next()
                          !}
                       ?};
                       SLO.cntx_pop()
                    || {? SKID_WYR.KOD<>null
                       || SKID_WYR.KOD(); _kod:=SLO.KOD
                       |? SKID_WYR.FORMULA<>null
                       || _k:=($(SKID_WYR.FORMULA().FORMULA))();
                          {? SLO.find_key(KS_W.SLU().SLU,_k) & SLO.KOD=_k || _kod:=_k ?}
                       ?};
                       {? _kod<>''
                       || {? SKID_WYR.PROC$2=0 | SKID_WYR.PROC$2=100 | KS_W.ROZDZ<>'T'
                          || ($('KA.KW'+$KS_W.LP+':=SLO.ref'))();
                             _end:=1
                          || {? SKID_WYR.PROC$2<>0
                             || _sum+=SKID_WYR.PROC;
                                TPOW.prefix();
                                TPOW.KW:={? _sum>=100 || POZ.SUM-_kw || (POZ.SUM*SKID_WYR.PROC/100)$2 ?};
                                _kw+=TPOW.KW;
                                TPOW.LP:=KS_W.LP;
                                TPOW.SLO:=_kod;
                                TPOW.SLU:=SKID_WYR.SLU().SLU().NAZ;
                                TPOW.add();
                                ($('KA.KW'+$KS_W.LP+':=null'))()
                             ?}
                          ?}
                       ?}
                    ?};
                    ~_end & (_f)()=null & SKID_WYR.next()
               !}
            ?}
         ?};
         _x:=(_f)();
         {? _x=null & KS_W.ROZDZ<>'T' & ~exec('roz_bo','dok_fks') & KS_W.AN='T'
         || _lp:=exec('kt_bud','konto',POZ.KOM().KS,KS_W.SLU);
            {? _lp<>0 & (_f)()=null
            || exec('ust_anal','konto',POZ.KON,POZ.KOM().KS);
               ($('KA.KW'+$KS_W.LP+':=KA.P'+$_lp))()
            ?}
         ?};
         {? _x=null & KS_W.ROZDZ<>'T' & ~exec('roz_bo','dok_fks') & KS_W.ST<>null & (_f)()=null &
            ~(KA.CZY_WYR='T' & pop_kon=ROK_F.SYNT+POZ.KON)
         || ($('KA.KW'+$KS_W.LP+':=KS_W.ST'))()
         ?};
         {? KS_W.ROZDZ='T' | exec('roz_bo','dok_fks')
         || ($('KA.E'+$KS_W.LP+':=''<- F3 ->'''))()
         || ($('KA.E'+$KS_W.LP+':=KA.KW'+$KS_W.LP+'().KOD'))()
         ?};
         KS_W.next()
      !}
   ?};
   SLUAPPL.cntx_pop(); SLU.cntx_pop(); SLO.cntx_pop(); KS_W.cntx_pop(); SKID_WYR.cntx_pop()
?};
1


\dekret_deleg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Dekret dla delegacji
::   WE: _a - ref dokumentu
::  OLD: \dekret_deleg/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
rozr_dek:=obj_new(7);
kod_del:=FORM.RKWOTDEL().KOD; rek_del:='';
{? kod_del='DIE' | kod_del='RYK' | kod_del='RYN' | kod_del='PLO'
|| EDOKUMD.cntx_psh();
   EDOKUMD.index('DELEG'); EDOKUMD.prefix(EDOKUM.ref());
   {? EDOKUMD.first()
   || {! |?
         rek_del:=$EDOKUMD.ref();
         _kwota:=exec('evalform','dok_fks');
         exec('rozr_dekret','dok_fks');
         SLO.cntx_psh(); WAL.cntx_psh();
         {? EDOKUMD.WAL & EDOKUMD.WAL().SYM<>FINFO.NAROD().KOD & DOK.REJ().WAL='T' & DOK.TKRS<>null
         || SLO.cntx_psh();
            SLO.index('SL'); SLO.prefix(FINFO.SLWAL().SLU);
            _wal:={? SLO.find_key(WAL.SYM,) || SLO.ref() || null ?};
            SLO.cntx_pop();
            _kurs:=exec('kurs_deleg','dok_fks',_wal);
            exec('additem','dok_fks',3,_kwota,_a,_wal,,_kurs);
            exec('additem','dok_fks',2,_kwota,_a,_wal,,_kurs)
         |? EDOKUMD.WAL().SYM=FINFO.NAROD().KOD
         || exec('additem','dok_fks',1,_kwota,_a);
            exec('additem','dok_fks',0,_kwota,_a)
         ?};
         SLO.cntx_pop(); WAL.cntx_pop();
         EDOKUMD.next()
      !}
   ?};
   EDOKUMD.cntx_pop()
|? kod_del='WAP'
|| EDOKUMP.cntx_psh(); EDOKUMP.index('CHRONO'); EDOKUMP.prefix(EDOKUM.ref());
   {? EDOKUMP.first()
   || {! |?
         rek_del:=$EDOKUMP.ref();
         _kwota:=exec('evalform','dok_fks');
         exec('rozr_dekret','dok_fks');
         exec('additem','dok_fks',1,_kwota,_a);
         exec('additem','dok_fks',0,_kwota,_a);
         EDOKUMP.next()
      !}
   ?};
   EDOKUMP.cntx_pop()
|? kod_del='WDN' | kod_del='WDB'
|| EDOK_ZAL.cntx_psh();
   EDOK_ZAL.index('WYDATKI'); EDOK_ZAL.prefix(EDOKUM.ref(),'W',FORM.ETYPWYD);
   {? EDOK_ZAL.first()
   || {! |?
         rek_del:=$EDOK_ZAL.ref();
         _kwota:=exec('evalform','dok_fks');
         exec('rozr_dekret','dok_fks');
         SLO.cntx_psh();
         {? EDOK_ZAL.WAL & EDOK_ZAL.WAL<>FINFO.NAROD & DOK.REJ().WAL='T' & DOK.TKRS<>null
         || _kurs:=exec('kurs_deleg','dok_fks',EDOK_ZAL.WAL);
            exec('additem','dok_fks',3,_kwota,_a,EDOK_ZAL.WAL,,_kurs);
            exec('additem','dok_fks',2,_kwota,_a,EDOK_ZAL.WAL,,_kurs)
         |? EDOK_ZAL.WAL=FINFO.NAROD
         || exec('additem','dok_fks',1,_kwota,_a);
            exec('additem','dok_fks',0,_kwota,_a)
         ?};
         SLO.cntx_pop();
         EDOK_ZAL.next()
      !}
   ?};
   EDOK_ZAL.cntx_pop()
|? kod_del='ZAL'
|| EDOK_ZAL.cntx_psh();
   EDOK_ZAL.index('WAL'); EDOK_ZAL.prefix(EDOKUM.ref,'Z');
   {? EDOK_ZAL.first()
   || {! |?
         {? EDOK_ZAL.EZAL=null
         || rek_del:=$EDOK_ZAL.ref();
            _kwota:=exec('evalform','dok_fks');
            exec('rozr_dekret','dok_fks');
            SLO.cntx_psh();
            {? EDOK_ZAL.WAL & EDOK_ZAL.WAL<>FINFO.NAROD & DOK.REJ().WAL='T' & DOK.TKRS<>null
            || _kurs:=exec('kurs_deleg','dok_fks',EDOK_ZAL.WAL);
               exec('additem','dok_fks',3,_kwota,_a,EDOK_ZAL.WAL,,_kurs);
               exec('additem','dok_fks',2,_kwota,_a,EDOK_ZAL.WAL,,_kurs)
            |? EDOK_ZAL.WAL=FINFO.NAROD
            || exec('additem','dok_fks',1,_kwota,_a);
               exec('additem','dok_fks',0,_kwota,_a)
            ?};
            SLO.cntx_pop()
         ?};
         EDOK_ZAL.next()
      !}
   ?};
   EDOK_ZAL.cntx_pop()
?};
VAR_DEL.delete('rozr_dek','kod_del','rek_del')


\kurs_deleg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Kurs dla delegacji
::   WE: _a - ref waluty (SLO)
::  OLD: \kurs_deleg/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
_kurs:=0;
KRS.cntx_psh();
KRS.index('KRS_WAL'); KRS.prefix(DOK.TKRS,_a);
{? KRS.first()
|| {? DOK.TYPKRS='K' || _kurs:=KRS.KP
   |? DOK.TYPKRS='S' || _kurs:=KRS.SP
   |? DOK.TYPKRS='R' || _kurs:=KRS.SR
   ?}
?};
KRS.cntx_pop();
_kurs


\rozr_dekret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Ustawia parametry rozrachunkowe dekretacji delegacji i opis pozycji
::  OLD: \rozr_dekret/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
:: identyfikator
rozr_dek[1]:={? |FORM.ID<>'' || ($FORM.ID)() || '' ?};
:: typ identyfikatora
rozr_dek[2]:='';
:: data otwarcia
rozr_dek[3]:=date(0,0,0);
:: termin platnosci
rozr_dek[4]:=date(0,0,0);
:: jednostka ksiegowa (ODD)
rozr_dek[5]:=null;
:: projekt (SLO)
rozr_dek[6]:=null;
:: opis pozycji
rozr_dek[7]:={? |FORM.OP<>'' || ($FORM.OP)() || '' ?};
{? rozr_dek[1]<>''
|| {? |FORM.TID<>'' || rozr_dek[2]:=($FORM.TID)() ?};
   {? |FORM.DO<>'' || rozr_dek[3]:=($FORM.DO)() ?};
   {? |FORM.TP<>'' || rozr_dek[4]:=($FORM.TP)() ?};
   {? |FORM.ODD_ROZR<>'' || rozr_dek[5]:=($FORM.ODD_ROZR)() ?};
   {? |FORM.PROJEKT<>'' || rozr_dek[6]:=($FORM.PROJEKT)() ?}
?};
1


\bgp_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2006]
:: OPIS: Przed grupowa akcja wydruk
::   WE: _a - nazwa wydruku
::       _b - tabela
::  OLD: \bgp_poz/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Wydrukować zaznaczone wiersze?'@)
|| TT_AGET:=_b.sel_aget();
   _b.sel_adel();
   _b.sel_sres(TT_AGET);
   _r:=_b.ref();
   {? _a<>'' || exec('rep_exec','#b_report','',_a,,,,,,,,'W') ?};
   _b.seek(_r);
   VAR_DEL.delete('TT_AGET')
?}; 0


\pr_par4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Formula 'Po redag.' pol ROZNE.PAR4, ROZNE.PAR41, ROZNE.PAR42
::   WE: [_a] - 1-na wyswietl
::  OLD: \pr_par4/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
_str:={? +cur_afld()=4 || '' || cur_afld+1 ?};
{? fld()<>0 & fld()<>2
|| ($('ROZNE.PREFIX'+_str+':=ROZNE.MASKA'+_str+':=\'\''))()
?};
{? fld()<>4
|| ($('ROZNE.KS_OD'+_str+':=ROZNE.KS_DO'+_str+':=null'))()
?};
{? fld()<>5 || ROZNE.KON_WYDR:=null ?};
{? fld()=2
|| ($('ROZNE.PREFIX'+_str+':=\'\'; {? ROZNE.MASKA'+_str   +'=\'\' || ROZNE.MASKA'+_str+':=35*\'?\' ?}'))()
?};
{? fld()=0 || ($('ROZNE.MASKA'+_str+':=\'\''))() ?};
{? fld()=4
|| KS.cntx_psh(); KS.index('SYM');
   {? cur_afld()='PAR4' & ROZNE.KS_OD=null & ROZNE.KS_DO=null
   || KS.prefix(SSTALE.AO().ROK);
      ROZNE.KS_OD:={? KS.first() || KS.ref() || null ?};
      ROZNE.KS_DO:={? KS.last()  || KS.ref() || null ?}
   |? cur_afld()='PAR41' & ROZNE.KS_OD1=null & ROZNE.KS_DO1=null
   || KS.prefix(SER_KOR.ROK1);
      ROZNE.KS_OD1:={? KS.first() || KS.ref() || null ?};
      ROZNE.KS_DO1:={? KS.last()  || KS.ref() || null ?}
   |? cur_afld()='PAR42' & ROZNE.KS_OD2=null & ROZNE.KS_DO2=null
   || KS.prefix(SER_KOR.ROK2);
      ROZNE.KS_OD2:={? KS.first() || KS.ref() || null ?};
      ROZNE.KS_DO2:={? KS.last()  || KS.ref() || null ?}
   ?};
   KS.cntx_pop()
?};
{? fld()=5 & ROZNE.KON_WYDR=null
|| {? var_pres('SA')<=0 & cur_tab()=ROZNE & (ROZNE.win_edit('?')='OBROTY' | ROZNE.win_edit('?')='OBROTY_W')
   || SA:='A'
   ?};
    ROZNE.KON_WYDR:=exec('bl_konwy','dok_fks',SA)
?};
{? cur_afld()='PAR4'
|| {? cur_tab()=WYDRUKI & WYDRUKI.win_edit('?')='OKRESY1' |
      cur_tab()=ROZNE & (ROZNE.win_edit('?')='KS_4' | ROZNE.win_edit('?')='KS_2')
   || cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=0),ROZNE,'PREFIX');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=2),ROZNE,'MASKA');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=4),ROZNE,'KS_OD');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'mark='+$(ROZNE.PAR4=4),ROZNE,'KS_OD');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=4),ROZNE,'KS_DO');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'mark='+$(ROZNE.PAR4=4),ROZNE,'KS_DO');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=5),ROZNE,'KON_WYDR');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'mark='+$(ROZNE.PAR4=5),ROZNE,'KON_WYDR')
   |? cur_tab()=ROZNE & (ROZNE.win_edit('?')='KS_3' | ROZNE.win_edit('?')='KS_1')
   || cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=0),ROZNE,'PREFIX');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=2),ROZNE,'MASKA');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=4),ROZNE,'KS_OD');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=4),ROZNE,'KS_DO')
   |? cur_tab(1,1).win_edit('?')='DZWDOKZE'
   || cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$0,ROZNE,'PREFIX');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$0,ROZNE,'MASKA');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$0,ROZNE,'KS_OD');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$0,ROZNE,'KS_DO');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$0,ROZNE,'KON_WYDR');
      {? ROZNE.PAR4 = 0
      || cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$1,ROZNE,'PREFIX')
      |? ROZNE.PAR4 = 2
      || cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$1,ROZNE,'MASKA')
      |? ROZNE.PAR4 = 4
      || cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$1,ROZNE,'KS_OD');
         cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$1,ROZNE,'KS_DO')
      |? ROZNE.PAR4 = 5
      || cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$1,ROZNE,'KON_WYDR')
      ?}
   |? cur_tab()=ROZNE & ROZNE.win_edit('?')='OBROTY'
   || SA:='A';
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=0),ROZNE,'PREFIX');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=2),ROZNE,'MASKA');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=4),ROZNE,'KS_OD');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'mark='+$(ROZNE.PAR4=4),ROZNE,'KS_OD');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=4),ROZNE,'KS_DO');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'mark='+$(ROZNE.PAR4=4),ROZNE,'KS_DO');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=5),ROZNE,'KON_WYDR');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'mark='+$(ROZNE.PAR4=5),ROZNE,'KON_WYDR')
   |? cur_tab()=ROZNE & ROZNE.win_edit('?')='OBROTY_W'
   || SA:='A';
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=0),ROZNE,'PREFIX');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=2),ROZNE,'MASKA');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=4),ROZNE,'KS_OD');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'mark='+$(ROZNE.PAR4=4),ROZNE,'KS_OD');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=4),ROZNE,'KS_DO');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'mark='+$(ROZNE.PAR4=4),ROZNE,'KS_DO');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'enable='+$(ROZNE.PAR4=5),ROZNE,'KON_WYDR');
      cur_tab().efld_opt(cur_tab().win_edit('?'),'mark='+$(ROZNE.PAR4=5),ROZNE,'KON_WYDR')
   ?};
   {? _=0 || win_disp() ?}
?};
1


\bedoksym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.60]
:: OPIS: Przed redakcja pola DOK.NK
::  OLD: \bedoksym/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? |DOK.NK=''
|| DOK_REJ.cntx_psh(); DOK_REJ.prefix();
   {? |DOK.DOK_REJ().FORM_SYM<>'' &
      (var_pres('czy_podp')<=0 | (var_pres('czy_podp')=type_of(0) & czy_podp=1))
   || _sym:=($DOK_REJ.FORM_SYM)();
      DOK.NK:={? type_of(_sym)=2 || _sym || '' ?}
   ?};
   DOK_REJ.cntx_pop()
?};
beNkSymZew:=DOK.SYM_ZEW;
exec('be_edok_fld','dok_fks1')


\bl_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartosc poczatkowa pola POZ.POZ
::  OLD: \bl_poz/skid.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.cntx_psh();
POZ.index('DOK'); POZ.prefix(DOK.ref());
_a:={? POZ.last || POZ.POZ+1 || 1 ?};
POZ.cntx_pop();
_a


\zarej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 18.07.2001
:: OPIS: Znajduje kod uzytkownika w polu DOK.ZAR
::   WE: Wartosc pola DOK.ZAR
::   WY: Kod uzytkownika
::  OLD: \zarej/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
_v:='';
USERS.cntx_psh(); USERS.clear(); USERS.index('USR_KKOD');
{? USERS.first()
|| {!
   |? {? _a*USERS.KOD<>0 & _a+(+USERS.KOD)=USERS.KOD || _v:=USERS.KOD ?};
      _v='' & USERS.next()
   !}
?};
USERS.cntx_pop();
_v


\poz_oper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed wyświetleniem ROZRACH.KWOTA. Funkcja prezentuje na ekranie saldo rozrachunku
::  OLD: \poz_oper/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? OP.WN>=OP.MA
|| ROZRACH.KWOTA:=OP.WN-OP.MA
|| ROZRACH.KWOTA:=OP.MA-OP.WN
?};
1


\kr_pocz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Wywolanie formuly poczatkowej dla formuly kontrolujacej krag kosztowy
::       zmienna KOMUNIKAT (jesli jest) decyduje czy wyswietlac komunikat
::   WY: 0/1
::  OLD: \kr_pocz/spr_dok.fml
::----------------------------------------------------------------------------------------------------------------------
WSK.index('RODZ');
WSK.prefix('G');
{? WSK.first()
|| {!|? ($('k'+WSK.WART+':=0'))(); WSK.next() !}; 1
|| {? var_pres('KOMUNIKAT')>0 & KOMUNIKAT
   || FUN.info('Brak definicji rodzajów kont do kręgu kosztowego.'@)
   ?}; 0
?}


\kr_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Wywolanie formuly dla pozycji dla formuly kontrolujacej krag kosztowy
::   WY: 0/1
::  OLD: \kr_poz/spr_dok.fml
:-----------------------------------------------------------------------------------------------------------------------
_k:='';
{? POZ.KOM<>null
|| _k:=POZ.KOM().KS().KRAG
|| KS.index('SYM');
   KS.prefix();
   {? KS.find_key(SSTALE.AR,SSTALE.AR().SYNT+POZ.KON) || _k:=KS.KRAG ?}
?};
{? _k<>'' & ($('var_pres(''k'+_k+''')>0'))()
|| ($('k'+_k+{? 1+POZ.STR='W' || '+=POZ.SUM$2' || '-=POZ.SUM$2' ?}))()
?};
1


\kr_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Wywolanie formuly koncowej dla formuly kontrolujacej krag kosztowy
::       zmienna KOMUNIKAT (jesli jest) decyduje czy wyswietlac komunikaty, pytania
::  WE: [_a:  1 - ask, w p.w. - msg z komunikatem]
::      [_b: - kasowac zmienne]
::  WY: 0/1
::  OLD: \kr_kon/spr_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
WSK.index('RODZ');
WSK.prefix('G');
{? WSK.first()
|| {!|? {? ($('var_pres(''k'+WSK.WART+''')'))()>0 || WSK.next() || _ok:=0 ?} !}
?};
{? _ok
|| {? -k94=k50+k52+k55+k64+k70+k79+k60+k86 & -k94=k40
   || 1
   || _ok:=0;
      {? var_pres('KOMUNIKAT')>0 & KOMUNIKAT
      || _t:='\nNiezgodność kręgu kosztów dla dokumentu.';
         {? _a=1
         || {!|? _ok:=FUN.choice(_t,0,'Kontynuuj'@,'Szczegóły'@);
                 {? _ok=2 || exec('pokaz','dok_fks') ?};
                 _ok=2
            !}
         || {!|? _ok:=FUN.choice(_t,0,'Szczegóły');
                 {? _ok=1 || exec('pokaz','dok_fks'); 1 ?}
            !}
         ?}
      ?}
   ?};
   {? _=1 || {? WSK.first() || {!|? ($('&k'+WSK.WART+''))(); WSK.next() !} ?} ?};
   _ok
|| 1
?}


\pokaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Wyswietlenie niezgodnosci kregu kosztowego dla dokumentu
::  OLD: \pokaz/spr_dok.fml
::----------------------------------------------------------------------------------------------------------------------
WK:=tab_tmp(1,'T','STRING[25]','Rodzaj kont',
             'W','REAL','Wartość');
WSK.index('RODZ');
WSK.prefix('G');
{? WSK.first()
|| {!|? ($('w:=k'+WSK.WART+''))();
        WK.T:=WSK.TRESC;
        WK.W:=w;
        WK.add();
        WSK.next()
    !};
    _wer:=WK.mk_sel('Niezgodność kręgu kosztowego'@,,,'wk_wer');
    WK.win_fld(_wer,,'T');
    WK.win_fld(_wer,,'W');
    WK.win_act(_wer,,'Rekord',,,'',"{? WK.W$2<>0 || exec('findtmp','#color') ?}");
    WK.win_sel(_wer);
    WK.select()
?};
&w;
obj_del(WK)


\kursopis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla pola POMOC.KURSOPIS
::----------------------------------------------------------------------------------------------------------------------
POMOC.KURSOPIS:='';
{? DOK.TYPKRS<>''
|| _rodzaj:={? DOK.TYPKRS='K' || '1' |? DOK.TYPKRS='S' || '2' || '3' ?};
   WSK.cntx_psh(); WSK.index('RODZ'); WSK.prefix('K',_rodzaj,);
   {? WSK.first()
   || POMOC.KURSOPIS:=WSK.TRESC
   ?};
   WSK.cntx_pop()
?};
{? DOK.BANK=null
|| DOK.efld_opt(DOK.win_edit('?'),'enable=0, editable=0',POMOC,'KURSOPIS')
|| DOK.efld_opt(DOK.win_edit('?'),'enable=1, editable=1',POMOC,'KURSOPIS')
?};
POMOC.KURSOPIS


\str_wn_
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: napis Wn
::  OLD: \str_wn_/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
'Wn'


\str_ma_
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: napis Ma
::  OLD: \str_ma_/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
'Ma'


\kor_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: RL [7.60]
::   WE: Czy dokument jest korekta faktury sprzedazy
::  OLD: \kor_spr/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=1
|| DOK.DOK_REJ(); DOK.RVAT()
?};
_s:=VAT_REJ.RVAT().RT;
(_s='S' | _s='W') & DOK_REJ.KOR='T'


\po_dtd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Po redakcji daty dokumentu - sprawdzenie poprawnosci
::   WE: [_a] - data, gdy istnieje ona jest sprawdzana lub
::            - czy pytac o akceptacje pole gdy stwierdzono bledna date?
::              1-tak [0]-nie
::       [_b] - jesli wystepuje _a jako data czy pytac o akceptacje pole
::              gdy stwierdzono bledna date? 1-tak [0]-nie
::  OLD: \po_dtd/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_i:={? _>0 & type_of(_a)=4 || _a || fld ?};
_pyt:={? _>0 & type_of(_a)=1 || _a || 0 ?};
_pyt2:={? _>1 & type_of(_b)=1 || _b || 0 ?};
{? SSTALE.AO().POCZ=date(0,0,0) & ~exec('dat_not','dok_fks',_i)
|| {? _pyt
   || FUN.ask('Data nie pochodzi z bieżącego roku bilansowego.\nKontynuować?'@)
   || FUN.info('Data musi być z bieżącego roku bilansowego.'@);0
   ?}
|? (_i<SSTALE.AO().POCZ | _i>SSTALE.AO().KON) & SSTALE.AO().KON<>date(0,0,0)
|| {? _pyt | _pyt2
   || FUN.ask('Data pochodzi spoza aktywnego okresu.\nKontynuować?'@)
   || FUN.info('Data spoza aktywnego okresu.'@);0
   ?}
|| {? _=0 || POMOC.DT:=fld ?};1
?}


\vpoz_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Wyświetl dla tabeli VPOZ
::  OLD: \vpoz_wys/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('okna_vr','dok_fks',1);
exec('ust_vkk','dok_fks','KK');
exec('ust_vkk','dok_fks','K2');
ROZNE.GR_VAT:=VPOZ.GRVAT().GRVAT;
VPOZ.display()


\kurs_cit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [2006]
:: OPIS: Kurs waluty banku FINFO.B_VAT na dzien roboczy przed wskazana data
::   WE:  _a  - data
::        _b  - waluta (_SLO)
::       [_c] - okresla wartosc zwracana gdy brak tabeli kursu
::              gdy 0 - zwracana wartosc 0 - domyslnie
::                  1 - zwracana data, na ktora brakuje tabeli kursu
::   WY: kurs sredni waluty lub w zaleznosci od parametru _c 0 lub data
::  OLD: \kurs_cit/vat.fml
::----------------------------------------------------------------------------------------------------------------------
_kurs:=0;
_tkrs:=null;
TKRS.cntx_psh(); TKRS.index('TKRS_DT'); TKRS.prefix(FINFO.B_VAT,FINFO.NAROD);
_data:=exec('dzienRob','kalendarz',_a-1,1,1,0,-1);
{? _data<>date(0,0,0)
|| KRS.cntx_psh();
   {? TKRS.find_le(_data)
   || KRS.index('KRS_WAL');
      _wart:=0;
      {!
      |? KRS.prefix(TKRS.ref(),_b);
         {? KRS.first()
         || _wart:=1;
            _tkrs:=TKRS.ref()
         ?};
         _wart=0 & TKRS.prev()
      !};
      {? _wart=0 & TKRS.find_le(_data) || _tkrs:=TKRS.ref() ?}
   ?};
   KRS.cntx_pop()
?};
{? _tkrs<>null
|| KRS.cntx_psh();
   KRS.index('KRS_WAL'); KRS.prefix(_tkrs, _b);
   {? KRS.first()
   || _kurs:=KRS.SR
   ?};
   KRS.cntx_pop()
|? _tkrs=null & _>2 & _c=1
|| _kurs:=_data
?};
TKRS.cntx_pop();
_kurs


\wal_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2010]
:: OPIS: Formula wolana na wartosc poczatkowa pol zlaczeniowych dotyczacych waluty
::  OLD: \wal_bl/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
FINFO.NAROD


\chk_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Sprawdzanie parametrow dekretowania
::  OLD: \chk_dok/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.REJ().CZY_DZ='T'
|| _a:=__CHK.record(DOK,,'DZ','DOK_REJ','NK','DTO','DTW','K1','K2')
|| _a:=__CHK.record(DOK,,'DOK_REJ','NK','DTO','DTW','K1','K2')
?};
{? _a=''
|| {? DOK.DTW<SSTALE.AO().POCZ | DOK.DTW>SSTALE.AO().KON
   || FUN.info('W celu zadekretowania dokumentu z datą %1'
               '\nnależy zmienić okres obrachunkowy.'@[$DOK.DTW]); 'DTW'
   |? SSTALE.AO().ZAM='T'
   || FUN.info('Aktualny okres obrachunkowy jest zamknięty.\nBrak możliwości zadekretowania dokumentu.'@); 'DTW'
   |? exec('is_okr_blck','!zws_par_aokr',SSTALE.AO,OPERATOR.USER)
   || 'DTW'
   |? exec('dokrejn','dok_fks')
   || FUN.info('W wybranym rejestrze nie ma takiego typu dokumentu.\nZmień rejestr lub typ dokumentu.'@); 'DOK_REJ'
   |? exec('dokrejn1','dok_fks')
   || FUN.info('Typ dokumentu musi być prosty.\nZmień rejestr lub typ dokumentu.'@); 'DOK_REJ'
   |? DOK.DOK_REJ().PR='T'
   || FUN.info('Wybrano niewłaściwy typ dokumentu.\nNależy wybrać typ dokumentu bez płatności ratalnych.'@); 'DOK_REJ'
   || 1
   ?}
|| _a
?}


\dokrejn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: NN [?????]
:: OPIS: Sprawdza, czy w podanym rejestrze jest wybrany typ dokumentu
::  OLD: \dokrejn/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
_odp:=1; _naz:=DOK.DOK_REJ().NAZ;
REJ.cntx_psh; DOK_REJ.cntx_psh;
DOK_REJ.index('NAZ');
DOK_REJ.prefix(DOK.REJ,_naz);
{? DOK_REJ.first()
|| {? DOK_REJ.NAZ<>_naz
   || {! |?
         _odp:=~(DOK_REJ.NAZ=_naz);
         _odp=1 & DOK_REJ.next()
      !}
   || _odp:=0
   ?}
?};
REJ.cntx_pop; DOK_REJ.cntx_pop;
_odp


\dokrejn1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: NN [?????]
:: OPIS: Sprawdza, czy wybrano prosty typ dokumentu
::  OLD: \dokrejn1/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.cntx_psh;
_odp:={? DOK.DOK_REJ().SLO().KOD='PROSTY' || 0 || 1 ?};
DOK_REJ.cntx_pop;
_odp


\bd_dz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2006]
:: OPIS: Przed usun okna WER_DZ tabeli GR_DOK
::  OLD: \bd_dz/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
DOK.cntx_psh();
DOK.index('DZ'); DOK.prefix(GR_DOK.ref());
_ok:=~DOK.first();
DOK.cntx_pop();
{? _ok=0
|| FUN.info('Dokument zbiorczy %1 posiada dokumenty.'@[GR_DOK.SYM]); 0
|| 1
?}


\parses_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła ustala PARSES dla czynności na podstawie maski tabeli DOK,
::       wskazanie na rekord tabeli DOK jest przekazane poprzez parametr DOK czynności.
::       Formułę można zastosować do wszystkich czynności, które środowisko mają ustalać
::       na podstawie dokumentu księgowego.
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_maska:=''; _ref:=null();
_in:=params_get().in;
_out:=params_get().out;
{? var_pres('DOK',_in) & var_pres('DOK',_in)=type_of(null()) & _in.DOK<>null()
|| _maska:=form(($_in.DOK)-8);
   _ref:=BB.sqlint($_in.DOK)
|? var_pres('DOK',_out) & var_pres('DOK',_out)=type_of(null()) & _out.DOK<>null()
|| _maska:=form(($_out.DOK)-8);
   _ref:=BB.sqlint($_out.DOK)
|| return(1)
?};
{? _maska<>'' & _ref<>null()
|| _args:=__PARSES.args('OkresRok');
   _args.OBSZAR:='FKS';
   _args.MASKA:=_maska;
   __PARSES.setVal('OkresRok',_args);
   DOK.cntx_psh();
   DOK.use(_maska); DOK.prefix();
   {? DOK.seek(_ref,_maska)
   || SLO.cntx_psh(); SLO.clear();
      __PARSES.setVal('AktywnaWaluta',DOK.JORG);
      SLO.cntx_pop();
      _result:=1
   ?};
   DOK.cntx_pop()
?};
_result


\parses_faks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła ustala PARSES dla czynności na podstawie rekordu tabeli FAKS,
::       wskazanie na rekord tabeli FAKS jest przekazane poprzez parametr FAKS czynności.
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::   WE: _a - system, _b - rodzaj dekretacji
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_in:=params_get().in;
_out:=params_get().out;
{? var_pres('FAKS',_in) & var_pres('FAKS',_in)=type_of(null()) & _in.FAKS<>null()
|| _maska:=form(($_in.FAKS)-8);
   _ref:=BB.sqlint($_in.FAKS);
   FAKS.use(_maska);
   FAKS.prefix();
   {? FAKS.seek(_ref,_maska)
   || exec('szuk_okr','okresy',date(FAKS.AR,FAKS.AM,0));
      _r_dat:=exec('spr_daty','dok_fks_aut_dok',ROZNE.UT_OKROD().ROK,_a,_b,FAKS.T);
      {? _r_dat=''
      || exec('szuk_okr','okresy',date( FAKS.D~1,FAKS.D~2,0));
         _r_dat:=exec('spr_daty','dok_fks_aut_dok',ROZNE.UT_OKROD().ROK,_a,_b,FAKS.T)
      ?};
      _data_na:={? _r_dat='W' || FAKS.DW |? _r_dat='S' || FAKS.D |? _r_dat='O' || FAKS.DO ||  FAKS.DW ?};
      exec('szuk_okr','okresy',_data_na);
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:=_a;
      _args.DATA:=_data_na;
      __PARSES.setVal('OddzialLogProd',FAKS.ODDZ);
      __PARSES.setVal('OkresRok',ROZNE.UT_OKROD);
      _result:=1
   ?}
|| _result:=1
?};
_result


\pom_walu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: POMOC.WLU
::  OLD: \pom_walu/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
FINFO.SLWAL().SLU()


\euro_krs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.51]
:: OPIS: Dla podanego symbolu waluty zwraca staly kurs EURO
::   WE: _a - symbol waluty
::            obslugiwane waluty: DEM,FRF,ATS,ITL,ESP,NLG,BEF,FIM,PTE,LUF,IEP,GRD,SIT,MTL,CYP,SKK,EEK
::   WY: kurs waluty w EURO
::  OLD: \euro_krs/skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='DEM' || 1.95583
|? _a='FRF' || 6.55957
|? _a='ATS' || 13.7603
|? _a='ITL' || 1936.27
|? _a='ESP' || 166.386
|? _a='NLG' || 2.20371
|? _a='BEF' || 40.3399
|? _a='FIM' || 5.94573
|? _a='PTE' || 200.482
|? _a='LUF' || 40.3399
|? _a='IEP' || 0.787564
|? _a='GRD' || 340.750
|? _a='SIT' || 239.640
|? _a='MTL' || 0.4293
|? _a='CYP' || 0.585274
|? _a='SKK' || 30.1260
|? _a='EEK' || 15.6466
|| 1
?}


\be_rwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Przed redakcją pola waluta. Sprawdza, czy podane wcześniej konto jest wielowalutowe.
::  OLD: \be_rwal/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
exec('czy_kwal','dok_fks',ROZNE.KONZAP,1)


\czy_kwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Sprawdza, czy podane konto jest wielowalutowe.
::   WE: _a - symbol konta                                                  ";
::       _b - czy ustawiać słownik walut
::  OLD: \czy_kwal/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a<>''
|| KS.index('SYM'); KS.prefix(SSTALE.AR,SSTALE.AR().SYNT+_a);
   {? KS.first()
   || {? ~KS.WIELO<>'t'
      || 0
      || {? _b
         || {? FINFO.SLWAL=0
            || FUN.info('Nie ustalono słownika walut.'@); 0
            || FINFO.SLWAL().SLU(); 1
            ?}
         || 1
         ?}
      ?}
   ?}
?}


\ae_rwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Formuła po redakcji waluty.
::  OLD: \ae_rwal/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_euro','waluty',ROZRACH.WAL().KOD,1)
|| {? ROZRACH.WAL>0 & ROZRACH.WAL=FINFO.NAROD
   || FUN.info('Wprowadź walutę inną niż '+FINFO.NAROD().KOD+'.'); 0
   || {? DOK.TKRS<>0
      || KRS.cntx_psh(); KRS.index('KRS_WAL');
         KRS.prefix(DOK.TKRS, ROZRACH.WAL);
         {? KRS.first()
         || {? DOK.TYPKRS='K'
            || ROZRACH.KURS:=KRS.KP
            |? DOK.TYPKRS='S'
            || ROZRACH.KURS:=KRS.SP
            |? DOK.TYPKRS='R'
            || ROZRACH.KURS:=KRS.SR
            ?}
         ?};
         KRS.cntx_pop()
      ?}; 1
   ?}
?}


\be_kwwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Przed redakcja pól kwota w walucie i kurs.
::  OLD: \be_kwwal/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.KONZAP<>''
|| KS.index('SYM'); KS.prefix(SSTALE.AR,SSTALE.AR().SYNT+ROZNE.KONZAP);
   {? KS.first()
   || {? ~KS.WIELO<>'t'
      || ROZRACH.WAL:=null;
         0
      || {? ROZRACH.WAL=0 || 0 || 1 ?}
      ?}
   ?}
|| 0
?}


\ae_krsz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Na podstawie wprowadzonych dwóch wartości oblicza trzecią (kwota w walucie, kurs, kwota w walucie narodowej).
::  OLD: \ae_krsz/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
_jedn:={? ROZRACH.WAL=0
|| 1
|| exec('ust_jwal','dok_fks',ROZRACH.WAL().KOD)
?};
{? ROZRACH.RUSZ='Z'
|| {? _a=1
   || {? ROZRACH.KWOTAWAL<>0
      || {? ROZRACH.KURS<>0
         || ROZRACH.KW1:=(ROZRACH.KWOTAWAL*ROZRACH.KURS/_jedn)$2
         || {? ROZRACH.KW1<>0 || ROZRACH.KURS:=(ROZRACH.KW1*_jedn/ROZRACH.KWOTAWAL)$6 ?}
         ?}
      ?}
   |? _a=2
   || {? ROZRACH.KURS<>0
      || {? ROZRACH.KWOTAWAL<>0
         || ROZRACH.KW1:=(ROZRACH.KWOTAWAL*ROZRACH.KURS/_jedn)$2
         || {? ROZRACH.KW1<>0 || ROZRACH.KWOTAWAL:=(ROZRACH.KW1*_jedn/ROZRACH.KURS)$2 ?}
         ?}
      ?}
   |? _a=3
   || {? ROZRACH.KW1<>0
      || {? ROZRACH.KURS<>0
         || {? ROZRACH.KWOTAWAL=0 || ROZRACH.KWOTAWAL:=(ROZRACH.KW1*_jedn/ROZRACH.KURS)$2 ?}
         || {? ROZRACH.KWOTAWAL<>0 || ROZRACH.KURS:=(ROZRACH.KW1*_jedn/ROZRACH.KWOTAWAL)$6 ?}
         ?}
      ?}
   ?};
   {? ROZRACH.KWOTAWAL<>0 & ROZRACH.KURS<>0 & ROZRACH.KW1<>0 & (ROZRACH.KWOTAWAL*ROZRACH.KURS/_jedn)$2<>ROZRACH.KW1
   || {? FUN.ask('Brak zgodności danych:\n'+
                 'Kwota w walucie: '+form(ROZRACH.KWOTAWAL, ,2)+'\n'+
                 'Kurs: '+form(ROZRACH.KURS, , 4)+'\n'+
                 'Kwota w walucie narodowej: '+form(ROZRACH.KW1, , 2)+'.\n'+
                 'Powrócić do redakcji pola?')
      || _a:=1
      || _a:=0
      ?}
   || _a:=1
   ?}
|| _a:=1
?};
_a


\ust_jwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Formuła znajdująca jednostką podanej waluty
::   WE: _a - symbol waluty
::  OLD: \ust_jwal/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
_j:=0;
RS.index('RS'); RS.prefix();
RS.find_key(FINFO.SLWAL().SLU().WZ);
{? ($(RS.TAB+'.blank(1);'+RS.TAB+'.'+RS.KOD+':='''+_a+''';'+RS.TAB+'.find_rec'))()
|| _j:=($(RS.TAB+'.J'))()
?};
{? _j=0 || _j:=1 ?};
_j


\f3_pplid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Formuła na F3 w polu identyfikator rozrachunku
::  OLD: \f3_pplid/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
OP.win_sel('SLO');
hdr_wal:=hdr_odd:=zakr:=wszy_odd:=''; hdr_zakr:='nierozliczone'; wal:=null;
symb_kon:=KONTO.K1; odd_p:=ROZRACH.ODD; odd_d:=DOK.ODD;
{? ROZRACH.WAL>0
|| wal:=ROZRACH.WAL; hdr_wal:=ROZRACH.WAL().KOD
|| wal:=FINFO.NAROD; hdr_wal:=FINFO.NAROD().KOD
?};
{? ROZRACH.ODD<>null
|| OP.index('PRZEG_O'); OP.prefix(wal,ROZRACH.ODD,KONTO.K1);
   hdr_odd:=ROZRACH.ODD().OD; wszy_odd:='N'
|| OP.index('PRZEG'); OP.prefix(wal,KONTO.K1);
   hdr_odd:='wszystkie jednostki księgowe'@; wszy_odd:='T'
?};
OP.hdr_sel('%1: %2 , Jednostka księgowa: %3 , Zakres:%4'@[hdr_wal,KONTO.K1,hdr_odd,hdr_zakr]);
{? OP.select()
|| ROZRACH.IDROZ:=OP.SYM; ROZRACH.SYM_ROK:=OP.SYM_ROK;
   ROZRACH.ODD:=OP.ODD; KONTO.K1:=OP.AN; ROZRACH.DO:=OP.DO
?};
&hdr_wal; &hdr_odd; &hdr_zakr; &zakr; &wszy_odd; &wal; &symb_kon; &odd_p;
&odd_d;
ROZRACH.IDROZ


\ae_idroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Formuła po redakcji pola identyfikator rozrachunku
::  OLD: \ae_idroz/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZRACH.WAL<>null & ROZRACH.WAL=FINFO.NAROD || ROZRACH.WAL:=null ?};
_v:=1;
{? ROZRACH.IDROZ=''
|| ROZRACH.AUTO:=1; ROZRACH.KWOTAWAL:=ROZRACH.KW1:=0
|| {? exec('akc_kont','edkonto',KONTO.K1)
   || FUN.info('Nie podano symbolu konta analitycznego przedpłat.\n'+
               'Nie można dokonać sprawdzenia poprawności identyfikatora '+
               'rozrachunku!\nProszę wybrać rozrachunek z listy (klawisz F3)\n'+
               'lub podać symbol konta analitycznego.'@);
      _v:=0
   || OP.cntx_psh();
      _wal:={? ROZRACH.WAL=null || FINFO.NAROD || ROZRACH.WAL ?};
      {? ROZRACH.ODD<>null
      || OP.index('KON_O'); OP.prefix(_wal,ROZRACH.ODD,KONTO.K1,ROZRACH.IDROZ)
      || OP.index('KON'); OP.prefix(_wal,KONTO.K1,ROZRACH.IDROZ)
      ?};
      {? OP.first()
      || _ref:=OP.ref();
         {? OP.SYM=ROZRACH.IDROZ
         || _znal:=0;
            {? OP.size()>1 & ROZRACH.SYM_ROK<>'' & OP.SYM_ROK<>ROZRACH.SYM_ROK
            || {! |?
                  _znal:=(OP.SYM_ROK=ROZRACH.SYM_ROK);
                  ~_znal & OP.next()
               !}
            ?};
            {? ~_znal || OP.seek(_ref) ?}
         ?};
         ROZRACH.IDROZ:=OP.SYM; ROZRACH.SYM_ROK:=OP.SYM_ROK;
         ROZRACH.ODD:=OP.ODD; KONTO.K1:=OP.AN; ROZRACH.DO:=OP.DO
      || FUN.info('Rozrachunek o podanym identyfikatorze nie istnieje.\n'+
                  'Należy wybrać istniejący rozrachunek\n'+
                  'lub pozostawić pole niewypełnione.'@);
         ROZRACH.IDROZ:=ROZRACH.SYM_ROK:=''; ROZRACH.DO:=date(0,0,0);
         _v:=0; win_disp()
      ?};
      OP.cntx_pop();
      {? _v & +ROZRACH.STR
      || {? ROZRACH.STR='Ma' || _v_sal:=F.SMa(OP.WN,OP.MA)
         |? ROZRACH.STR='Wn' || _v_sal:=F.SWn(OP.WN,OP.MA)
         ?};
         {? ROZRACH.WAL<>null || ROZRACH.KWOTAWAL:=_v_sal || ROZRACH.KW1:=_v_sal ?}
      ?}
   ?}
?};
_v


\czy_datr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Przed redakcją pola ROZRACH.DATA_R
::  OLD: \czy_datr/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.DOK_REJ().CZY_ROZL='T'


\be_kw1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Formuła oblicza wartość w walucie narodowej.
::  OLD: \be_kw1/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZRACH.RUSZ='Z'
|| _w:=0; _przel:=1;
   RS.index('RS'); RS.prefix();
   {? ROZRACH.WAL>0 & DOK.TKRS>0 & form(DOK.TYPKRS)<>'' & ROZRACH.KW1=0 &
      RS.find_key(ROZRACH.WAL().SLU().WZ)
   || ($(RS.TAB+'.blank(1)'))();
      ($(RS.TAB+'.'+RS.KOD+':='''+ROZRACH.WAL().KOD+''''))();
      KRS.index('KRS_WAL');KRS.prefix();
      {? KRS.find_key(DOK.TKRS,ROZRACH.WAL) & ($(RS.TAB+'.find_rec()'))()
      || _przel:=($(RS.TAB+'.J'))();
         {? _przel<=0 || _przel:=1 ?};
         _w:={? DOK.TYPKRS='K' || KRS.KP
             |? DOK.TYPKRS='S' || KRS.SP
             |? DOK.TYPKRS='R' || KRS.SR
             ?}*(ROZRACH.KWOTAWAL/_przel);
         ROZRACH.KW1:=_w$2
      ?}
   ?};
   1
|| {? ROZRACH.WAL<>null & ROZRACH.WAL<>FINFO.NAROD || 0 || 1 ?}
?}


\be_rozkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Formuła uzupełnia kod kontrahenta na podstawie symbolu konta.
::  OLD: \be_rozkh/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? UNPAR.P1=2
|| KS.index('SYM'); KS.prefix(SSTALE.AR,SSTALE.AR().SYNT+KONTO.K1);
   {? KS.first()
   || _v_dl:=+KS.SYM; {? SSTALE.AR().SEP<>',' || _v_dl+=1 ?};
      BUD.index('KS'); BUD.prefix(KS.ref);
      {? BUD.first()
      || {! |?
            RS.blank(); RS.WZ:=BUD.SLU().SLU().WZ;
            {? RS.find_rec() & RS.TAB='KH'
            || KH.index('KOD');
               KH.prefix(2,BUD.SLU().SLU().DL+(_v_dl-KONTO.K1));
               {? KH.first() || ROZRACH.KONTR:=KH.ref; KONTO.K2:='' ?}
            ?};
            _v_dl+=BUD.SLU().SLU().DL;
            {? SSTALE.AR().SEP<>',' || _v_dl+=1 ?};
            BUD.next()
         !}
      ?}
   ?};
   1
|| ROZRACH.KONTR:=null; 0
?}


\be_zfaut
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Formuła przed readakcją pola Rozlicz automatycznie (AUTO)
::  OLD: \be_zfaut/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('akc_kont','edkonto',ROZNE.KONZAP)
|| 1
|| {? KONTO.K1<>'' || 1 || 0 ?}
?}


\dspwyst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2006]
:: OPIS: Na wyswietl dla pola SKID.KOD_ZAP i SKID.NAZ_ZAP
::  OLD: \dspwyst/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
SKID.KOD_ZAP:=SKID.NAZ_ZAP:='';
{? OPTMP.KH<>null
|| KH.prefix(); OPTMP.KH();
   SKID.KOD_ZAP:=KH.SKR; SKID.NAZ_ZAP:=KH.NAZ
|? OPTMP.POCH<>null
|| SLO.prefix(); OPTMP.POCH();
   SKID.KOD_ZAP:=SLO.KOD; SKID.NAZ_ZAP:=SLO.TR
?};
1


\maski
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: porownanie czy konto jest zgodne z maska
::   WE: _a - konto do porownania
::       _b - maska
::       _c - dlugosc konta
::       _d - wynik 1-tak, 0-nie
::  OLD: \maski/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
_d:=1;
{! .._c
|? _d=1
|! {? 1+_b='?' | 1+_b=1+_a
   ||  _a:=1-_a;
       _b:=1-_b
   || _d:=0
   ?}
!};
_d


\okres_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: Przed redakcja SIK.OKRES1
::  OLD: \okres_1/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.ROK1().ref()


\okres_12
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: Przed redakcja SIK.OKRES1A
::  OLD: \okres_12/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.ROK1(); SIK.ROK1


\spr_mask
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Funkcja sprawdza czy podany tekst jest zgodny z podana maska
::   WE: _a - maska tekstu
::       _b - tekst do sprawdzenia zgodnosci z maska
::  OLD: \spr_mask/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? +_a>0
|| {! _i:=1 .. +_a |? _ok |! _c:=_i+_a+1;
      {? _c<>'?' & _c<>(1+((_i-1)-_b)) || _ok:=0 ?}
   !}
?};
_ok


\pom_bank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Przed redagowaniem POMOC.B
::  OLD: \pom_bank/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
FINFO.SLBANK().SLU()


\pr_pom_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Przed redagowaniem POMOC.TKRS
::  OLD: \pr_pom_t/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.B<>null || POMOC.WAL_TKRS:=FINFO.NAROD; POMOC.BANK:=POMOC.B; 1 ?}


\ust_krs1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Formula wyznaczajaca kurs z tabeli w POMOC.TKRS
::   WE: _a - ref SLO (ze slownika walut)
::       _b - symbol waluty
::  OLD: \ust_krs/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
_k:=0;
KRS.cntx_psh(); KRS.index('KRS_WAL'); KRS.prefix(POMOC.TKRS,_a);
{? KRS.first()
|| _k:={? POMOC.TPK='S' || KRS.SP
       |? POMOC.TPK='Z' || KRS.KP
       |? POMOC.TPK='R' || KRS.SR
       ?}
?};
KRS.cntx_pop(); WAL.cntx_psh(); WAL.index('WAL_SYM'); WAL.prefix();
_k:={? WAL.find_key(_b) & WAL.J || (_k/WAL.J) || 0 ?};
WAL.cntx_pop();
_k


\ust_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Formula pomocnicza przed edycja okna KURS zmiennej POMOC
::   WE: _a - typ rozrachunkow (N/Z)
::  OLD: \ust_par/roz_krs.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.hdr_edit('');
{? _a='N'
|| POMOC.TPK:='Z'; POMOC.hdr_edit(' do rozliczenia różnic dla należności'@)
|? _a='Z'
|| POMOC.TPK:='S'; POMOC.hdr_edit(' do rozliczenia różnic dla zobowiązań'@)
|| POMOC.TPK:='R'
?};
POMOC.B:=POMOC.TKRS:=null;
1


\por_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formuła po redakcji pola PARAM.WALUTA
::  OLD: \por_wal/param.fml
::----------------------------------------------------------------------------------------------------------------------
{? PARAM.WALUTA
|| PARAM.NAZWAL:=PARAM.WALUTA; 1
|| FUN.info('Nie wybrano waluty.'@); 0
?}


\dok_zrd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Akcja 'dokument zRodlowy' w oknach wertowania tabelach DOK umozliwiajaca, przegladanie
::       dokumentu zrodlowego
::  OLD: \dok_zrd/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_sys:={? +DOK.ZAR & DOK.ZAR*':' || (DOK.ZAR*':'-1)+DOK.ZAR || '' ?};
{? DOK.RVAT || DOK.RVAT().RVAT().KRAJ() ?};
{? DOK.EDOKUM<>''
|| exec('dok_dob','obiegi_dekr')
|? +DOK.DOKZRODL & +_sys
|| {? _sys='LSP' | _sys='LMG' | _sys='LZK'
   || exec('upr_set','ceny');
      DK.win_sel('WER_DOK'); ATR.MJS:='DK';
      {? form(DOK.DOKZRODL)<>''
      || {? 1+DOK.DOKZRODL='D'
         || FAKS.cntx_psh(); FAP.cntx_psh(); FAKSPL.cntx_psh;
            FAKS.use('faktu'+(3+(1-DOK.DOKZRODL)));
            FAP.use('fakpo'+(3+(1-DOK.DOKZRODL)));
            FAKSPL.use('fakpl'+(3+(1-DOK.DOKZRODL)));
            FAKS.prefix();
            _reffak:=#(4-DOK.DOKZRODL);
            {? FAKS.seek(_reffak,FAKS.name)
            || hdr_dok:=': '+FAKS.SYM;
               exec('pozycje_fak','faktury_poz',0,'DPUZAINT(SCYRXNPVW):D');
               VAR_DEL.delete('hdr_dok')
            || FUN.info('Nie znaleziono dokumentu źródłowego o identyfikatorze: %1.'@[DOK.DOKZRODL])
            ?};
            FAKS.cntx_pop(); FAP.cntx_pop(); FAKSPL.cntx_pop
         |? 1+DOK.DOKZRODL='M'
         || _reffak:=#(4-DOK.DOKZRODL);
            ND.cntx_psh(); DK.cntx_psh(); DK_L.cntx_psh();
            ND.use('nagdo'+(3+(1-DOK.DOKZRODL))); ND.prefix();
            DK.use('dokma'+(3+(1-DOK.DOKZRODL)));
            DK_L.use('doklk'+(3+(1-DOK.DOKZRODL)));
            {? ND.seek(_reffak,ND.name)
            || exec('poz_dok','magdok_poz',0)
            || FUN.info('Nie znaleziono dokumentu źródłowego\no identyfikatorze: %1'@[DOK.DOKZRODL])
            ?};
            ND.cntx_pop(); DK.cntx_pop(); DK_L.cntx_pop()
         |? 1+DOK.DOKZRODL='P' | 1+DOK.DOKZRODL='K'
         || exec('grp_disp_par','dok_fks',1+DOK.DOKZRODL)
         || FUN.info('Nie znaleziono dokumentu źródłowego.'@)
         ?}
      || FUN.info('Nie znaleziono dokumentu źródłowego.'@)
      ?}
   |? _sys='FKS' & 2+DOK.DOKZRODL<>'pw'
   || {? DOK.DOKZRODL*'row_nag'
      || _wyr:='0';
         ROW_NAG.cntx_psh(); ROW_KON.index('KONTO'); ROW_NAG.prefix();
         {? ROW_NAG.seek(#(7-DOK.DOKZRODL),)
         || ROW_DOC.cntx_psh(); ROW_DOC.use('rowd'+ROW_NAG.OKRES().ROK().KOD+form(OKRO_F.NR,-2));
            ROW_KON.cntx_psh(); ROW_KON.use('rowk'+ROW_NAG.OKRES().ROK().KOD+form(OKRO_F.NR,-2));
            ROW_WYR.cntx_psh(); ROW_WYR.use('roww'+ROW_NAG.OKRES().ROK().KOD+form(OKRO_F.NR,-2));
            exec('row_roz','!fks_dks_rkow');
            ROW_DOC.cntx_pop(); ROW_KON.cntx_pop(); ROW_WYR.cntx_pop()
         ?};
         ROW_NAG.cntx_pop()
      |? DOK.DOKZRODL*'par_nag'
      || PAR_NAG.prefix();
         {? PAR_NAG.seek(#(7-DOK.DOKZRODL),PAR_NAG.name())
         || SER_KOR.TYP:=PAR_NAG.TYP;
            {? SER_KOR.TYP='K'
            || params_exec('dsp_par_nag','rozrach',{? PAR_NAG.WAL=FINFO.NAROD || 'KOM_RED' || 'KOM_REDW' ?},
                           'Plan umowy kompensaty')
            |? SER_KOR.TYP='S'
            || params_exec('dsp_par_nag','rozrach',{? PAR_NAG.WAL=FINFO.NAROD || 'UMU_RED' || 'UMU_REDW' ?},
                           'Plan umowy sprzedaży wierzytelności')
            || params_exec('dsp_par_nag','rozrach',{? PAR_NAG.WAL=FINFO.NAROD || 'FAK_RED' || 'FAK_REDW' ?},
                           'Plan umowy faktoringu')
            ?}
         ?}
      |? DOK.DOKZRODL*'ser_nag'
      || 'na podstawie korespondencji z rozrachunków, noty odsetkowe';
         SER_NAG.cntx_psh(); SER_NAGS.cntx_psh(); SER_NAG.prefix(REF.FIRMA);
         SER_NAGS.index('SERNAGS1'); SER_NAGS.prefix(REF.FIRMA); SER_KOR.TYP:='N';
         {? SER_NAG.seek(#(7-DOK.DOKZRODL),'ser_nag') & SER_NAGS.find_key(SER_NAG.ref())
         || {? SER_NAG.WAL<>null
            || exec('wyswietl','rozrach_kor','SER_POZN')
            || exec('wyswietl','rozrach_kor','SERPOZN1')
            ?}
         ?};
         SER_NAG.cntx_pop(); SER_NAGS.cntx_pop()
      ?}
   |? (_sys='HBN' | _sys='FKS') & 2+DOK.DOKZRODL='pw'
   || PW.cntx_psh(); PW_OP.cntx_psh();
      PW.use('pw'+(4+$DOK.DTW));
      PW_OP.use('pwp'+(4+$DOK.DTW));
      _ind1:=PW.ndx_tmp(,1,'REJ',,,'NRD',,,'NRD',,);
      PW.index(_ind1);
      _nrd:=$DOK.NR+'/'+$(DOK.DTW~2);
      PW.prefix(DOK.REJ,_nrd,_nrd);
      _s:=exec(,'__sysusr');  _superuser:=_s.Operator.IsSuperuser;
      {? PW.first()
      || _upr:=exec('usr_hrb','b_perm',PW.RBL);
         {? _upr
         || _wsel:=PW.mk_sel('Transakcje'@,'P',,'#ttpb_wer1');
            PW.win_fld(_wsel,,'ODD','OD',,8,,,'Jednostka księgowa'@);
            PW.win_fld(_wsel,,'DK',,,11,,,'Data księg.'@);
            PW.win_fld(_wsel,,'KONTR',,,20,,,'Kontrahent'@);
            PW.win_fld(_wsel,,'KW',,,15,,,'Kwota'@);
            PW.win_fld(_wsel,,'WAL',,,6,,,'Waluta'@);
            PW.win_fld(_wsel,,'TYTOP',,,22,,,'Tytuł operacji'@);
            _fml:="{? FUN.ask('Dokument księgowy jest powiązany z wyciągiem bankowym.\nCzy na pewno usunąć powiązanie?')
                   || _pwn:=PW.PWN; PW.cntx_psh(); PW.index('PWN'); PW.prefix(_pwn); PW.first(); {! |? PW.NRD:=''; PW.put(); PW.next() !}; PW.cntx_pop()
                   ?}; sel_exit()";
            {? _superuser || PW.win_act(_wsel,,'Formuła','Usuń powiązanie'@@,,''@,,_fml,,,,,'W') ?};
            PW.win_act(_wsel,,'Kolejność',,,,,,);
            PW.win_sel(_wsel);
            PW.hdr_sel('');
            PW.hdr_sel(' dla wyciągu: %1'@[PW.NRW]);
            _wed:=PW.mk_edit('Transakcja'@,,'#ttpb_red1');
            PW.win_efld(_wed,,'KONTR',,,60,,,'Kontrahent'@);
            PW.win_efld(_wed,,'RBK',,,60,,,'Rachunek bankowy'@);
            PW.win_efld(_wed,,'RBL',,,60,,,'Rachunek bankowy licencjobiorcy'@);
            PW.win_efld(_wed,,'KW',,,60,2,,'Kwota'@);
            PW.win_efld(_wed,,'WAL',,,60,,,'Waluta'@);
            PW.win_efld(_wed,,'STR',,,60,,,'Strona'@);
            PW.win_efld(_wed,,'TYTOP',,,60,,,'Tytuł operacji'@);
            PW.win_efld(_wed,,'TYPTRAN',,,60,,,'Opis transakcji'@);
            PW.win_efld(_wed,,'DK',,,,,,'Data księgowania'@);
            PW.win_efld(_wed,,'AN',,,35,,,'Konto'@);
            PW.win_efld(_wed,,'NRW',,,35,,,'Wyciąg bankowy'@);
            PW.win_efld(_wed,,'ODD','OD',,32,,,'Jednostka księgowa'@);
            PW.win_efld(_wed,,'REJ','KOD',,32,,,'Rejestr'@);
            PW.win_efld(_wed,,'NRD',,,35,,,'Numer w rejestrze/miesiąc'@);
            PW.win_edit(_wed);
            PW.select()
         || FUN.info('Brak uprawnień do rachunku bankowego licencjobiorcy z powiązanego wyciągu bankowego.'@)
         ?}
      || _ok:={? _superuser
              || FUN.ask('Nie znaleziono wyciągu powiązanego z dokumentem.\nZostanie wyświetlone okno wyciągów, gdzie będzie można poprawić wskazanie na dokument.'@+
                         '\nCzy kontunuować?'@)
              || FUN.info('Nie znaleziono wyciągu powiązanego z dokumentem.\nAby naprawić powiązanie wezwij serwis.'@)
              ?};
          {? _ok
          || VAR_DEL.delete('TAB_SPEC','TT_JKS','ws_jk','g_impwb','STAB_SPE','STT_JKS');
             exec('wyciagi','!hbn_wba_zawy',1)
          ?}
      ?};
      PW.cntx_pop(); PW_OP.cntx_pop(); PW.ndx_drop(_ind1)
   |? _sys='KAS' & (3+DOK.DOKZRODL='krp' | 3+DOK.DOKZRODL='kdo')
   || _maska:=5+(3-DOK.DOKZRODL);
      RAPORT.use('krp'+_maska); RAPORT.prefix();
      DOKUMENT.use('kdo'+_maska); DOKUMENT.prefix();
      {? (3+DOK.DOKZRODL='krp' & RAPORT.seek(#(8-DOK.DOKZRODL),'krp'+_maska)) |
         (3+DOK.DOKZRODL='kdo' & DOKUMENT.seek(#(8-DOK.DOKZRODL),'kdo'+_maska))
      || POZDOK.use('kpd'+_maska);
         VPD.use('vpd'+_maska);
         {? 3+DOK.DOKZRODL='krp'
         || DOKUMENT.index('RAPORT'); DOKUMENT.prefix(RAPORT.ref()); DOKUMENT.first()
         || DOKUMENT.RAPORT(); DOKUMENT.index('RAPORT'); DOKUMENT.prefix(RAPORT.ref())
         ?};
         DOKUMENT.win_sel('DOK_PRZE');
         DOKUMENT.hdr_sel(' nr %1'@[form(RAPORT.NUM_RAP)]);
         exec('clear','unpar','BLBVBEAE','16','17','26','27','28','29','30','32','33');
         UNPAR.P17_BV:=UNPAR.P28_BV:=UNPAR.P30_BV:=UNPAR.P33_BV:='exec(\'vwpozdok\',\'dok_zrd\')';
         UNPAR.P16:='Kwota w '+FINFO.NAROD().KOD;
         UNPAR.P17:={? DOKUMENT.WALUTA<>null & DOKUMENT.WALUTA().SYM<>FINFO.NAROD().KOD
                     || 'Kwota w '+DOKUMENT.WALUTA().SYM
                     || ''
                     ?};
         DOKUMENT.cntx_psh();
         {? DOKUMENT.first()
         || {!
            |? {? DOKUMENT.PLUS_MIN='+'
               || UNPAR.P32+=DOKUMENT.KW_PLN; UNPAR.P33+=DOKUMENT.KW_WAL
               || UNPAR.P27+=DOKUMENT.KW_PLN; UNPAR.P28+=DOKUMENT.KW_WAL
               ?};
               DOKUMENT.next()
            !}
         ?};
         DOKUMENT.cntx_pop();
         UNPAR.P29:=UNPAR.P32-UNPAR.P27;
         UNPAR.P30:=UNPAR.P33-UNPAR.P28;
         DOKUMENT.select(,1)
      || FUN.info('Nie znaleziono dokumentu źródłowego.'@)
      ?}
   |? _sys='KAS' & (3+DOK.DOKZRODL='kpo' | 3+DOK.DOKZRODL='kpd')
   || _maska:=5+(3-DOK.DOKZRODL);
      RAPORT.use('krp'+_maska); RAPORT.prefix();
      DOKUMENT.use('kdo'+_maska); DOKUMENT.prefix();
      POZDOK.use('kpd'+_maska); POZDOK.prefix();
      VPD.use('vpd'+_maska);
      {? POZDOK.seek(#(8-DOK.DOKZRODL),'kpd'+_maska)
         & POZDOK.POZOPER().VAT='T' & PAR_SKID.get(90)='T'
      || POZDOK.DOKUMENT(); DOKUMENT.RAPORT();
         VPD.index('VPD'); VPD.prefix(POZDOK.ref());
         UNPAR.P26:=0;
         exec('clear','unpar','BLBVBEAE','10','18','19');
         UNPAR.P10_BV:='{?DOKUMENT.OPER().CZY_ZAL=\'T\''+
                 '||EZALPOZ.index(\'ZRODLO\');EZALPOZ.prefix(REF.FIRMA,$POZDOK.ref,$POZDOK.ref);'+
                 'UNPAR.P10:={?EZALPOZ.first'+
                               '|| EZAL.prefix(REF.FIRMA);EZALPOZ.EZAL().SYM'+
                               '|| exec(\'findfnv\',\'#color\')'+
                               '?}'+
                 '||exec(\'findfnv\',\'#color\')'+
                 '?}';
         UNPAR.P18_BV:='UNPAR.P18:={? POZDOK.OKROVAT<>null'+
                                  '|| POZDOK.OKROVAT(); OKRO_F.NAZ+\'/\'+OKRO_F.ROK().NAZ'+
                                  '|| \'\''+
                                  '?}; exec(\'vvpozdok\',\'kasa_wspolne\')';
         UNPAR.P19_BV:='UNPAR.P19:=form(DOKUMENT.OPER().KOD,9)+DOKUMENT.OPER().NAZWA';
         VPD.win_sel('WER_2I');
         VPD.select()
      ?}
   |? _sys='FST'
   || exec('dokzrodl','fst',DOK.DOKZRODL)
   |? _sys='IF' & (8+DOK.DOKZRODL='w_regwyk')
   || W_REGWYK.cntx_psh();
      W_REGWYK.prefix();
      {? W_REGWYK.seek(#(8-DOK.DOKZRODL),)
      || W_REGWYK.W_REG().display()
      ?};
      W_REGWYK.cntx_pop()
   ?}
|| FUN.info('Dokument nie posiada dokumentu źródłowego.'@)
?}


\zer_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.60]
:: OPIS: Zerowanie zmiennych KOSZTY.NAG1..KOSZTY.NAG6
::  OLD: \zer_nag/roz_kos2.fml
::----------------------------------------------------------------------------------------------------------------------
{! _i:=1..6 |! ($('KOSZTY.NAG'+$_i+':='''''))() !}


\suma_doc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza sume na kontach zrodlowych, docelowych, klucza
::  OLD: \suma_doc/roz_kosz.fml
::----------------------------------------------------------------------------------------------------------------------
exec('suma_zrd','dok_fks');
ROW_DOC.index('KONTO');
ROW_DOC.prefix(KOSZTY.WYK_REF);
KOSZTY.WARTOSC:=KOSZTY.SUMAKL:=KOSZTY.SUMADC:=0;
{? ROW_DOC.first()
|| {! |?
      KOSZTY.SUMAKL+=ROW_DOC.KWOTAKL;
      KOSZTY.SUMADC+=ROW_DOC.KWOTA;
      ROW_DOC.next()
   !}
?}


\suma_zrd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza sume na kontach zrodlowych
::  OLD: \suma_zrd/roz_kosz.fml
::----------------------------------------------------------------------------------------------------------------------
ROW_KON.index('KONTO'); ROW_KON.prefix(KOSZTY.WYK_REF);
KOSZTY.WARTOSC:=KOSZTY.SUMAKZ:=0;
{? ROW_KON.first()
|| {! |?
      KOSZTY.SUMAKZ+=ROW_KON.KWOTA;
      ROW_KON.next()
   !}
?}


\grp_disp_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.30]
:: OPIS: Wyswietlanie grupowego okienka z dokumentami zrodlowymi dla paragonow zbiorczo.
::   WE: _a - rodzaj okienek 'P' - Pragony, 'K' - Korekty
::  OLD: \grp_disp_par/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
FAKS.cntx_psh(); FAP.cntx_psh(); FAKSPL.cntx_psh;
FAKS.use('faktu'+(3+(1-DOK.DOKZRODL)));
FAP.use('fakpo'+(3+(1-DOK.DOKZRODL)));
FAKSPL.use('fakpl'+(3+(1-DOK.DOKZRODL)));
FAKS.prefix();
VAR_DEL.delete('FAKS_POW');
FAKS_POW:={? var_pres('DOK2',FAKS)>0 & PAR_SKID.get(496)='T'
          || sql('select FAKS.SYM, FAKS.DW, FAKS.D, FAKS.NETTO, FAKS.BRUTTO, KH.KOD,
                 FAKS.REFERENCE REF from FAKS join KH where FAKS.DOK=\':_a\' or FAKS.DOK2=\':_a\'',$DOK.ref)
          || sql('select FAKS.SYM, FAKS.DW, FAKS.D, FAKS.NETTO, FAKS.BRUTTO, KH.KOD,
                 FAKS.REFERENCE REF from FAKS join KH where FAKS.DOK=\':_a\'',$DOK.ref)
          ?};
{? FAKS_POW.first()
|| _sel:=FAKS_POW.mk_sel('Dokumenty'@,'N',0,'faks_pow',,,6,0);
   FAKS_POW.win_fld(_sel,,'SYM',,,20,,,'Symbol'@);
   FAKS_POW.win_fld(_sel,,'DW',,,10,,,'Data wystawienia'@);
   FAKS_POW.win_fld(_sel,,'D',,,10,,,'Data sprzedaży'@);
   FAKS_POW.win_fld(_sel,,'KOD',,,8,,,'Kod kontrahenta'@);
   FAKS_POW.win_fld(_sel,,'NETTO',,,16,,,'Netto'@);
   FAKS_POW.win_fld(_sel,,'BRUTTO',,,16,,,'Brutto'@);
   FAKS_POW.win_act(_sel,,'Formuła','Pozycje'@@,,'Pozycje dokumentu'@,,"exec('pozycje_log','dok_fks')",1);
   FAKS_POW.win_btn(_sel,'text=%1,btn_label_align=center,panel=right,align=begin'['Pozycje'@],'menu:P');
   FAKS_POW.win_sel(_sel);
   FAKS_POW.select()
|| FUN.info('Nie znaleziono dokumentów źródłowych o identyfikatorze: %1.'@[DOK.DOKZRODL])
?};
FAKS.cntx_pop(); FAP.cntx_pop(); FAKSPL.cntx_pop();
VAR_DEL.delete('FAKS_POW')


\pozycje_log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Pozycje dla korekt sprzedaży i paragonów zbiorczych przy podglądzie z dokumentu księgowego
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.seek(BB.sqlint(FAKS_POW.REF),form(8+FAKS_POW.REF))
|| exec('pozycje_fak','faktury_poz',1)
?}


\sz_fapkr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula przed szukaj w pozycjach dok. zrodlowego (korekty faktury sprzedazy)
:: OLD: \sz_fapkr/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
FAP.win_patt('SZUKK')


\run_java_exec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Formula uruchamia *.jar odpowiednia wersja javy zgodna z uruchamianym klientem jTerm
::   WE: _a  - nazwa pliku *.jar
::       _b  - czy wyswietlac komunikaty o bledach 0 -tak 1-nie
::      [_c] - parametry
:: ~OST: INBLGET,INEXEDIR,INFCOPY,INFEXISTS,INSYSTEM,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_separator:=exec('sep','#file');
_result:=0;
_jar_name:=_a;
::exec('add','#blob',_jar_name,_b);
::SKID_BLB.index('ID');
::SKID_BLB.prefix(_jar_name,_jar_name);
::{? SKID_BLB.first()
::|| _name:=SKID_BLB.bl_info('BLOB','NAME');
::   {? fexists('@'+tmp_dir()+_separator+_name,0)=0
::   || {? ~SKID_BLB.bl_get('BLOB','@'+tmp_dir()+_separator+_name,0)
::      || {? _b=0 || FUN.emsg('\nBłąd dostępu do pliku %1'@[_name]) ?};
::         _result:=0
::      || _result:=1
::      ?}
::   || _result:=1
::   ?}
::|| {? _b=0 || FUN.emsg('\nBrak BLOBa o identyfikatorze %1'@[_jar_name]) ?};
::   _result:=0
::?};
{? fexists(_jar_name,1)
|| {? fcopy(_jar_name,'@'+tmp_dir()+_separator+_jar_name,1,0,1,1)
   || _result:=1
   ?}
?};
{? _result
|| _par:={? var_pres('_c')>0 || ' '+_c || '' ?};
   {? _jar_name='skaner.jar'
   || _jar_path:='"'+tmp_dir()+_separator+_jar_name+'"';
      _wait:=1;
      _cmd:=exe_dir()+'/mjrunw.exe -wait -32 -java -Xmx512M -jar '+_jar_path+_par;
      _res:=system('@'+_cmd, _wait)
   || exec('MBJAR','#object');
      MBJAR.JavaExec(tmp_dir(),1,'-jar','-Xmx512M',_name)
   ?}
?}


\akt_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Akcja 'popraw wyrozniki' w okienku wertowania 'WYR' tabeli POZ.
::       Formula umozliwia uzupelnienie wyroznikow w wybranej pozycji dokumentu,
::       o ile konto w pozycji ma zdefiniowane wyrozniki.
::   WY: 0/1 czy dopuszczono do poprawiania wyroznikow
::  OLD: \akt_wyr/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
KOMT:='';
{? exec('czy_wyr','wyrozniki',POZ.KOM().KS)>0
|| {? MLEX.FIKSB
   || exec('ob_bz','ml_zad');
      exec('zbz_get','ml_zad')
   ?};
   exec('ustal_ka','dok_fks');
   exec('kas_tpow','dok_fks');
   1
|| FUN.info('Konto syntetyczne %1\nnie ma zdefiniowanych wyróżników'@[POZ.KOM().KS().SYM]);0
?}


\getmaskf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Tworzy maske filtrow tabeli POZ lub DOK we wskazanym roku
::   WE: _a: 1 - na podstawie okresow; 0 - na podstawie daty zapisu; -1 - na podstawie daty operacji
::       _b: ROK_F.ref
::       _c: 1 - uzwgledniac okres BO; 0 - nie uwzgledniac okresu BO
::       _d: 1 - uwzgledniac okrez BZ; 0 - nie uwzgledniac okresu BZ
::       _e: dla _a=1 nr okresu od; dla _a=0 od daty
::       _f: dla _a=1 nr okresu do; dla _a=0 do daty
::       _g: DBF_T
::   WY: maska filtra tabeli wskazanej w parametrze _g
::  OLD: \getmaskf/konta.fml
::----------------------------------------------------------------------------------------------------------------------
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(_b); _sqlmf:='';_h:=0;
_i:={? OKRO_F.first() || OKRO_F.ROK().KOD || '' ?};
_h:={? OKRO_F.last() || OKRO_F.NR || 0 ?};
{? _c || _sqlmf:='\''+(4+_g.name())+_i+'00' ?};
{? _d & _a>0 || _sqlmf+={?+_sqlmf || '\',' || '' ?}+ '\''+(4+_g.name())+_i+form(OKRO_F.NR,-2) ?};
{? _a>0
|| {? OKRO_F.find_key(_e)
   || _n:=1;{! |? _f>=OKRO_F.NR & _n |!
            {? (_c=0 | (_c & OKRO_F.NR>0) ) & (_d=0 | (_d & OKRO_F.NR<_h))
            || _sqlmf+={?+_sqlmf || '\',' || '' ?} +'\''+(4+_g.name())+_i+form(OKRO_F.NR,-2)
            ?}; _n:=OKRO_F.next()
            !}; _sqlmf+='\''
   ?}
|? _a=-1
|| {? OKRO_F.first()
   || {!
      |? {? OKRO_F.POCZ<>date(0,0,0)
         || _sqlmf+={?+_sqlmf || '\',' || '' ?}+ '\''+(4+_g.name())+_i+form(OKRO_F.NR,-2)
         ?};
         OKRO_F.next()
      !};
      _sqlmf+='\''
   ?}
|| {? OKRO_F.first()
   || {! |? {? _e>OKRO_F.KON || OKRO_F.next() || 0 ?} !};
      _sqlmf+={? +_sqlmf || '\',' || '' ?}+ '\'' +(4+_g.name())+_i+form(OKRO_F.NR,-2);
      {? OKRO_F.next()
      || {! |? {? _f>=OKRO_F.POCZ & ( _d | (~_d & {? OKRO_F.NR=_h || 0 || 1?}))
               || _sqlmf+={? +_sqlmf || '\',' || '' ?}+ '\''+(4+_g.name())+_i+form(OKRO_F.NR,-2) ?};
               OKRO_F.next() & ( _f>=OKRO_F.KON | _f>=OKRO_F.POCZ)
         !}; _sqlmf+='\''
      ?}
   ?}
?}; OKRO_F.cntx_pop(); _sqlmf


\crskidxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Automat do tworzenia podzialow controllingowych z poziomu dekretow
::  OLD: \crskidxd/auto.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('oblicz_f','dok_fks',1,'K')
|| aut_ktrl:=1; exec('podzktrl','control'); &aut_ktrl
?}


\ustaw_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Ustalenie ROK_F do uzupelniania wyroznikow.
::   WE: _a [DATE] - data, na którą będzie ustalany OKRO_F
::   WY: wskazanie na rekord tabeli ROK_F lub null
::  OLD: \ust_rok/skid2.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<>type_of(date)
|| return(null)
?};
OKRO_F.index('KON');
OKRO_F.prefix(REF.FIRMA);
{? OKRO_F.find_ge(_a) & _a>=OKRO_F.POCZ & _a<=OKRO_F.KON
|| OKRO_F.ROK();
   ROK_F.ref()
|| null
?}


\sprvpozv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GCW [12.30]
:: OPIS: Sprawdzenie, czy wartosci pol RVAT sa zgodne dla wszystkich pozycji VAT w dokumencie
::   WE: _a - DOK.ref
::   WY: RVAT.ref - zgodnosc, 0 - brak zgodnosci, -1 - brak pozycji VAT
::  OLD: \sprvpozv/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1; _rvat:=0;
VPOZ.cntx_psh();
VPOZ.index('VDOK'); VPOZ.prefix(_a);
{? VPOZ.first()
|| _rvat:=VPOZ.RVAT;
   {! |?
       _zwrot:=(_rvat=VPOZ.RVAT);
       _zwrot & VPOZ.next
   !}
|| _rvat:=-1
?};
VPOZ.cntx_pop();
{?  _zwrot || _rvat || 0 ?}


\dekrety
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PB] [2008]
:: OPIS: Dekrety dla maski kont i w zakresie dat aktywnego roku dla waluty narodowej.
::       Formula analogiczna do procedury wbudowanej z dokument.prc - opcja
::       przyspieszona ze wzgledu na mozliwosc uzycia dyrektyw MASK_FILTER
::   WE:  _a  - STRING[35], Maska konta
::        _b  - STRING[8], Oddział
::        _c  - DATE, Od daty
::        _d  - DATE, Do daty
::        _e  - STRING[1], 'T' Zaksięgowany w przeciwnym przypadku dowolny
::        _f  - STRING, parametr przekazywany do MASK_FILTER dla tabeli POZ
::        _g  - STRING, parametr przekazywany do MASK_FILTER dla tabeli DOK
::        _h  - STRING, pusta wartosc lub kod waluty
::       [_i] - STRING, strona ksiegowa
::  OLD: \dekrety/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
TABTMP:=sql('select '+
'/*+MASK_FILTER(POZ,:_f) MASK_FILTER(DOK,:_g) '+
'INDEX (POZ,KON) */ '+
'REJ.KOD as REJESTR, '+
'DOK.NR as NR_W_REJ, '+
'POZ.POZ as POZYCJA, '+
'DOK.DTW as D_ZAPKS, '+
'DOK.DOP as D_OPERAC, '+
'DOK.DTO as D_DOKUM, '+
'POZ.KON as KONTO, '+
'case POZ.STR when ''Wn'' then POZ.SUM end as WN, '+
'case POZ.STR when ''Ma'' then POZ.SUM end as MA, '+
'POZ.KURS as KURS, '+
'SLO.KOD as WALUTA, '+
'case POZ.STR when ''Wn'' then POZ.SUMW end as WWN, '+
'case POZ.STR when ''Ma'' then POZ.SUMW end as WMA, '+
'POZ.OP as TR, '+
'DOK.NK as SYMBOL, '+
'SLO.KOD as WALUTA, '+
'POZ.SUMW as KWOTA_W, '+
'POZ.KURS as KURS, '+
'POZ.A as AKC, '+
'POZ.ZP as ZP, '+
'POZ.ID as ID, '+
'POZ.TID as TID, '+
'POZ.DO as DO, '+
'POZ.TP as TP, '+
'POZ.reference as POZ_REF, '+
'ODD.OD as ODDZIAL '+
'from @POZ '+
'join @DOK using (POZ.DOK,DOK.REFERENCE) '+
'left join SLO using (POZ.WAL,SLO.REFERENCE) '+
'join ODD using (DOK.ODD,ODD.REFERENCE) '+
'join REJ using (DOK.REJ,REJ.REFERENCE) '+
'where '+
'POZ.KON like \':_a\' AND '+
{? _e='T' || 'POZ.ZP = \':_e\' AND ' || '' ?}+
{? _c<>date(0,0,0) | _d<>date(0,0,0) || 'DOK.DTW between to_date(:_c) and to_date(:_d) AND ' || '' ?}+
{? _h<>'' || 'SLO.KOD = \':_h\' AND ' || '' ?}+
'ODD.OD like \':_b\' '+
{? var_pres('_i')>0 & _i<>'' || ' AND POZ.STR=\''+_i+'\'' || '' ?}+
'order by '+
'KONTO, D_ZAPKS, REJESTR, NR_W_REJ ',_a,_b,_c,_d,_e,_f,_g,_h)


\naglowek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PB] [8.60]
:: OPIS: Formula do wyswietlenia dekretow zrodlowych z dokumentu
::   WE: _a - maska roku i okresu rrmm
::           (rr - kolejny kod roku, mm - kolejny nr okresu w roku)
::       _b - ref rekordu z tabeli POZ
::  OLD: \naglowek/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a<>''
|| DOK.cntx_psh; POZ.cntx_psh; POW.cntx_psh;
   POZ.use('pozy'+_a);
   DOK.use('doku'+_a);
   POW.use('pow_'+_a);
   POZ.index('DOK'); POZ.prefix();
   {? POZ.seek(_b,)
   || POZ.DOK();
      exec('dok_poz','dok_fks')
   || FUN.info('Dekret nie został odnaleziony.'@)
   ?};
   POW.cntx_pop; POZ.cntx_pop; DOK.cntx_pop
?};
1


\dsp_fak_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla pól tabeli FAKS
::----------------------------------------------------------------------------------------------------------------------
{? FAK.WAL
|| FAK.efld_opt('RED','mark=0',FAK,'WAR');
   FAK.efld_opt('RED2','mark=0',FAK,'WAR');
   FAK.efld_opt('RED','mark=1',FAK,'WARW');
   FAK.efld_opt('RED2','mark=1',FAK,'WARW');
   FAK.efld_opt('RED','mark=1',FAK,'KRS');
   FAK.efld_opt('RED2','mark=1',FAK,'KRS')
|| FAK.efld_opt('RED','mark=1',FAK,'WAR');
   FAK.efld_opt('RED2','mark=1',FAK,'WAR');
   FAK.efld_opt('RED','mark=0',FAK,'WARW');
   FAK.efld_opt('RED2','mark=0',FAK,'WARW');
   FAK.efld_opt('RED','mark=0',FAK,'KRS');
   FAK.efld_opt('RED2','mark=0',FAK,'KRS')
?};
1


\vpoz_rkprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Rekord przed dla tabeli VPOZ
::----------------------------------------------------------------------------------------------------------------------
_hid_b:=_hid_a:='';
{? ~(DOK.DOK_REJ().AV<>null & DOK.DOK_REJ().AV().A='T') || _hid_b+='A' ?};
VAT_SR.cntx_psh(); VAT_SR.index('DOK_N'); VAT_SR.prefix(REF.FIRMA,SSTALE.AO,DOK.ref);
{? ~(VAT_SR.first() | exec('spr_vatgr','dok_fks1'))
|| _hid_b+='N';
   _hid_a:='N'
?};
VAT_SR.cntx_pop();
{? DOK.A='T' | var_press('PozView')>0 & PozView
|| _hid_b+='Z';
   _hid_a:='Z'
?};
{? PAR_SKID.get(441)='T' & exec('status_bl','dok_fks1')
|| _hid_b+='DUVJ';
   _hid_a+='D'
?};
{? PAR_SKID.get(211)='T' || _hid_b+='ZM'; _hid_a+='ZM' ?};
_okno:={? var_pres('__o_vpoz')>0 || __o_vpoz || VPOZ.win_sel('?') ?};
VPOZ.actions_grayed(__o_vpoz,_hid_b+':'+_hid_a);
0


\blrejrok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Wartosc poczatkowa pola REJ.ROK
::  OLD: \blrejrok/skid_rej.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.AKC='S' | POMOC.AKC='O'
|| ROK_F.ref()
|? POMOC.AKC='E'
|| ETYPYFIR.ROK_F
|| SSTALE.AR
?}


\dok_wnma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Procedura oblicza sumę aktualnego dokumentu po stronach Wn i Ma
::       Wynik zapisywany jest w odpowiednich polach zmiennej SKID
::  OLD: \dok_wnma/skid.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.cntx_psh();
SKID.WN:=SKID.MA:=0;
POZ.index('DOK'); POZ.prefix(DOK.ref());
{? POZ.first()
|| {! |?
      {? POZ.STR='Wn'
      || SKID.WN+=POZ.SUM
      |? POZ.STR='Ma'
      || SKID.MA+=POZ.SUM
      ?};
      POZ.next()
   !}
?};
POZ.cntx_pop()


\kh_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla pola POMOC.KH_DSP
::----------------------------------------------------------------------------------------------------------------------
POMOC.KH_DSP:='';
SLO.cntx_psh();
{? DOK.WYS || POMOC.KH_DSP:=DOK.WYS().TR ?};
SLO.cntx_pop();
{? POMOC.KH_DSP='' & DOK.KH<>'' & +DOK.KH<=10
|| KH.cntx_psh(); KH.index('SKR'); KH.prefix(2,DOK.KH,);
   {? KH.first() || POMOC.KH_DSP:=KH.SKR ?};
   KH.cntx_pop()
?};
{? POMOC.KH_DSP='' || POMOC.KH_DSP:=DOK.KH ?};
1


\brut_net
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: sprawdza czy netto+VAT=brutto oraz czy vat=??%*netto/100
::       po redagowaniu dla pol NETTO, VAT i BRUTTO tabeli VPOZ.
::       W przypadku niezgodnosci wyswietlany jest komunikat. Istnieje mozliwosc
::       akceptacji rekordu tabeli VPOZ z bledami.
::  OLD: \brut_net/skid.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=1;
_r:=VPOZ.RVAT().RVAT().KVAT().SYM;
{? VPOZ.WARW$2<>0 || _jedn:=exec('jed_wal','waluty',KA.WALUTA().KOD) ?};
{? DOK.JORG=FINFO.NAROD & 4+_r='ImpT' & VPOZ.NETTO<>ROZNE.WCLO+VPOZ.WCLO+VPOZ.CLO+VPOZ.AKCYZA
||    {? ROZNE.WCLO$2<>0
       ||  _a:=FUN.ask('~#\nWartości pozycji netto nie zgadzają się z'
         '\nwartością netto na kwotę:  %1'
         '\n\nwartość celna           = %2'
         '\ncło                     = %3'
         '\nakcyza                  = %4'
         '\npozostale dokumenty pow.= %5'
         '\nsuma wartości           = %6'
         '\nnetto                   = %7'
         '\n\nAkceptować ?\n'@[form((ROZNE.WCLO+VPOZ.WCLO+VPOZ.CLO+VPOZ.AKCYZA-VPOZ.NETTO)$2,,2),form(VPOZ.WCLO,16,2),form(VPOZ.CLO,16,2),form(VPOZ.AKCYZA,16,2),form(ROZNE.WCLO,16,2),form(ROZNE.WCLO+VPOZ.WCLO+VPOZ.CLO+VPOZ.AKCYZA,16,2),form(VPOZ.NETTO$2,16,2)])
       || _a:=FUN.ask('~#\nWartości pozycji netto nie zgadzają się z'
         '\nwartością netto na kwotę:  %1'
         '\n\nwartość celna           = %2'
         '\ncło                     = %3'
         '\nakcyza                  = %4'
         '\nsuma wartości           = %5'
         '\nnetto                   = %6'
         '\n\nAkceptować ?\n'@[form((ROZNE.WCLO+VPOZ.WCLO+VPOZ.CLO+VPOZ.AKCYZA-VPOZ.NETTO)$2,,2),form(VPOZ.WCLO,16,2),form(VPOZ.CLO,16,2),form(VPOZ.AKCYZA,16,2),form(ROZNE.WCLO+VPOZ.WCLO+VPOZ.CLO+VPOZ.AKCYZA,16,2),form(VPOZ.NETTO$2,16,2)])
      ?}
|? DOK.JORG=FINFO.NAROD & 4+_r<>'ImpT' & VPOZ.KURS$6<>0 & VPOZ.WARW$2<>0
   & ~exec('czy_brutto','dok_fks') & VPOZ.NETTO<>VPOZ.AKCYZA+(VPOZ.WARW*VPOZ.KURS/_jedn)$2
||    {? VPOZ.AKCYZA$2<>0
      ||  _a:=FUN.ask('~#\nWartości pozycji netto nie zgadzają się z'
        '\nwartością netto na kwotę: %1'
        '\n\nwartość w walucie * kurs VAT = %2'
        '\nakcyza                       = %3'
        '\nsuma wartości                = %4'
        '\nnetto                        = %5'
        '\n\nAkceptować ?\n'@[form((VPOZ.AKCYZA+(VPOZ.WARW*VPOZ.KURS/_jedn)$2-VPOZ.NETTO)$2,,2),form((VPOZ.WARW*VPOZ.KURS/_jedn)$2,16,2),form(VPOZ.AKCYZA,16,2),form(VPOZ.AKCYZA+(VPOZ.WARW*VPOZ.KURS/_jedn)$2,16,2),form(VPOZ.NETTO,16,2)])

      ||  _a:=FUN.ask('~#\nWartości pozycji netto nie zgadzają się z'
        '\nwartością netto na kwotę: %1'
        '\n\nwartość w walucie * kurs VAT = %2'
        '\nnetto                        = %3'
        '\n\nAkceptować ?\n'@[form((VPOZ.AKCYZA+(VPOZ.WARW*VPOZ.KURS/_jedn)$2-VPOZ.NETTO)$2,,2),form((VPOZ.WARW*VPOZ.KURS/_jedn)$2,16,2),form(VPOZ.NETTO,16,2)])
      ?}
|? DOK.JORG=FINFO.NAROD & 4+_r<>'ImpT' & VPOZ.KURS$6<>0 & VPOZ.WARW$2<>0
   & exec('czy_brutto','dok_fks') & VPOZ.BRUTTO<>VPOZ.AKCYZA+(VPOZ.WARW*VPOZ.KURS/_jedn)$2
||  {? VPOZ.AKCYZA$2<>0
    ||  _a:=FUN.ask('~#\nWartości pozycji brutto nie zgadzają się z'
        '\nwartością brutto na kwotę: %1'
        '\n\nwartość w walucie * kurs VAT = %2'
         '\nakcyza                       = %3'
           '\nsuma wartości                = %4'
        '\nbrutto                        = %5'
        '\n\nAkceptować ?\n'@[form((VPOZ.AKCYZA+(VPOZ.WARW*VPOZ.KURS/_jedn)$2-VPOZ.BRUTTO)$2,,2),form((VPOZ.WARW*VPOZ.KURS/_jedn)$2,16,2),form(VPOZ.AKCYZA,16,2),form(VPOZ.AKCYZA+(VPOZ.WARW*VPOZ.KURS/_jedn)$2,16,2),form(VPOZ.BRUTTO,16,2)])
     ||  _a:=FUN.ask('~#\nWartości pozycji brutto nie zgadzają się z'
        '\nwartością brutto na kwotę: %1'
        '\n\nwartość w walucie * kurs VAT = %2'
        '\nbrutto                        = %3'
        '\n\nAkceptować ?\n'@[form((VPOZ.AKCYZA+(VPOZ.WARW*VPOZ.KURS/_jedn)$2-VPOZ.BRUTTO)$2,,2),form((VPOZ.WARW*VPOZ.KURS/_jedn)$2,16,2),form(VPOZ.BRUTTO,16,2)])
    ?}
|? DOK.JORG=FINFO.NAROD & VPOZ.AKCYZA<>0 & VPOZ.WARW=0 & ROZNE.WCLO<>0
   & VPOZ.NETTO<>VPOZ.AKCYZA+ROZNE.WCLO
|| _a:=FUN.ask('~#\nWartości pozycji netto nie zgadzają się z'
        '\nwartością netto na kwotę:   %1'
        '\n\npozostale dokumenty pow.  = %2'
        '\nakcyza                    = %3'
        '\nsuma wartości             = %4'
        '\nnetto                     = %5'
        '\n\nAkceptować ?\n'@[form((VPOZ.AKCYZA+ROZNE.WCLO-VPOZ.NETTO)$2,,2),form(ROZNE.WCLO,16,2),form(VPOZ.AKCYZA,16,2),form(VPOZ.AKCYZA+ROZNE.WCLO,16,2),form(VPOZ.NETTO,16,2)])
|? DOK.JORG<>FINFO.NAROD & (VPOZ.NETTO+VPOZ.VAT)$2<>VPOZ.BRUTTO$2
|| _a:=FUN.ask('~#\nWartości pozycji netto+VAT\n w walucie opodatkowania nie zgadzają się z'
        '\nwartością pozycji brutto na kwotę: %1'
        '\n\nnetto     = %2'
        '\nvat       = %3'
        '\nnetto+vat = %4'
        '\nbrutto    = %5'
        '\n\nAkceptować ?\n'@[form((VPOZ.NETTO$2+VPOZ.VAT$2-VPOZ.BRUTTO$2)$2,,2),form(VPOZ.NETTO$2,16,2),form(VPOZ.VAT$2,16,2),form(VPOZ.NETTO$2+VPOZ.VAT$2,16,2),form(VPOZ.BRUTTO$2,16,2)])
|? (VPOZ.NETTO+VPOZ.VAT)$2<>VPOZ.BRUTTO$2
|| _a:=FUN.ask('~#\nWartości pozycji netto+VAT nie zgadzają się z'
        '\nwartością pozycji brutto na kwotę: %1'
        '\n\nnetto     = %2'
        '\nvat       = %3'
        '\nnetto+vat = %4'
        '\nbrutto    = %5'
        '\n\nAkceptować ?\n'@[form((VPOZ.NETTO$2+VPOZ.VAT$2-VPOZ.BRUTTO$2)$2,,2),form(VPOZ.NETTO$2,16,2),form(VPOZ.VAT$2,16,2),form(VPOZ.NETTO$2+VPOZ.VAT$2,16,2),form(VPOZ.BRUTTO$2,16,2)])
|? DOK.WAL & var_pres('NETTO_W',VPOZ)>0 & (VPOZ.NETTO_W+VPOZ.VAT_W)$2<>VPOZ.BRUTTO_W$2
|| _a:=FUN.ask(
        '\nWartości pozycji walutowych netto+VAT nie zgadzają się z'
        '\nwartością pozycji brutto na kwotę: %1'
        '\n\nnetto     = %2'
        '\nvat       = %3'
        '\nnetto+vat = %4'
        '\nbrutto    = %5'
        '\n\nAkceptować ?\n'@[form((VPOZ.NETTO_W$2+VPOZ.VAT_W$2-VPOZ.BRUTTO_W$2)$2,,2),form(VPOZ.NETTO_W$2,16,2),form(VPOZ.VAT_W$2,16,2),form(VPOZ.NETTO_W$2+VPOZ.VAT_W$2,16,2),form(VPOZ.BRUTTO_W$2,16,2)]
   )
|? exec('czy_brutto','dok_fks')
|| {? VPOZ.NETTO$2<>(VPOZ.BRUTTO/(1+0.01*exec('vat','dok_fks',VPOZ.PR().KOD)))$2
   || _a:=FUN.ask(
         '\nWartość pozycji netto nie wynika z kwoty brutto:\n'+
         '\nbrutto          = '+form(VPOZ.BRUTTO$2,16,2)+
         '\nwyliczone netto = '+form((VPOZ.BRUTTO/(1+0.01*exec('vat','dok_fks',VPOZ.PR().KOD)))$2,16,2)+
         '\n\nnetto           = '+form(VPOZ.NETTO$2,16,2)+
         '\n\nAkceptować?\n'
      )
   ?}
|? VPOZ.VAT$2<>(0.01*VPOZ.NETTO*exec('vat','dok_fks',VPOZ.PR().KOD))$2
|| {? exec('czy_brutto','dok_fks')
   || _v:=FUN.ask('Wartość pozycji VAT nie zgadza się ze stawką.'@)
   || _v:=FUN.choice('Wartość pozycji VAT nie zgadza się ze stawką.'@,,'Kontynuuj'@)
   ?};
   {? _v=0
   || _a:=0
   |? _v=2
   || _a:='VAT';
      exec('ae_pr2','dok_fks'); win_disp()
   ?}
?};
{? _a & 1+VPOZ.GRVAT().GRVAT().KOD='Z' & VPOZ.VAT$2<>(VPOZ.VAT_ODL+VPOZ.VATKOSZT)$2
|| _a:=FUN.ask('\nWartości pozycji VAT do odliczenia, VAT bez odliczenia i VAT całkowity nie zgadzają się.'
               '\nRóżnica wynosi: %1 zł'
               '\n\nAkceptować ?\n'@[form(fabs((VPOZ.VAT_ODL+VPOZ.VATKOSZT)$2-VPOZ.VAT$2),,2)])
?};
_a


\ae_pr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Formuła oblicza kwotę VAT oraz brutto po redakcji stawki VAT
::  OLD: \ae_pr/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_vat:=VPOZ.VAT;
{? VPOZ.VAT$2=0 & VPOZ.NETTO$2=0
|| 1
|| {? exec('czy_brutto','dok_fks')
   || VPOZ.NETTO:=(VPOZ.BRUTTO/(1+0.01*exec('vat','dok_fks',VPOZ.PR().KOD)))$2;
      VPOZ.VAT:=(VPOZ.BRUTTO-VPOZ.NETTO)$2
   || VPOZ.VAT:=(0.01*VPOZ.NETTO*exec('vat','dok_fks',VPOZ.PR().KOD))$2;
      VPOZ.BRUTTO:=(VPOZ.NETTO+VPOZ.VAT)$2
   ?}
?};
{? _vat<>VPOZ.VAT || exec('setvatodl','dok_fks') ?};
exec('obl_vwal','dok_fks'); 1


\ae_zwpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Po redakcji pola FINFO.OKRROZ
::  OLD: \ae_zwpl/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
{? FINFO.OKRROZ<0 | FINFO.OKRROZ>999
|| FUN.info('Podaj wartość z przedziału 0-999'@); 0
|| 1
?}


\rozlvat_dok
::----------------------------------------------------------------------------------------------------------------------
:: UTW: Artur Kozłowski [wersja: 12.41] 05.04.2016  - 09:38
:: OPIS: Formula przed na akcje Infor. dla dok. aut. okien wetowania tabeli ROZLVAT
:: WE:
:: WY:
::----------------------------------------------------------------------------------------------------------------------
ROZLVAT.DOK();
exec('dok_zrd','dok_fks')


\zap_op_dok
::----------------------------------------------------------------------------------------------------------------------
:: UTW: Artur Kozłowski [wersja: 12.41] 05.04.2016  - 09:38
:: OPIS: Formula przed na akcje Infor. dla dok. aut. okien wetowania tabeli OPTMP, ZAP_OP
:: WE:
:: WY:
::----------------------------------------------------------------------------------------------------------------------

{? cur_tab(1,1)=OPTMP
||   OP.cntx_psh();
      OP.index('KON_O');
      OP.prefix(WYDRUKI.WAL,OPTMP.ODD,OPTMP.KONTO,OPTMP.SYM,OPTMP.SYM,OPTMP.SYM_ROK);
      {? OP.size=1 & OP.first()

      ||    ZAP_OP.cntx_psh();
            ZAP_OP.index('OP');
            ZAP_OP.prefix(OP.ref);
           _maska:='';_ref:=0;
            {?   ZAP_OP.first()
            ||   {! |?  {? ZAP_OP.MA<>0
                           ||  _maska:=(ref_name(ZAP_OP.POZDOK)+4);
                                 _ref:=#ZAP_OP.POZDOK ;
                                   DOK.cntx_psh(); POZ.cntx_psh();
                               _maska2:={? (DOK.name()+2)='__' || (DOK.name()+4) || SSTALE.AR().KOD+form(SSTALE.AO().NR,-2) ?};
                                  {? _maska=_maska2
                                  || _ok:=1
                                  || _ok:=0;
                                     POZ.use('pozy'+_maska);
                                     DOK.use('doku'+_maska)
                                  ?};
                                  POZ.prefix();
                               {? _ref<>0 & POZ.seek(_ref,)
                               ||   {? _ref<>0 & DOK.seek(POZ.DOK)
                                     || exec('dok_zrd','dok_fks')
                                    ?}
                               ?};
                             POZ.cntx_pop(); DOK.cntx_pop()
                         ?};
                     ZAP_OP.next() & _maska<>''
                  !}
            ?};
            ZAP_OP.cntx_pop()
      ?};
      OP.cntx_pop()
|? cur_tab(1,1)=ZAP_OP
||      _maska:=(ref_name(ZAP_OP.POZDOK)+4);
   _ref:=#ZAP_OP.POZDOK;
  DOK.cntx_psh(); POZ.cntx_psh();
_maska2:={? (DOK.name()+2)='__' || (DOK.name()+4) || SSTALE.AR().KOD+form(SSTALE.AO().NR,-2) ?};
   {? _maska=_maska2
   || _ok:=1
   || _ok:=0;
      POZ.use('pozy'+_maska);
      DOK.use('doku'+_maska)
   ?};
   POZ.prefix();
 {? _ref<>0 & POZ.seek(_ref,)
 ||   {? _ref<>0 & DOK.seek(POZ.DOK)
       || exec('dok_zrd','dok_fks')
      ?}
 ?};
   POZ.cntx_pop(); DOK.cntx_pop()
?}


\dokzrdop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Akcja 'Dokument zrodlowy' w oknach wertowania tabelach OP umozliwiajaca, przegladanie
::       dokumentu zrodlowego
:: OLD \dokzrdop/dok_zrd.fml
::-----------------------------------------------------------------------------------------------------------------------
_jest:=0;
ZAP_OP.index('OP');
ZAP_OP.prefix(OP.ref());
DOK.cntx_psh; POZ.cntx_psh; ZAP_OP.cntx_psh();
_maskap:=SSTALE.AR().KOD+form(SSTALE.AO().NR,-2);
{? ZAP_OP.first
|| {!
   |? _maska:=(ref_name(ZAP_OP.POZDOK)+4);
      {? _maska<>_maskap
      || POZ.use('pozy'+_maska); DOK.use('doku'+_maska)
      ?};
      _maskap:=_maska;
      {? +ZAP_OP.POZDOK().DOK().DOKZRODL
      || _jest+=1;
         _sys:={? +DOK.ZAR & DOK.ZAR*':' || (DOK.ZAR*':'-1)+DOK.ZAR || '' ?};
         _sys:=exec('nsystem','dok_fks_zest',_sys);
         {? _jest=1
         || VAR_DEL.delete('TMPDOKZR');
            TMPDOKZR:=tab_tmp(2,'ODD','STRING[8]','Jedn. ks.'@,
                                'REJ','STRING[8]','Rejestr'@,
                                'NR','INTEGER','Nr'@,
                                'POZ','INTEGER','Poz'@,
                                'DATA','DATE','Data otwarcia'@,
                                'NK','STRING[20]','Symbol dokumentu księgowego'@,
                                'SYS','STRING[25]','Z systemu'@,
                                'OPIS','STRING[60]','Opis'@,
                                'MDOK','STRING[20]','Maska tabeli DOK'@,
                                'RDOK','INTEGER','Ref pozycji w tabeli DOK'@);
           TMPDOKZR.index(TMPDOKZR.ndx_tmp('',1,'ODD',,0,'DATA',,0,'REJ',,0,'NR',,0,'POZ',,0,'NK',,0,'SYS',,0));
           _ok:=TMPDOKZR.mk_sel('Dokumenty źródłowe wpływające na saldo rozrachunku: %1'@[OP.SYM],,,'#tmpdokzr');
           TMPDOKZR.win_fld(_ok,,'ODD',,,8);
           TMPDOKZR.win_fld(_ok,,'REJ',,,8);
           TMPDOKZR.win_fld(_ok,,'NR',,,5);
           TMPDOKZR.win_fld(_ok,,'POZ',,,5);
           TMPDOKZR.win_fld(_ok,,'DATA',,,10);
           TMPDOKZR.win_fld(_ok,,'NK',,,20,,,'Symbol dok. ks.'@);
           TMPDOKZR.win_fld(_ok,,'SYS',,,25);
           TMPDOKZR.win_act(_ok,0,'Formuła','Dokument źródłowy'@@,,'Przeglądanie dokumentu źródłowego'@,
                                  "DOK.cntx_psh();
                                   DOK.use(TMPDOKZR.MDOK);
                                   DOK.prefix();
                                   {? DOK.seek(TMPDOKZR.RDOK,TMPDOKZR.MDOK)
                                   || exec('dok_zrd','dok_fks')
                                   ?};
                                   DOK.cntx_pop()",,1,,,,'D');
           TMPDOKZR.win_sel(_ok)
         ?};
         TMPDOKZR.blank();
         TMPDOKZR.ODD:=ZAP_OP.POZDOK().ODD().OD;
         TMPDOKZR.REJ:=ZAP_OP.REJ().KOD;
         TMPDOKZR.NR:=ZAP_OP.NR;
         TMPDOKZR.POZ:=ZAP_OP.POZDOK().POZ;
         TMPDOKZR.DATA:=ZAP_OP.DATA;
         TMPDOKZR.NK:=ZAP_OP.POZDOK().DOK().NK;
         TMPDOKZR.SYS:=_sys;
         ZAP_OP.POZDOK().DOK();
         TMPDOKZR.MDOK:=DOK.name();
         TMPDOKZR.RDOK:=#DOK.ref();
         TMPDOKZR.add()
      ?};
      ZAP_OP.next()
   !}
?};
DOK.cntx_pop; POZ.cntx_pop; ZAP_OP.cntx_pop();
{? _jest
|| TMPDOKZR.select()
|| FUN.info('Zapisy rozrachunkowe nie związane są z dokumentami utworzonymi automatycznie.'@)
?};
VAR_DEL.delete('TMPDOKZR')


\be_okrvt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MG
:: OPIS: Formula przed redakcja pola Okres VAT dla dokumentu VAT
::  OLD: \be_okrvt/dok_zrd2.fml
::   WE: [_a] - wymuszenie zmiany okresu
::----------------------------------------------------------------------------------------------------------------------
{? DOK.DOK_REJ().KOR_NAG='T' & cur_afld='OKRVAT1'
|| _red:=exec('be_okrvt','knag');
   return(_red)
?};
_red:=1; PARAM.cntx_psh; PARAM.OKRES:=null; PARAM.OKROVAT:='';
{? var_pres('vpozvat')=-1
|| {? -menu_txt(,)='dołącz' | exec('sprvpozp','dok_fks',DOK.ref)
   || _s:=DOK.RVAT().RVAT().RT; _zak:=_s<>'S' & _s<>'W';
      _klasa:=DOK.RVAT().RVAT().KVAT().SYM;
      _data:={? DOK.DOK_REJ().JPK_V_T='FP' | (6+_klasa='_WWspN' & DOK.DTO>=date(2023,7,1))
             || DOK.DTO
             |? DOK.D4<>date(0,0,0)
             || {? _zak & DOK.DTO>=date(2014,1,1) & DOK.D4<DOK.DOP || DOK.DOP || DOK.D4 ?}
             || {? 6+RVAT.KVAT().SYM='_WWspD' || DOK.DTO || DOK.DOP ?}
             ?};
      {? ~DOK.OKRVAT | var_pres('_a')>0
      || OKRO_F.cntx_psh();
         {? _data>=SSTALE.AO().POCZ & _data<=SSTALE.AO().KON
         || _wynik:=OKRO_F.NAZ+'/'+OKRO_F.ROK().NAZ;
            {? DOK.A_VAT=null || PARAM.OKRES:=OKRO_F.ref ?}
         || _wynik:='';
            _dalej:=1;
            OKRO_F.index('KON'); OKRO_F.prefix(REF.FIRMA);
            {? OKRO_F.first()
            || {!|? {? _data>=OKRO_F.POCZ & _data<=OKRO_F.KON
                    || _wynik:=OKRO_F.NAZ+'/'+OKRO_F.ROK().NAZ;
                       PARAM.OKRES:=OKRO_F.ref;
                       _dalej:=0
                    || _dalej:=OKRO_F.next()
                    ?};
                    _dalej
               !}
            ?}
         ?};
         {? Plugin.runnable('SET_DOK_OKRVAT') ||  PARAM.OKRES:=Plugin.run('SET_DOK_OKRVAT') ?};
         OKRO_F.cntx_pop();
         {? DOK.A_VAT=null || PARAM.OKROVAT:=_wynik; DOK.OKRVAT:=PARAM.OKRES ?}
      ?}
   || _red:=0
   ?}
|| {? VPOZ.OKRVAT & VPOZ.sel_size()=0
   || OKRO_F.cntx_psh();
      VPOZ.OKRVAT();
      PARAM.OKROVAT:=OKRO_F.NAZ+'/'+OKRO_F.ROK().NAZ;
      PARAM.OKRES:=OKRO_F.ref();
      OKRO_F.cntx_pop()
   ?}
?};
PARAM.cntx_pop;
{? var_pres('typobi')<=0 & mwa_active()=0 || win_disp() ?};
{? _red || exec('be_edok_fld','dok_fks1') || 0 ?}


\poz_dekv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Dekretacja automatyczna pozycji VAT.
::       Uruchamia proces automatycznego generowania dekretow zwiazanych z pozycjami VAT.
::  OLD: \poz_dekv/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
{? _=0
|| _a:=1; _b:=0
|? _=1
|| _b:=0
?};
{? exec('czy_okr_zam_con','konsolidacja',_b=0 | DOK.sel_size()=0)
|| return(0)
|?  -DOK.A<>'t' & -DOK.ZP<>'t' & -DOK.ZK<>'t'
|| {? DOK.DOK_REJ().AV<>null & DOK.DOK_REJ().AV().A='T'
   || VPOZ.cntx_psh();
      VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
      VPOZ.cntx_psh();
      {? VPOZ.first
      || {? VPOZ.size=1
         || _auto:=VPOZ.Z<>'T'
         || {! |? _auto:=(VPOZ.Z<>'T'); _auto=0 & VPOZ.next() !};
            {? _auto=0
            || {? DOK.sel_size()
               || 0
               || FUN.info('Wszystkie pozycje VAT zostały \njuż automatycznie zadekretowane.'@)
               ?}
            ?}
         ?}
      || _auto:=0;
         {? ~DOK.sel_size()
         || FUN.info('Funkcja dostępna dla dokumentów z pozycjami VAT.'@)
         ?}

      ?};
::  wywołanie dla wszystkich pozycji
     _wyn:=2;
      VPOZ.cntx_pop();
      {? _auto
      ||
::             statystyki użycia - startexec('dek_zpoz','dok_fks', _wyn);
               exec('stat_add','st_common','A_AV',AV.KOD,AV.OP);
               exec('dek_zpoz','dok_fks',_wyn,_a);
::             statystyki użycia - stop
               exec('stat_add','st_common','A_AV_E',AV.KOD,AV.OP);
               exec('suma_dok','dok_fks');
               SLO.win_sel('ONE'); SLO.win_dict('ONE');
               POZ.hdr_sel(' %1'@[DOK.DOK_REJ().NAZ]);
               {? PARWYD.DOKUMLT<>1
               || POZ.first();
                  {? var_pres('__PozTabs')>0 & var_pres('dek_fakt')<=0 || tab_sel(__PozTabs,'bottom') ?}
               || POZ.select()
               ?};
               exec('vpoz_dek','dok_fks');
               {?  ~DOK.sel_size() & ~(var_pres('obdekredi')>0 & obdekredi=1)
               || FUN.info('Pozycje VAT zostały automatycznie zadekretowane.'@)
               || ileautow+=1
               ?}
      ?};
      VPOZ.cntx_pop()
   || {? ~DOK.sel_size()
      || {? DOK.DOK_REJ().AV<>null
         || FUN.info('Przypisany do dokumentu schemat VAT\no kodzie '' %1 '' '
           'nie został zaakceptowany.'@[DOK.DOK_REJ().AV().KOD])
         || FUN.info('Brak przypisanego schematu VAT dla dokumentu.'@)
         ?}
      ?}
   ?}
|| {? ~DOK.sel_size()
   || FUN.info('Funkcja dostępna tylko dla dokumentów zakończonych.'@)
   ?}
?};
1


\dek_zpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Automatyczne dekretowanie pozycji VAT
::  OLD: \dek_zpoz/dok_zrd.fml
::   WE: _a - VPOZ.size
::       _b - 0/1 brak komunikatów/z komunikatami
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.TABELA:='POZ';
{? var_pres('SD_OB')<=0 || SD_OB:=obj_new(@.CLASS.SD_CLASS,'F') ?};
exec('def_met','dok_fks',_a);
SD_OB.loop('VPOZ');
_er_lev:=SD_OB.er_lev();
{? _er_lev<>0
|| {? _b & _er_lev<>2 || SD_OB.msg_err() ?};
   {? _er_lev<3 || SD_OB.ksieguj() ?}
|| SD_OB.ksieguj()
?};
obj_del(SD_OB);
VAR_DEL.delete('VatPKont');
1


\dokpradd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Po dolacz DOK, redakcja platnosci ratalnych
::  OLD: \dokpradd/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.KW2RAT:={? DOK.WAL || 0 || DOK.SUMWAL ?};
exec('fp_f3','raty',DOK);
DOK.SP_PL:=exec('drb_tpfp','raty',ROZRACH.TABELA,0);
DOK.put()


\numer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Ustalenie numeru dokumentu
::   WE: [_a] - [0]-dołacz 1-popraw
::  OLD: \numer/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=0 ?};
_w:=0; _nr:=DOK.NR; _ref:=DOK.ref();
DOK.cntx_psh(); DOK.index('REJ'); DOK.prefix(DOK.REJ);
{? DOK.find_key(_nr) & (_a=0 | DOK.ref()<>_ref)
|| _w:=1;
   _nr:={? DOK.last() || DOK.NR+1 || 1 ?}
?};
DOK.cntx_pop;
{? _a=0 || DOK.NR:=_nr ?};
_w


\dok_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Funkcja służy do sprawdzenia, czy odpowiednie pola nagłówka dokumentu zostały poprawnie wypełnione.
::  OLD: \dok_spr/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? (var_pres('BtnZak')>0 & BtnZak=1) || return(1) ?};
VAR_DEL.delete('__dokSpr'); __dokSpr:=1;
{? (PAR_SKID.get(441)='T' & exec('status_bl','dok_fks1')) || return('') ?};
{? exec('czy_euro','waluty',DOK.WAL().KOD,1)
|| _a:=DOK.DOK_REJ().SLO().KOD;
   {? _a='VAT' | _a='SAD' | _a='WEW'
   || ROZNE.WAL:=DOK.WAL;
      KRS.index('KRS_WAL'); KRS.prefix(DOK.TKRS,DOK.WAL);
      {? KRS.first()
      || ROZNE.KRS:={? DOK.TYPKRS='K' || KRS.KP
                    |? DOK.TYPKRS='R' || KRS.SR
                    |? DOK.TYPKRS='S' || KRS.SP
                    || KRS.KP
                    ?}
      ?};
      _v:={? DOK.DOK_REJ().KOR_NAG='T'
          || {? DOKN.NK1=''
             || FUN.info('Nie podano symbolu dokumentu pierwotnego.'@); 'NK1'
             |? DOKN.DOP1=date(0,0,0)
             || FUN.info('Nie podano daty operacji dokumentu pierwotnego.'@); 'DOP1'
             |? DOKN.DTW1=date(0,0,0)
             || FUN.info('Nie podano daty zapisu dokumentu pierwotnego.'@); 'DTW1'
             |? PAR_SKID.get(38)='N' & DOKN.D31<DOKN.DTO1
             || FUN.info('Termin płatności dla dokumentu pierwotnego\nnie może być wcześniejszy od daty wystawienia.'@); 'D31'
             |? PAR_SKID.get(38)='N' & DOK.D3<DOK.DTO
             || FUN.info('Termin płatności dla dokumentu \nnie może być wcześniejszy od daty wystawienia.'@); 'D3'
             |? DOKN.DTO1=date(0,0,0)
             || FUN.info('Nie podano daty wystawienia dla dokumentu pierwotnego.'@); 'DTO1'
             |? DOKN.KH1=''
             || FUN.info('Nie podano kontrahenta dla dokumentu pierwotnego.'@); 'KH1'
             |? DOKN.NIP1=''
             || FUN.info('Nie podano numeru NIP dla dokumentu pierwotnego.'@); 'NIP1'
             |? DOKN.KH1=DOK.KH & DOKN.WYS1=DOK.WYS & DOKN.NIP1=DOK.NIP & DOKN.NK1=DOK.NK
                & DOKN.DOP1=DOK.DOP & DOKN.DTW1=DOK.DTW & DOKN.DTO1=DOK.DTO & DOKN.D31=DOK.D3
                & DOKN.OKRVAT1=DOK.OKRVAT & DOKN.KH_FULL1=DOK.KH_FULL & DOKN.UL1=DOK.UL & DOKN.MIASTO1=DOK.MIASTO
                & DOKN.POCZ1=DOK.POCZ
             || FUN.info('Dane wprowadzone w korekcie nie różnią się od dokumentu pierwotnego.'@); 'NIP'
             || ''
             ?}
          || ''
          ?};
      {? _v='' || _v:=exec('dok1','dok_fks') ?};
      {? _a='WEW' & DOK.KH<>''
      || KH.index('SKR'); KH.prefix(2);
         {? KH.find_key(DOK.KH,DOK.KH) & & KH.SKR=DOK.KH
         || {? DOK.GVKHSTAT='N'
            || DOK.GVKHSTAT:=exec('grvat_typ_kh','kontrahent',KH.ref(),DOK.DTO)
            ?};
            {? DOK.GVKHSTAT<>'CW'
            || FUN.info('Niedozwolony wybór kontrahenta.\n'
                       +'Dla tego typu dokumentu nie można wybrać kontrahenta nie należącego do grupy VAT licencjobiorcy.'@);
                _v:='KH'
            ?}
         || FUN.info('Nie znaleziono kontrahenta o skrócie %1.'@[DOK.KH]); _v:='KH'
         ?}
      ?};
      {? _v=''
      || {? _a='WEW'
         || PAR_WYDR.TABAKR:={? DOK.DOK_REJ().WEW='S' || REF.FIRMA().SYMBOL+'KH2' || 'KH' ?}
         || _kvatsym:=VAT_REJ.RVAT().KVAT().SYM;
            PAR_WYDR.TABAKR:={? 'S'*(1+_kvatsym)
                             || REF.FIRMA().SYMBOL+'KH2'
                             || 'KH'
                             ?}
         ?};
         _v:=exec('chkdokkh','dok_fks');
         {? _v=''
         || PAR_WYDR.TABAKR:='KH';
            _v:=exec('chkdokkh','dok_fks',1)
         ?};
         {? _v='' || _v:={? exec('vat_mies','dok_fks') || '' || 'OKROVAT' ?} ?}
      ?};
      {? _v='' & 1+menu_txt(,)<>'T' & ~exec('po_dplat','dok_fks',0)
      || _v:='D3'
      ?};
      _s:=DOK.RVAT().RVAT().RT;
      _zak:=_s<>'S' & _s<>'W';
      {? _v='' & DOK.D4<DOK.DTO & exec('dok_red_d4','dok_fks') & (_zak | exec('kor_spr','dok_fks',1)) & (DOK.D4<>date(0,0,0) | _s<>'E' | _a='SAD')
      || FUN.info({? _s='Z' || 'Data otrzymania' || 'Data przekroczenia granicy' ?}+ ' nie może być wcześniejsza od daty wystawienia.'@); _v:='D4'
      ?};
      {? _v=''
      || _v:={? exec('spr_nk','dok_fks',1)=0 || 'NK' || '' ?}
      ?};
      {? _v='' & exec('besymzew','dok_fks1')
      || _v:={? exec('spr_nk','dok_fks',2)=0 || 'SYM_ZEW' || '' ?}
      ?};
      DOK.RVAT().RVAT();
      {? _v=''
      || {? RVAT.KVAT().SYM='_WWspNab'
         || _v:={? exec('kor_spr','dok_fks',1) & DOK.D4=date(0,0,0)
                || FUN.info('Data otrzymania musi być wypełniona.'@); 'D4'
                |? DOK.D4<DOK.DTO
                || FUN.info('Data otrzymania nie może być wcześniejsza od daty wystawienia.'@); 'D4'
                || ''
                ?}
         || _v
         ?}
      || _v
      ?};
      {? _v='' & -DOK.DOK_REJ().KOR='t' & DOK.KOR_PRZY=''
      || FUN.info('Nie podano przyczyny korekty.'@); _v:='KOR_PRZY'
      ?};
      {? _v='' & DOK.DTW<date(2019,7,1) & -DOK.DOK_REJ().KOR='t' & DOK.KOR_OKR=''
      || FUN.info('Nie podano okresu korekty.'@); _v:='KOR_OKR'
      ?};
      {? _v='' & -DOK.DOK_REJ().KOR='t' & DOK.KOR=''
      || FUN.info('Nie podano symbolu korekty.'@); _v:='KOR'
      ?};
      {? _v='' & -DOK.DOK_REJ().KOR='t' & -DOK_REJ.KOR_NAG<>'t' & _a<>'WEW'& DOK.DWKOR=date(0,0,0)
      || FUN.info('Nie podano daty wystawienia korekty.'@); _v:='DWKOR'
      ?};
      {? _v=''
      || _v:=exec('dto_zb','dok_fks1')
      ?};
      {? _v=''
      || {? XINFO.TER_AKT='T' & XINFO.TER_KNT='T' & ~exec('tr_kh_zagr','dok_fks')
         || _v:=exec('czy_teryt_ok','dok_fks')
         ?}
      ?};
      {? _v=''
      || _v:={? DOK.DTW=date(0,0,0)
             || FUN.info('Nie podano daty zapisu.'@); 'DTW'
             || SSTALE.AO().ROK();
                {? ~exec('po_dtd','dok_fks',DOK.DTW) || 'DTW' || '' ?}
             ?}
      ?};
      {? _v='' & DOK.D3=date(0,0,0) & _a='WEW' & DOK_REJ.CZY_DP='T'
      || FUN.info('Nie podano terminu płatności.'@); _v:='D3'
      ?};
      {? _v=''
      || _v:=exec('polafaks_chk','jpk_log',DOKPOLA)
      ?};
      {? _v='' & DOK.RB & DOK.RB_V
      || _msg:='';
         _kh_fak:=exec('kh_faktor','dok_fks');
         _kh_fakv:=exec('kh_faktor_v','dok_fks');
         {? _kh_fak<>null() & _kh_fakv<>null() & _kh_fak<>_kh_fakv
         || _msg:='Niezgodność rachunku i rachunku VAT - różni faktorzy.'@
         |? _kh_fak<>null() & _kh_fakv=null()
         || _msg:='Niezgodność rachunku (faktor) i rachunku VAT.'@
         |? _kh_fak=null() & _kh_fakv<>null()
         || _msg:='Niezgodność rachunku i rachunku VAT (faktor).'@
         ?};
         {? _msg<>''
         || FUN.info(_msg); _v:='RB'
         ?}
      ?};
      {? var_pres('__sprKraj')>=0 & __sprKraj=1
      || {? _v='' & DOK.efld_opt(DOK.win_edit('?'),'mark',DOK,'KRAJ','KOD')='1' & DOK.KRAJ=null
         ||  FUN.info('Nie podano kraju opodatkowania.'@); _v:='KRAJ'
         ?}
      ?};
      VAR_DEL.delete('__dokSpr');
      _v
   || _v:={? DOK.NR<=0
          || FUN.info('Nie podano poprawnie numeru w rejestrze.'@); 'NR'
          |? DOK.NK=''
          || FUN.info('Nie podano symbolu dokumentu.'@); 'NK'
          |? DOK.DOP=date(0,0,0)
          || FUN.info('Nie podano daty operacji.'@); 'DOP'
          |? DOK.DTW=date(0,0,0)
          || FUN.info('Nie podano daty zapisu.'@); 'DTW'
          |? DOK.DTO=date(0,0,0)
          || FUN.info('Nie podano daty dokumentu.'@); 'DTO'
          |? DOK.D3=date(0,0,0) & DOK.DOK_REJ().SLO().KOD='PROSTY' & DOK_REJ.CZY_DP='T'
          || FUN.info('Nie podano terminu płatności.'@); 'D3'
          |? ~DOK.ODD
          || FUN.info('Nie wybrano jednostki księgowej.'@); 'ODD'
          || ''
          ?}
   ?}
|| 'WAL'
?}


\kh_faktor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [22.26]
:: OPIS: Znalenie kontrahenta będącego faktorem dokumentu sprzedaży
::   WY: KH.ref() albo null()
::----------------------------------------------------------------------------------------------------------------------
_kh:=null();
{? DOK.RB().TAB='KH'
|| KH.cntx_psh(); KH.prefix();
   {? KH.seek(DOK.RB().REF) &
      exec('FindInSet','#table','KH_DOD','KH_DOD',SKID_RBK.REF,REF.FIRMA,"KH_DOD.FAKTOR='T'",,,0)
   || _kh:=KH.ref()
   ?};
   KH.cntx_pop()
?};
_kh


\kh_faktor_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [22.26]
:: OPIS: Znalenie kontrahenta będącego faktorem dokumentu sprzedaży - rachunek VAT
::   WY: KH.ref() albo null()
::----------------------------------------------------------------------------------------------------------------------
_kh:=null();
{? DOK.RB_V().TAB='KH'
|| KH.cntx_psh(); KH.prefix();
   {? KH.seek(DOK.RB_V().REF) &
      exec('FindInSet','#table','KH_DOD','KH_DOD',SKID_RBK.REF,REF.FIRMA,"KH_DOD.FAKTOR='T'",,,0)
   || _kh:=KH.ref()
   ?};
   KH.cntx_pop()
?};
_kh


\vat_mies
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Funkcja sprawdza, czy okres w którym ma być rozliczony VAT jest wprowadzony poprawnie.
::  OLD: \vat_mies/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=SSTALE.AO().POCZ; _ok:=1;
{? DOK.OKRVAT<>null
|| _b:=DOK.OKRVAT().POCZ;
   {? _b=date(0,0,0)
   || FUN.info('Okresem rozliczenia VAT nie może być\n'+
               '"Bilans otwarcia" i "Bilans zamknięcia".'@); _ok:=0
   |? _a>_b
   || _ok:=FUN.ask('Okres rozliczenia VAT wcześniejszy od okresu aktywnego.\nKontynuować?'@);
      OKRO_F.index('NAZ'); OKRO_F.prefix(REF.FIRMA);
      _ok
   || ROK_F.cntx_psh();
      _warunek:=OKRO_F.ROK().ROZL_VAT='K';
      ROK_F.cntx_pop();
     _dsv:=exec('slimvat','dok_fks');
      _l_okr:={? _dsv<>date(0,0,0) & DOK.DTO>=_dsv
              || {? _warunek
                 || exec('m2eoq','fks_vat',SSTALE.AO)+6
                 || 4
                 ?}
              |? DOK.DTW>=date(2008,12,1)
              || {? _warunek
                 || exec('m2eoq','fks_vat',SSTALE.AO)+6
                 || 2
                 ?}
              || 1
              ?};
      {? _b~2-_a~2+(_b~1-_a~1)*12>_l_okr
      || OKRO_F.index('NAZ'); OKRO_F.prefix(REF.FIRMA);
         _ok:=FUN.ask('Aktualny okres obrachunkowy %1 %2.'
                      '\nRozliczenie podatku VAT nastąpi w okresie %3 %4.\nAkceptujesz?'@[SSTALE.AO().NAZ,SSTALE.AR().NAZ,DOK.OKRVAT().NAZ,OKRO_F.ROK().NAZ])
      ?}
   ?}
?};
{? _ok || _ok:=exec('spr_okvat','dok_fks') ?};
_ok


\spr_okvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [11.21]
:: OPIS: Sprawdzanie okresu VAT
::  OLD: \spr_okvat/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? -menu_txt(,)<>'dołącz'
|| DOK.cntx_psh();
   UD_POM.OKR_POCZ:={? DOK.OKRVAT || DOK.OKRVAT || SSTALE.AO ?};
   UD_POM.ROK_POCZ:=UD_POM.OKR_POCZ().ROK;
   {? DOK.get()
   || UD_POM.OKR_KON:={? DOK.OKRVAT || DOK.OKRVAT || SSTALE.AO ?};
      UD_POM.ROK_KON:=UD_POM.OKR_KON().ROK;
      {? UD_POM.ROK_POCZ<>UD_POM.ROK_KON & UD_POM.ROK_POCZ().PROC_VAT<>UD_POM.ROK_KON().PROC_VAT
      || VPOZ.cntx_psh();
         VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
         {? VPOZ.first()
         || {! |?
               {? exec('gr_pod_typ','dok_fks',VPOZ.GRVAT().GRVAT().KOD)=1 || _zwrot:=0 ?};
               _zwrot & VPOZ.next()
            !}
         ?};
         VPOZ.cntx_pop();
         {? ~_zwrot
         || _zwrot:=FUN.choice('Zmieniono rok, wg którego liczono strukturę podatku VAT (na %1).\n'
                               'Wymagane jest przeliczenie kwoty podatku VAT do odliczenia i bez odliczenia.\n'
                               'Mogą istnieć już w dokumencie dekrety dla pozycji VAT.'@[UD_POM.ROK_POCZ().NAZ],,'Kontynuuj bez przeliczania'@,'Przelicz kwoty VAT'@);
            {? _zwrot=2
            || _zwrot:=1;
               VPOZ.cntx_psh();
               VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
               {? VPOZ.first()
               || {! |?
                     {? exec('gr_pod_typ','dok_fks',VPOZ.GRVAT().GRVAT().KOD)=1
                     || _proc:={? PAR_SKID.get(83)='T' & VPOZ.C_PROC_S=0
                               || 100
                               || UD_POM.ROK_POCZ().PROC_VAT
                               ?};
                        _prewsk:={? PAR_SKID.get(83)='T' & VPOZ.C_PREWSK
                                 || UD_POM.ROK_POCZ().PREWSK
                                 || 100
                                 ?};
                        {? (SLO.KOD='ZakuPodS' | SLO.KOD='ZInwPodS')
                        || VPOZ.VAT_ODL:=(VPOZ.VAT*(_proc/100)*(_prewsk/100)*(50/100))$2
                        |? (SLO.KOD='ZakuPods' | SLO.KOD='ZInwPods')
                        || VPOZ.VAT_ODL:=(VPOZ.VAT*(50/100))$2
                        || VPOZ.VAT_ODL:=(VPOZ.VAT*(_proc/100)*(_prewsk/100))$2
                        ?};
                        VPOZ.VATKOSZT:=VPOZ.VAT-VPOZ.VAT_ODL;
                        VPOZ.put()
                     ?};
                     VPOZ.next()
                  !}
               ?};
               VPOZ.cntx_pop()
            ?}
         ?}
      ?}
   ?};
   DOK.cntx_pop()
?};
_zwrot


\dok1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Sprawdzanie dokumentu - wewętrzna
::  OLD: \dok/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_pom:=1;
_v:=DOK.DOK_REJ().SLO().KOD;
_t:=DOK.WYS().SLU().WZ;
RS.index('RS'); RS.prefix();
{? RS.find_key(_t)
|| {? RS.TAB='KH'
   || KH.index('KOD'); KH.prefix(2);
      {? KH.find_key(SLO.KOD)
      || {? KH.TYP='I'
         || _pom:=0
         || {? DOK.KH<>'' & KH.SKR<>DOK.KH
            || FUN.info('Kod kontrahenta niezgodny z wypełnionym kontrahentem.'@);
               return('WYS')
            ?}
         ?}
      ?}
   ?}
?};
_s:=DOK.RVAT().RVAT().RT;
{? _s='' & DOK.DOK_REJ().SLO().KOD='WEW' || _pom:=2; _s:=DOK_REJ.WEW ?};
:: TODO - chk_rec na VALIDATE
:: Dla dokumentów<>'SAD' brak sprawdzania D4
{? (_s='I' | _s='E') & DOK.D4=date(0,0,0) & (_s<>'E' | _v='SAD')
|| FUN.info('Nie podano daty przekroczenia granicy.'@); return('D4')
|? _s='Z' & _pom<>2 & & DOK.D4=date(0,0,0) & (_s<>'E' | _v='SAD')
|| FUN.info('Nie podano daty otrzymania.'@); return('D4')
?};
{? _pom=0
|| __CHK.record(DOK,,'NR','NK','DOP','DTW','DTO','RVAT','KH','ODD')
|? _pom=1
|| __CHK.record(DOK,,'NR','NK','DOP','DTW','DTO','RVAT','KH','NIP','ODD')
|| __CHK.record(DOK,,'NR','NK','DOP','DTW','DTO','KH','ODD')
?}


\chkdokkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.10]
:: OPIS: Sprawdza zgodnosc danych kontrahenta w naglowku dokumentu zrodlowego.
::   WE: _a - zadeklarowane - sprawdzanie rachunku VAT
::  OLD: \chkdokkh/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_v:='';
exec('dok_upd','blp');
_kvatsym:=VAT_REJ.RVAT().KVAT().SYM;
{? _ & 'S'*(1+_kvatsym)
|| return('')
|? ~_ & ~exec('vat_nip2','dok_fks')
|| _v:='KH'
?};
_konto:={? _
        || RACHBANK.KB_2R
        || RACHBANK.KB_3R
        ?};
{? _v='' & _konto<>''
   & ~((KH.index('SKR'); KH.prefix(2,DOK.KH); _kh:=KH.first())
       & RB.getrrban(_konto,PAR_WYDR.TABAKR,#KH.ref(),null,1)<>0 & SKID_RBK.REF=#KH.ref())
|| {? _kh
   || {? _
      || RACHBANK.KB_2R:=''; _v:='KB_2R'
      || RACHBANK.KB_3R:=''; _v:='KB_3R'
      ?};
      {? PAR_WYDR.TABAKR=REF.FIRMA().SYMBOL+'KH2'
      || SKID_RBK.cntx_psh();
         SKID_RBK.index('TAB'); SKID_RBK.prefix(RACHBANK.FIRMA,REF.FIRMA().SYMBOL+'KH2',REF.FIRMA().SYMBOL+'KH2',#KH.ref()); _vs:=SKID_RBK.size();
         _vs:=SKID_RBK.size();
         SKID_RBK.cntx_pop();
         {? _vs=0 & ~(1+_kvatsym='Z' | (6+_kvatsym)='_WWspN' )
         || _v:=''
         ?};
         {? _v=''
         || {? _
            || DOK.RB_V:=null()
            || DOK.RB:=null()
            ?};
            FUN.info('Niezgodność kontrahenta i numeru subkonta.'
            '\nKontrahent nie ma przypisanego subkonta, pole "Subkonto" zostanie wyczyszczone.'@)
         || FUN.info('Niezgodność kontrahenta i numeru subkonta.'@)
         ?}
      || {? _
         || FUN.info('Niezgodność kontrahenta i numeru rachunku bankowego VAT.'@)
         || FUN.info('Niezgodność kontrahenta i numeru rachunku bankowego.'@)
         ?}
      ?}
   || {? _
      || DOK.RB_V:=null(); RACHBANK.KB_2R:=''
      || DOK.RB:=null(); RACHBANK.KB_3R:=''
      ?}
   ?}
?};
_v


\po_dplat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RF
:: OPIS: Po redakcji terminu płatności dokumentu VAT
::  OLD: \po_dplat/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_a:={? _=1 || _a || 1 ?};
{? DOK.DOK_REJ().KOR_NAG='T' & (var_pres('__KORNAG')<=0 | POMOC.KNAG=1) & _a & cur_afld='D31'
|| {? PAR_SKID.get(38)='N' & DOKN.D31<DOKN.DTO1
   || FUN.info('Data terminu płatności nie może być wcześniejsza\nod daty wystawienia.'@)
   || 1
   ?}
|| {? cur_tab(1,1)=DOK & (DOK.DOK_REJ().SLO().KOD='PROSTY' | DOK_REJ.SLO().KOD='WEW') & DOK_REJ.CZY_DP<>'T'
   || 1
   |? cur_tab(1,1)=DOK & DOK.D3=date(0,0,0) & (DOK.DOK_REJ().SLO().KOD='PROSTY' | DOK_REJ.SLO().KOD='WEW') & DOK_REJ.CZY_DP='T'
   || FUN.info('Nie podano terminu płatności.'@)
   || {? cur_tab(1,1)=DOK & -(1+menu_txt(,))<>'d' & exec('czyLista','raty',DOK)
      || DOK.D3:=exec('drb_tpfp','raty','DOK',1)
      ?};
      _rd:=exec('get_par','slo_slu',DOK.SP_PL,6);
      {? PAR_SKID.get(38)='N' & DOK.D3<DOK.DTO & (_rd='W' | _rd='')
      || {? DOK.D3=date(0,0,0)
         || FUN.info('Nie podano terminu płatności.'@)
         || FUN.info('Termin płatności nie może być wcześniejszy\nod daty wystawienia.'@)
         ?}
      |? DOK.D3=date(0,0,0)
      || FUN.info('Nie podano terminu płatności.'@)
      || exec('save_tp','dok_fks'); 1
      ?}
   ?}
?}


\vat_nip2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Po redakcji NIP na dokumencie
::  OLD: \vat_nip2/dok_zrd2.fml
::  OLD: \vat_nip2/!fks_dks_dark.fml
::----------------------------------------------------------------------------------------------------------------------
_v:=_v_ret:=_spr_nip:=1;
_s:=DOK.RVAT().RVAT().KVAT().SYM;
{? DOK.DOK_REJ().KOR_NAG='T' & exec('get','#params',300230,2)='T' & DOK.NIP<>'' & DOKN.NIP1<>'' & DOKN.NIP1<>DOK.NIP
|| FUN.info('Niedostępna zmiana NIP kontrahenta w ramach korekty nagłówkowej.'@);
   return(0)
?};
_wew:=DOK_REJ.WEW<>'N';
{? 1+_s='_' || _spr_nip:=0 ?};
{? DOK.WYS<>null || _v_kod:=DOK.WYS().KOD || _v_kod:='' ?};
{? 1+_s='_' & _s+1='w'
|| _v:=0;
   {? DOK.NIP=''
   || NIPY.index('SNIP_F');
      NIPY.prefix(REF.S_FIRMA);
      {? NIPY.first()
      || {? ~NIPY.next() & FUN.ask('Wypełnić pole symbolem NIP\n z kartoteki symboli NIP licencjobiorcy w UE?'@)
         || DOK.NIP:=exec('nip_ue','kontrahent')
         ?}
      || _v_ret:=FUN.ask('Brak symboli NIP w UE dla licencjobiorcy.\nKontynuować?'@)
      ?}
   || NIPY.index('SNIP_F');
      NIPY.prefix(REF.S_FIRMA);
      {? NIPY.first()
      || {? NIPY.find_key((2+form(DOK.NIP))+exec('niptostr','#string',form(2-DOK.NIP)))
         || DOK.NIP:=exec('nip_ue','kontrahent')
         || {? g_dokkh3[1]<>DOK.NIP
            || _v_ret:=FUN.ask('Niezgodność symbolu NIP z danymi licencjobiorcy. Kontynuować?'@)
            ?};
            g_dokkh3[1]:=DOK.NIP
         ?}
      || {? g_dokkh3[1]<>DOK.NIP
         || _v_ret:=FUN.ask('Brak symboli NIP w UE dla licencjobiorcy. Kontynuować?'@)
         ?};
         g_dokkh3[1]:=DOK.NIP
      ?}
   ?}
|? DOK.KH<>'' & DOK.WYS().KOD<>PAR_SKID.get(120)
|| {? +DOK.KH<11 & (KH.index('SKR'); KH.prefix(2,DOK.KH); KH.first())
   || {! |? {? KH.KOD=_v_kod || _v:=2; 0 || KH.next() ?} !}
   || {? _v_kod<>'' || _v:=2 || _v:=0 ?}
   ?}
|| {? _v_kod<>'' || _v:=2 || _v:=0 ?};
   {? 1+_s='_' & DOK.NIP<>''
   || NIPY.index('SNIP2'); NIPY.prefix();
      fld(~-DOK.NIP);
      {? NIPY.find_key((2+form(DOK.NIP))+exec('niptostr','#string',form(2-DOK.NIP)))
      || {? NIPY.KH<>null || DOK.KH:=NIPY.KH().SKR ?};
         DOK.NIP:=exec('nip_ue','kontrahent');
         DOK.KH_FULL:=KH.NAZ_P;
         DOK.KH_KRAJ:=KH.KRAJ;
         DOK.MIASTO:=KH.MIASTO;
         DOK.UL:=KH.UL;
         DOK.DOM:=KH.DOM;
         DOK.LOKAL:=KH.LOKAL;
         DOK.POCZ:=KH.POCZ;
         DOK.KPOCZ:=KH.KPOCZ;
         DOK.KH_KRISO:=KH.KRAJISO;
         exec('fdokwys','dok_fks','nip')
      ?}
   |? DOK.NIP<>'' & +DOK.NIP>3
   || {? DOK.NIP*'-'=4
      || _ind:=KH.ndx_tmp(,1,'P',,,'NIP',,); KH.index(_ind)
      || KH.index('SNIP')
      ?};
      KH.prefix(2,DOK.NIP);
      {? KH.first()
      || _ask:=DOK.WYS=null |
               (DOK.WYS().KOD<>KH.KOD &
               FUN.ask('W kartotece istnieje już kontrahent o podanym numerze NIP.\nZmienić kod kontrahenta?'@));
         SLO.cntx_psh();
         SLUAPPL.cntx_psh();
         SLUAPPL.index('NAZ');
         SLUAPPL.prefix('F');
         {? SLUAPPL.find_key(SLOSLU.SLSLU) & (SLUAPPL.SLU().NAZ=SLOSLU.SLSLU)
         || SLUAPPL.SLU()
         ?};
         SLUAPPL.cntx_pop();
         SLO.index('SL');
         SLO.prefix(SLU.ref(),KH.KOD);
         {? _ask & SLOSLU.SLSLU<>''
         || {? SLO.first()
            || DOK.WYS:=SLO.ref()
            || SLO.KOD:=KH.KOD;
               SLO.TR:=KH.NAZ;
               SLO.SLU:=SLU.ref();
               {? SLO.add() || DOK.WYS:=SLO.ref() ?}
            ?}
         ?};
         SLO.cntx_pop();
         KH.cntx_psh();
         KH.index('KOD');
         KH.prefix(2,PAR_SKID.get(120));
         {? DOK.KH='' | DOK.KH=KH.SKR | _ask
         || KH.cntx_pop();
            DOK.KH:=KH.SKR
         || KH.cntx_pop()
         ?};
         DOK.KH_FULL:=KH.NAZ_P;
         DOK.KH_KRAJ:=KH.KRAJ;
         DOK.MIASTO:=KH.MIASTO;
         DOK.UL:=KH.UL;
         DOK.DOM:=KH.DOM;
         DOK.LOKAL:=KH.LOKAL;
         DOK.POCZ:=KH.POCZ;
         DOK.KPOCZ:=KH.KPOCZ;
         {? DOK.NIP*'-'=0 || DOK.NIP:=KH.SNIP ?}; DOK.KH_KRISO:=KH.KRAJISO;
         exec('fdokwys','dok_fks','nip')
      ?};
      {? var_pres('_ind')>=0 || KH.ndx_drop(_ind) ?}
   ?}
?};
{? _v=2
|| _t:=DOK.WYS().SLU().WZ;
   {? RS.index('RS'); RS.prefix(); RS.find_key(_t)
   || {? RS.TAB='KH'
      || {? KH.index('KOD'); KH.prefix(2); KH.find_key(SLO.KOD)
         || KH.prefix(2,KH.KOD)
         ?}
      ?}
   ?}
?};
{? _v & KH.first()
|| {? KH.TYP='R'
   || {? DOK.NIP=''
      || {? KH.NIP=''
         || {? KH.PESEL=''
            || FUN.info('Dla rolnika ryczałtowego w polu powinien znaleźć się NIP lub PESEL.'@);
               _v_ret:=0
            || {? FUN.ask('Wypełnić pole numerem PESEL z kartoteki kontrahentów?'@)
               || DOK.NIP:=KH.PESEL;
                  {? DOK.KH='' || DOK.KH:=KH.SKR ?}
               ?};
               _spr_nip:=0
            ?}
         || {? FUN.ask('Wypełnić pole numerem NIP z kartoteki kontrahentów?'@)
            || DOK.NIP:=KH.NIP;
               {? DOK.KH='' || DOK.KH:=KH.SKR ?}
            ?}
         ?}
      || {? KH.SNIP=DOK.NIP & KH.NIP<>'' || DOK.NIP:=KH.NIP ?};
         {? KH.NIP<>''
         || {? 2+KH.NIP='PL' || _khnip:=2-KH.NIP || _khnip:=KH.NIP ?};
            {? 2+DOK.NIP='PL' || _doknip:=2-DOK.NIP || _doknip:=DOK.NIP ?};
            {? _khnip<>_doknip
            || {? g_dokkh1[1]=0 | g_dokkh2[1]<>DOK.KH | g_dokkh3[1]<>_doknip
               || {? FUN.ask('Niezgodność numeru NIP z kartoteką kontrahentów.\n'
                             'Wypełnić pole numerem NIP z kartoteki kontrahentów?'@)
                  || DOK.NIP:=KH.NIP;
                     {? DOK.KH='' || DOK.KH:=KH.SKR ?}
                  ?};
                  g_dokkh1[1]:=1; g_dokkh2[1]:=DOK.KH; g_dokkh3[1]:=DOK.NIP
               ?}
            ?}
         || {? KH.PESEL<>DOK.NIP
            || {? KH.PESEL<>''
               || {? g_dokkh1[1]=0 | g_dokkh2[1]<>DOK.KH | g_dokkh3[1]<>DOK.NIP
                  || {? FUN.ask('Niezgodność numeru PESEL z kartoteką kontrahentów.\n'
                                'Wypełnić pole numerem PESEL z kartoteki kontrahentów?'@)
                     || DOK.NIP:=KH.PESEL;
                        {? DOK.KH='' || DOK.KH:=KH.SKR ?}
                     ?};
                     g_dokkh1[1]:=1; g_dokkh2[1]:=DOK.KH; g_dokkh3[1]:=DOK.NIP
                  ?}; _spr_nip:=0
               || FUN.info('Dla rolnika ryczałtowego w polu powinien znaleźć się NIP lub PESEL.'@);
                  _v_ret:=0
               ?}
            ?}
         ?}
      ?}
   |? (KH.TYP='P' | KH.TYP='U') & 1+_s<>'_'
   || VAR_DEL.delete('DokPyt');
      DokPyt:=exec('dokpyt','dok_fks',1);
      {? DOK.NIP=''
      || {? KH.NIP=''
         || {? DokPyt.ask(1,DOK.KH)
            || _v_ret:=FUN.ask('Niewypełnione pole NIP w kartotece kontrahentów. Kontynuować?'@);
               {? _v_ret
               || DokPyt.ok()
               ?}
            ?}
         || {? FUN.ask('Wypełnić pole numerem NIP z kartoteki kontrahentów?'@)
            || DOK.NIP:=KH.NIP;
               {? DOK.KH='' || DOK.KH:=KH.SKR ?}
            ?}
         ?}
      || {? KH.SNIP=DOK.NIP || DOK.NIP:=KH.NIP ?};
         {? KH.NIP<>''
         || {? 2+KH.NIP='PL' || _khnip:=2-KH.NIP || _khnip:=KH.NIP ?};
            {? 2+DOK.NIP='PL' || _doknip:=2-DOK.NIP || _doknip:=DOK.NIP ?};
            {? _khnip<>_doknip
            || {? g_dokkh1[1]=0 | g_dokkh2[1]<>DOK.KH | g_dokkh3[1]<>_doknip
               || {? FUN.ask('Niezgodność numeru NIP z kartoteką kontrahentów.\n'
                             'Wypełnić pole numerem NIP z kartoteki kontrahentów?'@)
                  || DOK.NIP:=KH.NIP;
                     {? DOK.KH='' || DOK.KH:=KH.SKR ?}
                  ?};
                  g_dokkh1[1]:=1; g_dokkh2[1]:=DOK.KH; g_dokkh3[1]:=DOK.NIP
               ?}
            ?}
         |? DokPyt.ask(1,DOK.KH)
         || _v_ret:=FUN.ask(
               'Niewypełnione pole NIP w kartotece kontrahentów.\n\n'
               'Dla płatnika VAT w polu NIP powinien znaleźć się NIP lub PESEL.\n'
               'Kontynuować?'@
            );
            {? _v_ret
            || DokPyt.ok()
            ?}
         ?}
      ?};
      VAR_DEL.delete('DokPyt')
   |? 1+_s='_'
   || {? DOK.NIP=''
      || NIPY.index('SNIP');
         NIPY.prefix(KH.ref());
         {? NIPY.first()
         || {? ~NIPY.next() & FUN.ask('Wypełnić pole symbolem NIP z kartoteki symboli NIP kontrahenta w UE?'@)
            || DOK.NIP:=exec('nip_ue','kontrahent');
               {? DOK.KH='' || DOK.KH:=KH.SKR ?}
            ?}
         || _v_ret:=FUN.ask('Brak symboli NIP w UE dla kontrahenta. Kontynuować?'@)
         ?}
      || NIPY.index('SNIP');
         NIPY.prefix(KH.ref());
         {? NIPY.first()
         || {? NIPY.find_key((2+form(DOK.NIP))+exec('niptostr','#string',form(2-DOK.NIP)))
            || DOK.NIP:=exec('nip_ue','kontrahent')
            || {? g_dokkh1[1]=0 | g_dokkh2[1]<>DOK.KH | g_dokkh3[1]<>DOK.NIP
               || {? NIPY.next()
                  || _v_ret:=FUN.ask('Niezgodność symbolu NIP w UE z kartoteką kontrahentów. Kontynuować?'@)
                  || {? FUN.ask('Niezgodność symbolu NIP z kartoteką kontrahentów.\n'
                                'Wypełnić pole symbolem NIP z kartoteki symboli NIP kontrahenta w UE?'@)
                     || DOK.NIP:=exec('nip_ue','kontrahent');
                        {? DOK.KH='' || DOK.KH:=KH.SKR ?}
                     ?}
                  ?};
                  g_dokkh1[1]:=1; g_dokkh2[1]:=DOK.KH; g_dokkh3[1]:=DOK.NIP
               ?}
            ?}
         || {? g_dokkh3[1]<>DOK.NIP
            || _v_ret:=FUN.ask('Brak symboli NIP w UE dla kontrahenta. Kontynuować?'@)
            ?};
            g_dokkh3[1]:=DOK.NIP
         ?}
      ?}
   |? KH.TYP='I' & ~_wew
   || {? DOK.NIP=''
      || {? KH.NIP<>''
         || {? g_dokkh1[1]=0 | g_dokkh2[1]<>DOK.KH | g_dokkh3[1]<>DOK.NIP
            || {? FUN.ask('Wypełnić pole numerem NIP z kartoteki kontrahentów?'@)
               || DOK.NIP:=KH.NIP;
                  {? DOK.KH='' || DOK.KH:=KH.SKR ?}
               ?};
               g_dokkh1[1]:=1; g_dokkh2[1]:=DOK.KH; g_dokkh3[1]:=DOK.NIP
            ?}
         |? KH.PESEL<>''
         || {? g_dokkh1[1]=0 | g_dokkh2[1]<>DOK.KH | g_dokkh3[1]<>DOK.NIP
            || {? FUN.ask('Wypełnić pole numerem PESEL z kartoteki kontrahentów?'@)
               || DOK.NIP:=KH.PESEL;
                  {? DOK.KH='' || DOK.KH:=KH.SKR ?}
               ?};
               g_dokkh1[1]:=1; g_dokkh2[1]:=DOK.KH; g_dokkh3[1]:=DOK.NIP
            ?}
         ?}
      || {? KH.SNIP=DOK.NIP & KH.NIP<>'' || DOK.NIP:=KH.NIP ?};
         {? KH.NIP<>''
         || {? 2+KH.NIP='PL' || _khnip:=2-KH.NIP || _khnip:=KH.NIP ?};
            {? 2+DOK.NIP='PL' || _doknip:=2-DOK.NIP || _doknip:=DOK.NIP ?};
            {? _khnip<>_doknip
            || {? g_dokkh1[1]=0 | g_dokkh2[1]<>DOK.KH | g_dokkh3[1]<>_doknip
               || {? FUN.ask('Niezgodność numeru NIP z kartoteką kontrahentów.\n'
                             'Wypełnić pole numerem NIP z kartoteki kontrahentów?'@)
                  || DOK.NIP:=KH.NIP;
                     {? DOK.KH='' || DOK.KH:=KH.SKR ?}
                  ?};
                  g_dokkh1[1]:=1; g_dokkh2[1]:=DOK.KH; g_dokkh3[1]:=DOK.NIP
               ?}
            ?}
         |? KH.PESEL<>''
         || {? KH.PESEL<>DOK.NIP
            || {? g_dokkh1[1]=0 | g_dokkh2[1]<>DOK.KH | g_dokkh3[1]<>DOK.NIP
               || {? FUN.ask('Niezgodność numeru NIP z kartoteką kontrahentów (pole PESEL).\n'
                             'Wypełnić pole numerem PESEL z kartoteki kontrahentów?'@)
                  || DOK.NIP:=KH.PESEL;
                     {? DOK.KH='' || DOK.KH:=KH.SKR ?}
                  ?};
                  g_dokkh1[1]:=1; g_dokkh2[1]:=DOK.KH; g_dokkh3[1]:=DOK.NIP
               ?}
            ?}
         ?}
      ?}
   ?};
   {? DOK.KH_FULL='' || DOK.KH_FULL:=KH.NAZ_P ?};
   {? DOK.MIASTO='' || DOK.MIASTO:=KH.MIASTO ?};
   {? DOK.UL='' || DOK.UL:=KH.UL ?};
   {? DOK.KH_KRISO=null || DOK.KH_KRISO:=KH.KRAJISO ?};
   {? DOK.KH_KRAJ='' || DOK.KH_KRAJ:=KH.KRAJ ?};
   {? DOK.POCZ='' || DOK.POCZ:=KH.POCZ ?};
   {? DOK.DOM='' || DOK.DOM:=KH.DOM ?};
   {? DOK.LOKAL='' || DOK.LOKAL:=KH.LOKAL ?};
   {? DOK.KPOCZ='' || DOK.KPOCZ:=KH.KPOCZ ?};
   _dsv:=exec('slimvat','dok_fks');
   {? exec('kor_spr','dok_fks',1) & _dsv<>date(0,0,0) & DOK.DTO>=_dsv
   || {? exec('slimkh','dok_fks')
      || DOK.D4:=DOK.DTO; exec('be_okrvt','dok_fks',1)
      ?}
   ?}
?};
{? _spr_nip & KH.TYP='R' & |DOK.NIP<>'' & KH.NIP='' & DOK.NIP=KH.PESEL | KH.TYP='I'
|| _spr_nip:=0
?};
{? _spr_nip & _v_ret
|| _v_ret:=exec('nip_ok','#id',DOK.NIP)
?};
{? PAR_SKID.get(120)=DOK.WYS().KOD & PAR_SKID.get(24)='T' & DOK.WYS().KOD<>'' & _v_ret & DOK.NIP<>''
|| _snip:=exec('niptostr','#string',DOK.NIP);
   exec('get_from_gus','dok_fks1')
?};
{? DOK.KH=''
|| DOK.efld_opt(DOK.win_edit('?'),'enable=0, editable=0',DOK,'RB');
   DOK.efld_opt(DOK.win_edit('?'),'enable=0, editable=0',DOK,'RB_V'); win_disp()
|| DOK.efld_opt(DOK.win_edit('?'),'enable=1, editable=1',DOK,'RB');
   DOK.efld_opt(DOK.win_edit('?'),'enable=1, editable=1',DOK,'RB_V'); win_disp()
?};
_v_ret


\parses_amort
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła ustala PARSES dla czynności na podstawie parametru,
::       wskazanie na rekord tabeli OKRO_F jest przekazane poprzez parametr OKRO_F czynności.
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_in:=params_get().in;
_out:=params_get().out;
{? var_pres('OKRO_F',_in) & var_pres('OKRO_F',_in)=type_of(null()) & _in.OKRO_F<>null()
|| OKRO_F.prefix();
   {? OKRO_F.seek(_in.OKRO_F)
   || __PARSES.setVal('OkresRok',OKRO_F.ref());
      _result:=1
   || FUN.emsg('Nie znaleziono wskazanego okresu obrachunkowego.'@)
   ?}
:: jeżeli czynność startowa to parametry z bieżących ustawień pulpitu lub z wyboru użytkownika
|| _result:=1
?};
{? _result
|| {? var_pres('ODD',_in) & var_pres('ODD',_in)=type_of(null()) & _in.ODD<>null()
   || ODD.prefix();
      {? ODD.seek(_in.ODD)
      || __PARSES.setVal('JednostkaKsięgowa',ODD.ref());
         _result:=1
      || FUN.emsg('Nie znaleziono wskazanej jednostki księgowej.'@)
      ?}
:: jeżeli czynność startowa to parametry z bieżących ustawień pulpitu lub z wyboru użytkownika
   || _result:=1
   ?}
?};
_result


\upr_amort
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na uprawnienia do danych dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menadżer Procesów
::   WY: 0 - użytkownik nie ma uprawnień do danych dla czynności
::       1 - użytkownik ma uprawnienia do danych czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;

_result:=0;
USERS.cntx_psh(); USERS.prefix();
{? USERS.seek(_user)
|| {? var_pres('ODD',_in) & var_pres('ODD',_in)=type_of(null()) & _in.ODD<>null()
   || ODD.cntx_psh();
      ODD.index('ODDZIALY');
      ODD.prefix(REF.FIRMA);
      {? ODD.seek(_in.ODD)
      || {? exec('usr_fjks','b_perm',ODD.OD,USERS.ref())
         || _result:=1
         ?}
      ?};
      ODD.cntx_pop()
   ||
:: czy w ogóle user ma uprawnienia do jakiejkolwiek jednostki księgowej
      {? exec('usr_fjks_any','b_perm',USERS.ref())
      || _result:=1
      ?}
   ?}
?};
USERS.cntx_pop();
_result


\znacznik_kasa
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Ustawia znaczniki na raporcie kasowym, dokumentach i ich pozycjach
::  OLD: \znacznik/ksg_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? +DOK.DOKZRODL>=5
|| RAPORT.cntx_psh(); DOKUMENT.cntx_psh(); POZDOK.cntx_psh();
   {? 1+DOK.DOKZRODL<>'k' & +DOK.DOKZRODL>22
   || DOK.DOKZRODL:=15-DOK.DOKZRODL
   ?};
   _maska:=5+(3-DOK.DOKZRODL);
   {? -(3+DOK.DOKZRODL)='krp'
   || _vat_zak:=0;
      RAPORT.use('krp'+_maska); RAPORT.prefix();
      _zwrot:=RAPORT.seek(#(8-DOK.DOKZRODL),'krp'+_maska);
      {? _zwrot
      || DOKUMENT.use('kdo'+_maska); DOKUMENT.index('RAPORT'); DOKUMENT.prefix(RAPORT.ref());
         POZDOK.use('kpd'+_maska); POZDOK.index('DOKUMENT');
         {? DOKUMENT.first()
         || {! |?
                POZDOK.prefix(DOKUMENT.ref());
                {? POZDOK.first()
                || {! |?
                      {? -POZDOK.POZOPER().VAT<>'t' & -POZDOK.ZAKS='t'
                      || POZDOK.ZAKS:='N'; _zwrot:=POZDOK.put()
                      |? _vat_zak=0 & -POZDOK.POZOPER().VAT='t' & -POZDOK.ZAKS='t'
                      || _vat_zak:=1
                      ?};
                      POZDOK.next()
                   !}
                ?};
                _zwrot & DOKUMENT.next()
            !}
         ?};
         {? _zwrot
         || {? _vat_zak
            || RAPORT.STATUS:=exec('rap_stat','kasa_raport',5)
            || RAPORT.STATUS:=exec('rap_stat','kasa_raport',2)
            ?}; _zwrot:=RAPORT.put()
         ?}
      ?}
   |? -(3+DOK.DOKZRODL)='kdo'
   || DOKUMENT.use('kdo'+_maska); DOKUMENT.prefix();
      _zwrot:=DOKUMENT.seek(#(8-DOK.DOKZRODL),'kdo'+_maska);
      {? _zwrot
      || RAPORT.use('krp'+_maska); RAPORT.prefix(); DOKUMENT.RAPORT();
         POZDOK.use('kpd'+_maska); POZDOK.index('DOKUMENT');
         POZDOK.prefix(DOKUMENT.ref());
         {? POZDOK.first()
         || {!|? {? -POZDOK.POZOPER().VAT<>'t' & -POZDOK.ZAKS='t'
                 || POZDOK.ZAKS:='N'; _zwrot:=POZDOK.put()
                 ?};
                 _zwrot & POZDOK.next()
            !}
         ?}
      ?};
      {? _zwrot || exec('ust_stat','dok_fks_aut_dok') ?}
::Poczatek modyfikacji MacLex 08-25-2010 WS [1110]
   |? -(3+DOK.DOKZRODL)='krr'
   || 'dokument podpiety pod nieistniejaca juz tabele';
      1
::Koniec modyfikacji MacLex
   || POZDOK.use('kpd'+_maska); POZDOK.prefix();
      DOKUMENT.use('kdo'+_maska); DOKUMENT.prefix();
      _zwrot:=POZDOK.seek(#(8-DOK.DOKZRODL),'kpd'+_maska);
      {? _zwrot & -POZDOK.ZAKS='t'
      || POZDOK.ZAKS:='N'; _zwrot:=POZDOK.put();
         {? _zwrot
         || POZDOK.index('DOK_ZAKS');
            RAPORT.use('krp'+_maska); RAPORT.prefix();
            DOKUMENT.use('kdo'+_maska); DOKUMENT.index('RAPORT'); DOKUMENT.prefix();
            POZDOK.DOKUMENT().RAPORT();
            DOKUMENT.prefix(RAPORT.ref()); _akc_poz:=0;
            {? DOKUMENT.first()
            || {! |?
                 POZDOK.prefix(DOKUMENT.ref);
                 {? POZDOK.last() & -POZDOK.ZAKS='t' || _akc_poz:=1 ?};
                 ~_akc_poz & DOKUMENT.next()
               !}
            ?};
            {? _akc_poz
            || RAPORT.STATUS:=exec('rap_stat','kasa_raport',5)
            || RAPORT.STATUS:=exec('rap_stat','kasa_raport',2)
            ?}; _zwrot:=RAPORT.put()
         ?}
      ?}
   ?};
   RAPORT.cntx_pop(); DOKUMENT.cntx_pop(); POZDOK.cntx_pop()
|| _zwrot:=1
?};
_zwrot


\dok_pola
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Obsluga dodatkowych pol w dokumencie ksiegowym - edycja
::  OLD: \dok_pola/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.RVAT
|| {? DOK.r_lock(1,1)
   || {? var_pres('okno_dok')<=0 || exec('okna_r','dok_fks',DOK.DOK_REJ().SLO().KOD) ?};
      DOKPOLA.index('UNIK');
      DOKPOLA.prefix(DOK.ref());
      _put:=DOKPOLA.first();
      {? ~_put
      || exec('buf_fill','pola',DOK,DOK.ref(),POLAFAKS,DOKPOLA);
         exec('buf_save','pola',DOK.ref(),POLAFAKS,DOKPOLA)
      ?};
      _okn:=DOKPOLA.mk_edit('Dokument źródłowy - dodatkowe dane'@);
      DOKPOLA.win_ewin(_okn,DOKPOLA,'RED_DOD');
      btn_idp[4]:=DOKPOLA.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Nr dok. &mag.'@],"exec('dokpola_memo','dok_ksef',DOKPOLA,'WZ')");
      DOKPOLA.btn_eopt(_okn,btn_idp[4],'tooltip='+'Numery dokumentów magazynowych'@);
      btn_idp[5]:=DOKPOLA.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Nr fak. za&l.'@],"exec('dokpola_memo','dok_ksef',DOKPOLA,'NRFAZAL')");
      DOKPOLA.btn_eopt(_okn,btn_idp[5],'tooltip='+'Numery faktur zaliczkowych'@);
      btn_idp[6]:=DOKPOLA.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Nr fak. &kor.'@],"exec('dokpola_memo','dok_ksef',DOK,'NRKSEFDK')");
      DOKPOLA.btn_eopt(_okn,btn_idp[6],'tooltip='+'Numery KSeF faktur korygowanych'@);
      btn_idp[3]:=DOKPOLA.win_ebtn(_okn,'text=%1, btn_label_align=center, panel=bottom, align=end'['Zapi&sz'@],"'key:F2'");
      DOKPOLA.btn_eopt(_okn,btn_idp[3],'tooltip='+exec('help_red_ok','#window','Z'));
      _btnan:=DOKPOLA.win_ebtn(_okn,'text=%1, btn_label_align=center, panel=bottom, align=end'['&Anuluj'@],'key:Esc');
      DOKPOLA.btn_eopt(_okn,_btnan,'tooltip='+exec('help_red_esc','#window','A'));
      DOKPOLA.win_edit(_okn);
      exec('edit','dok_ksef',1);
      {? DOK.A='T'
      || DOKPOLA.display()
      || {? DOKPOLA.edit("exec('polafaks_chk','jpk_log',DOKPOLA)")
         || exec('edit','dok_ksef',2)
         ?}
      ?};
      DOK.r_unlock()
   || FUN.info('Dokument obsługuje inny operator.'@)
   ?}
|| FUN.info('Akcja dostępna dla faktur VAT.'@)
?}


\bl_pf_edok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Wartosc poczatkowa pola POZF.EDOKUM
::  OLD: \bl_pf_edok/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('PozFZas')>0 | var_press('PozFEdok')<=0 || null || EDOKUM.ref() ?}


\btn_win_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodaje przyciski do okna pozycji dokumentu księgowego
::   WE: _a - tabela
::       _b - okno grupowe
::----------------------------------------------------------------------------------------------------------------------
_a.grp_splt(_b,'bottom','horizontal','bottom2','23,88%');
_okn:=DOK.mk_edit(,,,,,,'wrapped');
_btn:=DOK.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=top,align=end,display=1'[exec('text_red_zakoncz','#window','D')],"
   {? -menu_txt()='pozycje'
   || exec('zak_dok','dok_fks1')
   || exec('akceptuj','dok_fks1')
   ?};
   {? DOK.get() & DOK.A='T'
   || 'key:Esc'
   || ''
   ?}
");
DOK.btn_eopt(_okn,_btn,'tooltip='+exec('help_red_zakoncz','#window','DK'));
_anuluj:=DOK.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=top,align=end,display=1'['Z&amknij okno'@],"'key:Esc'");
DOK.btn_eopt(_okn,_anuluj,'tooltip='+exec('help_red_esc','#window','P'));
_a.grp_edit(_b,DOK,_okn,,,,,,'maximized');
DOK.btn_eopt(_okn,_btn,'state='+{? DOK.A='T' | var_press('PozView')>0 & PozView | exec('spr_mod','dok_fks') || 'grayed' || 'normal' ?});
~~


\dok_ks_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Sprawdzenie dokumentu przed ksiegowaniem
::   WE: _a - 'P'róbne 'K'oncowe
::       _b - komunikaty? 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
{? DOK.A<>'T'
|| {? _b
   || FUN.info('Dokument \'%1\' jest w trakcie rejestracji.'@[DOK.NK])
   ?};
   0
|? _a='K'
|| {? DOK.ZP<>'T'
   || {? _b
      || FUN.info('Dokument \'%1\' nie jest zaksięgowany próbnie.'@[DOK.NK])
      ?};
      3
   |? DOK.ZK='T'
   || {? _b
      || FUN.info('Dokument \'%1\' jest już zaksięgowany końcowo.'@[DOK.NK])
      ?};
      2
   || 1
   ?}
|? _a='P'
|| {? DOK.ZK='T'
   || {? _b
      || FUN.info('Dokument \'%1\' jest już zaksięgowany końcowo.'@[DOK.NK])
      ?};
      2
   |? DOK.ZP='T'
   || {? _b
      || FUN.info('Dokument \'%1\' jest już zaksięgowany próbnie.'@[DOK.NK])
      ?};
      2
   || 1
   ?}
?}


\por_d_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [BL] [7.60]
:: OPIS: formuła po redagowaniu rodzaju dokumentu w DOK
::   WE: _a - akronim tabelki
::  OLD: \por_d_r/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.DOK_REJ=null()
|| DOK.RVAT:=DOK.DODSLO:=null()
|| {? DOK.DODSLU<>DOK.DOK_REJ().DODSLU
   || DOK.DODSLU:=DOK.DOK_REJ().DODSLU;
      DOK.DODSLO:=null
   ?}
?};
{? DOK.win_edit('?')<>''
|| {? DOK.DOK_REJ<>null & (DOK.DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD')
      & (menu_txt(,)='Ręcznie' | var_pres('dob_dek')>0 | var_press('edi_dok')>0)
   || DOK.efld_opt(DOK.win_edit('?'),'editable=1',DOK,'RVAT')
   || DOK.efld_opt(DOK.win_edit('?'),'editable=grayed',DOK,'RVAT');
      DOK.RVAT:=null()
   ?}
?};
{? var_pres('dob_dek')>0
|| _zwrot:=1;
   {? DOK.DOK_REJ<>null
   || {? ~EDOKUM.TYP().TYPVATPR & typobi=1
      || {? -DOK.DOK_REJ().SLO().KOD<>'vat' & -DOK.DOK_REJ().SLO().KOD<>'sad'
         || FUN.info('Wybrany rodzaj dokumentu musi być typu "Dokument VAT" lub "Dokument SAD".'@);
            _zwrot:=0
         |? -EDOKUM.KOREKTA='t' & -DOK_REJ.KOR<>'t'
         || FUN.info('Wybrany rodzaj dokumentu nie umożliwia rejestracji dokumentów korygujących.'@);
            _zwrot:=0
         ?}
      || {? -DOK.DOK_REJ().SLO().KOD<>'prosty'
         || FUN.info('Wybrany rodzaj dokumentu musi być typu "Dokument prosty".'@);
            _zwrot:=0
         ?}
      ?}
   ?};
   _zwrot
|| 1
?}


\poz_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodanie automatyczne pozycji na podstawie podziałów
::----------------------------------------------------------------------------------------------------------------------
DOK.get();
POZ.index('DOK');
POZ.prefix(DOK.ref);
exec('oblicz_f','dok_fks',1,'D')


\chk_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Sprawdzenie nr dokumentu
::   WE: _a - 1-popraw 0-dołącz
::----------------------------------------------------------------------------------------------------------------------
_nr:=DOK.NR; _i:=exec('numer','dok_fks',_a);
{? _i=1
|| FUN.info('Dokument o numerze %1 już istnieje.\nProszę zmienić numer dokumentu.'@[$_nr]);
   0
|| 1
?}


\ae_grvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Po redakcji pola GRVAT tabeli VPOZ
::  OLD: \ae_grvat/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? VPOZ.GRVAT & PAR_SKID.get(83)='T' & ROZNE.GRVAT<>VPOZ.GRVAT
|| {? exec('gr_pod_typ','dok_fks',VPOZ.GRVAT().GRVAT().KOD)=1 & ~(SLO.KOD='ZakuPods' | SLO.KOD='ZInwPods')
   || VPOZ.C_PREWSK:=VPOZ.C_PROC_S:=1
   || VPOZ.C_PREWSK:=VPOZ.C_PROC_S:=0
   ?}
?};
ROZNE.GRVAT:=VPOZ.GRVAT;
ROZNE.GR_VAT:=VPOZ.GRVAT().GRVAT;
exec('setvatodl','dok_fks');
1


\add_vat_sr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodanie informacj o nabyciu środka trwałego do korekty podatku VAT
::----------------------------------------------------------------------------------------------------------------------
_vat:=0; VAT7.TRYB:=0; VAT7.WYP:=1; VAT7.ROK:=null;
VAT_SR.win_edit('RED_PR');
VAT_SR.prefix(REF.FIRMA);
VAT_SR.blank();
{!
|? VAT_SR.INR:='';
   VAT_SR.NST:=DOK.TR;
   VAT_SR.OKRES:=SSTALE.AO;
   VAT_SR.DOK:=VPOZ.DOK;
   VAT_SR.VAT:=VPOZ.VAT$2-_vat$2;
   VAT_SR.PROC:={? VPOZ.C_PROC_S || VAT_SR.OKRES().ROK().PROC_VAT || 100 ?};
   VAT_SR.PROC_PR:={? PAR_SKID.get(83)<>'T'
                   || 100
                   |? VPOZ.C_PREWSK
                   || {? VAT_SR.OKRES().ROK().POCZ_ROK~1<2016
                      || 100
                      || ROK_F.PREWSK
                      ?}
                   || 100
                   ?};
   exec('ust_vats','dok_fks');
   {? VAT_SR.edit("exec('chk_vats','dok_fks')")
   || {? VAT_SR.add() || _vat+=VAT_SR.VAT$2 ?};
      _vat$2<VPOZ.VAT$2
   ?}
!}


\ust_vats
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula przed akcja Popraw okienka WER tabeli VAT_SR
::  OLD: \ust_vats/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
{? -menu_txt(,)='popraw'
|| VAT_KW.index('VAT_KW');
   VAT_KW.prefix(VAT_SR.ref);
   VAT7.TRYB:=VAT_KW.first()
?};
{? VAT_SR.OKRES=null | VAT_SR.DOK=0
|| {? VAT7.WYP
   || VAT7.SYM_N:=DOK.NK;  VAT7.DATA_N:=DOK.DTO;
      VAT7.REJ_N:=DOK.REJ; VAT7.ODD_N:=DOK.REJ().ODD; VAT7.RVAT_N:=DOK.RVAT().RVAT;
      VAT7.NR_N:=DOK.NR
   || VAT7.SYM_N:=''; VAT7.DATA_N:=date(0,0,0);
      VAT7.REJ_N:=VAT7.ODD_N:=VAT7.RVAT_N:=null;
      VAT7.NR_N:=0
   ?}
|| DOK.cntx_psh();
   DOK.use('doku'+VAT_SR.OKRES().ROK().KOD+form(VAT_SR.OKRES().NR,-2));
   DOK.prefix();
   {? DOK.seek(VAT_SR.DOK)
   || VAT7.SYM_N:=DOK.NK;  VAT7.DATA_N:=DOK.DTO;
      VAT7.REJ_N:=DOK.REJ; VAT7.ODD_N:=DOK.REJ().ODD; VAT7.RVAT_N:=DOK.RVAT().RVAT;
      VAT7.NR_N:=DOK.NR
   ?};
   DOK.cntx_pop()
?};
{? VAT_SR.OKRES || VAT7.ROK_N:=VAT_SR.OKRES().ROK || VAT7.ROK_N:=SSTALE.AR ?};
{? VAT_SR.OKRES_S=null | VAT_SR.DOK_S=0
|| VAT7.SYM_S:=''; VAT7.DATA_S:=date(0,0,0);
   VAT7.REJ_S:=VAT7.ODD_S:=null;
   VAT7.NR_S:=0
|| DOK.cntx_psh();
   DOK.use('doku'+VAT_SR.OKRES_S().ROK().KOD+form(VAT_SR.OKRES_S().NR,-2));
   DOK.prefix();
   {? DOK.seek(VAT_SR.DOK_S)
   || VAT7.SYM_S:=DOK.NK;  VAT7.DATA_S:=DOK.DTO;
      VAT7.REJ_S:=DOK.REJ; VAT7.ODD_S:=DOK.REJ().ODD;
      VAT7.NR_S:=DOK.NR
   ?};
   DOK.cntx_pop()
?};
{? VAT_SR.OKRES_S || VAT7.ROK_S:=VAT_SR.OKRES_S().ROK || VAT7.ROK_S:=null ?}


\chk_vats
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Walidacja VAT_SR
::  OLD: \chk_vats/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
_p:=__CHK.record3(
   VAT_SR,'INR',,
   VAT_SR,'NST',,
   VAT_SR,'OKRES',,
   VAT7,'ODD_N','Jednostka księgowa',
   VAT7,'REJ_N','Rejestr',
   VAT7,'NR_N','Nr',
   VAT_SR,'VAT',,
   VAT_SR,'ILE_LAT',);
{? _p=''
|| _ref:=VAT_SR.ref();
   VAT_SR.cntx_psh();
   VAT_SR.index('OK');
   VAT_SR.prefix(REF.FIRMA,VAT_SR.OKRES,VAT_SR.INR);
   {? VAT_SR.first() & (-menu_txt()<>'popraw' | _ref<>VAT_SR.ref())
   || FUN.info('Istnieje nabycia środka \'%1\' w okresie %2 %3.'@[VAT_SR.INR,VAT_SR.OKRES().NAZ,VAT_SR.OKRES().ROK().NAZ]);
      _p:='INR'
   ?};
   VAT_SR.cntx_pop()
?};
{? _p='' & (VAT_SR.PROC<0 | VAT_SR.PROC>100)
|| FUN.info('Należy wprowadzić wartość od 0 do 100.'@); _p:='PROC'
|? _p='' & VAT_SR.PROC_PR<0 | VAT_SR.PROC_PR>100
|| FUN.info('Należy wprowadzić wartość od 0 do 100.'@); _p:='PROC_PR'
|| {? VAT7.WYP || VAT_SR.DOK:=DOK.ref() ?}
?};
_p


\rodz_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Funkcja wywolywana na Dolacz w okienku wertowania dokumentow zrodlowych DOK
::       Służy do wyboru rodzaju redagowanego dokumentu
::   WE: [_a] - z czynności startowej? 1-tak [0]-nie
::  OLD: \rodz_dok/dok_zrd2.fml
::  OLD: \rodz_dok/!fks_dks_dark.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__KORNAG')>0
|| return(1)
?};
{? var_pres('__ten_rej')=7 & __ten_rej<>REJ.ref() || REJ.seek(__ten_rej) ?};
POMOC.D:=POMOC.V:=null;
::Poczatek modyfikacji dla Maclex Fiks 04-03-2009 Pawelm [1040]
MLEX_OKN.CZY_RBAN:='N';
::Koniec modyfikacji dla Maclex
REJ.win_dict('SLO1');
_err:=0;
{? -SSTALE.AO().ZAM<>'t' & exec('is_okr_blck','!zws_par_aokr',SSTALE.AO,OPERATOR.USER,1)=0
|| SSTALE.AR();
   {? SSTALE.AO().NAZ='Bilans otwarcia' & ~exec('first_rok','okresy',ROK_F.ref())
   || _jest:=0;
      {? var_pres('czystart')>0 & czystart=1
      || {? OPERATOR.DEPT
         || POMOC.ODDD:=OPERATOR.DEPT; _jest:=1
         || exec('odd_filtr','fst');
            POMOC.ODDD:=null;
            POMOC.win_edit('DOK_ADD2');
            {? POMOC.edit()
            || _jest:=1
            || _jest:=-1
            ?}
         ?};
         {? _jest
         || REJ.index('KOD'); REJ.prefix(ROK_F.ref(),POMOC.ODDD,'~BO');
            {? REJ.first()
            || _jest:=1
            || _jest:=-1;
               FUN.info('Nie zdefiniowano rejestru ~BO w jednostce księgowej '+POMOC.ODDD().OD)
            ?}
         ?}
      || _jest:=1
      ?};
      {? _jest>0
      || DOK_REJ.index('NAZ'); DOK_REJ.prefix(REJ.ref());
         {? DOK_REJ.first()
         || {! |? _jest:=DOK_REJ.SLO().KOD='KOR_BO'; _jest=0 & DOK_REJ.next() !}
         ?}
      ?};
      {? _jest>0
      || POMOC.D:=DOK_REJ.ref();
         exec('dok_edit1','dok_fks',exec('okna_r','dok_fks',POMOC.D().SLO().KOD));
         exec('okna_r_btn','dok_fks',1,1,1); 1
      |? _jest=0
      || FUN.info('Nie zdefiniowano typu dokumentu "KOR_BO" - Korekta bilansu otwarcia '+
                  '\ndla rejestru ~BO.'@); 0
      || 0
      ?}
   || _ok:=0;
      POMOC.win_edit('DOK_ADD1');
      {? _
      || POMOC.D:=POMOC.V:=POMOC.ODDD:=POMOC.REJD:=POMOC.DZ:=null;
         _ok:=params_exec('set_from_in','dok_fks');
         {? OPERATOR.DEPT & exec('usr_fjks','b_perm',OPERATOR.DEPT().OD)
         || POMOC.ODDD:=OPERATOR.DEPT
         ?}
      |? ~_ & var_pres('czystart')<=0 & TREE_REJ.G_R<>'R'
      || POMOC.D:=POMOC.V:=POMOC.ODDD:=POMOC.REJD:=POMOC.DZ:=null;
         {? TREE_REJ.G_R='J'
         || ODD.cntx_psh(); ODD.prefix();
            {? ODD.seek(BB.sqlint(TREE_REJ.REF),form(8+TREE_REJ.REF)) || POMOC.ODDD:=ODD.ref() ?};
            ODD.cntx_pop()
         |? TREE_REJ.G_R='G'
         || REJ.cntx_psh();
            GR_DOK.cntx_psh(); GR_DOK.prefix();
            {? GR_DOK.seek(BB.sqlint(TREE_REJ.REF),form(8+TREE_REJ.REF))
            || POMOC.ODDD:=GR_DOK.REJ().ODD; POMOC.REJD:=GR_DOK.REJ; POMOC.DZ:=GR_DOK.ref()
            ?};
            GR_DOK.cntx_pop(); REJ.cntx_pop()
         ?};
         _ok:=params_exec('set_from_in','dok_fks')
      || POMOC.ODDD:=REJ.ODD; POMOC.REJD:=REJ.ref(); POMOC.DZ:=null;
         exec('ust_rej','dok_fks',REJ.ref());
         {? DOK_REJ.size()=1 & (
         ((DOK_REJ.SLO().KOD='VAT' | DOK_REJ.SLO().KOD='SAD') & VAT_REJ.size()=1) |
         (DOK_REJ.SLO().KOD<>'VAT' & DOK_REJ.SLO().KOD<>'SAD')
         )
         || {? var_pres('__STORNO')>0 & POMOC.D().M_ODD='T'
            || FUN.info('Rodzaj dokumentów w rejestrze\ndotyczy wielu jednostek księgowych.\nOperacja niedozwolona.'@);
               _err:=1
            ?};
            _ok:=1
         ?};
         {? _ok
         || _ok:=POMOC.REJD().CZY_DZ<>'T'
         ?};
         {? var_pres('__STORNO')>0 & _err=0
         || DOK_REJ.cntx_psh();
            _all:=0;
            {? DOK_REJ.first()
            || _all:=1;
               {!
               |? _all:=DOK_REJ.M_ODD='T';
                  _all & DOK_REJ.next()
               !}
            ?};
            DOK_REJ.cntx_pop();
            {? _all
            || FUN.info('Rodzaje dokumentów w rejestrze\ndotyczą wielu jednostek księgowych.\nOperacja niedozwolona.'@);
               _ok:=1;
               _err:=1
            ?}
         ?}
      ?};
      _akc:=POMOC.AKC;
      POMOC.AKC:='O';
      {? ~_ok
      || POMOC.efld_opt(POMOC.win_edit('?'),'enable=1, mark=0',POMOC,'V');
         exec('odd_filtr','fst');
         GR_DOK.actions('SLO_DZ','DPU:D');
         _ok:=POMOC.edit("
         {? ~POMOC.ODDD
         || __CHK.err_empty('Jednostka księgowa'@); 'ODDD'
         |? ~POMOC.REJD
         || __CHK.err_empty('Rejestr księgowy'@); 'REJD'
         |? POMOC.REJD().CZY_DZ='T' & ~POMOC.DZ
         || __CHK.err_empty('Dokument zbiorczy'@); 'DZ'
         |? ~POMOC.D
         || __CHK.err_empty('Rodzaj dokumentu'@); 'D'
         |? (POMOC.D().SLO().KOD='BO' | POMOC.D().SLO().KOD='KOR_BO') & SSTALE.AO().NR<>0
         || FUN.info('Dokumenty BO można wprowadzać tylko w okresie \"Bilans Otwarcia\".'@); 'D'
         |? var_pres('__STORNO')>0 & POMOC.D().M_ODD='T'
         || FUN.info('Rodzaj dokumentu dla wielu jednostek księgowych.'@); 'D'
         |? var_pres('__STORNO')>0 & POMOC.D().KOR_NAG='T'
         || FUN.info('Dokumentów tego rodzaju nie można kopiować.'@); 'D'
         |? (POMOC.D().SLO().KOD='VAT' | POMOC.D().SLO().KOD='SAD') & ~POMOC.V
         || __CHK.err_empty('Rejestr VAT'@); 'V'
         || 1
         ?}");
         GR_DOK.actions('SLO_DZ')
     ?};
     POMOC.AKC:=_akc;
     POMOC.ODDD(); POMOC.REJD();
     exec('dok_edit1','dok_fks',exec('okna_r','dok_fks',POMOC.D().SLO().KOD));
     POMOC.D();
     _apar:=_bpar:=var_pres('__STORNO')<=0 & (var_press('DokBez')<=0 | DokBez<2);
     exec('okna_r_btn','dok_fks',_apar,_bpar,1);
     _ok & ~_err
   ?}
|| {? -SSTALE.AO().ZAM='t'
   || FUN.info('Okres %1 %2 został zamknięty.\nDołączenie dokumentu jest niemożliwe.'@[SSTALE.AO().NAZ,SSTALE.AR().NAZ])
   ?};
   0
?}


\set_from_in
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia zmienne na podstawie parametrów wejściowych czynności
::  OLD: \set_from_in/!fks_dks_dark.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
{? var_press('in',_par)>0
|| _in:=_par.in;
   {? var_press('DOK',_in)<=0
   || _odd:={? var_press('ODD',_in)>0 || _in.ODD || '' ?};
      _rej:={? var_press('REJ',_in)>0 || _in.REJ || '' ?};
      _drej:={? var_press('DOK_REJ',_in)>0 || _in.DOK_REJ || '' ?};
      {? _odd<>'' & (POMOC.ODDD=null | POMOC.ODDD().OD=_odd)
      || ODD.cntx_psh();
         ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA,_odd,);
         POMOC.ODDD:={? ODD.first() & exec('usr_fjks','b_perm',_odd) || ODD.ref() || null ?};
         ODD.cntx_pop();
         {? POMOC.ODDD & _rej<>'' & (POMOC.REJD=null | POMOC.REJD().KOD=_rej)
         || REJ.cntx_psh();
            REJ.index('KOD'); REJ.prefix(SSTALE.AR,POMOC.ODDD,_rej,);
            POMOC.REJD:={? REJ.first() || REJ.ref() || null ?};
            REJ.cntx_pop();
            {? POMOC.REJD & _drej<>''
            || DOK_REJ.cntx_psh();
               DOK_REJ.index('NAZ'); DOK_REJ.prefix(POMOC.REJD);
               POMOC.D:={? DOK_REJ.find_key(_drej,) || DOK_REJ.ref() || null ?};
               DOK_REJ.cntx_pop();
               {? POMOC.D
               || {? POMOC.D().SLO().KOD='VAT' | SLO.KOD='SAD'
                  || VAT_REJ.cntx_psh();
                     VAT_REJ.index('REJ_SYM'); VAT_REJ.prefix(POMOC.REJD);
                     {? VAT_REJ.first()
                     || {? ~VAT_REJ.next()
                        || POMOC.V:=VAT_REJ.ref()
                        || VAT_REJ.first();
                           {!
                           |? {? VAT_REJ.DM='T' || POMOC.V:=VAT_REJ.ref() ?};
                              POMOC.V=null & VAT_REJ.next()
                           !}
                        ?}
                     ?};
                     VAT_REJ.cntx_pop()
                  ?};
                  _err:=(POMOC.D().SLO().KOD='BO' | POMOC.D().SLO().KOD='KOR_BO') & SSTALE.AO().NR<>0 |
                        (POMOC.D().SLO().KOD='VAT' | POMOC.D().SLO().KOD='SAD') & ~POMOC.V;
                  ~_err
               ?}
            ?}
         ?}
      ?}
   ?}
?}


\ust_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustawianie rodzaju dokumentu i rejestru VAT przy dodawaniu dokumentu
::   WE: _a - ref rejestru (REJ.ref())
::  OLD: \ust_rej/!fks_dks_dark.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.D:=POMOC.V:=null;
REJ.cntx_psh(); REJ.prefix();
{? _a & REJ.seek(_a)
|| DOK_REJ.cntx_psh(); DOK_REJ.index('NAZ'); DOK_REJ.prefix(REJ.ref());
   {? DOK_REJ.size()=1
   || {? DOK_REJ.first() || POMOC.D:=DOK_REJ.ref() ?}
   || DOK_REJ.prefix();
      DOK_REJ.blank(1); DOK_REJ.REJ:=REJ.ref(); DOK_REJ.DM:='T';
      {? DOK_REJ.find_rec() || POMOC.D:=DOK_REJ.ref() ?}
   ?};
   DOK_REJ.cntx_pop();
   {? POMOC.D().SLO().KOD='VAT' | POMOC.D().SLO().KOD='SAD'
   || VAT_REJ.index('REJ_SYM');   VAT_REJ.prefix(REJ.ref);
      {? VAT_REJ.size()=1
      || {? VAT_REJ.first() || POMOC.V:=VAT_REJ.ref() ?}
      || VAT_REJ.prefix();
         VAT_REJ.blank(1); VAT_REJ.REJ:=REJ.ref(); VAT_REJ.DM:='T';
         {? VAT_REJ.find_rec() || POMOC.V:=VAT_REJ.ref() ?}
      ?}
   ?};
   DOK_REJ.prefix(REJ.ref());  VAT_REJ.prefix(REJ.ref())
?};
REJ.cntx_pop()


\param_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Wywoływana przy akcji "Dołącz" i "Popraw" okienek wwertowania tabeli DOK.
::  OLD: \param_p/dok_zrd.fml
::  OLD: \param_p/!fks_dks_dark.fml
::----------------------------------------------------------------------------------------------------------------------
SLOSLU.SLSLU:='';
{? DOK.OKRVAT=0
|| PARAM.ROK:=SSTALE.AR;
   PARAM.OKRES:=SSTALE.AO;
   PARAM.OKROVAT:={? +SSTALE.AO().NAZ || SSTALE.AO().NAZ+'/'+SSTALE.AR().NAZ || '' ?};
   PARAM.OKROTXT:=SSTALE.AO().NAZ
|| PARAM.ROK:=DOK.OKRVAT().ROK;
   PARAM.OKRES:=DOK.OKRVAT;
   PARAM.OKROVAT:={? +DOK.OKRVAT().NAZ || DOK.OKRVAT().NAZ+'/'+DOK.OKRVAT().ROK().NAZ || '' ?};
   PARAM.OKROTXT:=DOK.OKRVAT().NAZ
?}


\dol_dok3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dołączanie dokumentu - wewnętrzna
::   WY: 1/0 - czy udało sie dołączyć dokument
::  OLD: \dol_dok3/!fks_dks_dark.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
{? exec('is_okr_blck','!zws_par_aokr',SSTALE.AO,OPERATOR.USER) || return(0) ?};
{! |?
   _nr:=DOK.NR; _i:=exec('numer','dok_fks',var_pres('dolndok')>0 & dolndok>0);
   {? _i=1
   || FUN.info('Dokument o numerze %1 już istnieje.\nProszę zmienić numer dokumentu.'@[$_nr]);
      DOK.edit("exec('dok_spr','dok_fks')")
   || 0
   ?}
!};
:: wtyczka uzupełniająca dane dodatkowe dokumentu
{? Plugin.exists('DOK_DANE_DOD') || Plugin.run('DOK_DANE_DOD') ?};
{? dolndok=2 || dolndok:=1 ?};
{? -SSTALE.AO().ZAM<>'t' & exec('is_okr_blck','!zws_par_aokr',SSTALE.AO,OPERATOR.USER,0)=0
|| {? DOK.NR<>0
   || {! |?
         {? DOK.add(1)
         || {? var_pres('dolndok')>0 || dolndok:=1 ?};
            exec('edit','dok_ksef',2);
            VAR_DEL.delete('__dokdodany');
            __dokdodany:=1;
            DOK.memo_put(,'NRKSEFDK');
            {? ROZNE.GR_DOK<>null || exec('add_poz','dok_fks',ROZNE.GR_DOK,'DOK') ?};
            _ok:=1;
            {? _a=0
            || {? DOK.r_lock(1,1)
               || exec('putbloby','dok_fks');
                  {? DOK.DOK_REJ().PR='T' || exec('dokpradd','dok_fks') ?};
                  {? DOK_REJ.KOR_NAG='T' & POMOC.KNAG=1
                  || DOKN.KN:=$DOK.ref();
                     DOKN.ODD:=DOK.ODD;
                     DOKN.use('dokn'+(ref_name(DOK.ref())+4));
                     DOKN.add(1); DOK.KN:=$DOKN.ref(); DOK.put()
                  ?};
                  {? var_press('schDOK')>0
                  || exec('run_auto','fks_auto')
                  ?};
                  {? var_press('DokBez')<=0 | DokBez=0
                  || exec('poz_dok','dok_fks');
                     dolndok:=2
                  ?};
                  DOK.r_unlock()
               || FUN.info('Dokument obsługuje inny operator.'@)
               ?}
            || exec('putbloby','dok_fks')
            ?}; 0
         || _nr:=DOK.NR; _i:=exec('numer','dok_fks',1);
            {? _i=1
            || FUN.info('Dokument o numerze %1 już istnieje.\nProszę zmienić numer dokumentu.'@[$_nr]);
               DOK.edit("exec('dok_spr','dok_fks')")
            || 0
            ?}
         ?}
      !}
   ?}
|| FUN.info('Okres %1 %2 został zamknięty.\nDołączenie dokumentu jest niemożliwe.'@[SSTALE.AO().NAZ,SSTALE.AR().NAZ])
?};
_ok


\dol_dok2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Dołączanie dokumentu - wewnętrzna
::  OLD: \dol_dok2/dok_zrd.fml
::  OLD: \dol_dok2/!fks_dks_dark.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.D().KOR_NAG='T'
|| {? var_pres('__KORNAG')<=0
   || POMOC.KNAG:=1+FUN.ask('Korekta nagłówkowa ze wskazaniem?'@);
:     POMOC.KNAG = 0 normalna obsługa
:                = 1 bez wskazania
:                = 2 ze wskazaniem DOKa korygowanego
      {? POMOC.KNAG=1
      || DOKN.blank();
         DOK.hdr_edit(' - Korekta nagłówkowa prosta'@);
         exec('main','knag')
      |? POMOC.KNAG=2
      || _okno:=DOK.win_edit('?');
         POMOC.DOK1:=DOK.ref();
         exec('okna_r_btn','dok_fks',0,0,1);
         _ret:=exec('wyb_dok','fks_auto',1);
         POMOC.DOK1:=null();
         {? _ret=1
         || exec('utw_vpoz','fks_auto',DOK.ref(),1);
            return(1)
         |? _ret=2
         || return(0)
         || FUN.info('Zrezygnowano z wprowadzania korekty nagłówkowej.'@);
            return(0)
         ?};
         DOK.win_edit(_okno)
      || FUN.info('Zrezygnowano z wprowadzania korekty nagłówkowej.'@);
         return(0)
      ?}
   ?}
|| POMOC.KNAG:=0
?};
VAR_DEL.delete('g_dokkh1','g_dokkh2','g_dokkh3','DokPyt','ok_nk');
g_dokkh1:=obj_new(2); g_dokkh1[1]:=g_dokkh1[2]:=0;
g_dokkh2:=obj_new(2); g_dokkh2[1]:=g_dokkh2[2]:='';
g_dokkh3:=obj_new(2); g_dokkh3[1]:=g_dokkh3[2]:='';
DokPyt:=exec('dokpyt','dok_fks',1);
ROZRACH.TABELA:='DOK';
DOK.bl_file('E_DOC',0); DOK.bl_file('E_DOCP',0);
_ok:=0;
GR_DOK.cntx_psh();
{? DOK.REJ().CZY_DZ='T' & DOK.DZ
|| GR_DOK.prefix(REF.FIRMA);
    {? GR_DOK.seek(DOK.DZ) || _gr_rlck:=GR_DOK.r_lock(0,0,1) || _gr_rlck:=-1 ?}
|| _gr_rlck:=2
?};
exec('btn_raty','dok_fks');
_dpolas:=DOKPOLA.name();
{? var_pres('__doksprref')>0 & __doksprref<>''
|| DOKPOLA.use('dokp'+(ref_name(__doksprref)+4))
|? var_pres('dok')>0 & var_pres('__STORNO')>0
|| DOKPOLA.use('dokp'+(ref_name(dok)+4))
?};
exec('edit','dok_ksef',_a);
DOKPOLA.use(_dpolas);
exec('dokum_seek','zbl',~~);
{? var_pres('__STORNO')<=0 || DOK.memo_set('','NRKSEFDK') ?};
{? _gr_rlck>0 & DOK.edit("exec('dok_spr','dok_fks')")
|| _ok:={? var_pres('dolndok')>0 & dolndok=1
        || DOK.put();
           exec('edit','dok_ksef',2)
        || exec('dol_dok3','dok_fks',_a,0);
           {? dolndok=1 & DOK.DOK_REJ().KOR_NAG='T' & POMOC.KNAG=2
           || _new_ref:=$DOK.ref();
               DOK.KN:=DOKN.KN; DOK.put();
::             kopiowanie podmiotów
               exec('fakskh_copy','faktury_wspolne',exec('FindAndGet','#table',DOK,DOK.KN,,,null()),DOK.ref());
               DOK.cntx_psh();
               DOK.use(8+DOKN.KN);
               DOK.prefix();
               {? DOK.seek(BIT.sqlint(8-DOKN.KN),) || DOK.KN:=_new_ref; DOK.put() ?};
               DOK.cntx_pop()
           |? dolndok=1 & DOK.DOK_REJ().KOR_NAG<>'T' & POMOC.KNAG=0
           || exec('fakskh_copy','faktury_wspolne',{? var_pres('dok')>0 || dok || null() ?},DOK.ref())
           ?};
           {? dolndok<>1 || dolndok:=2 ?}
        ?};
        VAR_DEL.delete('__dokdodany')
?};
VAR_DEL.delete('edit_dok');
{? _ok=0 & var_pres('dolndok')>0 || _ok:=dolndok ?};
{? _gr_rlck=1 & DOK.REJ().CZY_DZ='T' & DOK.DZ
|| GR_DOK.r_unlock
|? _gr_rlck=-1
|| FUN.info('Dokument zbiorczy\nzostał usunięty przez innego operatora.'@)
?};
DOK.bl_file('E_DOC',1); DOK.bl_file('E_DOCP',1);
GR_DOK.cntx_pop();
VAR_DEL.delete('pamietaj','beNkSymZew');
_ok


\btn_raty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia formułę F3 dla pola termin płatności
::  OLD: \btn_raty/!fks_dks_dark.fml
::----------------------------------------------------------------------------------------------------------------------
{? okno_dok<>'DOK_PRO' & okno_dok<>'DOK_WEWZ' & okno_dok<>'DOK_WEWS' & okno_dok<>'DOK_KOR1' & okno_dok<>'DOK_KORN' & DOK_REJ.KOR_NAG<>'T'
|| DOK.btn_eopt(DOK.win_edit('?'),'RATY','state='+
      {? DOK.DOK_REJ().PR='T' & ~(1+menu_txt(,)='D' | 1+menu_txt(,)='T' | var_pres('dob_dek')>0)
      || 'normal'
      || 'grayed'
      ?}
   )
?};
~~


\anuluj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Uruchamia wycofywanie akceptacji dokumentów
::   WE: [_a] - pokazywac komunikaty? [1]-tak 0-nie
::  OLD: \anuluj/akcept.fml
::----------------------------------------------------------------------------------------------------------------------
KOMT:='';
{? _=0 || _a:=1 ?};
{? exec('czy_okr_zam_con','konsolidacja',DOK.sel_size()=0 & _a)
|| return(0)
|? DOK.sel_size()=0
|| _ok:=1;
   {? exec('spr_mod','dok_fks')
   || {? _a
      || FUN.info('Dokument wtórny do dokumentu dla wielu jednostek księgowych.\nWycofanie akceptacji nie jest możliwe.'@)
      ?};
      _ok:=0
   |? DOK.ZK='T'
   || {? _a
      || FUN.info('Dokument został zaksięgowany końcowo.'@)
      ?};
      _ok:=0
   |? DOK.ZP='T'
   || {? _a
      || FUN.info('Dokument został zaksięgowany próbnie.'@)
      ?};
      _ok:=0
   |? DOK.A='N'
   || {? _a
      || FUN.info('Dokument nie ma zakończonej rejestracji.'@)
      ?};
      _ok:=0
   ?};
   {? _ok
   || {? ~exec('wyc_dok','dok_fks',1)
      || {? _a
         || FUN.info('Dokument %1.\nWycofanie akceptacji nie powiodło się.%2'@[DOK.NK,KOMT])
         ?}
      ?}
   ?}
?};
VAR_DEL.delete('KOMT');
~~


\wyc_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Wycofywanie dokumentu - wewnętrzna
::  OLD: \wyc_dok/akcept.fml
::----------------------------------------------------------------------------------------------------------------------
_dok_mod:=exec('spr_mod','dok_fks');
_ok:=0;
{? DOK.get() & -DOK.A='t'
|| {? _a || echo('Proszę czekać ...'@) ?};
   {? DOK.r_lock(1,1)
   || {? ~_dok_mod || do() ?};
      DOK.get();
      KOMT:='';
      {? _dok_mod & DOK.ZP='T'
      || exec('wycofaj','dok_fks_ks',1)

      ?};
      {? DOK.A='T'
      || {? exec('wyc_dod','dok_fks')
         || _ok:=1;
           exec('fakskh_auto_del','faktury_wspolne',DOK.ref());
            DOK.A:='N';
            DOK.ZAA:='';
            {? PAR_SKID.get(81)='T' || DOK.WSK_XD:='N' ?};
            DOK.DAKC:=DOK.DKS:=date(0,0,0);
            DOK.cntx_psh(); DOK.prefix(); DOK.put(); DOK.cntx_pop()
         || undo()
         ?}
      ?};
      {? _ok & DOK.DOK_REJ().M_ODD='T'
      || _ok:=exec('anu_mod','dok_fks',_a)
      ?};
      {? _a || echo() ?};
      {? ~_dok_mod
      || {? _ok || _ok:=end() || end() ?}
      ?};
      DOK.r_unlock();
      _ok
   || KOMT:='\nDokument zablokowany przez innego operatora\n'
            'wycofanie akceptacji nie jest możliwe'@;0
   ?}
?}


\wyc_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Wycofuje akceptację pozycji dokumentu
::  OLD: \wyc_dod/akcept.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.index('DOK'); POZ.prefix(DOK.ref());
_ok:=DOK.DOK_REJ().M_ODD='T';
{? POZ.first()
|| {! |?
      POZ.A:='N'; _ok:=POZ.put();
      _ok & POZ.next()
   !}
|| _ok:=DOK_REJ.PUDEK='T'
?};
_ok


\anu_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Anulowanie akceptacji dokumentow wtornych
::   WY: 1 - powodzenie, 0 - niepowodzenie
::  OLD: \anu_mod/akcept.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
DOK.cntx_psh();
_refsql:=$DOK.ref();
_refdok:=DOK.ref();
DOK.clear();
DOK.index('DOKZRODL');
DOK.prefix(_refsql,_refsql);
{? DOK.first()
|| {! |?
      {? ~exec('wyc_dok','dok_fks',0)
      || _ret:=0;
         KOMT:='\nNieudane wycofanie akceptacji dokumentów wtórnych!\n'@;
         undo()
      ?};
      _ret & DOK.next()
   !}
|| _ret:=2
?};

:: Przeniesienie pozycji do dokumentu dla wielu jednostek ksiegowych
POZ.cntx_psh();
POZ.clear();
{? _ret=1
|| POZ.index('DOK_MOD');
   POZ.prefix(_refdok);
   {? POZ.first()
   || {! |?
         POZ.DOK:=_refdok;
         POZ.POZ:=POZ.POZ_MOD;
         {? ~POZ.put()
         || _ret:=0;
            KOMT:='\nNieudane przeniesienie pozycji do dokumentu dla wielu jednostek księgowych.\n'@;
            undo()
         ?};
         _ret & POZ.next()
      !}
   ?}
?};
POZ.cntx_pop();
DOK.cntx_pop();
_ret


\dol_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Dołączanie dokumentu
::  OLD: \dol_dok/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.blank();
{? var_press('JPK_V_T',DOK)>0 & var_press('JPK_V_T',DOK_REJ)>0 || DOK.JPK_V_T:=DOK.DOK_REJ().JPK_V_T ?};
{? DOK.ODD=null || REJ.cntx_psh(); DOK.ODD:=DOK.REJ().ODD; REJ.cntx_pop() ?};
exec('gr_bufor','dok_fks');
_d:=DOK.DOK_REJ().SLO().KOD;
exec('wal_edi_dok','dok_fks',DOK.win_edit('?'));
{? _d='VAT' | _d='SAD'
|| DOK.RVAT().RVAT();
   DOK.KRAJ:={? RVAT.KRAJ=null || exec('kod_pl','slo_slu') || RVAT.KRAJ ?};
   DOK.JORG:=exec('ust_vwal','kraje',DOK.KRAJ().KOD);
   {? exec('czy_obwl','dok_fks')
   || DOK.KH:=XINFO.SKROT;
      NIPY.index('SNIP_F'); NIPY.prefix(REF.S_FIRMA);
      {? NIPY.first() & NIPY.size()=1 || DOK.NIP:=exec('nip_ue','kontrahent') ?}
   ?};
   MLEX_OKN.CZY_RBAN:='N'
|? _d='WEW'
|| DOK.KRAJ:=exec('kod_pl','slo_slu');
   DOK.JORG:=exec('ust_vwal','kraje',DOK.KRAJ().KOD)
|| MLEX_OKN.CZY_RBAN:={? DOK.DOK_REJ().CZY_RRB<>'' || DOK.DOK_REJ().CZY_RRB || 'N' ?}
?};
exec('param_p','dok_fks');
exec('dol_dok2','dok_fks',0)


\czy_obwl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula sprawdza, czy dokument VAT dotyczy wewnatrzwspolnotowych
::       przemieszczen wlasnych
::  OLD: \czy_obwl/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.RVAT().RVAT();
_r:=RVAT.KVAT().SYM;
1+_r='_' & _r+1='w'


\ae_kurs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41]
:: OPIS: Na podstawie wprowadzonych dwoch wartosci oblicza trzecia
::       (kwota w walucie, kurs, kwota w walucie narodowej).
::       Kontroluje zgodnosc rachunkowa.
::   WE: _a - 1,2,3
::   WY: 0 - powrot do redakcji, 1 - wyjscie
::  OLD: \ae_kurs/skid.fml
::----------------------------------------------------------------------------------------------------------------------
jedn:=1;
{? POZ.WAL<>0
|| FINFO.SLWAL().SLU();
   RS.cntx_psh(); RS.index('RS'); RS.prefix();
   RS.find_key(SLU.WZ);
   {? ($(RS.TAB+'.prefix();'+RS.TAB+'.blank(1);'+RS.TAB+'.'+RS.KOD+':=POZ.WAL().KOD;'+RS.TAB+'.find_rec'))()
   || ($('jedn:='+RS.TAB+'.J'))(); {? jedn=0 || jedn:=1 ?}
   ?};
   RS.cntx_pop()
?};
{? _a=1
|| {? POZ.SUMW<>0
   || {? POZ.KURS<>0
      || POZ.SUM:=(POZ.SUMW*POZ.KURS/jedn)$2
      || {? POZ.SUM<>0 || POZ.KURS:=(POZ.SUM*jedn/POZ.SUMW)$6 ?}
      ?}
   ?}
|? _a=2
|| {? POZ.KURS<>0
   || {? POZ.SUMW<>0
      || POZ.SUM:=(POZ.SUMW*POZ.KURS/jedn)$2
      || {? POZ.SUM<>0 || POZ.SUMW:=(POZ.SUM*jedn/POZ.KURS)$2 ?}
      ?}
   ?}
|? _a=3
|| {? POZ.SUM<>0
   || {? POZ.KURS<>0
      || {? POZ.SUMW=0 || POZ.SUMW:=(POZ.SUM*jedn/POZ.KURS)$2 ?}
      || {? POZ.SUMW<>0 || POZ.KURS:=(POZ.SUM*jedn/POZ.SUMW)$6 ?}
      ?}
   ?}
?};
{? POZ.SUMW<>0 & POZ.KURS<>0 & POZ.SUM<>0 & (POZ.SUMW*POZ.KURS/jedn)$2<>POZ.SUM
|| {? FUN.ask('Brak zgodności danych:\n'
              'Kwota w walucie: %1\n'
              'Kurs: %2\n'
              'Kwota w walucie narodowej: %3.\n'
              'Powrócić do redakcji pola?'@[form(POZ.SUMW, ,2),form(POZ.KURS, , 4),form(POZ.SUM, , 2)])
   || _a:=0
   || _a:=1
   ?}
|| _a:=1
?};
&jedn;
_a


\proc_rok_next
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Zwraca procent struktury lub prewskaźnika roku następnego do wskazanego lub 100 gdy go nie ma
::   WE: _a - rok
::       _b - 1-procent struktury, wpp-procent prewskaźnika
::  OLD: \proc_rok_next/vat2.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_proc:={? ROK_F.seek(_a)
       || {? ROK_F.next()
          || {? _b=1
             || ROK_F.PROC_VAT
             || ROK_F.PREWSK
             ?}
          || 100
          ?}
       || 100
       ?};
ROK_F.cntx_pop();
_proc


\be_pozf_kodp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła przed redakcją pola POZF.KODP
::----------------------------------------------------------------------------------------------------------------------
{? POZF.DOK().DOK_REJ().JPK_TYP='' || 1 || 0 ?}


\be_pozf_zasob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła przed redakcją pola VAR.ZASOB
::----------------------------------------------------------------------------------------------------------------------
{? POZF.DOK<>null & POZF.DOK().DOK_REJ().JPK_TYP='' | POZF.EDOKUM<>null & POZF.EDOKUM().TYP().POZF='T'
|| exec('be_edok_fld','dok_fks1')
|| 0
?}


\f3_pozf_zasob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła na F3 w polu VAR.ZASOB
::----------------------------------------------------------------------------------------------------------------------
{? (POZF.DOK<>null & POZF.DOK().EDI='P') | (POZF.EDOKUM<>null & POZF.EDOKUM().EDI='P')
|| POJAZDY.cntx_psh();
   POJAZDY.index('NRREJ');
   POJAZDY.prefix(REF.FIRMA);
   _win:=POJAZDY.mk_sel('Pojazdy'@,,0,'_win_pojazdy',10,5,15,,'U',,,,,'normal');
   POJAZDY.win_fld(_win,,'NRREJ',,,15,,,'Nr rejestracyjny'@,,'Numer rejestracyjny pojazdu'@);
   POJAZDY.win_fld(_win,,'NAZ',,,40,,,'Nazwa'@,,'Nazwa pojazdu'@);
   POJAZDY.win_fld(_win,,'OSOBA','NAZWISKO','OSOBA',40,,,'Użytkownik'@,,'Bieżący użytkownik'@);
   POJAZDY.win_act(_win,,'Formuła','Wybierz'@,,'Wybór pojazdu'@,,"sel_exit()",1,,,,'W');
   POJAZDY.win_sel(_win);

   {? VAR.ZASOBY<>'' || POJAZDY.find_key(VAR.ZASOBY) ?};
   {? POJAZDY.select(,1)
   || ZASOBY.cntx_psh();
      ZASOBY.index('ZASOBY');
      ZASOBY.prefix(POJAZDY.ID);
      {? ZASOBY.first()
      || VAR.ZASOBY:=POJAZDY.NRREJ;
         POZF.ZASOB:=ZASOBY.ref()
      ?};
      ZASOBY.cntx_pop()
   ?};
   POJAZDY.cntx_pop()
|? (POZF.DOK<>null & POZF.DOK().EDI='S') | (POZF.EDOKUM<>null & POZF.EDOKUM().EDI='S')
|| NRKRTSIM.cntx_psh();
   NRKRTSIM.index('DISP');
   NRKRTSIM.prefix(REF.FIRMA);
   _win:=NRKRTSIM.mk_sel('Nr kart SIM'@,,0,'_win_kartysim',10,5,15,,'U',,,,,'normal');
   NRKRTSIM.win_fld(_win,,'NR_KARTY',,,15,,,'Nr karty SIM'@,,'Numer karty SIM'@);
   NRKRTSIM.win_fld(_win,,'OPIS',,,40,,,'Opis'@,,'Opis karty SIM'@);
   NRKRTSIM.win_fld(_win,,'OSOBA','NAZWISKO','OSOBA',40,,,'Użytkownik'@,,'Bieżący użytkownik'@);
   NRKRTSIM.win_act(_win,,'Formuła','Wybierz'@,,'Wybór karty SIM'@,,"sel_exit()",1,,,,'W');
   NRKRTSIM.win_sel(_win);

   {? VAR.ZASOBY<>'' || NRKRTSIM.find_key(VAR.ZASOBY) ?};
   {? NRKRTSIM.select(,1)
   || ZASOBY.cntx_psh();
      ZASOBY.index('ZASOBY');
      ZASOBY.prefix(NRKRTSIM.ID);
      {? ZASOBY.first()
      || VAR.ZASOBY:=NRKRTSIM.NR_KARTY;
         POZF.ZASOB:=ZASOBY.ref()
      ?};
      ZASOBY.cntx_pop()
   ?};
   NRKRTSIM.cntx_pop()
?}


\ae_pozf_zasob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła po redakcji pola VAR.ZASOB
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
{? VAR.ZASOBY=''
|| POZF.ZASOB:=null
|| {? (POZF.DOK<>null & POZF.DOK().EDI='P') | (POZF.EDOKUM<>null & POZF.EDOKUM().EDI='P')
   || POJAZDY.cntx_psh();
      POJAZDY.index('NRREJ');
      POJAZDY.prefix(REF.FIRMA,VAR.ZASOBY,);
      {? ~POJAZDY.first()
      || {? FUN.ask('W kartotece zasobów nie znaleziono wskazanego identyfikatora. Usunąć zawartość pola?'@)
         || VAR.ZASOBY:='';
            POZF.ZASOB:=null
         ?};
         _wy:=0
      ?};
      POJAZDY.cntx_pop()
   |? (POZF.DOK<>null & POZF.DOK().EDI='S') | (POZF.EDOKUM<>null & POZF.EDOKUM().EDI='S')
   || NRKRTSIM.cntx_psh();
      NRKRTSIM.index('DISP');
      NRKRTSIM.prefix(REF.FIRMA,VAR.ZASOBY,);
      {? ~NRKRTSIM.first()
      || {? FUN.ask('W kartotece zasobów nie znaleziono wskazanego identyfikatora. Usunąć zawartość pola?'@)
         || VAR.ZASOBY:='';
            POZF.ZASOB:=null
         ?};
         _wy:=0
      ?};
      NRKRTSIM.cntx_pop()
   ?}
?};
_wy


\kart_zas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła wyświetla okno z listą typów pozycji faktur
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh(); SLU.cntx_psh();
SLU.index('NAZ');
SLU.prefix('~GRUPY PODATKOWE');
{? SLU.first()
|| SLO.index('SL');
   SLO.prefix(SLU.ref())
?};
KART_ZAS.index('POZF');
KART_ZAS.prefix();
_win:=KART_ZAS.mk_sel('Produkty faktur zasobów'@,,0,'_win_kartzas',10,5,15,,'U',,,,,'normal');
KART_ZAS.win_fld(_win,,'KH','SKR','SKR',15,,,'Kontrahent'@,,'Skrót nazwy kontrahenta'@);
KART_ZAS.win_fld(_win,VAR,'TYPFAKZA',,,15,,,'Typ kartoteki'@,,'Typ kartoteki (paliwo, telekomunikacja)'@);
KART_ZAS.win_fld(_win,,'POZF',,,30,,,'Produkt faktury'@,,'Produkt faktury zasobów'@);
KART_ZAS.win_fld(_win,,'GRPOD','KOD','KOD',10,,,'Grupa podatkowa'@,,'Grupa podatkowa'@);
KART_ZAS.win_fld(_win,,'OBC',,,10,,,'Obciążająca'@,,'Czy obciąża limit'@,2,,"'T'","'N'");
KART_ZAS.win_act(_win,,'Dołącz',,,'Dołączanie nowego zapisu'@,,,1);
KART_ZAS.win_act(_win,1,'Dołącz',,,'Dołączanie nowego zapisu'@,,,1);
KART_ZAS.win_act(_win,,'Popraw',,,'Poprawianie bieżącego zapisu'@);
KART_ZAS.win_act(_win,,'Usuń',,,'Usuwanie bieżącego zapisu'@);
KART_ZAS.win_act(_win,,'Formuła','Zmień grupę'@,,'Zmiana grupy podatkowej'@,,
                 "exec('zm_gr','dok_fks')",,1,"exec('gr_zm_gr_b','dok_fks')","exec('gr_zm_gr_a','dok_fks')",'Z');
KART_ZAS.win_act(_win,,'Rekord',,,,"{? KART_ZAS.KART='P' || VAR.TYPFAKZA:='Pojazd'
                                    |? KART_ZAS.KART='S' || VAR.TYPFAKZA:='Karta SIM'
                                    || '' ?}");
KART_ZAS.win_btn(_win,'text=%1,btn_label_align=center,panel=right,align=begin'['Dołącz'@],'menu:D');
KART_ZAS.win_btn(_win,'text=%1,btn_label_align=center,panel=right,align=begin'['Popraw'@],'menu:P',,,,,,'noempty');
KART_ZAS.win_btn(_win,'text=%1,btn_label_align=center,panel=right,align=begin'['Usuń'@],'menu:U',,,,,,'noempty');

KART_ZAS.win_sel(_win);
KART_ZAS.select();
SLO.cntx_pop(); SLU.cntx_pop()


\gr_zm_gr_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Grupowa zmiana grupy podatkowej dla produktów faktur zasobów - formuła grupa przed
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__GR_POD');
_tmp:=SLO.win_sel('?');
_win:=SLO.mk_sel('Wybór grupy'@,,0,'_slo_wyb',10,5,15,,'U',,,,,'normal');
SLO.win_fld(_win,,'KOD',,,15,,,'Kod'@);
SLO.win_fld(_win,,'TR',,,50,,,'Treść'@);
SLO.win_act(_win,,'Formuła','Wybierz'@,,'Wybór pozycji słownika'@,,"sel_exit()",1,,,,'W');
SLO.win_sel(_win);
{? SLO.select(,1,-1) || __GRPOD:=SLO.ref() || __GRPOD:=null ?};
SLO.win_sel(_tmp);
__GRPOD


\gr_zm_gr_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Grupowa zmiana grupy podatkowej dla produktów faktur zasobów - formuła grupa przed
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__GR_POD');
1


\zm_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Zmiana grupy podatkowej dla produktu faktury zasobów
::----------------------------------------------------------------------------------------------------------------------
_slo:=null;
{? KART_ZAS.sel_size()=0
|| _tmp:=SLO.win_sel('?');
   _win:=SLO.mk_sel('Wybór grupy'@,,0,'_slo_wyb',10,5,15,,'U',,,,,'normal');
   SLO.win_fld(_win,,'KOD',,,15,,,'Kod'@);
   SLO.win_fld(_win,,'TR',,,50,,,'Treść'@);
   SLO.win_act(_win,,'Formuła','Wybierz'@,,'Wybór pozycji słownika'@,,"sel_exit()",1,,,,'W');
   SLO.win_sel(_win);
   {? SLO.select(,1,-1) || _slo:=SLO.ref() ?};
   SLO.win_sel(_tmp)
|| {? var_pres('__GRPOD')>0 || _slo:=__GRPOD ?}
?};
{? _slo
|| KART_ZAS.GRPOD:=_slo;
   KART_ZAS.put()
?}


\trig_skidxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Triger przed put i add tabeli SKIDXD
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh();
SKIDXD.ODD:=SKIDXD.DOK().ODD;
SKIDXD.DOK_REJ:=DOK.REJ;
DOK.cntx_pop();
1


\find_grvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła zwraca grupę podatkową
::   WE: _a - kontrahent (KH.ref),
::       _b - kod produktu (STRING),
::       _c - wskazanie na rejestr księgowy,
::       _d - kategoria zasobów (P - pojazdy, S - numery kart SIM)
::       _e - jeżeli 1 to rejestruje nieodnalezione grupy podatkowe
::   WY: GR_VAT.ref()
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
KART_ZAS.cntx_psh();
KART_ZAS.index('POZF');
{? _>=2 & type_of(_a)=type_of(null) & _a<>null & _b<>''
|| KART_ZAS.prefix(_a,{? _>=4 & _d<>'' || _d || DOK.EDI ?},_b,);
   {? KART_ZAS.first()
   || {? KART_ZAS.GRPOD<>null
      || GR_VAT.cntx_psh();
         GR_VAT.index('REJ_GR');
         {? _>=3 || _rej:=_c || _rej:=null ?};
         {? _rej
         || GR_VAT.prefix(_rej,KART_ZAS.GRPOD);
            {? GR_VAT.first()
            || _ref:=GR_VAT.ref()
            || {? _>=4 & _e=1
               || REJ.cntx_psh();
                  REJ.prefix();
                  {? REJ.seek(_rej) || _rej_sym:=REJ.KOD || _rej_sym:='' ?};
                  REJ.cntx_pop();
                  KOMM.add('Grupa podatkowa (%1) zdefiniowana w Typach pozycji faktur nie jest podpięta '
                        'do rejestru dokumentu (%2).'@[KART_ZAS.GRPOD().KOD,_rej_sym])
               ?}
            ?}
         ?};
         GR_VAT.cntx_pop()
      ?}
   ||
:: uzupełnienie kartoteki produktów faktur zasobów (KART_ZAS) o brakujące kody/nazwy produktów
      KART_ZAS.blank();
      KART_ZAS.KH:=_a;
      KART_ZAS.POZF:=_b;
      KART_ZAS.KART:={? _>=4 & _d<>'' || _d || DOK.EDI ?};
      KART_ZAS.OBC:='T';
      KART_ZAS.GRPOD:=null;
      KART_ZAS.add()
   ?}
?};
KART_ZAS.cntx_pop();
_ref


\b_trig_pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Triger przed put i add tabeli POZF
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh();
{? app_info('web_sesid')='' || DOK.prefix() ?};
{? POZF.DOK
|| POZF.ODD:=POZF.DOK().ODD;
   POZF.REJ:=DOK.REJ;
   POZF.DZ:=DOK.DTW;
   {? POZF.DT=date(0,0,0) || POZF.DT:=DOK.DOP ?}
|? POZF.EDOKUM=null & POZF.DT=date(0,0,0)
|| POZF.DT:=POZF.DZ
|? POZF.EDOKUM<>null & POZF.DT=date(0,0,0)
|| EDOKUM.cntx_psh();
   POZF.DT:=POZF.EDOKUM().DOP;
   EDOKUM.cntx_pop()
?};
exec('mod_pozf','dok_fks');
DOK.cntx_pop();
exec('ef_proc_default','dok_ksef');
1


\mod_pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Zapis daty, czasu i operatora modyfikacji pozycji faktury
::----------------------------------------------------------------------------------------------------------------------
POZF.MOD_KTO:=app_info('app_user');
POZF.MOD_DATA:=date();
POZF.MOD_CZAS:=time()


\bs_pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła na wyświetl dla pozycji faktury
::----------------------------------------------------------------------------------------------------------------------
POZF.win_edit('RED');
POZF.display();
POZF.win_edit('')


\spr_nk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [17.42]
:: OPIS: Sprawdza czy nie ma dokumentu o tym symbolu w obrębie miesiąca dla tego samego kontrahenta
::   WE: _a - 1 - sprawdzanie symbolu dokumentu
::            2 - sprawdzanie symbolu zewnetrznego dokumentu
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? var_pres('ok_nk')>=0 || return(1) ?};
_par71:=PAR_SKID.get(71);
{? _par71='B' || return(1) ?};
{? _par71='K' & DOK.WYS=null | -SLO.TR='kontrahent jednorazowy' || return(1) ?};
{? _par71='D' & (_a=1 & form(DOK.NK)='') | (_a=2 & form(DOK.SYM_ZEW)='') || return(1) ?};
_nk:=DOK.NK; _symz:=DOK.SYM_ZEW; _rej:=DOK.REJ().KOD;
_popraw:=-menu_txt(,)<>'dołącz' | var_press('dolndok')>0 & dolndok=1 | var_pres('__dokdodany')>0 & __dokdodany=1;
_par72:=PAR_SKID.get(72);
{? _par72='0'
|| DOK.cntx_psh();
   _ref:=DOK.ref();
   {? _par71='K'
   || {? _a=1
      || DOK.index('REJSYMKH');
         DOK.prefix(DOK.REJ,DOK.NK,DOK.WYS().KOD)
      || DOK.index('REJZEWKH');
         DOK.prefix(DOK.REJ,DOK.SYM_ZEW,DOK.WYS().KOD)
      ?}
   || {? _a=1
      || DOK.index('REJ_SYM');
         DOK.prefix(DOK.REJ,DOK.NK,DOK.NK)
      || DOK.index('REJ_SYMZ');
         DOK.prefix(DOK.REJ,DOK.SYM_ZEW,DOK.SYM_ZEW)
      ?}
   ?};
      {? DOK.first()
      || _ile_dok:=0; _size:=DOK.size();
         {? _size=1 & {? _popraw || DOK.ref()<>_ref || 1 ?}
         || _ile_dok:=1
         ?};
         {? ~_ile_dok & _size>1
         || _ile_dok:=2
         ?};
         {? _ile_dok=1
         || {? ~(var_pres('__doksprref')>0 & __doksprref=$DOK.ref())
            || {? _a=1
               || _zwrot:=
                  FUN.choice('Istnieje już dokument o symbolu: %1'
                             '\nw jednostce księgowej: %2'
                             '\nw rejestrze: %3'
                             '\npod numerem: %4'
                             '\nw okresie: %5'@[_nk,DOK.ODD().OD,REJ.KOD,$DOK.NR,SSTALE.AO().NAZ],,'Kontynuuj'@);
                  _jedn:=1
               || _zwrot:=
                  FUN.choice('Istnieje już dokument o symbolu zewnętrznym: %1'
                             '\nw jednostce księgowej: %2'
                             '\nw rejestrze: %3'
                             '\npod numerem: %4'
                             '\nw okresie: %5'@[_symz,DOK.ODD().OD,REJ.KOD,$DOK.NR,SSTALE.AO().NAZ],,'Kontynuuj'@);
                  _jedn:=1
               ?}
            ?}
         |? _ile_dok=2
         || {? _a=1
            || _zwrot:=
               FUN.choice('Istnieją już dokumenty o symbolu: %1'
                          '\nw rejestrze: %2'
                          '\nw okresie: %3'@[_nk,REJ.KOD,SSTALE.AO().NAZ],,'Kontynuuj'@);
               _jedn:=1
            || _zwrot:=
               FUN.choice('Istnieją już dokumenty o symbolu zewnętrznym: %1'
                          '\nw rejestrze: %2'
                          '\nw okresie: %3'@[_symz,REJ.KOD,SSTALE.AO().NAZ],,'Kontynuuj'@);
               _jedn:=1
            ?}
         ?}
      ?};
      DOK.cntx_pop()
   |? (#_par72>0 & #_par72<13)
   || _fdok:='';
      _okrod:={? SSTALE.AO().NR-#_par72<=0 || 0 || SSTALE.AO().NR-#_par72 ?};
      OKRO_F.cntx_psh;
      OKRO_F.index('ROK'); OKRO_F.prefix(SSTALE.AR);
      _ost_okr:=12;
      {? OKRO_F.last || _ost_okr:=OKRO_F.NR ?};
      _okrdo:={? #_par72+SSTALE.AO().NR>=_ost_okr || _ost_okr || SSTALE.AO().NR+#_par72 ?};
      {? OKRO_F.find_key(_okrod)
      || {!
         |? _fdok+='\'doku'+ ROK_F.KOD+form(OKRO_F.NR,-2)+'\',';
            OKRO_F.next & OKRO_F.NR<=_okrdo
         !};
         _fdok:=_fdok-1
      ?};
      OKRO_F.cntx_pop();
      _kh:=DOK.WYS().KOD;
      _refd:={? _popraw || $DOK.ref() || '' ?};
      _nksql:=STR.gsub({? _a=1 || _nk || _symz ?},'\'','\'\'');
      _rejsql:=STR.gsub(_rej,'\'','\'\'');

   _sql:='/*+MASK_FILTER(DOK,:_c) '+
             'INDEX (DOK,REJ_SYM) */ '+
             'ODD.OD ODDZIAL, REJ.KOD REJESTR, DOK.NR NR, SLO.KOD KH, DOK.SYM_ZEW, DOK.NK SYMBOL, DOK.DTO DATA, DOK.REFERENCE REF '+
             'from @DOK left join REJ using (DOK.REJ,REJ.REFERENCE) '+
             'left join SLO using (DOK.WYS,SLO.REFERENCE) '+
             'join ODD using (DOK.ODD,ODD.REFERENCE) ';

   _where:={? _par71='K'
           || {?_a=1
              || 'where DOK.NK=\':_a\' and SLO.KOD=\':_e\' '
              || 'where DOK.SYM_ZEW=\':_a\' and SLO.KOD=\':_e\' '
              ?}
           || {?_a=1
              || 'where REJ.KOD=\':_b\' and DOK.NK=\':_a\' '
              || 'where REJ.KOD=\':_b\' and DOK.SYM_ZEW=\':_a\' '
              ?}
           ?};
   _where+={? _refd='' || '' || 'and DOK.REFERENCE<>\':_d\' ' ?};
   _where+={? var_pres('__doksprref')>0 & __doksprref<>'' || 'and DOK.REFERENCE<>\':_f\' ' || '' ?};
   {? var_pres('__doksprref')<=0 || __doksprref:='' ?};
   _tab:=sql('select '+_sql+_where+'order by 1,2,3',_nksql,_rejsql,_fdok,_refd,_kh,__doksprref);

   {? _tab.first()
   || {? _tab.size()>1
      || {? _a=1
         || _wer:={? _par71='K'
                  || _tab.mk_sel('Dokumenty dla kontrahenta %1 z symbolem %2'@[DOK.WYS().TR,_nk],,0)
                  || _tab.mk_sel('Dokumenty z symbolem %1'@[_nk],,0)
                  ?}
         || _wer:={? _par71='K'
                  || _tab.mk_sel('Dokumenty dla kontrahenta %1 z symbolem zewnętrznym %2'@[DOK.WYS().TR,_symz],,0)
                  || _tab.mk_sel('Dokumenty z symbolem zewnętrznym %1'@[_symz],,0)
                  ?}
         ?};
         _tab.win_fld(_wer,,'ODDZIAL',,,8,,,'Jednostka księgowa'@);
         _tab.win_fld(_wer,,'REJESTR',,,10,,,'Rejestr'@);
         _tab.win_fld(_wer,,'NR',,,2,,,'Nr w rejestrze'@);
         _tab.win_fld(_wer,,'SYM_ZEW',,,35,,,'Symbol zewnętrzny'@);
         _tab.win_fld(_wer,,'SYMBOL',,,20,,,'Symbol'@);
         _tab.win_fld(_wer,,'DATA',,,11,,,'Data wystawienia'@);
         _tab.win_act(_wer,0,'Formuła','Kontynuuj'@@,,'Kontynuowanie wprowadzania dokumentu'@,,"sel_exit()",1);
         _tab.win_sel(_wer);
         _zwrot:=_tab.select()
      || {? _a=1
         || _zwrot:=
            FUN.choice({? _par71='K' || 'Dla wybranego kontrahenta istnieje' || 'Istnieje' ?}+' już dokument o symbolu: %1'
                       '\nw jednostce księgowej: %2'
                       '\nw rejestrze: %3'
                       '\npod numerem: %4'
                       '\nz datą wystawienia: %5'@[_nk,_tab.ODDZIAL,_tab.REJESTR,$_tab.NR,$_tab.DATA],,'Kontynuuj'@);
            _jedn:=1
         || _zwrot:=
            FUN.choice({? _par71='K' || 'Dla wybranego kontrahenta istnieje' || 'Istnieje' ?}+' już dokument o symbolu zewnętrznym: %1'
                       '\nw jednostce księgowej: %2'
                       '\nw rejestrze: %3'
                       '\npod numerem: %4'
                       '\nz datą wystawienia: %5'@[_symz,_tab.ODDZIAL,_tab.REJESTR,$_tab.NR,$_tab.DATA],,'Kontynuuj'@);
            _jedn:=1
         ?}
      ?}
   ?};
   {? _zwrot=0 || VAR_DEL.delete('ok_nk') || ok_nk:=1 ?};
   {? _zwrot=0 & var_pres('_jedn')=-1
   || {? _par71='K'
      || FUN.info('Nie można zarejestrować dokumentu o nieunikalnym symbolu \n dla kontrahenta: %1'@[DOK.WYS().TR])
      || FUN.info('Nie można zarejestrować dokumentu o nieunikalnym symbolu.')
      ?}
   ?}
?};
_zwrot


\usun_poz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Usuwanie pozycji dokumentu - wewnętrzna
::   WE: _a - czy akcja jest grupowa (1/0)
::  OLD: \usun_poz/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_ds:=do_state()=0;
{? _a=0 & _ds || do() ?};
_ret:=0;
exec('usu_wyr','wyrozniki');
P_V.cntx_psh(); P_V.index('P_V'); P_V.prefix(POZ.ref());
{? P_V.first() || {! |? P_V.del() !} ?}; P_V.cntx_pop();
P_W.cntx_psh(); P_W.index('LP'); P_W.prefix(POZ.ref());
{? P_W.first() || {! |? P_W.del() !} ?}; P_W.cntx_pop();
{? POZ.KOM().KS().MW='T'
|| MAGWALP.cntx_psh(); MAGWALP.index('POZ'); MAGWALP.prefix(POZ.ref());
   {? MAGWALP.first() || {! |? MAGWALP.del() !} ?}; MAGWALP.cntx_pop();
   MAGWALR.cntx_psh(); MAGWALR.index('POZ'); MAGWALR.prefix($POZ.ref());
   {? MAGWALR.first() || {! |? MAGWALR.del() !} ?};
   MAGWALR.index('POZR'); MAGWALR.prefix(POZ.ref());
   {? MAGWALR.first()
   || {! |? MAGWALR.cntx_psh();
            MAGWALR.prefix();
            MAGWALR.POZR:=null();
            MAGWALR.put();
            MAGWALR.cntx_pop();
            MAGWALR.next()
      !}
   ?};
   MAGWALR.cntx_pop()
?};
{? DOK.DOK_REJ().PR='T' || exec('outLista','raty',POZ) ?};
POZ.cntx_psh();
{? ~_a & POZ.next()
|| POZ.cntx_pop();
::Poczatek modyfikacji dla Maclex Fiks 13-10-2009 AK [1120]
   {? MLEX.FIKSB
   || exec('usun_pozml','ml_fiks',POZ.ref());
      exec('mlbzadusu','ml_zad',POZ.ref(),'',SSTALE.AO)
   ?};
   POZ.del(); _ref:=POZ.ref;
   POZ.trig_off('*','*');
   {!
   |? POZ.POZ-=1;
      {? DOK_REJ.M_ODD='T' || POZ.POZ_MOD:=POZ.POZ ?};
      POZ.put();
      POZ.next()
   !};
   POZ.trig_on('*','*');
   _ret:=POZ.seek(_ref)
|| POZ.cntx_pop();
   {? MLEX.FIKSB
   ||   exec('usun_pozml','ml_fiks',POZ.ref());
        exec('mlbzadusu','ml_zad',POZ.ref(),'',SSTALE.AO)
   ?};
::Koniec modyfikacji dla Maclex
{? 1+POZ.TID='R'
|| OP.cntx_psh();
   OP.index('KON_O'); OP.prefix(FINFO.NAROD,POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK);
   _op:=OP.first() & (-OP.TYP='rmk' | -OP.TYP='rmp');
   OP.cntx_pop();
   {? ~_op
   || RMK.cntx_psh();
      RMK.index('NAZ'); RMK.prefix();
      {? RMK.find_key(POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK,POZ.TID,)
      || exec('kasujrrmk','rmk',RMK.ref());
         RMK.del()
      ?};
      RMK.cntx_pop()
   ?}
?};
  _ret:=POZ.del()
?};
{? _ret || POMOC_DM.blank(1) ?};
{? _a=0 & _ds || end() ?};
_ret


\dok_kurs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: formula przed redakcją pola DOK.TKRS ograniczajaca tabele kursow dla CIT
::       dla wybranego banku
::  OLD: \dok_kurs/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_dpp:={? DOK.DTO<DOK.DOP | DOK.DOP=date(0,0,0) || DOK.DTO || DOK.DOP ?};
{? DOK.TKRS=null & _dpp<>date(0,0,0) & DOK.BANK<>null
|| {? Plugin.runnable('SET_DOK_TKRS')
   || DOK.TKRS:=Plugin.run('SET_DOK_TKRS')
   || TKRS.index('TKRS_DT'); TKRS.prefix(DOK.BANK,FINFO.NAROD);
      _data:={? _dpp>=date(1,1,2) || exec('dzienRob','kalendarz',_dpp-1,1,1,0,-1) || date(0,0,0) ?};
   {? _data<>date(0,0,0) & TKRS.find_key(_data)
      || TKRS.cntx_psh();
         KRS.cntx_psh();
         KRS.index('KRS_WAL');
         _wart:=0;
         {!
         |? KRS.prefix(TKRS.ref(),DOK.WAL);
            {? KRS.first()
            || _wart:=1;
               DOK.TKRS:=TKRS.ref()
            ?};
            _wart=0 & TKRS.prev()
         !};
      {? _wart=0 & TKRS.find_key(_data) || DOK.TKRS:=TKRS.ref() ?};
         KRS.cntx_pop();
         TKRS.cntx_pop()
      ?}
   ?}
?};
{? DOK.BANK<>null
|| POMOC.BANK:=DOK.BANK;
   POMOC.WAL_TKRS:=FINFO.NAROD;
   KRS.index('KRS_KRAJ'); KRS.prefix(TKRS.ref); KRS.first();
   TKRS.win_sel('WERG');
   TKRS.win_dict('WERG');
   DOK.BANK();
   TKRS.hdr_sel(); TKRS.hdr_sel(' dla banku %1 - %2'@[SLO.KOD,SLO.TR]);
   TKRS.index('TKRS_SM');
   TKRS.prefix(DOK.BANK,FINFO.NAROD);
   1
|| 0
?}


\be_d_tkv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.50]
:: OPIS: Formula przed red. pola DOK.TRKS_V (dla VAT)
::  OLD: \be_d_tkv/dok_zrd3.fml
::       DOP - data operacji, DTO - Data dokumentu (wystawienia), DWKOR - data wystawienia korekty
::----------------------------------------------------------------------------------------------------------------------
_result:={? DOK.BANK<>null
         || {? FINFO.B_VAT<>null
            || POMOC.BANK:=FINFO.B_VAT;
               POMOC.WAL_TKRS:=FINFO.NAROD;
               TKRS.hdr_sel(); TKRS.hdr_sel(' %1 , %2'@[FINFO.B_VAT().KOD,SLO.TR]);
               _data:={? exec('impt','dok_fks')
                      || exec('p_ost_sr','dok_fks',DOK.DOP)
                      |? DOK.DOK_REJ().KOR='T'
                      || _dpp:={? DOK.DOP<DOK.DWKOR || DOK.DOP || DOK.DWKOR ?};
                         {? _dpp>=date(1,1,2)
                         || exec('dzienRob','kalendarz',_dpp-1,1,1,0,-1)
                         || date(0,0,0)
                         ?}
                      || _dpp:={? DOK.DOP<DOK.DTO || DOK.DOP || DOK.DTO ?};
                         {? _dpp>=date(1,1,2)
                         || exec('dzienRob','kalendarz',_dpp-1,1,1,0,-1)
                         || date(0,0,0)
                         ?}
                      ?};
               {? DOK.TRKS_V=null & _data<>date(0,0,0)
               || TKRS.cntx_psh();
                  KRS.cntx_psh();
                  {? Plugin.runnable('SET_DOK_TRKS_V')
                  || DOK.TRKS_V:=Plugin.run('SET_DOK_TRKS_V')
                  || TKRS.index('TKRS_DT'); TKRS.prefix(FINFO.B_VAT,FINFO.NAROD);
                     {? TKRS.find_key(_data)
                     || KRS.index('KRS_WAL');
                        _wart:=0;
                        {!
                        |? KRS.prefix(TKRS.ref(),DOK.WAL);
                           {? KRS.first()
                           || _wart:=1;
                              DOK.TRKS_V:=TKRS.ref()
                           ?};
                           _wart=0 & TKRS.prev()
                        !};
                        {? _wart=0 & TKRS.find_key(_data) || DOK.TRKS_V:=TKRS.ref() ?}
                     ?}
                  ?};
                  KRS.cntx_pop();
                  TKRS.cntx_pop()
               ?};
               1
            || 0
            ?}
         || 0
         ?};
{? _result || exec('be_edok_fld','dok_fks1') || 0 ?}


\bl_pf_lp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Wartosc poczatkowa POZF.LP
::  OLD: \bl_pf_lp/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZF.DOK=null & POZF.EDOKUM=null
|| 0
|| POZF.cntx_psh();
   {? POZF.DOK
   || POZF.index('DOK'); POZF.prefix(POZF.DOK)
   |? POZF.EDOKUM
   || POZF.index('EDOKUM'); POZF.prefix(POZF.EDOKUM)
   ?};
   _lp:={? POZF.last() || POZF.LP+1 || 1 ?};
   POZF.cntx_pop();
   _lp
?}


\p_ost_sr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Zwraca datę przedostatniej środy poprzedniego miesiąca
::   WE: _a - data
::  OLD: \p_ost_sr/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
_rok:=_a~1;
_mc:=(_a~2)-1;
{? _mc=0 || _mc:=12; _rok-=1 ?};
_ost:=date(_rok,_mc,0);
_dt:=_ost~4;
_ile:=_dt-3;
{? _ile<0 || _ile+=7 ?};
_ile+=7;
_ost-_ile


\impt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Czy dokument z klasą ewidencji import towarów
::  OLD: \impt/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
VAT_REJ.cntx_psh();
RVAT.cntx_psh();
KVAT.cntx_psh();
_imp:=4+DOK.RVAT().RVAT().KVAT().SYM='ImpT';
KVAT.cntx_pop();
RVAT.cntx_pop();
VAT_REJ.cntx_pop();
_imp


\bd_netto3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [19.22]
:: OPIS: Podsumowanie pozycji VAT
::----------------------------------------------------------------------------------------------------------------------
_ref:={? ~VPOZ.sel_size() & VPOZ.f_active() & VPOZ.f_get() || VPOZ.ref() || null ?};
{? f_usr_changed() | ~VPOZ.f_active()
|| VPOZ.cntx_psh();
   ROZLICZ.NETTO3:=ROZLICZ.VAT3:=ROZLICZ.BRUTTO3:=0;
   ROZLICZ.NETTO4:=ROZLICZ.VAT4:=ROZLICZ.BRUTTO4:=0;
   SUM.SUMN:=SUM.SUMV:=SUM.SUMB:=0;
   {? {? VPOZ.f_active() || VPOZ.f_first() || VPOZ.first() ?}
   || {!
      |? ROZLICZ.NETTO3+=VPOZ.NETTO; ROZLICZ.VAT3+=VPOZ.VAT; ROZLICZ.BRUTTO3+=VPOZ.BRUTTO;
         {? _=1 | VPOZ.OKRVAT=null
         || SUM.SUMN+=VPOZ.NETTO; SUM.SUMV+=VPOZ.VAT; SUM.SUMB+=VPOZ.BRUTTO;
            {? _=2
            || VPOZ_ROZ.index('VPOZ_ROZ'); VPOZ_ROZ.prefix(VPOZ.ref());
               {? VPOZ_ROZ.first()
               || {!
                  |? SUM.SUMN-=VPOZ_ROZ.NETTO; SUM.SUMV-=VPOZ_ROZ.VAT; SUM.SUMB-=VPOZ_ROZ.BRUTTO;
                     VPOZ_ROZ.next()
                  !}
               ?}
            ?}
         ?};
         {? VPOZ.f_active() || VPOZ.f_next() || VPOZ.next() ?}
      !}
   ?};
   ROZLICZ.NETTO4:=ROZLICZ.NETTO3-SUM.SUMN;
   ROZLICZ.VAT4:=ROZLICZ.VAT3-SUM.SUMV;
   ROZLICZ.BRUTTO4:=ROZLICZ.BRUTTO3-SUM.SUMB;
   VPOZ.cntx_pop();
   {? _ref || VPOZ.f_seek(_ref) ?}
|? VPOZ.f_active()
|| VPOZ.cntx_psh();
   ROZLICZ.NETTO3:=ROZLICZ.VAT3:=ROZLICZ.BRUTTO3:=0;
   ROZLICZ.NETTO4:=ROZLICZ.VAT4:=ROZLICZ.BRUTTO4:=0;
   SUM.SUMN:=SUM.SUMV:=SUM.SUMB:=0;
   VPOZ.f_first();
   {!
   |? ROZLICZ.NETTO3+=VPOZ.NETTO; ROZLICZ.VAT3+=VPOZ.VAT; ROZLICZ.BRUTTO3+=VPOZ.BRUTTO;
      {? _=1 | VPOZ.OKRVAT=null
      || SUM.SUMN+=VPOZ.NETTO; SUM.SUMV+=VPOZ.VAT; SUM.SUMB+=VPOZ.BRUTTO;
         {? _=2
         || VPOZ_ROZ.index('VPOZ_ROZ'); VPOZ_ROZ.prefix(VPOZ.ref());
            {? VPOZ_ROZ.first()
            || {!
               |? SUM.SUMN-=VPOZ_ROZ.NETTO; SUM.SUMV-=VPOZ_ROZ.VAT; SUM.SUMB-=VPOZ_ROZ.BRUTTO;
                  VPOZ_ROZ.next()
               !}
            ?}
         ?}
      ?};
      VPOZ.f_next()
   !};
   VPOZ.cntx_pop()
?};
1


\dokpyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: Obiekt do obsługi pytań
::   WE: _a - liczba rodzajów pytań
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new('tab','ask','ok','ost');
_obj.tab:=obj_new(_a);
{! _i:=1.._a
|! _obj.tab[_i]:=obj_new('PYT','ID');
   _obj.tab[_i].PYT:=0;
   _obj.tab[_i].ID:=''
!};
_obj.ost:=obj_new('nr','id');
_obj.ost.nr:=1;
_obj.ost.id:='';
_obj.ask:="
   .ost.nr:=_a;
   .ost.id:=_b;
   _obj:=.tab[.ost.nr];
   _obj.PYT=0 | _obj.ID<>.ost.id
";
_obj.ok:="
   _obj:=.tab[.ost.nr];
   _obj.PYT:=1;
   _obj.ID:=.ost.id
";
_obj


\blp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Formuła kontrolna - początkowa - sprawdzenie aktywności podatnika VAT i rachunku bankowego
::   WE: [_a] - gdy kontrahent nieaktywny: [0]-informacja, 1-pytanie
::       [_b] - gdy rachunek nieaktywny: [0]-informacja, 1-pytanie
::       [_c] - sprawdzać nazwę konrahenta: [0]-nie sprawdzać, 1-sprawdzić i pytać czy poprawić 2-poprawiać w tle
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;

_pyt_kh:=var_press('_a')>0 & _a;
_pyt_rb:=var_press('_b')>0 & _b;
_spr_naz:={? var_press('_c')>0 || _c ?};
{? var_press('KOMUNIKAT')>0 & KOMUNIKAT
|| _pyt_kh+=1;
   _pyt_rb+=1;
   _spr_naz+=1
|| _pyt_kh:=_pyt_rb:=_spr_naz:=0
?};
_kh:=exec('dok_kh','dok_fks1',DOK.KH);
{? _kh
|| KH.cntx_psh();
   KH.prefix();
   {? KH.seek(_kh) & exec('spr_typ','blp',KH.ref())
   || _snip:=exec('niptostr','#string',DOK.NIP);
      {? 2+_snip='PL' & +_snip=12 || _snip:=2-_snip ?};
      _txt:='';
      _data:=DOK.DOP;
      {? var_pres('BLP_DATA',XINFO)>0 & XINFO.BLP_DATA='W'
      || _data:=DOK.DTO
      ?};
      _obj1:=exec('check','blp','K',_snip,_data);
      {? _obj1.ACTIVE<>'T'
      || _ok:=0;
         {? _obj1.ACTIVE='N'
         || _txt+='Nieaktywny podatnik VAT ('+$_data+').\n'
         || {? _pyt_kh || _pyt_kh:=2 ?};
            _txt+='Nie udało się sprawdzenie podatnika VAT ('+$_data+').\n'@;
            {? _obj1.ERR<>''
            || _txt+=_obj1.ERR+'\n\n'
            ?}
         ?}
      || _pyt_kh:=0
      ?};
      {? DOK.RB & DOK.RVAT().RVAT().RT='Z' & exec('spr_rb','blp','DOK')
      || _obj2:=exec('check','blp','B',_snip,date(),DOK.RB().N);
         {? _obj2.ACTIVE<>'T'
         || _ok:=0;
            {? _obj2.ACTIVE='N'
            || _txt+='Nieaktywny rachunek bankowy ('+$date()+').\n'@
            || {? _pyt_rb || _pyt_rb:=2 ?};
               _txt+='Nie udało się sprawdzenie rachunku bankowego ('+$date()+').\n'@;
               {? _obj2.ERR<>''
               || _txt+=_obj2.ERR+'\n\n'
               ?}
            ?}
         || _pyt_rb:=0
         ?}
      || _pyt_rb:=0
      ?};
      {? _ok=0 & (_pyt_kh | _pyt_rb)
      || {? _pyt_kh=1 | _pyt_rb=1
         || FUN.info(_txt-1)
         || _ok:=FUN.ask(_txt+'\nCzy mimo to zaakceptować dokument?'@)
         ?}
      ?};
      {? _ok=1 & var_pres('ID_S_VAT',DOK)>0 & _obj1.ID_REQ<>''
      || DOK.ID_S_VAT:=_obj1.ID_REQ
      ?};
      {? _ok=1 & _spr_naz>1 & _obj1.NAZ<>'' & _obj1.NAZ<>DOK.KH_FULL
      || _pyt_naz:=1;
         {? _spr_naz=3 |
            _spr_naz=2 &
            (_pyt_naz:=FUN.choice(
               'Nazwa podatnika:\n"'+DOK.KH_FULL+'"\n\nniezgodna z wykazem podatników VAT:\n"'+_obj1.NAZ+'".\n\n'@+
               'Czy poprawić?'@,1,'Tak, tylko w dokumencie'@,'Tak, również dla kontrahenta'@
            ))
         || DOK.KH_FULL:=_obj1.NAZ;
            DOK.put();
            {? _pyt_naz=2
            || KH.NAZ_P:=_obj1.NAZ;
               exec('kh_mod','kontrahent');
            KH.put()
            ?}
         ?}
      ?}
   ?};
   KH.cntx_pop()
?};
_ok


\czy_teryt_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [20.42]
:: OPIS: Sprawdza zgodność wartości pól miejscowość, ulica dokumentu księgowego z rejestrem TERYT
::   WY: Wartość pola zgodna - pusty string. Wartość pola niezgodna - akronim pola
::----------------------------------------------------------------------------------------------------------------------
_par:=exec('ter_sprawdz_a','teryt');
_par.TAB:='DOK';
_par.ULI_P:='UL';
_par.MSC_P:='MIASTO';
_par.ULI_ND:=1;
_wyn:=exec('ter_sprawdz','teryt',_par);
{? _wyn.WYNIK=0 || _zwrot:=_wyn.POLE || _zwrot:='' ?}


\be_pf_js
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Przed redakcją pola POZF.JPK_GTU
::  OLD: \be_pf_js/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
HELPJPK.SLO_TYP:='GTU';
exec('be_edok_fld','dok_fks1')


\set_dok_gtu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Ustawia GTU dokumentu na podstawie pozycji towarowych
::  OLD: \set_dok_gtu/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
_pref:={? PAR_SKID.get(462)='N' & exec('status_bl','dok_fks1')
      || 'Dokument elektroniczny posiada status \''+exec('get_dokum_stat','efaktury')+'\'.\n'
      || ''
      ?};
{? FUN.ask(_pref+'Czy utworzyć grupy towarów i usług\ndokumentu na podstawie pozycji?'@)
|| _txt:='';
   POZF.cntx_psh();
   {? POZF.first()
   || {!
      |? {? POZF.JPK_GTU & _txt*POZF.JPK_GTU().KOD=0
         || _txt+=POZF.JPK_GTU().KOD+','
         ?};
         POZF.next()
      !}
   ?};
   POZF.cntx_pop();
   DOK.JPK_GTU:=_txt-1;
   DOK.put();
   {? var_pres('DokGTU')>0
   || DokGTU.set_all(DOK.JPK_GTU)
   ?};
   {? var_press('__PozTabs')>0 & __PozTabs>1
   || tab_sel(__PozTabs+1+(PAR_SKID.get(80)='T'),'bottom')
   ?}
?}


\pozf_actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Ukrywane akcje dla pozycji faktury
::  OLD: \pozf_actions/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.A='T' | var_press('PozView')>0 & PozView
|| 'dpUTG:D'
|| _rt:=exec('typ','jpk_v',DOK.RVAT().RVAT);
   _hid:={? exec('status_bl','dok_fks1') & PAR_SKID.get(441)='T' || 'DPUTG' || '' ?};
   _hid+={? DOK.WAL || 'T' || '' ?}+{? _rt='Z' | DOK.OKRVAT & DOK.OKRVAT().POCZ<JpkV7.DATA || 'G' || '' ?};
   _hid
?}


\czy_korekta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Sprawdza, czy dokument będzie korygowany dla kontekstu tabeli DOK
::   WY: 0 - dokument będzie korygowany, 1 - dokument nie używany w deklaracjach JPK_V7, edycja odbywa się bez korekty
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
_maska:=DOK.name();
DOK_JPK.cntx_psh(); VAT_DEK.cntx_psh();
DOK_JPK.use('dokj'+(_maska+4));
DOK_JPK.index('TIME');
DOK_JPK.prefix(DOK.ref());
{? DOK_JPK.first()
|| {!
   |? {? DOK_JPK.VAT_DEK<>''
      || VAT_DEK.index('VAT_DEK');
         VAT_DEK.prefix();
         {? VAT_DEK.seek(DOK_JPK.VAT_DEK)
         || {? exec('dek_jpkupo','jpk')
            || _ret:=0
            ?}
         ?}
      ?};
      _ret & DOK_JPK.next()
   !}
?};
DOK_JPK.cntx_pop(); VAT_DEK.cntx_pop();
_ret


\tr_kh_zagr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [20.42]
:: OPIS: Sprawdzenie, czy faktura jest dla kontrahenta zagranicznego
::   WE:
::   WY: 1 - tak, 0 - nie
::----------------------------------------------------------------------------------------------------------------------
_zagr:=0;
{? DOK.KH_KRAJ<>'' & -DOK.KH_KRAJ<>'polska' & -DOK.KH_KRAJ<>'pl'
|| _zagr:=1
?};
_zagr


\slimvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [20.42]
:: OPIS: Data, od której obowiązuje SLIM VAT
::----------------------------------------------------------------------------------------------------------------------
_data:=PAR_SKID.get(109);
date(#(4+_data),#(5-_data-3),#(_data+2))


\slimkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [20.42]
:: OPIS: Ustala, czy dla kontrahenta obowiązuje umowa o SLIM VAT na dzień wystawienia dokumentu
::   WE:
::   WY: 1 - tak, 0 - nie
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
ZDARZT.cntx_psh(); ZDARZT.index('SL'); ZDARZT.prefix('T');
{? ZDARZT.first()
|| DOKUM.cntx_psh();
   DOKUM.index('KH1F');DOKUM.prefix(REF.FIRMA,KH.ref,ZDARZT.ref());
   _ret:=DOKUM.find_le(DOK.DTO) & DOKUM.DATA_OD<=DOK.DTO & (DOKUM.DATA_DO=date(0,0,0) | DOK.DTO<=DOKUM.DATA_DO);
   DOKUM.cntx_pop()
?};
ZDARZT.cntx_pop();
_ret


\dokkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [21.37]
:: OPIS: Podmioty dokumentu księgowego
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_r_lock:=exec('r_lock_one','#table',DOK,DOK.ref());
{? ~_r_lock
|| FUN.info('Dokument obsługuje inny operator.'@); return()
?};
_msk:=FAKSKH.name();
FAKSKH.use('fkpd'+(4+(4-$DOK.ref())) );
FAKSKH.index('DOK');
FAKSKH.prefix(DOK.ref());
FAKSKH.win_sel('WER');
{? DOK.A<>'T' & (DOK.DOK_REJ().KOR='N' | DOK_REJ.KOR_NAG='T') & ~exec('status_bl','dok_fks1')
|| {? DOK.DOK_REJ().KOR_NAG='T'
   || FAKSKH.win_edit('KH_K')
   || FAKSKH.win_edit('KH')
   ?};
   KH.win_dict('WERHOME2');
   KH.actions('WER','w');
   FAKSKH.select();
   KH.actions('WER','')
|| FAKSKH.select(,,,'DPU:D')
?};
exec('r_unlock_one','#table',DOK,DOK.ref(),_r_lock);
FAKSKH.use(_msk)


\fakskh_clr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [21.37]
:: OPIS: Czyści pole FAKSKH.DOKKH dla podmiotów dokumentu _a
::   WE: _a - ref dokumentu
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_maska:=ref_name(_ref)+5;
{? 4+ref_name(_ref)='fakt'
|| _maska:='fkpf_'+(ref_name(_ref)+3);
   _ndx:='UNIK'
|? 4+ref_name(_ref)='doku'
|| _maska:='fkpd'+(ref_name(_ref)+4);
   _ndx:='DOK'
|| return()
?};
FAKSKH.cntx_psh();
FAKSKH.use(_maska);
FAKSKH.index(_ndx);
FAKSKH.prefix(_ref);
_loop:=FAKSKH.first();
{!
|? _loop
|!
   FAKSKH.DOKKH:=''; FAKSKH.put(); _loop:=FAKSKH.next()
!};
FAKSKH.cntx_pop()


\dok_chk_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [21.37]
:: OPIS: Formuła sprawdzająca, czy rekord jest blokowany przed redagowaniem dolnego panelu dok ksg
::       dla pozycji prezentowanych na dolnym panelu
::----------------------------------------------------------------------------------------------------------------------
{? var_press('dok_zbl')>0 & dok_zbl=0
|| {? ~DOK.sel_size() & DOK.f_active()
   || {? DOK.f_test()
      || {? DOK.f_find_r()
         || DOK.f_get()
         || DOK.f_add()
         ?}
      ?}
   || DOK.get()
   ?};
   {? PAR_SKID.get(211)='T' & ~((DOK.WSK_XD='T' & DOK.A='T' & DOK.ZP='T' & PAR_SKID.get(107)<>'T' & DOK.r_lock(0,1)) | DOK.r_lock(1,1))
   || FUN.info('Dokument obsługuje inny operator.'@);
      0
   || {? DOK.A='T'
      || exec('dok_refresh','!fks_dks_zdok');
         {? cur_tab=TREE_REJ
         || grp_disp(DOK,WinRej.SELA);
            grp_disp(DOK,WinRej.SELJ);
            grp_disp(DOK,WinRej.SELD)
         ?}
      ?};
      1
   ?}
|| 1
?}


\a_trig_pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Triger po put, add i del tabeli POZF
::   WE: _a - typ operacji: 1-add, 2-put 3-del
::       _b - czy operacj się powiodła? 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
_ok:=_b;
{? _ok
|| _dok:={? _typ=3 || bfld('DOK') || POZF.DOK ?};
   {? _dok
   || _del:=~~;
      {? _typ=2 & POZF.EF_PROC=null & bfld('EF_PROC')<>null | _typ=3 & bfld('EF_PROC')<>null
      || _slo:=bfld('EF_PROC');
         _del:=exec('FindAndGet','#table','JPK_SLO',_slo,,"JPK_SLO.KOD")
      ?};
      exec('upd_dok_jpk_proc','dok_ksef',_dok,_del)
   ?}
?};
{? POZF.DOK<>null
|| DOK.cntx_psh();
   DOK.use(ref_name(POZF.DOK)); DOK.prefix();
   POZF.DOK();
   POZF.cntx_psh(); POZF.index('DOK'); POZF.prefix(DOK.ref());
   _dsprz:=0;
   {? POZF.first()
   || {! |?  {? POZF.DT<>DOK.DOP || _dsprz:=1 ?};
             POZF.next()
      !}
   ?};
   {? _dsprz
   || DOK.DSP_WPZF:='T'
   || DOK.DSP_WPZF:='N'
   ?};
   DOK.trig_off('*','*');
   DOK.put();
   DOK.trig_on('*','*');
   DOK.cntx_pop(); POZF.cntx_pop()
?};
{? var_pres('ST_B',POZF)>0 & (_typ=1 & POZF.KOR<>0 | _typ=2 & bfld('KOR')<>POZF.KOR | _typ=3 & bfld('KOR')<>0 )
|| _zaznacz:={? _typ=1 & POZF.KOR<>0 | _typ=2 & bfld('KOR')<>POZF.KOR
             || 1
             |? _typ=2 & bfld('KOR')<>0 & POZF.KOR=0 | _typ=3 & bfld('KOR')<>0
             || 0
             || 0
             ?};
   {? POZF.DOK<>null() || exec('set_pozf_stb','dok_fks1',POZF.DOK,_zaznacz) ?};
   {? POZF.EDOKUM<>null() || exec('set_pozf_stb','dok_fks1',POZF.EDOKUM,_zaznacz) ?}
?};
~~


\del_e_dok_mw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [21.37]
:: OPIS: Sprawdza, czy w dokumencie są dekrety związane z kontem Magazynu walut.
::   WY: 0 - są pozycje Magazynu walut, 1 - w p. p.
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
POZ.cntx_psh(); KS.cntx_psh();
KS.index('SYM');
KS.prefix(SSTALE.AR);
{? POZ.first
|| {!|? {? KS.find_key(ROK_F.SYNT+POZ.KON) & KS.MW='T'
        || _ret:=0
        ?};
        _ret & POZ.next()
   !}
?};
POZ.cntx_pop(); KS.cntx_pop();
_ret


\czy_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [21.37]
:: OPIS: Sprawdza, czy dokument ma podpięty załącznik.
::   WY: 1 - tak, 0 - w p. p.
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
DOKUM.cntx_psh();
DOKUM.index('DOKUM');
DOKUM.prefix(REF.FIRMA,$DOK.ref);
_ret:=DOKUM.first();
DOKUM.cntx_pop();
_ret


\dok_red_d4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [23.25]
:: OPIS: Czy okno redagowania zawiera pole DOK.D4
::----------------------------------------------------------------------------------------------------------------------
_red:=',DOK_EXP,DOK_IMP,DOK_KORN,DOK_SPR,DOK_VAT,DOK_WWN,RDOKPOZ,RED,SZUK,DOK_WEWZ,DOK_WEWS,';
_cur:=DOK.win_edit('?');
_red*(','+_cur+',')


\sprvpozd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [23.25]
:: OPIS: Sprawdzenie, czy  'Data sprzedaży' jest zgodna dla wszystkich pozycji VAT w dokumencie
::   WE: _a - DOK.ref
::   WY:  1 - zgodnosc, 0 - brak zgodnosci, -1 - brak pozycji VAT
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
VPOZ.cntx_psh();
VPOZ.index('VDOK'); VPOZ.prefix(_a);
{? VPOZ.first()
|| _dspr:=VPOZ.D;
   {! |?
       _zwrot:=(_dspr=VPOZ.D);
       _zwrot & VPOZ.next
   !}
|| _dspr:=-1
?};
VPOZ.cntx_pop();
{?  _zwrot || 1 || 0 ?}


:Sign Version 2.0 jowisz:1045 2024/01/29 14:27:18 360ee2f6a90f54b0796ac3527103e9babe65fe4cc42d1077e68ddf7d730b1fa725fa51bfc4e22f96f9540aec224fe272df4a9625d017129d366de1ffdb537f95ae122efb4beccaf52b7be33dad4200e971baa41d00e71e15b8a6bdb7503d07727e533e8dc3694b6fbcc9308bc81640ba6b5b4f6249d0616d1fc26a6da5f8a098
