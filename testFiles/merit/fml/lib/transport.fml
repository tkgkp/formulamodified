:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: transport.fml
:: Utworzony: 25.01.2019
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły obsługi transportu
::======================================================================================================================


\ae_sam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: po redakcji pola POJAZD
::  OLD: \ae_sam/wysylki.fml
::----------------------------------------------------------------------------------------------------------------------
ZKW_N.POJTYPY:=ZKW_N.POJAZD().POJTYPY;
1


\add_blk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: dodanie zapis do tabeli blokad
::   WE: _a - TR_NAG.ref()
::   WY: 1 - zablokowano
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
TR_NAG.cntx_psh();
{?( #_a)>0 & (TR_NAG.clear(); TR_NAG.r_lock(1,1,1,#_a,ref_name(_a)) & TR_NAG.seek(_a)) & TR_NAG.r_lock(1,1,1)
|| _wyn:=1
?};
TR_NAG.cntx_pop();
_wyn


\var_tr_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Zmienna - Poprawa nagłowka
::   WY: uchwyt do zmiennej
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new('PO_FIRST'
       ,'TR_NAG'
       ,'WYJ_D'
       ,'WYJ_T'
       ,'POJAZD'
       ,'WLASNY'
       ,'KIER'
       ,'KIER_TEL'
       ,'TR_ZEWN'
       ,'TR_ZEWNU'
       ,'TR_ZEWNT');
_wyn


\tr_nag_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Zwraca okno redakcji tabeli TR_NAG
::   WE: [_a] - akronim okna
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || _a:='RED' ?};

_win_akr:=_a;
{? _win_akr='RED'
:: Tymczasowe okno redakcji
|| _win_red:=TR_NAG.mk_edit('Dane podstawowe'@,,,,,'html_maximized');
   TR_NAG.win_etab(_win_red,'Dane podstawowe'@);
   TR_NAG.win_ewin(_win_red,,_win_akr);
   TR_NAG.win_etab(_win_red,'Planowana trasa'@);
   TR_NAG.win_ewin(_win_red,,'PLM');
   _win_red
|? _win_akr='REA'
:: Tymczasowe okno redakcji
|| _win_red:=TR_NAG.mk_edit('Zakończenie transportu'@);
   TR_NAG.win_ewin(_win_red,,_win_akr);
   _win_red
|| _win_akr
?}


\tr_nag_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Ustawia okno redakcji tabeli TR_NAG, wymagane pola, okna słowników
::   WE: [_a] - czy klawisz zakończ 1-tak 0-(domyślnie)-nie
::       [_b] - 1-tryb Display 0-(domyślnie) nie
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || _a:=0 ?};
_disp:={? var_pres('_b')=type_of(0) || _b || 0 ?};

BPMN.END:=0;

_win_red:=exec('tr_nag_win_edit','transport');
{? ~_disp
|| {? TR_NAG.STAT_REJ='N'
   || _ff:="params_exec('priority_action_red','#b__box')";
      TR_NAG.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Pr&iorytet'@],_ff);
      _ff:="exec('pobierz_adres','transport')";
      TR_NAG.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin'['&Pobierz adres'@],_ff);

      {? _a
      || _ff:="params_exec('tr_nag_zakoncz_red','transport')";
         TR_NAG.win_ebtn(_win_red
          ,'text=%1,btn_label_align=center,panel=bottom,align=end'['&Zakończ'@],_ff)
      ?}
   ?};
   exec('ok_esc','#window',TR_NAG,_win_red,1)
?};
TR_NAG.win_edit(_win_red);
exec('set_efld_opt','transport',_win_red);
~~


\tr_nag_edit_finisher
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Kod wykańczający po TR_NAG.edit() w różnych kontekstach
::   WE: _a - TR_NAG.ref()
::   WE: params_get()   - ustawiane w exec('zdnag_pop','zamdst_nag')
::                      - ustawiane w exec('zddol','zamdst_nag')
::----------------------------------------------------------------------------------------------------------------------
:: Sprawdzenie poprawności wypełnienia pól nagłówka transportu
_fld:=params_exec('chk_tr_nag','transport');
{? _fld<>''
|| _fld
|| _faks:=_a;
   _out:=params_get().context.out;
   _mp:=params_get().context.mp;
   _akcja:=params_get().context.akcja;
   _var_tr_nag:=params_get().var_tr_nag;

   {? _akcja='Dołącz' | _akcja='Zlecenie' | _akcja='Zlecenie+' | _akcja='Przewoz' | _akcja='START_TODO' | _mp.pathProc()
   || params_set('var_tr_nag',_var_tr_nag);
      exec('tr_nag_pop_po','transport',1);
      _var_tr_nag.PO_FIRST:=2
   |? _akcja='Popraw' | _mp.pathTodo()
   || params_set('var_tr_nag',_var_tr_nag);
      exec('tr_nag_pop_po','transport',1)
   ?};
   ''
?}


\chk_tr_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: sprawdza wypelnienie pol w naglowku transportu
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? TR_NAG.WYJ_D=date(0,0,0)
|| FUN.info('Należy podać dzień wyjazdu.'@);
   _wyn:='WYJ_D'
|? TR_NAG.WLASNY='T' & TR_NAG.POJAZD=null()
|| FUN.info('Należy podać pojazd związany z transportem.'@);
   _wyn:='POJAZD'
|? TR_NAG.WLASNY='N' & TR_NAG.TR_ZEWN=null()
|| FUN.info('Należy podać rodzaj transportu zewnętrznego.'@);
   _wyn:='TR_ZEWN'
|? ~exec('po_tr_rodz','transport_wspolne',TR_NAG.TR_RODZ)
|| _wyn:='TR_RODZ'
?};
{? _wyn='' || exec('tr_nag_teryt_sprawdz','transport') ?};
:: dodatkowa formuła kontrolująca we wtyczce
{? _wyn='' || _wyn:=Plugin.run('VALIDATE_TRAN_001',TR_NAG.ref()) ?};
_wyn


\tr_nag_pop_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Obsługa popraw po zakończeniu edycji (TR_NAG.edit)
::   WE: _a - wynik działania edycji
::       [_b] - 1-wg oferty 0-nie(domyslnie)
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 || return() ?};
{? var_pres('_b')<>type_of(1) || _b:=0 ?};

_var_tr_nag:=params_get().var_tr_nag;
_TR_NAG:=_var_tr_nag.TR_NAG;
_wyj_d:=_var_tr_nag.WYJ_D;
_wyj_t:=_var_tr_nag.WYJ_T;
_pojazd:=_var_tr_nag.POJAZD;
_wlasny:=_var_tr_nag.WLASNY;
_kier:=_var_tr_nag.KIER;
_kier_tel:=_var_tr_nag.KIER_TEL;
_tr_zewn:=_var_tr_nag.TR_ZEWN;
_tr_zewnu:=_var_tr_nag.TR_ZEWNU;
_tr_zewnt:=_var_tr_nag.TR_ZEWNT;
_po_first:=_var_tr_nag.PO_FIRST;

{? _po_first=1
:: Dotyczy wywołania dla Dołącz - wtedy jako wartości przed ustawia zmienne z nagłówka
|| _wyj_d:=_var_tr_nag.WYJ_D;
   _wyj_t:=_var_tr_nag.WYJ_T;
   _pojazd:=_var_tr_nag.POJAZD;
   _wlasny:=_var_tr_nag.WLASNY;
   _kier:=_var_tr_nag.KIER;
   _kier_tel:=_var_tr_nag.KIER_TEL;
   _tr_zewn:=_var_tr_nag.TR_ZEWN;
   _tr_zewnu:=_var_tr_nag.TR_ZEWNU;
   _tr_zewnt:=_var_tr_nag.TR_ZEWNT;
   _po_first:=_var_tr_nag.PO_FIRST
?};

{? TR_NAG.STAT_REJ='N'
|| TR_NAG.cntx_psh();
   TR_NAG.prefix();
   {? _po_first || {? TR_NAG.NR=0 || exec('fak_numer','numery','',0); exec('znak','numery','TR_NAG') ?} ?};
   TR_NAG.put();
   TR_NAG.cntx_pop();
   TR_NAG.get()
?}


\tr_nag_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: lock nagłówka transportu
::   WE: _a - czy pytac o osobe blokujaca
::   WY: _wyn - 0-zablokowany 1-bez blokady
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=1 ?};

_wyn:=TR_NAG.r_lock(1,1,1);
{? _wyn=0 & _a & FUN.ask('Transport %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@[TR_NAG.SYM])
|| TR_NAG.r_lock(1,,1)
?};
TR_NAG.r_unlock();
_wyn


\done_blk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: usunięcie blokad
::   WE: _a - TR_NAG.ref()
::----------------------------------------------------------------------------------------------------------------------
{? _a<>null()
|| TR_NAG.cntx_psh();
   TR_NAG.prefix();
   {? TR_NAG.seek(_a) || TR_NAG.r_unlock() ?};
   TR_NAG.cntx_pop()
?};
~~


\tr_nag_zakoncz_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Transport - Zakończ - okno redagowania
::   WE: params_get()
::   WY: 'key:F2' - jeśli pola nagłówka zamówienia sprzedaży prawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka zamówienia sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().context.mp;

_btnRuleResult:='';

_fld:=params_exec('tr_nag_edit_finisher','transport',TR_NAG.ref());
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| TR_NAG.get();
   {? exec('tr_nag_akc','transport',BPMN.END=2)
   || _btnRuleResult:='key:F2';
      _mp.done()
   ?}
?};

_btnRuleResult


\tr_nag_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: zakończenie redakcji transportu
::   WE: [_a] - 0-z pytaniami(domyślnie) 1-bez
::   WY: 1-zakończono rejestrację 0-nie
::----------------------------------------------------------------------------------------------------------------------
_auto:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_dats:=0;
_courier:=0;

_wyn:=0;
_fld:='';
TR_NAG.get();
TR_NAG.cntx_psh();
TR_NZL.cntx_psh();
exec('ini_kom','#message','Informacje o zakończeniu rejestracji transportu.'@);
__kom_gr:='Transport %1'@[TR_NAG.SYM];
{? exec('tr_nag_lock','transport') & TR_NAG.r_lock(1,1,1)
||
   {? ~exec('tr_rodz_ope','transport_wspolne',TR_NAG.TR_RODZ,'Transport'@,'Zakończenie niemożliwe.'@,1)
   || _ok:=0
   |? TR_NAG.STAT_REJ='N'
   || _rodzaj:=TR_NAG.TR_RODZ;
      TR_NZL.index('TR_NAG');
      TR_NZL.prefix(TR_NAG.ref());
      {? ~TR_NZL.first()
      || exec('add_kom','#message','Transport nie posiada pozycji.'@,2);
         _ok:=0
      ||
::       Dodatkowa kontrola rodzaju
         _many:=0;
         {!
         |? _many+=_rodzaj<>null() & TR_NZL.TR_RODZ<>_rodzaj;
            {? TR_NZL.DT<>TR_NZL.TR_NAG().WYJ_D
            || _dats:=1;
               exec('add_kom','#message'
                ,'Data wyjazdu (%1) '
                 'transportu inna niż dyspozycji %2 (%3).'@[$TR_NAG.WYJ_D,exec('TR_NZL','#to_string'),$TR_NZL.DT],19)
            ?};
            {? TR_NZL.TR_ZEWN<>null() & TR_NZL.TR_ZEWN().COURIER<>'' & TR_NAG.TR_ZEWN<>TR_NZL.TR_ZEWN
            || _courier:=1;
               exec('add_kom','#message'
                ,'Trasa dla dyspozycji (%1) dotyczy przesyłki kurierskiej. '
                 'Inny sposób transportu w nagłówku.'@[exec('TR_NZL','#to_string')],15)
            ?};
            TR_NZL.next()
         !};
         {? ~_auto & _many
         || {? FUN.ask('Na transporcie znajdują się trasy o innym rodzaju niż %1.\n\n'
                       'Czy zakończyć rejestrację transportu?'@[TR_NAG.TR_RODZ().KOD])
            || _many:=2;
               _ok:=1
            || _ok:=0
            ?}
         || _ok:=1
         ?};
         {? ~_auto & _ok & _courier
         || {? FUN.ask('Na transporcie znajdują się trasy dotyczące przesyłek kurierskich.\n'
                       'Dla nagłowka podano inny sposób transportu.\n\n'
                       'Czy zakończyć rejestrację transportu?'@)
            || _many:=2;
               _ok:=1
            || _ok:=0
            ?}
         || _ok:=1
         ?}
      ?};

      {? _ok &
        (_auto | _many=2 | FUN.ask('Zakończyć rejestrację transportu?'@))
      || TR_NAG.prefix();
         TR_NAG.STAT_REJ:='Z';
         {? TR_NAG.put()
         || exec('refreshTR_NZL','transport',TR_NAG.ref());
            exec('statTR_NAG','transport',TR_NAG.ref());
            TR_NAG.get();
            _wyn:=1;
            {? ~_auto & ~_dats || _auto:=1 ?};
            exec('add_kom','#message','Zakończono rejestrację transportu'@,1)
         ?}
      ?}
   || exec('add_kom','#message'
        ,{? TR_NAG.STAT_REJ='Z'
         || 'Transport ma status zakończenia rejestracji'@
         || 'Nieprawidłowy status rejestracji transportu'@
         ?},2);
      _wyn:=1
   ?};
   TR_NAG.r_unlock()
?};
{? _wyn & _auto & var_pres('__kom_on')=type_of(1)
||
   __kom_on:=0
?};
exec('end_kom','#message');
TR_NAG.cntx_pop();
TR_NZL.cntx_pop();
TR_NAG.get();
_wyn


\bl_tr_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: blank TR_NAG.ref()
::----------------------------------------------------------------------------------------------------------------------
TR_NAG.ref()


\tr_nag_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: usuniecie transportu
::   WE: [_a] - =1-usuwac transport bez pytania,
::               2-usuwac bez pytania i sprawdzania statusu (archiwizacja),
::               -1-usuwac transport bez pytania i kontroli kategorii,
::               0-wpp
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=0 ?};

_do_state:=do_state();
_res:={? _a>=0 || exec('tr_rodz_del','transport_wspolne',TR_NAG.TR_RODZ,'Transport'@) || 1 ?};
_a:=fabs(_a);
{? ~_res
|| ''
|? (_a=2 | 'N'*TR_NAG.STAT_REJ) & exec('tr_nag_lock','transport') & TR_NAG.r_lock(1,1,1)
|| {? _a>=1 | FUN.ask('Usunąć cały transport?'@)
   || {? TR_NAG.r_lock(1)
      || {? _do_state=0 || do() ?};
         _ref:=TR_NAG.ref();
         TR_NZL.cntx_psh();
         TR_NZL.index('TR_NAG');
         TR_NZL.prefix(_ref);
         {? TR_NZL.first()
         || {!
            |? _trnzl:=TR_NZL.ref();
               _next:=TR_NZL.next();
               TR_NZL.cntx_psh();
               TR_NZL.prefix();
               {? TR_NZL.seek(_trnzl)
               || TR_NZL.LP_TR:=0;
                  TR_NZL.TR_NAG:=null();
                  TR_NZL.DP:=date(0,0,0);
                  TR_NZL.PLAN:='T';
                  TR_NZL.STATUS:=exec('tr_nzl_status','transport_zlec');
                  {? TR_NZL.WHERE='TR_NZL' || exec('status_MG','transport_wspolne') ?};
                  {? TR_NZL.STATUS<>exec('tr_nzl_status_do_planowania','transport_zlec') || TR_NZL.PLAN:='N' ?};
                  {? ~TR_NZL.put(1)
                  || undo()
                  ?}
               ?};
               TR_NZL.cntx_pop();
               _next
            !}
         ?};
         TR_NZL.cntx_pop();
         _ok:=1;
         {? exec('deladok','dokum','TR_NAG')<>1
         || _ok:=0;
            undo();
            FUN.info('Transportu %1 nie udało się usunąć,\n'
                     'ponieważ usunięcie załączników nie powiodło się.'@[TR_NAG.SYM])
         ?};
         {? _ok
         || TR_KOS.index('TR_NAG');
            TR_KOS.prefix(TR_NAG.ref());
            {? TR_KOS.first()
            || {!
               |? _trUID:=TR_KOS.uidref();
                  TR_KOS.cntx_psh();
                  TR_KOS.index('ID_KOS');
                  TR_KOS.prefix(_trUID);
                  {? TR_KOS.first()
                  || {!
                     |? {? TR_KOS.POZ_REF<>''
                        || _ok:=0;
                           undo();
                           FUN.info('Transportu %1 nie udało się usunąć,\n'
                                    'ponieważ choć jeden z rozliczonych kosztów został zafakturowany.'@[TR_NAG.SYM])
                        || _ok:=TR_KOS.del(,1)
                        ?};
                        _ok>1
                     !}
                  ?};
                  TR_KOS.cntx_pop();

                  _ok:=TR_KOS.del(,1);
                  _ok>1
               !}
            ?}
         ?};
         {? _ok & TR_NAG.count()=0
         || Plugin.run('BEFORE_DELTAB_001',TR_NAG.ref());
            {? _a<>2
            || POM.TAB:='TR_NAG';
               POM.TYPDOK:='TRA';
               numer:=TR_NAG.NR;
               oldnumer:=1;
               exec('nr_old','numery')
            ?};
            TR_NAG.del(1);
            _ok:=do_state();
            echo()
         || undo()
         ?};
         {? _do_state=0 || end() ?}
      ?}
   ?};
   TR_NAG.r_unlock()
?};
1


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Zaznacza wymagalne pola w nagłówku transportu
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || TR_NAG.win_edit('?') ?};

:: czy użytkownik ma prawo do edycji lub przeglądania danych osobowych
_kier:=exec('chk_role','#b__box',OPERATOR.USER,'ZWS_DOS_PPDO')
     | exec('chk_role','#b__box',OPERATOR.USER,'ZWS_DOS_PRDO');

_kpo:=exec('isKPO','odpady',TR_NAG.IDADD);

{? TR_NAG.WLASNY='T'
|| _mawl:='mark=1';
   _maob:='mark=0';
   _enwl:='enable=1';
   _enob:='enable=0'
|| _mawl:='mark=0';
   _maob:='mark=1';
   _enwl:='enable=0';
   _enob:='enable=1'
?};


TR_NAG.efld_opt(_win_red,'mark=1',,'WYJ_D');
TR_NAG.efld_opt(_win_red,{? _kpo || 'editable=0' || 'editable=1' ?},,'WYJ_D');
TR_NAG.efld_opt(_win_red,'mark=1',,'NR');

TR_NAG.efld_opt(_win_red,_mawl,,'POJAZD','NAZ');

TR_NAG.efld_opt(_win_red,_maob,,'TR_ZEWN');

{? _kier || TR_NAG.efld_opt(_win_red,_enwl,,'KIER') || TR_NAG.efld_opt(_win_red,'enable=0',,'KIER') ?};
TR_NAG.efld_opt(_win_red,_enwl,,'KIER_TEL');

TR_NAG.efld_opt(_win_red,_enob,,'TR_ZEWN');
TR_NAG.efld_opt(_win_red,_enob,,'TR_ZEWNN');
TR_NAG.efld_opt(_win_red,_enob,,'TR_ZEWNT');
TR_NAG.efld_opt(_win_red,_enob,,'TR_ZEWNU');
TR_NAG.efld_opt(_win_red,_enob,,'TR_ZEWNK');
{? exec('uprTR_RODZ','transport_wspolne',OPERATOR.USER)=-1
|| TR_NAG.efld_opt(_win_red,'mark=1',,'TR_RODZ')
|| TR_NAG.efld_opt(_win_red,'mark=0',,'TR_RODZ')
?};

1


\tr_nag_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła ikony dla STAT_REJ
::----------------------------------------------------------------------------------------------------------------------
"  {? TR_NAG.STAT_REJ='Z'
   || {? exec('ctrlMAG','transport',TR_NAG.ref())
      || exec('waitMG','icon')
      || exec('zarejestrowany','icon')
      ?}
   |? TR_NAG.STAT_REJ='T' || exec('zaakceptowany','icon')
   |? TR_NAG.STAT_REJ='N' || exec('pusta','#icon')
   || exec('pusta','#icon')
   ?}
"


\tr_nag_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: ustawienie kolorowania dla tranportu
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_wer:=cur_win(1,1);
_act:='';
_act_hid:='';
_act_dom:='?:?';

_sel:=TR_NAG.sel_size()>0;

_wyc:={? ~_sel & TR_NAG.STAT_REJ='Z' & exec('ENDreaTran','transport',TR_NAG.ref())>0  || 'N(C)' || '' ?};
_mag:={? ~_sel & TR_NAG.STAT_REJ='Z' & exec('ctrlMAG','transport',TR_NAG.ref(),1) || 'N(CK)' || '' ?};
_nokat:={? ~_sel & ~exec('tr_rodz_ope','transport_wspolne',TR_NAG.TR_RODZ,'Transport'@,''@,2) || 'UZN(CHKD)' || '' ?};
{? _wer='REAL'
|| _end:={? ~_sel & (';TN'*TR_NAG.STAT_REJ)>1 || 'N(K)' || '' ?};
   {? TR_NAG.name()+4='____'
   || _act+={? TR_NAG.STAT_REJ='T' || 'PUZN(K)'
            |? TR_NAG.STAT_REJ='Z' || 'PUZ'+_wyc+_mag
                                   || {? ~_sel || 'N(CK)' || 'N(K)' ?}
                                   ?}
   || _act_hid:='DPUZEN(OCRKH):DE';
      _act_dom:='R:R'
   ?}
?};
_act+=_nokat;

TR_NAG.actions(_wer,_act_hid,_act_dom,1);
TR_NAG.actions_grayed(_wer,_act);

{? TR_NAG.STAT_REJ='Z'
|| _res:={? _mag<>'' || 'TR_NAG#01#02' || 'TR_NAG#01#01' ?}
?};
_res


\tr_nag_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: popraw na transporcie
::----------------------------------------------------------------------------------------------------------------------
_res:=exec('tr_rodz_mod','transport_wspolne',TR_NAG.TR_RODZ,'Transport'@,1);
{? ~_res
|| ''
|? TR_NAG.STAT_REJ<>'N'
|| FUN.info('Transport nie podlega modyfikacji.'@)
|? exec('tr_nag_lock','transport')
||
   POM.TAB:='TR_NAG';
   POM.TYPDOK:='TRA';

   _bie_trnag:=#TR_NAG.ref();
   _new_trnag:=null;

   TR_NAG.cntx_psh();
   TR_NAG.prefix();
   {? TR_NAG.r_lock(1,1,1)
   || _wyj_d:=TR_NAG.WYJ_D;
      _wyj_t:=TR_NAG.WYJ_T;
      _pojazd:=TR_NAG.POJAZD;
      _wlasny:=TR_NAG.WLASNY;
      _kier:=TR_NAG.KIER;
      _kier_tel:=TR_NAG.KIER_TEL;
      TR_NAG.memo_get(,'UW');
      TR_NAG.memo_get(,'TR_KHBIS');
      _var_tr_nag:=exec('var_tr_nag','transport');
      TR_NAG.get();
      _var_tr_nag.WYJ_D:=TR_NAG.WYJ_D;
      _var_tr_nag.WYJ_T:=TR_NAG.WYJ_T;
      _var_tr_nag.POJAZD:=TR_NAG.POJAZD;
      _var_tr_nag.KIER:=TR_NAG.KIER;
      _var_tr_nag.KIER_TEL:=TR_NAG.KIER_TEL;
      _var_tr_nag.WLASNY:=TR_NAG.WLASNY;
      _var_tr_nag.PO_FIRST:=0;

      params_set('context',params_get(),'var_tr_nag',_var_tr_nag);

      exec('tr_nag_win_edit_set','transport',exec('FindInSet','#table','TR_NZL','TR_NAG',TR_NAG.ref())<>null());
      _nag_edit:=TR_NAG.edit("params_exec('chk_tr_nag','transport')");
      {? _nag_edit
      || {? TR_NAG.put(1) || TR_NAG.memo_put(,'UW'); TR_NAG.memo_put(,'TR_KHBIS') ?};
         _var_tr_nag.WYJ_D:=TR_NAG.WYJ_D;
         _var_tr_nag.WYJ_T:=TR_NAG.WYJ_T;
         _var_tr_nag.POJAZD:=TR_NAG.POJAZD;
         _var_tr_nag.KIER:=TR_NAG.KIER;
         _var_tr_nag.KIER_TEL:=TR_NAG.KIER_TEL;
         _var_tr_nag.WLASNY:=TR_NAG.WLASNY;
         _var_tr_nag.PO_FIRST:=0;
         params_set('context',params_get(),'var_tr_nag',_var_tr_nag);
         {? TR_NAG.STAT_REJ='N'
         || {? _wyj_d<TR_NAG.WYJ_D || exec('aktDPtran','transport',TR_NAG.ref()) ?};
            exec('tr_nag_pop_po','transport',_nag_edit)
         ?}
      ?};
      TR_NAG.r_unlock()
   ?};
   TR_NAG.cntx_pop();
   {? _new_trnag=null()
   ||
      {? _bie_trnag>0 || TR_NAG.seek(_bie_trnag,) ?}
   ||
      {? TR_NAG.seek(_new_trnag)=0
      ||
         FUN.info('Aktualnie zredagowany transport nie jest dostępnt w ustawionym zakresie widoku transportów.'@);
         {? _bie_trnag>0 || TR_NAG.seek(_bie_trnag,) ?}
      ?}
   ?}
?};
''


\tr_nag_zakoncz_tr_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Transport - Zakończ - okno redagowania
::   WE: params_get()
::   WY: 'key:F2' - jeśli pola nagłówka dyspozycji transportowej prawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dyspozycji transportowej
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_act_uid:='LTR_TRA_DZLE';
exec('btn_EndPosition','okienka',_act_uid,TR_NAG.uidref(),TR_NAG
 ,'Zakończ_wer','Zakończyć rejestrację transportu %1?'@[TR_NAG.SYM])


\wybTR_NAG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Wybór transportu
::   WE: [_a] - data
::       [_b] - kategoria
::   WY: uidref lub ''
::----------------------------------------------------------------------------------------------------------------------
_data:={? var_pres('_a')=type_of(date()) || _a || TR_NZL.DT ?};
_tr_rodz:={? var_pres('_b')=type_of(null()) || _b || TR_NZL.TR_RODZ ?};

VAR_DEL.delete('__reswyb');
_res:=__reswyb:='';
TR_NAG.cntx_psh();
_ndx:=TR_NAG.ndx_tmp('',0,'STAT_REJ',,,'WYJ_D',,,'TR_RODZ',,);
TR_NAG.index('STAT_REJ');
TR_NAG.prefix('N');
{? TR_NAG.first()
|| _winsel:=TR_NAG.win_sel('?');
   TR_NAG.win_sel('SEL');
   {? _data<>date(0,0,0) & _tr_rodz<>null()
   || _jest:=TR_NAG.find_tab('first','WYJ_D',,'=',_data,'TR_RODZ',,'=',_tr_rodz);
      {? ~_jest
      || TR_NAG.find_tab('first','WYJ_D',,'>=',_data,'TR_RODZ',,'=',_tr_rodz)
      || _ref:=TR_NAG.ref();
         {? TR_NAG.find_tab('next','WYJ_D',,'=',_data,'TR_RODZ',,'=',_tr_rodz)
         || {? FUN.ask('Czy ograniczyć transporty do danej daty i kategorii?'@)
            || TR_NAG.index(_ndx);
               TR_NAG.prefix('N',_data,_tr_rodz)
            ?};
            TR_NAG.seek(_ref)
         ?}
      ?}
   ?};
   {? TR_NAG.select(,1) || _res:={? __reswyb='add' || 'add' || TR_NAG.uidref() ?} ?};
   TR_NAG.win_sel(_winsel)
|| _res:='add'
?};
TR_NAG.ndx_drop(_ndx);
TR_NAG.cntx_pop();
VAR_DEL.delete('__reswyb');
_res


\tr_nag_sel_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: rezygnacja z wyboru - dołaczenie nowego transportu
::----------------------------------------------------------------------------------------------------------------------
__reswyb:='add';
sel_exit()


\dndTR_NZL_trasy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: drag & drop dla tras i dyspozycji
::----------------------------------------------------------------------------------------------------------------------
_tab:=dnd_info('dropped_records');
_dest:=dnd_info('dest_record');
_rodzaj:='';
_tr_nag:={? TR_NAG.size() || TR_NAG.ref() || null() ?};
_tr_rodz:={? TR_NAG.size() || TR_NAG.TR_RODZ || null() ?};
_par:=exec('get','#params',700811,2)='T';

_zmiana:=0;
TR_NAG.cntx_psh();
TR_NZL.cntx_psh();
{? _tab.size() & _tab.first()
|| TR_NZL.cntx_psh();
   TR_NZL.prefix();
   _rod:={? TR_NZL.seek(_tab.REF,) || {? TR_NZL.TR_NAG<>null() || 'T' || 'P' ?} || '' ?};
   TR_NZL.cntx_pop();

   _oki:={? _tr_nag<>null()& _rod='P' || exec('tr_rodz_mod','transport_wspolne',_tr_rodz,'Transport'@,1) || 1 ?};
   {? ~_oki
   || ''
   |? _rod='T' & TR_NZL.TR_NAG().BLKORD<>'T'
   || {? TR_NZL.seek(_dest)
      || {? _par
         || TR_NZL.index('TR_NAG2');
            TR_NZL.prefix(_tr_nag)
         || TR_NZL.index('TR_NAG');
            TR_NZL.prefix(_tr_nag,'no')
         ?};
         exec('zmien_lp','#dragdrop','LP_TR',{? _par || 'TR_NAG2' || 'TR_NAG' ?},_tab);
         exec('lp2mg','transport',TR_NZL.TR_NAG);
         TR_NAG.prefix();
         {? TR_NAG.seek(TR_NZL.TR_NAG)
         || TR_NAG.MANUAL:='T';
            TR_NAG.put(1)
         ?}
      ?}
   |? _tr_nag<>null() & _rod='P'
   || {? FUN.ask('Czy dodać do transportu wskazane pozycje?'@)
      || _ilz:=_tab.size();
         _ild:=exec('nzl2tr_poz','transport',_tr_nag,_tab);
         _zmiana:=1;
         FUN.info('Dodano do transportu %1 tras z %2 wybranych\n'
                  '(wg uprawnień do kategorii transportu).'@[$_ild,$_ilz])
      ?}
   ?}
?};
TR_NAG.cntx_pop();
TR_NZL.cntx_pop();
{? _zmiana=1 || grp_disp(TR_NZL,'PLAN'); grp_disp(TR_NZL,'TRASY') ?};
1


\dndTR_NZL_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: drag & drop dla tras i dyspozycji
::----------------------------------------------------------------------------------------------------------------------
_tab:=dnd_info('dropped_records');
_dest:=dnd_info('dest_record');
_zmiana:=0;

TR_NAG.cntx_psh();
TR_NZL.cntx_psh();
{? _tab.size() & _tab.first()
|| TR_NZL.prefix();
   _rod:={? TR_NZL.seek(_tab.REF,) || {? TR_NZL.TR_NAG<>null() || 'T' || 'P' ?} || '' ?};
   {? _rod='T'
   || {? FUN.ask('Czy usunąć z transportu (przenieść do planowania) wskazane pozycje?'@)
      || _ilz:=_tab.size();
         _ild:=exec('nzlNOtr_poz','transport',_tab);
         _zmiana:=1;
         FUN.info('Usunięto z transportu %1 tras z %2 wybranych\n'
                 '(wg uprawnień do kategorii transportu).'@[$_ild,$_ilz])
      ?}
   |? _rod='P'
   || ''
::      {? FUN.ask('Czy utworzyć grupę?'@)
::      || msg()
::      ?}
   ?}
?};
TR_NAG.cntx_pop();
TR_NZL.cntx_pop();
{? _zmiana=1 || grp_disp(TR_NZL,'PLAN'); grp_disp(TR_NZL,'TRASY') ?};
1


\nzl2tr_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Przenosi dyspozycje transportowe na pozycje transportu
::   WE: _a - ref nagłowka transportu
::       _b - lista dyspozycji
::       [_c] - 0-bez zapisu do log-a 1(domyślnie)-zapis
::       [_d] - 1-czy nowy transport 0(domyślnie)-dołaczenie do istniejącego
::   WY: informacja ile przeniesiono
::----------------------------------------------------------------------------------------------------------------------
_addlog:={? var_pres('_c')=type_of(0) || _c || 1 ?};
_newtra:={? var_pres('_d')=type_of(0) || _d || 0 ?};

_tnzl:=_b;
_res:=0;
do();
_onlyone:=0;
TR_NZL.cntx_psh();
TR_NAG.cntx_psh();
_tr_nag:=null();
_tnzl.clear();
{? _tnzl.first()
|| _onlyone:=_newtra & _tnzl.size()=1 & exec('FindInSet','#table','TR_NZL','TR_NAG','no',_a)=null();
   {!
   |? {? (TR_NZL.prefix(); TR_NZL.seek(_tnzl.REF,)) & TR_NZL.STAT_REJ='Z' & TR_NZL.PLAN='T'
        & exec('tr_rodz_ope','transport_wspolne',TR_NZL.TR_RODZ,'Dyspozycja'@,''@,2)
      || {? _onlyone & TR_NAG.seek(_a)
         || TR_NAG.WYJ_D:={? TR_NZL.DT>=date() || TR_NZL.DT || date(0,0,0) ?};
            TR_NAG.WLASNY:=TR_NZL.WLASNY;
            TR_NAG.POJAZD:=TR_NZL.POJAZD;
            TR_NAG.TR_ZEWN:=TR_NZL.TR_ZEWN;
            TR_NAG.put(1)
         ?};
         TR_NZL.TR_NAG:=_a;
         TR_NZL.DP:=TR_NZL.TR_NAG().WYJ_D;
         _tr_nag:=TR_NZL.TR_NAG;
         TR_NZL.PLAN:='N';
         TR_NZL.LP_TR:=-1;
         {? TR_NZL.REAL='A' || TR_NZL.POW:=''; TR_NZL.REAL:='P' ?};
         _transport:={? TR_NZL.TR_NAG().WLASNY='T'
                     || '%2 własny %1'@[TR_NZL.TR_NAG().POJAZD().NRREJ,TR_NZL.TR_NAG().SYM]
                     || '%2 zewnętrzny %1'@[TR_NZL.TR_NAG().TR_ZEWN().KOD,TR_NZL.TR_NAG().SYM]
                     ?};
         _opis:=' (Transport %2 na dzień: %1)'@[$TR_NZL.TR_NAG().WYJ_D+', '+form(TR_NZL.TR_NAG().WYJ_T,,3),_transport];
         {? TR_NZL.put(1)
         || _res+=1; _ref:=TR_NZL.ref();
            TR_NZL.STATUS:=exec('tr_nzl_status','transport_zlec');
            {? TR_NZL.WHERE='TR_NZL' || exec('status_MG','transport_wspolne') ?};
            {? TR_NZL.put(1) & _addlog || exec('log_nag','transport_wspolne',TR_NZL.uidref(),'tran',_opis) ?};
            {? TR_NZL.WHERE='UPMZAD' & TR_NZL.DOK_REF<>''
            || VAR_DEL.delete('__dtzad');
               __dtzad:=TR_NZL.DP;
               exec('FindAndGet','#table',UPMZAD,TR_NZL.DOK_REF,,"DT:=__dtzad; put(1)",1);
               VAR_DEL.delete('__dtzad')
            ?};
            {? TR_NZL.GRP<>'' & TR_NZL.SPLIT=''
            || TR_NZL.cntx_psh();
               TR_NZL.index('GRP');
               TR_NZL.prefix(TR_NZL.GRP,);
               {? TR_NZL.first()
               || {!
                  |? {? TR_NZL.STAT_REJ='Z' & TR_NZL.PLAN='T'
                     || TR_NZL.TR_NAG:=_a;
                        TR_NZL.DP:=TR_NZL.TR_NAG().WYJ_D;
                        TR_NZL.PLAN:='N';
                        TR_NZL.LP_TR:=-1;
                        {? TR_NZL.REAL='A' || TR_NZL.POW:=''; TR_NZL.REAL:='P' ?};
                        {? TR_NZL.put(1)
                        || {? TR_NZL.ref()<>_ref & TR_NZL.WHERE<>'TR_NZL' || _res+=1 ?};
                           TR_NZL.STATUS:=exec('tr_nzl_status','transport_zlec');
                           {? TR_NZL.WHERE='TR_NZL' || exec('status_MG','transport_wspolne') ?};
                           {? TR_NZL.put(1) & _addlog || exec('log_nag','transport_wspolne',TR_NZL.uidref(),'tran',_opis) ?};
                           {? TR_NZL.WHERE='UPMZAD' & TR_NZL.DOK_REF<>''
                           || VAR_DEL.delete('__dtzad');
                              __dtzad:=TR_NZL.DP;
                              exec('FindAndGet','#table',UPMZAD,TR_NZL.DOK_REF,,"DT:=__dtzad; put(1)",1);
                              VAR_DEL.delete('__dtzad')
                           ?}
                        ?}
                     ?};
                     TR_NZL.next()
                  !}
               ?};
               TR_NZL.cntx_pop()
            ?}
         ?}
      ?};
      _tnzl.next()
   !}
?};
{? _tr_nag<>null() & _res
|| exec('autoRENUMtrasy','transport',_tr_nag);
   exec('statTR_NAG','transport',_tr_nag)
?};
TR_NZL.cntx_pop();
TR_NAG.cntx_pop();
end();
{? _onlyone || TR_NAG.get() ?};
_res


\nzlNOtr_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Przenosi dyspozycje transportowe na pozycje transportu
::   WE: _a - lista dyspozycji
::   WY: liczba usuniętych z transportu
::----------------------------------------------------------------------------------------------------------------------
_tnzl:=_a;
_res:=0;
do();
TR_NZL.cntx_psh();
TR_NAG.cntx_psh();
_tr_nag:=null();
_tnzl.clear();
{? _tnzl.first()
|| {!
   |? {? (TR_NZL.prefix(); TR_NZL.seek(_tnzl.REF,)) & TR_NZL.STAT_REJ='Z' & TR_NZL.PLAN='N'
       & exec('tr_rodz_ope','transport_wspolne',TR_NZL.TR_RODZ,'Dyspozycja'@,''@,2)
      || _tr_nag:=TR_NZL.TR_NAG;
         _transport:={? TR_NZL.TR_NAG().WLASNY='T'
                     || '%2 własny %1'@[TR_NZL.TR_NAG().POJAZD().NRREJ,TR_NZL.TR_NAG().SYM]
                     || '%2 zewnętrzny %1'@[TR_NZL.TR_NAG().TR_ZEWN().KOD,TR_NZL.TR_NAG().SYM]
                     ?};
         _opis:=' (Transport %2 na dzień: %1)'@[$TR_NZL.TR_NAG().WYJ_D+', '+form(TR_NZL.TR_NAG().WYJ_T,,3),_transport];
         TR_NZL.TR_NAG:=null();
         TR_NZL.DP:=date(0,0,0);
         TR_NZL.PLAN:='T';
         TR_NZL.LP_TR:=0;
         {? TR_NZL.REAL='P' || TR_NZL.REAL:='A' ?};
         {? TR_NZL.put(1)
         || _res+=1; _ref:=TR_NZL.ref();
            TR_NZL.STATUS:=exec('tr_nzl_status','transport_zlec');
            {? TR_NZL.WHERE='TR_NZL' || exec('status_MG','transport_wspolne') ?};
            {? TR_NZL.STATUS<>exec('tr_nzl_status_do_planowania','transport_zlec') || TR_NZL.PLAN:='N' ?};
            {? TR_NZL.put(1) || exec('log_nag','transport_wspolne',TR_NZL.uidref(),'notr',_opis) ?};
            {? TR_NZL.WHERE='UPMZAD' & TR_NZL.DOK_REF<>''
            || VAR_DEL.delete('__dtzad');
               __dtzad:=TR_NZL.DP;
               exec('FindAndGet','#table',UPMZAD,TR_NZL.DOK_REF,,"DT:=__dtzad; put(1)",1);
               VAR_DEL.delete('__dtzad')
            ?};
            {? TR_NZL.GRP<>''
            || TR_NZL.cntx_psh();
               TR_NZL.index('GRP');
               TR_NZL.prefix(TR_NZL.GRP,);
               {? TR_NZL.first()
               || {!
                  |? TR_NZL.TR_NAG:=null();
                     TR_NZL.DP:=date(0,0,0);
                     TR_NZL.PLAN:='T';
                     TR_NZL.LP_TR:=0;
                     {? TR_NZL.REAL='P' || TR_NZL.REAL:='A' ?};
                     TR_NZL.STATUS:=exec('tr_nzl_status','transport_zlec');
                     {? TR_NZL.WHERE='TR_NZL' || exec('status_MG','transport_wspolne') ?};
                     {? TR_NZL.STATUS<>exec('tr_nzl_status_do_planowania','transport_zlec') || TR_NZL.PLAN:='N' ?};
                     {? TR_NZL.put(1)
                     || {? TR_NZL.ref()<>_ref & TR_NZL.WHERE<>'TR_NZL'
                        || _res+=1
                        |? TR_NZL.WHERE='TR_NZL'
                        || _tnzl.cntx_psh();
                           _tnzl.prefix();
                           {? _tnzl.find_tab('first','REF',,'=',#TR_NZL.ref()) || _res+=1 ?};
                           _tnzl.cntx_pop()
                        ?};
                        exec('log_nag','transport_wspolne',TR_NZL.uidref(),'notr')
                     ?};
                     {? TR_NZL.WHERE='UPMZAD' & TR_NZL.DOK_REF<>''
                     || VAR_DEL.delete('__dtzad');
                        __dtzad:=TR_NZL.DP;
                        exec('FindAndGet','#table',UPMZAD,TR_NZL.DOK_REF,,"DT:=__dtzad; put(1)",1);
                        VAR_DEL.delete('__dtzad')
                     ?};
                     TR_NZL.next()
                  !}
               ?};
               TR_NZL.cntx_pop()
            ?}
         ?}
      ?};
      _tnzl.next()
   !}
?};
{? _tr_nag<>null() & _res
|| exec('autoRENUMtrasy','transport',_tr_nag);
   exec('statTR_NAG','transport',_tr_nag)
?};
TR_NZL.cntx_pop();
TR_NAG.cntx_pop();
end();
_res


\autoRENUMtrasy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Renumeracja pozycji transportu wg zasady:
::         - rodzaj: ZAŁADUNEK potem ROZŁADUNEK
::         - kraj, miasto, dzielnica, ulica, numer
::       Jeżeli istnieje pozycja z grupą o danych powyższych parametrach to jest umiejscawiana obok
::        np. ZAŁADUNEK na Mariackiej w Krakowie będzie obok ROZŁADUNKU na Mariackiej w Krakowie
::   WE: _a - TR_NAG.ref()
::----------------------------------------------------------------------------------------------------------------------
_onlyman:=exec('FindAndGet','#table',TR_NAG,_a,,"MANUAL='T'",0);
_ii:=0;

_resOrder:=Plugin.run('TRANSPORT_ORDER_001',_a);
_par:=exec('get','#params',700811,2)='T';

{? ~_resOrder
||
   TR_NZL.cntx_psh();
:: usunięcie poprzedniej kolejności
   {? _par
   || TR_NZL.index('TR_NAG2');
      TR_NZL.prefix(_a)
   || TR_NZL.index('TR_NAG');
      TR_NZL.prefix(_a,'no')
   ?};
   {? _onlyman
   || {? TR_NZL.first()
      || {!
         |? {? TR_NZL.LP_TR>0
            || _ii+=1;
               TR_NZL.LP_TR:=_ii;
               TR_NZL.put(1)
            ?};
            TR_NZL.next()
         !}
      ?}
   || {? TR_NZL.last()
      || {!
         |? TR_NZL.LP_TR:=-1;
            TR_NZL.put();
            {? TR_NZL.last() || TR_NZL.LP_TR>=0 || 0 ?}
         !};
         _ii:=0
      ?}
   ?};

   _noref:=tab_tmp(1,'REF','STRING[16]','');

   TR_NZL.index('ORDER');
   TR_NZL.prefix(_a,'Z');
   {? TR_NZL.first()
   || {!
      |? {? (~_onlyman | TR_NZL.LP_TR<0)
         || _ref:=TR_NZL.ref();
            _next:=TR_NZL.next();
            TR_NZL.cntx_psh();
            TR_NZL.prefix();
            {? TR_NZL.seek(_ref)
            || _ii+=1;
               TR_NZL.LP_TR:=_ii;
               TR_NZL.put(1);
               {? TR_NZL.GRP<>''
               ||
::               rozładunki w magazynie
                  _lpgrp:=TR_NZL.LP_TR;
                  TR_NZL.cntx_psh();
                  TR_NZL.index('ORDERMG');
                  TR_NZL.prefix(_a,'TR_NZL','R',TR_NZL.GRP);
                  {? TR_NZL.first()
                  || {!
                     |? {? TR_NZL.WHERE<>'TR_NZL'
                        || TR_NZL.LP_TR:=_lpgrp;
                           {? TR_NZL.put(1)
                           || _noref.clear();
                              _noref.blank();
                              _noref.REF:=$TR_NZL.ref();
                              _noref.add(1)
                           ?}
                        ?};
                        TR_NZL.next()
                     !}
                  ?};
                  TR_NZL.cntx_pop();

                  TR_NZL.cntx_psh();
                  TR_NZL.index('ORDERGRP');
                  TR_NZL.prefix(_a,'R',TR_NZL.GRP,TR_NZL.KRAJ,TR_NZL.MIASTO,TR_NZL.DZIELN,TR_NZL.UL,TR_NZL.NUMER,
                         TR_NZL.LOKAL);
                  {? TR_NZL.first()
                  || {!
                     |? {? TR_NZL.WHERE<>'TR_NZL'
                        || _ii+=1;
                           TR_NZL.LP_TR:=_ii;
                           {? TR_NZL.put(1)
                           || _noref.clear();
                              _noref.blank();
                              _noref.REF:=$TR_NZL.ref();
                              _noref.add(1)
                           ?}
                        ?};
                        TR_NZL.next()
                     !}
                  ?};
                  TR_NZL.cntx_pop()
               ?}
            ?};
            TR_NZL.cntx_pop()
         || _next:=TR_NZL.next()
         ?};
         _next
      !}
   ?};
   TR_NZL.index('ORDER');
   TR_NZL.prefix(_a,'R');
   {? TR_NZL.first()
   || {!
      |? {? (~_onlyman | TR_NZL.LP_TR<0)
         || _ref:=TR_NZL.ref();
            _next:=TR_NZL.next();
            TR_NZL.cntx_psh();
            TR_NZL.prefix();
            {? TR_NZL.seek(_ref)
            || _noref.clear();
               _noref.prefix($TR_NZL.ref(),);
               {? ~_noref.first()
               || _ii+=1;
                  TR_NZL.LP_TR:=_ii;
                  TR_NZL.put(1);
                  {? TR_NZL.GRP<>''
                  ||
::                   załadunki w magazynie
                     _lpgrp:=TR_NZL.LP_TR;
                     TR_NZL.cntx_psh();
                     TR_NZL.index('ORDERMG');
                     TR_NZL.prefix(_a,'TR_NZL','Z',TR_NZL.GRP);
                     {? TR_NZL.first()
                     || {!
                        |? TR_NZL.LP_TR:=_lpgrp;
                           {? TR_NZL.put(1)
                           || _noref.clear();
                              _noref.blank();
                              _noref.REF:=$TR_NZL.ref();
                              _noref.add(1)
                           ?};
                           TR_NZL.next()
                        !}
                     ?};
                     TR_NZL.cntx_pop()
                  ?}
               ?}
            ?};
            TR_NZL.cntx_pop()
         || _next:=TR_NZL.next()
         ?};
         _next
      !}
   ?};
   obj_del(_noref);
   TR_NZL.cntx_pop()

?};
~~


\refreshTR_NZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: aktualizauje statusy dyspozycji transportowych na podstawie nagłówka transportu
::   WE: _a - TR_NAG
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
TR_NZL.cntx_psh();
TR_NZL.index('TR_NAG');
TR_NZL.prefix(_a);
{? TR_NZL.first()
|| {!
   |? {? TR_NZL.TR_NAG().STAT_REJ='T' & TR_NZL.REAL='N'
      || TR_NZL.REAL:='X';
         TR_NZL.DR:=TR_NAG.DZ;
         TR_NZL.GR:=TR_NAG.GZ;
         TR_NZL.put(1)
      |? (';NZ'*TR_NZL.TR_NAG().STAT_REJ)>1 & TR_NZL.REAL='X'
      || TR_NZL.REAL:='N';
         TR_NZL.DR:=date(0,0,0);
         TR_NZL.GR:=time(0,0,0);
         TR_NZL.put(1)
      ?};
      TR_NZL.STATUS:=exec('tr_nzl_status','transport_zlec');
      {? TR_NZL.WHERE='TR_NZL' || exec('status_MG','transport_wspolne') ?};
      {? ~TR_NZL.put(1) || _res:=0 ?};
      TR_NZL.next()
   !}
?};
TR_NZL.cntx_pop();
_res


\tr_nzl_realizuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: realizacja dla transportu - od strony dyspozycji transportowego
::----------------------------------------------------------------------------------------------------------------------
TR_Z.REAL:=(';ZK_N;ZD_NAG;ZDP_NAG;ND;REK_N;'*TR_NZL.WHERE)>1;

TR_NZL.cntx_psh();
TR_ZL.cntx_psh();
_old:=TR_ZL.win_edit('?');
_sel:=TR_NZL.sel_aget();
TR_NZL.sel_adel();
{? ~_sel.first() || _sel.REF:=#TR_NZL.ref(); _sel.add() ?};
_onetran:=_sel.size()=1;
{? _onetran
 & ~exec('tr_rodz_ope','transport_wspolne'
     ,exec('FindAndGet','#table',TR_NZL,_sel.REF,,"TR_RODZ",null()),'Dyspozycja transportu'@,'Nie można zrealizować.'@)
|| 0
|? _onetran & (';TR_NZL;ZK_N;ZD_NAG;ZDP_NAG;ND;REK_N;'*TR_NZL.WHERE)>1
|| exec('tr_nzl_gotowe','transport')
|| TR_ZL.win_edit('REA');
   {? _sel.first()
    & {? ~_onetran
      || FUN.ask('Czy zrealizować zaznaczone pozycje?\n\n'
                 'Uwaga. Realizacja ilości dla zaznaczonych pozycji zostanie przepisana z ilości przewożonych.'@)
      || 1
      ?}
   || {!
      |? {? (TR_NZL.prefix(); TR_NZL.seek(_sel.REF,)) & TR_NZL.TR_NAG().STAT_REJ='Z'
          & exec('tr_rodz_ope','transport_wspolne',TR_NZL.TR_RODZ,'Dyspozycja'@,''@,2)
         || _tr_nag:=TR_NZL.TR_NAG().uidref();
            _lp_tr:=TR_NZL.LP_TR;
            _result:=exec('real_wg_tr_nzl','transport',1);
            {? _result & (';TA'*TR_NZL.REAL)>1
            || exec('log_nag','transport_wspolne',TR_NZL.uidref(),{? TR_NZL.REAL='T' || 'reatr' || 'nortr' ?}
                ,,,,_tr_nag,_lp_tr)
            ?}
         ?};
         _sel.next()
      !}
   ?}
?};
TR_NZL.cntx_pop();
TR_ZL.cntx_pop();
TR_ZL.win_edit(_old);
obj_del(_sel);
TR_Z.REAL:=0;
~~


\one_tr_nzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: realizacja dla transportu - jedna dyspozycja transportowa
::   WE: [_a] - TR_NZL.ref()
::       [_b] - 1-jedna dyspozycja(domyślnie) 0-kilka 2-jedno ale obsługa z wyszukiwania realizacji
::   WY: 1-wykonane 0-nie
::----------------------------------------------------------------------------------------------------------------------
 _tr_nzl:={? var_pres('_a')=type_of(null()) || _a || TR_NZL.ref() ?};
_onetran:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_res:=0;
_oki:=0;
_real:='';
TR_ZL.index('POZ');
TR_ZL.prefix(_tr_nzl);
{? TR_ZL.first()
|| _real:=TR_ZL.TR_NZL().REAL;
   {? _onetran=1 & TR_ZL.size()=1
   || TR_ZL.ZIL_T:=TR_ZL.TR_NZL().ZIL_T;
      TR_ZL.ZIL_M3:=TR_ZL.TR_NZL().ZIL_M3;
      TR_ZL.ZIL_SZT:=TR_ZL.TR_NZL().ZIL_SZT;
      {? TR_ZL.ZIL=0 || TR_ZL.ZIL:=TR_ZL.IL ?};
      {? TR_ZL.edit("exec('chk_real','transport')")
      || TR_ZL.REAL:=_real;
         {? TR_ZL.put(1)
         || _oki:=1;
            exec('sum_poz','transport_zlec',TR_ZL.TR_NZL)
         ?}
      ?}
   || {? ~(_onetran%*2)
       | FUN.ask('Czy zrealizować wszystkie pozycje dyspozycji transportowej?\n\n'
          'Uwaga. Realizacja ilości dla pozycji zostanie przepisana z ilości przewożonych.'@)
      || _first:=~(_onetran%*2);
         {!
         |? TR_ZL.REAL:=_real;
            {? _first=1
            || _first:=-1;
               TR_ZL.ZIL:=TR_ZL.IL;
               TR_ZL.ZIL_T:=TR_ZL.TR_NZL().ZIL_T;
               TR_ZL.ZIL_M3:=TR_ZL.TR_NZL().ZIL_M3;
               TR_ZL.ZIL_SZT:=TR_ZL.TR_NZL().ZIL_SZT
            |? _first=-1
            || TR_ZL.ZIL:=TR_ZL.IL;
               TR_ZL.ZIL_T:=0;
               TR_ZL.ZIL_M3:=0;
               TR_ZL.ZIL_SZT:=0;
               TR_ZL.ZIL_OP:=0
            || TR_ZL.ZIL:=TR_ZL.IL;
               TR_ZL.ZIL_T:=TR_ZL.IL_T;
               TR_ZL.ZIL_M3:=TR_ZL.IL_M3;
               TR_ZL.ZIL_SZT:=TR_ZL.IL_SZT;
               TR_ZL.ZIL_OP:=TR_ZL.IL_OP
            ?};
            {? TR_ZL.put(1) || _oki+=1 ?};
            TR_ZL.next()
         !};
         exec('sum_poz','transport_zlec',TR_ZL.TR_NZL)
      ?}
   ?}
?};
TR_NZL.cntx_psh();
TR_NZL.prefix();
{? TR_NZL.seek(_tr_nzl)
|| _tr_nag:=TR_NZL.TR_NAG;
   {? _real<>'' || TR_NZL.REAL:=_real ?};
   {? TR_NZL.REAL='A'
   || TR_NZL.LP_TR:=0;
      TR_NZL.TR_NAG:=null();
      TR_NZL.DP:=date(0,0,0);
      TR_NZL.PLAN:='T'
   ?};
   TR_NZL.STATUS:=exec('tr_nzl_status','transport_zlec');
   {? TR_NZL.WHERE='TR_NZL' || exec('status_MG','transport_wspolne') ?};
   {? TR_NZL.STATUS<>exec('tr_nzl_status_do_planowania','transport_zlec') || TR_NZL.PLAN:='N' ?};
   _res:=TR_NZL.put(1);
   {? _res
   ||
:: aktualizacja mocy transportowych
      exec('FindAndGet','#table',TR_MOC,TR_NZL.TR_MOC,,"
         exec('use','transport_moc')
      ");
      exec('statTR_NAG','transport',_tr_nag)
   ?}
?};
TR_NZL.cntx_pop();
{? ~_oki || _res:=0 ?};
_res


\chk_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: sprawdza wypelnienie pol w naglowku transportu
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? TR_ZL.IL<=0
|| FUN.info('Należy podać ilość przewiezioną.'@);
   _wyn:='ZIL'
?};
_wyn


\tr_nzl_wyc_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: wycofanie realizacji dla transportu - od strony dyspozycji transportowej
::----------------------------------------------------------------------------------------------------------------------
TR_NZL.cntx_psh();
TR_ZL.cntx_psh();
TR_NAG.cntx_psh();
_old:=TR_ZL.win_edit('?');
TR_ZL.win_edit('REA');
_sel:=TR_NZL.sel_aget();
TR_NZL.sel_adel();
{? ~_sel.first() || _sel.REF:=#TR_NZL.ref(); _sel.add() ?};
_onetran:=_sel.size()=1;
{? _sel.first()
 & {? ~_onetran
   || FUN.ask('Czy wycofać realizacji zaznaczonych pozycji?\n\n'
              'Uwaga. Realizacja ilości zostanie wyzerowana.'@)
   || FUN.ask('Czy wycofać realizację pozycji?\n\n'
              'Uwaga. Realizacja ilości zostanie wyzerowana.'@)
   ?}
|| {!
   |? {? (TR_NZL.prefix(); TR_NZL.seek(_sel.REF,)) & ';WT'*TR_NZL.REAL & TR_NZL.TR_NAG().STAT_REJ='Z'
      || _where:=TR_NZL.WHERE;
         TR_ZL.index('POZ');
         TR_ZL.prefix(TR_NZL.ref());
         {? TR_ZL.first()
         || {!
            |? {? ';TA'*TR_ZL.REAL | TR_ZL.ZIL>0
               || TR_ZL.ZIL:=0;
                  TR_ZL.ZIL_T:=0;
                  TR_ZL.ZIL_M3:=0;
                  TR_ZL.ZIL_SZT:=0;
                  TR_ZL.REAL:='N';
                  {? TR_ZL.put(1) & (';ZD_NAG;ZDP_NAG;'*_where)>1
                  || exec('ilr2MG','transport_wspolne',TR_ZL.TR_NZL().GRP
                      ,{? TR_NZL.RODZ='Z' || 'R' || 'Z' ?}
                      ,TR_ZL.MG,TR_ZL.POZ_REF,TR_ZL.ZIL,0,TR_ZL.ZIL_SZT,TR_ZL.ZIL_T,TR_ZL.ZIL_M3,TR_ZL.ZIL_OP)
                  ?}
               ?};
               TR_ZL.next()
            !};
            TR_NZL.get();
            TR_NZL.STATUS:=exec('tr_nzl_status','transport_zlec');
            {? TR_NZL.WHERE='TR_NZL'
            || exec('status_MG','transport_wspolne')
            || ''
            ?};
            {? TR_NZL.put(1) & TR_NZL.TR_NAG<>null()
            || {? TR_NZL.WHERE='UPMZAD' & TR_NZL.DOK_REF<>''
               || VAR_DEL.delete('__dtzad');
                  __dtzad:={? TR_NZL.REAL='T' || TR_NZL.DR || date(0,0,0) ?};
                  exec('FindAndGet','#table',UPMZAD,TR_NZL.DOK_REF,,"DR:=__dtzad; put(1)",1);
                  VAR_DEL.delete('__dtzad')
               ?};
:: aktualizacja mocy transportowych
               exec('FindAndGet','#table',TR_MOC,TR_NZL.TR_MOC,,"
                  exec('use','transport_moc')
               ");
               exec('statTR_NAG','transport',TR_NZL.TR_NAG)
            ?}
         ?}
      ?};
      _sel.next()
   !}
?};
TR_NZL.cntx_pop();
TR_ZL.cntx_pop();
TR_NAG.cntx_pop();
TR_ZL.win_edit(_old);
~~


\tr_nzl_new_order
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: uporządkowanie wg ustalonego algorytmu
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy uporządkować trasy wg przypisanego algorytmu?\n\n'
           'Uwaga. wszelkie modyfikacje kolejności zostaną pominięte.'@)
|| _tr_nag:=TR_NZL.TR_NAG;
   TR_NAG.cntx_psh();
   TR_NZL.cntx_psh();
   TR_NAG.prefix();
   {? TR_NAG.seek(_tr_nag)
   || TR_NAG.MANUAL:='N';
      TR_NAG.put(1)
   ?};
   exec('autoRENUMtrasy','transport',_tr_nag);
   exec('statTR_NAG','transport',_tr_nag);
   TR_NAG.cntx_pop();
   TR_NZL.cntx_pop()
?};
~~


\tr_nzl_win_real_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Ustawia okno redakcji tabeli TR_NZL, wymagane pola, okna słowników
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__btnD','__btnO','__btnE');
_win_red:=exec('tr_nzl_win_edit','transport_zlec','REA');
_ff:="params_exec('tr_nzl_doda','transport')";
__btnD:=TR_NZL.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=end'['&Uzupełnij dane'@],_ff);

_btn:=exec('ok_esc','#window',TR_NZL,_win_red,1);
__btnO:=_btn.OK;
__btnE:=_btn.ESC;
obj_del(_btn);
TR_NZL.win_edit(_win_red);
exec('set_efld_real','transport');
~~


\real_wg_tr_nzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: realizacja z wyszukiwaniem TR_NZL
::   WE: [_a] - 1-tryb poprawy 0-nie (domyślnie)
::----------------------------------------------------------------------------------------------------------------------
_pop:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_result:=0;

VAR_DEL.delete('__btnD','__btnO','__btnE','__znREAL','__ctrlTRAN','__dtREAL','__tmREAL'
 ,'__keyOK','__autoOK','__dodOK','__trybMOD','__autoZM');
__trybMOD:=_pop;
TR_NAG.cntx_psh();
TR_NZL.cntx_psh();
_edit:=TR_NZL.win_edit('?');
exec('tr_nzl_win_real_set','transport');
TR_NZL.prefix();
__znREAL:='T';
__ctrlTRAN:=null();
__dtREAL:=date(0,0,0);
__tmREAL:=time(0,0,0);
__autoOK:='T';
__autoZM:='';
__keyOK:=1;
{!
|? __keyOK:=1;
   {? __trybMOD
   || TR_Z.FIND:=TR_NZL.SYM;
      TR_Z.AUTO:='N';
      {? TR_NZL.DR=date(0,0,0) || TR_NZL.DR:=date() ?}
   || TR_Z.FIND:='';
      TR_NZL.blank();
      TR_Z.AUTO:={? __autoZM<>'' || __autoZM || __autoOK ?};
      {? __dtREAL<>date(0,0,0) || TR_NZL.DR:=__dtREAL ?}
   ?};
   __autoZM:='';
   TR_NZL.REAL:=__znREAL;
   exec('set_efld_real','transport');
   {? TR_NZL.edit("exec('chk_rea_tr_nzl','transport')")
   || __znREAL:=TR_NZL.REAL;
      __ctrlTRAN:=TR_NZL.TR_NAG;
      __dtREAL:=TR_NZL.DR;
      __tmREAL:=TR_NZL.GR;
      __autoOK:=TR_Z.AUTO;

      _tr_moc:=null();
      _il_szt:=0;
      _tr_nag:=TR_NZL.TR_NAG().uidref();
      _lp_tr:=TR_NZL.LP_TR;
      {? TR_NZL.REAL='A'
      ||
         _tr_moc:=TR_NZL.TR_MOC;
         _il_szt:=TR_NZL.IL_SZT;
         TR_NZL.TR_MOC:=null()
      ?};
      _result:=0;
      _resReal:=Plugin.run('TRANSPORT_REAL_001',TR_NZL.ref());
      {? TR_NZL.WHERE='ZLP' & TR_NZL.REAL='T' & __keyOK=1 & _resReal<0
      || _result:=~(params_exec('tr_nzl_doda','transport',1)='key:Esc')
      || _result:={? _resReal<0 || 1 || _resReal ?}
      ?};
      {? _result || _result:=TR_NZL.put(1) ?};
      {? _result & (';TA'*TR_NZL.REAL)>1
      || do();
         exec('log_nag','transport_wspolne',TR_NZL.uidref()
          ,{? TR_NZL.REAL='T' || 'reatr' || 'nortr' ?},,_tr_moc,_il_szt,_tr_nag,_lp_tr);
         {? TR_NZL.WHERE='UPMZAD' & TR_NZL.DOK_REF<>''
         || VAR_DEL.delete('__dtzad');
            __dtzad:={? TR_NZL.REAL='T' || TR_NZL.DR || date(0,0,0) ?};
            exec('FindAndGet','#table',UPMZAD,TR_NZL.DOK_REF,,"DR:=__dtzad; put(1)",1);
            VAR_DEL.delete('__dtzad')
         ?};
         {? ~exec('one_tr_nzl','transport',TR_NZL.ref(),2) || _result:=0; undo() ?};
         end()
      ?};
      ~_pop
   || __keyOK=2
   ?}
!};
TR_NAG.cntx_pop();
TR_NZL.cntx_pop();
VAR_DEL.delete('__btnD','__btnO','__btnE','__znREAL','__ctrlTRAN','__dtREAL','__tmREAL'
 ,'__keyOK','__autoOK','__dodOK','__trybMOD','__autoZM');
TR_NZL.win_edit(_edit);
_result


\find_tr_nzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: wyszukiwanie po symbolu dyspozycji
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? TR_Z.FIND=''
||
::   FUN.info('Należy podać symbol dyspozycji.'@);
   _res:=1
|| {? TR_NZL.DR<>date(0,0,0) || __dtREAL:=TR_NZL.DR ?};
   {? TR_NZL.GR<>time(0,0,0) || __tmREAL:=TR_NZL.GR ?};
   TR_NZL.index('ODDZ');
   TR_NZL.prefix(ST.ODDZ);
   {? TR_NZL.find_tab('first','SYM',,':-',TR_Z.FIND,'TR_NAG',,'<>',null(),'TR_NAG','STAT_REJ','=','Z'
               ,'WHERE',,'<>','TR_NZL')
   || _wyb:={? TR_NZL.find_tab('first','SYM',,'=',TR_Z.FIND,'TR_NAG',,'<>',null(),'TR_NAG','STAT_REJ','=','Z'
                        ,'WHERE',,'<>','TR_NZL')
            || {? ~exec('tr_rodz_ope','transport_wspolne',TR_NZL.TR_RODZ,'Dyspozycja'@,''@,2)
               || 0
               |? TR_NZL.WHERE='ZK_N'
               || {? (';TRXS'*TR_NZL.MGDSP)>1 || 0 || 1 ?}
               || 1
               ?}
            || 0
            ?};
      TR_NZL.cntx_psh();
      _next:=~_wyb;
      TR_NZL.cntx_pop();
      {? _next
      || _wyb:=exec('wyb_TR_NZL','transport')
      || {? ~((';NP'*TR_NZL.REAL)>1)
         || _stan:={? TR_NZL.REAL='T' || 'Zrealizowane'@
                   |? TR_NZL.REAL='X' || 'Oznaczone jako zrealizowane'@
                                      || 'Niezrealizowane'@ ?};
            {? ~FUN.ask('Określono już stan realizacji dyspozycji o symbolu: %1.\n'
                 'Aktualny stan realizacji to: %2.\n\n'
                 'Czy zmodyfikować zapis?'@[TR_Z.FIND,_stan])
            || _wyb:=0
            || __autoZM:=TR_Z.AUTO;
               TR_Z.AUTO:='N'
            ?}
         ?}
      ?};
      {? _wyb
       & (__ctrlTRAN=null()
        | {? __ctrlTRAN=TR_NZL.TR_NAG || 1 || FUN.ask('Pozycja z innego transportu czy zatwierdzić?'@) ?})
      || TR_NZL.get();
         TR_Z.FIND:=TR_NZL.SYM;
         {? TR_NZL.REAL='P'
         || TR_NZL.POW:='';
            TR_NZL.REAL:='N';
            TR_NZL.GR:=time(0,0,0)
         ?};
         TR_NZL.REAL:=__znREAL;
         TR_NZL.DR:={? __dtREAL=date(0,0,0) || TR_NZL.TR_NAG().WYJ_D || __dtREAL ?};
         TR_NZL.GR:=__tmREAL;
         {? TR_NZL.WHERE='UPMZAD' & TR_NZL.REAL='T'
         || TR_NZL.ZIL_T:=TR_NZL.IL_T;
            TR_NZL.ZIL_M3:=TR_NZL.IL_M3;
            TR_NZL.ZIL_SZT:=TR_NZL.IL_SZT
         ?};
         __ctrlTRAN:=TR_NZL.TR_NAG;
         exec('set_efld_real','transport')
      || _res:=0
      ?}
   || TR_NZL.cntx_psh();
      _endrea:=TR_NZL.find_tab('first','SYM',,'=',TR_Z.FIND,'TR_NAG',,'<>',null(),'TR_NAG','STAT_REJ','=','T'
                        ,'WHERE',,'<>','TR_NZL');
      _stan:={? _endrea
             || {? TR_NZL.REAL='T' || 'Zrealizowane'@
                |? TR_NZL.REAL='X' || 'Oznaczone jako zrealizowane'@
                                   || 'Niezrealizowane'@ ?}
             || ''
             ?};
      TR_NZL.cntx_pop();
      {? ~_endrea
      || FUN.info('Nie znaleziono pozycji do realizacji wg symbolu: %1.'@[TR_Z.FIND])
      || FUN.info('Transport został zakończony oraz określono już stan realizacji dyspozycji o symbolu: %1.\n'
                 'Aktualny stan realizacji to: %2.\n\n'
                 'Ażeby zmodyfikować realizację należy:\n'
                 'wycofać zakończenie realizacji transportu i realizacji dyspozycji.'@[TR_Z.FIND,_stan])
      ?};
      _res:=0
   ?}
?};
_res


\wyb_TR_NZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: wybór pozycji transportu z listy
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_tab:=sql('select '
            '  TR_NZL.SYM SYM, '
            '  TR_NAG.WYJ_D DATA, '
            '  TR_NAG.SYM TRANSP, '
            '  TR_NZL.KTM KTM, '
            '  TR_NZL.KRAJ KRAJ, '
            '  TR_NZL.MIASTO MIASTO, '
            '  TR_NZL.UL ULICA, '
            '  TR_NZL.NUMER NUMER, '
            '  TR_NZL.NUMER LOKAL, '
            '  TR_NZL.DZIELN DZIELN, '
            '  TR_NZL.RODZ RODZ, '
            '  TR_NZL.REFERENCE REF '
            'from TR_NZL '
            '  join TR_NAG '
            'where '
            ' TR_NAG.STAT_REJ=\'Z\' '
           +{? ST.ODDZ<>'' || ' and TR_NZL.ODDZ=\':_b\' ' || '' ?}+
            ' and (TR_NZL.REAL=\'N\' or TR_NZL.REAL=\'P\') '
            ' and TR_NZL.WHERE<>\'TR_NZL\' '
            ' and TR_NZL.SYM like \'%:_a%\''
            'order by 1,2',TR_Z.FIND,ST.ODDZ);
_sel:=_tab.mk_sel('Dyspozycje do realizacja transportu'@,'T',0,'#tr_nzlwyb',,,,,'U');
_tab.win_fld(_sel,,'SYM',,,15,,0,'Symbol'@);
_tab.win_fld(_sel,,'DATA',,,10,,0,'Wyjazd'@);
_tab.win_fld(_sel,,'TRANSP',,,15,,0,'Transport'@);
_tab.win_fld(_sel,,'KTM',,,15,,0,'Indeks'@);
_tab.win_fld(_sel,,'KRAJ',,,10,,0,'Kraj'@);
_tab.win_fld(_sel,,'MIASTO',,,10,,0,'Miasto'@);
_tab.win_fld(_sel,,'ULICA',,,10,,0,'Ulica'@);
_tab.win_fld(_sel,,'NUMER',,,10,,0,'Numer'@);
_tab.win_fld(_sel,,'LOKAL',,,8,,0,'Lokal'@);
_tab.win_fld(_sel,,'DZIELN',,,10,,0,'Dzielnica'@);
_tab.win_fld(_sel,,'RODZ',,,-5,,0,'Załadunek'@,,,2,,"\'Z\'","\'R\'","\'\'");
_tab.win_act(_sel,,'Formuła','&Wybierz'@@,,'Wybór dyspozycji do realizacji'@,"sel_exit()",,1,,,,'W');
_tab.win_act(_sel,,'Szukaj');
_tab.win_act(_sel,,'Kolejność');
_tab.win_sel(_sel);
_tab.clear();
{? _tab.first()
|| TR_NZL.cntx_psh();
   {!
   |? {? (TR_NZL.prefix(); TR_NZL.seek(_tab.REF))
       & ((TR_NZL.WHERE='ZK_N' & (';TRXS'*TR_NZL.MGDSP)>1)
          | ~exec('tr_rodz_ope','transport_wspolne',TR_NZL.TR_RODZ,'Dyspozycja'@,''@,2))
      || _tab.del()
      || _tab.next()
      ?}
   !};
   TR_NZL.cntx_pop()
?};
{? ~_tab.first()
|| {? form(TR_Z.FIND)<>''
   || FUN.info('Nie znaleziono pozycji do realizacji wg symbolu: %1\n'
               'lub brak uprawnień do kategorii transportowej. '@[form(TR_Z.FIND)])
   || FUN.info('Aktualnie brak uprawnionych (kategoria transportowa) pozycji do realizacji.'@)
   ?}
|? _tab.select()
|| TR_NZL.prefix();
   _res:=TR_NZL.seek(_tab.REF)
?};
obj_del(_tab);
_res


\chk_rea_tr_nzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: kontrola podanej realizacji
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? TR_NZL.TR_NAG=null()
|| FUN.info('Nie znaleziono dyspozycji do realizacji.'@);
   _res:='FIND'
|? TR_NZL.DR=date(0,0,0)
|| FUN.info('Należy podać datę realizacji.'@);
   _res:='DR'
|? TR_NZL.DR<TR_NZL.TR_NAG().WYJ_D
|| FUN.info('Data realizacji nie może być mniejsza od daty transportu: %1.'@[$TR_NZL.TR_NAG().WYJ_D]);
   TR_NZL.DR:=TR_NZL.TR_NAG().WYJ_D;
   _res:='DR'
::|? TR_NZL.REAL='T' & TR_NZL.WHERE='' & TR_NZL.ZIL_T=0 & TR_NZL.ZIL_M3=0 & TR_NZL.ZIL_SZT=0
::|| FUN.info('Należy podać jedną z watości: Waga, Objętość, Sztuki.'@);
::   _res:='ZIL_T'
|? TR_NZL.REAL='A' & TR_NZL.POW=''
|| FUN.info('Należy podać powód braku realizacji transportu.'@);
   _res:='POW'
?};
_res


\po_tr_nzl_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: po edycji znacznika czy zrealiwoano
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? TR_NZL.REAL='N'
|| FUN.info('Należy zdecydować czy transport został zrealizowany.'@);
   _res:=0
|| {? TR_NZL.REAL='T' || TR_NZL.POW:='' ?};
   exec('set_efld_real','transport')
?};
{? _res || __znREAL:=TR_NZL.REAL ?};
_res


\pr_tr_nzl_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: prezed edycją znacznika czy zrealiwoano
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? ~__trybMOD & TR_NZL.REAL='A' & TR_NZL.POW<>'' || _res:=0 ?};
_res


\set_efld_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Zaznacza wymagalne pola w realizacji dyspozycji transportowej
::----------------------------------------------------------------------------------------------------------------------
_win_red:=TR_NZL.win_edit('?');

TR_NZL.btn_opt(__btnD,'state=grayed');
TR_NZL.btn_opt(__btnO,'state=normal');
TR_NZL.btn_opt(__btnE,'state=normal')
;
TR_NZL.btn_opt(__btnO,'default=1');

_ena1:={? TR_NZL.REAL='T' || 'enable=0' || 'enable=1' ?};
_ena2:={? TR_NZL.WHERE='ZLP' | (TR_NZL.WHERE='UPMZAD' & TR_Z.AUTO='T') | TR_NZL.REAL='A' || 'enable=0' || 'enable=1' ?};
_ena3:={? (_ena2+1)='0' || 'enable=0' || 'enable=1' ?};
_mar1:={? TR_NZL.REAL='T' || 'mark=0' || 'mark=1' ?};
_edit:={? ~__trybMOD & (';ZLP;UPMZAD'*TR_NZL.WHERE)>1 & TR_NZL.REAL='T' & TR_Z.AUTO='T'
       || 'editable=grayed'
       || 'editable=1'
       ?};

TR_NZL.efld_opt(_win_red,'mark=1',TR_Z,'FIND');
TR_NZL.efld_opt(_win_red,'mark=1',,'REAL');
TR_NZL.efld_opt(_win_red,'mark=1',,'DR');
TR_NZL.efld_opt(_win_red,_mar1,,'POW');
TR_NZL.efld_opt(_win_red,_edit,,'DR');
TR_NZL.efld_opt(_win_red,_edit,,'GR');
TR_NZL.efld_opt(_win_red,_edit,,'REAL');
TR_NZL.efld_opt(_win_red,_edit,TR_Z,'AUTO');
{? __trybMOD
|| TR_NZL.efld_opt(_win_red,'editable=grayed',TR_Z,'FIND')
|| TR_NZL.efld_opt(_win_red,'editable=1',TR_Z,'FIND')
?};

TR_NZL.efld_opt(_win_red,_ena1,,'POW');

TR_NZL.efld_opt(_win_red,_ena3,,'IL_T');
TR_NZL.efld_opt(_win_red,_ena2,,'ZIL_T');
TR_NZL.efld_opt(_win_red,_ena3,,'IL_M3');
TR_NZL.efld_opt(_win_red,_ena2,,'ZIL_M3');
TR_NZL.efld_opt(_win_red,_ena3,,'IL_SZT');
TR_NZL.efld_opt(_win_red,_ena2,,'ZIL_SZT');
{? TR_NZL.WHERE='ZLP' & TR_NZL.REAL='T'
|| {? (_edit+2)='ed'
   || TR_NZL.btn_opt(__btnD,'state=grayed');
      TR_NZL.btn_opt(__btnO,'state=grayed');
      TR_NZL.btn_opt(__btnE,'state=grayed')
   || TR_NZL.btn_opt(__btnD,'state=normal');
      TR_NZL.btn_opt(__btnO,'state=normal');
      TR_NZL.btn_opt(__btnE,'state=normal')
   ?};
   TR_NZL.btn_opt(__btnD,'default=1');
   TR_NZL.btn_opt(__btnO,'default=0');
   TR_NZL.btn_opt(__btnE,'default=0')
|? TR_NZL.WHERE='UPMZAD' & TR_NZL.REAL='T'
|| {? (_edit+2)='ed'
   || TR_NZL.btn_opt(__btnD,'state=grayed');
      TR_NZL.btn_opt(__btnO,'state=grayed');
      TR_NZL.btn_opt(__btnE,'state=grayed')
   || TR_NZL.btn_opt(__btnD,'state=grayed');
      TR_NZL.btn_opt(__btnO,'state=normal');
      TR_NZL.btn_opt(__btnE,'state=normal')
   ?};
   TR_NZL.btn_opt(__btnD,'default=0');
   TR_NZL.btn_opt(__btnO,'default=1');
   TR_NZL.btn_opt(__btnE,'default=0')
|| TR_NZL.btn_opt(__btnD,'state=grayed');
   TR_NZL.btn_opt(__btnD,'default=0');
   TR_NZL.btn_opt(__btnO,'default=0');
   TR_NZL.btn_opt(__btnE,'default=0')
?};

1


\statTR_NAG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Uzupełnia dane statystyczne i status transportu
::   WE: _a - TR_NAG.ref()
::----------------------------------------------------------------------------------------------------------------------
_zal:=_roz:=_zre:=_nor:=_brk:=_poz:=_end:=0;
_spec:='';
_datarea:=date(0,0,0);
_godzrea:=time(0,0,0);
_uidref:=exec('FindAndGet','#table',TR_NAG,_a,,"uidref()",'');
TR_NAG.cntx_psh();
TR_NZL.cntx_psh();
TR_NZL.index('TR_NAG');
TR_NZL.prefix(_a,'no');
{? TR_NZL.first()
|| _poz:=TR_NZL.size();
   {!
   |? _zal+=TR_NZL.RODZ='Z';
      _roz+=TR_NZL.RODZ='R';
      _zre+=TR_NZL.REAL='T';
      _nor+=TR_NZL.REAL='A';
      _brk+=TR_NZL.REAL='N';
      _end+=TR_NZL.REAL='X';
      {? _spec=''
      || _spec:=TR_NZL.KTM
      |? _spec<>TR_NZL.KTM
      || _spec:='<kilka różnych pozycji>'
      ?};
      {? (';TA'*TR_NZL.REAL)>1
      || {? TR_NZL.DR>_datarea
         || _datarea:=TR_NZL.DR;
            _godzrea:=TR_NZL.GR
         |? TR_NZL.DR=_datarea & TR_NZL.GR>_godzrea
         || _godzrea:=TR_NZL.GR
         ?}
      ?};
      TR_NZL.next()
   !}
?};
{? _uidref<>''
|| TR_LOG.cntx_psh();
   TR_LOG.index('NO_REAL');
   TR_LOG.prefix(_uidref,'T');
   {? TR_LOG.first()
   || {!
      |? {? TR_LOG.DNR>_datarea
         || _datarea:=TR_LOG.DNR;
            _godzrea:=TR_LOG.GNR
         |? TR_LOG.DNR=_datarea & TR_LOG.GNR>_godzrea
         || _godzrea:=TR_LOG.GNR
         ?};
         TR_LOG.next()
      !}
   ?};
   TR_LOG.cntx_pop()
?};
TR_NAG.prefix();
{? TR_NAG.seek(_a)
|| TR_NAG.ZAL:=_zal;
   TR_NAG.ROZ:=_roz;
   TR_NAG.REAL:={? TR_NAG.STAT_REJ='T'
                || 'T'
                || {? _poz>0 & ~_brk || 'T' || 'N' ?}
                ?};
   _plugspec:=Plugin.run('TRANSPORT_SPEC_001',TR_NAG.ref());
   TR_NAG.SPEC:={? _plugspec<>'' || _plugspec || _spec ?};
   {? _datarea>TR_NAG.DZ & (TR_NAG.STAT_REJ='Z' | (TR_NAG.STAT_REJ='T' & ~_end))
   || TR_NAG.DZ:=_datarea;
      TR_NAG.GZ:=_godzrea
   ?};
   TR_NAG.put(1)
?};
TR_NAG.cntx_pop();
TR_NZL.cntx_pop();
~~


\tr_nzl_doda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Uzupełnia dane statystyczne i status transportu
::   WE: [_a] - 1-po naciśnięciu F2 0(domyślnie)-nie
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_KeyF2:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_res:='';

{? TR_NZL.WHERE='ZLP' & TR_NZL.DOK_REF<>'' & TR_NZL.REAL<>'A'
||
:: otwiera Zgłoszenie jednorazowe
   _zlp:=TR_NZL.DOK_REF;
   _dr:=TR_NZL.DR;
   _tr:=TR_NZL.GR;
   _msk:=_zlp+16;
   __znREAL:=TR_NZL.REAL;
   __ctrlTRAN:=TR_NZL.TR_NAG;
   __dtREAL:=TR_NZL.DR;
   __tmREAL:=TR_NZL.GR;
   __autoOK:=TR_Z.AUTO;
   {? (3+_msk)='zlp'
   || _oddz:=1+(3-_msk);
      _rr:=2+(4-_msk);
      _mm:=2+(6-_msk);
      exec('zle_psh','open_tab');
      exec('zle_open','open_tab',_oddz,_rr,_mm);
      ZLP.prefix();
      {? ZLP.seek(_zlp)
      || {? 1 | ZLP.SAMO='X'
         || {? (ZLP.RODZ='P' | (ZLP.RODZ='W' & ZLP.SP='T')) & ZLP.DP=date(0,0,0)
            || ZLP.DP:=_dr;
               {? ZLP.RODZ<>'W' || ZLP.RODZ:='Z' ?}
            |? ZLP.RODZ='Z' | (ZLP.RODZ='P' & ZLP.DP<>date(0,0,0)) | ZLP.RODZ='W'
            || ZLP.DW:=_dr;
               ZLP.GW:=_tr;
               ZLP.M:=_dr~2;
               ZLP.SR:='Z'
            ?};
            exec('stanPlan','umowy_zlecenia')
         ?};
         _win_red:=exec('zle_win_edit','umowy_zlecenia','REA');
         exec('ok_esc','#window',ZLE,_win_red,1);
         ZLE.win_edit(_win_red);
         exec('zle_set_efld_opt','umowy_zlecenia',_win_red,'P');
         ZLE.hdr_edit('');
         ZLE.hdr_edit(': %1'[ZLP.ZLE().SYM]);
         exec('jm_kpo','jm');
         {? ZLE.edit()
         || {? ZLP.put(1)
            || {? ~_KeyF2 || _res:='key:F2' ?}
            || _res:='key:Esc'
            ?}
         || _res:='key:Esc'
         ?}
      ?};
      exec('zle_pop','open_tab')
   ?}
|| FUN.info('Aktualnie nieobsługiwane.'@)
?};
{? ~_KeyF2 || {? _res<>'key:Esc' || __keyOK:=0 || __keyOK:=2 ?} ?};
_res


\wycofaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Transport - wycofaj
::----------------------------------------------------------------------------------------------------------------------
_upr:=exec('chk_EndOrAcc','#b__box','LTR_TRA_DZLE','LTR_TRA_RZLE');
_sel:=TR_NAG.sel_aget();
TR_NAG.sel_adel();
{? ~_sel.first()
|| _sel.REF:=#TR_NAG.ref();
   _sel.add();
   _rea_poz:=TR_NAG.REAL<>'N';
   _czy_rea:=TR_NAG.STAT_REJ='T';
   _czy_rej:=TR_NAG.STAT_REJ='Z';
   _symtran:=TR_NAG.SYM;
   _resReal:=exec('ENDreaTran','transport',TR_NAG.ref());
   {? ~exec('tr_rodz_ope','transport_wspolne',TR_NAG.TR_RODZ,'Transport'@,'Wycofanie niemożliwe.'@) || _upr:=-1 ?}
|| _rea_poz:=exec('FindAndGet','#table',TR_NAG,_sel.REF,,"REAL<>'N'",0);
   _czy_rea:=exec('FindAndGet','#table',TR_NAG,_sel.REF,,"STAT_REJ='T'",0);
   _czy_rej:=exec('FindAndGet','#table',TR_NAG,_sel.REF,,"STAT_REJ='Z'",0);
   _symtran:=exec('FindAndGet','#table',TR_NAG,_sel.REF,,"SYM",'');
   _resReal:=exec('ENDreaTran','transport',exec('FindAndGet','#table',TR_NAG,_sel.REF,,,null()))
?};
TR_NAG.cntx_psh();
_many:=_sel.size()>1;
_opc:={? _upr=-1
      || 'nokat'
      |? ~_many
      || {? ~_czy_rea & ~_czy_rej
         || 'no'
         |? _upr=1 & _czy_rea & _resReal<=0
         || _choice:=FUN.choice('Wybierz jedną z opcji wycofania realizacji lub zakończenia transportu %1'@[_symtran]
                   ,,'Realizację i &zakończenie'@,'&Realizację'@);
            {? _choice=1 || 'all' |? _choice=2 || 'rea' || 'anuluj' ?}
         |? _upr<=2 & ~_czy_rea & _resReal<=0
         || {? FUN.ask('Wycofać zakończenie redakcji transportu %1?'@[_symtran]) || 'end' || 'anuluj' ?}
         |? _czy_rea & (_upr=1 | _upr=4)
         || {? FUN.ask('Wycofać zakończenie realizacji transportu %1?'@[_symtran]) || 'rea' || 'amuluj' ?}
         || ''
         ?}
      || {? _upr=1
         || _choice:=FUN.choice('Wybierz jedną z opcji wycofania realizacji lub zakończenia zaznaczonych transportów.\n'
                       '\Uwaga. Dla transportów częściowo realizowanych nie można wycofać zakończenia.'@
                   ,,'Realizację i &zakończenie'@,'&Realizację'@);
            {? _choice=1 || 'all' |? _choice=2 || 'rea' || 'anuluj' ?}
         |? _upr<=2
         || {? FUN.ask('Wycofać zakończenie redakcji zaznaczonych transportów?'
                       '\nUwaga. Transporty zrealizowane oraz częściowo realizowane zostaną pominięte.'@)
            || 'end'
            || 'anuluj'
            ?}
         |? _upr=4
         || {? FUN.ask('Wycofać zakończenie realizacji zaznaczonych transportów?'@)
            || 'rea'
            || 'anuluj'
            ?}
         ?}
      ?};
{? ~_upr
|| FUN.info('Brak uprawnień do czynności rejestracji lub realizacji transportu.'@)
|? _opc='no'
|| FUN.info('Transport nie jest zakończony.\nWycofanie niedostępne.'@)
|? _opc='nokat'
|| ''
|? _sel.first() & _opc<>'anuluj'
|| {? _many
   || exec('ini_kom','#message','Informacje o wycofaniu rejestracji lub zakończenia transportu.'@);
      __kom_gr:='Wycofanie rejestracji lub zakończenia transportów.'@
   ?};
   {!
   |? {? (TR_NAG.prefix();
         {? TR_NAG.seek(_sel.REF,)
         || exec('tr_rodz_ope','transport_wspolne',TR_NAG.TR_RODZ,'Transport'@
                 ,'Wycofanie transportu %1 niemożliwe.'@[TR_NAG.SYM],1)
         || 0
         ?})
      || {? _opc='rea' & TR_NAG.STAT_REJ='T'
         || TR_NAG.STAT_REJ:='Z';
            TR_NAG.DZ:=date(0,0,0);
            TR_NAG.GZ:=time(0,0,0);
            {? TR_NAG.put(1)
            || exec('add_kom','#message','Wycofano zakończenie realizacji transportu %1'@[TR_NAG.SYM],1);
               exec('refreshTR_NZL','transport',TR_NAG.ref());
               exec('statTR_NAG','transport',TR_NAG.ref());
               TR_NAG.get()
            ?}
         |? (_opc='end' & TR_NAG.STAT_REJ='Z') | (_opc='all' & (';ZT'*TR_NAG.STAT_REJ)>1)
         || {? exec('ENDreaTran','transport',TR_NAG.ref())<=0
            || _stat_rej:=TR_NAG.STAT_REJ;
               TR_NAG.STAT_REJ:='N';
               TR_NAG.DZ:=date(0,0,0);
               TR_NAG.GZ:=time(0,0,0);
               {? TR_NAG.put(1)
               || {? _stat_rej='T'
                  || exec('add_kom','#message','Wycofano rejestracje i zakończenie transportu %1'@[TR_NAG.SYM],1)
                  || exec('add_kom','#message','Wycofano zakończenie rejestracji transportu %1'@[TR_NAG.SYM],1)
                  ?};
                  exec('refreshTR_NZL','transport',TR_NAG.ref());
                  exec('statTR_NAG','transport',TR_NAG.ref());
                  TR_NAG.get()
               ?}
            || exec('add_kom','#message','Transport %1 nie spełnia kryteriów wycofania.'@[TR_NAG.SYM],2)
            ?}
         || exec('add_kom','#message','Transport %1 nie spełnia kryteriów wycofania.'@[TR_NAG.SYM],2)
         ?}
      ?};
      _sel.next()
   !};
   {? _many || exec('end_kom','#message') ?}
?};
TR_NAG.cntx_pop();
obj_del(_sel);
~~


\pr_tr_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: przed edycją znacznika TR_Z.AUTO
::----------------------------------------------------------------------------------------------------------------------
~__trybMOD & exec('pr_tr_nzl_real','transport')


\rek_noreal_tr_log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Rekord dla TR_LOG-a niezrealizowanych tras
::----------------------------------------------------------------------------------------------------------------------
_act:='';
{? (TR_LOG.name()+4)='____' & TR_LOG.DOK<>''
|| TR_NZL.cntx_psh();
   TR_NZL.index('DOK_REF');
   TR_NZL.prefix(TR_LOG.DOK);
   {? TR_NZL.first()
   || {? ~((TR_NZL.WHERE='ZLP' | TR_NZL.WHERE='UPMZAD')) || _act+='P' ?};
      {? TR_NZL.TR_NAG<>null() || _act+='H' ?}
   || _act:='PH'
   ?};
   TR_NZL.cntx_pop()
|| _act:='PH'
?};
TR_LOG.actions_grayed('REAL',_act);
''


\disp_tr_nzl_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Wyświetl dla trasy
::----------------------------------------------------------------------------------------------------------------------
_disp:=TR_NZL.win_edit('READISP');
TR_NZL.get();
TR_NZL.display();
TR_NZL.win_edit(_disp);
~~


\disp_tr_log_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Wyświetl dla niezrealizowanej trasy
::----------------------------------------------------------------------------------------------------------------------
_disp:=TR_LOG.win_edit('READISP');
TR_LOG.display();
TR_LOG.win_edit(_disp);
~~


\f3_find
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: wyszukiwanie po symbolu dyspozycji - klawisz F3
::----------------------------------------------------------------------------------------------------------------------
TR_NZL.index('ODDZ');
TR_NZL.prefix(ST.ODDZ);
_dt:=TR_NZL.DR;
_tm:=TR_NZL.GR;
{? exec('wyb_TR_NZL','transport')
|| TR_Z.FIND:=TR_NZL.SYM;
   {? _dt<>date(0,0,0) || TR_NZL.DR:=_dt ?};
   {? _tm<>time(0,0,0) || TR_NZL.GR:=_tm ?};
   {? TR_NZL.DR<TR_NZL.TR_NAG().WYJ_D || TR_NZL.DR:=date(0,0,0); TR_NZL.GR:=time(0,0,0) ?}
?};
TR_Z.FIND


\ENDreaTran
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Sprawdzenie czy transport można zakwalifikować jako zrealizowany
::   WE: _a - TR_NAG.ref()
::   WY:  1 - wszystkie trasy transportu zostały oznaczone albo jako zrealizowane albo niezrealizowane
::        2 - transport został częściowo zrealizowany
::       -1 - transport ma zakończoną realizację
::        3 - transport zawiera anulowane trasy
::        0 - transport oczekuje na realizację
::       -4 - usunięto transport
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_tr_nag:={? var_pres('_a')=type_of(null()) || _a
         |? var_pres('_a')=type_of('') & ((+_a)=48 | (+_a)=16) || exec('FindAndGet','#table',TR_NAG,_a,,,null())
         || null()
         ?};

_rea:=0;
_nor:=0;
_end:=0;
_noa:=0;
_dre:=0;
_msk:=ref_name(_tr_nag)+4;
{? (+_msk)=4
|| exec('opentr_psh','open_tab');
   exec('opentr','open_tab',_msk);
   TR_NAG.prefix();
   {? TR_NAG.seek(_tr_nag)
   || _end:=TR_NAG.STAT_REJ='T';
      TR_NZL.index('TR_NAG');
      TR_NZL.prefix(TR_NAG.ref());
      {? TR_NZL.first()
      || _dre:=1;
         _size:=TR_NZL.size();
         {!
         |? {? TR_NZL.REAL='T'
            || _size-=1;
               _rea+=1
            ?};
            {? TR_NZL.STAT_REJ='A' || _noa+=1 ?};
            TR_NZL.next()
         !};
         {? ~_size || _rea:=_rea>0 |? _rea || _rea:=2 ?}
      ?};
      TR_LOG.index('NO_REAL');
      TR_LOG.prefix(TR_NAG.uidref(),'T');
      _nor:=TR_LOG.first()
   ?};
   exec('opentr_pop','open_tab')
?};
{? _tr_nag=null()
|| _res:=-4
|| _res:={? _noa                    || 3
         |? _rea=1 | (~_dre & _nor) || 1
         |? _rea=2                  || 2
         |? _end                    || -1
         || 0
         ?}
?};
_res


\aktDPtran
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: aktualizacja dat zaplanowano
::   WE: _a - TR_NAG.ref()
::----------------------------------------------------------------------------------------------------------------------
TR_NZL.cntx_psh();
TR_NZL.index('TR_NAG');
TR_NZL.prefix(_a);
{? TR_NZL.first()
|| {!
   |? TR_NZL.DP:=TR_NZL.TR_NAG().WYJ_D;
      {? TR_NZL.put(1)
      || _transport:={? TR_NZL.TR_NAG().WLASNY='T'
                     || '%2 własny %1'@[TR_NZL.TR_NAG().POJAZD().NRREJ,TR_NZL.TR_NAG().SYM]
                     || '%2 zewnętrzny %1'@[TR_NZL.TR_NAG().TR_ZEWN().KOD,TR_NZL.TR_NAG().SYM]
                     ?};
         _opis:=' (Transport %2'
                ' na dzień: %1)'@[$TR_NZL.TR_NAG().WYJ_D+', '+form(TR_NZL.TR_NAG().WYJ_T,,3),_transport];
         exec('log_nag','transport_wspolne',TR_NZL.uidref(),'trdt',_opis)
      ?};
      TR_NZL.next()
   !}
?};
TR_NZL.cntx_pop();
~~


\lp2mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: aktualizacja LP_TR dla dyspozycji w magazynie
::   WE: _a - TR_NAG.ref()
::----------------------------------------------------------------------------------------------------------------------
_trnag:=_a;
_par:=exec('get','#params',700811,2)='T';
TR_NZL.cntx_psh();
TR_NZL.index('TR_NAG');
TR_NZL.prefix(_trnag,'no');
{? ~_par & TR_NZL.first()
|| {!
   |? _grp:=TR_NZL.GRP;
      _rodz:={? TR_NZL.RODZ='Z' || 'R' || 'Z' ?};
      _lp_tr:=TR_NZL.LP_TR;
      TR_NZL.cntx_psh();
      TR_NZL.index('ORDERMG');
      TR_NZL.prefix(_trnag,'TR_NZL',_rodz,_grp);
      {? TR_NZL.first()
      || {!
         |? TR_NZL.LP_TR:=_lp_tr;
            TR_NZL.put(1);
            TR_NZL.next()
         !}
      ?};
      TR_NZL.cntx_pop();
      TR_NZL.next()
   !}
?};
TR_NZL.cntx_pop();
~~


\przygotuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: potwierdzenie pozycji dyspozycji w magazynie
::----------------------------------------------------------------------------------------------------------------------
_tr_nzl:=TR_NZL.ref();
exec('przygotuj_poz','transport');
_stan:=exec('ctrl_poz','transport',_tr_nzl);
{? TR_NZL.WHERE='TR_NZL'
|| {? _stan>0 || TR_NZL.MGDSP:='R' || TR_NZL.MGDSP:='N' ?};
   {? TR_NZL.put(1) || exec('aktDYSPzam','transport_zlec',TR_NZL.DOK_REF) ?};
   {? _stan=1
    & FUN.ask('Wszystkie pozycje dyspozycji %1 zostały potwierdzone.'
              '\nPotwierdzić całą dyspozycję w magazynie?'@[TR_NZL.SYM])
   || {? exec('stReady','transport_wspolne',TR_NZL.ref(),1)
      || TR_NZL.get();
         exec('status_MG','transport_wspolne');
         {? ';BC'*(1+TR_NZL.STMG)
         || TR_NZL.REAL:='M';
            TR_NZL.DR:=date();
            TR_NZL.GR:=time()
         ?};
         {? TR_NZL.put(1) || exec('aktDYSPzam','transport_zlec',TR_NZL.DOK_REF) ?}
      ?}
   ?}
?};
~~


\przygotuj_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: potwierdzenie pozycji dyspozycji w magazynie
::----------------------------------------------------------------------------------------------------------------------
TR_NZL.cntx_psh();
TR_ZL.cntx_psh();
TR_ZLM.cntx_psh();
_old:=TR_ZL.win_edit('?');
_where:=TR_ZL.TR_NZL().WHERE;
_wg_zlm:=0;

{? _where='TR_NZL'
|| _tmg:=(1+TR_ZL.TR_NZL().MG().TYP)='D';
   _wym:=TR_ZL.TR_NZL().MG().SL='T';
   _atr:=TR_ZL.M().M_ATR<>null();
   {? ((_atr & _tmg) | _wym)
   || TR_ZLM.index('TR_ZL');
      TR_ZLM.prefix(TR_ZL.ref());
      {? (_add:=~TR_ZLM.first(); _add) | TR_ZLM.size()=1
      || _wg_zlm:={? _add || 1 || 2 ?}
      || _wg_zlm:=3
      ?}
   ?};
   TR_ZL.win_edit('PTW')
|| TR_ZL.win_edit('REA')
?};

_sel:=TR_ZL.sel_aget();
TR_ZL.sel_adel();
{? ~_sel.first() || _sel.REF:=#TR_ZL.ref(); _sel.add() ?};
_onepoz:=_sel.size()=1;
{? _wg_zlm=3
|| FUN.info('Ponieważ dla danej pozycji wprowadzono kilka pozycji danych dodatkowych.\n'
            'Dane realizacji dla pozycji należy wprowadzić w sekcji Dane dodatkowe.'@)
|? _sel.first()
 & {? ~_onepoz
   || FUN.ask('Czy potwierdzić zaznaczone pozycje?\n\n'
              'Uwaga. Potwierdzenie ilości dla zaznaczonych pozycji zostanie przepisana z ilości dysponowanych.'@)
   || 1
   ?}
|| {!
   |? {? (TR_ZL.prefix(); TR_ZL.seek(_sel.REF,))
      || _result:=0;
         {? _onepoz
         || _ok:={? _wg_zlm=1 || exec('tr_zlm_add','transport_wspolne')
                 |? _wg_zlm=2 || exec('tr_zlm_pop','transport_wspolne')
                 || TR_ZL.edit("{? TR_ZL.ZIL<0
                                || FUN.info('Ilość nie może być mniejsza od zera.'@);
                                   'ZIL'
                                |? TR_ZL.ZIL>TR_ZL.IL
                                || FUN.info('Ilość nie może być większa od ilości przewożonej.'@);
                                   'ZIL'
                                || ''
                                ?}")
                 ?};
            {? _ok
            || {? _wg_zlm || TR_ZL.get() ?};
               TR_ZL.REAL:={? TR_ZL.ZIL>0 || 'T' || 'N' ?};
               _result:=TR_ZL.put(1)
            ?}
         || TR_ZL.ZIL:=TR_ZL.IL;
            TR_ZL.REAL:={? TR_ZL.ZIL>0 || 'T' || 'N' ?};
            _result:=TR_ZL.put(1)
         ?};
         {? _result || exec('log_poz','transport_wspolne',TR_ZL.uidref(),'ptw') ?};
         {? _result &  (';TR_NZL;ZD_NAG;ZDP_NAG;'*_where)>1
         || exec('ilr2MG','transport_wspolne',TR_ZL.TR_NZL().GRP
             ,{? TR_NZL.RODZ='Z' || 'R' || 'Z' ?}
             ,TR_ZL.MG,TR_ZL.POZ_REF,TR_ZL.ZIL,_where='TR_NZL',TR_ZL.ZIL_SZT,TR_ZL.ZIL_T,TR_ZL.ZIL_M3,TR_ZL.ZIL_OP)
         ?}
      ?};
      _sel.next()
   !}
?};
TR_NZL.cntx_pop();
TR_ZL.cntx_pop();
TR_ZLM.cntx_pop();
TR_ZL.win_edit(_old);
~~


\ctrl_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: sprawdza czy wszystkie pozycje zostały potwierdzone - choćby częściowo
::   WE: _a - TR_NZL.ref()
::   WY: 1-wszystkie całkowicie 3-wszystkie częściowo 0-żadna 2-niektóre
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_all:=0; _ilp:=0; _ilc:=0;
TR_NZL.cntx_psh();
TR_ZL.cntx_psh();
TR_ZL.index('POZ');
TR_ZL.prefix(_a);
{? TR_ZL.first()
|| _all:=TR_ZL.size();
   {!
   |? {? TR_ZL.ZIL=TR_ZL.IL || _ilp+=1
      |? TR_ZL.ZIL>0        || _ilc+=1
      ?};
      TR_ZL.next()
   !}
?};
TR_NZL.cntx_pop();
TR_ZL.cntx_pop();
{? _all=_ilp        || _res:=1
|? _all=(_ilc+_ilp) || _res:=3
|? (_ilp+_ilc)>0    || _res:=2
?};
_res


\tr_nzl_gotowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: zakończenie realizacji w magazynie
::   WE: _a - TR_NZL.ref()
::----------------------------------------------------------------------------------------------------------------------
_tr_nzl:={? var_pres('_a')=type_of(null()) || _a || TR_NZL.ref() ?};
TR_NZL.cntx_psh();
TR_NZL.prefix();
{? TR_NZL.seek(_tr_nzl)
|| _rodz:={? TR_NZL.WHERE='TR_NZL'  || 'M'
          |? TR_NZL.WHERE='ZK_N'    || 'Z'
          |? TR_NZL.WHERE='ZD_NAG'  || 'D'
          |? TR_NZL.WHERE='ZDP_NAG' || 'P'
          || '?'
          ?};

   {? _rodz='M' & TR_NZL.MGDSP='Z'
   || FUN.info('Dyspozycja w magazynie %1 została już potwierdzona.'@[TR_NZL.SYM])
   |? _rodz='M' & TR_NZL.TR_NAG=null()
   || FUN.info('Dyspozycja w magazynie %1 nie została zaplanowana do transportu.'@[TR_NZL.SYM])
   |? _rodz='M' & TR_NZL.RODZ='R' & TR_NZL.TR_NAG().STAT_REJ='N'
   || FUN.info('Transport dla dyspozycji w magazynie %1 nie został zatwierdzony.'@[TR_NZL.SYM])
   |? _rodz<>'M' & TR_NZL.TR_NAG().STAT_REJ='N'
   || FUN.info('Transport dla dyspozycji transportowej %1 nie został zatwierdzony.'@[TR_NZL.SYM])
   ||
      params_set('akcja','DyspMGReal');
      exec('tr_nzl_pop','transport_zlec',{? _rodz='M' || 1 || 2 ?})
   ?};
   TR_NZL.get();
   {? _rodz='M' & ';SZX'*TR_NZL.MGDSP
   || exec('status_MG','transport_wspolne');
      {? ';BC'*(1+TR_NZL.STMG)
      || TR_NZL.REAL:='M';
         TR_NZL.DR:=date();
         TR_NZL.GR:=time()
      ?};
      {? TR_NZL.put(1) || exec('aktDYSPzam','transport_zlec',TR_NZL.DOK_REF) ?}
   ?}
?};
TR_NZL.cntx_pop();
~~


\ctrlMAG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: kontrola dla dyspozycji transportu
::   WE: _a - TR_NAG.ref()
::       [_b] - 1-sprawdź niezaakceptowane 0-domyślnie nie
::   WY: 1-czekaj na realizację dyspozycji w magazynie 0-nie czekaj
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_nostat:={? var_pres('_b')=type_of(0) || _b || 0 ?};
TR_NZL.cntx_psh();
TR_NZL.index('TR_NAG');
TR_NZL.prefix(_a,'no');
{? TR_NZL.first()
|| {!
   |? {? TR_NZL.WHERE='ZK_N' & TR_NZL.STAT_REJ<>'A'
       & {? TR_NZL.MGDSP='N' || TR_NZL.GRP<>'' || ~((';+Z;'*TR_NZL.MGDSP)>1) ?}
      || _res:=1;
         _nom:=0;
         _noa:=0;
         _noz:=0;
         {? _nostat
         || _rodz:={? TR_NZL.RODZ='Z' || 'R' || 'Z' ?};
            _grp:=TR_NZL.GRP;
            TR_NZL.cntx_psh();
            TR_NZL.index('ORDERMG');
            TR_NZL.prefix(_a,'TR_NZL',_rodz,_grp);
            {? TR_NZL.first()
            || {!
               |? _nom+=1;
                  {? TR_NZL.STAT_REJ='N' || _noz+=1
                  |? TR_NZL.STAT_REJ='A' || _noa+=1
                  ?};
                  TR_NZL.next()
               !}
            ?};
            TR_NZL.cntx_pop();
            _nom-=_noa;
            {? _noz>=_nom || _res:=0 ?}
         ?}
      ?};
      ~_res & TR_NZL.next()
   !}
?};
TR_NZL.cntx_pop();
_res


\realDYSPdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: realizacja dokumentem danej dyspozycji w magazynie
::   WE: _a - TR_NZL.ref()
::       _b - uidref ND
::----------------------------------------------------------------------------------------------------------------------
_tr_nzl:={? var_pres('_a')=type_of(null()) || _a || null() ?};
 _uidnd:={? var_pres('_b')=type_of('') & (+_b)=48 || _b || '' ?};

{? _uidnd<>'' & ($_tr_nzl)<>''
|| TR_NZL.cntx_psh();
   TR_NZL.prefix();
   {? TR_NZL.seek(_tr_nzl) & TR_NZL.WHERE='TR_NZL'
   || _byl:=0;
      _msk:=form(8+(_b+16));
      _oddz:=1+(_msk+3);
      _rok:=_msk+2;
      exec('mag_psh','open_tab');
      {? (ND.name()+3)<>_msk || exec('mag_open','open_tab',_oddz,_rok) ?};
      ND.prefix();
      {? ND.seek(_uidnd)
      || DK.index('DOKMAG');
         DK.prefix(ND.ref());
         {? DK.first()
         ||
::          pobieram dane z dokumentu magazynowego uidref do pozycji zamówienia i ilość
            _tab:=tab_tmp(1,'POZ_REF','STRING[48]','','IL','REAL','');
            {!
            |? {? DK.ZAM_RP<>''
               || {? (5+DK.ZAM_RP)='zkhip'
                  || _poz_ref:=exec('FindAndGet','#table',ZK_RP,DK.ZAM_RP,,"P().uidref()",'')
                  |? (5+DK.ZAM_RP)='zdhip'
                  || _poz_ref:=exec('FindAndGet','#table',ZD_RP,DK.ZAM_RP,,"ZD_POZ().uidref()",'')
                  || _poz_ref:=''
                  ?};
                  {? _poz_ref<>''
                  || _tab.clear();
                     _tab.prefix(_poz_ref);
                     {? _tab.first()
                     || _tab.IL+=DK.IL;
                        _tab.put(1)
                     || _tab.blank();
                        _tab.POZ_REF:=_poz_ref;
                        _tab.IL:=DK.IL;
                        _tab.add(1)
                     ?}
                  ?}
               ?};
               DK.next()
            !};
::          przepisuję ilości wg realizacji
            _tab.clear();
            {? _tab.first()
            || {!
               |? TR_ZL.index('POZREF');
                  TR_ZL.prefix(_tr_nzl,_tab.POZ_REF);
                  {? TR_ZL.first()
                  || TR_ZL.ZIL:=_tab.IL;
                     {? TR_ZL.put(1) || _byl:=1 ?}
                  ?};
                  _tab.next()
               !}
            ?};
            obj_del(_tab)
         ?}
      ?};
      exec('mag_pop','open_tab');
      {? _byl
      || _stan:=exec('ctrl_poz','transport',_tr_nzl);
         {? _stan>0
         || TR_NZL.DOK_REA:=_uidnd;
            {? _stan=1
            || exec('stMG','transport_wspolne','D');
               TR_NZL.MGDSP:='Z'
            || exec('stMG','transport_wspolne','B!');
               TR_NZL.MGDSP:='S'
            ?};
            TR_NZL.REAL:='M';
            TR_NZL.DR:=date();
            TR_NZL.GR:=time();
            {? TR_NZL.put(1) || exec('aktDYSPzam','transport_zlec',TR_NZL.DOK_REF) ?}
         ?}
      ?}
   ?};
   TR_NZL.cntx_pop()
?};
~~


\delDYSPdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: usunięcie informacji o realizacji dokuementem dyspozycji w magazynie
::   WE: _a - uidref ND
::----------------------------------------------------------------------------------------------------------------------
_uidnd:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};

{? _uidnd<>''
|| TR_NZL.cntx_psh();
   TR_NZL.index('DOK_REA');
   TR_NZL.prefix(_uidnd);
   {? TR_NZL.first()
   || {!
      |? _ref:=TR_NZL.ref(); _next:=TR_NZL.next();
         TR_NZL.cntx_psh();
         TR_NZL.prefix();
         {? TR_NZL.seek(_ref)
         || _stan:=exec('ctrl_poz','transport',TR_NZL.ref());
            TR_NZL.DOK_REA:='';
            {? _stan=1
            || exec('stMG','transport_wspolne','C');
               TR_NZL.MGDSP:='Z'
            || exec('stMG','transport_wspolne','A');
               TR_NZL.MGDSP:='R';
               TR_NZL.REAL:='N';
               TR_NZL.DR:=date(0,0,0);
               TR_NZL.GR:=time(0,0,0)
            ?};
            {? TR_NZL.put(1) || exec('aktDYSPzam','transport_zlec',TR_NZL.DOK_REF) ?}
         ?};
         TR_NZL.cntx_pop();
         _next
      !}
   ?};
   TR_NZL.cntx_pop()
?};
~~


\tr_nag_wyj_d_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Formuła ikony dla TR_NZL.WYJ_D
::----------------------------------------------------------------------------------------------------------------------
"  {? exec('FindInSet','#table','TR_KOS','TR_NAG',TR_NAG.ref())<>null()
   || 'xwin16.png:123'
   || exec('pusta','#icon')
   ?}
"


\tr_nzl_norea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Zaznaczenie pozycji jako niezrealizowanej
::----------------------------------------------------------------------------------------------------------------------
_potw:=exec('ctrl_poz','transport',TR_NZL.ref());
{? (';UPMZAD;ZLP;TR_NZL;'*TR_NZL.WHERE)>0
|| FUN.info('Dla tego typu dyspozycji transportowych opcja niedostępna.'@)
|? _potw=1
|| FUN.info('Wszystkie pozycje zostały oznaczone jako zrealizowane.\nOpcja niedostępna.'@)
|| VAR_DEL.delete('__znREAL','__ctrlTRAN','__dtREAL','__tmREAL','__autoOK','__autoZM');
   TR_NAG.cntx_psh();
   TR_NZL.cntx_psh();
   TR_ZL.cntx_psh();
   TR_Z.NOREA:={? ~_potw || 'T' || 'N' ?};
   TR_Z.FIND:=TR_NZL.SYM;
   _edit:=TR_NZL.win_edit('?');
   __znREAL:='A';
   __ctrlTRAN:=null();
   __dtREAL:=date(0,0,0);
   __tmREAL:=time(0,0,0);
   __autoOK:='T';
   __autoZM:='';
   TR_NZL.REAL:=__znREAL;
   TR_NZL.win_edit('NOREA');
   {? TR_NZL.edit("exec('chk_rea_tr_nzl','transport')")
   || __ctrlTRAN:=TR_NZL.TR_NAG;
      __dtREAL:=TR_NZL.DR;
      __tmREAL:=TR_NZL.GR;

      _tr_moc:=null();
      _il_szt:=0;
      _tr_nag:=TR_NZL.TR_NAG().uidref();
      _lp_tr:=TR_NZL.LP_TR;
      {? TR_NZL.REAL='A'
      ||
         _tr_moc:=TR_NZL.TR_MOC;
         _il_szt:=TR_NZL.IL_SZT;
         TR_NZL.TR_MOC:=null()
      ?};
      _result:=0;
      _resReal:=Plugin.run('TRANSPORT_REAL_001',TR_NZL.ref());
      _result:={? _resReal<0 || 1 || _resReal ?};
      {? _result || _result:=TR_NZL.put(1) ?};
      {? _result & (';TA'*TR_NZL.REAL)>1
      || do();
         _ok:=1;
         _refSQL:='';
         {? _potw || _refSQL:=exec('tr_nzl_split','transport_zlec',,,1) ?};
         {? _ok
         || {? _refSQL<>''
            || TR_NZL.REAL:='T';
               exec('sum_poz','transport_zlec',TR_NZL.ref());
               TR_NZL.put(1);
               TR_NZL.prefix();
               {? TR_NZL.seek(_refSQL)
               || TR_NZL.REAL:='A';
                  TR_NZL.TR_MOC:=null();
                  TR_NZL.put(1);
                  TR_NZL.get();
                  _tr_moc:=TR_NZL.TR_MOC;
                  _il_szt:=TR_NZL.IL_SZT;
                  _lp_tr:=TR_NZL.LP_TR
               || _ok:=0
               ?}
            ?};
            {? _ok
            || exec('log_nag','transport_wspolne',TR_NZL.uidref()
                 ,{? TR_NZL.REAL='T' || 'reatr' || 'nortr' ?},,_tr_moc,_il_szt,_tr_nag,_lp_tr);
               {? ~exec('one_tr_nzl','transport',TR_NZL.ref(),2) || _result:=0; undo() ?}
            ?}
         || undo()
         ?};
         end();
         {? _ok || grp_disp(TR_LOG,'REAL',,1) ?}
      ?}
   ?};
   TR_NAG.cntx_pop();
   TR_NZL.cntx_pop();
   TR_ZL.cntx_pop();
   TR_NZL.win_edit(_edit);
   VAR_DEL.delete('__znREAL','__ctrlTRAN','__dtREAL','__tmREAL','__autoOK','__autoZM')
?};
~~


\disp_tr_nzl_dysp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Wyświetl dla trasy
::   WE: [_a] - uid TR_NZL
::----------------------------------------------------------------------------------------------------------------------
_uid:={? var_pres('_a')=type_of('') & (+_a)=48 || _a || '' ?};

TR_NZL.cntx_psh();
{? _uid<>''
|| _msk:=form(8+(_uid+16));
   TR_NZL.use(_msk);
   TR_NZL.prefix();
   {? TR_NZL.seek(_uid) || TR_NZL.SYM ?}
?};

_disp:=TR_NZL.win_edit(exec('tr_nzl_win_edit','transport_zlec','RED'));
TR_NZL.get();
TR_NZL.display();
TR_NZL.win_edit(_disp);
TR_NZL.cntx_pop();
~~


\prntr_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Przed redakcją kategorii transportu dla transportu
::----------------------------------------------------------------------------------------------------------------------
exec('pr_tr_rodz','transport_wspolne',TR_NAG.TR_RODZ);
1


\pontr_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Po redakcji kategorii transportu dla transportu
::----------------------------------------------------------------------------------------------------------------------
_res:=exec('po_tr_rodz','transport_wspolne',TR_NAG.TR_RODZ);
_res


\renTR_NZL_trasy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: akcja zmiany kolejności dla tras i dyspozycji
::   WE: [_a] - 'U','D','N'-akcja do przenumerowania
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (';UDN'*_a)>1 || _a || '' ?};
_par:=exec('get','#params',700811,2)='T';

{? (';UDN'*_tryb)>1
|| TR_NAG.cntx_psh();
   TR_NZL.cntx_psh();
   _tr_nag:=TR_NZL.TR_NAG;
   {? TR_NZL.TR_NAG().BLKORD<>'T'
   || {? _par
      || TR_NZL.index('TR_NAG2');
         TR_NZL.prefix(_tr_nag)
      || TR_NZL.index('TR_NAG');
         TR_NZL.prefix(_tr_nag,'no')
      ?};
      exec('zmien_lpa','#dragdrop','LP_TR',{? _par || 'TR_NAG2' || 'TR_NAG' ?},,,_tryb);
      exec('lp2mg','transport',_tr_nag);
      TR_NAG.prefix();
      {? TR_NAG.seek(_tr_nag)
      || TR_NAG.MANUAL:='T';
         TR_NAG.put(1)
      ?}
   ?};

   TR_NAG.cntx_pop();
   TR_NZL.cntx_pop()
?};
1


\pojazdy_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Akcja okienko dla SLO_J
::----------------------------------------------------------------------------------------------------------------------
POJAZDY.actions('SLO_J', 'W:W');
{? cur_tab()=TR_NAG & TR_NAG.WLASNY='N'
|| POJAZDY.prefix();
   POJAZDY.f_set('NAZ',,'FIRMA=\'%1\' and WLASNY=\'N\''[$REF.FIRMA])
|? cur_tab()=TR_NAG & TR_NAG.WLASNY='T'
|| POJAZDY.prefix();
   POJAZDY.f_set('NAZ',,'FIRMA=\'%1\''[$REF.FIRMA])
?};
~~


\pojazdy_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Akcja okienko dla SLO_J
::----------------------------------------------------------------------------------------------------------------------
{? POJAZDY.f_active() || POJAZDY.f_clear() ?};
~~


\tr_nag_kraj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wartość początkowa TR_NAG.KRAJ
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? TR_NAG.WLASNY='T'
|| KSTE.cntx_psh();
   SLO.cntx_psh();
   KSTE.use('permane'+exec('st_oddz','parses'));
   KSTE.prefix();
   {? KSTE.first() || _wyn:=KSTE.KRAJ().TR ?};
   KSTE.cntx_pop();
   SLO.cntx_pop()
?};
_wyn


\tr_nag_miasto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wartość początkowa TR_NAG.MIASTO
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? TR_NAG.WLASNY='T'
|| KSTE.cntx_psh();
   KSTE.use('permane'+exec('st_oddz','parses'));
   KSTE.prefix();
   {? KSTE.first() || _wyn:=KSTE.MIA ?};
   KSTE.cntx_pop()
?};
_wyn


\tr_nag_ul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wartość początkowa TR_NAG.UL
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? TR_NAG.WLASNY='T'
|| KSTE.cntx_psh();
   KSTE.use('permane'+exec('st_oddz','parses'));
   KSTE.prefix();
   {? KSTE.first() || _wyn:=KSTE.UL ?};
   KSTE.cntx_pop()
?};
_wyn


\tr_nag_pocz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wartość początkowa TR_NAG.POCZ
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? TR_NAG.WLASNY='T'
|| KSTE.cntx_psh();
   KSTE.use('permane'+exec('st_oddz','parses'));
   KSTE.prefix();
   {? KSTE.first() || _wyn:=KSTE.POCZ ?};
   KSTE.cntx_pop()
?};
_wyn

\tr_nag_numer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wartość początkowa TR_NAG.NR
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? TR_NAG.WLASNY='T'
|| KSTE.cntx_psh();
   KSTE.use('permane'+exec('st_oddz','parses'));
   KSTE.prefix();
   {? KSTE.first() || _wyn:=KSTE.NR_D ?};
   KSTE.cntx_pop()
?};
_wyn


\tr_nag_lokal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wartość początkowa TR_NAG.LOKAL
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? TR_NAG.WLASNY='T'
|| KSTE.cntx_psh();
   KSTE.use('permane'+exec('st_oddz','parses'));
   KSTE.prefix();
   {? KSTE.first() || _wyn:=KSTE.NR_L ?};
   KSTE.cntx_pop()
?};
_wyn


\tr_nag_kpocz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wartość początkowa TR_NAG.KPOCZ
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? TR_NAG.WLASNY='T'
|| KSTE.cntx_psh();
   KSTE.use('permane'+exec('st_oddz','parses'));
   KSTE.prefix();
   {? KSTE.first() || _wyn:=KSTE.KOD_P ?};
   KSTE.cntx_pop()
?};
_wyn

\tr_nag_teryt_sprawdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Sprawdzenie poprawności teryt
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,INFO);
{? XINFO.TER_AKT='T' & XINFO.TER_KNT='T' & ~exec('tr_nag_zagr','transport')
|| _par:=exec('ter_sprawdz_a','teryt');
   _par.TAB:='TR_NAG';
   _par.ULI_P:='UL';
   _par.MSC_P:='MIASTO';
   _wyn:=exec('ter_sprawdz','teryt',_par);
   _wyn.WYNIK
?}

\tr_nag_zagr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Sprawdzenie, czy dyspozycja transportowa jest zagraniczna
::   WE:
::   WY: 1 - tak, 0 - nie
::----------------------------------------------------------------------------------------------------------------------
_zagr:=0;
{? TR_NAG.KRAJ<>'' & -TR_NAG.KRAJ<>'polska' & -TR_NAG.KRAJ<>'pl'
|| _zagr:=1
?};
_zagr


\pobierz_adres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Akcja ustawienia adresu dla nagłówka transportu
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,'NAME','STRING[50]','Żródło'@);
_tab.NAME:='Kontrahenci'@;_tab.add();
_tab.NAME:='Oddział'@;_tab.add();
_tab.NAME:='Magazyn'@;_tab.add();
_tab.NAME:='Siedziba klienta'@;_tab.add();
_tab.NAME:='Posesja kontrahenta'@;_tab.add();
_win_sel:=_tab.mk_sel('Miejsce pobrania adresu'@,'T',1,,,,,,'U');
_tab.win_act(_win_sel,0,'Formuła','&Wybierz',,,"sel_exit()",,1);
_tab.win_sel(_win_sel);

{? _tab.select()
|| {? _tab.NAME='Kontrahenci'@
   || KH.cntx_psh();
      KH.index('KOD');
      KH.prefix();
      KH.win_sel('SEL');
      {? KH.select()
      || TR_NAG.KRAJ:=KH.KRAJ;
         TR_NAG.MIASTO:=KH.MIASTO;
         TR_NAG.UL:=KH.UL;
         TR_NAG.POCZ:=KH.POCZ;
         TR_NAG.NUMER:=KH.DOM;
         TR_NAG.LOKAL:=KH.LOKAL;
         TR_NAG.KPOCZ:=KH.KPOCZ
      ?};
      KH.cntx_pop()
   |? _tab.NAME='Oddział'@
   || ODDZ.cntx_psh();
      ODDZ.prefix();
      ODDZ.win_sel('SEL');
      {? ODDZ.select()
      || KSTE.cntx_psh();
         SLO.cntx_psh();
         KSTE.use('permane'+ODDZ.KOD);
         KSTE.prefix();
         {? KSTE.first()
         || TR_NAG.KRAJ:=KSTE.KRAJ().TR;
            TR_NAG.MIASTO:=KSTE.MIA;
            TR_NAG.UL:=KSTE.UL;
            TR_NAG.POCZ:=KSTE.POCZ;
            TR_NAG.NUMER:=KSTE.NR_D;
            TR_NAG.LOKAL:=KSTE.NR_L;
            TR_NAG.KPOCZ:=KSTE.KOD_P
         ?};
         KSTE.cntx_pop();
         SLO.cntx_pop()
      ?};
      ODDZ.cntx_pop()
   |? _tab.NAME='Magazyn'@
   || MG.cntx_psh();
      MG.prefix();
      MG.win_sel('SLO');
      {? MG.select()
      || TR_NAG.KRAJ:=MG.KRAJ;
         TR_NAG.MIASTO:=MG.MIASTO;
         TR_NAG.UL:=MG.UL;
         TR_NAG.POCZ:=MG.POCZ;
         TR_NAG.NUMER:=MG.DOM;
         TR_NAG.LOKAL:=MG.LOKAL;
         TR_NAG.KPOCZ:=MG.KPOCZ
      ?};
      MG.cntx_pop()
   |? _tab.NAME='Siedziba klienta'@
   || exec('czytaj','#stalesys',,KST);
      KRAJE.cntx_psh();
      TR_NAG.KRAJ:=KST.KRAJ().NAZ;
      TR_NAG.MIASTO:=KST.MIASTO;
      TR_NAG.UL:=KST.ULICA;
      TR_NAG.POCZ:=KST.POCZTA;
      TR_NAG.NUMER:=KST.DOM;
      TR_NAG.LOKAL:=KST.LOKAL;
      TR_NAG.KPOCZ:=KST.KPOCZTA;
      KRAJE.cntx_pop()
   |? _tab.NAME='Posesja kontrahenta'@
   || KH.cntx_psh();
      KH.index('KOD');
      KH.prefix();
      KH.win_sel('SEL');
      {? KH.select()
      || POS.cntx_psh();
         POS.index('KH');
         POS.prefix(KH.ref());
         POS.win_sel('SEL');
         POS.actions('SEL','DPU:D');
         {? POS.first()
         || {? POS.select()
            ||
               MIA.cntx_psh();
               UL.cntx_psh();
               TR_NAG.KRAJ:=KH.KRAJ;
               TR_NAG.MIASTO:=POS.MIA().NAZ;
               TR_NAG.UL:=POS.UL().UL;
               TR_NAG.POCZ:=POS.UL().MIA().NAZ;
               TR_NAG.NUMER:=POS.NR;
               TR_NAG.LOKAL:='';
               TR_NAG.KPOCZ:=POS.UL().KDP;
               MIA.cntx_pop();
               UL.cntx_pop()
            ?}
         || FUN.info('Brak posesji dla wybranego kontrahenta.'@)
         ?};
         POS.cntx_pop()
      ?};
      KH.cntx_pop()
   ?}
?};
''

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:39 30c3c47b1d3ffb96fd8d6b7913a83d79b194a670fd13c2e35e2674b0b6a8f141cef2c2a55fa640a3b0f875133dbc533e1f765f62b4ae9e84932e9433dbe948dc5451c647caf9064c17e028843e25f9b850ae13b2ea7b460d697c34371da66592099e1e0f926e750f0addd430e5e73bd952b67054dc96cc6853e4989c9d874896
