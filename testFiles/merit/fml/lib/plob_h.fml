:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: plob_h.fml
:: Utworzony: 20.04.2018
:: Autor: TMR
::======================================================================================================================
:: Zawartość: Formuły do obsługi tabeli historii przypisania konta kosztowego do lokalizacji
::======================================================================================================================

\dezaktywuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Funkcja zmieniająca datę obowiązywania dla historii przypisania konta kosztowego do lokalizacji
::   WE: _a [REFERENCE] - wskazanie na definicję obiektu lokalizacji PLOB_L
::   WY: >1/0
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};

_firma:=exec('ref_firma','#firma');
PLOB_L.cntx_psh();
PLOB_L.index('UNIQUE');
PLOB_L.prefix();
{? PLOB_L.seek(_ref)
|| PLOB_H.cntx_psh();
   PLOB_H.index('S1');
   PLOB_H.prefix(_ref,_firma);
   {? PLOB_H.first()
   || {!
      |? {? #PLOB_H.DATA_DO=0 | PLOB_H.DATA_DO>date()
         || {? var_pres('_tab')>0 || &_tab ?};
::          sprawdzamy czy są zapisy u pracowników - jeżeli tak to przyjmujemy max datę jako datę zakończenia
            _tab:=sql('select max(PLOB_P.DATA_DP) as DATA from PLOB_P join PLOB_L where PLOB_L.REF=\':_a\'',PLOB_L.REF);
            {? _tab.first() & _tab.DATA>date()
            || PLOB_H.DATA_DO:=_tab.DATA
            || PLOB_H.DATA_DO:=date()
            ?};
            _result+=PLOB_H.put()
         ?};
         PLOB_H.next()
      !}
   ?};
   PLOB_H.cntx_pop()
?};
PLOB_L.cntx_pop();
_result


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Dodaje rekord w historii przypisania konta kosztowego do lokalizacji
::   WE: _a [REFERENCE] - wskazanie na lokalizację
::       _b [REFERENCE] - wskazanie na konto kosztów
::       _c [DATE]      - data od
::       _d [DATE]      - data do
::   WY: ref/null
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
_plob_ol:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};
     _kk:={? var_pres('_b')=type_of(null) || _b || return(_result) ?};
_data_od:={? var_pres('_c')=type_of(date) || _c || return(_result) ?};
_data_do:={? var_pres('_d')=type_of(date) || _d || return(_result) ?};

_firma:=exec('ref_firma','#firma');

PLOB_H.cntx_psh();
PLOB_H.index('OD');
PLOB_H.prefix();
PLOB_H.FIRMA:=_firma;
PLOB_H.PLOB_L:=_plob_ol;
PLOB_H.KK:=_kk;
PLOB_H.DATA_OD:=_data_od;
PLOB_H.DATA_DO:=_data_do;
{? PLOB_H.add() || _result:=PLOB_H.ref() ?};
PLOB_H.cntx_pop();
_result


\plob_l_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Wartość początkowa dla pola PLOB_H.PLOB_L
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PLOB_L.ref()


\plob_h_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Akcja "Dołącz" przed dla okienka wertowania WER
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
PLOB_H.cntx_psh();
PLOB_H.index('S1');
PLOB_H.prefix();
PLOB_H.blank();
PLOB_H.win_edit('RED');
{? PLOB_H.edit("exec('check_record','plob_h','add')")
|| PLOB_H.add()
?};
PLOB_H.cntx_pop();
~~


\plob_h_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Akcja "Popraw" przed dla okienka wertowania WER
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PLOB_H.win_edit('RED');
{? PLOB_H.edit("exec('check_record','plob_h','put')")
|| PLOB_H.put()
?};
~~


\plob_h_usun_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Przed "Usuń" dla grupy rekordów tabeli PLOB_H
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Czy usunąć zaznaczone konta kosztowe?'@)


\plob_h_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Przed "Usuń" dla rekordu tabeli PLOB_H
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_grupa:=PLOB_H.sel_size();

{? ~_grupa & PLOB_H.count()>0
|| FUN.info('Wybrany obiekt kosztowy jest wykorzystywany w systemie.'@+'\n'+
            'Usunięcie zapisu nie jest możliwe'@);
   _result:=0
|| {? _grupa | FUN.ask('Czy usunąć wybrany rekord?'@)
   || _result:=exec('delete','plob_h',PLOB_H.ref())
   ?}
?};
_result


\plob_h_kkbp_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Przed "Konta kosztów bez powiązania"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tabsql:=sql(''+"
   select
      KK.SYM,
      KK.NAZWA
   from
      KK
   except
   select
      KK.SYM,
      KK.NAZWA
   from
      PLOB_H join
      KK using(KK.REFERENCE,PLOB_H.KK)
   order by
      SYM
");

_win:=_tabsql.mk_sel('Konta kosztów bez powiązań z lokalizacją'@,,,'#tabsql170831',,,,,'U');
_tabsql.win_sel(_win);
_tabsql.win_fld(_win,,'SYM',,,,,,'Symbol'@@);
_tabsql.win_fld(_win,,'NAZWA',,,,,,'Nazwa'@@);
_tabsql.win_act(_win,0,'Szukaj');
_tabsql.win_act(_win,0,'Kolejność');
_tabsql.select()
;
~~


\plob_h_wer_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: "Przed obsługą" okienka WER tabeli PLOB_H w oknie grupowym GRP tabeli PLOB_OL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_actions:=':';
{? PLOB_L.AKT<>'T' || _actions:='DPU:D' ?};
PLOB_H.actions_grayed('WER',_actions);
PLOB_H.index('S1');
PLOB_H.prefix(PLOB_L.ref())


\check_record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Formuła sprawdzająca rekord
::   WE:  _a  [STRING] - akcja po której następuje sprawdzenie
::       [_b] [NUMBER] - czy pomijać komunikaty?
::   WY: ''/akronim
::----------------------------------------------------------------------------------------------------------------------
_result:='';
 _akcja:={? var_pres('_a')=type_of('') || _a || return(_result) ?};
_no_msg:={? var_pres('_b')=type_of(0)  || _b || ~~              ?};

_result:=__CHK.record(PLOB_H,_no_msg,'PLOB_L','DATA_OD','KK');

_firma:=exec('ref_firma','#firma');

_ref:=PLOB_H.ref();
_od:=PLOB_H.DATA_OD;
_do:=PLOB_H.DATA_DO;
{? _result='' & PLOB_H.DATA_OD<>date(0,0,0) & PLOB_H.DATA_DO<>date(0,0,0)
|| {? PLOB_H.DATA_OD>PLOB_H.DATA_DO
   || FUN.emsg('Data zakończenia przypisania nie może być wcześniejsza niż data rozpoczęcia przypisania.'@);
      _result:='DATA_OD'
   ?}
?};
{? _result='' & PLOB_H.DATA_OD<>date(0,0,0)
|| PLOB_H.cntx_psh();
   PLOB_H.index('KK');
   PLOB_H.prefix(_firma,PLOB_L.REF,'T',PLOB_H.KK);
   _exist:=0;
   {? PLOB_H.first()
   || {!
      |? _exist:={? #_do=0 | #PLOB_H.DATA_DO=0
                 || (#_do=0 & #PLOB_H.DATA_DO=0) |
                    (_do>=PLOB_H.DATA_OD & #PLOB_H.DATA_DO=0) |
                    (_od<=PLOB_H.DATA_DO & #_do=0)
                 || _do<=PLOB_H.DATA_DO & _do>=PLOB_H.DATA_OD
                 ?} &
                 {? _akcja='put' || _ref<>PLOB_H.ref() || 1  ?};
         ~_exist & PLOB_H.next()
      !}
   ?};
   PLOB_H.cntx_pop();
   {? _exist
   || FUN.emsg('Dla wybranego konta kosztowego istnieje zapis pokrywający się zakresem dat.'@);
      _result:='DATA_OD'
   ?}
?};
{? _result=''
||  PLOB_H.cntx_psh();
    PLOB_H.index('KK');
    PLOB_H.prefix(_firma,PLOB_L.REF,'T',PLOB_H.KK);
   {? PLOB_H.find_key(_od) & (_akcja<>'put' | _ref<>PLOB_H.ref())
   || FUN.emsg('Dla wybranego konta kosztowego istnieje zapis na datę %1.'@[$PLOB_H.DATA_OD]);
      _result:='DATA_OD'
   ?};
   PLOB_H.cntx_pop()
?};
_result


\delete4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Kasuje rekordy tabeli PLOB_H (wykonywane w transakcji!!!) dla wskaznego rekordu _ref tabeli PLOB_L
::   WE: _a - PLOB_L.ref()
::   WY: >0 -wyczyszczone,
::      <=0 -niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};

_can_continue:=1;

:: powrot w przypadku zerwanej transakcji
{? do_state()=2 || return(-100) ?};

:: zalozenie transakcji
_mydo:=do_state()=0;
{? _mydo || do() ?};

PLOB_H.cntx_psh();
PLOB_H.index('S1');
PLOB_H.prefix(_ref);
{? PLOB_H.first()
|| {!
   |? _can_continue:=exec('delete','plob_h',PLOB_H.ref());
      _can_continue>0 & PLOB_H.first()
   !}
?};
PLOB_H.cntx_pop();

{? _can_continue>0
|| _result:=1
|| undo()
?};
{? _mydo || end() ?};
_result


\delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Kasuje podany rekord tabeli PLOB_H (wykonywane w transakcji!!!)
::   WE: _a - PLOB_H.ref()
::   WY: >0 -wyczyszczone,
::      <=0 -niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};

:: jeżeli transakcja została zerwana, to nie ma sensu przetwarzać formuły
{? do_state()=2 || return(-100) ?};

_can_continue:=1;

:: założenie transakcji
_mydo:=do_state()=0;
{? _mydo || do() ?};

PLOB_H.cntx_psh(); PLOB_H.clear();
{? PLOB_H.seek(_ref)
|| {? exec('clean','plob_h',_ref)>0
   || {? PLOB_H.del(,1)>0
      || _result:=1
      || undo();
         _result:=-3
      ?}
   || _result:=-2
   ?}
|| _result:=0
?};
PLOB_H.cntx_pop();

{? _result<0
|| undo()
?};
{? _mydo || end() ?};
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Czysci powiazania do rekordu tabeli PLOB_H
::   WE: _a - PLOB_H.ref()
::   WY: >0 -wyczyszczone,
::       <=0 -niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};

{? do_state()=2 || return(-100) ?};

_can_continue:=1;
:: założenie transakcji
_mydo:=do_state()=0;
{? _mydo || do() ?};

:: --- powiązania do PLOB_H---

:: --- wszystkie powiazania usuniete? ---
{? _can_continue>0
|| _result:=1
|| undo()
?};

{? _mydo || end() ?};
_result


\plob_h_wer_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Rekord przed okienka "WER"
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? PLOB_H.DATA_OD<=date() & (PLOB_H.DATA_DO=date(0,0,0) | PLOB_H.DATA_DO>=date())
|| Color.fnd_kol('PLOB_H#01#01')
|| Color.fnd_kol('PLOB_H#01#02')
?}


\plob_h_legenda_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Akcja "Legenda" przed dla okna "WER" tabeli PLOB_H
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('legenda','color','PLOB_H#01')

:Sign Version 2.0 jowisz:1028 2019/06/07 15:59:57 7aa6dc5799a244a7d3a4a73a25860a5b7ce716aed7c1a0b1920f6f484c52b0ea2cd15bdca55bb7ab82ab2e2a3df6f08e41170ddcf450809d4910431c7d59c1260c2b2299535387063ae97ba91b10c3af31cb90efef678bce342a8d0429f5d9945f621ecd419ffe3deb52c99be764fbc554983e9d314425fdb72f35c1ab1c162b
