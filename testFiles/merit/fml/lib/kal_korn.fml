:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: kal_korn.fml
:: Utworzony: 22.10.2013
:: Autor: TMR
:: Systemy: KALI
::======================================================================================================================
:: Zawartosc: Formuly do obslugi korekt planowania czasu pracy - HCP
::======================================================================================================================

\korekta_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.30a]
:: OPIS: Funkcja uruchamiana przed rozpoczeciem korekty planowania
::   WE: _a - [STRING lub REFERENCE] - osoba, ktora robi korekte
::       _b - P.ref - wskazanie na pracownika, ktorego dotyczy korekta
::       _c - A_OKR.ref - wskazanie na okres rozliczeniowy
::       _d - [STRING] - powód korekty
::       _e - [INTEGER] - czy korekta zerowa
::       -f - [INTEGER] - rok korekty
::       -g - [INTEGER] - msc korekty
::   WY: null/wskazanie na nagłówek korekty
::----------------------------------------------------------------------------------------------------------------------
 _os_ref:={? var_pres('_a')=type_of('')
          || _res:=null();
             OSOBA.cntx_psh();
             OSOBA.prefix();
             {? OSOBA.seek(_a) || _res:=OSOBA.ref() ?};
             OSOBA.cntx_pop();
             _res
          |? var_pres('_a')=type_of(null())
          || _a
          || null()
          ?};
  _p_ref:={? var_pres('_b')=type_of(null()) || _b || return(0) ?};
_okr_ref:={? var_pres('_c')=type_of(null()) || _c || return(0) ?};
  _powod:={? var_pres('_d')=type_of('')     || _d || ''        ?};
 _zerowa:={? var_pres('_e')=type_of(0)      || _e || 0         ?};
    _rok:={? var_pres('_f')=type_of(0)      || _f || 0         ?};
    _msc:={? var_pres('_g')=type_of(0)      || _g || 0         ?};

:: uzupełnij korektę zerową
{? ~_zerowa
|| exec('fillKorZero','kal_korn',_os_ref,_p_ref,_okr_ref,_rok,_msc)
?};

_res:=null();
KAL_KORN.cntx_psh();
{? _zerowa
|| KAL_KORN.index('PRACOKR');
   KAL_KORN.prefix(_p_ref,_okr_ref,0)
|| KAL_KORN.index('PRACAKT');
   KAL_KORN.prefix(_p_ref,_okr_ref,'T',)
?};
{? KAL_KORN.first()
|| _res:=KAL_KORN.ref()
|| KAL_KORN.blank(1);
   KAL_KORN.P:=_p_ref;
   KAL_KORN.A_OKR:=_okr_ref;
   KAL_KORN.POWOD:=_powod;
   KAL_KORN.KTO:=_os_ref;
   KAL_KORN.WERSJA:={? _zerowa || 0 || exec('getNextNrWer','kal_korn',_p_ref,_okr_ref) ?};
   KAL_KORN.AKTYWNA:={? _zerowa || 'N' || 'T' ?};
   KAL_KORN.START_D:=date();
   KAL_KORN.START_T:=time();
   KAL_KORN.add();
   _res:=KAL_KORN.ref()
?};
KAL_KORN.cntx_pop();
_res


\korekta_koniec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.30a]
:: OPIS: Funkcja konczaca korekte planowania
::   WE: _a - P.ref - wskazanie na pracownika, ktorego dotyczy korekta
::       _b - A_OKR.ref - wskazanie na okres rozliczeniowy
::       _c - [INTEGER] - czy korekta zerowa
::   WY: 0 / 1
::----------------------------------------------------------------------------------------------------------------------
  _p_ref:={? var_pres('_a')=type_of(null()) || _a || return(0) ?};
_okr_ref:={? var_pres('_b')=type_of(null()) || _b || return(0) ?};
 _zerowa:={? var_pres('_c')=type_of(0)      || _c || 0         ?};

_res:=0;
KAL_KORN.cntx_psh();
{? _zerowa
|| KAL_KORN.index('PRACOKR');
   KAL_KORN.prefix(_p_ref,_okr_ref,0)
|| KAL_KORN.index('PRACAKT');
   KAL_KORN.prefix(_p_ref,_okr_ref,'T',)
?};
{? KAL_KORN.first()
|| KAL_KORN.AKTYWNA:='N';
   KAL_KORN.END_D:=date();
   KAL_KORN.END_T:=time();
   KAL_KORN.cntx_psh();
   KAL_KORN.prefix();
   _res:=KAL_KORN.put();
   KAL_KORN.cntx_pop()
?};
KAL_KORN.cntx_pop();
_res


\korZeroExist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Sprawdza czy istnieje korekta zerowa
::   WE: _a - [REFERENCE] - wskazanie na pracownika (P)
::       _b - [REFERENCE] - wskazanie na okres rozliczeniowy (A_OKR)
::   WY: null/ref nagłówka korekty zerowej
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
  _p_ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};
_okr_ref:={? var_pres('_b')=type_of(null()) || _b || return(_result) ?};
KAL_KORN.cntx_psh();
KAL_KORN.index('PRACOKR');
KAL_KORN.prefix(_p_ref,_okr_ref,0);
{? KAL_KORN.first()
|| _result:=KAL_KORN.ref()
?};
KAL_KORN.cntx_pop();
_result


\korZero
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Sprawdza czy zapis ma być w ramach korekty "zerowej"
::   WE: _a - [REFERENCE] - wskazanie na pracownika (P)
::       _b - [REFERENCE] - wskazanie na okres rozliczeniowy (A_OKR)
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
  _p_ref:={? var_pres('_a')=type_of(null()) || _a || return(0) ?};
_okr_ref:={? var_pres('_b')=type_of(null()) || _b || return(0) ?};

{? exec('korZeroExist','kal_korn',_p_ref,_okr_ref)
|| KAL_KORN.cntx_psh();
   KAL_KORN.index('PRACOKR');
   KAL_KORN.prefix(_p_ref,_okr_ref);
   KAL_KORN.last();
   _result:=~KAL_KORN.WERSJA;
   KAL_KORN.cntx_pop()
?};
_result


\getNextNrWer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.30a]
:: OPIS: Funkcja pobierajaca nastepny numer wersji korekty dla prcownika i okresu rozliczeniowego
::   WE: _a - [REFERENCE] - wskazanie na pracownika (P)
::       _b - [REFERENCE] - wskazanie na okres rozliczeniowy (A_OKR)
::   WY: Nowy numer korekty lub -1 jezeli blad
::----------------------------------------------------------------------------------------------------------------------
  _p_ref:={? var_pres('_a')=type_of(null()) || _a || return(-1) ?};
_okr_ref:={? var_pres('_b')=type_of(null()) || _b || return(-1) ?};
_nextWer:=1;
KAL_KORN.cntx_psh();
KAL_KORN.index('PRACOKR');
KAL_KORN.prefix(_p_ref,_okr_ref);
{? KAL_KORN.last()
|| _nextWer+=KAL_KORN.WERSJA
?};
KAL_KORN.cntx_pop();
_nextWer


\getAktKor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [Emisja 12.30a]
:: OPIS: Funkcja zwraca aktywna korekte dla pracownika i okresu rozliczeniowego
::   WE: _a - [REFERENCE] - wskazanie na pracownika (P)
::       _b - [REFERENCE] - wskazanie na okres rozliczeniowy (A_OKR)
::       _c - [INTEGER] - czy korekta zerowa
::   WY: wskazanie na korekte lub null()
::----------------------------------------------------------------------------------------------------------------------
  _p_ref:={? var_pres('_a')=type_of(null()) || _a || return(null()) ?};
_okr_ref:={? var_pres('_b')=type_of(null()) || _b || return(null()) ?};
 _zerowa:={? var_pres('_c')=type_of(0)      || _c || 0              ?};
 _os_ref:={? var_pres('_d')=type_of(null()) || _d || null()         ?};

_res:=null();
KAL_KORN.cntx_psh();
{? _zerowa
|| KAL_KORN.index('PRACOKR');
   KAL_KORN.prefix(_p_ref,_okr_ref,0)
|| KAL_KORN.index('PRACAKT');
   KAL_KORN.prefix(_p_ref,_okr_ref,'T',)
?};

{? KAL_KORN.first()
|| _res:=KAL_KORN.ref()
|| {? _zerowa
   || _res:=exec('korekta_start','kal_korn',_os_ref,_p_ref,_okr_ref,'Plan pierwotny',1)
   ?}
?};
KAL_KORN.cntx_pop();
_res


\isKorZeroEmpty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Sprawdza czy zerowa korekta jest pusta (nie ma pozycji)
::   WE: _a - [REFERENCE] - wskazanie na pracownika nagłówek korekty
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};

KAL_KORH.cntx_psh();
KAL_KORH.index('KOREKTA');
KAL_KORH.prefix(_ref);
_result:=~KAL_KORH.first();
KAL_KORH.cntx_pop();
_result


\kal_korn_adisp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.30a]
:: OPIS: Funkcja na wyswietl po (spacja na rekordzie)
::----------------------------------------------------------------------------------------------------------------------
KAL_KORN.A_OKR().NAZ().NAZ;
KAL_KORN.display()


\delAllKor4Prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Usuwa wszystkie korekty pracownika w wybranym okresie rozliczeniowym
::   WE: _a [REFERENCE] - wskazanie na pracownika
::       _b [REFERENCE] - wskazanie na okres rozliczeniowy
::   WY: >0 -wyczyszczone,
::      <=0 -niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
  _p_ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};
_okr_ref:={? var_pres('_b')=type_of(null()) || _b || return(_result) ?};

_can_continue:=1;

:: powrot w przypadku zerwanej transakcji
{? do_state()=2 || return(null()) ?};

:: zalozenie transakcji
_mydo:=do_state()=0;
{? _mydo || do() ?};

KAL_KORN.cntx_psh();
KAL_KORN.index('PRACOKR');
KAL_KORN.prefix(_p_ref,_okr_ref);
{? KAL_KORN.first()
|| {!
   |? _can_continue:=exec('delete','kal_korn',KAL_KORN.ref());
      _can_continue>0 & KAL_KORN.first()
   !}
?};
KAL_KORN.cntx_pop();

{? _can_continue>0
|| _result:=1
|| undo()
?};
{? _mydo || end() ?};
_result


\delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Kasuje podany rekord tabeli KAL_KORN (wykonywane w transakcji!!!)
::   WE: _a [REFERENCE] - wskazanie na nagłówek korekty - KAL_KORN.ref()
::   WY: >0 -wyczyszczone,
::      <=0 -niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_ref:={? var_pres('_a')=type_of(null()) || _a || return(0) ?};
:: jeżeli transakcja została zerwana, to nie ma sensu przetwarzać formuły
{? do_state()=2 || return(-100) ?};

_result:=0;
_can_continue:=1;

:: sprawdzam, czy to w tej formule będę zakładał transakcję, czy już jest założona
_mydo:=do_state()=0;
{? _mydo || do() ?};
KAL_KORN.cntx_psh();
KAL_KORN.clear();
{? KAL_KORN.seek(_ref)
|| {? exec('clean','kal_korn',_ref)>0
   || {? KAL_KORN.del(,1)>0
      || _result:=1
      || undo();
         _result:=-3
      ?}
   || _result:=-2
   ?}
|| _result:=0
?};
KAL_KORN.cntx_pop();

{? _result<0
|| undo()
?};
{? _mydo || end() ?};
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Czysci powiazania do rekordu tabeli KAL_KORN
::   WE: _a [REFERENCE] - wskazanie na nagłówek korekty - KAL_KORN.ref()
::   WY: >0 -wyczyszczone,
::       <=0 -niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};

:: założenie transakcji
{? do_state()=2 || return(-100) ?};

_can_continue:=1;

_mydo:=do_state()=0;
{? _mydo || do() ?};

:: --- powiązania do ---
_can_continue:=exec('delete4korn','kal_korh',_ref);

:: --- wszystkie powiazania usuniete? ---
{? _can_continue>0
|| _result:=1
|| undo()
?};

{? _mydo || end() ?};
_result


\getKor4Prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.02]
::  MOD: MicKoc [22.26]
:: OPIS: Zwraca korekty dni pracownika w okresie rozliczeniowym
::   WE: _a [REFERENCE] - wskazanie na praconika
::       _b [REFERENCE] - wskazanie na okres rozliczeniowy
::       _c [STRING]    - czy pobierać wszystkie wersje korekt -
::                         'T'-tak (domyślnie) - zwraca wszystkie korekty od wskazanej numerem wersji
::                         'N'-nie - zwraca tylko korektę wskazaną numerem wersji
::       _d [INTEGER]   - numer wersji korekty
::   WY:    [TAB]       - tabela z korektami
::----------------------------------------------------------------------------------------------------------------------
 _p_ref:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_or_ref:={? var_pres('_b')=type_of(null()) || _b || null() ?};
   _all:={? var_pres('_c')=type_of('')     || _c || 'T'    ?};
_wersja:={? var_pres('_d')=type_of(0)      || _d || 1      ?};

_sql:=''+"
   select
      KAL_KORH.DATA,
      KAL_KORH.DATAW,
      KAL_KORH.POCZATEK,
      KAL_KORH.KONIEC,
      KAL_KORH.CZAS,
      KAL_KORH.TYP,
      KAL_KORH.TYPWS,
      KAL_KORH.RODZAJ,
      KAL_KORH.OPIS,
      KAL_KORH.P_DATA,
      KAL_KORH.P_CZAS,
      KAL_KORH.P_START,
      KAL_KORN.WERSJA,
      KAL_KORN.START_D,
      KAL_KORN.START_T,
      KAL_KORN.END_D,
      KAL_KORN.END_T,
      KAL_KORN.POWOD,
      OSOBA.NAZWISKO,
      OSOBA.PIERWSZE
   from
      KAL_KORH
      join KAL_KORN
      left join OSOBA using(KAL_KORN.KTO, OSOBA.REFERENCE)
   where
      KAL_KORN.P=:_a
   and
      KAL_KORN.A_OKR=:_b
   and
      ((':_c'='T' and KAL_KORN.WERSJA>=:_d) or (':_c'='N' and KAL_KORN.WERSJA=:_d))
   order by
      DATA, WERSJA
";
sql(_sql,_p_ref,_or_ref,_all,_wersja)


\fillKorZero
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
::  MOD: MicKoc [22.26]
:: OPIS: Wypełnia korektę zerową pierwszymi zapisami
::   WE: _a [REFERENCE] - wskazanie na osobę
::       _b [REFERENCE] - wskazanie na pracownika
::       _c [REFERENCE] - wskazanie na okres rozliczeniowy
::       -d [INTEGER]   - rok korekty
::       -e [INTEGER]   - msc korekty
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
 _os_ref:={? var_pres('_a')=type_of(null()) || _a || return(0) ?};
  _p_ref:={? var_pres('_b')=type_of(null()) || _b || return(0) ?};
_okr_ref:={? var_pres('_c')=type_of(null()) || _c || return(0) ?};
    _rok:={? var_pres('_d')=type_of(0)      || _d || 0         ?};
    _msc:={? var_pres('_e')=type_of(0)      || _e || 0         ?};

_ret_val:=1;
{? var_pres('_buffer')>100 || obj_del(_buffer) ?};
_buffer:=exec('buffer','kal_korh');
_zerowa:=1;

KAL_BUFF.cntx_psh();
KAL_BUFF.index('PRZNODT');
P.cntx_psh();
P.prefix();
A_OKRP.cntx_psh();
A_OKRP.use('x_okrpi');
A_OKRP.index('A_OKPP');
A_OKRP.prefix(_okr_ref,_p_ref);
{? A_OKRP.first()
|| _data_od:=A_OKRP.OD;
   _data_do:=A_OKRP.DO;
   {? _rok<>0 & _msc<>0
   || _data_od:={? _data_od>date(_rok,_msc,1) || _data_od || date(_rok,_msc,1) ?};
      _data_do:={? _data_do<date(_rok,_msc,0) || _data_do || date(_rok,_msc,0) ?}
   ?};
   _dzien:=_data_od;

   {? P.seek(_p_ref)
   || _mydo:=do_state()=0;
      {? _mydo || do() ?};
      {!
      |? KAL_BUFF.prefix(_p_ref,'P','T',_dzien);
         {? KAL_BUFF.first()
         || _buffer.blank(_buffer);
            _buffer.STATUS:=KAL_BUFF.STATUS;
            _buffer.CZAS:=KAL_BUFF.CZAS;
            _buffer.DATA:=KAL_BUFF.DATA;
            _buffer.DATAW:=KAL_BUFF.DATAW;
            _buffer.KONIEC:=KAL_BUFF.KONIEC;
            _buffer.OPIS:=KAL_BUFF.OPIS;
            _buffer.POCZATEK:=KAL_BUFF.POCZATEK;
            _buffer.RODZAJ:=KAL_BUFF.RODZAJ;
            _buffer.TYP:=KAL_BUFF.TYP;
            _buffer.TYPWS:=KAL_BUFF.TYPWS;
            _buffer.P_DATA:=KAL_BUFF.P_DATA;
            _buffer.P_START:=KAL_BUFF.P_START;
            _buffer.P_CZAS:=KAL_BUFF.P_CZAS;
            {? ~exec('exist','kal_korh',_p_ref,_okr_ref,_buffer.DATA,_zerowa)
            || _ret_val*=exec('add','kal_korh',_p_ref,_okr_ref,_buffer,_zerowa,_os_ref)
            ?}
         ?};
        _dzien+=1;
        _dzien<=_data_do
      !};
:: w przypadku niepowodzenia cofnij zmiany
      {? _ret_val=0
      || undo()
      || {? _zerowa
         || exec('korekta_koniec','kal_korn',_p_ref,_okr_ref,_zerowa)
         ?}
      ?};
      {? {? _mydo || end() || 1 ?}
      || _ret_val:=1
      || _ret_val:=0
      ?}
   ?}
?};
A_OKRP.cntx_pop();
P.cntx_pop();
KAL_BUFF.cntx_pop();
_ret_val


\select4Date
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.30a]
:: OPIS: Wyświetla korekty dla pracownika na wskazaną datę.
::   WE: _a -   [REFERENCE]   - pracownik, dla którego mają być wyświetlone korekty
::       [_b] - [DATE]        - data, dla której mają być wyświetlone korekty
::----------------------------------------------------------------------------------------------------------------------
_p_ref:={? var_pres('_a')=type_of(null()) || _a || return(null()) ?};
_data:={? var_pres('_b')=type_of(date())  || _b || date(0,0,0)    ?};
exec('select','kal_korn',_p_ref,_data)


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.30a]
:: OPIS: Pokazuje okno z korektami.
::   WE: _a -   [REFERENCE]   - pracownik, dla którego mają być wyświetlone korekty
::       [_b] - [DATE]        - data, dla której mają być wyświetlone korekty
::       [_c] - [REFERENCE]   - wskazanie na okres rozliczeniowy
::----------------------------------------------------------------------------------------------------------------------
  _p_ref:={? var_pres('_a')=type_of(null()) || _a || return()    ?};
   _data:={? var_pres('_b')=type_of(date()) || _b || date(0,0,0) ?};
_okr_ref:={? var_pres('_c')=type_of(null()) || _c || null()      ?};

_forDate:=_forOkr:=0;
{? _data<>#0 & _okr_ref<>null()
|| _wyn:=FUN.choice('Proszę określić sposób wyświetlenia korekt'@,,'Dla podanej daty'@,'dla Okresu rozliczeniowego'@);
   {? _wyn=1
   || _forDate:=1
   |? _wyn=2
   || _forOkr:=1
   || return()
   ?}
|| {? _data<>#0 || _forDate:=1 ?};
   {? _okr_ref<>null() || _forOkr:=1 ?}
?};
A_OKRN.cntx_psh();
KAL_KORN.cntx_psh();
KAL_KORH.cntx_psh();
{? _forDate=1
|| KAL_KORH.index('PRACDATA');
   KAL_KORH.prefix(_p_ref,_data)
|? _forOkr=1
|| KAL_KORH.index('PRACOKR');
   KAL_KORH.prefix(_p_ref,_okr_ref)
?};
KAL_KORH.select();
KAL_KORH.cntx_pop();
KAL_KORN.cntx_pop();
A_OKRN.cntx_pop();
~~


\kal_korh_wer_gr_af
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.02]
:: OPIS: Formuła do odświerzenia zawartości okna WER w KAL_KORN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KAL_KORN.prefix();
KAL_KORN.f_clear(1);
KAL_KORN.f_set('START_D,WERSJA','','KAL_KORN.REFERENCE=:_a',KAL_KORH.KAL_KORN);
KAL_KORH.f_rfresh();
grp_disp(KAL_KORN,'WER');
~~

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:18 033fe26353e5fedb97b3839c81961af9830b1aa49e1e61e6c4ac69b69cb5d4cbbe57c6418d78a6b1e1594d577b6d150b67f3df2a65ced686c78296f514767ebec05f65b07a08940f0f8e9bcdda43f034a436ae316def9b0833c5ba1d46201fde0d56517a21322b427dc230196ee5ff72236de80395e02176d4adb07b22c92d96
