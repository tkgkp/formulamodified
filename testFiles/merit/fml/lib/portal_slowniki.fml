:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: portal_slowniki.fml
:: Utworzony: 05.06.2020
:: Autor: TMR
::======================================================================================================================
:: Zawartość: Plik zawiera formuły wykorzystywane do obsługi słowników na portalu.
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła zakładająca słowniki "zamknięte/systemowe" potrzebne na portalu m.in. we wnioskach kadrowych
::       Tabela PORSLO służy jako tabela nagłówkowa do synchronizacji danych znajdujących się w innych miejscach systemu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_por_conf:={? var_pres('_a')=type_of('') || _a || ~~ ?};

params_set('por_conf',_por_conf);

_add:="
:: zakładamy nagłówek dla słownika, który będzie wykorzystywany we wnioskach (z firmą=null)
   exec('porslo_add','portal_slowniki',_a,_b,_c,_d,null(),'T',_e,1)
";

_add_items:=
   "_result:=0;
    {? var_pres('_a')>100 || _a || return(_result) ?};
    _for:={? var_pres('for',_a)=type_of(null) & _a.for<>null & ref_tab(_a.for)=PORSLO || _a.for || return(_result) ?};
    _from:={? var_pres('from',_a)=type_of(SYSLOG) || _a.from || ~~ ?};
    _using:={? var_pres('using',_a)=type_of(\"\") || _a.using || ~~ ?};
   _firma:=exec('firma4porsloit','portal_slowniki',_for);
    {? type_of(_using)=type_of(\"\")
    || _using(_for)
    || {? type_of(_from)=type_of(SYSLOG)
       || {? _loop:=_from.first()
          || {!
             |? _loop
             |!
                _result+=(exec('porsloit_add','portal_slowniki',_for,_firma,_from.VALUE,_from.DESC)<>null);
                _loop:=_from.next()
             !}
          ?}
       ?}
    ?};
    _result
   ";

_settings:=obj_new('for','from','using','clear');
_settings.clear:=
   "{? var_pres('from',.)>100 || obj_del(.from) ?};
    .for:=null;
    .from:=~~;
    .using:=~~
   ";
_entry:=obj_new('content','clear','continueProcessing');
_entry.clear:="{? var_pres('content',.)>100 || obj_del(.content) ?}";
_entry.continueProcessing:=1;

:: Inicjalizacja słowników standardowych
_add('MiesiacOd',,,'Miesiąc od','T');
_add('MiesiacDo',,,'Miesiąc do','T');
_add('RokOd',,,'Rok od','T');
_add('RokDo',,,'Rok do','T');

_add('TypAdresu',,,'Typy adresów','T');
_add('TypAdresuOpis',,,'Typy adresów','T');

_add('KodP',,,'Kod pocztowy','T');
_add('Miejscowosc',,,'Lista miejscowości','T');
_add('Powiat',,,'Lista powiatów','T');
_add('Wojewodztwo',,,'Lista województw','T');

_add('Plec',,,'Lista płci','T');

_add('SymbolKontaMCL','Request_MCL',,,'T');

:: Inicjalizacja słowników niestandardowych (custom)
_customField:=exec('customField','portal_slowniki');

_customResources:=exec('custom_resources','portal_slowniki');

{? _customResources.entries.first()
|| {!
   |? _entry.clear();
      _entry.content:=_customResources.entries.get();
      _porslo:=_add(_customField,_entry.content.type,_entry.content.name,_entry.content.desc,_entry.content.global);
      {? _porslo
      || _settings.clear();
         _settings.for:=_porslo;
         _settings.from:={? _entry.content.VALUES.size() || _entry.content.VALUES || ~~ ?};
         _settings.using:=_entry.content.init_form;
         _add_items(_settings)
      ?};
      _customResources.entries.next()
   !}
?};

:: słowniki wykorzystywane we wnioskach administracyjnych
:: Przechodzę po kategoriach zasobów remontowych i dodaje słownik, jeżeli kategoria ma przypisany typ dokumentu
REM_KAT.cntx_psh();
REM_KAT.clear();
{? REM_KAT.first()
|| {!
   |? {? REM_KAT.TYP<>null()
      || _porslo:=_add(_customField,'',
                       REM_KAT.TYP().ID_WP,
                       'Określa zasoby remontowe, które użytkownik portalu może wybrać we wniosku administracyjnym',
                       'N'
                      );
::       elementy listy
         {? _porslo
         || exec('uzup_rem_kat','portal_slowniki',_porslo,REM_KAT.ref())
         ?}
      ?};
      REM_KAT.next()
   !}
?};
REM_KAT.cntx_pop();
~~


\porslo_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła dodająca rekord w tabeli PORSLO
::   WE: _a  [STRING]    - pole słownika (nie może to być pusty napis)
::      [_b] [STRING]    - typ żądania (domyślnie 'Request')
::      [_c] [STRING]    - kod listy (opcjonalnie)
::      [_d] [STRING]    - opis słownika (opcjonalnie)
::      [_e] [REFERENCE] - wskazanie na firmę (obecnie parametr nie jest używany)
::      [_f] [STRING]    - czy zapis systemowy? [T/N*]
::      [_g] [STRING]    - czy słownik globalny? [T*/N]
::      [_h] [NUMBER]    - czy nadpisywać przekazanymi wartościami?
::   WY: null/ref
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
   _field:={? var_pres('_a')=type_of('') & +_a || _a || return(_result) ?};
    _type:={? var_pres('_b')=type_of('')       || _b || 'Request'       ?};
    _code:={? var_pres('_c')=type_of('')       || _c || ''              ?};
    _opis:={? var_pres('_d')=type_of('')       || _d || ''              ?};
   _firma:={? var_pres('_e')=type_of(null())   || _e || null()          ?};
  _system:={? var_pres('_f')=type_of('')       || _f || 'N'             ?};
  _global:={? var_pres('_g')=type_of('')       || _g || 'T'             ?};
   _force:={? var_pres('_h')=type_of(0)        || _h || 0               ?};

PORSLO.cntx_psh();
PORSLO.index('FIELD');
PORSLO.prefix(null(),_field,_type,_code);
{? PORSLO.first()
|| _result:=PORSLO.ref();
   {? _force
   || PORSLO.OPIS:=_opis;
      PORSLO.SYSTEM:=_system;
      PORSLO.GLOBAL:=_global;
      PORSLO.put(1)
   ?}
|| PORSLO.blank(1);
   PORSLO.FIRMA:=null();
   PORSLO.FIELD:=_field;
   PORSLO.TYPE:=_type;
   PORSLO.CODE:=_code;
   PORSLO.OPIS:=_opis;
   PORSLO.SYSTEM:=_system;
   PORSLO.GLOBAL:=_global;
   {? PORSLO.add(1)
   || _result:=PORSLO.ref()
   ?}
?};
PORSLO.cntx_pop();
_result


\porslo_exists
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła sprawdzająca czy istnieje rekord w tabeli PORSLO
::   WE: _a  [STRING]    - pole słownika (nie może to być pusty napis)
::      [_b] [STRING]    - typ żądania (domyślnie 'Request')
::      [_c] [STRING]    - kod listy (opcjonalnie)
::   WY: null/ref
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
_field:={? var_pres('_a')=type_of('') & +_a || _a || return(_result) ?};
 _type:={? var_pres('_b')=type_of('')       || _b || ''              ?};
 _code:={? var_pres('_c')=type_of('')       || _c || ''              ?};

PORSLO.cntx_psh();
PORSLO.index('FIELD');
PORSLO.prefix(null(),_field,_type,_code);
{? PORSLO.first()
|| _result:=PORSLO.ref()
?};
PORSLO.cntx_pop();
_result


\porslo_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła służy put-nięciu rekordu tabeli PORSLO w celu poinformowania mechanizmu synchronizacji o konieczności
::       "obrobienia" rekordu
::   WE: _a  [STRING]    - pole słownika (nie może to być pusty napis)
::      [_b] [STRING]    - typ żądania (domyślnie 'Request')
::      [_c] [STRING]    - kod listy (opcjonalnie)
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_field:={? var_pres('_a')=type_of('') & +_a || _a || return(_result)                ?};
 _type:={? var_pres('_b')=type_of('')       || _b || 'Request'                      ?};
 _code:={? var_pres('_c')=type_of('')       || _c || ''                             ?};

PORSLO.cntx_psh();
PORSLO.index('FIELD');
PORSLO.prefix(null(),_field,_type,_code);
{? PORSLO.first()
|| _result:=PORSLO.put(,1)
?};
PORSLO.cntx_pop();
_result


\customField
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła zwraca napis wymagany dla uniwersalnych list wartości w polu PORSLO.FIELD
::   WE:
::   WY: napis
::----------------------------------------------------------------------------------------------------------------------
'__CustomField__'


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Wyświetla okno z listą słowników portalowych
::   WE: [_a] [STRING] - zakres danych do wyświetlania
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_scope:={? var_pres('_a')=type_of('') || _a || '' ?};

_result:=~~;

PORSLO.cntx_psh();
{? _scope='ULW'
|| PORSLO.index('SYSTEM');
   PORSLO.prefix('N',null(),exec('customField','portal_slowniki'));
   PORSLO.win_edit('ULW');
   _fld_acr:='CODE';
   _win_sel:='ULW'
|| PORSLO.index('FIELD');
   PORSLO.prefix(null());
   PORSLO.win_edit('RED');
   _fld_acr:='FIELD';
   _win_sel:='WER'
?};
PORSLO.win_sel(_win_sel);
::PORSLO.win_fml(_win_sel,,_fld_acr,,'ICON_BEFORE', "
::      exec('porslo_isSynced','portal_slowniki',PORSLO.uidref(),0).icon
::");
PORSLO.select();
PORSLO.cntx_pop();
~~


\porslo_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła na "dołącz - przed" dla tabeli PORSLO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PORSLO.blank(1);
PORSLO.FIRMA:=null();
PORSLO.SYSTEM:='N';
PORSLO.GLOBAL:='T';

_win:=cur_win();
{? _win='WER'
|| _fml_old:=EDIT_VAR.fld_fml('TN','AFTER_EDIT',
   "  _customField:=exec('customField','portal_slowniki');
      PORSLO.FIELD:={? EDIT_VAR.TN='T'
                    || _customField
                    || {? PORSLO.FIELD=_customField | VAR.WARTOSC=_customField || '' || VAR.WARTOSC ?}
                    ?};
      PORSLO.GLOBAL:={? PORSLO.FIELD=_customField || PORSLO.GLOBAL || 'T' ?};
      exec('porslo_efld_opt','portal_slowniki',,PORSLO,'RED','TN')
   ");
   EDIT_VAR.blank();
   _var_old:=VAR.WARTOSC;
   VAR.WARTOSC:=''
|? _win='ULW'
|| PORSLO.FIELD:=exec('customField','portal_slowniki')
?};

exec('porslo_efld_opt','portal_slowniki','*',PORSLO,{? _win='ULW' || 'ULW' || 'RED' ?});
{? PORSLO.edit("
      _chk:=exec('porslo_chk','portal_slowniki',0);
      {? (type_of(_chk)=type_of('') & _chk<>'') | (type_of(_chk)=type_of(0) & ~_chk)
      || return(_chk)
      ?};
      _chk

   ")
|| PORSLO.add()
?};
{? _win='WER'
|| EDIT_VAR.fld_fml('TN','AFTER_EDIT',_fml_old);
   VAR.WARTOSC:=_var_old
?};
1


\porslo_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła na "popraw - przed" dla tabeli PORSLO
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('porslo_isSynced','portal_slowniki',PORSLO.uidref()).ok || return(0) ?};

_win:=cur_win();
{? _win='WER'
|| _fml_old:=EDIT_VAR.fld_fml('TN','AFTER_EDIT',
   "  _customField:=exec('customField','portal_slowniki');
      PORSLO.FIELD:={? EDIT_VAR.TN='T'
                    || _customField
                    || {? PORSLO.FIELD=_customField | VAR.WARTOSC=_customField || '' || VAR.WARTOSC ?}
                    ?};
      PORSLO.GLOBAL:={? PORSLO.FIELD=_customField || PORSLO.GLOBAL || 'T' ?};
      exec('porslo_efld_opt','portal_slowniki',,PORSLO,'RED','TN')
   ");
   EDIT_VAR.TN:={? PORSLO.FIELD=exec('customField','portal_slowniki') || 'T' || 'N' ?};
   _var_old:=VAR.WARTOSC;
   VAR.WARTOSC:=PORSLO.FIELD
?};
exec('porslo_efld_opt','portal_slowniki','*',PORSLO,{? _win='ULW' || 'ULW' || 'RED' ?});
{? PORSLO.edit("
      _chk:=exec('porslo_chk','portal_slowniki',1);
      {? (type_of(_chk)=type_of('') & _chk<>'') | (type_of(_chk)=type_of(0) & ~_chk)
      || return(_chk)
      ?};
      _chk
   ")
|| PORSLO.put(,1)
?};
{? _win='WER'
|| EDIT_VAR.fld_fml('TN','AFTER_EDIT',_fml_old);
   VAR.WARTOSC:=_var_old
?};
1


\porslo_isSynced
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Sprawdza czy przekazany rekord tabeli PORSLO jest juz zsynchronizowany z portalem
::   WE: _a [STRING] - uidref sprawdzanego rekordu
::       _b [NUMBER] - czy wyświetlać komunikaty [1 - tak (domyślnie) / 0 - nie]
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_uidref:={? var_pres('_a')=type_of('') & (+_a=48) || _a || return(_result) ?};
   _msg:={? var_pres('_b')=type_of(0)             || _b || 1               ?};

_typ:=XINFO.POR_CONF;
_id:='PORTAL_PORSLO%1_ID'[_typ];
_result:=exec('isSynced','#sync_id','PORTAL_CFG',_id,_uidref);
{? _result.ok & _msg
|| FUN.emsg('Rekord został już wysłany na HR Portal.\nModyfikacja rekordu nie jest możliwa.'@)
?};
_result


\porsloit_isSynced
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [23.25]
:: OPIS: Sprawdza czy przekazany rekord tabeli PORSLOIT jest juz zsynchronizowany z portalem
::   WE: _a [STRING] - uidref sprawdzanego rekordu
::       _b [NUMBER] - czy wyświetlać komunikaty [1 - tak (domyślnie) / 0 - nie]
::   WY: obiekt z polami ok oraz syncTime
::----------------------------------------------------------------------------------------------------------------------
_uidref:={? var_pres('_a')=type_of('') & (+_a=48) || _a || '' ?};
   _msg:={? var_pres('_b')=type_of(0)             || _b || 1  ?};

_typ:=XINFO.POR_CONF;
_id:='PORTAL_PORSLOIT%1_ID'[_typ];
_result:=exec('isSynced','#sync_id','PORTAL_CFG',_id,_uidref);
{? _result.ok & _msg
|| FUN.emsg('Rekord został już wysłany na HR Portal.\nModyfikacja rekordu nie jest możliwa.'@)
?};
_result


\porslo_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli PORSLO.
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
{? PORSLO.FIELD=exec('customField','portal_slowniki')
|| __CHK.validate(PORSLO,$("_a.table(_b,"+$_put+",,'FIELD','CODE')"))
|| __CHK.validate(PORSLO,$("_a.table(_b,"+$_put+",,'FIELD','TYPE')"))
?}


\porslo_usun_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa akcji "Usuń - grupa przed" w oknach wertowania tabeli PORSLO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('del_ask','#table')
|| KOMM.init(,,'Raport z usuwania słowników portalowych')
?}


\porslo_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa akcji "Usuń - przed" w oknach wertowania tabeli PORSLO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_gr:=PORSLO.sel_size();
_ok:=exec('testlink','#record',PORSLO,_gr=0)=0;

{? _ok & PORSLO.count()=0 & PORSLO.SYSTEM<>'T'
|| {? _gr | exec('del_ask','#table')
   || _code:=PORSLO.CODE;
::    zalozenie transakcji
      _mydo:=do_state()=0;
      {? _mydo || do() ?};

      {? PORSLO.del(,1)
      || PORSLO.cntx_psh();
         PORSLO.prefix();
         _TAB:=sql("select REFERENCE as REF, CODE from PORSLO where PORSLO.FIRMA is not null and PORSLO.CODE=':_a'"+
                   '',_code);
         {? _TAB.first()
         || {!
            |? {? PORSLO.seek(_TAB.REF)
               || _ok*=PORSLO.del(,1)
               ?};
               _TAB.next()
            !}
         ?};
         PORSLO.cntx_pop()
      ?};

      {? ~_ok || undo() ?};
      {? _mydo || end() ?}
   ?}
|? _gr
|| KOMM.set_root('Słowniki portalowe, które nie mogły być usunięte.');
   _opis:={? PORSLO.FIELD=exec('customField','portal_slowniki')
          || '%1 - %2'[PORSLO.FIELD,PORSLO.CODE]
          || '%1 - %2'[PORSLO.FIELD,PORSLO.TYPE]
          ?};
   KOMM.add(_opis);
   KOMM.sect_end()
?}


\porslo_usun_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa akcji "Usuń - grupa po" w oknach wertowania tabeli PORSLO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KOMM.select()


\porslo_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie WER tabeli PORSLO.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_win:=cur_win();
{? _win='WER'
|| EDIT_VAR.TN:={? PORSLO.FIELD=exec('customField','portal_slowniki') || 'T' || 'N' ?}
?};
{? _a
|| _win:='WER';
   _ne:='';
   _empty:='';
   {? PORSLO.FIELD<>exec('customField','portal_slowniki')
   || _ne+='E'
   ?};
   {? PORSLO.SYSTEM='T'
   || _ne+='PU'
   ?};
   _ag:='%1:%2'[_ne,_empty];
   PORSLO.actions_grayed(_win,_ag)
?}


\porslo_elementy_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Wyświetla listę elementów dla wybranego słownika listy dynamicznej
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_firma:=exec('firma4porsloit','portal_slowniki',PORSLO.ref());
PORSLOIT.cntx_psh();
PORSLOIT.index('SLOVAL');
PORSLOIT.prefix(PORSLO.ref(),_firma);
PORSLOIT.win_sel('WER');
PORSLOIT.win_fml('WER',,'VALUE',,'ICON_BEFORE', "
   exec('porsloit_isSynced','portal_slowniki',PORSLOIT.uidref(),0).icon
");
PORSLOIT.hdr_sel();
PORSLOIT.hdr_sel(' '+PORSLO.CODE);
_ha:={? PORSLO.SYSTEM='T' || ':D' || ':' ?};
PORSLOIT.select(,,,_ha);
PORSLOIT.cntx_pop()


\porsloit_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła na dołącz - przed dla tabeli PORSLOIT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PORSLOIT.blank(1);
PORSLOIT.PORSLO:=PORSLO.ref();
_firma:=exec('firma4porsloit','portal_slowniki',PORSLO.ref());
PORSLOIT.FIRMA:=_firma;
PORSLOIT.hdr_edit();
PORSLOIT.hdr_edit(' '+PORSLO.CODE);
{? PORSLOIT.edit("exec('porsloit_chk','portal_slowniki',0)")
|| PORSLOIT.add()
?}


\porsloit_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła na popraw - przed dla tabeli PORSLOIT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PORSLOIT.hdr_edit();
PORSLOIT.hdr_edit(' '+PORSLO.CODE);
params_set('uidref',PORSLOIT.uidref());
{? PORSLOIT.edit("exec('porsloit_chk','portal_slowniki',1)")
|| PORSLOIT.put()
?}


\porsloit_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli PORSLOIT.
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(PORSLOIT,
   $("_a.table(_b,"+$_put+",,'PORSLO','VALUE')")
)


\porsloit_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła dodająca rekord w tabeli PORSLOIT
::   WE: _a  [REFERENCE] - wskazanie na słownik PORSLO
::       _b  [REFERENCE] - wskazanie na firmę
::       _c  [STRING]    - wartość elementu listy
::      [_d] [STRING]    - opis elementu słownika (opcjonalnie)
::      [_e] [STRING]    - prawo do wierszy - RowRightsName (opcjonalnie)
::   WY: null/ref
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
_porslo:={? var_pres('_a')=type_of(null()) & _a || _a || return(_result) ?};
 _firma:={? var_pres('_b')=type_of(null())      || _b || return(_result) ?};
 _value:={? var_pres('_c')=type_of('')          || _c || ''              ?};
  _desc:={? var_pres('_d')=type_of('')          || _d || ''              ?};
_rrname:={? var_pres('_e')=type_of('')          || _e || ''              ?};

PORSLOIT.cntx_psh();
PORSLOIT.index('SLOVAL');
PORSLOIT.prefix(_porslo,_firma,_value);
{? PORSLOIT.first()
|| _result:=PORSLOIT.ref();
   {? PORSLOIT.DESC<>_desc | PORSLOIT.RRNAME<>_rrname
   || PORSLOIT.DESC:=_desc;
      PORSLOIT.RRNAME:=_rrname;
      PORSLOIT.put(1)
   ?}
|| PORSLOIT.blank(1);
   PORSLOIT.PORSLO:=_porslo;
   PORSLOIT.VALUE:=_value;
   PORSLOIT.DESC:=_desc;
   PORSLOIT.RRNAME:=_rrname;
   PORSLOIT.FIRMA:=_firma;
   {? PORSLOIT.add(1)
   || _result:=PORSLOIT.ref()
   ?}
?};
PORSLOIT.cntx_pop();
_result


\porsloit_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Formuła nadpisująca rekord w tabeli PORSLOIT
::   WE: _a  [REFERENCE] - wskazanie na słownik PORSLO
::       _b  [REFERENCE] - wskazanie na firmę
::       _c  [STRING]    - poprzednia wartość elementu listy
::      [_d] [STRING]    - poprzedni opis elementu słownika (opcjonalnie)
::       _e  [STRING]    - nowa wartość elementu listy
::      [_f] [STRING]    - nowy opis elementu słownika (opcjonalnie)
::      [_g] [STRING]    - poprzednia wartość RowRightsName (opcjonalnie)
::      [_h] [STRING]    - nowa wartość RowRightsName (opcjonalnie)
::   WY: null/ref
::----------------------------------------------------------------------------------------------------------------------
   _result:=null();
    _porslo:={? var_pres('_a')=type_of(null()) & _a || _a || return(_result) ?};
     _firma:={? var_pres('_b')=type_of(null())      || _b || return(_result) ?};
 _value_old:={? var_pres('_c')=type_of('')          || _c || return(_result) ?};
  _desc_old:={? var_pres('_d')=type_of('')          || _d || ''              ?};
 _value_new:={? var_pres('_e')=type_of('')          || _e || return(_result) ?};
  _desc_new:={? var_pres('_f')=type_of('')          || _f || ''              ?};
_rrname_old:={? var_pres('_g')=type_of('')          || _g || ''              ?};
_rrname_new:={? var_pres('_h')=type_of('')          || _h || ''              ?};

PORSLOIT.cntx_psh();
PORSLOIT.index('SLOVAL');
PORSLOIT.prefix(_porslo,_firma,_value_old,);
{? PORSLOIT.first()
|| {? _value_old<>_value_new || PORSLOIT.VALUE:=_value_new ?};
   {? _desc_old<>_desc_new || PORSLOIT.DESC:=_desc_new ?};
   {? _rrname_old<>_rrname_new || PORSLOIT.RRNAME:=_rrname_new ?};
   PORSLOIT.prefix();
   {? PORSLOIT.put()
   || _result:=PORSLOIT.ref()
   ?}
?};
PORSLOIT.cntx_pop();
_result


\porsloit_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Formuła usuwająca rekord z tabeli PORSLOIT
::   WE: _a  [REFERENCE] - wskazanie na słownik PORSLO
::       _b  [REFERENCE] - wskazanie na firmę
::       _c  [STRING]    - wartość elementu listy
::   WY: 0/1 - niepowdzenie operacji/powodzenie operacji
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_porslo:={? var_pres('_a')=type_of(null()) & _a || _a || return(_result) ?};
 _firma:={? var_pres('_b')=type_of(null())      || _b || return(_result) ?};
 _value:={? var_pres('_c')=type_of('')          || _c || return(_result) ?};

_result:=1;
PORSLOIT.cntx_psh();
PORSLOIT.index('SLOVAL');
PORSLOIT.prefix(_porslo,_firma,_value,);
{? PORSLOIT.first()
|| _result:=PORSLOIT.del(,1)>0
?};
PORSLOIT.cntx_pop();
_result


\porsloit_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie WER tabeli PORSLOIT.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _win:=cur_win();
   _ne:='';
   _empty:='';
   PORSLO.cntx_psh();
   PORSLO.prefix();
   {? PORSLOIT.PORSLO().SYSTEM='T'
   || _ne+='DPU'
   ?};
   PORSLOIT.hdr_edit();
   PORSLOIT.hdr_edit(' '+PORSLO.CODE);
   PORSLO.cntx_pop();
   _ag:='%1:%2'[_ne,_empty];
   PORSLOIT.actions_grayed(_win,_ag)
?}


\porslo_field_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Po redagowaniu pola PORSLO.FIELD
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAR.WARTOSC:=PORSLO.FIELD


\porslo_type_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa przycisku F3 dla pola PORSLO.TYPE
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:=exec('typ_listy_tab','portal_slowniki',PORSLO.FIELD);
_ws:=_TAB.mk_sel('Kody typów'@,,,'#porslo_type_f3',,,8,,'U');
_TAB.win_fld(_ws,,'KOD',,,20,,,'Kod'@,,'Kod typu'@);
_TAB.win_fld(_ws,,'OPIS',,,30,,,'Opis'@,,'Opis typu'@);
_TAB.win_act(_ws,,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W');
_TAB.win_sel(_ws);

_TAB.prefix();
{? fld()=''
|| _TAB.first()
|| _TAB.find_key(fld())
?};
{? _TAB.select(,1,5)
|| _TAB.KOD
?}


\tat_porslo_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Po redakcji pola TAT.PORSLO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TAT.PORSLO().FIELD=exec('customField','portal_slowniki')
|| TAT.PORTYPE:=''
|| TAT.PORTYPE:=TAT.PORSLO().TYPE
?};
win_disp()


\tat_portype_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Przed redakcją pola TAT.PORTYPE
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TAT.PORSLO().FIELD=exec('customField','portal_slowniki')
|| exec('prslutat','mat_atr')
|| 0
?}


\typ_listy_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Zwraca tabelę z kodami typów dla słownika "__CustomField__"
::   WE: _a [STRING]  - nazwa pola dla słownika
::       _b [INTEGER] - Czy pobierać wszystkie rekordy? 0 (domyślnie) / 1
::   WY: tabela z kodami
::----------------------------------------------------------------------------------------------------------------------
_field:={? var_pres('_a')=type_of('') || _a || '' ?};
  _all:={? var_pres('_b')=type_of(0)  || _b || 0  ?};

_tab:=tab_tmp(1
::   kod
   ,'KOD','STRING[20]','Kod'
::   opis
   ,'OPIS','STRING[100]','Opis'
);
_customField:=exec('customField','portal_slowniki');

{? _all | _field=_customField
|| _tab.KOD:='DESC_CHECK'; _tab.OPIS:='Wartość + Opis, Kontrola wartości'@;
   _tab.add()
?};
{? _all | _field=_customField
|| _tab.KOD:='DESC_NOCHECK'; _tab.OPIS:='Wartość + Opis, Brak kontroli'@;
   _tab.add()
?};
{? _all | _field=_customField
|| _tab.KOD:='NODESC_CHECK'; _tab.OPIS:='Wartość, Kontrola wartości'@;
   _tab.add()
?};
{? _all | _field=_customField
|| _tab.KOD:='NODESC_NOCHECK'; _tab.OPIS:='Wartość, Brak kontroli'@;
   _tab.add()
?};

{? _all | _field<>_customField
|| _tab.KOD:='Request'; _tab.OPIS:='';
   _tab.add()
?};
_tab


\porslo_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Formuła odpowiedzialna za dynamiczne ustawianie właściwości pól tabeli PORSLO.
::       Formuła wywoływana jest w dwóch kontekstach pracy:
::          - Po redagowaniu konkretnego pola, które determinuje właściwości wyświetlania innych pól.
::          - Przed wyświetleniem okna redagowania (przed właściwymi akcjami Dołącz, Popraw, Wyświetl), ustawia
::            właściwości wszystkich pól (wymagających tego).
::       Kontekst pracy jest określany na podstawie argumentu wywołania.
::   WE: [_a] [STRING] - Kontekst pracy:
::             '1' - Obsługa jednego pola [domyślnie].
::             '*' - Obsługa wszystkich pól.
::       [_b] [TABLE]  - Uchwyt tabeli, w oknie redagowania której znajdują sie pola. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęta bieżąca tabela.
::       [_c] [STRING] - Akronim okna, w którym mają być ustawione właściwości pól. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęte bieżące okno.
::       [_d] [STRING] - Akronim pola, którego wartość determinuje właściwości wyświetlania innych pól. Parametr ma
::             znaczenie wyłącznie dla _a='1'. [Domyślnie: bieżące pole].
::   WY: 0 - Błąd argumentów wywołania.
::       1 - Argumenty poprawne (właściwości ustawione).
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (_a='1' | _a='*') || _a || '1' ?};
{? var_pres('_b')=type_of(PORSLO)
|| _TAB:=_b
|? _tryb='1'
|| _TAB:=cur_tab(1,1)
|| return(0)
?};
{? var_pres('_c')=type_of('')
|| _we:=_c
|? _tryb='1'
|| _we:=cur_win(1,1)
|| return(0)
?};
{? var_pres('_d')=type_of('')
|| _fld:=_d
|? _tryb='1'
|| _fld:=cur_afld()
|| _fld:=''
?};

{? _fld='' | _fld='TN'
|| _customField:=exec('customField','portal_slowniki');
   {? _we='RED'
   || PORSLO.efld_opt(_we,'editable=%1' [$(EDIT_VAR.TN='N')],,'FIELD');
      PORSLO.efld_opt(_we,'enable=%1' [$(EDIT_VAR.TN='N')],,'TYPE');
      PORSLO.efld_opt(_we,'editable=%1' [$(PORSLO.FIELD<>_customField)],,'TYPE');
      PORSLO.efld_opt(_we,'enable=%1' [$(EDIT_VAR.TN='N')],,'FORMULA');
      PORSLO.efld_opt(_we,'editable=%1' [$(PORSLO.FIELD<>_customField)],,'FORMULA');
      PORSLO.efld_opt(_we,'editable=%1' [$(PORSLO.FIELD=_customField)],,'GLOBAL')
   ?};
   {? _we='RED' | _we='ULW'
   || PORSLO.efld_opt(_we,'mark=%1' [$(PORSLO.FIELD=_customField)],,'CODE')
   ?};
   {? _we='RED'
   || PORSLO.efld_opt(_we,'mark=%1' [$(PORSLO.FIELD<>_customField)],,'TYPE')
   ?}
?};
1


:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
:: Formuły zwracające dane dla słowników portalowych, które są zasilane własnymi metodami API
:: (czyli bez słowników bazujących na uniwersalnych listach wartości)
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

\typy_adresow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Zwraca tablicę z typami adresów
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:=tab_tmp(2,
   'KOD','STRING[8]','Kod',
   'NAZWA','STRING[50]','Nazwa'
);
_kod:=obj_new(4); _kod[1]:='C'; _kod[2]:='S'; _kod[3]:='K'; _kod[4]:='I';
{! _licz:=1..obj_len(_kod)
|! _TAB.KOD:=_kod[_licz];
   _TAB.NAZWA:=exec('rodzaj','osoba',_kod[_licz]);
   _TAB.add()
!};
_TAB


\uzup_umowy_if
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Formuła uzupełniająca słownik przechowujący symbole i nazwy IF.
::   WE: _a [REFERENCE] - wskazanie na słownik PORSLO
::   WY: 1/0 - operacja powiodła się / nie powiodła się
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_porslo:={? var_pres('_a')=type_of(null()) & _a || _a || return(_result) ?};
:: wyszukanie typu IF
_slo_typ:=exec('FindInSet','#table','SLO_TYP','SYMBOL','PPK_IF','PPK_IF',,1,,null);
_firma:=exec('firma4porsloit','portal_slowniki',_porslo);

ADRES.cntx_psh();
ADRES.index('ADRES');
ADRES.prefix(_slo_typ);
{? _loop:=ADRES.first()
|| {!
   |? _loop
   |! _result+=(exec('porsloit_add','portal_slowniki',_porslo,_firma,ADRES.SYMBOL,ADRES.NAZWA)<>null);
      _loop:=ADRES.next()
   !}
?};
ADRES.cntx_pop();
_result


\adres_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Wyzwalacz "Dołącz - po" dla tabeli ADRES.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1 | ~exec('lic','#b_domain','POR') || return() ?};
_typIF:=exec('FindInSet','#table','SLO_TYP','SYMBOL','PPK_IF','PPK_IF',,1,,null);
{? ADRES.TYP<>_typIF || return() ?};

exec('porsloit_oper','portal_slowniki','add',ADRES.SYMBOL,ADRES.NAZWA,,,'UmowyZIF');
~~


\adres_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli ADRES.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1 | ~exec('lic','#b_domain','POR') || return() ?};

SLO_TYP.cntx_psh();
SLO_TYP.prefix();
_typ:=ADRES.TYP().SYMBOL;
SLO_TYP.cntx_pop();

{? _typ='PPK_IF'
|| _symbol_old:=bfld('SYMBOL');
   _nazwa_old:=bfld('NAZWA');
   {? _symbol_old<>ADRES.SYMBOL | _nazwa_old<>ADRES.NAZWA
   || exec('porsloit_oper','portal_slowniki','put',_symbol_old,_nazwa_old,ADRES.SYMBOL,ADRES.NAZWA,'UmowyZIF')
   ?}

|? _typ='SZKOLA' & bfld('NAZWA')<>ADRES.NAZWA
|| exec('add','portaloa','adres_puta2os_szkol',ADRES.uidref())
?};
~~


\adres_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Wyzwalacz "Usuń - przed" dla tabeli ADRES.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
{? exec('lic','#b_domain','POR')
|| _typIF:=exec('FindInSet','#table','SLO_TYP','SYMBOL','PPK_IF','PPK_IF',,1,,null);
   {? ADRES.TYP=_typIF
   || _result:=exec('porsloit_oper','portal_slowniki','del',ADRES.SYMBOL,ADRES.NAZWA,,,'UmowyZIF')
   ?}
?};
_result


\porsloit_oper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Podejmuje odpowiednie działanie na tabeli PORSLOIT w zależności od wywoływanej operacji na danych przekazywanej
::       do procedury tabeli.
::   WE: _a  [STRING] - nazwa operacji (add/put/del)
::       _b  [STRING] - symbol pochodzący z tabeli, której dotyczy operacja (stary symbol dla operacji 'put')
::      [_c] [STRING] - nazwa pochodząca z tabeli, której dotyczy operacja (stara nazwa dla operacji 'put')
::      [_d] [STRING] - nowy symbol pochodzący z tabeli, której dotyczy operacja (dla operacji 'put')
::      [_e] [STRING] - nowa nazwa pochodząca z tabeli, której dotyczy operacja (dla operacji 'put')
::       _f  [STRING] - kod dynamicznej listy wartości
::      [_g] [STRING] - poprzednia wartość RowRightsName (opcjonalnie)
::      [_h] [STRING] - nowa wartość RowRightsName (opcjonalnie)
::   WY: 1 - powodzenie operacji
::       0 - operacja nie powiodła się
::----------------------------------------------------------------------------------------------------------------------
  _operacja:={? var_pres('_a')=type_of('') & _a<>'' || _a || return(0) ?};
    _symbol:={? var_pres('_b')=type_of('') & _b<>'' || _b || return(0) ?};
     _nazwa:={? var_pres('_c')=type_of('') & _c<>'' || _c || '' ?};
_symbol_new:={? var_pres('_d')=type_of('') & _d<>'' || _d || '' ?};
 _nazwa_new:={? var_pres('_e')=type_of('') & _e<>'' || _e || '' ?};
      _code:={? var_pres('_f')=type_of('') & _f<>'' || _f || return(0) ?};
_rrname_old:={? var_pres('_g')=type_of('') || _g || '' ?};
_rrname_new:={? var_pres('_h')=type_of('') || _h || '' ?};

PORSLO.cntx_psh();
PORSLO.index('FIELD');
PORSLO.prefix(null(),exec('customField','portal_slowniki'),'',_code,);
_porslo:={? PORSLO.first() || PORSLO.ref() || null() ?};
PORSLO.cntx_pop();
_firma:=exec('firma4porsloit','portal_slowniki',_porslo);

{? _porslo=null() || return(0) ?};
{? _operacja='add'
|| exec('porsloit_add','portal_slowniki',_porslo,_firma,_symbol,_nazwa,_rrname_old)<>null()
|? _operacja='put'
|| exec('porsloit_put','portal_slowniki',_porslo,_firma,_symbol,_nazwa,_symbol_new,_nazwa_new,
                                         _rrname_old,_rrname_new)<>null()
|? _operacja='del'
|| exec('porsloit_del','portal_slowniki',_porslo,_firma,_symbol,_nazwa)
|| return(0)
?}


\uzup_waluty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Formuła uzupełniająca słownik przechowujący symbole i nazwy walut.
::   WE: _a  [REFERENCE] - wskazanie na słownik PORSLO
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_porslo:={? var_pres('_a')=type_of(null()) & _a || _a || return() ?};
_firma:=exec('firma4porsloit','portal_slowniki',_porslo);

SLU.cntx_psh();
SLU.index('NAZ');
SLU.prefix('WALUTY');
_slu:={? SLU.first() || SLU.ref() || null() ?};
SLU.cntx_pop();
SLO.cntx_psh();
SLO.index('SL');
SLO.prefix(_slu);
{? _loop:=SLO.first()
|| {!
   |? _loop
   |! exec('porsloit_add','portal_slowniki',_porslo,_firma,SLO.KOD,SLO.TR);
      _loop:=SLO.next()
   !}
?};
SLO.cntx_pop();
~~


\uzup_rem_kat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła uzupełniająca słownik wykorzystywancyh we wnioskach administracyjnych na podstawie kategorii zasobu.
::   WE: _a  [REFERENCE] - wskazanie na słownik PORSLO
::       _b REM_KAT.ref() - kategoria zasobu remonotowego
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_porslo:={? var_pres('_a')=type_of(null()) & _a || _a || return() ?};
_kat:={? var_pres('_b')=type_of(null()) & _b || _b || return() ?};

_firma:=exec('firma4porsloit','portal_slowniki',_porslo);

REM_ZAS.cntx_psh();
REM_ZAS.index('KAT');
REM_ZAS.prefix(_kat,'T',);
{? REM_ZAS.first()
|| {!
   |? exec('porsloit_add','portal_slowniki',_porslo,_firma,REM_ZAS.SYMBOL,REM_ZAS.NAZWA);
      REM_ZAS.next()
   !}
?};
REM_ZAS.cntx_pop();
~~


\porslo_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła usuwająca listę elementów PORSLOIT słownika portalowego PORSLO.
::       Jeżeli słownik nie ma dodatkowych powiązań to też jest usuwany
::   WE: _a - PORLSO.ref() - ref słownika
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_res:=1;
PORSLO.cntx_psh();
PORSLO.clear();
{? _ref<>null() & PORSLO.seek(_ref)
||
:: Usuwam elementy listy
   PORSLOIT.cntx_psh();
   PORSLOIT.index('SLOVAL');
   PORSLOIT.prefix(_ref);
   {? PORSLOIT.first()
   || {!
      |?
         _res:=PORSLOIT.del(,1);
         _res>1
      !}
   ?};
   PORSLOIT.cntx_pop();
:: Sprawdzam czy słownik nie ma innych powiązań i ewentualnie usuwam go
   {? _res>0 & exec('testlink','#record',PORSLO)=0
   || PORSLO.del(,1)
   ?}
?};
PORSLO.cntx_pop();
_res


\porslo_fld_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Przed redakcją pól tabeli PORSLO
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_result:=~~;

{? _afld='ACR_TAB' | 5+_afld='FTRIG'
|| _result:=1

|? _afld='GLOBAL'
|| _result:=1;
::   sprawdzamy, czy mamy podpięte elementy listy
   {? PORSLO.GLOBAL='T'
   || PORSLOIT.cntx_psh();
      PORSLOIT.index('FIRMA');
      PORSLOIT.prefix(null(),PORSLO.ref());
      _result:=~PORSLOIT.first();
      PORSLOIT.cntx_pop()
   || _sql:=exec('sql_local_porsloit','portal_slowniki');
      _result:=~sql(_sql,PORSLO.CODE).first()
   ?}
?};

_result


\porslo_fld_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: F3 dla pól tabeli PORSLO
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_result:=~~;

{? _afld='ACR_TAB'
|| _result:=exec('f3_synctab','synchro')

|? 5+_afld='FTRIG'
|| _result:=fld();
   _exec:=exec('parse_exec','#file',fld());
   _fml:=exec('select_formula','#file',,_exec.FILE);
   {? _fml<>''
   || _fml:=gsub(_fml,'.m.fml','.fml');
      _split:=spli_str(_fml,'\\');
      {? obj_len(_split)>1
      || _result:='params_exec(\''+_split[1]+'\',\''+_split[2]-4+'\',_a)'
      ?}
   ?}

?};

_result


\porslo_fld_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Po redakcji pól tabeli PORSLO
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_result:=~~;

{? _afld='ACR_TAB'
|| {? fld()<>''
   || _tab:=exec('lista_tabel','synchro');
      {? ~_tab.find_key(fld())
      || FUN.info('Podano nieprawidłowy akronim tabeli.'@);
         _result:=0
      || fld():=_tab.ACR
      ?}
   ?}

|? 5+_afld='FTRIG'
|| _result:=1

?};

_result


\porsloit_fld_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Przed redakcją pól tabeli PORSLOIT
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_result:=~~;

{? _afld='RRNAME'
|| _result:=1
|? _afld='VALUE'
|| _par:=params_get();
   _result:={? var_pres('_par')>0 & var_pres('uidref',_par)>0
            || exec('porsloit_isSynced','portal_slowniki',_par.uidref,0).ok=0
            || 1
            ?}
?};

_result


\porsloit_fld_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: F3 dla pól tabeli PORSLOIT
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_result:=~~;

{? _afld='RRNAME'
|| _result:=exec('portalr_select','portal_engine','SLO',PORSLOIT.RRNAME)

?};

_result


\porsloit_fld_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Po redakcji pól tabeli PORSLOIT
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_result:=~~;

{? _afld='RRNAME'
|| {? fld()<>''
   || PORTALRR.cntx_psh();
      PORTALRR.index('NAME');
      PORTALRR.prefix(fld(),);
      {? ~PORTALRR.first()
      || FUN.info('Błędna nazwa uprawnienia.'@);
         _result:=0
      ?};
      PORTALRR.cntx_pop()
   ?}

?};

_result


\ustaw_trigger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Ustawienie wyzwalaczy dla uniwersalnych list wartości (elementy słowników portalowych)
::----------------------------------------------------------------------------------------------------------------------
{? exec('lic_or','#b_domain','POR','SEO')
|| exec('oCustomGlobal','portal_slowniki');
:: ustawienie zmiennej _firma w zależności od konfiguracji synchronizacji portalu
   _por_conf:=exec('por_conf_firma','portal_lib',exec('ref_firma','ustawienia'));
   {? ~_por_conf.ok || return() ?};

   PORSLO.cntx_psh();
   PORSLO.index('SYSTEM');
   PORSLO.prefix('N',_por_conf.firma,exec('customField','portal_slowniki'));
   {? PORSLO.first()
   || {!
      |? {? PORSLO.ACR_TAB<>''
         || ($'%1.trig_a(\'add\',"%2",\'porslo_aa\')'[PORSLO.ACR_TAB,PORSLO.FTRIG_AA])();
            ($'%1.trig_a(\'put\',"%2",\'porslo_pa\')'[PORSLO.ACR_TAB,PORSLO.FTRIG_PA])();
            ($'%1.trig_b(\'del\',"%2",\'porslo_db\')'[PORSLO.ACR_TAB,PORSLO.FTRIG_DB])()
         ?};
         PORSLO.next()
      !}
   ?};
   PORSLO.cntx_pop()
?};
~~


\custom_resources
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [22.26]
:: OPIS: Zwraca obiekt z wartościami dla słowników niestandardowych (custom).
::       Sposoby definiowania nowego wpisu:
::       -> metoda add_entry:
::          1. Nazwa słownika
::          2. Opis słownika
::          3. Typ słownika [opcjonalny] (określone w \typ_listy_tab/portal_slowniki
::          4. Formuła na uzupełnienie tabeli PORSLOIT (elementy słownika) lub brak [opcjonalny]
::       -> metoda add_value - wykorzystywana, jeżeli pominięto 3 argument w add_entry (formułę na uzupełnienie):
::          1. Wartość elementu słownika
::          2. Opis elementu słownika [opcjonalny]
::   WE:
::   WY: Obiekt z wartościami dla słowników niestandardowych (custom)
::----------------------------------------------------------------------------------------------------------------------
_resources:=exec('custom_resources_obj','portal_slowniki');

::- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
::                                                 Portal HR
::- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

:: ---Zmiana rachunku ROR
_resources.add_entry(
   'RodzajSposobuWypłaty',
   'Określa sposób przekazania pieniędzy na wybrane konto [procent / kwota]'@,,,'T'
)
.add_value('Kwota','Kwota wynagrodzenia.')
.add_value('Procent','Procent wynagrodzenia.');

:: ---Wniosek o pracę w godzinach nadliczbowych / Polecenie pracy w godzinach nadliczbowych
_resources.add_entry(
   'WystapienieNadgodzin',
   'Określa sposób w jaki zostaną przepracowane godziny nadliczbowe w zależności od dnia'@,,,'T'
)
.add_value('Od - Do','')
.add_value('Przed rozpoczęciem pracy','')
.add_value('Po zakończeniu pracy','');

:: ---Oświadczenie o umowach podpisanych z IF
_resources.add_entry(
   'UmowyZIF',
   'Określa dostępne nazwy IF, które użytkownik portalu może wybrać na oświadczeniu o umowach podpisanych z IF'@,
   '',
   "exec('uzup_umowy_if','portal_slowniki',_a)",
   'T'
);

:: ---Wniosek o zaliczkę
:: Waluty
_resources.add_entry(
   'Waluty',
   'Określa dostępne waluty, które użytkownik portalu może wybrać na wniosku o zaliczkę'@,
   '',
   "exec('uzup_waluty','portal_slowniki',_a)",
   'T'
);
:: Rodzaj realizacji zaliczki
_resources.add_entry(
   'RodzajRealizacjiZaliczki',
   'Określa rodzaj realizacji zaliczki [poprzez kasę / poprzez przelew]'@,,,'T'
)
.add_value('Kasa','Wypłacana gotówka')
.add_value('Przelew','Zlecany przelew na konto');

:: ---Wniosek o odbiór nadgodzin
:: Typ odbioru
_resources.add_entry(
   'TypOdbioru',
   'Określa typ odbioru nadgodzin'@,,,'T'
)
.add_value('Odbiór godzin','P')
.add_value('Za święto','S')
.add_value('Za dzień wolny','W');
:: Odbiór nadgodzin
_resources.add_entry(
   'OdbiorNadgodzin',
   'Określa porę odbioru nadgodzin'@,,,'T'
)
.add_value('Na końcu dnia pracy','K')
.add_value('Na początku dnia pracy','P');
:: Okresy rozliczeniowe
_resources.add_entry(
   'OkresyRozliczeniowe',
   'Okresy rozliczeniowe otwarte do rozliczenia'@,
   '',
   "exec('uzup_okresy_rozliczeniowe','portal_slowniki',_a)",
   'N'
);
:: Wybór nadgodzin
_resources.add_entry(
   'WyborNadgodzin',
   'Określa sposób wyboru nadgodzin'@,,,'T'
)
.add_value('Automatyczny','')
.add_value('Ręczny','');

:: ---Polecenie odbioru nadgodzin
:: Typ odbioru
_resources.add_entry(
   'TypOdbioruPolecenie',
   'Określa typ odbioru nadgodzin na wniosku polecenia nadgodzin'@,,,'T'
)
.add_value('Odbiór godzin (Firma)','F')
.add_value('Odbiór godzin (Pracownik)','P')
.add_value('Za święto','S')
.add_value('Za dzień wolny','W');

:: ---Wniosek o pracę poza siedzibą firmy
:: Typy pracy poza siedzibą firmy
::_resources.add_entry(
::   'TypyPracyPozaSiedzibaFirmy',
::   'Określa dostępne typy pracy poza siedzibą firmy',
::   '',
::   "exec('uzup_typy_ppsf','portal_slowniki',_a)"
::);

:: ---Oświadczenie dot. opieki nad dzieckiem do lat 14
_resources.add_entry(
   'OpiekaRodzajLimitu',
   'Określa rodzaj limitu na jaki decyduje się składający oświadczenie dot. opieki (art.188 K.p.) w danym roku'@,,,'T'
)
.add_value('Dni robocze','D')
.add_value('Godziny robocze','G');

::- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
::                                                 Paperless HR
::- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
{? exec('lic','#b_domain','PEP')
||
:: ---Wydanie zaświadczenia
   _resources.add_entry(
      'ZaswiadczenieNazwa',
      'Określa dostępne zaświadczenia, na które użytkownik portalu może złożyć zapotrzebowanie'@,
      '',
      "exec('uzup_zaswiadczenia','portal_slowniki',_a)",
      'T'
   )
?};

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
::                                                  Virtual Dictionary
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
:: ---Słownik etatów
_owh:=exec('chr_workinghours_obj','portal_slowniki');
_resources.add_entry(
   _owh.CODE
   ,'Wymiar etatu'
   ,_owh.TYPE
   ,"exec('chr_workinghours_init','portal_slowniki',_a)"
);
obj_del(_owh);
&_owh;

_resources


\custom_resources_obj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [22.26]
:: OPIS: Tworzy obiekt do obsługi wartości dla słowników niestandardowych (custom).
::   WE:
::   WY: Utworzony obiekt.
::----------------------------------------------------------------------------------------------------------------------
exec('list_decl','#list');

_resources:=obj_new('entries','add_entry');

_resources.entries:=obj_new(@.CLASS.List);
_resources.add_entry:=
   "_entry:=obj_new(
::     Nazwa słownika dla PORSLO
       'name',
::     Opis słownika dla PORSLO
       'desc',
::     Typ słownika
       'type',
::     Formuła przepisująca zawartość zasobów do systemowych elementów słownika PORSLOIT
       'init_form',
::     Czy słownik globalny?
       'global',
::     Tabela tymczasowa z wartościami oraz opisami elementów słownika
       'VALUES',
::     Formuła na dodanie wartości elementu słownika do zasobów
       'add_value',
::     Formuła sprawdzająca, czy element o podanym identyfikatorze znajduje się w zasobach
       'contains'
    );
    _entry.name:={? var_pres('_a')=type_of('') || _a || '' ?};
    _entry.desc:={? var_pres('_b')=type_of('') || _b || '' ?};
    _entry.type:={? var_pres('_c')=type_of('') || _c || '' ?};
    _entry.init_form:={? var_pres('_d')=type_of(\"\") || _d || ~~ ?};
    _entry.global:={? var_pres('_e')=type_of('') || _e || 'N' ?};
    _entry.VALUES:=tab_tmp(1,
       'LP'     ,'INTEGER'                                   ,'LP',
       'VALUE'  ,'STRING[%1]'[$MS.fld_len(PORSLOIT,'VALUE')] ,'VALUE',
       'DESC'   ,'STRING[%1]'[$MS.fld_len(PORSLOIT,'DESC')]  ,'DESC'
    );
    _entry.add_value:=
       \"_value:={? var_pres('_a')=type_of('') & _a<>'' || _a || return(.entries.get()) ?};
         _desc:={? var_pres('_b')=type_of('') || _b || return(.entries.get()) ?};
         .VALUES.cntx_psh();
         _lp:={? .VALUES.last() || .VALUES.LP+1 || 1 ?};
         .VALUES.cntx_pop();
         {? +_value<=MS.fld_len(PORSLOIT,'VALUE') & +_desc<=MS.fld_len(PORSLOIT,'DESC')
         || .VALUES.blank(1);
            .VALUES.LP:=_lp;
            .VALUES.VALUE:=_value;
            .VALUES.DESC:=_desc;
            .VALUES.add(1)
         ?};
         return(.)
       \";
    _entry.contains:=
      \"_result:=0;
        _value:={? var_pres('_a')=type_of('') & _a<>'' || _a || return(_result) ?};
        .VALUES.cntx_psh();
        _result:=(.VALUES.find_tab(,'VALUE',,'=',_value));
        .VALUES.cntx_pop();
        _result
      \";
    .entries.add(_entry);
    .entries.get()
   ";

_resources


\uzup_okresy_rozliczeniowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [22.26]
:: OPIS: Formuła uzupełniająca słownik przechowujący okresy rozliczeniowe.
::   WE: _a  [REFERENCE] - wskazanie na słownik PORSLO
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_porslo:={? var_pres('_a')=type_of(null()) & _a || _a || return() ?};

_firma:=exec('firma4porsloit','portal_slowniki',_porslo);

A_OKR.cntx_psh();
A_OKRN.cntx_psh();
A_OKRN.prefix();
A_OKR.index('A_OKRZ');
A_OKR.prefix('O',);
{? _loop:=A_OKR.first()
|| {!
   |? _loop
   |! _value:='%1 - %2 %3'[$A_OKR.OD,$A_OKR.DO,A_OKR.NAZ().NAZ];
      exec('porsloit_add','portal_slowniki',_porslo,_firma,_value);
      _loop:=A_OKR.next()
   !}
?};
A_OKRN.cntx_pop();
A_OKR.cntx_pop();
~~


\uzup_typy_ppsf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [22.26]
:: OPIS: Formuła uzupełniająca słownik przechowujący symbole i nazwy walut.
::   WE: _a  [REFERENCE] - wskazanie na słownik PORSLO
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::_porslo:={? var_pres('_a')=type_of(null()) & _a || _a || return() ?};
::
::_firma:=exec('ref_firma','ustawienia');
::
::PPSFT.cntx_psh();
::PPSFT.index('NAZWA');
::PPSFT.prefix(_firma,);
::SLO_KOD.cntx_psh();
::SLO_KOD.prefix();
::{? _loop:=PPSFT.first()
::|| {!
::   |? _loop
::   |! {? PPSFT.SKL_WN='T'
::      || _value:='%1 - %2'[PPSFT.SLO_KOD().NAZWA,PPSFT.OPIS];
::         {? +_value<=MS.fld_len('PORSLOIT','VALUE')
::         || exec('porsloit_add','portal_slowniki',_porslo,_value)
::         ?}
::      ?};
::      _loop:=PPSFT.next()
::   !}
::?};
::SLO_KOD.cntx_pop();
::PPSFT.cntx_pop();
~~


\ks_put_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KW [23.25]
:: OPIS: Trigger modyfikujący opis konta analitycznego.
::----------------------------------------------------------------------------------------------------------------------
BUD.cntx_psh(); BUD.index('KS'); BUD.prefix(KS.ref());
{? ~BUD.last()
|| ROK_F.cntx_psh(); ROK_F.index('KOD'); ROK_F.prefix();
   AN.cntx_psh(); AN.use('koan__'+KS.ROK().KOD); AN.index('KS1'); AN.prefix(KS.ref());
   {? AN.first()
   || {! |?
         AN.OPIS:=KS.NAZ;
         AN.put();
         AN.next()
      !}
   ?};
   AN.cntx_pop(); ROK_F.cntx_pop()
?};
BUD.cntx_pop();
~~


\exist_in_custom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [22.26]
:: OPIS: Formuła sprawdza, czy wartość przekazana w argumencie _b jest częścią słownika niestandardowego, którego kod
::       został przekazany w argumencie _a.
::   WE: _a  [STRING] - kod słownika (PORSLO.CODE)
::       _b  [STRING] - wartość elementu w słowniku (PORSLOIT.VALUE)
::      [_c] [STRING] - typ słownika (PORSLO.TYPE, domyślnie '')
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_porsloName:={? var_pres('_a')=type_of('') & _a<>'' || _a || return(_result) ?};
 _itemValue:={? var_pres('_b')=type_of('') & _b<>'' || _b || return(_result) ?};
_porsloType:={? var_pres('_c')=type_of('') & _c<>'' || _c || ''              ?};

PORSLO.cntx_psh();
PORSLO.index('FIELD');
PORSLO.prefix(null(),exec('customField','portal_slowniki'),_porsloType,_porsloName,);
_porslo:={? PORSLO.first() || PORSLO.ref() || null() ?};
_firma:=exec('firma4porsloit','portal_slowniki',_porslo);
PORSLO.cntx_pop();

PORSLOIT.cntx_psh();
PORSLOIT.index('SLOVAL');
PORSLOIT.prefix(_porslo,_firma,_itemValue,);
_result:=PORSLOIT.first();
PORSLOIT.cntx_pop();

_result


\uzup_zaswiadczenia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Formuła uzupełniająca słownik przechowujący symbole i nazwy typów załączników dla zapotrzebowań na
::       zaświadczenia.
::   WE: _a  [REFERENCE] - wskazanie na słownik PORSLO
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_porslo:={? var_pres('_a')=type_of(null()) & _a || _a || return() ?};

_nazwa:=exec('_wydanie_zasw','portal_walidacja').name;
_obieg:=exec('FindInSet','#table','TYPOBIEG','UNIK','Obieg wniosków',,,1,,null);
_etyp:=exec('FindInSet','#table','ETYPY','UNIK_WP',_nazwa,_obieg,,1,'P',null);

_firma:=exec('firma4porsloit','portal_slowniki',_porslo);

ETYPYATT.cntx_psh();
ETYPYATT.index('NAZWA');
ETYPYATT.prefix(_etyp);
SLO_NAZ.cntx_psh();
SLO_NAZ.prefix();
{? _loop:=ETYPYATT.first()
|| {!
   |? _loop
   |! exec('porsloit_add','portal_slowniki',_porslo,_firma,ETYPYATT.SLO_NAZ().NAZWA);
      _loop:=ETYPYATT.next()
   !}
?};
SLO_NAZ.cntx_pop();
ETYPYATT.cntx_pop();
~~


\bl_tat_idwp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Wartość poczatkowa TAT.ID_WP
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.W_PORTAL<>''
|| ETYPY.ID_WP+ETYP_ATR.ID_WP
|| ''
?}


\porslo_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Akcja okienko przed tabeli PORSLO
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('PorsloFld')=type_of('')
|| PORSLO.index('CUSTOM');
:: zmiana obsługi - zawsze w wyborze słownika prefiksujemy się na rekord z PORSLO.FIRMA=null
:: podmiana następuje podczas wysyłania danych
   PORSLO.prefix(null(),PorsloFld,)
?};
{? var_pres('PorSloW')=type_of(1)
|| PORSLO.index('FIELD');
   PORSLO.prefix(null())
?};
~~


\porslo_win_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Zwraca tymczasowe okno PORSLO
::----------------------------------------------------------------------------------------------------------------------
_win:=PORSLO.mk_sel('Słowniki portalowe'@,'P',0,'porsloqwer',1,1,21,0,'U','T',0,0,0,'','','on','lumen');
PORSLO.win_fld(_win,PORSLO,'FIELD',,,'17,17,17',0,0,'Nazwa pola'@@,0,'Lista wartości - nazwa pola'@,,);
PORSLO.win_fld(_win,PORSLO,'TYPE',,,'17,17,17',0,0,'Typ listy'@@,0,'Typ listy wartości'@,,);
PORSLO.win_fld(_win,PORSLO,'CODE',,,25,0,0,'Kod listy'@@,0,'Kod dynamicznej listy wartości'@,,);
PORSLO.win_fld(_win,PORSLO,'OPIS',,,'23,23,23',0,0,'',0,'Opis słownika'@,,);
PORSLO.win_fld(_win,PORSLO,'SYSTEM',,,'3,7,7',0,0,'',0,'Element systemowy [T/N]'@,2,,
   "mb_exec('''T''')","mb_exec('''N''')","");
PORSLO.win_act(_win,1,'Formuła','Dołącz'@@,'','',
   "exec('porslo_dolacz_b','portal_slowniki')","",1,0,"","",'D',0,'mobile=1,target=window,icon=add');
PORSLO.win_act(_win,0,'Formuła','Dołącz'@@,'','',
   "exec('porslo_dolacz_b','portal_slowniki')","",0,0,"","",'D',0,'mobile=1,target=window,icon=add');
PORSLO.win_act(_win,0,'Formuła','Popraw'@@,'','',
   "exec('porslo_popraw_b','portal_slowniki')","",0,0,"","",'P',0,'mobile=1,target=record,icon=edit');
PORSLO.win_act(_win,0,'Formuła','Usuń'@@,'','',
   "exec('porslo_usun_b','portal_slowniki')","",0,1,"exec('porslo_usun_bg','portal_slowniki')",
   "exec('porslo_usun_ag','portal_slowniki')",'U',0,'mobile=1,target=record,icon=delete');
PORSLO.win_act(_win,0,'Formuła','Elementy listy'@@,'','Wyświetla listę elementów listy dynamicznej'@,
   "exec('porslo_elementy_b','portal_slowniki')","",0,0,"","",'E',0,'mobile=1,target=record');
PORSLO.win_act(_win,0,'Szukaj','','','',"","",0,0,"","",'',0,'mobile=1,target=window');
PORSLO.win_act(_win,0,'Kolejność','','','',"","",0,0,"","",'',0,'mobile=1,target=window');
PORSLO.win_act(_win,0,'Rekord','','','',
   "exec('porslo_bd','portal_slowniki',_a)","",0,0,"","",'',0,'mobile=1,target=window');
PORSLO.win_act(_win,0,'Okienko',,,,"
:: zmiana obsługi - zawsze w wyborze słownika prefiksujemy się na rekord z PORSLO.FIRMA=null
:: podmiana następuje podczas wysyłania danych
   PORSLO.index('FIELD');
   PORSLO.prefix(null())
");
btn1:=PORSLO.win_btn(_win,'text="%1",btn_label_align=center,panel=right,align=begin'['Dołącz'@@],'menu:D',,,0,,,'');
btn2:=PORSLO.win_btn(_win,'text="%1",btn_label_align=center,panel=right,align=begin'['Popraw'@@],'menu:P',
   ,,0,,,'noempty');
btn3:=PORSLO.win_btn(_win,'text="%1",btn_label_align=center,panel=right,align=begin'['Usuń'@@],'menu:U',
   ,,0,,,'noempty');
btn4:=PORSLO.win_btn(_win,'text="%1",btn_label_align=center,panel=right,align=begin'['Elementy listy'@@],'menu:E',
   ,,0,,,'noempty');
PORSLO.btn_sopt(_win,btn4,'tooltip="%1"'['Wyświetla listę elementów listy dynamicznej'@]);
_win


\oCustomGlobal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Tworzy obiekt nazwany do obsługi typów globalnych wniosków
::   WE: _a [NUMBER] - tryb develop?
::   WY: Obiekt
:: ~OST: INEXPORT
::----------------------------------------------------------------------------------------------------------------------

::UWAGA: _fld, i _mth to formulki pomocnicze, zeby wygodniej tworzyc tablice i komentowac poszczegolne jej elementy
_fld:="31+form(_a)";
_mth:="31+form(_a)";
::tworze tablice nazwana do przechowywania zmiennych
_cg:=obj_new(
                _fld('file_s'   ,'Plik z listą globalnych typów wniosków systemowych')
               ,_fld('file_u'   ,'Plik z listą globalnych typów wniosków użytkownika')
               ,_fld('TAB'      ,'Tabela przechowująca definicję typów globalnych')
               ,_fld('ident'    ,'Identyfikator tabeli globalnej na serwerze')

::             metody PRYWATNE / TECHNICZNE
               ,_mth('init'     ,'Inicjuje obiekt')
               ,_mth('initTab'  ,'Zasila tabelę typów globalnych')
               ,_mth('noTab'    ,'Sprawdza czy brakuje tabeli typów globalnych')

::             metody PUBLICZNE
               ,_mth('select'   ,'Wyświetla okno z typami globalnymi')
               ,_mth('exists'   ,'Sprawdza czy istnieje taki typ globalny')
               ,_mth('isEmpty'  ,'Sprawdza czy tabela typów globalnych jest pusta')
               ,_mth('import'   ,'Importuje typy globalne z pliku')
             );
::usuwamy zbedne zmienne
&_mth; &_fld;

:: inicjowanie pól i metod
_cg.init:="
   .file_s:='portal_lookup_global_type_system.dfg';
   .file_u:='portal_lookup_global_type_user.dfg';
   .ident:='portal_lookup_global_type';
   .initTab()
";

_cg.noTab:="
   _STLIST:=st_list(.ident,0);
   {? type_of(.TAB)=type_of(~~)
   || .TAB:={? _STLIST.first() || st_open(_STLIST.IDENT) || ~~ ?}
   ?};
   type_of(.TAB)=type_of(~~)
";

:: inicjowanie tabeli tymczasowej
_cg.initTab:=$("
:: lock zakładany jest tylko jeżeli nie mamy jeszcze tabeli na serwerze
:: (potrzebny do skolejkowania procesu zakładania)
   {? .noTab()
::    dla pewności sprawdzamy czy po locku nadal nie mamy tabeli
   || {? PORSLO.lock(1,,1) & .noTab()
      || .TAB:=st_create(1,'CODE','STRING[100]','"+'Kod listy'@+"','SYSTEM','STRING[1]','"+'Zapis systemowy'@+"');
         .TAB.st_id_make(PORSLO.name(0),.ident,3600);
         .import()
      ?};
      PORSLO.unlock()
   ?};
:: okno wertowania - obecnie wykorzystywane tylko do podglądu "starych" wartości
   {? type_of(.TAB)=118
   || _ws:=.TAB.mk_sel('"+'Globalne słowniki portalowe'@+"',,,,,,,,'U');
      .TAB.win_fld(_ws,,'CODE',,,30,,,'"+'Kod listy'@+"',,'"+'Kod listy'@+"');
      .TAB.win_fld(_ws,,'SYSTEM',,,3,,,'"+'System'@+"',,'"+'Element systemowy [T/N]'@+"',2,,\"'T'\",\"'N'\");
      .TAB.win_sel(_ws)
   ?}
");

:: metoda do wyświetlenia tabeli z typami globalnymi
_cg.select:="
   .TAB.select()
";

:: metoda zwraca informację, czy istnieje wskazany typ globalny
_cg.exists:="
   _code:={? var_pres('_a')=type_of('') & +_a || _a || return(0) ?};
   .TAB.cntx_psh();
   .TAB.prefix(_code,);
   _result:=.TAB.first();
   .TAB.cntx_pop();
   _result
";

:: metoda zwraca informację, czy tabela typów globalnych jest pusta
_cg.isEmpty:="
   .TAB.size()=0
";

_cg.import:="
:: lista globalnych słowników systemowych
   _file_s:=fopen(.file_s,'ur',1);
   {? _file_s
   || .TAB.cntx_psh();
      .TAB.prefix();
      {!
      |? (_line:=fread(_file_s))<>'\n'
      |! {? +form(_line)
         || .TAB.CODE:=_line;
            .TAB.SYSTEM:='T';
            .TAB.add()
         ?}
      !};
      .TAB.cntx_pop();
      fclose(_file_s)
   ?};
:: lista globalnych słowników użytkownika
   _file_u:=fopen(.file_u,'ur',1);
   {? _file_u
   || .TAB.cntx_psh();
      .TAB.prefix();
      {!
      |? (_line:=fread(_file_u))<>'\n'
      |! {? +form(_line)
         || .TAB.CODE:=_line;
            .TAB.SYSTEM:='N';
            .TAB.add()
         ?}
      !};
      .TAB.cntx_pop();
      fclose(_file_u)
   ?};
   ~~
";

_cg.init();
_cg


\sql_local_porsloit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Treść zapytania zwracającego informacje o tym czy istnieją elementy słownika w którejś z firm
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
"select * from PORSLOIT join PORSLO using(PORSLO.REFERENCE, PORSLOIT.PORSLO)
 where PORSLOIT.FIRMA is not null and PORSLO.CODE=':_a'"+''


\porsloit_del_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Usuwa wszystkie elementy listy dla wybranego słownika użytkownika
::   WE: _a [STRING]    - kod słownika użytkownika
::       _b [REFERENCE] - wskazanie na firmę
::   WY:
::----------------------------------------------------------------------------------------------------------------------
 _code:={? var_pres('_a')=type_of('')     || _a || return(0) ?};
_firma:={? var_pres('_b')=type_of(null()) || _b || return(0) ?};

PORSLO.cntx_psh();
PORSLO.index('FIELD');
PORSLO.prefix(_firma,exec('customField','portal_slowniki'),'',_code);
{? PORSLO.first()
|| exec('porsloit_delete4','portal_slowniki',PORSLO.ref())
?};
PORSLO.cntx_pop();
1


\porsloit_delete4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Kasuje rekordy tabeli PORSLOIT (wykonywane w transakcji!!!) dla wskaznego rekordu _ref
::   WE: _a [REFERENCE] - PORSLO.ref()
::   WY: >0 -wyczyszczone,
::      <=0 -niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};

_can_continue:=1;

:: powrot w przypadku zerwanej transakcji
{? do_state()=2 || return(-100) ?};

:: zalozenie transakcji
_mydo:=do_state()=0;
{? _mydo || do() ?};

PORSLOIT.cntx_psh();
PORSLOIT.index('SLOVAL');
PORSLOIT.prefix(_ref);
{? PORSLOIT.first()
|| {! |? PORSLOIT.del() !}
?};
_can_continue:=~PORSLOIT.first();
PORSLOIT.cntx_pop();

{? _can_continue>0
|| _result:=1
|| undo()
?};
{? _mydo || end() ?};
_result


\PORSLO_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Czy rekord PORSLO ma być wysyłany na portal HR.
::       Formuła wykorzystywana w warunku zapamiętywania zmian w mechanizmie wymiany danych.
::   WE: _a [STRING]    - akcja add/put/del
::       _b [STRING]    - symbol firmy
::       _c [REFERENCE] - wskazanie na firmę
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
PORSLO.FIRMA=null()


\PORSLOIT_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Czy rekord PORSLOIT ma być wysyłany na portal HR.
::       Formuła wykorzystywana w warunku zapamiętywania zmian w mechanizmie wymiany danych.
::   WE: _a [STRING]    - akcja put/del
::       _b [STRING]    - symbol firmy
::       _c [REFERENCE] - wskazanie na firmę
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_action:={? var_pres('_a')=type_of('_a')   || _a || return(_result) ?};
_symbol:={? var_pres('_b')=type_of('')     || _b || return(_result) ?};
 _firma:={? var_pres('_c')=type_of(null()) || _c || return(_result) ?};

{? _action='del'
|| return(1)
?};

_conf:=XINFO.POR_CONF;
exec('czytaj','#stalesys',,XINFO,'POR_CONF');
_conf==XINFO.POR_CONF;
{? _conf='J'
|| PORSLO.cntx_psh();
   PORSLOIT.PORSLO();
   _isCustom:=PORSLO.FIELD=exec('customField','portal_slowniki');
   _isGlobal:=PORSLO.GLOBAL='T';
   _ret:=((_isGlobal | ~_isCustom) & PORSLOIT.FIRMA=null()) | (~_isGlobal & PORSLOIT.FIRMA=_firma);
   PORSLO.cntx_pop();
   _ret
|| 1
?}


\firma4porsloit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [23.25]
:: OPIS: Zwraca informacje o firmie dla elementów słownika PORSLOIT
::   WE: _a [REFERENCE] - wskazanie na rekord PORSLO
::   WY: null/ref
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
_porslo:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};

PORSLO.cntx_psh();
PORSLO.prefix();
{? PORSLO.seek(_porslo) & PORSLO.GLOBAL<>'T'
|| _result:=exec('ref_firma','#firma')
?};
PORSLO.cntx_pop();
_result


\legenda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [23.25]
:: OPIS: Legenda w oknie słowników portalowych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','POR_SYNC_REC#01')


\chr_workinghours_obj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Formuła zwracająca tablicę elementów nazwanych (pola i "metody") przydatnych przy obsłudze
::       wirtualnego słownika (#VD) wymiarów etatu (PORSLOIT).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new('TYPE','CODE','value','desc','wyl','wym','lp');

_obj.TYPE:='#VD';
_obj.CODE:='chr_WorkingHours';

_obj.value:="
::   WE: _a [NUMBER] - Licznik.
::       _b [NUMBER] - Mianownik.
   {? _a=_b
   || _a:=_b:=1
   ?};
   '%1/%2'[form(_a,-3,0,'9.'),form(_b,-3,0,'9.')]
";

_obj.desc:="
::   WE: _a [NUMBER] - Licznik.
::       _b [NUMBER] - Mianownik.
   {? _a=_b
   || 'pełen etat'
   || exec('ulamek','#convert',_a,_b)+' etatu'
   ?}
";

_obj.wyl:="#(3+_a)";
_obj.wym:="#(_a+3)";

_obj.lp:="_a*999+_b";

_obj


\chr_workinghours_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Formuła wypełnia danymi wirtualny słownik (#VD) wymiarów etatu (PORSLOIT).
::   WE: _a [REFERENCE] - Wskazanie na rekord tabeli PORSLO (nagłówek słownika).
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) & _a
|| _porslo:=_a
|| return()
?};

_TAB:=sql('select distinct H.WYL,H.WYM from H order by H.WYL,H.WYM');
{? type_of(_TAB)=~~
|| return()
?};

{? _TAB.first()
|| _firma:=exec('firma4porsloit','portal_slowniki',_porslo);
   _owh:=exec('chr_workinghours_obj','portal_slowniki');
   {!
   |? exec('porsloit_add','portal_slowniki',_porslo,_firma,_owh.value(_TAB.WYL,_TAB.WYM),_owh.desc(_TAB.WYL,_TAB.WYM));
      _TAB.next()
   !}
?};
~~


\chr_workinghours_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Pielęgnacja wirtualnego słownika (#VD) wymiarów etatu (PORSLOIT).
::   WE: _a [NUMBER] - Licznik.
::       _b [NUMBER] - Mianownik.
::   WY: Status przetwarzania:
::       -2 - Nieprawidłowe parametry wywołania.
::       -1 - Dodanie rekordu nie powiodło się.
::        0 - Brak definicji słownika.
::        1 - Słownik nie wymagał aktualizacji.
::        2 - Słownik został zaktualizowany.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & 0<_a & _a<1000
|| _wyl:=_a
|| return(-2)
?};
{? var_pres('_b')=type_of(0) & 0<_b & _b<1000
|| _wym:=_b
|| return(-2)
?};

_owh:=exec('chr_workinghours_obj','portal_slowniki');

_ret:=0;
PORSLO.cntx_psh();
PORSLO.index('SYSTEM');
PORSLO.prefix('T',null(),exec('customField','portal_slowniki'),_owh.TYPE,_owh.CODE,);
{? PORSLO.first()
|| _firma:=exec('firma4porsloit','portal_slowniki',PORSLO.ref());
   _value:=_owh.value(_wyl,_wym);
   PORSLOIT.cntx_psh();
   PORSLOIT.index('SLOVAL');
   PORSLOIT.prefix(PORSLO.ref(),_firma,_value,);
   {? PORSLOIT.first()
   || _ret:=1
   || PORSLOIT.blank();
      PORSLOIT.FIRMA:=_firma;
      PORSLOIT.PORSLO:=PORSLO.ref();
      PORSLOIT.VALUE:=_value;
      PORSLOIT.DESC:=_owh.desc(_wyl,_wym);
      {? PORSLOIT.add()
      || _ret:=2
      || _ret:=-1
      ?}
   ?};
   PORSLOIT.cntx_pop()
?};
PORSLO.cntx_pop();
_ret

:Sign Version 2.0 jowisz:1045 2023/12/22 12:34:53 52240e11592ff1aabfd13f9e9748eb0b8008e870c6907969b705dac6e8e24885898be051f815500394139d1022f7921971a50b2010531fd26f3efe615a74a8808e72fe473dbbcb7d94738f6aa70c64df20b72116a076b7ccba0cc975a1cc21545ac009607dee12b89234060d35ad70f7972102e74bfc4d9b51c807de2bd2e5b6
