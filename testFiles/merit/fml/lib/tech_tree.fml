:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: tech_tree.fml
:: Utworzony: -
:: Autor: TS
::======================================================================================================================
:: Zawartość: Definicja obiektu do obsługi struktur drzewiastych, np. operacji technologii
::            (biblioteka wspólna dla TTE_TEC, TTE_WTE, TTE_PZL)
::======================================================================================================================


\declare
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [TS]
:: OPIS: Uniwersalny obiekt do wyświetlania różnych struktur drzewiastych
::  OLD: \declare/jtree.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TREEVIEW', @.CLASS) < 0 ||
obj_decl('TREEVIEW',
   obj_fld('DEBUG',   "PRIVATE: znacznik, czy debugowanie"; 0),
   obj_fld('HIDE',    "PRIVATE: akcje do ukrycia"; ''),
   obj_fld('DEFAULT', "PRIVATE: akcje domyslne"; 'D:D'),
   obj_fld('ID',      "PRIVATE: identyfikator okna grupowego"; ''),
   obj_fld('TAB',     "PRIVATE: tabela robocza"; null()),
   obj_fld('BTN',     "PRIVATE: tablica z przyciskami"; null()),
   obj_fld('TAB1',    "PRIVATE: replika tabeli roboczej"; null()),
   obj_fld('FLD',     "PRIVATE: dodatkowe pola tabeli .TAB"; null()),
   obj_fld('FLD_FML', "PRIVATE: formuly dla pol z tabeli .TAB"; null()),
   obj_fld('TABS',    "PRIVATE: tabela z zakladkami"; null()),
   obj_fld('NDX_SEL', "PRIVATE: indeks"; ''),
   obj_fld('NDX_UP',  "PRIVATE: indeks"; ''),
   obj_fld('NDX_NOD', "PRIVATE: indeks"; ''),
   obj_fld('NDX_NR',  "PRIVATE: indeks"; ''),
   obj_fld('NDX_FLD', "PRIVATE: indeks tabeli .FLD_FML"; ''),

   obj_fld('WERT',    "PRIVATE: okno wertowania tabeli .TAB"; ''),

   obj_fld('DIA',     "PRIVATE: tabela, z ktorej bedzie wyswietlane okno diagramu"; null()),
   obj_fld('REDD',    "PRIVATE: okno redagowania z diagramem"; ''),
   obj_fld('DIAP',    "PRIVATE: znacznik, czy wyswietlać diagram"; 0),

   obj_fld('NR',      "PRIVATE: robocze pole do przenumerowywania"; 0),
   obj_fld('NR_TAB',  "PRIVATE: robocze pole do numeracji zakladek"; 0),

   obj_fld('SZEROK',   "PRIVATE: wartosc okreslajaca szerokosc pola TXT"; 0),
   obj_fld('ZRODLO',   "zrodlo dla ktorego zaladowalismy obiekt"; ''),

   obj_fld('KOPIA',    "Uzyte w Pxgrp - informacja czy jestem w kopii kolejki"; 0),
   obj_fld('MOD_GRP',  "Czy dostępne grupowe poprawianie"; 1),

   obj_fld('USED',     "Flaga oznaczająca, czy redagowany zasób jest używany"; 0),
   obj_fld('ZAKL',     "Flaga oznaczająca sposób prezentacji danych - zakładki"; 0),

   obj_meth('__init',"
      {? _<2 || .HIDE:='' || .HIDE:=_b ?};
      {? _<3 || .DEBUG:=0 || .DEBUG:=_c ?};
      {? _<4 || .ID:='tree' || .ID:=_d ?};
      .TAB:='tab_tmp(2,
         ''UPNODE'',''TREE_REF'',''Up-node'',
         ''NODE'',''INTEGER'',''Węzeł'',
         ''LEV'',''INTEGER'',''Poziom'',
         ''HIDDEN'',''INTEGER'',''Ukryty'',
         ''EXPANDED'',''INTEGER'',''Rozwinięty'',
         ''NEXT'',''INTEGER'',''Jest następny poziom'',
         ''NR'',''INTEGER'',''Numer kolejny'',
         ''REF'',''INTEGER'',''Ref rekordu źródłowego'',
         ''FORMULA'',''STRING[255]'',''Formuła na tekst źródłowy'',
         ''TXT'',''STRING[255]'',''Tekst wyświetlany''
      ';
      .TAB1:=tab_tmp(2,
         'UPNODE','INTEGER','Up-node',
         'NODE','INTEGER','Węzeł',
         'LEV','INTEGER','Poziom',
         'HIDDEN','INTEGER','Ukryty',
         'EXPANDED','INTEGER','Rozwinięty',
         'NEXT','INTEGER','Jest następny poziom',
         'NR','INTEGER','Numer kolejny',
         'REF','INTEGER','Ref rekordu źródłowego'
      );
      .FLD:=tab_tmp(1,
         'LP','INTEGER','Lp',
         'ACR','STRING[8]','Akronim',
         'TYPE','STRING[12]','Typ',
         'NAME','STRING[60]','Nazwa',
         'WIDTH','INTEGER','Szerokość',
         'DEC','INTEGER','Dzięsietne',
         'HIDDEN','INTEGER','Ukryty',
         'SUM','INTEGER','Sumować?',
         'HELP','STRING[60]','Help do pola'
      );
      .FLD_FML:=tab_tmp(1,
         'FLD','STRING[8]','Akronim pola',
         'KIND','STRING[20]','Rodzaj formuły',
         'FORMULA','STRING[255]','Treść formuły'
      );
      .TABS:=tab_tmp(1,
         'LP','INTEGER','Lp',
         'TAB','STRING[255]','Tabela',
         'WER','STRING[8]','Okno wertowania',
         'NAME','STRING[30]','Nazwa zakładki',
         'REFRESH','STRING[255]','Formuła po odświeżeniu',
         'X','INTEGER','Przesunięcie w poziomie',
         'Y','INTEGER','Przesunięcie w pionie',
         'H','INTEGER','Wysokość',
         'BEFORE','STRING[255]','Formuła przed obsługą',
         'AFTER','STRING[255]','Formuła po obsłudze',
         'DH','INTEGER','Wysokość do odjęcia z głównego okna',
         'PANEL','STRING[10]','Identyfikator panelu',
         'NEWPANEL','STRING[10]','Identyfikator tworzonego panelu',
         'MODE','STRING[25]','Sposób wyświetlania okienka'
      );
      .NR_TAB:=0;
      .NR:=0;
      ~~
   "),

   obj_meth('fld',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Dodaje pole do definicji tabeli .TAB w obiekcie
::       używać przed wywołaniem .init()
::   WE: _a - akronim pola
::       _b - typ pola
::       [_c - nazwa pola]
::       [_d - szerokość w oknie]
::       [_e - ilość miejsc dziesiętnych]
::       [_f - ukryty - nie widoczny w kolumnach]
::       [_g - sumować?]
::       [_h - help do pola]
::----------------------------------------------------------------------------------------------------------------------
      .FLD.blank();
      .NR+=1;
      .FLD.LP:=.NR;
      .FLD.ACR:=_a;
      .FLD.TYPE:=_b;
      {? _>2 || .FLD.NAME:=_c   || .FLD.NAME:=_a  ?};
      {? _>3 || .FLD.WIDTH:=_d  || .FLD.WIDTH:=15 ?};
      {? _>4 || .FLD.DEC:=_e    || .FLD.DEC:=2    ?};
      {? _>5 || .FLD.HIDDEN:=_f || .FLD.HIDDEN:=0 ?};
      {? _>6 || .FLD.SUM:=_g    || .FLD.SUM:=0    ?};
      {? _>7 || .FLD.HELP:=_h   || .FLD.HELP:='' ?};
      {? .FLD.add() || .TAB+=','''+_a+''','''+_b+''','''+_c+'''' ?};
      ~~
   ", type_of(''), type_of('')),

   obj_meth('fld_fml',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Dodaje formułę dla zdefiniowanego pola
::   WE: _a - akronim pola
::       _b - rodzaj formuły
::       _c - treść formuły (STRING)
::----------------------------------------------------------------------------------------------------------------------
      .FLD_FML.blank();
      .FLD_FML.FLD:=_a;
      .FLD_FML.KIND:=_b;
      .FLD_FML.FORMULA:=_c;
      .FLD_FML.add();
      ~~
   ", type_of(''), type_of(''), type_of('')),

   obj_meth('init',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: inicjowanie struktur obiektu
::----------------------------------------------------------------------------------------------------------------------
      .TAB:=($(.TAB+')'))();
      .TAB.fld_attr('NODE',2);
      .TAB.fld_attr('LEV',2);
      .TAB.fld_attr('HIDDEN',2);
      .TAB.fld_attr('EXPANDED',2);
      .TAB.fld_attr('NEXT',2);
      .TAB.fld_attr('NR',2);
      .TAB.fld_attr('REF',2);
      .TAB.fld_attr('FORMULA',2);
      .TAB.fld_attr('TXT',2);
      .NDX_NOD:=.TAB.ndx_tmp(,,'NODE',,);
      .NDX_UP:=.TAB.ndx_tmp(,,'UPNODE',,,'NODE',,);
      .NDX_SEL:=.TAB.ndx_tmp(,,'HIDDEN',,,'NR',,);
      .NDX_NR:=.TAB.ndx_tmp(,,'NR',,);
      .NDX_FLD:=.FLD_FML.ndx_tmp(,,'FLD',,,'FLD',,);
      .FLD_FML.index(.NDX_FLD);
      .wins();
      .load();
      ~~
   "),

   obj_meth('add_dia',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Dodaje do widoku tabelę z rysunkiem diagramu
::   WE: _a - tabela z rysunkiem diagramu
::       _b - okno tabeli
::----------------------------------------------------------------------------------------------------------------------
      .DIAP:=1;
      .DIA:=_a;
      .REDD:=_b;
      ~~
   "),

   obj_meth('replica',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Replika tabeli .TAB do tabeli .TAB1
::----------------------------------------------------------------------------------------------------------------------
      .TAB.clear();
      .TAB1.erase();
      {? .TAB.first()
      || {!
         |?
            .TAB1.blank();
            .TAB1.UPNODE:=.TAB.UPNODE;
            .TAB1.NODE:=.TAB.NODE;
            .TAB1.LEV:=.TAB.LEV;
            .TAB1.HIDDEN:=.TAB.HIDDEN;
            .TAB1.EXPANDED:={? cur_win(1,1)=.WERT || .TAB.tr_state() || 0 ?};
            .TAB1.NEXT:=.TAB.NEXT;
            .TAB1.NR:=.TAB.NR;
            .TAB1.REF:=.TAB.REF;
            .TAB1.add();
            .TAB.next()
         !}
      ?};
      ~~
   "),

   obj_meth('wins',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: definicje okien dla tabel obiektu
::----------------------------------------------------------------------------------------------------------------------
::    GLOWNE OKNO - WERT
      .WERT:=.TAB.mk_sel(.title(),'P',0,'#tree_wert',,,,1);
      {? .DEBUG
      || .TAB.win_fld(.WERT,,'TXT',,,40);
::       .TAB.win_fld(.WERT,,'UPNODE',,,5,,,'up');
         .TAB.win_fld(.WERT,,'NODE',,,5,,,'nd');
         .TAB.win_fld(.WERT,,'LEV',,,5,,,'lv');
         .TAB.win_fld(.WERT,,'HIDDEN',,,5,,,'hd');
         .TAB.win_fld(.WERT,,'EXPANDED',,,5,,,'ex');
         .TAB.win_fld(.WERT,,'NEXT',,,5,,,'nx')
:         .TAB.win_fld(.WERT,,'NR')
      || _width:=0;

::       POLE - OPIS WĘZŁA
         {? .FLD.first()
         || {!
            |? {? ~.FLD.HIDDEN || _width+=(|.FLD.WIDTH)+1 ?};
               .FLD.next()
            !}
         ?};
         .TAB.win_fld(.WERT,,'TXT',,,{? .SZEROK=0
                                     || 90
                                     || .SZEROK
                                     ?}-_width,,,.hdr_1st());
         .FLD_FML.prefix('TXT','TXT');
         {? .FLD_FML.first()
         || {!
            |? .TAB.fld_fml('TXT',.FLD_FML.KIND,$.FLD_FML.FORMULA);
               .FLD_FML.next()
            !}
         ?};

::       POZOSTAŁE POLA
         {? .FLD.first()
         || {!
            |? {? ~.FLD.HIDDEN
               || .TAB.win_fld(.WERT,,.FLD.ACR,,,.FLD.WIDTH,.FLD.DEC,,,,.FLD.HELP)
               ?};
               .FLD_FML.prefix(.FLD.ACR,.FLD.ACR);
               {? .FLD_FML.first()
               || {!
                  |? .TAB.fld_fml(.FLD.ACR,.FLD_FML.KIND,$.FLD_FML.FORMULA);
                     .FLD_FML.next()
                  !}
               ?};
               .FLD.next()
            !}
         ?}
      ?};

::    AKCJE STANDARDOWE
      .TAB.win_act(.WERT,0,'Formuła','&Dołącz'@@,,,$(\"params_set(params_get());\"+!.+\".f_add()\"),,,,,,'D');
      .TAB.win_act(.WERT,1,'Formuła','&Dołącz'@@,,,$(\"params_set(params_get());\"+!.+\".f_add_e()\"),,,,,,'D');
      {? .MOD_GRP
      || .TAB.win_act(.WERT,,'Formuła','&Popraw'@@,,,$(\"params_set(params_get());\"+!.+\".f_modify()\"),,,1,
                                             $(\"params_set(params_get());\"+!.+\".f_mod_bg()\"),
                                             $(\"params_set(params_get());\"+!.+\".f_mod_ag()\"),'P')
      || .TAB.win_act(.WERT,,'Formuła','&Popraw'@@,,,$(\"params_set(params_get());\"+!.+\".f_modify()\"),,,,,,'P')
      ?};
      .TAB.win_act(.WERT,,'Formuła','&Usuń'@@,,,$(\"params_set(params_get());\"+!.+\".f_delete()\"),,,1,
                                             $(\"params_set(params_get());\"+!.+\".f_del_bg()\"),
                                             $(\"params_set(params_get());\"+!.+\".f_del_ag()\"),'U');
      {? .ZAKL=7
      || _akcja:=\"sel_exit()\";
         .TAB.win_act(.WERT,,'Formuła','Wy&bierz'@@,,,_akcja,,1,,,,'B');
         .DEFAULT:='B'
      ?};
      .TAB.win_act(.WERT,,'Formuła','Zwiń/roz&wiń'@@,,'Zwiń/rozwiń wszystkie rekordy'@,
         $(\"exec('zwrw_all','#tree','\"+!.+\".TAB','UPNODE',\"+!.+\".WERT)\"),,0,,,,'W');
::    Dodatkowe akcje
      .f_akcje();
      .TAB.win_act(.WERT,,'Szukaj');
      .TAB.win_act(.WERT,,'Formuła','&Legenda'@@,,,$(\"params_set(params_get());\"+!.+\".f_legend()\"),,,,,,'L');
      .TAB.win_act(.WERT,,'Wyświetl',,,,$(\"params_set(params_get());\"+!.+\".f_displ()\"));
      .TAB.win_act(.WERT,,'Rekord',,,,$(\"params_set(params_get());\"+!.+\".f_record()\"));
::    Dodatkowe przyciski
      .f_buttons();

::    POZOSTAŁE OKNA
      {? .TABS.first()
      || _grp:=.TAB.grp_make(,,{? .ID='' || 'tree' || .ID ?},,,,$(\"\"+!.+\".refresh()\"),'html_maximized');
         _tabs_h:=0;
         {? .TABS.first() || {! |? {? .TABS.NAME='' & .TABS.DH<>0 || _tabs_h+=.TABS.DH+2 ?}; .TABS.next() !} ?};
         .TAB.grp_sel(_grp,.TAB,.WERT,,$(\"
               params_set(params_get());
               \"+!.+\".after_refresh();
::               {? \"+!.+\".DIAP
::               || grp_edisp(\"+!.+\".DIA,\"+!.+\".REDD)
::               ?};
               {? \"+!.+\".TABS.first()
               || {!|?
                    grp_disp(($(\"+!.+\".TABS.TAB))(),\"+!.+\".TABS.WER);
                    \"+!.+\".TABS.next()
                  !}
               ?}
            \"),0,,29-_tabs_h,,,,,'maximized');
            .TAB.grp_splt(_grp,,'horizontal','bottom',,'panel0');
            {? .TABS.first()
            || {!
               |?
                  {? 6+.TABS.PANEL='bottom'
                  ||
                     .TAB.grp_sel(
                        _grp, ($(.TABS.TAB))(), .TABS.WER, .TABS.NAME, $.TABS.REFRESH,
                        .TABS.X, .TABS.Y, .TABS.H, $.TABS.BEFORE, $.TABS.AFTER,,,.TABS.MODE
                     );
                     {? .TABS.NEWPANEL<>''
                     || .TAB.grp_splt(_grp,.TABS.PANEL,'horizontal',.TABS.NEWPANEL,,'panel0')
                     ?}
                  ?};
                  .TABS.next()
               !}
            ?};
::            .TAB.grp_splt(_grp,,'vertical','right',);
::            {? .DIAP || .TAB.grp_edit(_grp,.DIA,.REDD,,,,,,'maximized') ?};
            {? .TABS.first()
            || {!
               |?
                  {? 5+.TABS.PANEL='right'
                  ||
                     .TAB.grp_sel(
                        _grp, ($(.TABS.TAB))(), .TABS.WER, .TABS.NAME, $.TABS.REFRESH,
                        .TABS.X, .TABS.Y, .TABS.H, $.TABS.BEFORE, $.TABS.AFTER,,,.TABS.MODE
                     );
                     {? .TABS.NEWPANEL<>''
                     || .TAB.grp_splt(_grp,.TABS.PANEL,'horizontal',.TABS.NEWPANEL)
                     ?}
                  ?};
                  .TABS.next()
               !}
            ?};

            .TAB.win_sel(_grp)
      || .TAB.win_sel(.WERT)
      ?};
      .TAB.actions(.WERT,.HIDE,.DEFAULT);
      ~~
   "),

   obj_virt('title',"
      'Tytuł okna'
   "),

   obj_virt('hdr_1st',"
      'Nagłówek 1. kolumny'
   "),

   obj_meth('add',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: dodanie kolejnego węzła
::   WE: _a - ref źródłowego rekordu
::       _b - formuła na wyświetlany tekst
::       [_c - upnode do dowiązania, 0 jeżeli korzeń ]
::   WY: node - numer
::----------------------------------------------------------------------------------------------------------------------
      {? _<3 || _b:=0 ?};
      .TAB.clear();
      .TAB.blank();
      .TAB.UPNODE:=_c;
      .TAB.NODE:=.free_node();
      .TAB.LEV:=.level(_c)+1;
      .TAB.HIDDEN:={? .TAB.LEV>1 || 1 || 0 ?};
      .TAB.EXPANDED:=1;
      .TAB.REF:=_a;
      .TAB.FORMULA:=_b;
      _node:={? .TAB.add() || .TAB.NODE || 0 ?};
      {? _node>0
       || .TAB.cntx_psh();
          .TAB.index(.NDX_NOD);
          .TAB.prefix(_c);
          {? .TAB.first()
           || .TAB.NEXT:=1;
              .TAB.put()
          ?};
          .TAB.cntx_pop()
      ?};
      _node
   ", type_of(0), type_of('') ),

   obj_meth('value',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: nadanie wartości pola w tabeli .TAB
::   WE: _a - node
::       _b - akronim pola
::       _c - wartość
::----------------------------------------------------------------------------------------------------------------------
      .TAB.cntx_psh();
      .TAB.index(.NDX_NOD);
      .TAB.prefix(_a);
      {? .TAB.first()
      || {? type_of(_c)=type_of(0)
         || ($(!.+\".TAB.\"+_b+\":=\"+form(_c,,,'9.')))()
         |? type_of(_c)=type_of('')
         ||
            _txt:=gsub(_c,'\\'','\\'\\'');
            _txt:=gsub(_txt,'\\\\','\\\\\\\\');
            ($(!.+\".TAB.\"+_b+\":='\"+_txt+\"'\"))()
         ?};
         .tab_txt();
         .TAB.put()
      ?};
      .TAB.cntx_pop();
      .TAB.get();
      ~~
   ", type_of(0), type_of('')),

   obj_meth('ref',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Zwraca ref węzła
::   WE: _a - node
::   WY: .ref()
::----------------------------------------------------------------------------------------------------------------------
      .TAB.cntx_psh();
      .TAB.index(.NDX_NOD);
      .TAB.prefix(_a);
      {? .TAB.first()
      || _ref:=.TAB.ref()
      || _ref:=null()
      ?};
      .TAB.cntx_pop();
      _ref
   ", type_of(0)),

   obj_meth('add_tab',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: dodanie kolejnego okna do zakładki
::   WE: _a - ścieżka do obiektu-tabeli
::       _b - akronim okna
::       _c - nazwa zakładki
::       _d - treść formuły po odswieżeniu
::       _e - przesunięcie w poziomie
::       _f - przesunięcie w pionie
::       _g - wysokość
::       _h - treść formuły przed obsługą
::       _i - treść formuły po obsłudze
::       [_j] - czy odejmować wysokość z głównego okna (domyślnie 1 - tak)
::       [_k] - identyfikator panelu (domyślnie 'bottom')
::       [_l] - identyfikator tworzonego panelu (jeśli tak, to po wstawieniu okna użyty jest grp_splt)
::              UWAGA: identyfikatory powinny się zaczynać od 'bottom' dla podziału poniżej głównego okna
::                     oraz 'right' dla podziału na prawo od głównego okna.
::       [_m] - sposób w jaki będzie wyświetlane okienko (mode - domyślnie 'normal')
::   WY: wynik add()
::----------------------------------------------------------------------------------------------------------------------
      .NR_TAB+=1;
      .TABS.LP:=.NR_TAB;
      .TABS.TAB:=_a;
      .TABS.WER:=_b;
      .TABS.NAME:={? var_pres('_c')=type_of('') || _c || '' ?};
      .TABS.REFRESH:={? var_pres('_d')=type_of('') || _d || '' ?};
      .TABS.X:={? var_pres('_e')=type_of(0) || _e || 0 ?};
      .TABS.Y:={? var_pres('_f')=type_of(0) || _f || 0 ?};
      .TABS.H:={? var_pres('_g')=type_of(0) || _g || 0 ?};
      .TABS.BEFORE:={? var_pres('_h')=type_of('') || _h || '' ?};
      .TABS.AFTER:={? var_pres('_i')=type_of('') || _i || '' ?};
      .TABS.DH:={? var_pres('_j')=type_of(0) || {? _j || .TABS.H || 0 ?} || .TABS.H ?};
      .TABS.PANEL:={? var_pres('_k')=type_of('') || _k || 'bottom' ?};
      .TABS.NEWPANEL:={? var_pres('_l')=type_of('') || _l || '' ?};
      .TABS.MODE:={? var_pres('_m')=type_of('') || _m || 'normal' ?};
      .TABS.add()
   ", type_of(''), type_of('') ),

   obj_meth('free_node',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: numer wolnego węzła
::----------------------------------------------------------------------------------------------------------------------
      .TAB.cntx_psh();
      .TAB.index(.NDX_NOD);
      .TAB.prefix();
      {? .TAB.last() || _node:=.TAB.NODE+1 || _node:=1 ?};
      .TAB.cntx_pop();
      _node
   "),

   obj_meth('level',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: poziom wybranego węzła
::----------------------------------------------------------------------------------------------------------------------
      {? _a=0 || return(0) ?};
      .TAB.cntx_psh();
      .TAB.index(.NDX_NOD);
      .TAB.prefix(_a);
      {? .TAB.first() || _level:=.TAB.LEV || _level:=0 ?};
      .TAB.cntx_pop();
      _level
   "),

   obj_virt('load',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Ładowanie danych z tabel systemu do obiektu przy jego inicjowaniu
::----------------------------------------------------------------------------------------------------------------------
      FUN.emsg('Metoda load() obiektu '+!.+'\nNie zdefiniowano wersji wirtualnej.');
      ~~
   "),

   obj_meth('reload',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Przeładowanie widoku
::----------------------------------------------------------------------------------------------------------------------
      _ref:=.TAB.REF;
      .TAB.cntx_psh();
      .replica();
      .load();
      .update();
      .TAB.clear();
      {? .TAB.first()
      || {!
         |?
            .TAB1.blank();
            .TAB1.REF:=.TAB.REF;
            {? .TAB1.find_rec()
            || .TAB.HIDDEN:=.TAB1.HIDDEN;
               .TAB.EXPANDED:=.TAB1.EXPANDED;
               .tab_txt();
               .TAB.put()
            || .TAB.HIDDEN:=0;
               .TAB.EXPANDED:=0;
               .tab_txt();
               .TAB.put()
            ?};
            .TAB.next()
         !}
      ?};
      .TAB.cntx_pop();
      .TAB.blank();
      .TAB.REF:=_ref;
      .TAB.find_rec()
   "),

   obj_meth('update',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Renumeracja po dodaniu/usunięciu/poprawieniu węzłów
::       + suma kolumn na wyższy poziom
::       Metoda bez argumentów - inicjowanie procesu
::----------------------------------------------------------------------------------------------------------------------
      .TAB.cntx_psh();
      .NR:=0;
      .update(0);
      .TAB.cntx_pop();
      ~~
   ", -1, -1),

   obj_meth('update',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Renumeracja po dodaniu/usunięciu/poprawieniu węzłów
::       + suma kolumn na wyższy poziom
::   WE: _a - numer węzla, od którego zaczyna się proces
::   WY: _fld - wektor z sumami na wyższy poziom
::----------------------------------------------------------------------------------------------------------------------
      .FLD.prefix();
      _size:=.FLD.size();
      _fld:=obj_new(_size);
      {! _iter:=1.._size |! _fld[_iter]:=0 !};
      .TAB.cntx_psh();
      .TAB.index(.NDX_UP);
      .TAB.prefix(_a);
      {? .TAB.first()
      || {!
         |?
            .NR+=1;
            .TAB.NR:=.NR;
            .tab_txt();
            .TAB.put();
            _f_fld:=.update(.TAB.NODE);
            {! _iter:=1.._size
            |! .FLD.prefix(_iter);
               {? .FLD.first()
               || {? .TAB.NEXT & .FLD.SUM
                  ||
                     {? .FLD.TYPE='REAL'
                     ||
                        ($(!.+\".TAB.\"+.FLD.ACR))():=_f_fld[_iter]
                     ||
                        ($(!.+\".TAB.\"+.FLD.ACR))():=form(_f_fld[_iter],,.FLD.DEC,'9,')
                     ?}
                  ?};
                  {? .FLD.TYPE='REAL'
                  ||
                     _fld[_iter]+=($(!.+\".TAB.\"+.FLD.ACR))()
                  ||
                     _tmp:=($(!.+\".TAB.\"+.FLD.ACR))();
                     _liczba:=#((_tmp-(1+.FLD.DEC))+'.'+(_tmp+.FLD.DEC));
                     _fld[_iter]+=_liczba
                  ?}
               ?}
            !};
            obj_del(_f_fld);
            .TAB.put();
            .TAB.next()
         !}
      ?};
      .TAB.cntx_pop();
      _fld
   ",type_of(0),-1),

   obj_meth('select',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: selekcja drzewa
::----------------------------------------------------------------------------------------------------------------------
      _result:=0;
::    Zmienna środowiska - dedykowana dla operacji technologii
      _env_oper:=exec('env_oper','tech_oper');
      _env_oper.used:=.USED;
      _env_oper.zakl:=.ZAKL;
      _env_oper.obj:=.;
::    Jeżeli jest zmienna środowiskowa env, to ją przepycham
      _params:=params_get();
      {? var_pres('_params')>100 & var_pres('env',_params)>100
      || params_set('env',_params.env,'env_oper',_env_oper)
      || params_set('env_oper',_env_oper)
      ?};
      .TAB.index(.NDX_UP);
      .TAB.prefix();
      .TAB.win_fml(.WERT,,'TXT',,'ICON_BEFORE',.win_fml());
      _formicon:=\"
         _tab:=cur_tab(1,1);
         _icon:=exec('pusta','#icon');
         {? _tab.DOK<>''
         || _icon:='xwin16.png:190'
         ?};
         _icon
      \";
      .TAB.win_fml(.WERT,,'NTIME',,'ICON_BEFORE',_formicon);
      {!
      |? {? .ZAKL<>7
         || .TAB.hdr_sel();
            .TAB.hdr_sel(.title())
         ?};
         _result:=.TAB.select();
         {? _result>0 & .ZAKL=7
         || VAR.TOPER:=exec('FindAndGet','#table',TOPER,.TAB.REF,,,null())
         ?};
         ~.chk_sel()
      !};
      .TAB.win_fml(.WERT,,'TXT',,'ICON_BEFORE',\"\");
      _result
   "),

  obj_virt('chk_sel',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: akcja sprawdząjaca czy wyjść z select'a
::   WY: 0 - zostajemy
::       1 - OK, wychodzimy
::----------------------------------------------------------------------------------------------------------------------
      1
   "),

   obj_virt('win_fml',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Ustawia formułę do wyświetlania ikony
::   WY: formuła
::----------------------------------------------------------------------------------------------------------------------
      \"''\"
   "),

   obj_meth('f_expand',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: zwiń/rozwiń poziom struktury - funkcja wołana z okna
::----------------------------------------------------------------------------------------------------------------------
      .expand(0);
      ~~
   "),

   obj_meth('expand',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: zwiń/rozwiń poziom struktury
::   WE: _a - 0 - zmieniac stan
::            1 - zawsze zwijać
::            2 - zawsze rozwijać
::----------------------------------------------------------------------------------------------------------------------
      .TAB.cntx_psh();
      {? .TAB.NEXT
      || {? _a=0
         || {? .TAB.EXPANDED=1 || .TAB.EXPANDED:=0 || .TAB.EXPANDED:=1 ?}
         |? _a=1
         || .TAB.EXPANDED:=0
         |? _a=2
         || .TAB.EXPANDED:=1
         ?};
         .tab_txt();
         .TAB.put();
         _node:=.TAB.NODE;
         _expanded:=.TAB.EXPANDED;
         .TAB.clear();
         .TAB.index(.NDX_UP);
         .TAB.prefix(_node);
         {? .TAB.first()
         || {!
            |? .TAB.HIDDEN:=~_expanded;
               .TAB.put();
               .expand(1);
               .TAB.next()
            !}
         ?}
      ?};
      .TAB.cntx_pop();
      ~~
   ", type_of(0), -1),

   obj_meth('tab_txt',"
      .TAB.TXT:=($.TAB.FORMULA)();
      ~~
   "),

   obj_virt('f_record',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Obsługa przed rekord
::----------------------------------------------------------------------------------------------------------------------
      ~~
   "),

   obj_virt('f_legend',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Legenda kolorowania
::----------------------------------------------------------------------------------------------------------------------
      ~~
   "),

   obj_virt('f_displ',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Wyświetl zawartość rekordu (na spację)
::----------------------------------------------------------------------------------------------------------------------
      ~~
   "),

   obj_virt('f_modify',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Obsluga na Popraw
::----------------------------------------------------------------------------------------------------------------------
      ~~
   "),

   obj_virt('f_mod_bg',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Obsługa na Popraw (przed grupą rekordów)
::----------------------------------------------------------------------------------------------------------------------
      params_exec('toper_modify_gpr','tech_oper')
   "),

   obj_virt('f_mod_ag',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Obsługa na Popraw (po grupie rekordów)
::----------------------------------------------------------------------------------------------------------------------
      params_exec('toper_modify_gpo','tech_oper')
   "),

   obj_virt('f_add',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Obsługa na Dołącz
::----------------------------------------------------------------------------------------------------------------------
      ~~
   "),

   obj_virt('f_add_e',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Obsługa na Dołącz dla pustej dziedziny
::----------------------------------------------------------------------------------------------------------------------
      ~~
   "),

   obj_meth('delete',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Kasowanie węzła z jego drzewem
::   WE: _a - node
::----------------------------------------------------------------------------------------------------------------------
      .TAB.cntx_psh();
      .TAB.index(.NDX_UP);
      .TAB.prefix(_a);
      {? .TAB.first() || {! |? .delete(.TAB.NODE); .TAB.next() !} ?};
      .TAB.index(.NDX_NOD);
      .TAB.prefix(_a);
      {? .TAB.first() || .TAB.del() ?};
      .TAB.cntx_pop()
   ", type_of(0)),

   obj_virt('f_delete',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Obsługa na Usuń
::----------------------------------------------------------------------------------------------------------------------
:   .delete(.TAB.NODE);
:   .update();
      ~~
   "),

   obj_virt('f_del_bg',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Obsługa na Usuń przed grupą
::----------------------------------------------------------------------------------------------------------------------
      0
   "),

   obj_virt('f_del_ag',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Obsługa na Usuń po grupie
::----------------------------------------------------------------------------------------------------------------------
      ~~
   "),

   obj_virt('f_find',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Obsługa na Szukaj
::----------------------------------------------------------------------------------------------------------------------
      ~~
   "),

   obj_virt('f_akcje',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: akcje dodatkowe do okienka
::----------------------------------------------------------------------------------------------------------------------
      ~~
   "),

   obj_virt('f_buttons',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: przyciski dodatkowe do okienka
::----------------------------------------------------------------------------------------------------------------------
      ~~
   "),

   obj_virt('after_refresh',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Początek formuły na odświeżanie okna składowego
::----------------------------------------------------------------------------------------------------------------------
      ~~
   "),

   obj_virt('refresh',"
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Początek formuły na odświeżanie okna głównego
::----------------------------------------------------------------------------------------------------------------------
      ~~
   ")
)

?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 b3815c4cb725545697b4e41586dc2b4875dfdbe929f7af67398d2df3a5c11efc8800702efed8f113ac6bb91f267d88aa829005c3b0cb8b638b0e6e8cfc87a71527b1e8730b96e2ff9e74102ccb45f01e4e8e2448895823dcc9903ff0381a51a73e6b472c39e5b2dac9d9ddbdbe21cb384273759a707b5518c183a4cf664d7a3b
