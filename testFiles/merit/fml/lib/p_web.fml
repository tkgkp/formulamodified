:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: p_web.fml
:: Utworzony: 17.10.2017
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Plik zawiera formuły wykorzystywane do obsługi kontekstu pracy pracownika pod webTerm-em.
::======================================================================================================================


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Kasowanie danych w tabelach P_WEB_CL i P_WEB_CX.
::   WE: _a [INTEGER] - Moment wywołania:
::                      1 - Start TOMCATA - kasowane są wszystkie rekordy związane z identyfikatorem serwera.
::                      2 - Zakończenie sesji webTerma - kasowane są tylko rekordy związane z daną sesją.
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & (0<_a & _a<3)
|| _tryb:=_a
|| return(0)
?};

exec('p_web_cl_del','p_web',_tryb) &
exec('p_web_cx_del','p_web',_tryb)


\p_web_cl_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Kasowanie danych w tabelach P_WEB_CL.
::   WE: _a [INTEGER] - Moment wywołania:
::                      1 - Start TOMCATA - kasowane są wszystkie rekordy związane z identyfikatorem serwera.
::                      2 - Zakończenie sesji webTerma - kasowane są tylko rekordy związane z daną sesją.
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & (0<_a & _a<3)
|| _tryb:=_a
|| return(0)
?};

P_WEB_CL.index('LOGIN');
{? _tryb=1
|| _tcid:=app_info('web_tcid');
   P_WEB_CL.prefix(_tcid,)
|? _tryb=2
|| _tcid:=app_info('web_tcid');
   _sesid:=app_info('web_sesid');
   P_WEB_CL.prefix(_tcid,_sesid,)
?};
{? P_WEB_CL.first()
|| {!
   |? P_WEB_CL.del()
   !}
?};
1


\p_web_cx_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Kasowanie danych w tabelach P_WEB_CL i P_WEB_CX.
::   WE: _a [INTEGER] - Moment wywołania:
::                      1 - Start TOMCATA - kasowane są wszystkie rekordy związane z identyfikatorem serwera.
::                      2 - Zakończenie sesji webTerma - kasowane są tylko rekordy związane z daną sesją.
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & (0<_a & _a<3)
|| _tryb:=_a
|| return(0)
?};

P_WEB_CX.index('SESID');
{? _tryb=1
|| _tcid:=app_info('web_tcid');
   P_WEB_CX.prefix(_tcid,)
|? _tryb=2
|| _tcid:=app_info('web_tcid');
   _sesid:=app_info('web_sesid');
   P_WEB_CX.prefix(_tcid,_sesid,)
?};
{? P_WEB_CX.first()
|| {!
   |? P_WEB_CX.del()
   !}
?};
1


\p_web_cx_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Obsługa akcji "Rekord - przed" tabeli P_WEB_CX.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
web_params_set(web_params_get());
{? exec('env_wt','b_proces') & exec('exist','#record',P_WEB_CX)
|| P.use('pracowni');
   P_WEB_CX.P().OSOBA();
   P_WEB_CX.P().WYDZIAL();
   P_WEB_CX.P().ST();
   P_WEB_CX.P().F_ZATR()
?};
~~


\p_web_cx_set_prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Ustawienie prefixu dla tabeli P_WEB_CX na bieżącą sesję
::   WE: [_a] [STRING] - Symbol kodu zależności służbowych, dla których tworzony będzie zbiór rekordów
::                       [domyślnie: 'DOSTINF'].
::       [_b] [STRING] - Akronim indeksu [domyślnie: SESID].
::       [_c] [ANY]    - Wartość kolejnego pola w prefiksie.
::       [_d] [ANY]    - Wartość kolejnego pola w prefiksie.
::       [_e] [ANY]    - Wartość kolejnego pola w prefiksie.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tSTRING:=type_of('');
_kod:={? var_pres('_a')=_tSTRING || _a || 'DOSTINF' ?};
_ndx:={? var_pres('_b')=_tSTRING || _b || 'SESID' ?};

_tcid:=app_info('web_tcid');
_sesid:=app_info('web_sesid');
_tabid:=app_info('web_tabid');

P_WEB_CX.index(_ndx);
{? _>2
|| _prfx:='';
   _par:=obj_new(_);
   {! _lp:=3 .. _
   |! _par[_lp]:=_[_lp];
      _prfx+='_e['+$_lp+'],'
   !};
   {? type_of(_[_])<>type_of('') || _prfx:=_prfx-1 ?};
   ($('P_WEB_CX.prefix(_a,_b,_c,_d,'+_prfx+')'))(_tcid,_sesid,_tabid,_kod,_par)
|| P_WEB_CX.prefix(_tcid,_sesid,_tabid,_kod,)
?};
~~


\p_web_cx_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Ustala rekordy pracowników do zmiany kontekstu pracy.
::   WE: [_a] [STRING] - Symbol kodu zależności służbowych, dla których tworzony będzie zbiór rekordów
::                       [domyślnie: 'DOSTINF'].
::       [_b] [DICT]   - Tabela z pracownikami, których chcemy dodać w sesji. Pusta tabela spowoduje, że wyboru
::                       będzie można dokonywać wyłącznie spośród "własnych" umów (bez podwładnych).
::       [_c] [NUMBER] - Tryb wsadowy (bez komunikatów):
::                         0 - Nie [domyślnie];
::                         1 - Tak.
::       [_d] [STRING] - Identyfikator zestawu danych.
::       [_e] [NUMBER] - Czy dodawać własne dane
::                         0 - Nie;
::                         1 - Tak [domyślnie].
::   WY: zwraca liczbę>0 lub 0 w przypadku braku powiązania pracownika z zalogowaną osobą
::----------------------------------------------------------------------------------------------------------------------
  _kod:={? var_pres('_a')=type_of('') || _a || 'DOSTINF' ?};
    _P:={? var_pres('_b')=type_of(P)  || _b || ~~        ?};
_batch:={? var_pres('_c')=type_of(0)  || _c || 0         ?};
_setid:={? var_pres('_d')=type_of('') || _d || ''        ?};
_myOwn:={? var_pres('_e')=type_of(0)  || _e || 1         ?};

_result:=0;
_jest_prac:=0;
USERS.cntx_psh();
_osoba:=OPERATOR.USER().OSOBA;
USERS.cntx_pop();

P_WEB_CX.cntx_psh();
exec('p_web_cx_set_prefix','p_web',_kod,'SETID',_setid);
{? P_WEB_CX.first()
:: Kolejne wywołanie w ramach sesji - tylko pozycjonujemy się
|| _result:=1

:: Brak danych (pierwsze wywołanie w sesji) - uzupełniamy tabelę.
|| P.index('OSOBA');
:: ograniczamy do bieżącej firmy
   P.prefix(_osoba,exec('ref_firma','ustawienia'));
   {? P.first()
   || F_ZATR.cntx_psh();
      P_WEB_CX.blank();
      P_WEB_CX.SETID:=_setid;
      P_WEB_CX.TYPPOZ:=_kod;
      {!
      |? {? _myOwn & P.F_ZATR().DOCELOWA='T'
         || P_WEB_CX.P:=P.ref();
            P_WEB_CX.OSOBA:=P.OSOBA;
            P_WEB_CX.UD_SKL:=P.WYDZIAL;
            P_WEB_CX.STN:=P.ST;
            P_WEB_CX.CP:=P.CP;
            P_WEB_CX.F_ZATR:=P.F_ZATR;
            P_WEB_CX.ZA:=P.ZA;
            P_WEB_CX.RODZAJ:='W';
            P_WEB_CX.EDYCJA:='T';
            _result+=P_WEB_CX.add(1)
         ?};
         P.next()
      !};
      F_ZATR.cntx_pop();
::    ^ Dane własne.
::    v Dane podwładnych.
      {? type_of(_P)=0
      || OSOBA.cntx_psh();
         _P:=exec('prac_pod','stanprac',_osoba,'TYPPOZ',_kod);

::       dodanie pracowników z wtyczki
         {? _setid='GRUPY'
         || _rPracownik:=exec('get_p_web_cl','p_web','JA');
            {? Plugin.runnable('PRC_POR_RCZP_DOD_PRAC')
            || Plugin.run('PRC_POR_RCZP_DOD_PRAC',_P,_rPracownik)
            ?}
         ?};
         OSOBA.cntx_pop()
      ?};
      P.cntx_psh();
      P.prefix();
      {? _P.first()
      || P_WEB_CX.blank();
         P_WEB_CX.TYPPOZ:=_kod;
         P_WEB_CX.SETID:=_setid;
         P_WEB_CX.RODZAJ:='P';
         F_ZATR.cntx_psh();
         {!
         |? {? P.seek(_P.P_SQL) & P.F_ZATR().DOCELOWA='T'
            || P_WEB_CX.P:=P.ref();
               P_WEB_CX.OSOBA:=P.OSOBA;
               P_WEB_CX.UD_SKL:=P.WYDZIAL;
               P_WEB_CX.STN:=P.ST;
               P_WEB_CX.CP:=P.CP;
               P_WEB_CX.F_ZATR:=P.F_ZATR;
               P_WEB_CX.ZA:=P.ZA;
               P_WEB_CX.CZY_POD:=_P.CZY_POD;
               P_WEB_CX.EDYCJA:=_P.EDYCJA;
               _result+=P_WEB_CX.add(1)
            ?};
            _P.next()
         !};
         F_ZATR.cntx_pop()
      ?};
      P.cntx_pop()
   ?}
?};
P_WEB_CX.cntx_pop();
{? ~_batch & ~_result &_myOwn
|| FUN.info(
      'Błąd konfiguracji użytkownika internetowego.\n'
      'Brak powiązania zalogowanego użytkownika z osobą lub osoba nie jest współpracownikiem.'@
   )
?};
_result


\get_p_web_cl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Pobiera zapamiętany kontekst pracy (wskazanie na pracownika) dla użytkownika internetowego.
::   WE: [_a] [STRING] - Identyfikator zestawu danych
::                         ''       - Kontekst pracy może dotyczyć przełożonego lub podwładnego.
::                         'JA'     - Konteks pracy dotyczy wyłącznie zalogowanego użytkownika.
::   WY: Wskazanie na pracownika lub null().
::----------------------------------------------------------------------------------------------------------------------
_tSTRING:=type_of('');
{? var_pres('_a')=_tSTRING
|| _setid:=_a
|? _par:=web_params_get();
   obj_ntab(_par) & var_pres('CUR_PRAC_SETID',_par)=_tSTRING
|| _setid:=_par.CUR_PRAC_SETID
|| _setid:=''
?};

_login:=app_info('web_user');

_result:=null();
P_WEB_CL.cntx_psh();
P_WEB_CL.index('LOGIN');
{! _lp:=1 .. 2
:: W pierwszym przebiegu pętli szukamy kontekstu pracownika dla bieżącej sesji, w drugim obiegu - dla poprzedniej.
|? _result=null()
|! {? _lp=1
   || _tcid:=app_info('web_tcid');
      _sesid:=app_info('web_sesid');
      _tabid:=app_info('web_tabid')
   || _tcid:=_sesid:=_tabid:=''
   ?};
   P_WEB_CL.prefix(_tcid,_sesid,_tabid,_setid,_login,);
   {? P_WEB_CL.first()
   || _result:=P_WEB_CL.P
   ?}
!};
P_WEB_CL.cntx_pop();
_result


\is_prac_in_p_web_cx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Sprawdza czy pracownik znajduje się na liście pracowników do zmiany kontekstu pracy
::   WE: _a [REFERENCE] - Wskazanie na pracownika.
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_p_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};

exec('p_web_cx_set_prefix','p_web');
_result:=P_WEB_CX.find_key(_p_ref);
_result


\get_first_p_web_cx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Pobiera pierwszy rekord pracownika z P_WEB_CX.
::   WY: Wskazanie na pracownika lub null().
::----------------------------------------------------------------------------------------------------------------------
_result:=null();

P_WEB_CX.index('SESID');
P_WEB_CX.prefix(app_info('web_tcid'),app_info('web_sesid'));
{? P_WEB_CX.first()
|| _dalej:=1;
   P.cntx_psh();
   P.prefix();
   USERS.cntx_psh();
   USERS.prefix();
   {!
   |? {? P_WEB_CX.P().OSOBA=OPERATOR.USER().OSOBA
      || _result:=P_WEB_CX.P;
         _dalej:=0
      ?};
      _dalej & P_WEB_CX.next()
   !};
   USERS.cntx_pop();
   P.cntx_pop()
?};
_result


\set_p_web_cl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Zapisuje wybrany kontekst pracy (wskazanie na pracownika) dla użytkownika internetowego.
::   WE: _a  [REFERENCE] - Wskazanie na pracownika.
::      [_b] [INTEGER]   - Czy zapisywać kontekst dla następnej sesji (parametr opcjonalny)
::                         1 - Tak [domyślnie];
::                         0 - Nie - tylko dla bieżącej zakładki.
::      [_c] [STRING] - Identyfikator zestawu danych (patrz opis \get_p_web_cl/p_web.fml).
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? var_pres('_a')=type_of(null())
|| _p_ref:=_a
|| return(_result)
?};
_next_session:={? var_pres('_b')=type_of(0) || _b || 1 ?};

_tSTRING:=type_of('');
{? var_pres('_c')=_tSTRING
|| _setid:=_c
|? _par:=web_params_get();
   obj_ntab(_par) & var_pres('CUR_PRAC_SETID',_par)=_tSTRING
|| _setid:=_par.CUR_PRAC_SETID
|| _setid:=''
?};

_login:=app_info('web_user');

P_WEB_CL.index('LOGIN');
{! _lp:=1 .. 2
:: W pierwszym obrocie pętli zapamiętywane są wartości "międzysesyjne", w drugim - dla bieżącej sesji.
|! {? _next_session | _lp=2
   || {? _lp=1
      || _tcid:=_sesid:=_tabid:=''
      || _tcid:=app_info('web_tcid');
         _sesid:=app_info('web_sesid');
         _tabid:=app_info('web_tabid')
      ?};
      P_WEB_CL.prefix(_tcid,_sesid,_tabid,_setid,_login,);
      {? P_WEB_CL.first()
      || P_WEB_CL.P:=_p_ref;
         _result:=P_WEB_CL.put()
      || P_WEB_CL.blank(1);
         P_WEB_CL.TCID:=_tcid;
         P_WEB_CL.SESID:=_sesid;
         P_WEB_CL.TABID:=_tabid;
         P_WEB_CL.SETID:=_setid;
         P_WEB_CL.LOGIN:=_login;
         P_WEB_CL.P:=_p_ref;
         _result:=P_WEB_CL.add()
      ?}
   ?}
!};

_result


\save_cur_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Zapamiętuje bieżący rekord tabeli P jako konteks pracy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('set_p_web_cl','p_web',P_WEB_CX.P)


\load_cur_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Ustawia kontekst pracy pracownika zapamiętany w bieżącej lub w poprzedniej sesji.
::   WE: [_a] [STRING] - Identyfikator zestawu danych (patrz opis \get_p_web_cl/p_web.fml).
::       [_b] [NUMBER] - Tryb wsadowy (bez komunikatów):
::                         0 - Nie [domyślnie];
::                         1 - Tak.
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_tSTRING:=type_of('');
{? var_pres('_a')=_tSTRING
|| _setid:=_a
|? _par:=web_params_get();
   obj_ntab(_par) & var_pres('CUR_PRAC_SETID',_par)=_tSTRING
|| _setid:=_par.CUR_PRAC_SETID
|| _setid:=''
?};
_batch:=var_pres('_b')=type_of(0) & _b;

_result:=0;

P.use('pracowni');
P.prefix();
OSOBA.prefix();
UD_SKL.prefix();
STN.prefix();
F_ZATR.prefix();

_p_ref:=exec('get_p_web_cl','p_web',_setid);
{? _p_ref=null() | ~exec('is_prac_in_p_web_cx','p_web',_p_ref)
|| _p_ref:=exec('get_first_p_web_cx','p_web');
   exec('set_p_web_cl','p_web',_p_ref,,_setid)
?};

{? _p_ref<>null() & P.seek(_p_ref)
|| P_WEB_CX.P().OSOBA();
   P_WEB_CX.P().WYDZIAL();
   P_WEB_CX.P().ST();
   P_WEB_CX.P().F_ZATR();
   _result:=1
?};

{? _result
|| exec('set_p_web_cl','p_web',_p_ref,0,_setid)
|? ~_batch
|| FUN.emsg('Ustawienie kontekstu pracy zalogowanego użytkownika nie powiodło się.'@)
?};

_result


\osoba_ustaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Ustawia potrzebny index i zmienne globalne dot. osoby dla bieżącej obsługi
::   WE: _a [REFERENCE] - wskazanie na osobę
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_osoba:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};

GIODO_ED.TYP:='osoba';
OSOBA.index('OSOBA');
OSOBA.prefix();
{? OSOBA.seek(_osoba)
|| _result:=1;
   REF.OSOBA:=_osoba
|| REF.OSOBA:=null();
   FUN.info('Nie udało się ustalić rekordu wybranej osoby'@)
?};
_result


\x_grp_p_web_pwx_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Formuła "Przed obsługą" dla okien WEB_PWx tabeli P umieszczonych w oknie grupowym.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Zawsze zaczynamy, od przekazania parametrów "dalej".
web_params_set(web_params_get());

:: Ustawiam środowisko i
:: konieczne podczytanie zapamiętanego kontekstu tabeli P oraz OSOBA -
:: pola w okienku redagowania pochodzą z tabeli OSOBA
{? exec('env_wt','b_proces') & exec('load_cur_prac','p_web')
|| exec('osoba_ustaw','p_web',P.OSOBA)
?};
~~


\p_web_wer_wybierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Obsługa akcji/przycisku "Wybierz" z okna wertowania WEB_WER tabeli P_WEB_CX.
::   WE: [_a] [INTEGER] - Czy uruchamiamy funckję dla jednego wybranego wcześniej pracownika [domyślnie: 0 - nie).
::                        Jeśli tak, to zakładamy, że nie było pokazywane okno wyboru i parametry zostały ustawione w
::                        bieżącej obsłudze.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_onlyOne:={? var_pres('_a')=type_of(0) || _a || 0 ?};
{? ~_onlyOne & ~exec('exist','#record')
|| return()
?};

_params:=web_params_get(_onlyOne);
 _fml:={? var_pres('fml',_params)>0 || _params.fml || "" ?};

exec('save_cur_prac','p_web');
{? ~_onlyOne
|| P_WEB_CX.web_close('WEB_WER')
?};
{? exec('load_cur_prac','p_web') & exec('osoba_ustaw','p_web',P.OSOBA)
|| {? web_top_kind(1)='g'
::    Zakładamy, że odświeżana jest wizytówka w oknie grupowym.
   || web_top_update(1)
   ?}
?};

:: jeżeli przekazano formułę do wykonania to ją uruchamiamy
{? +_fml
|| web_params_set(_params);
   _fml()
?}


\p_web_btn_cntx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja zmieniająca kontekst danych pracownika.
::   WE: [_a] [FORMULA] - Formuła wykonywana przed wyborem pracownika. Jeżeli zwróci wartość 0, to wybór nie jest
::                        dokonywany (okno wertowania nie jest wyświetlane).
::       [_b] [FORMULA] - Formuła wykonywana po wyborze pracownika.
::       [_c] [STRING]  - rodzaj zależności ('W' - własne dane, 'P' - podwładni)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=web_params_get();
_ntab:=obj_ntab(_par);

_tRULE:=type_of("");

{? var_pres('_a')=_tRULE
|| _fml_b:=_a
|? _ntab & var_pres('P_WEB_WER_WYBIERZ_B',_par)=_tRULE
|| _fml_b:=_par.P_WEB_WER_WYBIERZ_B
|| _fml_b:="1"
?};

{? var_pres('_b')=_tRULE
|| _fml_a:=_b
|? _ntab & var_pres('P_WEB_WER_WYBIERZ_A',_par)=_tRULE
|| _fml_a:=_par.P_WEB_WER_WYBIERZ_A
|| _fml_a:="1"
?};

_rodzaj:={? var_pres('_c')=type_of('') || _c || ''  ?};

web_params_set(exec('obj_ntab_set','#array',web_params_get(),'fml',_fml_a));

{? exec('env_wt','b_proces') & exec('load_cur_prac','p_web') & _fml_b()
|| {? _rodzaj='P' | _rodzaj='W'
   || exec('p_web_cx_set_prefix','p_web',,'RODZAJ',_rodzaj)
   ?};
   P_WEB_CX.web_select('WEB_WER','#p_web_wer_cx',1)
?};
~~


\p_web_btn_cntx_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja zmieniająca kontekst danych pracownika, z możliwością wyboru danych "własnych".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_web_btn_cntx','p_web',,,'W')


\p_web_btn_cntx_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja zmieniająca kontekst danych pracownika, zmożliwością wyboru danych podwładnych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_web_btn_cntx','p_web',,,'P')


\p_web_cx_wer_wybx_wybierz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Obsługa akcji "Wybierz" z okna WEB_WYBX tabeli P_WEB_CX.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=web_params_get());
{? obj_ntab(_par) & var_pres('P_WEB_CX_WER_WYBX_WYBIERZ_A',_par)=type_of("")
|| _par.P_WEB_CX_WER_WYBX_WYBIERZ_A()
|| FUN.emsg('Błąd parametryzacji - brak parametru %1.'@ ['P_WEB_CX_WER_WYBX_WYBIERZ_A'])
?};
~~


\p_web_cx_wer_wybx_wybierz_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [18.02]
:: OPIS: Obsługa akcji "Wybierz" z okna WEB_WYBX tabeli P_WEB_CX.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=web_params_get());
{? obj_ntab(_par) & var_pres('P_WEB_CX_WEB_WYBX_WYBIERZ_BG',_par)=type_of("")
|| _par.P_WEB_CX_WEB_WYBX_WYBIERZ_BG()
|| FUN.emsg('Błąd parametryzacji - brak parametru %1.'@ ['P_WEB_CX_WEB_WYBX_WYBIERZ_BG'])
?};
0

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 698fa4cadf6c5f6f099d46a0c533abec5f1a1adc716a3ad86f45acf8bcf3aa97e78d59dfa8f70fe08efdbb1037fb1809b7b91293b4c140e0bddd29171ad0c2312145c56f93a7076d722b133dc40c17c93573334090e195f253ef8ed378f689aabd080fb62dd495bad03298ad2f15019139fee55931904eec03d954f75010e90d
