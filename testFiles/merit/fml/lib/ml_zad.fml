:!UTF-8
::(c) Macrologic SA oddział Wroclaw Wszelkie prawa zastrzeżone
::========================================================================================================================
::Nazwa pliku: ml_zad.fml
::Utworzony: 2009-04-14
::Autor: WS
::Systemy: FIKS,FIKS_B
::========================================================================================================================
::Zawartość: Formuły podstawowe do  obsługi Finanse i ksiegowość wersja budżetowa
::========================================================================================================================


\czy_wcon
::---------------------------------------------------------------------------------------------------------------------
::  UTW: WS [$1210]
:: OPIS:
::   WE:
::   WY:
::---------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? MLEX.FIKSB
|| exec('pw_kodsl','slo_slu',{? SLO.f_active>0 || SLO.f_size || SLO.size ?}>0);
   {? RS.find_key(SLU.WZ)
   || {? (RS.TAB<>'')&(_rodz:='ML_DZ,ML_RZ,ML_PG,ML_PP'*RS.TAB)
      || 1
      |? (RS.TAB<>'')&(_rodz:='ML_FUN,ML_ZAD,ML_PODZ,ML_DZLAN'*RS.TAB)
      || _wr:=exec('conslo','ml_zad',RS.TAB,#ROK_F.ref());
         {? _wr<>SLU.NAZ
         || FUN.info('Słownik '''+SLU.NAZ+''' nie jest zdefiniowany w roku '+ROK_F.NAZ+
               '\nNie można dodawać pozycji!'+
               '\n\nJest zdefiniowany słownik '''+_wr+''''+
               '\nSprawdź ustawienia parametrów budżetowych');
            _wyn:=0
         ?}
      ?}
   ?}
?};
_wyn


\conslo
::---------------------------------------------------------------------------------------------------------------------
::  UTW: WS [$1210]
:: OPIS: Zwraca nazwe słownika z MLCONNEC
::   WE: _a - akronim tabeli źródłowej
::       [_b] - kod roku
::---------------------------------------------------------------------------------------------------------------------
{? _<2 || _b:=0 ?};
_wr:=_id:=_tp:='';
   _rokk:=0;
   _con:=0;
   {? _a='ML_FUN'
   || _id:='FUN';
      {? ~_b || _rokk:=#ML_FUN.ROK ?};
      _tp:='BUD_ZAD';
      _con:=1
   |? _a='ML_ZAD'
   || _id:='ZAD';
      {? ~_b || _rokk:=#ML_ZAD.ROK ?};
      _tp:='BUD_ZAD';
      _con:=1
   |? _a='ML_PODZ'
   || _id:='PODZAD';
      {? ~_b || _rokk:=#ML_PODZ.ROK ?};
      _tp:='BUD_ZAD';
      _con:=1
   |? _a='ML_DZLAN'
   || _id:='DZIALAN';
      {? ~_b || _rokk:=#ML_DZLAN.ROK ?};
      _tp:='BUD_ZAD';
      _con:=1
   ?};
   {? _b>0 || _rokk:=_b ?};
   {? _con
   || _x:=MLCONNEC.ndx_tmp(,,'AT',,0,'NP',,0,'NR',,0,'TP',,0,'ID',,0);
      MLCONNEC.index(_x);
      MLCONNEC.clear;
      MLCONNEC.prefix('ROK_F', ref_name(ROK_F.ref), _rokk, _tp, _id);
      {? MLCONNEC.first
      || _wr:=MLCONNEC.WR
      ?};
      MLCONNEC.ndx_drop(_x)
   || _wr:='-'
   ?};
_wr


\budcorct
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Formuła sprawdza czy podana struktura budżetu zadaniowego istnieje, tzn czy
::       w podanej funkcji istnieje dane zadanie, w nim podzadanie, dalej działanie.
::       Jeżeli któryś z parametrów jest stringiem pustym lub go brak formuła przyjmuje,
::       że może tam znajdować sie dowolny symbol z określonego poziomu.
::   WE: _a funkcja, _b zadanie, _c podzadanie, _d dzialanie,
::       _e puste.
::       _f - ref do ROK_F - rok bilansowy
::       Wszystkie parametry są opcjonalne.
::   WY: 1 - ścieżka istnieje, ustawione odpowiednie rekordy w tabelach ML_FUN, ML_ZAD, ML_PODZ, ML_DZLAN
::       0 - nie istnieje
::-------------------------------------------------------------------------------------------------------------------
_wyn:=0; _rok_f:=null;
{? _<1 | (type_of(_a)<>2) || _a:='' ?};
{? _<2 | (type_of(_b)<>2) || _b:='' ?};
{? _<3 | (type_of(_c)<>2) || _c:='' ?};
{? _<4 | (type_of(_d)<>2) || _d:='' ?};
{? _<5 | (type_of(_e)<>2) || _e:='' ?};
{? _<6 | (type_of(_f)<>7) || _f:=SSTALE.AR ?};
ROK_F.cntx_psh;
ROK_F.prefix;
{? ROK_F.seek(_f)
|| {? _d<>''
   || ML_DZLAN.index('MLDZLARK');
      ML_DZLAN.prefix(ROK_F.ref,_d);
      {? ML_DZLAN.first
      || {! |?
              ML_DZLAN.PODZAD().ZAD().FUN();
               _wyn:={? _c<>'' || ML_PODZ.KOD=_c || 1 ?}
                    &{? _b<>'' || ML_ZAD.KOD =_b || 1 ?}
                    &{? _a<>'' || ML_FUN.KOD =_a || 1 ?};
               {? ~_wyn || ML_DZLAN.next ?}
         !}
      ?}
   |? _c<>''
   || ML_PODZ.index('MLPODZRK');
      ML_PODZ.prefix(ROK_F.ref,_c);
      {? ML_PODZ.first
      || {! |?
              ML_PODZ.ZAD().FUN();
              _wyn:= {? _b<>'' || ML_ZAD.KOD=_b || 1 ?}
                    &{? _a<>'' || ML_FUN.KOD=_a || 1 ?};
               {? ~_wyn || ML_PODZ.next ?}
         !}
      ?}
   |? _b<>''
   || ML_ZAD.index('MLZADRK');
      ML_ZAD.prefix(ROK_F.ref,_b);
      {? ML_ZAD.first
      || {! |?
              ML_ZAD.FUN();
              _wyn:={? _a<>'' || ML_FUN.KOD=_a || 1 ?};
               {? ~_wyn || ML_ZAD.next ?}
         !}
      ?}
   |? _a<>''
   || ML_FUN.index('MLFUNRK');
      ML_FUN.prefix(ROK_F.ref,_a);
      _wyn:=ML_FUN.first
   ?}
?};
ROK_F.cntx_pop;
_wyn


\uslo_pop
::---------------------------------------------------------------------------------------------------------------------
::  UTW: WS [$1210]
:: OPIS: Ustawia _b w pop_slo w wspol.fml
::   WE: _a RS.TAB
::---------------------------------------------------------------------------------------------------------------------
$('exec(\'aputbz\',\'ml_zad\','+{? _a='ML_FUN' || '0' |? _a='ML_ZAD' || '1' |? _a='ML_PODZ' || '2' || '3' ?}+')')


\spr_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Podczas poprawiania rekordów w tabelach bazowych objętych wzorcami
::       poprawia powiązane pozycje w słownikach użytkownika.
::       Rekord w tabeli bazowej musi być podczytany.
::   WE: _a - akronim tabeli zrodlowej
::       _b - poprzedni kod
::   WY: czy udało sie poprawić rekord w SLO
::----------------------------------------------------------------------------------------------------------------------
popwslo:=1;
_ind:=RS.ndx_tmp('',1,'TAB',,0,'TAB',,0,'WZ',,0);
RS.cntx_psh(); RS.index(_ind); RS.prefix(_a,_a);
{? RS.first()
|| SLU.cntx_psh(); SLU.index('WZORZEC');
   SLO.cntx_psh(); SLO.index('SL');
   _br:=0;
::   {? (RS.TAB<>'')&(_rodz:='ML_DZ,ML_RZ,ML_PG,ML_PP'*('_'+RS.TAB+'_'))
   {? (RS.TAB<>'')&(_rodz:='_ML_DZ_,_ML_RZ_,_ML_PG_,_ML_PP_'*('_'+RS.TAB+'_'))
   || _br:=1;
      _wr:=exec('tab_sl','ml_fiks',ROK_F.KOD,RS.WZ)
   || _wr:=exec('conslo','ml_zad',_a)
   ?};
   {! |?
      SLU.prefix(RS.WZ);
      {? SLU.first()
      || {! |?
            _kod:=($('{|'+_a+'|!'+RS.KOD+'|}'))();
            {? ((_br & (_wr*(','+SLU.NAZ+','))) | (_wr='-' | (_wr<>'' & _wr=SLU.NAZ))) & SLU.WZ=RS.WZ & (+_kod)=SLU.DL
            || SLO.prefix(SLU.ref());
               {? SLO.find_key(_b) & _b=SLO.KOD
               || {? SLO.count=0 | _b=_kod
                  || popwslo:=1
                  || exec('add_kom','#message','Pozycja '+SLO.KOD+' powiązana w słowniku użytkownika',4,'Powiązania',,1);
                     popwslo:=0
                  ?}
               ?}
            ?};
            popwslo & SLU.next()
         !}
      ?};
      popwslo & RS.next()
   !};
   SLU.cntx_pop(); SLO.cntx_pop()
?};
RS.ndx_drop(_ind);
RS.cntx_pop();
_popwslo:=popwslo; VAR_DEL.delete('popwslo');
_popwslo


\pop_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Podczas poprawiania rekordów w tabelach bazowych objętych wzorcami
::       poprawia powiązane pozycje w słownikach użytkownika.
::       Rekord w tabeli bazowej musi być podczytany.
::   WE: _a - akronim tabeli zrodlowej
::       _b - poprzedni kod
::   WY: czy udało się poprawić rekord w SLO
::----------------------------------------------------------------------------------------------------------------------
popwslo:=1;
_ind:=RS.ndx_tmp('',1,'TAB',,0,'TAB',,0,'WZ',,0);
RS.cntx_psh(); RS.index(_ind); RS.prefix(_a,_a);
{? RS.first()
|| SLU.cntx_psh(); SLU.index('WZORZEC');
   SLO.cntx_psh(); SLO.index('SL');
   _br:=0;
   {? (RS.TAB<>'')&(_rodz:='_ML_DZ_,_ML_RZ_,_ML_PG_,_ML_PP_'*('_'+RS.TAB+'_'))
   || _br:=1;
      _wr:=exec('tab_sl','ml_fiks',ROK_F.KOD,RS.WZ)
   || _wr:=exec('conslo','ml_zad',_a)
   ?};
:   _br:=0;_wr:='-';
   {! |?
      SLU.prefix(RS.WZ);
      {? SLU.first()
      || {! |?
            _kod:=($('{|'+_a+'|!'+RS.KOD+'|}'))();
            {? ((_br & (_wr*(','+SLU.NAZ+','))) | (_wr='-' | (_wr<>'' & _wr=SLU.NAZ))) & SLU.WZ=RS.WZ & (+_kod)=SLU.DL
            || SLO.prefix(SLU.ref());
               {? SLO.find_key(_b) & _b=SLO.KOD
               || ($('{? SLO.count=0 || SLO.KOD:={|'+_a+'|!'+RS.KOD+'|} ?}; SLO.TR:={|'+_a+'|!'+RS.TR+'|}; popwslo:=SLO.put()'))()
               ?}
            ?};
            popwslo & SLU.next()
         !}
      ?};
      popwslo & RS.next()
   !};
   SLU.cntx_pop(); SLO.cntx_pop()
?};
RS.ndx_drop(_ind);
RS.cntx_pop();
_popwslo:=popwslo; VAR_DEL.delete('popwslo');
_popwslo


\akt_kody
::---------------------------------------------------------------------------------------------------------------------
::  UTW: WS [$1210]
:: OPIS: Aktualizuje kody w powiązanych słownikach
::   WE: _a pozycja wywołania
::          0-powiązania do funkcji - aktualizuje zadania
::          1-powiązania do zadania - aktualizuje podzadania
::          2-powiązania do podzadania - aktualizuje dzialania
::       _b ref do pozycji
::---------------------------------------------------------------------------------------------------------------------
_poz:=_a;
{? _poz=0
|| _ind:=ML_ZAD.ndx_tmp('',1,'ROK',,0,'FUN',,0);
   ML_ZAD.index(_ind);
   ML_ZAD.prefix(ML_FUN.ROK,_b);
   {? ML_ZAD.first
   || {!
      |?
         _kod:=ML_ZAD.KOD;
         ML_ZAD.KOD:=ML_ZAD.FUN().KOD+(ML_ZAD.KOD+2);
         {? (~exec('spr_slo','ml_zad','ML_ZAD',_kod) | ~exec('pop_slo','ml_zad','ML_ZAD',_kod))
         || {? do_state() || undo() ?}
         || ML_ZAD.put;
            exec('akt_kody','ml_zad',1,ML_ZAD.ref)
         ?};
         ML_ZAD.next
      !}
   ?};
   ML_ZAD.ndx_drop(_ind)
|? _poz=1
|| _ind:=ML_PODZ.ndx_tmp('',1,'ROK',,0,'ZAD',,0);
   ML_PODZ.index(_ind);
   ML_PODZ.prefix(ML_ZAD.ROK,_b);
   {? ML_PODZ.first
   || {!
      |?
         _kod:=ML_PODZ.KOD;
         ML_PODZ.KOD:=ML_PODZ.ZAD().KOD+(ML_PODZ.KOD+2);
         {? (~exec('spr_slo','ml_zad','ML_PODZ',_kod) | ~exec('pop_slo','ml_zad','ML_PODZ',_kod))
         || {? do_state() || undo() ?}
         || ML_PODZ.put;
            exec('akt_kody','ml_zad',2,ML_PODZ.ref)
         ?};
         ML_PODZ.next
      !}
   ?};
   ML_PODZ.ndx_drop(_ind)
|? _poz=2
|| _ind:=ML_DZLAN.ndx_tmp('',1,'ROK',,0,'PODZAD',,0);
   ML_DZLAN.index(_ind);
   ML_DZLAN.prefix(ML_PODZ.ROK,_b);
   {? ML_DZLAN.first
   || {!
      |?
         _kod:=ML_DZLAN.KOD;
         ML_DZLAN.KOD:=ML_DZLAN.PODZAD().KOD+(ML_DZLAN.KOD+2);
         {? (~exec('spr_slo','ml_zad','ML_DZLAN',_kod) | ~exec('pop_slo','ml_zad','ML_DZLAN',_kod))
         || {? do_state() || undo() ?}
         || ML_DZLAN.put
         ?};
         ML_DZLAN.next
      !}
   ?};
   ML_DZLAN.ndx_drop(_ind)
?}


\aputbz
::---------------------------------------------------------------------------------------------------------------------
::  UTW: WS [$1210]
:: OPIS: Po akcji popraw pola ML_FUN, ML_ZAD, ML_PODZ, ML_DZLAN
::   WE: _a miejsce wywołania
::          0-funkcja
::          1-zadanie
::          2-podzadanie
::          3-dzialanie
::---------------------------------------------------------------------------------------------------------------------
{? _a=0
|| _kod:=ML_FUN.KOD;
   {? ML_FUN.edit
   || do();
      ML_FUN.put();
      exec('akt_kody','ml_zad',1,ML_FUN.ref);
      {? ~exec('spr_slo','ml_zad','ML_FUN',_kod) | ~exec('pop_slo','ml_zad','ML_FUN',_kod)
      || undo()
      ?};
      end()
   ?}
|? _a=1
|| _kod:=ML_ZAD.KOD;
   {? ML_ZAD.edit
   || do();
      ML_ZAD.KOD:=ML_ZAD.FUN().KOD+MLEX_OKN.KODZ;
      ML_ZAD.put();
      exec('akt_kody','ml_zad',1,ML_ZAD.ref);
      {? ~exec('spr_slo','ml_zad','ML_ZAD',_kod) | ~exec('pop_slo','ml_zad','ML_ZAD',_kod)
      || undo()
      ?};
      end()
   ?}
|? _a=2
|| _kod:=ML_PODZ.KOD;
   {? ML_PODZ.edit
   || do();
      ML_PODZ.KOD:=ML_PODZ.ZAD().KOD+MLEX_OKN.KODPZ;
      ML_PODZ.put();
      exec('akt_kody','ml_zad',1,ML_PODZ.ref);
      {? ~exec('spr_slo','ml_zad','ML_PODZ',_kod) | ~exec('pop_slo','ml_zad','ML_PODZ',_kod)
      || undo()
      ?};
      end()
   ?}
|? _a=3
|| _kod:=ML_DZLAN.KOD;
   {? ML_DZLAN.edit
   || do();
      ML_DZLAN.KOD:=ML_DZLAN.PODZAD().KOD+MLEX_OKN.KODDZ;
      ML_DZLAN.put();
      exec('akt_kody','ml_zad',1,ML_DZLAN.ref);
      {? ~exec('spr_slo','ml_zad','ML_DZLAN',_kod) | ~exec('pop_slo','ml_zad','ML_DZLAN',_kod)
      || undo()
      ?};
      end()
   ?}
?}


\conn
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Pobranie wartości z MLCONNEC
::   WE: _a - grupa
::       _b - parametr
::       _c - kod roku do sprawdzenia
::-------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh();
{? var_pres('_c')<0 || _rok:=SSTALE.AR().KOD || _rok:=_c ?};
_wyn:='';
MLCONNEC.cntx_psh(); ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA,_rok);
{? ROK_F.first()
|| MLCONNEC.index('ATNPNRTP'); MLCONNEC.prefix('ROK_F', ref_name(ROK_F.ref), #ROK_F.ref(), _a,_b);
   {? MLCONNEC.first()
   || _wyn:=MLCONNEC.WR
   ?}
?};
ROK_F.cntx_pop(); MLCONNEC.cntx_pop();
_wyn


\bz_get
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Formula uzupelnia tabele T_BZ
::-------------------------------------------------------------------------------------------------------------------
{? T_BZ.last
|| {!|? T_BZ.del !}
?};
ML_FUN.cntx_psh;     ML_FUN.index('MLFUNRK');
ML_ZAD.cntx_psh;
ML_PODZ.cntx_psh;
ML_DZLAN.cntx_psh;
ML_ZAD.index('MLZADRF');
ML_PODZ.index('MLPODZRF');
ML_DZLAN.index('MLDZLARF');

ML_FUN.prefix(ROK_F.ref);
{? ML_FUN.first
|| {!|?
      T_BZ.blank;
      T_BZ.TREE:=null;
      T_BZ.POZ:=0;
      T_BZ.REF:=#ML_FUN.ref;
      T_BZ.BUD_KOD:=ML_FUN.KOD;
      T_BZ.BUD_KODW:=ML_FUN.KOD+2;
      T_BZ.BUD_KODC:=ML_FUN.KOD;
      T_BZ.BUD_NAZ:=ML_FUN.NAZWA;
      T_BZ.BUD_NAZP:=ML_FUN.P_NAZ;

      {? T_BZ.add
      || _treer0:=T_BZ.ref;
          ML_ZAD.prefix(ROK_F.ref,ML_FUN.ref);
          {? ML_ZAD.first
          || {!|?
                T_BZ.TREE:=_treer0;
                T_BZ.POZ:=1;
                T_BZ.REF:=#ML_ZAD.ref;
                T_BZ.BUD_KOD:=ML_ZAD.KOD;
                T_BZ.BUD_KODW:=ML_ZAD.KOD+2;
                T_BZ.BUD_KODC:=ML_ZAD.FUN().KOD+'-'+ML_ZAD.KOD;
                T_BZ.BUD_NAZ:=ML_ZAD.NAZWA;
                T_BZ.BUD_NAZP:=ML_ZAD.P_NAZ;
                {? T_BZ.add
                || _treer1:=T_BZ.ref;
                   ML_PODZ.prefix(ROK_F.ref,ML_ZAD.ref);
                   {? ML_PODZ.first
                   || {!|?
                         T_BZ.TREE:=_treer1;
                         T_BZ.POZ:=2;
                         T_BZ.REF:=#ML_PODZ.ref;
                         T_BZ.BUD_KOD:=ML_PODZ.KOD;
                         T_BZ.BUD_KODW:=ML_PODZ.KOD+2;
                         T_BZ.BUD_KODC:=ML_PODZ.ZAD().FUN().KOD+'-'+ML_PODZ.ZAD().KOD+'-'+ML_PODZ.KOD;
                         T_BZ.BUD_NAZ:=ML_PODZ.NAZWA;
                         T_BZ.BUD_NAZP:=ML_PODZ.P_NAZ;
                         {? T_BZ.add
                         || _treer2:=T_BZ.ref;
                            ML_DZLAN.prefix(ROK_F.ref,ML_PODZ.ref);
                            {? ML_DZLAN.first
                            || {!|?
                                  T_BZ.TREE:=_treer2;
                                  T_BZ.POZ:=3;
                                  T_BZ.REF:=#ML_DZLAN.ref;
                                  T_BZ.BUD_KOD:=ML_DZLAN.KOD;
                                  T_BZ.BUD_KODW:=ML_DZLAN.KOD+2;
                                  T_BZ.BUD_KODC:=ML_DZLAN.PODZAD().ZAD().FUN().KOD+'-'+ML_DZLAN.PODZAD().ZAD().KOD+'-'+ML_DZLAN.PODZAD().KOD+'-'+ML_DZLAN.KOD;
                                  T_BZ.BUD_NAZ:=ML_DZLAN.NAZWA;
                                  T_BZ.BUD_NAZP:=ML_DZLAN.P_NAZ;
                                  {? T_BZ.add
                                  || 1
                                  ?};
                                  ML_DZLAN.next
                               !}
                            ?}
                         ?};
                         ML_PODZ.next
                      !}
                   ?}
                ?};
                ML_ZAD.next
             !}
          ?}
      ?};
      ML_FUN.next
   !}
?};
ML_FUN.cntx_pop; ML_ZAD.cntx_pop; ML_PODZ.cntx_pop; ML_DZLAN.cntx_pop;
T_BZ.first()


\ob_bz
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Formula tworzy tabele T_BZ do obslugi wartosci budzetu zadaniowego
::-------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('T_BZ','POZ_BZ');
:: definiowanie kopii tabel dla struktury drzewiastej
{? var_pres('T_BZ')<=0
|| _defin:=1
|| _defin:=0
?};
{? var_pres('POZ_BZ')<=0
|| _definp:=1
|| _definp:=0
?};
{? _defin
||
   T_BZ:=tab_tmp(,'TREE'   ,'TREE_REF','Drzewo',
                   'POZ'    ,'INTEGER','Poziom',
                   'BUD_KOD','STRING[15]','Kod',
                   'BUD_KODW','STRING[2]','Kod wprowadzany',
                   'BUD_KODC','STRING[35]','Kod złożony',
                   'BUD_KODP','STRING[12]','Kod pomocniczy',
                   'BUD_NAZ','STRING[80]','Nazwa',
                   'BUD_NAZP','STRING[255]','Nazwa pełna',
                   'KWOTA'  ,'REAL','Kwota',
                   'REF'    ,'INTEGER','Ref do rekordu');
:uzupelnienie danymi
   exec('bz_get','ml_zad')
?};

{? _definp
|| POZ_BZ:=1;
   _w_acr:=T_BZ.mk_sel('Kwoty budżetu zadaniowego do pozycji dokumentu','P',,'tree_bz2',,,,1);
   __w_acr2:=_w_acr;
   T_BZ.win_fld(_w_acr,,'BUD_KOD',,,22,,,'KOD');
   T_BZ.win_fld(_w_acr,,'BUD_NAZ',,,80,,,'Nazwa');
   T_BZ.win_fld(_w_acr,,'KWOTA',,,14,2,,'Kwota');
   T_BZ.win_act(_w_acr,,'Formuła','zwiń/Rozwiń',,'Zwija/rozwija wszystkie gałęzie',"",
           "T_BZ.prefix();
            {! |? {? T_BZ.TREE || T_BZ.seek(T_BZ.TREE,) || 0 ?} !};
            {? T_BZ.tr_state || T_BZ.tr_set(0,__w_acr2) || T_BZ.tr_set(1,__w_acr2) ?}
           ");
   T_BZ.win_act(_w_acr,,'Rekord','',,'',"exec('rekprzed','color','MBZ#01#')");
   T_BZ.win_act(_w_acr,,'Formuła','Wyjście',,,"sel_exit");
   T_BZ.win_act(_w_acr,,'Szukaj');

   T_BZ.win_act(_w_acr,,'Formuła','Podaj kwotę',,'Kwota',
      "{? exec('sost_poz','ml_zad') || 1 || FUN.emsg('Kwotę można podać tylko na najniższym poziomie.','UWAGA!'); 0 ?}",
      "exec('bz_popk','ml_zad')",1);
   T_BZ.win_act(_w_acr,,'Formuła','Legenda',,,"exec('legenda','color','MBZ#0')");
   T_BZ.tr_fml(__w_acr2,,"{? _a=-1 || 1 || _a ?}");
   T_BZ.win_sel(_w_acr);

   _acr:=T_BZ.mk_edit(,0);
   T_BZ.win_edit(_acr);

   T_BZ.win_efld(_acr, T_BZ, 'BUD_KOD',,,8,,1,'Kod');
   T_BZ.win_efld(_acr, T_BZ, 'BUD_NAZ',,,40,,1,'Nazwa');
   T_BZ.win_efld(_acr, T_BZ, 'KWOTA',,,20,2,,'Kwota');
   T_BZ.fld_ebtn(_acr, 'text=Kwota pozosała,icon=xwin16.png:12',"__Suma:=exec('sum_tbzs','ml_zad',T_BZ.ref);POZ.SUM-__Suma");
   T_BZ.win_ebtn(_acr, 'text=F2',"'key:F2'");
   1
?}


\bz_popk
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Formula edytuje kwote w tabeli T_BZ
::-------------------------------------------------------------------------------------------------------------------
wyw:=T_BZ.POZ;
_wyn:=0;
{? wyw=0
|| T_BZ.hdr_edit('Kwota dla funkcji')
|? wyw=1
|| T_BZ.hdr_edit('Kwota dla zadania')
|? wyw=2
|| T_BZ.hdr_edit('Kwota dla podzadania')
|? wyw=3
|| T_BZ.hdr_edit('Kwota dla działania')
?};
__Suma:=exec('sum_tbzs','ml_zad',null);
{? T_BZ.KWOTA=0 || T_BZ.KWOTA:=POZ.SUM-__Suma ?};
_wyn:={? T_BZ.edit("T_BZ.put;__Suma:=exec('sum_tbzs','ml_zad',null);
            {? __Suma>POZ.SUM
            || FUN.ask('Suma podanych kwot \njest większa niż na pozycji dokumentu o:\n'+
                  form(__Suma-POZ.SUM,,2,' ')+'\nCzy kontynuować?') || 1
            ?}")
      || T_BZ.put
      ?};
&__Suma;
exec('sum_t_bz','ml_zad');
T_BZ.hdr_edit()


\sum_t_bz
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Tworz/uzueplnia pozycje sumujaca w t_bz
::   WE: _a: 1- wszystkie pozycje (domyslnie); 0 - tylko wypelnione
::-------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>1 || _a:=1 ?};
T_BZ.cntx_psh;
_aktr:=T_BZ.ref;
_tin:=T_BZ.ndx_tmp('',1,'BUD_KOD',,0,'BUD_KOD',,0);
T_BZ.index(_tin);

{? ~T_BZ.find_key('Suma pozycji')
||   T_BZ.blank;
     T_BZ.TREE:=null;
     T_BZ.POZ :=0;
     T_BZ.REF :=0;
     T_BZ.KWOTA:=0;
     T_BZ.BUD_KOD:='Suma pozycji';
     T_BZ.BUD_KODC:='';
     T_BZ.BUD_NAZ:='=';

     T_BZ.add
?};
T_BZ.cntx_pop;
suma:=0;
T_BZ.for_each("
  {? ~exec('sost_poz','ml_zad')
  ||   T_BZ.KWOTA:=0;
       T_BZ.put
  ?}
  ");
T_BZ.for_each("
  {? T_BZ.BUD_KOD<>'Suma pozycji' & exec('sost_poz','ml_zad')
  ||   suma+=T_BZ.KWOTA;
       {? T_BZ.POZ<>0
       ||   _kwota:=T_BZ.KWOTA;
            T_BZ.cntx_psh;
            {!
             |?
               {? T_BZ.POZ<>0 & T_BZ.seek(T_BZ.TREE,)
               ||   T_BZ.KWOTA+=_kwota;
                    T_BZ.put;
                    1
               || 0
               ?}
            !};
            T_BZ.cntx_pop
       ?}
  ?}
");
T_BZ.cntx_psh;
T_BZ.index(_tin);
{? T_BZ.find_key('Suma pozycji')
||   T_BZ.KWOTA:=suma;
     T_BZ.put
?};
{? _a<>1
|| {? T_BZ.last()
   || {!
      |?
         {? T_BZ.KWOTA=0 || T_BZ.del() || T_BZ.prev() ?}
      !}
   ?}
?};
T_BZ.ndx_drop(_tin);
&suma;
T_BZ.cntx_pop;
T_BZ.seek(_aktr)


\sum_tbzs
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Tworz/uzueplnia pozycje sumujaca w t_bz
::   WE: _a ref do T_BZ ktory pomijamy
::-------------------------------------------------------------------------------------------------------------------
suma:=0;
__Reftbz:=_a;
T_BZ.cntx_psh;
T_BZ.for_each("
  {? T_BZ.ref<>__Reftbz & T_BZ.BUD_KOD<>'Suma pozycji' & exec('sost_poz','ml_zad')
  ||   suma+=T_BZ.KWOTA
  ?}
");
_wyn:=suma;
&suma; &__Reftbz;
T_BZ.cntx_pop;
_wyn


\sost_poz
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Sprawdza czy wybrany pozycja jest na ostatnim poziomie drzewa
::-------------------------------------------------------------------------------------------------------------------
_poz:=T_BZ.POZ;
_wyn:=0;
T_BZ.cntx_psh;
T_BZ.prefix();
_wyn:={? T_BZ.prefix(T_BZ.ref);T_BZ.first || 0 || 1 ?};
T_BZ.cntx_pop;
_wyn


\zbz_get
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Pobiera wartosci do T_BZ z ML_BZAD
::   WE: _a - ODD, _b - POZ.ref, _c - OKRO_F.ref
::-------------------------------------------------------------------------------------------------------------------
_rok_f:=SSTALE.AR;
ROK_F.cntx_psh(); OKRO_F.cntx_psh();  ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
OKRO_F.index('ROK');OKRO_F.prefix();
_wyn:=1;
{? ROK_F.seek(_rok_f)
|| {? var_pres('_c')<0 || _c:=SSTALE.AO ?};
   {? OKRO_F.seek(_c)
   || {? _<1 || _a:=POZ.DOK().ODD;
                _b:=POZ.ref
      |? _<2 || _b:=POZ.ref
      ?};

      ML_BZAD.index('MLBZOKRP');
      ML_BZAD.prefix(OKRO_F.ref,_b);
      T_BZ.cntx_psh;
      _tin:=T_BZ.ndx_tmp('',1,'BUD_KODC',,0,'BUD_KODC',,0);
      T_BZ.index(_tin);
      {? ML_BZAD.first
      || {!|?
            _kodc:=ML_BZAD.FUN().KOD;
            _kodc+={? ML_BZAD.ZAD    <>null || '-'+ML_BZAD.ZAD().KOD     || '' ?};
            _kodc+={? ML_BZAD.PODZAD <>null || '-'+ML_BZAD.PODZAD().KOD  || '' ?};
            _kodc+={? ML_BZAD.DZIALAN<>null || '-'+ML_BZAD.DZIALAN().KOD || '' ?};
            {? T_BZ.find_key(_kodc,_kodc)
            || T_BZ.KWOTA:=ML_BZAD.MA+ML_BZAD.WN;
               T_BZ.put
            ?};
            ML_BZAD.next
         !}
      ?};
      T_BZ.cntx_pop;
      T_BZ.ndx_drop(_tin)
   || FUN.emsg('Nie znaleziono okresu');
      _wyn:=0
   ?}
|| FUN.emsg('Nie znaleziono roku');
   _wyn:=0
?};
ROK_F.cntx_pop(); OKRO_F.cntx_pop();
_wyn


\dod_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Zapisuje do ML_BZAD po redakcji POZ
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? POZ.KOM().KS().BZ='R' || _wyn:=exec('zbz_dodp','ml_zad') ?}


\zbz_dodp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Zapisuje wartosci z T_BZ do ML_BZAD
::   WE: _a - ODD,
::       _b - POZ.ref,
::       _c - strona,
::       _d - waluta
::       [_e] - OKRO_F.ref()
::       [_f] - ROK_F.ref()
::----------------------------------------------------------------------------------------------------------------------
_wyn:=_dalej:=1;
{? var_pres('_a')<>7 || _a:=POZ.DOK().ODD ?};
{? var_pres('_b')<>7 || _b:=POZ.ref() ?};
{? var_pres('_c')<>2 || _c:=POZ.STR ?};
{? var_pres('_d')<>7 || _d:={? POZ.WAL=null() || FINFO.NAROD || POZ.WAL ?} ?};
{? var_pres('_e')<>7 || _e:=SSTALE.AO ?};
{? var_pres('_f')<>7 || _f:=SSTALE.AR ?};

_rok_f:=_f;
ROK_F.cntx_psh(); OKRO_F.cntx_psh();  ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); OKRO_F.index('ROK');
OKRO_F.prefix();
KS.cntx_psh();
KS.index('SYM');  KS.prefix();

{? ROK_F.seek(_rok_f)
|| {? OKRO_F.seek(_e) & KS.find_key(ROK_F.ref, ROK_F.SYNT+POZ.KON)
   ||
      _typ:=exec('typ_kon','ml_conn',POZ.KON);
      _tr:={? do_state()=0 || 1 || 0 ?};
      {? _tr || do() ?};

      ML_BZAD.index('MLBZOKRP');

      suma:=0;
      MLEX_OKN.BUDZO:='';
      T_BZ.for_each("{? T_BZ.KWOTA<>0 & T_BZ.BUD_KOD<>'Suma pozycji' & exec('sost_poz','ml_zad') || suma+=T_BZ.KWOTA; MLEX_OKN.BUDZO+=T_BZ.BUD_KOD+': '+form(T_BZ.KWOTA,,2)+'; ' ?}");

      ML_BZAD.prefix(OKRO_F.ref,_b);
      {? ML_BZAD.first || {!|? ML_BZAD.del !} ?};
      _str:={? -(1+_c)='m'
            || 1
            || 0
            ?};
      {? suma<>0 & KS.BZ<>'N'
      || {? T_BZ.first
         || {!|?
               {? _wyn & T_BZ.KWOTA<>0 & T_BZ.BUD_KOD<>'Suma pozycji' & exec('sost_poz','ml_zad')
               || ML_BZAD.blank;
                  ML_BZAD.POZ:=_b;
                  ML_BZAD.ODD:=_a;
                  ML_BZAD.OKR:=OKRO_F.ref();
                  ML_BZAD.MA:=ML_BZAD.WN:=0;
                  {? _str
                  || ML_BZAD.MA:=T_BZ.KWOTA
                  || ML_BZAD.WN:=T_BZ.KWOTA
                  ?};
                  ML_BZAD.WAL:=_d;
                  ML_BZAD.TYP:=_typ;
                  {? exec('bz_pfind','ml_zad',T_BZ.POZ,T_BZ.REF)
                  || ML_BZAD.FUN:=ML_BZAD.ZAD:=ML_BZAD.PODZAD:=ML_BZAD.DZIALAN:=null();
                     {? T_BZ.POZ=0
                     || ML_BZAD.FUN    :=ML_FUN.ref()
                     |? T_BZ.POZ=1
                     || ML_BZAD.FUN    :=ML_ZAD.FUN;
                        ML_BZAD.ZAD    :=ML_ZAD.ref()
                     |? T_BZ.POZ=2
                     || ML_BZAD.FUN    :=ML_PODZ.ZAD().FUN;
                        ML_BZAD.ZAD    :=ML_PODZ.ZAD;
                        ML_BZAD.PODZAD :=ML_PODZ.ref()
                     |? T_BZ.POZ=3
                     || ML_BZAD.FUN    :=ML_DZLAN.PODZAD().ZAD().FUN;
                        ML_BZAD.ZAD    :=ML_DZLAN.PODZAD().ZAD;
                        ML_BZAD.PODZAD :=ML_DZLAN.PODZAD;
                        ML_BZAD.DZIALAN:=ML_DZLAN.ref()
                     || _wyn:=0
                     ?};
                     _wyn:=ML_BZAD.add(1)
                  |? T_BZ.BUD_KOD='Suma pozycji'
                  || _wyn:=1
                  || FUN.emsg('Błąd struktury budżetu zadaniowego!\n Nie znalezioniono rekordu.','UWAGA!');
                     _wyn:=0
                  ?}
               ?};
               T_BZ.next
            !}
         ?}
      ?};
      &suma;
      {? ~_wyn
      || FUN.emsg('Wystąpił błąd w czasie przepisywania do ML_BZAD \n Przepisanie anulowano.','UWAGA!');
         undo
      ?};
      {? _tr
      || end
      ?};
      VAR_DEL.delete('T_BZ','POZ_BZ')
   || FUN.emsg('Nie znaleziono okresu');
      _wyn:=0
   ?}
|| FUN.emsg('Nie znaleziono roku');
   _wyn:=0
?};
KS.cntx_pop();
ROK_F.cntx_pop(); OKRO_F.cntx_pop();
_wyn


\bz_pfind
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Formula znajduje rekord tabeli w strukturze budzetu zadaniowego
::   WE: _a numer pozycji w T_ZB, _b ref do powiazanej tabeli
::   WY: exec('bz_pfind','ml_zad',T_BZ.POZ,T_BZ.REF)
::-------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_poz:=_a;
_ref:=_b;
ML_FUN.prefix();
ML_ZAD.prefix();
ML_PODZ.prefix();
ML_DZLAN.prefix();
{? _poz=0
|| _wyn:=ML_FUN.seek(_ref,ML_FUN.name)
|? _poz=1
|| _wyn:=ML_ZAD.seek(_ref,ML_ZAD.name)
|? _poz=2
|| _wyn:=ML_PODZ.seek(_ref,ML_PODZ.name)
|? _poz=3
|| _wyn:=ML_DZLAN.seek(_ref,ML_DZLAN.name)
?};
_wyn


\mlbzaddod
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Dla zapisow z analitykami lub wyroznikami opartymi o klasyfikacje  struktury budzetu zadaniowego formula
::       tworzy dodatkowe rekordy w tabeli ML_BZAD.
::   WE: _a - tryb przetwarzania: 1 - formula odtwarzajaca, 0 - ksiegowanie
::       _b - OKRO_F.ref()
::       [_c] - 0 - wykonanie operacji (domyslnie); 1 - tryb kontroli bez operacji.
::       [_d] - rodzaj komunukatow dla zmiennej KOMT - 1 - normalne, 0 - skrocone jednolinijkowe
::   WY: 0/1
::-------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_tryb:=POZ.KOM().KS().BZ;
{? var_pres('_c')<>1 || _c:=0 ?};
{? _tryb='A'
|| OKRO_F.cntx_psh();OKRO_F.index('ROK'); OKRO_F.prefix();
   {? var_pres('_b')<=2 || _b:=SSTALE.AO ?};
   {? var_pres('_d')<>1 || _d:=1 ?};
   {? OKRO_F.seek(_b)
   || {? ~_c || exec('mlbzadusu','ml_zad',,_tryb,OKRO_F.ref()) ?};
      _wyn:=_dalej:=_msg:=1;
      _rok_f:=null();
      _licznik:=0;
      _kodslo:=_mlgrtyp:='';
      {? _>0 & (type_of(_a)=1) & _a
      || _msg:=_a;
         _rok_f:=ROK_F.ref()
      || _msg:=0;
         _rok_f:=SSTALE.AR
      ?};
      ML_BZAD.index('MLBZOKRP'); ML_BZAD.prefix(OKRO_F.ref,POZ.ref);
      _typ:='';
      _str:=_komun:='';
      KS.cntx_psh();
      POW.cntx_psh();
      ROK_F.cntx_psh();
      ROK_F.clear();
      {? ROK_F.seek(_rok_f)
      || _typ:=exec('typ_kon','ml_conn',POZ.KON);

:1)sekcja dla konta o analityce zwiazanej z klasyfikacja budzetowa
         _fun:=_zad:=_podz:=_dlan:='';
         KS.index('SYM');  KS.prefix();
         KS.find_key(ROK_F.ref, ROK_F.SYNT+POZ.KON);
         _ciag:=ROK_F.SYNT-POZ.KON;
         BUD.cntx_psh();
         BUD.index('KS'); BUD.prefix(KS.ref);
         {? BUD.first()
         || {!
            |? _ciag:=(+ROK_F.SEP)-_ciag; _licznik+=1;
               _kodslo:=BUD.SLU().SLU().DL+_ciag;
               _ciag:=BUD.SLU().SLU().DL-_ciag;
               {? BUD.SLU().SLU().WZ='Działanie'
               || _dlan:=_kodslo; _mlgrtyp:='DLAN'
               |? BUD.SLU().SLU().WZ='Podzadanie'
               || _podz:=_kodslo; _mlgrtyp:='PODZ'
               |? BUD.SLU().SLU().WZ='Zadanie'
               || _zad:=_kodslo; _mlgrtyp:='ZAD'
               |? BUD.SLU().SLU().WZ='Funkcja'
               || _fun:=_kodslo; _mlgrtyp:='FUN'
               || _mlgrtyp:='USE'
               ?};
               BUD.next()
            !};
            {? ((_dlan<>'')|(_podz<>'')|(_zad<>'')|(_fun<>''))
            || {? exec('budcorct','ml_zad',_fun,_zad,_podz,_dlan,,ROK_F.ref())
               ||
                  {? ~_c
                  || ML_BZAD.blank();
                     ML_BZAD.ODD:=POZ.DOK().ODD;
                     ML_BZAD.OKR:=OKRO_F.ref();
                     ML_BZAD.WAL:={? POZ.WAL=null() || FINFO.NAROD || POZ.WAL ?};
                     ML_BZAD.TYP:=_typ; ML_BZAD.FUN:=ML_FUN.ref();
                     {? _zad <>'' || ML_BZAD.ZAD:=ML_ZAD.ref() ?};
                     {? _podz<>'' || ML_BZAD.ZAD:=ML_ZAD.ref(); ML_BZAD.PODZAD:=ML_PODZ.ref() ?};
                     {? _dlan<>'' || ML_BZAD.ZAD:=ML_ZAD.ref(); ML_BZAD.PODZAD:=ML_PODZ.ref(); ML_BZAD.DZIALAN:=ML_DZLAN.ref() ?};
                     {? POZ.STR='Wn'
                     || ML_BZAD.WN:=POZ.SUM
                     || ML_BZAD.MA:=POZ.SUM
                     ?};
                     _wyn:=ML_BZAD.add(1);
                     {? ~_wyn
                     || _komun:='\nBłąd dodania pozycji. ';
                        {? _msg=0
                        || {? KOMT=''
                           || KOMT:={? _d=1
                                    || '\nDla konta '+POZ.KON +' w dokumencie: '+POZ.DOK().NK +' wystąpił wyjątek.'+_komun
                                    || 'Pozycja '+$POZ.POZ+' dla konta '+POZ.KON +' wystąpił wyjątek.'
                                    ?}
                           ?}
                        || FUN.emsg('Dla konta '+POZ.KON +' w dokumencie: '+POZ.DOK().NK +' wystąpił wyjątek.'+_komun,'Uwaga !')
                        ?}
                     ?}
                  ?}
               || _komun:='\nNiespójność struktury klasyfikacji budżetu zadaniowego dla kont. ';
                  {? _msg=0
                  || {? KOMT=''
                     || KOMT:={? _d
                              || '\nDla konta '+POZ.KON +' w dokumencie: '+POZ.DOK().NK +' wystąpił wyjątek.'+_komun
                              || 'Pozycja '+$POZ.POZ+' dla konta '+POZ.KON+' niespójność struktury zadaniowej.'
                              ?}
                     ?}
                  || FUN.emsg('Dla konta '+POZ.KON +' w dokumencie: '+POZ.DOK().NK +' wystąpił wyjątek.'+_komun,'Uwaga !')
                  ?};
                  _wyn:=0
               ?}
            ?}
         ?};
         BUD.cntx_pop();

:2)sekcja dla konta o wyroznikach klasyfikacji budzetu zadaniowego. Zalozono ze nie ma pozycji zwiazanych z
::FUN, ZAD, PODZAD, DZIALAN
::jednoczesnie na koncie i na wyroznikach.
         POW.index('POZ');  POW.prefix(POZ.ref());

: zapisanie ilosci rozdzielnikow na poszczegolnych poziomach i "pierwszych"
: elementow na kazdym poziomie. _lp oznacza ILOSC wykorzystywanych przez
: wyrozniki TYPOW elementów klasyfikacji
         {? POW.first()
         || _budpw:=_licz:=_i:=_kw:=0;
            'moze byc tylko jeden rozdzielnik wyroznika klasyfikacji budzetu zadaniowego';
            _rozdzielnik:='';
            KS_W.index('LP');
            KS_W.prefix(KS.ref);
            {? KS_W.first()
            || {!
               |? {? 'FunkcjaZadaniePodzadanieDziałanie'*KS_W.SLU().SLU().WZ
                  || _budpw:=1;
                     {? (KS_W.ROZDZ='T') |(exec('roz_bo','mlxstan',POZ.ref(),KS_W.LP,KS_W.SLU,OKRO_F.ref())>1)
                      || _rozdzielnik:=KS_W.SLU().SLU().WZ
                      ?}
                  ?};
                  KS_W.next&_rozdzielnik=''
               !}
            ?};
            {? _budpw
            || {? _rozdzielnik<>''
               || {!
                  |? {? POW.SLU().SLU().WZ=_rozdzielnik
                     || _licz+=1
                     ?};
                     POW.next()
                  !};
                  {? _licz>0
                  ||
                     _tabrzd:=obj_new(_licz*2);
                     POW.first();
                     {!
                     |? {? POW.SLU().SLU().WZ=_rozdzielnik
                        || _i+=1;
                           _tabrzd[(2*_i)-1]:=POW.SLO().KOD;
                           _tabrzd[2*_i]:=POW.KW
                        |? POW.SLU().SLU().WZ='Funkcja'
                        || _fun:=POW.SLO().KOD;
                           _kw:=POW.KW
                        |? POW.SLU().SLU().WZ='Zadanie'
                        || _zad:=POW.SLO().KOD;
                           _kw:=POW.KW
                        |? POW.SLU().SLU().WZ='Podzadanie'
                        || _podz:=POW.SLO().KOD;
                           _kw:=POW.KW
                        |? POW.SLU().SLU().WZ='Działanie'
                        || _dlan:=POW.SLO().KOD;
                           _kw:=POW.KW
                        ?};
                        POW.next()
                     !};
                     'Przygotowanie poziomu z rozdzielnikiem i zapis';
                     {! _i:=1.._licz
                     |! {? _rozdzielnik='Funkcja'
                        || _fun:=_tabrzd[(2*_i)-1];
                           _kw:=_tabrzd[2*_i]
                        |? _rozdzielnik='Zadanie'
                        || _zad:=_tabrzd[(2*_i)-1];
                           _kw:=_tabrzd[2*_i]
                        |? _rozdzielnik='Podzadanie'
                        || _podz:=_tabrzd[(2*_i)-1];
                           _kw:=_tabrzd[2*_i]
                        |? _rozdzielnik='Działanie'
                        || _dlan:=_tabrzd[(2*_i)-1];
                           _kw:=_tabrzd[2*_i]
                        ?};
                        {? (_fun<>'')|(_zad<>'')|(_podz<>'')|(_dlan<>'')
                        || {? exec('budcorct','ml_zad',_fun,_zad,_podz,_dlan,,ROK_F.ref)
                           ||
                              {? ~_c
                              || ML_BZAD.blank();
                                 ML_BZAD.ODD:=POW.POZ().DOK().ODD;
                                 ML_BZAD.WAL:={? POW.POZ().WAL=null() || FINFO.NAROD || POW.POZ().WAL ?};
                                 ML_BZAD.TYP:=_typ; ML_BZAD.FUN:=ML_FUN.ref;
                                 {? _zad <>'' || ML_BZAD.ZAD:=ML_ZAD.ref() ?};
                                 {? _podz<>'' || ML_BZAD.ZAD:=ML_ZAD.ref(); ML_BZAD.PODZAD:=ML_PODZ.ref() ?};
                                 {? _dlan<>'' || ML_BZAD.ZAD:=ML_ZAD.ref(); ML_BZAD.PODZAD:=ML_PODZ.ref(); ML_BZAD.DZIALAN:=ML_DZLAN.ref() ?};
                                 {? POW.POZ().STR='Wn'
                                 || ML_BZAD.WN:=POZ.SUM
                                 || ML_BZAD.MA:=POZ.SUM
                                 ?};
                                 _wyn:=ML_BZAD.add(1);
                                 {? ~_wyn
                                 || _komun:='\nBłąd dodania pozycji. ';
                                    {? _msg=0
                                    || {? KOMT=''
                                       || KOMT:={? _d
                                                || '\nDla konta '+POZ.KON +' w dokumencie: '+POZ.DOK().NK +' wystąpił wyjątek.'+_komun
                                                || 'Pozycja '+$POZ.POZ+' dla konta '+POZ.KON +' wystąpił wyjątek.'
                                                ?}
                                       ?}
                                    || FUN.emsg('Dla konta '+POZ.KON +' w dokumencie: '+POZ.DOK().NK +' wystąpił wyjątek.'+_komun,'Uwaga !')
                                    ?}
                                 ?}
                              ?}
                           ||  _komun:='\nNiespójność struktury klasyfikacji budżetu zadaniowego ze słownikami wyróżników.';
                               {? _msg=0
                               || {? KOMT=''
                                  || KOMT:='\nDla konta '+POZ.KON +' w dokumencie: '+POZ.DOK().NK +' wystąpił wyjątek.'+_komun
                                  || KOMT:='Pozycja '+$POZ.POZ+' dla konta '+POZ.KON +' niespójność struktury zadaniowej ze słownikami wyróżników.'
                                  ?}
                               || FUN.emsg('Dla konta '+POZ.KON +' w dokumencie: '+POZ.DOK().NK +' wystąpił wyjątek.'+_komun,'Uwaga !')
                               ?};
                              _wyn:=0;
                              _i:=_licz
                           ?}
                        ?}
                     !};
                     obj_del(_tabrzd)
                  ?}
               || POW.first();
                  {!
                  |? {? POW.SLU().SLU().WZ='Funkcja'
                     || _fun:=POW.SLO().KOD;
                        _kw:=POW.KW
                     |? POW.SLU().SLU().WZ='Zadanie'
                     || _zad:=POW.SLO().KOD;
                        _kw:=POW.KW
                     |? POW.SLU().SLU().WZ='Podzadanie'
                     || _podz:=POW.SLO().KOD;
                        _kw:=POW.KW
                     |? POW.SLU().SLU().WZ='Działanie'
                     || _dlan:=POW.SLO().KOD;
                        _kw:=POW.KW
                     ?};
                     POW.next()
                  !};
                  {? (_fun<>'')|(_zad<>'')|(_podz<>'')|(_dlan<>'')
                  || {? exec('budcorct','ml_zad',_fun,_zad,_podz,_dlan,,ROK_F.ref)
                     ||
                        {? ~_c
                        || ML_BZAD.blank();
                           ML_BZAD.ODD:=POW.POZ().DOK().ODD;
                           ML_BZAD.OKR:=OKRO_F.ref();
                           ML_BZAD.WAL:={? POW.POZ().WAL=null() || FINFO.NAROD || POW.POZ().WAL ?};
                           ML_BZAD.TYP:=_typ; ML_BZAD.FUN:=ML_FUN.ref();
                           {? _zad <>'' || ML_BZAD.ZAD:=ML_ZAD.ref() ?};
                           {? _podz<>'' || ML_BZAD.ZAD:=ML_ZAD.ref(); ML_BZAD.PODZAD:=ML_PODZ.ref() ?};
                           {? _dlan<>'' || ML_BZAD.ZAD:=ML_ZAD.ref(); ML_BZAD.PODZAD:=ML_PODZ.ref(); ML_BZAD.DZIALAN:=ML_DZLAN.ref() ?};
                           {? POW.POZ().STR='Wn'
                           || ML_BZAD.WN:=POZ.SUM
                           || ML_BZAD.MA:=POZ.SUM
                           ?};
                           _wyn:=ML_BZAD.add(1);
                           {? ~_wyn
                           || _komun:='\nBłąd dodania pozycji. ';
                              {? _msg=0
                              || {? KOMT=''
                                 || KOMT:={? _d
                                          || '\nDla konta '+POZ.KON +' w dokumencie: '+POZ.DOK().NK +' wystąpił wyjątek.'+_komun
                                          || 'Pozycja '+$POZ.POZ+' dla konta '+POZ.KON +' wystąpił wyjątek.'
                                          ?}
                                 ?}
                              || FUN.emsg('Dla konta '+POZ.KON +' w dokumencie: '+POZ.DOK().NK +' wystąpił wyjątek.'+_komun,'Uwaga !')
                              ?}
                           ?}
                        ?}
                     ||  _komun:='\nNiespójność struktury klasyfikacji budżetu zadaniowego ze słownikami wyróżników.';
                         {?_msg=0
                           || {? KOMT=''
                              || KOMT:={? _d
                                       || _komun
                                       || 'Pozycja '+$POZ.POZ+' dla konta '+POZ.KON +' niespójność struktury zadaniowej ze słownikami wyróżników.'
                                       ?}
                              ?}
                           || FUN.emsg('Dla konta '+POZ.KON +' w dokumencie: '+POZ.DOK().NK +' wystąpił wyjątek.'+_komun,'Uwaga !')
                         ?};
                        _wyn:=0
                     ?}
                  ?}
               ?}
            ?}
         ?};
:: jesli nie uzupelniono budzetu zadaniowego to probuje z budzetu rodzajowego
         ML_BZAD.index('MLBZOKRP'); ML_BZAD.prefix(OKRO_F.ref,POZ.ref);
         {? ~ML_BZAD.first() & POZ.KOM().KS().BZ='A'
         || {? _c
            || {? var_pres('par2zad')>0 & ~par2zad.first || VAR_DEL.delete('par2zad') ?}
::               {? var_pres('par2zad')<0 || par2zad:=exec('par2zad', 'ml_xpert','par2zad.txt',0,ROK_F.ref()) ?}
            ||
               {? var_press('T_BZ')<0 || exec('ob_bz','ml_zad') ?};
               exec('zbz_prr','ml_zad',1,1,,,,,ROK_F.ref(),OKRO_F.ref());
               exec('zbz_pop','ml_zad',OKRO_F.ref(),ROK_F.ref());
               VAR_DEL.delete('T_BZ')
            ?}
         ?}
      ?};
::Dodatkowo zapamietujemy info o wartosciach wyroznikowach w celu analizy hierarchii slownikow
      KS.cntx_pop(); POW.cntx_pop(); ROK_F.cntx_pop()
   || FUN.info('Nie znaleziono okresu.');
      _wyn:=0
   ?};
   OKRO_F.cntx_pop();
   {? _c & KOMT<>''
   || _wyn:=0
   ?}
?};
:: sprawdzenie sumy wartosci
{? _c=0 & (_tryb='A' | _tryb='R')
|| _sum:=0;
   ML_BZAD.index('MLBZOKRP'); ML_BZAD.prefix(OKRO_F.ref,POZ.ref);
   {? ML_BZAD.first()
   || {!
      |?
         _sum+=ML_BZAD.MA+ML_BZAD.WN;
         ML_BZAD.next()
      !}
   ?};
   {? _sum<>POZ.SUM
   || exec('add_kom','#message','Pozycja '+$POZ.POZ+' dla konta '+POZ.KON +' jest niezgodność kwoty budżetu zadaniowego.',
         7,'Dokument: '+DOK.NK+'; rejestr: '+DOK.REJ().KOD,,1)
   ?}
?};
_wyn


\zbz_pop
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Aktalizuje wartosci w ML_BZAD na podstawie stanu T_BZ
::   WE: [_a] - OKRO_F.ref()
::       [_b] - ROK_F.ref()
::-------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>7 || _a:=SSTALE.AO ?};
{? var_pres('_b')<>7 || _b:=SSTALE.AR ?};
ROK_F.cntx_psh();
ROK_F.clear();
{? ROK_F.seek(_b)
|| exec('zbz_dodp','ml_zad',,,,,_a,_b)
?};
ROK_F.cntx_pop()


\zbz_prr
::-------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Przed redakcja zmiennej BUDZ
::   WE: _a - czy przy akceptacji pozycji
::       _b - czy dla A
:: Dodano mozliwosc przekazania wyliczonych wczesniej parametrow
::       [_c] - dzial
::       [_d] - rozdzial
::       [_e] - paragraf
::       [_f] - pozycja
::       [_g] - ROK_F
::       [_h] - OKRO_F
::-------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || _a:=0 ?};
{? var_pres('_b')<>type_of(0) || _b:=0 ?};
{? var_pres('_c')<>type_of('string') || _c:='' ?};
{? var_pres('_d')<>type_of('string') || _d:='' ?};
{? var_pres('_e')<>type_of('string') || _e:='' ?};
{? var_pres('_f')<>type_of('string') || _f:='' ?};
{? var_pres('_g')<>7 || _g:=SSTALE.AR ?};
{? var_pres('_h')<>7 || _h:=SSTALE.AO ?};
{? KS.BZ='R' | (KS.BZ='A' & _b=1)
||
   _sum:=_sum2:=0;
   _dz:=_dz2:='';
   __Rokbud:=_g; _popr:=1;
::   _popr:=exec('spr_zm_bz','ml_zad');
   {? T_BZ.first
   || {!|?
         _sum+=T_BZ.KWOTA;
         {? T_BZ.KWOTA<>0 || _dz:=T_BZ.BUD_KODC ?};
         T_BZ.next
      !}
   ?};
   {? _popr | _sum=0
   ||

::      exec('przypisz','ml_xpert',,_b=0,_popr,_c,_d,_e,_f,_g,_h);
::      exec('zbz_por','ml_zad');
      {? ~_a || win_disp() ?}
   ?};
   {? _popr & T_BZ.first
   || {!|?
         _sum2+=T_BZ.KWOTA;
         {? T_BZ.KWOTA<>0 || _dz2:=T_BZ.BUD_KODC ?};
         T_BZ.next
      !};
      {? _sum<>_sum2 | _dz<>_dz2
      || {? ~_b
         ||
            FUN.info('Zmieniono zapisy w budżecie zadaniowym.\n\nPoz.: '+$POZ.POZ+'; Konto: '+POZ.KON
               +{? _sum<>_sum2 || '\n\nz kwoty '+form(_sum,,,'9.')+' na kwotę '+form(_sum2,,,'9.') || '' ?}
               +{? _dz<>_dz2 || '\n\nz zapisu '+_dz+' na zapis '+_dz2 || '' ?}+'\n'+MLEX_OKN.OP
            )
         || {? KOMT=''
            || KOMT:='Zmieniono zapisy w budżecie zadaniowym. Poz.: '+$POZ.POZ+'; Konto: '+POZ.KON+'; '+MLEX_OKN.OP
            ?}
         ?}
      ?}
   |? MLEX_OKN.OP<>''
   || {? ~_b
      || FUN.info(MLEX_OKN.OP)
      || KOMT:=MLEX_OKN.OP
      ?}
   ?};
   VAR_DEL.delete('__Rokbud');
   1
||   0
?}



\mlbzadusu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WS [10.40]
:: OPIS: Usuwa wszystkie zapisy w tabeli ML_BZAD do danego rekordu POZ
::   WE: _a - POZ.ref(), domyslnie aktualny w buforze ;
::       _b - tryb wprowadzania S-slownikowy, T-drzewo
::       _c - OKRO_F.ref()
::       _d - moment wywolania 1-odwarzanie, 0-kasowanie
::----------------------------------------------------------------------------------------------------------------------
_dalej:=1;
{?_>0 & (type_of(_a)=7)
||   POZ.cntx_psh(); POZ.index('DOK'); POZ.prefix();
     {? POZ.seek(_a)
     ||   _pozref:=_a
     ||   FUN.info('Nie odnaleziono przekazanej pozycji tabeli  POZ ');
          _dalej:=0
     ?};
     POZ.cntx_pop()
||   _pozref:=POZ.ref()
?};
{? var_pres('_b')<>type_of('stringi') || _b:='' ?};
{? var_pres('_d')<>type_of(0) || _d:=1 ?};
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix();
_seek:={? var_pres('_c')<>7 || OKRO_F.seek(SSTALE.AO) || OKRO_F.seek(_c) ?};
{? _seek
|| ML_BZAD.cntx_psh(); ML_BZAD.index('MLBZOKRP'); ML_BZAD.prefix(OKRO_F.ref(),POZ.ref);
   {? _dalej & ML_BZAD.first()
   || {! |?
         {? (_d=0 | (8+$ML_BZAD.POZ)+2<>'00') & (_b='' | ML_BZAD.TRYB=_b) || ML_BZAD.del() || ML_BZAD.next ?}
      !}
   ?};
   ML_BZAD.cntx_pop()
?};
OKRO_F.cntx_pop();
~~


\poz_bz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WS [12.30]
:: OPIS: Prezentacja budzetu zadaniowego do pozycji
::  OLD: \poz_bz/ml_zad.fml
::----------------------------------------------------------------------------------------------------------------------
{? MLEX.FIKSB & POZ.KOM().KS().BZ='N'
|| FUN.info('Konto '+POZ.KOM().KS().SYM+' nie jest związane z budżetem zadaniowym.')
|? MLEX.FIKSB
|| {? var_pres('T_BZ')>0
   || VAR_DEL.delete('T_BZ')
   ?};
   exec('ob_bz','ml_zad');
   exec('zbz_get','ml_zad');
   T_BZ.hdr_sel('; Podzielnik pozycji dokumentu '+{? POZ.SUM<>0 || 'na kwotę: '+form(POZ.SUM,,2) || '' ?});
   _act:=T_BZ.actions(T_BZ.win_sel('?'));
   _zm:=0;
   {? POZ.ZK='T' | POZ.ZP='T' |  POZ.KOM().KS().BZ<>'R'
   || exec('sum_t_bz','ml_zad',0);
      T_BZ.actions(T_BZ.win_sel('?'),'P:','W:')
   || exec('sum_t_bz','ml_zad',1);
     _zm:=1
   ?};
   {? T_BZ.first()
   || T_BZ.select();
      {? _zm=1
      || exec('zbz_pop','ml_zad')
      ?}
   || FUN.info('Nie określono pozycji budżetu zadaniowego.')
   ?};
   {? var_pres('T_BZ') >0 || VAR_DEL.delete('T_BZ') ?};
   1
|| FUN.info('Funkcja dostępna dla wersji budżetowej.')
?}

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 bd4bd0e050f887b24cd927d2813c249160b0609d48f234213bcbf682b968f62e85e2456b0c8c9cbc92007c454788c6683e5546f6980a4450dd571a6cc42b4308a8e776f6240efc30fd95fb3efb9512b80ea267e81cd3e6749f52203606eeca2d3ba44d733c401a9bafe7684f2e3e7349f1386fcc65243106d8738b962c1b4f21
