:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: px_view.fml [17.00]
:: Utworzony: 17.05.2013
:: Autor: WH
::======================================================================================================================
:: Zawartosc: Formuły do obsługi widoków planu w planie strategicznym
::======================================================================================================================


\hierarchy
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [17.00]
:: OPIS: Zwraca kolejnosc poziomow widoku
::   WY: STRING
::----------------------------------------------------------------------------------------------------------------------
'RKMTD'


\buffer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: tablica buforowa dla tabeli PX_VIEW
::----------------------------------------------------------------------------------------------------------------------
exec('PX_VIEW','buffer1')


\add
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [17.00]
:: OPIS: Dodaje jeden rekord do tabeli PX_VIEW
::   WE: _a - obj_new - tablica nazwana bedaca buforem tabeli exec('buffer','px_view')
::   WY: 0 - porazka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_buffer:={? var_pres('_a')>100
         || _a
         || exec('buffer','px_view')
         ?};
_result:=0;


PX_VIEW.cntx_psh();
PX_VIEW.blank();
_buffer.set();
_result:=PX_VIEW.add();
PX_VIEW.cntx_pop();
_result


\delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Kasuje podany rekord tabeli PX_VIEW (wykonywane w transakcji!!!)
::   WE: _a - PX_VIEW.ref()
::   WY: >0 -wyczyszczone, usuniete
::      -1 - nie udalo sie znalezc rekordu
::      -2 - nie udalo sie czyszczenie powiazan
::      -3 - nie udalo sie usuniecie rekordu
::      -4 - nie udalo sie zablokowanie rekordu
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
:: jeżeli transakcja została zerwana, to nie ma sensu przetwarzać formuły
{? do_state()=2 || return(-100) ?};
_result:=0;
_ref:=_a;
:: sprawdzam, czy to w tej formule będę zakładał transakcję, czy już jest założona
_mydo:=do_state()=0;
{? _mydo || do() ?};
PX_VIEW.cntx_psh(); PX_VIEW.clear();
{? PX_VIEW.seek(_ref)
||
:: Sprawdzam czy widok moge zablokowac do zapisu, jesli tak to moge go usuwac
   {? PX_VIEW.r_lock(1,1,1)
   ||
      {? exec('clean','px_view',_ref)>0
      || {? PX_VIEW.del(,1)>0
         || _result:=1
         || undo();
            _result:=-3
         ?}
      || PX_VIEW.r_unlock();
         _result:=-2
      ?}
   || _result:=-4
   ?}
|| _result:=-1
?};
PX_VIEW.cntx_pop();
{? _mydo || end() ?};
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
:: UTW: WH [17.00]
:: OPIS: Czysci powiazania do rekordu tabeli PX_VIEW
:: WE: _a - PX_VIEW.ref()
:: WY: >0 -wyczyszczone,
:: <=0 -niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=2 || return(-100) ?};
_result:=1;
_PX_VIEW:=_a;

_mydo:=do_state()=0;
{? _mydo || do() ?};
:: --- powiązania do ---

:: --- wszystkie powiazania usuniete? ---
{? _mydo || _result:=end()?};
_result


\add_action
::----------------------------------------------------------------------------------------------------------------------
:: DOST: MBUILDER
::  UTW: WH [17.00]
:: OPIS: Akcja 'Dolacz' w oknie wertowania tabeli PX_VIEW
::   WY: 0 - porazka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_buffer:=exec('buffer','px_view');

PX_VIEW.blank();
PX_VIEW.win_edit('RED');

{? PX_VIEW.edit("exec('validate','px_view',0)")
|| _buffer.get();
   {? exec('add','px_view',_buffer)=0
   || FUN.emsg('Dodawanie widoku planu zakończone niepowodzeniem.'@)
   ?}
?};
~~


\update_action
::----------------------------------------------------------------------------------------------------------------------
:: DOST: MBUILDER
::  UTW: WH [17.00]
:: OPIS: Akcja 'Popraw' w oknie wertowania tabeli PX_VIEW
::----------------------------------------------------------------------------------------------------------------------
PX_VIEW.win_edit('RED');

{? var_pres('before_sym')>0
|| &before_sym
?};
before_sym:=PX_VIEW.SYMBOL;

_can_continue:=1;
:: Sprawdzam czy usuwany widok nie zostal ustawiony jako domyslny widok ktoregos uzytkownika
{? exec('is_used','#params',8060,PX_VIEW.SYMBOL)>0
||
::  Jest uzywany wiec pytam czy na pewno poprawiać
   _msg:='Widok planu: \'%1\' jest używany jako domyślny dla niektórych użytkowników.'
         '\nCzy na pewno kontynuować redagowanie?'@[PX_VIEW.SYMBOL];
   _can_continue:=FUN.ask(_msg);
   ~~
?};

{? _can_continue>0
||
:: Sprawdzam czy moge zablokowac rekord do zapisu
   {? PX_VIEW.r_lock(1,1,1)
   ||
      {? PX_VIEW.edit("exec('validate','px_view',1)")
      || _can_continue:=PX_VIEW.put()
      ?};
      PX_VIEW.r_unlock();
      ~~
   || FUN.emsg(
         'Widok planu: \'%1\' jest używany w tej chwili przez innego użytkownika. Poprawianie niemożliwe.'@
         [PX_VIEW.SYMBOL]
      );
      _can_continue:=0
   ?}
?};

{? _can_continue>0 & before_sym<>PX_VIEW.SYMBOL
||
:: Poprawiam wartosci w FO - symbol domyslnych widokow dla userow
   FO.cntx_psh();
   FO.index('TRESC');
   FO.prefix(8060,'\''+before_sym+'\'',);
   {? FO.first()
   || {!
      |? FO.TR:='\''+PX_VIEW.SYMBOL+'\'';
         FO.cntx_psh();
         FO.clear();
         _can_continue:=FO.put();
         FO.cntx_pop();
         FO.first() & _can_continue>0
      !}
   ?};
   FO.cntx_pop();
   ~~
?};
&before_sym;
~~


\delete_action
::----------------------------------------------------------------------------------------------------------------------
:: DOST: MBUILDER
::  UTW: WH [17.00]
:: OPIS: Akcja 'Usun' w oknie wertowania tabeli PX_VIEW
::   WY: <=0 - porazka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_can_continue:=1;

_group:=0;
_is_used:=0;
_symbol:=PX_VIEW.SYMBOL;

{? PX_VIEW.sel_size()>0
|| _group:=1
?};

{? _group=0
|| {? FUN.ask('Czy na pewno usunąć widok planu: \'%1\' ?'@[PX_VIEW.SYMBOL])
   || _can_continue:=1
   || _can_continue:=0
   ?};
   ~~
?};

{? _can_continue>0
||
:: Sprawdzam czy usuwany widok nie zostal ustawiony jako domyslny widok ktoregos uzytkownika
   {? exec('is_used','#params',8060,PX_VIEW.SYMBOL)>0
   ||
      _is_used:=1;
::    Jest uzywany wiec pytam czy na pewno usunac
      _msg:='Widok planu: \'%1\' jest używany jako domyślny dla niektórych użytkowników.'
            '\nCzy na pewno kontynuować usuwanie?'@[PX_VIEW.SYMBOL];
      _can_continue:=FUN.ask(_msg);
      ~~
   ?}
?};

{? _can_continue>0
|| _result:=exec('delete','px_view',PX_VIEW.ref());

   {? _result<=0
   ||
      {? _result=-4
      || _msg:='Widok planu: \'%1\' jest używany w tej chwili przez innego użytkownika. Usuwanie niemożliwe.'@
               [PX_VIEW.SYMBOL]
      || _msg:='Usunięcie widoku planu: %1 zakończone niepowodzeniem.'@[PX_VIEW.SYMBOL]
      ?};
      {? _group=0
      || FUN.emsg(_msg)
      || KOMM.add(_msg,2)
      ?}
   ||
::    Jesli udalo sie usunac, a widok byl uzywany przez kogos jako domyslny to temu komus
::    kasuje z formul to ustawienie
      {? _is_used>0
      ||
         FO.cntx_psh();
         FO.index('TRESC');
         FO.prefix(8060,'\''+_symbol+'\'',);
         {? FO.first()
         || {!
            |? FO.TR:='\'\'';
               FO.cntx_psh();
               FO.clear();
               _can_continue:=FO.put();
               FO.cntx_pop();
               FO.first() & _can_continue>0
            !}
         ?};
         FO.cntx_pop();
         ~~
      ?}
   ?}
?};
_result


\delete_act_gr1
::----------------------------------------------------------------------------------------------------------------------
:: DOST: MBUILDER
::  UTW: WH [17.00]
:: OPIS: Akcja 'Usun' grupa przed w oknie wertowania PX_VIEW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? FUN.ask('Zaznaczonych widoków: %1. Czy usunąć je wszystkie?'@[$PX_VIEW.sel_size()])
|| _result:=1;
   KOMM.init(200,,'Usuwanie widoków planu strategicznego'@,'')
?};
_result


\delete_act_gr2
::----------------------------------------------------------------------------------------------------------------------
:: DOST: MBUILDER
::  UTW: WH [17.00]
:: OPIS: Akcja 'Usun' grupa po w oknie wertowania PX_VIEW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KOMM.select(,,,,,0);
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PRIVATE
::  UTW: WH [17.00]
:: OPIS: Walidacja rekordu PX_VIEW
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::   WY: STRING - symbol pola do ktorego wrocic jesli walidacja zakonczy sie niepowodzeniem
::----------------------------------------------------------------------------------------------------------------------
_mode:=_a;

_result:='';

:: 1. Sprawdzam wypelnienie koniecznych pol
{? PX_VIEW.SYMBOL=''
|| FUN.emsg('Symbol widoku planu musi być wypełniony.'@);
   _result:='SYMBOL'
|? PX_VIEW.LEVEL=''
|| FUN.emsg('Poziom widoku planu musi być wypełniony.'@);
   _result:='LEVEL'
?};

:: 2. Sprawdzam czy symbol po redakcji jest unikalny
{? _result='' || _result:=__CHK.index(PX_VIEW,_a) ?};

:: 3. Sprawdzam czy offset nie przekracza 23 godzin
{? _result='' & PX_VIEW.OFFSET~1>23
|| _msg:='Przesunięcie godzinowe nie może być równe lub większe niż %1h.'@['24'];
   FUN.emsg(_msg);
   _result:='OFFSET'
?};

_result


\select
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC/MENU KONTEKSTOWE
::  UTW: WH [17.00]
:: OPIS: Wyswietla okno wertowania tabeli PX_VIEW
::----------------------------------------------------------------------------------------------------------------------
PX_VIEW.cntx_psh();
PX_VIEW.clear();
PX_VIEW.win_sel('WER');
PX_VIEW.index('SYMBOL');
PX_VIEW.select();
PX_VIEW.cntx_pop();
~~


\view_chng_act
::----------------------------------------------------------------------------------------------------------------------
:: DOST: DEKSTOP
::  UTW: WH [17.00]
:: OPIS: Akcja wywolywana po zmianie widoku z combobox na pulpicie - pelny widok planu
::----------------------------------------------------------------------------------------------------------------------
_before:=PX_VAR.PX_VIEW;
PX_VAR.LAST_DAT:=PX_VAR.VIE_DATE;

:: Odblokowuje poprzedni widok
exec('unlock','px_view',_before);

PX_VIEW.cntx_psh();
PX_VIEW.index('SYMBOL');
_selected:=exec('get_value','#desktop','','nawigacja',PxSelect.ID_VIEW);

PX_VIEW.prefix(_selected,_selected);
{? PX_VIEW.first()
||
   _can_change:=1;
   {? exec('is_whatif','px_ver',PX_VAR.VIE_VER)>0
   || {? PX_VIEW.LEVEL='R' | PX_VIEW.LEVEL='K'
      || _can_change:=0;
         FUN.emsg('Widok: %1 nieobsługiwany w symulacji.'@[_selected])
      ?}
   ?};
   {? _before<>PX_VIEW.ref() & _can_change>0
   ||
      PX_VAR.PX_VIEW:=PX_VIEW.ref();

::    Blokuje widok
      exec('lock','px_view',PX_VIEW.ref());

::    Zapamietuje widok
      exec('set','#params',8060,PX_VIEW.SYMBOL,OPERATOR.USER,,'N');

      {? PX_VAR.VIE_DATE<>null()
      || PX_VAR.VIE_DATE:=exec('round_start','daty',PX_VAR.VIE_DATE,PX_VIEW.LEVEL)
      || PX_VAR.VIE_DATE:=exec('round_start','daty',exec('get','daty',date()),PX_VIEW.LEVEL)
      ?};

      exec('set_col_names','px_plan');
      grp_disp(PX_KONT,{? exec('tree_kont','px_param') || 'PX_WERT' || 'PX_WER' ?},1,1);
      grp_disp(PxSelect.Tab_OBJ.TAB,PxSelect.Tab_OBJ.WER,1,1);
      grp_disp(PxSelect.Tab_KONT.TAB,PxSelect.Tab_KONT.WER,1,1);

      ~~
   ?}
?};

PX_VIEW.cntx_pop();
~~


\view_chng_act_2
::----------------------------------------------------------------------------------------------------------------------
:: DOST: DEKSTOP
::  UTW: WH [17.00]
:: OPIS: Akcja wywolywana po zmianie widoku z combobox na pulpicie - widok prosty od strony zasobow
::----------------------------------------------------------------------------------------------------------------------
_before:=PX_VAR.PX_VIEW;
PX_VAR.LAST_DAT:=PX_VAR.VIE_DATE;

:: Odblokowuje poprzedni widok
exec('unlock','px_view',_before);

PX_VIEW.cntx_psh();
PX_VIEW.index('SYMBOL');
_selected:=exec('get_value','#desktop','','nawigacja','combo_view@px_navi');

PX_VIEW.prefix(_selected,_selected);
{? PX_VIEW.first()
||
   _can_change:=1;
   {? exec('is_whatif','px_ver',PX_VAR.VIE_VER)>0
   || {? PX_VIEW.LEVEL='R' | PX_VIEW.LEVEL='K'
      || _can_change:=0;
         FUN.emsg('Widok: %1 nieobsługiwany w symulacji.'@[_selected])
      ?}
   ?};
   {? _before<>PX_VIEW.ref() & _can_change>0
   ||
      PX_VAR.PX_VIEW:=PX_VIEW.ref();

::    Blokuje widok
      exec('lock','px_view',PX_VIEW.ref());

::    Zapamietuje widok
      exec('set','#params',8060,PX_VIEW.SYMBOL,OPERATOR.USER,,'N');

      {? PX_VAR.VIE_DATE<>null()
      || PX_VAR.VIE_DATE:=exec('round_start','daty',PX_VAR.VIE_DATE,PX_VIEW.LEVEL)
      || PX_VAR.VIE_DATE:=exec('round_start','daty',exec('get','daty',date()),PX_VIEW.LEVEL)
      ?};
      exec('set_col_names','px_plan');
      grp_disp(__plan.TAB,__plan.WER);

      ~~
   ?}
?};
PX_VIEW.cntx_pop();
~~


\view_chng_act_3
::----------------------------------------------------------------------------------------------------------------------
:: DOST: DEKSTOP
::  UTW: WH [17.00]
:: OPIS: Akcja wywolywana po zmianie widoku z combobox na pulpicie - widok prosty od strony zamowien/zlecen
::----------------------------------------------------------------------------------------------------------------------
_before:=PX_VAR.PX_VIEW;
PX_VAR.LAST_DAT:=PX_VAR.VIE_DATE;

:: Odblokowuje poprzedni widok
exec('unlock','px_view',_before);

PX_VIEW.cntx_psh();
PX_VIEW.index('SYMBOL');
_selected:=exec('get_value','#desktop','','nawigacja','27k699gc17f44e8i7e52imm1n5fc3');

PX_VIEW.prefix(_selected,_selected);
{? PX_VIEW.first()
||
   _can_change:=1;
   {? exec('is_whatif','px_ver',PX_VAR.VIE_VER)>0
   || {? PX_VIEW.LEVEL='R' | PX_VIEW.LEVEL='K'
      || _can_change:=0;
         FUN.emsg('Widok: %1 nieobsługiwany w symulacji.'@[_selected])
      ?}
   ?};
   {? _before<>PX_VIEW.ref() & _can_change>0
   ||
      PX_VAR.PX_VIEW:=PX_VIEW.ref();

::    Blokuje widok
      exec('lock','px_view',PX_VIEW.ref());

::    Zapamietuje widok
      exec('set','#params',8060,PX_VIEW.SYMBOL,OPERATOR.USER,,'N');

      {? PX_VAR.VIE_DATE<>null()
      || PX_VAR.VIE_DATE:=exec('round_start','daty',PX_VAR.VIE_DATE,PX_VIEW.LEVEL)
      || PX_VAR.VIE_DATE:=exec('round_start','daty',exec('get','daty',date()),PX_VIEW.LEVEL)
      ?};
      exec('set_col_names','px_plan');
      grp_disp(__pplan.TAB,__pplan.WER);

      ~~
   ?}
?};
PX_VIEW.cntx_pop();
~~


\view_chng_act_grop
::----------------------------------------------------------------------------------------------------------------------
:: DOST: DEKSTOP
::  UTW: WH [23.25]
:: OPIS: Akcja wywolywana po zmianie widoku z combobox na pulpicie - widok dla grup operacji
::----------------------------------------------------------------------------------------------------------------------
_before:=PX_VAR.PX_VIEW;
PX_VAR.LAST_DAT:=PX_VAR.VIE_DATE;

:: Odblokowuje poprzedni widok
exec('unlock','px_view',_before);

PX_VIEW.cntx_psh();
PX_VIEW.index('SYMBOL');
_selected:=exec('get_value','#desktop','','nawigacja','combo_view@px_navi');

PX_VIEW.prefix(_selected,_selected);
{? PX_VIEW.first()
||
   _can_change:=1;
   {? exec('is_whatif','px_ver',PX_VAR.VIE_VER)>0
   || {? PX_VIEW.LEVEL='R' | PX_VIEW.LEVEL='K'
      || _can_change:=0;
         FUN.emsg('Widok: %1 nieobsługiwany w symulacji.'@[_selected])
      ?}
   ?};
   {? _before<>PX_VIEW.ref() & _can_change>0
   ||
      PX_VAR.PX_VIEW:=PX_VIEW.ref();

::    Blokuje widok
      exec('lock','px_view',PX_VIEW.ref());

::    Zapamietuje widok
      exec('set','#params',8060,PX_VIEW.SYMBOL,OPERATOR.USER,,'N');

      {? PX_VAR.VIE_DATE<>null()
      || PX_VAR.VIE_DATE:=exec('round_start','daty',PX_VAR.VIE_DATE,PX_VIEW.LEVEL)
      || PX_VAR.VIE_DATE:=exec('round_start','daty',exec('get','daty',date()),PX_VIEW.LEVEL)
      ?};
      exec('set_col_names','px_plan');
      _env_grops:=params_get().env_grops;
      grp_disp(_env_grops.PLAN_VIEW1.TAB,_env_grops.PLAN_VIEW1.WER,1);
      grp_disp(_env_grops.PLAN_VIEW2.TAB,_env_grops.PLAN_VIEW2.WER,1);
      ~~
   ?}
?};
PX_VIEW.cntx_pop();
~~


\default_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Zwraca i ustawia w oknie domyslny widok dla danego usera
::   WY: PX_VIEW.ref() lub null()
::  TAG: <PUBLIC>
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
_view_user:=exec('get','#params',8060,2,OPERATOR.USER);

PX_VIEW.cntx_psh();
PX_VIEW.index('SYMBOL');
PX_VIEW.clear();
{? _view_user<>''
||
   {? PX_VIEW.find_key(_view_user,_view_user)
   || _result:=PX_VIEW.ref()
   ?}
?};
{? _result=null()
||
:: Jesli uzytkownik nie mial ustawionych to zwracam pierwszy lepszy

   PX_VIEW.clear();
   {? PX_VIEW.first()
   || _result:=PX_VIEW.ref()
   ?}
?};
PX_VIEW.cntx_pop();
_result


\level_compare
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [17.00]
:: OPIS: Porownuje ze soba dwa poziomy widoku, zwracajac informacje czy pierwszy jest wiekszy, rowny czy mniejszy
::       od drugiego
::   WE: _a - STRING - poziom widoku ktory bede porownywal z innym
::       _b - STRING - poziom widoku porownywany
::   WY: -1 - widok _a jest bardziej ogolny niz _b (miesiac..dzien)
::        0 - widoki sa na tym samym poziomie
::        1 - widok _a jest bardziej szczegolowy niz widok _b (dzien..miesiac)
::----------------------------------------------------------------------------------------------------------------------
_view1:=_a;
_view2:=_b;

_result:=0;

_hierarchy:=exec('hierarchy','px_view');
_level1:=_hierarchy*_view1;
_level2:=_hierarchy*_view2;

{? _level1<_level2
|| _result:=-1
|? _level1>_level2
|| _result:=1
?};
_result


\prefix_mode_s
::----------------------------------------------------------------------------------------------------------------------
:: DOST: DESKTOP
::  UTW: WH [17.00]
:: OPIS: Akcja wywolywana po zmianie trybu prefiksowania pozycji planu (kluczowy czas rozpoczecia)
::----------------------------------------------------------------------------------------------------------------------
{? PX_VAR.KAF_MODE<>'S'
|| PX_VAR.KAF_MODE:='S';
   exec('kafelki_reload','px_plan')
?};
~~


\prefix_mode_e
::----------------------------------------------------------------------------------------------------------------------
:: DOST: DESKTOP
::  UTW: WH [17.00]
:: OPIS: Akcja wywolywana po zmianie trybu prefiksowania pozycji planu (kluczowy czas zakonczenia)
::----------------------------------------------------------------------------------------------------------------------
{? PX_VAR.KAF_MODE<>'E'
|| PX_VAR.KAF_MODE:='E';
   exec('kafelki_reload','px_plan')
?};
~~


\lock
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [17.00]
:: OPIS: Blokuje przekazany widok planu, ale w trybie Read Only
::   WE: _a - PX_VIEW.ref()
::   WY: 0 - porazka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_px_view:=_a;

_result:=0;

PX_VIEW.cntx_psh(); PX_VIEW.clear();
{? PX_VIEW.seek(_px_view)
|| PX_VIEW.r_lock(0,1,1)
?};
PX_VIEW.cntx_pop();
_result


\unlock
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [17.00]
:: OPIS: Odblokowuje przekazany widok planu
::   WE: _a - PX_VIEW.ref()
::   WY: 0 - porazka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_px_view:=_a;

_result:=0;

PX_VIEW.cntx_psh(); PX_VIEW.clear();
{? PX_VIEW.seek(_px_view)
|| PX_VIEW.r_unlock()
?};
PX_VIEW.cntx_pop();
_result


:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 b1c7c42a89eae4aff416b311c8fdb9f9f0b2bcf35f0f7f8b0a5ba6b9477641ad65c043597078c979fa05589f696c14850829fa19f10d95a1f023386df7d14dc3ccbdf183ea5ce476645b01f77ed0d7d009692193f460caee7ff62a29ffef065fcb0332e1a5de315d19d689c89827e834f5ce33cc40f8173e5fd1b0512ae38687
