:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: edi_ka.fml
:: Utworzony: 14.03.2011
:: Autor: [MK]
::======================================================================================================================
:: Zawartosc: Obsluga importu danych Kadry i Place
::======================================================================================================================

\osoba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli OSOBA
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','OSOBA')
|| _identyf:={? OSOBA.OBCY='N' || OSOBA.PESEL || OSOBA.PASZPORT ?};
   OSOBA.cntx_psh();
   OSOBA.index('IMEX');
   OSOBA.prefix(OSOBA.IMEX);
   {? OSOBA.first()
   || _txt:='Istnieje już osoba: %1 z identyfikatorem importu IMEX: %2.'@
         [OSOBA.NAZWISKO+' '+OSOBA.PIERWSZE+' '+_identyf,$OSOBA.IMEX];
      _txt+=' '+'Rekordu nie dodano.'@;
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=OSOBA.ref()
   || OSOBA.index('OSOBA');
      OSOBA.prefix(OSOBA.NAZWISKO,OSOBA.PIERWSZE,OSOBA.OBCY,_identyf);
      {? OSOBA.first()
      || _txt:='Istnieje już osoba: %1.'@[OSOBA.NAZWISKO+' '+OSOBA.PIERWSZE+' '+_identyf];
         _txt+=' '+'Rekordu nie dodano.'@;
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
         _ref:=OSOBA.ref()
      |? +OSOBA.PESEL
      || OSOBA.index(OSOBA.ndx_tmp(,1,'PESEL',,));
         OSOBA.prefix(OSOBA.PESEL);
         {? OSOBA.first()
         || _txt:='Istnieje już osoba z identyfikatorem PESEL: %1.'@[OSOBA.PESEL];
            _txt+=' '+'Rekordu nie dodano.'@;
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
            _ref:=OSOBA.ref()
         || _ref:=null()
         ?}
      || _ref:=null()
      ?}
   ?};
   {? _ref=null()
   || OSOBA.prefix();
      __record+=(_ret_val:=OSOBA.add(1));
      {? _ret_val
      || __TAB.REF:=$OSOBA.ref();
         __TAB.add();
         _txt:='Dodano osobę: %1.'@[OSOBA.NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano osoby: %1.'@[OSOBA.NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?};
   OSOBA.ndx_drop();
   OSOBA.cntx_pop()
?};
~~


\os_adres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli OS_ADRES
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','OS_ADRES')
|| OS_ADRES.cntx_psh();
   OS_ADRES.index('OD');
   OS_ADRES.prefix(OS_ADRES.OSOBA,OS_ADRES.OD,OS_ADRES.RODZAJ,OS_ADRES.KH);
   _ref:=null();
   {? OS_ADRES.first()
   || _txt:='Istnieje już adres: %1, osoby: %2.'@
         [OS_ADRES.OD$1+' '+OS_ADRES.RODZAJ, OS_ADRES.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
      _txt+=' '+'Rekordu nie dodano.'@;
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=OS_ADRES.ref()
   ?};
   {? OS_ADRES.OSOBA
   || {? _ref=null()
      || OS_ADRES.prefix();
         __record+=(_ret_val:=OS_ADRES.add(1));
         {? _ret_val
         || _txt:='Dodano dane adresowe: %1, osoby: %2.'@
               [OS_ADRES.OD$1+' '+OS_ADRES.RODZAJ,OS_ADRES.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
         || _txt:='Nie dodano danych adresowych: %1, osoby: %2.'@
               [OS_ADRES.OD$1+' '+OS_ADRES.RODZAJ,OS_ADRES.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
         ?}
      ?}
   || _txt:='Nie dodano danych adresowych: %1, brak osoby.'@[OS_ADRES.OD$1+' '+OS_ADRES.RODZAJ];
      _txt+=' '+'Rekordu nie dodano.'@;
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   OS_ADRES.cntx_pop()
?};
~~


\p_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli P_INFO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','P_INFO')
|| P_INFO.cntx_psh();
   P_INFO.index('OD');
   P_INFO.prefix(exec('ref_firma','ustawienia'),P_INFO.OSOBA,P_INFO.OD);
   _ref:=null();
   {? P_INFO.first()
   || _txt:='Istnieją już dane ubezpieczeniowe: %1, osoby: %2.'@
         [P_INFO.OD$1,P_INFO.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=P_INFO.ref()
   ?};
   {? P_INFO.OSOBA
   || {? _ref=null()
      || P_INFO.prefix();
         __record+=(_ret_val:=P_INFO.add(1));
         {? _ret_val
         || _txt:='Dodano dane ubezpieczeniowe: %1, osoby: %2.'@
               [P_INFO.OD$1,P_INFO.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
            {? P_INFO.STNP().KOD<>'0' & P_INFO.STNP_OD=#0
            || _txt:='W danych ubezpieczeniowych: %1, osoby: %2, brakuje daty początkowej niepełnosprawności.'@
               [P_INFO.OD$1,P_INFO.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?};
            {? +__CHK.record(P_INFO,1,'BLWN','BLOKADA') & (P_INFO.BLWN<>null() | P_INFO.BLOKADA<>#0)
            || _txt:='W danych ubezpieczeniowych: %1, osoby: %2'@
               [P_INFO.OD$1,P_INFO.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
               _txt+=', '+'pola "Od dnia" i "Na wniosek" z sekcji "Blokady obliczeń" muszą być wypełnione lub puste.'@;
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?};
            {? P_INFO.BLWN<>null() & P_INFO.OD<>#0 & P_INFO.BLOKADA<>#0 & P_INFO.OD~1<>P_INFO.BLOKADA~1
            || _txt:='W danych ubezpieczeniowych: %1, osoby: %2, data blokady musi dotyczyć roku wprowadzonego zapisu.'@
               [P_INFO.OD$1,P_INFO.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?};
            {? +__CHK.record(P_INFO,1,'ROK_WSK','KW_WSK') & (P_INFO.ROK_WSK | P_INFO.KW_WSK)
            || _txt:='W danych ubezpieczeniowych: %1, osoby: %2'@
               [P_INFO.OD$1,P_INFO.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
               _txt+=', '+'obydwa pola sekcji "Zwiększenie wymiaru składek" muszą być wypełnione lub puste.'@;
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?}
         || _txt:='Nie dodano danych ubezpieczeniowych: %1, osoby: %2.'@
               [P_INFO.OD$1,P_INFO.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
         ?}
      ?}
   || _txt:='Nie dodano danych ubezpieczeniowych: %1, brak osoby.'@[P_INFO.OD$1];
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   P_INFO.cntx_pop()
?};
~~


\pko
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli PKO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','PKO')
|| PKO.cntx_psh();
   PKO.prefix();
   PKO.index('_PKO');
   _refR:=null();
   _ref:=null();
   {? R.first()
   || PKO.cntx_psh();
      _jest:=0;
      {!
      |? PKO.prefix(PKO.OSOBA,R.RN);
         {? PKO.first()
         || _ref:=PKO.ref();
            _jest:=1
         || _ref:=null();
            _refR:=R.ref()
         ?};
         _refR=null() & R.next()
      !};
      PKO.cntx_pop();
      {? ~_refR & _jest
      || _txt:='Nie dodano rachunku: %1, osoby: %2.'@[PKO.N,PKO.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
         _txt+=' %1 %2'['Brak wolnej rubryki.'@,'Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@)
      ?}
   || _txt:='Nie dodano rachunku: %1, osoby: %2.'@[PKO.N,PKO.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
      _txt+=' %1 %2'['Brak rubryki.'@,'Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   PKO.R:=_refR;
   PKO.BA:=exec('FindInSet','#table','B','BANKID',8+(2-PKO.N));
   {? ~PKO.BA
   || _txt:='Nie dodano rachunku: %1, brak banku.'@[PKO.N]+' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   _jestN:=0;
   _numer:=PKO.N;
   PKO.cntx_psh();
   PKO.index('_PKO');
   PKO.prefix(PKO.OSOBA);
   {? PKO.first()
   || {!
      |? {? PKO.N=_numer || _jestN:=1 ?};
         ~_jestN & PKO.next()
      !}
   ?};
   PKO.cntx_pop();
   {? _jestN
   || _txt:='Nie dodano rachunku: %1, osoby: %2.'@[PKO.N,PKO.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
      _txt+=' %1 %2'['Taki zapis już istnieje.'@,'Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@)
   ?};
   {? PKO.OSOBA & _refR & PKO.BA & ~_jestN
   || {? _ref=null()
      || PKO.prefix();
         __record+=(_ret_val:=PKO.add(1));
         {? _ret_val
         || __TAB.REF:=$PKO.ref();
            __TAB.add();
            _txt:='Dodano rachunek: %1, osoby: %2.'@[PKO.N,PKO.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
         || _txt:='Nie dodano rachunku: %1, osoby: %2.'@
               [PKO.N,PKO.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'INNE BŁĘDY'@)
         ?}
      ?}
   |? PKO.OSOBA=0
   || _txt:='Nie dodano rachunku: %1, brak osoby.'@[PKO.N]+' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@)
   ?};
   PKO.cntx_pop()
?};
~~


\os_us
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli OS_US
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','OS_US')
|| OS_US.cntx_psh();
   OS_US.index('OD');
   OS_US.prefix(OS_US.OSOBA,OS_US.OD);
   _ref:=null();
   {? OS_US.US=null()
   || _txt:='Nie dodano danych historii Urzedu, brak urzędu skarbowego.';
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
      OS_US.cntx_pop();
      return(~~)
   ?};
   {? OS_US.first()
   || _txt:='Istnieje już historia: %1, osoby: %2.'@
         [OS_US.OD$1,OS_US.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL];
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=OS_US.ref()
   ?};
   {? OS_US.OSOBA
   || OS_US.OSOBA();
      {? (_adres:=exec('szukaj','osoba','C',OS_US.OD))=null()
      || _adres:=exec('szukaj','osoba',,OS_US.OD)
      || _adres
      ?};
      OS_US.OS_ADRES:=_adres;
      {? _ref=null()
      || OS_US.prefix();
         __record+=(_ret_val:=OS_US.add(1));
         {? _ret_val
         || __TAB.REF:=$OS_US.ref();
            __TAB.add();
            _txt:='Dodano dane historii Urzędu: %1, osoby: %2.'@
               [OS_US.OD$1,OS_US.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
         || _txt:='Nie dodano danych historii Urzędu: %1, osoby: %2.'@
               [OS_US.OD$1,OS_US.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
         ?}
      ?}
   || _txt:='Nie dodano danych historii Urzedu: %1, brak osoby.'@[OS_US.OD$1+' '+OS_US.US().NU];
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@)
   ?};
   OS_US.cntx_pop()
?};
~~


\os_szkol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli OS_SZKOL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','OS_SZKOL')
|| OS_SZKOL.cntx_psh();
   OS_SZKOL.clear();
   _ref:=null();
   {? OS_SZKOL.find_tab(1,
         'OSOBA',,'=',OS_SZKOL.OSOBA,
         'OD',,'=',OS_SZKOL.OD,
         'DO',,'=',OS_SZKOL.DO,
         'SZKOLA',,'=',OS_SZKOL.SZKOLA,
         'RODZAJ',,'=',OS_SZKOL.RODZAJ,
         'WYDZIAL',,'=',OS_SZKOL.WYDZIAL,
         'KIERUNEK',,'=',OS_SZKOL.KIERUNEK,
         'SPEC',,'=',OS_SZKOL.SPEC,
         'WYK',,'=',OS_SZKOL.WYK,
         'POMIN',,'=',OS_SZKOL.POMIN
      )
   || _txt:='Istnieje już szkoła: %1 , osoby: %2.'@
         [OS_SZKOL.OD$1+' '+OS_SZKOL.SZKOLA().NAZWA,OS_SZKOL.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=OS_SZKOL.ref()
   ?};
   _ok:=1;
   {? OS_SZKOL.OD=#0
   || _txt:='Nie dodano danych o ukończonej szkole, brak daty %1.'@['DO']+' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? OS_SZKOL.DO=#0
   || _txt:='Nie dodano danych o ukończonej szkole, brak daty %1.'@['OD']+' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? OS_SZKOL.OD>OS_SZKOL.DO
   || _txt:='Nie dodano danych o ukończonej szkole, data OD musi być wcześniejsza niż data DO.'@;
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? _ok
   || {? OS_SZKOL.OSOBA
      || {? _ref=null()
         || OS_SZKOL.prefix();
            __record+=(_ret_val:=OS_SZKOL.add(1));
            {? _ret_val
            || __TAB.REF:=$OS_SZKOL.ref();
               __TAB.add();
               _txt:='Dodano dane o ukończonej szkole: %1, osoby: %2'@
                  [  OS_SZKOL.OD$1+' '+OS_SZKOL.SZKOLA().NAZWA,
                     OS_SZKOL.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF
                  ];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
            || _txt:='Nie dodano danych o ukończonej szkole: %1, osoby: %2.'@
                  [  OS_SZKOL.OD$1+' '+OS_SZKOL.SZKOLA().NAZWA,
                     OS_SZKOL.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL
                  ];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?}
         ?}
      || _txt:='Nie dodano danych o ukończonej szkole: %1, brak osoby.'@[OS_SZKOL.OD$1+' '+OS_SZKOL.SZKOLA().NAZWA];
         _txt+=' %1'@['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      ?}
   ?};
   OS_SZKOL.cntx_pop()
?};
~~


\staz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli STAZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','STAZ')
|| STAZ.cntx_psh();
   STAZ.prefix();
   _ref:=null();
   {? STAZ.find_tab(1,
         'FIRMA',,'=',exec('ref_firma','ustawienia'),
         'OSOBA',,'=',STAZ.OSOBA,
         'F',,'=',STAZ.F,
         'DR',,'=',STAZ.DR,
         'DZ',,'=',STAZ.DZ
      )
   || _txt:='Istnieje okres poprzedniego zatrudnienia: %1, osoby: %2.'@
         [STAZ.DR$1+' '+STAZ.F,STAZ.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
      _txt+='. %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=STAZ.ref()
   ?};
   _ok:=1;
   {? STAZ.DR=#0
   || _txt:='Nie dodano okresu poprzedniego zatrudnienia.'@+' %1 %2.'@['Brak daty.'@,'DR'];
      _txt+=' %1'+['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? STAZ.DR>STAZ.DZ & STAZ.DZ<>#0
   || _txt:='Nie dodano okresu poprzedniego zatrudnienia.'@+' Data %1 musi być wcześniejsza niż data %2.'@['DR','DZ'];
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? _ok
   || {? STAZ.OSOBA
      || {? _ref=null()
         || STAZ.prefix();
::          importujemy tylko rekordy z odznaczonym znacznikiem (STAZ.PRACA_R - korekta limitu)
::          dlatego przepisujemy wartości
            STAZ.WU_R:=STAZ.WU;
            STAZ.WUG_R:=STAZ.WUG;
            STAZ.WUZ_R:=STAZ.WUZ;
            STAZ.WUZG_R:=STAZ.WUZG;
            STAZ.WC_R:=STAZ.WC;
            STAZ.WMD_R:=STAZ.WMD;
            STAZ.WMDG_R:=STAZ.WMDG;
            STAZ.WUNSP_R:=STAZ.WUNSP;
            STAZ.WUNSPG_R:=STAZ.WUNSPG;
            {? exec('is_pzd02','ppsf')
            || STAZ.WUSW_R:=STAZ.WUSW;
               STAZ.WUSWG_R:=STAZ.WUSWG;
               STAZ.WUOP_R:=STAZ.WUOP;
               STAZ.WPZ_R:=STAZ.WPZ
            ?};
            __record+=(_ret_val:=STAZ.add(1));
            {? _ret_val
            || _txt:='Dodano okres poprzedniego zatrudnienia: %1, osoby: %2.'@
                  [STAZ.DR$1+' '+STAZ.F,STAZ.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
            || _txt:='Nie dodano okresu poprzedniego zatrudninia: %1, osoby: %2.'@
                  [STAZ.DR$1+' '+STAZ.F,STAZ.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?}
         ?}
      || _txt:='Nie dodano okresu poprzedniego zatrudnienia: %1, brak osoby.'@[STAZ.DR$1+' '+STAZ.F];
         _txt+=' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      ?}
   ?};
   STAZ.cntx_pop()
?};
~~


\staz_h
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli STAZ_H
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','STAZ_H')
|| STAZ_H.cntx_psh();
   STAZ.cntx_psh();
   _refS:=null();
   {? STAZ.find_tab(1,
         'FIRMA',,'=',exec('ref_firma','ustawienia'),
         'OSOBA',,'=',STAZ.OSOBA,
         'F',,'=',STAZ.F,
         'DR',,'=',STAZ.DR,
         'DZ',,'=',STAZ.DZ
      )
   || _refS:=STAZ.ref()
   || _txt:='%1: %2. %3'
         ['Nie dodano okresu historii poprzedniego zatrudnienia'@,STAZ.DR$1+' '+STAZ.F,'Brak okresu zatrudnienia'@];
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? _refS
   || STAZ_H.OZ:=_refS;
      _ok:=1;
      H_ZM.cntx_psh();
      _kz:=STAZ_H.ZM().KZ;
      H_ZM.cntx_pop();

      {? STAZ_H.OD=#0
      || _txt:='%1. %2 %3. %4'
            ['Nie dodano okresu historii poprzedniego zatrudnienia','Brak daty','OD','Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
         _ok*=0
      ?};
      {? _kz<>'Z' & STAZ_H.DO=#0
      || _txt:='%1. %2 %3. %4'
            ['Nie dodano okresu historii poprzedniego zatrudnienia','Brak daty','DO','Rekordu nie dodano.'];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
         _ok*=0
      ?};
      {? _kz<>'Z' & (STAZ_H.RWY<>1 | STAZ_H.RWYL<>1 | STAZ_H.RWYM<>1)
      || _txt:='%1. %2 %3. %4'
            ['Nie dodano okresu historii poprzedniego zatrudnienia','Nadmiarowy wymiar','DO','Rekordu nie dodano.'];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
         _ok*=0
      ?};
      {? STAZ_H.RWY<=0 | STAZ_H.RWYL<=0 | STAZ_H.RWYM<=0 |
         (STAZ_H.RWY<>1 & (STAZ_H.RWYL<>1 | STAZ_H.RWYM<>1) & (STAZ_H.RWYL/STAZ_H.RWYM)$3<>STAZ_H.RWY)
      || _txt:='%1. %2 %3. %4'
            ['Nie dodano okresu historii poprzedniego zatrudnienia','Nieprawidłowy wymiar','DO','Rekordu nie dodano.'];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
         _ok*=0
      ?};
      {? STAZ.DR>STAZ_H.OD | (STAZ.DZ<>#0 & STAZ.DZ<STAZ_H.DO)
      || _txt:='Nie dodano historii okresu poprzedniego zatrudnienia.'@;
         _txt+=' '+'Daty historii muszą się mieścić w okresie zatrudnienia.'@;
         _txt+='  %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _ok*=0
      ?};

::    Próba usunięcia rekordu "domyślnego" STAZ_H utworzonego przy imporcie STAZ (na koniec będzie sprzątanie):
      {? _ok & _kz='Z'
      || STAZ_H.cntx_psh();
         STAZ_H.index('ZM');
         STAZ_H.prefix(_refS,_kz);
         {? STAZ_H.first() & STAZ_H.size()=1 & STAZ_H.RWY=1 & STAZ_H.RWYL=1 & STAZ_H.RWYM=1 & STAZ_H.OD=STAZ.DR &
            STAZ_H.DO=STAZ.DZ
         || STAZ_H.del(1)
         ?};
         STAZ_H.cntx_pop()
      ?};
::    Sprawdzenie czy nie zachodzi na istniejący okres:
      {? _ok
      || _over:=exec('check','overlap',null(),STAZ_H,,,2,
                     {? _kz='Z' || "STAZ_H.ZM().KZ='Z'" || "STAZ_H.ZM().KZ<>'Z'" ?},,'OZ',_refS);
         {? +_over
         || _txt:='%1 %2'[_over,'Rekordu nie dodano.'@];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
            _ok*=0
         ?}
      ?};

      {? _ok
      || STAZ_H.cntx_psh();
         STAZ_H.index('OZ');
         STAZ_H.prefix(_refS,STAZ_H.OD,_kz);
         {? STAZ_H.first()
         || _txt:='Istnieje okres historii poprzedniego zatrudnienia: %1, osoby: %2.'@
               [STAZ_H.OD$1+' '+_kz,STAZ_H.OZ().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
            _txt+=' %1'['Rekordu nie dodano.'@];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
            _ok*=0
         ?};
         STAZ_H.cntx_pop()
      ?};

      {? _ok
      || STAZ_H.prefix();
         {? STAZ_H.RWY=1 & (STAZ_H.RWYL<>1 | STAZ_H.RWYM<>1)
         || STAZ_H.RWY:=(STAZ_H.RWYL/STAZ_H.RWYM)$3
         |? STAZ_H.RWY<>1 & STAZ_H.RWYL=1 & STAZ_H.RWYM=1
         || _licznik:=(STAZ_H.RWY$3)*1000;
            _mianown:=1000;
            _nwd:=exec('nwd','#math',_licznik,_mianown);
            STAZ_H.RWYL:=_licznik/_nwd;
            STAZ_H.RWYM:=_mianown/_nwd
         ?};
         __record+=(_ret_val:=STAZ_H.add(1));
         {? _ret_val
         || _txt:='Dodano okres historii poprzedniego zatrudnienia: %1, osoby: %2.'@
               [STAZ_H.OD$1+' '+_kz,STAZ_H.OZ().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
         || _txt:='Nie dodano okresu historii poprzedniego zatrudnienia: %1, osoby: %2.'@
               [STAZ_H.OD$1+' '+_kz,STAZ_H.OZ().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
         ?}
      ?}
   ?};
   STAZ.cntx_pop();
   STAZ_H.cntx_pop()
?};
~~


\rodzina
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli RD
::   WE: [_a][NUMBER] - czy transfer z Xperstis (x2m) [0/1] domyślnie 0
::   WY:
::  OLD: \rd/edi_ka.fml
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
_x2m:={? var_pres('_a')=type_of(0) || _a || 0 ?};
{? exec('wymag','edi_ka','RD')
|| RD.cntx_psh();
   RD.index('_RODZINA');
   RD.prefix(RD.OSOBA,RD.DA,RD.NA,RD.IM);
   _ok:=1;
   _d0:=date(0,0,0);
   {? RD.first()
   || _txt:='Istnieje już członek rodziny: %1, osoby: %2.'@
         [RD.NA+' '+RD.IM,RD.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL];
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? _ok & ~_x2m & RD.ZCZA='N' & RD.UZOD=_d0
   || _ok*=0;
      _txt:='Brak daty zgłoszenia niezgłoszonego członka rodziny';
      _txt+='Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? _ok
   || {? RD.OSOBA
      || RD.prefix();
         __record+=(_ret_val:=RD.add(1));
         {? _ret_val
         || __TAB.REF:=$RD.ref();
            __TAB.add();
            _txt:='Dodano dane członka rodziny: %1, osoby: %2.'@
               [RD.NA+' '+RD.IM,RD.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
         || _txt:='Nie dodano danych członka rodziny: %1, osoby: %2.'@
               [RD.NA+' '+RD.IM,RD.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
         ?}
      || _txt:='Nie dodano danych członka rodziny: %1, brak osoby.'@[RD.NA+' '+RD.IM]+' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      ?}
   ?};
   RD.cntx_pop()
?};
~~


\pracownik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli P
::   WE:
::   WY:
::  OLD: \p/edi_ka.fml
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','P')
|| _ok:=1;
   P.cntx_psh();
   P.index('PRACOIP');
   P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P,P.IP);
   {? P.first()
   || _txt:='Istnieje już pracownik: '+$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL;
      _txt+='. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? P.OSOBA
   || {? _ok
      || {? ~P.add(1)
         || _txt:='Nie dodano pracownika: '+$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
         || exec('slo_osob','edi_ka',P.F_ZATR,P.OSOBA,P.IP);
            _txt:='Dodano pracownika: '+$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
            __record+=1
         ?}
      ?}
   || _txt:='Nie dodano pracownika: '+$P.IP+', brak osoby. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   P.cntx_pop()
?};
~~


\umowa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli H_UM
::   WE:
::   WY:
::  OLD: \h_um/edi_ka.fml
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','H_UM')
|| _ok:=1;
   H_UM.cntx_psh();
   H_UM.index('OD');
   H_UM.prefix(H_UM.P,H_UM.OD);
   {? H_UM.first()
   || _txt:='Istnieje już umowa: '+H_UM.OD$1;
      _txt+=', pracownika: '+$H_UM.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      _txt+='. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? ~H_UM.P
   || _txt:='Nie dodano umowy: '+H_UM.OD$1+', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? H_UM.OD=#0
   || _txt:='Nie dodano umowy: '+H_UM.OD$1+', brak daty OD. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? ~H_UM.RU
   || _txt:='Nie dodano umowy: '+H_UM.OD$1+', brak rodzaju umowy. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,170,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? H_UM.RU().K='A'
   ||
      {? H_UM.ZAM_ZAW='T' & +form(H_UM.ZAM_OKR)=0
      || _txt:='Nie dodano umowy: '+H_UM.OD$1+', brak planowanego okresu umowy na czas określony. Rekordu nie dodano.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,170,'BRAK WARTOŚCI'@);
         _ok*=0
      ?};
      {? H_UM.ZAM_ZAW='N' & +form(H_UM.ZAM_OKR)<>0
      || _txt:='Dla umowy: '+H_UM.OD$1+', zamiar zawarcia umowy na czas określony ma wartość NIE,
         natomiast planowany okres umowy na czas określony został wypełniony. Zweryfikuj poprawność danych.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,15,'SPRAWDŹ DANE'@)
      ?}
   ?};
   {? H_UM.RU().K<>'A' & (H_UM.ZAM_ZAW='T' | H_UM.PRZ_USPR='T')
   || _txt:='Dla umowy: '+H_UM.OD$1+', nieobecności usprawiedliwione lub zamiar zawarcia umowy na czas określony ma wartość TAK,
         natomiast rodzaj umowy jest inny niż na okres próbny. Wartości tych pól zostaną ustawione jako NIE.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,15,'SPRAWDŹ DANE'@)
   ?};
   {? _ok
   || {? H_UM.add(1)
      || __record+=1;
         _txt:='Dodano umowę: '+H_UM.OD$1+', pracownika: ';
         _txt+=$H_UM.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano umowy: '+H_UM.OD$1+', pracownika: ';
         _txt+=$H_UM.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,170,'INNE BŁĘDY'@)
      ?}
   ?};
   H_UM.cntx_pop()
?};
~~


\aneks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli H
::   WE:
::   WY:
::  OLD: \h/edi_ka.fml
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','H')
|| _ok:=1;
   STN.cntx_psh();
   STN.index('STANONAZ');
   H.cntx_psh();
   H_UM.cntx_psh();
   H.index('_HISTKOD');
   H_UM.index('OD');
   H.prefix(H.P,'Z',H.OD);
   H_UM.prefix(H.P);
   {? H.first()
   || _txt:='Istnieje już przebieg zatrudnienia: %1, pracownika: %2 %3 %4. Rekordu nie dodano.'@
            [H.OD$1,$H.P().IP,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? ~H.P
   || _txt:='Nie dodano przebiegu zatrudnienia: %1, brak pracownika. Rekordu nie dodano.'@[H.OD$1];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? H.OD=#0
   || _txt:='Nie dodano przebiegu zatrudnienia: %1, brak daty OD. Rekordu nie dodano.'@[H.OD$1];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? ~H.WYDZIAL
   || _txt:='Nie dodano przebiegu zatrudnienia: %1, brak wydziału (jedn.org.). Rekordu nie dodano.'@[H.OD$1];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? ~H.RU
   || _txt:='Nie dodano przebiegu zatrudnienia: %1, brak rodzaju umowy. Rekordu nie dodano.'@[H.OD$1];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? ~H.CP
   || _txt:='Nie dodano przebiegu zatrudnienia: %1, brak charakteru pracy. Rekordu nie dodano.'@[H.OD$1];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? H.S1<=0 & H.S4<=0
   || _txt:='Nie dodano przebiegu zatrudnienia: %1, brak płacy lub stawki. Rekordu nie dodano.'@[H.OD$1];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   H.KZ:=exec('FindInSet','#table','H_ZM','ZMIANY','Z',,,1);
   {? ~H.KZ
   || _txt:='Nie dodano przebiegu zatrudnienia: %1, brak kodu zmiany. Rekordu nie dodano.'@[H.OD$1];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? H.PODPIS=#0
   || _txt:='Nie dodano przebiegu zatrudnienia: %1, zerowa data zawarcia. Rekordu nie dodano.'@[H.OD$1];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   |? H.PODPIS>H.OD
   || _txt:='Nie dodano przebiegu zatrudnienia: %1, błędna data zawarcia. Rekordu nie dodano.'@[H.OD$1];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? _ok & H.ODDEL='T' & H.DO=date(0,0,0)
   || _txt:='Nie dodano przebiegu zatrudnienia: %1, błędna data zakończenia przebiegu z oddelegowaniem. '
            'Przebieg z oddelegowaniem nie może być na czas nieokreślony. Rekordu nie dodano.'@[H.OD$1];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? _ok & H.ODDEL='N' & H.KODDEL='T'
   || _txt:='Nie dodano przebiegu zatrudnienia: %1, błędna wypełnienie pola "Praca w kilku krajach" przebiegu '
            'bez oddelegowania. Rekordu nie dodano.'[H.OD$1];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? _ok & (H.CZYWAL='T' | H.CZYWAL2='T' | H.CZYWAL3='T' | H.CZYWAL4='T') & (H.WAL=null() | H.ZWAL=null())
   || _txt:='Nie dodano przebiegu zatrudnienia: %1, błędne wypełnienie %2. Rekordu nie dodano.'@[H.OD$1,
             {? H.WAL=null() & H.ZWAL=null() || 'pól "Waluta" oraz "Tabela kursów"'@
             |? H.WAL=null() || 'pola "Waluta"'@
             |? H.ZWAL=null() || 'pola "Tabela kursów"'@
             ?}];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? ~H.ST
   || _txt:='Nie dodano przebiegu zatrudnienia: %1, brak stanowiska pracy. Rekordu nie dodano.'@[H.OD$1];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
      _ok*=0
   || {? H.SP='T'
      || STN.prefix(H.ST().ST,);
         {? STN.first() & (STN.SP<>'T' | ~STN.RP | ~STN.S_ZUS)
         || _txt:='Brak informacji o warunkach szczególnych lub szczególnym charakterze pracy przy stanowisku '
                  'w przebiegu zatrudnienia: %1, pracownika: %2 %3 %4.'@
                  [H.OD$1,$H.P().IP,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
         ?}
      ?}
   ?};
   {? _ok
   || VAR.P:=0;
      H.P();
      _ret:=exec('h','overlap');
      {? (var_pres('_ret')=type_of('') & +_ret) | (var_pres('_ret')=type_of(0) & ~_ret)
      || _txt:='Nie dodano zatrudnienia: %1, pracownika: %2 %3 %4, istnieje konflikt dat. Rekordu nie dodano.'@
               [H.OD$1,$H.P().IP,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _ok*=0
      ?}
   ?};
   {? _ok
   || H.P().OSOBA();
      H.OS_ADRES:=exec('szukaj','osoba',,H.OD);
      {? ~H.OS_ADRES
      || _txt:='Nie dodano przebiegu zatrudnienia: %1, adres nie został znaleziony. Rekordu nie dodano.'@[H.OD$1];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
         _ok*=0
      ?}
   ?};
   {? _ok
   || {? H_UM.find_le(H.OD)
      || {? H_UM.RU=H.RU
         || _dod0:=(H.ODDEL='T' & H.S1=0 & (H.S2<>0 | H.S3<>0));
            {? H.add(1)
            || H.UMOWA:=H_UM.ref();
               __record+=(_ret_val:=H.put(1));
               _txt:='Dodano przebieg zatrudnienia: %1, pracownika: %2 %3 %4.'@
                     [H.OD$1,$H.P().IP,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
               {? H.ODDEL='T' & H.S4<=0
               || _txt:='W celu poprawnego naliczania list płac wynagrodznie za okres oddelegowania '
                        'powinno znajdować się w sekcji "Płaca oddelegowanie". '
                        'Należy zweryfikować wypełnienie pól.'@;
                  exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
               ?};
               {? _dod0
               || _txt:='Przebieg z zaznaczonym polem "Oddelegowanie". Informacje o dodatkach zostały wyzerowane.'@;
                  exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
               ?};
:: ER/WRT/XP/23.25/2401/0057 - EDI import przebiegu zatrudnienia nie odtwarza struktury:
:: Stanowiska i pozycje w organizacji
               _par313:=exec('get_par','#parametr',313,2)='T';
               STO.cntx_psh();
               STO.index('UNIQUE');
               STO.prefix();
               {? ~STO.find_key(H.WYDZIAL,H.ST)
               || STO.UD_SKL:=H.WYDZIAL;
                  STO.STN:=H.ST;
                  STO.ST:=STO.STN().ST;
                  {? STO.add(1) & _par313 & H.POZWORG
                  || PSTO.cntx_psh();
                     PSTO.index('PSTO');
                     PSTO.blank(1);
                     PSTO.POZWORG:=H.POZWORG;
                     PSTO.STO:=STO.ref();
                     PSTO.add(1);
                     PSTO.cntx_pop()
                  ?}
               ?};
               STO.cntx_pop()
            || _ok*=0;
               _txt:='Nie dodano zatrudnienia: %1, pracownika: %2 %3 %4.'@
                     [H.OD$1,$H.P().IP,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?}
         || _ok*=0;
            _txt:='Nie dodano zatrudnienia (różne typy umów): %1, pracownika: %2 %3 %4.'@
                  [H.OD$1,$H.P().IP,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
         ?}
      || _ok*=0;
         _txt:='Nie dodano umowy (brak umowy): %1, pracownika: %2 %3 %4.'@
               [H.OD$1,$H.P().IP,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?};
   H.cntx_pop();
   H_UM.cntx_pop();
   STN.cntx_pop()
?};
~~


\p_ipod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli P_IPOD
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','P_IPOD')
|| _ok:=1;
   P_IPOD.cntx_psh();
   P_IPOD.index('OD');
   P_IPOD.prefix(P_IPOD.P,P_IPOD.OD);
   {? P_IPOD.first()
   || _txt:='Istnieje już informacja podatkowa: '+P_IPOD.OD$1;
      _txt+=', dla pracownika: '+$P_IPOD.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      _txt+='. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? P_IPOD.PROC<>0 & P_IPOD.PRZYCH<>0
   || _txt:='Tylko jedna z wartości "Dochód z poprzednich miejsc pracy", "Procent podatku" może być podana.'@;
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? P_IPOD.P
   || {? _ok
      || {? ~P_IPOD.add(1)
         || _txt:='Nie dodano informacji podatkowej: '+P_IPOD.OD$1;
            _txt+=', dla pracownika: '+$P_IPOD.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
         || _txt:='Dodano informację podatkową: '+P_IPOD.OD$1;
            _txt+=', dla pracownika: '+$P_IPOD.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
            __record+=1
         ?}
      ?}
   || _txt:='Nie dodano informacji podatkowej: '+P_IPOD.OD$1+', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   P_IPOD.cntx_pop()
?};
~~


\kredyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli K
::   WE:
::   WY:
::  OLD: \k/edi_ka.fml
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','K')
|| _ok:=1;
   K.cntx_psh();
   K.index('KREDYTY');
   K.prefix(K.P,K.DU,K.PO);
   {? K.first()
   || _txt:='Istnieje już kredyt: '+K.PO().RT;
      _txt+=', dla pracownika: '+$K.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      _txt+='. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? ~K.PO
   || _ok*=0;
      _txt:='Nie dodano kredytu pracownika: '+$K.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      _txt+=', brak rubryki. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? K.P
   || {? _ok
      || K.prefix();
         {? ~K.add(1)
         || _txt:='Nie dodano kredytu: '+K.PO().RT;
            _txt+=', dla pracownika: '+$K.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
         || _txt:='Dodano kredyt: '+K.PO().RT;
            _txt+=', dla pracownika: '+$K.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
            __record+=1
         ?}
      ?}
   || _txt:='Nie dodano kredytu: '+K.PO().RT+', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   K.cntx_pop()
?};
~~


\kre_his
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli K - rozliczenie kredytu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','KRE_HIS')
|| _ok:=1;
   K.cntx_psh();
   K.index('KREDYTY');
   K.prefix(K.P,K.DU,K.PO);
   _refK:={? K.first() || K.ref() || null() ?};
   KRE_HIS.cntx_psh();
   KRE_HIS.index('KRE_HIS');
   KRE_HIS.prefix(_refK,KRE_HIS.DATA,KRE_HIS.OPIS);
   {? KRE_HIS.first()
   || _txt:='Istnieje już rozliczenia kredytu: '+KRE_HIS.DATA$1+' '+KRE_HIS.KREDYT().PO().RT;
      _txt+=', dla pracownika: '+$K.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      _txt+='. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? ~_refK
   || _ok*=0;
      _txt:='Nie dodano rozliczenia kredytu: '+KRE_HIS.DATA$1+' '+KRE_HIS.OPIS;
      _txt+=', brak kredytu. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? _ok
   || KRE_HIS.KREDYT:=_refK;
      KRE_HIS.prefix();
      {? ~KRE_HIS.add(1)
      || _txt:='Nie dodano rozliczenia kredytu: '+KRE_HIS.DATA$1+' '+KRE_HIS.KREDYT().PO().RT;
         _txt+=', dla pracownika: '+$K.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
         _ok*=0
      || _txt:='Dodano rozliczenie kredytu: '+KRE_HIS.DATA$1+' '+KRE_HIS.KREDYT().PO().RT;
         _txt+=', dla pracownika: '+$K.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
         __record+=1
      ?}
   ?};
   KRE_HIS.cntx_pop();
   K.cntx_pop()
?};
~~


\kart_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli KART_DOD
::   WE: _a [STRING] - symbol kartoteki dodatkowej
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','KART_DOD')
|| _ok:=1;
   KART_DOD.index('KART_DOD');
   KART_DOD.KART_DEF:=exec('kart_def','kart_dod',_a);
   KART_DOD.prefix(exec('ref_firma','ustawienia'),KART_DOD.KART_DEF,KART_DOD.OSOBA,KART_DOD.OD);
:: ER/WRT/XP/23.25/2311/0049 - Niezrozumiałe komunikaty przy imporcie kar i wyróżnień
   {? (KART_DOD.OD=#0 & KART_DOD.KART_DEF().WER<>'KTOD') |
      (KART_DOD.KART_DEF().WER<>'KTOD' &
      (_a='DOD_KWAL' | _a='BADANIE' | _a='PODW_MAC' | _a='SZKOLBHP' | _a='FP_FGSP') &
      (KART_DOD.DO=#0 | KART_DOD.OD>KART_DOD.DO))
   || _txt:='Błędnie wprowadzone daty "OD" i/lub "DO", kartoteka: %1, osoba: %2. Rekordu nie dodano.'@
         [_a,OSOBA.NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,170,'POPRAW DANE'@);
      _ok*=0
   ?};
   {? _ok
   || {? KART_DOD.OSOBA
      || KART_DOD.prefix();
         __record+=(_ret_val:=KART_DOD.add(1));
         {? _ret_val
         || _txt:='Dodano dane do kartoteki %1. Opis: %2, osoba: %3'@
               [_a,KART_DOD.OPIS,KART_DOD.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
         || _txt:='Nie dodano danych do kartoteki %1. Opis: %2, osoba: %3.'@
               [_a,KART_DOD.OPIS,KART_DOD.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
         ?}
      || _txt:='Nie dodano danych do kartoteki %1. Opis: %2, brak osoby. %3'@[_a,KART_DOD.OPIS,'Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      ?}
   ?}
?};
~~


\kart_dod_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [19.42]
:: OPIS: Warunkuje eksport rekordu do pliku csv
::   WE: _a - Symbol definicji kartoteki dodatkowej
::   WY: 1 - eksport możliwy
::       0 - eksport niemożliwy
::----------------------------------------------------------------------------------------------------------------------
$($(EDI_D.TAB + '.KART_DEF().SYMBOL'))()=__selimp.SYM


\badania
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli BDO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','BDO')
|| _ok:=1;
   BDO.cntx_psh();
   BDO.index('PTYPDTO');
   BDO.prefix(BDO.P,BDO.TYP,BDO.DTO);
   {? BDO.first()
   || _txt:='Istnieje już takie badanie lekarskie: '+BDO.DTO$1;
      _txt+=', dla pracownika: '+$BDO.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      _txt+='. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? BDO.WYNIK=null()
   || _txt:='Kod podany w polu WYNIK nie występuje w słowniku kodów ZUS dotyczących wyników badań. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? BDO.P
   || {? _ok
      || {? ~BDO.add(1)
         || _txt:='Nie dodano badania lekarskiego: '+BDO.DTO$1;
            _txt+=', dla pracownika: '+$BDO.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
         || _txt:='Dodano badanie lekarskie: '+BDO.DTO$1;
            _txt+=', dla pracownika: '+$BDO.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
            __record+=1;
            {? BDO.WYNIK().KOD='21' & BDO.DTNB=#0
            || _txt:='Brak daty następnego badania lekarskiego dla pracownika: %1.'@[
                  $BDO.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?}
         ?}
      ?}
   || _txt:='Nie dodano badania lekarskiego: '+BDO.DTO$1+', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   BDO.cntx_pop()
?};
~~


\kart_url
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli KART_URL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','KART_URL')
|| _ok:=1;
   KART_URL.cntx_psh();
   KART_URL.index('ROK_PRAC');
   KART_URL.prefix(KART_URL.ROK,KART_URL.P);
   {? KART_URL.first()
   || _txt:='Istnieje już karta urlopowa: '+$KART_URL.ROK;
      _txt+=', dla pracownika: '+$KART_URL.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      _txt+='. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? KART_URL.P
   || {? _ok
      || {? ~KART_URL.add(1)
         || _txt:='Nie dodano karty urlopowej: '+$KART_URL.ROK;
            _txt+=', dla pracownika: '+$KART_URL.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
         || _txt:='Dodano kartę urlopową: '+$KART_URL.ROK;
            _txt+=', dla pracownika: '+$KART_URL.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
            __record+=1
         ?}
      ?}
   || _txt:='Nie dodano karty urlopowej: '+$KART_URL.ROK+', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   KART_URL.cntx_pop()
?};
~~


\tabl_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO  [17.00]
:: OPIS: Tablica translacji
::   WE:
::   WY:
::  OLD: \__tabl_r/edi_ka.fml
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','__TABL_R')
|| R.index('RUBKOD');
   R.prefix();
   {? R.find_key(__TABL_R.RN)
   || {? __TABL_R.add()
      || _txt:='Dodano kod: '+__TABL_R.KOD+', tłumaczony na rubrykę płacową: '+$R.RN+' '+R.RT+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
         __record+=1
      || _txt:='Nie dodano kodu: '+__TABL_R.KOD+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   || _txt:='Nie dodano kodu: '+__TABL_R.KOD+', brak rubryki płacowej: '+$__TABL_R.RN+'.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?}
?};
~~


\listy_plac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli O
::   WE:
::   WY:
::  OLD: \o/edi_ka.fml
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','O')
|| _ok:=1;
   O.cntx_psh();
   O.index('LISTYPLA');
   O.prefix(exec('ref_firma','ustawienia'),O.F_ZATR().KOD,O.R,O.M,O.T().T,);
   O.LT:=-('L'+($O.R+2)+('0'+$O.M+2)+O.T().T);
   _ref:=null();
   {? O.first()
   || _txt:='Istnieje już lista płac: '+O.LT+'. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=O.ref()
   ?};
   {? ~O.T
   || _ok*=0;
      _txt:='Nie dodano listy: '+O.LT;
      _txt+=', brak typu listy. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   || O.F_ZATR:=O.T().F_ZATR
   ?};
   {? ~O.ODDZIAL
   || _ok*=0;
      _txt:='Nie dodano listy: '+O.LT;
      _txt+=', brak oddziału. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? ~O.WYDZIAL
   || _ok*=0;
      _txt:='Nie dodano listy: '+O.LT;
      _txt+=', brak jednostki organizacyjnej. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? _ok & _ref=null()
   || O.prefix();
      __record+=(_ret_val:=O.add(1));
      {? _ret_val
      || _txt:='Dodano listę: '+O.LT+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano listy: '+O.LT+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?};
   O.cntx_pop()
?};
~~


\lista_skladniki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli LS
::   WE:
::   WY:
::  OLD: \ls/edi_ka.fml
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','LS')
|| _ok:=1;
   O.prefix(exec('ref_firma','ustawienia'),O.R,O.M,O.T().T,);
   _refO:={? O.first() || O.ref() || null() ?};
   {? _refO
   || {? ~(O.LT=LS.name()) | ~+VAR.NAZWALIS || FUNKCJE.OTWOLIST() ?}
   || _ok*=0;
      _txt:='Nie dodano pozycji listy, brak nagłówka listy płac. ';
      _txt+='Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@)
   ?};
   {? ~LS.P
   || _ok*=0;
      _txt:='Nie dodano pozycji listy, brak pracownika. ';
      _txt+='Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@)
   ?};
   {? ~LS.RB
   || _ok*=0;
      _txt:='Nie dodano pozycji listy, brak rubryki płac. ';
      _txt+='Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@)
   ?};
   {? _ok & LS.KW<>0
   || LS.index('PRACNRRU');
      LS.prefix(LS.P,LS.RB().RN);
      LS.LP:=R.LP;
      LS.MOD_KTO:=OPERATOR.USER;
      LS.MOD_DATA:=date();
      LS.MOD_CZAS:=time();
      LS.O:=_refO;
      __record+=(_ret_val:=LS.add(1));
      {? _ret_val
      || _txt:='Dodano pozycję listy: '+VAR.NAZWALIS+' '+$R.RN+' '+$LS.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano pozycji listy: '+VAR.NAZWALIS+' '+$R.RN+' '+$LS.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?}
?};
~~


\godziny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli G
::   WE:
::   WY:
::  OLD: \g/edi_ka.fml
:-----------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','G')
|| _ok:=1;
   O.cntx_psh();
   O.index('LISTYPLA');
   O.prefix(exec('ref_firma','ustawienia'),__F_ZATR.O,O.R,O.M,O.T().T);
   _refO:={? O.first() || O.ref() || null() ?};
   {? _refO
   || _mask:='godz'+('0000'+$O.R+4);
      {? ~(_mask=G.name()) || _ok*=G.use(_mask) ?}
   || _ok*=0;
      _txt:='Nie dodano godzin przepracowanych';
      _txt+=', brak nagłówka listy płac. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? ~G.P
   || _ok*=0;
      _txt:='Nie dodano godzin przepracowanych';
      _txt+=', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? ~G.K
   || _ok*=0;
      _txt:='Nie dodano godzin przepracowanych';
      _txt+=', brak rubryki płac. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? _ok & G.G<>0
   || G.index('MSCDKW');
      G.M:=G.D~2;
      {? O.M<>G.M || G.M:=O.M ?};
      G.LT:=~-O.LT;
      G.prefix(G.P,G.M,G.R,G.D,G.K().RN);
      __record+=(_ret_val:=G.add(1));
      {? _ret_val
      || _txt:='Dodano godziny przepracowane: '+G.D$1+' '+G.K().RT+' '+$G.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano godzin przepracowanych: '+G.D$1+' '+G.K().RT+' '+$G.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?};
   O.cntx_pop()
?};
~~


\dod_skl_plac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli LSS
::   WE:
::   WY:
::  OLD: \lss/edi_ka.fml
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','LSS')
|| _ok:=1;
   LSS.cntx_psh();
   LSS.index('PROPOZYC');
   LSS.prefix(LSS.P,LSS.S().RN,LSS.KK,LSS.OD);
   _ref:=null();
   {? LSS.first()
   || _txt:='Istnieje już stały składnik listy: '+LSS.OD$1+' '+LSS.S().RT+'. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=O.ref()
   ?};
   {? ~LSS.P
   || _ok*=0;
      _txt:='Nie dodano stałego składnika listy: '+LSS.OD$1+' '+LSS.S().RT;
      _txt+=', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? ~LSS.S
   || _ok*=0;
      _txt:='Nie dodano stałego składnika listy: '+LSS.OD$1+' '+LSS.S().RT;
      _txt+=', brak rubryki płac. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? LSS.OD<>#0 & LSS.DO<>#0 & LSS.OD>LSS.DO
   || _txt:='Nie dodano stałego składnika listy: '+LSS.OD$1+' '+LSS.S().RT;
      _txt+=', data DO jest wcześniejsza niż OD. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? _ok & _ref=null()
   || LSS.prefix();
      __record+=(_ret_val:=LSS.add(1));
      {? _ret_val
      || _txt:='Dodano stały składnik listy: '+LSS.OD$1+' '+LSS.S().RT+' '+$LSS.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano stałego składnika listy: '+LSS.OD$1+' '+LSS.S().RT+' '+$LSS.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?};
   LSS.cntx_pop()
?};
~~


\nieobecnosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli N
::   WE:
::   WY:
::  OLD: \n/edi_ka.fml
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','N')
|| _ok:=1;
   _o_t:={? ~O.T || '' || O.T().T ?};
   O.cntx_psh();
   O.index('LISTYPLA');
   O.prefix(exec('ref_firma','ustawienia'),__F_ZATR.O,O.R,O.M,_o_t,);
   {? ~O.first()
   || _ok*=0;
      _txt:='Nie dodano nieobecności';
      _txt+=', brak nagłówka listy płac. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _lista:=''
   || _lista:=~O.LT
   ?};
   N.cntx_psh();
   N.index('NIEOBECN');
   N.prefix('N',N.P,N.OD,'Z');
   _ref:=null();
   {? N.first()
   || _txt:='Istnieje już nieobecność: '+N.OD$1+' '+N.NB().RT+'. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=O.ref()
   ?};
   {? ~N.P
   || _ok*=0;
      _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT;
      _txt+=', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? ~N.NB
   || _ok*=0;
      _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT;
      _txt+=', brak rubryki płac. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? ~N.KDSW & ~__RUB.sys_attr(N.NB,14350)
   || _txt:='%1: %2 %3, %4. %5.'['Nieobecność'@,N.OD$1,N.NB().RT,'brak kodu świadczenia'@,
         'Dla poprawnego działania systemu należy wypełnić kod świadczenia po imporcie'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? N.OD=#0
   || _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT;
      _txt+=', data OD nie może być nieokreślona. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? N.DO=#0
   || _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT;
      _txt+=', data DO nie może być nieokreślona. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? N.OD>N.DO
   || _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT;
      _txt+=', data DO jest wcześniejsza niż OD. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? _ok
   || VAR.P:=0;
      N.P();
      P.get();
      _ret:=exec('n','overlap');
      {? var_pres('_ret')=type_of('') & +_ret
      || _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT+' '+$N.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
         _txt+=', istnieje konflikt dat. Rekordu nie dodano.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _ok*=0
      ?}
   ?};
   {? _ok & _ref=null()
   || N.P().OSOBA();
      N.NB();
      N.LT:=_lista;
      N.NK:=N.DO-N.OD+1;
      N.STD:=((N.POD+N.POZ)*{? N.PROC>0 || N.PROC || 100 ?}/100)/30$2;
      N.prefix();
      __record+=(_ret_val:=N.add(1));
      {? _ret_val
      || _txt:='Dodano nieobecność: '+N.OD$1+' '+N.NB().RT+' '+$N.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
         {? __RUB.sys_attr(N.NB,111,N.OD) & ~N.WART
         || _txt:='Nieobecność: '+N.OD$1+' '+N.NB().RT+' ';
            _txt+='używana w atrybucie 111 - Wypoczynkowy bez podanej kwoty świadczenia. ';
            _txt+='Należy zweryfikować zaimportowane dane ponieważ mają wpływ na wyliczenia ';
            _txt+='podstaw wynagrodzeń/zasiłków chorobowych.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
         ?}
      || _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT+' '+$N.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?};
   N.cntx_pop();
   O.cntx_pop()
?};
~~


\tz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie pozycji tabeli TZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','N')
|| _ok:=1;
   TZ.cntx_psh();
   N.cntx_psh();
   TZ.use('tabz'+form(N.OD~1,-4,0,'99'));
   TZ.index('ZASTAB');
   N.index('NIEOBECN');
   N.prefix('N',N.P,N.OD,'Z');
   TZ.N:={? N.first() || N.ref() || _ok*=0; null() ?};
   TZ.M:=date(O.R,O.M,0);
   _ref:=null();
   TZ.prefix(TZ.R,TZ.N,TZ.M);
   {? TZ.first() & TZ.STATUS<>'X'
   || _txt:='Istnieje już rozliczenie nieobecności: '+TZ.M$1+'. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=TZ.ref()
   |? TZ.first() & TZ.STATUS='X'
   || _txt:='Istnieje już rozliczenie nieobecności: '+'nadpisuję!';
      TZ.del()
   ?};
   {? ~N.P
   || _ok*=0;
      _txt:='Nie dodano rozliczenia nieobecności: '+TZ.M$1;
      _txt+=', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? ~TZ.N
   || _ok*=0;
      _txt:='Nie dodano rozliczenia nieobecności: '+TZ.M$1;
      _txt+=', brak nieobecności. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? N.OD=#0
   || _txt:='Nie dodano rozliczenia nieobecności: '+TZ.M$1;
      _txt+=', data nieobecności nie może być nieokreślona. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? TZ.M=#0
   || _txt:='Nie dodano rozliczenia nieobecności: '+TZ.M$1;
      _txt+=', data nie może być nieokreślona. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? _ok & _ref=null()
   || TZ.STATUS:='I';
      TZ.prefix();
      __record+=(_ret_val:=TZ.add(1));
      {? _ret_val
      || _txt:='Dodano rozliczenie nieobecność: '+TZ.M$1+' '+TZ.N().NB().RT+' '+$N.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano rozliczenia nieobecności: '+TZ.M$1+' '+TZ.N().NB().RT+' '+$TZ.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?};
:: usunięcie dublujących się zapisów, jeśli jest ze statusem I, to nie może być X
   TZ.prefix('E',TZ.N); _xx:=0;
   {? TZ.last()
   || {! |? {? TZ.STATUS='I' || _xx:=1 ?}; TZ.prev() & _xx=0 !}
   ?};
   {? _xx & TZ.last()
   || {! |? {? TZ.STATUS='X' || TZ.del() || TZ.prev() ?} !}
   ?};
   TZ.cntx_pop();
   N.cntx_pop()
?};
~~


\blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [14,10]
:: OPIS: Uzupełnianie pol importu
::   WE: Wskazanie na tabelę
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a='OSOBA'
|| OSOBA.KALI:='T';
   OSOBA.REJ_DATA:=date();
   OSOBA.REJ_KTO:=OPERATOR.USER().KOD;
   OSOBA.REJ_INFO:='Import danych'
|? _a='P'
|| P.GRAFIK:=P.ODDEL:='N';
   P.KIN:=P.ZA:='T';
   P.WY:=1;
   P.F_ZATR:=__F_ZATR.find('P');
   P.FIRMA:=exec('ref_firma','ustawienia');
   P.ROU:=null()
|? _a='OS_ADRES'
|| ''
|? _a='P_INFO'
|| P_INFO.ST:='K';
   P_INFO.SM:='N';
   P_INFO.BL_KC:='N';
   P_INFO.FIRMA:=exec('ref_firma','ustawienia');
   P_INFO.SZCZKOD:=null();
   P_INFO.SZCZOD:=P_INFO.SZCZDO:=date(0,0,0)
|? _a='PKO'
|| ''
|? _a='H'
|| H.CZYWAL:=H.CZYWAL2:=H.CZYWAL3:=H.SP:=H.MAC:=H.CZY_NADG:=H.PAT:=H.ODDEL:=H.KODDEL:='N';
   H.S2T:=H.S3T:='K';
   H.PMP:='T';
   H.WY:=H.WYL:=H.WYM:=H.RWY:=H.RWYL:=H.RWYM:=1
|? _a='H_UM'
|| H_UM.SW:=H_UM.WYM_UZAS:='N';
   H_UM.ROU:=null();
   H_UM.EKW_LICZ:='N'
|? _a='OS_US'
|| ''
|? _a='OS_SZKOL'
|| OS_SZKOL.POMIN:='N'
|? _a='STAZ'
|| STAZ.FIRMA:=exec('ref_firma','ustawienia');
   STAZ.ROU:=null()
|? _a='STAZ_H'
|| STAZ.FIRMA:=exec('ref_firma','ustawienia')
|? _a='RD'
|| ''
|? _a='P_IPOD'
|| P_IPOD.ST:='W'
|? _a='K'
|| ''
|? _a='KRE_HIS'
|| ''
|? _a='KART_DOD'
|| KART_DOD.FIRMA:=exec('ref_firma','ustawienia')
|? _a='KART_URL'
|| ''
|? _a='BDO'
|| ''
|? _a='O'
|| _firma:=exec('ref_firma','ustawienia');
   O.ODDZIAL:=exec('odd_par_1','ustawienia');
   O.WYDZIAL:=exec('ud_skl_firma','schemat','PODZORG');
   O.Z:='T';
   O.OLAP:='N';
   O.FIRMA:=_firma
|? _a='LS'
|| ''
|? _a='G'
|| G.R:='G';
   G.BL:='T';
   G.AUTO:='N';
   G.FIRMA:=exec('ref_firma','ustawienia')
|? _a='LSS'
|| ''
|? _a='N'
|| N.MIS:=N.KOR:=N.PRZELICZ:=N.PARTDAY:='N';
   N.NRG_AUTO:='T';
   N.RODZAJ:='Z';
   N.UW:='D';
   N.FIRMA:=exec('ref_firma','ustawienia')
|? _a='TZ'
|| TZ.W:='T'
|? _a='ZC'
|| ZC.ODDZIAL:=exec('odd_par_1','ustawienia');
   ZC.CZYWAL:=ZC.TYP:=ZC.OZ:=ZC.WN_FC:=ZC.WN_ZUS:='N'
|? _a='RH'
|| RH.FIRMA:=exec('ref_firma','ustawienia');
   RH.KK:=RH.O:=RH.ZC_INFO:=null();
   RH.BL:='T';
   RH.ZAS:=RH.Z:=RH.KOR:='N'
|? _a='H_ODDE'
|| H_ODDE.M_PRAC:=null();
   H_ODDE.M_ZAM:=null()
|? _a='OS_ZWPOD'
|| OS_ZWPOD.FIRMA:=exec('ref_firma','ustawienia')
|? _a='OS_ZWZAL'
|| OS_ZWZAL.FIRMA:=exec('ref_firma','ustawienia')
|? _a='P_IPOD_Z'
|| P_IPOD.ST:='W';
   P_IPOD.PRZYCH:=P_IPOD.PROC:=0;
   P_IPOD.KU:=P_IPOD.OP:='N'
|? _a='PPSF_ADR'
|| ''
|? _a='PPSF_H'
|| ''
|? _a='PPSFN'
|| PPSFN.FIRMA:=exec('firma','ustawienia');
   PPSFN.PORTAL:='T';
   PPSFN.ORIGIN:='R';
   PPSFN.AZ:='R'
|? _a='PPSF_PO'
|| _wx_size:=exec('ppsf_no_wx_size','ppsf');
   {! _lp:=1 .. _wx_size
   |! ($('PPSF_PO.O%1:=\'N\''[$_lp]))()
   !};
   {? PPSF_PO.PPSF_NO
   || PPSF_PO.AKCEPT:=exec('ppsf_po_akcept_val','ppsf')
   ?}
|? _a='KOT_TEST'
|| KOT_TEST.FIRMA:=exec('firma','ustawienia');
   KOT_TEST.CZY_PD:='N'
|| FUN.info('Błąd w blank/edi_ka'@)
?}


\ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Formuła inicjująca odczyt
::   WE: Wskazanie na tabele
::   WY: 1/0 Spełnione/nie spełnione warunki inicjujące import
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__record','__linia');
__linia:=1;
__record:=0;
_size:=
   "  _tab:=($(_a))();
      _tab.clear();
      {? _tab.size()=0
      || exec('add_kom','#message','%1 %2 %3.'['Brak danych.'@,'Tabela'@,_a],2,'BRAK DANYCH'@); 0
      || 1
      ?}
   ";
{? _a='OSOBA'
|| VAR_DEL.delete('__TAB');
   __TAB:=tab_tmp(,'REF','STRING[16]',);
   1
|? _a='P'
|| exec('__F_ZATR','object');
   _txt:='';
   _f_zatr:=__F_ZATR.find('P');
   {? _f_zatr=null()
   || exec('add_kom','#message','%1 %2'['Brak danych.'@,'Forma zatrudnienia P.'@],2,'BRAK DANYCH'@)
   ?};
   _size('OSOBA') & _f_zatr
|? _a='OS_ADRES'
|| _size('OSOBA')
|? _a='P_INFO'
|| exec('odd_nfz','personel');
   exec('s_zus_import','personel',0);
   ADRES.cntx_psh();
   ADRES.index('ADRES');
   ADRES.prefix(exec('slo_typ','ext_slo','KASACH'));
   {? ADRES.size()=0 || exec('add_kom','#message','%1 %2'['Brak danych.'@,'Tabela ADRES.'@],2,'BRAK DANYCH'@) ?};
   _ret:=(_size('OSOBA') & ADRES.size() & _size('S_ZUS'));
   ADRES.cntx_pop();
   _ret
|? _a='PKO'
|| VAR_DEL.delete('__TAB');
   __TAB:=tab_tmp(,'REF','STRING[16]',);
   exec('RB','object');
   R.index('RUBKLKOD');
   R.prefix('B');
   {? R.size()=0 || exec('add_kom','#message','%1 %2'['Brak danych.'@,'Tabela R.'@],2,'BRAK DANYCH'@) ?};
   _size('OSOBA') & R.size()
|? _a='P_H_H_UM'
|| exec('__F_ZATR','object');
   UD_SKL.cntx_psh();
   UD_SKL.index('SYMBOL');
   UD_SKL.prefix(exec('szukaj_ud_typ','schemat','PODZORG'));
   RU.cntx_psh();
   RU.index('K');
   RU.prefix(exec('slo_typ','ext_slo','UMPRAC'));
   _txt:='Brak danych. Tabela UD_SKL.';
   {? UD_SKL.size()=0 || exec('add_kom','#message',_txt,2,'BRAK DANYCH') ?};
   _txt:='Brak danych. Tabela RU.';
   {? RU.size()=0 || exec('add_kom','#message',_txt,2,'BRAK DANYCH') ?};
   _ret:=(_size('OSOBA') & UD_SKL.size() & RU.size() & _size('CP') & _size('H_ZM'));
   UD_SKL.cntx_pop();
   RU.cntx_pop();
   VAR_DEL.delete('__TAB');
   __TAB:=tab_tmp(,'REF','STRING[16]',);
   _ret
|? _a='OS_US'
|| OS_US.trig_off('*','*');
   __USNDX:=US.ndx_tmp(,1,'EDEK_SYM',,);
   VAR_DEL.delete('__TAB');
   __TAB:=tab_tmp(,'REF','STRING[16]',);
   _size('OSOBA')
|? _a='OS_SZKOL'
|| VAR_DEL.delete('__TAB');
   __TAB:=tab_tmp(,'REF','STRING[16]',);
   _size('OSOBA') & _size('WYK')
|? _a='STAZ'
|| exec('__KAL','object');
   _kal:=__KAL.set_cal('standard');
   {? ~_kal || exec('add_kom','#message','Brak kalendarza ''standard''.'@,2,'BRAK DANYCH'@) ?};
   _size('OSOBA') & _kal
|? _a='STAZ_H'
|| exec('__KAL','object');
   _kal:=__KAL.set_cal('standard');
   {? ~_kal || exec('add_kom','#message','Brak kalendarza ''standard''.'@,2,'BRAK DANYCH'@) ?};
   _size('OSOBA') & _kal & _size('STAZ')
|? _a='RD'
|| VAR_DEL.delete('__TAB');
   __TAB:=tab_tmp(,'REF','STRING[16]',);
   _size('OSOBA') & _size('S_ZUS')
|? _a='H_UM'
|| exec('__F_ZATR','object');
   exec('__KAL','object');
   RU.cntx_psh();
   RU.index('K');
   RU.prefix(exec('slo_typ','ext_slo','UMPRAC'));
   _txt:='Brak danych. Tabela RU.'@;
   {? RU.size()=0 || exec('add_kom','#message',_txt,2,'BRAK DANYCH'@) ?};
   _ret:=(_size('P') & RU.size());
   RU.cntx_pop();
   _ret
|? _a='H'
|| exec('__F_ZATR','object');
   exec('__KAL','object');
   exec('__RUB','object');
   exec('MASK','object');
   _sch:=1;
   {? exec('szukaj_ud_typ','schemat','PODZORG')=null()
   || _sch:=0;
      exec('add_kom','#message','Brak definicji podziałów organizacyjnych'@,2,'BRAK DANYCH'@)
   ?};
   {? exec('domyslny','schemat','PODZORG')=null()
   || _sch:=0;
      exec('add_kom','#message','Brak domyślnego schmatu struktury organizacyjnej'@,2,'BRAK DANYCH'@)
   ?};
   RU.cntx_psh();
   RU.index('K');
   RU.prefix(exec('slo_typ','ext_slo','UMPRAC'));
   _txt:='Brak danych. Tabela RU.'@;
   {? RU.size()=0 || exec('add_kom','#message',_txt,2,'BRAK DANYCH'@) ?};
   _ret:=(_size('H_UM') & RU.size() & _size('CP') & _size('H_ZM') & _sch);
   RU.cntx_pop();
   _ret
|? _a='P_IPOD'
|| exec('__F_ZATR','object');
   _size('P')
|? _a='K'
|| {? var_pres('__TABL_R')>0
   || __TABL_R.index(__TABL_R.ndx_tmp(,1,'KOD',,,'KOD',,));
      exec('__F_ZATR','object');
      R.index('RUBKLKOD');
      R.prefix('K');
      _txt:='Brak danych. Tabela R.'@;
      {? R.size()=0 || exec('add_kom','#message',_txt,2,'BRAK DANYCH') ?};
      _size('P') & R.size()
   || 0
   ?}
|? _a='KRE_HIS'
|| {? var_pres('__TABL_R')>0
   || __TABL_R.index(__TABL_R.ndx_tmp(,1,'KOD',,,'KOD',,));
      exec('__F_ZATR','object');
      {? KRE_HIS.size() || KRE_HIS.erase() ?};
      _size('K')
   || 0
   ?}
|? _a='KART_DOD'
|| _size('OSOBA') & _size('KART_DEF')
|? _a='KART_URL'
|| exec('__F_ZATR','object');
   _size('P')
|? _a='BDO'
|| exec('__F_ZATR','object');
   _size('P')
|? _a='__TABL_R'
|| {? var_pres('__TABL_R')>0
   || {? ~FUN.ask('%1\n%2'['Tablica translacji już istnieje.'@,'Czy importować nowe dane?'@]) || return(0) ?};
      VAR_DEL.delete('__TABL_R')
   ?};
   __TABL_R:=tab_tmp(1,
      'KOD','STRING[20]','Kod',
      'RN','INTEGER','Numer'
   );
   __TABL_R.index(__TABL_R.ndx_tmp(,1,'KOD',,));
   __TABL_R.ndx_drop();
   __TABL_R.win_sel(__TABL_R.mk_sel(,,1));
   1
|? _a='O'
|| KT.clear();
   KT.index('KRYTERIA');
   UD_SKL.cntx_psh();
   UD_SKL.index('SYMBOL');
   UD_SKL.prefix(exec('szukaj_ud_typ','schemat','PODZORG'));
   _skl:=UD_SKL.size();
   UD_SKL.cntx_pop();
   exec('__F_ZATR','object');
   _size('KT') & _size('ODD') & _skl
|? _a='LS'
|| BPMN.KK_DOM:='PPL';
   {? _txt:=
         {? var_pres('__TABL_R')>0
         || __TABL_R.index(__TABL_R.ndx_tmp(,1,'KOD',,,'KOD',,));
            'Tablica translacji kodów płacowych jest już wczytana.'@
         || 'Tablica translacji kodów płacowych nie jest jeszcze wczytana.'@
         ?};
      FUN.ask(_txt+'\n%1'['Czy rozpocząć import?'@])
   || exec('__F_ZATR','object');
      exec('FUNKCJE','object');
      FUNKCJE.ZAMKLIST();
      LS.use('l_______');
      LS.trig_off('*','*');
      VAR.NAZWALIS:='';
      VAR.LISTA:=null();
      VAR.JESTLIST:=0;
      O.index('LISTYMIE');
      _size('KT') & _size('O') & _size('P') & _size('R')
   || 0
   ?}
|? _a='G'
|| BPMN.KK_DOM:='PPL';
   {? _txt:=
         {? var_pres('__TABL_R')>0
         || __TABL_R.index(__TABL_R.ndx_tmp(,1,'KOD',,,'KOD',,));
            'Tablica translacji kodów płacowych jest już wczytana.'@
         || 'Tablica translacji kodów płacowych nie jest jeszcze wczytana.'@
         ?};
      FUN.ask(_txt+'\n%1'['Czy rozpocząć import?'@])
   || exec('__F_ZATR','object');
      _size('KT') & _size('O') & _size('P') & _size('R')
   || 0
   ?}
|? _a='LSS'
|| BPMN.KK_DOM:='PPL';
   {? _txt:=
         {? var_pres('__TABL_R')>0
         || __TABL_R.index(__TABL_R.ndx_tmp(,1,'KOD',,,'KOD',,));
            'Tablica translacji kodów płacowych jest już wczytana.'@
         || 'Tablica translacji kodów płacowych nie jest jeszcze wczytana.'@
         ?};
      FUN.ask(_txt+'\n%1'['Czy rozpocząć import?'@])
   || exec('__F_ZATR','object');
      _size('P') & _size('R')
   || 0
   ?}
|? _a='N'
|| VAR_DEL.delete('__podzial');
   {? {? var_pres('__TABL_R')>0
      || __TABL_R.index(__TABL_R.ndx_tmp(,1,'KOD',,,'KOD',,));
         1
      || FUN.ask('%1\n%2'
            [  'Tablica translacji kodów płacowych nie jest jeszcze wczytana.'@,
               'Czy rozpocząć import nieobecności pomimo braku tabeli translacji?'@
            ]
         )
      ?}
   || __podzial:=FUN.ask('Czy dopuścić podział nieobecności na przełomie miesięcy?'@);
      exec('__F_ZATR','object');
      exec('__STALE','object');
      exec('__HARM','object');
      exec('MASK','object');
      exec('RAPLS','object');
      exec('__RUB','object');
      _size('P') & _size('R') & _size('S_ZUS') & _size('O') & _size('H_ZM')
   || 0
   ?}
|? _a='TZ'
|| exec('__F_ZATR','object');
   exec('__RUB','object');
   _size('N') & _size('NW')
|? _a='ZC'
|| ZC.trig_off('*','*');
   _size('OSOBA') & _size('P')
|? _a='RH'
|| VAR_DEL.delete('__TAB');
   RH.cntx_psh();
   RH.index('RACHDATA');
   RH.prefix(exec('ref_firma','ustawienia'));
   __dalej:={? RH.first()
            || FUN.choice(
                  'Tabela rachunków do umów cywilnoprawnych nie jest pusta.'@+'\n'+
                  'Wykonanie kolejnego importu rachunków może skutkować powieleniem informacji.'@,
                  3,
                  'import Wszystkich rachunków',
                  'import do umów Bez rachunków'
               )
            || 1
            ?};
   RH.cntx_pop();
   {? __dalej
   || __TAB:=tab_tmp(,
         'RB','INTEGER','Składnik',
         'KW','REAL','Kwota składnika'
      );
      exec('FUNKCJE','object');
      FUNKCJE.ZAMKLIST();
      LS.use('l_______');
      VAR.NAZWALIS:='';
      VAR.LISTA:=null();
      VAR.JESTLIST:=0;
      _size('ZC')
   || VAR_DEL.delete('__dalej');
      0
   ?}
|? _a='H_ODDE'
|| exec('__F_ZATR','object');
   _size('P') & _size('H') & _size('H_UM') & _size('H_ZM')
|? _a='OS_ZWPOD'
|| _size('OSOBA') & _size('OS_ZWSLO')
|? _a='OS_ZWZAL'
|| _size('OSOBA') & _size('OS_ZWSLO')
|? _a='P_IPOD_Z'
|| _size('P')
|? _a='PPSF_ADR'
|| exec('__F_ZATR','object');
   _size('P')
|? _a='PPSF_H'
|| exec('__F_ZATR','object');
   _size('P')
|? _a='PPSFN'
|| exec('__F_ZATR','object');
   _size('P')
|? _a='PPSF_PO'
|| exec('__F_ZATR','object');
   _size('P')
|? _a='KOT_TEST'
|| _size('OSOBA')
|| 0
?}


\end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Uzupełnienie danych
::   WE: _a[STRING] - Wskazanie na tabelę
::       _b[INTEGER] - 0/1, import z Xpertis, 0 - nie, 1 - tak
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_impX:={? var_pres('_b')=type_of(0) || _b || 0 ?};

{? ~_impX
|| {? var_pres('__record')<>type_of(0) || __record:=0 ?};
_txt:={? '1'*($__record) || 'Dołączono %1 rekord do tabeli %2'@[$__record,_a]
      |? '234'*($__record) || 'Dołączono %1 rekordy do tabeli %2'@[$__record,_a]
      || 'Dołączono %1 rekordów do tabeli %2'@[$__record,_a]
      ?};
exec('add_kom','#message',_txt,1,'NOWE DANE');

   VAR_DEL.delete('__record','__linia')
?};

{? _a='OSOBA'
|| OSOBA.cntx_psh();
   OSOBA.clear();
   {? OSOBA.f_active() || OSOBA.f_clear() ?};
   OSOBA.f_set(,,'OSOBA.REFERENCE in (select :_a.REF from :_a)',__TAB);
   {? OSOBA.f_first()
   || {!
      |? {? OSOBA.OBCY='N' & exec('pesel_lk','#id',OSOBA.PESEL)<>OSOBA.PESEL+1
         || _txt:='Błędny numer PESEL %1, osoby: %2.'@[OSOBA.PESEL,OSOBA.NAZWISKO+' '+OSOBA.PIERWSZE];
            exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
         ?};
         {? +form(OSOBA.NIP) & ~exec('nip_ok','#id',OSOBA.NIP,1)
         || _txt:='Błędny numer NIP %1, osoby: %2.'@[OSOBA.NIP,OSOBA.NAZWISKO+' '+OSOBA.PIERWSZE];
            exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
         ?};
         OSOBA.f_next()
      !}
   ?};
   {? OSOBA.f_active() || OSOBA.f_clear() ?};
   OSOBA.cntx_pop();
   VAR_DEL.delete('__TAB')
|? _a='P'
|| ''
|? _a='OS_ADRES'
|| ''
|? _a='P_INFO'
|| ''
|? _a='PKO'
|| PKO.cntx_psh();
   PKO.clear();
   {? PKO.f_active() || PKO.f_clear() ?};
   PKO.f_set(,,'PKO.REFERENCE in (select :_a.REF from :_a)',__TAB);
   {? PKO.f_first()
   || exec('czytaj','#stalesys',,KST_PAR,'NAROD');
      {!
      |? SKID_RBK.index('TAB');
         _TAB_ACR:=REF.FIRMA().SYMBOL+'OSOBA';
         SKID_RBK.prefix(null,_TAB_ACR,_TAB_ACR,#PKO.OSOBA);
         SKID_RBK.blank(1);
         SKID_RBK.TAB:=_TAB_ACR;
         SKID_RBK.REF:=#PKO.OSOBA;
         SKID_RBK.N:=gsub(PKO.N,' ','');
         SKID_RBK.KOD:='';
         SKID_RBK.BANK:=PKO.BA;
         SKID_RBK.RD:='N';
         SKID_RBK.KRAJ:=RB.getrkraj(2,'KST');
         SKID_RBK.WAL:=KST_PAR.NAROD;
         SKID_RBK.INNWAL:='N';
         SKID_RBK.FIRMA:=null;
         SKID_RBK.AKTYWNY:='T';
         SKID_RBK.add(1);
         PKO.f_next()
      !}
   ?};
   {? PKO.f_active() || PKO.f_clear() ?};
   VAR_DEL.delete('__TAB');
   PKO.cntx_pop()
|? _a='P_H_H_UM'
|| _kal:=null();
   P.cntx_psh();
   P.prefix();
   KAL_NAZW.cntx_psh();
   KAL_NAZW.index('KAL_NAZW');
   KAL_NAZW.prefix();
   {? KAL_NAZW.find_key(exec('ref_firma','ustawienia'),'standard')
   || _kal:=KAL_NAZW.ref()
   ?};
   KAL_NAZW.cntx_pop();
   H.cntx_psh();
   H.clear();
   {? H.f_active() || H.f_clear() ?};
   H.f_set(,,'H.REFERENCE in (select :_a.REF from :_a)',__TAB);
   {? H.f_first()
   || {!
      |? H.P();
         {? H.RWY<>H.WY
         || H.WY:=H.RWY;
            H.WYL:=H.RWYL;
            H.WYM:=H.RWYM;
            H.put(1)
         ?};
         {? ~P.KAL & P.DZA<>#0
         || exec('dod_kal_czesc','kaledit',P)
         ?};
         H.f_next()
      !}
   ?};
   {? H.f_active() || H.f_clear() ?};
   VAR_DEL.delete('__TAB');
   H.cntx_pop();
   P.cntx_pop()
|? _a='OS_US'
|| OS_US.trig_on('*','*');
   US.cntx_psh();
   US.clear();
   US.for_each(
      "  {? ~((+US.MU)+(+US.UU)+(+US.UK)+(+US.B3)+(+US.EDEK_SYM))
         || _txt:='Braki w danych. Tabela US. Nazwa: %1.'@[US.NU];
            exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
         ?}
      "
   );
   US.cntx_pop();

   OSOBA.cntx_psh();
   OS_US.cntx_psh();
   OSOBA.clear();
   OS_US.clear();
   {? OS_US.f_active() || OS_US.f_clear() ?};
   OS_US.f_set(,,'OS_US.REFERENCE in (select :_a.REF from :_a)',__TAB);
   {? OS_US.f_first()
   || {!
      |? OS_US.OSOBA();
         {? ~OS_US.OS_ADRES
         || _txt:='Brak danych adresowych dla celów podatkowych. Osoba: %1.'@
               [OSOBA.NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL];
            exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
         ?};
         exec('os_us_ao','osoba');
::       aktualizacja pola DO
         OS_US.put(1);
         OS_US.f_next()
      !}
   ?};
   {? OS_US.f_active() || OS_US.f_clear() ?};
   OS_US.cntx_pop();
   OSOBA.cntx_pop();
   exec('add_kom','#message','Proszę sprawdzić dane adresowe dla celów podatkowych.'@,15,'SPRAWDŹ DANE'@);
   VAR_DEL.delete('__TAB')
|? _a='OS_SZKOL'
|| OS_SZKOL.cntx_psh();
   OSOBA.cntx_psh();
   OS_SZKOL.clear();
   {? OS_SZKOL.f_active() || OS_SZKOL.f_clear() ?};
   OS_SZKOL.f_set(,,'OS_SZKOL.REFERENCE in (select :_a.REF from :_a)',__TAB);
   {? OS_SZKOL.f_first()
   || {!
      |? REF.OSOBA:=OS_SZKOL.OSOBA;
         exec('akt_wyk','osoba');
         {? ~OS_SZKOL.OSOBA().WYK
         || _txt:='Brak danych o wykształceniu. Osoba: %1.'@[OSOBA.NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL];
            exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
         ?};
         OS_SZKOL.f_next()
      !}
   ?};
   VAR_DEL.delete('__TAB');
   {? OS_SZKOL.f_active() || OS_SZKOL.f_clear() ?};
   OSOBA.cntx_pop();
   OS_SZKOL.cntx_pop()
|? _a='STAZ'
|| STAZ.cntx_psh();
   STAZ.index('_STAZE');
   STAZ.prefix(exec('ref_firma','ustawienia'));
   {? STAZ.first()
   || {!
      |? {? STAZ.DR<>#0 & STAZ.DZ<>#0 & STAZ.DZ>STAZ.DR
         || STAZ_H.index('ZM');
            STAZ_H.prefix(STAZ.ref(),'Z');
            {? ~STAZ_H.first()
            || H_ZM.cntx_psh();
               H_ZM.clear();
               H_ZM.index('ZMIANY');
               _zm:={? H_ZM.find_key('Z') || H_ZM.ref() ?};
               H_ZM.cntx_pop();
               {? _zm
               || STAZ_H.blank();
                  STAZ_H.OD:=STAZ.DR;
                  STAZ_H.DO:=STAZ.DZ;
                  STAZ_H.ZM:=_zm;
                  STAZ_H.add()
               ?}
            ?};
            STAZ_H.index('OZ');
            STAZ_H.prefix(STAZ.ref());
            exec('akt_hist','staz')
         ?};
         STAZ.next()
      !}
   ?};
   STAZ.cntx_pop()
|? _a='STAZ_H'
|| STAZ.cntx_psh();
   STAZ.index('_STAZE');
   STAZ.prefix(exec('ref_firma','ustawienia'));
   H_ZM.cntx_psh();
   H_ZM.clear();
   H_ZM.index('ZMIANY');
   _zm:={? H_ZM.find_key('Z') || H_ZM.ref() ?};
   H_ZM.cntx_pop();
   {? STAZ.first() & _zm
   || STAZ_H.cntx_psh();
      {!
      |? {? STAZ.DR<>#0 & (STAZ.DZ=#0 | STAZ.DZ>STAZ.DR)
         || _refS:=STAZ.ref();
            STAZ_H.index('ZM');
            STAZ_H.prefix(_refS,'Z');
            _od:=STAZ.DR;
            _do:=STAZ.DZ;
            _d0:=date(0,0,0);
            _dodajS:="STAZ_H.cntx_psh();
                      STAZ_H.prefix();
                      STAZ_H.blank();
                      STAZ_H.OZ:=_a;
                      STAZ_H.ZM:=_b;
                      STAZ_H.OD:=_c;
                      STAZ_H.DO:=_d;
                      STAZ_H.add(1);
                      STAZ_H.cntx_pop()";
            {? STAZ_H.last()
::          Są przebiegi pod okresem zatrudnienia, wypełniamy ewentualne luki:
            || {? STAZ_H.DO<_do | (_do=_d0 & STAZ_H.DO<>_do)
               || _dodajS(_refS,_zm,STAZ_H.DO+1,_do);
                  _do:=STAZ_H.DO+1
               |? _do=_d0 & STAZ_H.DO=_do
               || _do:=STAZ_H.OD
               ?};
               STAZ_H.first();
               {!
               |? {? STAZ_H.OD>_od
                  || _dodajS(_refS,_zm,_od,STAZ_H.OD-1)
                  ?};
                  _od:={? STAZ_H.DO<>_d0 || STAZ_H.DO+1 || _do ?};

                  _od<_do & STAZ_H.next()
               !}
::          Nie ma w ogóle przebiegów pod okresem zatrudnienia, dodajemy domyślny:
            || _dodajS(_refS,_zm,_od,_do)
            ?};
            STAZ_H.index('OZ');
            STAZ_H.prefix(_refS);
            exec('akt_hist','staz')
         ?};
         STAZ.next()
      !};
      STAZ_H.cntx_pop()
   ?};
   STAZ.cntx_pop()
|? _a='RD'
|| RD.cntx_psh();
   RD.clear();
   {? RD.f_active() || RD.f_clear() ?};
   RD.f_set(,,'RD.REFERENCE in (select :_a.REF from :_a)',__TAB);
   {? RD.f_first()
   || {!
      |? {? exec('pesel_lk','#id',RD.PESEL)<>RD.PESEL+1
         || _txt:='Błędny numer PESEL %1, osoby: %2.'@
               [RD.PESEL+' '+RD.NA+' '+RD.IM,RD.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
            exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
         ?};
         RD.f_next()
      !}
   ?};
   {? RD.f_active() || RD.f_clear() ?};
   RD.cntx_pop();
   VAR_DEL.delete('__TAB')
|? _a='H_UM'
|| H_UM.index('OD');
   P.cntx_psh();
   P.index('PRACOIP');
   P.prefix(exec('ref_firma','ustawienia'));
   {? P.first()
   || {!
      |? H_UM.prefix(P.ref());
         {? H_UM.first() & H_UM.size()>1
         || _od:=H_UM.OD;
            _do:=H_UM.DO;
            {!
            |? H_UM.next()
            |! {? H_UM.OD<=_do | (H_UM.DO<_do & H_UM.DO<>#0)
               || _txt:='Terminy umów zachodzą na siebie, pracownik: %1 '@[$H_UM.P().IP];
                  _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
                  exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
               ?}
            !}
         ?};
         P.next()
      !}
   ?};
   P.cntx_pop()
|? _a='H'
|| _firma:=exec('ref_firma','ustawienia');
   P.cntx_psh();
   H.cntx_psh();
   H_UM.cntx_psh();
   P.index('PRACOIP');
   H.index('HISTUMX');
   H_UM.index('S1');
   P.prefix(_firma);
   H_UM.prefix(_firma);
::   sprawdzenie ciągłości przebiegów po dodaniu nowych danych
   {? P.first()
   || {! |?
      {? H_UM.first()
      || {! |?
         H.prefix(H_UM.ref());
::       - dla pierwszego przebiegu danej umowy
            {? H.last()
            || {? H.OD<>H_UM.OD
               || _txt:='Data rozpoczęcia pierwszego przebiegu (%1) jest inna niż data rozpoczęcia umowy %2 - %3. '
                        'Pracownik: %4.'@
                        [H.OD$1,H_UM.OD$1,H_UM.DO$1,$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
                  exec('add_kom','#message',_txt,4,'POPRAW DANE'@);
                  {! |?
                  H.del()
                  !};
                  _txt:='Brak ciągłości przebiegów zatrudnienia, usunięto wszystkie przebiegi dla umowy %1 - %2. '
                        'Pracownik: %3.'@[H_UM.OD$1, H_UM.DO$1,$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
                  exec('add_kom','#message',_txt,4,'POPRAW DANE'@)
               ?}
            ?};
::          - dla ostatniego przebiegu danej umowy
            {? H.first()
            || {? H.DO<>H_UM.DO
               || _txt:='Data zakończenia ostatniego przebiegu (%1) jest inna niż data zakończenia umowy %2 - %3. '
                        'Pracownik: %4.'@
                        [H.DO$1,H_UM.OD$1,H_UM.DO$1,$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
                  exec('add_kom','#message',_txt,4,'POPRAW DANE'@);
                  {! |?
                  H.del()
                  !};
                  _txt:='Brak ciągłości przebiegów zatrudnienia, usunięto wszystkie przebiegi dla umowy %1 - %2. '
                        'Pracownik: %3.'@[H_UM.OD$1, H_UM.DO$1,$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
                  exec('add_kom','#message',_txt,4,'POPRAW DANE'@)
               ?}
            ?};
::          - dla "środkowych" przebiegów
            {? H.last()
            || {! |?
                  _do:=H.DO;
                  {? H.prev()
                  || _od:=H.OD;
                     {? _do+1<>_od
                     || H.last();
                        {! |?
                        H.del()
                        !};
                        _txt:='Brak ciągłości przebiegów zatrudnienia, usunięto wszystkie przebiegi dla umowy %1 - %2. '
                              'Pracownik: %3.'@
                              [H_UM.OD$1, H_UM.DO$1,$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
                        exec('add_kom','#message',_txt,4,'POPRAW DANE'@)
                     ?};
                     H.next()
                  ?};
                  H.prev()
               !}
            ?};
::          usuwanie umowy bez przebiegów
            {? H_UM.count()=0
            || _txt:='Usunięto umowę: %1, brak zmian w przebiegu zatrudnienia. '@[H_UM.OD$1];
               _txt+='Pracownik: '+$H_UM.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
               exec('add_kom','#message',_txt,4,'INNE BŁĘDY'@);
               H_UM.del()
            ?};
         H_UM.next()
         !}
      ?};
      P.next()
      !}
   ?};
   H.cntx_pop();
   H_UM.cntx_pop();
   P.cntx_pop();

   H.cntx_psh();
   H.index('HISTODKZ');
   H.prefix(_firma);
   {? H.first()
   || {!
      |? {? ~H.UMOWA
         || _txt:='Usunięto przebieg zatrudnienia: %1, brak powiązania z umową.'@[H.OD$1];
            _txt+='Pracownik: %1.'@[$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
            exec('add_kom','#message',_txt,4,'NIEPRAWIDŁOWA WARTOŚĆ'@);
            H.del()
         ?};
         H.next()
      !};
      H_UM.cntx_psh();
      H_UM.index('S1');
      H_UM.prefix(_firma);
      {? H_UM.first()
      || {!
         |? {? H_UM.count()=0
            || _txt:='Usunięto umowę: %1, brak zmian w przebiegu zatrudnienia. '@[H_UM.OD$1];
               _txt+='Pracownik: '+$H_UM.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
               exec('add_kom','#message',_txt,4,'INNE BŁĘDY'@);
               exec('add','#bulk',H_UM,'del',$H_UM.P);
               H_UM.del();
               exec('del','#bulk',H_UM,'del',$H_UM.P)
            ?};
            H_UM.next()
         !}
      ?};
::    Tabela tymczasowa do zapisu pracowników, którzy zostaną usunięci w związku z brakiem informacji o umowie, oraz
::    przebiegu zatrudnienia
      _TAB_DELP:=exec('czyscp','pracownik',1);
      {? _TAB_DELP.size()>0
      || _loop:=_TAB_DELP.first();
         {!
         |? _loop
         |! _txt:='Usunięto pracownika: %1 %2 %3 %4'
               [$_TAB_DELP.IP,_TAB_DELP.NAZWISKO,_TAB_DELP.PIERWSZE,_TAB_DELP.PESEL];
            _txt+=', brak informacji o umowie i przebiegu zatrudnienia dla tego pracownika.';
            exec('add_kom','#message',_txt,4,'INNE BŁĘDY'@);
            _loop:=_TAB_DELP.next()
         !}
      ?};
      {? -PAR_SKID.get(180)='t'
      || _akt_brudnopis:=1
      || _akt_brudnopis:=0
      ?};
      STO.cntx_psh();
      STO.index('UNIQUE');
      STO.prefix();
      P.cntx_psh();
      P.index('PRACOIP');
      P.prefix(_firma);
      {? P.first()
      || {!
         |? _old_wyd:=P.WYDZIAL;
            exec('pracownik_aktualizuj','pracownik');
            {? ~P.KAL & P.DZA<>#0
            || exec('dod_kal_czesc','kaledit',P)
            ?};
            _ret:='';
            H.index('_HISTDAT');
            H.prefix(P.ref());
            {? H.last()
            || VAR.H:=H.ref();
               _kod:=H.KZ().KZ='Z';
               _od:=H.OD;
               _do:=H.DO;
               _chk:=0;
               {? H.DO<>#0 & H.OD>H.DO
               || {? exec('h_od_be','pracownik')
                  || _ret:='OD'
                  || {? exec('h_do_be','pracownik')
                     || _ret:='DO'
                     ?}
                  ?}
               |? H.cntx_psh();
                  {? H.first()
                  || {!
                     |? {? {? _kod || H.KZ().KZ='Z' || H.KZ().KZ<>'Z' ?} & H.ref()<>VAR.H
                        || _chk+=exec('is','overlap',H,_od,_do)
                        ?};
                        H.next() & ~_chk
                     !}
                  ?};
                  H.cntx_pop();
                  _chk
               || {? exec('h_od_be','pracownik')
                  || _ret:='OD'
                  || {? exec('h_do_be','pracownik')
                     || _ret:='DO'
                     ?}
                  ?}
               ?}
            ?};
            {? +_ret
            || _txt:='Skontroluj daty przebiegu zatrudnienia, pracownik: %1 '@[$H.P().IP];
               _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
               exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
            ?};
            {? H.WYDZIAL & H.ST & ~STO.find_key(H.WYDZIAL,H.ST)
            || STO.UD_SKL:=H.WYDZIAL;
               STO.STN:=H.ST;
               STO.ST:=H.ST().ST;
               STO.add(1)
            ?};
            _ret:='';
            H_UM.index('OD');
            H_UM.prefix(P.ref());
            {? H_UM.last()
            || VAR.H_UM:=H_UM.ref();
               _od:=H_UM.OD;
               _do:=H_UM.DO;
               _chk:=0;
               {? H_UM.DO<>#0 & H_UM.OD>H_UM.DO
               || _ret:='OD'
               |? H_UM.cntx_psh();
                  {? H_UM.first()
                  || {!
                     |? {? H_UM.ref()<>VAR.H_UM
                        || _chk+=exec('is','overlap',H_UM,_od,_do)
                        ?};
                        H_UM.next() & ~_chk
                     !}
                  ?};
                  H_UM.cntx_pop();
                  _chk
               || _ret:='OD'
               ?}
            ?};
            {? +_ret
            || _txt:='Skontroluj daty umów o pracę, pracownik: '+$H_UM.P().IP+' ';
               _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
               exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
            ?};
            {? _akt_brudnopis || exec('h_um_pull','pracownik',P.ref()) ?};
            P.next()
         !}
      ?};
      H_UM.cntx_pop();
      P.cntx_pop();
      STO.cntx_pop()
   ?};
   H.cntx_pop()
|? _a='P_IPOD'
|| ''
|? _a='BDO'
|| H.cntx_psh();
   H.index('_HISTDAT');
   P.cntx_psh();
   P.index('PRACOIP');
   P.prefix(exec('ref_firma','ustawienia'));
   {? P.first()
   || BDS.cntx_psh();
      BDS.index('ST');
      BDO.cntx_psh();
      BDO.index('PDTO');
      {!
      |? BDO.prefix(P.ref());
         {? BDO.first()
         || {!
            |? BDS.prefix(BDO.ref());
               {? ~BDS.first()
               || BDS.blank();
                  BDS.BDO:=BDO.ref();
                  H.prefix(P.ref());
                  BDS.STN:={? H.find_le(BDO.DTS) || H.ST || P.ST ?};
                  BDS.add(1)
               ?};
               BDO.next()
            !}
         ?};
         P.next()
      !};
      BDO.cntx_pop();
      BDS.cntx_pop()
   ?};
   P.cntx_pop();
   H.cntx_pop()
|? _a='K'
|| K.cntx_psh();
   KRE_HIS.cntx_psh();
   KRE_HIS.index('KRE_HIS');
   K.index(K.ndx_tmp(,1,'P','FIRMA',));
   {? K.first()
   || {!
      |? {? -(K.KP-K.KS)
         || KRE_HIS.blank();
            KRE_HIS.DATA:=date();
            KRE_HIS.KWOTA:=-(K.KP-K.KS);
            KRE_HIS.OPIS:='! IMPORT';
            KRE_HIS.add(1)
         ?};
         K.next()
      !}
   ?};
   K.ndx_drop();
   KRE_HIS.cntx_pop();
   K.cntx_pop();
   {? var_pres('__TABL_R')>0 || __TABL_R.ndx_drop() ?}
|? _a='KRE_HIS'
|| KRE_HIS.cntx_psh();
   K.cntx_psh();
   KRE_HIS.index('KRE_HIS');
   K.index(K.ndx_tmp(,1,'P','FIRMA',));
   K.prefix(exec('ref_firma','ustawienia'));
   {? K.first()
   || {!
      |? KRE_HIS.prefix(K.ref());
         {? KRE_HIS.first()
         || _val:=0;
            {! |? _val+=KRE_HIS.KWOTA; KRE_HIS.next() !};
            {? _val<>(-(K.KP-K.KS))
            || _par1:=KRE_HIS.DATA$1+' '+KRE_HIS.KREDYT().PO().RT;
               _par2:=$K.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
               _txt:='Skontroluj rozliczenie kredytu: %1, dla pracownika: %2'@[_par1,_par2];
               exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
            ?}
         ?};
         K.next()
      !}
   ?};
   K.ndx_drop();
   K.cntx_pop();
   KRE_HIS.cntx_pop();
   ''
|? _a='KART_DOD'
|| ''
|? _a='KART_URL'
|| KART_URL.cntx_psh();
   KART_URL.clear();
   _txt:='Czy zablokować karty urlopowe przed automatyczną aktualizacją?'@+'\n\n';
   _txt+='ZABLOKOWANE - nie będą automatycznie przeliczane przy modyfikacji danych kadrowych'@+'\n';
   _txt+='ODBLOKOWANE - będą przeliczane liczby dni i godzin urlopów.'@;
   _ask:=FUN.ask(_txt);

   {? KART_URL.f_active() || KART_URL.f_clear() ?};
   KART_URL.f_set(,'join P','P.FIRMA=:_a',exec('ref_firma','ustawienia'));
   {? KART_URL.f_first()
   || {!
      |? KART_URL.STATUS:={? _ask || 'P' || 'A' ?};
         KART_URL.put();
         {? KART_URL.LIM_ZAL+KART_URL.LIM_AKT+KART_URL.URL_DOD-KART_URL.URL_WYK<>KART_URL.URL_POZ
            |
            KART_URL.LIM_ZALG+KART_URL.LIM_AKTG+KART_URL.URL_DODG-KART_URL.URL_WYKG<>KART_URL.URL_POZG
            |
            KART_URL.URL_NSP+KART_URL.NSP_ZAL-KART_URL.NSP_WYK<>KART_URL.NSP_POZ
            |
            KART_URL.URL_NSPG+KART_URL.NSP_ZALG-KART_URL.NSP_WYKG<>KART_URL.NSP_POZG
         || _par1:=$KART_URL.ROK;
            _par2:=$KART_URL.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
            _txt:='Skontroluj wyliczenia karty za rok: %1, dla pracownika: %2.'@[_par1,_par2];
            exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
         ?};
         KART_URL.f_next()
      !}
   ?};
   {? KART_URL.f_active() || KART_URL.f_clear() ?};
   KART_URL.cntx_pop()
|? _a='__TABL_R'
|| ''
|? _a='O'
|| O.cntx_psh();
   O.index('LISTYPLA');
   O.prefix(exec('ref_firma','ustawienia'));
   {? O.first()
   || {!
      |? O.DK:=date(O.R,O.M,0)-date(O.R,O.M,1)+1;
         O.F:={? +O.T().F || O.T().F || 'S' ?};
         O.put();
         O.next()
      !}
   ?};
   O.cntx_pop()
|? _a='LS'
|| exec('FUNKCJE','object');
   _txt:='Czy przeprowadzić kontrolę sum?'@+'\n';
   _txt+='Proces długotrwały, sprawdza poprawność sum: brutto, zasiłków ZUS, dodatków razem, potrąceń razem i netto'@;
   {? FUN.ask(_txt)
   || P.cntx_psh();
      O.cntx_psh();
      LS.cntx_psh();
      O.index('LISTYPLA');
      O.prefix(exec('ref_firma','ustawienia'),'P');
      P.index('PRACOIP');
      {? O.first()
      || {!
         |? FUNKCJE.OTWOLIST();
            LS.clear();
            LS.index('PRACNRRU');
            {? LS.size()
            || P.prefix(exec('ref_firma','ustawienia'),O.F_ZATR().KOD);
               {? P.first()
               || {!
                  |? echo($P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE);
                     LS.prefix(P.ref());
                     {? LS.first()
                     || _lewa:=FUNKCJE.L(100,499)+FUNKCJE.L_SYS(48);
                        _prawa:=FUNKCJE.L(500);
                        {? _lewa<>_prawa
                        || _txt:='Skontroluj wyliczenia sumy brutto, lista: %1, różnica: %2 dla pracownika: %3.'@
                              [VAR.NAZWALIS,form(_lewa-_prawa,,2),$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
                           exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
                        ?};
                        _lewa:=FUNKCJE.L(510,649)+FUNKCJE.L_SYS(331);
                        _prawa:=FUNKCJE.L(650);
                        {? _lewa<>_prawa
                        || _txt:='Skontroluj wyliczenia sumy zasiłków ZUS, lista: %1, różnica: %2 dla pracownika: %3.'@
                              [VAR.NAZWALIS,form(_lewa-_prawa,,2),$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
                           exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
                        ?};
                        _lewa:=FUNKCJE.L(650,739)+FUNKCJE.L_SYS(332);
                        _prawa:=FUNKCJE.L(740);
                        {? _lewa<>_prawa
                        || _txt:='Skontroluj wyliczenia sumy dodatków, lista: %1, różnica: %2 dla pracownika: %3.'@
                              [VAR.NAZWALIS,form(_lewa-_prawa,,2),$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
                           exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
                        ?};
                        _lewa:=FUNKCJE.L(765,767)+FUNKCJE.L(789)+FUNKCJE.L(792)+FUNKCJE.L(797,799)+FUNKCJE.L(801,948);
                        _lewa+=FUNKCJE.L_SYS(333);
                        _prawa:=FUNKCJE.L(950);
                        {? _lewa<>_prawa
                        || _txt:='Skontroluj wyliczenia sumy potrąceń, lista: %1, różnica: %2 dla pracownika: %3.'@
                              [VAR.NAZWALIS,form(_lewa-_prawa,,2),$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
                           exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
                        ?};
                        _lewa:=FUNKCJE.L(500)+FUNKCJE.L(740)+FUNKCJE.L(747)-FUNKCJE.L(950)+FUNKCJE.L_SYS(334);
                        _prawa:=FUNKCJE.L(990);
                        {? _lewa<>_prawa
                        || _txt:='Skontroluj wyliczenia sumy netto, lista: %1, różnica: %2 dla pracownika: %3.'@
                              [VAR.NAZWALIS,form(_lewa-_prawa,,2),$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
                           exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
                        ?}
                     ?};
                     P.next()
                  !}
               ?}
            || _txt:='Brak danych na liście płac, lista: %1.'@[VAR.NAZWALIS];
               exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
            ?};
            O.next()
         !}
      ?};
      P.cntx_pop();
      O.cntx_pop();
      LS.cntx_pop()
   ?};
   P.ndx_drop();
   {? var_pres('__TABL_R')>0 || __TABL_R.ndx_drop() ?};
   FUNKCJE.ZAMKLIST();
   LS.use('l_______');
   LS.trig_on('*','*');
   VAR.NAZWALIS:='';
   VAR.LISTA:=null();
   VAR.JESTLIST:=0;
   echo('Trwa aktualizacja kartotek płacowych..'@);
   exec('o_p','transfer');
   P.cntx_psh();
   O.cntx_psh();
   LS.cntx_psh();
   O.index('LISTYPLA');
   O.prefix(exec('ref_firma','ustawienia'),'P');
   {? O.first()
   || {!
      |? {? O.Z='T'
         || _ok:=0;
            O.Z:='N';
            {? O.put()
            || {? ~exec('kzup_licz','lista_zamk',O.ref())
               || O.Z:='T';
                  O.put();
                  _txt:='Otwarcie listy płac %1 nie powiodło się.'@[~O.LT];
                  exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
               || _ok:=1
               ?}
            ?}
         || _ok:=1
         ?};
         {?  _ok
         || _ok:=0;
            O.Z:='T';
            {? O.put()
            || {? ~exec('kzup_licz','lista_zamk',O.ref())
               || O.Z:='N';
                  O.put();
                  _txt:='Zamknięcie listy płac %1 nie powiodło się.'@[~O.LT];
                  exec('add_kom','#message',_txt,170,'POPRAW DANE'@)
               || _ok:=1
               ?}
            ?}
         ?};
         O.next()
      !}
   ?};
   P.cntx_pop();
   O.cntx_pop();
   LS.cntx_pop();
   echo()
|? _a='G'
|| {? var_pres('__TABL_R')>0 || __TABL_R.ndx_drop() ?};
   ''
|? _a='LSS'
|| {? var_pres('__TABL_R')>0 || __TABL_R.ndx_drop() ?};
   ''
|? _a='N'
|| {? var_pres('__podzial')>0
   || VAR_DEL.delete('__n_lt');
      exec('czytaj','#stalesys',,KST_PAR);
      N.cntx_psh();
      _firma:=exec('ref_firma','ustawienia');
      _nieob:=sql(
         'select N.REFERENCE N, N.P, N.OD, N.LT '
         'from N '
         'where N.FIRMA=:_a and N.KOR<>\'T\' '
         'order by N.P, N.OD asc',
         _firma
      );
      __n_lt:=tab_tmp(1,
         'N','INTEGER','N',
         'LT','STRING[8]','LT'
      );
      N.index('NIEOLIST');
      N.prefix(_firma);
      {? N.first()
      || __n_lt.N:=#N.ref();
         __n_lt.LT:=N.LT;
         __n_lt.add();
         N.LT:='';
         N.put()
      ?};
      P.cntx_psh();
      P.index('PRACOIP');
      P.prefix(_firma,'P');
      {? P.first() & _nieob.size()
      || N.cntx_psh();
         N.index('NIEOBECN');
         N.prefix();
         {!
         |? echo($P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE);
            {? var_pres('_tabbez')>100 || obj_del(_tabbez) ?};
            _tabbez:=tab_tmp(1,'REF','INTEGER','REF');
            _nieob.prefix($P.ref());
            {? _nieob.first()
            || {? N.seek(_nieob.N,) & __RUB.sys_attr(N.NB,112,N.OD)
               || _od:=N.OD;
                  _do:=N.DO;
                  _tabbez.REF:=N.ref();
                  _tabbez.add()
               || _od:=_do:=date(0,0,0)
               ?};
               {!
               |? {? N.seek(_nieob.N,,1)
                  || N.prefix('N',P.ref());
                     N.get();
                     _jest:=1;
                     {? __RUB.sys_attr(N.NB,112,N.OD)
                     || _jest:=0;
                        {? _od=#0
                        || _od:=N.OD;
                           _do:=N.DO;
                           _tabbez.REF:=N.ref();
                           _tabbez.add()
                        |? _do<>N.DO & _do+1=N.OD
                        || _do:=N.DO;
                           _tabbez.REF:=N.ref();
                           _tabbez.add()
                        |? _do<>N.DO
                        || {? _od<>#0 & _do<>#0
                           || {? (_do-_od+1)>=30
                                 |
                                 (_od~1=_do~1 & _od~2=_do~2 & _od~2=2 & _od~3=1 & _do~3=date(_od~1,2,0)~3)
                              || exec('add_H_B','edi_ka',_od,_do,_tabbez,'B');
                                 _od:=_do:=date(0,0,0)
                              ?}
                           ?};
                           _tabbez.erase();
                           _od:=N.OD;
                           _do:=N.DO;
                           _tabbez.REF:=N.ref();
                           _tabbez.add()
                        ?}
                     || {? _od<>#0 & _do<>#0
                        || {? (_do-_od+1)>=30
                              |
                              (_od~1=_do~1 & _od~2=_do~2 & _od~2=2 & _od~3=1 & _do~3=date(_od~1,2,0)~3)
                           || exec('add_H_B','edi_ka',_od,_do,_tabbez,'B');
                              _od:=_do:=date(0,0,0)
                           ?}
                        ?};
                        _tabbez.erase()
                     ?};
                     {? __RUB.sys_attr(N.NB,114,N.OD)
                     || _jest:=0;
                        _tabbez.REF:=N.ref();
                        _tabbez.add();
                        exec('add_H_B','edi_ka',N.OD,N.DO,_tabbez,'W')
                     ?};
                     {? __RUB.sys_attr(N.NB,1323,N.OD)
                     || _jest:=0;
                        _tabbez.REF:=N.ref();
                        _tabbez.add();
                        exec('add_H_B','edi_ka',N.OD,N.DO,_tabbez,'O')
                     ?};
                     {? _jest
                     || N.P();
                        P.get();
                        exec('funkcja','edi_ka',0,0)
                     ?}
                  ?};
                  _nieob.next()
               !};
               {? _od<>#0 & _do<>#0
               || {? (_do-_od+1)>=30 | (_od~1=_do~1 & _od~2=_do~2 & _od~2=2 & _od~3=1 & _do~3=date(_od~1,2,0)~3)
                  || exec('add_H_B','edi_ka',_od,_do,_tabbez,'B');
                     _od:=_do:=date(0,0,0)
                  ?}
               ?}
            ?};
            P.next()
         !};
         N.cntx_pop();
         echo()
      ?};
      P.cntx_pop();

      NW.index('CHP');
      __n_lt.clear();
      {? N.first()
      || NW.prefix(N.ref());
         {? NW.first()
         || {!
            |? TZ.cntx_psh();
               TZ.use('tabz'+form(NW.CHW().OD~1,-4,0,'99'));
               TZ.index('ZASTAB');
               TZ.prefix('E',NW.CHW);
               {? ~TZ.first()
               || TZ.blank();
                  TZ.KW:=N.POD;
                  TZ.R:='E';
                  TZ.N:=NW.CHW;
                  TZ.M:=date(NW.CHW().OD~1,NW.CHW().OD~2,0);
                  TZ.W:='T';
                  TZ.STATUS:='X';
                  {? TZ.KW<>0 || TZ.add() ?};
                  TZ.prefix('Z',NW.CHW);
                  {? TZ.first() || {! |? TZ.del() !} ?};
                  TZ.blank();
                  TZ.KW:=N.POZ;
                  TZ.R:='Z';
                  TZ.N:=NW.CHW;
                  TZ.M:=date(NW.CHW().OD~1,NW.CHW().OD~2,0);
                  TZ.W:='T';
                  TZ.STATUS:='X';
                  {? TZ.KW<>0 || TZ.add() ?}
               ?};
               TZ.cntx_pop();
               NW.next()
            !}
         ?};
         {? __RUB.sys_attr(N.NB,129,N.OD)
         || N.WART:=N.STD*N.NK
         ?};
         {? __n_lt.find_key(#N.ref()) || N.LT:=__n_lt.LT ?};
         N.put()
      ?};
      N.cntx_pop()
   ?};
   {? var_pres('__TABL_R')>0 || __TABL_R.ndx_drop() ?};
   VAR_DEL.delete('__n_lt','__podzial')
|? _a='TZ'
|| VAR_DEL.delete('__ask');
   P.cntx_psh();
   P.index('PRACOIP');
   P.prefix(exec('ref_firma','ustawienia'),'P');
   {? P.first()
   || N.index('NIEOBECN');
      NW.index('CHP');
      _tezet:=tab_tmp(1,
         'R','STRING[1]','R',
         'KW','REAL','KW',
         'M','DATE','M',
         'NO','REAL','NO',
         'PR','REAL','PR',
         'W','STRING[1]','W'
      );
      {!
      |? N.prefix('N',P.ref());
         {? N.first()
         || {!
            |? {? exec('n_rozliczalna','nieobecnosc')
               || N.cntx_psh();
                  _chp:=exec('nw_find_chp','nieobecnosc',N.ref());
                  {? ~_chp || _chp:=N.ref() ?};
                  NW.prefix(_chp);
                  {? NW.first()
                  || {!
                     |? _pierw:=(NW.CHP=NW.CHW);
                        _size:=0;
                        {? _pierw
                        || {? _tezet.first()
                           || {! |? _tezet.del() !}
                           ?}
                        ?};
                        TZ.use('tabz'+form(NW.CHW().OD~1,-4,0,'99'));
                        TZ.index('ZASTAB');
                        TZ.prefix('E',NW.CHW);
                        _size+=TZ.size();
                        {? TZ.first() & _pierw
                        || {!
                           |? _tezet.blank();
                              _tezet.R:=TZ.R;
                              _tezet.KW:=TZ.KW;
                              _tezet.M:=TZ.M;
                              _tezet.NO:=TZ.NO;
                              _tezet.PR:=TZ.PR;
                              _tezet.W:=TZ.W;
                              _tezet.add();
                              TZ.next()
                           !}
                        ?};
                        TZ.prefix('Z',NW.CHW);
                        _size+=TZ.size();
                        {? TZ.first() & _pierw
                        || {!
                           |? _tezet.blank();
                              _tezet.R:=TZ.R;
                              _tezet.KW:=TZ.KW;
                              _tezet.M:=TZ.M;
                              _tezet.NO:=TZ.NO;
                              _tezet.PR:=TZ.PR;
                              _tezet.W:=TZ.W;
                              _tezet.add();
                              TZ.next()
                           !}
                        ?};
                        {? ~_pierw & ~_size & _tezet.first()
                        || TZ.clear();
                           {!
                           |? TZ.blank();
                              TZ.N:=NW.CHW;
                              TZ.R:=_tezet.R;
                              TZ.KW:=_tezet.KW;
                              TZ.M:=_tezet.M;
                              TZ.NO:=_tezet.NO;
                              TZ.PR:=_tezet.PR;
                              TZ.W:=_tezet.W;
                              TZ.add();
                              _tezet.next()
                           !}
                        ?};
                        NW.next()
                     !}
                  ?};
                  N.cntx_pop()
               ?};
               N.next()
            !}
         ?};
         {? _tezet.first()
         || {! |? _tezet.del() !}
         ?};
         P.next()
      !}
   ?};
   __ask:=FUN.ask('Czy aktualizować podstawy nieobecności z rozliczenia?'@);
   N.clear();
   NW.index('CHP');
   N.for_each(
      "  {? N.FIRMA=exec('ref_firma','ustawienia')
         || _a:=~__ask;
            _npod:=N.POD;
            _npoz:=N.POZ;
            _nstd:=N.STD;
            _nwart:=N.WART;
            NW.prefix(N.ref());
            {? NW.first()
            || {!
               |? {? __RUB.sys_attr(NW.CHW().NB,113,NW.CHW().OD) | __RUB.sys_attr(NW.CHW().NB,131,NW.CHW().OD)
                  || N.POD:=N.POZ:=N.STD:=0;
                     _npod:=_npoz:=0
                  || _NEPod:=_NZPod:=_MEKwal:=_MZKwal:=0;
                     _npod:=N.POD;
                     _npoz:=N.POZ;
                     TZ.cntx_psh();
                     TZ.use('tabz'+form(NW.CHW().OD~1,-4,0,'99'));
                     TZ.index('ZASTAB');
                     TZ.prefix('E',NW.CHW);
                     {? TZ.first()
                     || {!
                        |? {? TZ.W<>'N' || _NEPod+=TZ.KW; _MEKwal+=1 ?};
                           TZ.next()
                        !}
                     ?};
                     TZ.prefix('Z',NW.CHW);
                     {? TZ.first()
                     || {!
                        |? {? TZ.W<>'N' || _NZPod+=TZ.KW; _MZKwal+=1 ?};
                           TZ.next()
                        !}
                     ?};
                     TZ.cntx_pop();
                     _kod:=NW.CHW().NB;
                     _ndo:=NW.CHW().DO;
                     _nod:=NW.CHW().OD;
                     N.POD:=N.POZ:=N.STD:=N.WART:=0;
                     {? _MEKwal | _MZKwal
                     || {? _MEKwal || N.POD:=(_NEPod/_MEKwal)$2 ?};
                        {? NW.WAL='T' || N.POD:=(N.POD*NW.WSP/100)$2 ?};
                        {? _MZKwal || N.POZ:=(_NZPod/_MZKwal)$2 ?};
                        {? ~_a || NW.put() ?};
                        N.POD+=NW.KWMIN;
                        EDIT_VAR.POR:=N.POD+N.POZ;
                        N.STD:=(EDIT_VAR.POR*N.PROC/100/30)$2;
                        N.WART:=(N.STD*(N.NK-N.DN-N.DK-N.OP*0.25))$2
                     || NW.KWMIN:=0;
                        {? ~_a || NW.put() ?}
                     ?};
                     {? N.POD<>_npod | N.POZ<>_npoz
                     || _txt:='Skontroluj podstawę nieobecności z jej rozliczeniem: %1, dla pracownika: %2.'@
                           [N.OD$1+' '+N.NB().RT,$N.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
                        exec('add_kom','#message',_txt,15,'SPRAWDŹ DANE'@);
                        {? ~_a || N.put() ?}
                     ?}
                  ?};
                  NW.next()
               !}
            ?}
         ?}
      ",1
   );
   P.cntx_pop()
|? _a='ZC'
|| ZC.trig_on('*','*');
   P.cntx_psh();
   P.trig_off('*','*');
   P.prefix();
   ZC.cntx_psh();
   ZC.index('ZLECDAT');
   ZC.prefix(exec('ref_firma','ustawienia'));
   {? ZC.first()
   || {!
      |? ZC.P();
         P.WYDZIAL:=ZC.WYDZIAL;
         P.put();
         ZC.next()
      !}
   ?};
   ZC.cntx_pop();
   P.trig_on('*','*');
   P.cntx_pop()
|? _a='RH'
|| VAR_DEL.delete('__TAB','__dalej')
|? _a='H_ODDE'
|| ''
|? _a='OS_ZWPOD'
|| ''
|? _a='OS_ZWZAL'
|| ''
|? _a='P_IPOD_Z'
|| ''
|? _a='PPSF_ADR'
|| ''
|? _a='PPSF_H'
|| ''
|? _a='PPSFN'
|| ''
|? _a='PPSF_PO'
|| ''
|? _a='KOT_TEST'
|| ''
|| FUN.info('Błąd w end/edi_ka'@)
?};
~~


\wymag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Weryfikacja pól wymaganych, z definicji
::   WE: Wskazanie na tabelę
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
EDI_D.cntx_psh();
{? EDI_D.first()
|| {!
   |? {? EDI_D.M='P' & EDI_D.TAB=_a & +EDI_D.FLD & EDI_D.WYM='T'
      || _test:=0;
         _ret*=
            {? EDI_D.T='N' || ~(_test:=($(EDI_D.TAB+'.'+EDI_D.FLD+'=0'))())
            |? EDI_D.T='S' || ~(_test:=($(EDI_D.TAB+'.'+EDI_D.FLD+'='''''))())
            |? EDI_D.T='D' || ~(_test:=($(EDI_D.TAB+'.'+EDI_D.FLD+'=#0'))())
            |? EDI_D.T='G' || ~(_test:=($(EDI_D.TAB+'.'+EDI_D.FLD+'=*0'))())
            || 1
            ?};
         {? _test
         || _txt:={? var_pres('__linia')=type_of(0) || 'Wiersz: %1 '@[$__linia] || '' ?};
            _txt+='Brak wartości pola %1.'@[EDI_D.FLD]+' '+'Rekordu nie dodano.'@;
            exec('add_kom','#message',_txt,39,'BRAK WARTOŚCI WYMAGANEJ'@)
         ?}
      ?};
      EDI_D.next()
   !}
?};
EDI_D.cntx_pop();
_ret


\add_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dołączenie wartości do słownika
::   WE: _a - Wskazanie na tabelę
::       _b - Parametr blank`a
::       _c ... - Kolejne pary oznaczaja: POLE, WARTOSC
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=($(_a))();
_tab.blank(_b);
_tab.clear();
{! _licz:=3.._ |! {? _licz%*2 || ($(_a+'.'+_[_licz]+':=_a'))(_[_licz+1]) ?} !};
{? _tab.add(1)
|| _tab.ref()
|| null()
?}


\for_pola
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk]
:: OPIS: W przypadku braku miejsca na formułę dla pola ...
::   WE: _a - Identyfikator
::   WY: any/null
::----------------------------------------------------------------------------------------------------------------------
{? _a='OS_SZKOL.RODZAJ'
|| {? Ebuf.WAR<>''
   || _ref:=exec('FindInSet','#table',
         'SLO_NAZ',
         'NAZWA',
         Ebuf.WAR,
         _slo:=exec('slo_typ','ext_slo','SZK_TYP'),
         ,
         1
      );
      {? ~_ref
      || exec('add_slo','edi_ka',
            'SLO_NAZ',
            0,
            'NAZWA',
            Ebuf.WAR,
            'SLO_TYP',
            _slo
         )
      || _ref
      ?}
   || null()
   ?}
|? _a='H_UM.P_OD'
|| {? Ebuf.WAR<>''
   || _ret:=date(#(4+Ebuf.WAR),#(2+(4-Ebuf.WAR)),#(2+(6-Ebuf.WAR)))
   || _ret:=H_UM.OD
   ?};
   return(_ret)
|? _a='H_UM.P_DO'
|| {? Ebuf.WAR<>''
   || _ret:=date(#(4+Ebuf.WAR),#(2+(4-Ebuf.WAR)),#(2+(6-Ebuf.WAR)))
   || _ret:=H_UM.DO
   ?};
   return(_ret)
|| null()
?}


\add_UD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dołączenie jednostki organizacyjnej wraz z uprawnieniami
::   WE: _a - Symbol dodawanej jednostki organizacyjnej
::   WY: UD_SKL.ref lub null
::----------------------------------------------------------------------------------------------------------------------
_imp:=_jeden:=_drugi:=null();
_ud_typ:=exec('szukaj_ud_typ','schemat','PODZORG');
_sch_str:=exec('domyslny','schemat',_ud_typ);
UD_SKL.index('SYMBOL');
UD_SKL.prefix(_ud_typ);
{? ~UD_SKL.find_key('! IMPORT !','! IMPORT !')
|| UD_SKL.blank();
   UD_SKL.UD_TYP:=_ud_typ;
   UD_SKL.SYMBOL:='! IMPORT !';
   UD_SKL.OPIS:='! IMPORT ! Dane z importu';
   {? UD_SKL.add() || _imp:=UD_SKL.ref() ?}
|| _imp:=UD_SKL.ref()
?};

UD_POZ.clear();
UD_POZ.index('NUMER');
{? ~UD_POZ.find_key(_sch_str,1)
|| UD_POZ.UD_SCH:=_sch_str;
   UD_POZ.NUMER:=1;
   UD_POZ.OPIS:='! IMPORT ! Poziom 1';
   {? UD_POZ.add() || _jeden:=UD_POZ.ref() ?}
|| _jeden:=UD_POZ.ref()
?};

{? ~UD_POZ.find_key(_sch_str,2)
|| UD_POZ.UD_SCH:=_sch_str;
   UD_POZ.NUMER:=2;
   UD_POZ.OPIS:='! IMPORT ! Poziom 2';
   {? UD_POZ.add() || _drugi:=UD_POZ.ref() ?}
|| _drugi:=UD_POZ.ref()
?};

_ref:=exec('FindInSet','#table','UD_SKL','SYMBOL',_a,_ud_typ,,1);
{? _ref=null()
|| _ref:=exec('add_slo','edi_ka','UD_SKL',0,'UD_TYP',_ud_typ,'SYMBOL',_a,'OPIS','! IMPORT ! '+_a)
?};
{? _ref & _imp & _jeden & _drugi
|| _rodz:=null();
   UD_DEF.index('PODTEC');
   UD_DEF.prefix();
   {? ~UD_DEF.find_key(_sch_str,_imp)
   || UD_DEF.blank();
      UD_DEF.UD_SCH:=_sch_str;
      UD_DEF.UD_DEF:=0;
      UD_DEF.UD_SKL:=_imp;
      UD_DEF.UD_POZ:=_jeden;
      UD_SKL.cntx_psh();
      UD_SKL.clear();
      {? UD_SKL.seek(_imp)
      || UD_DEF.SYMBOL:=UD_SKL.SYMBOL;
         UD_DEF.OPIS:=UD_SKL.OPIS;
         UD_DEF.UD_SQL:=$UD_DEF.UD_DEF;
         {? UD_DEF.add()
         || exec('add_upr_UD','edi_ka',users(),_imp);
            _rodz:=UD_DEF.ref()
         ?}
      ?};
      UD_SKL.cntx_pop()
   || _rodz:=UD_DEF.ref()
   ?};
   UD_DEF.prefix();
   {? ~UD_DEF.find_key(_sch_str,_ref)
   || UD_DEF.UD_SCH:=_sch_str;
      UD_DEF.UD_DEF:=_rodz;
      UD_DEF.UD_SKL:=_ref;
      UD_DEF.UD_POZ:=_drugi;
      UD_SKL.cntx_psh();
      UD_SKL.clear();
      {? UD_SKL.seek(_ref)
      || UD_DEF.SYMBOL:=UD_SKL.SYMBOL;
         UD_DEF.OPIS:=UD_SKL.OPIS;
         UD_DEF.UD_SQL:=$UD_DEF.UD_DEF;
         {? UD_DEF.add()
         || exec('add_upr_UD','edi_ka',users(),_ref);
            _dziecko:=UD_DEF.ref()
         ?}
      ?};
      UD_SKL.cntx_pop()
   || _dziecko:=UD_DEF.ref()
   ?}
?};
_ref


\add_upr_UD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Nadanie uprawnień do importowanej jednostki organizacyjnej
::   WE: _a - tabela z użytkownikami
::       _b - składnik struktury organizacyjnej
::   WY:
::----------------------------------------------------------------------------------------------------------------------
UDB_DOM.cntx_psh();
UDB_DOM.index(UDB_DOM.ndx_tmp(,1,'B_DOMAIN','SYMBOL',));
UDB_DOM.prefix('PKD',);
{? UDB_DOM.first()
|| UDB_SYS.cntx_psh();
   UDB_SYS.index('TYP_SYM');
   UDB_SYS.prefix(UDB_DOM.UDB_GRP);
   {? UDB_SYS.first()
   || UDB_UPR.cntx_psh();
      UDB_UPR.index('UNIQUE');
      UDB_UPR.prefix(UDB_SYS.ref());
      _tabuser:=_a;
      {? _tabuser.first()
      || USERS.cntx_psh();
         USERS.index('USR_KKOD');
         USERS.prefix();
         {!
         |? {? USERS.find_key(_tabuser.USER,)
            || {? USERS.AKT='T' & USERS.JTERM='T'
               || {? UDB_UPR.find_key(USERS.ref(),_b)
                  || UDB_UPR.DOSTEP:='T';
                     UDB_UPR.put()
                  || UDB_UPR.UDB_SYS:=UDB_SYS.ref();
                     UDB_UPR.USERS:=USERS.ref();
                     UDB_UPR.UD_SKL:=_b;
                     UDB_UPR.DOMYSLNY:=UDB_UPR.DOSTEP:='T';
                     UDB_UPR.add()
                  ?}
               ?}
            ?};
            _tabuser.next()
         !};
         USERS.cntx_pop()
      ?};
      UDB_UPR.cntx_pop()
   ?};
   UDB_SYS.cntx_pop()
?};
UDB_DOM.ndx_drop();
UDB_DOM.cntx_pop()


\ref_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Zwraca ref rubryki dla kodu
::   WE: Kod
::   WY: Ref rubryki lub null
::  OLD: \del/edi_ka.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__TABL_R')>0 & var_pres('_a')=type_of('')
|| _kod:={? __TABL_R.find_key(_a,_a) || __TABL_R.RN  || #_a ?}
|? var_pres('_a')<>type_of(0)
|| _kod:=#_a
|| _kod:=_a
?};
exec('FindInSet','#table','R','RUBKOD',_kod)


\add_H_B
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Dodanie informaci o zmianie danych ubezpieczeniowych
::   WE: _a - początek nieobecności
::       _b - koniec nieobecności
::       _c - _tabbez
::       _d - kod nieobecności B - urlop bezpłatny, W - urlop wychowawczy, O - służba wojskowa
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_od:=_a;
_do:=_b;
_tabbez:=_c;
_ok:=1;
do();
N.P();
{? _ok & _d='W'
|| KART_DEF.cntx_psh();
   KART_DOD.cntx_psh();
   KART_DOD.index('KART_DOD');
   KART_DEF.index('SYMBOL');
   KART_DEF.prefix('FP_FGSP');
   {? KART_DEF.first()
   || EDIT_VAR.KART_DEF:='FP_FGSP';
      KART_DOD.win_sel('WER');
      KART_DOD.prefix(exec('ref_firma','ustawienia'),KART_DEF.ref(),P.OSOBA);
      _rok:=_do~1;
      _mc:=_do~2+1;
      {? _mc>=13 || _mc:=1; _rok+=1 ?};
      _do:=date(_rok,_mc,1);
      KART_DOD.blank();
      KART_DOD.KART_DEF:=KART_DEF.ref();
      KART_DOD.OSOBA:=P.OSOBA;
      KART_DOD.OD:=_do;
      KART_DOD.DO:=date(_do~1+3,_do~2-1,0);
      KART_DOD.OPIS:='Przerwa w opłacaniu składek na FP i FGŚP';
      {? KART_DOD.add(1)
      || _txt:='Sprawdź zapisy w okresach nieopłacania składek FP i FGŚP, dla pracownika: ';
         _txt+=$P.IP+' '+P.OSOBA().NAZWISKO+' '+P.OSOBA().PIERWSZE+'.';
         exec('add_kom','#message',_txt,15,'SPRAWDŹ DANE')
      ?}
   ?};
   KART_DEF.cntx_pop();
   KART_DOD.cntx_pop();
   P_INFO.cntx_psh();
   P_INFO.index('ST');
   P_INFO.prefix(exec('ref_firma','ustawienia'),P.OSOBA,'A');
   {? {? P_INFO.first()
      || {? P_INFO.find_key(_od) & (2+P_INFO.TTUB().KOD)='12'
         || 0
         |? P_INFO.find_key(_od) & (2+P_INFO.TTUB().KOD)<>'12'
         || _base_ref:=P_INFO.ref();
            {? P_INFO.find_key(_do+1)
            || {? P_INFO.TTUB().KOD='1240'
               || P_INFO.seek(_base_ref);
: przejście na macierzyński
                  P_INFO.del(); 0
               || P_INFO.del();
                  P_INFO.seek(_base_ref);
                  P_INFO.del(); 0
               ?}
            |? P_INFO.find_le(_od-1) & P_INFO.TTUB().KOD='1240'
            || P_INFO.seek(_base_ref);
               P_INFO.del()
            || P_INFO.seek(_base_ref);
               P_INFO.OD:=_od+1;
               P_INFO.put(); 0
            ?}
         |? P_INFO.find_key(_do+1) & (2+P_INFO.TTUB().KOD)='12'
         || _base_ref:=P_INFO.ref();
            {? P_INFO.find_key(_od)
            || {? (2+P_INFO.TTUB().KOD)<>'12' || P_INFO.del() ?};
               P_INFO.seek(_base_ref);
               {? P_INFO.TTUB().KOD<>'1240' || P_INFO.del() ?}; 0
            || {? P_INFO.TTUB().KOD='1240'
               || P_INFO.TTUB:=exec('kod_zus','nieobecnosc','P','1211');
                  P_INFO.OD:=_od;
                  P_INFO.add(); 0
               || P_INFO.OD:=_od;
                  P_INFO.put(); 0
               ?}
            ?}
         ||  1
         ?}
         || 1
      ?}
   || P_INFO.index('OD');
      P_INFO.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
      {? {? {? ~P_INFO.find_le(_do+1) || P_INFO.last() || 1 ?}
         || {!
            |? {? ~(_test:=(2+P_INFO.TTUB().KOD)<>'12') || P_INFO.prev() ?}
            !};
            &_test
         ?}
      || {? P_INFO.OD<>(_do+1)
         || P_INFO.OD:=_do+1;
            P_INFO.ST:='A';
            P_INFO.add()
         ?}
      || P_INFO.blank();
         P_INFO.OD:=_do+1;
         P_INFO.ST:='A';
         P_INFO.DTUM:=date(0,0,0);
         P_INFO.TTUB:=exec('kod_zus','nieobecnosc','P','0110');
         P_INFO.PREM:=exec('kod_zus','nieobecnosc','E','0');
         P_INFO.STNP:=exec('kod_zus','nieobecnosc','N','0');
         P_INFO.TPID:=exec('kod_zus','nieobecnosc','I','1');
         P_INFO.NZPR:=exec('kod_zus','nieobecnosc','F','01');
         P_INFO.add()
      ?};
      P_INFO.OD:=_od;
      P_INFO.TTUB:=exec('kod_zus','nieobecnosc','P','1211');
      P_INFO.add()
   ?};
   P_INFO.cntx_pop;
   exec('upd_pi','osoba');
   _txt:='Zmienione zostały podstawowe informacje o ubezpieczeniu pracownika: ';
   _txt+=$@.P.IP+' '+@.P.OSOBA().NAZWISKO+' '+@.OSOBA.PIERWSZE+'.';
   _txt+='Zweryfikuj poprawność zmodyfikowanych danych ubezpieczeniowych.';
   exec('add_kom','#message',_txt,15,'SPRAWDŹ DANE')
?};
{? ~_ok || undo() ?};
end();
_ok


\funkcja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk]
:: OPIS: kopia z nieobecn
::       do automatu rozpisujacego N przy imporcie
::----------------------------------------------------------------------------------------------------------------------
{? N.size()
|| do();
   _nod:=N.OD;
   _ndo:=N.DO;
   N.cntx_psh();
   N.index('NIEOBECN');
   N.prefix('N',P.ref());
   {? N.find_key(_nod)
   || {? {? _a || _a:=0; exec('czy_rozp','edi_ka',0) || 1 ?} ||
         {? _b=4 | _b=0 || exec('limit_180','edi_ka',1,N.OD,N.DO) ?};
         {? _b=1 | _b=0 || exec('limit_90','edi_ka',1,N.OD,N.DO) ?};
         {? _b=2 | _b=0 || exec('limit_35','edi_ka',1,N.OD,N.DO) ?};
         {? _b=5 | _b=0 || exec('limit_szpital','edi_ka',1,N.OD,N.DO) ?}
      ?};
:: MKG - wyłączone domyślne rozpisywanie nieobecności
      {? __podzial & (_b=3 | _b=0) || exec('n_rozpisz_miesiace','nieobecnosc',0,_nod,_ndo) ?};
      exec('test_pow','edi_ka',N.ref())
   ?};
   N.cntx_pop();
   N.get();
   end()
?}


\czy_rozp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk]
:: OPIS: kopia z nieobecn
::       do automatu rozpisujacego N przy imporcie
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<>type_of('') || _b:='wyn/zas' ?};

_ok:=
   {? _b='wyn/zas'
   || ~__RUB.sys_attr(N.NB,122122,N.OD)
      &
      (__RUB.sys_attr(N.NB,1221,N.OD) | __RUB.sys_attr(N.NB,1222,N.OD) | __RUB.sys_attr(N.NB,121,N.OD))
   |? _b*'zas'
   || ~__RUB.sys_attr(N.NB,122122,N.OD) & (__RUB.sys_attr(N.NB,1221,N.OD) | __RUB.sys_attr(N.NB,1222,N.OD))
   |? _b*'szp'
   || __RUB.sys_attr(N.NB,12212,N.OD)
   || __RUB.sys_attr(N.NB,121,N.OD)
   ?};

_RetVal:=0;
KST_CHOR.clear();
{? _b<>''
|| {? KST_CHOR.first()
   || {? _ok
      || _RetVal:=1
      || {? _a
         || _kody:={? _b='wyn/zas' || '121,1221,1222' |? _b*'zas' || '1221,1222' |? _b*'szp' || '12212' || '121' ?}
         ?}
      ?}
   || ''
   ?}
?};
{? exec('n_zablokowana','nieobecnosc',0)
|| {? _RetVal & _a || '' ?};
   _RetVal:=0
?};
_RetVal


\limit_180
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk]
:: OPIS: kopia z nieobecn
::       do automatu rozpisujacego N przy imporcie
::----------------------------------------------------------------------------------------------------------------------
{? {? _a || 1 || exec('czy_rozp','edi_ka',_a) ?}
|| N.cntx_psh();
   _dni_nieo:=obj_new(4);
   _data_cia:=exec('ciaglosc','nieobecnosc',_b,_dni_nieo,1);
   _czyWiekszyLimit:=(N.KDCH().KOD*'B' & N.OD~1>=2009) | N.KDCH().KOD*'D';
   {? _data_cia<__STALE.D_ZAS
   || {? _data_cia+180<__STALE.D_ZAS
      || _limit:=180
      || {? _dni_nieo[4]<__STALE.D_ZAS & _dni_nieo[4]<>#0
         || _limit:=180
         || _limit:={? _czyWiekszyLimit || 270 || KST_PAR.WALORYZ ?}
         ?}
      ?}
   || _limit:={? _czyWiekszyLimit || 270 || KST_PAR.WALORYZ ?}
   ?};
   exec('czytaj','#stalesys',_data_cia,KST_PAR,'LIMPUU');
   _limitPL:={? KST_PAR.LIMPUU=0 & _data_cia>=date(2022,1,1) || 91 || KST_PAR.LIMPUU ?};
   {? ~_czyWiekszyLimit & _limitPL>0
   || _dni:={? P.DZ<>#0 & P.DZ<N.DO || N.DO-P.DZ+1 || 0 ?}; 'dni poza zatrudnieniem';
      {? _dni>0 & _dni>_limitPL
      || _nlimit:=_limit-(P.DZ-_data_cia)-1;
         {? _nlimit>_limitPL || _limit-=(_nlimit-_limitPL) ?}
         &_dni; &_nlimit
      ?}
   ?};
   {? _limit<_dni_nieo[1]
   || {? _a
      || exec('test_pow','edi_ka',N.ref());
         NW.index('CHW');
         NW.prefix(N.ref());
         {? NW.first()
         || {? (_dni_nieo[1]-N.NK)<_limit
            || N.DO:=N.OD+(N.NK-_dni_nieo[1]+_limit)-1;
               exec('n_czas','nieobecnosc');
               N.put();
               N.OD:=N.DO+1;
               N.DO:=_c;
               N.DK:=0;
               exec('n_czas','nieobecnosc');
               _lt:=__n_lt.find_key(#N.ref());
               {? N.add()
               || {? _lt || __n_lt.N:=#N.ref(); __n_lt.add() ?};
                  NW.CHW:=N.ref();
                  NW.WAL:='T';
                  NW.WSP:=100;
                  NW.clear();
                  NW.add()
               ?}
            || {? NW.WAL<>'T' || NW.WAL:='T' ?};
               {? __RUB.sys_attr(N.NB,1222,N.OD)
               || NW.WSP:=exec('find_wsp_wal','nieobecnosc',N.OD,N.ref(),1)
               || NW.WAL:='N';
                  NW.WSP:=0
               ?};
               NW.put()
            ?}
         ?};

         _kod:=
            {? __RUB.sys_attr(N.NB,14313,N.OD) | __RUB.sys_attr(N.NB,14331,N.OD)
            || __RUB.sys_val(14313,N.OD)
            || {? N.KDSW
               || N.KDSW().KOD
               || '350'
               ?}
            ?};

         N.KDSW:=exec('kod_zus','nieobecnosc','S',_kod);
:: UWAGA, bez zmiany kodu dla wypadków
         {? {? _dni_nieo[4]=#0 || _data_cia || _dni_nieo[4] ?}<__STALE.D_ZAS
         || {? _kod:={? __RUB.sys_attr(N.NB,1212,N.OD) || __RUB.sys_rub(12213,N.OD).RN
                     |? __RUB.sys_attr(N.NB,12213,N.OD) || 0
                     || __RUB.sys_rub(122112,N.OD).RN
                     ?}
            || N.NB:=__RUB.ref(_kod,'N')
            ?}
         || {? KST_CHOR.find_key(N.NB().RN) || N.NB:=KST_CHOR.ZAS ?}
         ?};
         N.put()
      ?}
   || {? _a || '' ?}
   ?};
   obj_del(_dni_nieo);
   N.cntx_pop();
   N.get();
   exec('n_dnop_akt','nieobecnosc',_a,_b,_c)
?}


\limit_90
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk]
:: OPIS: kopia z nieobecn
::       do automatu rozpisujacego N przy imporcie
::----------------------------------------------------------------------------------------------------------------------
{? {? _a || 1 || exec('czy_rozp','edi_ka',_a) ?}
|| N.cntx_psh();
   _limit:=90;
   _dni_nieo:=obj_new(4);
   _data_cia:=exec('ciaglosc','nieobecnosc',_b,_dni_nieo);
   {? __RUB.sys_attr(N.NB,125,N.OD)
   || {? _a || '' ?};
      _kod:={? __RUB.sys_attr(N.NB,14333,N.OD) || __RUB.sys_val(14333,N.OD) || __RUB.sys_val(14314,N.OD) ?};
      N.KDSW:=exec('kod_zus','nieobecnosc','S',_kod)
   |? _limit<_dni_nieo[1]
   || {? (_data_cia<__STALE.D_ZAS & _dni_nieo[4]<__STALE.D_ZAS & _dni_nieo[4]<>#0) | N.DO<__STALE.D_ZAS
      || {? _a
         || {? (_dni_nieo[1]-N.NK)<_limit
            || N.DO:=N.OD+(N.NK-_dni_nieo[1]+_limit)-1;
               exec('n_czas','nieobecnosc');
               N.put();
               N.OD:=N.DO+1;
               N.DO:=_c;
               N.DK:=0;
               exec('n_czas','nieobecnosc');
               _lt:=__n_lt.find_key(#N.ref());
               _ret:=N.add;
               {? _lt || __n_lt.N:=#N.ref(); __n_lt.add() ?};
               _ret
            ?};

            _kod:=
               {? __RUB.sys_attr(N.NB,14313,N.OD) | __RUB.sys_attr(N.NB,14331,N.OD)
               || __RUB.sys_val(14313,N.OD)
               || {? N.KDSW || N.KDSW().KOD ?}
               ?};

               N.KDSW:=exec('kod_zus','nieobecnosc','S',_kod);
               N.NB:=__RUB.ref(7,'N');
               N.put()
            ?}
         ?}
      || {? _a || '' ?}
   ?};
   obj_del(_dni_nieo);
   N.cntx_pop();
   N.get();
   exec('n_dnop_akt','nieobecnosc',_a,_b,_c)
?}


\limit_35
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk]
:: OPIS: kopia z nieobecn
::       do automatu rozpisujacego N przy imporcie
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_rozp','edi_ka',_a,'wyn')
|| _data_50:=P.OSOBA().UR_DATA;
   {? _data_50<>#0
   || _data_zm:=date(2009,2,1);
      _data_50:=((N.OD~1)-(_data_50~1))>=51;
      {? _data_50 & date(N.OD~1,N.OD~2,1)=date(2009,1,1) || return() ?};
      _limit:={? _data_50 & N.OD>=_data_zm || 14 || KST_PAR.CHOROBA ?}
   || _limit:=KST_PAR.CHOROBA
   ?};
   N.cntx_psh();
   {? _chk:=0;
      N.cntx_psh();
      _kod_org:=N.NB().RN;
      {? N.prev() & N.DO+1=_b
      || {? __RUB.sys_attr(N.NB,122112,N.OD) & __RUB.sys_attr(_kod_org,1211,N.OD)
         || _chk:=__RUB.sys_rub(122112,N.OD).RN
         |? __RUB.sys_attr(N.NB,122111,N.OD) & __RUB.sys_attr(_kod_org,12111,N.OD)
         || _chk:=__RUB.sys_rub(122111,N.OD).RN
         |? __RUB.sys_attr(N.NB,1212,N.OD) & __RUB.sys_attr(_kod_org,12213,N.OD)
         || _chk:=__RUB.sys_rub(1212,N.OD).RN
         |? __RUB.sys_attr(N.NB,122113,N.OD) & __RUB.sys_attr(_kod_org,12113,N.OD)
         || _chk:=__RUB.sys_rub(122113,N.OD).RN
         |? __RUB.sys_attr(N.NB,122114,N.OD) & __RUB.sys_attr(_kod_org,12114,N.OD)
         || _chk:=__RUB.sys_rub(122114,N.OD).RN
         ?}
      ?};
      N.cntx_pop();
      _chk
   || {? _a
      || _do:=N.OD-1;
         {!
         |? {? (_do+1)=N.OD & exec('czy_rozp','edi_ka',0,'wyn')
            || N.NB:=__RUB.ref(_chk,'N');
               N.PROC:=exec('procent','nieobecnosc',N.NB);
               _kod:={? __RUB.sys_attr(N.NB,12211,N.OD) || __RUB.sys_val(14313,N.OD)
                     |? __RUB.sys_attr(N.NB,125,N.OD) || __RUB.sys_val(14314,N.OD)
                     || '350'
                     ?};
               N.KDSW:=exec('kod_zus','nieobecnosc','S',_kod);
               _do:=N.DO;
               N.put() & N.next()
            ?}
         !}
      ?}
   |? _limit<(_nieo_wyk:=exec('n_dni_choroby','nieobecnosc',N.OD~1))
   || {? _a
      || {? {? (_nieo_wyk-N.NK)<_limit
            || N.DO:=N.OD+(N.NK-_nieo_wyk+_limit)-1;
                  {? {? N.DO=date(N.DO~1,12,0)
                     || 0
                     |? (N.OD~1)<>(N.DO~1)
                     || {? date(N.DO~1,1,1)+_limit<_c
                        || N.DO:=date(N.DO~1,1,1)+_limit-1; 1
                        ?}
                     || 1
                     ?}
                  || exec('n_czas','nieobecnosc');
                     N.put;
                     N.OD:=N.DO+1;
                     N.DO:=_c;
                     N.DK:=0;
                     exec('n_czas','nieobecnosc');
                     _lt:=__n_lt.find_key(#N.ref());
                     _ret:=N.add();
                     {? _lt || __n_lt.N:=#N.ref(); __n_lt.add() ?};
                     _ret
                  ?}
               || 1
            ?}
         || {? KST_CHOR.find_key(N.NB().RN) || N.NB:=KST_CHOR.ZAS; N.PROC:=exec('procent','nieobecnosc',N.NB) ?};
             _kod:={? __RUB.sys_attr(N.NB,12211,N.OD) || __RUB.sys_val(14313,N.OD)
                   |? __RUB.sys_attr(N.NB,125,N.OD) || __RUB.sys_val(14314,N.OD)
                   || '350'
                   ?};
            N.KDSW:=exec('kod_zus','nieobecnosc','S',_kod);
            N.put()
         ?}
      ?}
   || {? _a || '' ?}
   ?};
   N.cntx_pop();
   N.get();
   exec('n_dnop_akt','nieobecnosc',_a,_b,_c)
?}


\limit_szpital
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk]
:: OPIS: kopia z nieobecn
::       do automatu rozpisujacego N przy imporcie
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_rozp','edi_ka',_a,'szp')
|| _data_50:=P.OSOBA().UR_DATA;
   {? _data_50<>#0
   || _data_zm:=date(2011,1,1);
      _data_50:=((N.OD~1)-(_data_50~1))>=51;
      {? ~_data_50 | N.OD<_data_zm || return() ?};
      _limit:=KST_PAR.CHOROBA-14
   || return()
   ?};
   N.cntx_psh();
   _nieo_wyk:=
         (exec('n_dni_nieobecnosci','nieobecnosc',N.DO,__RUB.sys_rub(122122,N.OD).RN)+
          exec('n_dni_nieobecnosci','nieobecnosc',N.DO,__RUB.sys_rub(122111,N.OD).RN));
   {? _chk:=0;
      N.cntx_psh();
      _kod_org:=N.NB().RN;
      {? N.prev() & N.DO+1=_b
      || {? __RUB.sys_attr(N.NB,122121,N.OD) & __RUB.sys_attr(_kod_org,122122,N.OD)
         || _chk:=__RUB.sys_rub(122121,N.OD).RN
         ?}
      ?};
      N.cntx_pop();
      _chk
   || {? _a
      || _do:=N.OD-1;
         {!
         |? {? (_do+1)=N.OD & exec('czy_rozp','edi_ka',0,'szp')
            || N.NB:=__RUB.ref(_chk,'N');
               N.PROC:=exec('procent','nieobecnosc',N.NB);
               _kod:=__RUB.sys_val(14313,N.OD);
               N.KDSW:=exec('kod_zus','nieobecnosc','S',_kod);
               _do:=N.DO;
               N.put() & N.next()
            ?}
         !}
      ?}
   |? _limit<_nieo_wyk
   || {? _a
      || {? {? (_nieo_wyk-N.NK)<_limit
            || N.DO:=N.OD+(N.NK-_nieo_wyk+_limit)-1;
               {? {? N.DO=date(N.DO~1,12,0)
                  || 0
                  |? (N.OD~1)<>(N.DO~1)
                  || {? date(N.DO~1,1,1)+_limit<_c || N.DO:=date(N.DO~1,1,1)+_limit-1; 1 ?}
                  || 1
                  ?}
               || exec('n_czas','nieobecnosc');
                  N.put();
                  N.OD:=N.DO+1;
                  N.DO:=_c;
                  N.DK:=0;
                  exec('n_czas','nieobecnosc');
                  _lt:=__n_lt.find_key(#N.ref());
                  _ret:=N.add();
                  {? _lt || __n_lt.N:=#N.ref(); __n_lt.add() ?};
                  _ret
               ?}
            || 1
            ?}
         || N.NB:=__RUB.ref(__RUB.sys_rub(122121,N.OD).RN);
            N.PROC:=exec('procent','nieobecnosc',N.NB);
            _kod:=__RUB.sys_val(14313,N.OD);
            N.KDSW:=exec('kod_zus','nieobecnosc','S',_kod);
            N.put()
         ?}
      ?}
   || {? _a || '' ?}
   ?};
   N.cntx_pop();
   N.get();
   exec('n_dnop_akt','nieobecnosc',_a,_b,_c)
?}


\test_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk]
:: OPIS: kopia z nieowal
::       do automatu rozpisujacego N przy imporcie
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_b:={? var_pres('_b')=type_of(1) || _b || 0 ?};
N.cntx_psh;
N.index('NIEOBECN');
N.prefix('N',P.ref());
{? N.first()
|| {!
   |? {? N.ref()<>_a
      || ~~
: pomiń nieobecności rozliczone na zamkniętych listach płac
      |? exec('n_rozliczalna','nieobecnosc')
      || _NieoAkt:=N.ref();
: aktualizuj powiązania pierwotna - wtórna
         _kod:=N.NB().RN;
         _NPierw:=exec('n_find_chp','nieobecnosc',_kod,N.OD);
         N.seek(_NieoAkt);
         {? ~_NPierw || _NPierw:=N.ref() ?};
         {? _NPierw<>N.ref() & _NPierw<>exec('nw_find_chp','nieobecnosc',N.ref()) & N.ref()<>_a & ~_b
         || exec('tz_usun','nieobecnosc',1,0,'E')
         ?};
         NW.index('CHW');
         NW.prefix(N.ref());
         {? NW.first()
         || NW.CHP:=_NPierw;
            NW.put()
         || NW.blank();
            NW.CHP:=_NPierw;
            NW.CHW:=N.ref();
            {? __RUB.sys_attr(_kod,1222,N.OD)
            || NW.WSP:=exec('find_wsp_wal','nieobecnosc',N.OD,N.ref(),1);
               NW.WAL:='T'
            || NW.cntx_psh();
               NW.index('CHP');
               NW.prefix(_NPierw);
               {? NW.find_le(N.OD)
               || {? NW.WAL='T'
                  || _wal:=NW.WSP;
                     NW.cntx_pop();
                     NW.WAL:='T';
                     NW.WSP:=_wal
                  || NW.cntx_pop();
                     NW.WAL:='N'
                  ?}
               || NW.cntx_pop();
                  NW.WAL:='N'
               ?}
            ?};
            NW.add()
         ?};
         exec('akt_npod','edi_ka',_b)
      || NW.index('CHW');
         NW.prefix(N.ref());
         {? NW.first() || {! |? NW.del() !} ?}
      ?};
      N.next()
   !}
?};
N.cntx_pop();
N.get()


\akt_npod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk]
:: OPIS: kopia z nieowal
::       do automatu rozpisujacego N przy imporcie
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _a:=_a=1
|| _a:=0
?};
{? __RUB.sys_attr(NW.CHW().NB,113,NW.CHW().OD)
|| 0
|| _NEPod:=_NZPod:=_MEKwal:=_MZKwal:=0;
   TZ.cntx_psh();
   TZ.use('tabz'+form(NW.CHW().OD~1,-4,0,'99'));
   TZ.index('ZASTAB');
   TZ.prefix('E',NW.CHW);
   {? TZ.first()
   || {!
      |? {? TZ.W<>'N'
         || _NEPod+=TZ.KW;
            _MEKwal+=1
         ?};
         TZ.next()
      !}
   ?};
   TZ.prefix('Z',NW.CHW);
   {? TZ.first()
   || {!
      |? {? TZ.W<>'N'
         || _NZPod+=TZ.KW;
            _MZKwal+=1
         ?};
         TZ.next()
      !}
   ?};
   TZ.cntx_pop();
   _kod:=NW.CHW().NB;
   _ndo:=NW.CHW().DO;
   _nod:=NW.CHW().OD;
   {? _MEKwal | _MZKwal
   || {? ~_a || NW.put() ?}
   || {? ~_a || NW.put() ?}
   ?}
?};
{? ~_a || N.put ?}


\slo_osob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [17.14]
:: OPIS: Funkcja dodaje rekord do tabeli SLO_OSOB
::       jezeli znaleziony zostanie juz rekord z dodawanego bufora SLO_OSOB to nie bedzie dodany
::       UWAGA poprawnosc i liczba argumentow nie jest weryfikowana
::   WE: _a - ref formy zatrudnienia pole P.F_ZATR
::       _b - ref tabelia OSOBA pole  P.OSOBA
::       _c - IP pracownika pole P.IP
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SLO_OSOB.clear();
SLO_OSOB.blank(1);
SLO_OSOB.F_ZATR:=_a;
SLO_OSOB.OSOBA:=_b;
SLO_OSOB.ID:=_c;
{? ~SLO_OSOB.find_rec() || SLO_OSOB.add(1) ?}


\zlecenia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.14]
:: OPIS: Dodanie pozycji tabeli umów cywilnoprawnych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','ZC')
|| {? ZC.DZB=#0 || ZC.DZB:=ZC.DW ?};
   {? ZC.DZB<ZC.DU
   || _txt:='"Data zobowiązania" nie może być wcześniejsza niż "Data rozpoczęcia".'@;
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      return(~~)
   ?};
   _firma:=exec('ref_firma','ustawienia');
   ZC.cntx_psh();
   ZC.index('ZLECPRAC');
   ZC.prefix(ZC.P,ZC.R,ZC.M,ZC.DU,ZC.NU);
   {? ZC.first()
   || _txt:='Umowa: '+ZC.NU+' dla zleceniobiorcy: '+ZC.P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+', już istnieje.';
      _txt+='Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE');
      ZC.cntx_pop();
      return(~~)
   ?};
   ZC.cntx_pop();
   {? ZC.P=null()
   || _txt:='Nie dodano umowy: '+ZC.NU+', brak zleceniobiorcy. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,81,'BRAK WARTOŚCI')
   |? ZC.WYDZIAL=null()
   || _txt:='Nie dodano umowy: '+ZC.NU+', brak wydziału. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,81,'BRAK WARTOŚCI')
   || P.cntx_psh();
      ZC.OSOBA:=ZC.P().OSOBA;
         {? ~ZC.KT
         || ZC.KT:=exec('FindInSet','#table','KT','KRYTERIA','ZLC',exec('ref_firma','ustawienia'),,1)
         ?};
         ZC.prefix();
         {? ZC.add(1)
         || ZC_INFO.prefix();
            exec('zc_info_add','zlec_rh');
            _txt:='Dodano umowę: '+ZC.NU+'.';
            exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,38,'ZAPISANE REKORDY');
            __record+=1
         || _txt:='Nie dodano umowy: '+ZC.NU+'. Rekordu nie dodano.';
            exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,5,'INNE BŁĘDY')
      ?};
      P.cntx_pop()
   ?}
?};
~~


\rachunki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.14]
:: OPIS: Dodanie pozycji tabeli z rachunkami do umów cywilnoprawnych
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','RH')
|| ZC.cntx_psh();
   ZC.index('ZLECPRAC');
   ZC.prefix(ZC.P,ZC.R,ZC.M,ZC.DU,ZC.NU);
   {? ~ZC.first()
   || _txt:='Nie dodano rachunku: '+$RH.DWY+', brak umowy. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,81,'BRAK WARTOŚCI')
   || _rachunek:=0;
      {? __dalej=2
      || RH.cntx_psh();
         RH.index('RACHUNKC');
         RH.prefix(ZC.ref());
         {? RH.first()
         || _rachunek:=1
         ?};
         RH.cntx_pop()
      ?};
      {? ~_rachunek
      || RH.ZLE:=ZC.ref();
         RH.FEP:=ZC.FEP;
         RH.cntx_psh();
         {? exec('get_ZC_INFO','zlec_rh',RH.DWY)
         || RH.ZC_INFO:=ZC_INFO.ref()
         ?};
         RH.prefix();
         {? RH.add(1)
         || RH.O:=
               {? type_of(__TAB)>100 & __TAB.first()
               || exec('add_LS2RH','edi_ka')
               || null()
               ?};
            {? RH.O
            || _txt:='Dodano rachunek: '+$RH.DWY+' '+RH.ZLE().P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
               exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,38,'ZAPISANE REKORDY');
               RH.put(1)
            || {? ~RH.count() & RH.del(,1)
               || _txt:='Nie znaleziono listy płac do rachunku: '+$RH.DWY+'. Rekordu nie dodano.';
                  exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,5,'INNE BŁĘDY')
               ?}
            ?};
            __record+=1
         || _txt:='Nie dodano rachunku: '+$RH.DWY+'. Rekordu nie dodano.';
            exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,5,'INNE BŁĘDY')
         ?};
         RH.cntx_pop()
      || _txt:='Rachunek pominięto: '+$RH.DWY+'. Rekordu nie dodano.';
         exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE')
      ?}
   ?};
   {? type_of(__TAB)>100
   || __TAB.clear();
      __TAB.erase()
   ?};
   ZC.cntx_pop()
?};
~~


\add_O2RH
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.14]
:: OPIS: Dodanie nagłówka listy płac dla rachunku do umowy cywilnoprawnej.
::   WE: _a - rok
::       _b - mc
::       _c - typ listy
::   WY: O.ref() lub null
::----------------------------------------------------------------------------------------------------------------------
exec('__F_ZATR','object');
exec('__KAL','object');
__KAL.set_cal(KT.KA,_a);
_od:=date(_a,_b,1);
_do:=date(_a,_b,0);
KT.index('KRYTERIA');
KT.prefix(exec('ref_firma','ustawienia'));
{? ~KT.find_key(_c)
|| return(0)
?};

O.blank();
O.ODDZIAL:=exec('odd_par_1','ustawienia');
O.WYDZIAL:=exec('ud_skl_firma','schemat','PODZORG');
O.R:=O.RU:=O.RP:=_a;
O.M:=O.MP:=O.MU:=_b;
O.T:=KT.ref();
O.O:='Nagłówek listy założony automatycznie podczas importu rachunku do zlecenia.';
O.D:=O.DZUS:=O.DUS:=date(_a,_b,0);
O.N:=O.size()+1;
O.F:=KT.F;
O.DK:=_do-_od+1;
O.DR:=__KAL.w_days(_od,_do);
O.GR:=__KAL.w_hours(_od,_do);
O.LT:=-('L'+($_a+2)+('0'+$_b+2)+KT.T);
O.DKURS:=date(0,0,0);
O.DOK:='';
O.F_ZATR:=KT.F_ZATR;
O.FIRMA:=KT.FIRMA;
{? O.add(1)
|| exec('put_stat','lista_plac',O.ref(),'LSLP_AKT',1);
   exec('put_stat','lista_plac',O.ref(),'ZBLP_AKT',1);
   _wyn:=O.ref()
|| _wyn:=null()
?};
_wyn


\add_LS2RH
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.14]
:: OPIS: Dodanie pozycji listy płac dla rachunku do umowy cywilnoprawnej.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
O.cntx_psh();
O.index('LISTYPLA');
O.prefix(exec('ref_firma','ustawienia'),'Z',RH.R,RH.M,RH.ZLE().KT().T,);
_refO:={? O.first()
       || O.ref()
       || exec('add_O2RH','edi_ka',RH.R,RH.M,RH.ZLE().KT().T)
       ?};
{? _refO
|| LS.cntx_psh();
   {? ~(O.LT=LS.name()) | ~+VAR.NAZWALIS || FUNKCJE.OTWOLIST() ?};
   LS.P:=RH.ZLE().P;
   LS.RH:=RH.ref();
   LS.O:=_refO;
   {!
   |? LS.RB:=exec('FindInSet','#table','R','RUBKOD',__TAB.RB);
      LS.KW:=__TAB.KW;
      LS.add(1);
      __TAB.next()
   !};
   LS.cntx_pop()
?};
O.cntx_pop();
_refO


\p_h_h_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.14]
:: OPIS: Import współpracowników, dodanie pozycji tabeli P, H i H_UM
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','P') & exec('wymag','edi_ka','H') & exec('wymag','edi_ka','H_UM')
|| _ok:=1;
   H.P:=H_UM.P:=null();
   H.cntx_psh();
   H.index('_HISTDAT');
   H_UM.cntx_psh();
   H_UM.index('OD');
   P.cntx_psh();
   P.index('PRACOIP');
   P.prefix(P.FIRMA,P.F_ZATR().KOD,P.IP);
   {? P.first()
   || _txt:='Istnieje już współpracownik: '+$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL+'. ';
      _txt+='Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,5,'JUŻ JEST W BAZIE');
      _ok*=0
   ?};
   {? P.OSOBA
   || {? P.F_ZATR().KOD='Z'
      || P.ODDZIAL:=exec('odd_par_1','ustawienia',P.FIRMA)
      ?};
      {? _ok
      || {? ~P.add(1)
         || _txt:='Nie dodano współpracownika: '+$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL+'.';
            exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,5,'INNE BŁĘDY');
            _ok*=0
         || H.P:=H_UM.P:=P.ref();
            H.prefix(H.P,H.OD);
            H_UM.prefix(H.P,H.OD);
            {? H.first()
            || _txt:='Istnieje już zapis warunków współpracy: '+H.OD$1;
               _txt+=', współpracownika: '+$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
               _txt+='. Rekordu nie dodano.';
               exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,5,'JUŻ JEST W BAZIE');
               _ok*=0
            ?};
            {? _ok & H_UM.first()
            || _txt:='Istnieje już zapis warunków współpracy: '+H_UM.OD$1;
               _txt+=', współpracownika: '+$H_UM.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
               _txt+='. Rekordu nie dodano.';
               exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,5,'JUŻ JEST W BAZIE');
               _ok*=0
            ?};
            {? _ok & ~H.P
            || _txt:='Nie można ustalić warunków współpracy: '+H.OD$1+', brak współpracownika. Rekordu nie dodano.';
               exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,6,'BRAK WARTOŚCI');
               _ok*=0
            ?};
            {? _ok & H.OD=#0
            || _txt:='Nie można ustalić warunków współpracy: '+H.OD$1+', brak daty OD. Rekordu nie dodano.';
               exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,15,'NIEPRAWIDŁOWA WARTOŚĆ');
               _ok*=0
            || {? H.PODPIS=#0 | H.PODPIS>H.OD || H.PODPIS:=H.OD ?}
            ?};
            {? _ok & ~H.WYDZIAL
            || _txt:='%1 %2, %3 %4'[
                  'Nie można ustalić warunków współpracy:',
                  H.OD$1,
                  'brak jednostki organizacyjnej.',
                  'Rekordu nie dodano.'
               ];
               exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,6,'BRAK WARTOŚCI');
               _ok*=0
            ?};
            {? _ok & ~H.CP
            || _txt:='Nie można ustalić warunków współpracy: '+H.OD$1+', brak charakteru pracy. Rekordu nie dodano.';
               exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,6,'BRAK WARTOŚCI');
               _ok*=0
            ?};
            H.KZ:=exec('FindInSet','#table','H_ZM','ZMIANY','Z',,,1);
            {? _ok & ~H.KZ
            || _txt:='Nie można ustalić warunków współpracy: '+H.OD$1+', brak kodu zmiany. Rekordu nie dodano.';
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,6,'BRAK WARTOŚCI'@);
               _ok*=0
            ?};
            {? _ok & (H.PODPIS=#0 | H.PODPIS>H.OD)
            || _txt:='%1 %2, %3 %4'[
                  'Nie można ustalić warunków współpracy:',
                  H_UM.OD$1,
                  'błędna data podpisania umowy.',
                  'Rekordu nie dodano.'
               ];
               exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,15,'NIEPRAWIDŁOWA WARTOŚĆ');
               _ok*=0
            ?};
            {? _ok & ~H.ST
            || _txt:='Nie dodano przebiegu zatrudnienia: '+H.OD$1+', brak stanowiska pracy. Rekordu nie dodano.';
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
               _ok*=0
            ?};
            {? _ok
            || H_UM.OD:=H.OD;
               H_UM.DO:=H_UM.DO;
               H_UM.RU:=exec('FindInSet','#table','RU','K','X',exec('slo_typ','ext_slo','UMPRAC'));
               {? H_UM.add(1)
               || H.RU:=H_UM.RU;
                  H.UMOWA:=H_UM.ref();
                  {? H.add(1)
                  || __record+=1;
                     __TAB.REF:=$H.ref();
                     __TAB.add();
                     _txt:='Dodano współpracownika: ';
                     _txt+=$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL+'.';
                     exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,38,'ZAPISANE REKORDY');
                     _txt:='Dodano warunki współpracy: '+H_UM.OD$1+', współpracownika: ';
                     _txt+=$H_UM.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
                     exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,38,'ZAPISANE REKORDY')
                  || {? H_UM.del(,1)
                     || _txt:='Nie dodano współpracownika: '+$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+', ';
                        _txt+='ponieważ nie można dodać warunków jego współpracy.';
                        exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,5,'INNE BŁĘDY');
                        P.del()
                     || _txt:='Nie usunięto warunków współpracy współpracownika: ';
                        _txt+=$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
                        exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,5,'INNE BŁĘDY')
                     ?}
                  ?}
               || _txt:='Nie dodano współpracownika: '+$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+', ';
                  _txt+='ponieważ nie można dodać warunków jego współpracy.';
                  exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,5,'INNE BŁĘDY');
                  P.del()
               ?}
            || _txt:='Nie dodano współpracownika: '+$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+', ';
               _txt+='ponieważ nie można dodać warunków jego współpracy.';
               exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,5,'INNE BŁĘDY');
               P.del()
            ?}
         ?}
      ?}
   || _txt:='Nie dodano współpracownika: '+$P.IP+', brak osoby. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,6,'BRAK WARTOŚCI')
   ?};
   H_UM.cntx_pop();
   H.cntx_pop();
   P.cntx_pop()
?};
~~


\p_h_h_um_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [19.42]
:: OPIS: Warunkuje import współpracowników
::   WE: _a - forma zatrudnienia, kod
::   WY: 1 - eksport możliwy
::       0 - eksport niemożliwy
::----------------------------------------------------------------------------------------------------------------------
_fzatr:=$($(EDI_D.TAB + '.P().F_ZATR().KOD'))();
{? _fzatr='K' | _fzatr='Z' | _fzatr='T' | _fzatr='R' || 1 || 0 ?}


\sys_memo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [20.42]
:: OPIS: Umożliwia import pola notatnikowego
::   WE: _a - akronim tabeli
::       _b - akronim pola
::       _c - treść notatki
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _c<>'0'
|| $(_b).memo_set(_c,_a);
   $(_b).memo_put(,_a)
?};
~~


\ini_ppk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Formuła inicjująca odczyt dla importu PPK
::   WE: _a [STRING] - Nazwa tabeli
::   WY: 1/0 Spełnione/nie spełnione warunki inicjujące import
::----------------------------------------------------------------------------------------------------------------------
:: sprawdzenie możliwości korzystania z dziedziny PPK
{? exec('pre_sel','ppk')=0 || return(0) ?};

VAR_DEL.delete('__record','__linia');
__linia:=1;
__record:=0;

_size:=
   "  _tab:=($(_a))();
      _tab.clear();
      {? _tab.size()=0
      || exec('add_kom','#message','%1 %2 %3.'['Brak danych.'@,'Tabela'@,_a],2,'BRAK DANYCH'@); 0
      || 1
      ?}
   ";
{? _a='PPK_UCZ'
|| _size('OSOBA')
|? _a='PPK_WNU'
|| VAR_DEL.delete('__TAB');
   __TAB:=tab_tmp(,'REF','STRING[16]',);
   _size('OSOBA')
|? _a='PPK_PWP'
|| {? ~(var_pres('__RUB')>0) || exec('__RUB','object') ?};
   _size('OSOBA')
|? _a='PPK_POD'
|| {? ~(var_pres('__RUB')>0) || exec('__RUB','object') ?};
   _size('P') & _size('O')
|| 0
?}


\blank_ppk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Uzupełnianie pól importu danych powiązanych z PPK
::   WE: _a [STRING] - Nazwa tabeli
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a='PPK_UCZ'
|| PPK_UCZ.FIRMA:=exec('ref_firma','ustawienia');
   PPK_UCZ.PPK_UMO:=exec('find_ppk_umo','edi_wspolne');
   PPK_UCZ.SR:='A';
   ''
|? _a='PPK_WNU'
|| PPK_WNU.FIRMA:=exec('ref_firma','ustawienia');
   PPK_WNU.PPK_UMO:=exec('find_ppk_umo','edi_wspolne');
   PPK_WNU.REJ_DATA:=PPK_WNU.DATA;
   PPK_WNU.REJ_TRYB:='A';
   PPK_WNU.WER_DATA:=PPK_WNU.DATA;
   PPK_WNU.WER_WYM:='N';
   PPK_WNU.WER_STAT:='T';
   PPK_WNU.PWP_DATA:=PPK_WNU.DATA;
   PPK_WNU.PWP_STAT:='T';
   PPK_WNU.UID:=exec('tm_stamp','#tm_stamp')
|? _a='PPK_PWP'
|| PPK_PWP.FIRMA:=exec('ref_firma','ustawienia');
   PPK_PWP.ZC:=null();
   PPK_PWP.P:=null();
   PPK_PWP.SR:='A'
|? _a='PPK_POD'
|| EDIT_VAR.blank(1)
|| FUN.info('Błąd w blank_ppk/edi_ka'@)
?}


\end_ppk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Uzupełnienie danych dla importu PPK.
::   WE: _a [STRING] - Nazwa tabeli
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__record')<>type_of(0) || __record:=0 ?};

_txt:={? '1'*($__record) || 'Dołączono %1 rekord do tabeli %2'@[$__record,_a]
      |? '234'*($__record) || 'Dołączono %1 rekordy do tabeli %2'@[$__record,_a]
      || 'Dołączono %1 rekordów do tabeli %2'@[$__record,_a]
      ?};
exec('add_kom','#message',_txt,1,'NOWE DANE');

VAR_DEL.delete('__record','__linia');

{? _a='PPK_UCZ'
|| ''
|? _a='PPK_WNU'
|| {? ~(var_pres('__RUB')>0) || exec('__RUB','object') ?};
   _refUmo:=exec('find_ppk_umo','edi_wspolne');
   {? _refUmo=null()
   || _txt:='Nie znaleziono umowy o prowadzenie PPK, brak umowy lub umowa nieaktualna.';
      exec('add_kom','#message',_txt,170,'POPRAW DANE'@);
      return('')
   ?};
:: dla wszystkich osób, które złożyły wniosek o rezygnację z PPK zostaną dodane dwa wpisy do PPK_PWP (procent wpłat) z
:: wysokością stawki 0 dla składników 710 i 712 (PPK % wpłat podstawowy - firma,
:: oraz PPK % wpłat podstawowy -  uczestnik)
   PPK_WNU.cntx_psh();
   PPK_WNU.clear();
   {? PPK_WNU.f_active() || PPK_WNU.f_clear() ?};
   PPK_WNU.f_set(,,'PPK_WNU.REFERENCE in (select :_a.REF from :_a)',__TAB);
   {? PPK_WNU.f_first()
   || {!
      |? _ok:=1;
         PPK_WPW.cntx_psh();
         PPK_WST.cntx_psh();
         PPK_WST.prefix(exec('szukaj','ppk_wrd','U','DRZW'));
         {? PPK_WST.first()
         || {!
            |? PPK_WPW.blank();
               PPK_WPW.PPK_WNU:=PPK_WNU.ref();
               PPK_WPW.R:=PPK_WST.R;
               PPK_WPW.BLOKADA:=PPK_WST.BLOKADA;
               PPK_WPW.ZMIANA:=PPK_WST.ZMIANA;
               PPK_WPW.STAWKA:=0;
               {? ~PPK_WPW.add(1)
               || _ok*=0
               ?};
               PPK_WST.next()
            !}
         ?};
         PPK_WST.cntx_pop();
         PPK_WPW.cntx_pop();
         {? _ok
         || {? exec('pwp_dod','ppk_wnu',PPK_WNU.ref())
            || _txt:='%1 %2, %3: %4 %5 %6 %7.'
                  ['Uzupełniono procentowe wysokości wpłat z dnia'@,PPK_WNU.OD$6,'dla'@,
                   PPK_WNU.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL,'w związku z deklaracją rezygnacji z wpłat'@];
               exec('add_kom','#message',_txt,38,'ZAPISANE REKORDY'@)
            || _ok*=0;
               _txt:='%1 %2, %3: %4 %5 %6 %7. '
                  ['Nie wygenerowano procentowych wysokości wpłat z dnia'@,PPK_WNU.OD$6,'dla'@,
                   PPK_WNU.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL,'w związku z deklaracją rezygnacji z wpłat'@];
               {? PPK_WNU.PPK_UCZ().OD=PPK_WNU.OD
               || _txt+='Próba powielenia informacji o procentowych wysokościach wpłat. '
                     'Data rozpoczęcia uczestnictwa jest równa dacie deklaracji rezygnacji z wpłat.'@
               ?};
               exec('add_kom','#message',_txt,4,'INNE BŁĘDY'@)
            ?}
         ?};

         PPK_WNU.f_next()
      !}
   ?};
   {? PPK_WNU.f_active() || PPK_WNU.f_clear() ?};
   PPK_WNU.cntx_pop();
   VAR_DEL.delete('__TAB')
|? _a='PPK_PWP'
|| ''
|? _a='PPK_POD'
|| ''
|| FUN.info('Błąd w end_ppk/edi_ka'@)
?};
~~


\ppk_uczestnik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Dodanie pozycji tabeli PPK_UCZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','PPK_UCZ')
|| _ok:=1;
   {? PPK_UCZ.PPK_UMO=null()
   || _txt:='Nie dodano danych uczestnika PPK, brak umowy o prowadzenie PPK lub umowa nieaktualna.'@;
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? PPK_UCZ.ID_PPK='' || PPK_UCZ.ZG='N' ?};
   PPK_UCZ.cntx_psh();
   PPK_UCZ.index('UNIQUE');
   PPK_UCZ.prefix(PPK_UCZ.PPK_UMO,PPK_UCZ.OSOBA);
   {? PPK_UCZ.first()
   || _txt:='Istnieje już uczestnik PPK: %1 %2 %3.'[PPK_UCZ.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? PPK_UCZ.OSOBA
   || {? ~exec('aktywny','ppk_ucz',PPK_UCZ.OSOBA().ref(),PPK_UCZ.OD)
      || _txt:='Nie dodano uczestnika PPK: %1 %2 %3. '[PPK_UCZ.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
         _txt+='Nie znaleziono informacji o zatrudnieniu dla podanej osoby na dzień %1.'@[PPK_UCZ.OD$6];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
         _ok*=0
      ?};
      {? _ok
      || {? ~PPK_UCZ.add(1)
         || _txt:='Nie dodano uczestnika PPK: %1 %2 %3.'[PPK_UCZ.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
         || _txt:='Dodano uczestnika PPK: %1 %2 %3.'[PPK_UCZ.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
            __record+=1
         ?}
      ?}
   || _txt:='Nie dodano uczestnika o identyfikatorze: %1, brak osoby. Rekordu nie dodano.'@[PPK_UCZ.ID_APP];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   PPK_UCZ.cntx_pop()
?};
~~


\ppk_wniosek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Dodanie pozycji tabeli PPK_WNU
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','PPK_WNU')
|| _ok:=1;
   {? PPK_WNU.PPK_UMO=null()
   || _txt:='Nie dodano danych deklaracji PPK, brak umowy o prowadzenie PPK lub umowa nieaktualna.'@;
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   PPK_UCZ.cntx_psh();
   PPK_UCZ.index('UNIQUE');
   PPK_UCZ.prefix(PPK_WNU.PPK_UMO,PPK_WNU.OSOBA);
   _refUcz:={? PPK_UCZ.first() || PPK_UCZ.ref() || null() ?};
   {? PPK_UCZ.seek(_refUcz,,1)
   || PPK_WNU.TYP:='U';
      PPK_WNU.PPK_UCZ:=_refUcz
   || PPK_WNU.TYP:='O';
      PPK_WNU.PPK_UCZ:=null()
   ?};
   PPK_UCZ.cntx_pop();
   PPK_WRD.cntx_psh();
   PPK_WRD.index('SYMBOL');
   PPK_WRD.prefix(PPK_WNU.TYP,'DRZW',);
   _refWrd:={? PPK_WRD.first() || PPK_WRD.ref() || null() ?};
   {? PPK_WRD.seek(_refWrd,,1)
   || PPK_WNU.PPK_WRD:=PPK_WRD.ref()
   || _txt:='Nie dodano danych deklaracji PPK, brak rodzaju \'Rezygnacja\' dla uczestników.'@;
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   PPK_WRD.cntx_pop();
   {? PPK_WNU.PPK_WRD
   || PPK_WNU.cntx_psh();
      PPK_WNU.index('UMO_WRD');
      PPK_WNU.prefix(PPK_WNU.PPK_UMO,PPK_WNU.OSOBA,PPK_WNU.PPK_WRD().SYMBOL,);
      {? PPK_WNU.first()
      || _txt:='Istnieje już rezygnacja dla: %1 %2 %3.'@[PPK_WNU.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
         _txt+=' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
         _ok*=0
      ?};
      {? PPK_WNU.OSOBA
      || {? ~exec('aktywny','ppk_ucz',PPK_WNU.OSOBA().ref(),PPK_WNU.OD)
      || _txt:='Nie dodano deklaracji o rezygnacji z PPK: %1 %2 %3.'@
            [PPK_WNU.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
         _txt+='Nie znaleziono informacji o zatrudnieniu dla podanej osoby na dzień %1.'@[PPK_WNU.OD$6];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
         _ok*=0
         ?};
         {? PPK_WNU.OD<PPK_WNU.DATA
         || _txt:='Nie dodano deklaracji o rezygnacji z PPK: %1 %2 %3.'@
               [PPK_WNU.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
            _txt+='Data zmiany nie może być wcześniejsza od daty złożenia wniosku.'@;
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
         ?};
         {? PPK_WNU.PPK_UCZ & ~exec('zakr_ucz','ppk_wnu',PPK_WNU.DATA,PPK_WNU.OD,PPK_WNU.PPK_UCZ)
         || _txt:='Nie dodano deklaracji o rezygnacji z PPK: %1 %2 %3.'@
               [PPK_WNU.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
            _txt+='Data złożenia wniosku oraz data, od której ma mieć on zastosowanie '@;
            _txt+='muszą zawierać się w okresie uczestnictwa osoby w planie kapitałowym.'@;
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
         ?};
::       Zgodnie z założeniami importu są importowane tylko Deklaracje o rezygnacji - nie można zaimportować deklaracji
::       dla osoby niebędącej uczestnikiem PPK
         {? PPK_WNU.TYP='O'
         || _txt:='Nie dodano deklaracji o rezygnacji z PPK: %1 %2 %3.'@
               [PPK_WNU.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
            _txt+='Nie można dodać deklaracji o rezygnacji dla osoby niebędącej uczestnikiem PPK.'@;
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
         ?};
         {? _ok
         || {? ~PPK_WNU.add(1)
            || _txt:='Nie dodano deklaracji z dnia %1, dla: %2 %3 %4.'@
                  [PPK_WNU.OD$6,PPK_WNU.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
               _ok*=0
            || __TAB.REF:=$PPK_WNU.ref();
               __TAB.add();
               _txt:='Dodano deklarację z dnia %1, dla: %2 %3 %4.'@
                  [PPK_WNU.OD$6,PPK_WNU.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
               __record+=1
            ?}
         ?}
      || _txt:='Nie dodano deklaracji z dnia: %1, brak osoby. Rekordu nie dodano.'@[PPK_WNU.OD$6];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      ?};
      PPK_WNU.cntx_pop()
   ?}
?};
~~


\ppk_wplata
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Dodanie pozycji tabeli PPK_PWP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
:: zmienna do podliczania dodanych rekordów do PPK_PWP dla danego Uczestnika
VAR_DEL.delete('countPwp');
countPwp:=0;
:: formuła dodająca rekord PPK_PWP (procent wpłat) dla danego uczestnika w zależności od rodzaju rekordu
:: Zgodnie z ustaleniami (blokady w systemie):
:: Pole PR1 - jeśli <>0 to znacznik czy indywidualna ma być zawsze ustawiona na N, niezależnie od pola w imporcie.
:: Pole PR4 (składka dobrowolna uczestnik) - zawsze powinno być importowane ze znacznikiem składka indywidualna na T.
_addPwp:="{? ~(var_pres('__RUB')>0) || return(0) ?};
          _cont:=_b;
          _attr:=_e;
          _type:=_f;
          _subject:=_g;
          _rate:={? _h=1 || _c.PR1 |? _h=2 || _c.PR2 |? _h=3 || _c.PR3 |? _h=4 || _c.PR4 || -1 ?};
          _ok:=1;
          {? _rate<0 || return(0) ?};
          {? _a & _cont & ((_rate & ~_d) | (~_rate & _d & _h<>2 & _h<>4))
          || PPK_PWP.R:=__RUB.REF[__RUB.sys_rub(_attr).RN];
             PPK_PWP.STAWKA:=_rate;
             {? _h=1 & PPK_PWP.STAWKA<>0
             || PPK_PWP.ZMIANA:='N'
             |? _h=4
             || PPK_PWP.ZMIANA:='T'
             ?};
             PPK_PWP.cntx_psh();
             PPK_PWP.index('UNIQUE');
             PPK_PWP.prefix(PPK_PWP.FIRMA,PPK_PWP.REF,PPK_PWP.OD,PPK_PWP.R);
             {? PPK_PWP.first()
             || _txt:='Dla %1 %2 %3 istnieje już procent wpłaty %4 (%5)'@
                   [PPK_PWP.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL,_type,_subject];
                {? _d || _txt+=' wynikający z deklaracji o rezygnację z PPK.'@ ?};
                _txt+='. %1'['Rekordu nie dodano.'@];
                exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
                _ok*=0
             ?};
             PPK_PWP.cntx_pop();
             {? _ok
             || {? ~PPK_PWP.add(1)
                || _txt:='Nie dodano procentu wpłaty %1 (%2) z dnia %3, dla: %4 %5 %6.'@
                      [_type,_subject,PPK_PWP.OD$6,PPK_PWP.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
                   exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
                   _cont*=0
                ||
::                 W przypadku, gdy powiodła się operacja dodania, nadpisanie zapisu stawką z pliku przy wyłączonych
::                 triggerach po spełnieniu warunków - wpp. nastąpi usunięcie zapisu i zwrot odpowiedniego komunikatu
                   {? PPK_PWP.ZMIANA<>'T'
                   || R.cntx_psh();
                      R.prefix();
                      _rub:=PPK_PWP.R().RN;
                      R.cntx_pop();
                      _od:=PPK_PWP.OD;

                      {? _rub=__RUB.sys_kod(710,_od)
::                    wpłata podstawowa (zatrudniający)
                      || exec('czytaj','#stalesys',_od,KST_PPK,'SK_PF');
                         _sysConst:=KST_PPK.SK_PF;
                         _ok*=(_sysConst=_rate)
                      |? _rub=__RUB.sys_kod(711,_od)
::                    wpłata dodatkowa (zatrudniający)
                      || exec('czytaj','#stalesys',_od,KST_PPK,'SK_DOMDF');
                         _sysConst:=KST_PPK.SK_DOMDF;
                         _ok*=(_sysConst=_rate)
                      |? _rub=__RUB.sys_kod(712,_od)
::                    wpłata podstawowa (zatrudniony)
                      || exec('czytaj','#stalesys',_od,KST_PPK,'SK_MAXPU','SK_MINPU');
                         _sysConstMax:=KST_PPK.SK_MAXPU;
                         _sysConstMin:=KST_PPK.SK_MINPU;
                         _ok*=(_rate<=_sysConstMax & _rate>=_sysConstMin)
                      |? _rub=__RUB.sys_kod(713,_od)
::                    wpłata dodatkowa (zatrudniony)
                      || exec('czytaj','#stalesys',_od,KST_PPK,'SK_MAXDU');
                         _sysConst:=KST_PPK.SK_MAXDU;
                         _ok*=(_rate<=_sysConst)

                      || _ok*=0
                      ?}
                   ?};
                   {? _ok
                   || PPK_PWP.trig_off('put','*');
                      PPK_PWP.STAWKA:=_rate;
                      {? ~PPK_PWP.put(1)
                      || _txt:='Nie zaktualizowano procentu wpłaty %1 (%2) z dnia %3, dla: %4 %5 %6, wystąpił błąd.'@
                           [_type,_subject,PPK_PWP.OD$6,PPK_PWP.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
                         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
                      ?};
                      PPK_PWP.trig_on('put','*');
                      countPwp+=1
                   || _txt:='Nie dodano procentu wpłaty %1 (%2) z dnia %3, dla: %4 %5 %6.'@
                        [_type,_subject,PPK_PWP.OD$6,PPK_PWP.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
                      _txt:='%1 %2'@
                        [_txt,'Podana stawka jest różna od wartości domyślnych zdefiniowanych w systemie.'@];
                      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
                      PPK_PWP.del()
                   ?}
                ?}
             ?}
          || {? _a & _cont & _rate & _d
             || _txt:='Nie dodano procentu wpłaty %1 (%2) z dnia %3, dla: %4 %5 %6.'@
                   [_type,_subject,PPK_PWP.OD$6,PPK_PWP.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
                _txt+='Podana osoba zrezygnowała z uczestnictwa w PPK.'@;
                exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
                _cont*=0
             ?}
          ?};
          {? _d & _h=4 || _cont*=0 ?};
          _cont
         ";
{? exec('wymag','edi_ka','PPK_PWP')
|| _ok:=1;
   {? PPK_PWP.OSOBA
   || PPK_PWP.REF:=$PPK_PWP.OSOBA
   || _txt:='Nie dodano informacji o procentach wpłat z dnia: '+PPK_PWP.OD$6+', brak osoby. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
:: Sprawdzenie czy jest umowa PPK:
   {? _ok
   || _refUmo:=exec('find_ppk_umo','edi_wspolne');
      {? _refUmo=null()
      || _txt:='Nie dodano procentu wpłat na PPK, brak umowy o prowadzenie PPK lub umowa nieaktualna.';
         _txt+=' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _ok*=0
      ?}
   ?};
:: Sprawdzenie czy jest uczestnik PPK:
   {? _ok
   || PPK_UCZ.cntx_psh();
      PPK_UCZ.index('UNIQUE');
      PPK_UCZ.prefix(_refUmo,PPK_PWP.OSOBA);
      {? PPK_UCZ.first()
      || _uczOd:=PPK_UCZ.OD;
         _uczDo:=PPK_UCZ.DO
      || _ok*=0;
         _txt:='%1 %2'['Nie znaleziono uczestnika PPK.'@,'Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
      ?};
      PPK_UCZ.cntx_pop()
   ?};
:: Sprawdzenie czy data od mieści się w uczestnictwie PPK.
   {? _ok
   || {? PPK_PWP.OD<_uczOd | (_uczDo<>date(0,0,0) & PPK_PWP.OD>_uczDo)
      || _ok*=0;
         _txt:='Data zmiany procentowej wysokości wpłat musi zawierać się w okresie uczestnictwa w PPK. '@;
         _txt+='Nie dodano procentu wpłat na PPK: %1 %2 %3. '@[PPK_PWP.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
      ?}
   ?};
   {? _ok
   ||
::    tablica nazwana do trzymania wartości dla bufora tabeli PPK_PWP dla każdego dodawanego rekordu
      {? var_pres('_pwp')>100 || obj_del(_pwp) ?};
      _pwp:=obj_new('OSOBA_REF','OD','ZMIANA','PR1','PR2','PR3','PR4','OWD','BLOKADA');
      _pwp.OSOBA_REF:=PPK_PWP.REF:=$PPK_PWP.OSOBA;
      _pwp.OD:=PPK_PWP.OD;
      _pwp.ZMIANA:=PPK_PWP.ZMIANA;
      _pwp.PR1:=VAR.REAL1;
      _pwp.PR2:=VAR.REAL2;
      _pwp.PR3:=VAR.REAL3;
      _pwp.PR4:=VAR.REAL4;
      _pwp.OWD:=KST_POM.PT_2;
      {? ~exec('aktywny','ppk_ucz',PPK_PWP.OSOBA().ref(),PPK_PWP.OD)
      || _txt:='Nie dodano procentu wpłat na PPK: %1 %2 %3. '@[PPK_PWP.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
         _txt+='Nie znaleziono informacji o zatrudnieniu dla podanej osoby na dzień %1.'[PPK_PWP.OD$6];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
         _ok*=0
      ?};
      PPK_WRD.cntx_psh();
      PPK_WRD.index('SYMBOL');
      PPK_WRD.prefix('U','DRZW',);
      _symbol:={? PPK_WRD.first() || PPK_WRD.SYMBOL || '' ?};
      PPK_WRD.cntx_pop();
      PPK_WNU.cntx_psh();
      PPK_WNU.index('UMO_WRD');
      PPK_WNU.prefix(_refUmo,PPK_PWP.OSOBA,_symbol,);
      _isResign:={? PPK_WNU.first() & PPK_WNU.OD<PPK_PWP.OD || 1 || 0 ?};
      PPK_PWP.BLOKADA:=_pwp.BLOKADA:={? _isResign || 'T' || 'N' ?};
      PPK_WNU.cntx_pop();
      {? _ok
      || _cont:=1;
         _cont:=_addPwp(1,_cont,_pwp,_isResign,710,'podstawowej','firma',1);
         _cont:=_addPwp(exec('ppk_wplata_reset','edi_ka',_pwp),_cont,_pwp,_isResign,711,'dodatkowej','firma',2);
         _cont:=_addPwp(exec('ppk_wplata_reset','edi_ka',_pwp),_cont,_pwp,_isResign,712,'podstawowej','uczestnik',3);
         _cont:=_addPwp(exec('ppk_wplata_reset','edi_ka',_pwp),_cont,_pwp,_isResign,713,'dodatkowej','uczestnik',4);
         {? _cont & countPwp>0
         || _txt:='Uzupełniono informacje o procentach wpłat z dnia %1, dla: %2 %3 %4.'@
               [PPK_PWP.OD$6,PPK_PWP.OSOBA().NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
            __record+=countPwp
         ?}
      ?}
   ?}
?};
VAR_DEL.delete('countPwp');
~~


\ppk_wplata_reset
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Przygotowanie PPK_PWP na dodanie kolejnego wiersza.
::   WE: _a[DICT] - tablica nazwana z danymi dla bufora PPK_PWP do przygotowania.
::   WY: 1/0 - udało się przygotować bufor kolejnego wiersza PPK_PWP / nie udało się
::----------------------------------------------------------------------------------------------------------------------
_pwp:={? var_pres('_a')>100 || _a || return(0) ?};
PPK_PWP.blank(1); exec('blank_ppk','edi_ka','PPK_PWP');
PPK_PWP.REF:=_pwp.OSOBA_REF;
PPK_PWP.OD:=_pwp.OD;
PPK_PWP.ZMIANA:=_pwp.ZMIANA;
PPK_PWP.BLOKADA:=_pwp.BLOKADA;
{? _pwp.OWD<>''
|| PPK_PWP.memo_set(_pwp.OWD,'OWD');
   PPK_PWP.memo_put(,'OWD')
?};
OSOBA.cntx_psh();
OSOBA.prefix();
_ok:={? OSOBA.seek(PPK_PWP.REF,,1) || PPK_PWP.OSOBA:=OSOBA.ref(); 1 || 0 ?};
OSOBA.cntx_pop();
{? _ok || 1 || 0 ?}


\oddelegowanie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Dodanie pozycji tabeli H_ODDE.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','H_ODDE')
|| _ok:=1;
   P.cntx_psh();
   P.index('PRACOIP');
   P.prefix(exec('ref_firma','ustawienia'),'P',P.IP);
   _refP:={? P.first() || P.ref() || null() ?};
   P.cntx_pop();
   {? ~_refP
   || _txt:='Nie dodano informacji o oddelegowaniu %1, brak pracownika %2.'@[H_ODDE.O_OD$1,$P.IP];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   H_ZM.cntx_psh();
   H_ZM.index('ZMIANY');
   H_ZM.prefix();
   _kz:={? H_ZM.find_key('Z') || H_ZM.KZ || '' ?};
   H_ZM.cntx_pop();
   _h_oddel:=0;
   H.cntx_psh();
   H.index('_HISTDAT');
   H.prefix(_refP,H.OD,_kz,);
   H_ODDE.H:={? H.first() || H.ref() || null() ?};
   H.cntx_pop();
   {? _ok
   || {? ~H_ODDE.H
      || P.cntx_psh();
         _found:={? P.seek($_refP,,1) || 1 || 0 ?};
         _txt:={? _found
               || 'Nie dodano informacji o oddelegowaniu: %1, pracownika: %2 %3 %4'@
                     [H_ODDE.O_OD$1,$P.IP,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE]
               || 'Nie dodano informacji o oddelegowaniu: %1, brak pracownika: %2'@
                     [H_ODDE.O_OD$1,$P.IP]
               ?};
         _txt+=', brak przebiegu zatrudnienia.'@;
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
         P.cntx_pop();
         _ok*=0
      || {? H_ODDE.H().ODDEL='T' || _h_oddel:=1 ?}
      ?};
      {? _ok & ~_h_oddel
      || _txt:='Nie dodano informacji o oddelegowaniu: %1, pracownika: %2 %3 %4'@
               [H_ODDE.O_OD$1,$H_ODDE.H().P().IP,H.P().OSOBA().NAZWISKO,P.OSOBA().PIERWSZE];
            _txt+=', w przebiegu zatrudnienia brak informacji wskazującej na oddelegowanie.'@;
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
      ?};
      {? _ok & H_ODDE.POD='N' & ~(',W,O,B,'*',%1,'[H_ODDE.POD_M])
      || _txt:='Nie dodano informacji o oddelegowaniu: %1, pracownika: %2 %3 %4'@
               [H_ODDE.O_OD$1,$H_ODDE.H().P().IP,H.P().OSOBA().NAZWISKO,P.OSOBA().PIERWSZE];
            _txt+=', brak informacji o metodzie opodatkowania przychodu zagranicznego.'@;
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
            _ok*=0
      ?};
      {? _ok & _h_oddel & H_ODDE.H().DO=date(0,0,0)
      || _txt:='Nie dodano informacji o oddelegowaniu: %1, pracownika: %2 %3 %4'
               ', przebieg zatrudnienia z oddelegowaniem nie może być na czas nieokreślony.'@
               [H_ODDE.O_OD$1,$H_ODDE.H().P().IP,H.P().OSOBA().NAZWISKO,P.OSOBA().PIERWSZE];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
         _ok*=0
      ?};
      _hOddDo:=H_ODDE.O_DO;
      H_ODDE.cntx_psh();
      H_ODDE.index('HOD');
      H_ODDE.prefix(H_ODDE.H,H_ODDE.O_OD,H_ODDE.KRAJ);
      _isInDb:={? H_ODDE.first() || 1 || 0 ?};
      {? _isInDb
      || _txt:='Istnieje już zapis o oddelegowaniu: %1, pracownika: %2 %3 %4.'@
            [H_ODDE.O_OD$1,$H_ODDE.H().P().IP,H.P().OSOBA().NAZWISKO,P.OSOBA().PIERWSZE];
         _txt+=' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
         _ok*=0
      ?};
      {? _ok & H_ODDE.ZAKW='S' & ~H_ODDE.ST_NOC
      || _txt:='Nie dodano informacji o oddelegowaniu: %1,pracownika: %2 %3 %4'@
            [H_ODDE.O_OD$1,$H_ODDE.H().P().IP,H.P().OSOBA().NAZWISKO,P.OSOBA().PIERWSZE];
         _txt+=', brak wprowadzonej stawki za nocleg.'@;
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _ok*=0
      |? _ok & H_ODDE.ZAKW<>'S' & H_ODDE.ST_NOC
      || _txt:='Nie dodano informacji o oddelegowaniu: %1,pracownika: %2 %3 %4'@
            [H_ODDE.O_OD$1,$H_ODDE.H().P().IP,H.P().OSOBA().NAZWISKO,P.OSOBA().PIERWSZE];
         _txt+=', błędnie wskazany sposób rozliczania kosztów noclegu przy wprowadzonej stawce za nocleg.'@;
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _ok*=0
      ?};
      _addedMP:=0;
      _addedMZ:=0;
      H_ODDA.cntx_psh();
      {? var_pres('m_prac')>100 || _mp_res:=exec('oddelegowanie_adres','edi_ka',_ok,_addedMP,m_prac) ?};
      {? var_pres('_mp_res')>100
      || _ok:=_mp_res.OK;
         _addedMP:=_mp_res.ADDED;
         H_ODDE.M_PRAC:=_mp_res.REF_ODDA
      ?};
      {? var_pres('m_zam')>100 || _mz_res:=exec('oddelegowanie_adres','edi_ka',_ok,_addedMZ,m_zam) ?};
      {? var_pres('_mz_res')>100
      || _ok:=_mz_res.OK;
         _addedMZ:=_mz_res.ADDED;
         H_ODDE.M_ZAM:=_mz_res.REF_ODDA
      ?};
      H_ODDE.ZAST:={? ~H_ODDE.P_ZAST || 'N' || 'T' ?};
      {? _ok
      || {? ~H_ODDE.add(1)
         || _txt:='Nie dodano informacji o oddelegowaniu: %1,pracownika: %2 %3 %4'@
               [H_ODDE.O_OD$1,$H_ODDE.H().P().IP,H.P().OSOBA().NAZWISKO,P.OSOBA().PIERWSZE];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,170,'INNE BŁĘDY'@);
            {? H_ODDE.M_PRAC<>null()
            || {? _addedMP & H_ODDA.seek(H_ODDE.M_PRAC().ref(),,1) || H_ODDA.del(1) ?}
            ?};
            {? H_ODDE.M_ZAM<>null()
            || {? _addedMZ & H_ODDA.seek(H_ODDE.M_ZAM().ref(),,1) || H_ODDA.del(1) ?}
            ?}
         || exec('pozycje_odd','oddelegowanie');
            __record+=1;
            _txt:='Dodano oddelegowanie: %1, pracownika %2 %3 %4.'@
               [H_ODDE.O_OD$1,$H_ODDE.H().P().IP,H.P().OSOBA().NAZWISKO,P.OSOBA().PIERWSZE];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);

            _txt:='%1 %2%3 %4 %5'
                  ['Należy'@,{? H_ODDE.TKRS=null() || 'uzupełnić tabelę kursów oraz '@ || '' ?},
                   'zweryfikować i w razie konieczności zaktualizować wartości diet'@,
                   '(Zdarzenia kadrowe->Oddelegowania za granicę->Aktualizuj)'@,
                   'jeśli będą naliczane listy tego pracownika do oddelegowania.'@];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
         ?}
      || _txt:='Nie dodano informacji o oddelegowaniu: %1, pracownika: %2 %3 %4'@
            [H_ODDE.O_OD$1,$H_ODDE.H().P().IP,H.P().OSOBA().NAZWISKO,P.OSOBA().PIERWSZE];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,170,'INNE BŁĘDY'@)
      ?};
      H_ODDA.cntx_pop();
      H_ODDE.cntx_pop()
   ?}
?}


\oddelegowanie_adres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Dodanie pozycji tabeli H_ODDA.
::   WE: _a [INTEGER] - obecny status importu 0/1
::       _b [INTEGER] - obecny status dodania rekordu H_ODDA
::       _c [DICT] - tablica nazwana z danymi dla bufora dodawanego rekordu H_ODDA
::   WY: tablica nazwana zawierająca zaktualizowane wartości przekazanych do procedury parametrów, oraz ref H_ODDA:
::       OK - zaktualizowany status importu
::       ADDED - zaktualizowana informacja o dodaniu rekordu H_ODDA
::       REF_ODDA - referencja do rekordu H_ODDA (znalezionego lub dodanego)
::----------------------------------------------------------------------------------------------------------------------
_ok:=_a;
_added:=_b;
_info:=_c;

::tablica parametrów do zwrócenia
_result:=obj_new('ADDED','REF_ODDA','OK');
_result.ADDED:=_added;
_result.REF_ODDA:=null();
_result.OK:=_ok;

{? _ok & type_of(_info)>100 & _info.SIZE>0
||
   _kraj:=({? +_info.KRAJ
           || _ref:=exec('FindInSet','#table','KRAJE','KRAJE',_info.KRAJ,,,1);
              {? ~_ref
              || exec('add_slo','edi_ka','KRAJE',0,'SYM',_info.KRAJ,'KODISO',_info.KRAJ)
              || _ref
              ?}
           || null()
           ?}
          );
   H_ODDA.index('NAZWA');
   H_ODDA.prefix(_info.RODZAJ,_kraj,_info.NAZWA,_info.MIASTO,_info.ULICA,_info.DOM);
   _refOdda:={? H_ODDA.first() || H_ODDA.ref() || null() ?};
   {? ~_refOdda
   || H_ODDA.prefix();
      H_ODDA.blank();
      H_ODDA.NAZWA:=_info.NAZWA;
      H_ODDA.KRAJ:=_kraj;
      H_ODDA.MIASTO:=_info.MIASTO;
      H_ODDA.ULICA:=_info.ULICA;
      H_ODDA.DOM:=_info.DOM;
      H_ODDA.LOKAL:=_info.LOKAL;
      H_ODDA.KOD:=_info.KOD;
      H_ODDA.POCZTA:=_info.POCZTA;
      H_ODDA.TEL:=_info.TEL;
      H_ODDA.EMAIL:=_info.EMAIL;
      H_ODDA.RODZAJ:=_info.RODZAJ;
      {? ~H_ODDA.add(1)
      || _txt:='Nie dodano informacji o oddelegowaniu: %1,pracownika: %2 %3 %4'@
            [H_ODDE.O_OD$1,$H_ODDE.H().P().IP,H.P().OSOBA().NAZWISKO,P.OSOBA().PIERWSZE];
         _txt+=', nie dodano informacji o miejscu pracy dla oddelegowania.'@;
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _result.OK*=0
      || _result.ADDED:=1;
         _result.REF_ODDA:=H_ODDA.ref()
      ?}
   || _result.REF_ODDA:=_refOdda
   ?}
?};
_result


\prep_impVars
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przygotowywuje tablicę zmiennych podawaną do formuł importu z Xpertis (import z Xpertis)
::   WE: _a[STRING] - symbol importu
::   WY: tablica nazwana zawierająca informacje na temat importu pozwalające na podejmowanie decyzji w formułach
::   importu lub 0
::----------------------------------------------------------------------------------------------------------------------
:: Utworzenie tablicy nazwanej, która będzie przechowywała zmienne importu
_impVars:=obj_new(
::    Symbol importu z definicji importów
      'symbol',
::    Akronim tabeli importowanej
      'akronim'
      );

_naz:=spli_str(_a,'_X2M');

{? obj_len(_naz)>1
|| _impVars.symbol:=_a;
   _impVars.akronim:=_naz[1];
   _impVars
|| return(0)
?}


\prep_kodyZatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przygotowywuje tablicę zmiennych znakowych kodów zatrudnienia podawaną do formuł importu z Xpertis
::   WE:
::   WY: tablica nazwana zawierająca kody zatrudnienia obsługiwane podczas importu z Xpertis lub 0
::----------------------------------------------------------------------------------------------------------------------
_kodyZatr:=obj_new('P','Z','K','T','R');
_kody:=obj_ntab_names(_kodyZatr);
{! _ii:=1..obj_len(_kodyZatr) |! _kodyZatr[_ii]:=_kody[_ii] !};
_kodyZatr


\ini_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Formuła inicjująca odczyt (import z Xpertis)
::   WE: _a[STRING] - symbol importu
::   WY: 1/0 Spełnione/nie spełnione warunki inicjujące import
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__record','__linia','impVars','kodyZatr');

::Utworzenie zmiennej zawierającej dane o imporcie na podstawie symbolu importu
{? var_pres('_a')=type_of('') & +_a
|| impVars:=exec('prep_impVars','edi_ka',_a);
   {? var_pres('impVars')<100 || return(0) ?}
|| return(0)
?};

:: Utworzenie zmiennej zawierającej kody zatrudnienia do podejmowania odpowiednich decyzji w formułach importu
kodyZatr:=exec('prep_kodyZatr','edi_ka');
{? type_of(kodyZatr)<100 || return(0) ?};

_brakZm:=
::    symbole importów, dla których brak zmian w odniesieniu do obsługi w \ini/edi_ka
      'PKO_X2M'+
      'P_INFO_X2M'+
      'RD_X2M'+
      'H_UM_X2M'+
      'H_UM_X2M_ZC'+
      'H_UM_X2M_KTR'+
      'O_X2M'+
      'LS_X2M'+
      'O_X2M_ZC'+
      'LS_X2M_ZC'+
      'G_X2M'+
      'ZC_X2M'+
      'N_X2M'+
      'LSS_X2M'
      ;

__linia:=1;
__record:=0;
_size:=
   "  _tab:=($(_a))();
      _tab.clear();
      {? _tab.size()=0
      || exec('add_kom','#message','%1 %2 %3.'['Brak danych.'@,'Tabela'@,_a],2,'BRAK DANYCH'@); 0
      || 1
      ?}
   ";

:: sprawdzenie, czy dla bieżącego importu brak zmian w odniesieniu do obsługi w \ini/edi_ka
{? _brakZm*impVars.symbol
|| exec('ini','edi_ka',impVars.akronim)
|| {? impVars.symbol='P_X2M_ZC'
   || exec('__F_ZATR','object');
      _txt:='';
      _f_zatr:=__F_ZATR.find(kodyZatr.Z);
      {? _f_zatr=null()
      || exec('add_kom','#message','%1 %2'['Brak danych.'@,'Forma zatrudnienia Z.'@],2,'BRAK DANYCH'@)
      ?};
      _size('OSOBA') & _f_zatr
   |? impVars.symbol='P_X2M_KTR'
   || exec('__F_ZATR','object');
      _txt:='';
      _zatr_find_res:=obj_new('K','T','R');
      _zatr_find_res.K:=__F_ZATR.find(kodyZatr.K);
      _zatr_find_res.T:=__F_ZATR.find(kodyZatr.T);
      _zatr_find_res.R:=__F_ZATR.find(kodyZatr.R);
      _brak_zatr:='';
      {! _ii:=1..obj_len(_zatr_find_res)
      |! {? _zatr_find_res[_ii]=null()
         || {? +_brak_zatr || _brak_zatr+=', ' ?};
            _brak_zatr+=_zatr_find_res[_ii]
         ?}
      !};
      {? +_brak_zatr
      || exec('add_kom','#message','%1 %2'['Brak danych.'@,'Forma zatrudnienia'+_brak_zatr+'.'@],2,'BRAK DANYCH'@)
      ?};
      _size('OSOBA') & _zatr_find_res.K & _zatr_find_res.T & _zatr_find_res.R
   |? impVars.symbol='ZC_INFO_X2M'
   || _skl:=exec('istn_jedn','edi_ka');
      _size('ZC') & _size('OSOBA') & _size('P') & _skl
   |? impVars.symbol='BDO_X2M'
   || _size('P')
   |? impVars.symbol='RH_X2M'
   || _skl:=exec('istn_jedn','edi_ka');
      _size('ZC') & _skl
   |? impVars.symbol='K_X2M'
   || exec('__F_ZATR','object');
      R.index('RUBKLKOD');
      R.prefix('K');
      _txt:='Brak danych. Tabela R.'@;
      {? R.size()=0 || exec('add_kom','#message',_txt,2,'BRAK DANYCH') ?};
      _size('P') & R.size()
   |? impVars.symbol='H_X2M' | impVars.symbol='H_X2M_ZC' | impVars.symbol='H_X2M_KTR'
   || exec('__RUB','object');
      exec('__HARM','object');
      exec('MASK','object');
      exec('ini','edi_ka',impVars.akronim,1)
   |? impVars.symbol='DS_X2M'
   || BPMN.KK_DOM:='PPL';
      {? _txt:=
            {? var_pres('__TABL_R')>0
            || __TABL_R.index(__TABL_R.ndx_tmp(,1,'KOD',,,'KOD',,));
               'Tablica translacji kodów płacowych jest już wczytana.'@
            || 'Tablica translacji kodów płacowych nie jest jeszcze wczytana.'@
            ?};
         FUN.ask(_txt+'\n%1'['Czy rozpocząć import?'@])
      || _size('F_ZATR') & _size('P') & _size('R')
      || 0
      ?}
   |? impVars.symbol='KZ_X2M'
   || exec('__F_ZATR','object');
      _size('P')
   |? impVars.symbol='KP_X2M'
   || exec('__F_ZATR','object');
      _size('P')
   |? _a='TZ_X2M'
   || {? var_pres('__TABL_R')>0
      || _size('N') & _size('NW')
      || exec('__RUB','object');
         _size('N') & _size('NW')
      ?}
   || return(0)
   ?}
?}


\blank_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Uzupełnianie pol importu (import z Xpertis)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('impVars')<100 || return() ?};

_brakZm:=
::    symbole importów, dla których brak zmian w odniesieniu do obsługi w \blank/edi_ka
      'PKO_X2M'+
      'P_INFO_X2M'+
      'RD_X2M'+
      'H_X2M'+
      'H_X2M_ZC'+
      'H_X2M_KTR'+
      'H_UM_X2M'+
      'H_UM_X2M_ZC'+
      'H_UM_X2M_KTR'+
      'BDO_X2M'+
      'O_X2M'+
      'LS_X2M'+
      'O_X2M_ZC'+
      'LS_X2M_ZC'+
      'RH_X2M'+
      'G_X2M'+
      'K_X2M'+
      'ZC_X2M'+
      'N_X2M'+
      'LSS_X2M'+
      'TZ_X2M'
      ;

:: sprawdzenie, czy dla bieżącego importu brak zmian w odniesieniu do obsługi w \blank/edi_ka
{? _brakZm*impVars.symbol
|| exec('blank','edi_ka',impVars.akronim)
|| {? impVars.symbol='P_X2M_ZC'
   || P.GRAFIK:=P.ODDEL:='N';
      P.KIN:=P.ZA:='T';
      P.WY:=1;
      P.FIRMA:=exec('ref_firma','ustawienia');
      P.ROU:=null();
      P.F_ZATR:=__F_ZATR.find('Z')
   |? impVars.symbol='P_X2M_KTR'
   || P.GRAFIK:=P.ODDEL:='N';
      P.KIN:=P.ZA:='T';
      P.WY:=1;
      P.FIRMA:=exec('ref_firma','ustawienia');
      P.ROU:=null()
   |? impVars.symbol='ZC_INFO_X2M'
   || ZC_INFO.DW:=date(0,0,0);
      ZC_INFO.ZUS:=ZC_INFO.FC:=ZC_INFO.FW:=ZC_INFO.FP:=ZC_INFO.FG:=ZC_INFO.KC:=ZC_INFO.WN_ZUS:=ZC_INFO.WN_FC:='N'
   |? impVars.symbol='DS_X2M'
   || DS.NR:='K'
   |? impVars.symbol='KZ_X2M'
   || ''
   |? impVars.symbol='KP_X2M'
   || ''
   || FUN.info('Błąd w blank/edi_ka'@)
   ?}
?}


\end_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Uzupełnienie danych (import z Xpertis)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('impVars')<100 || return() ?};

_txt:={? '1'*($__record) || 'Dołączono %1 rekord do tabeli %2'@[$__record,impVars.akronim]
      |? '234'*($__record) || 'Dołączono %1 rekordy do tabeli %2'@[$__record,impVars.akronim]
      || 'Dołączono %1 rekordów do tabeli %2'@[$__record,impVars.akronim]
      ?};
exec('add_kom','#message',_txt,1,'NOWE DANE');

_brakZm:=
::    symbole importów, dla których brak zmian w odniesieniu do obsługi w \end/edi_ka
      'P_X2M_ZC'+
      'PKO_X2M'+
      'P_INFO_X2M'+
      'RD_X2M'+
      'H_UM_X2M'+
      'H_UM_X2M_ZC'+
      'H_UM_X2M_KTR'+
      'P_X2M_KTR'+
      'BDO_X2M'+
      'O_X2M'+
      'LS_X2M'+
      'O_X2M_ZC'+
      'LS_X2M_ZC'+
      'G_X2M'+
      'K_X2M'+
      'ZC_X2M'+
      'N_X2M'+
      'LSS_X2M'+
      'TZ_X2M'
      ;

:: sprawdzenie, czy dla bieżącego importu brak zmian w odniesieniu do obsługi w \end/edi_ka
{? _brakZm*impVars.symbol
|| exec('end','edi_ka',impVars.akronim,1)
|| {? impVars.symbol='ZC_INFO_X2M'
   || ''
   |? impVars.symbol='RH_X2M'
   || ''
   |? impVars.symbol='H_X2M' | impVars.symbol='H_X2M_ZC' | impVars.symbol='H_X2M_KTR'
   || exec('end','edi_ka',impVars.akronim,1);
      exec('h2n','transfer')
   |? impVars.symbol='DS_X2M'
   || {? var_pres('__TABL_R')>0 || __TABL_R.ndx_drop() ?};
      ''
   |? impVars.symbol='KZ_X2M'
   || ''
   |? impVars.symbol='KP_X2M'
   || ''
   || FUN.info('Błąd w end_x2m/edi_ka'@)
   ?}
?};
VAR_DEL.delete('impVars','kodyZatr');
~~


\pracownik_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Import pracowników/zleceniobiorców/współpracowników, dodanie pozycji tabeli P.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('kodyZatr')<0 & type_of(kodyZatr)<100 || return() ?};
__linia+=1;
{? exec('wymag','edi_ka','P')
|| _ok:=1;
   P.cntx_psh();
   _f_zatr:=__F_ZATR.find(F_ZATR.KOD);
   P.F_ZATR:={? #_f_zatr || _f_zatr || P.cntx_pop(); return() ?};
   P.index('PRACOIP');
   P.prefix(P.FIRMA,P.F_ZATR().KOD,P.IP);
   {? P.first()
   || _txt:='Istnieje już ';
      _txt+={? F_ZATR.KOD=kodyZatr.P
            || 'pracownik: '
            |? F_ZATR.KOD=kodyZatr.Z
            || 'zleceniobiorca: '
            |? F_ZATR.KOD=kodyZatr.K | F_ZATR.KOD=kodyZatr.T | F_ZATR.KOD=kodyZatr.R
            || 'współpracownik: '
            || ' '
            ?};
      _txt+=$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL;
      _txt+='. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? P.OSOBA
   || {? _ok
      || {? ~P.add(1)
         || _txt:='Nie dodano ';
            _txt+={? F_ZATR.KOD=kodyZatr.P
                  || 'pracownika: '
                  |? F_ZATR.KOD=kodyZatr.Z
                  || 'zleceniobiorcy: '
                  |? F_ZATR.KOD=kodyZatr.K | F_ZATR.KOD=kodyZatr.T | F_ZATR.KOD=kodyZatr.R
                  || 'współpracownika: '
                  || ' '
                  ?};
            _txt+=$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
         || exec('slo_osob','edi_ka',P.F_ZATR,P.OSOBA,P.IP);
            _txt:='Dodano ';
            _txt+={? F_ZATR.KOD=kodyZatr.P
                  || 'pracownika: '
                  |? F_ZATR.KOD=kodyZatr.Z
                  || 'zleceniobiorcę: '
                  |? F_ZATR.KOD=kodyZatr.K | F_ZATR.KOD=kodyZatr.T | F_ZATR.KOD=kodyZatr.R
                  || 'współpracownika: '
                  || ' '
                  ?};
            _txt+=$P.IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
            __record+=1
         ?}
      ?}
   || _txt:='Nie dodano ';
      _txt+={? F_ZATR.KOD=kodyZatr.P
            || 'pracownika: '
            |? F_ZATR.KOD=kodyZatr.Z
            || 'zleceniobiorcy: '
            |? F_ZATR.KOD=kodyZatr.K | F_ZATR.KOD=kodyZatr.T | F_ZATR.KOD=kodyZatr.R
            || 'współpracownika: '
            || ' '
            ?};
      _txt+=$P.IP+', brak osoby. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   P.cntx_pop()
?};
~~


\umowa_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Dodanie pozycji tabeli H_UM (import z Xpertis)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('kodyZatr')<0 & type_of(kodyZatr)<100 || return() ?};
__linia+=1;
{? exec('wymag','edi_ka','H_UM')
|| _ok:=1;
   {? F_ZATR.KOD=kodyZatr.K | F_ZATR.KOD=kodyZatr.T | F_ZATR.KOD=kodyZatr.R
   || P.cntx_psh();
      P.index('PRACOIP');
      P.prefix(exec('ref_firma','ustawienia'),F_ZATR.KOD,P.IP);
      {? P.first() || H_UM.P:=P.ref() || H_UM.P:=null() ?};
      P.cntx_pop()
   ?};
   _fZatr:=H_UM.P().F_ZATR().KOD;
   H_UM.cntx_psh();
   H_UM.index('OD');
   H_UM.prefix(H_UM.P,H_UM.OD);
   {? H_UM.first()
   || _txt:='Istnieje już umowa: '+H_UM.OD$1;
      _txt+={? _fZatr=kodyZatr.P
            || ',pracownika: '
            |? _fZatr=kodyZatr.Z
            || ', zleceniobiorcy: '
            |? _fZatr=kodyZatr.K | _fZatr=kodyZatr.T | _fZatr=kodyZatr.R
            || ', współpracownika: '
            || ', '
            ?};
      _txt+=$H_UM.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      _txt+='. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? ~H_UM.P
   || _txt:='Nie dodano umowy: '+H_UM.OD$1;
      _txt+={? _fZatr=kodyZatr.Z
            || ', brak zleceniobiorcy. Rekordu nie dodano.'
            |? _fZatr=kodyZatr.K | _fZatr=kodyZatr.T | _fZatr=kodyZatr.R
            || ', brak współpracownika. Rekordu nie dodano.'
            || ', brak pracownika. Rekordu nie dodano.'
            ?};
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? H_UM.OD=#0
   || _txt:='Nie dodano umowy: '+H_UM.OD$1+', brak daty OD. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? _fZatr=kodyZatr.P & ~H_UM.RU
   || _txt:='Nie dodano umowy: '+H_UM.OD$1+', brak rodzaju umowy. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,170,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? _ok
   || {? H_UM.add(1)
      || __record+=1;
         _txt:='Dodano umowę: '+H_UM.OD$1;
         _txt+={? _fZatr=kodyZatr.P
               || ', pracownika: '
               |? _fZatr=kodyZatr.Z
               || ', zleceniobiorcy: '
               |? _fZatr=kodyZatr.K | _fZatr=kodyZatr.T | _fZatr=kodyZatr.R
               || ', współpracownika: '
               || ', '
               ?};
         _txt+=$H_UM.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano umowy: '+H_UM.OD$1;
         _txt+={? _fZatr=kodyZatr.P
               || ', pracownika: '
               |? _fZatr=kodyZatr.Z
               || ', zleceniobiorcy: '
               |? _fZatr=kodyZatr.K | _fZatr=kodyZatr.T | _fZatr=kodyZatr.R
               || ', współpracownika: '
               || ', '
               ?};
         _txt+=$H_UM.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,170,'INNE BŁĘDY'@)
      ?}
   ?};
   H_UM.cntx_pop()
?};
~~


\badania_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Dodanie pozycji tabeli BDO (import Xpertis 12.51 -> Merit 20.14)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','BDO')
|| P.cntx_psh();
   P.index('PRACOIP');
   P.prefix(exec('ref_firma','ustawienia'),F_ZATR.KOD,P.IP);
   BDO.P:={? P.first() || P.ref() || null() ?};
   P.cntx_pop();
   _ok:=1;
   BDO.cntx_psh();
   BDO.index('PDTO');
   BDO.prefix(BDO.P,BDO.DTO);
   {? BDO.first()
   || _txt:='Istnieje już takie badanie lekarskie: '+BDO.DTO$1;
      _txt+=', dla pracownika: '+$BDO.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      _txt+='. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? BDO.P
   || {? _ok
      || {? ~BDO.add(1)
         || _txt:='Nie dodano badania lekarskiego: '+BDO.DTO$1;
            _txt+=', dla pracownika: '+$BDO.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
         || _txt:='Dodano badanie lekarskie: '+BDO.DTO$1;
            _txt+=', dla pracownika: '+$BDO.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
            __record+=1
         ?}
      ?}
   || _txt:='Nie dodano badania lekarskiego: '+BDO.DTO$1+', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   BDO.cntx_pop()
?};

~~


\zc_info_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Dodanie pozycji tabeli - Informacje ubezpieczeniowe umowy/zlecenia
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','ZC_INFO')
|| _ok:=1;
   ZC.cntx_psh();
   ZC.index('ZLECKOD');
   ZC.prefix(ZC.OSOBA,ZC.WYDZIAL,ZC.R,ZC.M,ZC.DU,ZC.NU);
   {? ~ZC.first()
   || _txt:='Nie dodano informacji ubezpieczeniowej: %1 %2 %3, brak umowy. Rekordu nie dodano.'
            [ZC_INFO.DU$1,ZC.OSOBA().NAZWISKO,OSOBA.PIERWSZE];
      exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,81,'BRAK WARTOŚCI')
   || ZC_INFO.ZC:=ZC.ref();
      ZC_INFO.FIRMA:=exec('ref_firma','ustawienia');

::    Sprawdzam czy identyczny zapis już istnieje:
      _buff:=obj_new('OSOBA','ZC','TTUB','PREM','STNP','DU','DW','ZUS','FC','FW','FP','FG','KC','WN_ZUS','WN_FC');
      _buff.OSOBA:=ZC_INFO.OSOBA;
      _buff.ZC:=ZC_INFO.ZC;
      _buff.TTUB:=ZC_INFO.TTUB;
      _buff.PREM:=ZC_INFO.PREM;
      _buff.STNP:=ZC_INFO.STNP;
      _buff.DU:=ZC_INFO.DU;
      _buff.DW:=ZC_INFO.DW;
      _buff.ZUS:=ZC_INFO.ZUS;
      _buff.FC:=ZC_INFO.FC;
      _buff.FW:=ZC_INFO.FW;
      _buff.FP:=ZC_INFO.FP;
      _buff.FG:=ZC_INFO.FG;
      _buff.KC:=ZC_INFO.KC;
      _buff.WN_ZUS:=ZC_INFO.WN_ZUS;
      _buff.WN_FC:=ZC_INFO.WN_FC;

      ZC_INFO.cntx_psh();
      ZC_INFO.index('ZLECDAT');
      ZC_INFO.prefix(ZC_INFO.FIRMA,ZC_INFO.OSOBA,ZC_INFO.DU);
      {? ZC_INFO.first()
      || {!
         |? {? _buff.ZC=ZC_INFO.ZC
               &
               _buff.TTUB=ZC_INFO.TTUB
               &
               _buff.PREM=ZC_INFO.PREM
               &
               _buff.STNP=ZC_INFO.STNP
               &
               _buff.DW=ZC_INFO.DW
               &
               _buff.ZUS=ZC_INFO.ZUS
               &
               _buff.FC=ZC_INFO.FC
               &
               _buff.FW=ZC_INFO.FW
               &
               _buff.FP=ZC_INFO.FP
               &
               _buff.FG=ZC_INFO.FG
               &
               _buff.KC=ZC_INFO.KC
               &
               _buff.WN_ZUS=ZC_INFO.WN_ZUS
               &
               _buff.WN_FC=ZC_INFO.WN_FC
            || _ok*=0;
               _txt:='Nie dodano informacji ubezpieczeniowej umowy/zlecenia';
               _txt+=', identyczny rekord już istnieje w bazie danych. Rekordu nie dodano.';
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@)
            ?};

            _ok & ZC_INFO.next()
         !}
      ?};
      ZC_INFO.cntx_pop();
      obj_del(_buff);

      {? _ok & ZC_INFO.add(1)
      || _txt:='Dodano informację ubezpieczeniową: %1 %2 %3'[ZC_INFO.DU$1,ZC.OSOBA().NAZWISKO,OSOBA.PIERWSZE];
         exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,38,'ZAPISANE REKORDY');
         __record+=1
      || _txt:='Nie dodano informacji ubezpieczeniowej: %1 %2 %3. Rekordu nie dodano.'
               [ZC_INFO.DU$1,ZC.OSOBA().NAZWISKO,OSOBA.PIERWSZE];
         exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,5,'INNE BŁĘDY')
      ?}
   ?};
   ZC.cntx_pop()
?};

~~


\aneks_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Dodanie pozycji tabeli H (import z Xpertis)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('kodyZatr')<0 & type_of(kodyZatr)<100 || return() ?};
__linia+=1;
{? exec('wymag','edi_ka','H')
|| _ok:=1;
   _fZatr:='';
   {? F_ZATR.KOD=kodyZatr.K | F_ZATR.KOD=kodyZatr.T | F_ZATR.KOD=kodyZatr.R
   || P.cntx_psh();
      P.index('PRACOIP');
      P.prefix(exec('ref_firma','ustawienia'),F_ZATR.KOD,P.IP);
      {? P.first() || H.P:=P.ref() || H.P:=null() ?};
      P.cntx_pop()
   ?};
   STN.cntx_psh();
   STN.index('STANONAZ');
   H.cntx_psh();
   H.index('_HISTKOD');
   H.prefix(H.P,H.KZ().KZ,H.OD);
   H_UM.cntx_psh();
   H_UM.index('OD');
   H_UM.prefix(H.P);
   H_ZM.cntx_psh();
   H_ZM.prefix();
   {? ~H.P
   || _txt:='Nie dodano przebiegu zatrudnienia: '+H.OD$1;
      _txt+=', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
      _ok*=0
   || _fZatr:=H.P().F_ZATR().KOD
   ?};
   {? _ok & H.first()
   || _txt:='Istnieje już przebieg zatrudnienia: '+H.OD$1;
      _txt+={? _fZatr=kodyZatr.P
            || ', pracownika: '
            |? _fZatr=kodyZatr.Z
            || ', zleceniobiorcy: '
            |? _fZatr=kodyZatr.K | _fZatr=kodyZatr.T | _fZatr=kodyZatr.R
            || ', współpracownika: '
            || ', '
            ?};
      _txt+=$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      _txt+='. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? _ok & ~H_UM.first()
   || _txt:='Nie dodano zatrudnienia (brak umowy): '+H.OD$1;
      _txt+={? _fZatr=kodyZatr.P
            || ', pracownika: '
            |? _fZatr=kodyZatr.Z
            || ', zleceniobiorcy: '
            |? _fZatr=kodyZatr.K | _fZatr=kodyZatr.T | _fZatr=kodyZatr.R
            || ', współpracownika: '
            ?};
         _txt+=$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
      _ok*=0
   ?};
   {? H.OD=#0
   || _txt:='Nie dodano przebiegu zatrudnienia: '+H.OD$1+', brak daty OD. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? ~H.WYDZIAL
   || _txt:='Nie dodano przebiegu zatrudnienia: '+H.OD$1+', brak wydziału (jedn.org.). Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? H.P().F_ZATR().KOD=kodyZatr.P & ~H.RU
   || _txt:='Nie dodano przebiegu zatrudnienia: '+H.OD$1+', brak rodzaju umowy. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? ~H.CP
   || _txt:='Nie dodano przebiegu zatrudnienia: '+H.OD$1+', brak charakteru pracy. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? ~H.KZ
   || _txt:='Nie dodano przebiegu zatrudnienia: '+H.OD$1+', brak kodu zmiany. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? H.PODPIS=#0
   || _txt:='Nie dodano przebiegu zatrudnienia: '+H.OD$1+', zerowa data zawarcia. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   |? H.PODPIS>H.OD
   || _txt:='Nie dodano przebiegu zatrudnienia: '+H.OD$1+', błędna data zawarcia. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? ~H.ST
   || _txt:='Nie dodano przebiegu zatrudnienia: '+H.OD$1+', brak stanowiska pracy. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
      _ok*=0
   || {? H.SP='T'
      || STN.prefix(H.ST().ST,);
         {? STN.first() & (STN.SP<>'T' | ~STN.RP | ~STN.S_ZUS)
         || _txt:='Brak informacji o warunkach szczególnych lub szczególnym charakterze pracy przy stanowisku ';
            _txt+='w przebiegu zatrudnienia: %1'[H.OD$1];
            _txt+={? _fZatr=kodyZatr.P
                  ||', pracownika: '
                  |? _fZatr=kodyZatr.Z
                  || ', zleceniobiorcy: '
                  |? _fZatr=kodyZatr.K | _fZatr=kodyZatr.T | _fZatr=kodyZatr.R
                  || ', współpracownika: '
                  || ', '
                  ?};
            _txt+=$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
         ?}
      ?}
   ?};
   {? _ok
   || VAR.P:=0;
      H.P();
      _ret:=exec('h','overlap');
      {? (var_pres('_ret')=type_of('') & +_ret) | (var_pres('_ret')=type_of(0) & ~_ret)
      || _txt:='Nie dodano zatrudnienia: '+H.OD$1;
         _txt+={? _fZatr=kodyZatr.P
               || ', pracownika: '
               |? _fZatr=kodyZatr.Z
               || ', zleceniobiorcy: '
               |? _fZatr=kodyZatr.K | _fZatr=kodyZatr.T | _fZatr=kodyZatr.R
               || ', współpracownika: '
               ?};
         _txt+=$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
         _txt+=', istnieje konflikt dat. Rekordu nie dodano.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _ok*=0
      ?}
   ?};
   {? _ok
   || H.P().OSOBA();
      H.OS_ADRES:=exec('szukaj','osoba',,H.OD)
   ?};
   {? _ok
   || {? H_UM.find_le(H.OD)
      || {? H_UM.RU=H.RU
         || {? H.add(1)
            || H.UMOWA:=H_UM.ref();
               __record+=(_ret_val:=H.put(1));
               _txt:='Dodano przebieg zatrudnienia: '+H.OD$1;
               _txt+={? _fZatr=kodyZatr.P
                     || ', pracownika: '
                     |? _fZatr=kodyZatr.Z
                     || ', zleceniobiorcy: '
                     |? _fZatr=kodyZatr.K | _fZatr=kodyZatr.T | _fZatr=kodyZatr.R
                     || ', współpracownika: '
                     ?};
               _txt+=$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
            || _ok*=0;
               _txt:='Nie dodano zatrudnienia: '+H.OD$1;
               _txt+={? _fZatr=kodyZatr.P
                     || ', pracownika: '
                     |? _fZatr=kodyZatr.Z
                     || ', zleceniobiorcy: '
                     |? _fZatr=kodyZatr.K | _fZatr=kodyZatr.T | _fZatr=kodyZatr.R
                     || ', współpracownika: '
                     ?};
               _txt+=$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?}
         || _ok*=0;
            _txt:='Nie dodano zatrudnienia (różne typy umów): '+H.OD$1;
            _txt+={? _fZatr=kodyZatr.P
                  || ', pracownika: '
                  |? _fZatr=kodyZatr.Z
                  || ', zleceniobiorcy: '
                  |? _fZatr=kodyZatr.K | _fZatr=kodyZatr.T | _fZatr=kodyZatr.R
                  || ', współpracownika: '
                  ?};
            _txt+=$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
         ?}
      || _ok*=0;
         _txt:='Nie dodano zatrudnienia (brak umowy): '+H.OD$1;
         _txt+={? _fZatr=kodyZatr.P
               || ', pracownika: '
               |? _fZatr=kodyZatr.Z
               || ', zleceniobiorcy: '
               |? _fZatr=kodyZatr.K | _fZatr=kodyZatr.T | _fZatr=kodyZatr.R
               || ', współpracownika: '
               ?};
         _txt+=$H.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   || _txt:='Nie dodano przebiegu zatrudnienia: '+H.OD$1;
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
   ?};
   H_ZM.cntx_pop();
   H_UM.cntx_pop();
   H.cntx_pop();
   STN.cntx_pop()
?};
~~


\lista_skl_x2m_zc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Dodanie pozycji tabeli LS dla ZC (X2M)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','LS')
|| _ok:=1;
   O.prefix(exec('ref_firma','ustawienia'),O.R,O.M,O.T().T,);
   _refO:={? O.first() || O.ref() || null() ?};
   {? _refO
   || {? ~(O.LT=LS.name()) | ~+VAR.NAZWALIS || FUNKCJE.OTWOLIST() ?}
   || _ok*=0;
      _txt:='Nie dodano pozycji listy, brak nagłówka listy płac. ';
      _txt+='Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@)
   ?};
   {? ~LS.P
   || _ok*=0;
      _txt:='Nie dodano pozycji listy, brak pracownika. ';
      _txt+='Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@)
   ?};
   {? ~LS.RB
   || _ok*=0;
      _txt:='Nie dodano pozycji listy, brak rubryki płac. ';
      _txt+='Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@)
   ?};

:: Znalezienie unikalnego O.ref na potrzeby późniejszego przypięcia RH:
   {? _ok
   || _refO_RH:=null();
      O.cntx_psh();
      O.index('LISTYPLR');
      O.prefix(exec('ref_firma','ustawienia'),'Z',O.R,O.M,O.T);
      {? O.first()
      || _refO_RH:=O.ref()
      ?};
      O.cntx_pop();
      {? ~_refO_RH
      || _ok*=0;
         _txt:='Nie dodano pozycji listy, brak nagłówka listy płac. ';
         _txt+='Rekordu nie dodano.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@)
      ?}
   ?};
:: Znalezienie unikalnego ZC.ref na potrzeby późniejszego przypięcia RH:
   {? _ok
   || _refZC_RH:=null();
      P.cntx_psh();
      P.prefix();
      ZC.cntx_psh();
      ZC.index('ZLECKOD');
      ZC.prefix(LS.P().OSOBA,ZC.WYDZIAL,ZC.R,ZC.M,ZC.DU,ZC.NU);
      {? ZC.first()
      || _refZC_RH:=ZC.ref()
      ?};
      ZC.cntx_pop();
      P.cntx_pop();
      {? ~_refZC_RH
      || _ok*=0;
         _txt:='Nie dodano pozycji listy, brak umowy zlecenia. ';
         _txt+='Rekordu nie dodano.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@)
      ?}
   ?};

   {? _ok & LS.KW<>0
   || LS.index('PRACNRRU');
      LS.prefix(LS.P,LS.RB().RN);
      LS.LP:=R.LP;
      LS.MOD_KTO:=OPERATOR.USER;
      LS.MOD_DATA:=date();
      LS.MOD_CZAS:=time();
      LS.O:=_refO;
::    Znalezienie odpowiedniego RH do podpięcia:
      RH.cntx_psh();
      RH.prefix();
      RH.f_set(,,
                'RH.O=:_a and RH.ZLE=:_b and RH.DWY=to_date(:_c) and RH.DRA=to_date(:_d)',
                _refO_RH,_refZC_RH,RH.DWY,RH.DRA);
      {? ~RH.f_first()
      || _txt:='Nie dodano pozycji listy, brak rachunku. ';
         _txt+='Rekordu nie dodano.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
         RH.cntx_pop();
         return()
      || {? RH.f_size()>1
         || {!
            |? _kwota:=0.0;
               LS.cntx_psh();
               LS.index('ZLEC');
               LS.prefix(RH.ref(),500);
               {? LS.first()
               || {!
                  |? _kwota+=LS.KW;

                     LS.next()
                  !}
               ?};
               LS.cntx_pop();
               _match:=(_kwota=KST_POM.PT_1);

               ~_match | RH.f_next()
            !};
            {? ~_match
            || _txt:='Nie dodano pozycji listy, brak rachunku. ';
               _txt+='Rekordu nie dodano.';
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'BRAK WARTOŚCI'@);
               RH.cntx_pop();
               return()
            ?}
         ?};
         LS.RH:=RH.ref()
      ?};
      RH.cntx_pop();

      __record+=(_ret_val:=LS.add(1));
      {? _ret_val
      || _txt:='Dodano pozycję listy: '+VAR.NAZWALIS+' '+$R.RN+' '+$LS.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano pozycji listy: '+VAR.NAZWALIS+' '+$R.RN+' '+$LS.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?}
?};

~~


\rachunki_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Dodanie pozycji tabeli z rachunkami do umów cywilnoprawnych (import z Xpertis)
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','RH')
|| OSOBA.cntx_psh();
   OSOBA.prefix();
   P.cntx_psh();
   ZC.OSOBA:=ZC.P().OSOBA;
   P.cntx_pop();
   OSOBA.cntx_pop();
   _ok:=1;
   ZC.cntx_psh();
   ZC.index('ZLECKOD');
   ZC.prefix(ZC.OSOBA,ZC.WYDZIAL,ZC.R,ZC.M,ZC.DU,ZC.NU);
   {? ~ZC.first()
   || _ok*=0;
      _txt:='Nie dodano rachunku: %1 %2 %3, brak umowy. Rekordu nie dodano.'
         [$RH.DWY,ZC.OSOBA().NAZWISKO,OSOBA.PIERWSZE];
      exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,81,'BRAK WARTOŚCI')
   || O.cntx_psh();
      O.index('LISTYPLR');
      O.prefix(exec('ref_firma','ustawienia'),'Z',O.R,O.M,O.T);
      {? ~O.first()
      || _ok*=0;
         _txt:='Nie dodano pozycji listy, brak nagłówka listy płac. Rekordu nie dodano.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      || RH.ZLE:=ZC.ref();
         RH.O:=O.ref();
         RH.cntx_psh();
         RH.prefix();
         RH.f_set(,,
                   'RH.O=:_a and RH.ZLE=:_b and RH.DWY=to_date(:_c) and RH.DRA=to_date(:_d)',
                   RH.O,RH.ZLE,RH.DWY,RH.DRA);
         {? RH.f_first()
         || _txt:='Istnieje już taki rachunek: '+$RH.DWY;
            _txt+=', dla: '+RH.ZLE().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
            _txt+='. Rekordu nie dodano.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
            _ok*=0
         ?};
         {? RH.f_active() || RH.f_clear() ?};
         {? ZC.OSOBA
         || {? _ok
            || {? ~RH.add(1)
               || _txt:='Nie dodano rachunku: '+RH.DWY$1;
                  _txt+=', dla: '+RH.ZLE().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
                  exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
                  _ok*=0
               || _txt:='Dodano rachunek: '+RH.DWY$1;
                  _txt+=', dla: '+RH.ZLE().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
                  exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
                  __record+=1
               ?}
            ?}
         || _txt:='Nie dodano rachunku: '+RH.DWY$1+', brak osoby. Rekordu nie dodano.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
         ?};
         RH.cntx_pop()
      ?};
      O.cntx_pop()
   ?};
   ZC.cntx_pop()
?};
~~


\istn_jedn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Formuła sprawdzająca czy w tabeli UD_SKL znajdują się wpisy informujące o tym, czy istnieją jednostki
::       organizacyjne.
::   WE:
::   WY: 0/wartość większa od 0, 0 - nie istnieją jednostki, wartość >0 - istnieją
::----------------------------------------------------------------------------------------------------------------------
UD_SKL.cntx_psh();
UD_SKL.index('SYMBOL');
UD_SKL.prefix(exec('szukaj_ud_typ','schemat','PODZORG'));
_skl:=UD_SKL.size();
UD_SKL.cntx_pop();
_skl


\godziny_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Dodanie pozycji tabeli G (x2m)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','G')
|| _ok:=1;
:: Przypisanie odpowiedniego pracownika na podstawie unikalnego indeksu i przekazanych importem wartości:
   P.cntx_psh();
   P.index('PRACOIP');
   P.prefix(exec('ref_firma','ustawienia'),F_ZATR.KOD,P.IP);
   {? P.first()
   || G.P:=P.ref()
   ?};
   P.cntx_pop();

   {? ~G.P
   || _ok*=0;
      _txt:='Nie dodano godzin przepracowanych';
      _txt+=', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? ~G.K
   || _ok*=0;
      _txt:='Nie dodano godzin przepracowanych';
      _txt+=', brak rubryki płac. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};

   {? _ok
:: Sprawdzam czy identyczny zapis już istnieje:
   || _buffG:=obj_new('G','KK','BL','F','WAR','AUTO');
      _buffG.G:=G.G;
      _buffG.KK:=G.KK;
      _buffG.BL:=G.BL;
      _buffG.F:=G.F;
      _buffG.WAR:=G.WAR;
      _buffG.AUTO:=G.AUTO;
      K.cntx_psh();
      G.cntx_psh();
      G.index('CONTROL');
      G.prefix(G.P,G.M,G.R,G.LT,G.K().RN,G.D);
      {? G.first()
      || {!
         |? {? _buffG.G=G.G
               &
               _buffG.KK=G.KK
               &
               _buffG.BL=G.BL
               &
               _buffG.F=G.F
               &
               _buffG.WAR=G.WAR
               &
               _buffG.AUTO=G.AUTO
            || _ok*=0;
               _txt:='Nie dodano godzin przepracowanych';
               _txt+=', rekord już istnieje w bazie danych. Rekordu nie dodano.';
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@)
            ?};

            _ok & G.next()
         !}
      ?};
      G.cntx_pop();
      K.cntx_pop();
      obj_del(_buffG)
   ?};

   {? _ok
   || {? G.name()<>KST_POM.PT_2
      || G.use(KST_POM.PT_2);
         G.prefix()
      ?};
      __record+=(_ret_val:=G.add(1));
      {? _ret_val
      || _txt:='Dodano godziny przepracowane: '+G.D$1+' '+G.K().RT+' '+$G.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano godzin przepracowanych: '+G.D$1+' '+G.K().RT+' '+$G.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?}
?};

~~


\nieob_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Dodanie pozycji tabeli N (Import Xpertis)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','N')
|| _ok:=1;
   _firma:=exec('ref_firma','ustawienia');
   _fZatr:=F_ZATR.KOD;
:: Przypisanie odpowiedniego pracownika na podstawie unikalnego indeksu i przekazanych importem wartości:
   P.cntx_psh();
   P.index('PRACOIP');
   P.prefix(_firma,_fZatr,P.IP);
   {? P.first()
   || N.P:=P.ref();
      _osoba:=P.OSOBA
   || N.P:=_osoba:=null()
   ?};
   P.cntx_pop();

:: Przypisanie odpowiedniej listy płac do pola N.O:
   O.cntx_psh();
   O.index('LISTYPLR');
   O.prefix(_firma,_fZatr,O.R,O.M,O.T);
   N.O:={? O.first() || O.ref() || null() ?};
   O.cntx_pop();

:: Przypisanie odpowiedniego złączenia do OS_N:
   {? _osoba
   || OS_N.cntx_psh();
      OS_N.index('OND');
      OS_N.prefix(_firma,_osoba,OS_N.OD);
      N.OS_N:={? OS_N.first() || OS_N.ref() || null() ?};
      OS_N.cntx_pop()
   || _ok*=0;
      _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT;
      _txt+=', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};

:: Przypisanie odpowiedniego numeru ref do pola N_KOR jeśli jest taka potrzeba:
   {? N.RODZAJ='K'
   || _nKor:=null();
      N.cntx_psh();
      N.index('NIEOBECL');
      N.prefix('T',N.P,EDIT_VAR.LT,EDIT_VAR.P1,EDIT_VAR.DATA);
      {? N.first()
      || {!
         |? {? N.RODZAJ='R'
            || _nKor:=#N.ref()
            ?};

            N.next() & ~_nKor
         !}
      ?};
      N.cntx_pop();
      N.N_KOR:=_nKor;
      {? ~N.N_KOR
      || _ok*=0;
         _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT;
         _txt+=', brak nieobecności korygowanej. Rekordu nie dodano.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      ?}
   ?};

   {? ~N.NB
   || _ok*=0;
      _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT;
      _txt+=', brak rubryki płac. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? N.OD=#0
   || _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT;
      _txt+=', data OD nie może być nieokreślona. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? N.DO=#0
   || _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT;
      _txt+=', data DO nie może być nieokreślona. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? N.OD>N.DO
   || _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT;
      _txt+=', data DO jest wcześniejsza niż OD. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? _ok
   || N.cntx_psh();
      N.index('NIEOBECN');
      N.prefix(N.KOR,N.P,N.OD,N.RODZAJ);
      {? N.first()
      || _ok*=0;
         _txt:='Istnieje już nieobecność: '+N.OD$1+' '+N.NB().RT+'. Rekordu nie dodano.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@)
      ?};
      N.cntx_pop()
   ?};
   {? _ok
   || VAR.P:=0;
      N.P();
      P.get();
      _ret:=exec('n','overlap');
      {? var_pres('_ret')=type_of('') & +_ret
      || _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT+' '+$N.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
         _txt+=', istnieje konflikt dat. Rekordu nie dodano.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _ok*=0
      ?}
   ?};
   {? _ok
   || N.prefix();
      __record+=(_ret_val:=N.add(1));
      {? _ret_val
      || _txt:='Dodano nieobecność: '+N.OD$1+' '+N.NB().RT+' '+$N.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT+' '+$N.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?}
?};

~~


\ds_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Dodanie pozycji tabeli DS (x2m)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','DS')
|| _ok:=1;
:: Przypisanie odpowiedniego pracownika na podstawie unikalnego indeksu i przekazanych importem wartości:
   P.cntx_psh();
   P.index('PRACOIP');
   P.prefix(exec('ref_firma','ustawienia'),F_ZATR.KOD,P.IP);
   {? P.first()
   || DS.P:=P.ref()
   ?};
   P.cntx_pop();

   {? ~DS.P
   || _ok*=0;
      _txt:='Nie dodano dyscypliny pracy';
      _txt+=', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? ~DS.NB
   || _ok*=0;
      _txt:='Nie dodano dyscypliny pracy';
      _txt+=', brak rubryki płac. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? _ok
   || __record+=(_ret_val:=DS.add(1));
      {? _ret_val
      || _txt:='Dodano dyscyplinę pracy: '+$DS.R+' '+DS.NR+' '+$DS.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano dyscypliny pracy: '+$DS.R+' '+DS.NR+' '+$DS.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?}
?};

~~


\karta_zarobkowa_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Dodanie pozycji tabeli KZ (Import Xpertis)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','KZ')
|| _ok:=1;
   KZ.cntx_psh();
   KZ.index('_KARTAZA');
   KZ.prefix(KZ.P,KZ.R,KZ.M);
   {? KZ.first()
   || _txt:='Istnieje już karta zarobkowa: '+$KZ.R+'/'+$KZ.M;
      _txt+=', dla pracownika: '+$KZ.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      _txt+='. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? KZ.P
   || {? _ok
      || KZ.prefix();
         {? ~KZ.add(1)
         || _txt:='Nie dodano karty zarobkowej: '+$KZ.R+'/'+$KZ.M;
            _txt+=', dla pracownika: '+$KZ.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
         || _txt:='Dodano kartę zarobkową: '+$KZ.R+'/'+$KZ.M;
            _txt+=', dla pracownika: '+$KZ.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
            __record+=1
         ?}
      ?}
   || _txt:='Nie dodano karty zarobkowej: '+$KZ.R+'/'+$KZ.M+', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   KZ.cntx_pop()
?};

~~


\KP_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Dodanie pozycji tabeli - Karta podatkowa
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','KP')
|| _ok:=1;
   {? ~KP.P
   || _ok*=0;
      _txt:='Nie dodano karty podatkowej';
      _txt+=', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
:: Sprawdzenie czy taka karta już istnieje w bazie danych:
   {? _ok
   || KP.cntx_psh();
      KP.index('_KARTAPO');
      KP.prefix(KP.P,KP.R,KP.M);
      {? KP.first()
      || _ok*=0;
         _txt:='Nie dodano karty podatkowej';
         _txt+=', rekord już istnieje w bazie danych. Rekordu nie dodano.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@)
      ?};
      KP.cntx_pop()
   ?};
   {? _ok
   || __record+=(_ret_val:=KP.add(1));
      {? _ret_val
      || _txt:='Dodano kartę podatkową: '+$KP.R+' '+$KP.M+' '+$DS.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano karty podatkowej: '+$KP.R+' '+$KP.M+' '+$DS.P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?}
?};

~~


\tz_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Dodanie pozycji tabeli TZ
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','TZ')
|| _ok:=1;
   _firma:=exec('ref_firma','ustawienia');
   _fZatr:=F_ZATR.KOD;
:: Przypisanie odpowiedniego pracownika na podstawie unikalnego indeksu i przekazanych importem wartości:
   P.cntx_psh();
   P.index('PRACOIP');
   P.prefix(_firma,_fZatr,P.IP);
   {? P.first()
   || N.P:=P.ref();
      _osoba:=P.OSOBA
   || N.P:=_osoba:=null()
   ?};
   P.cntx_pop();

   {? ~N.P
   || _ok*=0;
      _txt:='Nie dodano rozliczenia nieobecności';
      _txt+=', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? _osoba
   || OS_N.cntx_psh();
      OS_N.index('OND');
      OS_N.prefix(_firma,_osoba,OS_N.OD);
      N.OS_N:={? OS_N.first() || OS_N.ref() || null() ?};
      OS_N.cntx_pop()
   || _ok*=0;
      _txt:='Nie dodano nieobecności: '+N.OD$1+' '+N.NB().RT;
      _txt+=', brak pracownika. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   TZ.cntx_psh();
   _nDo:=N.DO;
   _nRodz:=N.RODZAJ;
   N.cntx_psh();
   TZ.index('PNMR');
   N.index('NIPRACNB');
   N.prefix(N.KOR,N.P,N.NB,N.OD);
   TZ.N:={? N.size()>1
         || {? N.find_tab(,'DO',,'=',_nDo,'RODZAJ',,'=',_nRodz)
            || N.ref
            || ok*=0;
               null()
            ?}
         |? N.size()=1
         || N.first();
            N.ref()
         || _ok*=0;
            null()
         ?};
   _ref:=null();
   TZ.prefix(TZ.N,TZ.M,TZ.R,N.OS_N);
   {? TZ.first() & TZ.STATUS<>'X'
   || _txt:='Istnieje już rozliczenie nieobecności: '+TZ.M$1+'. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=TZ.ref()
   |? TZ.first() & TZ.STATUS='X'
   || _txt:='Istnieje już rozliczenie nieobecności: '+'nadpisuję!';
      TZ.del()
   ?};
   {? ~TZ.N
   || _ok*=0;
      _txt:='Nie dodano rozliczenia nieobecności: '+TZ.M$1;
      _txt+=', brak nieobecności. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   {? N.OD=#0
   || _txt:='Nie dodano rozliczenia nieobecności: '+TZ.M$1;
      _txt+=', data nieobecności nie może być nieokreślona. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? TZ.M=#0
   || _txt:='Nie dodano rozliczenia nieobecności: '+TZ.M$1;
      _txt+=', data nie może być nieokreślona. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};

   {? _ok & _ref=null()
:: Sprawdzam czy identyczny zapis już istnieje:
   || {? var_pres('_buffTZ')>100 || obj_del(_buffTZ) ?};
      _buffTZ:=obj_new('R','M','KW','NO','PR','NB','OD','DO','KOR','RODZAJ');
      _buffTZ.R:=TZ.R;
      _buffTZ.M:=TZ.M;
      _buffTZ.KW:=TZ.KW;
      _buffTZ.NO:=TZ.NO;
      _buffTZ.PR:=TZ.PR;
      _buffTZ.NB:=TZ.N().NB;
      _buffTZ.OD:=N.OD;
      _buffTZ.DO:=N.DO;
      _buffTZ.KOR:=N.KOR;
      _buffTZ.RODZAJ:=N.RODZAJ;
      OS_N.cntx_psh();
      N.cntx_psh();
      TZ.cntx_psh();
      TZ.index('PNMR');
      TZ.prefix(TZ.N().P,TZ.M,TZ.R,TZ.N().OS_N);
      {? TZ.first()
      || {!
         |? {? _buffTZ.R=TZ.R
               &
               _buffTZ.M=TZ.M
               &
               _buffTZ.KW=TZ.KW
               &
               _buffTZ.NO=TZ.KW
               &
               _buffTZ.NO=TZ.NO
               &
               _buffTZ.PR=TZ.PR
               &
               _buffTZ.NB=TZ.N().NB
               &
               _buffTZ.OD=N.OD
               &
               _buffTZ.DO=N.DO
               &
               _buffTZ.KOR=N.KOR
               &
               _buffTZ.RODZAJ=N.RODZAJ
            || _ok*=0;
               _txt:='Nie dodano rozliczenia nieobecności';
               _txt+=', rekord już istnieje w bazie danych. Rekordu nie dodano.';
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@)
            ?};

            _ok & TZ.next()
         !}
      ?};
      TZ.cntx_pop();
      N.cntx_pop();
      OS_N.cntx_pop();
      obj_del(_buffTZ)
   ?};

   {? _ok & _ref=null()
   || {? TZ.name()<>KST_POM.PT_2
      || TZ.use(KST_POM.PT_2);
         TZ.prefix()
      ?};
      TZ.STATUS:='I';
      __record+=(_ret_val:=TZ.add(1));
      {? _ret_val
      || _txt:='Dodano rozliczenie nieobecności: '+TZ.M$6+' '+$TZ.N().P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
      || _txt:='Nie dodano rozliczenia nieobecności: '+TZ.M$6+$TZ.N().P().IP+' ';
         _txt+=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
      ?}
   ?};
:: usunięcie dublujących się zapisów, jeśli jest ze statusem I, to nie może być X
   TZ.index('ZASTAB');
   TZ.prefix('E',TZ.N); _xx:=0;
   {? TZ.last()
   || {! |? {? TZ.STATUS='I' || _xx:=1 ?}; TZ.prev() & _xx=0 !}
   ?};
   {? _xx & TZ.last()
   || {! |? {? TZ.STATUS='X' || TZ.del() || TZ.prev() ?} !}
   ?};
   N.cntx_pop();
   TZ.cntx_pop()
?};

~~


\zlecenia_x2m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Dodanie pozycji tabeli umów cywilnoprawnych (Import Xpertis)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','ZC')
|| _firma:=exec('ref_firma','ustawienia');
   ZC.cntx_psh();
   ZC.index('ZLECPRAC');
   ZC.prefix(ZC.P,ZC.R,ZC.M,ZC.DU,ZC.NU);
   {? ZC.first()
   || _txt:='Umowa: '+ZC.NU+' dla zleceniobiorcy: '+ZC.P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+', już istnieje.';
      _txt+='Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE');
      ZC.cntx_pop();
      return(~~)
   ?};
   ZC.cntx_pop();
   {? ZC.P=null()
   || _txt:='Nie dodano umowy: '+ZC.NU+', brak zleceniobiorcy. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,81,'BRAK WARTOŚCI')
   |? ZC.WYDZIAL=null()
   || _txt:='Nie dodano umowy: '+ZC.NU+', brak wydziału. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,81,'BRAK WARTOŚCI')
   || P.cntx_psh();
      ZC.OSOBA:=ZC.P().OSOBA;
         {? ~ZC.KT
         || ZC.KT:=exec('FindInSet','#table','KT','KRYTERIA','ZLC',exec('ref_firma','ustawienia'),,1)
         ?};
         ZC.prefix();
         {? ZC.add(1)
         || _txt:='Dodano umowę: '+ZC.NU+'.';
            exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,38,'ZAPISANE REKORDY');
            __record+=1
         || _txt:='Nie dodano umowy: '+ZC.NU+'. Rekordu nie dodano.';
            exec('add_kom','#message','Wiersz: '+$__linia+' '+_txt,5,'INNE BŁĘDY')
      ?};
      P.cntx_pop()
   ?}
?};
~~


\ppk_pod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.14]
:: OPIS: Dodanie pozycji tabeli PPK_POD
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','PPK_POD')
|| _ok:=1;
   _firma:=exec('ref_firma','ustawienia');

:: Przypisanie odpowiedniego pracownika na podstawie unikalnego indeksu i przekazanych importem wartości:
   P.cntx_psh();
   P.index('PRACOIP');
   P.prefix(exec('ref_firma','ustawienia'),F_ZATR.KOD,P.IP);
   {? P.first()
   || PPK_POD.P:=P.ref()
   ?};
   P.cntx_pop();

   {? PPK_POD.P=null()
   || _txt:='Nie dodano danych przychodu PPK, brak pracownika.'@;
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};

:: Funkcja szukająca rachunku do podpięcia rachunku wyliczenia/opodatkowania:
   _ppkRh:=
      "_ret:=null();
       P.cntx_psh();
       P.prefix();
       ZC.cntx_psh();
       ZC.index('ZLECKOD');
       ZC.prefix(PPK_POD.P().OSOBA,P.WYDZIAL,_a,_b,_c,_d);
::  Jeśli znalazłem umowę, szukam rachunku:
       {? ZC.first()
       || RH.cntx_psh();
          RH.index('RACHZLEN');
          RH.prefix(_e,ZC.ref(),_f);
          {? RH.first() & RH.size()=1
          || _ret:=RH.ref()
          ?};
          RH.cntx_pop()
       ?};
       ZC.cntx_pop();
       P.cntx_pop();
       _ret
      ";

:: Funkcja szukająca listy płac do podpięcia listy płac wyliczenia/opodatkowania:
   _ppkO:=
      "_ret:=null();
       O.cntx_psh();
       O.index('LISTYPLP');
       O.prefix(_a,_b,_c,_d,_e);
       {? O.first()
       || _ret:=O.ref()
       ?};
       O.cntx_pop();
       _ret
      ";

:: Szukam rachunku wyliczenia do podpięcia:
   {? _ok & +RH.N
   || PPK_POD.WYL_RH:=_ppkRh(ZC.R,ZC.M,ZC.DU,ZC.NU,_firma,RH.N);
      {? PPK_POD.WYL_RH=null()
      || _txt:='Nie dodano danych przychodu PPK, brak rachunku.'@;
         _txt+=' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
         _ok*=0
      ?}
   ?};

:: Jeśli nie podpięto rachunku wyliczenia, podpinam listę wyliczenia (w innym wypadku podepnie się w wyzwalaczu):
   {? _ok & PPK_POD.WYL_RH=null()
   || KT.cntx_psh();
      KT.prefix();
      F_ZATR.cntx_psh();
      F_ZATR.prefix();
      PPK_POD.WYL_O:=_ppkO(_firma,O.T().F_ZATR().KOD,O.RP,O.MP,KT.T);
      F_ZATR.cntx_pop();
      KT.cntx_pop();
      {? PPK_POD.WYL_O=null()
      || _txt:='Nie dodano danych przychodu PPK, brak listy płac.'@;
         _txt+=' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
         _ok*=0
      ?}
   ?};

:: Szukam rachunku opodatkowania do podpięcia:
   {? _ok & +EDIT_VAR.LEG1
   || PPK_POD.POD_RH:=_ppkRh(EDIT_VAR.P3,EDIT_VAR.P4,EDIT_VAR.DATA,EDIT_VAR.KZUP_S2,_firma,EDIT_VAR.LEG1);
      {? PPK_POD.POD_RH=null()
      || _txt:='Nie dodano danych przychodu PPK, brak rachunku.'@;
         _txt+=' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
         _ok*=0
      ?}
   ?};

:: Jeśli nie podpięto rachunku opodatkowania, podpinam listę opodatkowania (w innym wypadku podepnie się w wyzwalaczu):
   {? _ok & PPK_POD.POD_RH=null()
   || PPK_POD.POD_R:=EDIT_VAR.P1;
      PPK_POD.POD_M:=EDIT_VAR.P2;
      KT.cntx_psh();
      KT.prefix();
      {? KT.seek(exec('FindInSet','#table','KT','KRYTERIA',EDIT_VAR.LISTA,_firma,,1))
      || F_ZATR.cntx_psh();
         F_ZATR.prefix();
         PPK_POD.POD_O:=_ppkO(_firma,KT.F_ZATR().KOD,PPK_POD.POD_R,PPK_POD.POD_M,KT.T);
         F_ZATR.cntx_pop()
      ?};
      KT.cntx_pop()
   ?};

:: Dodanie rekordu i uzupełnienie informacji:
   {? _ok
   || PPK_POD.REJ_TRYB:='A';
      PPK_POD.REJ_DATA:=date();
      PPK_POD.REJ_KTO:=OPERATOR.USER().DANE;
      _przData:=PPK_POD.PRZ_DATA;

      exec('czytaj','#stalesys',O.D,KST_PPK,'POD_WMW','D_PRZWPL');
      {? PPK_POD.add()
::    uzupełnij informacje w tabeli kwot przychodu na podstawie podanej listy
      || _rn:=spli_str(__RUB.sys_sql(726,date(PPK_POD.WYL_R,PPK_POD.WYL_M,0)),',');
         PPK_POK.cntx_psh();
         PPK_POK.prefix();
         LS.cntx_psh();
         LS.use(-PPK_POD.WYL_LT);
         {? F_ZATR.KOD<>'Z'
         || LS.index('PRACNRRU');
            LS.prefix(PPK_POD.P)
         || LS.index('ZLEC');
            LS.prefix(PPK_POD.WYL_RH)
         ?};
         {! _ii:=1..obj_len(_rn)
         |? _ok
         |! {? LS.find_key(#_rn[_ii])
::          wpłata zwiększa przychód
            || PPK_POK.blank(1);
               PPK_POK.PPK_POD:=PPK_POD.ref();
               PPK_POK.R:=LS.RB;
               PPK_POK.KW:=LS.KW;
::             Jeśli dodanie kwoty się nie powiodło, usuń nagłówek:
               {? ~PPK_POK.add()
               || PPK_POD.del(1);
                  _ok*=0
               ?}
            ?}
         !};
         LS.cntx_pop();
         PPK_POK.cntx_pop()
      || _txt:='Nie dodano danych przychodu PPK, wystąpił błąd.'@;
         _txt+=' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
         _ok*=0
      ?};
::    Zapisanie przekazanej w arkuszu daty PPK_POD.PRZ_DATA z pominięciem wyzwalacza:
      {? _ok
      || PPK_POD.get();
         PPK_POD.PRZ_DATA:=_przData;
         PPK_POD.POD_R:=PPK_POD.PRZ_DATA~1;
         PPK_POD.POD_M:=PPK_POD.PRZ_DATA~2;
         PPK_POD.trig_off('put','*');
         {? ~PPK_POD.put(1)
         || _txt:='Nie zaktualizowano daty przekazania przychodu PPK, wystąpił błąd.'@;
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
         ?};
         PPK_POD.trig_on('put','*')
      ?}
   ?};

:: Końcowy komunikat:
   {? _ok
   || OSOBA.cntx_psh();
      OSOBA.prefix();
      _txt:='Dodano dane przychodu PPK: %1 %2, lista wyliczenia przychodu PPK: %3.'
         [PPK_POD.OSOBA().NAZWISKO,OSOBA.PIERWSZE,PPK_POD.WYL_LT];
      OSOBA.cntx_pop();
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
      __record+=1
   ?}
?};

~~


\os_zwpod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IGPTASZE
:: OPIS: Dodanie pozycji tabeli OS_ZWPOD
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------

__linia+=1;
{? exec('wymag','edi_ka','OS_ZWPOD')
|| _ok:=1;
   {? OS_ZWPOD.OS_ZWSLO
   || {? OS_ZWPOD.OS_ZWSLO().ROCZNE='T'
      || {? OS_ZWPOD.ROK=0
         || _ok*=0;
            _txt:='"Rok rozpoczęcia" musi być wypełniony.'@;
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
         ?};
         {? OS_ZWPOD.ROK_Z=0
         || _ok*=0;
            _txt:='"Rok zakończenia" musi być wypełniony.'@;
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
         ?};
         {? _ok
         || _d_ob:=date(OS_ZWPOD.ROK,1,1);
            {? OS_ZWPOD.ROK>OS_ZWPOD.ROK_Z
            || _ok*=0;
               _txt:='"Rok zakończenia" nie może być wcześniejszy niż "Rok rozpoczęcia".'@;
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
            ?};
            {? OS_ZWPOD.REZYGN<>'T' & OS_ZWPOD.D_OB~1>OS_ZWPOD.ROK
            || _ok*=0;
               _txt:='"Data stosowania" nie może być późniejsza od daty %1.'@[date(OS_ZWPOD.ROK,12,0)$1];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
            ?};
            {? OS_ZWPOD.D_OB<_d_ob
            || _ok*=0;
               _txt:='"Data stosowania" nie może być wcześniejsza od daty %1.'@[_d_ob$1];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
            ?}
         ?}
      || OS_ZWPOD.ROK:=0;
         OS_ZWPOD.ROK_Z:=0
      ?};
      {? OS_ZWPOD.D_ZO>OS_ZWPOD.D_OB
      || _ok*=0;
         _txt:='"Data stosowania" nie może być wcześniejsza niż "Data złożenia".'@;
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
      ?};
      _ref:=null();
      _d_zo:=#0;
      {? OS_ZWPOD.REZYGN='T' & OS_ZWPOD.WYCOFANY='T'
      || _ok*=0;
         _txt:='Tylko jedna z wartości "Wycofany dokument", "Wycofanie" może być równa ''T'''@;
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
      |? OS_ZWPOD.REZYGN='N' & OS_ZWPOD.WYCOFANY='T'
      || OS_ZWPOD.WYCOFANY:='X'
      |? OS_ZWPOD.REZYGN='T'
      || OS_ZWPOD.cntx_psh();
         OS_ZWPOD.index(OS_ZWPOD.ndx_tmp(,,'FIRMA',,,'OSOBA',,,'OS_ZWSLO',,,'WYCOFANY',,,'AKTYWNY',,));
         OS_ZWPOD.prefix(OS_ZWPOD.FIRMA,OS_ZWPOD.OSOBA,OS_ZWPOD.OS_ZWSLO,'X', OS_ZWPOD.AKTYWNY);
         {? OS_ZWPOD.first()
         || _ref:=OS_ZWPOD.ref();
            _d_zo:=OS_ZWPOD.D_ZO
         || _ok*=0;
           _txt:='Nie odnaleziono danych o oświadczeniu do wycofania: %1, osoby: %2..'@
           [OS_ZWPOD.OS_ZWSLO().RODZAJ, OS_ZWPOD.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
           exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
         ?};
         OS_ZWPOD.cntx_pop();
         {? _d_zo<>#0 & OS_ZWPOD.D_ZO>=_d_zo
         || OS_ZWPOD.DOK_WYC:=#_ref
         || _ok*=0;
            _txt:='Data złożenia wycofania nie może być wcześniejsza od daty złożenia oświadczenia.'@;
           exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
         ?}

      ?};
      {? +KST_POM.PT_2
      || _slo_kod:=exec('FindInSet','#table','SLO_KOD','KOD',KST_POM.PT_2,exec('slo_typ','ext_slo','RODZ_PL'),,1);
         {? _slo_kod=null()
         || _ok*=0;
            _txt:='Pozycja %1 nie występuje w słowniku rodzajów płatników.'@[KST_POM.PT_2];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
         ?}
      ?};
      {? OS_ZWPOD.OSOBA
      || {? _ok & _ref=null()
         || {? _ret_val:=OS_ZWPOD.add(1)
            || OS_GRPRZ.cntx_psh();
               {? +KST_POM.PT_2
               || OS_GRPRZ.SLO_KOD:=_slo_kod;
                  OS_GRPRZ.OS_ZWPOD:=OS_ZWPOD.ref();
                  _ret_val:=OS_GRPRZ.add(1)
               ?};
               OS_GRPRZ.cntx_pop()
            ?};
            __record+=_ret_val;
            {? _ret_val
            || _txt:='Dodano dane o oświadczeniu do zwolnienia przychodu od opodatkowania: %1, osoby: %2.'@
               [OS_ZWPOD.D_OB$1+' '+OS_ZWPOD.OS_ZWSLO().RODZAJ,OS_ZWPOD.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
            || _txt:='Nie dodano danych o oświadczeniu do zwolnienia przychodu od opodatkowania: %1, osoby: %2.'@
               [OS_ZWPOD.D_OB$1+' '+OS_ZWPOD.OS_ZWSLO().RODZAJ,OS_ZWPOD.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?}
         |? _ok
         || {? _ret_val:=OS_ZWPOD.add(1) & OS_ZWPOD.seek(_ref,,1)
            || OS_ZWPOD.WYCOFANY:='T';
               OS_ZWPOD.put();
               {? _ret_val
               || _txt:='Dodano dane o wycofaniu oświadczenia do zwolnienia przychodu od opodatkowania: %1, osoby: %2.'@
                  [OS_ZWPOD.OS_ZWSLO().RODZAJ,OS_ZWPOD.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
                  exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
               || _txt:='Nie dodano danych o wycofaniu oświadczenia do zwolnienia przychodu od opodatkowania: %1, osoby: %2.'@
                  [OS_ZWPOD.OS_ZWSLO().RODZAJ,OS_ZWPOD.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
                  exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
               ?}
            ?};
            __record+=_ret_val
         |? ~_ref=null()
         || {? OS_ZWPOD.seek(_ref,,1)
            || _txt:='Błąd w rekordzie wycofującym.'@;
               _txt+=' '+'Usunięto dane o oświadczeniu do wycofania: %1, osoby: %2.'@
               [OS_ZWPOD.D_OB$1+' '+OS_ZWPOD.OS_ZWSLO().RODZAJ,OS_ZWPOD.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF ];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
               exec('del_ndx','#table',OS_GRPRZ,'OS_ZWPOD',_ref);
               __record-=OS_ZWPOD.del(1)
            ?}
         ?}
      || _txt:='Nie dodano danych o oświadczeniu do zwolnienia przychodu od opodatkowania: %1, brak osoby.'@
         [OS_ZWPOD.D_OB$1+' '+OS_ZWPOD.OS_ZWSLO().RODZAJ];
         _txt+=' '+'Rekordu nie dodano.'@;
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      ?}
   || _ok*=0;
      _txt:='W słowniku nie odnaleziono rodzaju oświadczenia o podanym kodzie.'@;
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
   ?}
?};
~~

\os_zwzal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IGPTASZE
:: OPIS: Dodanie pozycji tabeli OS_ZWZAL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------

__linia+=1;
{? exec('wymag','edi_ka','OS_ZWPOD')
|| _ok:=1;
   {? OS_ZWZAL.OS_ZWSLO
   || {? OS_ZWZAL.OS_ZWSLO().ROCZNE='T'
      || _d_ob:=date(OS_ZWZAL.ROK,1,1);
         {? OS_ZWZAL.ROK<2022
         || _ok*=0;
            _txt:='"Rok" nie może być wcześniejszy niż 2022.'@;
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
         || {? OS_ZWZAL.D_ZO~1>OS_ZWZAL.ROK
            || _ok*=0;
               _txt:='"Data złożenia" nie może być późniejsza od daty %1.'@[date(OS_ZWZAL.ROK,12,0)$1];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
            ?};
            {? OS_ZWZAL.D_OB<_d_ob
            || _ok*=0;
               _txt:='"Data stosowania" nie może być wcześniejsza od daty %1.'@[_d_ob$1];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
            |? OS_ZWZAL.D_OB~1>OS_ZWZAL.ROK
            || _ok*=0;
               _txt:='"Data stosowania" nie może być późniejsza od daty %1.'@[date(OS_ZWZAL.ROK,12,0)$1];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
            ?}
         ?}
      || OS_ZWZAL.ROK:=0
      ?};
      {? OS_ZWZAL.D_ZO>OS_ZWZAL.D_OB
      || _ok*=0;
         _txt:='"Data stosowania" nie może być wcześniejsza niż "Data złożenia".'@;
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
      ?};
      _ref:=null();
      _d_zo:=#0;
      {? OS_ZWZAL.WYCOF='T' & OS_ZWZAL.WYCOFANY='T'
      || _ok*=0;
         _txt:='Tylko jedna z wartości "Wycofany dokument", "Wycofanie" może być równa ''T'''@;
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
      |? OS_ZWZAL.WYCOF='N' & OS_ZWZAL.WYCOFANY='T'
      || OS_ZWZAL.WYCOFANY:='X'
      |? OS_ZWZAL.WYCOF='T'
      || OS_ZWZAL.cntx_psh();
         OS_ZWZAL.index(OS_ZWZAL.ndx_tmp(,,'FIRMA',,,'OSOBA',,,'OS_ZWSLO',,,'WYCOFANY',,,'AKTYWNY',,));
         OS_ZWZAL.prefix(OS_ZWZAL.FIRMA,OS_ZWZAL.OSOBA,OS_ZWZAL.OS_ZWSLO,'X', OS_ZWZAL.AKTYWNY);

         {? OS_ZWZAL.first()
         ||_ref:=OS_ZWZAL.ref();
           _d_zo:=OS_ZWZAL.D_ZO
         ||_ok*=0;
           _txt:='Nie odnaleziono danych o wniosku do wycofania: %1, osoby: %2..'@
           [OS_ZWZAL.OS_ZWSLO().RODZAJ, OS_ZWZAL.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
           exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
         ?};
         OS_ZWZAL.cntx_pop();
         {? _d_zo<>#0 & OS_ZWZAL.D_ZO>=_d_zo
         || OS_ZWZAL.DOK_WYC:=#_ref
         || _ok*=0;
            _txt:='Data złożenia wycofania nie może być wcześniejsza od daty złożenia wniosku.'@;
           exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
         ?}
      ?};
      {? +KST_POM.PT_2
      || _slo_kod:=exec('FindInSet','#table','SLO_KOD','KOD',KST_POM.PT_2,exec('slo_typ','ext_slo','RODZ_PL'),,1);
         {? _slo_kod=null()
         || _ok*=0;
            _txt:='Pozycja %1 nie występuje w słowniku rodzajów płatników.'@[KST_POM.PT_2];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
         ?}
      ?};
      {? OS_ZWZAL.OSOBA
      || {? _ok & _ref=null()
         || {? _ret_val:=OS_ZWZAL.add(1)
            || OS_GRPRZ.cntx_psh();
               {? +KST_POM.PT_2
               || OS_GRPRZ.SLO_KOD:=_slo_kod;
                  OS_GRPRZ.OS_ZWZAL:=OS_ZWZAL.ref();
                  _ret_val:=OS_GRPRZ.add(1)
               ?};
               OS_GRPRZ.cntx_pop()
            ?};
            __record+=_ret_val;
            {? _ret_val
            || _txt:='Dodano dane o wniosku do zwolnienia przychodu od opodatkowania: %1, osoby: %2.'@
               [OS_ZWZAL.D_OB$1+' '+OS_ZWZAL.OS_ZWSLO().RODZAJ,OS_ZWZAL.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
            || _txt:='Nie dodano danych o wniosku do zwolnienia przychodu od opodatkowania: %1, osoby: %2.'@
               [OS_ZWZAL.D_OB$1+' '+OS_ZWZAL.OS_ZWSLO().RODZAJ,OS_ZWZAL.P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?}
         |? _ok
         || {? _ret_val:=OS_ZWZAL.add(1) & OS_ZWZAL.seek(_ref,,1)
            || OS_ZWZAL.WYCOFANY:='T';
               OS_ZWZAL.put();
               {? _ret_val
               || _txt:='Dodano dane o wycofaniu wniosku - zwolniony przchód: %1, osoby: %2.'@
                  [OS_ZWZAL.OS_ZWSLO().RODZAJ,OS_ZWZAL.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
                  exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
               || _txt:='Nie dodano danych o wycofaniu wniosku - zwolniony przychód: %1, osoby: %2.'@
                  [OS_ZWZAL.OS_ZWSLO().RODZAJ,OS_ZWZAL.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF];
                  exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
               ?}
            ?};
            __record+=_ret_val
         |? ~_ref=null()
            || {? OS_ZWZAL.seek(_ref,,1)
               || _txt:='Błąd w rekordzie wycofującym.'@;
                  _txt+=' '+'Usunięto dane o oświadczeniu do wycofania: %1, osoby: %2.'@
                  [OS_ZWZAL.D_OB$1+' '+OS_ZWZAL.OS_ZWSLO().RODZAJ,OS_ZWZAL.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.IDENTYF ];
                  exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
                  exec('del_ndx','#table',OS_GRPRZ,'OS_ZWPOD',_ref);
                  __record-=OS_ZWZAL.del(1)
               ?}
         ?}
      || _txt:='Nie dodano danych o wniosku - zwolniony przychód: %1, brak osoby.'@
         [OS_ZWZAL.D_OB$1+' '+OS_ZWZAL.OS_ZWSLO().RODZAJ];
         _txt+=' '+'Rekordu nie dodano.'@;
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      ?}
   || _ok*=0;
      _txt:='W słowniku nie odnaleziono rodzaju wniosku o podanym kodzie.'@;
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@)
   ?}
?};
~~


\p_ipod_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IGPTASZE
:: OPIS: Dodanie pozycji tabeli P_IPOD
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','P_IPOD')
|| _ok:=1;
   P_IPOD.cntx_psh();
   P_IPOD.index('OD');
   P_IPOD.prefix(P_IPOD.P,P_IPOD.OD);
   {? P_IPOD.first()
   || _txt:='Istnieje już informacja podatkowa: '+P_IPOD.OD$1;
      _txt+=', dla zleceniobiorcy: '+$P_IPOD.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE;
      _txt+='. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ok*=0
   ?};
   {? P_IPOD.P
   ||
      {? _ok
      || {? ~P_IPOD.add(1)
         || _txt:='Nie dodano informacji podatkowej: '+P_IPOD.OD$1;
            _txt+=', dla zleceniobiorcy: '+$P_IPOD.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@);
            _ok*=0
         || _txt:='Dodano informację podatkową: '+P_IPOD.OD$1;
            _txt+=', dla zleceniobiorcy: '+$P_IPOD.P().IP+' '+P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+'.';
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@);
            __record+=1
         ?}
      ?}
   || _txt:='Nie dodano informacji podatkowej: '+P_IPOD.OD$1+', brak zleceniobiorcy. Rekordu nie dodano.';
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
   ?};
   P_IPOD.cntx_pop()
?};
~~


\ppsf_adr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RN
:: OPIS: Dodanie pozycji tabeli PPSF_ADR
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','PPSF_ADR')
|| PPSF_ADR.cntx_psh();
   PPSF_ADR.prefix();
   _ref:=null();
   {? PPSF_ADR.find_tab(1,
         'P',,'=',PPSF_ADR.P,
         'OD',,'=',PPSF_ADR.OD,
         'DO',,'=',PPSF_ADR.DO,
         'A',,'=',PPSF_ADR.A,
         'TYP',,'=',PPSF_ADR.TYP,
         'KRAJ',,'=',PPSF_ADR.KRAJ,
         'MIASTO',,'=',PPSF_ADR.MIASTO,
         'DOM',,'=',PPSF_ADR.DOM
      )
   || _txt:='Istnieje już taki adres świadczenia pracy zdalnej: %1, miejscowość: %2. Pracownik: %3'@
         [PPSF_ADR.OD$1+' - '+PPSF_ADR.DO$1,PPSF_ADR.MIASTO,
         PPSF_ADR.P().OSOBA().NAZWISKO+' '+PPSF_ADR.P().OSOBA().PIERWSZE+' '+PPSF_ADR.P().OSOBA().IDENTYF];
      _txt+='. %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=PPSF_ADR.ref()
   ?};
   _ok:=1;
   {? PPSF_ADR.TYP=null()
   || _txt:='Nie dodano adresu świadczenia pracy zdalnej, brak typu adresu pracy zdalnej. '@;
      _txt+='Pracownik: %1. Rekordu nie dodano.'@
         [PPSF_ADR.P().OSOBA().NAZWISKO+' '+PPSF_ADR.P().OSOBA().PIERWSZE+' '+PPSF_ADR.P().OSOBA().IDENTYF];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? PPSF_ADR.KRAJ=null()
   || _txt:='Nie dodano adresu świadczenia pracy zdalnej, brak dwuliterowyego kodu ISO 3166 kraju. '@;
      _txt+='Pracownik: %1. Rekordu nie dodano.'@
         [PPSF_ADR.P().OSOBA().NAZWISKO+' '+PPSF_ADR.P().OSOBA().PIERWSZE+' '+PPSF_ADR.P().OSOBA().IDENTYF];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? PPSF_ADR.DO<>date(0,0,0) & PPSF_ADR.DO<PPSF_ADR.OD
   || _txt:='Nie dodano adresu świadczenia pracy zdalnej, data "OD" musi być wcześniejsza niż data "DO". '@;
      _txt+='Pracownik: %1. Rekordu nie dodano.'@
         [PPSF_ADR.P().OSOBA().NAZWISKO+' '+PPSF_ADR.P().OSOBA().PIERWSZE+' '+PPSF_ADR.P().OSOBA().IDENTYF];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? exec('ppsf_adr','overlap',,1)<>'' & _ref=null()
   || _txt:='Nie dodano adresu świadczenia pracy zdalnej, '@;
      _txt+='okres obowiązywania adresu nie jest rozłączny z istniejącymi zapisami (%1 - %2). '@
         [PPSF_ADR.OD$1, PPSF_ADR.DO$1];
      _txt+='Pracownik: %1. Rekordu nie dodano.'@
         [PPSF_ADR.P().OSOBA().NAZWISKO+' '+PPSF_ADR.P().OSOBA().PIERWSZE+' '+PPSF_ADR.P().OSOBA().IDENTYF];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? _ok
   || {? PPSF_ADR.P
      || {? _ref=null()
         || PPSF_ADR.prefix();
            __record+=(_ret_val:=PPSF_ADR.add(1));
            {? _ret_val
            || _txt:='Dodano adres świadczenia pracy zdalnej: %1, miejscowość: %2. Pracownik: %3.'@
               [PPSF_ADR.OD$1+' - '+PPSF_ADR.DO$1,PPSF_ADR.MIASTO,
               PPSF_ADR.P().OSOBA().NAZWISKO+' '+PPSF_ADR.P().OSOBA().PIERWSZE+' '+PPSF_ADR.P().OSOBA().IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
            || _txt:='Nie dodano adresu świadczenia pracy zdalnej: %1, miejscowość: %2. Pracownik: %3.'@
               [PPSF_ADR.OD$1+' - '+PPSF_ADR.DO$1,PPSF_ADR.MIASTO,
               PPSF_ADR.P().OSOBA().NAZWISKO+' '+PPSF_ADR.P().OSOBA().PIERWSZE+' '+PPSF_ADR.P().OSOBA().IDENTYF];
               _txt+=' %1'['Rekordu nie dodano.'@];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?}
         ?}
      || _txt:='Nie dodano adresu świadczenia pracy zdalnej: %1, miejscowość: %2. Brak pracownika.'@
         [PPSF_ADR.OD$1+' '+PPSF_ADR.DO$1,PPSF_ADR.MIASTO];
         _txt+=' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      ?}
   ?};
   PPSF_ADR.cntx_pop()
?};
~~


\ppsf_h
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RN
:: OPIS: Dodanie pozycji tabeli PPSF_H
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','PPSF_H')
|| PPSF_H.cntx_psh();
   PPSF_H.prefix();
   _ref:=null();
   {? PPSF_H.find_tab(1,
         'P',,'=',PPSF_H.P,
         'OD',,'=',PPSF_H.OD,
         'DO',,'=',PPSF_H.DO,
         'PPSFROZD',,'=',PPSF_H.PPSFROZD,
         'OO',,'=',PPSF_H.OO
      )
   || _txt:='Istnieje już taki zapis o pracy zdalnej stałej: %1, rozkład pracy: %2. Pracownik: %3'@
         [PPSF_H.OD$1+' - '+PPSF_H.DO$1,PPSF_H.PPSFROZD().KOD,
         PPSF_H.P().OSOBA().NAZWISKO+' '+PPSF_H.P().OSOBA().PIERWSZE+' '+PPSF_H.P().OSOBA().IDENTYF];
      _txt+='. %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=PPSF_H.ref()
   ?};
   _ok:=1;
   _d0:=date(0,0,0);
   _p_dza:=PPSF_H.P().DZA;
   _p_dz:=PPSF_H.P().DZ;
   {? PPSF_H.OD<_p_dza
   || _txt:='Data "Obowiązuje od" (%1) wykracza poza okres zatrudnienia (%2 - %3) pracownika %4. Rekordu nie dodano.'@
         [$PPSF_H.OD,$_p_dza,$_p_dz,
         PPSF_H.P().OSOBA().NAZWISKO+' '+PPSF_H.P().OSOBA().PIERWSZE+' '+PPSF_H.P().OSOBA().IDENTYF];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? _p_dz<>_d0 & (PPSF_H.DO=_d0 | PPSF_H.DO>_p_dz)
   || _txt:='Data "Obowiązuje do" (%1) wykracza poza okres zatrudnienia (%2 - %3) pracownika %4.'@
         [$PPSF_H.DO,$_p_dza,$_p_dz,
         PPSF_H.P().OSOBA().NAZWISKO+' '+PPSF_H.P().OSOBA().PIERWSZE+' '+PPSF_H.P().OSOBA().IDENTYF];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,15,'SPRAWDŹ DANE'@)
   ?};

   _od:=PPSF_H.OD;
   _do:=PPSF_H.DO;
   PPSF_H.cntx_psh();
   PPSF_H.index('PRAC');
   PPSF_H.prefix(PPSF_H.P,);
   {? PPSF_H.first()
   || {!
      |? {? exec('is','overlap',PPSF_H,_od,_do) & _ref=null()
         || _txt:='Istnieje już zapis dotyczący pracy zdalnej w okresie od %1 do %2. '@[$PPSF_H.OD, $PPSF_H.DO];
            _txt+='Pracownik: %1. Rekordu nie dodano.'@
               [PPSF_H.P().OSOBA().NAZWISKO+' '+PPSF_H.P().OSOBA().PIERWSZE+' '+PPSF_H.P().OSOBA().IDENTYF];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
            _ok*=0
         ?};
         PPSF_H.next()
      !}
   ?};
   PPSF_H.cntx_pop();

   {? PPSFT.PPSFR=null()
   || _txt:='Nie dodano zapisu o pracy zdalnej stałej, nie podano rodzaju pracy zdalnej. '@;
      _txt+='Pracownik: %1. Rekordu nie dodano.'@
         [PPSF_H.P().OSOBA().NAZWISKO+' '+PPSF_H.P().OSOBA().PIERWSZE+' '+PPSF_H.P().OSOBA().IDENTYF];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? _ok
   || PPSFT.cntx_psh();
      PPSFT.index('NAZWA');
      PPSFT.prefix(exec('firma','ustawienia'),PPSFT.OPIS,PPSFT.PPSFR,PPSFT.PARTDAY);
      {? ~PPSFT.first()
      || _txt:='Nie dodano zapisu o pracy zdalnej stałej, brak typu pracy zdalnej. '@;
         _txt+='Pracownik: %1. Rekordu nie dodano.'@
            [PPSF_H.P().OSOBA().NAZWISKO+' '+PPSF_H.P().OSOBA().PIERWSZE+' '+PPSF_H.P().OSOBA().IDENTYF];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
         _ok*=0
      || PPSF_H.PPSFT:=PPSFT.ref()
      ?};
      PPSFT.cntx_pop()
   ?};
   {? PPSF_H.PPSFROZD=null()
   || _txt:='Nie dodano zapisu o pracy zdalnej stałej, brak definicji rozkładów pracy zdalnej. '@;
      _txt+='Pracownik: %1. Rekordu nie dodano.'@
         [PPSF_H.P().OSOBA().NAZWISKO+' '+PPSF_H.P().OSOBA().PIERWSZE+' '+PPSF_H.P().OSOBA().IDENTYF];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? _ok
   || {? PPSF_H.P
      || {? _ref=null()
         || PPSF_H.prefix();
            __record+=(_ret_val:=PPSF_H.add(1));
            {? _ret_val
            || {? +PPSF_H.memo_txt(,0,'OPIS')
               || PPSF_H.memo_put(,'OPIS')
               ?};
               _txt:='Dodano zapis o pracy zdalnej stałej: %1, rozkład pracy: %2. Pracownik: %3.'@
                  [PPSF_H.OD$1+' - '+PPSF_H.DO$1,PPSF_H.PPSFROZD().KOD,
                  PPSF_H.P().OSOBA().NAZWISKO+' '+PPSF_H.P().OSOBA().PIERWSZE+' '+PPSF_H.P().OSOBA().IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
            || _txt:='Nie dodano zapisu o pracy zdalnej stałej: %1, rozkład pracy: %2. Pracownik: %3.'@
                  [PPSF_H.OD$1+' - '+PPSF_H.DO$1,PPSF_H.PPSFROZD().KOD,
                  PPSF_H.P().OSOBA().NAZWISKO+' '+PPSF_H.P().OSOBA().PIERWSZE+' '+PPSF_H.P().OSOBA().IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?}
         ?}
      || _txt:='Nie dodano zapisu o pracy zdalnej stałej: %1, rozkład pracy: %2. Brak pracownika.'@
            [PPSF_H.OD$1+' - '+PPSF_H.DO$1,PPSF_H.PPSFROZD().KOD];
         _txt+=' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      ?}
   ?};
   PPSF_H.cntx_pop()
?};
~~


\ppsfn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RN
:: OPIS: Dodanie pozycji tabeli PPSFN
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','PPSFN')
|| PPSFN.cntx_psh();
   PPSFN.prefix();
   _ref:=null();
   {? PPSFN.find_tab(1,
         'P',,'=',PPSFN.P,
         'OD',,'=',PPSFN.OD,
         'DO',,'=',PPSFN.DO,
         'PPSFT','OPIS','=',PPSFT.OPIS
      )
   || _txt:='Istnieje już taki zapis o pracy poza siedzibą firmy: %1. Pracownik: %2.'@
         [PPSFN.OD$1+' - '+PPSFN.DO$1,
         PPSFN.P().OSOBA().NAZWISKO+' '+PPSFN.P().OSOBA().PIERWSZE+' '+PPSFN.P().OSOBA().IDENTYF];
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=PPSFN.ref()
   ?};
   _ok:=1;

   {? PPSFT.PPSFR=null()
   || _txt:='Nie dodano zapisu o pracy poza siedzibą firmy, nie podano rodzaju pracy zdalnej. '@;
      _txt+='Pracownik: %1. Rekordu nie dodano.'@
         [PPSFN.P().OSOBA().NAZWISKO+' '+PPSFN.P().OSOBA().PIERWSZE+' '+PPSFN.P().OSOBA().IDENTYF];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
   {? _ok
   || PPSFT.cntx_psh();
      PPSFT.index('NAZWA');
      PPSFT.prefix(exec('firma','ustawienia'),PPSFT.OPIS,PPSFT.PPSFR,PPSFT.PARTDAY);
      {? ~PPSFT.first()
      || _txt:='Nie dodano zapisu o pracy poza siedzibą firmy, brak typu pracy zdalnej. '@;
         _txt+='Pracownik: %1. Rekordu nie dodano.'@
            [PPSFN.P().OSOBA().NAZWISKO+' '+PPSFN.P().OSOBA().PIERWSZE+' '+PPSFN.P().OSOBA().IDENTYF];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
         _ok*=0
      || PPSFN.PPSFT:=PPSFT.ref()
      ?};
      PPSFT.cntx_pop()
   ?};
   {? PPSFN.PPSFT().OPIS='Przerwa na karmienie' | PPSFN.PPSFT().OPIS='Praca zdalna na część dnia'
   || {? PPSFN.G=time(0,0,0)
      || _txt:='Dla pracy zdalnej na część dnia oraz przerwy na karmienie, '@;
         _txt+='konieczne jest uzupełnienie pola "Godziny robocze". '
               'Dozwolone wartości z przedziału 00:01:00-24:00:00. '@;
         _txt+='Pracownik: %1. Rekordu nie dodano.'@
            [PPSFN.P().OSOBA().NAZWISKO+' '+PPSFN.P().OSOBA().PIERWSZE+' '+PPSFN.P().OSOBA().IDENTYF];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
         _ok*=0
      ?};
      {? PPSFN.G<>time(0,0,0) & (PPSFN.G<time(0,1,0) | PPSFN.G>time(24,0,0))
      || _txt:='Nieprawidłowa wartość pola "Godziny robocze". '
               'Dozwolone wartości z przedziału 00:01:00-24:00:00. '@;
         _txt+='Pracownik: %1. Rekordu nie dodano.'@
            [PPSFN.P().OSOBA().NAZWISKO+' '+PPSFN.P().OSOBA().PIERWSZE+' '+PPSFN.P().OSOBA().IDENTYF];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _ok*=0
      ?}
   ?};
   {? PPSFN.PPSFT().PARTDAY='T'
   || PPSFN.PARTDAY:='T';
      _time:=$PPSFN.G;
      _hour:=_time-3;
      _min:=_time+2;
::    Nie rejestrujemy sekund
      PPSFN.G:=time(#_hour,#_min,0)
   || PPSFN.PARTDAY:='N';
      PPSFN.G:=time(0,0,0)
   ?};
   {? PPSFN.OD>PPSFN.DO
   || _txt:='Data "DO" (%1) nie może być wcześniejsza niż data "OD" (%2). '@[PPSFN.DO$1,PPSFN.OD$1];
      _txt+='Pracownik: %1. Rekordu nie dodano.'@
         [PPSFN.P().OSOBA().NAZWISKO+' '+PPSFN.P().OSOBA().PIERWSZE+' '+PPSFN.P().OSOBA().IDENTYF];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? PPSFN.OD~1<>PPSFN.DO~1
   || _txt:='Data "DO" (%1) nie może być w innym roku niż data "OD" (%2). '@[PPSFN.DO$1,PPSFN.OD$1];
      _txt+='Pracownik: %1. Rekordu nie dodano.'@
         [PPSFN.P().OSOBA().NAZWISKO+' '+PPSFN.P().OSOBA().PIERWSZE+' '+PPSFN.P().OSOBA().IDENTYF];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
      _ok*=0
   ?};
   {? PPSFN.PARTDAY='N' & _ok & _ref=null()
   || _ret:=exec('check','overlap',null(),PPSFN,'OD','DO',2,,,'PARTDATE',exec('firma','ustawienia'),
                 PPSFN.P,PPSFN.PARTDAY);
      {? _ret<>''
      || _txt:=_ret+' Pracownik: %1. Rekordu nie dodano.'@
            [PPSFN.P().OSOBA().NAZWISKO+' '+PPSFN.P().OSOBA().PIERWSZE+' '+PPSFN.P().OSOBA().IDENTYF];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _ok*=0
      ?}
   ?};
:: Konto kosztów nie jest polem wymaganym
   {? (+KK.SYSTEM | KK.ROK_F<>null() | +KK.SYM) & _ref=null()
   || KK.cntx_psh();
      KK.index('UNIK');
      KK.prefix(exec('firma','ustawienia'),KK.SYSTEM,KK.ROK_F,KK.SYM);
      {? ~KK.first()
      || PPSFN.KK:=null();
         _txt:='Nie znaleziono konta kosztów. Rekord dodano bez konta kosztów. Pracownik: %1.'@
            [PPSFN.P().OSOBA().NAZWISKO+' '+PPSFN.P().OSOBA().PIERWSZE+' '+PPSFN.P().OSOBA().IDENTYF];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,15,'SPRAWDŹ DANE'@)
      || PPSFN.KK:=KK.ref()
      ?};
      KK.cntx_pop()
   ?};

   {? _ok
   || {? PPSFN.P
      || {? _ref=null()
         || PPSFN.prefix();
            __record+=(_ret_val:=PPSFN.add(1));
            {? _ret_val
            || _txt:='Dodano zapis o pracy poza siedzibą firmy: %1. Pracownik: %2.'@
                  [PPSFN.OD$1+' - '+PPSFN.DO$1,
                  PPSFN.P().OSOBA().NAZWISKO+' '+PPSFN.P().OSOBA().PIERWSZE+' '+PPSFN.P().OSOBA().IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
            || _txt:='Nie dodano zapisu o pracy poza siedzibą firmy: %1. Pracownik: %2.'@
                  [PPSFN.OD$1+' - '+PPSFN.DO$1,
                  PPSFN.P().OSOBA().NAZWISKO+' '+PPSFN.P().OSOBA().PIERWSZE+' '+PPSFN.P().OSOBA().IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?}
         ?}
      || _txt:='Nie dodano zapisu o pracy poza siedzibą firmy: %1. Brak pracownika.'@
            [PPSFN.OD$1+' - '+PPSFN.DO$1];
         _txt+=' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      ?}
   ?};
   PPSFN.cntx_pop()
?};
~~


\ppsf_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RN
:: OPIS: Dodanie pozycji tabeli PPSF_PO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','PPSF_PO')
|| PPSF_PO.cntx_psh();
   PPSF_PO.prefix();
   _ref:=null();
   {? PPSF_PO.find_tab(1,
         'P',,'=',PPSF_PO.P,
         'OD',,'=',PPSF_PO.OD,
         'PPSF_NO',,'=',PPSF_PO.PPSF_NO
      )
   || _txt:='Istnieje już taki zapis o oświadczeniu pracy poza siedzibą firmy: %1, oświadczenie: %2. Pracownik: %3.'@
         [PPSF_PO.OD$1+' - '+PPSF_PO.DO$1,PPSF_PO.PPSF_NO().KOD,
         PPSF_PO.P().OSOBA().NAZWISKO+' '+PPSF_PO.P().OSOBA().PIERWSZE+' '+PPSF_PO.P().OSOBA().IDENTYF];
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=PPSF_PO.ref()
   ?};
   _ok:=1;

   {? PPSF_PO.PPSF_NO=null()
   || _txt:='Nie dodano zapisu o oświadczeniu pracy poza siedzibą firmy. Nie znaleziono oświadczenia. '@;
      _txt+='Pracownik: %1. Rekordu nie dodano.'@
         [PPSF_PO.P().OSOBA().NAZWISKO+' '+PPSF_PO.P().OSOBA().PIERWSZE+' '+PPSF_PO.P().OSOBA().IDENTYF];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
      _ok*=0
   ?};
:: Akceptacja jeśli wszystkie wymagane zgody zostały udzielone
   {? PPSF_PO.PPSF_NO
   || PPSF_PO.AKCEPT:=exec('ppsf_po_akcept_val','ppsf')
   ?};
   _od:=PPSF_PO.OD;
   _do:=PPSF_PO.DO;
   PPSF_PO.cntx_psh();
   PPSF_PO.index('UNIQUE');
   PPSF_PO.prefix(PPSF_PO.PPSF_NO,PPSF_PO.P);
   {? PPSF_PO.first()
   || {!
      |? {? exec('is','overlap',PPSF_PO,_od,_do) & _ref=null()
            || _txt:='Nie dodano oświadczenia pracy poza siedzibą, '@;
               _txt+='okres obowiązywania oświadczenia nie jest rozłączny z istniejącymi zapisami (%1 - %2). '@
                  [PPSF_PO.OD$1, PPSF_PO.DO$1];
               _txt+='Pracownik: %1. Rekordu nie dodano.'@
                  [PPSF_PO.P().OSOBA().NAZWISKO+' '+PPSF_PO.P().OSOBA().PIERWSZE+' '+PPSF_PO.P().OSOBA().IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
               _ok*=0
            ?};
         PPSF_PO.next()
      !}
   ?};
   PPSF_PO.cntx_pop();
   {? PPSF_PO.WYC='T'
   || {? PPSF_PO.DO=date(0,0,0)
      || _txt:='Pole "Data wycofania" musi zostać wypełnione. '@;
         _txt+='Pracownik: %1. Rekordu nie dodano.'@
            [PPSF_PO.P().OSOBA().NAZWISKO+' '+PPSF_PO.P().OSOBA().PIERWSZE+' '+PPSF_PO.P().OSOBA().IDENTYF];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
         _ok*=0
      ?};
      {? PPSF_PO.DO<>date(0,0,0) & PPSF_PO.DO<PPSF_PO.OD
      || _txt:='"Data wycofania" nie może być wcześniejsza niż w polu "Data oświadczenia". '@;
         _txt+='Pracownik: %1. Rekordu nie dodano.'@
            [PPSF_PO.P().OSOBA().NAZWISKO+' '+PPSF_PO.P().OSOBA().PIERWSZE+' '+PPSF_PO.P().OSOBA().IDENTYF];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _ok*=0
      ?}
   || PPSF_PO.DO:=date(0,0,0)
   ?};

   {? _ok
   || {? PPSF_PO.P
      || {? _ref=null()
         || PPSF_PO.prefix();
            __record+=(_ret_val:=PPSF_PO.add(1));
            {? _ret_val
            || _txt:='Dodano zapis o oświadczeniu pracy poza siedzibą firmy: %1, oświadczenie: %2. Pracownik: %3.'@
                  [PPSF_PO.OD$1+' - '+PPSF_PO.DO$1,PPSF_PO.PPSF_NO().KOD,
                  PPSF_PO.P().OSOBA().NAZWISKO+' '+PPSF_PO.P().OSOBA().PIERWSZE+' '+PPSF_PO.P().OSOBA().IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
            || _txt:='Nie dodano zapisu o oświadczeniu pracy poza siedzibą firmy: %1, oświadczenie: %2. Pracownik: %3.'@
                  [PPSF_PO.OD$1+' - '+PPSF_PO.DO$1,PPSF_PO.PPSF_NO().KOD,
                  PPSF_PO.P().OSOBA().NAZWISKO+' '+PPSF_PO.P().OSOBA().PIERWSZE+' '+PPSF_PO.P().OSOBA().IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?}
         ?}
      || _txt:='Nie dodano zapisu o oświadczeniu pracy poza siedzibą firmy: %1, oświadczenie: %2. Brak pracownika.'@
            [PPSF_PO.OD$1+' - '+PPSF_PO.DO$1,PPSF_PO.PPSF_NO().KOD];
         _txt+=' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      ?}
   ?};
   PPSF_PO.cntx_pop()
?};
~~


\kot_test
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RN
:: OPIS: Dodanie pozycji tabeli KOT_TEST
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__linia+=1;
{? exec('wymag','edi_ka','KOT_TEST')
|| KOT_TEST.cntx_psh();
   KOT_TEST.prefix();
   _ref:=null();
   {? KOT_TEST.find_tab(1,
         'OSOBA',,'=',KOT_TEST.OSOBA,
         'DATA',,'=',KOT_TEST.DATA,
         'GODZ',,'=',KOT_TEST.GODZ,
         'MIEJSCE',,'=',KOT_TEST.MIEJSCE,
         'BADA',,'=',KOT_TEST.BADA
      )
   || _txt:='Istnieje już taki zapis o kontroli trzeźwości. Data badania: %1 o godzinie: %2, miejsce: %3. Osoba: %4.'@
         [KOT_TEST.DATA$1,KOT_TEST.GODZ$1,KOT_TEST.MIEJSCE,
         KOT_TEST.OSOBA().NAZWISKO+' '+KOT_TEST.OSOBA().PIERWSZE+' '+KOT_TEST.OSOBA().IDENTYF];
      _txt+=' %1'['Rekordu nie dodano.'@];
      exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,184,'JUŻ JEST W BAZIE'@);
      _ref:=KOT_TEST.ref()
   ?};
   _ok:=1;

   {? _ref=null()
   || {? KOT_TEST.BADA<>'O' & KOT_TEST.BADA<>'P'
      || _txt:='Nie dodano zapisu o kontroli trzeźwości. Błędna wartość ("%1") pola "Badanie przeprowadził". '
               'Dostępne wartości: P - Pracodawca lub O - Organ upoważniony. '@[KOT_TEST.BADA];
         _txt+='Osoba: %1. Rekordu nie dodano.'@
            [KOT_TEST.OSOBA().NAZWISKO+' '+KOT_TEST.OSOBA().PIERWSZE+' '+KOT_TEST.OSOBA().IDENTYF];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _ok*=0
      ?};
      {? KOT_TEST.ODMOWA<>'N' & KOT_TEST.ODMOWA<>'T'
      || _txt:='Nie dodano zapisu o kontroli trzeźwości. Błędna wartość ("%1") pola "Odmowa badania". '
               'Dostępne wartości: T - Tak lub N - Nie. '@[KOT_TEST.ODMOWA];
         _txt+='Osoba: %1. Rekordu nie dodano.'@
            [KOT_TEST.OSOBA().NAZWISKO+' '+KOT_TEST.OSOBA().PIERWSZE+' '+KOT_TEST.OSOBA().IDENTYF];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,5,'NIEPRAWIDŁOWA WARTOŚĆ'@);
         _ok*=0
      ?};
      {? KOT_TEST.ODMOWA='N' & KOT_URZA.KOT_JM=null()
      || _txt:='Nie dodano zapisu o kontroli trzeźwości. Nie znaleziono jednostki miary. '@;
         _txt+='Osoba: %1. Rekordu nie dodano.'@
            [KOT_TEST.OSOBA().NAZWISKO+' '+KOT_TEST.OSOBA().PIERWSZE+' '+KOT_TEST.OSOBA().IDENTYF];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
         _ok*=0
      ?};
      {? KOT_URZA.KOT_JM<>null()
      || KOT_URZA.cntx_psh();
         KOT_URZA.index('UNIQ');
         KOT_URZA.prefix(KOT_URZA.NAZ,KOT_URZA.KOT_JM,KOT_URZA.DATA);
         {? ~KOT_URZA.first()
         || {? KOT_TEST.ODMOWA='N'
            || _txt:='Nie dodano zapisu o kontroli trzeźwości. Nie znaleziono urządzenia do badania trzeźwości. '@;
               _txt+='Osoba: %1. Rekordu nie dodano.'@
                  [KOT_TEST.OSOBA().NAZWISKO+' '+KOT_TEST.OSOBA().PIERWSZE+' '+KOT_TEST.OSOBA().IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
               _ok*=0
            || _txt:='Nie znaleziono urządzenia do badania trzeźwości. '
                     'W przypadku "Odmowy badania" urządzenie nie jest wymagane.'@;
               _txt+='Osoba: %1. Rekord dodano bez "Urządzenia".'@
                  [KOT_TEST.OSOBA().NAZWISKO+' '+KOT_TEST.OSOBA().PIERWSZE+' '+KOT_TEST.OSOBA().IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,15,'SPRAWDŹ DANE'@)
            ?}
         || KOT_TEST.KOT_URZA:=KOT_URZA.ref();
            {? KOT_URZA.KOT_JM().KOT_RODZ().KOD='ALKO' & KOT_TEST.WYNIK<0
            || _txt:='Nie dodano zapisu o kontroli trzeźwości. Wartość pomiaru musi być większa lub równa 0. '@;
               _txt+='Osoba: %1. Rekordu nie dodano.'@
                  [KOT_TEST.OSOBA().NAZWISKO+' '+KOT_TEST.OSOBA().PIERWSZE+' '+KOT_TEST.OSOBA().IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
               _ok*=0
            ?}
         ?};
         KOT_URZA.cntx_pop()
      ?};
      {? KOT_TEST.ODMOWA='N'
      || {? KOT_TEST.WYNIK_D=date(0,0,0) & (KOT_TEST.WYNIK>0 | KOT_TEST.TEST='T' | KOT_TEST.TEST='N')
         || _txt:='Nie dodano zapisu o kontroli trzeźwości. Nie wypełniono daty rejestracji badania. '@;
            _txt+='Osoba: %1. Rekordu nie dodano.'@
               [KOT_TEST.OSOBA().NAZWISKO+' '+KOT_TEST.OSOBA().PIERWSZE+' '+KOT_TEST.OSOBA().IDENTYF];
            exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@);
            _ok*=0
         ?}
      || KOT_TEST.WYNIK:=0;
         KOT_TEST.TEST:=''
      ?}
   ?};

   {? _ok
   || {? KOT_TEST.OSOBA
      || {? _ref=null()
         || KOT_TEST.prefix();
            __record+=(_ret_val:=KOT_TEST.add(1));
            {? _ret_val
            || {? +KOT_TEST.memo_txt(,0,'NOTATKA')
               || KOT_TEST.memo_put(,'NOTATKA')
               ?};
               _txt:='Dodano zapis o kontroli trzeźwości. Data badania: %1 o godzinie %2, miejsce: %3. Osoba: %4.'@
                  [KOT_TEST.DATA$1,KOT_TEST.GODZ$1,KOT_TEST.MIEJSCE,
                  KOT_TEST.OSOBA().NAZWISKO+' '+KOT_TEST.OSOBA().PIERWSZE+' '+KOT_TEST.OSOBA().IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,38,'ZAPISANE REKORDY'@)
            || _txt:='Nie dodano zapisu o kontroli trzeźwości. Data badania: %1 o godzinie %2, miejsce: %3. Osoba: %4.'@
                  [KOT_TEST.DATA$1,KOT_TEST.GODZ$1,KOT_TEST.MIEJSCE,
                  KOT_TEST.OSOBA().NAZWISKO+' '+KOT_TEST.OSOBA().PIERWSZE+' '+KOT_TEST.OSOBA().IDENTYF];
               exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,4,'INNE BŁĘDY'@)
            ?}
         ?}
      || _txt:='Nie dodano zapisu o kontroli trzeźwości. Data badania: %1 o godzinie %2, miejsce: %3. Brak osoby.'@
            [KOT_TEST.DATA$1,KOT_TEST.GODZ$1,KOT_TEST.MIEJSCE];
         _txt+=' %1'['Rekordu nie dodano.'@];
         exec('add_kom','#message','Wiersz: '@+$__linia+' '+_txt,81,'BRAK WARTOŚCI'@)
      ?}
   ?};
   KOT_TEST.cntx_pop()
?};
~~


:Sign Version 2.0 jowisz:1045 2024/01/24 10:34:03 7f07750b0dc6c5d2ff4dc1e42187a1d7f03be7b4060e432aecaefd16498b0139bb9fcea7563d961558ef536a331874317ee7b03d84f6d86c7f39d826bfba9143aa77be05064c083738c1bc5f7fed9f797da37fdd750b9360caa0401d0eb8c3355970d72d7b49a1f9f1d7704b248e6f1ec31a7ed08d425759f90d5ee337fdaa08
