:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: odpady_keo.fml
:: Utworzony: 23.04.2021
:: Autor: TS
::======================================================================================================================
:: Zawartość: Obsługa kart ewidencji odpadów
::======================================================================================================================


\typ_keo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Typ karty 'KEO'
::----------------------------------------------------------------------------------------------------------------------
'KEO'


\typ_keok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Typ karty: 'KEOK'
::----------------------------------------------------------------------------------------------------------------------
'KEOK'


\typ_keon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Typ karty: 'KEON'
::----------------------------------------------------------------------------------------------------------------------
'KEON'


\typ_keo_generated
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: KEO wytworzone
::----------------------------------------------------------------------------------------------------------------------
'keo_generated'


\typ_keo_excavated
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: KEO wydobyte
::----------------------------------------------------------------------------------------------------------------------
'keo_excavated'


\typ_keo_collected
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: KEO przyjęte
::----------------------------------------------------------------------------------------------------------------------
'keo_collected'


\typ_keo_treated
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: KEO przetwarzane
::----------------------------------------------------------------------------------------------------------------------
'keo_treated'


\typ_keo_forwarded
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: KEO przekazane
::----------------------------------------------------------------------------------------------------------------------
'keo_forwarded'


\typ_keok_collected
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: KEOK odbiór
::----------------------------------------------------------------------------------------------------------------------
'keok_collected'


\typ_keok_received
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: KEOK przyjęte
::----------------------------------------------------------------------------------------------------------------------
'keok_received'


\typ_keok_processed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: KEOK Przetwarzane
::----------------------------------------------------------------------------------------------------------------------
'keok_processed'


\typ_keok_transferred
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: KEOK przekazane
::----------------------------------------------------------------------------------------------------------------------
'keok_transferred'


\typ_keon_item
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: KEON pozycja
::----------------------------------------------------------------------------------------------------------------------
'keon_item'


\rodz_kpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Wpis dokonywany na podstawie karty przekazania odpadów
::----------------------------------------------------------------------------------------------------------------------
'BASED_ON_KPO_CARD'


\rodz_kpok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Wpis dokonywany na podstawie karty przekazania odpadów komunalnych
::----------------------------------------------------------------------------------------------------------------------
'BASED_ON_KPOK_CARD'


\rodz_rp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Przywóz do RP
::----------------------------------------------------------------------------------------------------------------------
'IMPORT'


\rodz_rpe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Wywóz poza RP
::----------------------------------------------------------------------------------------------------------------------
'EXPORT'


\rodz_zw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Posiadacz odpadów zwolniony z obowiązku prowadzenia ewidencji odpadów
::----------------------------------------------------------------------------------------------------------------------
'NOT_OBLIGATED_WASTE_HOLDER'


\rodz_fiz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Przekazane osobom fizycznym lub innym jednostkom organizacyjnym niebędącym przedsiębiorcami
::----------------------------------------------------------------------------------------------------------------------
'TO_PHISICAL_PERSONS'


\keop_spg_rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Sposób gospodarowania - Recykling
::----------------------------------------------------------------------------------------------------------------------
'Recykling'


\keop_spg_wtn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Sposób gospodarowania - Wypełnienie terenów niekorzystnie przekształconych
::----------------------------------------------------------------------------------------------------------------------
'Wypełnienie terenów'


\keop_spg_ppu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Sposób gospodarowania - Przygotowanie do ponownego użycia
::----------------------------------------------------------------------------------------------------------------------
'Przyg. do ponownego użycia'


\keop_spg_ipod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Sposób gospodarowania - Inny proces odzysku
::----------------------------------------------------------------------------------------------------------------------
'Inny proces odzysku'


\keop_spg_un
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Sposób gospodarowania - Unieszkodliwianie
::----------------------------------------------------------------------------------------------------------------------
'Unieszkodliwianie'


\keop_rodpr_odz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Rodzaj procesu przetwarzania - Odzysk
::----------------------------------------------------------------------------------------------------------------------
'R'


\keop_rodpr_uni
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Rodzaj procesu przetwarzania - Unieszkodliwianie
::----------------------------------------------------------------------------------------------------------------------
'D'


\keop_dzial_dealer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Typ działalności - Sprzedawca odpadów (dealer)
::----------------------------------------------------------------------------------------------------------------------
'Sprzedawca'


\keop_dzial_broker
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Typ działalności - Pośrednik w obrocie odpadami (broker)
::----------------------------------------------------------------------------------------------------------------------
'Pośrednik'


\keop_r_dok_kpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Rodzaj dokumentu - Karta przekazania odpadów
::----------------------------------------------------------------------------------------------------------------------
'KPO'


\keop_r_dok_kpok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Rodzaj dokumentu - Karta przekazania odpadów komunalnych
::----------------------------------------------------------------------------------------------------------------------
'KPOK'


\keop_sr_tran_dro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Rodzaj środka transportu - Drogowy
::----------------------------------------------------------------------------------------------------------------------
'R'


\keop_sr_tran_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Rodzaj śrdoka transportu - Kolejowy
::----------------------------------------------------------------------------------------------------------------------
'T'


\keop_sr_tran_mor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Rodzaj śrdoka transportu - Morski
::----------------------------------------------------------------------------------------------------------------------
'S'


\keop_sr_tran_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Rodzaj śrdoka transportu - Powietrzny
::----------------------------------------------------------------------------------------------------------------------
'A'


\keop_sr_tran_wod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Rodzaj śrdoka transportu - Wodny-śródlądowy
::----------------------------------------------------------------------------------------------------------------------
'W'


\keo_bdo_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Importuje nagłówki KEO z rejestru BDO, nie nadpisuje kart, które już są w ERP - funkcja wołana z okna KEO
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

:: Import dla podmiotu i miejsca prowadzenia działalności wybranych w kontekście pracy
_tab:=tab_tmp(
   ,'TYP','STRING[4]','Typ'@
   ,'ROK','INTEGER','Rok'@
   ,'ITEMS','INTEGER','Importować wpisy?'@
);
_red:=_tab.mk_edit('Import kart ewidencji odpadów'@,,'keoimport');
_tab.win_ewin(_red,VAR,'KPO_KP');
_tab.win_esep(_red,'Parametry importu'@);
_tab.efld_opt(_red,'editable=grayed',VAR,'POD');
_tab.efld_opt(_red,'editable=grayed',VAR,'MPD');
_tab.efld_opt(_red,'mark=0',VAR,'POD');
_tab.efld_opt(_red,'mark=0',VAR,'MPD');
_tab.win_efld(_red,,'ROK');
_tab.efld_opt(_red,'editable=grayed',,'ROK');
_tab.win_efld(_red,,'TYP',,,,,,,,,'radio-buttons','left_label=1',
   'Karty ewidencji odpadów'@,"exec('typ_keo','odpady_keo')",
   'Karty ewidencji odpadów komunalnych'@,"exec('typ_keok','odpady_keo')",
   'Karty ewidencji odpadów niebezpiecznych'@,"exec('typ_keon','odpady_keo')"
);
_tab.efld_opt(_red,'editable=grayed',,'TYP');
_tab.win_efld(_red,,'ITEMS',,,,,,,,,'check-box','check_label="%1"'['Tak, zaimportowane zostaną również wpisy.'@],"1","0");
exec('ok_esc','#window',_tab,_red);

_valid:="1";
_tab.blank();
_tab.ROK:=ST.AR;
_tab.TYP:=VAR.A_TABKEO;
VAR.POD:=_env.KH;
VAR.MPD:=_env.KH_ODB;
_tab.win_edit(_red);
{? _tab.edit(_valid)
|| _type:=_tab.TYP;
   _rok:=_tab.ROK;
   _items:=_tab.ITEMS;
   KOMM.init(250,,'Import kart ewidencji odpadów'@);
   _count:=exec('keo_bdo_import_core','odpady_keo',_rok,_type,1,_items);
   {? _count>0 || KOMM.add('Liczba zaimportowanych kart: %1'@[$_count]) ?};
   KOMM.select()
?};
~~


\keo_bdo_import_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Importuje nagłówki KEO z rejestru BDO, nie nadpisuje kart, które już są w ERP
::       Właściwy import wykorzystywany w funkcji importu z okna KEO oraz w funkcjach importu w tle (zadania serwisowe)
::       Do działania wymagane przekazanie środowiska params_get().env zawierającego m.in. Podmiot i MPD
::          utworzonego za pomocą formuły exec('env_create','odpady')
::       Wszelkie komunikaty dodane są do KOMM-a, którego trzeba zainicjować i wyświetlić na zewnąrz tej funkcji
::   WE: [_a] - rok [NUMBER] - domyślnie date()~1
::       [_b] - typ kart: ['KEO'], 'KEOK', 'KEON' - wynik formuły exec('typ_*','odpady_keo')
::       [_c] - czy wyświetlać progres [1]/0
::       [_d] - czy pobierać również wpisy [0]/1
::   WY: liczba zaimportowanych kart
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_result:=0;

{? var_pres('_a')=type_of(0)
|| _rok:=_a
|| FUN.emsg('Błędnie podany argument %1 funkcji.'@['_a']);
   return(_result)
?};
_type:={? var_pres('_b')=type_of('') || _b || exec('typ_keo','odpady_keo') ?};
_progress:={? var_pres('_c')=type_of(0) || _c || 1 ?};
_add_items:={? var_pres('_d')=type_of(0) || _d || 0 ?};

KEO.cntx_psh(); KEOP.cntx_psh();
KEO.prefix(); KEOP.prefix();

_page:=1;

:: Podręczny JMAN
_jman:=exec('json_man','__jsonm','{}');

{!
|? {? _type=exec('typ_keo','odpady_keo')
   || _obj:=exec('Keo_search','bdo_api',_page,50,'','/%1/'[$_rok],'')
   |? _type=exec('typ_keok','odpady_keo')
   || _obj:=exec('Keok_search','bdo_api',_page,50,'','/%1/'[$_rok],'')
   |? _type=exec('typ_keon','odpady_keo')
   || _obj:=exec('Keon_search','bdo_api',_page,50,'','/%1/'[$_rok],'')
   ?};

   _hasNextPage:=0;

   {? _obj.STATUS=200
   || _response:=json_parse(_obj.DATA);
      _hasNextPage:=_response.hasNextPage;
      _totalPagesNumber:=_response.totalPagesNumber;
      _items:=_response.items;
      _size:=obj_len(_items);
      {? type_of(_items)>100 & _size>0
      || {? _progress
         || FUN.prg_start(
               _size,
               'Importowanie %1 kart ewidencji odpadów z BDO (część %2 z %3).'@[$_size,$_page,$_totalPagesNumber]
            )
         ?};

         {! _it:=1 .. _size
         |! _keoId:=
               {? _type=exec('typ_keo','odpady_keo') || _items[_it].keoId
               |? _type=exec('typ_keok','odpady_keo') || _items[_it].keokId
               |? _type=exec('typ_keon','odpady_keo') || _items[_it].keonId
               ?};
            _keo:=exec('FindInSet','#table','KEO','BDO_ID',_keoId,,,1);
            {? _keo=null()
            ||
::       Część danych bezpośrednio z pól obiektu _item
::  "items": [
::    {
::      "keokId": "string",
::      "cardNumber": "string",
::      "wasteCode": "string",
::      "provinceRegionCommune": "string",
::      "createdByUser": "string",
::      "canBeDeleted": true,
::      "wasteCodeExtended": true,
::      "wasteCodeExtendedDescription": "string",
::      "hazardousWasteReclassification": true,
::      "hazardousWasteReclassificationDescription": "string"
::    }
::  ]
               _cardNumber:=_items[_it].cardNumber;
               _waste:=_items[_it].wasteCode;
::               {? _type='Keok' || _province:=_items[_it].provinceRegionCommune || _province:='' ?};

::
::       Reszty danych trzeba poszukać przez zapytanie o konkretną kartę (GET)
::{
::  "keoId": "string",
::  "wasteCodeId": 0,
::  "cardNumber": "string",
::  "createdByUserId": "string",
::  "isWasteGenerating": true,
::  "isWasteCollecting": true,
::  "isSalvage": true,
::  "isNeutralization": true,
::  "year": 0,
::  "wasteMass": 0,
::  "canBeDeleted": true,
::  "wasteCodeExtended": true,
::  "wasteCodeExtendedDescription": "string",
::  "hazardousWasteReclassification": true,
::  "hazardousWasteReclassificationDescription": "string"
::}
::{
::  "keokId": "string",
::  "eupId": "string",
::  "cardNumber": "string",
::  "wasteCodeId": 0,
::  "wasteCode": "string",
::  "wasteCodeName": "string",
::  "year": 0,
::  "wasteOriginTerytId": "string",
::  "wasteOriginAddressHtml": "string",
::  "wasteOriginAddressFormatted": "string",
::  "initialWasteMass": 0,
::  "isWasteReceive": true,
::  "isWasteCollecting": true,
::  "isSalvage": true,
::  "isNeutralization": true,
::  "canBeEdited": true,
::  "wasteCodeExtended": true,
::  "wasteCodeExtendedDescription": "string",
::  "hazardousWasteReclassification": true,
::  "hazardousWasteReclassificationDescription": "string"
::}
::{
::  "keonId": "string",
::  "eupId": "string",
::  "cardNumber": "string",
::  "wasteCodeId": 0,
::  "wasteCodeExtended": true,
::  "wasteCodeExtendedDescription": "string",
::  "year": 0,
::  "companyId": "string"
::}
               _can_continue:=1;
               _obj1:=
                  {? _type=exec('typ_keo','odpady_keo')
                  || exec('Keo_get','bdo_api',_keoId)
                  |? _type=exec('typ_keok','odpady_keo')
                  || exec('Keok_get','bdo_api',_keoId)
                  |? _type=exec('typ_keon','odpady_keo')
                  || exec('Keon_get','bdo_api',_keoId)
                  ?};
               {? _obj1.STATUS=200
               ||
                  _jman.load(_obj1.DATA);
::                  _jman.view();

                  _card:=json_parse(_obj1.DATA);
                  _wasteCodeId:=_card.wasteCodeId;
                  _year:=_card.year;
                  _wasteMass:=
                     {? var_pres('initialWasteMass',_card)=type_of(0) || _card.initialWasteMass
                     |? var_pres('wasteMass',_card)=type_of(0) || _card.wasteMass
                     || 0
                     ?};
                  _wasteOriginTerytId:=
                     {? var_pres('wasteOriginTerytId',_card)=type_of('') || _card.wasteOriginTerytId || '' ?};
                  _isWasteGenerating:={? var_pres('isWasteGenerating',_card)=type_of(0) || _card.isWasteGenerating || 0 ?};
                  _isWasteReceive:={? var_pres('isWasteReceive',_card)=type_of(0) || _card.isWasteReceive || 0 ?};
                  _isWasteCollecting:={? var_pres('isWasteCollecting',_card)=type_of(0) || _card.isWasteCollecting || 0 ?};
                  _isSalvage:={? var_pres('isSalvage',_card)=type_of(0) || _card.isSalvage || 0 ?};
                  _isNeutralization:={? var_pres('isNeutralization',_card)=type_of(0) || _card.isNeutralization || 0 ?};
                  _wasteCodeExtended:={? var_pres('wasteCodeExtended',_card)=type_of(0) || _card.wasteCodeExtended || 0 ?};
                  _wasteCodeExtendedDescription:={? var_pres('wasteCodeExtendedDescription',_card)=type_of('') || _card.wasteCodeExtendedDescription || '' ?};
                  _hazardousWasteReclassification:=
                     {? _jman.typeOf('hazardousWasteReclassification',1)=_jman.Const.TYPE.BOOLEAN
                     || _jman.getValue('hazardousWasteReclassification')
                     || 0
                     ?};
                  _hazardousWasteReclassDesc:=
                     {? _jman.typeOf('hazardousWasteReclassificationDescription',1)=_jman.Const.TYPE.STRING
                     || _jman.getValue('hazardousWasteReclassificationDescription')
                     || ''
                     ?};
                  obj_del(_card)
               || KOMM.error('Nie pobrano danych karty: %1.'@[_cardNumber]+' '+_obj1.MESSAGE,0);
                  _can_continue:=0
               ?};
::
::               {? _can_continue>0
::               || _obj1:=exec('%1_printingpage%2'[_type,{? _cardSubtype='' || '' || '_'+(-_cardSubtype) ?}],'bdo_api',
::                     _kpoId
::                  );
::                  {? _obj1.STATUS=200
::                  || _card:=json_parse(_obj1.DATA);
::                     _senderEupNumber:=_card.senderEupNumber;
::                     _receiverEupNumber:=_card.receiverEupNumber;
::                     _isWasteGenerating:={? var_pres('isWasteGenerating',_card)=type_of(0) || _card.isWasteGenerating || 0 ?};
::                     _wasteGeneratedTerytPk:={? var_pres('wasteGeneratedTerytPk',_card)=type_of('') || _card.wasteGeneratedTerytPk || '' ?};
::                     _wasteGeneratingAdditionalInfo:={? var_pres('wasteGeneratingAdditionalInfo',_card)=type_of('') || _card.wasteGeneratingAdditionalInfo || '' ?};
::                     obj_del(_card)
::                  || _cardNumber:={? var_pres('cardNumber',_items[_it])=type_of('') || _item[_it].cardNumber || '' ?};
::                     KOMM.error('Nie pobrano danych karty: %1.'@[_cardNumber]+' '+_obj1.MESSAGE,0);
::                     _can_continue:=0
::                  ?};
::                  obj_del(_obj1)
::               ?};

::             Mamy wszystko
               {? _can_continue>0
               ||
                  {? type_of(_wasteCodeId)=type_of(0)
                  || _wasteCode:=exec('FindInSet','#table','ODP','BDO_ID',_wasteCodeId);
                     {? _wasteCode=null()
                     || KOMM.msg(
                           'Karta \'%1\': brak odpadu %2 (%3) powiązanego z bazą BDO.'@
                           [_cardNumber,_items[_it].wasteCode,$_wasteCodeId],
                           0
                        );
                        _can_continue:=0
                     ?}
                  || _wasteCode:=null()
                  ?};

::                Właściwe działanie - dodajemy kartę z przyległościami
                  {? _can_continue>0 & _year=_rok
                  || KEO.blank();
                     KEO.ROK:=_year;
                     KEO.KH_ODB:=VAR.MPD;
                     KEO.TYP:=_type;
                     KEO.BDO_ID:=_keoId;
                     KEO.SYM:=_cardNumber;
                     KEO.ODP:=_wasteCode;
                     KEO.MASA:=_wasteMass;
                     KEO.KOD_G:=_wasteOriginTerytId;
                     {? KEO.KOD_G<>'' || KEO.NAZ_G:=exec('WyszukajGmine','teryt',KEO.KOD_G) ?};
                     KEO.IS_GENE:={? _isWasteGenerating || 'T' || 'N' ?};
                     KEO.IS_RECV:={? _isWasteReceive || 'T' || 'N' ?};
                     KEO.IS_COLL:={? _isWasteCollecting || 'T' || 'N' ?};
                     KEO.IS_SLVG:={? _isSalvage || 'T' || 'N' ?};
                     KEO.IS_NEUT:={? _isNeutralization || 'T' || 'N' ?};
                     KEO.EX:={? _wasteCodeExtended || 'T' || 'N' ?};
                     KEO.EX_DESC:=_wasteCodeExtendedDescription;
                     KEO.HAZ:={? _hazardousWasteReclassification || 'T' || 'N' ?};
                     KEO.HAZ_DESC:=_hazardousWasteReclassDesc;
::                   Pole wygląda na nie używane po stronie portalu
::                     KEO.INSTALLN:='';
                     KEO.BDO_UTC:=utc_get();

                     {? KEO.add() & _add_items
                     || _obj1.log_update('|%1'[KEO.uidref()]);
                        {? _type=exec('typ_keo','odpady_keo')
                        || exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),exec('typ_keo_generated','odpady_keo'),0);
                           exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),exec('typ_keo_excavated','odpady_keo'),0);
                           exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),exec('typ_keo_collected','odpady_keo'),0);
                           exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),exec('typ_keo_treated','odpady_keo'),0);
                           exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),exec('typ_keo_forwarded','odpady_keo'),0)
                        |? _type=exec('typ_keok','odpady_keo')
                        || exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),exec('typ_keok_collected','odpady_keo'),0);
                           exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),exec('typ_keok_received','odpady_keo'),0);
                           exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),exec('typ_keok_processed','odpady_keo'),0);
                           exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),exec('typ_keok_transferred','odpady_keo'),0)
                        |? _type=exec('typ_keon','odpady_keo')
                        || exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),exec('typ_keon_item','odpady_keo'),0,'true','false');
                           exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),exec('typ_keon_item','odpady_keo'),0,'false','true')
                        ?}
                     ?}
                  ?}
               ?};
               obj_del(_obj1)
            ?};
            {? _progress || FUN.prg_next() ?}
         !};
         {? _progress || FUN.prg_stop() ?}
      || KOMM.msg('Brak danych do zaimportowania.'@,0)
      ?};
      obj_del(_response);
      {? var_pres('_items')>100 || obj_del(_items) ?}

   || KOMM.error('Nie pobrano listy kart.'@+'\n'+_obj.MESSAGE,0)
   ?};

   obj_del(_obj);
   _page+=1;
   _hasNextPage
!};

KEO.cntx_pop(); KEOP.cntx_pop();

_result


\mor_info_keo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Wyświetla szczegółowe informacje o KEO/KEOK/KEON bezpośrednio z bazy BDO
::       Kontekst wywołania - bieżący rekord KPO
::----------------------------------------------------------------------------------------------------------------------
exec('mor_info_keo_core','odpady_keo',KEO.TYP,KEO.BDO_ID)


\mor_info_keo_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Wyświetla szczegółowe informacje o KEO/KEOK/KEON bezpośrednio z bazy BDO - funkcja podstawowa
::   WE: _a - typ karty (KEO.TYP)
::       _b - identyfikator karty (KEO.BDO_ID)
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
_id:=_b;

{? _typ=exec('typ_keo','odpady_keo')
|| _obj:=exec('Keo_printingpage','bdo_api',_id)
|? _typ=exec('typ_keok','odpady_keo')
|| _obj:=exec('Keok_printingpage','bdo_api',_id)
|? _typ=exec('typ_keon','odpady_keo')
|| _obj:=exec('Keon_printingpage','bdo_api',_id)
?};
_obj.log_update('|%1'[KEO.uidref()]);

{? _obj.STATUS=200
|| _jman:=exec('json_man','__jsonm',_obj.DATA);
   _jman.view()
?};
~~


\keo_bdo_pdf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Pobiera KEO/KEOK/KEON jako PDF z rejestru BDO
::   WE: [_a] czy wyświetlać komunikaty FUN (o ile akcja nie grupowa) ([1]/0)
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

{? var_pres('_a')=type_of(0) || _dialog:=_a || _dialog:=1 ?};

_selected:=(VAR.GRUPA='T' | _dialog=0);

_keoId:=KEO.BDO_ID;
{? _keoId<>''
|| {? KEO.TYP=exec('typ_keo','odpady_keo')
   || _obj:=exec('keo_printingpage','bdo_api',_keoId);
      {? _obj.STATUS=200
      || exec('bdo_pdf','odpady',_obj.DATA,KEO,'PDF_KEO','k_%1.pdf'[gsub(KEO.SYM,'/','_')])
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}
   |? KEO.TYP=exec('typ_keok','odpady_keo')
   || _obj:=exec('keok_printingpage','bdo_api',_keoId);
      {? _obj.STATUS=200
      || exec('bdo_pdf','odpady',_obj.DATA,KEO,'PDF_KEO','k_%1.pdf'[gsub(KEO.SYM,'/','_')])
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}
   |? KEO.TYP=exec('typ_keon','odpady_keo')
   || _obj:=exec('keon_printingpage','bdo_api',_keoId);
      {? _obj.STATUS=200
      || exec('bdo_pdf','odpady',_obj.DATA,KEO,'PDF_KEO','k_%1.pdf'[gsub(KEO.SYM,'/','_')])
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}
   ?};
   _obj.log_update('|%1'[KEO.uidref()])
|| KOMM.msg('Karta \'%1\' nie została wysłana do BDO (brak identyfikatora).'@[KEO.SYM],~_selected)
?};
~~


\keo_bdo_pdf_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Pobiera KEO (KEOK) jako PDF z rejestru BDO - przed grupą rekordów
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy pobrać dla zaznaczonych kart PDF z bazy BDO?'@)
|| VAR.GRUPA:='T';
   KOMM.init(,,'Pobieranie PDF z bazy BDO'@,'');
   sel_nchk();
   1
|| 0
?}


\koe_bdo_pdf_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Pobiera KEO (KEOK) jako PDF z rejestru BDO - po grupie rekordów
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
VAR.GRUPA:='N';
~~


\keo_bdo_prn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Drukuje KEO (KEOK) PDF
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_tab:=params_get().env.TAB_PDF;
{? VAR.GRUPA<>'T' || _tab.erase() ?};
:: Obecnie zawsze ściągana jest nowa wersja wydruku
{? 1
::   KEO.PDF_KEO=null()
|| exec('keo_bdo_pdf','odpady_keo',0)
?};
{? KEO.PDF_KEO<>null()
|| _tab.PDF:=KEO.PDF_KEO;
   _tab.add()
?};
{? VAR.GRUPA<>'T'
|| params_set(params_get());
   rep_exec('luo_bdo_printingpage')
?};
~~


\keo_bdo_prn_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Drukuje KEO (KEOK) jako PDF z rejestru BDO - przed grupą rekordów
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy wydrukować dla zaznaczonych kart PDF z bazy BDO?'@)
|| VAR.GRUPA:='T';
   KOMM.init(,,'Wydruk potwierdzeń'@,'');
   _tab:=params_get().env.TAB_PDF;
   _tab.erase();
   sel_nchk();
   1
|| 0
?}


\keo_bdo_prn_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Drukuje KEO (KEOK) jako PDF z rejestru BDO - po grupie rekordów
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
VAR.GRUPA:='N';
params_set(params_get());
rep_exec('luo_bdo_printingpage');
~~


\keo_bdo_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Podgląd KEO (KEOK) w PDF
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

:: Obecnie zawsze ściągana jest nowa wersja wydruku
{? 1
::   KEO.PDF_KEO=null() & FUN.ask('Brak wydruku karty \'%1\'.\nCzy pobrać z BDO?'@[KEO.SYM])
|| exec('keo_bdo_pdf','odpady_keo')
?};
{? KEO.PDF_KEO<>null()
|| exec('bl_view','#blob',KEO,'PDF_KEO')
?};
~~


\keo_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Dodanie nagłówka KEO/KEOK/KEON
::----------------------------------------------------------------------------------------------------------------------
{? ST.AR<>date()~1
|| FUN.info('Nagłówek karty ewidencji odpadów można zakładać wyłącznie na okres bieżący (zgodny z aktualnym rokiem).'@)
|| KEO.blank();
   KEO.ROK:=ST.AR;
   KEO.KH_ODB:=VAR.MPD;
   KEO.TYP:=VAR.A_TABKEO;
   exec('keo_set_win','odpady_keo',1);
   {? KEO.edit("exec('keo_chk','odpady_keo',1)")
   || {? KEO.add()
      || exec('keo_nr_nadaj','odpady_keo');
         KEO.put()
      ?}
   ?}
?};
~~


\keo_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Poprawienie nagłówka KEO/KEOK/KEON
::----------------------------------------------------------------------------------------------------------------------
{? exec('keo_mod','odpady_keo',1)
|| {? KEO.r_lock(1,1,1)
   || exec('keo_set_win','odpady_keo',1);
      {? KEO.edit("exec('keo_chk','odpady_keo',0)")
      || KEO.put()
      ?};
      KEO.r_unlock()
   || FUN.info('Wskazana karta jest modyfikowana przez innego użytkownika.'@)
   ?}
?};
~~


\keo_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Usuwanie nagłówka KEO/KEOK/KEON
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? exec('keo_mod','odpady_keo',0)
|| {? KEO.r_lock(1,1,1)
   || {? VAR.GRUPA='T' |  FUN.ask('Usunąć kartę?'@)
      || _wyn:=KEO.del(1)
      ?};
      KEO.r_unlock()
   || {? VAR.GRUPA='T'
      || KOMM.add('Karta %1 jest modyfikowana przez innego użytkownika.'@[KEO.SYM])
      || FUN.info('Wskazana karta jest modyfikowana przez innego użytkownika.'@)
      ?}
   ?}
?};
_wyn


\keo_del_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Usunięcie kart ewidencji odpadow - przed grupą rekordów
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć zaznaczone karty?'@)
|| VAR.GRUPA:='T';
   KOMM.init(250,,'Usuwanie kart ewidencji odpadow'@,'');
   sel_nchk();
   1
|| 0
?}


\keo_del_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Usunięcie kart ewidencji odpadow - po grupie rekordów
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
VAR.GRUPA:='N';
~~


\keo_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Wyświetlanie nagłówka KEO/KEOK/KEON
::----------------------------------------------------------------------------------------------------------------------
exec('keo_set_win','odpady_keo');
KEO.display()


\keo_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Formuła walidująca kartę ewidencji odpadów (KEO)
::   WE: [_a] - INTEGER - miejsce wywołania: [1] - dołączanie, 0 - poprawianie
::----------------------------------------------------------------------------------------------------------------------
_add:={? var_pres('_a')=type_of(0) || _a || 1 ?};
_chk:=__CHK.record(KEO,,'ODP');
{? _chk=''
|| {? KEO.EX='T' & KEO.EX_DESC=''
   || FUN.emsg('Należy uzupełnić rodzaj odpadu ex.'@);
      _chk:='EX_DESC'
   |? (KEO.TYP=exec('typ_keo','odpady_keo') & KEO.IS_NEUT='N' & KEO.IS_GENE='N' & KEO.IS_COLL='N' & KEO.IS_SLVG='N')|
      (KEO.TYP=exec('typ_keok','odpady_keo') & KEO.IS_NEUT='N' & KEO.IS_RECV='N' & KEO.IS_COLL='N' & KEO.IS_SLVG='N')
   || FUN.emsg('Należy wybrać co najmniej jeden zakres działalności.'@);
      _chk:='IS_NEUT'
   |? KEO.MASA<0
   || FUN.emsg('Stan nie może być liczbą ujemną.'@);
      _chk:='MASA'
   ?}
?};
{? _chk='' & KEO.TYP=exec('typ_keok','odpady_keo') & KEO.KOD_G=''
|| FUN.emsg('Należy uzupełnić gminę.'@);
   _chk:='KOD_G'
?};
:: Sprawdzam unikalność kart (uniekalność nie sprawdzana jeżeli karty KEO/KEOK mają wypełniony znacznik EX lub HAZ)
{? _chk='' & ~(KEO.TYP<>exec('typ_keon','odpady_keo') & (KEO.EX='T' | KEO.HAZ='T'))
|| KEO.cntx_psh();
   KEO.index('KEO_UQ');
   _ref:={? _add>0 || null() || KEO.ref() ?};
   {? KEO.TYP=exec('typ_keok','odpady_keo')
   || KEO.prefix(KEO.KH_ODB,KEO.TYP,KEO.ODP,'N','N',KEO.KOD_G,)
   || KEO.prefix(KEO.KH_ODB,KEO.TYP,KEO.ODP,'N','N')
   ?};
   _uniq:=1;
   {? KEO.first()
   || {? _add>0
      || _uniq:=0
      || {? _ref=KEO.ref()
         || _uniq:=~KEO.next()
         || _uniq:=0
         ?}
      ?}
   ?};
   KEO.cntx_pop();
   {? _uniq=0
   || {?  KEO.TYP=exec('typ_keok','odpady_keo')
      || FUN.emsg('Karta o podanym kodzie odpadu już istnieje dla obszaru danej gminy.'@)
      || FUN.emsg('Karta o podanym kodzie odpadu już istnieje.'@)
      ?};
      _chk:='ODP'
   ?}
?};
_chk


\keo_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Czy mozliwa edycja karty (KEO)
::   WE: [_a] - [0]-usun 1-popraw
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_put:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_txt:='';
{? KEO.BDO_ID<>''
|| _txt+='Karta została wysłana do systemu BDO.'@;
   _wyn:=0
|? _a=0
|| {? exec('keo_czy_keop','odpady_keo')
   || _txt+='Karta ewidencji odpadów posiada pozycje.'@;
      _wyn:=0
   ?}
?};
{? _wyn=0 & _txt<>''
|| {? VAR.GRUPA='T'
   || KOMM.add(_txt+'\n'+'Operacja dla karty %1 niemożliwa.'@[KEO.SYM])
   || FUN.info(_txt+'\n'+'Operacja niemożliwa.'@)
   ?}
?};
_wyn


\be_keo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja przed redakcją dla pól tabeli KEO
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_res:=1;
{? _fld='ODP'
|| {? KEO.TYP=exec('typ_keon','odpady_keo')
   || VAR.NB:='T'
   ?}
?};
_res


\ae_keo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja po redagowaniu dla pól tabeli KEO
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_res:=1;
{? _fld='KOD_G'
|| KEO.NAZ_G:=exec('WyszukajGmine','teryt',KEO.KOD_G)
|? _fld='EX'
|| {? KEO.EX<>'T'
   || KEO.EX_DESC:=''
   ?};
   exec('keo_set_efld_opt','odpady_keo')
|? _fld='HAZ'
|| {? KEO.HAZ<>'T'
   || KEO.HAZ_DESC:=''
   ?};
   exec('keo_set_efld_opt','odpady_keo')
|? _fld='MASA'
|| {? KEO.MASA<0
   || FUN.emsg('Masa nie może być ujemna.'@);
      _res:=0
   ?}
|? _fld='ODP'
|| {? KEO.TYP=exec('typ_keon','odpady_keo')
   || VAR.NB:='N'
   ?}
|? _fld='IS_GENE' | _fld='IS_RECV' | _fld='IS_SLVG' | _fld='IS_NEUT' | _fld='IS_COLL'
|| exec('keo_set_efld_opt','odpady_keo')
?};
_res


\fd_keo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja format wyświetlania dla pól tabeli KEO
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_res:='';
{? _fld='MASA'
|| _res:='out_prec=4'
?};
_res


\fe_keo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja format redagowania dla pól tabeli KEO
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_res:='';
{? _fld='MASA'
|| _res:='in_prec=4'
?};
_res


\keo_set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Ustawia wymagane pola dla okna redakcyjnego nagłówka karty ewidencji odpadów
::   WE: [_a] - akronim okienka
::----------------------------------------------------------------------------------------------------------------------
_win:={? var_pres('_a')=type_of('') || _a || cur_win(1,1) ?};
:: Blokuje pola jak modyfikowana karta posiada pozycje
{? -menu_txt()='popraw' & exec('keo_czy_keop','odpady_keo')
|| KEO.efld_opt(_win,'editable=0',,'ODP','KOD');
   KEO.efld_opt(_win,'editable=0',,'EX');
   KEO.efld_opt(_win,'editable=0',,'EX_DESC');
   KEO.efld_opt(_win,'editable=0',,'HAZ');
   KEO.efld_opt(_win,'editable=0',,'HAZ_DESC');
   KEO.efld_opt(_win,'editable=0',,'KOD_G')
|| KEO.efld_opt(_win,'editable=1',,'ODP','KOD');
   KEO.efld_opt(_win,'editable=1',,'EX');
   {? KEO.EX='T'
   || KEO.efld_opt(_win,'editable=1',,'EX_DESC');
      KEO.efld_opt(_win,'mark=1',,'EX_DESC')
   || KEO.efld_opt(_win,'editable=grayed',,'EX_DESC');
      KEO.efld_opt(_win,'mark=0',,'EX_DESC')
   ?};
   KEO.efld_opt(_win,'editable=1',,'HAZ');
   {? KEO.HAZ='T'
   || KEO.efld_opt(_win,'editable=1',,'HAZ_DESC')
   || KEO.efld_opt(_win,'editable=grayed',,'HAZ_DESC')
   ?};
   KEO.efld_opt(_win,'editable=1',,'KOD_G')
?};

{? KEO.IS_GENE<>'T' & KEO.IS_RECV<>'T' & KEO.IS_COLL<>'T' & KEO.IS_SLVG<>'T' & KEO.IS_NEUT<>'T'
|| KEO.efld_opt(_win,'mark=1',,'IS_GENE');
   KEO.efld_opt(_win,'mark=1',,'IS_RECV');
   KEO.efld_opt(_win,'mark=1',,'IS_COLL');
   KEO.efld_opt(_win,'mark=1',,'IS_SLVG');
   KEO.efld_opt(_win,'mark=1',,'IS_NEUT')
|| {? KEO.IS_GENE='T'
   || KEO.efld_opt(_win,'mark=1',,'IS_GENE')
   || KEO.efld_opt(_win,'mark=0',,'IS_GENE')
   ?};
   {? KEO.IS_RECV='T'
   || KEO.efld_opt(_win,'mark=1',,'IS_RECV')
   || KEO.efld_opt(_win,'mark=0',,'IS_RECV')
   ?};
   {? KEO.IS_COLL='T'
   || KEO.efld_opt(_win,'mark=1',,'IS_COLL')
   || KEO.efld_opt(_win,'mark=0',,'IS_COLL')
   ?};
   {? KEO.IS_SLVG='T'
   || KEO.efld_opt(_win,'mark=1',,'IS_SLVG')
   || KEO.efld_opt(_win,'mark=0',,'IS_SLVG')
   ?};
   {? KEO.IS_NEUT='T'
   || KEO.efld_opt(_win,'mark=1',,'IS_NEUT')
   || KEO.efld_opt(_win,'mark=0',,'IS_NEUT')
   ?}
?};
~~


\keo_set_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Ustawia odpowiednie okno redakcyjne dla nagłówka karty ewidencji odpadów
::   WE: [_a] - INTEGER - rodzaj akcji: 1 - add, [0] - put/display
::----------------------------------------------------------------------------------------------------------------------
_add:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_typ:={? _add>0 || VAR.A_TABKEO || KEO.TYP ?};
{? _typ=exec('typ_keok','odpady_keo')
|| _edit:='RED_KEOK'
|? _typ=exec('typ_keon','odpady_keo')
|| _edit:='RED_KEON'
|| _edit:='RED_KEO'
?};
KEO.win_edit(_edit);
exec('keo_set_efld_opt','odpady_keo',_edit);
~~


\keo_rkprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja na rekord przed w oknach tabeli KEO
::   WE: _a - parametr systemowy
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _wer:={? KEO.TYP=exec('typ_keon','odpady_keo')
         || 'WER_KEON'
         |? KEO.TYP=exec('typ_keok','odpady_keo')
         || 'WER_KEOK'
         || 'WER_KEO'
         ?};
   {? KEO.sel_size()=0
   || _grayed:=':';
::    BDO - zależne od tokena dostępowego - wszystko wyłączone
      {? __BDO_TOKEN=''
      || _grayed:='B'+_grayed
      ||
::       BDO - zależne od KEO.BDO_ID
         {? KEO.BDO_ID=''
         || _grayed:='B(AUPKJ)'+_grayed
         || _grayed:='PUB(W)'+_grayed
         ?}
      ?};
      KEO.actions_grayed(_wer,_grayed)
   ||
::    BDO zależne od tokena dostępowego - wszystko wyłączone
      {? __BDO_TOKEN=''
      || KEO.actions_grayed(_wer,'B')
      || KEO.actions_grayed(_wer,'')
      ?}
   ?}
?};
~~


\keop_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Dodanie wpisu
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
KEOP.blank();
KEOP.memo_set('','DESC');
KEOP.KEO:=KEO.ref();
KEOP.TYP:=VAR.A_TABKEP;
:: Ustawiam domyślny zakres filtrowania
params_exec('kpo_tab_filter_def','odpady_keo');
exec('keop_set_win','odpady_keo',1);
{? KEOP.edit("exec('keop_chk','odpady_keo')")
||
:: Czyszcze dane jak pola nie dotyczą danego rodzaju
   {? (KEOP.TYP=exec('typ_keo_forwarded','odpady_keo') | KEOP.TYP=exec('typ_keok_transferred','odpady_keo'))
      & KEOP.RODZ<>exec('rodz_rp','odpady_keo') & KEOP.RODZ<>exec('rodz_rpe','odpady_keo')
   || KEOP.SR_TRAN:='';
      KEOP.RODPR:=''
   ?};
   KEOP.AR:=KEOP.DT~1;
   KEOP.AM:=KEOP.DT~2;
   {? KEOP.add()
   || KEOP.memo_put(,'DESC')
   ?}
?};
~~


\keop_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Modyfikacja wpisu
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
{? exec('keop_mod','odpady_keo')
|| {? KEOP.r_lock(1,1,1)
   ||
::    Ustawiam domyślny zakres filtrowania
      params_exec('kpo_tab_filter_def','odpady_keo');
      exec('keop_set_win','odpady_keo',0);
      KEOP.memo_get(,'DESC');
      {? KEOP.edit("exec('keop_chk','odpady_keo')")
      ||
::       Czyszcze dane jak pola nie dotyczą danego rodzaju
         {? (KEOP.TYP=exec('typ_keo_forwarded','odpady_keo') | KEOP.TYP=exec('typ_keok_transferred','odpady_keo'))
            & KEOP.RODZ<>exec('rodz_rp','odpady_keo') & KEOP.RODZ<>exec('rodz_rpe','odpady_keo')
         || KEOP.SR_TRAN:='';
            KEOP.RODPR:=''
         ?};
         KEOP.AR:=KEOP.DT~1;
         KEOP.AM:=KEOP.DT~2;
         {? KEOP.put()
         || KEOP.memo_put(,'DESC')
         ?}
      ?};
      KEOP.r_unlock()
   || FUN.info('Wskazana pozycja jest modyfikowana przez innego użytkownika.'@)
   ?}
?};
~~


\keop_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Usuwanie pozycji karty ewidencji odpadów KEOP
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? exec('keop_mod','odpady_keo',0)
|| {? KEOP.r_lock(1,1,1)
   || {? VAR.GRUPA='T' |  FUN.ask('Usunąć pozycję?'@)
      || _wyn:=KEOP.del(1)
      ?};
      KEOP.r_unlock()
   || {? VAR.GRUPA='T'
      || KOMM.add('Pozycja jest modyfikowana przez innego użytkownika.'@)
      || FUN.info('Wskazana pozycja jest modyfikowana przez innego użytkownika.'@)
      ?}
   ?}
?};
_wyn


\keop_del_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Usunięcie pozycji karty ewidencji odpadów - przed grupą rekordów
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć zaznaczone pozycje?'@)
|| VAR.GRUPA:='T';
   KOMM.init(250,,'Usuwanie pozycji kart ewidencji odpadow'@,'');
   sel_nchk();
   1
|| 0
?}


\keop_del_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Usunięcie pozycji karty ewidencji odpadów - po grupie rekordów
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
VAR.GRUPA:='N';
~~


\keop_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Formuła walidująca pozycję karty ewidencji odpadów (KEOP)
::   WE: [_a] - INTEGER - miejsce wywołania: [1] - dołączanie, 0 - poprawianie
::----------------------------------------------------------------------------------------------------------------------
_add:={? var_pres('_a')=type_of(0) || _a || 1 ?};
_typ:=KEOP.TYP;
_chk:='';
::  Odpady przyjęte
{? _typ=exec('typ_keo_collected','odpady_keo') | _typ=exec('typ_keok_received','odpady_keo')
|| {? KEOP.RODZ=exec('rodz_kpo','odpady_keo') | KEOP.RODZ=exec('rodz_kpok','odpady_keo')
   || _chk:=__CHK.record2(KEOP,'NRDOK','Karta przekazania odpadów'@,'MASA',)
   |? KEOP.RODZ=exec('rodz_rp','odpady_keo')
   || _chk:=__CHK.record(KEOP,,'MASA','DT','KRAJ','MIASTO')
   |? KEOP.RODZ=exec('rodz_zw','odpady_keo')
   || _chk:=__CHK.record(KEOP,,'MASA','DT')
   ?}
::  Odpady wydobyte
|? _typ=exec('typ_keo_excavated','odpady_keo')
|| _chk:=__CHK.record(KEOP,,'MASA','DT')
::  Odpady wytworzone
|? _typ=exec('typ_keo_generated','odpady_keo')
|| {? KEOP.MASA_INS=0 & KEOP.MASA_EXC=0
   || FUN.emsg('Wartość przynajmniej jednej z mas musi być określona.'@);
      _chk:='MASA_INS'
   ?};
   {? _chk=''
   || {? KEOP.FROM_SER='T'
      || _chk:=__CHK.record2(KEOP,'DT',,'KOD_G','Pochodzenie odpadów')
      || _chk:=__CHK.record(KEOP,,'DT')
      ?}
   ?}
::  Odpady przetworzone
|? _typ=exec('typ_keo_treated','odpady_keo') | _typ=exec('typ_keok_processed','odpady_keo')
|| _chk:=__CHK.record(KEOP,,'MASA','DT','ODPR');
:: Sprawdzenie wypełnienia pól dotyczących utraty statusów odpadów (LOSS, LOSS_MAS, LOSS_TYP)
   {? _chk=''
   || {? KEOP.RODPR=exec('keop_rodpr_odz','odpady_keo')
      || {? KEOP.LOSS='T'
         || {? KEOP.LOSS_MAS=0 & KEOP.LOSS_TYP<>''
            || FUN.emsg('Pole \'Masa materiałów\' musi być wypełnione, jeżeli określony jest rodzaj materiałów.'@);
               _chk:='LOSS_MAS'
            |? KEOP.LOSS_MAS<>0 & KEOP.LOSS_TYP=''
            || FUN.emsg('Pole \'Rodzaj materiałów\' musi być wypełnione, jeżeli określona jest masa materiałów.'@);
               _chk:='LOSS_TYP'
            ?}
         ?}
      ?}
   ?}
::  Odpady przekazane (KEO,KEOK)
|? _typ=exec('typ_keo_forwarded','odpady_keo') | _typ=exec('typ_keok_transferred','odpady_keo')
|| {? KEOP.RODZ=exec('rodz_kpo','odpady_keo') | KEOP.RODZ=exec('rodz_kpok','odpady_keo')
   || _chk:=__CHK.record2(KEOP,'NRDOK','Karta przekazania odpadów'@,'MASA')
   |? KEOP.RODZ=exec('rodz_rpe','odpady_keo')
   || _chk:=__CHK.record(KEOP,,'MASA','DT','KRAJ','MIASTO','ODPR')
   |? KEOP.RODZ=exec('rodz_zw','odpady_keo') | KEOP.RODZ=exec('rodz_fiz','odpady_keo')
   || _chk:=__CHK.record(KEOP,,'MASA','DT')
   ?}
::  Odpady odebrane
|? _typ=exec('typ_keok_collected','odpady_keo')
|| _chk:=__CHK.record2(KEOP,'NRDOK','Karta przekazania odpadów komunalnych'@,'MASA',)
::  Odpady niebezpieczne (KEON)
|? _typ=exec('typ_keon_item','odpady_keo')
|| _chk:=__CHK.record(KEOP,,'NRDOK','MASA','DT','KH','KH_2');
   {? _chk=''
   || {? KEOP.NRDOK*' '>0 | ((KEOP.R_DOK=exec('keop_r_dok_kpo','odpady_keo') & +KEOP.NRDOK<>29)
         | (KEOP.R_DOK=exec('keop_r_dok_kpok','odpady_keo') & +KEOP.NRDOK<>30))
      || FUN.emsg('Aktualny format numeru dokumentu niezgodny z wzorcem.'@);
         _chk:='NRDOK'
      ?}
   ?}
?};

_chk


\keop_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Czy mozliwa edycja pozycji karty ewidencji odpadów (KEOP)
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_txt:='';
{? KEOP.BDO_ID<>''
|| _txt+='Pozycja została wysłana do systemu BDO.'@;
   _wyn:=0
?};
{? _wyn=0 & _txt<>''
|| {? VAR.GRUPA='T'
   || KOMM.add(_txt+'\n'+'Operacja niemożliwa.'@)
   || FUN.info(_txt+'\n'+'Operacja niemożliwa.'@)
   ?}
?};
_wyn


\be_keop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja przed redakcją dla pól tabeli KEOP
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_res:=1;
{? _fld='ODPR'
|| ODPR.clear();
   ODPR.f_set(,,'KOD like \':_a%\'',KEOP.RODPR)
|? _fld='RODZ'
|| VAR.RODZ:=KEOP.RODZ
?};
_res


\ae_keop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja po redagowaniu dla pól tabeli KEOP
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_res:=1;
_set_efld:=0;
{? _fld='RODZ'
|| {? KEOP.RODZ<>VAR.RODZ
   || KEOP.RKPO:='';
      KEOP.NRDOK:=''
   ?};
   {? KEOP.RODZ<>exec('rodz_rp','odpady_keo') & KEOP.RODZ<>exec('rodz_rpe','odpady_keo')
   || KEOP.KRAJ:=null();
      KEOP.MIASTO:='';
      KEOP.ULICA:='';
      KEOP.KPOCZ:='';
      KEOP.NRB:='';
      KEOP.NRL:='';
      KEOP.SR_TRAN:='';
      KEOP.RODPR:='';
      KEOP.ODPR:=null();
      KEOP.RECYCLE:='N'
   ?};
   {? (KEOP.RODZ=exec('rodz_kpo','odpady_keo') | KEOP.RODZ=exec('rodz_kpok','odpady_keo')) & KEOP.NRDOK=''
   || KEOP.DT:=date(0,0,0)
   ?};
   VAR.RODZ:=KEOP.RODZ;
   params_exec('kpo_tab_filter_def','odpady_keo');
   _set_efld:=1
|? _fld='KOD_G'
|| KEOP.NAZ_G:=exec('WyszukajGmine','teryt',KEOP.KOD_G)
|? _fld='FROM_SER'
|| {? KEOP.FROM_SER<>'T'
   || KEOP.KOD_G:='';
      KEOP.NAZ_G:=''
   ?};
   _set_efld:=1
|? _fld='RODPR'
|| {? KEOP.RODPR=exec('keop_rodpr_uni','odpady_keo')
   || KEOP.SPG:=exec('keop_spg_un','odpady_keo');
      KEOP.LOSS:='N';
      KEOP.LOSS_MAS:=0;
      KEOP.LOSS_TYP:=''
   || KEOP.PCB:=0;
      {? KEOP.TYP=exec('typ_keo_treated','odpady_keo') & KEOP.SPG=exec('keop_spg_un','odpady_keo')
      || KEOP.SPG:=exec('keop_spg_rec','odpady_keo')
      ?}
   ?};
   {? KEOP.ODPR<>null() & KEOP.RODPR<>exec('FindAndGet','#table',ODPR,KEOP.ODPR,,"1+ODPR.KOD",'')
   || KEOP.ODPR:=null()
   ?};
   _set_efld:=1
|? _fld='SPG'
|| {? (KEOP.TYP=exec('typ_keo_treated','odpady_keo') | KEOP.TYP=exec('typ_keok_processed','odpady_keo'))
      & KEOP.SPG=exec('keop_spg_un','odpady_keo') & KEOP.RODPR=exec('keop_rodpr_odz','odpady_keo')
   || FUN.info('Sposób gospodarowania \'Unieszkodliwianie\' niedostępny dla procesu odzysku.'@);
      _res:=0
   ?}
|? _fld='MASA' | _fld='MASA_INS' | _fld='MASA_EXC' | _fld='LOSS_MAS'
|| {? KEOP.MASA<0 | KEOP.MASA_INS<0 | KEOP.MASA_EXC<0 | KEOP.LOSS_MAS<0
   || FUN.emsg('Masa nie może być ujemna.'@);
      _res:=0
   ?};
   _set_efld:=1
|? _fld='DT'
|| {? KEOP.DT<>date(0,0,0) & KEOP.DT>date()
   || FUN.emsg('Nie można wskazać daty przyszłej.'@);
      _res:=0
   ?}
|? _fld='ODPR'
|| ODPR.f_clear()
|? _fld='PCB'
|| {? KEOP.PCB<0 | KEOP.PCB>100
   || FUN.emsg('Wartość musi zawierać się w przedziale od 0 do 100(\%).'@);
      _res:=0
   ?}
|? _fld='R_DOK'
|| {? KEOP.R_DOK='KPO' & KEOP.NRDOK*'/KPO/'=0 | KEOP.R_DOK='KPOK' & KEOP.NRDOK*'/KPOK/'=0
   || KEOP.NRDOK:=''
   ?}
|? _fld='KH'
|| {? KEOP.KH<>null() & KEOP.KH().NRREJDBO=''
   || FUN.emsg('Nie można przypisać wybranego kontrahenta.\n'
               'Kontrahent musi mieć wypełnione pole z numerem rejestrowym (BDO).'@);

      _res:=0
   ?}
|? _fld='KH_2'
|| {? KEOP.KH_2<>null() & KEOP.KH_2().NRREJDBO=''
   || FUN.emsg('Nie można przypisać wybranego kontrahenta.\n'
               'Kontrahent musi mieć wypełnione pole z numerem rejestrowym (BDO).'@);
      _res:=0
   ?}
|? _fld='NRDOK'
||
:: Sprawdzam, czy wpisany nr karty istnieje w systemie i ma dobrze powiązany sql ref
   {? KEOP.TYP<>exec('typ_keon_item','odpady_keo')
   || {? KEOP.NRDOK<>''
      || _env:=params_get().env;
         {? KEOP.RKPO=''
         ||
::          Nieprzypisany Ref sql, sprawdzam czy poprawny symbol (wpisany symbol z ręki)
            ZAKR.cntx_psh();
            ZAKR.CZY_KEO:=-1;
            ZAKR.CZY_GM:=0;
            ZAKR.CZY_ODP:=0;
::          Ustalam rok (maskę) kart przekazania odpadów na podstawie symbolu karty
            ZAKR.ARCH_ROK:=4+(6-KEOP.NRDOK);
            _rok:=#ZAKR.ARCH_ROK;
            {? _rok>0 & _rok=int(_rok)
            || KPO.cntx_psh();
               {? KPO.f_active() || KPO.f_clear() ?};
               KPO.index('SYMBOL');
               KPO.prefix();
               params_exec('kpo_tab_filter','odpady_keo');
               {? KPO.f_find(KEOP.NRDOK,)
               || KEOP.RKPO:=$KPO.ref();
                  KEOP.DT:=KPO.DTR;
                  KEOP.MASA:=KPO.IL
               || {? KEOP.TYP<>exec('typ_keon_item','odpady_keo')
                  || FUN.emsg('Niepoprawny symbol karty przekazania odpadów.'@);
                     _res:=0
                  ?}
               ?};
               KPO.f_clear();
               KPO.cntx_pop()
            || FUN.emsg('Niepoprawny symbol karty przekazania odpadów.'@);
               _res:=0
            ?};
            ZAKR.cntx_pop()
         ||
::          Przypisany Ref sql, sprawdzam czy ref zgodny z symbolem
            {? KEOP.NRDOK<>exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.SYM",'')
            ||
::             Wpisany symbol nie zgadza się z symbolem powiązanej karty (wpisany symbol z ręki)
               ZAKR.cntx_psh();
               ZAKR.CZY_KEO:=-1;
               ZAKR.CZY_GM:=0;
               ZAKR.CZY_ODP:=0;
::             Ustalam rok (maskę) kart przekazania odpadów na podstawie symbolu karty
               ZAKR.ARCH_ROK:=4+(6-KEOP.NRDOK);
               _rok:=#ZAKR.ARCH_ROK;
               {? _rok>0 & _rok=int(_rok)
               || KPO.cntx_psh();
                  {? KPO.f_active() || KPO.f_clear() ?};
                  KPO.index('SYMBOL');
                  KPO.prefix();
                  params_exec('kpo_tab_filter','odpady_keo');
                  {? KPO.f_find(KEOP.NRDOK,)
                  || KEOP.RKPO:=$KPO.ref();
                     KEOP.DT:=KPO.DTR;
                     KEOP.MASA:=KPO.IL
                  || KEOP.RKPO:='';
                     {? KEOP.TYP<>exec('typ_keon_item','odpady_keo')
                     ||
::                        KEOP.DT:=date(0,0,0);
::                        KEOP.MASA:=0;
                        FUN.emsg('Niepoprawny symbol karty przekazania odpadów.'@);
                        _res:=0
                     ?}
                  ?};
                  KPO.f_clear();
                  KPO.cntx_pop()
               || FUN.emsg('Niepoprawny symbol karty przekazania odpadów.'@);
                  _res:=0
               ?};
               ZAKR.cntx_pop()
            ?}
         ?}
      || KEOP.RKPO:='';
         KEOP.DT:=date(0,0,0);
         KEOP.MASA:=0
      ?}
   ?}
|? _fld='LOSS'
|| {? KEOP.LOSS='N'
   || KEOP.LOSS_MAS:=0;
      KEOP.LOSS_TYP:=''
   ?};
   _set_efld:=1
|? _fld='LOSS_TYP'
|| _set_efld:=1
?};
{? _set_efld
|| exec('keop_set_efld_opt','odpady_keo')
?};
_res


\bd_keop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja przed wyświetleniem dla pól tabeli KEOP
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_res:=1;
{? cur_kwin='e_edit'
|| {? _fld='MASA' | _fld='NRDOK' | _fld='DT' | _fld='PCB' | _fld='KRAJ' | _fld='SR_TRAN'
   || exec('keop_set_efld_opt','odpady_keo')
   ?}
?};
_res


\fd_keop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja format wyświetlania dla pól tabeli KEOP
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_res:='';
{? _fld='MASA' | _fld='MASA_INS' | _fld='MASA_EXC' | _fld='LOSS_MAS'
|| _res:='out_prec=4'
|? _fld='PCB'
|| _res:='out_prec=2'
?};
_res


\fe_keop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja format redagowania dla pól tabeli KEOP
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_res:='';
{? _fld='MASA' | _fld='MASA_INS' | _fld='MASA_EXC' | _fld='LOSS_MAS'
|| _res:='in_prec=4'
|? _fld='PCB'
|| _res:='in_prec=2'
?};
_res


\keop_nrdok_patt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Wzorzec dla pola NRDOK tabeli KEOP
::----------------------------------------------------------------------------------------------------------------------
_patt:='';
{? KEOP.R_DOK=exec('keop_r_dok_kpo','odpady_keo')
|| _patt:='99999/9999/KPO/9999/999999999%'
|? KEOP.R_DOK=exec('keop_r_dok_kpok','odpady_keo')
|| _patt:='99999/9999/KPOK/9999/999999999%'
?};
_patt


\keop_set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Ustawia wymagane pola dla okna redakcyjnego pozycji karty ewidencji odpadów
::   WE: [_a] - akronim okienka
::----------------------------------------------------------------------------------------------------------------------
_win:={? var_pres('_a')=type_of('') || _a || cur_win(1,1) ?};
::  Odpady przyjęte/przekazane(KEO)
{? KEOP.TYP=exec('typ_keo_collected','odpady_keo') | KEOP.TYP=exec('typ_keo_forwarded','odpady_keo')
   | KEOP.TYP=exec('typ_keok_received','odpady_keo') | KEOP.TYP=exec('typ_keok_transferred','odpady_keo')
|| {? KEOP.RODZ=exec('rodz_rp','odpady_keo') | KEOP.RODZ=exec('rodz_rpe','odpady_keo')
   || KEOP.efld_opt(_win,'editable=1',,'KRAJ');
      KEOP.efld_opt(_win,'mark=1',,'KRAJ');
      KEOP.efld_opt(_win,'editable=1',,'MIASTO');
      KEOP.efld_opt(_win,'mark=1',,'MIASTO');
      KEOP.efld_opt(_win,'editable=1',,'ULICA');
      KEOP.efld_opt(_win,'editable=1',,'KPOCZ');
      KEOP.efld_opt(_win,'editable=1',,'NRB');
      KEOP.efld_opt(_win,'editable=1',,'NRL');
      {? KEOP.TYP=exec('typ_keo_forwarded','odpady_keo') | KEOP.TYP=exec('typ_keok_transferred','odpady_keo')
      || KEOP.efld_opt(_win,'editable=1',,'SR_TRAN');
         KEOP.efld_opt(_win,'editable=1',,'RODPR');
         KEOP.efld_opt(_win,'editable=1',,'ODPR');
         KEOP.efld_opt(_win,'mark=1',,'ODPR','KOD');
         KEOP.efld_opt(_win,'editable=1',,'RECYCLE')
      ?}
   || KEOP.efld_opt(_win,'editable=grayed',,'KRAJ');
      KEOP.efld_opt(_win,'mark=0',,'KRAJ');
      KEOP.efld_opt(_win,'editable=grayed',,'MIASTO');
      KEOP.efld_opt(_win,'mark=0',,'MIASTO');
      KEOP.efld_opt(_win,'editable=grayed',,'ULICA');
      KEOP.efld_opt(_win,'editable=grayed',,'KPOCZ');
      KEOP.efld_opt(_win,'editable=grayed',,'NRB');
      KEOP.efld_opt(_win,'editable=grayed',,'NRL');
      {? KEOP.TYP=exec('typ_keo_forwarded','odpady_keo') | KEOP.TYP=exec('typ_keok_transferred','odpady_keo')
      || KEOP.efld_opt(_win,'editable=grayed',,'SR_TRAN');
         KEOP.efld_opt(_win,'editable=grayed',,'RODPR');
         KEOP.efld_opt(_win,'editable=grayed',,'ODPR');
         KEOP.efld_opt(_win,'mark=0',,'ODPR','KOD');
         KEOP.efld_opt(_win,'editable=grayed',,'RECYCLE')
      ?}
   ?};
   {? KEOP.RODZ=exec('rodz_kpo','odpady_keo') | KEOP.RODZ=exec('rodz_kpok','odpady_keo')
   || KEOP.efld_opt(_win,'editable=1',,'NRDOK');
      KEOP.efld_opt(_win,'mark=1',,'NRDOK');
      KEOP.efld_opt(_win,'editable=0',,'DT')
   || KEOP.efld_opt(_win,'editable=grayed',,'NRDOK');
      KEOP.efld_opt(_win,'mark=0',,'NRDOK');
      KEOP.efld_opt(_win,'editable=1',,'DT')
   ?}
::  Odpady wytworzone
|? KEOP.TYP=exec('typ_keo_generated','odpady_keo')
|| {? KEOP.FROM_SER='T'
   || KEOP.efld_opt(_win,'editable=1',,'KOD_G');
      KEOP.efld_opt(_win,'mark=1',,'KOD_G');
      KEOP.efld_opt(_win,'editable=0',,'NAZ_G')
   || KEOP.efld_opt(_win,'editable=grayed',,'KOD_G');
      KEOP.efld_opt(_win,'mark=0',,'KOD_G');
      KEOP.efld_opt(_win,'editable=grayed',,'NAZ_G')
   ?};
   {? KEOP.MASA_INS=0 & KEOP.MASA_EXC=0
   || KEOP.efld_opt(_win,'mark=1',,'MASA_INS');
      KEOP.efld_opt(_win,'mark=1',,'MASA_EXC')
   || {? KEOP.MASA_INS>0
      || KEOP.efld_opt(_win,'mark=1',,'MASA_INS')
      || KEOP.efld_opt(_win,'mark=0',,'MASA_INS')
      ?};
      {? KEOP.MASA_EXC>0
      || KEOP.efld_opt(_win,'mark=1',,'MASA_EXC')
      || KEOP.efld_opt(_win,'mark=0',,'MASA_EXC')
      ?}
   ?}
::  Odpady przetwarzane
|? KEOP.TYP=exec('typ_keo_treated','odpady_keo') | KEOP.TYP=exec('typ_keok_processed','odpady_keo')
|| _loss_mark:=0;
   {? KEOP.RODPR=exec('keop_rodpr_odz','odpady_keo')
   || KEOP.efld_opt(_win,'editable=1',,'SPG');
      KEOP.efld_opt(_win,'editable=grayed',,'PCB');
      KEOP.efld_opt(_win,'editable=1',,'LOSS');
      {? KEOP.LOSS='T'
      || _loss_mark:=KEOP.LOSS_MAS<>0 | KEOP.LOSS_TYP<>'';
         KEOP.efld_opt(_win,'editable=1',,'LOSS_MAS');
         KEOP.efld_opt(_win,'editable=1',,'LOSS_TYP')
      || KEOP.efld_opt(_win,'editable=grayed',,'LOSS_MAS');
         KEOP.efld_opt(_win,'editable=grayed',,'LOSS_TYP')
      ?}
   || KEOP.efld_opt(_win,'editable=0',,'SPG');
      KEOP.efld_opt(_win,'editable=1',,'PCB');
      KEOP.efld_opt(_win,'editable=grayed',,'LOSS');
      KEOP.efld_opt(_win,'editable=grayed',,'LOSS_MAS');
      KEOP.efld_opt(_win,'editable=grayed',,'LOSS_TYP')
   ?};
   KEOP.efld_opt(_win,'mark='+$_loss_mark,,'LOSS_MAS');
   KEOP.efld_opt(_win,'mark='+$_loss_mark,,'LOSS_TYP')
?};
~~


\keop_set_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Ustawia odpowiednie okno redakcyjne dla pozycji karty ewidencji odpadów
::   WE: [_a] - INTEGER - rodzaj akcji: 1 - add, [0] - put/display
::----------------------------------------------------------------------------------------------------------------------
_add:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_typ:={? _add >0 || VAR.A_TABKEP || KEOP.TYP ?};
_edit:=KEOP.win_edit('?');
{? _typ=exec('typ_keo_collected','odpady_keo')
|| _edit:='KEO_COL'
|? _typ=exec('typ_keo_excavated','odpady_keo')
|| _edit:='KEO_EXC'
|? _typ=exec('typ_keo_forwarded','odpady_keo')
|| _edit:='KEO_FOR'
|? _typ=exec('typ_keo_generated','odpady_keo')
|| _edit:='KEO_GEN'
|? _typ=exec('typ_keo_treated','odpady_keo')
|| _edit:='KEO_TRE'
|? _typ=exec('typ_keok_collected','odpady_keo')
|| _edit:='KEOK_COL'
|? _typ=exec('typ_keok_processed','odpady_keo')
|| _edit:='KEOK_PRO'
|? _typ=exec('typ_keok_received','odpady_keo')
|| _edit:='KEOK_REC'
|? _typ=exec('typ_keok_transferred','odpady_keo')
|| _edit:='KEOK_TRA'
|? _typ=exec('typ_keon_item','odpady_keo')
|| _edit:='KEON_ITE'
?};
KEOP.win_edit(_edit);
exec('keop_set_efld_opt','odpady_keo',_edit);
~~


\keop_win_create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Tworzy odpowiednie okno wertowaniia dla pozycji karty ewidencji odpadów
::   WE: [_a] - STRING - typ pozycji ewidencji, dla jakiej ma zostać utworzone okno (jeśli brak, to okno ogólne)
::   WY: utworzone okno
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_a')=type_of('') || _a || '' ?};

_werp:=KEOP.mk_sel('Pozycje'@,'P',,'wer'+(8+_typ),,,,,'U');
{? _typ=''
|| KEOP.win_fld(_werp,,'KEO','SYM',,30);
   KEOP.win_fld(_werp,,'DT');
::   KEOP.win_fld(_werp,,'TYP')
   KEOP.win_fld(_werp,VAR,'STRING',,,20,,,'Typ wpisu'@)
|? _typ=exec('typ_keo_generated','odpady_keo')
|| KEOP.win_fld(_werp,,'DT');
   KEOP.win_fld(_werp,,'MASA_INS',,,-15,4,,'Masa — eksploatacja instalacji'@);
   KEOP.win_fld(_werp,,'MASA_EXC',,,-15,4,,'Masa — poza instalacją'@);
   KEOP.win_fld(_werp,,'INSTALLN',,,30);
   KEOP.win_fld(_werp,,'FROM_SER',,,-15,,,'Świadczenie usług'@,,
                'Świadczenie usług i/lub dział. w zakresie obiektów liniowych'@,2,,"'T'","'N'")
|? _typ=exec('typ_keo_excavated','odpady_keo')
|| KEOP.win_fld(_werp,,'DT');
   KEOP.win_fld(_werp,,'MASA',,,-15,4);
   KEOP.win_fld(_werp,,'INSTALLN',,,30)
|? _typ=exec('typ_keo_collected','odpady_keo')
|| KEOP.win_fld(_werp,,'DT');
   KEOP.win_fld(_werp,,'MASA',,,-15,4);
   KEOP.win_fld(_werp,,'NRDOK',,,30,,,'Numer karty'@);
   KEOP.win_fld(_werp,VAR,'STRING2',,,35,,,'Rodzaj wpisu'@);
::   KEOP.win_fld(_werp,,'RODZ',,,35,,,'Rodzaj wpisu'@);
   KEOP.win_fld(_werp,,'INSTALLN',,,30)
|? _typ=exec('typ_keo_treated','odpady_keo')
|| KEOP.win_fld(_werp,,'DT');
   KEOP.win_fld(_werp,,'MASA',,,-15,4);
   KEOP.win_fld(_werp,,'ODPR','KOD',,-4,,,'Kod procesu'@,,'Kod procesu przetwarzania'@);
   KEOP.win_fld(_werp,,'ODPR','NAZ',,40,,,'Proces przetwarzania'@);
   KEOP.win_fld(_werp,,'SPG',,,30);
   KEOP.win_fld(_werp,,'PCB',,,10,,,'Zawartość PCB [\%]'@);
   KEOP.win_fld(_werp,,'INSTALLN',,,30)
|? _typ=exec('typ_keo_forwarded','odpady_keo')
|| KEOP.win_fld(_werp,,'DT');
   KEOP.win_fld(_werp,,'MASA',,,-15,4);
   KEOP.win_fld(_werp,,'NRDOK',,,30,,,'Numer karty'@);
::   KEOP.win_fld(_werp,,'RODZ',,,35,,,'Rodzaj wpisu'@)
   KEOP.win_fld(_werp,VAR,'STRING2',,,35,,,'Rodzaj wpisu'@)
|? _typ=exec('typ_keok_collected','odpady_keo')
|| KEOP.win_fld(_werp,,'DT');
   KEOP.win_fld(_werp,,'MASA',,,-15,4);
   KEOP.win_fld(_werp,,'NRDOK',,,30,,,'Numer karty'@)
|? _typ=exec('typ_keok_received','odpady_keo')
|| KEOP.win_fld(_werp,,'DT');
   KEOP.win_fld(_werp,,'MASA',,,-15,4);
   KEOP.win_fld(_werp,,'NRDOK',,,30,,,'Numer karty'@);
::   KEOP.win_fld(_werp,,'RODZ',,,35,,,'Rodzaj wpisu'@);
   KEOP.win_fld(_werp,VAR,'STRING2',,,35,,,'Rodzaj wpisu'@);
   KEOP.win_fld(_werp,,'INSTALLN',,,30)
|? _typ=exec('typ_keok_processed','odpady_keo')
|| KEOP.win_fld(_werp,,'DT');
   KEOP.win_fld(_werp,,'MASA',,,-15,4);
   KEOP.win_fld(_werp,,'ODPR','KOD',,-4,,,'Kod procesu'@);
   KEOP.win_fld(_werp,,'ODPR','NAZ',,40,,,'Proces przetwarzania'@);
   KEOP.win_fld(_werp,,'SPG',,,30);
   KEOP.win_fld(_werp,,'PCB',,,10,,,'Zawartość PCB [\%]'@);
   KEOP.win_fld(_werp,,'INSTALLN',,,30)
|? _typ=exec('typ_keok_transferred','odpady_keo')
|| KEOP.win_fld(_werp,,'DT');
   KEOP.win_fld(_werp,,'MASA',,,-15,4);
   KEOP.win_fld(_werp,,'NRDOK',,,30,,,'Numer karty'@);
   KEOP.win_fld(_werp,VAR,'STRING2',,,35,,,'Rodzaj wpisu'@)
|? _typ=exec('typ_keon_item','odpady_keo')
|| KEOP.win_fld(_werp,,'DT');
   KEOP.win_fld(_werp,,'MASA',,,-15,4);
   KEOP.win_fld(_werp,,'NRDOK',,,30,,,'Numer karty'@);
   KEOP.win_fld(_werp,,'KH','SKR',,30,,,'Przekazujący'@);
   KEOP.win_fld(_werp,,'KH_2','SKR',,30,,,'Przejmujący'@)
?};
:: Zawsze
KEOP.win_fld(_werp,,'BDO',,,4,,,,,'Wpis znajduje się w rejestrze BDO'@,2,,"'T'","'N'");

:: Dołącz KEO/KEOK/KEON
{? _typ<>''
|| _fb:="params_exec('keop_add','odpady_keo')";
   KEOP.win_act(_werp,0,'Formuła','Dołącz'@@,,,_fb,,,,,,'D');
   task_attach('LUO_KEO_DKEO');
   KEOP.win_act(_werp,1,'Formuła','Dołącz'@@,,,_fb,,,,,,'D');
   task_attach('LUO_KEO_DKEO')
?};
:: Popraw, Usuń
_fb:="params_exec('keop_put','odpady_keo')";
KEOP.win_act(_werp,,'Formuła','Popraw'@@,,,_fb,,,,,,'P');
task_attach('LUO_KEO_DKEO');
_fb:="params_exec('keop_del','odpady_keo')";
_fbg:="params_exec('keop_del_bg','odpady_keo')";
_fag:="params_exec('keop_del_ag','odpady_keo')";
KEOP.win_act(_werp,,'Formuła','Usuń'@@,,,_fb,,,1,_fbg,_fag,'U');
task_attach('LUO_KEO_DKEO');
:: Akcja Generuj w oknie kart Przekazane
{? _typ=exec('typ_keo_forwarded','odpady_keo') | _typ=exec('typ_keok_transferred','odpady_keo')
|| _fb:="params_exec('keop_gen','odpady_keo')";
   _fbg:="params_exec('keop_gen_bg','odpady_keo')";
   _fag:="params_exec('keop_gen_ag','odpady_keo')";
   KEOP.win_act(_werp,,'Formuła','Generuj'@@,,,_fb,,,1,_fbg,_fag,'G')
?};
task_attach('LUO_KEO_DKEO');
:: Wyświetl, Rekord
_fb:="params_exec('keop_set_win','odpady_keo');KEOP.display()";
KEOP.win_act(_werp,,'Wyświetl',,,,_fb);
_fb:="params_exec('keop_rkprz','odpady_keo',_a)";
KEOP.win_act(_werp,,'Rekord',,,,_fb);
:: BDO
KEOP.win_act(_werp,0,'Menu','BDO'@@,,,,,,,,,'B');
KEOP.win_act(_werp,1,'Menu','BDO'@@,,,,,,,,,'B');
_fb:="params_exec('keo_entry_bdo_send','odpady_keo')";
_fbg:="params_exec('keo_entry_bdo_send_bg','odpady_keo')";
_fag:="params_exec('keo_entry_bdo_send_ag','odpady_keo')";
KEOP.win_act(_werp,,'Formuła','Wyślij do BDO'@,'#B',,_fb,,,1,_fbg,_fag,'W');
task_attach('LUO_KEO_DKEO');
_fb:="params_exec('keo_entry_bdo_delete','odpady_keo')";
_fbg:="params_exec('keo_entry_bdo_delete_bg','odpady_keo')";
_fag:="params_exec('keo_entry_bdo_delete_ag','odpady_keo')";
KEOP.win_act(_werp,,'Formuła','Usuń z BDO'@,'#B',,_fb,,,1,_fbg,_fag,'U');
task_attach('LUO_KEO_DKEO');
_fb:="params_exec('keo_entry_bdo_receive','odpady_keo')";
_fbg:="params_exec('keo_entry_bdo_receive_bg','odpady_keo')";
_fag:="params_exec('keo_entry_bdo_receive_ag','odpady_keo')";
KEOP.win_act(_werp,,'Formuła','Aktualizuj z BDO'@,'#B',,_fb,,,1,_fbg,_fag,'A');
task_attach('LUO_KEO_DKEO');
KEOP.win_act(_werp,0,'Formuła','--','#B',,,,,,,,'Ż');
KEOP.win_act(_werp,1,'Formuła','--','#B',,,,,,,,'Ż');
_fb:="params_exec('keo_entry_bdo_import','odpady_keo')";
KEOP.win_act(_werp,0,'Formuła','Importuj'@@,'#B',,_fb);
task_attach('LUO_KEO_DKEO');
KEOP.win_act(_werp,1,'Formuła','Importuj'@@,'#B',,_fb);
task_attach('LUO_KEO_DKEO');
:: Kontekst pracy (tylko w widoku wszystkich pozycji)
{? _typ=''
|| KEOP.win_act(_werp,0,'Formuła','Kon&tekst pracy'@@,,,"params_exec('kpo_kp','odpady')",,,,,,'T');
   KEOP.win_act(_werp,1,'Formuła','Kon&tekst pracy'@@,,,"params_exec('kpo_kp','odpady')",,,,,,'T')
?};
:: Parametry pracy (tylko w widoku wszystkich pozycji)
{? _typ=''
|| KEOP.win_act(_werp,0,'Formuła','Param&etry pracy'@@,,,"params_exec('luo_keo_param_proc','luo')",,,,,,'E');
   KEOP.win_act(_werp,1,'Formuła','Param&etry pracy'@@,,,"params_exec('luo_keo_param_proc','luo')",,,,,,'E')
?};
:: Raporty (tylko w widoku wszystkich pozycji)
{? _typ=''
|| KEOP.win_act(_werp,0,'Menu','Raporty'@@,,,,,,,,,'R');
   KEOP.win_act(_werp,1,'Menu','Raporty'@@,,,,,,,,,'R');
   KEOP.win_act(_werp,0,'Formuła','Zapytania S&QL'@@,'#R',,"params_exec('main','!luo_keo_zsql')",,,,,,'Q');
   task_attach('LUO_KEO_ZSQL');
   KEOP.win_act(_werp,1,'Formuła','Zapytania S&QL'@@,'#R',,"params_exec('main','!luo_keo_zsql')",,,,,,'Q');
   task_attach('LUO_KEO_ZSQL')
?};
:: Szukaj, Kolejność
KEOP.win_act(_werp,,'Szukaj');
KEOP.win_act(_werp,,'Kolejność');

_werp


\keop_rkprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja na rekord przed w oknach tabeli KEOP
::   WE: _a - parametr systemowy
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_wer:=_env.KEOP_WER;
{? _a
|| {? KEOP.sel_size()=0
   || _grayed:=':';
::    BDO - zależne od tokena dostępowego - wszystko wyłączone
      {? __BDO_TOKEN=''
      || _grayed:='B'+_grayed
      ||
::       BDO - zależne od KEO.BDO_ID
         {? KEOP.BDO_ID=''
         || _grayed:='B(AU)'+_grayed
         || _grayed:='PUB(W)'+_grayed
         ?}
      ?};
      KEOP.actions_grayed(_wer,_grayed)
   ||
::    BDO zależne od tokena dostępowego - wszystko wyłączone
      {? __BDO_TOKEN=''
      || KEOP.actions_grayed(_wer,'B')
      || KEOP.actions_grayed(_wer,'')
      ?}
   ?}
?};
{? _wer=_env.WERS.KEOP_ALL
|| VAR.STRING:=exec('translate_typ','odpady_keo',KEOP.TYP)
|? _wer=_env.WERS.KEO_COL | _wer=_env.WERS.KEO_FOR | _wer=_env.WERS.KEOK_REC | _wer=_env.WERS.KEOK_TRA
|| VAR.STRING2:=exec('translate_rodz','odpady_keo',KEOP.RODZ)
?};
~~


\kpo_tab_zakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja Zmień Zakres w oknie wyboru dostępnych kart przekazania odpadów
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_zakres:=_env.ZAKRES;
_zakr_w:=ZAKR.mk_edit('Zakres kart przekazania odpadów'@,,'#kpo_zakres');
ZAKR.win_ewin(_zakr_w,,{? _zakres.TYP='KPO' || 'KPO' || 'KPOK' ?});
exec('ok_esc','#window',ZAKR,_zakr_w);
ZAKR.win_edit(_zakr_w);
exec('tab_zakr_set_efld_opt','odpady_keo',ZAKR.win_edit('?'));
_valid:="
   _res:='';
   {? ZAKR.ARCH_ROK=''
   || FUN.info('Rok musi być określony'@);
      _res:='ARCH_ROK'
   ?};
   _res
";
{? ZAKR.edit(_valid)
||
::    Jeżeli zmieniono parametry/zakres to ustalam nowy filtr
   {? _zakres.CZY_KEO<>ZAKR.CZY_KEO | _zakres.CZY_ODP<>ZAKR.CZY_ODP | _zakres.ROK<>ZAKR.ARCH_ROK
      | _zakres.CZY_GM<>ZAKR.CZY_GM
   || _zakres.CZY_KEO:=ZAKR.CZY_KEO;
      _zakres.CZY_ODP:=ZAKR.CZY_ODP;
      _zakres.ROK:=ZAKR.ARCH_ROK;
      _zakres.CZY_GM:=ZAKR.CZY_GM;
      params_exec('kpo_tab_filter','odpady_keo')
   ?}
?};
~~


\kpo_tab_filter
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Ustala filtr (zakres) wyświetlanych kart przekazania odpadów
::----------------------------------------------------------------------------------------------------------------------
_where:='';
_from:='';
_typ_poz:=KEOP.TYP;
::_typ_nag:=KEOP.KEO().TYP;
_typ:={? _typ_poz=exec('typ_keo_collected','odpady_keo') | _typ_poz=exec('typ_keok_received','odpady_keo')
      || 'PRZEJECIE'
      |? _typ_poz=exec('typ_keo_forwarded','odpady_keo') | _typ_poz=exec('typ_keok_transferred','odpady_keo') |
         _typ_poz=exec('typ_keok_collected','odpady_keo')
      || 'PRZEKAZANIE'
      |? _typ_poz=exec('typ_keon_item','odpady_keo')
      || 'DOWOLNY'
      || 'INVALID'
      ?};
_typ_kpo:={? KEOP.RODZ=exec('rodz_kpo','odpady_keo')
          || exec('typ_kpo','odpady')
          |? _typ_poz=exec('typ_keok_transferred','odpady_keo')
          || exec('typ_kpok_tra','odpady')
          |? _typ_poz=exec('typ_keok_collected','odpady_keo')
          || exec('typ_kpok_rec','odpady')
          |? _typ_poz=exec('typ_keok_received','odpady_keo') | _typ_poz=exec('typ_keo_collected','odpady_keo') |
             _typ_poz=exec('typ_keo_forwarded','odpady_keo')
          || 'KPOK'
          |? _typ_poz=exec('typ_keon_item','odpady_keo')
          || KEOP.R_DOK
          || 'INVALID'
          ?};
{? _typ='PRZEKAZANIE'
|| _from+='join KH using (KPO.KH,KH.REFERENCE) ';
   _where+='KPO.KH=:_a and KPO.KH_MPD=\':_b\' ';
   KPO.win_sel('SEL_GEN')
|? _typ='PRZEJECIE'
|| _from+='join KH using (KPO.KH_2,KH.REFERENCE) ';
   _where+='KPO.KH_2=:_a and KPO.KH_2_MPD=\':_b\' ';
   KPO.win_sel('SEL_REC')
|? _typ='DOWOLNY'
|| _from+='join KH K using (KPO.KH,K.REFERENCE)  join KH K2 using (KPO.KH_2,K2.REFERENCE) ';
   _where+='((KPO.KH=:_a and KPO.KH_MPD=\':_b\') or (KPO.KH_2=:_a and KPO.KH_2_MPD=\':_b\')) ';
   KPO.win_sel('SEL_ALL')
?};
:: Tylko karty obsłużone ze stausami: potwierdzone przyjęcie/transport
_where+=' and KPO.OB=\'T\' and (KPO.KPO_STAT=:_c or KPO.KPO_STAT=:_d) ';
:: Typ KPO/KPOK
{? _typ_kpo='KPOK'
|| _where+=' and KPO.TYP<>\':_e\' ';
   _typ_kpo:=exec('typ_kpo','odpady')
|| _where+=' and KPO.TYP=\':_e\' '
?};
:: uwzględnienie zakresu użytkownika
{? ZAKR.CZY_KEO>0
|| {? _typ='PRZEKAZANIE'
   || _where+='and KEO_GEN=\'T\' '
   |? _typ='PRZEJECIE'
   || _where+='and KEO_REC=\'T\' '
   ?}
|? ZAKR.CZY_KEO=0
|| {? _typ='PRZEKAZANIE'
   || _where+='and KEO_GEN=\'N\' '
   |? _typ='PRZEJECIE'
   || _where+='and KEO_REC=\'N\' '
   ?}
?};
{? ZAKR.CZY_ODP
|| _from:=' join ODP using (KPO.ODP,ODP.reference) ';
   _where+='and ODP.KOD=\''+ZAKR.ODP().KOD+'\' '
?};
{? ZAKR.CZY_GM
|| _where+='and KOD_G=\''+ZAKR.KOD_G+'\' '
?};
{? ZAKR.ARCH_ROK<>''
|| {? KPO.name()+2<>ZAKR.ARCH_ROK+2
   || _msk:=(KPO.name()-2)+(ZAKR.ARCH_ROK+2);
      KPO.use(_msk)
   ?}
::   _where+='and ROK=\''+ZAKR.ARCH_ROK+'\' '
?};

KPO.clear();
KPO.f_set(,_from,_where,VAR.POD,VAR.MPD().NRMPDBDO,exec('kpo_stat_receive_confirmation','odpady')
          ,exec('kpo_stat_transport_confirmation','odpady'),_typ_kpo);

~~


\kpo_tab_filter_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Ustala domyslne wartości dot. zakresu wyświetlanych kart przekazania odpadów
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_zakres:=_env.ZAKRES;
_zakres.TYP:={? KEOP.TYP=exec('typ_keok_collected','odpady_keo')  |
               (KEOP.RODZ=exec('rodz_kpok','odpady_keo') & KEOP.KEO().TYP=exec('typ_keok','odpady_keo'))
             || 'KPOK'
             || 'KPO'
             ?};
:: domyślnie filtruje po danym kodzie odpadu, aktualnym roku, kart nieprzypisanych do ewidencji, gminie (dla KPOK)
_zakres.CZY_KEO:=ZAKR.CZY_KEO:=0;
_zakres.CZY_ODP:=ZAKR.CZY_ODP:=1;
_zakres.ROK:=ZAKR.ARCH_ROK:=$ST.AR;
_zakres.CZY_GM:=ZAKR.CZY_GM:={? _zakres.TYP='KPOK' || 1 || 0 ?};
ZAKR.ODP:={? ZAKR.CZY_ODP || KEO.ODP || null() ?};
ZAKR.KOD_G:={? ZAKR.CZY_GM || KEO.KOD_G || '' ?};
ZAKR.NAZ_G:={? ZAKR.CZY_GM || KEO.NAZ_G || '' ?};
~~


\tab_zakr_set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Ustawia wymagane pola dla okna z zakresem wyświetlanych kart przekazania odpadów
::   WE: [_a] - akronim okienka
::----------------------------------------------------------------------------------------------------------------------
_win:={? var_pres('_a')=type_of('') || _a || cur_win(1,1) ?};
{? KEOP.TYP=exec('typ_keok_collected','odpady_keo')
|| ZAKR.efld_opt(_win,'editable=grayed',,'CZY_ODP');
   ZAKR.efld_opt(_win,'editable=grayed',,'CZY_GM')
|| ZAKR.efld_opt(_win,'editable=1',,'CZY_ODP');
   ZAKR.efld_opt(_win,'editable=1',,'CZY_GM')
?};
{? KEOP.TYP=exec('typ_keon_item','odpady_keo')
|| ZAKR.efld_opt(_win,'editable=grayed',,'CZY_KEO')
|| ZAKR.efld_opt(_win,'editable=1',,'CZY_KEO')
?};
~~


\ae_kpo_zakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja po redagowaniu dla pól określających zakres wyświetlanych kart przekazania odpadów
::   WE: Uchwyt do tabeli tymczasowej
::   WY: utworzone okno
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
{? _fld='CZY_ODP'
|| {? ZAKR.CZY_ODP
   || ZAKR.ODP:=ODP.ref()
   || ZAKR.ODP:=null()
   ?}
|? _fld='CZY_GM'
|| {? ZAKR.CZY_GM
   || ZAKR.KOD_G:=KEO.KOD_G;
      ZAKR.NAZ_G:=KEO.NAZ_G
   || ZAKR.KOD_G:='';
      ZAKR.NAZ_G:=''
   ?}
?};
1


\keop_nrdok_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Akcja F3 dla numeru dokumentu/karty przekazania odpadów (NRDOK) tabeli KEOP
::       - wyświetlenie listy dostępnych kart przekazania odadów (KPO)
::   WY: Numer (symbol) wybranej karty przekazania odadów
::----------------------------------------------------------------------------------------------------------------------
_res:=fld();
_env:=params_get().env;
_zakres:=_env.ZAKRES;
params_set(params_get());
KPO.cntx_psh();
KPO.clear();
ODP.cntx_psh();
KEOP.KEO().ODP();
params_exec('kpo_tab_filter','odpady_keo');
{? KPO.select()
|| _res:=KPO.SYM;
   {? KEOP.TYP<>exec('typ_keon_item','odpady_keo')
   || KEOP.RKPO:=$KPO.ref()
   ||
::    Przypisuje kontrahenta przejmującego oraz przekazującego (o ile ma przypisany nr rejestrowy BDO)
      KH.cntx_psh();
      KEOP.KH:={? KPO.KH().NRREJDBO<>'' || KPO.KH || null() ?};
      KEOP.KH_2:={? KPO.KH_2().NRREJDBO<>'' || KPO.KH_2 || null() ?};
      KH.cntx_pop()
   ?};
   KEOP.DT:=KPO.DTR;
   KEOP.MASA:=KPO.IL
?};
KPO.f_clear();
KPO.cntx_pop();
ODP.cntx_pop();
_res


\keop_trig_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Wyzwalacze po dla KEOP
::   WE: _a [STRING] - miejsce uruchomienia wyzwalacza 'add', 'put' lub 'del'
::----------------------------------------------------------------------------------------------------------------------
_rec:={? KEOP.TYP=exec('typ_keo_collected','odpady_keo') | KEOP.TYP=exec('typ_keok_received','odpady_keo') || 1 || 0 ?};
{? _a='add'
|| _ref:=KEOP.RKPO;
   {? _ref<>''
   ||
::    Aktualizuje znacznik powiązania z ewidencją na powiązanej karcie
      KPO.cntx_psh();
      {? KPO.seek(_ref,ref_name(_ref))
      || {? _rec
         || {? KPO.KEO_REC<>'T'
            || KPO.KEO_REC:='T';
               KPO.put()
            ?}
         || {? KPO.KEO_GEN<>'T'
            || KPO.KEO_GEN:='T';
               KPO.put()
            ?}
         ?}
      ?};
      KPO.cntx_pop()
   ?};
   _src:=KEOP.GEN_SRC;
   {? _src<>''
   ||
::    Aktualizuje znacznik wygenerowania wpisu na pozycji źródłowej
      KEOP.cntx_psh();
      KEOP.prefix();
      {? KEOP.seek(_src,ref_name(_src))
      || {? KEOP.GEN<>'T'
         || KEOP.GEN:='T';
            KEOP.put()
         ?}
      ?};
      KEOP.cntx_pop()
   ?}
|? _a='put'
|| _ref_old:=bfld('RKPO');
   _ref_new:=KEOP.RKPO;
   {? _ref_old<>_ref_new
   ||
      {? _ref_old<>''
      ||
::       Aktualizuje znacznik powiązania z ewidencją na poprzedniej karcie
         _czy_keo:={? exec('kpo_czy_keo','odpady_keo',_ref_old,_rec) || 'T' || 'N' ?};
         KPO.cntx_psh();
         {? KPO.seek(_ref_old,ref_name(_ref_old))
         || {? _rec
            || {? KPO.KEO_REC<>_czy_keo
               || KPO.KEO_REC:=_czy_keo;
                  KPO.put()
               ?}
            || {? KPO.KEO_GEN<>_czy_keo
               || KPO.KEO_GEN:=_czy_keo;
                  KPO.put()
               ?}
            ?}
         ?};
         KPO.cntx_pop()
      ?};
      {? _ref_new<>''
      ||
::       Aktualizuje znacznik powiązania z ewidencją na nowej karcie
         _czy_keo:={? exec('kpo_czy_keo','odpady_keo',_ref_new,_rec) || 'T' || 'N' ?};
         KPO.cntx_psh();
         {? KPO.seek(_ref_new,ref_name(_ref_new))
         || {? _rec
            || {? KPO.KEO_REC<>_czy_keo
               || KPO.KEO_REC:=_czy_keo;
                  KPO.put()
               ?}
            || {? KPO.KEO_GEN<>_czy_keo
               || KPO.KEO_GEN:=_czy_keo;
                  KPO.put()
               ?}
            ?}
         ?};
         KPO.cntx_pop()
      ?}
   ?}
|? _a='del'
|| _ref:=bfld('RKPO');
   {? _ref<>''
   ||
::    Aktualizuje znacznik powiązania z ewidencją na powiązanej karcie
      _czy_keo:={? exec('kpo_czy_keo','odpady_keo',_ref,_rec) || 'T' || 'N' ?};
      KPO.cntx_psh();
      {? KPO.seek(_ref,ref_name(_ref))
      || {? _rec
         || {? KPO.KEO_REC<>_czy_keo
            || KPO.KEO_REC:=_czy_keo;
               KPO.put()
            ?}
         || {? KPO.KEO_GEN<>_czy_keo
            || KPO.KEO_GEN:=_czy_keo;
               KPO.put()
            ?}
         ?}
      ?};
      KPO.cntx_pop()
   ?};
   _src:=bfld('GEN_SRC');
   {? _src<>''
   ||
::    Aktualizuje znacznik wygenerowania wpisu na pozycji źródłowej
      KEOP.cntx_psh();
      KEOP.index('GEN_SRC');
      KEOP.prefix(_src);
      {? ~KEOP.first()
      || KEOP.prefix();
         {? KEOP.seek(_src,ref_name(_src))
         || KEOP.GEN:='N';
            KEOP.put()
         ?}
      ?};
      KEOP.cntx_pop()
   ?}
?};
~~


\kpo_czy_keo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Sprawdza, czy dana karta przekazania odpadu jest wykorzystywana w ewidencji (KEO)
::   WE: _a - STRING - ref karty, $KPO.ref()
::       _b - INTEGER - Typ karty, która użycie sprawdzać: 1 - przyjęcia, 0 - przekazanie
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_rec:=_b;
_res:=0;
{? _ref<>''
|| _rule:="
      _args:=_b;
      _ref:=_args.REF;
      _rec:=_args.REC;
      _res:=0;
      KEOP.cntx_psh();
      KEOP.index('RKPO');
      KEOP.prefix(_ref);
      {? KEOP.first()
      || {!
         |?
            {? (_rec & (KEOP.TYP=exec('typ_keo_collected','odpady_keo') |
               KEOP.TYP=exec('typ_keok_received','odpady_keo')))
               | (_rec=0 & (KEOP.TYP=exec('typ_keo_forwarded','odpady_keo') |
                 KEOP.TYP=exec('typ_keok_collected','odpady_keo') | KEOP.TYP=exec('typ_keok_transferred','odpady_keo')))
            || _res:=1
            ?};
            _res=0 & KEOP.next()
         !}
      ?};
      KEOP.cntx_pop();
      _res
   ";
   _args:=obj_new('REF','REC');
   _args.REF:=_ref;
   _args.REC:=_rec;
   _res:=~exec('for_each_mask','#table',KEOP,_rule,,,_args,0)
?};
_res


\keo_czy_keop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Sprawdza, czy dana karta ewidencji odpadu (KEO) posiada zdefiniowane pozycje (KEOP)
::   WE: [_a] - STRING - ref karty, $KEO.ref(), jak nie podany to bieżący rekord
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_ref:={? var_pres('_a')=type_of('') || _a || $KEOP.ref() ?};
_res:=0;
{? _ref<>''
|| _msk:='keopo'+(ref_name(_ref)+3);
   KEOP.cntx_psh();
   KEOP.use(_msk);
   KEOP.cntx_psh();
   KEOP.index('KEO_TYP');
   KEOP.prefix(KEO.ref());
   {? KEOP.first()
   || _res:=1
   ?};
   KEOP.cntx_pop();
   KEOP.cntx_pop()
?};
_res


\keo_nr_nadaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Nadanie numeru karty
::----------------------------------------------------------------------------------------------------------------------
{? KEO.NR=0
|| _nr:=0;
   KEO.cntx_psh();
   KEO.index('NR');
   KEO.prefix(KEO.KH_ODB,KEO.TYP,);
   {? KEO.last()
   || _nr:=KEO.NR
   ?};
   _nr+=1;
   KEO.cntx_pop();
   KEO.NR:=_nr;
   KEO.SYM:=$_nr;
   KEO.put()
?};
~~


\keo_bdo_create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Tworzenie karty KEO/KEOK/KEON na BDO przez API
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_selected:=(VAR.GRUPA='T');

:: KEO
{? KEO.TYP=exec('typ_keo','odpady_keo')
|| _obj:=exec('Keo_create','bdo_api',
      KEO.ODP().BDO_ID,
      KEO.MASA,
      {? KEO.IS_GENE='T' || 'true' || 'false' ?},
      {? KEO.IS_COLL='T' || 'true' || 'false' ?},
      {? KEO.IS_SLVG='T' || 'true' || 'false' ?},
      {? KEO.IS_NEUT='T' || 'true' || 'false' ?},
      {? KEO.EX='T' || 'true' || 'false' ?},
      KEO.EX_DESC,
      {? KEO.HAZ='T' || 'true' || 'false' ?},
      KEO.HAZ_DESC,
      KEO.INSTALLN
   );
:: Utrwalenie identyfikatora i symbolu
   {? _obj.STATUS=201
   || _keoId:=json_parse(_obj.DATA).keoId;
      _obj.log_update(_keoId);
      _cardNumber:=json_parse(_obj.DATA).cardNumber;
      KEO.BDO_ID:=_keoId;
      KEO.SYM:=_cardNumber;
      KEO.BDO_UTC:=utc_get();
      {? KEO.put()
      || _obj.log_update('|%1'[KEO.uidref()]);
         _can_continue:=1
      ?}
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

:: KEOK
|? KEO.TYP=exec('typ_keok','odpady_keo')
|| _obj:=exec('Keok_create','bdo_api',
      KEO.ODP().BDO_ID,
      KEO.KOD_G,
      KEO.MASA,
      {? KEO.IS_RECV='T' || 'true' || 'false' ?},
      {? KEO.IS_COLL='T' || 'true' || 'false' ?},
      {? KEO.IS_SLVG='T' || 'true' || 'false' ?},
      {? KEO.IS_NEUT='T' || 'true' || 'false' ?},
      {? KEO.EX='T' || 'true' || 'false' ?},
      KEO.EX_DESC,
      {? KEO.HAZ='T' || 'true' || 'false' ?},
      KEO.HAZ_DESC
   );
:: Utrwalenie identyfikatora i symbolu
   {? _obj.STATUS=201
   || _keokId:=json_parse(_obj.DATA).keokId;
      _obj.log_update(_keokId);
::    Dla KEOK o numer karty trzeba zapytać osobno
      _obj1:=exec('Keok_get','bdo_api',_keokId);
      {? _obj1.STATUS=200
      || _cardNumber:=json_parse(_obj1.DATA).cardNumber;
         KEO.BDO_ID:=_keokId;
         KEO.SYM:=_cardNumber;
         KEO.BDO_UTC:=utc_get();
         {? KEO.put()
         || _obj.log_update('|%1'[KEO.uidref()]);
            _obj1.log_update('|%1'[KEO.uidref()]);
            _can_continue:=1
         ?}
      || KOMM.error(_obj1.MESSAGE,~_selected)
      ?}
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

:: KEON
|? KEO.TYP=exec('typ_keon','odpady_keo')
|| _obj:=exec('Keon_create','bdo_api',
      KEO.ODP().BDO_ID,
      {? KEO.EX='T' || 'true' || 'false' ?},
      KEO.EX_DESC
   );
:: Utrwalenie identyfikatora i symbolu
   {? _obj.STATUS=201
   || _keonId:=json_parse(_obj.DATA).keonId;
      _obj.log_update(_keonId);
      _cardNumber:=json_parse(_obj.DATA).cardNumber;
      KEO.BDO_ID:=_keonId;
      KEO.SYM:=_cardNumber;
      KEO.BDO_UTC:=utc_get();
      {? KEO.put()
      || _obj.log_update('|%1'[KEO.uidref()]);
         _can_continue:=1
      ?}
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

?};
~~


\keo_bdo_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Modyfikacja karty KEO/KEOK/KEON na BDO przez API
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_selected:=(VAR.GRUPA='T');

:: KEO
{? KEO.TYP=exec('typ_keo','odpady_keo')
|| _obj:=exec('Keo_update','bdo_api',
      KEO.BDO_ID,
      KEO.ODP().BDO_ID,
      KEO.MASA,
      {? KEO.IS_GENE='T' || 'true' || 'false' ?},
      {? KEO.IS_COLL='T' || 'true' || 'false' ?},
      {? KEO.IS_SLVG='T' || 'true' || 'false' ?},
      {? KEO.IS_NEUT='T' || 'true' || 'false' ?},
      {? KEO.EX='T' || 'true' || 'false' ?},
      KEO.EX_DESC,
      {? KEO.HAZ='T' || 'true' || 'false' ?},
      KEO.HAZ_DESC,
      KEO.INSTALLN
   );
   _obj.log_update('|%1'[KEO.uidref()]);
   {? _obj.STATUS<>200
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

:: KEOK
|? KEO.TYP=exec('typ_keok','odpady_keo')
|| _obj:=exec('Keok_update','bdo_api',
      KEO.BDO_ID,
      KEO.ODP().BDO_ID,
      KEO.KOD_G,
      KEO.MASA,
      {? KEO.IS_RECV='T' || 'true' || 'false' ?},
      {? KEO.IS_COLL='T' || 'true' || 'false' ?},
      {? KEO.IS_SLVG='T' || 'true' || 'false' ?},
      {? KEO.IS_NEUT='T' || 'true' || 'false' ?},
      {? KEO.EX='T' || 'true' || 'false' ?},
      KEO.EX_DESC,
      {? KEO.HAZ='T' || 'true' || 'false' ?},
      KEO.HAZ_DESC
   );
   _obj.log_update('|%1'[KEO.uidref()]);
   {? _obj.STATUS<>204
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

:: KEON
|? KEO.TYP=exec('typ_keon','odpady_keo')
||
:: KEON nie mają w API funkcji modyfikacji nagłówka
   ~~
?};
~~


\keo_bdo_delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Usunięcie karty KEO/KEOK/KEON na BDO przez API
::----------------------------------------------------------------------------------------------------------------------
_selected:=(VAR.GRUPA='T');

KEOP.cntx_psh();
KEOP.index('KEO_TYP');
KEOP.prefix(KEO.ref());
_has_entries:=KEOP.first();
KEOP.cntx_pop();

{? _has_entries
|| KOMM.error('Karta %1 ma pozycje, nie można usunąć z BDO.'@[KEO.SYM],~_selected)
||
:: KEO
   {? KEO.TYP=exec('typ_keo','odpady_keo')
   || _obj:=exec('Keo_delete','bdo_api',KEO.BDO_ID);
::    Usunięcie identyfikatora
      {? _obj.STATUS=204
      || KEO.BDO_ID:='';
         KEO.BDO_UTC:=0;
         {? KEO.put()
         || _can_continue:=1
         ?}
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

:: KEOK
   |? KEO.TYP=exec('typ_keok','odpady_keo')
   || _obj:=exec('Keok_delete','bdo_api',KEO.BDO_ID);
::    Usunięcie identyfikatora
      {? _obj.STATUS=204
      || KEO.BDO_ID:='';
         KEO.BDO_UTC:=0;
         {? KEO.put()
         || _can_continue:=1
         ?}
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

:: KEON
   |? KEO.TYP=exec('typ_keon','odpady_keo')
   || _obj:=exec('Keon_delete','bdo_api',KEO.BDO_ID);
::    Usunięcie identyfikatora
      {? _obj.STATUS=204
      || KEO.BDO_ID:='';
         KEO.BDO_UTC:=0;
         {? KEO.put()
         || _can_continue:=1
         ?}
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

   ?};
   _obj.log_update('|%1'[KEO.uidref()])
?};
~~


\keo_bdo_send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Wysłanie danych nagłówka (create/update)
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

{? KEO.BDO_ID=''
||
:: Sprawdzenie, czy są już karty o takiej samej charakterystyce, jeśli tak, to można próbować pobrać dane z BDO
   {? exec('keo_bdo_find','odpady_keo')
   || _choice:=FUN.choice(
            'Jest już karta o tej samej charakterystyce na portalu BDO.\n\n'
            'Czy pobrać dane?'@,,
            'Wyświetlić karty do wyboru'@,'Wysłać &bieżącą kartę'@
      );
      {? _choice=1
      || _id:=exec('keo_bdo_select','odpady_keo');
         {? _id<>''
         || KEO.BDO_ID:=_id;
            {? KEO.put()
            || exec('keo_bdo_receive','odpady_keo')
            ?}
         ?}
      |? _choice=2
      || exec('keo_bdo_create','odpady_keo')
      ?}
   || exec('keo_bdo_create','odpady_keo')
   ?}
|| exec('keo_bdo_update','odpady_keo')
?};
~~


\keo_bdo_find
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Sprawdzenie, czy na portalu BDO jest jakaś karta ewidencji o takiej samej charakterystyce
::       (kod odpadu albo kod odpadu + kod gminy)
::----------------------------------------------------------------------------------------------------------------------
_rok:=KEO.ROK;
_wasteCode:=exec('wasteCode','bdo_fun',KEO.ODP,0);

:: Podręczny JMAN
_jman:=exec('json_man','__jsonm');

_result:=0;
{? KEO.TYP=exec('typ_keo','odpady_keo')
|| _obj:=exec('Keo_search','bdo_api',1,50,_wasteCode,'/%1/'[$_rok]);
   {? _obj.STATUS=200
   || _jman.load(_obj.DATA);
      {? _jman.isPath('items[1]') || _result:=1 ?}
   ?}
|? KEO.TYP=exec('typ_keok','odpady_keo')
|| _obj:=exec('Keok_search','bdo_api',1,50,_wasteCode,'/%1/'[$_rok],KEO.KOD_G);
   {? _obj.STATUS=200
   || _jman.load(_obj.DATA);
      {? _jman.isPath('items[1]') || _result:=1 ?}
   ?}
|? KEO.TYP=exec('typ_keon','odpady_keo')
|| _obj:=exec('Keon_search','bdo_api',1,50,_wasteCode,'/%1/'[$_rok]);
   {? _obj.STATUS=200
   || _jman.load(_obj.DATA);
      {? _jman.isPath('items[1]') || _result:=1 ?}
   ?}
|| _result:=0
?};
_result


\keo_bdo_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Wyświetla karty ewidencji o charakterystyce zgodnej z bieżącym rekordem
::       (kod odpadu albo kod odpadu + kod gminy)
::   WY: identyfikator karty w systemie BDO / ''
::----------------------------------------------------------------------------------------------------------------------
:: UWAGA: w tym przypadku nie jest robiona pętla w celu podebrania kolejnych wyników
::         - nie powinno być więcej niż jedna paczka danych
_page:=1;
_result:='';

_rok:=KEO.ROK;
_wasteCode:=exec('wasteCode','bdo_fun',KEO.ODP,0);

_tab:=tab_tmp(2
   ,'TYP','STRING[5]','Typ karty'@
   ,'SYMBOL','STRING[40]','Numer karty'@
   ,'ID','STRING[40]','Identyfikator'@
   ,'EX','STRING[1]','Kod ex'@
   ,'EX_DESC','STRING[100]','Rodzaj odpadu ex'@
   ,'ERP','STRING[1]','Jest w ERP'@
);

:: Podręczne JMANy
_jman:=exec('json_man','__jsonm');
_jman1:=_jman.new('{}');
_jman2:=_jman.new('{}');

::======================================================================================================================
{? KEO.TYP=exec('typ_keo','odpady_keo')
|| _obj:=exec('Keo_search','bdo_api',_page,50,_wasteCode,'/%1/'[$_rok]);
   {? _obj.STATUS=200
   || _jman.load(_obj.DATA);
      _jman1.load(_jman.getJSON('items'));
      _size:=_jman1.countChildren();
      {? _size>0
      || {! _it:=1.. _size
         |! _jman2.load(_jman1.getJSON('[%1]'[$_it]));
            _tab.TYP:=KEO.TYP;
            _tab.SYMBOL:=_jman2.getValue('cardNumber');
            _tab.ID:=_jman2.getValue('keoId');
            _tab.EX:={? _jman2.getValue('wasteCodeExtended') || 'T' || 'N' ?};
            _tab.EX_DESC:=
               {? _jman2.typeOf('wasteCodeExtendedDescription',1)=_jman2.Const.TYPE.STRING
               || _jman2.getValue('wasteCodeExtendedDescription')
               || ''
               ?};
            _tab.ERP:={? exec('FindInSet','#table','KEO','BDO_ID',_tab.ID,,,1)=null() || 'N' || 'T' ?};
            _tab.add()
         !}
      ?}
   ?}

::======================================================================================================================
|? KEO.TYP=exec('typ_keok','odpady_keo')
|| _obj:=exec('Keok_search','bdo_api',_page,50,_wasteCode,'/%1/'[$_rok],KEO.KOD_G);
   {? _obj.STATUS=200
   || _jman.load(_obj.DATA);
      _jman1.load(_jman.getJSON('items'));
      _size:=_jman1.countChildren();
      {? _size>0
      || {! _it:=1.. _size
         |! _jman2.load(_jman1.getJSON('[%1]'[$_it]));
            _tab.TYP:=KEO.TYP;
            _tab.SYMBOL:=_jman2.getValue('cardNumber');
            _tab.ID:=_jman2.getValue('keokId');
            _tab.EX:={? _jman2.getValue('wasteCodeExtended') || 'T' || 'N' ?};
            _tab.EX_DESC:=
               {? _jman2.typeOf('wasteCodeExtendedDescription',1)=_jman2.Const.TYPE.STRING
               || _jman2.getValue('wasteCodeExtendedDescription')
               || ''
               ?};
            _tab.ERP:={? exec('FindInSet','#table','KEO','BDO_ID',_tab.ID,,,1)=null() || 'N' || 'T' ?};
            _tab.add()
         !}
      ?}
   ?}

::======================================================================================================================
|? KEO.TYP=exec('typ_keon','odpady_keo')
|| _obj:=exec('Keon_search','bdo_api',_page,50,_wasteCode,'/%1/'[$_rok]);
   {? _obj.STATUS=200
   || _jman.load(_obj.DATA);
      _jman1.load(_jman.getJSON('items'));
      _size:=_jman1.countChildren();
      {? _size>0
      || {! _it:=1.. _size
         |! _jman2.load(_jman1.getJSON('[%1]'[$_it]));
            _tab.TYP:=KEO.TYP;
            _tab.SYMBOL:=_jman2.getValue('cardNumber');
            _tab.ID:=_jman2.getValue('keonId');
            _tab.EX:={? _jman2.getValue('wasteCodeExtended') || 'T' || 'N' ?};
            _tab.EX_DESC:=
               {? _jman2.typeOf('wasteCodeExtendedDescription',1)=_jman2.Const.TYPE.STRING
               || _jman2.getValue('wasteCodeExtendedDescription')
               || ''
               ?};
            _tab.ERP:={? exec('FindInSet','#table','KEO','BDO_ID',_tab.ID,,,1)=null() || 'N' || 'T' ?};
            _tab.add()
         !}
      ?}
   ?}
?};
::======================================================================================================================

{? _tab.size()>0
|| _wer:=_tab.mk_sel('Karty ewidencji z BDO'@,,,'keoselect',,,,,'U');
   _tab.win_fld(_wer,,'SYMBOL');
   _tab.win_fld(_wer,,'ID');
   _tab.win_fld(_wer,,'EX',,,,,,,,,2,,"'T'","'N'");
   _tab.win_fld(_wer,,'EX_DESC',,,40);
   _tab.win_fld(_wer,,'ERP',,,,,,,,,2,,"'T'","'N'");
   _formula:="sel_exit()";
   _tab.win_act(_wer,,'Formuła','Wybierz'@@,,,_formula,,1,,,,'W');
   _formula:="
      _tab:=cur_tab(1,1);
      exec('mor_info_keo_core','odpady_keo',_tab.TYP,_tab.ID)
   ";
   _tab.win_act(_wer,,'Formuła','Więce&j informacji'@@,,,_formula,,,,,,'J');
   _formula:="
      _tab:=cur_tab(1,1);
      {? _tab.ERP='T' || _grayed:='W:' || _grayed:=':' ?};
      _tab.actions_grayed(cur_win(1,1),_grayed);
      ~~
   ";
   _tab.win_act(_wer,,'Rekord',,,,_formula);
   _tab.win_sel(_wer);

   {? _tab.select()
   || _result:=_tab.ID
   ?}
?};

_result


\keo_bdo_receive
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Aktualizacja danych nagłówka z BDO (get)
::----------------------------------------------------------------------------------------------------------------------
_selected:=(KEO.sel_size()>0);

{? KEO.BDO_ID=''
|| KOMM.info('Nie można zaktualizować wpisu %1 — karta ewidencji nie została wysłana do BDO.'@[KEO.SYM],~_selected)
|| _jman:=exec('json_man','__jsonm','{}');

::======================================================================================================================
:: KEO
::{
::  "keoId": "string",
::  "wasteCodeId": 0,
::  "cardNumber": "string",
::  "createdByUserId": "string",
::  "isWasteGenerating": true,
::  "isWasteCollecting": true,
::  "isSalvage": true,
::  "isNeutralization": true,
::  "year": 0,
::  "wasteMass": 0,
::  "canBeDeleted": true,
::  "wasteCodeExtended": true,
::  "wasteCodeExtendedDescription": "string",
::  "hazardousWasteReclassification": true,
::  "hazardousWasteReclassificationDescription": "string"
::}
   {? KEO.TYP=exec('typ_keo','odpady_keo')
   || _obj:=exec('Keo_get','bdo_api',KEO.BDO_ID);
      {? _obj.STATUS=200
      || _jman.load(_obj.DATA);
         KEO.SYM:=_jman.getValue('cardNumber');
         KEO.ODP:=exec('FindInSet','#table','ODP','BDO_ID',_jman.getValue('wasteCodeId'));
         KEO.MASA:=_jman.getValue('wasteMass');
         KEO.IS_GENE:={? _jman.getValue('isWasteGenerating') || 'T' || 'N' ?};
         KEO.IS_COLL:={? _jman.getValue('isWasteCollecting') || 'T' || 'N' ?};
         KEO.IS_SLVG:={? _jman.getValue('isSalvage') || 'T' || 'N' ?};
         KEO.IS_NEUT:={? _jman.getValue('isNeutralization') || 'T' || 'N' ?};
         KEO.EX:={? _jman.getValue('wasteCodeExtended') || 'T' || 'N' ?};
         _wasteCodeExtendedDescription:=_jman.getValue('wasteCodeExtendedDescription');
         KEO.EX_DESC:=
            {? var_pres('_wasteCodeExtendedDescription')=type_of('') || _wasteCodeExtendedDescription || '' ?};
         KEO.HAZ:={? _jman.getValue('hazardousWasteReclassification') || 'T' || 'N' ?};
         _hazardousWasteReclassDesc:=_jman.getValue('hazardousWasteReclassificationDescription');
         KEO.HAZ_DESC:=
            {? var_pres('_hazardousWasteReclassDesc')=type_of('') || _hazardousWasteReclassDesc || '' ?};
         KEO.BDO_UTC:=utc_get();
         {? KEO.put()
         || _can_continue:=1
         ?}
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
:: KEOK
::{
::  "keokId": "string",
::  "eupId": "string",
::  "cardNumber": "string",
::  "wasteCodeId": 0,
::  "wasteCode": "string",
::  "wasteCodeName": "string",
::  "year": 0,
::  "wasteOriginTerytId": "string",
::  "wasteOriginAddressHtml": "string",
::  "wasteOriginAddressFormatted": "string",
::  "initialWasteMass": 0,
::  "isWasteReceive": true,
::  "isWasteCollecting": true,
::  "isSalvage": true,
::  "isNeutralization": true,
::  "canBeEdited": true,
::  "wasteCodeExtended": true,
::  "wasteCodeExtendedDescription": "string",
::  "hazardousWasteReclassification": true,
::  "hazardousWasteReclassificationDescription": "string"
::}
   |? KEO.TYP=exec('typ_keok','odpady_keo')
   || _obj:=exec('Keok_get','bdo_api',KEO.BDO_ID);
      {? _obj.STATUS=200
      || _jman.load(_obj.DATA);
         KEO.SYM:=_jman.getValue('cardNumber');
         KEO.ODP:=exec('FindInSet','#table','ODP','BDO_ID',_jman.getValue('wasteCodeId'));
         KEO.KOD_G:=_jman.getValue('wasteOriginTerytId');
         KEO.NAZ_G:=exec('WyszukajGmine','teryt',KEO.KOD_G);
         KEO.IS_RECV:={? _jman.getValue('isWasteReceive') || 'T' || 'N' ?};
         KEO.IS_COLL:={? _jman.getValue('isWasteCollecting') || 'T' || 'N' ?};
         KEO.IS_SLVG:={? _jman.getValue('isSalvage') || 'T' || 'N' ?};
         KEO.IS_NEUT:={? _jman.getValue('isNeutralization') || 'T' || 'N' ?};
         KEO.MASA:=_jman.getValue('initialWasteMass');
         KEO.EX:={? _jman.getValue('wasteCodeExtended') || 'T' || 'N' ?};
         _wasteCodeExtendedDescription:=_jman.getValue('wasteCodeExtendedDescription');
         KEO.EX_DESC:=
            {? var_pres('_wasteCodeExtendedDescription')=type_of('') || _wasteCodeExtendedDescription || '' ?};
         KEO.HAZ:={? _jman.getValue('hazardousWasteReclassification') || 'T' || 'N' ?};
         _hazardousWasteReclassDesc:=_jman.getValue('hazardousWasteReclassificationDescription');
         KEO.HAZ_DESC:=
            {? var_pres('_hazardousWasteReclassDesc')=type_of('') || _hazardousWasteReclassDesc || '' ?};
         KEO.BDO_UTC:=utc_get();
         {? KEO.put()
         || _can_continue:=1
         ?}
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
:: KEON
::{
::  "keonId": "string",
::  "eupId": "string",
::  "cardNumber": "string",
::  "wasteCodeId": 0,
::  "wasteCodeExtended": true,
::  "wasteCodeExtendedDescription": "string",
::  "year": 0,
::  "companyId": "string"
::}
   |? KEO.TYP=exec('typ_keon','odpady_keo')
   || _obj:=exec('Keon_get','bdo_api',KEO.BDO_ID);
      {? _obj.STATUS=200
      || _jman.load(_obj.DATA);
         KEO.SYM:=_jman.getValue('cardNumber');
         KEO.ODP:=exec('FindInSet','#table','ODP','BDO_ID',_jman.getValue('wasteCodeId'));
         KEO.EX:={? _jman.getValue('wasteCodeExtended') || 'T' || 'N' ?};
         _wasteCodeExtendedDescription:=_jman.getValue('wasteCodeExtendedDescription');
         KEO.EX_DESC:=
            {? var_pres('_wasteCodeExtendedDescription')=type_of('') || _wasteCodeExtendedDescription || '' ?};
         KEO.BDO_UTC:=utc_get();
         {? KEO.put()
         || _can_continue:=1
         ?}
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
   ?};
   _obj.log_update('|%1'[KEO.uidref()])
?};
~~


\keo_bdo_receive_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Aktualizacja danych nagłówka z BDO - przed grupą zaznaczonych rekordów
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy zaktualizować zaznaczone karty z BDO?'@)
|| KOMM.init(,,'Aktualizacja danych z BDO'@);
   sel_nchk();
   1
|| 0
?}


\keo_bdo_receive_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Aktualizacja danych nagłówka z BDO - po grupie zaznaczonych rekordów
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
~~


\keo_entry_bdo_send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Wysłanie danych wpisu (create, update - nie obsługiwane)
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_selected:=(KEOP.sel_size()<>0);

{? KEOP.BDO_ID<>''
||
::   exec('keo_entry_bdo_update','odpady_keo')
   KOMM.info('Ponowne wysłananie wpisu do BDO nie jest obsługiwane.'@,~_selected)

|? KEOP.KEO().BDO_ID=''
|| KOMM.info('Nie można wysłać wpisu — karta ewidencji nie została wysłana do BDO.'@,~_selected)

|| {? _selected | FUN.ask('Czy wysłać bieżący wpis do BDO?'@)
   || exec('keo_entry_bdo_create','odpady_keo')
   ?}
?};
~~


\keo_entry_bdo_send_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Wysyłanie wpisu dla karty KEO/KEOK/KEON na BDO przez API - przed grupą zaznaczonych rekordów
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy wysłać zaznaczone wpisy do BDO?'@)
|| KOMM.init(,,'Wysyłanie danych do BDO'@);
   sel_nchk();
   1
|| 0
?}


\keo_entry_bdo_send_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Wysyłanie wpisu dla karty KEO/KEOK/KEON na BDO przez API - po grupie zaznaczonych rekordów
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
~~


\keo_entry_bdo_create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Tworzenie wpisu dla karty KEO/KEOK/KEON na BDO przez API
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_selected:=(KEOP.sel_size()>0);

:: Podczytanie nagłówka
KEOP.KEO();

_jman:=exec('json_man','__jsonm','{}');

_can_continue:=0;

::======================================================================================================================
{? KEOP.TYP=exec('typ_keo_generated','odpady_keo')
|| _obj:=exec('Keo_generated_create','bdo_api',
      KEO.BDO_ID,
      KEOP.INSTALLN,
      KEOP.MASA_INS,
      KEOP.MASA_EXC,
      {? KEOP.FROM_SER='T' || 'true' || 'false' ?},
      KEOP.KOD_G,
      iso_datetime_value(KEOP.DT,KEOP.TM),
      'false'
   );
   {? _obj.STATUS=201
   || _jman.load(_obj.DATA);
      _keoId:=_jman.getValue('keoGeneratedId');
      _obj.log_update(_keoId);
      _can_continue:=1
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

::======================================================================================================================
|? KEOP.TYP=exec('typ_keo_excavated','odpady_keo')
|| _obj:=exec('Keo_excavated_create','bdo_api',
      KEO.BDO_ID,
      KEOP.MASA,
      iso_datetime_value(KEOP.DT,KEOP.TM),
      KEOP.INSTALLN
   );
   {? _obj.STATUS=201
   || _jman.load(_obj.DATA);
      _keoId:=_jman.getValue('keoExcavatedId');
      _obj.log_update(_keoId);
      _can_continue:=1
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

::======================================================================================================================
|? KEOP.TYP=exec('typ_keo_collected','odpady_keo')
|| _obj:=exec('Keo_collected_create','bdo_api',
      KEO.BDO_ID,
      {? KEOP.RODZ=exec('rodz_kpo','odpady_keo') || exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.BDO_ID",'') || '' ?},
      {? KEOP.RODZ=exec('rodz_kpok','odpady_keo') || exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.BDO_ID",'') ||'' ?},
      iso_datetime_value(KEOP.DT,KEOP.TM),
      KEOP.MASA,
      KEOP.RODZ,
      exec('countryId','bdo_fun',KEOP.KRAJ().KODISO),
      KEOP.MIASTO,
      KEOP.ULICA,
      KEOP.NRB,
      KEOP.NRL,
      KEOP.KPOCZ,
      KEOP.memo_txt(,1,'DESC'),
      KEOP.INSTALLN
   );
   {? _obj.STATUS=201
   || _jman.load(_obj.DATA);
      _keoId:=_jman.getValue('keoCollectedId');
      _obj.log_update(_keoId);
      _can_continue:=1
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

::======================================================================================================================
|? KEOP.TYP=exec('typ_keo_treated','odpady_keo')
|| _obj:=exec('Keo_treated_create','bdo_api',
      KEO.BDO_ID,
      KEOP.MASA,
      KEOP.PCB,
      {? KEOP.RODPR=exec('keop_rodpr_odz','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.RODPR=exec('keop_rodpr_uni','odpady_keo') || 'true' || 'false' ?},
      KEOP.ODPR().BDO_ID,
      {? KEOP.SPG=exec('keop_spg_rec','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SPG=exec('keop_spg_wtn','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SPG=exec('keop_spg_ppu','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SPG=exec('keop_spg_ipod','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SPG=exec('keop_spg_un','odpady_keo') || 'true' || 'false' ?},
      KEOP.INSTALLN,
      iso_datetime_value(KEOP.DT,KEOP.TM),
      {? KEOP.LOSS='T' || 'true' || 'false' ?},
      KEOP.LOSS_TYP,
      {? KEOP.LOSS_MAS>0 || KEOP.LOSS_MAS || ~~ ?}
   );
   {? _obj.STATUS=201
   || _jman.load(_obj.DATA);
      _keoId:=_jman.getValue('keoTreatedId');
      _obj.log_update(_keoId);
      _can_continue:=1
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

::======================================================================================================================
|? KEOP.TYP=exec('typ_keo_forwarded','odpady_keo')
|| _obj:=exec('Keo_forwarded_create','bdo_api',
      KEO.BDO_ID,
      KEOP.RODZ,
      {? KEOP.RODZ=exec('rodz_kpo','odpady_keo') || exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.BDO_ID",'') || '' ?},
      {? KEOP.RODZ=exec('rodz_kpok','odpady_keo') || exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.BDO_ID",'') ||'' ?},
      iso_datetime_value(KEOP.DT,KEOP.TM),
      KEOP.MASA,
      exec('countryId','bdo_fun',KEOP.KRAJ().KODISO),
      KEOP.MIASTO,
      KEOP.ULICA,
      KEOP.NRB,
      KEOP.NRL,
      KEOP.KPOCZ,
      iso_datetime_value(KEOP.DT,KEOP.TM),
      {? KEOP.SR_TRAN=exec('keop_sr_tran_dro','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SR_TRAN=exec('keop_sr_tran_kol','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SR_TRAN=exec('keop_sr_tran_mor','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SR_TRAN=exec('keop_sr_tran_pow','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SR_TRAN=exec('keop_sr_tran_wod','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.RODPR=exec('keop_rodpr_odz','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.RODPR=exec('keop_rodpr_uni','odpady_keo') || 'true' || 'false' ?},
      KEOP.ODPR().BDO_ID,
      {? KEOP.RECYCLE='T' || 'true' || 'false' ?},
      KEOP.memo_txt(,1,'DESC')
   );
   {? _obj.STATUS=201
   || _jman.load(_obj.DATA);
      _keoId:=_jman.getValue('keoForwardedId');
      _obj.log_update(_keoId);
      _can_continue:=1
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

::======================================================================================================================
|? KEOP.TYP=exec('typ_keok_collected','odpady_keo')
|| _obj:=exec('Keok_collected_create','bdo_api',
      KEO.BDO_ID,
      exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.BDO_ID",''),
      KEOP.memo_txt(,1,'DESC'),
      KEOP.MASA
   );
   {? _obj.STATUS=201
   || _jman.load(_obj.DATA);
      _keoId:=_jman.getValue('keokCollectedFromRealEstateOwnerId');
      _obj.log_update(_keoId);
      _can_continue:=1
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

::======================================================================================================================
|? KEOP.TYP=exec('typ_keok_received','odpady_keo')
|| _obj:=exec('Keok_received_create','bdo_api',
      KEO.BDO_ID,
      {? KEOP.RODZ=exec('rodz_kpok','odpady_keo') || exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.BDO_ID",'') ||'' ?},
      KEOP.RODZ,
      KEOP.MASA,
      iso_datetime_value(KEOP.DT,KEOP.TM),
      KEOP.memo_txt(,1,'DESC'),
      KEOP.INSTALLN,
      {? KEOP.RODZ=exec('rodz_kpo','odpady_keo') || exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.BDO_ID",'') ||'' ?}
   );
   {? _obj.STATUS=201
   || _jman.load(_obj.DATA);
      _keoId:=_jman.getValue('keokReceivedId');
      _obj.log_update(_keoId);
      _can_continue:=1
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

::======================================================================================================================
|? KEOP.TYP=exec('typ_keok_processed','odpady_keo')
|| _obj:=exec('Keok_processed_create','bdo_api',
      KEO.BDO_ID,
      KEOP.MASA,
      KEOP.ODPR().BDO_ID,
      KEOP.PCB,
      {? KEOP.SPG=exec('keop_spg_rec','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SPG=exec('keop_spg_wtn','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SPG=exec('keop_spg_ppu','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SPG=exec('keop_spg_ppu','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SPG=exec('keop_spg_ipod','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SPG=exec('keop_spg_un','odpady_keo') || 'true' || 'false' ?},
      KEOP.INSTALLN,
      iso_datetime_value(KEOP.DT,KEOP.TM),
      {? KEOP.LOSS='T' || 'true' || 'false' ?},
      KEOP.LOSS_TYP,
      {? KEOP.LOSS_MAS>0 || KEOP.LOSS_MAS || ~~ ?}
   );
   {? _obj.STATUS=201
   || _jman.load(_obj.DATA);
      _keoId:=_jman.getValue('keokProcessedId');
      _obj.log_update(_keoId);
      _can_continue:=1
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

::======================================================================================================================
|? KEOP.TYP=exec('typ_keok_transferred','odpady_keo')
|| _obj:=exec('Keok_transferred_create','bdo_api',
      KEO.BDO_ID,
      {? KEOP.RODZ=exec('rodz_kpo','odpady_keo') || exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.BDO_ID",'') || '' ?},
      {? KEOP.RODZ=exec('rodz_kpok','odpady_keo') || exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.BDO_ID",'') ||'' ?},
      KEOP.memo_txt(,1,'DESC'),
      KEOP.MASA,
      {? KEOP.RODZ=exec('rodz_rpe','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.RODZ=exec('rodz_fiz','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.RODZ=exec('rodz_zw','odpady_keo') || 'true' || 'false' ?},
      iso_datetime_value(KEOP.DT,KEOP.TM),
      exec('countryId','bdo_fun',KEOP.KRAJ().KODISO),
      KEOP.MIASTO,
      KEOP.ULICA,
      KEOP.NRB,
      KEOP.NRL,
      KEOP.KPOCZ,
      iso_datetime_value(KEOP.DT,KEOP.TM),
      {? KEOP.SR_TRAN=exec('keop_sr_tran_dro','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SR_TRAN=exec('keop_sr_tran_kol','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SR_TRAN=exec('keop_sr_tran_mor','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SR_TRAN=exec('keop_sr_tran_pow','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.SR_TRAN=exec('keop_sr_tran_wod','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.RODPR=exec('keop_rodpr_odz','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.RODPR=exec('keop_rodpr_uni','odpady_keo') || 'true' || 'false' ?},
      KEOP.ODPR().BDO_ID,
      {? KEOP.RECYCLE='T' || 'true' || 'false' ?},

   );
   {? _obj.STATUS=201
   || _jman.load(_obj.DATA);
      _keoId:=_jman.getValue('keokTransferredId');
      _obj.log_update(_keoId);
      _can_continue:=1
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

::======================================================================================================================
|? KEOP.TYP=exec('typ_keon_item','odpady_keo')
|| _obj:=exec('Keon_item_create','bdo_api',
      KEO.BDO_ID,
      iso_datetime_value(KEOP.DT,KEOP.TM),
      KEOP.NRDOK,
      KEOP.MASA,
      {? KEOP.KH=null() || '' || exec('KH_get_id','bdo_fun',KEOP.KH) ?},
      {? KEOP.KH_2=null() || '' || exec('KH_get_id','bdo_fun',KEOP.KH_2) ?},
      {? KEOP.DZIAL=exec('keop_dzial_dealer','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.DZIAL=exec('keop_dzial_broker','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.R_DOK=exec('keop_r_dok_kpo','odpady_keo') || 'true' || 'false' ?},
      {? KEOP.R_DOK=exec('keop_r_dok_kpok','odpady_keo') || 'true' || 'false' ?}
   );
   {? _obj.STATUS=201
   || _jman.load(_obj.DATA);
      _keoId:=_jman.getValue('keonItemId');
      _obj.log_update(_keoId);
      _can_continue:=1
   || KOMM.error(_obj.MESSAGE,~_selected)
   ?}

::======================================================================================================================
|| KOMM.info('Nie oprogramowana metoda create dla: %1.'@[KEOP.TYP],~_selected)
?};
::======================================================================================================================

:: Utrwalenie identyfikatora
{? _can_continue>0
|| KEOP.BDO_ID:=_keoId;
   KEOP.BDO_UTC:=utc_get();
   {? KEOP.put()
   || _obj.log_update('|%1'[KEOP.uidref()])
   ?}
?};
~~


\keo_entry_bdo_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Modyfikacja wpisu dla karty KEO/KEOK/KEON na BDO przez API
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_selected:=(KEOP.sel_size()>0);

KOMM.info('Nie oprogramowana metoda update dla: %1.'@[KEOP.TYP],~_selected);
~~


\keo_entry_bdo_delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Usuwanie wpisu dla karty KEO/KEOK/KEON na BDO przez API
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_selected:=(KEOP.sel_size()>0);

_can_continue:=0;

{? KEOP.BDO_ID=''
|| KOMM.info('Wpis nie jest powiązany z BDO.'@,~_selected)

|? _selected | FUN.ask('Czy usunąć bieżący wpis z BDO?'@)
||
::======================================================================================================================
   {? KEOP.TYP=exec('typ_keo_generated','odpady_keo')
   || _obj:=exec('Keo_generated_delete','bdo_api',KEOP.BDO_ID);
      {? _obj.STATUS=204
      || _can_continue:=1
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
   |? KEOP.TYP=exec('typ_keo_excavated','odpady_keo')
   || _obj:=exec('Keo_excavated_delete','bdo_api',KEOP.BDO_ID);
      {? _obj.STATUS=204
      || _can_continue:=1
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
   |? KEOP.TYP=exec('typ_keo_collected','odpady_keo')
   || _obj:=exec('Keo_collected_delete','bdo_api',KEOP.BDO_ID);
      {? _obj.STATUS=204
      || _can_continue:=1
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
   |? KEOP.TYP=exec('typ_keo_treated','odpady_keo')
   || _obj:=exec('Keo_treated_delete','bdo_api',KEOP.BDO_ID);
      {? _obj.STATUS=204
      || _can_continue:=1
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
   |? KEOP.TYP=exec('typ_keo_forwarded','odpady_keo')
   || _obj:=exec('Keo_forwarded_delete','bdo_api',KEOP.BDO_ID);
      {? _obj.STATUS=204
      || _can_continue:=1
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
   |? KEOP.TYP=exec('typ_keok_collected','odpady_keo')
   || _obj:=exec('Keok_collected_delete','bdo_api',KEOP.BDO_ID);
      {? _obj.STATUS=204
      || _can_continue:=1
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
   |? KEOP.TYP=exec('typ_keok_received','odpady_keo')
   || _obj:=exec('Keok_received_delete','bdo_api',KEOP.BDO_ID);
      {? _obj.STATUS=204
      || _can_continue:=1
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
   |? KEOP.TYP=exec('typ_keok_processed','odpady_keo')
   || _obj:=exec('Keok_processed_delete','bdo_api',KEOP.BDO_ID);
      {? _obj.STATUS=204
      || _can_continue:=1
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
   |? KEOP.TYP=exec('typ_keok_transferred','odpady_keo')
   || _obj:=exec('Keok_transferred_delete','bdo_api',KEOP.BDO_ID);
      {? _obj.STATUS=204
      || _can_continue:=1
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
   |? KEOP.TYP=exec('typ_keon_item','odpady_keo')
   || _obj:=exec('Keon_item_delete','bdo_api',KEOP.BDO_ID);
      {? _obj.STATUS=204
      || _can_continue:=1
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
   || KOMM.info('Nie oprogramowana metoda delete dla: %1.'@[KEOP.TYP],~_selected)
   ?};
::======================================================================================================================

:: Usunięcie identyfikatora
   {? _can_continue>0
   || KEOP.BDO_ID:='';
      KEOP.BDO_UTC:=0;
      {? KEOP.put()
      || _obj.log_update('|%1'[KEOP.uidref()])
      ?}
   ?}
?};
~~


\keo_entry_bdo_delete_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Usuwanie wpisu dla karty KEO/KEOK/KEON na BDO przez API - przed grupą zaznaczonych rekordów
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć zaznaczone wpisy z BDO?'@)
|| KOMM.init(,,'Usuwanie danych z BDO'@);
   sel_nchk();
   1
|| 0
?}


\keo_entry_bdo_delete_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Usuwanie wpisu dla karty KEO/KEOK/KEON na BDO przez API - po grupie zaznaczonych rekordów
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
~~


\keo_entry_bdo_receive
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Pobieranie danych dla wpisu KEO/KEOK/KEON przez API w oknie KEOP
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_selected:=(KEOP.sel_size()>0);
{? _selected | FUN.ask('Czy zaktualizować bieżący wpis z BDO?'@)
|| exec('keo_entry_bdo_receive_core','odpady_keo',KEOP.ref(),_selected)
?};
~~


\keo_entry_bdo_receive_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Pobieranie danych dla wpisu KEO/KEOK/KEON przez API w oknie KEOP - przed grupą rekordów
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy zaktualizować zaznaczone wpisy z BDO?'@)
|| KOMM.init(,,'Aktualizacja danych z BDO'@);
   sel_nchk();
   1
|| 0
?}


\keo_entry_bdo_receive_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Pobieranie danych dla wpisu KEO/KEOK/KEON przez API w oknie KEOP - po grupie rekordów
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
~~


\keo_entry_bdo_receive_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Pobieranie danych dla wpisu KEO/KEOK/KEON przez API
::   WE: _a - KEOP.ref()
::       _b - selected (czy akcja dla grupy rekordów - w sensie wrzucania komunikatów do KOMM)
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_keop:=_a;
_selected:=_b;

KEO.cntx_psh(); KEOP.cntx_psh();
KEO.prefix(); KEOP.prefix();

{? KEOP.seek(_keop)
||
   {? KEOP.BDO_ID=''
   || KOMM.info('Nie można zaktualizować wpisu, brak powiązania z BDO.'@,~_selected)
   ||
::    Podczytanie KEO
      KEOP.KEO();

::    Podręczny JMAN
      _jman:=exec('json_man','__jsonm','{}');

::======================================================================================================================
      {? KEOP.TYP=exec('typ_keo_generated','odpady_keo')
      || _obj:=exec('Keo_generated_get','bdo_api',KEOP.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
::{
::  "keoGeneratedId": "string",
::  "keoId": "string",
::  "installationName": "string",
::  "wasteMassInstallation": 0,
::  "wasteMassExcludingInstallation": 0,
::  "wasteFromServices": true,
::  "communeId": "string",
::  "manufactureDate": "2021-05-09T18:11:29.798Z"
::}
            _installationName:=_jman.getValue('installationName');
            KEOP.INSTALLN:={? type_of(_installationName)=type_of('') || _installationName || '' ?};
            KEOP.MASA_INS:=_jman.getValue('wasteMassInstallation');
            KEOP.MASA_EXC:=_jman.getValue('wasteMassExcludingInstallation');
            KEOP.FROM_SER:={? _jman.getValue('wasteFromServices') || 'T' || 'N' ?};
            _communeId:=_jman.getValue('communeId');
            KEOP.KOD_G:={? type_of(_communeId)=type_of('') || _communeId || '' ?};
            KEOP.NAZ_G:={? KEOP.KOD_G<>'' || exec('WyszukajGmine','teryt',KEOP.KOD_G) || '' ?};
            _manufactureDate:=_jman.getValue('manufactureDate');
            KEOP.DT:=iso_datetime_parse(_manufactureDate).date;
            KEOP.TM:=iso_datetime_parse(_manufactureDate).time;
            KEOP.AR:=KEOP.DT~1;
            KEOP.AM:=KEOP.DT~2;
            KEOP.BDO_UTC:=utc_get();
            KEOP.put()
         |? _obj.STATUS=404
         || KOMM.info('Wpis usunięty po stronie BDO.'@,~_selected);
            KEOP.BDO_ID:='';
            KEOP.BDO_UTC:=0;
            KEOP.put()
         || KOMM.error(_obj.MESSAGE,~_selected)
         ?}

::======================================================================================================================
      |? KEOP.TYP=exec('typ_keo_excavated','odpady_keo')
      || _obj:=exec('Keo_excavated_get','bdo_api',KEOP.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
::{
::  "keoExcavatedId": "string",
::  "keoId": "string",
::  "wasteMassExcavated": 0,
::  "excavatedDate": "2021-05-10T05:07:27.626Z",
::  "installationName": "string"
::}
            KEOP.MASA:=_jman.getValue('wasteMassExcavated');
            _excavatedDate:=_jman.getValue('excavatedDate');
            KEOP.DT:=iso_datetime_parse(_excavatedDate).date;
            KEOP.TM:=iso_datetime_parse(_excavatedDate).time;
            KEOP.AR:=KEOP.DT~1;
            KEOP.AM:=KEOP.DT~2;
            _installationName:=_jman.getValue('installationName');
            KEOP.INSTALLN:={? type_of(_installationName)=type_of('') || _installationName || '' ?};
            KEOP.BDO_UTC:=utc_get();
            KEOP.put()
         |? _obj.STATUS=404
         || KOMM.info('Wpis usunięty po stronie BDO.'@,~_selected);
            KEOP.BDO_ID:='';
            KEOP.BDO_UTC:=0;
            KEOP.put()
         || KOMM.error(_obj.MESSAGE,~_selected)
         ?}

::======================================================================================================================
      |? KEOP.TYP=exec('typ_keo_collected','odpady_keo')
      || _obj:=exec('Keo_collected_get','bdo_api',KEOP.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
::{
::  "keoCollectedId": "string",
::  "keoId": "string",
::  "kpoId": "string",
::  "kpokId": "string",
::  "kpokCardNumber": "string",
::  "collectedDate": "2021-05-10T05:06:52.835Z",
::  "collectedMass": 0,
::  "collectionWay": "string",
::  "countryId": 0,
::  "locality": "string",
::  "street": "string",
::  "buildingNumber": "string",
::  "localNumber": "string",
::  "postalCode": "string",
::  "additionalInfo": "string",
::  "installationName": "string"
::}
            _kpoId:=_jman.getValue('kpoId');
            _kpokId:=_jman.getValue('kpokId');
            {? type_of(_kpoId)=type_of('') & _kpoId<>''
            || _ref:=_kpoId
            |? type_of(_kpokId)=type_of('') & _kpokId<>''
            || _ref:=_kpokId
            || _ref:=''
            ?};
            {? _ref<>''
            || KEOP.RKPO:=exec('FindAndGet','#table',KPO,exec('find_kpo_by_id','bdo_fun',_ref),,"$ref()",'');
::             _kpokCardNumber:=_jman.getValue('kpokCardNumber');
::             KEOP.NRDOK:={? type_of(_kpokCardNumber)=type_of('') || _kpokCardNumber || '' ?};
               KEOP.NRDOK:=exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.SYM",'')
            || KEOP.RKPO:='';
               KEOP.NRDOK:=''
            ?};
            _collectedDate:=_jman.getValue('collectedDate');
            KEOP.DT:=iso_datetime_parse(_collectedDate).date;
            KEOP.TM:=iso_datetime_parse(_collectedDate).time;
            KEOP.AR:=KEOP.DT~1;
            KEOP.AM:=KEOP.DT~2;
            KEOP.MASA:=_jman.getValue('collectedMass');
            KEOP.RODZ:=_jman.getValue('collectionWay');
            KEOP.KRAJ:=exec('countryRef','bdo_fun',_jman.getValue('countryId'));
            _locality:=_jman.getValue('locality');
            KEOP.MIASTO:={? type_of(_locality)=type_of('') || _locality || '' ?};
            _street:=_jman.getValue('street');
            KEOP.ULICA:={? type_of(_street)=type_of('') || _street || '' ?};
            _buildingNumber:=_jman.getValue('buildingNumber');
            KEOP.NRB:={? type_of(_buildingNumber)=type_of('') || _buildingNumber || '' ?};
            _localNumber:=_jman.getValue('localNumber');
            KEOP.NRL:={? type_of(_localNumber)=type_of('') || _localNumber || '' ?};
            _postalCode:=_jman.getValue('postalCode');
            KEOP.KPOCZ:={? type_of(_postalCode)=type_of('') || _postalCode || '' ?};
            _additionalInfo:=_jman.getValue('additionalInfo');
            KEOP.memo_set({? type_of(_additionalInfo)=type_of('') || _additionalInfo || '' ?},'DESC');
            _installationName:=_jman.getValue('installationName');
            KEOP.INSTALLN:={? type_of(_installationName)=type_of('') || _installationName || '' ?};
            KEOP.BDO_UTC:=utc_get();
            {? KEOP.put() || KEOP.memo_put(,'DESC') ?}
         |? _obj.STATUS=404
         || KOMM.info('Wpis usunięty po stronie BDO.'@,~_selected);
            KEOP.BDO_ID:='';
            KEOP.BDO_UTC:=0;
            KEOP.put()
         || KOMM.error(_obj.MESSAGE,~_selected)
         ?}

::======================================================================================================================
      |? KEOP.TYP=exec('typ_keo_forwarded','odpady_keo')
      || _obj:=exec('Keo_forwarded_get','bdo_api',KEOP.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
::{
::  "keoForwardedId": "string",
::  "keoId": "string",
::  "kpoId": "string",
::  "kpokId": "string",
::  "kpoCardNumber": "string",
::  "kpokCardNumber": "string",
::  "transferWay": "string",
::  "wasteCollectionDate": "2021-05-10T05:08:13.544Z",
::  "wasteMass": 0,
::  "countryId": 0,
::  "locality": "string",
::  "street": "string",
::  "buildingNumber": "string",
::  "localNumber": "string",
::  "postalCode": "string",
::  "transportDate": "2021-05-10T05:08:13.544Z",
::  "isRoadTransport": true,
::  "isRailwayTransport": true,
::  "isMaritimeTransport": true,
::  "isAirTransport": true,
::  "isInlandWaterTransport": true,
::  "processR": true,
::  "processD": true,
::  "wasteProcessId": 0,
::  "isRecycle": true,
::  "additionalInfo": "string"
::}
            _kpoId:=_jman.getValue('kpoId');
            _kpokId:=_jman.getValue('kpokId');
            {? type_of(_kpoId)=type_of('') & _kpoId<>''
            || _ref:=_kpoId
            |? type_of(_kpokId)=type_of('') & _kpokId<>''
            || _ref:=_kpokId
            || _ref:=''
            ?};
            {? _ref<>''
            || KEOP.RKPO:=exec('FindAndGet','#table',KPO,exec('find_kpo_by_id','bdo_fun',_ref),,"$ref()",'');
::             _kpokCardNumber:=_jman.getValue('kpokCardNumber');
::             KEOP.NRDOK:={? type_of(_kpokCardNumber)=type_of('') || _kpokCardNumber || '' ?};
               KEOP.NRDOK:=exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.SYM",'')
            || KEOP.RKPO:='';
               KEOP.NRDOK:=''
            ?};
            KEOP.RODZ:=_jman.getValue('transferWay');
            {? KEOP.RODZ=exec('rodz_rpe','odpady_keo')
            || _datetime:=_jman.getValue('transportDate')
            || _datetime:=_jman.getValue('wasteCollectionDate')
            ?};
            KEOP.DT:=iso_datetime_parse(_datetime).date;
            KEOP.TM:=iso_datetime_parse(_datetime).time;
            KEOP.AR:=KEOP.DT~1;
            KEOP.AM:=KEOP.DT~2;
            KEOP.MASA:=_jman.getValue('wasteMass');
            KEOP.KRAJ:=exec('countryRef','bdo_fun',_jman.getValue('countryId'));
            _locality:=_jman.getValue('locality');
            KEOP.MIASTO:={? type_of(_locality)=type_of('') || _locality || '' ?};
            _street:=_jman.getValue('street');
            KEOP.ULICA:={? type_of(_street)=type_of('') || _street || '' ?};
            _buildingNumber:=_jman.getValue('buildingNumber');
            KEOP.NRB:={? type_of(_buildingNumber)=type_of('') || _buildingNumber || '' ?};
            _localNumber:=_jman.getValue('localNumber');
            KEOP.NRL:={? type_of(_localNumber)=type_of('') || _localNumber || '' ?};
            _postalCode:=_jman.getValue('postalCode');
            KEOP.KPOCZ:={? type_of(_postalCode)=type_of('') || _postalCode || '' ?};
            _isRoadTransport:=_jman.getValue('isRoadTransport');
            _isRailwayTransport:=_jman.getValue('isRailwayTransport');
            _isMaritimeTransport:=_jman.getValue('isMaritimeTransport');
            _isAirTransport:=_jman.getValue('isAirTransport');
            _isInlandWaterTransport:=_jman.getValue('isInlandWaterTransport');
            KEOP.SR_TRAN:=
               {? type_of(_isRoadTransport)=type_of(0) & _isRoadTransport
               || exec('keop_sr_tran_dro','odpady_keo')
               |? type_of(_isRailwayTransport)=type_of(0) & _isRailwayTransport
               || exec('keop_sr_tran_kol','odpady_keo')
               |? type_of(_isMaritimeTransport)=type_of(0) & _isMaritimeTransport
               || exec('keop_sr_tran_mor','odpady_keo')
               |? type_of(_isAirTransport)=type_of(0) & _isAirTransport
               || exec('keop_sr_tran_pow','odpady_keo')
               |? type_of(_isInlandWaterTransport)=type_of(0) & _isInlandWaterTransport
               || exec('keop_sr_tran_wod','odpady_keo')
               || ''
               ?};
            _processR:=_jman.getValue('processR');
            _processD:=_jman.getValue('processD');
            KEOP.RODPR:=
               {? type_of(_processR)=type_of(0) & _processR
               || exec('keop_rodpr_odz','odpady_keo')
               |? type_of(_processD)=type_of(0) & _processD
               || exec('keop_rodpr_uni','odpady_keo')
               || ''
               ?};
            _wasteProcessId:=_jman.getValue('wasteProcessId');
            KEOP.ODPR:=
               {? type_of(_wasteProcessId)=type_of(0)
               || exec('FindInSet','#table','ODPR','BDO_ID',_wasteProcessId)
               || 0
               ?};
            _isRecycle:=_jman.getValue('isRecycle');
            KEOP.RECYCLE:={? type_of(_isRecycle)=type_of(0) || {? _isRecycle || 'T' || 'N' ?} || 'N' ?};
            _additionalInfo:=_jman.getValue('additionalInfo');
            KEOP.memo_set({? type_of(_additionalInfo)=type_of('') || _additionalInfo || '' ?},'DESC');
            KEOP.BDO_UTC:=utc_get();
            {? KEOP.put() || KEOP.memo_put(,'DESC') ?}
         |? _obj.STATUS=404
         || KOMM.info('Wpis usunięty po stronie BDO.'@,~_selected);
            KEOP.BDO_ID:='';
            KEOP.BDO_UTC:=0;
            KEOP.put()
         || KOMM.error(_obj.MESSAGE,~_selected)
         ?}

::======================================================================================================================
      |? KEOP.TYP=exec('typ_keo_treated','odpady_keo')
      || _obj:=exec('Keo_treated_get','bdo_api',KEOP.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
::{
::  "keoTreatedId": "string",
::  "keoId": "string",
::  "treatedWasteMass": 0,
::  "pcbContent": 0,
::  "processR": true,
::  "processD": true,
::  "wasteProcessId": 0,
::  "isRecycle": true,
::  "isFillingUpDisadvantagedAreas": true,
::  "isPreparationForReUse": true,
::  "isAnotherRecoveryProcess": true,
::  "isNeutralization": true,
::  "installationName": "string"
::  "wasteRecycleTime": "2021-07-05T09:17:25.836Z"
::  "LossOfWasteStatus": true,
::  "Type": "string",
::  "MassInTonnes": 0
::}
            KEOP.MASA:=_jman.getValue('treatedWasteMass');
            _pcbContent:=_jman.getValue('pcbContent');
            KEOP.PCB:={? type_of(_pcbContent)=type_of(0) || _pcbContent || 0 ?};
            KEOP.RODPR:=
               {? _jman.getValue('processR')
               || exec('keop_rodpr_odz','odpady_keo')
               |? _jman.getValue('processD')
               || exec('keop_rodpr_uni','odpady_keo')
               || ''
               ?};
            KEOP.ODPR:=exec('FindInSet','#table','ODPR','BDO_ID',_jman.getValue('wasteProcessId'));
            KEOP.SPG:=
               {? _jman.getValue('isRecycle')
               || exec('keop_spg_rec','odpady_keo')
               |? _jman.getValue('isFillingUpDisadvantagedAreas')
               || exec('keop_spg_wtn','odpady_keo')
               |? _jman.getValue('isPreparationForReUse')
               || exec('keop_spg_ppu','odpady_keo')
               |? _jman.getValue('isAnotherRecoveryProcess')
               || exec('keop_spg_ipod','odpady_keo')
               |? _jman.getValue('isNeutralization')
               || exec('keop_spg_un','odpady_keo')
               || ''
               ?};
            _installationName:=_jman.getValue('installationName');
            KEOP.INSTALLN:={? type_of(_installationName)=type_of('') || _installationName || '' ?};
            _wasteRecycleTime:=_jman.getValue('wasteRecycleTime');
            KEOP.DT:=iso_datetime_parse(_wasteRecycleTime).date;
            KEOP.TM:=iso_datetime_parse(_wasteRecycleTime).time;
            KEOP.AR:=KEOP.DT~1;
            KEOP.AM:=KEOP.DT~2;
            KEOP.LOSS:={? _jman.getValue('lossOfWasteStatus') || 'T' || 'N' ?};
            _massInTonnes:=_jman.getValue('massInTonnes');
            KEOP.LOSS_MAS:={? type_of(_massInTonnes)=type_of(0) || _massInTonnes || 0 ?};
            _type:=_jman.getValue('type');
            KEOP.LOSS_TYP:={? type_of(_type)=type_of('') || _type || '' ?};
            KEOP.BDO_UTC:=utc_get();
            KEOP.put()
         |? _obj.STATUS=404
         || KOMM.info('Wpis usunięty po stronie BDO.'@,~_selected);
            KEOP.BDO_ID:='';
            KEOP.BDO_UTC:=0;
            KEOP.put()
         || KOMM.error(_obj.MESSAGE,~_selected)
         ?}

::======================================================================================================================
      |? KEOP.TYP=exec('typ_keok_collected','odpady_keo')
      || _obj:=exec('Keok_collected_get','bdo_api',KEOP.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
::{
::  "keokCollectedFromRealEstateOwnerId": "string",
::  "keokId": "string",
::  "keokCardNumber": "string",
::  "kpokId": "string",
::  "kpokCardNumber": "string",
::  "additionalInfo": "string",
::  "createdByUser": "string",
::  "collectedWasteMass": 0,
::  "receiveDate": "2021-05-09T18:08:39.419Z"
::}
            _kpokId:=_jman.getValue('kpokId');
            KEOP.RKPO:=exec('FindAndGet','#table',KPO,exec('find_kpo_by_id','bdo_fun',_kpokId),,"$ref()",'');
            KEOP.NRDOK:=exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.SYM",'');
::            _kpokCardNumber:=_jman.getValue('kpokCardNumber');
::            KEOP.NRDOK:={? type_of(_kpokCardNumber)=type_of('') || _kpokCardNumber || '' ?};
            _additionalInfo:=_jman.getValue('additionalInfo');
            KEOP.memo_set({? type_of(_additionalInfo)=type_of('') || _additionalInfo || '' ?},'DESC');
            KEOP.MASA:=_jman.getValue('collectedWasteMass');
            _receiveDate:=_jman.getValue('receiveDate');
            KEOP.DT:=iso_datetime_parse(_receiveDate).date;
            KEOP.TM:=iso_datetime_parse(_receiveDate).time;
            KEOP.AR:=KEOP.DT~1;
            KEOP.AM:=KEOP.DT~2;
            KEOP.BDO_UTC:=utc_get();
            {? KEOP.put() || KEOP.memo_put(,'DESC') ?}
         |? _obj.STATUS=404
         || KOMM.info('Wpis usunięty po stronie BDO.'@,~_selected);
            KEOP.BDO_ID:='';
            KEOP.BDO_UTC:=0;
            KEOP.put()
         || KOMM.error(_obj.MESSAGE,~_selected)
         ?}

::======================================================================================================================
      |? KEOP.TYP=exec('typ_keok_received','odpady_keo')
      || _obj:=exec('Keok_received_get','bdo_api',KEOP.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
::{
::  "keokReceivedId": "string",
::  "keokId": "string",
::  "kpokId": "string",
::  "kpoId": "string",
::  "kpokCardNumber": "string",
::  "collectionWay": "string",
::  "receivedWasteMass": 0,
::  "receiveDate": "2021-07-06T11:01:44.372Z",
::  "additionalInfo": "string",
::  "createdByUser": "string",
::  "installationName": "string",
::  "kpoCardNumber": "string"
::}
            _kpokId:=_jman.getValue('kpokId');
            _kpoId:=_jman.getValue('kpoId');
            {? type_of(_kpoId)=type_of('') & _kpoId<>''
            || _ref:=_kpoId
            |? type_of(_kpokId)=type_of('') & _kpokId<>''
            || _ref:=_kpokId
            || _ref:=''
            ?};
            {? _ref<>''
            || KEOP.RKPO:=exec('FindAndGet','#table',KPO,exec('find_kpo_by_id','bdo_fun',_ref),,"$ref()",'');
::             _kpokCardNumber:=_jman.getValue('kpokCardNumber');
::             KEOP.NRDOK:={? type_of(_kpokCardNumber)=type_of('') || _kpokCardNumber || '' ?};
               KEOP.NRDOK:=exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.SYM",'')
            || KEOP.RKPO:='';
               KEOP.NRDOK:=''
            ?};
            KEOP.RODZ:=_jman.getValue('collectionWay');
            KEOP.MASA:=_jman.getValue('receivedWasteMass');
            _receiveDate:=_jman.getValue('receiveDate');
            KEOP.DT:=iso_datetime_parse(_receiveDate).date;
            KEOP.TM:=iso_datetime_parse(_receiveDate).time;
            KEOP.AR:=KEOP.DT~1;
            KEOP.AM:=KEOP.DT~2;
            _additionalInfo:=_jman.getValue('additionalInfo');
            KEOP.memo_set({? type_of(_additionalInfo)=type_of('') || _additionalInfo || '' ?},'DESC');
            _installationName:=_jman.getValue('installationName');
            KEOP.INSTALLN:={? type_of(_installationName)=type_of('') || _installationName || '' ?};
            KEOP.BDO_UTC:=utc_get();
            {? KEOP.put() || KEOP.memo_put(,'DESC') ?}
         |? _obj.STATUS=404
         || KOMM.info('Wpis usunięty po stronie BDO.'@,~_selected);
            KEOP.BDO_ID:='';
            KEOP.BDO_UTC:=0;
            KEOP.put()
         || KOMM.error(_obj.MESSAGE,~_selected)
         ?}

::======================================================================================================================
      |? KEOP.TYP=exec('typ_keok_processed','odpady_keo')
      || _obj:=exec('Keok_processed_get','bdo_api',KEOP.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
::{
::  "keokProcessedId": "string",
::  "keokId": "string",
::  "processedWasteMass": 0,
::  "wasteProcessId": 0,
::  "pcbContent": 0,
::  "isRecycle": true,
::  "isFillingUpDisadvantagedAreas": true,
::  "isPreparationForReUse": true,
::  "isPreparationForReuse": true,
::  "isAnotherRecoveryProcess": true,
::  "isNeutralization": true,
::  "installationName": "string"
::  "wasteRecycleTime": "2021-07-05T09:41:55.680Z"
::  "massInTonnes": 0,
::  "type": "string",
::  "lossOfWasteStatus": true
::}
            KEOP.MASA:=_jman.getValue('processedWasteMass');
            KEOP.ODPR:=exec('FindInSet','#table','ODPR','BDO_ID',_jman.getValue('wasteProcessId'));
            _pcbContent:=_jman.getValue('pcbContent');
            KEOP.PCB:={? type_of(_pcbContent)=type_of(0) || _pcbContent || 0 ?};
            KEOP.SPG:=
               {? _jman.getValue('isRecycle')
               || exec('keop_spg_rec','odpady_keo')
               |? _jman.getValue('isFillingUpDisadvantagedAreas')
               || exec('keop_spg_wtn','odpady_keo')
               |? _jman.getValue('isPreparationForReuse')
               || exec('keop_spg_ppu','odpady_keo')
               |? _jman.getValue('isAnotherRecoveryProcess')
               || exec('keop_spg_ipod','odpady_keo')
               |? _jman.getValue('isNeutralization')
               || exec('keop_spg_un','odpady_keo')
               || ''
               ?};
            _installationName:=_jman.getValue('installationName');
            KEOP.INSTALLN:={? type_of(_installationName)=type_of('') || _installationName || '' ?};
            _wasteRecycleTime:=_jman.getValue('wasteRecycleTime');
            KEOP.DT:=iso_datetime_parse(_wasteRecycleTime).date;
            KEOP.TM:=iso_datetime_parse(_wasteRecycleTime).time;
            KEOP.AR:=KEOP.DT~1;
            KEOP.AM:=KEOP.DT~2;
            KEOP.LOSS:={? _jman.getValue('lossOfWasteStatus') || 'T' || 'N' ?};
            _massInTonnes:=_jman.getValue('massInTonnes');
            KEOP.LOSS_MAS:={? type_of(_massInTonnes)=type_of(0) || _massInTonnes || 0 ?};
            _type:=_jman.getValue('type');
            KEOP.LOSS_TYP:={? type_of(_type)=type_of('') || _type || '' ?};
            KEOP.BDO_UTC:=utc_get();
            KEOP.put()
         |? _obj.STATUS=404
         || KOMM.info('Wpis usunięty po stronie BDO.'@,~_selected);
            KEOP.BDO_ID:='';
            KEOP.BDO_UTC:=0;
            KEOP.put()
         || KOMM.error(_obj.MESSAGE,~_selected)
         ?}

::======================================================================================================================
      |? KEOP.TYP=exec('typ_keok_transferred','odpady_keo')
      || _obj:=exec('Keok_transferred_get','bdo_api',KEOP.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
::{
::  "keokTransferredId": "string",
::  "keokId": "string",
::  "transferredWasteMass": 0,
::  "kpokId": "string",
::  "kpokCardNumber": "string",
::  "createdByUser": "string",
::  "additionalInfo": "string",
::  "receivedWasteMass": 0,
::  "transferAbroad": true,
::  "transferToNaturalPersons": true,
::  "ownerExemptFromRecords": true,
::  "wasteCollectionDate": "2021-07-05T13:07:42.944Z",
::  "countryId": 0,
::  "locality": "string",
::  "street": "string",
::  "buildingNumber": "string",
::  "localNumber": "string",
::  "postalCode": "string",
::  "transportDate": "2021-07-05T13:07:42.944Z",
::  "isRoadTransport": true,
::  "isRailwayTransport": true,
::  "isMaritimeTransport": true,
::  "isAirTransport": true,
::  "isInlandWaterTransport": true,
::  "processR": true,
::  "processD": true,
::  "wasteProcessId": 0,
::  "isRecycle": true,
::  "kpoId": "string",
::  "kpoCardNumber": "string",
::  "countryName": "string"
::}
            _kpoId:=_jman.getValue('kpoId');
            _kpokId:=_jman.getValue('kpokId');
            {? type_of(_kpoId)=type_of('') & _kpoId<>''
            || _ref:=_kpoId
            |? type_of(_kpokId)=type_of('') & _kpokId<>''
            || _ref:=_kpokId
            || _ref:=''
            ?};
            {? _ref<>''
            || KEOP.RKPO:=exec('FindAndGet','#table',KPO,exec('find_kpo_by_id','bdo_fun',_ref),,"$ref()",'');
::             _kpokCardNumber:=_jman.getValue('kpokCardNumber');
::             KEOP.NRDOK:={? type_of(_kpokCardNumber)=type_of('') || _kpokCardNumber || '' ?};
               KEOP.NRDOK:=exec('FindAndGet','#table',KPO,KEOP.RKPO,,"KPO.SYM",'')
            || KEOP.RKPO:='';
               KEOP.NRDOK:=''
            ?};
            _transferAbroad:=_jman.getValue('transferAbroad');
            _transferToNaturalPersons:=_jman.getValue('transferToNaturalPersons');
            _ownerExemptFromRecords:=_jman.getValue('ownerExemptFromRecords');
            KEOP.RODZ:=
               {? type_of(_kpoId)=type_of('') & _kpoId<>''
               || exec('rodz_kpo','odpady_keo')
               |? type_of(_kpokId)=type_of('') & _kpokId<>''
               || exec('rodz_kpok','odpady_keo')
               |? type_of(_transferAbroad)=type_of(0) & _transferAbroad
               || exec('rodz_rpe','odpady_keo')
               |? type_of(_transferToNaturalPersons)=type_of(0) & _transferToNaturalPersons
               || exec('rodz_fiz','odpady_keo')
               |? type_of(_ownerExemptFromRecords)=type_of(0) & _ownerExemptFromRecords
               || exec('rodz_zw','odpady_keo')
               || ''
               ?};
            {? KEOP.RODZ=exec('rodz_rpe','odpady_keo')
            || _datetime:=_jman.getValue('transportDate')
            || _datetime:=_jman.getValue('wasteCollectionDate')
            ?};
            KEOP.DT:=iso_datetime_parse(_datetime).date;
            KEOP.TM:=iso_datetime_parse(_datetime).time;
            KEOP.AR:=KEOP.DT~1;
            KEOP.AM:=KEOP.DT~2;
            KEOP.MASA:=_jman.getValue('transferredWasteMass');
            KEOP.KRAJ:=exec('countryRef','bdo_fun',_jman.getValue('countryId'));
            _locality:=_jman.getValue('locality');
            KEOP.MIASTO:={? type_of(_locality)=type_of('') || _locality || '' ?};
            _street:=_jman.getValue('street');
            KEOP.ULICA:={? type_of(_street)=type_of('') || _street || '' ?};
            _buildingNumber:=_jman.getValue('buildingNumber');
            KEOP.NRB:={? type_of(_buildingNumber)=type_of('') || _buildingNumber || '' ?};
            _localNumber:=_jman.getValue('localNumber');
            KEOP.NRL:={? type_of(_localNumber)=type_of('') || _localNumber || '' ?};
            _postalCode:=_jman.getValue('postalCode');
            KEOP.KPOCZ:={? type_of(_postalCode)=type_of('') || _postalCode || '' ?};
            _isRoadTransport:=_jman.getValue('isRoadTransport');
            _isRailwayTransport:=_jman.getValue('isRailwayTransport');
            _isMaritimeTransport:=_jman.getValue('isMaritimeTransport');
            _isAirTransport:=_jman.getValue('isAirTransport');
            _isInlandWaterTransport:=_jman.getValue('isInlandWaterTransport');
            KEOP.SR_TRAN:=
               {? type_of(_isRoadTransport)=type_of(0) & _isRoadTransport
               || exec('keop_sr_tran_dro','odpady_keo')
               |? type_of(_isRailwayTransport)=type_of(0) & _isRailwayTransport
               || exec('keop_sr_tran_kol','odpady_keo')
               |? type_of(_isMaritimeTransport)=type_of(0) & _isMaritimeTransport
               || exec('keop_sr_tran_mor','odpady_keo')
               |? type_of(_isAirTransport)=type_of(0) & _isAirTransport
               || exec('keop_sr_tran_pow','odpady_keo')
               |? type_of(_isInlandWaterTransport)=type_of(0) & _isInlandWaterTransport
               || exec('keop_sr_tran_wod','odpady_keo')
               || ''
               ?};
            _processR:=_jman.getValue('processR');
            _processD:=_jman.getValue('processD');
            KEOP.RODPR:=
               {? type_of(_processR)=type_of(0) & _processR
               || exec('keop_rodpr_odz','odpady_keo')
               |? type_of(_processD)=type_of(0) & _processD
               || exec('keop_rodpr_uni','odpady_keo')
               || ''
               ?};
            _wasteProcessId:=_jman.getValue('wasteProcessId');
            KEOP.ODPR:=
               {? type_of(_wasteProcessId)=type_of(0)
               || exec('FindInSet','#table','ODPR','BDO_ID',_wasteProcessId)
               || 0
               ?};
            _isRecycle:=_jman.getValue('isRecycle');
            KEOP.RECYCLE:={? type_of(_isRecycle)=type_of(0) || {? _isRecycle || 'T' || 'N' ?} || 'N' ?};
            _additionalInfo:=_jman.getValue('additionalInfo');
            KEOP.memo_set({? type_of(_additionalInfo)=type_of('') || _additionalInfo || '' ?},'DESC');
            KEOP.BDO_UTC:=utc_get();
            {? KEOP.put() || KEOP.memo_put(,'DESC') ?}
         |? _obj.STATUS=404
         || KOMM.info('Wpis usunięty po stronie BDO.'@,~_selected);
            KEOP.BDO_ID:='';
            KEOP.BDO_UTC:=0;
            KEOP.put()
         || KOMM.error(_obj.MESSAGE,~_selected)
         ?}

::======================================================================================================================
      |? KEOP.TYP=exec('typ_keon_item','odpady_keo')
      || _obj:=exec('Keon_item_get','bdo_api',KEOP.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
::{
::  "keonItemId": "string",
::  "keonId": "string",
::  "companyId": "string",
::  "receiveConfirmationTime": "2021-05-09T18:09:57.594Z",
::  "documentNumber": "string",
::  "wasteMass": 0,
::  "senderCompanyId": "string",
::  "receiverCompanyId": "string",
::  "createdByUser": "string",
::  "isDealer": true,
::  "isBroker": true,
::  "isKpo": true,
::  "isKpok": true
::}
            _receiveConfirmationTime:=_jman.getValue('receiveConfirmationTime');
            KEOP.DT:=iso_datetime_parse(_receiveConfirmationTime).date;
            KEOP.TM:=iso_datetime_parse(_receiveConfirmationTime).time;
            KEOP.AR:=KEOP.DT~1;
            KEOP.AM:=KEOP.DT~2;
            KEOP.NRDOK:=_jman.getValue('documentNumber');
            KEOP.MASA:=_jman.getValue('wasteMass');
            _senderCompanyId:=_jman.getValue('senderCompanyId');
            KEOP.KH:=exec('KH_get_ref','bdo_fun',_senderCompanyId);
            _receiverCompanyId:=_jman.getValue('receiverCompanyId');
            KEOP.KH_2:=exec('KH_get_ref','bdo_fun',_receiverCompanyId);
            {? KEOP.KH=null()
            || _obj1:=exec('Search_getcompanybyid','bdo_api',_senderCompanyId);
               {? _obj1.STATUS=200
               || _jman1:=_jman.new(_obj1.DATA);
                  _registrationNumber:=_jman1.getValue('registrationNumber');
                  _name:=_jman1.getValue('name');
                  _nip:=_jman1.getValue('nip');
                  KOMM.msg(
                     'Wpis do karty \'%1\' — brak w systemie kontrahenta (przekazujący) powiązanego z bazą BDO:\n'
                     'ID: %2\n'
                     'BDO: %3\n'
                     'Nazwa: %4\n'
                     'NIP: %5'@
                     [  exec('FindAndGet','#table',KEO,KEOP.KEO,,"KEO.SYM",''),
                        _senderCompanyId,_registrationNumber,_name,_nip
                     ],0
                  )
               ||
                  KOMM.msg(
                     'Wpis do karty \'%1\' — brak w systemie kontrahenta (przekazujący) powiązanego z bazą BDO:\n'
                     'ID: %2'@
                     [  exec('FindAndGet','#table',KEO,KEOP.KEO,,"KEO.SYM",''),
                        _senderCompanyId
                     ],0
                  )
               ?}
            ?};
            {? KEOP.KH_2=null()
            || _obj2:=exec('Search_getcompanybyid','bdo_api',_receiverCompanyId);
               {? _obj2.STATUS=200
               || _jman2:=_jman.new(_obj2.DATA);
                  _registrationNumber:=_jman2.getValue('registrationNumber');
                  _name:=_jman2.getValue('name');
                  _nip:=_jman2.getValue('nip');
                  KOMM.msg(
                     'Wpis do karty \'%1\' — brak w systemie kontrahenta (przejmujący) powiązanego z bazą BDO:\n'
                     'ID: %2\n'
                     'BDO: %3\n'
                     'Nazwa: %4\n'
                     'NIP: %5'@
                     [  exec('FindAndGet','#table',KEO,KEOP.KEO,,"KEO.SYM",''),
                        _receiverCompanyId,_registrationNumber,_name,_nip
                     ],0
                  )
               || KOMM.msg(
                     'Wpis do karty \'%1\' — brak w systemie kontrahenta (przejmujący) powiązanego z bazą BDO:\n'
                     'ID: %2'@
                     [  exec('FindAndGet','#table',KEO,KEOP.KEO,,"KEO.SYM",''),
                        _receiverCompanyId
                     ],0
                  )
               ?}
            ?};
            KEOP.DZIAL:=
               {? _jman.getValue('isDealer')
               || exec('keop_dzial_dealer','odpady_keo')
               |? _jman.getValue('isBroker')
               || exec('keop_dzial_broker','odpady_keo')
               || ''
               ?};
            KEOP.R_DOK:=
               {? _jman.getValue('isKpo')
               || exec('keop_r_dok_kpo','odpady_keo')
               |? _jman.getValue('isKpok')
               || exec('keop_r_dok_kpok','odpady_keo')
               || ''
               ?};
            KEOP.BDO_UTC:=utc_get();
            KEOP.put()
         |? _obj.STATUS=404
         || KOMM.info('Wpis usunięty po stronie BDO.'@,~_selected);
            KEOP.BDO_ID:='';
            KEOP.BDO_UTC:=0;
            KEOP.put()
         || KOMM.error(_obj.MESSAGE,~_selected)
         ?}

::======================================================================================================================
      || KOMM.info('Nie oprogramowana metoda get dla: %1.'@[KEOP.TYP],~_selected)
      ?};
::======================================================================================================================

     _obj.log_update('|%1'[KEOP.uidref()])
   ?}
?};

KEO.cntx_pop(); KEOP.cntx_pop();
~~


\keo_entry_bdo_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Import wpisów w oknie KEOP
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
{? VAR.A_TABKEP=''
|| _imp:=0;
   KEO.cntx_psh();
   KEO.index('MPD_TSYM');
   KEO.prefix(VAR.MPD);
   _size:=KEO.size();
   {? KEO.first()
   || KOMM.init(250,,'Import pozycji kart ewidencji odpadów'@);
      {? FUN.ask('Czy importować wszystkie brakujące wpisy kart ewidencji odpadów?'@)
      || FUN.prg_start(_size,'Importowanie wpisów kart ewidencji odpadów.'@);
         {!
         |? _can_continue:=FUN.prg_next(,'Importowanie wpisów kart ewidencji odpadów: %1.'@[KEO.SYM]);
            {? _can_continue>0
            || {? KEO.TYP=exec('typ_keon','odpady_keo')
               || _imp+=exec('keo_entry_bdo_import_core','odpady_keo',
                     KEO.ref(),exec('typ_keon_item','odpady_keo'),0,'true','false'
                  );
                  _imp+=exec('keo_entry_bdo_import_core','odpady_keo',
                     KEO.ref(),exec('typ_keon_item','odpady_keo'),0,'false','true'
                  )
               |? KEO.TYP=exec('typ_keo','odpady_keo')
               || _imp+=exec('keo_entry_bdo_import_core','odpady_keo',
                     KEO.ref(),exec('typ_keo_collected','odpady_keo'),0
                  );
                  _imp+=exec('keo_entry_bdo_import_core','odpady_keo',
                     KEO.ref(),exec('typ_keo_excavated','odpady_keo'),0
                  );
                  _imp+=exec('keo_entry_bdo_import_core','odpady_keo',
                     KEO.ref(),exec('typ_keo_forwarded','odpady_keo'),0
                  );
                  _imp+=exec('keo_entry_bdo_import_core','odpady_keo',
                     KEO.ref(),exec('typ_keo_generated','odpady_keo'),0
                  );
                  _imp+=exec('keo_entry_bdo_import_core','odpady_keo',
                     KEO.ref(),exec('typ_keo_treated','odpady_keo'),0
                  )
               |? KEO.TYP=exec('typ_keok','odpady_keo')
               || _imp+=exec('keo_entry_bdo_import_core','odpady_keo',
                     KEO.ref(),exec('typ_keok_collected','odpady_keo'),0
                  );
                  _imp+=exec('keo_entry_bdo_import_core','odpady_keo',
                     KEO.ref(),exec('typ_keok_processed','odpady_keo'),0
                  );
                  _imp+=exec('keo_entry_bdo_import_core','odpady_keo',
                     KEO.ref(),exec('typ_keok_received','odpady_keo'),0
                  );
                  _imp+=exec('keo_entry_bdo_import_core','odpady_keo',
                     KEO.ref(),exec('typ_keok_transferred','odpady_keo'),0
                  )
               ?}
            ?};
            _can_continue>0 & KEO.next()
         !};
         FUN.prg_stop()
      ?};
      {? _imp>0
      || KOMM.add('Liczba zaimportowanych wpisów: %1.'@[$_imp])
      ?};
      KOMM.select()
   || FUN.info('Brak kart ewidencji — nie można zaimportować wpisów.'@)
   ?};
   KEO.cntx_pop()
|| _imp:=0;
   KOMM.init(250,,'Import pozycji karty ewidencji odpadów'@);
   {? VAR.A_TABKEP=exec('typ_keon_item','odpady_keo')
   || _imp+=exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),VAR.A_TABKEP,1,'true','false');
      _imp+=exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),VAR.A_TABKEP,1,'false','true')
   || _imp+=exec('keo_entry_bdo_import_core','odpady_keo',KEO.ref(),VAR.A_TABKEP,1)
   ?};
   {? _imp>0
   || KOMM.add('Liczba zaimportowanych wpisów: %1.'@[$_imp])
   ?};
   KOMM.select()
?};
~~


\keo_entry_bdo_import_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Import wpisów danego rodzaju w kontekście danej KEO/KEOK/KEON
::   WE: _a - KEO.ref()
::       _b - typ wpisu
::       [_c] - czy wyświetlać progress [1]/0
::       [_d] - dodatkowy parametr tylko dla keon_item: isDealer
::       [_e] - dodatkowy parametr tylko dla keon_item: isBroker
::   WY: liczba zaimportowanych wpisów
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_keo:=_a;
_typ_keop:=_b;
_progress:={? var_pres('_c')=type_of(0) || _c || 1 ?};
_isDealer:={? var_pres('_d')=type_of('') || _d || 'false' ?};
_isBroker:={? var_pres('_e')=type_of('') || _e || 'false' ?};

_result:=0;

KEO.cntx_psh(); KEOP.cntx_psh();
KEO.prefix();

{? KEO.seek(_keo)
||
   _page:=1;

:: Podręczne JMANy
   _jman:=exec('json_man','__jsonm','{}');
   _jman1:=_jman.new('{}');
   _jman2:=_jman.new('{}');

   {!
   |?
      _can_continue:=0;
      _method:='';

::======================================================================================================================
      {? _typ_keop=exec('typ_keo_generated','odpady_keo')
      || _obj:=exec('Keo_generated_search','bdo_api',_page,50,KEO.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
            _can_continue:=1;
            _method:='generatedKeos.';
            _id:='keoGeneratedId'
         ?}

::======================================================================================================================
      |? _typ_keop=exec('typ_keo_excavated','odpady_keo')
      || _obj:=exec('Keo_excavated_search','bdo_api',_page,50,KEO.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
            _can_continue:=1;
            _method:='excavatedKeos.';
            _id:='keoExcavatedId'
         ?}

::======================================================================================================================
      |? _typ_keop=exec('typ_keo_collected','odpady_keo')
      || _obj:=exec('Keo_collected_search','bdo_api',_page,50,KEO.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
            _can_continue:=1;
            _method:='collectedKeos.';
            _id:='keoCollectedId'
         ?}

::======================================================================================================================
      |? _typ_keop=exec('typ_keo_forwarded','odpady_keo')
      || _obj:=exec('Keo_forwarded_search','bdo_api',_page,50,KEO.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
            _can_continue:=1;
            _method:='forwardedForwardedKeos.';
            _id:='keoForwardedId'
         ?}

::======================================================================================================================
      |? _typ_keop=exec('typ_keo_treated','odpady_keo')
      || _obj:=exec('Keo_treated_search','bdo_api',_page,50,KEO.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
            _can_continue:=1;
            _method:='treatedKeos.';
            _id:='keoTreatedId'
         ?}

::======================================================================================================================
      |? _typ_keop=exec('typ_keok_collected','odpady_keo')
      || _obj:=exec('Keok_collected_search','bdo_api',_page,50,KEO.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
            _can_continue:=1;
            _method:='keoksCollectedFromRealEstateOwner.';
            _id:='keokCollectedFromRealEstateOwnerId'
         ?}

::======================================================================================================================
      |? _typ_keop=exec('typ_keok_received','odpady_keo')
      || _obj:=exec('Keok_received_search','bdo_api',_page,50,KEO.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
            _can_continue:=1;
            _method:='keoksReceived.';
            _id:='keokReceivedId'
         ?}

::======================================================================================================================
      |? _typ_keop=exec('typ_keok_processed','odpady_keo')
      || _obj:=exec('Keok_processed_search','bdo_api',_page,50,KEO.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
            _can_continue:=1;
            _method:='keoksProcessed.';
            _id:='keokProcessedId'
         ?}

::======================================================================================================================
      |? _typ_keop=exec('typ_keok_transferred','odpady_keo')
      || _obj:=exec('Keok_transferred_search','bdo_api',_page,50,KEO.BDO_ID);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
            _can_continue:=1;
            _method:='keoksTransferred.';
            _id:='keokTransferredId'
         ?}

::======================================================================================================================
      |? _typ_keop=exec('typ_keon_item','odpady_keo')
      || _obj:=exec('Keon_item_search','bdo_api',_page,50,KEO.BDO_ID,_isDealer,_isBroker);
         {? _obj.STATUS=200
         || _jman.load(_obj.DATA);
            _can_continue:=1;
            _method:='';
            _id:='keonItemId'
         ?}

::======================================================================================================================
      || KOMM.info('Nie oprogramowana metoda search dla: %1.'@[_typ_keop])
      ?};
::======================================================================================================================

      _hasNextPage:=0;

      {? _can_continue>0
      ||
         _hasNextPage:=_jman.getValue('%1hasNextPage'[_method]);
         _totalPagesNumber:=_jman.getValue('%1totalPagesNumber'[_method]);
         _jman1.load(_jman.getJSON('%1items'[_method]));
         _size:=_jman1.countChildren();
         {? _size>0
         ||
            {? _progress
            || FUN.prg_start(
                  _size,
                  'Importowanie %1 wpisów karty ewidencji odpadów z BDO (część %2 z %3).'@
                  [$_size,$_page,$_totalPagesNumber]
               )
            ?};

            {! _it:=1.. _size
            |! _jman2.load(_jman1.getJSON('[%1]'[$_it]));

               {? _progress || FUN.prg_next() ?};

::             Założenie pozycji bez szczegółów
               _keopId:=_jman2.getValue('%1'[_id]);
               KEOP.index('BDO_ID');
               KEOP.prefix(_keopId,);
               {? ~KEOP.first()
               || KEOP.blank();
                  KEOP.KEO:=KEO.ref();
                  KEOP.TYP:=_typ_keop;
                  KEOP.BDO_ID:=_keopId;
                  {? KEOP.add()
                  || _result+=1;
::                   Pobranie zawartości
                     exec('keo_entry_bdo_receive_core','odpady_keo',KEOP.ref(),1)
                  ?}
               ?}
            !};

            {? _progress
            || FUN.prg_stop()
            ?}

         ?};
         obj_del(_obj)
      ?};

      _page+=1;
      _hasNextPage
   !}
?};

KEO.cntx_pop(); KEOP.cntx_pop();
_result


\keo_bdo_summary
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Pobiera/wyświetla podsumowanie bieżącej karty
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_selected:=(KEO.sel_size()<>0);

{? KEO.BDO_ID=''
|| KOMM.info('Nie można zaktualizować wpisu %1 — karta ewidencji nie została wysłana do BDO.'@[KEO.SYM],~_selected)
|| _jman:=exec('json_man','__jsonm');

::======================================================================================================================
   {? VAR.A_TABKEO=exec('typ_keo','odpady_keo')
   || _obj:=exec('Keo_printingpage','bdo_api',KEO.BDO_ID);
      {? _obj.STATUS=200
      || _jman.load(_obj.DATA);
         KEO.M_GEN_I:=_jman.getValue('generatedWasteMassInstallationSum');
         KEO.M_GEN_E:=_jman.getValue('generatedWasteMassExcludingInstallationSum');
         KEO.M_GEN_SI:=_jman.getValue('generatedWasteMassInstallationFromServicesSum');
         KEO.M_GEN_SE:=_jman.getValue('generatedWasteMassExcludingInstallationFromServicesSum');
         KEO.M_EXC:=_jman.getValue('excavatedWasteMassSum');
         KEO.M_COL:=_jman.getValue('collectedWasteMassSum');
         KEO.M_TRE:=_jman.getValue('treatedWasteMassSum');
         KEO.M_PCB:=_jman.getValue('treatedPcbContentSum');
         KEO.M_FOR_C:=_jman.getValue('forwardedCountryWasteMassSum');
         KEO.M_FOR_A:=_jman.getValue('forwardedAbroadWasteMassSum');
         KEO.SUM_UTC:=utc_get();
         {? KEO.put() & ~_selected
         || _red:=KEO.mk_edit('Podsumowanie'@);
            KEO.win_esep(_red,'Karta ewidencji odpadów'@);
            KEO.win_efld(_red,,'SYM');
            KEO.win_esep(_red,'Podsumowanie'@);
            KEO.win_efld(_red,,'M_GEN_I',,,,4);
            KEO.win_efld(_red,,'M_GEN_E',,,,4);
            KEO.win_efld(_red,,'M_GEN_SI',,,,4);
            KEO.win_efld(_red,,'M_GEN_SE',,,,4);
            KEO.win_efld(_red,,'M_EXC',,,,4);
            KEO.win_efld(_red,,'M_COL',,,,4);
            KEO.win_efld(_red,,'M_TRE',,,,4);
            KEO.win_efld(_red,,'M_PCB',,,,4);
            KEO.win_efld(_red,,'M_FOR_C',,,,4);
            KEO.win_efld(_red,,'M_FOR_A',,,,4);
            KEO.win_edit(_red);
            KEO.display()
         ?}
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
   |? VAR.A_TABKEO=exec('typ_keok','odpady_keo')
   || _obj:=exec('Keok_printingpage','bdo_api',KEO.BDO_ID);
      {? _obj.STATUS=200
      || _jman.load(_obj.DATA);
         KEO.M_COL_M:=_jman.getValue('collectedTotalMass');
         KEO.M_REC:=_jman.getValue('receivedTotalMass');
         KEO.M_PRO:=_jman.getValue('processedTotalMass');
         KEO.M_TRA:=_jman.getValue('transferredTotalMass');
         KEO.SUM_UTC:=utc_get();
         {? KEO.put() & ~_selected
         || _red:=KEO.mk_edit('Podsumowanie'@);
            KEO.win_esep(_red,'Karta ewidencji odpadów komunalnych'@);
            KEO.win_efld(_red,,'SYM');
            KEO.win_esep(_red,'Podsumowanie'@);
            KEO.win_efld(_red,,'M_COL_M',,,,4);
            KEO.win_efld(_red,,'M_REC',,,,4);
            KEO.win_efld(_red,,'M_PRO',,,,4);
            KEO.win_efld(_red,,'M_TRA',,,,4);
            KEO.win_edit(_red);
            KEO.display()
         ?}
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}

::======================================================================================================================
   |? VAR.A_TABKEO=exec('typ_keon','odpady_keo')
   || _obj:=exec('Keon_summary','bdo_api',KEO.BDO_ID);
      {? _obj.STATUS=200
      || _jman.load(_obj.DATA);
         KEO.M_HAZ_BR:=_jman.getValue('sumBrokerWasteMass');
         KEO.M_HAZ_DE:=_jman.getValue('sumDealerWasteMass');
         KEO.M_HAZ:=_jman.getValue('totalSum');
         KEO.SUM_UTC:=utc_get();
         {? KEO.put() & ~_selected
         || _red:=KEO.mk_edit('Podsumowanie'@);
            KEO.win_esep(_red,'Karta ewidencji odpadów niebezpiecznych'@);
            KEO.win_efld(_red,,'SYM');
            KEO.win_esep(_red,'Podsumowanie'@);
            KEO.win_efld(_red,,'M_HAZ_BR',,,,4);
            KEO.win_efld(_red,,'M_HAZ_DE',,,,4);
            KEO.win_efld(_red,,'M_HAZ',,,,4);
            KEO.win_edit(_red);
            KEO.display()
         ?}
      || KOMM.error(_obj.MESSAGE,~_selected)
      ?}
   ?};
   _obj.log_update('|%1'[KEO.uidref()])
?};
::======================================================================================================================
~~


\keo_bdo_summary_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Pobiera/wyświetla podsumowanie karty - przed grupą zaznaczonych rekordów
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy pobrać podsumowania dla zaznaczonych kart?'@)
|| KOMM.init(,,'Pobieranie danych z BDO'@);
   sel_nchk();
   1
|| 0
?}


\keo_bdo_summary_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS:Pobiera/wyświetla podsumowanie karty - po grupie zaznaczonych rekordów
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
~~


\translate_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Tłumaczy typ pozycji na zrozumiały napis
::   WE: _a - wynik formuły exec('typ_ke*','odpady_keo')
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
{? _typ=exec('typ_keo_collected','odpady_keo')
|| 'KEO przyjęte'@
|? _typ=exec('typ_keo_excavated','odpady_keo')
|| 'KEO wydobyte'@
|? _typ=exec('typ_keo_forwarded','odpady_keo')
|| 'KEO przekazane'@
|? _typ=exec('typ_keo_generated','odpady_keo')
|| 'KEO wytworzone'@
|? _typ=exec('typ_keo_treated','odpady_keo')
|| 'KEO przetwarzane'@
|? _typ=exec('typ_keok_collected','odpady_keo')
|| 'KEOK odbiór'@
|? _typ=exec('typ_keok_processed','odpady_keo')
|| 'KEOK przetwarzane'@
|? _typ=exec('typ_keok_received','odpady_keo')
|| 'KEOK przyjęte'@
|? _typ=exec('typ_keok_transferred','odpady_keo')
|| 'KEOK przekazane'@
|? _typ=exec('typ_keon_item','odpady_keo')
|| 'KEON pozycje'@
|| ''
?}


\translate_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Tłumaczy rodzaj pozycji na zrozumiały napis
::   WE: _a - wynik formuły exec('rodz_*','odpady_keo')
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
{? _typ=exec('rodz_fiz','odpady_keo')
|| 'Przekazane os. fiz.'@
|? _typ=exec('rodz_kpo','odpady_keo')
|| 'Na podstawie KPO'@
|? _typ=exec('rodz_kpok','odpady_keo')
|| 'Na podstawie KPOK'@
|? _typ=exec('rodz_rp','odpady_keo')
|| 'Przywóz do RP'@
|? _typ=exec('rodz_rpe','odpady_keo')
|| 'Wywóz poza RP'@
|? _typ=exec('rodz_zw','odpady_keo')
|| 'Zwolniony z ewidencji'@
|| ''
?}


\keo_trig_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Wyzwalacze 'przed' dla KEO
::   WE: _a [STRING] - miejsce uruchomienia wyzwalacza 'add', 'put' lub 'del'
::----------------------------------------------------------------------------------------------------------------------
{? _a='add' | _a='put'
|| {? KEO.BDO_ID='' || KEO.BDO:='N' || KEO.BDO:='T' ?};
   {? KEO.BDO_UTC<>0
   || KEO.BDO_DT:=utc_date(KEO.BDO_UTC); KEO.BDO_TM:=utc_time(KEO.BDO_UTC)
   || KEO.BDO_DT:=date(0,0,0); KEO.BDO_TM:=time(0,0,0)
   ?};
   {? KEO.SUM_UTC<>0
   || KEO.SUM_DT:=utc_date(KEO.SUM_UTC); KEO.SUM_TM:=utc_time(KEO.SUM_UTC)
   || KEO.SUM_DT:=date(0,0,0); KEO.SUM_TM:=time(0,0,0)
   ?}
?};
1


\keop_trig_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Wyzwalacze 'przed' dla KEOP
::   WE: _a [STRING] - miejsce uruchomienia wyzwalacza 'add', 'put' lub 'del'
::----------------------------------------------------------------------------------------------------------------------
{? _a='add' | _a='put'
|| {? KEOP.BDO_ID='' || KEOP.BDO:='N' || KEOP.BDO:='T' ?};
   {? KEOP.BDO_UTC<>0
   || KEOP.BDO_DT:=utc_date(KEOP.BDO_UTC); KEOP.BDO_TM:=utc_time(KEOP.BDO_UTC)
   || KEOP.BDO_DT:=date(0,0,0); KEOP.BDO_TM:=time(0,0,0)
   ?}
|? _a='del'
||
   _ref:=$KEOP.ref();
:: Czyszczenie refa źródłowego powiązanych pozycji
   KEOP.cntx_psh();
   KEOP.index('GEN_SRC');
   KEOP.prefix(_ref);
   {? KEOP.first()
   || _ok:=1;
      {!
      |?
         KEOP.GEN_SRC:='';
         KEOP.cntx_psh();
         KEOP.prefix();
         {? ~KEOP.put()
         || _ok:=0
         ?};
         KEOP.cntx_pop();
         _ok>0 & KEOP.first()
      !}
   ?};
   KEOP.cntx_pop()
?};
1


\keop_gen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Akcja Generuj w oknie KEOP typu Przekazanie - generuje powiązane wpisy
::----------------------------------------------------------------------------------------------------------------------
_continue:=1;
{? KEOP.GEN='T'
|| {? VAR.GRUPA='T'
   || KOMM.add('Na podstawie pozycji z dnia %1 na masę %2 został już wygenerowany wpis do ewidencji.'@
      [$KEOP.DT,form(KEOP.MASA,,4)]);
      _continue:=0
   || _msg:='Na podstawie wybranej pozycji został już wygenerowany wpis do ewidencji.\nCzy wygenerować kolejny?'@;
      _continue:=FUN.ask(_msg)
   ?}
?};
{? _continue>0
|| _keo:=KEOP.KEO;
   _masa:=KEOP.MASA;
   _src:=$KEOP.ref();
   KEOP.cntx_psh();
   KEOP.blank();
   {? VAR.GRUPA<>'T'
   || {? VAR.A_TABKEO=exec('typ_keo','odpady_keo')
      || KEOP.win_edit('GEN_PAR')
      || KEOP.win_edit('GEN_PARK')
      ?};
      exec('keop_gen_blank','odpady_keo');
      exec('keop_gen_efld','odpady_keo')
   ?};
   {? VAR.GRUPA='T' | KEOP.edit("exec('keop_gen_chk','odpady_keo')")
   || KEOP.KEO:=_keo;
      KEOP.TYP:=VAR.TYP_KEOP;
      KEOP.DT:=VAR.DTR;
      {? KEOP.TYP=exec('typ_keo_generated','odpady_keo')
      || KEOP.MASA_EXC:=_masa;
         KEOP.FROM_SER:=VAR.FROM_SER;
         KEOP.KOD_G:=VAR.KOD_G;
         KEOP.NAZ_G:=VAR.NAZ_G
      || KEOP.MASA:=_masa;
         KEOP.RODZ:=exec('rodz_zw','odpady_keo')
      ?};
      KEOP.GEN_SRC:=_src;
      KEOP.AR:=KEOP.DT~1;
      KEOP.AM:=KEOP.DT~2;
      KEOP.prefix();
      {? KEOP.add()
      || {? VAR.GRUPA='T'
         || VAR.L+=1
         || FUN.info('Dołączono wpis do ewidencji %1.'@[exec('translate_typ','odpady_keo',KEOP.TYP)])
         ?}
      ?}
   ?};
   KEOP.cntx_pop()
?};
~~


\keop_gen_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Akcja Generuj w oknie KEOP typu Przekazanie - przed grupą rekordów
::----------------------------------------------------------------------------------------------------------------------
_result:=0;

{? VAR.A_TABKEO=exec('typ_keo','odpady_keo')
|| KEOP.win_edit('GEN_PAR')
|| KEOP.win_edit('GEN_PARK')
?};
exec('keop_gen_blank','odpady_keo');
exec('keop_gen_efld','odpady_keo');
{? KEOP.edit("exec('keop_gen_chk','odpady_keo')")
|| VAR.GRUPA:='T';
   VAR.L:=0;
   KOMM.init(250,,'Generowanie pozycji kart ewidencji odpadów'@,'');
   sel_nchk();
   _result:=1
?};
_result


\keop_gen_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Akcja Generuj w oknie KEOP typu Przekazanie - po grupie rekordów
::----------------------------------------------------------------------------------------------------------------------
{? VAR.L>0
|| KOMM.add('Dołączono nowe wpisy (%1) do ewidencji %2.'@[$VAR.L,exec('translate_typ','odpady_keo',VAR.TYP_KEOP)])
?};
KOMM.select();
VAR.GRUPA:='N';
~~


\ae_keop_gen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Akcja po redagowaniu dla pól tabeli VAR - Parametry generowania
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_res:=1;
_set_efld:=0;
{? _fld='TYP_KEOP'
|| {? VAR.TYP_KEOP<>exec('typ_keo_generated','odpady_keo')
   || VAR.FROM_SER:='N';
      VAR.KOD_G:='';
      VAR.NAZ_G:=''
   ?};
   _set_efld:=1
|? _fld='KOD_G'
|| VAR.NAZ_G:=exec('WyszukajGmine','teryt',VAR.KOD_G)
|? _fld='FROM_SER'
|| {? VAR.FROM_SER<>'T'
   || VAR.KOD_G:='';
      VAR.NAZ_G:=''
   ?};
   _set_efld:=1
?};
{? _set_efld
|| exec('keop_gen_efld','odpady_keo')
?};
_res


\keop_gen_efld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Ustawia wymagane pola dla okna redakcyjnego GEN_PAR/GEN_PARK - Parametry generowania
::----------------------------------------------------------------------------------------------------------------------
_win:=KEOP.win_edit('?');
:: Odpady przyjęte (KEO)
{? VAR.TYP_KEOP=exec('typ_keo_collected','odpady_keo')
|| KEOP.efld_opt(_win,'editable=grayed',VAR,'FROM_SER');
   KEOP.efld_opt(_win,'editable=grayed',VAR,'KOD_G');
   KEOP.efld_opt(_win,'mark=0',VAR,'KOD_G');
   KEOP.efld_opt(_win,'editable=grayed',VAR,'NAZ_G')
:: Odpady przyjęte (KEOK)
|? VAR.TYP_KEOP=exec('typ_keok_received','odpady_keo')
|| ~~
:: Odpady wytworzone
|? VAR.TYP_KEOP=exec('typ_keo_generated','odpady_keo')
|| KEOP.efld_opt(_win,'editable=1',VAR,'FROM_SER');
   {? VAR.FROM_SER='T'
   || KEOP.efld_opt(_win,'editable=1',VAR,'KOD_G');
      KEOP.efld_opt(_win,'mark=1',VAR,'KOD_G');
      KEOP.efld_opt(_win,'editable=0',VAR,'NAZ_G')
   || KEOP.efld_opt(_win,'editable=grayed',VAR,'KOD_G');
      KEOP.efld_opt(_win,'mark=0',VAR,'KOD_G');
      KEOP.efld_opt(_win,'editable=grayed',VAR,'NAZ_G')
   ?}
?};
~~


\keop_gen_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Ustawia wartości domyślne parametrom generowania
::----------------------------------------------------------------------------------------------------------------------
VAR.KOD_G:='';
VAR.NAZ_G:='';
VAR.FROM_SER:='';
VAR.DTR:=date(0,0,0);
{? VAR.A_TABKEO=exec('typ_keo','odpady_keo')
|| {? VAR.TYP_KEOP<>exec('typ_keo_generated','odpady_keo') & VAR.TYP_KEOP<>exec('typ_keo_collected','odpady_keo')
   || VAR.TYP_KEOP:=exec('typ_keo_collected','odpady_keo')
   ?}
|| VAR.TYP_KEOP:=exec('typ_keok_received','odpady_keo');
   VAR.STRING:=exec('translate_typ','odpady_keo',VAR.TYP_KEOP)
?};
~~


\keop_gen_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Formuła walidująca okno z parametrami generowania
::----------------------------------------------------------------------------------------------------------------------
_typ:=VAR.TYP_KEOP;
_chk:='';
:: Odpady przyjęte
{? _typ=exec('typ_keo_collected','odpady_keo') | _typ=exec('typ_keok_received','odpady_keo')
|| _chk:=__CHK.record2(VAR,'DTR','Data'@)
:: Odpady wytworzone
|? _typ=exec('typ_keo_generated','odpady_keo')
|| {? VAR.FROM_SER='T'
   || _chk:=__CHK.record2(VAR,'DTR',,'KOD_G','Pochodzenie odpadów'@)
   || _chk:=__CHK.record2(VAR,'DTR','Data'@)
   ?}
?};
{? VAR.DTR>date()
|| FUN.emsg('Nie można wskazać daty przyszłej.'@);
   _chk:='DTR'
?};
_chk

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:39 d68747a9afa50898c05618464d8bc3a55ba0b4f53535cd9fb974052a7538242692b0bfc68ed90d475d9178c69135f0a9378a382f81cdb5970120609edad6b8acfe5ac042106ab3f89f45e843f21b11239b6d65a891b4191c894ffa09da98df626ed54854abf43edce6c100f86f5e6d9cd56104836ae0fcfd05dcf01ba6b6282f
