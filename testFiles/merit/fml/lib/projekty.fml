:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: projekty.fml
:: Utworzony: 2008/01/29
:: Autor: AMK, GS
::======================================================================================================================
:: Zawartosc: Procedury obsługujące projekty.
::======================================================================================================================


\dos_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2009]
:: OPIS: Aktualizacja dostępności pracownika dla projektów na podstawie zapisow w tabeli H.
::       Formuła umieszczona ze względu na przenoszenie funkcji obszaru Personel jej kod należy uzupełnić podczas imple-
::       mentacji funkcji obsługujących projekty.
::   WY: 1 - wykonanie poprawne, 0 - wystąpił błąd podczas aktualizacji
::----------------------------------------------------------------------------------------------------------------------
1


\projekt2projm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: rozwija informacje o projekcie z _[1]
::   WE: _[1]-cur_tab.PROJEKT
::   WY: ~~
::  OLD: \projekt2projm/skid_prm.fml
::----------------------------------------------------------------------------------------------------------------------
~~


\projzakr_nie_dotyczy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Zakres projektów - Nie dotyczy
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Nie dotyczy'


\projzakr_wewnetrzne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Zakres projektów - Wewnętrzne
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Wewnętrzne'


\projzakr_zewnetrzne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Zakres projektów - Zewnętrzne
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Zewnętrzne'


\projzakr_wszystkie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Zakres projektów - Wszystkie
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Wszystkie'


\typ_projzakr_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Przed redakcją TYPYSP.PROJZAKR
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('typ_projwjo_bd','projekty');
exec('typ_projzkh_bd','projekty')


\typ_projzakr_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Po redkacji TYPYSP.PROJZAKR
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PROJZ.PROJZAKR:=fld();
{? var_pres('PROJWJO',cur_tfld())=27
|| {? PROJZ.PROJZAKR<>exec('projzakr_wewnetrzne','projekty') & PROJZ.PROJZAKR<>exec('projzakr_wszystkie','projekty')
   || cur_tfld().PROJWJO:='N'
   ?};
   exec('typ_projwjo_bd','projekty')
?};
{? var_pres('PROJZKH',cur_tfld())=27
|| {? PROJZ.PROJZAKR<>exec('projzakr_zewnetrzne','projekty') & PROJZ.PROJZAKR<>exec('projzakr_wszystkie','projekty')
   || cur_tfld().PROJZKH:='N'
   ?};
   exec('typ_projzkh_bd','projekty')
?};
1


\typ_projwjo_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Przed wyświetleniem TYPYSP.PROJWJO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:=cur_tfld();
{? var_pres('PROJWJO',_Tab)>0
|| {? _Tab.PROJZAKR=exec('projzakr_wewnetrzne','projekty') | _Tab.PROJZAKR=exec('projzakr_wszystkie','projekty')
   || cur_tfld().efld_opt(cur_tfld().win_edit('?'),'enable=1',,'PROJWJO')
   || cur_tfld().efld_opt(cur_tfld().win_edit('?'),'enable=0',,'PROJWJO')
   ?}
?};
1


\typ_projzkh_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Przed wyświetleniem TYPYSP.PROJZKH
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:=cur_tfld();
{? var_pres('PROJZKH',_Tab)>0
|| {? _Tab.PROJZAKR=exec('projzakr_zewnetrzne','projekty') | _Tab.PROJZAKR=exec('projzakr_wszystkie','projekty')
   || _Tab.efld_opt(_Tab.win_edit('?'),'enable=1',,'PROJZKH')
   || _Tab.efld_opt(_Tab.win_edit('?'),'enable=0',,'PROJZKH')
   ?}
?};
1


\projekty_slo_set_var
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Ustawia zmienn wymagane do filtrowania słownika projektów
::   WE: _a - Uchwyt do tabeli
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:=_a;

:: Ustawienia domyślne
PROJZ.PROJZAKR:=exec('projzakr_nie_dotyczy','projekty');
PROJZ.PROJWJO:='N';
PROJZ.PROJZKH:='N';
PROJZ.ODDZ:='';
PROJZ.KH:=null();
PROJZ.KH_ODB:=null();
PROJZ.UD_SKL:=null();
PROJZ.PROJUDT:='';
:: Ustawienia specyficzne dla donego dokumentu
{? _Tab=FAKS | _Tab=FAP
|| PROJZ.PROJZAKR:=FAKS.T().PROJZAKR;
   {? _Tab=FAP | (_Tab=FAKS & FAKS.PROJEKTY=null() & FAKS.KH<>null())
   || PROJZ.PROJZKH:=FAKS.T().PROJZKH
   ?};
   PROJZ.ODDZ:=FAKS.ODDZ;
   PROJZ.KH:=FAKS.KH;
   PROJZ.KH_ODB:=FAKS.KH_ODB
|? _Tab=ZK_N | _Tab=ZK_P
|| PROJZ.PROJZAKR:=ZK_N.T().PROJZAKR;
   {? ZK_N.T().R='Z'
   || {? _Tab=ZK_P  | (_Tab=ZK_N & ZK_N.PROJEKTY=null() & ZK_N.KH<>null())
      || PROJZ.PROJZKH:=ZK_N.T().PROJZKH
      ?}
   || PROJZ.PROJWJO:=ZK_N.T().PROJWJO
   ?};
   PROJZ.ODDZ:=ZK_N.ODDZ;
   PROJZ.KH:=ZK_N.KH;
   PROJZ.KH_ODB:=ZK_N.ODB;
   PROJZ.UD_SKL:=
      {? _Tab=ZK_N
      || exec('szukaj_ud_skl','schemat','PODZORG',ZK_N.WYD().KOD)
      || exec('szukaj_ud_skl','schemat','PODZORG',ZK_P.ZL().JORG().KOD)
      ?}
|? _Tab=ND | _Tab=DK
|| PROJZ.PROJZAKR:=ND.TYP().PROJZAKR;
   {? _Tab=DK  | (_Tab=ND & ND.PROJEKTY=null() & ND.KH<>null())
   || PROJZ.PROJZKH:=ND.TYP().PROJZKH
   ?};
   PROJZ.PROJWJO:=ND.TYP().PROJWJO;
   PROJZ.ODDZ:=ND.ODDZ;
   PROJZ.KH:=ND.KH;
   PROJZ.KH_ODB:=ND.KH_ODB;
   PROJZ.UD_SKL:=
      {? _Tab=ND
      || exec('szukaj_ud_skl','schemat','PODZORG',ND.WYD().KOD)
      || exec('szukaj_ud_skl','schemat','PODZORG',DK.WYD().KOD)
      ?}
|? _Tab=ZD_NAG | _Tab=ZD_POZ
|| PROJZ.PROJZAKR:=ZD_NAG.T().PROJZAKR;
   {? _Tab=ZD_POZ  | (_Tab=ZD_NAG & ZD_NAG.PROJEKTY=null() & ZD_NAG.KH<>null())
   || PROJZ.PROJZKH:=ZD_NAG.T().PROJZKH
   ?};
   PROJZ.ODDZ:=ZD_NAG.ODDZ;
   PROJZ.KH:=ZD_NAG.KH
|? _Tab=ZL
|| PROJZ.PROJZAKR:=ZL.TYP().PROJZAKR;
   PROJZ.PROJZKH:=ZTP.PROJZKH;
   PROJZ.PROJWJO:=ZTP.PROJWJO;
   PROJZ.ODDZ:=ZL.ODDZ;
   PROJZ.KH:=ZL.KH;
   PROJZ.UD_SKL:=exec('szukaj_ud_skl','schemat','PODZORG',ZL.JORG().KOD)
|? _Tab=G
|| exec('czytaj','#stalesys',{? G.D=#0 || date() || G.D ?},KST,'PROJZAKR');
   PROJZ.PROJZAKR:=KST.PROJZAKR
|? _Tab=P
|| exec('czytaj','#stalesys',date(),KST,'PROJZAKR');
   PROJZ.PROJZAKR:=KST.PROJZAKR
|? _Tab=FAKZ
|| PROJZ.PROJZAKR:=exec('projzakr_zewnetrzne','projekty');
   PROJZ.ODDZ:=FAKZ.ODDZ;
   PROJZ.PROJZKH:='N';
   PROJZ.KH:=FAKZ.KH;
   PROJZ.KH_ODB:=FAKZ.KH_ODB
|? _Tab=PROJGD
|| PROJZ.PROJZAKR:=exec('projzakr_wszystkie','projekty')
|? _Tab=REM_ZGL
|| PROJZ.PROJZAKR:=exec('projzakr_wszystkie','projekty')
|? _Tab=DOKUM
|| PROJZ.PROJZAKR:=exec('projzakr_wszystkie','projekty');
   {? (KHVZ.KHVP='kh_all' | KHVZ.KHVP='kh_osob' | KHVZ.KHVP='dokum') & DOKUM.KH<>null()
   || PROJZ.PROJZKH:='T';
      PROJZ.KH:=DOKUM.KH
   ?}
|? _Tab=REK_N
|| PROJZ.PROJZAKR:=exec('projzakr_wszystkie','projekty')
|? _Tab=OFE
|| PROJZ.PROJZAKR:=OFE.T().PROJZAKR
|? _Tab=OFP
|| PROJZ.PROJZAKR:=OFP.OFE().T().PROJZAKR
|? _Tab=UM
|| PROJZ.PROJZAKR:=exec('projzakr_wszystkie','projekty')
|? _Tab=UDT
|| PROJZ.PROJZAKR:=exec('projzakr_wszystkie','projekty');
   PROJZ.PROJUDT:='N'
?}


\projekty_f_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Słownik projektów
::   WE: _a - Uchwyt do tabeli
::       [_b] - 0 - ignorować ograniczenia dokumentu, 1 - uwzględniać ograniczenia dokumentu
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<>type_of(0) || _b:=1 ?};

{? cur_kwin()<>'s_dict' & var_pres('_a')>0  || exec('projekty_slo_set_var','projekty',_a) ?};
exec('zakr_get','projekty_view');

PROJEKTY.prefix();
PROJEKTY.f_clear();
_zakr:= {? ZAKR.AKT_PROJ<>'' || ' and A=\'%1\''[ZAKR.AKT_PROJ] || '' ?};
_etapy:= {? ZAKR.ETAPY='N' || ' and POZ_PROJ=1' || '' ?};
_where:=
   'PROJEKTY.FIRMA=:_a and PROJEKTY.STAT_REJ=\'T\'%1%2'[_zakr,_etapy]
   +
   {? PROJZ.PROJZAKR=exec('projzakr_wewnetrzne','projekty')
   || ' and PROJTYPY.R=\''+exec('wewnetrzny','projtypy')+'\''
   |? PROJZ.PROJZAKR=exec('projzakr_zewnetrzne','projekty')
   || ' and PROJTYPY.R=\''+exec('zewnetrzny','projtypy')+'\''
   || ''
   ?}
   +
   {? PROJZ.ODDZ=''
   || ''
   || ' and (PROJEKTY.ODDZ=\'\' or PROJEKTY.ODDZ=\':_c\')'
   ?}
   +
   {? _b & PROJZ.PROJZKH='T' & PROJZ.KH
   || {? PROJZ.KH_ODB
      || {? PROJZ.PROJZAKR=exec('projzakr_wszystkie','projekty')
         || ' and (PROJTYPY.R=\''+exec('wewnetrzny','projtypy')+'\''+' or PROJEKTY.KH=:_d and PROJEKTY.KH_ODB=:_e)'
         || ' and PROJEKTY.KH=:_d and PROJEKTY.KH_ODB=:_e'
         ?}
      || {? PROJZ.PROJZAKR=exec('projzakr_wszystkie','projekty')
         || ' and (PROJTYPY.R=\''+exec('wewnetrzny','projtypy')+'\''+' or PROJEKTY.KH=:_d)'
         || ' and PROJEKTY.KH=:_d'
         ?}
      ?}
   || ''
   ?}
   +
   {? _b & PROJZ.PROJWJO='T' & PROJZ.UD_SKL
   || {? 0& PROJZ.PROJZAKR=exec('projzakr_wszystkie','projekty')
      || ' and (PROJTYPY.R=\''+exec('zewnetrzny','projtypy')+'\''+' and PROJEKTY.UD_SKL is null or PROJEKTY.UD_SKL=:_f)'
      || ' and PROJEKTY.UD_SKL=:_f'
      ?}
   || ''
   ?}
   +
   {? _b & PROJZ.PROJUDT='N'
   || ' and PROJEKTY.UDT is null'
   || ''
   ?};
_from:='join PROJTYPY using(PROJEKTY.T,PROJTYPY.REFERENCE)';
PROJEKTY.f_set('NR,KOL',_from,_where,REF.FIRMA,PROJZ.PROJZAKR,PROJZ.ODDZ,PROJZ.KH,PROJZ.KH_ODB,PROJZ.UD_SKL)


\tabdok_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Sprawdza poprawność wypełnienia pól powiązanych z poelm PROJEKTY
::   WE: _a - uchwyt do tabeli
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:=_a;
_wyn:='';
{? _Tab.PROJEKTY
|| {? _Tab=FAKS
   || {? FAKS.SZ='S'
      || {? FAKS.KH & FAKS.PROJEKTY().KH
         || {? _wyn='' & PROJEKTY.KH_ODB & FAKS.KH_ODB<>PROJEKTY.KH_ODB
            || {? FUN.ask('Inny odbiorca na dokumencie i projekcie.'@
                  +'\n\nDokument: %1'@
                     [{? FAKS.KH_ODB || exec('record','#to_string',FAKS.KH_ODB) || 'nie podano odbiorcy'@ ?}]
                  +'\nProjekt: %1'@[exec('record','#to_string',PROJEKTY.KH_ODB)]
                  +'\n\nCzy chcesz zmienić odbiorcę?'@)
               || _wyn:='KH_ODB'
               ?}
            ?};
            {? _wyn='' & PROJEKTY.PL & FAKS.PL<>PROJEKTY.PL
            || {? FUN.ask('Inny sposób płatności na dokumencie i projekcie.'@
                  +'\n\nDokument: %1'@[exec('record','#to_string',FAKS.PL)]
                  +'\nProjekt: %1'@[exec('record','#to_string',PROJEKTY.PL)]
                  +'\n\nCzy chcesz zmienić sposób płatności?'@)
               || _wyn:='FORMAPLA'
               ?}
            ?}
         ?}
      ?}
   |? _Tab=ZK_N
   || {? ZK_N.T().R='Z'
      || {? ZK_N.KH & ZK_N.PROJEKTY().KH
         || {? _wyn='' & PROJEKTY.KH_ODB & ZK_N.ODB<>PROJEKTY.KH_ODB
            || {? FUN.ask('Inny odbiorca na dokumencie i projekcie.'@
                  +'\n\nDokument: %1'@
                     [{? ZK_N.ODB || exec('record','#to_string',ZK_N.ODB) || 'nie podano odbiorcy'@ ?}]
                  +'\nProjekt: %1'@[exec('record','#to_string',PROJEKTY.KH_ODB)]
                  +'\n\nCzy chcesz zmienić odbiorcę?'@)
               || _wyn:='ODB'
               ?}
            ?};
            {? _wyn='' & PROJEKTY.PL & ZK_N.PL<>PROJEKTY.PL
            || {? FUN.ask('Inny sposób płatności na dokumencie i projekcie.'@
                  +'\n\nDokument: %1'@[exec('record','#to_string',ZK_N.PL)]
                  +'\nProjekt: %1'@[exec('record','#to_string',PROJEKTY.PL)]
                  +'\n\nCzy chcesz zmienić sposób płatności?'@)
               || _wyn:='PL'
               ?}
            ?}
         ?}
      ?}
   |? _Tab=ND
   || {? ND.TYP().P='N' & TYPYDOK.Z='T'
      || {? ND.KH & ND.PROJEKTY().KH
         || {? _wyn='' & PROJEKTY.KH_ODB & ND.KH_ODB<>PROJEKTY.KH_ODB
            || {? FUN.ask('Inny odbiorca na dokumencie i projekcie.'@
                  +'\n\nDokument: %1'@
                     [{? ND.KH_ODB || exec('record','#to_string',ND.KH_ODB) || 'nie podano odbiorcy'@ ?}]
                  +'\nProjekt: %1'@[exec('record','#to_string',PROJEKTY.KH_ODB)]
                  +'\n\nCzy chcesz zmienić odbiorcę?'@)
               || _wyn:='KH_ODB'
               ?}
            ?}
         ?}
      ?}
   |? _Tab=ZL
   || {? ZL.TYP().PROJZAKR<>exec('projzakr_nie_dotyczy','projekty')
      ||
::       Sprawdzam czy się rodzaj projektu zgadza z rodzajem projektu na typie zlecenia
         {? ZL.PROJEKTY<>null()
         || {? ZTP.PROJZAKR<>exec('projzakr_wszystkie','projekty')
            || {? (ZL.PROJEKTY().T().R-1)<>(ZL.TYP().PROJZAKR-1)
               || _msg:='Rodzaj projektu na zleceniu inny niż określony na typie zlecenia\n'
                        'Projekt na zleceniu: %1\n'
                        'Projekt na typie zlecenia: %2'@[ZL.PROJEKTY().T().R,ZL.TYP().PROJZAKR];
                  FUN.emsg(_msg);
                  _wyn:='PROJEKTY'
               ?}
            ?}
         ?}
      ?}
   |? _Tab=OFE
   || {? OFE.KH & OFE.PROJEKTY().KH
      || {? _wyn='' & PROJEKTY.KH_ODB & OFE.ODB<>PROJEKTY.KH_ODB
         || {? FUN.ask('Inny odbiorca na ofercie i projekcie.'@
               +'\n\nOferta: %1'@
                  [{? OFE.ODB || exec('record','#to_string',OFE.ODB) || 'nie podano odbiorcy'@ ?}]
               +'\nProjekt: %1'@[exec('record','#to_string',PROJEKTY.KH_ODB)]
               +'\n\nCzy chcesz zmienić odbiorcę?'@)
            || _wyn:='ODB'
            ?}
         ?};
         {? _wyn='' & PROJEKTY.PL & OFE.PL<>PROJEKTY.PL
         || {? FUN.ask('Inny sposób płatności na ofercie i projekcie.'@
               +'\n\nOferta: %1'@[exec('record','#to_string',OFE.PL)]
               +'\nProjekt: %1'@[exec('record','#to_string',PROJEKTY.PL)]
               +'\n\nCzy chcesz zmienić sposób płatności?'@)
            || _wyn:='PL'
            ?}
         ?}
      ?}
   ?}
?};
_wyn


\projekty_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Wartość początkowa TAPDOK.PROJEKTY
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PROJZ.PROJEKTY


\projekty_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Przed redakcją TABDOK.PROJEKTY
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:={? cur_tfld()=PROJ2FAP || params_get().TAB || cur_tfld() ?};
_edit:=0;
VAR_DEL.delete('__PRJVAR');
__PRJVAR:=obj_new('TAB','ZAKRES','TRYB');
__PRJVAR.TAB:=_Tab;
exec('projekty_f_set','projekty',_Tab);
__PRJVAR.ZAKRES:=
   cur_tfld()<>PROJ2FAP
   & +PROJZ.PROJZAKR
   & (PROJZ.PROJZKH='T' & PROJZ.KH | PROJZ.PROJWJO='T' & PROJZ.UD_SKL)
   &  {? __PRJVAR.TAB=FAKS    || 1
      |? __PRJVAR.TAB=ND      || ND.ZL=null()
      |? __PRJVAR.TAB=ZK_N    || ZK_N.ZL=null()
      |? __PRJVAR.TAB=ZD_NAG  || 1
      |? __PRJVAR.TAB=ZL      || 1
      |? __PRJVAR.TAB=REM_ZGL || 1
      |? __PRJVAR.TAB=REK_N || 1
      |? __PRJVAR.TAB=OFE || 1
      ?};
__PRJVAR.TRYB:=0;
PROJEKTY.win_dict('WER');
{? +PROJZ.PROJZAKR & PROJZ.PROJZAKR<>exec('projzakr_nie_dotyczy','projekty')
|| {? _Tab=FAKS & exec('FindInSet','#table','PROJ2FAP','FAKS',FAKS.ref(),'N',,,'P')=null()
   & ( _faks_ok:=1;
      FAP.cntx_psh();
      FAP.index('FAP');
      FAP.prefix(FAKS.ref());
      {? FAP.first()
      || {!|?
            {? FAP.PROJEKTY<>null() || _faks_ok:=0 ?};
            FAP.next() & _faks_ok
         !}
      ?};
      FAP.cntx_pop();
      _faks_ok
      )
   || _edit:=1
   |? _Tab=FAP
   || _edit:=FAKS.PROJEKTY=null() & exec('FindInSet','#table','PROJ2FAP','FAP',FAP.ref(),'T',,,'P')=null()
   |? _Tab=ZK_N & exec('FindInSet','#table','ZK_P','NAG',ZK_N.ref())=null()
   || _edit:=1
   |? _Tab=ZK_P
   || _edit:=ZK_N.PROJEKTY=null()
   |? _Tab=ND & exec('FindInSet','#table','DK','DOKMAG',ND.ref())=null()
   || _edit:=1
   |? _Tab=DK
   || _edit:=ND.PROJEKTY=null()
   |? _Tab=ZD_NAG & exec('FindInSet','#table','ZD_POZ','POZ',ZD_NAG.ref())=null()
   || _edit:=1
   |? _Tab=ZD_POZ
   || _edit:=ZD_NAG.PROJEKTY=null()
   |? _Tab=ZL
   ||
      {? ZL.TREE>0
      || ZL.cntx_psh();
         ZL.prefix();
         {? ZL.seek(ZL.TREE,)
         || {? ZL.PROJEKTY=null()
            || _edit:=1
            ?}
         ?};
         ZL.cntx_pop();
         ~~
      || _edit:=1
      ?}
   |? _Tab=G
   || PROJEKTY.win_dict('WER');
      ProjBez:='WM:M';
      PROJEKTY.actions('WER',ProjBez);
      _edit:=1
   |? _Tab=P
   || _edit:=1
   |? _Tab=FAKZ
   || _edit:=1
   |? _Tab=PROJGD
   || PROJEKTY.win_dict('WER');
      ProjBez:='WM:M';
      _edit:=1
   |? _Tab=REM_ZGL
   || PROJEKTY.win_dict('WER');
      _edit:=1
   |? _Tab=DOKUM
   || _edit:=0;
      {? (KHVZ.KHVP='kh_all' | KHVZ.KHVP='kh_osob' | KHVZ.KHVP='dokum') & DOKUM.KH<>null()
      || PROJEKTY.actions('SLO','L');
         PROJEKTY.win_dict('SLO');
         _edit:=1
      ?}
   |? _Tab=REK_N
   || _edit:=1
   |? _Tab=OFE & exec('FindInSet','#table','OFP','OFE_P',OFE.ref())=null()
   || _edit:=1
   |? _Tab=OFP
   || _edit:=OFE.PROJEKTY=null()
   |? _Tab=UM
   || _edit:=1
   ?}
?};
{? _edit
|| VAR_DEL.delete('__tabdok');
   __tabdok:=obj_new('PROJEKTY');
   __tabdok.PROJEKTY:=fld();
   1
?}


\projekty_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Po redkacji TABDOK.PROJEKTY
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? __tabdok.PROJEKTY<>fld()
||
   _kh_odb:=exec('kh_odb_in_set','kontrahent',PROJEKTY.KH,PROJEKTY.KH_ODB);
   _Tab:=cur_tab(1,1);
   _Tab.PROJEKTY:=fld();
   {? _Tab.PROJEKTY
   || {? _Tab=FAKS
      || {? FAKS.T().PROJZKH='T' & FAKS.PROJEKTY().KH
         || FAKS.KH:=BEER.KH:=FAKS.PROJEKTY().KH;
            FAKS.KH_ODB:=_kh_odb;
            FAKS.PL:=PROJEKTY.PL;
            FZ.FORMAPLA:=FAKS.PL().KOD;
            FZ.PL:=FAKS.PL;
            FZ.TERMPLAT:=exec('term_plat','faktury_plat',,'N',FAKS.ref());
            FAKS.TZ:=FZ.TERMPLAT;
            INTRAST.NIP:=FAKS.NIP_UE:='';
            exec('plat_one','faktury_plat',FAKS.ref());
            exec('duplikuj_dane','faktury_wspolne','KH','KH_ODB');
            exec('ae_fa_kh','faktury_nag');
::          opcje przycisków
            exec('faks_win_edit_btn_opt','faktury_nag')

         ?}
      |? _Tab=ZK_N
      || {? ZK_N.T().PROJZKH='T' & ZK_N.PROJEKTY().KH
         || {? ZK_N.T().R='Z'
            || ZK_N.KH:=BEER.KH:=ZK_N.PROJEKTY().KH;
               ZK_N.ODB:=_kh_odb;
               ZK_N.PL:=PROJEKTY.PL;
               INTRAST.NIP:=ZK_N.NIP_UE:=''
            ?};
            exec('poz_kh','zamsiw_nag');
::          opcje przycisków
            exec('zknag_win_edit_btn_opt','zamsiw_nag')

         ?}
      |? _Tab=ZD_NAG
      || {? ZD_NAG.T().PROJZKH='T' & ZD_NAG.PROJEKTY().KH
         || {? ZD_NAG.PROJEKTY().T().R=exec('zewnetrzny','projtypy')
            || ZD_NAG.KH:=ZD_NAG.PROJEKTY().KH;
               INTRAST.NIP:=ZD_NAG.NIP_UE:='';
               exec('ae_zd_kh','zamdst_nag',1)
            ?}
         ?}
      |? _Tab=ND
      || {? ND.TYP().PROJZKH='T' & ND.PROJEKTY().KH
         || ND.KH:=BEER.KH:=ND.PROJEKTY().KH;
            ND.KH_ODB:=_kh_odb;
            INTRAST.NIP:=ND.NIP_UE:='';
            exec('nd_nip_ue','magdok_nag')
         ?}

::    Obsługa zleceń
      |? _Tab=ZL
      || {? ZL.PROJEKTY().T().R=exec('zewnetrzny','projtypy')
         ||
::          Projekt zewnętrzny - przepisuję na zlecenie kontrahenta
            {? PROJEKTY.KH<>null()
            || ZL.KH:=PROJEKTY.KH
            ?}
         |? ZL.PROJEKTY().T().R=exec('wewnetrzny','projtypy')
         ||
::          Projekt wewnętrzny - przepisuje na zlecenie wydział
            {? PROJEKTY.UD_SKL<>null()
            ||
               UD_SKL.cntx_psh();
               SLO.cntx_psh();
               SLO.index('SL');
               SLO.prefix(XINFO.SLWYDZIA,PROJEKTY.UD_SKL().SYMBOL,);
               {? SLO.first()
               || ZL.JORG:=SLO.ref()
               || FUN.info('Błąd konfiguracji systemu.'@+'\n\n'+'Nie znaleziono wydziału: %1.'@[PROJEKTY.UD_SKL().SYMBOL])
               ?};
               SLO.cntx_pop();
               UD_SKL.cntx_pop()
            ?}
         ?}
      |? _Tab=G
      || VAR_DEL.delete('ProjBez');
         _dt:={? G.D=#0 || date() || G.D ?};
         exec('czytaj','#stalesys',_dt,KST,'PROJKK');
         G.KK:={? +form(KST.PROJKK().FORMULA)
               || ($(KST.PROJKK().FORMULA))(_Tab.PROJEKTY,_dt~1,'PPL')
               || null()
               ?}
      |? _Tab=FAKZ
      || {? FAKZ.PROJEKTY().KH
         || FAKZ.KH:=BEER.KH:=FAKZ.PROJEKTY().KH;
            FAKZ.KH_ODB:=_kh_odb
         |? FAKZ.PROJEKTY().T().R=exec('wewnetrzny','projtypy')
         || FUN.info('Wybór projektu wewnętrznego niedostępny.'@);
            FAKZ.PROJEKTY:=null()
         ?}

::    Obsługa zgłoszeń remontowych
      |? _Tab=REM_ZGL
      || {? REM_ZGL.PROJEKTY().T().R=exec('zewnetrzny','projtypy')
         ||
::          Projekt zewnętrzny - przepisuję na zgłoszenie kontrahenta
            {? PROJEKTY.KH<>null()
            || REM_ZGL.WEW:='N';
               REM_ZGL.KH:=PROJEKTY.KH;
               REM_ZGL.UD_SKL:=null();
               UD_POM.PBUD:=''
            ?}
         |? REM_ZGL.PROJEKTY().T().R=exec('wewnetrzny','projtypy')
         ||
::          Projekt wewnętrzny - przepisuje na zgłoszenie wydział
            {? PROJEKTY.UD_SKL<>null()
            || REM_ZGL.WEW:='T';
               REM_ZGL.KH:=null();
               REM_ZGL.UD_SKL:=PROJEKTY.UD_SKL;
               UD_POM.PBUD:=REM_ZGL.UD_SKL().SYMBOL
            ?}
         ?};
         exec('rem_zgl_efld_opt','remonty_zgloszenia')
      |? _Tab=REK_N
      || {? REK_N.PROJEKTY().T().R=exec('zewnetrzny','projtypy')
         ||
::          Projekt zewnętrzny - przepisuję kontrahenta (jeżeli nie wypełniony)
            {? PROJEKTY.KH<>null() & REK_N.KH=null()
            || REK_N.KH:=PROJEKTY.KH;
               exec('set_efld_opt','reklamacje');
               exec('po_miejsce','reklamacje','KH')
            ?}
         ?}
      |? _Tab=UM
      || {? UM.PROJEKTY().T().R=exec('zewnetrzny','projtypy')
         || UM.KH:=BEER.KH:=UM.PROJEKTY().KH;
            UM.KH_ODB:=_kh_odb
         ?}
      |? _Tab=OFE
      || {? OFE.PROJEKTY().T().R=exec('zewnetrzny','projtypy')
         || ZK_Z.KH:=OFE.KH;
            OFE.KH:=BEER.KH:=OFE.PROJEKTY().KH;
            OFE.ODB:=_kh_odb;
            exec('ae_ofekh','!lsp_ofe_dofe')
         ?}
      ?}
   ||
::    Obsługa zgłoszeń remontowych
      {? _Tab=REM_ZGL
      || exec('rem_zgl_efld_opt','remonty_zgloszenia')
      ?}
   ?}
?};
1


\proj2fap_rekord_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Rekord po tabeli PROJ2FAP
::   WY: akronim pola / ''
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_Tab:=params_get().TAB;
_var:=params_get().var;
{? _Tab=FAKS
|| PROJ2FAP.FAKS:=FAKS.ref();
   PROJ2FAP.FAKS_NR:=FAKS.NR;
   PROJ2FAP.SZABLON:=_var.SZABLON;
   PROJ2FAP.PROJREM:=_var.PROJREM;
   {? PROJ2FAP.PROCENT<0 | PROJ2FAP.PROCENT>100
   || FUN.info('Pole procent przyjmuje wartości z zakresu (0;100>.'@);
      _wyn:='PROCENT'
   ?}
|? _Tab=FAP
|| _wyn:=__CHK.record(PROJ2FAP,,{? _var.PROJREM='P' || 'PROJEKTY' || 'REM_ZGL' ?},'IL','W');
   {? _wyn=''
   || PROJ2FAP.FAKS:=FAKS.ref();
      PROJ2FAP.FAKS_NR:=FAKS.NR;
      PROJ2FAP.KZ:=$FAKSZKZN.REF;
      PROJ2FAP.FAP:=FAP.ref();
      PROJ2FAP.FAP_POZ:=FAP.POZ;
      PROJ2FAP.FAP_M:=FAP.M;
      PROJ2FAP.WAL_N:=FAP.WAL_N;
      PROJ2FAP.SZABLON:='N';
      PROJ2FAP.PROJREM:=_var.PROJREM
   ?}
?};
_wyn


\proj2fap_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Treśc triggera tabeli PROJ2FAP
::   WE: _a - rodzaj trigera: 'add', 'put', 'del'
::----------------------------------------------------------------------------------------------------------------------
{? _a='add'
|| _fap:=PROJ2FAP.FAP;
   _proj_or_rem:=PROJ2FAP.PROJREM
|| _fap:=bfld('FAP');
   _proj_or_rem:=bfld('PROJREM')
?};
{? _fap<>null() & _proj_or_rem='P'
|| FAP.cntx_psh();
   PROJ2FAP.cntx_psh();
   PROJ2FAP.index('FAP');
   PROJ2FAP.prefix('N','P',_fap);
   exec('FindAndGet','#table',FAP,_fap,,"
      FAP.PROJEKTY:={? PROJ2FAP.first() & PROJ2FAP.next()=0 || PROJ2FAP.PROJEKTY || null() ?};
      FAP.put();
      ~~"
   );
   PROJ2FAP.cntx_pop();
   FAP.cntx_pop()
?};
~~


\proj2fap_trig_on
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Włącza triggery tabeli PROJ2FAP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PROJ2FAP.trig_a('add',"exec('proj2fap_trig','projekty','add')",'fap');
PROJ2FAP.trig_a('put',"exec('proj2fap_trig','projekty','put')",'fap');
PROJ2FAP.trig_a('del',"exec('proj2fap_trig','projekty','del')",'fap')


\proj2fap_trig_off
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Wyłącza triggery tabeli PROJ2FAP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PROJ2FAP.trig_a('add',,'fap');
PROJ2FAP.trig_a('put',,'fap');
PROJ2FAP.trig_a('del',,'fap')


\proj2fap_okienko_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Okienko przed tabeli PROJ2FAP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('proj2fap_trig_on','projekty');
1


\proj2fap_okienko_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Okienko po tabeli PROJ2FAP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:=params_get().TAB;
_var:=params_get().var;
_wyn:=0;
{? _var.SZABLON='T'
|| _procent:=0;
   _loop:=PROJ2FAP.first();
   {!
   |? _loop
   |!
      _procent+=PROJ2FAP.PROCENT;
      _loop:=PROJ2FAP.next()
   !};
   _ask:=
      {? _var.PROJREM='P'
      || 'Szablon rozliczenia projektów dotyczy %1\% wartości.\nZaakceptować szablon?'@[form(_procent,,2,'9,')]
      || 'Szablon rozliczenia zgłoszeń remontowych dotyczy %1\% wartości.\nZaakceptować szablon?'@[form(_procent,,2,'9,')]
      ?};
   _wyn:=
      {? _procent<>100
      || FUN.ask(_ask)
      || 1
      ?}
|? _var.SZABLON='N'
|| _wyn:=1
?};
{? _wyn || exec('proj2fap_trig_off','projekty') ?};
_wyn


\proj2fap_rozlicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Rozliczenie projektów (albo zgłoszeń remontowych)
::   WE: _a - FAP.ref()
::       [_b] - 0-z komunikatami, 1-bez komunikatów
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:=params_get().TAB;
_var:=params_get().var;

{? _var.PROJREM='P' & FAKS.T().PROJZAKR=exec('projzakr_nie_dotyczy','projekty')
      |
   _var.PROJREM='R' & FAKS.SZ='S'
||
   return()
?};

_fap:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_quiet:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_rodzaj:='';

_Szablon:=tab_tmp(4
   ,'FAP'      ,'STRING[16]'  ,'$FAP.ref()'
   ,'OGOLNY'   ,'STRING[1]'   ,'T- wg szablonu, N-wg dok'
   ,'PROJEKTY' ,'STRING[16]'  ,'$PROJEKTY.ref()'
   ,'REM_ZGL'  ,'STRING[16]'  ,'$REM_ZGL.ref()'
   ,'PROCENT'  ,'REAL'        ,'Procent');

PROJ2FAP.cntx_psh();
PROJ2FAP.index('FAKS');
PROJ2FAP.prefix('T',_var.PROJREM,FAKS.ref());
_loop:=PROJ2FAP.first();
{? _loop
:: szablon ogólny
|| _loop:=PROJ2FAP.first();
   {!
   |? _loop
   |!
      _Szablon.blank();
      _Szablon.OGOLNY:='T';
      _Szablon.PROJEKTY:=$PROJ2FAP.PROJEKTY;
      _Szablon.REM_ZGL:=$PROJ2FAP.REM_ZGL;
      _Szablon.PROCENT:=PROJ2FAP.PROCENT;
      _Szablon.add();
      _loop:=PROJ2FAP.next()
   !}
|? _var.PROJREM='P' & FAKS.T().KOR='N'
:: szablon dla każdej pozycji wg dokumentów powiązanych
:: tylko dla dokumentów, dla korekt nie ma analizy dokumentów powiązanych
|| FAKS.cntx_psh();
   FAP.cntx_psh();
   ND.cntx_psh();
   DK.cntx_psh();
   FAP2DK.cntx_psh();
   {? FAKS.SZ='S'
:: dokumenty sprzedaży
   || __ksg:=FAKS.ZAK;
      exec('pow_dokt','powdok',1);
      __powdok.prefix(0,3);
      {? __powdok.first()
      || __powdok.prefix(#__powdok.ref());
         {? FAKS.T().KOR='Z'
         || FAP.index('KZ');
            FAP.prefix($FAKS.ref())
         || FAP.index('FAP');
            FAP.prefix(FAKS.ref())
         ?};
         _loop:=FAP.first();
         {!
         |? _loop
         |!
            {? (_fap=null() | _fap=FAP.ref()) & FAP.PROJEKTY=null()
::          rozliczane są tylko pozycje, które nie mają przypisanego projektu
            || _fap:=FAP.ref();
               _sum_il:=0;
               _loop:=__powdok.first();
               {!
               |? _loop
               |!
                  ND.use(ref_name(__powdok.REF));
                  ND.prefix();
                  {? ND.seek(__powdok.REF)
                  || DK.use((DK.name()-3)+(ND.name()+3));
                     DK.index('FAP');
                     DK.prefix($_fap);
                     _loop:=DK.first();
                     {!
                     |? _loop
                     |!
                        _projekty:=
                           {? DK.PROJEKTY
::                         projekt z dokumentu magazynowego
                           || DK.PROJEKTY
::                         projekt z zamówienia
                           |? (5+DK.ZAM_RP)=(5+ZK_RP.name())
                           || _zk_p:=exec('FindAndGet','#table',ZK_RP,DK.ZAM_RP,,"ZK_RP.P",null());
                              exec('FindAndGet','#table',ZK_P,_zk_p,,"ZK_P.PROJEKTY",null())
                           || null()
                           ?};
                        {? _projekty
                        || _il:=DK.IL;
                           {? _il
                           || {? _Szablon.find_key($_fap,'N',$_projekty)
                              || _Szablon.PROCENT+=_il;
                                 _Szablon.put()
                              || _Szablon.blank();
                                 _Szablon.FAP:=$_fap;
                                 _Szablon.OGOLNY:='N';
                                 _Szablon.PROJEKTY:=$_projekty;
                                 _Szablon.PROCENT:=_il;
                                 _Szablon.add()
                              ?};
                              _sum_il+=_il
                           ?}
                        ?};
                        _loop:=DK.next()
                     !}
                  ?};
                  _loop:=__powdok.next()
               !};
::             przeliczenie ilości na procenty
               _procent:=0;
               _Szablon.cntx_psh();
               _Szablon.prefix($_fap,'N');
               _loop:=_Szablon.first();
               {? _loop
               ||
                  {!
                  |? _loop
                  |!
                     _Szablon.PROCENT:=(_Szablon.PROCENT/_sum_il*100)$2;
                     _procent+=_Szablon.PROCENT;
                     _Szablon.put();
                     _loop:=_Szablon.next()
                  !};
                  {? _procent<>100
                  || _Szablon.PROCENT+=100-_procent;
                     _Szablon.put()
                  ?}
               ?};
               _Szablon.cntx_pop()
            ?};
            _loop:=FAP.next()
         !}
      ?}
:: dokumenty zakupu
   || FAP.index('FAP');
      FAP.prefix(FAKS.ref());
      _loop:=FAP.first();
      {!
      |? _loop
      |!
         _fap:=FAP.ref();
         _sum_il:=0;
         FAP2DK.index('FAPDK');
         FAP2DK.prefix($FAP.ref());
         _loop:=FAP2DK.first();
         {!
         |? _loop
         |!
            _il:=FAP2DK.IL;
            {? FAP2DK.DK<>''
            || DK.use(8+FAP2DK.DK);
               DK.prefix();
               {? _il & DK.seek(FAP2DK.DK)
               ||
                  _projekty:=
                     {? DK.PROJEKTY
::                projekt z dokumentu magazynowego
                     || DK.PROJEKTY
::                projekt z zamówienia
                     |? (5+DK.ZAM_RP)=(5+ZD_RP.name())
                     || _zd_poz:=exec('FindAndGet','#table',ZD_RP,DK.ZAM_RP,,"ZD_RP.ZD_POZ",null());
                        exec('FindAndGet','#table',ZD_POZ,_zd_poz,,"ZD_POZ.PROJEKTY",null())
                     || null()
                     ?};
                  {? _projekty
                  || {? _Szablon.find_key($_fap,'N',$_projekty)
                     || _Szablon.PROCENT+=_il;
                        _Szablon.put()
                     || _Szablon.blank();
                        _Szablon.FAP:=$_fap;
                        _Szablon.OGOLNY:='N';
                        _Szablon.PROJEKTY:=$_projekty;
                        _Szablon.PROCENT:=_il;
                        _Szablon.add()
                     ?};
                     _sum_il+=_il
                  ?}
               ?}
             ?};
             _loop:=FAP2DK.next()
         !};
::       przeliczenie ilości na procenty
         {? _sum_il
         || _procent:=0;
            _Szablon.cntx_psh();
            _Szablon.prefix($_fap,'N');
            _loop:=_Szablon.first();
            {? _loop
            ||
               {!
               |? _loop
               |!
                  _Szablon.PROCENT:=(_Szablon.PROCENT/_sum_il*100)$2;
                  _procent+=_Szablon.PROCENT;
                  _Szablon.put();
                  _loop:=_Szablon.next()
               !};
               {? _procent<>100
               || _Szablon.PROCENT+=100-_procent;
                  _Szablon.put()
               ?}
            ?};
            _Szablon.cntx_pop()
         ?};
         _loop:=FAP.next()
      !}
   ?};
   FAP2DK.cntx_pop();
   DK.cntx_pop();
   ND.cntx_pop();
   FAP.cntx_pop();
   FAKS.cntx_pop()
?};
PROJ2FAP.cntx_pop();

{? ~_Szablon.first()
|| {? ~_quiet
   || FUN.info(
         {? _var.PROJREM='P'
         || 'Brak danych do rozliczenia projektu.'@
         || 'Brak danych do rozliczenia zgłoszenia.'@
         ?}
         +'\n'+
         {? _var.PROJREM='P'
         || 'Brak szablonu rozliczenia projektów lub danych w dokumentach powiązanych.'@
         || 'Brak szablonu rozliczenia zgłoszeń remontowych.'@
         ?}
      )
   ?};
   return()
|? ~_quiet & ~FUN.ask({? _var.PROJREM='P' || 'Rozliczyć projekty?'@ || 'Rozliczyć zgłoszenia remontowe?'@ ?})
|| return()
?};

exec('proj2fap_trig_on','projekty');
{? _Tab=FAKS
:: wszystkie pozycje
|| FAP.cntx_psh();
   {? FAKS.T().KOR='Z'
   || FAP.index('KZ');
      FAP.prefix($FAKS.ref())
   || FAP.index('FAP');
      FAP.prefix(FAKS.ref())
   ?};
   _loop:=FAP.first();
   {? ~_loop
   ||
      {? ~_quiet
      ||
         FUN.info('Dokument %1 nie ma pozycji.'@[FAKS.SYM])
      ?}
   ||
      {!
      |? _loop
      |!
         exec('proj2fap_rozlicz_one','projekty',_Szablon,_var.PROJREM);
         _loop:=FAP.next()
      !}
   ?};
   FAP.cntx_pop()
|? _Tab=FAP
:: jedna pozycja
|| exec('proj2fap_rozlicz_one','projekty',_Szablon,_var.PROJREM);
   PROJ2FAP.first()
?};
exec('proj2fap_trig_off','projekty')


\proj2fap_rozlicz_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Rozliczenie projektów wg szablonu bieżącej pozycji dokumentu
::   WE: _a - tabela z szablonem rozliczenia projektu
::       _b - 'P'rojekt / Zgłoszenie 'R'emontowe
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Szablon:=_a;
_proj_or_rem:=_b;

_Szablon.prefix('','T');
{? ~_Szablon.first()
:: brak szablonu ogólnego
|| _Szablon.prefix($FAP.ref(),'N');
   {? ~_Szablon.first()
:: brak szablonu dla pozycji ustalonego wg dokumentów powiązanych
   || return()
   ?}
?};

_il:=FAP.IL;
_war:=FAP.WN;
_dokl:=FAP.M().DOKL;
_doklw:=2;
_sum_il:=0;
_sum_war:=0;
_sum_proc:=0;

:: usunięcie starego rozliczenia
PROJ2FAP.cntx_psh();
PROJ2FAP.index('FAP');
PROJ2FAP.prefix('N',_proj_or_rem,FAP.ref());
_loop:=PROJ2FAP.first();
{!
|? _loop
|!
   _loop:=PROJ2FAP.del()
!};
:: nowe rozliczenie
_loop:=_Szablon.first();
{!
|? _loop
|!
   _projekty:=exec('FindAndGet','#table',PROJEKTY,_Szablon.PROJEKTY,,,null());
   _rem_zgl:=exec('FindAndGet','#table',REM_ZGL,_Szablon.REM_ZGL,,,null());
   _procent:=_Szablon.PROCENT;
   _sum_proc+=_procent;
   PROJ2FAP.blank();
   PROJ2FAP.FAKS:=FAP.FAKS;
   PROJ2FAP.FAKS_NR:=
      {? FAKS.T().KOR='Z'
      || exec('FindAndGet','#table',FAKS,FAP.FAKS,,"FAKS.NR",0)
      || FAKS.NR
      ?};
   PROJ2FAP.KZ:=exec('FindAndGet','#table',FAKS,FAP.FAKS,,"FAKS.KZ",'');
   PROJ2FAP.FAP:=FAP.ref();
   PROJ2FAP.FAP_POZ:=FAP.POZ;
   PROJ2FAP.FAP_M:=FAP.M;
   PROJ2FAP.WAL_N:=FAP.WAL_N;
   PROJ2FAP.SZABLON:='N';
   PROJ2FAP.PROJEKTY:=_projekty;
   PROJ2FAP.REM_ZGL:=_rem_zgl;
   PROJ2FAP.PROJREM:=_proj_or_rem;
   PROJ2FAP.IL:=(_procent/100*_il)$_dokl;
   _sum_il+=PROJ2FAP.IL;
   PROJ2FAP.W:=(_procent/100*_war)$2;
   _sum_war+=PROJ2FAP.W;
   PROJ2FAP.add();
   _loop:=_Szablon.next()
!};
{? _sum_proc=100 & (_il<>_sum_il | _war<>_sum_war)
|| PROJ2FAP.IL+=_il-_sum_il;
   PROJ2FAP.W:=_war-_sum_war;
   PROJ2FAP.put()
?};
PROJ2FAP.cntx_pop()


\projekty_win_ust
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Precyzja pól
::   WE:
::   WY:
::  OLD: \projekty_win_ust/!zws_par_kprr.fml
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY.fld_fml('PLANPRZ','EDIT_FORMAT',"'in_prec=2'");
PROJEKTY.fld_fml('PLANPRZ','DISPLAY_FORMAT',"'out_prec=2'");
PROJEKTY.fld_fml('PLANKOS','EDIT_FORMAT',"'in_prec=2'");
PROJEKTY.fld_fml('PLANKOS','DISPLAY_FORMAT',"'out_prec=2'")


\projdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: usuniecie rozliczen projektow
::   WE: _a - $FAKS.ref lub $PDM.ref
::  OLD: \projdel/skid_prm.fml
::----------------------------------------------------------------------------------------------------------------------
PROJ2FAP.cntx_psh();
{? 5+$_a='faktu'
|| PROJ2FAP.index('FAKS');
   PROJ2FAP.prefix('T','P',_a)
|| PROJ2FAP.index('FAP');
   PROJ2FAP.prefix('N','P',_a)
?};
{? PROJ2FAP.first() || {! |? PROJ2FAP.del() !} ?};
{? 5+$_a='faktu'
|| PROJ2FAP.index('FAKS');
   PROJ2FAP.prefix('T','R',_a)
|| PROJ2FAP.index('FAP');
   PROJ2FAP.prefix('N','R',_a)
?};
{? PROJ2FAP.first() || {! |? PROJ2FAP.del() !} ?};
PROJ2FAP.cntx_pop();
~~


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Ustawienie parametrów sesji w obszarze roboczym projektów
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_prj;

_size:=0;
_tab:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'B_DOMAIN','STRING[8]','Obszar'
);
{! _it:=1..obj_len(_env.tabs)
|! {? var_pres('_cfg')>100
   || obj_del(_cfg)
   ?};
   _cfg:=_env.tabs[_it];
   {? _cfg.B_DOMAIN<>''
   ||
      _tab.prefix(_cfg.B_DOMAIN);
      {? _tab.size()=0
      || _tab.blank();
         _tab.B_DOMAIN:=_cfg.B_DOMAIN;
         _tab.add()
      ?}
   ?};
   ~~
!};

_tab.clear();
_size:=_tab.size();
{? _size>0
||
   _domains:=obj_new(_size);

   _it:=1;
   {? _tab.first()
   || {!
      |? _domains[_it]:=_tab.B_DOMAIN;
         _it+=1;
         _tab.next()
      !}
   ?};
   __PARSES.editDom(_domains);
   AreaTitle.setTitle()
|| FUN.emsg('Brak uprawnień do redagowania parametrów pracy.'@)
?};
~~


\zk_p_all_wew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Akcja 'Wszystkie' w widoku ZK_P od strony projektów na zakładce zamówień wewnętrznych
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('zk_p_all','projekty','W',PROJEKTY.ref());
~~


\zk_p_all_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Akcja 'Wszystkie' w widoku ZK_P od strony projektów na zakładce zamówień sprzedaży
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('zk_p_all','projekty','Z',PROJEKTY.ref());
~~


\zk_p_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Akcja 'Wszystkie' w widokach ZK_P od strony projektów
::   WE: _a - STRING - rodzaj zamówienia 'W' - wewnętrzne, 'S' - sprzedaży
::       [_b] - PROJEKTY.ref() - projekt lub bieżący rekord
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_rodz:=_a;

_ref:=null();
{? var_pres('_b')=type_of(PROJEKTY.ref())
|| _ref:=_b
?};

_result:=0;
_can_continue:=1;

ZK_P.cntx_psh();
ZK_N.cntx_psh();
PROJEKTY.cntx_psh();
{? _ref<>null()
|| PROJEKTY.prefix();
   {? PROJEKTY.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   _tab:=sql('select'
      ' TYPYZAM.T as TYP'
      ',ZK_N.SYM as ZAM'
      ',ZK_P.N as ZK_N'
      ',ZK_P.REFERENCE as ZK_P'
      ',ZK_P.POZ'
      ',M.KTM'
      ',M.N'
      ',M.DOKL'
      ',JM.KOD as JM'
      ',ZK_P.RODZ'
      ',ZK_P.ILZ'
      ',ZK_P.REZ'
      ',ZK_P.ILRB'
      ',ZK_P.ILRD'
      ',ZK_P.ILRW'
      ',ZK_P.ILP'
      ',ZK_P.CENA'
      ',ZK_P.NET'
      ',ZK_P.BRT'
      ',case when SUBSTR((SUBSTR(ZK_P.REFERENCE,0,8)),7,8)=\'__\' THEN \'N\' ELSE \'T\' END as ARCH'
      ' from @ZK_P'
      ' join @ZK_N using(ZK_P.N,ZK_N.REFERENCE)'
      ' join TYPYZAM using(ZK_N.T,TYPYZAM.REFERENCE)'
      ' left join M using(ZK_P.M,M.REFERENCE)'
      ' left join JM using(ZK_P.JM,JM.REFERENCE)'
      ' where ZK_P.PROJEKTY=:_a and ZK_P.RODZ=\':_b\''
      ' order by TYP,ZAM,POZ'
      ,PROJEKTY.ref(),_rodz
   );
   _title:='';
   {? _rodz='W'
   || _title:='Wszystkie zamówienia wewnętrzne dla projektu: %1'@[PROJEKTY.SYM]
   |? _rodz='Z'
   || _title:='Wszystkie zamówienia sprzedaży dla projektu: %1'@[PROJEKTY.SYM]
   ?};
   _wer:=_tab.mk_sel(_title,,0,'#zkp_projekty',,,,,'U');
   _tab.win_fld(_wer,,'ARCH',,,10,,,'Archiwum?'@,,,2,,"\'T\'","\'N\'");
   _tab.win_fld(_wer,,'TYP',,,10,,,'Typ'@);
   _tab.win_fld(_wer,,'ZAM',,,30,,,'Zamówienie'@);
   _tab.win_fld(_wer,,'POZ',,,4,,,'Pozycja'@);
   _tab.win_fld(_wer,,'KTM',,,20,,,'Indeks'@);
   _tab.win_fld(_wer,,'N',,,30,,,'Nazwa'@);
   _tab.win_fld(_wer,,'JM',,,5,,,'jm'@);
   _tab.win_fld(_wer,,'ILZ',,,10,,,'Zamówiono'@);
   _tab.win_fld(_wer,,'REZ',,,10,,,'Zarezerwowano'@,,,2,,"1","0");
   _tab.win_fld(_wer,,'ILRB',,,10,,,'Rezerwacja'@);
   _tab.win_fld(_wer,,'ILRD',,,10,,,'Wg dostaw'@);
   _tab.win_fld(_wer,,'ILRW',,,10,,,'Warunkowa'@);
   _tab.win_fld(_wer,,'ILP',,,10,,,'Pozostało'@);
   {? _rodz='Z'
   || _tab.win_fld(_wer,,'CENA',,,10,,,'Cena'@);
      _tab.win_fld(_wer,,'NET',,,10,,,'Pozostało netto'@);
      _tab.win_fld(_wer,,'BRT',,,10,,,'Pozostało brutto'@)
   ?};

:: Dokładność dla pól
   _tab.fld_fml('ILZ','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('ILZ','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('ILP','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('ILP','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('ILRB','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('ILRB','DISPLAY_FORMAT',"{? cur_tab(1,1).ILRB<=0 || 'empty=1' || 'empty=0' ?}+
                ',out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('ILRW','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('ILRW','DISPLAY_FORMAT',"{? cur_tab(1,1).ILRW<=0 || 'empty=1' || 'empty=0' ?}+
                ',out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('ILRD','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('ILRD','DISPLAY_FORMAT',"{? cur_tab(1,1).ILRD<=0 || 'empty=1' || 'empty=0' ?}+
                ',out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('CENA','EDIT_FORMAT',"'in_prec='+{? cur_tab(1,1).RODZ='Z'
                                                 || {? (2+cur_kwin())='e_'
                                                    || $cur_tab(1,1).DOKL_S
                                                    || $ST.DOKL_S
                                                    ?}
                                                 || '2'
                                                 ?}");
   _tab.fld_fml('CENA','DISPLAY_FORMAT',"'out_prec='+{? cur_tab(1,1).RODZ='Z'
                                                     || {? (2+cur_kwin())='e_'
                                                        || $cur_tab(1,1).DOKL_S
                                                        || $ST.DOKL_S
                                                        ?}
                                                     || '2'
                                                     ?}");
:: Ikonki
   _formikon:="{? cur_tab(1,1).ILRB>0
               || 'xwin16.png:61'
               || ''
               ?}";
   _tab.win_fml(_wer,,'ILRB',,'ICON_BEFORE',_formikon);
   _formikon:="{? cur_tab(1,1).ILRD>0
               || 'xwin16.png:16'
               || ''
               ?}";
   _tab.win_fml(_wer,,'ILRD',,'ICON_BEFORE',_formikon);
   _formikon:="{? cur_tab(1,1).ILRW>0
              || {? exec('czyRezZlzam','zamsiw_wspolne',ZK_P.ref())
                 || 'xwin16.png:92'
                 || 'xwin16.png:83'
                 ?}
              || ''
              ?}";
   _tab.win_fml(_wer,,'ILRW',,'ICON_BEFORE',_formikon);

:: Akcje
   _tab.win_act(_wer,,'Kolejność');
   _tab.win_act(_wer,,'Formuła','Legenda'@@,,,"exec('legenda','color','@ZKP#01')");

   _fml:="
      _result:=~~;
      ZK_N.use(ref_name(cur_tab(1,1).ZK_N));
      ZK_P.use(ref_name(cur_tab(1,1).ZK_P));
      ZK_N.prefix();
      ZK_P.prefix();
      {? ZK_N.seek(cur_tab(1,1).ZK_N) & ZK_P.seek(cur_tab(1,1).ZK_P)
      || _result:=exec('rek_pozy','zamsiw_poz')
      ?};
      _result
   ";
   _tab.win_act(_wer,,'Rekord',,,,_fml);

   _tab.win_act(_wer,,'Wyświetl',,,,"exec('wys_pozy','zamsiw_poz',1)");

:: Selekcja
   _tab.win_sel(_wer);
   _tab.select()
?};
PROJEKTY.cntx_pop();
ZK_P.cntx_pop();
ZK_N.cntx_pop();
~~


\zd_poz_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Akcja 'Wszystkie' w widoku ZD_POZ od strony projektów na zakładce zamówień dostaw
::   WE: [_a] - PROJEKTY.ref() - projekt lub bieżący rekord
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
{? var_pres('_a')=type_of(PROJEKTY.ref())
|| _ref:=_a
?};

_result:=0;
_can_continue:=1;

ZD_POZ.cntx_psh();
ZD_NAG.cntx_psh();
PROJEKTY.cntx_psh();
{? _ref<>null()
|| PROJEKTY.prefix();
   {? PROJEKTY.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   _tab:=sql('select'
      ' TYPYZAM.T as TYP'
      ',ZD_NAG.SYM as ZAM'
      ',ZD_POZ.ZD_NAG as ZD_NAG'
      ',ZD_POZ.REFERENCE as ZD_POZ'
      ',ZD_POZ.POZ'
      ',M.KTM'
      ',M.N'
      ',M.DOKL'
      ',JM.KOD as JM'
      ',ZD_POZ.IL'
      ',ZD_POZ.IL_ZRE'
      ',ZD_POZ.IL_POZ'
      ',ZD_POZ.WAR'
      ',\''+INFO.NAROD().KOD+'\' as WALUTA'
      ',case when SUBSTR((SUBSTR(ZD_POZ.REFERENCE,0,8)),7,8)=\'__\' THEN \'N\' ELSE \'T\' END as ARCH'
      ' from @ZD_POZ'
      ' join @ZD_NAG using(ZD_POZ.ZD_NAG,ZD_NAG.REFERENCE)'
      ' join TYPYZAM using(ZD_NAG.T,TYPYZAM.REFERENCE)'
      ' left join M using(ZD_POZ.M,M.REFERENCE)'
      ' left join JM using(ZD_POZ.JM,JM.REFERENCE)'
      ' where ZD_POZ.PROJEKTY=:_a'
      ' order by TYP,ZAM,POZ'
      ,PROJEKTY.ref()
   );
   _title:='Wszystkie zamówienia dostaw dla projektu: %1'@[PROJEKTY.SYM];
   _wer:=_tab.mk_sel(_title,,0,'#zdpoz_projekty',,,,,'U');
   _tab.win_fld(_wer,,'ARCH',,,10,,,'Archiwum?'@,,,2,,"\'T\'","\'N\'");
   _tab.win_fld(_wer,,'TYP',,,10,,,'Typ'@);
   _tab.win_fld(_wer,,'ZAM',,,30,,,'Zamówienie'@);
   _tab.win_fld(_wer,,'POZ',,,4,,,'Pozycja'@);
   _tab.win_fld(_wer,,'KTM',,,20,,,'Indeks'@);
   _tab.win_fld(_wer,,'IL',,,10,,,'Ilość zamawiana'@);
   _tab.win_fld(_wer,,'IL_ZRE',,,10,,,'Zrealizowana'@);
   _tab.win_fld(_wer,,'IL_POZ',,,10,,,'Pozostała'@);
   _tab.win_fld(_wer,,'JM',,,5,,,'jm'@);
   _tab.win_fld(_wer,,'WAR',,,10,,,'Wartość zamówienia'@);
   _tab.win_fld(_wer,,'WALUTA',,,10,,,'Waluta'@);

:: Dokładność dla pól
   _tab.fld_fml('IL','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('IL','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('IL_ZRE','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('IL_ZRE','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('IL_POZ','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('IL_POZ','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");

:: Akcje
   _tab.win_act(_wer,,'Kolejność');
   _tab.win_act(_wer,,'Formuła','Legenda'@@,,,"exec('legenda','color','@ZDP#01')");

   _fml:="
      _result:=~~;
      ZD_NAG.use(ref_name(cur_tab(1,1).ZD_NAG));
      ZD_POZ.use(ref_name(cur_tab(1,1).ZD_POZ));
      ZD_NAG.prefix();
      ZD_POZ.prefix();
      {? ZD_NAG.seek(cur_tab(1,1).ZD_NAG) & ZD_POZ.seek(cur_tab(1,1).ZD_POZ)
      || _result:=exec('zdpo_rec','zamdst_poz')
      ?};
      _result
   ";
   _tab.win_act(_wer,,'Rekord',,,,_fml);

   _tab.win_act(_wer,,'Wyświetl',,,,"exec('zdpo_wys','zamdst_poz',1)");

:: Selekcja
   _tab.win_sel(_wer);
   _tab.select()
?};
PROJEKTY.cntx_pop();
ZD_POZ.cntx_pop();
ZD_NAG.cntx_pop();
~~


\proj2fap_all_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Akcja wszystkie w widoku dokumentów sprzedaży na zakładkach od strony projektów
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('proj2fap_all','projekty','S','P');
~~


\proj2fap_all_zak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Akcja wszystkie w widoku dokumentów zakupu na zakładkach od strony projektów
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('proj2fap_all','projekty','Z','P');
~~


\proj2fap_allr_zak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Akcja wszystkie w widoku dokumentów zakupu na zakładkach od strony zgłoszeń remontowych
::----------------------------------------------------------------------------------------------------------------------
exec('proj2fap_all','projekty','Z','R');
~~


\proj2fap_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Akcja wszystkie w widoku dokumentów sprzedaży i zakupu od strony projektów/zgłoszeń remontowych
::   WE: _a - STRING - rodzaj dokumentów 'S' - sprzedaż, 'Z' - zakup
::       _b - STRING - 'P'rojekt / Zgłoszenie 'R'emontowe
::       [_c] - PROJEKTY.ref() - wskazanie na projekt (ważne, gdy _b='P')
::       [_d] - REM_ZGL.ref() - wskazanie na zgłoszenie remontowe (ważne, gdy _b='R')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_rodzaj:=_a;
_proj_or_rem:=_b;
_projekty:=null();
{? _proj_or_rem='P' & var_pres('_c')=type_of(PROJEKTY.ref())
|| _projekty:=_c
?};
_rem_zgl:=null();
{? _proj_or_rem='R' & var_pres('_d')=type_of(REM_ZGL.ref())
|| _rem_zgl:=_d
?};

_result:=0;
_can_continue:=1;

FAKS.cntx_psh();
FAP.cntx_psh();
PROJEKTY.cntx_psh();
REM_ZGL.cntx_psh();

{? _projekty<>null()
|| PROJEKTY.prefix();
   {? PROJEKTY.seek(_projekty)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _rem_zgl<>null()
|| REM_ZGL.prefix();
   {? REM_ZGL.seek(_rem_zgl)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   _tab:=sql('select'
      ' TYPYSP.T as TYP'
      ',FAKS.SYM'
      ',FAKS.DW'
      ',PROJ2FAP.FAKS_NR as NR'
      ',FAP.FAKS as FAKS'
      ',FAP.REFERENCE as FAP'
      ',PROJ2FAP.FAP_POZ as POZ'
      ',M.KTM'
      ',M.N'
      ',M.DOKL'
      ',JM.KOD as JM'
      ',PROJ2FAP.IL'
      ',PROJ2FAP.W'
      ' from @PROJ2FAP'
      ' join @FAKS using(PROJ2FAP.FAKS,FAKS.REFERENCE)'
      ' join @FAP  using(PROJ2FAP.FAP,FAP.REFERENCE)'
      ' join TYPYSP using(FAKS.T,TYPYSP.REFERENCE)'
      ' left join M using(PROJ2FAP.FAP_M,M.REFERENCE)'
      ' left join JM using(FAP.JM,JM.REFERENCE)'
      ' where'
      '     (PROJ2FAP.PROJEKTY=:_c or PROJ2FAP.REM_ZGL=:_d)'
      '     and FAKS.SZ=\':_a\''
      '     and PROJ2FAP.PROJREM=\':_b\''
      ' order by TYP,SYM,POZ'
      ,_rodzaj,_proj_or_rem,PROJEKTY.ref(),REM_ZGL.ref()
   );
   _title:='';
   {? _rodzaj='S' & _proj_or_rem='P'
   || _title:='Wszystkie dokumenty sprzedaży dla projektu: %1'@[PROJEKTY.SYM]
   |? _rodzaj='Z' & _proj_or_rem='P'
   || _title:='Wszystkie dokumenty zakupu dla projektu: %1'@[PROJEKTY.SYM]
   |? _rodzaj='Z' & _proj_or_rem='R'
   || _title:='Wszystkie dokumenty zakupu dla zgłoszenia: %1'@[REM_ZGL.SYM]
   ?};
   _wer:=_tab.mk_sel(_title,,0,'#proj2fap_all',,,,,'U');
   _tab.win_fld(_wer,,'TYP',,,10,,,'Typ'@);
   _tab.win_fld(_wer,,'SYM',,,30,,,'Dokument'@);
   _tab.win_fld(_wer,,'NR',,,4,,,'Numer'@);
   _tab.win_fld(_wer,,'POZ',,,4,,,'Pozycja'@);
   _tab.win_fld(_wer,,'DW',,,10,,,'Data'@);
   _tab.win_fld(_wer,,'KTM',,,20,,,'Indeks'@);
   _tab.win_fld(_wer,,'N',,,20,,,'Nazwa'@);
   _tab.win_fld(_wer,,'IL',,,-15,,,'Ilość'@);
   _tab.win_fld(_wer,,'W',,,-15,,,'Wartość netto'@);

:: Dokładność dla pól
   _tab.fld_fml('IL','EDIT_FORMAT',"'in_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");
   _tab.fld_fml('IL','DISPLAY_FORMAT',"'out_prec='+{? (2+cur_kwin())='e_' || $cur_tab(1,1).DOKL || $ST.DOKL ?}");

:: Akcje
   _tab.win_act(_wer,,'Kolejność');
   _fml:="
      _result:=~~;
      FAKS.use(ref_name(cur_tab(1,1).FAKS));
      FAP.use(ref_name(cur_tab(1,1).FAP));
      FAKS.prefix();
      FAP.prefix();
      FAKS.seek(cur_tab(1,1).FAKS);
      FAP.seek(cur_tab(1,1).FAP);
      _result
   ";
   _tab.win_act(_wer,,'Rekord',,,,_fml);

   _tab.win_act(_wer,,'Wyświetl',,,,"params_exec('disp_fap','faktury_poz')");

:: Selekcja
   _tab.win_sel(_wer);
   _tab.select()
?};
REM_ZGL.cntx_pop();
PROJEKTY.cntx_pop();
FAKS.cntx_pop();
FAP.cntx_pop();
~~


\proj2fap_berec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Akcja rekord przed w oknach wertowania PROJ2FAP
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
PROJ2FAP.FAKS().T();
PROJ2FAP.FAP();
~~


\proj2fap_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Akcja wyświetl w oknach wertowania PROJ2FAP
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
params_exec('disp_fap','faktury_poz');
~~


\projwgfap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Dodanie rozliczenia projektu wg FAP.ref()
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FAP.PROJEKTY
||
   FAKS.cntx_psh();
   PROJ2FAP.cntx_psh();
   PROJ2FAP.prefix();
   PROJ2FAP.blank();
   PROJ2FAP.FAKS:=FAP.FAKS;
   PROJ2FAP.FAKS_NR:=FAP.FAKS().NR;
   PROJ2FAP.KZ:=$FAKSZKZN.REF;
   PROJ2FAP.FAP:=FAP.ref();
   PROJ2FAP.FAP_POZ:=FAP.POZ;
   PROJ2FAP.FAP_M:=FAP.M;
   PROJ2FAP.WAL_N:=FAP.WAL_N;
   PROJ2FAP.SZABLON:='N';
   PROJ2FAP.PROCENT:=100;
   PROJ2FAP.IL:=FAP.IL;
   PROJ2FAP.W:=FAP.WN;
   PROJ2FAP.PROJEKTY:=FAP.PROJEKTY;
   PROJ2FAP.add();
   PROJ2FAP.cntx_pop();
   FAKS.cntx_pop()
?};
~~


\wszystkie_godziny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.28]
:: OPIS: Wyświetlenie wszystkich godzin pracy powiązanych z projektem
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:=sql(
   'select cast(substr(G.REFERENCE,5,4) as INTEGER_TYPE) as ROK, G.M, G.D, R.RN, R.RT, G.G, G.WAR, KK.SYM, KK.NAZWA '
   'from @G join R using (G.K, R.REFERENCE) left join KK using (G.KK, KK.REFERENCE) '
   'where G.FIRMA=:_a and G.PROJEKTY=:_b and (G.R=\'G\' or G.R=\'A\')'
   'order by 3,4,1,2',
   exec('ref_firma','ustawienia'),ZAKR.PROJEKTY
);

PROJZ.fld_fml(
   'SUM_ZGD',
   'BEFORE_DISPLAY',
   "  _TAB:=params_get().TAB;
      PROJZ.SUM_ZGD:=PROJZ.SUM_ZKG:=0;
      _zgd:=_ogd:=_zkg:=_okg:=\"\'empty=1\'\";

      {? _TAB.sel_size()
      || _POM:=sql(
            'select sum(:_a.G) as SUM_ZGD, sum(:_a.WAR) as SUM_ZKG '+
            'from :_a '+
            'where reference_num(:_a.REFERENCE) in (select :_b.REF from :_b)',
            _TAB,_TAB.sel_aget()
         );
         PROJZ.SUM_ZGD:=_POM.SUM_ZGD;
         PROJZ.SUM_ZKG:=_POM.SUM_ZKG;
         _zgd:=_zkg:=\"\'empty=0\'\"
      |? _TAB.f_active()
      || PROJZ.SUM_OGD:=PROJZ.SUM_OKG:=0;
         {? _TAB.f_first()
         || {!
            |? PROJZ.SUM_OGD+=_TAB.G;
               PROJZ.SUM_OKG+=_TAB.WAR;
               _TAB.f_next()
            !}
         ?}
      || PROJZ.SUM_OGD:=PROJZ.SUM_OKG:=0;
         {? _TAB.first()
         || {!
            |? PROJZ.SUM_OGD+=_TAB.G;
               PROJZ.SUM_OKG+=_TAB.WAR;
               _TAB.next()
            !}
         ?}
      ?};
      {? ~exec('dom_empty','#table',_TAB)
      || _ogd:=_okg:=\"\'empty=0\'\"
      ?};
      PROJZ.fld_fml('SUM_ZGD','DISPLAY_FORMAT',_zgd);
      PROJZ.fld_fml('SUM_OGD','DISPLAY_FORMAT',_ogd);
      PROJZ.fld_fml('SUM_ZKG','DISPLAY_FORMAT',_zkg);
      PROJZ.fld_fml('SUM_OKG','DISPLAY_FORMAT',_okg);
      1
   "
);

_ws:=_TAB.mk_sel('%1 %2'['Godziny pracy zarejestrowane do projektu:'@,ZAKR.PROJEKTY().SYM],,,'allhourspro',1,1,25,,'U');
_TAB.win_fld(_ws,,'D',,,11,,1,'Data'@,,'Data zarejestrowanych godzin'@);
_TAB.win_fld(_ws,,'ROK',,,5,,1,'Rok'@,,'Rok rozliczenia godzin'@);
_TAB.win_fld(_ws,,'M',,,8,,1,'Miesiąc'@,,'Miesiąc rozliczenia godzin'@);
_TAB.win_fld(_ws,,'RN',,,5,,1,'Kod'@,,'Kod zarejestrowanych godzin'@);
_TAB.win_fld(_ws,,'RT',,,25,,1,'Nazwa'@,,'Opis zarejestrowanych godzin'@);
_TAB.win_fld(_ws,,'G',,,12,2,1,'Liczba godzin'@,,'Liczba zarejestrowanych godzin'@);
_TAB.win_fld(_ws,,'WAR',,,12,2,1,'Wartość'@,,'Wynagrodzenie za zarejestrowane godziny'@);
_TAB.win_fld(_ws,,'SYM',,,25,,1,'Konto kosztów'@,,'Konto kosztów zarejestrowanych godzin'@);
_TAB.win_fld(_ws,,'NAZWA',,,25,,1,'Opis konta kosztów'@,,'Opis konta kosztów zarejestrowanych godzin'@);
_TAB.win_sfld(_ws,,'G',,PROJZ,'SUM_ZGD',,2,'Suma zaznaczonych',,'Suma zaznaczonych godzin'@);
_TAB.win_sfld(_ws,,'G',,PROJZ,'SUM_OGD',,2,'Suma w oknie',,'Suma godzin w oknie'@,1);
_TAB.win_sfld(_ws,,'WAR',,PROJZ,'SUM_ZKG',,2,,1,'Kwota zaznaczonych godzin'@);
_TAB.win_sfld(_ws,,'WAR',,PROJZ,'SUM_OKG',,2,,1,'Kwota godzin w oknie'@,1);
_TAB.win_act(_ws,,'Szukaj');
_TAB.win_act(_ws,,'Kolejność');
_TAB.win_sel(_ws);
params_set('TAB',_TAB);
_TAB.select();
PROJZ.fld_fml('SUM_ZGD','BEFORE_DISPLAY',"*");
~~


\wszystkie_cechy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.28]
:: OPIS: Wyświetlenie wszystkich kosztów wynagrodzeń powiązanych z projektem
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:=sql(
   'select '
      'cast(\'20\' || substr(ATRUSE_L.REFERENCE,5,2) as INTEGER_TYPE) as ROK, '
      'cast(substr(ATRUSE_L.REFERENCE,7,2) as INTEGER_TYPE) as MC, '
      'R.RN, R.RT, ATRUSE_L.WARR, ATRUSE_L.KON, ATRUSE_L.OP '
   'from @ATRUSE_L join R using (ATRUSE_L.R, R.REFERENCE) '
   'where ATRUSE_L.PROJEKTY=:_a '
   'order by 1,2,3',
   ZAKR.PROJEKTY
);

PROJZ.fld_fml(
   'SUM_ZKW',
   'BEFORE_DISPLAY',
   "  _TAB:=params_get().TAB;
      PROJZ.SUM_ZKW:=0;
      _zkw:=_okw:=\"\'empty=1\'\";

      {? _TAB.sel_size()
      || PROJZ.SUM_ZKW:=sql(
            'select sum(:_a.WARR) as SUM_ZKW '+
            'from :_a '+
            'where reference_num(:_a.REFERENCE) in (select :_b.REF from :_b)',
            _TAB,_TAB.sel_aget()
         ).SUM_ZKW;
         _zkw:=\"\'empty=0\'\"
      |? _TAB.f_active()
      || PROJZ.SUM_OKW:=0;
         {? _TAB.f_first()
         || {!
            |? PROJZ.SUM_OKW+=_TAB.WARR;
               _TAB.f_next()
            !}
         ?}
      || PROJZ.SUM_OKW:=0;
         {? _TAB.first()
         || {!
            |? PROJZ.SUM_OKW+=_TAB.WARR;
               _TAB.next()
            !}
         ?}
      ?};
      {? ~exec('dom_empty','#table',_TAB)
      || _okw:=\"\'empty=0\'\"
      ?};
      PROJZ.fld_fml('SUM_ZKW','DISPLAY_FORMAT',_zkw);
      PROJZ.fld_fml('SUM_OKW','DISPLAY_FORMAT',_okw);
      1
   "
);

_ws:=_TAB.mk_sel('%1 %2'['Koszty pracy zarejestrowane do projektu:'@,ZAKR.PROJEKTY().SYM],,,'allcostproj',1,1,25,,'U');
_TAB.win_fld(_ws,,'ROK',,,5,,1,'Rok'@,,'Rok rozliczenia składnika płacowego'@);
_TAB.win_fld(_ws,,'MC',,,8,,1,'Miesiąc'@,,'Miesiąc rozliczenia składnika płacowego'@);
_TAB.win_fld(_ws,,'RN',,,5,,1,'Kod'@,,'Kod składnika płacowego'@);
_TAB.win_fld(_ws,,'RT',,,25,,1,'Nazwa'@,,'Opis składnika płacowego'@);
_TAB.win_fld(_ws,,'WARR',,,12,2,1,'Wartość'@,,'Wartość składnika płacowego'@);
_TAB.win_fld(_ws,,'KON',,,25,,1,'Konto kosztów'@,,'Konto kosztów składnika płacowego'@);
_TAB.win_fld(_ws,,'OP',,,25,,1,'Opis'@,,'Opis pozycji dokumentu'@);
_TAB.win_sfld(_ws,,'WARR',,PROJZ,'SUM_ZKW',,2,'Suma zaznaczonych'@,,'Suma zaznaczonych kosztów'@);
_TAB.win_sfld(_ws,,'WARR',,PROJZ,'SUM_OKW',,2,'Suma w oknie'@,,'Suma kosztów w oknie'@,1);
_TAB.win_act(_ws,,'Szukaj');
_TAB.win_act(_ws,,'Kolejność');
_TAB.win_sel(_ws);
params_set('TAB',_TAB);
_TAB.select();
PROJZ.fld_fml('SUM_ZKW','BEFORE_DISPLAY',"*");
~~


\proj2fap_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: Aktualizuje PROJ2FAP po zmianie wartości pozycji dokumentu zakupu / sprzedażu
::  OLD: \proj2fap_akt/skid_prm.fml
::----------------------------------------------------------------------------------------------------------------------
PROJ2FAP.cntx_psh();
PROJ2FAP.index('FAP'); PROJ2FAP.prefix('N','P',FAP.ref());
{? PROJ2FAP.first()
|| {!
   |? PROJ2FAP.W:={? FAP.IL || (PROJ2FAP.IL*(FAP.WN/FAP.IL))$2 ?};
      PROJ2FAP.put() & PROJ2FAP.next()
   !}
?};
PROJ2FAP.cntx_pop()


\projz_bd_sum_zgd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.28]
:: OPIS: Przed wyświetleniem pierwszego pola wiersza podsumowania wybranych wierszy tabeli G.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PROJZ.SUM_ZGD:=PROJZ.SUM_ZKG:=0;
_zgd:=_zkg:=_ogd:=_okg:="'empty=1'";
_mc:=date()~2;
{? SSTALE.AOKRO
|| _mc:=OKRO.NR_OKR
|| _ref:=__PARSES.getVal('ListaPłac').REF;
   {? _ref & O.seek(_ref,,1) || _mc:=O.M ?}
?};

{? G.sel_size()
|| _TAB:=sql(
      'select sum(G.G) as SUM_ZGD, sum(G.WAR) as SUM_ZKG '+
      'from G '+
      'where G.PROJEKTY=:_a and reference_num(G.REFERENCE) in (select :_b.REF from :_b)',
      ZAKR.PROJEKTY,
      G.sel_aget()
   );
   PROJZ.SUM_ZGD:=_TAB.SUM_ZGD;
   PROJZ.SUM_ZKG:=_TAB.SUM_ZKG;
   _zgd:=_zkg:="'empty=0'"
|? G.f_active()
|| PROJZ.SUM_OGD:=PROJZ.SUM_OKG:=0;
   _ref:=G.ref();
   G.f_each("PROJZ.SUM_OGD+=G.G; PROJZ.SUM_OKG+=G.WAR",0);
   G.f_seek(_ref)
|| PROJZ.SUM_OGD:=PROJZ.SUM_OKG:=0;
   G.cntx_psh();
   G.index('PROJEKTY');
   G.prefix(exec('ref_firma','ustawienia'),ZAKR.PROJEKTY,'G',_mc);
   {? G.first()
   || {!
      |? PROJZ.SUM_OGD+=G.G;
         PROJZ.SUM_OKG+=G.WAR;
         G.next()
      !}
   ?};
   G.cntx_pop()
?};
{? ~exec('dom_empty','#table',G)
|| _ogd:=_okg:="'empty=0'"
?};
PROJZ.fld_fml('SUM_ZGD','DISPLAY_FORMAT',_zgd);
PROJZ.fld_fml('SUM_OGD','DISPLAY_FORMAT',_ogd);
PROJZ.fld_fml('SUM_ZKG','DISPLAY_FORMAT',_zkg);
PROJZ.fld_fml('SUM_OKG','DISPLAY_FORMAT',_okg);
1


\projz_bd_sum_zkw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.28]
:: OPIS: Przed wyświetleniem pierwszego pola wiersza podsumowania wybranych wierszy tabeli ATRUSE_L.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PROJZ.SUM_ZKW:=0;
_zkw:=_okw:="'empty=1'";

{? ATRUSE_L.sel_size()
|| PROJZ.SUM_ZKW:=sql(
      'select sum(ATRUSE_L.WARR) as SUM_ZKW '+
      'from ATRUSE_L '+
      'where ATRUSE_L.PROJEKTY=:_a and reference_num(ATRUSE_L.REFERENCE) in (select :_b.REF from :_b)',
      ZAKR.PROJEKTY,
      ATRUSE_L.sel_aget()
   ).SUM_ZKW;
   _zkw:="'empty=0'"
|? ATRUSE_L.f_active()
|| PROJZ.SUM_OKW:=0;
   ATRUSE_L.cntx_psh();
   _ref:=ATRUSE_L.ref();
   ATRUSE_L.f_each("PROJZ.SUM_OKW+=ATRUSE_L.WARR",0);
   ATRUSE_L.f_seek(_ref);
   ATRUSE_L.cntx_pop()
|| PROJZ.SUM_OKW:=0;
   ATRUSE_L.cntx_psh();
   ATRUSE_L.index('PROJEKTY');
   ATRUSE_L.prefix(ZAKR.PROJEKTY);
   {? ATRUSE_L.first()
   || {!
      |? PROJZ.SUM_OKW+=ATRUSE_L.WARR;
         ATRUSE_L.next()
      !}
   ?};
   ATRUSE_L.cntx_pop()
?};
{? ~exec('dom_empty','#table',ATRUSE_L)
|| _okw:="'empty=0'"
?};
PROJZ.fld_fml('SUM_ZKW','DISPLAY_FORMAT',_zkw);
PROJZ.fld_fml('SUM_OKW','DISPLAY_FORMAT',_okw);
1


\bl_udt_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.14]
:: OPIS: Wartość początkowa UDT.ID_KSG
::----------------------------------------------------------------------------------------------------------------------
UDT.cntx_psh();
UDT.index('ID_KSG'); UDT.prefix();
_id:={? UDT.last() || UDT.ID_KSG+1 || 1 ?};
UDT.cntx_pop();
_id


\projekty_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Inicjowanie exportu Projketów i Kosztów projketów
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY.cntx_psh();
PR_KOS.cntx_psh();PR_KOS.index('PR_KOS_P');
_fun:=obj_new(1);
_fun[1]:='PROJEKTY';
VAR_DEL.delete('__PRJ_SEL');
:: zmienna do sprawdzenia które projkety eksportować
__PRJ_SEL:=1;
exec('export_init','#excel_imex',_fun,1,'PROJEKTY');
VAR_DEL.delete('__PRJ_SEL');
PROJEKTY.cntx_pop();
PR_KOS.cntx_pop();
0

\projekty_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Inicjowanie importu Projketów i Kosztów projketów
::----------------------------------------------------------------------------------------------------------------------
_zakl:='';
_mask:='';
_tab:=cur_tab(1,1);
_tab.sel_adel();

PROJEKTY.cntx_psh();
PR_KOS.cntx_psh();

_fun:=obj_new(1);
_fun[1]:='PROJEKTY';
exec('import_init','#excel_imex',_fun,,0,,,1);
PROJEKTY.cntx_pop();
PR_KOS.cntx_pop();
~~


\projekty_import_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Inicjowanie importu Projketów i Kosztów projketów
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY.cntx_psh();
::Zmienna do sztucznego przypisywania rodzica zamiast uidrefa
VAR_DEL.delete('__RODZIC','__RESULT');
__RODZIC:=0;
__RESULT:=1;
~~

\projekty_export_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Inicjowanie importu Projketów i Kosztów projketów
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY.cntx_psh();
::przypisanie zaznaczonych rekordów
exec('exp_tab_sel','projekty',_a.excel.TAB_SEL, _a.excel.TAB_HEAD);
~~

\exp_tab_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Inicjowanie importu Projketów i Kosztów projketów
:: _a - TAB_SEL
:: _b - TAB_HEAD
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY.cntx_psh();
PROJEKTY.prefix();
_tab:=PROJEKTY.sel_aget();
PROJEKTY.sel_adel();
{? PROJEKTY.f_active() || PROJEKTY.f_clear() ?};

{? _a.size()=0 & __PRJ_SEL
|| {? _tab.first()
   ||
      {!|?
         {? PROJEKTY.seek(_tab.REF)
         ||
            _rodzic:=PROJEKTY.RODZIC;
            PROJEKTY.index('KOL');
            PROJEKTY.prefix(REF.FIRMA,_rodzic,);
            {? PROJEKTY.first()
            ||
               {? _=2
               ||
                  _b.first();
                  {!|?
                     _a.blank();
                     _a.REF:=$PROJEKTY.ref();
                     _a.ID:=_b.ID;
                     _a.add(1);
                     PROJEKTY.next()
                 !};
                 _b.HAS_SEL:='T';
                 _b.put()
              |? _=1
              ||
                 {!|?
                     _a.blank();
                     _a.REF:=$PROJEKTY.ref();
                     _a.add(1);
                     PROJEKTY.next()
                 !}
              ?}
            ?};
            PROJEKTY.prefix()
         ?};
         _tab.next()
      !}
   ||
      _rodzic:=PROJEKTY.RODZIC;
      PROJEKTY.index('KOL');
      PROJEKTY.prefix(REF.FIRMA,_rodzic,);
      {? PROJEKTY.first()
      ||
         {? _=2
         ||
            _b.first();
            {!|?
               _a.blank();
               _a.REF:=$PROJEKTY.ref();
               _a.ID:=_b.ID;
               _a.add(1);
               PROJEKTY.next()
           !};
           _b.HAS_SEL:='T';
           _b.put()
        |? _=1
        ||
           {!|?
               _a.blank();
               _a.REF:=$PROJEKTY.ref();
               _a.add(1);
               PROJEKTY.next()
           !}
        ?}
      ?};
      PROJEKTY.prefix()
   ?}
?};
PROJEKTY.cntx_pop()


\projekty_import_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Inicjowanie importu Projketów i Kosztów projketów
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY.index('NR_PRJ');
PROJEKTY.prefix(REF.FIRMA,0);
{? PROJEKTY.first()
||
   {!|?
      _ref:=PROJEKTY.ref();
      {? PROJEKTY.next() || _wyn:=1 || _wyn:=0 ?};
      {? _wyn=0 || PROJEKTY.prefix() ?};
      PROJEKTY.cntx_psh();
      PROJEKTY.prefix();
      {? PROJEKTY.seek(_ref)
      ||
         {? PROJEKTY.POZ_PROJ=1
         ||
            PROJEKTY.cntx_psh();
            POM.cntx_psh();
            POM.TAB:='PROJEKTY';
            POM.TYPDOK:=PROJEKTY.T().KOD;
            PROJEKTY.trig_off('put','xls_imp_msg_p');
            exec('wol_nr','numery','PROJEKTY','N',1);
            POM.cntx_pop();
            _nr:=PROJEKTY.NR;
            _sym:=PROJEKTY.SYM;
            PROJEKTY.cntx_pop();
            PROJEKTY.NR:=_nr;
            PROJEKTY.SYM:=_sym;
            PROJEKTY.RODZIC:=PROJEKTY.IDADD;
            PROJEKTY.put(1);
            PROJEKTY.trig_on('put','xls_imp_msg_p')
         ||
            _poziom:=PROJEKTY.POZ_PROJ;
            PROJEKTY.cntx_psh();
            PROJEKTY.index('IDPUT');
            PROJEKTY.prefix();
            PROJEKTY.last();
            {!|?
                PROJEKTY.POZ_PROJ>=_poziom & PROJEKTY.prev()
            !};
            _rodzic:=PROJEKTY.RODZIC;
            _tree:=#PROJEKTY.ref();
            _pozycja:=PROJEKTY.POZ_PROJ;
            _kolejn:=PROJEKTY.KOL;
            _nr:=PROJEKTY.NR;
            _sym:=PROJEKTY.SYM;
            PROJEKTY.cntx_pop();
            PROJEKTY.RODZIC:=_rodzic;
            PROJEKTY.TREE:=_tree;
            PROJEKTY.NR:=_nr;
            PROJEKTY.SYM:=_sym;
            {? PROJEKTY.SYM*'['
            || PROJEKTY.SYM:=((PROJEKTY.SYM*'['-1)+PROJEKTY.SYM)
            ?};
            PROJEKTY.SYM+='['+$PROJEKTY.ID_KSG+']';
            PROJEKTY.trig_off('put','xls_imp_msg_p');
            PROJEKTY.put(1);
            PROJEKTY.trig_on('put','xls_imp_msg_p')
         ?}
      ?};
      PROJEKTY.cntx_pop();
      _wyn
   !}
?};
PROJEKTY.cntx_pop();
VAR_DEL.delete('__RODZIC','__RESULT');
~~

\projekty_export_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Inicjowanie importu Projketów i Kosztów projketów
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY.cntx_pop();
~~


:Sign Version 2.0 jowisz:1045 2023/08/04 14:22:53 b61af05de36efc87682cecac431d0452d61d0c57387f979164fe638c9ec32159c944ca79dd2f924a0d27cd40cd6a86fad8c8f13057a4ad869d3e126d7a92d645fdb9f6da5b591ef40da69810323763a2cac13bf2155b99d55de5f93a8bd4388b47e961627ae5f58207527127225687025e5545b1d0f6423727dc229f0af81301
