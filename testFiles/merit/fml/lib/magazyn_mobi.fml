:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: magazyn_mobi.fml
:: Utworzony: 30.11.2021
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Operacje mobilne - kontynuacja
::======================================================================================================================


\rozscean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Domyślne rozpisanie rezerwacji wg wymiarów dla identyfikacji
::----------------------------------------------------------------------------------------------------------------------
_buf:=tab_tmp(1,'SCEAN','STRING[16]','','ILE','REAL','');
_lok:=tab_tmp(3,'SCEAN','STRING[16]','','LOK','STRING[16]','','TW','DATE','','ILE','REAL','');

_beerm:=BEER.M;
BEER.M:=exec('FindAndGet','#table',M,__zknrea.SQM,,,null());
_beermg:=BEER.MG;
BEER.MG:=exec('FindInSet','#table','MG','MAGAZYNY',__zknrea.MAG,__zknrea.MAG);
_dlakh:=null();
_dlref:=null();

_rearef:=__zknrea.ref();
_doroz:=__zknrea.REA;
_dk_c:=null();
ZK_P.cntx_psh();
ZK_P.clear();
{? __zknrea.SQL<>'' & ZK_P.seek(__zknrea.SQL)
|| _dk_c:=ZK_P.DK_C;
   _dlakh:=ZK_P.N().DLAKH;
   _dlref:={? _dlakh<>'' || exec('FindInSet','#table','KH','KOD',_dlakh,2) || null() ?}
?};
ZK_P.cntx_pop();
::                najpierw rezerwacje wg dostaw (jezeli istnieja)
{? __zknrea.RED>0 & __zknrea.SQL<>''
|| ZK_P.cntx_psh();
   REZ.cntx_psh();
   ZK_P.clear();
   {? ZK_P.seek(__zknrea.SQL)
   || _dk_c:=ZK_P.DK_C;
      REZ.index('ZK_P');
      REZ.prefix(ZK_P.ref());
      {? REZ.first()
      || {!
         |? {? REZ.SC<>''
            || _dorez:=REZ.ILR;
               _scean:=exec('FindAndGet','#table',DK,REZ.SC,,"SCEAN",'');
               _iler:=0;
               MKODK.cntx_psh();
               MKODK.index('KK');
               MKODK.prefix(_scean,_scean);
               {? MKODK.first()
               || _opis:={? MKODK.M().FOMOB<>null
                         || ($MKODK.M().FOMOB().FORMULA)()
                         || _op:=exec('formopis','kody_kresk',MKODK.IDMOB,MKODK.RSQL,-1,,MKODK.M().IDZP);
                            _bop:=_op[1]; obj_del(_op); _bop
                         ?}
               || _opis:=''
               ?};
               MKODK.cntx_pop();
               SLD.cntx_psh();
               SLD.index('SCEAN');
               SLD.prefix(_scean,_scean,BEER.MG);
               {? SLD.first()
               || {!
                  |? _stansld:=SLD.IL
                          -exec('ilenawyd','magazyn_mob',SLD.SL().M,SLD.SL().EANL,SLD.SL().TW,_scean)
                          -{? (_lok.clear(); _lok.find_key(_scean,$SLD.SL().EANL,SLD.SL().TW))
                           || _lok.ILE
                           || 0
                           ?};
                     _ilel:=0;
                     {? _stansld>=_dorez
                     || exec('addstean','magazyn_mob',$_rearef,_opis,BEER.M().IDMOB,SLD.IL,_dorez
                         ,BEER.M().J().KOD,SLD.SL().EANL().KOD,_scean,$SLD.SL().EANL,SLD.SL().TW
                         ,$SLD.ref(),1);
                        _ilel+=_dorez;
                        _doroz-=_dorez;
                        _dorez:=0
                     |? _stansld>0
                     || exec('addstean','magazyn_mob',$_rearef,_opis,BEER.M().IDMOB,SLD.IL,_stansld
                         ,BEER.M().J().KOD,SLD.SL().EANL().KOD,_scean,$SLD.SL().EANL,SLD.SL().TW
                         ,$SLD.ref(),1);
                        _ilel+=_stansld;
                        _dorez-=_stansld;
                        _doroz-=_stansld
                     ?};
                     {? _ilel>0
                     || _iler+=_ilel;
                        _lok.clear();
                        {? _lok.find_key(_scean,$SLD.SL().EANL,SLD.SL().TW)
                        || _lok.ILE+=_ilel;
                           _lok.put(1)
                        || _lok.blank();
                           _lok.SCEAN:=_scean;
                           _lok.LOK:=$SLD.SL().EANL;
                           _lok.TW:=SLD.SL().TW;
                           _lok.ILE:=_ilel;
                           _lok.add(1)
                        ?}
                     ?};
                     _dorez>0 & SLD.next()
                  !}
               ?};
               SLD.cntx_pop()
            ?};
            REZ.next()
         !}
      ?}
   ?};
   ZK_P.cntx_pop();
   REZ.cntx_pop()
?};
{? _doroz>0
|| exec('sc_aktyw','magazyn_stan',BEER.MG,BEER.M);
   _stskind:='Z';
   exec('sc_tymczas','magazyn_stan',BEER.MG,BEER.M,'T',,_stskind,,1);
   exec('initscsl','magazyn_mob',_dk_c,_doroz,_dlref);
   __scsld.index(__ndxsld);
   {? __scsld.first()
   || {!
      |? _scean:={? __scsld.SCEAN<>'' || __scsld.SCEAN || 'xxxx' ?};
         _stansc:=__scsld.ILE;
         _suma:=sql('select sum(:_a.ILE) SUMA from :_a where :_a.SCEAN=\':_b\'',__scsld,_scean);
         _ilean:=_suma.SUMA;
         obj_del(_suma);
         {? _stansc>0
         || _iler:=0;
            MKODK.cntx_psh();
            MKODK.index('KK');
            MKODK.prefix(_scean,_scean);
            {? MKODK.first()
            || _opis:={? MKODK.M().FOMOB<>null
                      || ($MKODK.M().FOMOB().FORMULA)()
                      || _op:=exec('formopis','kody_kresk',MKODK.IDMOB,MKODK.RSQL,-1,,MKODK.M().IDZP);
                         _bop:=_op[1]; obj_del(_op); _bop
                      ?}
            || _opis:=''
            ?};
            MKODK.cntx_pop();
            _stansld:=__scsld.ILE;
            {? BEER.M().IDMOB<>'D'
            || _stansld:=__scsld.ILE-{? (_lok.clear(); _lok.find_key(_scean,__scsld.LOR,__scsld.TRM))
                                     || _lok.ILE
                                     || 0
                                     ?}
            ?};
            _ilel:=0;
            {? _stansld>=_doroz
            || exec('addstean','magazyn_mob',$_rearef,_opis,BEER.M().IDMOB,__scsld.ILS,_doroz
                ,BEER.M().J().KOD,__scsld.LOK,_scean,__scsld.LOR,__scsld.TRM,__scsld.SLD);
               _ilel+=_doroz;
               _doroz:=0
            |? _stansld>0
            || exec('addstean','magazyn_mob',$_rearef,_opis,BEER.M().IDMOB,__scsld.ILS,_stansld
                ,BEER.M().J().KOD,__scsld.LOK,_scean,__scsld.LOR,__scsld.TRM,__scsld.SLD);
               _ilel+=_stansld;
               _doroz-=_stansld
            ?};
            {? _ilel>0
            || _iler+=_ilel;
               _lok.clear();
               {? _lok.find_key(_scean,__scsld.LOR,__scsld.TRM)
               || _lok.ILE+=_ilel;
                  _lok.put(1)
               || _lok.blank();
                  _lok.SCEAN:=_scean;
                  _lok.LOK:=__scsld.LOR;
                  _lok.TW:=__scsld.TRM;
                  _lok.ILE:=_ilel;
                  _lok.add(1)
               ?}
            ?};
            {? _iler>0
            || _buf.clear();
               {? _buf.find_key(_scean)
               || _buf.ILE+=_iler;
                  _buf.put(1)
               || _buf.blank();
                  _buf.SCEAN:=_scean;
                  _buf.ILE:=_iler;
                  _buf.add(1)
               ?}
            ?}
         ?};
         _doroz>0 & __scsld.next()
      !}
   ?};
   exec('donescsl','magazyn_mob')
?};
BEER.M:=_beerm;
BEER.MG:=_beermg;
~~


\plus_min
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Wypełnianie/zerowanie
::----------------------------------------------------------------------------------------------------------------------
{? ~((';DAPZ'*exec('FindAndGet','#table',M,__zknrea.SQM,,"IDMOB",''))>1)
|| __zknrea.REA:={? __zknrea.REA>0 || 0 || __zknrea.REZ ?};
   __zknrea.WYB:={? __zknrea.REA>0 || '*' || '' ?};
   __zknrea.RES:=__zknrea.REA+__zknrea.PLUS;
   __zknrea.put(1)
|| {? __zknrea.REA>0
   || exec('akcscean','magazyn_mob',-1)
   || __zknrea.REA:=__zknrea.REZ;
      __zknrea.put(1);
      exec('rozscean','magazyn_mobi');
      _sum:=0;
      __dstean.cntx_psh();
      __dstean.clear();
      __dstean.prefix($__zknrea.ref());
      {? __dstean.first() || {! |? _sum+=__dstean.ILR; __dstean.next() !} ?};
      __dstean.cntx_pop();
      __zknrea.REA:=_sum;
      __zknrea.WYB:={? __zknrea.REA>0 || '*' || '' ?};
      __zknrea.RES:=__zknrea.REA+__zknrea.PLUS;
      __zknrea.put(1)
   ?}
?};
EANP.IL:=__zknrea.REA;
EANP.put(1)


\infoOper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Analizuje aktualne operacje
::   WE: _a - typ operacji
::       [_b] - 0(domyślnie)-jTerm 1-inTerm
::----------------------------------------------------------------------------------------------------------------------
_tryb:=1;
_ope:={? __tab_ope='M' || __tabMope || __tabZope ?};

_txt:='PWZRIM';
_tab:=obj_new(6);
{! _i..6 |! _tab[_i]:=obj_new(2); _tab[_i][1]:=0; _tab[_i][2]:=0 !};

_msk:=EANN.name()+3;
EANN.cntx_psh();
exec('openean','open_tab',ST.ODDZ+'__');
EANN.index('DATA');
EANN.prefix('T',{? __tab_ope='M' || 'N' || 'T' ?});
{? EANN.first()
|| {!
   |? _nr:=_txt*EANN.TYP;
      _stEANN:={? (EANN.name()+2)='__' & EANN.TYP='R' & EANN.STAN='+' & (EANN.IS_R='T' | EANN.IS_M='T')
               || 'Z'
               || EANN.STAN
               ?};
      {? _nr=4
      || {? EANN.IS_R='T'
         || _tab[_nr][1]+=1;
            _tab[_nr][2]+=_stEANN='Z' & exec('ctrlEANN','magazyn_mob',EANN.TYP,1,0)
         ?};
         {? EANN.IS_M='T'
         || _nr:=6;
            _tab[_nr][1]+=1;
            _tab[_nr][2]+=_stEANN='Z' & exec('ctrlEANN','magazyn_mob',EANN.TYP,1,0)
         ?}
      || _tab[_nr][1]+=1;
         _tab[_nr][2]+=_stEANN='Z' & exec('ctrlEANN','magazyn_mob',EANN.TYP,1,0)
      ?};
      EANN.next()
   !}
?};
exec('openean','open_tab',_msk);
EANN.cntx_pop();

{| _ope
|! cntx_psh();
   {? first()
   || {!
      |? LOP:=_tab[LP][1];
         EOP:=_tab[LP][2];
         put(1);
         next()
      !}
   ?};
   cntx_pop()
|};

{! _i..6 |! obj_del(_tab[_i]) !};
obj_del(_tab);
~~


\selOper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Okienko wyboru operacjidla inTerma
::   WE: [_a] - typ operacji 'M'-mobilne(domyślnie) 'Z'-zlecenia webservicecr_grp
::       [_b] - wybrana operacja
::   WY: tabela operacji
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_a')=type_of('') & (';MZ'*_a)>1 || _a || 'M' ?};
_wyb:={? var_pres('_b')=type_of('') || _b || __wyb_ope ?};
_arch:={? __wyb_rok='--' || '' || ' ('+'Archiwum z %1 roku'@[__wyb_rok]+')' ?};

_ope:=tab_tmp(1,'LP','INTEGER',''
       ,'OPIS','STRING[40]',''
       ,'LOP','INTEGER',''
       ,'EOP','INTEGER',''
       ,'WYR','STRING[1]',''
       ,'AKC','STRING[15]','');

_ope.blank(); _ope.LP:=1; _ope.WYR:='P'; _ope.OPIS:='PRZYJĘCIE DOSTAWY'@;
_ope.AKC:='&Przyjęcia'@; _ope.add(1);
_ope.blank(); _ope.LP:=2; _ope.WYR:='W'; _ope.OPIS:='WYDANIE MAGAZYNOWE'@;
_ope.AKC:='&Wydania'@; _ope.add(1);
{? _typ='M'
|| _ope.blank(); _ope.LP:=3; _ope.WYR:='Z'; _ope.OPIS:='KOMPLETACJA WYSYŁKI'@;
   _ope.AKC:='&Kompletacje'@; _ope.add(1);
   _ope.blank(); _ope.LP:=4; _ope.WYR:='R'; _ope.OPIS:='REORGANIZACJA MAGAZYNU'@;
   _ope.AKC:='&Reorganizacje'@; _ope.add(1);
   _ope.blank(); _ope.LP:=5; _ope.WYR:='I'; _ope.OPIS:='INWENTARYZACJA'@;
   _ope.AKC:='&Inwentaryzacje'@; _ope.add(1);
   _ope.blank(); _ope.LP:=6; _ope.WYR:='M'; _ope.OPIS:='PRZESUNIĘCIE W MAGAZYNACH'@;
   _ope.AKC:='&Inwentaryzacje'@; _ope.add(1)
?};

_desc:={? _typ='M' || 'Operacje mobilne %1'@[_arch] || 'Operacje webservice %1'@[_arch] ?};
_sel:=_ope.mk_sel(_desc,'N',0,'#%1operacje'@[~_typ]);
_ope.win_fld(_sel,,'OPIS',,,22,0,1,'Operacja'@);
_ope.win_fld(_sel,,'EOP',,,5,0,1,'Zakończone'@);
_ope.win_fld(_sel,,'LOP',,,5,0,1,'Ilość'@);
_ll:={? _typ='M' || 5 || 2 ?};
{? _typ='M'
|| _ope.win_act(_sel,,'Formuła','&Stan czytników'@@,,,"exec('stn_czyt','magazyn_mob',0,0)",,,1
    ,"cur_tab(1,1).sel_adel(); exec('stn_czyt','magazyn_mob',0,0)",,'S');
   _ope.win_act(_sel,1,'Formuła','&Stan czytników'@@,,,"exec('stn_czyt','magazyn_mob',0,0)",,,,,,'S')
?};
_ope.win_act(_sel,,'Formuła','Z&akres'@@,,,"exec('zakrOper','magazyn_mobi')",,,1,"exec('zakrOper','magazyn_mobi')",,'A');
_ope.win_act(_sel,1,'Formuła','Z&akres'@@,,,"exec('zakrOper','magazyn_mobi')",,,,,,'A');
_ope.win_act(_sel,,'Formuła','Param&etry pracy'@@,,,"exec('lmo_mob_param_proc','lmo')",,,,,,'E');
_ope.win_act(_sel,1,'Formuła','Param&etry pracy'@@,,,"exec('lmo_mob_param_proc','lmo')",,,,,,'E');
_ope.win_act(_sel,,'Rekord',,,,"exec('rekOper','magazyn_mobi')");
_ope.win_sopt(_sel,'select_record_checkbox=0');

{? _a='M'
|| __tabMope:=_ope;
   __selMope:=_sel
|? _a='Z'
|| __tabZope:=_ope;
   __selZope:=_sel
?};
{? _ope.first() || _ope.find_tab('first','WYR',,'=',_wyb) ?};

~~


\rekOper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: akcja rekord dla operacji
::   WY: oznaczenie wybranej operacji
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_tab:=cur_tab(1,1);
{? _tab.sel_mark() || _tab.sel_del() ?};
_res


\zakrOper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: zmiana zakresu wyświetlanych operacji
::----------------------------------------------------------------------------------------------------------------------
cur_tab(1,1).sel_adel();
OKR.cntx_psh();
OKR.prefix();
EANX.AKT:={? (EANN.name()+2)='__' || 'T' || 'N' ?};
EANX.OKR:={? EANX.AKT='T' || null() || exec('FindInSet','#table','OKR','OKR',#__wyb_rok,REF.FIRMA,,,,null()) ?};
{? EANX.AKT='T'
|| EANX.efld_opt('ZAKR','editable=0',,'OKR');
   EANX.efld_opt('ZAKR','mark=0',,'OKR')
|| EANX.efld_opt('ZAKR','editable=1',,'OKR');
   EANX.efld_opt('ZAKR','mark=1',,'OKR')
?};
OKR.fld_fml('MC','BLANK',"1");
EANX.win_edit('ZAKR');
{? EANX.edit("{? EANX.AKT='N' & EANX.OKR=null() || FUN.info('Należy wskazać rok archiwum.'@); 'OKR' || '' ?}")
|| _value:={? EANX.AKT='T' || '--' || $EANX.OKR().ROK ?};
   {? _value<>__wyb_rok
   || __wyb_rok:=_value;
      exec('przelbtn_ctrl','magazyn_mob',__wyb_ope)
   ?}
?};
OKR.fld_fml('MC','BLANK',"0");
OKR.cntx_pop();
~~


\ae_aktope
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: po zmianie bieżace/archiwalne
::----------------------------------------------------------------------------------------------------------------------
_wined:=EANX.win_edit('?');
{? EANX.AKT='T'
|| EANX.OKR:=null();
   EANX.efld_opt(_wined,'editable=0',,'OKR');
   EANX.efld_opt(_wined,'mark=0',,'OKR')
|| EANX.efld_opt(_wined,'editable=1',,'OKR');
   EANX.efld_opt(_wined,'mark=1',,'OKR');
   OKR.index('MC');
   {? _wined='ZAKR'
   || OKR.prefix(REF.FIRMA,1)
   || OKR.prefix(REF.FIRMA,12)
   ?};
   EANX.OKR:={? OKR.last() || OKR.ref() || null() ?}
?};
1


\zakrelog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: zmiana zakresu wyświetlanych log-ów
::----------------------------------------------------------------------------------------------------------------------
cur_tab(1,1).sel_adel();
OKR.cntx_psh();
OKR.prefix();
EANX.AKT:={? (EANLOG.name()+4)='____' || 'T' || 'N' ?};
{? EANX.AKT='N'
|| _rok:=2000+(#(2+EANX.STATUS));
   _mc:=#(2-EANX.STATUS)
|| _rok:=date()~1;
   _mc:=date()~2
?};
EANX.OKR:={? EANX.AKT='T' || null() || exec('FindInSet','#table','OKR','OKR',_mc,REF.FIRMA,,,_rok,null()) ?};
{? EANX.AKT='T'
|| EANX.efld_opt('ZAKL','editable=0',,'OKR');
   EANX.efld_opt('ZAKL','mark=0',,'OKR')
|| EANX.efld_opt('ZAKL','editable=1',,'OKR');
   EANX.efld_opt('ZAKL','mark=1',,'OKR')
?};
EANX.win_edit('ZAKL');
{? EANX.edit("{? EANX.AKT='N' & EANX.OKR=null() || FUN.info('Należy wskazać okres archiwum.'@); 'OKR' || '' ?}")
|| _value:={? EANX.AKT='T' || '____' || form(EANX.OKR().ROK-2000,-2,0,'99')+form(OKR.MC,-2,0,'99') ?};
   {? _value<>EANX.STATUS
   || exec('dsk_status','magazyn_mob',_value)
   ?}
?};
OKR.cntx_pop();
~~


\rek_eann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: rekord przed dla nagłówka operacji
::----------------------------------------------------------------------------------------------------------------------
{? (';PWZ'*EANN.TYP)>1
|| EANX.NKOL:=EANN.KH().SKR
|| EANX.NKOL:=form(EANN.TIME,,3)
?};
exec('btnOnOffNag','magazyn_mob');
exec('inf_eann','magazyn_mob')


\eann2mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: realizacja operacji
::----------------------------------------------------------------------------------------------------------------------
{? (';P'*EANN.TYP)>1
|| exec('eann2nd','magazyn_mob','P')
|? (';W'*EANN.TYP)>1
|| exec('eann2nd','magazyn_mob','W')
|? (';Z'*EANN.TYP)>1
|| exec('eann2zk_n','magazyn_mob')
|? (';I'*EANN.TYP)>1
|| exec('eann2inn','magazyn_mob')
|? (';R'*EANN.TYP)>1 & __wyb_ope='R'
|| exec('eann2dk_ln','magazyn_mob')
|? (';R'*EANN.TYP)>1 & __wyb_ope='M'
|| exec('eann2nd','magazyn_mob','M')
?};
~~


\dispOper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: wyświetla operacje mobilne
::   WE: _a - typ operacji
::       _b - rodzaj operacji
::----------------------------------------------------------------------------------------------------------------------
    _typ:={? var_pres('_a')=type_of('') & (';PWZRIM'*_a)>1 || _a || 'X' ?};
_rodzope:={? var_pres('_b')=type_of('') & (';MZ'*_b)>1 || _b || 'M' ?};

_czy_akt:=(EANN.name()+2)='__';
__wyb_ope:=_typ;
{? _czy_akt & __noonly
|| {? _typ='M'
   || EANN.index('DATM');
      EANN.prefix('T',{? __tab_ope='M' || 'N' || 'T' ?},'R','T')
   || EANN.index('DATA');
      {? _typ<>'R'
      || EANN.prefix('T',{? __tab_ope='M' || 'N' || 'T' ?},_typ)
      || EANN.prefix('T',{? __tab_ope='M' || 'N' || 'T' ?},_typ,'T')
      ?}
   ?}
|? ~_czy_akt
|| EANN.index('TYPDATA');
   EANN.prefix({? __tab_ope='M' || 'N' || 'T' ?},_typ)
|| __tab_ope:=_rodzope;
   EANN.index('DATA');
   EANN.prefix();
   EANN.f_clear();
   EANN.f_set('DATA',,'\"EANN\".AKT=\'T\' and \"EANN\".STAN=\'Z\' and \"EANN\".TYP=\':_a\' and \"EANN\".ZLEC=\':_b\''
    ,_typ,{? __tab_ope='M' || 'N' || 'T' ?});
   {? EANN.f_first()
   || {!
      |? {? exec('ctrlEANN','magazyn_mob',_typ,1,0)
         || EANN.f_next()
         || EANN.f_del()
         ?}
      !}
   ?}
?};
grp_disp(EANN,{? _rodzope='M' || __sel_n || __selwn ?});
exec('akt_pozy','magazyn_mob');
~~


\preancmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: przed redakcją pola magazyn dla urządzenia
::----------------------------------------------------------------------------------------------------------------------
{? EANC.ODDZ<>null()
|| MG.prefix();
   MG.f_clear();
   MG.f_set('SYM,NAZ','','\"MG\".SL=\':_a\' and \"MG\".ODDZ=\':_b\'','T',EANC.ODDZ().KOD);
   1
|| 0
?}


\poeancmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: po redakcją pola magazyn dla urządzenia
::----------------------------------------------------------------------------------------------------------------------
1


\okEANN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: sprawdza czy dana operacja jest możliwa dla danego urządzenia, UWAGA. Działamy w otwartej masce EANN
::   WE: _a - EANN.ref()
::       _b - EANC.IDEANC
::       _c - ref EANC
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_ideanc:={? var_pres('_b')=type_of('') || _b || '' ?};

EANN.cntx_psh();
EANP.cntx_psh();
EANN.prefix();
{? EANN.seek(_a)
|| {? _ideanc<>'' || _res:=EANN.IDEANC=_ideanc ?};
   {? ~_res & EANN.IDEANC=''
   || _eanc:={? _ideanc<>'' || exec('FindAndGet','#table',EANC,_ideanc,,null()) || null() ?};
      {? exec('FindInSet','#table','EANCMG','EANC',_eanc,,,,,null())=null()
      || _res:=1
      || EANP.index('EANN');
         EANP.prefix(EANN.ref());
         _res:={? EANP.first()
               || exec('FindInSet','#table','EANCMG','EANC',EANP.LOKZ().MG,_eanc,,,,null())<>null()
               || EANN.MG<>null() & exec('FindInSet','#table','EANCMG','EANC',EANN.MG,_eanc,,,,null())<>null()
               ?}
      ?}
   ?}
?};
EANN.cntx_pop();
EANP.cntx_pop();
_res


\eancmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Powiązane magazyny z urządzeniem
::----------------------------------------------------------------------------------------------------------------------
_sel:=EANC.sel_aget();
EANC.sel_adel();
EANC.cntx_psh();
EANCMG.cntx_psh();
_multi:=_sel.size()>0;
_mags:='';
_ch:=',';
{? ~_multi
|| _oddz:=EANC.ODDZ().KOD
|| _oddz:='?';
   {? _sel.first()
   || {!
      |? {? (EANC.prefix(); EANC.seek(_sel.REF,))
         || {? _oddz='?'
            || _oddz:=EANC.ODDZ().KOD
            |? _oddz<>EANC.ODDZ().KOD
            || _oddz:=''
            ?}
         ?};
         _oddz<>'' & _sel.next()
      !}
   ?}
?};
{? _oddz=''
|| FUN.info('Do urządzenia nie przypisano oddziału\n'
            'lub zaznaczone urządzenia są z różnych oddziałów.\n\n'
            'Przypisanie magazynu niemożliwe.'@)
|? _multi
|| _mags:=exec('mg_wyb','params','',"MG.SL='T'",0,_oddz)
|| _txt:='';
   EANCMG.index('EANC');
   EANCMG.prefix(EANC.ref());
   {? EANCMG.first()
   || {!
      |? _txt+=EANCMG.MG().SYM+_ch;
         EANCMG.next()
      !};
      _txt-=1
   ?};
   _mags:=exec('mg_wyb','params',_txt,"MG.SL='T'",0,_oddz);
   {? _mags<>'' & (_mags+1)<>_ch || _mags+=_ch ?}
?};
{? ~_multi
|| EANCMG.index('EANC');
   EANCMG.prefix(EANC.ref());
   {? EANCMG.first() || {! |? EANCMG.del() !} ?}
?};
{? _mags<>''
|| {? _multi
   || {!
      |? _wsk:=_mags*_ch;
         _buf:=(_wsk-1)+_mags;
         _mags:=_wsk-_mags;
         _mg:=exec('FindInSet','#table','MG','MAGAZYNY',_buf,,,1,,null());
         {? _mg<>null() & _sel.first()
         || {!
            |? {? (EANC.prefix(); EANC.seek(_sel.REF,))
               || EANCMG.prefix();
                  EANCMG.blank();
                  EANCMG.EANC:=EANC.ref();
                  EANCMG.MG:=_mg;
                  EANCMG.add(1)
               ?};
               _sel.next()
            !}
         ?};
         _mags<>''
      !}
   || {!
      |? _wsk:=_mags*_ch;
         _buf:=(_wsk-1)+_mags;
         _mags:=_wsk-_mags;
         _mg:=exec('FindInSet','#table','MG','MAGAZYNY',_buf,,,1,,null());
         {? _mg<>null()
         || EANCMG.blank();
            EANCMG.EANC:=EANC.ref();
            EANCMG.MG:=_mg;
            EANCMG.add(1)
         ?};
         _mags<>''
      !}
   ?}
?};
EANC.cntx_pop();
EANCMG.cntx_pop();
obj_del(_sel);
~~


\bl_eanc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Wartość początkowa pola EANC
::----------------------------------------------------------------------------------------------------------------------
EANC.ref()


\chkeancmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Kontrola poprawności danych dla EANCMG
::   WY: '' lub pole niewypełnione
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_add:=menu_pth()<>'Popraw';
_ref:={? _add || null() || EANCMG.ref() ?};
{? EANCMG.MG=null()
|| FUN.info('Należy podać magazyn dla urządzenia nr %1.'@[$EANCMG.EANC().NRC]);
   _res:='MG'
|| _eanc:=EANCMG.EANC;
   _mg:=EANCMG.MG;
   _sym:=EANCMG.MG().SYM;
   EANCMG.cntx_psh();
   EANCMG.index('EANC');
   EANCMG.prefix(_eanc,_mg);
   {? EANCMG.first() & EANCMG.ref()<>_ref
   || FUN.info('Przypisano już magazyn %1 do urządzenia nr %2.'@[_sym,$EANCMG.EANC().NRC]);
      _res:='MG'
   ?};
   EANCMG.cntx_pop()
?};
_res


\del_eanc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Usunięcie urządzenia
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć definicję urządzenia mobilnego?'@)
|| EANCMG.index('EANC');
   EANCMG.prefix(EANC.ref());
   {? EANCMG.first() || {! |? EANCMG.del() !} ?};
   URZ_URZ.index('IDURZ');
   URZ_URZ.prefix(EANC.uidref());
   {? URZ_URZ.first() || {! |? URZ_URZ.del() !} ?};
   EANC.del()
?};
~~


\initeanf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wypełnia tabelę EANF danymi
::----------------------------------------------------------------------------------------------------------------------
_add:="EANF.cntx_psh();
       EANF.index('KOD');
       EANF.prefix(_a,);
       {? EANF.first()
       || EANF.OPIS:=_b;
          EANF.FORM:=_c;
          EANF.put(1)
       || EANF.blank();
          EANF.KOD:=_a;
          EANF.OPIS:=_b;
          EANF.FORM:=_c;
          EANF.add(1)
       ?};
       EANF.cntx_pop()";

_kod:='CNNS';
_opis:='Tylko cyfry. Identyfikator na xx znakach. Długość stała yy znaków.';
_form:='exec(\'cnnsform\',\'kody_kresk\',_a,_b,_c)';
_add(_kod,_opis,_form);

_kod:='VNNS';
_opis:='Tylko cyfry. Identyfikator na xx znakach. Długość zmienna yy znaków.';
_form:='exec(\'cnnsform\',\'kody_kresk\',_a,_b,_c)';
_add(_kod,_opis,_form);

_kod:='CNTS';
_opis:='Tylko cyfry. Identyfikator na xx znakach. Długość stała yy-1 znaków. Cyfra kontrolna.';
_form:='exec(\'cntsform\',\'kody_kresk\',_a,_b,_c)';
_add(_kod,_opis,_form);

_kod:='VNTS';
_opis:='Tylko cyfry. Identyfikator na xx znakach. Długość zmienna yy-1 znaków. Cyfra kontrolna.';
_form:='exec(\'cntsform\',\'kody_kresk\',_a,_b,_c)';
_add(_kod,_opis,_form);

_kod:='CANS';
_opis:='Znaki alfanumeryczne. Identyfikator na xx znakach. Długość stała yy.';
_form:='exec(\'vansform\',\'kody_kresk\',_a,_b,_c)';
_add(_kod,_opis,_form);

_kod:='VANS';
_opis:='Znaki alfanumeryczne. Identyfikator na xx znakach. Długość zmienna yy.';
_form:='exec(\'vansform\',\'kody_kresk\',_a,_b,_c)';
_add(_kod,_opis,_form);

_kod:='VATS';
_opis:='Znaki alfanumeryczne. Identyfikator na xx znakach. Długość zmienna yy-1 znaków. Cyfra kontrolna.';
_form:='exec(\'vansform\',\'kody_kresk\',_a,_b,_c)';
_add(_kod,_opis,_form);

_kod:='CNND';
_opis:='Tylko cyfry. Identyfikator na 2 znakach. Długość 6 znaków. Data w formacie RRMMDD.';
_form:='exec(\'cnndform\',\'kody_kresk\',_a,_b,_c)';
_add(_kod,_opis,_form);

_kod:='CNNR';
_opis:='Tylko cyfry. Identyfikator na 3 znakach. Precyzja 1 znak. Długość 6 znaków. Liczba rzeczywista.';
_form:='exec(\'cnnrform\',\'kody_kresk\',_a,_b,_c)';
_add(_kod,_opis,_form);
~~


\inf_eanf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Informacje o zastosowaniu formuły przetwarzania
::----------------------------------------------------------------------------------------------------------------------
FUN.info();
~~


\rek_eand
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Rekord przed dla EAND
::----------------------------------------------------------------------------------------------------------------------
{? EAND.EANF='' || EANF.blank(0) || EANF.index('KOD'); EANF.prefix(EAND.EANF); EANF.first() ?};
''


\def_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Definicja miejsc wywoałania
::----------------------------------------------------------------------------------------------------------------------
EANT.index('KOD');
EANT.prefix();
EANT.select();
~~


\pr_eant_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przed redakcją pola TAB
::----------------------------------------------------------------------------------------------------------------------
{? EANT.TAB='@' || EANT.efld_opt('RED','mark=1',,'LOG') || EANT.efld_opt('RED','mark=0',,'LOG') ?};
EANT.SUB=''


\f3_eant_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Klawisz F3 pola TAB
::----------------------------------------------------------------------------------------------------------------------
exec('Struct','libfml',,'EANT.TAB')


\po_eant_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Po redakcji pola TAB
::----------------------------------------------------------------------------------------------------------------------
{? EANT.TAB='' | (EANT.TAB<>'@' & exec('Struct','libfml',,'EANT.TAB',1)='')
|| FUN.info('Wymagane wskazanie tabeli.'@);
   0
|| exec('gen_eant_kod','magazyn_mobi');
   {? EANT.TAB='@' || EANT.efld_opt('RED','mark=1',,'LOG') || EANT.efld_opt('RED','mark=0',,'LOG') ?};
   1
?}


\pr_eant_sub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przed redakcją pola SUB
::----------------------------------------------------------------------------------------------------------------------
EANT.TAB<>''


\f3_eant_sub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Klawisz F3 pola SUB
::----------------------------------------------------------------------------------------------------------------------
exec('Struct','libfml',EANT.TAB,'EANT.SUB')


\po_eant_sub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Po redakcji pola SUB
::----------------------------------------------------------------------------------------------------------------------
{? EANT.SUB<>'' & exec('Struct','libfml',EANT.TAB,'EANT.SUB',1)='' & {? var_pres(EANT.SUB)>117 || 0 || 1 ?}
|| FUN.info('Nieprawidłowy akronim powiązanej tabeli.'@);
   0
|| exec('gen_eant_kod','magazyn_mobi');
   {? EANT.SUB<>'' & EANT.TAB<>'@' || EANT.efld_opt('RED','mark=1',,'IND') || EANT.efld_opt('RED','mark=0',,'IND') ?};
   {? EANT.TAB='@' || EANT.efld_opt('RED','mark=1',,'LOG') || EANT.efld_opt('RED','mark=0',,'LOG') ?};
   1
?}


\pr_eant_ind
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przed redakcją pola IND
::----------------------------------------------------------------------------------------------------------------------
EANT.SUB<>'' & EANT.TAB<>'@'


\f3_eant_ind
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Klawisz F3 pola SUB
::----------------------------------------------------------------------------------------------------------------------
exec('Struct','libfml',EANT.SUB,'EANT.IND',2)


\po_eant_ind
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Po redakcji pola IND
::----------------------------------------------------------------------------------------------------------------------
{? EANT.SUB<>'' & exec('Struct','libfml',EANT.SUB,'EANT.IND',3)=''
|| FUN.info('Nieprawidłowy akronim indeksu powiązanej tabeli.'@);
   0
|| exec('gen_eant_kod','magazyn_mobi');
   {? EANT.SUB='' || EANT.IND:='' ?};
   1
?}


\gen_eant_kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Tworzy kod dla tabeli EANT
::----------------------------------------------------------------------------------------------------------------------
EANT.KOD:=(8+(EANT.TAB+(8*'_')))+(8+(EANT.SUB+(8*'_')));
1


\chk_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Sprawdzenie porawności wypełnienia danych dla tabeli EANT
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_ref:={? (1+menu_txt())='P' || EANT.ref() || null() ?};
{? EANT.KOD=''
|| FUN.info('Wymagane wypełnienie kodu.'@);
   _res:='TAB'
|? EANT.TAB=''
|| FUN.info('Wymagane wskazanie tabeli.'@);
   _res:='TAB'
|? EANT.TAB='@' & EANT.SUB=''
|| FUN.info('Wymagane wskazanie powiązanej tabeli.'@);
   _res:='SUB'
|? EANT.SUB<>'' & EANT.TAB<>'@' & EANT.IND=''
|| FUN.info('Wymagane wskazanie indeksu powiązanej tabeli.'@);
   _res:='IND'
|? EANT.SUB<>'' & EANT.TAB='@' & EANT.LOG=''
|| FUN.info('Wymagane podanie warunku dostępności.'@);
   _res:='LOG'
|? EANT.KOD<>'' & exec('FindInSet','#table','EANT','KOD',EANT.KOD,,,1,,null())<>_ref
|| FUN.info('Zdefiniowano już miejsce wywołania o podanym kodzie.'@);
   _res:={? EANT.SUB<>'' || 'SUB' || 'TAB' ?}
?};
_res


\eand_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Lista powiązanych miejasc wywołania z kodem
::----------------------------------------------------------------------------------------------------------------------
_sel:=EANS.win_sel('?');
EANS.win_sel('WER');
{? (EANT.prefix(); EANT.first())
|| EANS.hdr_sel(': %1-%2'[EAND.KOD,EAND.OPIS]);
   EANS.index('GS1');
   EANS.prefix(EAND.ref());
   EANS.select()
|| FUN.info('Nie zdefiniowano miejsc wywołań.\nPodgląd i edycja powiązań niedostępna.'@)
?};
EANS.win_sel(_sel)


\eant_eand
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Lista powiązanych kodów z miejscem wywołania
::----------------------------------------------------------------------------------------------------------------------
_sel:=EANS.win_sel('?');
EANS.win_sel('GS1');

EANS.index('EANT');
EANS.prefix(EANT.KOD,);
{? EANS.first()
|| EANS.hdr_sel(': %1'[EANS.EANT]);
   EANS.select()
|| FUN.info('Nie przypisano żadnych kodów GS1 do miejsca wywołania.'@)
?};
EANS.win_sel(_sel)


\bl_eans_gs1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wartość początkowa pola EANS.EAND
::----------------------------------------------------------------------------------------------------------------------
EAND.ref()


\f3_eans_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Klawisz F3 dla pola EANS.EANT
::----------------------------------------------------------------------------------------------------------------------
_sel:=EANT.win_sel('?');
EANT.win_sel('SEL');
EANT.index('KOD');
EANT.prefix();
EANT.f_clear();
EANT.f_set('KOD,OPIS','','\"EANT\".SUB=\'\'');
{? EANT.select() || EANS.EANT:=EANT.KOD ?};
EANT.win_sel(_sel);
EANT.f_clear();
EANS.EANT


\po_eans_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Po redakcji pola EANS.EANT
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_buf:=EANS.EANT;
_fld:=16+(EANS.EANT+(16*'_'));

{? _buf=''
|| FUN.info('Należy podać miejsce wywołania.'@);
   _res:=0
|? exec('FindInSet','#table','EANT','KOD',_fld,,,1,,null())=null()
|| {? exec('FindInSet','#table','EANT','KOD',_fld,,,,,null())<>null()
   || EANS.EANT:=exec('FindInSet','#table','EANT','KOD',_fld,,"@.EANT.KOD",,,'')
   || FUN.info('Nie znaleziono miejsca wywołania o kodzie: %1.'@[_fld]);
      _res:=0
   ?}
?};
{? _res || EANS.EANT:=_fld ?};
_res


\chk_eans
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Sprawdzenie poprawności wypełnienia danych dla tabeli EANS
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? EANS.EANT=''
|| FUN.info('Należy podać miejsce wywołania'@);
   _res:='EANT'
|? EANS.VALUE=''
|| FUN.info('Wymagane podanie wartości.'@);
   _res:='VALUE'
?};
_res


\rek_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wyróżnienie systemowych miejsc wywołania
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? EANT.SYS='T' || _res:='EANT#01#01' ?};
EANT.actions_grayed('WER',{? EANT.SYS='T' || 'u' || '' ?});
_res


\urz_urz_eanc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Urządzenia dla urządzenia mobilnego
::----------------------------------------------------------------------------------------------------------------------
_sel:=EANC.sel_aget();
EANC.sel_adel();
_idurz:=EANX.IDURZ;
EANC.cntx_psh();
URZ_URZ.cntx_psh();
_multi:=_sel.size()>0;
{? _multi || EANX.IDURZ='multi' || EANX.IDURZ:=EANC.uidref() ?};
URZ_URZ.prefix();
URZ_URZ.blank();
{? URZ_URZ.edit("exec('chk_urz_urz','magazyn_mobi')")
|| _urz:=URZ_URZ.URZ;
   _urz_lab:=URZ_URZ.URZ_LAB;
   _dom:=URZ_URZ.DOM;
   {? ~_multi
   || {? URZ_URZ.add(1) || exec('po_mod_urz_urz','magazyn_mobi') ?}
   || {? _sel.first()
      || {!
         |? {? (EANC.prefix(); EANC.seek(_sel.REF,))
            || EANX.IDURZ:=EANC.uidref();
               URZ_URZ.index('IDURZ');
               URZ_URZ.prefix(EANX.IDURZ,_urz,_urz_lab);
               {? ~URZ_URZ.first()
               || URZ_URZ.blank();
                  URZ_URZ.IDURZ:=EANX.IDURZ;
                  URZ_URZ.URZ:=_urz;
                  URZ_URZ.URZ_LAB:=_urz_lab;
                  {? URZ_URZ.add(1) || exec('po_mod_urz_urz','magazyn_mobi') ?}
               |? URZ_URZ.DOM<>_dom
               || URZ_URZ.DOM:=_dom;
                  {? URZ_URZ.put(1) || exec('po_mod_urz_urz','magazyn_mobi') ?}
               ?}
            ?};
            _sel.next()
         !}
      ?}
   ?}
?};
EANC.cntx_pop();
URZ_URZ.cntx_pop();
obj_del(_sel);
EANX.IDURZ:=_idurz;
~~


\bl_idurz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wartość początkowa pola URZ_URZ.IDURZ
::----------------------------------------------------------------------------------------------------------------------
EANX.IDURZ


\pr_urz_urz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przed wyborem urządzenia
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
ZM.KAT:=exec('FindInSet','#table','URZ_KAT','NAZWA','DRUKARKA',,1,,,null());
{? ZM.KAT<>null() & URZ_URZ.URZ_LAB=null()
|| _res:=1
?};
_res


\pr_urz_lab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przed wyborem etykiety dla urządzenia
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? URZ_URZ.URZ<>null()
|| URZ_URZ.URZ().URZ_KOM().KOD;
   _res:=1
?};
_res


\chk_urz_urz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Sprawdza poprawność wypełnionych pól
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? URZ_URZ.URZ=null()
|| FUN.info('Należy wybrać urządzenie.'@);
   _res:='URZ'
|? URZ_URZ.URZ_LAB=null()
|| FUN.info('Należy wskazać wzór etykiety.'@);
   _res:='URZ_LAB'
?};
{? _res=''
|| _ref:={? (1+menu_txt())='P' || URZ_URZ.ref() || null() ?};
   _idurz:=URZ_URZ.IDURZ;
   _urz:=URZ_URZ.URZ;
   _urz_lab:=URZ_URZ.URZ_LAB;
   URZ_URZ.cntx_psh();
   URZ_URZ.index('IDURZ');
   URZ_URZ.prefix(_idurz,_urz,_urz_lab);
   {? URZ_URZ.first() & URZ_URZ.ref()<>_ref
   || FUN.info('Do danego urządzenia mobilnego przypisano już wskazaną drukarkę i wzorzec etykiety.'@);
      _res:='URZ_LAB'
   ?};
   URZ_URZ.cntx_pop()
?};
_res


\po_mod_urz_urz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Po dołącz/popraw dla urządzeń
::----------------------------------------------------------------------------------------------------------------------
_dom:=URZ_URZ.DOM;
{? _dom='T'
|| _ref:=URZ_URZ.ref();
   URZ_URZ.cntx_psh();
   URZ_URZ.index('IDURZ');
   URZ_URZ.prefix(EANX.IDURZ);
   {? URZ_URZ.first()
   || {!
      |? {? URZ_URZ.DOM='T' & _ref<>URZ_URZ.ref()
         || URZ_URZ.DOM:='N';
            URZ_URZ.put(1)
         ?};
         URZ_URZ.next()
      !}
   ?};
   URZ_URZ.cntx_pop()
?};
1


\eanc2ETYK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wydruk etykiet dla danego EANN lub EANP
::   WE: _a - czytnik (identyfikator)
::       _b - EANN.ref lub EANP.ref() lub M.ref() lub EANL.ref()
::       [_c] - rodzaj wydruku: 1-(domyślnie) - wydruk na drukarkę 0-zwraca kod etykiety
::       [_d] - kod kreskowy - alfanumeryczny zapis
::   WY: rezultat '' - ok lub komunikat o błędzie
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_idurz:={? _a<>'' || exec('FindAndGet','#table',EANC,_a,,"uidref()",null()) || '' ?};
_typprn:=0;
{? var_pres('_b')=type_of(null())
|| _ref_tab:=_b;
   _tab:=ref_tab(_b);
   {? type_of(_tab)<>type_of(~~)
   || _typprn:={? _tab=EANN || 1
               |? _tab=EANP || 2
               |? _tab=M    || 3
               |? _tab=EANL || 4
               |? _tab=PAL  || 5
               ?}
   ?}
?};
_rodz:={? var_pres('_c')=type_of(0) || _c || 1 ?};
_kodk:={? var_pres('_d')=type_of('') || _d || '' ?};

_urz:=null();
_urz_lab:=null();
_kodm:='';
_kodm:={? _typprn=1 || 'EANN____EANP____'
       |? _typprn=2 || 'EANP____________'
       |? _typprn=3 || 'M_______________'
       |? _typprn=4 || 'EANL____________'
       |? _typprn=5 || 'PAL_____________'
       || ''
       ?};
:: wydruk dla identyfikatorów dostaw
_mat:=null();
{? _typprn=3 & _kodk<>''
|| _kodx:=exec('FindAndGet','#table',M,_b,,"KODK",'');
   {? _kodx<>_kodk
   || _mat:=exec('FindAndGet','#table',M,_b,,,null());
      {? _mat<>null() & exec('FindInSet','#table','MKODK','BEZ',_kodk,_mat,,1,,null())<>null()
      || _typprn:=6;
         _kodm:='MKODK___________'
      ?};
      ''
   ?}
?};
_eant:={? _kodm='' || null() || exec('FindInSet','#table','EANT','AKOD',_kodm,'T',,1,,null()) ?};

{? ~_typprn
|| _res:='ERR:Nie wskazano nagłówka, pozycji operacji mobilnej lub materiału, lokalizacji, palety'
|? _idurz=''
|| _res:='ERR:Nie znaleziono urządzenia mobilnego - błędny identyfikator'
|? _eant=null()
|| _res:='ERR:Brak definicji miejsca wywołania dla operacji mobilnych'
|| URZ_URZ.cntx_psh();
   URZ_URZ.index('IDDOM');
   URZ_URZ.prefix(_idurz,'T');
   {? URZ_URZ.first()
   || {? exec('FindInSet','#table','URZ_MJS','URZ_LAB',_kodm,URZ_URZ.URZ_LAB,,,,null())<>null()
      || _urz:=URZ_URZ.URZ;
         _urz_lab:=URZ_URZ.URZ_LAB
      ?}
   ?};
   {? ~(_urz<>null() & _urz_lab<>null())
   || URZ_URZ.prefix(_idurz);
      {? URZ_URZ.first()
      || {!
         |? {? exec('FindInSet','#table','URZ_MJS','URZ_LAB',_kodm,URZ_URZ.URZ_LAB,,,,null())<>null()
            || _urz:=URZ_URZ.URZ;
               _urz_lab:=URZ_URZ.URZ_LAB
            ?};
            ~(_urz<>null() & _urz_lab<>null()) & URZ_URZ.next()
         !}
      ?}
   ?};
   URZ_URZ.cntx_pop();
   {? _urz<>null() & _urz_lab<>null() & _eant<>null()
   || {? _typprn=1
      || EANN.cntx_psh();
         EANN.prefix();
         {? EANN.seek(_b)
         || exec('STR','#object');
            exec('FUN','#object');
            exec('myDPRINT','object');
            _res:=exec('etykieta','param_wydr','EANN',_eant,_urz_lab,_urz,_rodz)
         ?};
         EANN.cntx_pop()
      |? _typprn=2
      || EANP.cntx_psh();
         EANP.prefix();
         {? EANP.seek(_b)
         || exec('STR','#object');
            exec('FUN','#object');
            exec('myDPRINT','object');
            _res:=exec('etykieta','param_wydr','EANP',_eant,_urz_lab,_urz,_rodz)
         ?};
         EANP.cntx_pop()
      |? _typprn=3
      || M.cntx_psh();
         M.prefix();
         {? M.seek(_b)
         || exec('STR','#object');
            exec('FUN','#object');
            exec('myDPRINT','object');
            _res:=exec('etykieta','param_wydr','M',_eant,_urz_lab,_urz,_rodz)
         ?};
         M.cntx_pop()
      |? _typprn=4
      || EANL.cntx_psh();
         EANL.prefix();
         {? EANL.seek(_b)
         || exec('STR','#object');
            exec('FUN','#object');
            exec('myDPRINT','object');
            _res:=exec('etykieta','param_wydr','EANL',_eant,_urz_lab,_urz,_rodz)
         ?};
         EANL.cntx_pop()
      |? _typprn=5
      || PAL.cntx_psh();
         PAL_POZ.cntx_psh();
         _msk:=ref_name(_b);
         {? _msk<>''
         || PAL.use(_msk);
            PAL.prefix();
            {? PAL.seek(_b)
            || {? PAL.AKT='N'
               || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
               || PAL_POZ.use('paletyp')
               ?};
               exec('STR','#object');
               exec('FUN','#object');
               exec('myDPRINT','object');
               _res:=exec('etykieta','param_wydr','PAL',_eant,_urz_lab,_urz,_rodz)
            ?}
         ?};
         PAL.cntx_pop();
         PAL_POZ.cntx_pop()
      |? _typprn=6 & _mat<>null()
      || MKODK.cntx_psh();
         MKODK.index('BEZ');
         MKODK.prefix(_mat,_kodk,);
         {? MKODK.first()
         || exec('STR','#object');
            exec('FUN','#object');
            exec('myDPRINT','object');
            _res:=exec('etykieta','param_wydr','MKODK',_eant,_urz_lab,_urz,_rodz)
         ?};
         MKODK.cntx_pop()
      ?}
   |? _urz=null() || _res:='ERR:Nie znaleziono definicji urządzenia (drukarki)'
   |? _urz_lab=null() || _res:='ERR:Nie znaleziono definicji etykiety'
   ?}
?};
_res


\obs_eanc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wyświetlenie powiązań z urządzeniami mobilnymi
::----------------------------------------------------------------------------------------------------------------------
EANCMG.index('EANC');
EANCMG.prefix(EANC.ref());
grp_disp(EANCMG,'WER');
EANX.IDURZ:=EANC.uidref();
URZ_URZ.index('IDURZ');
URZ_URZ.prefix(EANX.IDURZ);
grp_disp(URZ_URZ,'WER');
~~


\eanc2PRN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Sprawdza czy dla danego urządzenia przypisano drukarkę i etykietę
::   WE: _a - czytnik (identyfikator)
::   WY: rezultat 'T'-tak 'N'-nie
::----------------------------------------------------------------------------------------------------------------------
_res:='N';
_idurz:={? _a<>'' || exec('FindAndGet','#table',EANC,_a,,"uidref()",null()) || '' ?};

_urz:=null();
_urz_lab:=null();

{? _idurz<>''
|| URZ_URZ.cntx_psh();
   URZ_URZ.index('IDDOM');
   URZ_URZ.prefix(_idurz,'T');
   {? URZ_URZ.first()
   || _urz:=URZ_URZ.URZ;
      _urz_lab:=URZ_URZ.URZ_LAB
   || URZ_URZ.prefix(_idurz);
      {? URZ_URZ.first()
      || _urz:=URZ_URZ.URZ;
         _urz_lab:=URZ_URZ.URZ_LAB
      ?}
   ?};
   URZ_URZ.cntx_pop();
   {? _urz<>null() & _urz_lab<>null() || _res:='T' ?}
?};
_res


\akt_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Ustawienie znacznika aktywności EANT
::   WE: [_a] - 1(domyślnie)-aktywne 0-nie
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 1 ?};
_sel:=EANT.sel_aget();
EANT.sel_adel();
EANT.cntx_psh();
{? _sel.first()
|| {? {? _tryb
      || FUN.ask('Aktywować zaznaczone Miejsce wywołania?'@)
      || FUN.ask('Dezaktywować zaznaczone Miejsce wywołania?'@)
      ?}
   || {!
      |? {? (EANT.prefix(); EANT.seek(_sel.REF,); {? _tryb || EANT.A<>'T' || EANT.A<>'N' ?})
         || EANT.A:={? _tryb || 'T' || 'N' ?};
            EANT.put(1)
         ?};
         _sel.next()
      !}
   ?}
|? {? (_tryb & EANT.A='T') | (~_tryb & EANT.A='N')
   || FUN.info('Znacznik aktywności dla: %1 - %2\nspełnia kryteria.\n\nNie trzeba nic zmieniać.'@[EANT.KOD,EANT.OPIS]);
      0
   || 1
   ?} &
   {? _tryb
   || FUN.ask('Aktywować Miejsce wywołania:\n%1 - %2?'@[EANT.KOD,EANT.OPIS])
   || FUN.ask('Dezaktywować Miejsce wywołania:\n%1 - %2?'@[EANT.KOD,EANT.OPIS])
   ?}
|| EANT.A:={? _tryb || 'T' || 'N' ?};
   EANT.put(1)
?};
EANT.cntx_pop();
obj_del(_sel);
~~


\dom_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Ustawienie znacznika domyślności EANT
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy domyślne Miejsce wywołania?'@)
|| EANT.DOM:='T';
   {? EANT.put(1)
   || _ref:=EANT.ref();
      _grp:=EANT.GRP;
      _kod:=8+EANT.KOD;
      EANT.cntx_psh();
      EANT.index('KOD');
      EANT.prefix(_kod);
      {? EANT.first()
      || {!
         |? {? EANT.ref()<>_ref
            || {? EANT.GRP<>'' & EANT.GRP=_grp
               || EANT.DOM:='T';
                  EANT.put(1)
               || EANT.DOM:='N';
                  EANT.put(1)
               ?}
            ?};
            EANT.next()
         !}
      ?};
      EANT.cntx_pop()
   ?}
?}


\isDEFetyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Sprawdza czy zdefiniowano aktywne miejsce wywołania + czy są przypisane do niego etykiety
::   WE: _a - miejsce wywołania
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_eant:={? var_pres('_a')=type_of('') & +_a || 8+('%1%2'[_a,8*'_']) || '' ?};
{? _eant<>''
|| EANT.cntx_psh();
   EANT.index('AKOD');
   EANT.prefix('T',_eant);
   {? EANT.first()
   || {!
      |? _res:=exec('FindInSet','#table','URZ_MJS','EANT',EANT.KOD,,,1,,null())<>null();
         ~_res & EANT.next()
      !}
   ?};
   EANT.cntx_pop()
?};
_res


\pr_mod_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przed modyfikacją miejsc wywołania
::----------------------------------------------------------------------------------------------------------------------
_edit:={? EANT.SYS='T' || 'editable=0' || 'editable=1' ?};
EANT.efld_opt('RED',_edit,,'TAB');
EANT.efld_opt('RED',_edit,,'SUB');
EANT.efld_opt('RED',_edit,,'IND');
EANT.efld_opt('RED',_edit,,'KOD');
EANT.efld_opt('RED',_edit,,'OPIS');
EANT.efld_opt('RED',_edit,,'GRP');
1


\pr_add_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przed dołączeniem miejsc wywołania
::----------------------------------------------------------------------------------------------------------------------
_edit:='editable=1';
EANT.efld_opt('RED',_edit,,'TAB');
EANT.efld_opt('RED',_edit,,'SUB');
EANT.efld_opt('RED',_edit,,'IND');
EANT.efld_opt('RED',_edit,,'KOD');
EANT.efld_opt('RED',_edit,,'OPIS');
EANT.efld_opt('RED',_edit,,'GRP');
1


\rek_eans
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Rekord przed dla EANS
::----------------------------------------------------------------------------------------------------------------------
EANX.E_EANT:=exec('FindInSet','#table','EANT','KOD',EANS.EANT,,,1,,null());
''


\akt_R_M
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Aktualizuje znaczniki reorganizacji i przesunięcia na operacji
::   WE: _a - ref operacji
::       [_b] - aktualizacja stanu
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_stan:={? var_pres('_b')=type_of(0) || _b || 0 ?};

EANN.cntx_psh();
EANP.cntx_psh();
EANN.prefix();
{? _a<>null() & EANN.seek(_a) & EANN.r_lock(1,1,1)
|| _is_r:='N';
   _is_m:='N';
   {? EANN.TYP='R'
   || EANP.index('EANN');
      EANP.prefix(EANN.ref());
      {? EANP.first()
      || {!
         |? {? EANP.IS_RM='R' || _is_r:='T'
            |? EANP.IS_RM='M' || _is_m:='T'
            ?};
            EANP.next()
         !}
      || _is_r:='T'
      ?}
   ?};
   EANN.IS_R:=_is_r;
   EANN.IS_M:=_is_m;
   {? _stan & EANN.STAN='+' & (EANN.IS_R='T' | EANN.IS_M='T')
   || EANN.STAN:='Z';
      {? EANN.count() || EANN.AKT:='T' ?}
   ?};
   EANN.put(1);
   EANN.r_unlock()
?};
EANN.cntx_pop();
EANP.cntx_pop();
_res


\ctrlPALINW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Kontrola czy paleta już jest na inwenturze
::   WE: _a - magazyn
::       _b - kod palety
::       _c - identyfikator operacji
::       [_d] - 1-otwórz maski, 0(domyślnie)-wg aktualnych
::   WY: 0-nie ma, 1-jest na innej operacji, 2-jest na danej operacji, 3-jest na otwartym arkuszu inwentaryzacyjnym
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
 _mg:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_kod:={? var_pres('_b')=type_of('') || _b || '' ?};
_ido:={? var_pres('_c')=type_of('') || _c || '' ?};
_msk:={? var_pres('_d')=type_of(0) || _d || 0 ?};

{? _mg<>null() & _kod<>'' & _ido<>''
|| exec('openean_psh','open_tab');
   exec('inw_open_psh','open_tab');
   {? _msk || exec('openean','open_tab',ST.ODDZ+'__') ?};
   _eann:=exec('FindAndGet','#table',EANN,_ido,,,null());
   {? _eann<>null()
   || {? _msk
      || _rok:=form(exec('FindAndGet','#table',EANN,_ido,,"DATA~1",null())-2000,-2,0,'99');
         exec('inw_open','open_tab',ST.ODDZ,_rok)
      ?};
::    sprawdza na innych lub na danych zapisach dotyczących operacji z ilością odczytaną większą od zera
      EANP.index('IPAL');
      EANP.prefix('I',_mg,_kod);
      {? EANP.first()
      || {? EANP.find_tab('first','EANN',,'<>',_eann,'ILS',,'>',0)
         || _res:=1
         |? EANP.find_tab('first','EANN',,'=',_eann,'ILS',,'>',0,'M',,'=',null())
         || _res:=2
         ?}
      ?};
      {? ~_res
      || INN.cntx_psh();
         INP.cntx_psh();
         INX.cntx_psh();
         INY.cntx_psh();
         _inn:=exec('wyb_inn','magazyn_inw',_mg,1);
         {? _inn<>null()
         || INY.index('IPAL');
            INY.prefix(_inn,_kod);
            {? INY.first() || _res:=3 ?}
         ?};
         INN.cntx_pop();
         INP.cntx_pop();
         INX.cntx_pop();
         INY.cntx_pop()
      ?}
   ?};
   exec('openean_pop','open_tab');
   exec('inw_open_pop','open_tab')
?};
_res


\ilopWGnrc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Oblicza ilość operacji dla czytnika
::   WE: _a - numer czytnika
::   WY: tabela 1-ilość oepracji, 2-ilość pozycji
::----------------------------------------------------------------------------------------------------------------------
_nrc:={? var_pres('_a')=type_of(0) || _a || -1 ?};
_res:=obj_new(3); _res[1]:=0; _res[2]:=0; _res[3]:='';

{? _nrc>=0
|| EANN.cntx_psh();
   EANP.cntx_psh();
   EANN.index('DATA');
   EANN.prefix('T','N');
   {? EANN.first() & EANN.find_tab('first','NRC',,'=',_nrc)
   || {!
      |? _res[1]+=1;
         EANP.index('EANN');
         EANP.prefix(EANN.ref());
         {? EANP.first() || _res[2]+=EANP.size() ?};
         EANN.find_tab('next','NRC',,'=',_nrc)
      !}
   ?};
   EANN.cntx_pop();
   EANP.cntx_pop();
   {? _nrc>0
   || EANLOG.cntx_psh();
      EANLOG.index('DTTM');
      {? EANLOG.first() & EANLOG.find_tab('first','NRC',,'=',_nrc,'IDUSR',,'<>','') || _res[3]:=EANLOG.IDUSR ?};
      EANLOG.cntx_pop()
   ?}
?};
_res


\nd2eann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Formuła Dołączenia Operacji na podstawie dokumentu magazynowego
::   WE: _a - 0-przesunięcia 1-dokument magazynowy
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};

{? ~_a
|| _uid:='LMO_MOB_DWMM'
|? _a & ND.TYP().P='T'
|| _uid:='LMO_MOB_DAPZ'
|? _a & ND.TYP().P<>'T'
|| _uid:='LMO_MOB_DWWM'
|| _uid:=''
?};
{? _uid<>''
|| _params:=exec('mp_run_a','#b__box');
   _params.PROC_START:='T';
   _params.ACT_UID:=_uid;
   _params.AKCJA:='Do wysyłki';
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ND',ND.ref());
   exec('mp_run','#b__box',_params)
?}


\wysND
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: wysylka przesunięcia w magazynie na urzadzenie mobilne
::   WE: _a - 0-pytamy lub 1-nie
::       _b - numer czytnika
::       _c - rodzaj operacji 0-przesunięcie, 1-przyjęcie, 2-wydanie
::       [_d] - 1-proces 0(domyślnie)-nie
::   WY: EANN - wskazanie na utworzoną operację mobilną
::  OLD: \wysdk_ln/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null();

_tryb:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_proc:={? var_pres('_d')=type_of(0) || _d || 0 ?};
_msg:={? _tryb=0 || 'Czy wygenerować zadanie przesunięcia w magazynie na urządzenie mobilne?'@
      |? _tryb=1 || 'Czy wygenerować zadanie przyjęcia dostawy na urządzeniu mobilnym?'@
      |? _tryb=2 || 'Czy wygenerować zadanie wydania magazynowego na urządzeniu mobilnym?'@
      || ''
      ?};
_lock:=1;
_bezwurz:=exec('get','#params',4022,2,OPERATOR.USER)='T';
{? _bezwurz & _b<=0 || _b:=0 ?};
{? ~ND.r_lock(1,1,1)
|| _lock:=0;
   {? ~_a & FUN.ask('Dokument magazynowy obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@) & ND.r_lock(1,,1)
   || ND.r_unlock()
   ?};
   0
|? (_a | FUN.ask(_msg)) & _tryb>=0 & _tryb<=2
|| VAR_DEL.delete('__eanc');
   MG.cntx_psh();
   _nrc:=-1;
   _pal:=ND.MAG().PAL;
   _mag:=ND.MAG;
   EANX.MG:=_mag;
   MG.prefix();
   MG.f_clear();
   MG.f_set('SYM,NAZ',''
    ,'\"MG\".SL=\'T\' and \"MG\".ODDZ=\':_a\' and \"MG\".PAL=\':_b\' and \"MG\".REFERENCE<>:_c'
    ,ND.ODDZ,_pal,_mag);
   _winedit:=EANX.win_edit('?');
   {? _bezwurz || EANX.NRC_Z:=0
   |? _proc || EANX.NRC_Z:=_b
   |? EANX.NRC_Z=0 || EANX.NRC_Z:=-1
   ?};
   {? _tryb=0
   || EANX.win_edit('WYSYLKM');
      {? EANX.edit("{? EANX.MD=null() || FUN.info('Należy wskazać magazyn, do którego przesuwamy.'@); 'MD' || '' ?}")
      || _nrc:=EANX.NRC_Z;
         _ideanc:=EANX.IDEANC_Z
      ?}
   |? _bezwurz
   || _nrc:=EANX.NRC_Z;
      _ideanc:=''
   || EANX.win_edit('WYSYLKA');
      {? EANX.edit("''")
      || _nrc:=EANX.NRC_Z;
         _ideanc:=EANX.IDEANC_Z
      ?}
   ?};
   {? _nrc>0 & _ideanc='' || _ideanc:=exec('FindInSet','#table','EANC','NRC',_nrc,,"@.EANC.IDADD",'') ?};

   _grp_key:=tm_stamp()+'1';

   {? _nrc>=0
   || DK.index('DOKMAG');
      DK.prefix(ND.ref());
      {? DK.first()
      || _czypal:=ND.MAG().PAL='T';
         _do_pal:=_tryb=0 & EANX.MD().PAL='T';
         _dlakh:=DK.N().DLAKH;
         _dlref:={? _dlakh<>'' || exec('FindInSet','#table','KH','KOD',_dlakh,2) || null ?};
         do();
         EANN.clear();
         EANN.blank();
         EANN.DATA:=date();
         EANN.TYP:={? _tryb=0 || 'R'
                   |? _tryb=1 || 'P'
                   |? _tryb=2 || 'W'
                   || ''
                   ?};
         EANN.REFSQL:=$ND.ref();
         EANN.UNIK:=$ND.ref();
         EANN.IDZAM:=ND.IDADD;
         EANN.SYM:=form(form(ND.DA,,3)+' '+form(ND.TA,,3)+' '+ND.US().KOD);
         EANN.KH:={? _tryb=0 || null() || ND.KH ?};
         EANN.ODB:={? _tryb=0 || null() || ND.KH_ODB ?};
         EANN.NRC:=_nrc;
         EANN.IDEANC:=_ideanc;
         EANN.TIME:=time();
         EANN.STAN:='!';
         EANN.MG:=ND.MAG;
         EANN.MD:={? _tryb=0 || EANX.MD || null() ?};
         EANN.GRP_KEY:=_grp_key;
         EANN.RODZ:={? _tryb=0 || 'W' || {? ND.TYP().Z='T' || 'Z' || 'W' ?} ?}+{? _czypal || 'P' || '' ?};
         {? EANN.add(1)
         || _refakc:=$EANN.ref();
            EANN.SYM:={? _tryb=0 || 'RE/'+gsub(19+EANN.IDADD,'/','')
                      |? _tryb=1 || 'PD/'+gsub(19+EANN.IDADD,'/','')
                      |? _tryb=2 || 'WM/'+gsub(19+EANN.IDADD,'/','')
                      || ''
                      ?};
            EANN.UNIK:=$EANN.ref();
            _lp:=0;
            {? ~EANN.put() || undo() || _wyn:=EANN.ref() ?};
            _bufpal:=tab_tmp(1,'PAL','STRING[16]','');
            {!
            |? _eanldom:=ND.MAG().EANL;
               _mag:=ND.MAG;
               _mat:=DK.M;
               _ildk:=DK.IL;
               _rozpak:={? _tryb=0 || 0 || DK.ROZPAK ?};

               DK_L.index('DK');
               DK_L.prefix(DK.ref(),null());
               {? DK_L.first()
               ||
                  {!
                  |? {? DK_L.LOK<>_eanldom | _czypal | _tryb=0
                     || {? _czypal | form(DK.M().KODK)<>''
                        || _gogo:=0;
                           {? _tryb=0
                           || _lokz:=exec('findmlok','magdok_wymiary',EANX.MD,_mat,DK_L.IL,_dlref,,_refakc
                                      ,DK_L.DK().STATS);
                              _lokz.clear();
                              {? _lokz.first() || _gogo:=1 ?}
                           ?};
                           {!
                           |? _lp+=1;
                              {? _gogo
                              || _lokdo:=exec('FindInSet','#table','EANL','KOD',_lokz.LOK,_lokz.LOK);
                                 _ilep:={? _czypal & ~_rozpak || 1 || _lokz.ILE ?}
                              || _lokdo:={? _tryb=0 || EANX.MD().EANL || null() ?};
                                 _ilep:={? _czypal & ~_rozpak || 1 || DK_L.IL ?}
                              ?};
                              {? _ilep>0 & {? ~_czypal || 1 || _bufpal.prefix($DK_L.PAL); ~_bufpal.first() ?}
                              || {? _czypal
                                 || _bufpal.blank();
                                    _bufpal.PAL:=$DK_L.PAL;
                                    _bufpal.add(1)
                                 ?};
                                 EANP.clear();
                                 EANP.blank;
                                 EANP.EANN:=EANN.ref();
                                 EANP.NRC:=EANN.NRC;
                                 EANP.LOKZ:=DK_L.LOK;
                                 EANP.LOKDO:=_lokdo;
                                 EANP.M:={? _czypal & ~_rozpak || null || DK_L.DK().M ?};
                                 EANP.EAN:={? _czypal & ~_rozpak || DK_L.PAL().KODK || DK_L.DK().M().KODK ?};
                                 EANP.IL:=_ilep;
                                 EANP.ILS:=0;
                                 EANP.LP:=_lp;
                                 EANP.RSQL:=$DK_L.DK;
                                 EANP.PAL:=DK_L.PAL;
                                 EANP.PALEAN:=DK_L.PAL().KODK;
                                 EANP.PALDO:={? ~_rozpak || DK_L.PAL || DK_L.PALDO ?};
                                 EANP.PALDOEAN:={? ~_rozpak || DK_L.PAL().KODK || DK_L.PALDO().KODK ?};
                                 EANP.ZPALET:={? _rozpak || 2 || 0 ?};
                                 EANP.BEZOZN:={? EANP.PALDO<>null || EANP.PALDO().BEZOZN || 'N' ?};
                                 EANP.TYMCZAS:={? (1+EANP.BEZOZN)='T' || EANP.PALDOEAN || '' ?};
                                 EANP.SCEAN:={? _czypal & ~_rozpak
                                             || ''
                                             || {? DK_L.SCEAN<>'' || DK_L.SCEAN || DK_L.DK().SCEAN ?}
                                             ?};
                                 EANP.TW:={? _czypal & ~_rozpak
                                          || date(0,0,0)
                                          || DK_L.TW
                                          ?};
                                 EANP.IL2:={? DK_L.DK().M().J2<>null() || DK_L.IL2 || 0 ?};
                                 EANP.ILS2:=0;
                                 EANP.IS_RM:='M';
                                 {? DK_L.DK().DK_C<>null() & DK_L.DK().DK_C().M_ATR<>null()
                                 || _ii:=1;
                                    _wsk:=form(_ii,-2,0,'99');
                                    {! |? _ii<11 & ($('DK_L.DK().DK_C().M_ATR().SL_%1'[_wsk]))()<>null()
                                    |! ($('EANP.WAR%1'[_wsk]))():=($('DK_L.DK().DK_C().WAR%1'[_wsk]))();
                                       _ii+=1;
                                       _wsk:=form(_ii,-2,0,'99')
                                    !}
                                 ?};
                                 exec('uzupIDkod','magdok_palety',EANP);
                                 EANP.ROZPAL:=_rozpak;
                                 {? EANP.add(1)
                                 || EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
                                    {? ~EANP.put() || undo(); _gogo:=0 ?}
                                 || undo();
                                    _gogo:=0
                                 ?}
                              ?};
                              {? _gogo || _lokz.next() || 0 ?}
                           !};
                           {? _tryb=0 || obj_del(_lokz) ?}
                        ?};
                        _ildk-=DK_L.IL
                     ?};
                     DK_L.next()
                  !}
               ?};
               {? _ildk>0 & _tryb<>0
               || _lokz:=exec('findmlok','magdok_wymiary',_mag,_mat,_ildk,_dlref,,_refakc,DK.STATS);
                  _lokz.clear();
                  {? _lokz.first()
                  || {!
                     |? {? _lokz.ILE>0
                        || _lokdo:=exec('FindInSet','#table','EANL','KOD',_lokz.LOK,_lokz.LOK);
                           _lp+=1;
                           EANP.clear();
                           EANP.blank;
                           EANP.EANN:=EANN.ref();
                           EANP.NRC:=EANN.NRC;
                           EANP.LOKZ:=_lokdo;
                           EANP.LOKDO:={? _tryb=0 || EANX.MD().EANL || null() ?};
                           EANP.M:={? _czypal & ~_rozpak || null || _mat ?};
                           EANP.EAN:={? _czypal & ~_rozpak || '' || DK.M().KODK ?};
                           EANP.IL:={? _czypal & ~_rozpak || 1 || _lokz.ILE ?};
                           EANP.ILS:=0;
                           EANP.LP:=_lp;
                           EANP.RSQL:=$DK.ref();
                           EANP.PAL:=null();
                           EANP.PALEAN:='';
                           EANP.PALDO:=null();
                           EANP.PALDOEAN:='';
                           EANP.ZPALET:={? _rozpak || 2 || 0 ?};
                           EANP.BEZOZN:={? EANP.PALDO<>null || EANP.PALDO().BEZOZN || 'N' ?};
                           EANP.TYMCZAS:={? (1+EANP.BEZOZN)='T' || EANP.PALDOEAN || '' ?};
                           EANP.SCEAN:={? _czypal & ~_rozpak || '' || DK.SCEAN ?};
                           EANP.TW:={? _czypal & ~_rozpak || date(0,0,0) || DK.TW ?};
                           EANP.IL2:={? DK.M().J2<>null() || DK.IL2 || 0 ?};
                           EANP.ILS2:=0;
                           EANP.IS_RM:='M';
                           EANP.ROZPAL:=_rozpak;
                           {? DK.DK_C<>null() & DK.DK_C().M_ATR<>null()
                           || _ii:=1;
                              _wsk:=form(_ii,-2,0,'99');
                              {! |? _ii<11 & ($('DK.DK_C().M_ATR().SL_%1'[_wsk]))()<>null()
                              |! ($('EANP.WAR%1'[_wsk]))():=($('DK.DK_C().WAR%1'[_wsk]))();
                                 _ii+=1;
                                 _wsk:=form(_ii,-2,0,'99')
                              !}
                           ?};
                           exec('uzupIDkod','magdok_palety',EANP);
                           {? EANP.add(1)
                           || EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
                              {? ~EANP.put()
                              || undo();
                                 0
                              || _lokz.next()
                              ?}
                           || undo();
                              0
                           ?}
                        || _lokz.next()
                        ?}
                    !}
                  ?};
                  obj_del(_lokz)
               ?};
               DK.next()
            !};
            obj_del(_bufpal);
            EANN.STAN:='O';
            EANN.ILP:=exec('addilp','magazyn_mob',EANN.ref());
            {? ~EANN.put()
            || undo()
            || exec('akt_R_M','magazyn_mobi',EANN.ref())
            ?}
         || undo()
         ?};
         end()
      ?}
   || FUN.info('Nie wybrano czytnika.\nOperacja niemożliwa.'@)
   ?};
   MG.f_clear();
   MG.cntx_pop();
   EANX.win_edit(_winedit);
   VAR_DEL.delete('__eanc')
?};
{? _lock || ND.r_unlock() ?};
_wyn


\spr_rlok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: sprawdza czy wszystkie pozycje dokumentu maja kod kreskowy
::   WE: _a - ref ND
::   WY: 1-maja 0-nie maja
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a);
{? DK.first()
|| {!
   |? _wyn:=form(DK.M().KODK)<>'';
      _wyn & DK.next()
   !}
?};
DK.cntx_pop();
_wyn


\ctrlND
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: sprawdza czy na podstawie danego dokuemntu można przesłać na urządzenie przesunięcie w magazynie
::   WE: _a - tryb kontroli 0-przesunięcie 1-przyjęcie 2-wydanie
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_wyn:=0;

{? _tryb<=1 & ND.TYP().P<>'T'
|| FUN.info('Operacja dostępna wyłącznie dla dokumentu przychodowego.'@)
|? _tryb=2 & ND.TYP().P='T'
|| FUN.info('Operacja dostępna wyłącznie dla dokumentu rozchodowego.'@)
|? _tryb=0 & ND.STAT_REJ='N'
|| FUN.info('Operacja niedostępna dla dokumentu niezaakceptowanego.'@)
|? _tryb>0 & ND.STAT_REJ<>'N'
|| FUN.info('Operacja dostępna wyłącznie dla dokumentu o statusie niezakończonej redakcji.'@)
|? _tryb=0 & exec('FindInSet','#table','EANN','AKT2',$ND.ref(),'T',,1,'R',null())<>null()
|| FUN.info('Przesunięcie w magazynie już zostało wysłane na urządzenie mobilne.'@)
|? (_tryb=1 & exec('FindInSet','#table','EANN','AKT2',$ND.ref(),'T',,1,'P',null())<>null())
 | (_tryb=2 & exec('FindInSet','#table','EANN','AKT2',$ND.ref(),'T',,1,'W',null())<>null())
|| FUN.info('Utworzono już operację na urządzeniu mobilnym.'@)
|? _tryb=0 & exec('FindInSet','#table','EANN','AKT2',$ND.ref(),'N',"EANN.STAN",1,'R','')='+'
|| FUN.info('Przesunięcie w magazynie zostało zatwierdzone na urządzeniu mobilnym.'@)
|? _tryb=1 & exec('FindInSet','#table','EANN','AKT2',$ND.ref(),'N',"EANN.STAN",1,'P','')='+'
|| FUN.info('Przyjęcie dostawy zostało zatwierdzone na urządzeniu mobilnym.'@)
|? _tryb=2 & exec('FindInSet','#table','EANN','AKT2',$ND.ref(),'N',"EANN.STAN",1,'W','')='+'
|| FUN.info('Wydanie magazynowe zostało zatwierdzone na urządzeniu mobilnym.'@)
|? ST.MAG().PAL='N' & ~exec('spr_rlok','magazyn_mobi',ND.ref())
|| FUN.info('Istnieją pozycje dokumentu bez przypisanych kodów kreskowych.\n'
            'Wysłanie na urządzenie mobilne niemożliwe.'@)
|| _wyn:=1
?};
_wyn


\potwND
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: potwierdzenie dokumentu wg odczytu na urządzeniu
::   WE: _a - operacja EANN.ref()
::   WY: 1-wykonane 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_eann:={? var_pres('_a')=type_of(null()) || _a || null() ?};

EANN.cntx_psh();
EANP.cntx_psh();
EANN.prefix();
{? _eann<>null() & EANN.seek(_eann) & (5+EANN.REFSQL)='nagdo'
|| _akt:=ND.name()+3;
   _msk:=form(8+EANN.REFSQL)+3;
   exec('mag_psh','open_tab');
   {? _akt<>_msk || exec('mag_open','open_tab',1+_msk,_msk+2) ?};
   ND.prefix();
   _pal:=0;
   _nag:={? ND.seek(EANN.REFSQL) || _pal:=ND.MAG().PAL='T'; ND.ref() || null() ?};
   _poz:=0;
   {? _nag<>null
   || do();
      DK.index('DOKMAG');
      DK.prefix(_nag);
      {? DK.first() || {! |? DK.IL_PT:=0; DK.put(1); DK.next() !}; _poz:=DK.P ?};
      {? ~_pal
      || DK_L.index('CZYPAL');
         DK_L.prefix(_nag);
         {? DK_L.first() || {! |? DK_L.del() !} ?}
      ?};

      _oki:=1;

      EANN.STAN:='X';
      EANN.SYM:=$_nag;
      EANN.put();
      EANN.cntx_psh();
::    robimy dwa przebiegi 1-z wypełnionym EANP.RSQL, 2-bez
::    w przypadku magazynu paletowego tylko przebieg 1
      _lp:={? ~_pal || 2 || 1 ?};
      {! _jj:=1.._lp
      |! EANP.index('EANN');
         EANP.prefix(EANN.ref());
         {? EANP.first()
         || {!
            |? {? ~_pal
               || {? {? _jj=1 || (5+EANP.RSQL)='dokma' || EANP.RSQL='' ?}
                  || _dk_c:={? EANP.M().M_ATR<>null()
                            || _waratr:='';
                               {! _ii:=1..10
                               |! _waratr+={? ($'EANP.M().M_ATR().SL_%1'[form(_ii,-2,0,'99')])()<>null()
                                           || form(($'EANP.WAR%1'[form(_ii,-2,0,'99')])())
                                           || ''
                                           ?}
                               !};
                               {? _waratr<>''
                               || exec('m_atr_sprdod','mat_atr'
                                   ,EANP.WAR01,EANP.WAR02,EANP.WAR03,EANP.WAR04,EANP.WAR05
                                   ,EANP.WAR06,EANP.WAR07,EANP.WAR08,EANP.WAR09,EANP.WAR10
                                   ,EANP.M().M_ATR,null())
                               || null()
                               ?}
                            || null()
                            ?};
                     _scean:=EANP.SCEAN;
                     _tw:={? EANP.M().SETW='P' & EANP.TW<>date(0,0,0) || EANP.TW || date(0,0,0) ?};
                     DK.prefix();
                     {? _jj=1 & DK.seek(EANP.RSQL)
                     || {? (_scean='' | DK.SCEAN=_scean)
                         & (_tw=date(0,0,0) | _tw=DK.TW)
                         & (_dk_c=null() | _dk_c=DK.DK_C)
                        || _oki:=exec('eanp2DK_ptw','magazyn_mobi',EANP.ILS,_dk_c)
                        || EANP.RSQL:='';
                           EANP.put(1)
                        ?}
                     |? _jj=2
                     || DK.index('DOKMAG');
                        DK.prefix(_nag);
                        {? DK.find_tab('first','M',,'=',EANP.M)
                        || _ileroz:=EANP.ILS;
                           _refdk:=null();
                           _copdk:=DK.ref();
                           {!
                           |? _pozdk:=DK.IL-DK.IL_PT;
                              {? _pozdk
                               & (_scean='' | DK.SCEAN=_scean)
                               & (_tw=date(0,0,0) | _tw=DK.TW)
                               & (_dk_c=null() | _dk_c=DK.DK_C)
                              || _refdk:=DK.ref();
                                 {? _pozdk>=_ileroz
                                 || _ilptw:=_ileroz; _ileroz:=0
                                 || _ilptw:=_pozdk; _ileroz-=_pozdk
                                 ?};
                                 {? _ilptw>0 || _oki:=exec('eanp2DK_ptw','magazyn_mobi',_ilptw,_dk_c) ?}
                              ?};
                              _ileroz & DK.find_tab('next','M',,'=',EANP.M)
                           !};
                           {? _ileroz>0 & DK.seek({? _refdk<>null() || _refdk || _copdk ?})
                            & {? _refdk=null()
                              || _poz+=1; DK.P:=_poz; DK.IL_PT:=0;
                                 {? DK.WS2=1
                                 || DK.IL:=_ileroz;
                                    DK.IL2:=_ileroz
                                 || _wsp:=DK.IL2/DK.IL;
                                    DK.IL:=_ileroz;
                                    DK.IL2:=_ileroz*_wsp
                                 ?};
                                 {? ~DK.add(1) || _oki:=0; undo(); 0 || 1 ?}
                              || 1
                              ?}
                           || _oki:=exec('eanp2DK_ptw','magazyn_mobi',_ileroz,_dk_c)
                           ?}
                        ?}
                     || _oki:=0;
                        undo()
                     ?}
                  ?}
               |? EANP.ILS>0
               || DK_L.index('CZYPAL');
                  DK_L.prefix(_nag,EANP.PAL);
                  {? DK_L.first()
                  || {!
                     |? DK.cntx_psh();
                        {? DK_L.DK<>null() & (DK.prefix(); DK.seek(DK_L.DK))
                        || DK.IL_PT+=DK_L.IL;
                           {? ~DK.put(1)
                           || _oki:=0; undo()
                           || EANP.RNAG:=$ND.ref();
                              EANP.put();
                              DK_L.PALPOTW:=1;
                              DK_L.put(1)
                           ?}
                        ?};
                        DK.cntx_pop();
                        DK_L.next()
                     !}
                  ?}
               ?};
               _oki & EANP.next()
            !}
         ?}
      !};
      EANN.cntx_pop();
      {? _oki
      || EANN.STAN:='+';
         EANN.put();
         {? exec('archeann','magazyn_mob',EANN.ref())
         || _res:=1
         || undo()
         ?}
      ?};
      end()
   || FUN.info('Nie znaleziono powiązanego dokumentu magazynowego.'@)
   ?};
   exec('mag_pop','open_tab')
?};
EANN.cntx_pop();
EANP.cntx_pop();
_res


\stND2EANN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca stan operacji na podstawie ND
::   WE: [_a] - rok lub z ND.D
::   WY: stan operacji - litera
::----------------------------------------------------------------------------------------------------------------------
_rok:={? var_pres('_a')=type_of(0) || _a || ND.D~1 ?};
_res:='';
_sql:=$ND.ref();
{? exec('FindInSet','#table','DK_LN','ZDOK',_sql,_sql)<>null()
|| _res:='R'
|| _typ:={? ND.TYP().P='T' || 'P' || 'W' ?};
   EANN.cntx_psh();
   EANP.cntx_psh();
   EANW.cntx_psh();
   EANN.index('AKT2');
   EANN.prefix('T',_typ,_sql);
   {? EANN.first() || _res:='K' ?};
   {? _res=''
   || EANN.index('AKT2');
      EANN.prefix('N',_typ,_sql);
      {? EANN.first() & EANN.find_tab('first','STAN',,'=','+') || _res:='A' ?}
   ?};
   {? _res='' | _res='A'
   || _msk1:=EANP.name();
      _msk2:=form(_rok-2000,-2,0,'99');
      EANN.cntx_psh();
      EANP.cntx_psh();
      EANW.cntx_psh();
      exec('openean','open_tab',((_msk1-2)+1)+_msk2);
      EANP.index('RNAG');
      EANP.prefix(_sql,_sql);
      {? EANP.first()
      || {? _res='A' & EANP.find_tab('first','IS_RM',,'=','M')
         || _res:='A'
         || _res:={? EANP.find_tab('first','EANN','ZLEC','=','N') || 'T' || 'S' ?}
         ?}
      ?};
      EANN.cntx_pop();
      EANP.cntx_pop();
      EANW.cntx_pop()
   ?};
   EANN.cntx_pop();
   EANP.cntx_pop();
   EANW.cntx_pop()
?};
_res


\idwgGS1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: umożliwia zwrot identyfiaktora dostawy na podstawie odczytanego kodu GS1
::   WE: _a - kod GS1 w formacie GS1.<nr kodu>.<wartość> ...
::   WY: stan operacji - litera
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_kodgs1:={? var_pres('_a')=type_of('') || _a || '' ?};
{? _kodgs1<>'' & (4+_kodgs1)='GS1.'
|| _tabgs1:=tab_tmp(1,'KOD','STRING[10]','','WAR','STRING[255]','');
   _buf:=4-_kodgs1;
   {? (_buf+1)='.' || _buf:=_buf-1 ?};
   _tab:=spli_str(_buf,'.');
   _len:=(obj_len(_tab))%2;

   {! _ii:=1.._len
   |! _tabgs1.blank();
      _tabgs1.KOD:=_tab[(2*_ii)-1];
      _tabgs1.WAR:=_tab[2*_ii];
      _tabgs1.add(1)
::      _res+=_tabgs1.WAR
   !};
   exec('Plugin','#object');
   {? Plugin.exists('SCEAN_GS1_001')
   || _buf:=Plugin.run('SCEAN_GS1_001',_tabgs1);
      {? _buf<>'' || _res:=_buf ?}
   ?}
?};
_res


\typpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: stempluje pole typ palety
::   WE: _a - ref EANN
::       _b - pole PALEAN
::       _c - pole EAN
::       _d - typ palety - string
::       _e - ref pozycji lub null() dla dołącz
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_ispal:=_b<>'' & _c<>'' & _b<>_c;
_tpal:={? var_pres('_d')=type_of('') & _d<>'' & exec('FindInSet','#table','TPAL','TYP',_d,,,1,,null())<>null()
       || _d
       || ''
       ?};
_eanp:={? var_pres('_e')=type_of(null()) || _e || null() ?};
_modi:=_eanp<>null();
{? _ispal & _tpal<>''
|| _res:=_tpal;
   _one:=0;
   EANN.cntx_psh();
   EANP.cntx_psh();
   EANP.index('EANN');
   EANP.prefix(_a);
   {? EANP.first() & EANP.find_tab('first','PALEAN',,'=',_b)
   || _oki:=1;
      {!
      |? _one+=1;
         {? ~_oki
         || ''
         |? EANP.TPAL='' & _tpal<>''
         || EANP.TPAL:=_tpal;
            EANP.put(1);
            _res:=EANP.TPAL
         |? EANP.TPAL<>_tpal
         || _res:=EANP.TPAL;
            _oki:=0
         ?};
         EANP.find_tab('next','PALEAN',,'=',_b)
      !};
      {? _one=1 & _modi || _res:=_tpal ?}
   ?};
   EANN.cntx_pop();
   EANP.cntx_pop()
?};
_res


\info_ean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wyswietla aktualny informacje o pozycji
::   WE: [_a] - informacja ogolna domyslnie 0, informacja na okienkach operacji 1, odswiezenie informacji 2
::   WY: dla _a=1 uchwyt okienka dla innych ''
::  OLD: \info_ean/ean2.fml
::----------------------------------------------------------------------------------------------------------------------

{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

{? _a
|| VAR_DEL.delete('__infean','__infatr');

   __infean:=tab_tmp(3,'TREE','TREE_REF','galazka'
              ,'OPI','STRING[100]','Etykieta'
              ,'WAR','STRING[30]','');

   __infatr:=tab_tmp(2,'LP','INTEGER','L.p.'
              ,'OPI','STRING[50]',''
              ,'WAR','STRING[100]','');

   _win_sel:=__infean.mk_sel('Informacja o pozycji operacji'@,'P',,'#infoidmob',,,__infean.size(),1);
   __infean.win_fld(_win_sel,,'OPI',,,30,,1,'',,,,,,,,'mobile_visible=1, mobile_header=1');
   __infean.win_fld(_win_sel,,'WAR',,,30,,1,'Wartość'@,,,,,,,,'mobile_visible=1');
   __infean.tr_fml(_win_sel,,"{? _a || 1 || _a ?}");
   __infean.win_fml(_win_sel,,'OPI',,'ICON_BEFORE',"
            {? (1+__infean.OPI)='1' || 'xwin16.png:'+{? __tab_ope='M' || '52' || '24' ?}
            |? (1+__infean.OPI)='2' || 'xwin16.png:'+{? __tab_ope='M' || '52' || '25' ?}
            |? (1+__infean.OPI)='3' || 'xwin16.png:42'
            |? (1+__infean.OPI)='4' || 'xwin16.png:17'
            || ''
            ?}
         ");
   __infean.win_sel(_win_sel);
   _win_atr:=__infatr.mk_sel('Atrybuty dla pozycji operacji'@,'P',,'#infoidatr',,,,,'U');
   __infatr.win_fld(_win_atr,,'OPI',,,30,,1,'Kod'@,,,,,,,,'mobile_visible=1, mobile_header=1');
   __infatr.win_fld(_win_atr,,'WAR',,,30,,1,'Wartość'@,,,,,,,,'mobile_visible=1');
   __infatr.win_sel(_win_atr);
   {? __tab_ope='M' & EANP.M().M_ATR<>null()
   || _win_akr:=__infean.grp_make('Szczegóły pozycji operacji'@,,'#infogrmob');
      __infean.grp_sel(_win_akr,__infean,_win_sel,'Informacja',"''",,,);
      __infean.grp_sel(_win_akr,__infatr,_win_atr,'Atrybuty dostawy',"''",,,);
      __infean.win_sel(_win_akr)
   || _win_akr:=_win_sel
   ?}
|| __infean.clear();
   {? __infean.first()
   || {!
      |? _tree:=__infean.ref();
         __infean.cntx_psh();
         __infean.clear();
         __infean.prefix(_tree);
         {? __infean.first() || {! |? __infean.del() !} ?};
         __infean.cntx_pop();
         __infean.del()
      !}
   ?};
   __infatr.clear();
   {? __infatr.first()
   || {! |? _infatr.del() !} ?}
?};

{? __tab_ope='M'
||
   __infean.clear();
   __infean.TREE:=0;
   __infean.OPI:='1.Magazyn'@;
   __infean.WAR:=form(EANP.LOKZ().MG().SYM);
   __infean.add(1);

   __infean.clear();
   __infean.TREE:=0;
   __infean.OPI:='2.Indeks materiałowy'@;
   __infean.WAR:=form(EANP.M().KTM);
   __infean.add(1);

   __infean.clear();
   __infean.TREE:=0;
   __infean.OPI:='3.Ilość odczytana'@;
   __infean.WAR:=form(EANP.ILS,,EANP.M().DOKL)+' '+EANP.M().J().KOD;
   __infean.add(1);

   _idmob:=EANP.M().IDMOB;

   __infean.clear();
   __infean.TREE:=0;
   __infean.OPI:='4.Identyfikator'@;
   __infean.WAR:={? _idmob='D' || 'wg Dostawy'@
                 |? _idmob='A' || 'wg Atrybutów dostawy'@
                 |? _idmob='P' || 'wg Partii produkcyjnej'@
                 |? _idmob='Z' || 'wg Zlecenia'@
                 || 'brak identyfikacji'@
                 ?};
   {? __infean.add(1)
   || {? (';DAPZ'*_idmob)>1 & EANP.SCEAN=''
      || __infean.clear();
         __infean.TREE:=__infean.ref();
         __infean.OPI:='BRAK KODU'@;
         __infean.WAR:='';
         __infean.add(1)
      |? (';DAPZ'*_idmob)>1
      || _rsql:=exec('FindInSet','#table','MKODK','KK',EANP.SCEAN,EANP.SCEAN,"MKODK.RSQL",,,'');
         _op:=exec('formopis','kody_kresk',_idmob,_rsql,2,__infean.ref());
         _bop:=_op[1]; obj_del(_op); _bop
      ?}
   ?};
:: atrybuty indeksu materiałowego
   {? EANP.M().M_ATR<>null()
   || __infatr.blank();
      __infatr.LP:=0;
      __infatr.OPI:=EANP.M().KTM;
      __infatr.WAR:=EANP.M().N;
      __infatr.add(1);
      _ii:=1;
      _wsk:=form(_ii,-2,0,'99');
      _iswar:=0;
      {! |? _ii<11 & ($('EANP.M().M_ATR().SL_%1'[_wsk]))()<>null()
      |! __infatr.blank();
         __infatr.LP:=_ii;
         __infatr.OPI:=($('EANP.M().M_ATR().SL_%1().NA'[_wsk]))();
         __infatr.WAR:=($('EANP.WAR%1'[_wsk]))();
         {? __infatr.WAR<>'' || _iswar+=1 ?};
         __infatr.add(1);
         _ii+=1;
         _wsk:=form(_ii,-2,0,'99')
      !};
      {? ~_iswar & EANP.SCEAN<>''
      || __infatr.first();
         {! |? {? __infatr.LP>0 || __infatr.del() || __infatr.next() ?} !};
         _rsql:=exec('FindInSet','#table','MKODK','KK',EANP.SCEAN,EANP.SCEAN,"MKODK.RSQL",,,'');
         exec('atrEANP','magazyn_mobi',_idmob,_rsql)
      ?}
   ?}
|| __infean.clear();
   __infean.TREE:=0;
   __infean.OPI:='1.Ważenie pierwsze'@;
   __infean.WAR:=form(EANP.WAGA01,,EANP.M().DOKL)+' '+EANP.M().J().KOD;
   __infean.add(1);

   __infean.clear();
   __infean.TREE:=0;
   __infean.OPI:='2.Ważenie drugie'@;
   __infean.WAR:=form(EANP.WAGA02,,EANP.M().DOKL)+' '+EANP.M().J().KOD;
   __infean.add(1);

   __infean.clear();
   __infean.TREE:=0;
   __infean.OPI:='3.Waga netto'@;
   __infean.WAR:=form(EANP.WAGANT,,EANP.M().DOKL)+' '+EANP.M().J().KOD;
   __infean.add(1)
?};
__infean.clear();
__infean.first();

{? _a=1 || _win_akr || '' ?}


\atrEANP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca wartości atrybutów wg kodu identyfikacyjnego
::   WE: _a - typ IDMOB
::       _b - ref SQL
::----------------------------------------------------------------------------------------------------------------------
{? _a='D' & _b<>'' & (5+_b)='dokma'
|| _mask:=form(8+_b);
   ND.cntx_psh();
   DK.cntx_psh();
   DK_C.cntx_psh();
   {? (5+_mask)='dokma'
   || _prdk:=_b;
      ND.use('nagdo'+(_mask+3));
      DK.use(_mask);
      DK.clear();
      {? DK.seek(_b)
      || {? DK.N().TYP().INW='I' &  DK.N().INN='T' & DK.SCEAN<>''
         || _prdk:=exec('lastRSQL','magdok_wspolne',DK.SCEAN,_b)
         ?};
         _mask:=form(8+_prdk);
         {? _prdk<>'' & _prdk<>_b
         || {? DK.name()<>_mask
            || ND.use('nagdo'+(_mask+3));
               DK.use(_mask)
            ?};
            DK.clear();
            _oki:=DK.seek(_prdk)
         || _oki:=1
         ?};
         {? _oki
         || {? ref_name(DK.DK_C)<>'' || DK_C.use(ref_name(DK.DK_C)) ?};
            {? DK.DK_C<>null() & DK.DK_C().M_ATR<>null()
            || DK_C.prefix();
               {? DK_C.seek(DK.DK_C)
               || _ii:=1;
                  _wsk:=form(_ii,-2,0,'99');
                  {! |? _ii<11 & ($('DK_C.M_ATR().SL_%1'[_wsk]))()<>null()
                  |! __infatr.blank();
                     __infatr.LP:=_ii;
                     __infatr.OPI:=($('DK_C.M_ATR().SL_%1().NA'[_wsk]))();
                     __infatr.WAR:=($('DK_C.WAR%1'[_wsk]))();
                     __infatr.add(1);
                     _ii+=1;
                     _wsk:=form(_ii,-2,0,'99')
                  !}
               ?}
            ?}
         ?}
      ?}
   ?};
   ND.cntx_pop();
   DK.cntx_pop();
   DK_C.cntx_pop()
|? _a='A' & _b<>'' & (5+_b)='dokce'
|| _mask:=form(8+_b);
   DK_C.cntx_psh();
   DK_C.use(_mask);
   DK_C.clear();
   {? DK_C.seek(_b)
   || {? DK_C.M_ATR<>null
      || _ii:=1;
         _wsk:=form(_ii,-2,0,'99');
         {! |? _ii<11 & ($('DK_C.M_ATR().SL_%1'[_wsk]))()<>null()
         |! __infatr.blank();
            __infatr.LP:=_ii;
            __infatr.OPI:=($('DK_C.M_ATR().SL_%1().NA'[_wsk]))();
            __infatr.WAR:=($('DK_C.WAR%1'[_wsk]))();
            __infatr.add(1);
            _ii+=1;
            _wsk:=form(_ii,-2,0,'99')
         !}
      ?}
   ?};
   DK_C.cntx_pop()
?};
~~


\UpDownEanp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: zwiększa ilość na realizacji
::   WE: _a - ref ZK_P
::       _b - ilość aktualnie zarezerwowana wg zamówienia dla pozycji
::   WY: zwraca ilość o jaką należy zaktualizować daną pozycję - tabela danych
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new(3);
_wyn[1]:=0;
_wyn[2]:=0;
_wyn[3]:=__zknrea.RES;
_ref:=__zknrea.ref();
_lab:=__zknrea.LAB;
_tree:=__zknrea.TREE;
_nrcs:=__zknrea.NRCS;
_nrc:=__zknrea.NRC;
_eann:=exec('FindAndGet','#table',EANP,__zknrea.REF,,"EANN",null());

_updown:=__zknrea.RES-__zknrea.REA-__zknrea.PLUS;
_mag:=exec('FindAndGet','#table',MG,__zknrea.SMG,,,null());

ZK_P.cntx_psh();
ZK_P.prefix();
{? _updown<>0 & ZK_P.seek(_a)
|| {? _updown>0
   || _old:=exec('ilrPlusZK_P','zamsiw_rea',ZK_P.ref(),__refrea,'');
      _new:=0;
      _stan:=tab_tmp(2
        ,'SLK','STRING[16]',''
        ,'TW','DATE',''
        ,'WYB','STRING[1]',''
        ,'ILE','REAL',''
        ,'LOK','STRING[30]',''
        ,'ILR','REAL','');
      _suma:=0;
      exec('obl_stan','magazyn_stan',ZK_P.M,1,ZK_P.RMAG,,,,,,,,ZK_P.DK_C);
      _stand:=BEER.SD;
      _maxsl:=_stand;
      SL.index('MG');
      SL.prefix(_mag,ZK_P.M);
      {? SL.first()
      || {!
         |? _ilean:=exec('ilEANP','zamsiw_rea',SL.M,SL.EANL,SL.TW);
            _akt:=SL.IL-_ilean;
            {? _akt>_maxsl || _akt:=_maxsl ?};
            {? _akt>0
            || _maxsl-=_akt;
               _stan.clear();
               _stan.LOK:=SL.EANL().KOD;
               _stan.TW:=SL.TW;
               _stan.ILE:=_akt;
               _stan.WYB:='N';
               _stan.SLK:=$SL.EANL;
               _stan.add(1);
               _suma+=_akt
            ?};
            SL.next()
         !}
      ?};
      _slk:='';
      _tw:=date(0,0,0);
      EANP.cntx_psh();
      EANP.prefix();
      {? (4+__zknrea.REF)='eanp' & EANP.seek(__zknrea.REF)
      || _slk:=$EANP.LOKZ;
         _tw:=EANP.TW
      ?};
      EANP.cntx_pop();
      _wyb:=0;
      _stan.clear();
      {? _stan.find_key(_slk,_tw)
      || {? _stan.ILE>=_updown
         ||
            {? _stand>0
            || {? _stand<_updown || _updown:=_stand ?};
               exec('update','rezerwacje','ZK_PP',ZK_P.ref(),ZK_P.RMAG,ZK_P.M,_updown,,'B',,1,ZK_P.NR,__refrea);
               exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
               ZK_P.get();
               exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,0,$ZK_P.N);
               _new:=_updown;
               _wyn[2]+=_updown
            ?}
         || _stan.WYB:='T';
            _stan.ILR:=_stan.ILE;
            _stan.put(1);
            _wyb:=2
         ?}
      || _wyb:=1
      ?};
      {? _wyb
      || VAR_DEL.delete('__ileroz','__juzroz');
         __ileroz:={? _updown>_stand || _stand || _updown ?};
         __juzroz:={? _wyb=2 || __juzroz:=_stan.ILE || 0 ?};
         _sel:=_stan.mk_sel('Stany wg wymiarów: %1. Do rozpisania %2.'@[__zknrea.LAB,$__ileroz]
           ,'P',,'komplwgwym',,,,,'U');
         _stan.win_fld(_sel,,'WYB',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
         _stan.win_fld(_sel,,'LOK',,,,,,,,'Lokalizacja'@);
         _stan.win_fld(_sel,,'TW',,,,,,,,'Termin ważności'@);
         _stan.win_fld(_sel,,'ILE',,,15,ZK_P.M().DOKL,,,,'Ilość dostępna'@);
         _stan.win_fld(_sel,,'ILR',,,15,ZK_P.M().DOKL,1,,,'Ilość do wysyłki'@);
         _formula:="_tab:=cur_tab();
                    {? __ileroz>__juzroz
                    || _tab.WYB:='T';
                       _tab.ILR:={? _tab.ILE>=(__ileroz-__juzroz) || __ileroz-__juzroz || _tab.ILE ?};
                       __juzroz+=_tab.ILR;
                       _tab.put(1)
                    ?}";
         _stan.win_act(_sel,,'Formuła','&Wybierz'@@,,,_formula,,1,1,,,'W');
         _stan.win_btn(_sel,'text='+'&Wybierz'@+',panel=right,align=begin','menu:W');
         _formula:="_tab:=cur_tab(); _tab.WYB:='N'; __juzroz-=_tab.ILR; _tab.ILR:=0; _tab.put()";
         _stan.win_act(_sel,,'Formuła','&Odbierz'@@,,,_formula,,,1,,,'O');
         _stan.win_btn(_sel,'text='+'&Odbierz'@+',panel=right,align=begin','menu:O');
         _formula:="__zatw:=1; sel_exit()";
         _stan.win_act(_sel,,'Formuła','&Akceptuj'@@,,,_formula,,,,,,'A');
         _stan.win_btn(_sel,'text='+'&Akceptuj'@+',btn_label_align=center,panel=bottom,align=end','menu:A');
         _stan.win_btn(_sel,'text='+'A&nuluj'@+',btn_label_align=center,panel=bottom,align=end','key:Esc');
         _stan.win_act(_sel,,'Kolejność',);
         _stan.win_act(_sel,,'Okienko',,,,,"
            FUN.ask('Czy zakończyć wybór realizacji?\nUwaga. Wprowadzone zmiany nie zostaną uwzględnione.'@)
         ");
         _stan.win_act(_sel,,'Rekord',,,,"
            _tab:=cur_tab();
            {? _tab.WYB='T' | _tab.sel_size()
            || _tab.actions(_tab.win_sel('?'),,'O',1)
            || _tab.actions(_tab.win_sel('?'),,'W',1)
            ?}
         ");
         _upwyb:=0;
         _stan.win_sel(_sel);
         _stan.clear();
         {? _stan.first() & _stan.select()
         || {? _stan.last() || {! |? {? _stan.WYB='T' || _upwyb+=_stan.ILR ?}; _stan.prev() !} ?};
            _wyn[2]:=0;
            _new:=0;
            {? _upwyb<_updown || _wyn[3]+=_upwyb-_updown ?};
            {!
            |? {? _stan.WYB='T'
               || _byl:=0;
                  __zknrea.cntx_psh();
                  __zknrea.clear();
                  __zknrea.prefix(_tree,_lab,);
                  {? __zknrea.first()
                  || {!
                     |? {? _stan.LOK=__zknrea.LOKZ & _stan.TW=__zknrea.TW
                        || {? _ref<>__zknrea.ref() | 1
                           || _byl:=1;
                              __zknrea.PLUS+=_stan.ILR;
                              __zknrea.RES:=__zknrea.REA+__zknrea.PLUS;
                              __zknrea.WYB:='*';
                              {? __zknrea.put(1)
                              || EANP.cntx_psh();
                                 EANP.clear();
                                 {? (4+__zknrea.REF)='eanp' & EANP.seek(__zknrea.REF)
                                 || EANP.IL+=_stan.ILR;
                                    EANP.put()
                                 ?};
                                 EANP.cntx_pop()
                              ?};
                              {? _ref=__zknrea.ref() || _new:=_stan.ILR ?};
                              0
                           || {? _new=0 || _new:=_stan.ILR ?};
                              __zknrea.next()
                           ?}
                        || __zknrea.next()
                        ?}
                     !}
                  ?};
                  {? ~_byl
                  || EANP.clear();
                     EANP.blank;
                     EANP.EANN:=_eann;
                     EANP.NRC:=EANP.EANN().NRC;
                     EANP.LOKZ:=exec('FindAndGet','#table',EANL,_stan.SLK,,,null());
                     EANP.LOKDO:=null;
                     EANP.TW:=_stan.TW;
                     EANP.M:=ZK_P.M;
                     EANP.EAN:=ZK_P.M().KODK;
                     EANP.IL:=_stan.ILR;
                     EANP.ILS:=0;
                     EANP.LP:=ZK_P.POZ;
                     EANP.RSQL:=$ZK_P.ref();
                     EANP.ZLEAN:=ZK_P.ZL().SCEAN;
                     exec('uzupIDkod','magdok_palety',EANP);
                     {? EANP.add()
                     || _ok:=1;
                        EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
                        EANP.put()
                     ?};
                     __zknrea.prefix();
                     __zknrea.blank();
                     __zknrea.ZKN:=$ZK_P.N;
                     __zknrea.TREE:=_tree;
                     __zknrea.LAB:=_lab;
                     __zknrea.ZAM:=ZK_P.N().SYM;
                     __zknrea.DTZ:=ZK_P.N().DP;
                     __zknrea.POZ:=ZK_P.POZ;
                     __zknrea.SQL:=$ZK_P.ref();
                     __zknrea.MAG:=ZK_P.RMAG().SYM;
                     __zknrea.KTM:=ZK_P.M().KTM;
                     __zknrea.SQM:=$ZK_P.M;
                     __zknrea.KODK:=ZK_P.M().KODK;
                     __zknrea.NAZ:=ZK_P.M().N;
                     __zknrea.REZ:=0;
                     __zknrea.ILP:=_stan.ILR;
                     __zknrea.REA:=0;
                     __zknrea.RES:=_stan.ILR;
                     __zknrea.WYB:='*';
                     __zknrea.JM1:=ZK_P.M().J().KOD;
                     __zknrea.LOKZ:=_stan.LOK;
                     __zknrea.TW:=_stan.TW;
                     __zknrea.REF:=$EANP.ref();
                     __zknrea.NRC:=_nrc;
                     __zknrea.NRCS:=_nrcs;
                     __zknrea.ICON:=0;
                     __zknrea.CZY:=0;
                     __zknrea.RED:=ZK_P.ILRD;
                     __zknrea.SMG:=$_mag;
                     __zknrea.add(1)
                  ?};
                  __zknrea.cntx_pop();
                  _wyn[2]+=_stan.ILR
               ?};
               _stan.next()
            !};
            {? _wyn[2]>0
            || exec('update','rezerwacje','ZK_PP',ZK_P.ref(),ZK_P.RMAG,ZK_P.M,_wyn[2],,'B',,1,ZK_P.NR,__refrea);
               exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
               ZK_P.get();
               exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,0,$ZK_P.N)
            ?}
         ?};
         VAR_DEL.delete('__ileroz','__juzroz')
      ?};
      obj_del(_stan);
      _wyn[1]:=_new
   || _ilr:=-_updown;
      REZ.cntx_psh();
      REZ.index('ZK_PP');
      REZ.prefix(ZK_P.ref(),'T','B',__refrea);
      {? REZ.last()
      || {!
         |? {? REZ.ILR<=_ilr
            || _ilr-=REZ.ILR;
               _wyn[1]-=REZ.ILR;
               REZ.del()
            |? REZ.ILR>0
            || REZ.ILR-=_ilr;
               REZ.put(1);
               _wyn[1]-=_ilr;
               _ilr:=0;
               0
            || REZ.prev()
            ?}

         !}
      ?};
      REZ.cntx_pop()
   ?}
?};
ZK_P.cntx_pop();
_wyn


\realeann_dysp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: realizacja dyspozycji w magazynie
::   WE: _a - ref EANN
::       [_b] - 1-uruchom automatycznie 0(domyślnie)-nie
::   WY: _ref TR_NZL jak przeniesiono lub null() jak się nie udało
::----------------------------------------------------------------------------------------------------------------------
_res:=null();
_auto:={? var_pres('_b')=type_of(0) || _b || 0 ?};
EANN.cntx_psh();
EANP.cntx_psh();
EANN.prefix();
{? EANN.seek(_a) & (_auto | FUN.ask('Zrealizować operację i potwierdzić dyspozycje w magazynie?'@))
|| _refsql:=exec('FindAndGet','#table',TR_NZL,EANN.IDZAM,,"$ref()",'');
   _dokref:={? EANN.ZEANN<>'' || exec('FindAndGet','#table',ref_tab(EANN.ZEANN),EANN.ZEANN,,"uidref()",'') || '' ?};
   {? (4+_refsql)='trnl'
   || exec('opentr_psh','open_tab');
      exec('opentr','open_tab','____');
      TR_NZL.prefix();
      {? TR_NZL.seek(_refsql) & TR_NZL.STAT_REJ='Z' & (';AB'*(1+TR_NZL.STMG))>1
      || _buf:=tab_tmp(2,'REFM','STRING[16]',''
                        ,'IDTR','STRING[31]',''
                        ,'ILE','REAL',''
                        ,'SQL','STRING[16]',''
                        ,'ILR','REAL','');
         _trnzl:=TR_NZL.ref();
         _truid:=TR_NZL.uidref();
         _kompl:=TR_NZL.RODZ='Z';
         _zamuid:=exec('FindInSet','#table','TR_ZL','POZ',TR_NZL.ref(),,"@.TR_ZL.DOK_REF",'');
         _refzam:={? _zamuid<>'' & _zamuid*'zknag' || exec('FindAndGet','#table',ZK_N,_zamuid,,,null()) || null() ?};

         do();
         TR_NZL.UWAGI:=EANN.TXT1;
         TR_NZL.put(1);
         TR_ZL.index('POZ');
         TR_ZL.prefix(TR_NZL.ref());
         {? TR_ZL.first()
         || {!
            |? {? _dokref='' | _dokref=TR_ZL.DOK_REF
               || _buf.clear();
                  _buf.blank();
                  _buf.REFM:=$TR_ZL.M;
                  _buf.IDTR:={? TR_ZL.POZ_REF<>''
                             || exec('FindAndGet','#table',ref_tab(TR_ZL.POZ_REF),TR_ZL.POZ_REF,,"IDADD",'xxx')
                             || 'xxx'
                             ?};
                  _buf.SQL:=$TR_ZL.ref();
                  _buf.ILE:=TR_ZL.IL;
                  _buf.add(1);
                  TR_ZLM.index('TR_ZL');
                  TR_ZLM.prefix(TR_ZL.ref());
                  {? TR_ZLM.first()
                  || {!
                     |? _ref:=TR_ZLM.ref(); _next:=TR_ZLM.next();
                        TR_ZLM.cntx_psh();
                        TR_ZLM.prefix();
                        {? TR_ZLM.seek(_ref)
                        || {? TR_ZLM.MANPAL>0 & TR_ZLM.PAL<>null()
                           || exec('akt_palz','magdok_palety',EANP.PAL,0,_refzam,_truid,EANP.LOKZ)
                           || TR_ZLM.del()
                           ?}
                        ?};
                        TR_ZLM.cntx_pop();
                        _next
                     !}
                  ?}
               ?};
               TR_ZL.next()
            !}
         ?};
::       robimy dwa przebiegi 1-wg wskazania na TR_ZL 2-bez - uzupełniający
         _wsk:=0;
         _eanp:=tab_tmp(1,'SQL','STRING[16]','','ILS','REAL','');

         {!
         |? EANP.index('EANN');
            EANP.prefix(EANN.ref());
            {? EANP.first()
            ||
               {!
               |? {? EANP.ILS>0
                  || {? _kompl & EANP.PAL<>null() & ~EANP.ROZPAL & ~_wsk
                     || _res:=_trnzl;
                        _eanp.clear();
                        _eanp.prefix($EANP.ref());
                        {? _eanp.first()
                        || _eanp.ILS+=EANP.ILS;
                           _eanp.put(1)
                        || _eanp.prefix();
                           _eanp.blank();
                           _eanp.SQL:=$EANP.ref();
                           _eanp.ILS:=EANP.ILS;
                           _eanp.add(1)
                        ?};
                        exec('akt_palz','magdok_palety',EANP.PAL,2,_refzam,_truid,EANP.LOKZ)
                     |? _wsk | EANP.RSQL<>''
                     || _eanp.clear();
                        _eanp.prefix($EANP.ref());
                        _ils:=EANP.ILS-{? _eanp.first() || _eanp.ILS || 0 ?};
                        _buf.clear();
                        {? _wsk | EANP.ROZPAL || _buf.prefix($EANP.M) || _buf.prefix($EANP.M,EANP.RSQL) ?};
                        {? _ils>0 & _buf.first()
                        || {!
                           |? _ilp:=_buf.ILE-_buf.ILR;
                              _dk_c:={? EANP.M().M_ATR<>null()
                                     || _waratr:='';
                                        {! _ii:=1..10
                                        |! _waratr+={? ($'EANP.M().M_ATR().SL_%1'[form(_ii,-2,0,'99')])()<>null()
                                                    || form(($'EANP.WAR%1'[form(_ii,-2,0,'99')])())
                                                    || ''
                                                    ?}
                                        !};
                                        {? _waratr<>''
                                        || exec('m_atr_sprdod','mat_atr'
                                            ,EANP.WAR01,EANP.WAR02,EANP.WAR03,EANP.WAR04,EANP.WAR05
                                            ,EANP.WAR06,EANP.WAR07,EANP.WAR08,EANP.WAR09,EANP.WAR10
                                            ,EANP.M().M_ATR,null())
                                        || null()
                                        ?}
                                     || null()
                                     ?};
                              {? _ilp>=_ils
                              || {? exec('addTR_ZLM','transport_wspolne',_buf.SQL,_ils
                                     ,EANP.LOKZ,EANP.TW,EANP.PAL,EANP.SCEAN,EANP.ROZPAL<>0,_dk_c)
                                 || _eanp.clear();
                                    _eanp.prefix($EANP.ref());
                                    {? _eanp.first()
                                    || _eanp.ILS+=_ils;
                                       _eanp.put(1)
                                    || _eanp.prefix();
                                       _eanp.blank();
                                       _eanp.SQL:=$EANP.ref();
                                       _eanp.ILS:=_ils;
                                       _eanp.add(1)
                                    ?};
                                    _res:=_trnzl;
                                    _buf.ILR+=_ils;
                                    _buf.put(1);
                                    _ils:=0
                                 || _res:=null();
                                    undo()
                                 ?}
                              |? _ilp>0
                              || _dk_c:={? EANP.M().M_ATR<>null()
                                        || _waratr:='';
                                           {! _ii:=1..10
                                           |! _waratr+={? ($'EANP.M().M_ATR().SL_%1'[form(_ii,-2,0,'99')])()<>null()
                                                       || form(($'EANP.WAR%1'[form(_ii,-2,0,'99')])())
                                                       || ''
                                                       ?}
                                           !};
                                           {? _waratr<>''
                                           || exec('m_atr_sprdod','mat_atr'
                                               ,EANP.WAR01,EANP.WAR02,EANP.WAR03,EANP.WAR04,EANP.WAR05
                                               ,EANP.WAR06,EANP.WAR07,EANP.WAR08,EANP.WAR09,EANP.WAR10
                                               ,EANP.M().M_ATR,null())
                                           || null()
                                           ?}
                                        || null()
                                        ?};
                                 {? exec('addTR_ZLM','transport_wspolne',_buf.SQL,_ilp
                                     ,EANP.LOKZ,EANP.TW,EANP.PAL,EANP.SCEAN,EANP.ROZPAL<>0,_dk_c)
                                 || _eanp.clear();
                                    _eanp.prefix($EANP.ref());
                                    {? _eanp.first()
                                    || _eanp.ILS+=_ilp;
                                       _eanp.put(1)
                                    || _eanp.prefix();
                                       _eanp.blank();
                                       _eanp.SQL:=$EANP.ref();
                                       _eanp.ILS:=_ilp;
                                       _eanp.add(1)
                                    ?};
                                    _res:=_trnzl;
                                    _buf.ILR+=_ilp;
                                    _buf.put(1);
                                    _ils-=_ilp
                                 || _res:=null();
                                    undo()
                                 ?}
                              ?};
                              _ils>0 & _buf.next()
                           !}
                        ?}
                     ?}
                  ?};
                  EANP.next()
               !}
            ?};
            _wsk+=1;
            _wsk<2
         !};
         {? _res<>null()
         || EANN.STAN:='+';
            EANN.put(1);
            exec('archeann','magazyn_mob',EANN.ref());
            TR_NZL.prefix();
            {? TR_NZL.seek(_trnzl)
            || _stan:=exec('ctrl_poz','transport',TR_NZL.ref());
               TR_NZL.DOK_REA:='';
               {? _stan=1
               || exec('stMG','transport_wspolne','C');
                  TR_NZL.MGDSP:='Z'
               |? _stan=2
               || exec('stMG','transport_wspolne','B');
                  TR_NZL.MGDSP:='S'
               || exec('stMG','transport_wspolne','A');
                  TR_NZL.MGDSP:='R';
                  TR_NZL.REAL:='N';
                  TR_NZL.DR:=date(0,0,0);
                  TR_NZL.GR:=time(0,0,0)
               ?};
               {? TR_NZL.put(1) || exec('aktDYSPzam','transport_zlec',TR_NZL.DOK_REF) ?}
            ?}
         ?};
         end();
         obj_del(_eanp);
         obj_del(_buf)
      ?};
      exec('opentr_pop','open_tab')
   ?}
?};
EANN.cntx_pop();
EANP.cntx_pop();
_res


\reo2KPL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: uzgadnia ilość na podstawie odczytanych ilości na reorganizacji
::   WE: _a - IDADD EANP - kompletacji do zmiany ilości
::       _b - ref rozpakowywanej palety
::       _c - ref palety do
::   WY: 1-zmieniono 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_ile:=0;
_unik:={? var_pres('_a')=type_of('') & (+_a)=31 || _a || '' ?};
_rpal:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_dpal:={? var_pres('_c')=type_of(null()) || _c || null() ?};
{? _unik<>''
|| EANP.cntx_psh();
   EANP.index('KPLREO');
   EANP.prefix(_unik);
   {? EANP.first() || {! |? _ile+=EANP.ILS; EANP.next() !} ?};
   EANP.index('IDADD');
   EANP.prefix(_unik);
   {? EANP.first()
   || _wpal:=exec('FindInSet','#table','PAL','NOPAL',EANP.LOKZ().MG,'B',,,,null());
      {? _rpal<>null() || EANP.PAL:=_rpal; EANP.PALEAN:=EANP.PAL().KODK ?};
      {? _dpal<>null() || EANP.PALDO:=_dpal; EANP.PALDOEAN:=EANP.PALDO().KODK ?};
      {? _wpal=_dpal | _dpal=null()
      || EANP.IL:=_ile
      || EANP.PAL:=_dpal;
         EANP.PALEAN:=EANP.PAL().KODK;
         EANP.ZPALET:=1;
         EANP.M:=null();
         EANP.EAN:=EANP.PALEAN;
         EANP.IL:=1
      ?};
      {? EANP.put(1) || _res:=1 ?}
   ?};
   EANP.cntx_pop()
?};
_res


\isROZPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca jakiego typu jest ewentualne rozpakowanie bez wydania
::   WE: [_a] - materiał - ref
::       [_b] - IDADD EANN
::   WY: 0-(domyślnie)-brak rozpakowania,
::       1-rozpakowanie bez wydania kompletacja,
::       2-rozpakowanie bez wydania reorganizacja
::       3-rozpakowanie bez wydania kompletacja powiązana z reorganizacją
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
 _mat:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_eann:={? var_pres('_b')=type_of('') & (+_b)=31 || _b || '' ?};
{? _mat<>null() & _eann<>'' & (_sql:=exec('FindAndGet','#table',EANN,_eann,,"$EANN.ref()",,,''); _sql<>'')
|| _oddz:=(1+(4-(_sql)));
   exec('openean_psh','open_tab');
   exec('openean','open_tab',_oddz+'__');
   _reann:=exec('FindAndGet','#table',EANN,_sql,,,null());
   {? _reann<>null()
   || EANP.index('EANN');
      EANP.prefix(_reann);
      {? EANP.first() & EANP.find_tab('first','M',,'=',_mat,'ROZPAL',,'>',0) || _res:=EANP.ROZPAL ?}
   ?};
   exec('openean_pop','open_tab')
?};
_res


\findEANP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca jakiego typu jest ewentualne rozpakowanie bez wydania
::   WE: _a - EANN - ref
::       _b - EANP - IDADD
::       _c - KTM -indeks materiałowy
::   WY: 1 - jeśli znalazł i od razu na nim się ustawia 0-nie znalazł
::----------------------------------------------------------------------------------------------------------------------
_eann:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_eanp:={? var_pres('_b')=type_of('') & (+_b)=31 || _b || '' ?};
 _ktm:={? var_pres('_c')=type_of('') || _c || '' ?};

_res:=0;

{? _eanp<>''
|| EANP.index('IDADD');
   EANP.prefix(_eanp);
   _res:=EANP.first()
?};
{? ~_res & _ktm<>'' & (_mat:=exec('FindInSet','#table','M','MATKTM',_ktm,_ktm); _mat<>null())
|| _rozpal:=0;
   _eanp:='';
   EANP.cntx_psh();
   EANP.index('EANN');
   EANP.prefix(_eann);
   {? EANP.first()
    & EANP.find_tab('first','M',,'=',_mat,'ROZPAL',,'<>',0,'ZPALET',,'=',2)
   || _rozpal:=EANP.ROZPAL;
      {? EANP.IL>0 & EANP.ILS=0
      || _eanp:=EANP.IDADD
      || {? EANP.add(1) || _eanp:=EANP.IDADD ?}
      ?}
   ?};
   EANP.cntx_pop;
   {? _eanp<>''
   || EANP.index('IDADD');
      EANP.prefix(_eanp);
      _res:=EANP.first()
   ?}
?};
_res


\eanp2DK_ptw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: wpisuje ilośći potwierdzone wg operacji mobilnej
::       UWAGA. Kontekst danego EANP (pozycji operacji) i wskazanego DK (pozycji dokumentu magazynowego)
::   WE: _a - ilość potwierdzona
::       _b - ref DK_C
::   WY: 1 - jest OK, 0 - coś nie tak przerywamy transakcje
::----------------------------------------------------------------------------------------------------------------------
_ileroz:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_dk_c:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_res:=1;

DK.IL_PT+=_ileroz;
{? DK.M().SETW='P' & EANP.TW<>date(0,0,0) & DK.TW<>EANP.TW || DK.TW:=EANP.TW ?};
{? EANP.SCEAN<>'' & EANP.SCEAN<>DK.SCEAN || DK.SCEAN:=EANP.SCEAN ?};

{? _dk_c<>null() & DK.DK_C<>_dk_c || DK.DK_C:=_dk_c ?};
{? ~DK.put(1)
|| _res:=0; undo()
|| EANP.RNAG:=$ND.ref();
   {? EANP.RSQL='' || EANP.RSQL:=$DK.ref() ?};
   EANP.put();
   {? ~exec('add2dk_l','magdok_wspolne',DK.ref(),null(),EANP.LOKZ
        ,null(),EANP.TW,date(0,0,0)
        ,EANP.ILS,EANP.LOKZ().MG,EANP.M,,,EANP.PAL,,1,,DK.SCEAN)
   || _res:=0;
      undo()
   ?}
?};
_res


\delEANPinw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: usuwa pozycje palety na danej operacji
::   WE: _a - operacja
::       _b - paleta
::----------------------------------------------------------------------------------------------------------------------
EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(_a);
{? EANP.first() & EANP.find_tab('first','PAL',,'=',_b,'M',,'<>',null())
|| {!
   |? _ref:=EANP.ref();
      _next:=EANP.find_tab('next','PAL',,'=',_b,'M',,'<>',null());
      EANP.cntx_psh();
      EANP.prefix();
      {? EANP.seek(_ref)
      || EANW.index('EANP'); EANW.prefix(EANP.ref()); {? EANW.first() || {! |? EANW.del() !} ?};
         EANP.del()
      ?};
      EANP.cntx_pop();
      _next
   !}
?};
EANP.cntx_pop();
~~


\oneEANL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [RR.xx]
:: OPIS: poszukuje lokalizacji wg podanego kodu kreskowego
::   WE: _a - kod kreskowy
::       _b - oddział
::   WY: zwraca IDADD lokalizacji
::----------------------------------------------------------------------------------------------------------------------
_ean:={? var_pres('_a')=type_of('') || _a || '' ?};
_oddz:={? var_pres('_b')=type_of('') || _b || 'c' ?};

_res:='';
{? _ean<>'' & _oddz<>''
|| SL.cntx_psh();
   SL.use('stl__%1zb'[_oddz]);
   SL.index('S2');
   SL.prefix();
   {? SL.first() & SL.find_tab('first','M','KODK','=',_ean,'IL',,'>',0)
   || _res:=SL.EANL().IDADD;
      {? SL.find_tab('next','M','KODK','=',_ean,'IL',,'>',0) || _res:='' ?}
   ?};
   {? _res=''
   || SLD.cntx_psh();
      SLD.use('sld__%1zb'[_oddz]);
      SLD.index('SCEAN');
      SLD.prefix(_ean,);
      {? SLD.first() & SLD.find_tab('first','IL',,'>',0)
      || _res:=SLD.SL().EANL().IDADD;
         {? SLD.find_tab('next','IL',,'>',0) || _res:='' ?}
      ?};
      SLD.cntx_pop()
   ?};
   SL.cntx_pop()
?};
_res


\infoEANP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [RR.xx]
:: OPIS: zwraca informację dodatkową dla pozycji operacji
::   WE: _a - EANN idadd
::       [_b] - M idadd
::       [_c] - EANL idadd
::       [_d] - kod identyfikujący dostawę
::       [_e] - PAL idadd
::   WY: dwuelementowa tabela z informacją dodatkową
::----------------------------------------------------------------------------------------------------------------------
_res:=obj_new(2);
_res[1]:=''; _res[2]:='';
_eann:={? var_pres('_a')=type_of('') & (+_a)=31 || _a || '' ?};
_m_id:={? var_pres('_b')=type_of('') & (+_b)=31 || _b || '' ?};
_l_id:={? var_pres('_c')=type_of('') & (+_c)=31 || _c || '' ?};
_d_id:={? var_pres('_d')=type_of('') || _d || '' ?};
_p_id:={? var_pres('_e')=type_of('') & (+_e)=31 || _e || '' ?};

{? _eann<>'' & (_maska:=form(8+($exec('FindAndGet','#table',EANN,_eann,,,null()))); _maska<>'')
|| exec('Plugin','#object');
   {? Plugin.exists('EANP_INF_001')
   || _stoddz:=ST.ODDZ;
      EANN.cntx_psh();
      ST.ODDZ:=1+(4-_maska);
      exec('openean','open_tab',ST.ODDZ+'__');
      _eannR:=exec('FindAndGet','#table',EANN,_eann,,,null());
      _mat_R:={? _m_id<>'' || exec('FindAndGet','#table',M,_m_id,,,null()) || null() ?};
      _lok_R:={? _l_id<>'' || exec('FindAndGet','#table',EANL,_l_id,,,null()) || null() ?};
      _scean:=_d_id;
      _pal_R:={? _p_id<>'' || exec('FindAndGet','#table',PAL,_p_id,,,null()) || null() ?};

      _buf:=Plugin.run('EANP_INF_001',_eannR,_mat_R,_lok_R,_scean,_pal_R);
      {? var_pres('_buf')=type_of('')
      || _res[1]:=250+_buf;
         _res[2]:=250-_buf
      ?};
      EANN.cntx_pop();
      ST.ODDZ:=_stoddz
   ?}
?};
_res


:Sign Version 2.0 jowisz:1045 2024/02/14 14:27:37 79b68c2b41d16b3fd85b8363f369d03cf6ce35596649e5aa97f52c5fe923b59ac0e7ee2ea8684472299ced8e0a405d8334e308e4d59f292ff301c3de305ac438f76a6f151cedf51e9ddf26b6fd11d6d33b9e08afe4bf83e4acdadadd97e4c2c738fc734900d9e86157e85d94d00e2ae7a3e3ebf45b15bf8b94e2730f34639263
