:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: szablon_log.fml
:: Utworzony: 10.03.2020
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły wykorzystywane w szablonach dokumentów WORD w obaszarach logistycznych i produkcyjnych
::======================================================================================================================


\kh_poczta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwraca pocztę kontrahenta
::   WE: _a - alias tabeli KH - zakładamy, że stoimy na odpowiednim rekordzie
::----------------------------------------------------------------------------------------------------------------------
_poczta:='';
{? type_of(_a)=type_of(SYSLOG) & _a=KH
|| _poczta:=exec('kpocz','faktury_wydruk',KH.KPOCZ,KH.POCZ,KH.MIASTO)
|? type_of(_a)=117
|| _poczta:=exec('kpocz','faktury_wydruk',_a.KODP,_a.POCZTA,_a.MIA)
?};
_poczta


\kh_adres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwraca adres kontrahenta
::   WE: _a - alias tabeli KH - zakładamy, że stoimy na odpowiednim rekordzie
::----------------------------------------------------------------------------------------------------------------------
_adres:='';
{? type_of(_a)=type_of(SYSLOG) & _a=KH
|| _adres:=KH.UL
?};
_adres


\um_cykl_posesje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwraca listę posesji do umowy cyklicznej
::   WE: _a - UM.ref()
::----------------------------------------------------------------------------------------------------------------------
_tab:=sql('
   select distinct
     MIA.NAZ as MIA,
     UL.UL as UL,
     POS.NR as NR
   from UP
     join POS using(UP.POS,POS.REFERENCE)
     join UL using(POS.UL,UL.REFERENCE)
     join MIA using(POS.MIA,MIA.REFERENCE)
     join UM using(UP.UM,UM.REFERENCE)
   where UM.REFERENCE=:_a
',_a);
_tab


\ofe_ilosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwracająca ilość na ofercie w postaci tekstu
::   WE: _a - ilość
::   WY: sformatowana ilość
::----------------------------------------------------------------------------------------------------------------------
form(_a,,params_get().env.DOKL,'9,')


\ofe_cena
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwracająca cenę na ofercie w postaci tekstu
::   WE: _a - cena
::   WY: sformatowana cena
::----------------------------------------------------------------------------------------------------------------------
form(_a,,ST.DOKL_S,'9,')


\ofe_wartosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwracająca wartość na ofercie w postaci tekstu
::   WE: _a - wartość
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
form(_a,,2,'9,')


\zkn_ilosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwracająca ilość na zamówieniu w postaci tekstu
::   WE: _a - ilość
::   WY: sformatowana ilość
::----------------------------------------------------------------------------------------------------------------------
form(_a,,params_get().env.DOKL,'9,')


\zkn_cena
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwracająca cenę na zamówieniu w postaci tekstu
::   WE: _a - cena
::   WY: sformatowana cena
::----------------------------------------------------------------------------------------------------------------------
form(_a,,ST.DOKL_S,'9,')


\zkn_wartosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwracająca wartość na zamówieniu w postaci tekstu
::   WE: _a - wartość
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
form(_a,,2,'9,')


\handlowiec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwracająca dane handlowca
::   WE: _a - HAN.ref()
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
exec('FindAndGet','#table',HAN,_a,,"'%1 — %2'[HAN.KOD,HAN.NAZ]",'')


\handlowiec_kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwracająca dane handlowca
::   WE: _a - HAN.ref()
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
exec('FindAndGet','#table',HAN,_a,,"HAN.KOD",'')


\handlowiec_nazwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwracająca dane handlowca
::   WE: _a - HAN.ref()
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
exec('FindAndGet','#table',HAN,_a,,"HAN.NAZ",'')


\platnosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwracająca opis sposobu płatności
::   WE: _a - SLO.ref()
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
exec('FindAndGet','#table',SLO,_a,,"'%1 — %2'[SLO.KOD,SLO.TR]",'')


\zlp_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Prolog funkcji pobrania danych zgłoszenia jednorazowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZLP.cntx_psh();
ZLP.prefix()


\zlp_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Funkcja pobrania danych zgłoszenia jednorazowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? ZLP.seek(_a.ZLP,,1)
|| ZLP
|| ~~
?}


\zlp_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Epilog funkcji pobrania danych zgłoszenia jednorazowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZLP.cntx_pop()


\zlp_ilosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Ilość (kontenerów) na zgłoszeniu jednorazowym
::   WE: _a - ilosc
::----------------------------------------------------------------------------------------------------------------------
{? _a<>1 || $_a+' x ' || '' ?}


\zlp_pojemnosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Pojemność kontenera na zgłoszeniu jednorazowym
::   WE: _a - alias tabeli ZLP - zakładamy, że stoimy na odpowiednim rekordzie
::----------------------------------------------------------------------------------------------------------------------
exec('zlp_umo','umowy_zlecenia');
{? UMO.OBJ>0 || $(1/UMO.OBJ) || '0' ?}


\zlp_wartosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwracająca wartość na zgłoszeniu w postaci tekstu
::   WE: _a - wartość
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
form(_a,,2,'9,')


\zlp_posesja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Posesja
::   WE: _a - alias tabeli ZLP - zakładamy, że stoimy na odpowiednim rekordzie
::----------------------------------------------------------------------------------------------------------------------
_a.ZLE().POS()


\zlp_posesja_miasto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Miasto z posesji - zakładamy, że stoimy na odpowiednim rekordzie
::----------------------------------------------------------------------------------------------------------------------
POS.UL().MIA().NAZ


\zlp_posesja_ulica
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Ulica z posesji, zakładamy, że stoimy na odpowiednim rekordzie
::----------------------------------------------------------------------------------------------------------------------
POS.UL().UL


\zlp_posesja_nrd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Numer posesji, zakładamy, że stoimy na odpowiednim rekordzie
::----------------------------------------------------------------------------------------------------------------------
POS.NR


\kh_odb_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Prolog funkcji pobrania danych odbiorcy kontrahenta
::----------------------------------------------------------------------------------------------------------------------
~~


\kh_odb_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Funkcja pobrania danych odbiorcy kontrahenta
::----------------------------------------------------------------------------------------------------------------------
KH_ODB


\kh_odb_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Epilog funkcji pobrania odbiorcy kontrahenta
::----------------------------------------------------------------------------------------------------------------------
~~


\procent
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwraca wartość procentową w postaci tekstu
::   WE: _a - wartość
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
form(_a,,2,'9,')


\ofp_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Prolog funkcji pobrania pozycji oferty
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_env.DOKL:=0;

OFP.cntx_psh();
OFP.index('OFE_P');
OFP.prefix(_a.OFE);
{? OFP.first()
|| {!
   |? {? OFP.M().DOKL>_env.DOKL || _env.DOKL:=M.DOKL ?};
      OFP.next()
   !}
?}


\ofp_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Funkcja pobrania pozycji oferty
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
OFP


\ofp_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Epilog funkcji pobrania pozycji oferty
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
OFP.cntx_pop()


\ofe_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Prolog funkcji pobrania oferty
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
OFE.cntx_psh();
OFE.prefix()


\ofe_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Funkcja pobrania oferty
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? OFE.seek(_a.OFE,,1)
|| OFE
|| ~~
?}


\ofe_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Epilog funkcji pobrania oferty
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
OFE.cntx_pop()


\zkp_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Prolog funkcji pobrania pozycji zamówienia
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_env.DOKL:=0;

ZK_P.cntx_psh();
ZK_P.index('TYPN');
ZK_P.prefix('A','Z',_a.ZK_N,1);
{? ZK_P.first()
|| {!
   |? {? ZK_P.M().DOKL>_env.DOKL || _env.DOKL:=M.DOKL ?};
      ZK_P.next()
   !}
?}


\zkp_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Funkcja pobrania pozycji zamówienia
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZK_P


\zkp_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Epilog funkcji pobrania pozycji zamówienia
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZK_P.cntx_pop()


\zkn_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Prolog funkcji pobrania zamówienia
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
ZK_N.prefix()


\zkn_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Funkcja pobrania zamówienia
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? ZK_N.seek(_a.ZK_N,,1)
|| ZK_N
|| ~~
?}


\zkn_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Epilog funkcji pobrania zamówienia
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_pop()


\uman_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Prolog funkcji pobrania aneksu umowy cyklicznej
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
UMAN.cntx_psh();
UMAN.prefix()


\uman_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Funkcja pobrania aneksu umowy cyklicznej
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? UMAN.seek(_a.UMAN,,1)
|| UMAN
|| ~~
?}


\uman_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Epilog funkcji pobrania aneksu umowy cyklicznej
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
UMAN.cntx_pop()


\rem_zas_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Prolog funkcji pobrania zasobu remontowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
REM_ZAS.cntx_psh();
REM_ZAS.prefix()


\rem_zas_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Funkcja pobrania zasobu remontowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? REM_ZAS.seek(_a.REM_ZAS,,1)
|| REM_ZAS
|| REM_ZAS.blank(1);
   REM_ZAS
?}


\rem_zas_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Epilog funkcji pobrania zasobu remontowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
REM_ZAS.cntx_pop()


\rem_zgl_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Prolog funkcji pobrania zgłoszenia remontowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
REM_ZGL.cntx_psh();
REM_ZGL.prefix()


\rem_zgl_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Funkcja pobrania zgłoszenia remontowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? REM_ZGL.seek(_a.REM_ZGL,,1)
|| REM_ZGL
|| ~~
?}


\rem_zgl_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Epilog funkcji pobrania zgłoszenia remontowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
REM_ZGL.cntx_pop()


\rem_zgl_user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła zwracająca dane osoby zatwierdzającej zgłoszenie remontowe
::   WE: _a - USERS.ref()
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
:: Jeżeli zgłoszenie nie zostało jeszcze zweryfikowane to zwracam pusty string
{? REM_ZGL.STAT_REJ<>exec('status_new','remonty_zgloszenia') & REM_ZGL.STAT_REJ<>exec('status_ended','remonty_zgloszenia')
|| exec('FindAndGet','#table',USERS,_a,,"'%1  %2'[USERS.OSOBA().NAZWISKO,USERS.OSOBA().PIERWSZE]",'')
|| ''
?}


\rem_zgl_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła zwracająca sformatowaną godzinę, datę lub wynik weryfikacji zgłoszenia remontowego
::   WE: _a - wynik/data/godzina weryfikacji
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_res:='';
:: Jeżeli zgłoszenie nie zostało jeszcze zweryfikowane to zwracam pusty string
{? REM_ZGL.STAT_REJ<>exec('status_new','remonty_zgloszenia') & REM_ZGL.STAT_REJ<>exec('status_ended','remonty_zgloszenia')
|| {? var_press('_a')=type_of('str')
   || _res:={? _a='N' || 'Odrzucenie'@ || 'Potwierdzenie'@ ?}
   || _res:=_a
   ?}
?};
_res


\rem_zas_zasob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła zwracająca nazwę/opis konkretnego typu zasobu (materiału, pojazdu, stawowsika ...)
::   WE: _a - typ zasobu (REM_ZAS.TYP)
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? _a=exec('rem_zas_typ_val_pojazdy','zasoby')
|| REM_ZAS.POJAZDY().NAZ+', '+REM_ZAS.POJAZDY().NRREJ
|? _a=exec('rem_zas_typ_val_dk_c','zasoby')
|| REM_ZAS.M().KTM+' - '+REM_ZAS.M().N+'('+REM_ZAS.DK_C().WAR01+')'
|? _a=exec('rem_zas_typ_val_m','zasoby')
|| REM_ZAS.M().KTM+' - '+REM_ZAS.M().N
|? _a=exec('rem_zas_typ_val_null','zasoby')
|| ''
|? _a=exec('rem_zas_typ_val_srsr','zasoby')
|| REM_ZAS.SRSR().NRI+' - '+REM_ZAS.SRSR().NST
|? _a=exec('rem_zas_typ_val_twrkplc','zasoby')
|| REM_ZAS.TWRKPLC().KOD+' - '+REM_ZAS.TWRKPLC().NA
|? _a=exec('rem_zas_typ_val_twrkzbr','zasoby')
|| REM_ZAS.TWRKZBR().SYMBOL+' - '+REM_ZAS.TWRKZBR().NAZWA
|| ''
?}


\rem_zas_przebieg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła zwracająca przebieg na zgłoszeniu remontowym w postaci tekstu
::   WE: _a - ilość
::       _b - dokładność
::   WY: sformatowana ilość
::----------------------------------------------------------------------------------------------------------------------
form(_a,,_b,'9,')


\rem_czyu_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Prolog funkcji pobrania czynności remontowej
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
REM_CZYU.cntx_psh();
REM_CZYU.index('NR');
REM_CZYU.prefix(_a.REM_ZGL);
REM_CZYU.first()


\rem_czyu_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Funkcja pobrania zasobu remontowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
REM_CZYU


\rem_czyu_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Epilog funkcji pobrania zasobu remontowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
REM_CZYU.cntx_pop()


\rem_czyu_wykonano
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła zwracająca informację, czy dana dana czynnośc została wykonana
::   WE: _a - REM_CZYU.WYK
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
{? _a='N' || 'Nie'@ || 'Tak'@ ?}


\rem_zgl_tel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Zwraca nr telefonu osoby na podany dzień.
::       Wartość zostanie pobrana z adresu wskazanym przez formułę exec('email','osoba') - dla zachowania
::       zgodności danych adresu email i numeru telefonu osoby
::   WE:  _a  - wskazanie na osobę
::       [_b] - data, domyślnie bieżąca
::   WY: nr tel. lub '' gdy nie znaleziono
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<=0 || _b:=date() ?};
_tel:='';
OS_ADRES.cntx_psh();
OSOBA.cntx_psh();
OSOBA.prefix();
{? OSOBA.seek(_a)
|| {? exec('szukaj','osoba','K',_b) & OS_ADRES.EMAIL<>''
   || _tel:=OS_ADRES.TEL
   ?};
   {? _tel='' & exec('szukaj','osoba','S',_b) & OS_ADRES.EMAIL<>''
   || _tel:=OS_ADRES.TEL
   ?};
   {? _tel='' & exec('szukaj','osoba','C',_b) & OS_ADRES.EMAIL<>''
   || _tel:=OS_ADRES.TEL
   ?};
   {? _tel='' & exec('szukaj','osoba','I',_b) & OS_ADRES.EMAIL<>''
   || _tel:=OS_ADRES.TEL
   ?}
?};
OSOBA.cntx_pop();
OS_ADRES.cntx_pop();
_tel


\zdnag_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Prolog funkcji pobrania zamówienia dostaw
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZD_NAG.cntx_psh();
ZD_NAG.prefix()


\zdnag_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Funkcja pobrania zamówienia dostaw
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a.ZD_NAG)=0
|| ~~
|? ZD_NAG.seek(_a.ZD_NAG,,1)
|| ZD_NAG
|| ~~
?}


\zdnag_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Epilog funkcji pobrania zamówienia dostaw
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZD_NAG.cntx_pop()


\zdpoz_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Prolog funkcji pobrania pozycji zamówienia dostaw
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_env.DOKL:=0;

ZD_POZ.cntx_psh();
ZD_POZ.index('DAM');
ZD_POZ.prefix(_a.ZD_NAG,);
{? ZD_POZ.first()
|| {!
   |? {? ZD_POZ.M().DOKL>_env.DOKL || _env.DOKL:=M.DOKL ?};
      ZD_POZ.next()
   !}
?}


\zdpoz_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Funkcja pobrania pozycji zamówienia dostaw
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZD_POZ


\zdpoz_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Epilog funkcji pobrania pozycji zamówienia dostaw
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZD_POZ.cntx_pop()


\zdnag_ilosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca ilość na zamówieniu dostawy w postaci tekstu
::   WE: _a - ilość
::   WY: sformatowana ilość
::----------------------------------------------------------------------------------------------------------------------
form(_a,,params_get().env.DOKL,'9,')


\zdnag_cena
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca cenę na zamówieniu dostawy w postaci tekstu
::   WE: _a - cena
::   WY: sformatowana cena
::----------------------------------------------------------------------------------------------------------------------
form(_a,,ST.DOKL_S,'9,')


\zdnag_wartosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca wartość na zamówieniu dostawy w postaci tekstu
::   WE: _a - wartość
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
form(_a,,2,'9,')


\zdnag_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca date na zamówieniu dostawy w postaci tekstu
::   WE: _a - data
::   WY: sformatowana data
::----------------------------------------------------------------------------------------------------------------------
{? _a<>date(0,0,0) || _a || '' ?}


\faks_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Prolog funkcji pobrania faktury
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
FAKS.cntx_psh();
FAKS.prefix()


\faks_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Funkcja pobrania faktury
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a.FAKS)=0
|| ~~
|? FAKS.seek(_a.FAKS,,1)
|| FAKS
|| ~~
?}


\faks_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Epilog funkcji pobrania faktury
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
FAKS.cntx_pop()


\faks_wartosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca wartość na fakturze w postaci tekstu
::   WE: _a - wartość
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
form(_a,,2,'9,')


\faks_cena
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca cenę na fakturze w postaci tekstu
::   WE: _a - cena
::   WY: sformatowana cena
::----------------------------------------------------------------------------------------------------------------------
form(_a,,ST.DOKL_S,'9,')


\faks_rachunek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca numer rachunku na fakturze w postaci tekstu
::   WE: _a - cena
::   WY: sformatowany numer rachunku
::----------------------------------------------------------------------------------------------------------------------
RB.get_rbtx(3,SKID_RBK.N,SKID_RBK.KRAJ().KODISO)


\faks_ilosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca ilość na pozycji dokumentu sprzedaży w postaci tekstu
::   WE: _a - ilość
::   WY: sformatowana ilość
::----------------------------------------------------------------------------------------------------------------------
form(_a,,params_get().env.DOKL,'9,')


\fap_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Prolog funkcji pobrania pozycji dokumentu sprzedaży
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_env.DOKL:=0;

FAP.cntx_psh();
FAP.index('FAP');
FAP.prefix(_a.FAKS,);
{? FAP.first()
|| {!
   |? {? FAP.M().DOKL>_env.DOKL || _env.DOKL:=M.DOKL ?};
      FAP.next()
   !}
?}


\fap_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Funkcja pobrania pozycji dokumentu sprzedaży
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
FAP


\fap_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Epilog funkcji pobrania pozycji dokumentu sprzedaży
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
FAP.cntx_pop()


\nipy_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Prolog funkcji pobrania nipów
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
NIPY.cntx_psh();
NIPY.index('SNIP');
NIPY.prefix(KH.ref)


\nipy_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Funkcja pobrania nipów
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
NIPY


\nipy_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Epilog funkcji pobrania nipów
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
NIPY.cntx_pop()


\nd_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Prolog funkcji pobrania dokumentu magazynowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh();
ND.prefix()


\nd_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Funkcja pobrania dokumentu magazynowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a.ND)=0
|| ~~
|? ND.seek(_a.ND,,1)
|| ND
|| ~~
?}


\nd_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Epilog funkcji pobrania dokumentu magazynowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_pop()


\nd_wartosc_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Formuła zwracająca wartość netto sprzedaży dokumentu magazynowego w postaci tekstu
::   WE: _a - obiekt z parametrami wywołania
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_war:=0;
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a.ref());
{? DK.first()
|| {!
   |? _war+=DK.WN;
      DK.next()
   !}
?};
DK.cntx_pop();
form(_war,,2,'9,')


\nd_wartosc_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Formuła zwracająca wartość netto sprzedaży dokumentu magazynowego w postaci tekstu
::   WE: _a - obiekt z parametrami wywołania
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_war:=0;
DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a.ref());
{? DK.first()
|| {!
   |? _war+=DK.WB;
      DK.next()
   !}
?};
DK.cntx_pop();
form(_war,,2,'9,')


\dk_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Prolog funkcji pobrania pozycji dokumentu magazynowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_env.DOKL:=0;

DK.cntx_psh();
DK.index('DOKMAG');
DK.prefix(_a.ND,);
{? DK.first()
|| {!
   |? {? DK.M().DOKL>_env.DOKL || _env.DOKL:=DK.M().DOKL ?};
      DK.next()
   !}
?}


\dk_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Funkcja pobrania pozycji dokumentu magazynowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
DK


\dk_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Epilog funkcji pobrania pozycji dokumentu magazynowego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
DK.cntx_pop()


\dk_ilosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Formuła zwracająca ilość na pozycji dokumentu magazynowego w postaci tekstu
::   WE: _a - ilość
::   WY: sformatowana ilość
::----------------------------------------------------------------------------------------------------------------------
form(_a,,params_get().env.DOKL,'9,')


\dk_cena
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Formuła zwracająca cenę na pozycji dokumentu magazynowego w postaci tekstu
::   WE: _a - cena
::   WY: sformatowana cena
::----------------------------------------------------------------------------------------------------------------------
form(_a,,ST.DOKL_C,'9,')


\dk_cenas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Formuła zwracająca cenę na pozycji dokumentu magazynowego w postaci tekstu
::   WE: _a - cena
::   WY: sformatowana cena
::----------------------------------------------------------------------------------------------------------------------
form(_a,,ST.DOKL_S,'9,')


\dk_wartosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Formuła zwracająca wartość na pozycji dokumentu magazynowego w postaci tekstu
::   WE: _a - wartość
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
form(_a,,2,'9,')


\knnag_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Prolog funkcji pobrania zamówienia dostaw
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
KN_NAG.cntx_psh();
KN_NAG.prefix()


\knnag_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Funkcja pobrania zamówienia dostaw
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a.KN_NAG)=0
|| ~~
|? KN_NAG.seek(_a.KN_NAG,,1)
|| KN_NAG
|| ~~
?}


\knnag_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Epilog funkcji pobrania zamówienia dostaw
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
KN_NAG.cntx_pop()


\knpoz_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Prolog funkcji pobrania pozycji zamówienia dostaw
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
:_env:=params_get().env;
:_env.DOKL:=0;

KN_POZ.cntx_psh();
KN_POZ.index('NAGLP');
KN_POZ.prefix(_a.KN_NAG,)


\knpoz_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Funkcja pobrania pozycji zamówienia dostaw
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
KN_POZ


\knpoz_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Epilog funkcji pobrania pozycji zamówienia dostaw
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
KN_POZ.cntx_pop()


\knpoz_polecony
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca date na zamówieniu dostawy w postaci tekstu
::   WE: _a - znacznik pismo polecone
::   WY: sformatowany znacznik pismo polecone
::----------------------------------------------------------------------------------------------------------------------
::{? _a='T' || 'polecony ' || '' ?}
{? _a='T' || form('polecony',100) || '' ?}


\knpoz_kurier
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca date na zamówieniu dostawy w postaci tekstu
::   WE: _a - znacznik kurier
::   WY: sformatowany znacznik kurier
::----------------------------------------------------------------------------------------------------------------------
::{? _a='T' || 'kurier ' || '' ?}
{? _a='T' || form('kurier',100) || '' ?}


\knpoz_priorytet
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca date na zamówieniu dostawy w postaci tekstu
::   WE: _a - znacznik priorytet
::   WY: sformatowany znacznik priorytet
::----------------------------------------------------------------------------------------------------------------------
::{? _a='T' || 'priorytetowy ' || '' ?}
{? _a='T' || form('priorytetowy',100) || '' ?}


\knpoz_paczka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca date na zamówieniu dostawy w postaci tekstu
::   WE: _a - znacznik paczka
::   WY: sformatowany znacznik paczka
::----------------------------------------------------------------------------------------------------------------------
::{? _a='T' || 'paczka ' || '' ?}
{? _a='T' || form('paczka',100) || '' ?}


\knpoz_zpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca date na zamówieniu dostawy w postaci tekstu
::   WE: _a - znacznik ZPO
::   WY: sformatowany znacznik ZPO
::----------------------------------------------------------------------------------------------------------------------
{? _a='T' || 'ZPO ' || '' ?}


\knpoz_ulica
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca ulicę w książce nadawczej
::   WE: _a - ref kontrahenta
::       _b - ulica
::   WY: sformatowana ulica
::----------------------------------------------------------------------------------------------------------------------
{? _a<>null
||
   OS_ADRES.cntx_psh();
   OS_ADRES.index('RODZAJ1');
   OS_ADRES.prefix(_a,'H');
   _ulica:={? OS_ADRES.last() || OS_ADRES.ULICA+{? OS_ADRES.DOM<>'' || ' '+form(OS_ADRES.DOM) || '' ?}+{? OS_ADRES.LOKAL<>'' || '/'+form(OS_ADRES.LOKAL) || '' ?} || _b ?};
   OS_ADRES.cntx_pop()
|| _ulica:=_b
?};
{? _ulica<>'' || form(_ulica+',',100)+' ' ?}
:{? _a<>'' || _a+', ' ?}


\knpoz_kpocz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca kod pocztowy w książce nadawczej
::   WE: _a - ref kontrahenta
::       _b - kpocz
::   WY: sformatowany kod pocztowy
::----------------------------------------------------------------------------------------------------------------------
{? _a<>null
||
   OS_ADRES.cntx_psh();
   OS_ADRES.index('RODZAJ1');
   OS_ADRES.prefix(_a,'H');
   _kpocz:={? OS_ADRES.last() || OS_ADRES.KOD || _b ?};
   OS_ADRES.cntx_pop()
|| _kpocz:=_b
?};
_kpocz


\knpoz_miasto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca miasto w książce nadawczej
::   WE: _a - ref kontrahenta
::       _b - miasto
::   WY: sformatowane miasto
::----------------------------------------------------------------------------------------------------------------------
{? _a<>null
||
   OS_ADRES.cntx_psh();
   OS_ADRES.index('RODZAJ1');
   OS_ADRES.prefix(_a,'H');
   _miasto:={? OS_ADRES.last() || {? OS_ADRES.POCZTA<>'' & OS_ADRES.POCZTA<>OS_ADRES.MIASTO || OS_ADRES.POCZTA+', ' || '' ?}+OS_ADRES.MIASTO || _b ?};
:   _miasto:={? OS_ADRES.last() || OS_ADRES.MIASTO || _b ?};
   OS_ADRES.cntx_pop()
|| _miasto:=_b
?};
_miasto


\knpoz_poczta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca pocztę w książce nadawczej
::   WE: _a - ref kontrahenta
::       _b - poczta
::   WY: sformatowana poczta
::----------------------------------------------------------------------------------------------------------------------
{? _a<>null
||
   OS_ADRES.cntx_psh();
   OS_ADRES.index('RODZAJ1');
   OS_ADRES.prefix(_a,'H');
   _poczta:={? OS_ADRES.last() || OS_ADRES.POCZTA || _b ?};
:   _poczta:={? OS_ADRES.last() || {? OS_ADRES.POCZTA<>'' & OS_ADRES.POCZTA<>OS_ADRES.MIASTO || OS_ADRES.POCZTA+', ' ?} || _b ?};
   OS_ADRES.cntx_pop()
|| _poczta:=_b
?};
_poczta


\knpoz_numerum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca numer umowy w książce nadawczej
::   WE: _a - numer umowy
::   WY: sformatowany numer umowy
::----------------------------------------------------------------------------------------------------------------------
{? _a<>'' || _a || '……………………….' ?}


\zl_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Prolog funkcji pobrania zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZL.cntx_psh();
ZL.prefix()


\zl_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Funkcja pobrania zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? ZL.seek(_a.ZL,,1)
|| ZL
|| ~~
?}


\zl_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Epilog funkcji pobrania zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZL.cntx_pop()


\zl_jorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła zwracająca nazwę jednostki organizacyjnej zlecenia produkcyjnego
::   WE: _a - Ref jedn. organizacyjnej (ZL.JORG)
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
exec('FindAndGet','#table',SLO,_a,,"'%1 — %2'[SLO.KOD,SLO.TR]",'')


\zl_stan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła zwracająca stan zlecenia produkcyjnego
::   WE: _a - stan zlecenia (ZL.STAN)
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_stan:=_a;
{? _stan='N'
|| 'W przygotowaniu'
|? _stan='O'
|| 'Otwarte'
|? _stan='Z'
|| 'Zamknięte'
|| ''
?}


\zl_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła zwracająca typ zlecenia produkcyjnego
::   WE: _a - Ref typu zlecenia (ZL.TYP)
::   WY: sformatowany wartość
::----------------------------------------------------------------------------------------------------------------------
exec('FindAndGet','#table',ZTP,_a,,"'%1 — %2'[ZTP.TYP,ZTP.OPIS]",'')


\zl_daty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła zwracająca datę lub pusty string jeżeli data zerowa dla zlecenia produkcyjnego
::   WE: _a - data
::   WY: sformatowany wartość
::----------------------------------------------------------------------------------------------------------------------
{? _a<>date(0,0,0)
|| _a
|| ''
?}


\zl_kategoria
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła zwracająca kategorię (rodzaj) zlecenia produkcyjnego
::   WE: _a - kategoria zlecenia (ZL.RODZAJ)
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_kategoria:=_a;
{? _kategoria='P'
|| 'Pojedyncze'
|? _kategoria='N'
|| 'Złożone z podzleceniami niezależnymi'
|? _kategoria='Z'
|| 'Złożone z podzleceniami na półfabrykaty'
|| ''
?}


\zl_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła zwracająca ilość do wykonania zlecenia produkcyjnego
::   WE: _a - ilość do wykonania (ZL.IL)
::       _b - ref materiału (ZL.KTM)
::   WY: sformatowany wartość
::----------------------------------------------------------------------------------------------------------------------
{? _b<>null()
|| _dokl:=exec('FindAndGet','#table',M,_b,,"M.DOKL",ST.DOKL)
|| _dokl:=ST.DOKL
?};
{? _a>0
|| form(_a,,_dokl,'9,')
|| ''
?}


\zl_jm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła zwracająca jednostkę miary dla zlecenia produkcyjnego
::   WE: a - ref materiału (ZL.KTM)
::   WY: sformatowany wartość
::----------------------------------------------------------------------------------------------------------------------
{? _a<>null()
|| _jedn:=exec('FindAndGet','#table',M,_a,,"M.J().KOD",'')
|| _jedn:=''
?}


\zl_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Formuła zwracająca dane konta kosztowego zlecenia produkcyjnego
::   WE: _a - konto kosztowe (ZL.KK)
::   WY: sformatowany wartość
::----------------------------------------------------------------------------------------------------------------------
{? _a<>null()
|| exec('FindAndGet','#table',KK,_a,,"KK.SYM+' - '+KK.NAZWA",'')
|| ''
?}


\dk_c_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Prolog funkcji pobrania atrybutów cechy dostawy
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
DK_C.cntx_psh();
{? _a.DK_C<>null()
|| DK_C.use(ref_name(_a.DK_C))
?};
DK_C.clear()


\dk_c_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Funkcja pobrania atrybutów cechy dostawy
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
_cechy:=tab_tmp(,'LP','INTEGER','Lp','NAZWA','STRING[20]','Nazwa','WARTOSC','STRING[25]','Wartość');
{? DK_C.seek(_a.DK_C,,1)
|| M_ATR.cntx_psh();
   M_ATR.clear();
   {? M_ATR.seek(DK_C.M_ATR)
   || _continue:=1;
      _ii:=1;
      {!
      |? _continue=1 & _ii<=10
      |! _ref:=($('M_ATR.SL_'+form(_ii,-2,0,'99')))();
         {? _ref<>null
         || _cechy.LP:=_ii;
            _cechy.NAZWA:=exec('FindAndGet','#table',TAT,_ref,,"TAT.NA",'');
            _cechy.WARTOSC:=($('ZL.DK_C().WAR'+form(_ii,-2,,'99')))();
            _cechy.add()
         || _continue:=0
         ?};
         _ii+=1
      !}
   ?};
   M_ATR.cntx_pop()
?};
_cechy


\dk_c_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Epilog funkcji pobrania atrybutów cechy dostawy
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
DK_C.cntx_pop()


\knpoz_nadanie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca miejsce nadania w książce nadawczej
::   WE: _a - miejsce nadania
::   WY: sformatowane miejsce nadania
::----------------------------------------------------------------------------------------------------------------------
{? _a<>'' || 'Nadano w '+_a || '' ?}


\tr_nzl_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Prolog funkcji pobrania dyspozycji transportu
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
TR_NZL.cntx_psh();
TR_NZL.prefix()


\tr_nzl_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Funkcja pobrania dyspozycji transportu
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a.TR_NZL)=0
|| ~~
|? TR_NZL.seek(_a.TR_NZL,,1)
|| TR_NZL
|| ~~
?}


\tr_nzl_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Epilog funkcji pobrania dyspozycji transportu
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
TR_NZL.cntx_pop()


\tr_zl_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Prolog funkcji pobrania pozycji dyspozycji transportu
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
TR_ZL.cntx_psh();
TR_ZL.index('POZ');
TR_ZL.prefix(_a.TR_NZL,)


\tr_zl_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Funkcja pobrania pozycji dyspozycji transportu
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
TR_ZL


\tr_zl_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Epilog funkcji pobrania pozycji dyspozycji transportu
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
TR_ZL.cntx_pop()


\tr_nzl_waga_netto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca wartość netto sprzedaży dokumentu magazynowego w postaci tekstu
::   WE: _a - obiekt z parametrami wywołania
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_wn:=0;
TR_ZL.cntx_psh();
TR_ZL.index('POZ');
TR_ZL.prefix(_a.ref);
{? TR_ZL.first()
|| {!
   |? _wn+=exec('tr_zl_waga','transport_zlec',0);
      TR_ZL.next()
   !}
?};
TR_ZL.cntx_pop();
:form(_war,,2,'9,')
_wn


\tr_nzl_miejsce_dostawy_nazwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Formuła zwracająca nazwę z miejsca dostawy w postaci tekstu
::   WE: _a - obiekt z parametrami wywołania
::   WY: sformatowana nazwa
::----------------------------------------------------------------------------------------------------------------------
_nazwa:='';
{? _a.ADDR_CHO().N='Kontrahenta'          || _nazwa:=_a.KH().NAZ_P
|? _a.ADDR_CHO().N='Odbiorcy kontrahenta' || _nazwa:=_a.KH_ODB().NAZ
|? _a.ADDR_CHO().N='Posesji'              || _nazwa:=_a.POS().KH().NAZ_P
|? _a.ADDR_CHO().N='Miejsca dostawy'      || _nazwa:=_a.KH_MSC().NAZ
|? _a.ADDR_CHO().N='Magazynu'             || _nazwa:=_a.MG().NAZ
|? _a.ADDR_CHO().N='Składowiska'          || _nazwa:=_a.WYS().NAZ
?};
_nazwa


\rek_n_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Prolog funkcji pobrania reklamacji
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
REK_N.cntx_psh();
REK_N.prefix()


\rek_n_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Funkcja pobrania reklamacji
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a.REK_N)=0
|| ~~
|? REK_N.seek(_a.REK_N,,1)
|| REK_N
|| ~~
?}


\rek_n_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Epilog funkcji pobrania reklamaci
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
REK_N.cntx_pop()


\slownie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Kwota słownie
::   WE: _a - kwota
::----------------------------------------------------------------------------------------------------------------------
_slownie:=STR.kwota_sł(_a);
_slownie:=(~(1+_slownie))+(1-_slownie)


\platnosc_kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Formuła zwracająca opis sposobu płatności - kod
::   WE: _a - SLO.ref()
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
exec('FindAndGet','#table',SLO,_a,,"SLO.KOD",'')


\platnosc_nazwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Formuła zwracająca opis sposobu płatności - nazwa
::   WE: _a - SLO.ref()
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
exec('FindAndGet','#table',SLO,_a,,"SLO.TR",'')


\zkn_uwagi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Uwagi
::   WE: _a - ZK_N
::----------------------------------------------------------------------------------------------------------------------
_a.OP


\form_date
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Formatowanie daty dla wydruku
::----------------------------------------------------------------------------------------------------------------------
gsub(form(_a,,3),'/','-')


\ofe_war_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Wartość w walucie
::   WE: _a - OFE.ref()
::       _b - 0/1 - netto/brutto
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
OFP.cntx_psh();
OFP.index('OFE');
OFP.prefix(_a);
{? OFP.first()
||
   {!|?
      exec('ae_ofpww','ceny_dok',,1);
      _wyn+={? _b || OFP.WB || OFP.WN ?};
      OFP.next()
   !}
?};
OFP.cntx_pop();
$_wyn


\nd_user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Dokument wystawił
::   WE: _a - ND.ref()
::       _b - 0/1 - netto/brutto
::----------------------------------------------------------------------------------------------------------------------
USERS.cntx_psh();
_szer:=20;
_wyn:={? ND.US<>null || ND.US().DANE || _szer*'.' ?};
USERS.cntx_pop();
_wyn


\projekty_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Prolog funkcji pobrania faktury
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY.cntx_psh();
PROJEKTY.prefix()


\projekty_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Funkcja pobrania faktury
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY


\projekty_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Epilog funkcji pobrania faktury
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY.cntx_pop()


\pr_kos_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Prolog funkcji pobrania faktury
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
PR_KOS.cntx_psh();
PR_KOS.index('PR_KOS_P');
PR_KOS.prefix(_a.PROJEKTY,);
PR_KOS.first()


\pr_kos_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Funkcja pobrania faktury
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
PR_KOS


\pr_kos_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Epilog funkcji pobrania faktury
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
PR_KOS.cntx_pop()


\projekty_e_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Prolog funkcji pobrania faktury
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? PROJEKTY.f_active() || PROJEKTY.f_clear() ?};
PROJEKTY.cntx_psh();
PROJEKTY.prefix();
PROJEKTY.seek(_a.PROJEKTY);
_rodzic:=PROJEKTY.RODZIC;
_kol:=PROJEKTY.POZ_PROJ*PROJEKTY.KOL;
PROJEKTY.cntx_pop();
PROJEKTY.cntx_psh();
PROJEKTY.index('KOL');
PROJEKTY.prefix(REF.FIRMA,_rodzic,_kol);
PROJEKTY.first()


\projekty_e_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Funkcja pobrania faktury
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY


\projekty_e_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Epilog funkcji pobrania faktury
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY.cntx_pop();
params_set(params_get());
_env:=params_get().env_prj;
grp_disp(PROJEKTY,cur_win(1),1)


\osoba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Formuła zwracająca dane osoby
::   WE: _a - HAN.ref()
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
exec('FindAndGet','#table',OSOBA,_a,,"'%1 %2'[OSOBA.PIERWSZE,OSOBA.NAZWISKO]",'')


\kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Formuła zwracająca dane konta kosztowego
::   WE: _a - KK.ref()
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
{? _b='NAZWA'
|| exec('FindAndGet','#table',KK,_a,,"'%1'[KK.NAZWA]",'')
|? _b='SYM'
|| exec('FindAndGet','#table',KK,_a,,"'%1'[KK.SYM]",'')
|| ''
?}


\mat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Formuła zwracająca dane indeksu
::   WE: _a - KK.ref()
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
{? _b='KTM'
|| exec('FindAndGet','#table',M,_a,,"'%1'[M.KTM]",'')
|? _b='N'
|| exec('FindAndGet','#table',M,_a,,"'%1'[M.N]",'')
|| ''
?}


\zgh_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Prolog funkcji pobrania przewodnika zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZGH.cntx_psh();
BADSEH.cntx_psh();
ZGH.prefix()


\zgh_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Funkcja pobrania przewodnika zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? ZGH.seek(_a.ZGH,,1)
|| ZGH
|| ~~
?}


\zgh_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Epilog funkcji przewodnika pobrania zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZGH.cntx_pop();
BADSEH.cntx_pop()


\zgh_stan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca stan przewodnika zlecenia produkcyjnego
::   WE: _a - stan przewodnika (ZGH.STAN)
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_stan:=_a;
{? _stan='N'
|| 'Dostępny'@
|? _stan='T'
|| 'Oddany'@
|? _stan='K'
|| 'Skorygowany do zera'@
|| ''
?}


\zgh_diag_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca diagram przebiegu dla przewodnika zlecenia produkcyjnego.
::   WE: _a - obiekt z parametrami wywołania
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_res:=~~;
{? _a=ZGH & ZGH.DIAG_OP<>null()
|| _res:='ZGH.DIAG_OP'
?};
_res


\zgh_datetime_format
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła podczytująca pola typu data/czas dla pozycji/nagłówka przewodnika zlecenia produkcyjnego.
::   WE: _a - pole typu data/czas tabeli ZGP/ZGH
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? type_of(_a)=type_of(date())
|| {? _a<>date(0,0,0)
   || _res:=_a
   ?}
|? type_of(_a)=type_of(time)
|| {? _a<>time(0,0,0)
   || _res:=_a
   ?}
?};
_res


\zgh_il_format
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła podczytująca ilości dla nagłówka przewodnika zlecenia produkcyjnego.
::   WE: _a - ilość (pola ILNPRZ,ILGEN,ILWYK tabeli ZGH)
::       _b - ZL.ref()
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
{? _b<>null()
|| _dokl:=exec('FindAndGet','#table',ZL,_b,,"ZL.KTM().DOKL",ST.DOKL_P)
|| _dokl:=ST.DOKL_P
?};
form(_a,,_dokl,'9,')


\zgp_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Prolog funkcji pobrania pozycji przewodnika zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZGP.cntx_psh();
ZGP.index('NRPRZ');
ZGP.prefix(_a.ZGH);
ZGP.first()


\zgp_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Funkcja pobrania pozycji przewodnika zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZGP


\zgp_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Epilog funkcji pozycji przewodnika pobrania zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZGP.cntx_pop()


\zgp_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca typ pozycji przewodnika zlecenia produkcyjnego
::   WE: _a - typ pozycji przewodnika (ZGP.WEW)
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
{? _typ='N'
|| 'Kooperacja'@
|? _typ='T'
|| 'Operacja wewnętrzna'@
|| ''
?}


\zgp_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca status pozycji przewodnika zlecenia produkcyjnego
::   WE: _a - status pozycji przewodnika (ZGP.STATUS)
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
{? _typ=exec('status_new','zl_guide')
|| 'Nowa'@
|? _typ=exec('status_pending','zl_guide')
|| 'Wykonywana'@
|? _typ=exec('status_waiting','zl_guide')
|| 'Oczekująca'@
|? _typ=exec('status_end','zl_guide')
|| 'Zakończona'@
|| ''
?}


\zgp_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca listę poprzedników pozycji przewodnika zlecenia produkcyjnego.
::   WE: _a - obiekt z parametrami wywołania
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_pop:='';
NASZGP.cntx_psh();
NASZGP.index('NASTOP');
NASZGP.prefix(_a.ref());
{? NASZGP.first()
|| ZGP.cntx_psh();
   ZGP.prefix();
   {!
   |?
      _pop+=$NASZGP.OPER().NRP+',';
      NASZGP.next()
   !};
   ZGP.cntx_pop()
?};
NASZGP.cntx_pop();
_pop:=_pop-1;
{? _pop='' || _pop:='brak'@ ?};
_pop


\zgp_nas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca listę poprzedników pozycji przewodnika zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_nas:='';
NASZGP.cntx_psh();
NASZGP.index('OPNAST');
NASZGP.prefix(_a.ref());
{? NASZGP.first()
|| {!
   |?
      _nas+=NASZGP.SCIEZKA+',';
      NASZGP.next()
   !}
?};
NASZGP.cntx_pop();
_nas:=_nas-1;
{? _nas='' || _nas:='brak'@ ?};
_nas


\zgp_zlozona
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca nazwę operacji złożonej dla pozycji przewodnika zlecenia produkcyjnego.
::   WE: _a - obiekt z parametrami wywołania
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_naz:='';
{? _tab.TOPER<>null()
|| TOPER.cntx_psh();
   _mask:=ref_name(_tab.TOPER);
   {? TOPER.name()<>_mask || TOPER.use(_mask) ?};
   TOPER.prefix();
   {? _tab.TOPER().NRNOP<>0
   || TOPER.index('UNROP');
      TOPER.prefix(_tab.TOPER().NRNOP);
      {? TOPER.first()
      || _nrop:=_tab.TOPER().NRNOP;
         {!
         |?
            TOPER.prefix(_nrop);
            {? TOPER.first()
            ||  _naz:=form(TOPER.NROP)+'.'+TOPER.NA+'/'+_naz;
               _nrop:=TOPER.NRNOP;
               TOPER.NRNOP<>0
            || 0
            ?}
         !}
     ?}
   ?};
   TOPER.cntx_pop()
?};
_naz:=_naz-1;
{? _naz='' || _naz:='Brak'@ ?};
_naz


\zgp_nmtime
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła podczytująca normę czasową/maszynowa dla pozycji przewodnika zlecenia produkcyjnego.
::   WE: _a - norma czasowa/mazsynowa (ZGP.NTIME/ZGP.MTIME)
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_timedok:=exec('get','#params',500604,1);
form(_a,,_timedok)


\zgp_uwagi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca uwagi dla pozycji przewodnika zlecenia produkcyjnego.
::   WE: _a - obiekt z parametrami wywołania
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_uwagi:={? _tab.WEW='N' || 'Operacja zewnętrzna'@ || '' ?};
_uwagi


\zlim_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Prolog funkcji pobrania surowców zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZLIM.cntx_psh();
exec('openmask','zl_common',_a.ZL);
_ndx_tmp:=ZLIM.ndx_tmp(,1,'ZLEC','',0,'ZGP','NRZLP',,'ZGP','NRP',,'LIMIT',,1,'SO',,1,'KTM','KTM',0);
ZLIM.index(_ndx_tmp);
{? var_pres('ZGH',_a)>0 & _a.ZGH<>null()
|| ZLIM.prefix(_a.ZL,_a.ZGH)
|| ZLIM.prefix(_a.ZL)
?};
ZLIM.first()


\zlim_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Funkcja pobrania surowców zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZLIM


\zlim_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Epilog funkcji pobrania surowców zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZLIM.cntx_pop()


\zlim_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca typ surowca zlecenia produkcyjnego
::   WE: _a - limit/nielimit (ZLIM.LIMIT)
::       _b - surowiec/odpad (ZLIM.SO)
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_limit:=_a;
_so:=_b;
{? _limit='N'
|| 'Nielimit'@
|? _so='O'
|| 'Odpad/koprodukt'@
|? _so='S'
|| 'Limit'@
|| ''
?}


\zlim_lil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca limit ilościowy dla surowca zlecenia produkcyjnego
::   WE: _a - ilość do wykonania (ZLIM.LIL)
::       _b - surowiec/odpad (ZLIM.SO)
::   WY: sformatowany wartość
::----------------------------------------------------------------------------------------------------------------------
_lil:=_a;
_so:=_b;
{? _lil<>0
|| form({? _so='O' || -1 || 1 ?}*_lil,,ST.DOKL)
|| ''
?}


\badseh_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Prolog funkcji pobrania zestawu badań
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
BADSEH.cntx_psh();
BADSEH.prefix()


\badseh_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Funkcja pobrania zestawu badań
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ZGH',_a)>0 & _a.ZGH<>null()
|| _badania:=tab_tmp(2,
      'NROP','INTEGER','Nr operacji',
      'N','STRING[60]','Nazwa',
      'AKT','STRING[1]','Aktywny',
      'ATEST','STRING[1]','Atest',
      'TYP','STRING[1]','Typ zestawu',
      'TYP_OP','STRING[20]','Typ zestawu badań operacyjnych',
      'PARAMS','SYS_MEMO','Opis parametrów',
      'PARAMS_E','SYS_MEMO','Opis parametrów (szczegółowy)'
   );
   ZGP.cntx_psh();
   ZGP.prefix();
   _rodzaj:='';
   {? var_pres('RODZ',_a)>0 & _a.RODZ<>'' || _rodzaj:=_a.RODZ  ?};
   _sort:='NRP';
   _from:='';
   _where:='NRPRZ=:_a ';
   _where+={? _rodzaj='K'
           || 'and (ZGP.BADSEH is not null)'
           |? _rodzaj='O'
           || 'and (ZGP.BAD_OP is not null)'
           || 'and (ZGP.BADSEH is not null or ZGP.BAD_OP is not null)'
           ?};
   ZGP.f_set(_sort,_from,_where,_a.ZGH);
   {? ZGP.f_first()
   || BADSEH.cntx_psh();
      BADSEH.prefix();
      {!
      |?
         {? _rodzaj<>'O' & ZGP.BADSEH<>null()
         || ZGP.BADSEH();
            exec('badseh_bad_tab_add','szablon_log',_badania)
         ?};
         {? _rodzaj<>'K' & ZGP.BAD_OP<>null()
         || ZGP.BAD_OP();
            exec('badseh_bad_tab_add','szablon_log',_badania)
         ?};
         ZGP.f_next()
      !};
      BADSEH.cntx_pop()
   ?};
   ZGP.cntx_pop();
   {? ZGP.f_active() || ZGP.f_clear() ?};
   _badania
|| {? BADSEH.seek(_a.BADSEH,,1)
   || BADSEH
   || ~~
   ?}
?}


\badseh_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Epilog funkcji pobrania zestawu badań
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
BADSEH.cntx_pop()


\badseh_bad_tab_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Dodaje rekord do tabeli badań. Działa na aktualnym rekordzie ZGP i BADSEH
::   WE: _a - tabela, do której dodować rekordy
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_tab.N:=BADSEH.N;
_tab.AKT:=BADSEH.AKT;
_tab.ATEST:=BADSEH.ATEST;
_tab.TYP:=BADSEH.TYP;
_tab.NROP:=ZGP.NRP;
{? _tab.add()
|| _params_tab:=exec('badseh_params_info','szablon_log');
   _tab.memo_set(_params_tab.PARAMS,'PARAMS');
   _tab.memo_put(,'PARAMS');
   _tab.memo_set(_params_tab.PARAMS_E,'PARAMS_E');
   _tab.memo_put(,'PARAMS_E')
?};
~~


\badseh_params_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Zwraca informacje o parametrach badania. Działa na aktualnym rekordzie BADSEH
::   WE: [_a] - tabela,z ktorej pobierać dane (domyślnie BADSEH)
::   WY: obiekt _result o polach: 'PARAMS' - opis podstawowy, 'PARMAS_E' - opisz szczegółowy
::----------------------------------------------------------------------------------------------------------------------
_tab:={? var_pres('_a')>0 || _a || BADSEH ?};
_result:=obj_new('PARAMS','PARAMS_E');
_result.PARAMS:=_result.PARAMS_E:='';
{? type_of(_tab)=type_of(BADSEH)
|| BADSEP.cntx_psh();
   BADSEP.index('SEHPAR_');
   BADSEP.prefix(BADSEH.ref());
   {? BADSEP.first()
   || {!
      |?
         _nazwa:=BADSEP.BADPAR().N;
         _typ:=exec('badsep_par_typ','szablon_log',BADSEP.BADPAR().TYP);
         _src:=BADSEP.SOURCE;
         _norma:=exec('badsep_norma','szablon_log',BADSEP);
         _default:=exec('badsep_domyslna','szablon_log',BADSEP);
::         _str:='Nazwa: %1, Typ: %2'@[_nazwa,_typ]+{? _src<>'' || ', Źródło pomiaru: %1'@[_src] || '' ?};
         _str:='%1 (%2)'@[_nazwa,-_typ]+{? _src<>'' || ', Źródło pomiaru: %1'@[_src] || '' ?};
         _result.PARAMS+=_str+'; ';
         _str+={? _norma<>'' || ', Norma: %1'@[_norma] || '' ?};
         _str+={? _default<>'' || ', Wartość domyślna: %1'@[_default] || '' ?};
         _result.PARAMS_E+=_str+'; ';
         BADSEP.next()
      !};
      _result.PARAMS:=_result.PARAMS-2;
      _result.PARAMS_E:=_result.PARAMS_E-2
   ?};
   BADSEP.cntx_pop()
?};
_result


\badseh_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca typ zestawu badań
::   WE: _a - typ badania (BADSEH.TYP)
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
{? _typ='M'
|| 'Magazynowy'@
|? _typ='O'
|| 'Operacyjny'@
|| ''
?}


\badseh_value
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca wartość pola przekazanego w parametrze
::   WE: _a - obiekt z parametrami wywołania
::       _b - STRING - akronim pola
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
{? var_pres(_b,_a)>0
|| {? _b='PARAMS' | _b='PARAMS_E'
   || _a.memo_txt(,1,_b)
   || _form:='_a.'+_b;
      ($_form)(_a)
   ?}
|| ''
?}


\badsep_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Prolog funkcji pobrania pozycji zestawu badań
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
BADSEP.cntx_psh();
BADSEP.index('SEHPAR_');
BADSEP.prefix(_a.BADSEH);
BADSEP.first()


\badsep_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Funkcja pobrania pozycji zestawu badań
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
BADSEP


\badsep_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Epilog funkcji pobrania pozycji zestawu badań
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
BADSEP.cntx_pop()


\badsep_par_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca typ parametru dla pozycji zestawu badań
::   WE: _a - typ badania (BADSEP.BADPAR().TYP)
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
{? _typ='R'
|| 'Liczba'@
|? _typ='D'
|| 'Data'@
|? _typ='S'
|| 'Tekst'@
|? _typ='P'
|| 'Procent'@
|? _typ='W'
|| 'Tak/Nie'@
|| ''
?}


\badsep_norma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca zakres wartości norm dla pozycji zestawu badań
::   WE: _a - tabela BADSEP
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_norma:='';
_typ:=_tab.BADPAR().TYP;
{? _typ='R' | _typ='P'
|| {? _tab.VALLOW<>0 | _tab.VALHIGH<>0
   || _norma:='Od: %1 do %2'@[form(_tab.VALLOW),form(_tab.VALHIGH)]
   ?}
|? _typ='W'
|| {? _tab.VALTN='T'
   || _norma:='Tak'@
   || _norma:='Nie'@
   ?}
?};
_norma


\badsep_domyslna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca wartość domyślną dla pozycji zestawu badań
::   WE: _a - tabela BADSEP
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_val:=_a.DEF_VAL;
_typ:=_tab.BADPAR().TYP;
{? _typ='D' & _tab.DEF_CURD='T'
|| _val:='Aktualna data %1 dni'@[{? _tab.DEF_DNI<0 || '-' || '+' ?}+$_tab.DEF_DNI]
?};
_val


\badsep_cykl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Formuła zwracająca informację o cykliczności dla pozycji zestawu badań
::   WE: _a - tabela BADSEP
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_cykl:='';
{? _tab.CYKL_CO='T'
|| 'Co określoną ilość (%1)'@[$_tab.IL_CO]
|| 'Nie'@
?}


\img
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Formuła zwracająca obrazek
::   WE: _a - ref
::   WY: sformatowana wartość
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>118 || return(~~) ?};
{? _a=FAP |_a=OFP | _a=ZD_POZ | _a=ZK_P | _a=REK_N | _a=TR_ZL
|| {? _a.M=null() || return(~~) ?};
   _a.M();
   {? M.RYS=null() || return(~~) ?};
   'M.RYS'
|| ~~
?}


\kh_adres_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: 'adres' lub 'adres nr domu' lub 'adres nr domu/nr lokalu'
::   WE: _a - alias tabeli KH - zakładamy, że stoimy na odpowiednim rekordzie
::----------------------------------------------------------------------------------------------------------------------
_adres:='';
{? type_of(_a)=type_of(SYSLOG) & _a=KH
|| _adres:=exec('adr','faktury_wydruk',_a.UL,_a.DOM,_a.LOKAL,_a.MIASTO,_a.POCZ)
?};
_adres


\kh_kpocz_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: '99-999 MIASTO' lub '99-999 POCZTA, MIASTO'
::   WE: _a - alias tabeli KH - zakładamy, że stoimy na odpowiednim rekordzie
::----------------------------------------------------------------------------------------------------------------------
_adres:='';
{? type_of(_a)=type_of(SYSLOG) & _a=KH
|| _adres:=exec('kpocz','faktury_wydruk',_a.KPOCZ,_a.POCZ,_a.MIASTO,_a.UL)
?};
_adres


\parwyd_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Prolog
::----------------------------------------------------------------------------------------------------------------------
PARWYD.cntx_psh();
PARWYD.index('USER');
PARWYD.prefix(OPERATOR.USER);
PARWYD.first()


\parwyd_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Tabela
::----------------------------------------------------------------------------------------------------------------------
PARWYD


\parwyd_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Epilog
::----------------------------------------------------------------------------------------------------------------------
PARWYD.cntx_pop()


\zl_wyr_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Prolog funkcji pobrania produktów zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZL_WYR.cntx_psh();
ZL_WYR.index('ZL');
ZL_WYR.prefix(_a.ZL);
ZL_WYR.first()


\zl_wyr_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Funkcja pobrania produktów zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZL_WYR


\zl_wyr_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Epilog funkcji pobrania produktów zlecenia produkcyjnego
::   WE: _a - obiekt z parametrami wywołania
::----------------------------------------------------------------------------------------------------------------------
ZL_WYR.cntx_pop()


:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 085cb079d476d48e89e20e1b638f657f0852766a97475085a09aad3d9f9c661356095dd155dfc36e86d5e693a7a8872b1ae20530276d0a15b9ad8bca911be1431872918f76d19869590a2734048d13dfccc547d2678e67983697ce6e63c7335c24e9a6de28acf4b0d2c2ec6f49cd0876ca05e45561ed1ab85ec60c833fb6564f
