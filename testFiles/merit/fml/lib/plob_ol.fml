:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: plob_ol.fml
:: Utworzony: 18.04.2018
:: Autor: TMR
::======================================================================================================================
:: Zawartość: Formuły do obsługi tabeli definicji obiektu lokalizacji
::======================================================================================================================


\getForm4Acr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: EJ [2015]
:: OPIS: Funkcja pobiera formułę do wykonania wg parametryzacji formuł dla obiektów i aktywnego powiązania
::   WE: _a [STRING] - akronim pola, z którego formuła ma być pobrana
::   WY: treść formuły lub pusty string
::  OLD: \spr_trf/obs_spsk.fml
::----------------------------------------------------------------------------------------------------------------------
_result:='';
_acr:={? var_pres('_a')=type_of('') || _a || return(_result) ?};

PLOB_OL.cntx_psh();
PLOB_OL.index('AKT');
PLOB_OL.prefix(exec('ref_firma','#firma'),'T');
{? var_pres(_acr,PLOB_OL)>0 & PLOB_OL.first()
|| _result:=($('PLOB_OL.'+_acr+'().TRESC'))()
?};
PLOB_OL.cntx_pop();
_result


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Dodaje rekord do tabeli PLOB_OL
::   WE: _a [STRING]    - akronim tabeli
::       _b [REFERENCE] - formuła na dodawanie obiektów
::       _c [REFERENCE] - formuła na usuwanie obiektów
::       _d [REFERENCE] - formuła na aktualizację obiektów
::       _e [REFERENCE] - formuła na obiekt domyślny
::       _f [REFERENCE] - formuła na pracowników w obiekcie
::   WY: ref/null
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
    _tab:={? var_pres('_a')=type_of('') & +_a || _a || return(_result) ?};
  _f_dod:={? var_pres('_b')=type_of(null())   || _b || null()          ?};
  _f_dez:={? var_pres('_c')=type_of(null())   || _c || null()          ?};
  _f_akt:={? var_pres('_d')=type_of(null())   || _d || null()          ?};
_f_obdom:={? var_pres('_e')=type_of(null())   || _e || null()          ?};
 _f_prac:={? var_pres('_f')=type_of(null())   || _f || null()          ?};

_firma:=exec('ref_firma','#firma');
PLOB_OL.cntx_psh();
PLOB_OL.index('UNIQUE');
PLOB_OL.prefix(_firma,_tab,);
{? PLOB_OL.first()
|| _result:=PLOB_OL.ref()
|| PLOB_OL.blank();
   PLOB_OL.FIRMA:=_firma;
   PLOB_OL.TAB:=_tab;
   PLOB_OL.F_PRAC:=_f_prac;
   PLOB_OL.F_DOD:=_f_dod;
   PLOB_OL.F_DEZ:=_f_dez;
   PLOB_OL.F_AKT:=_f_akt;
   PLOB_OL.F_OBDOM:=_f_obdom;
   PLOB_OL.AKT:='N';
   {? PLOB_OL.add()
   || _result:=PLOB_OL.ref()
   ?}
?};
PLOB_OL.cntx_pop();
_result


\aktywuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Funkcja dezaktywująca definicję obiektu lokalizacji oraz lokalizacje powiązane z obiektem definicji
::   WE: _a [REFERENCE] - wskazanie na definicję obiektu lokalizacji PLOB_OL
::       _b [NUMBER]    - czy aktywować utworzone lokalizacje
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
    _ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};
_lok_akt:={? var_pres('_b')=type_of(0)      || _b || 0               ?};
exec('aktywuj_dezaktywuj','plob_ol',_ref,'T',_lok_akt)


\dezaktywuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Funkcja dezaktywująca definicję obiektu lokalizacji oraz lokalizacje powiązane z obiektem definicji
::   WE: _a [REFERENCE] - wskazanie na definicję obiektu lokalizacji PLOB_OL
::       _b [NUMBER]    - czy dezaktywować utworzone lokalizacje
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
    _ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};
_lok_akt:={? var_pres('_b')=type_of(0)      || _b || 0               ?};
exec('aktywuj_dezaktywuj','plob_ol',_ref,'N',_lok_akt)


\aktywuj_dezaktywuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Dezaktywuje/Aktywuje definicję obiektu lokalizacji
::   WE: _a [REFERENCE] - wskazanie na definicję obiektu lokalizacji
::       _b [STRING]    - akcja: 'T' - aktywuje, 'N' - dezaktywuje obiekt lokalizacji
::       _c [NUMBER]    - czy aktywować/dezaktywować utworzone lokalizacje
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
    _ref:={? var_pres('_a')=type_of(null())   || _a || return(_result) ?};
  _akcja:={? var_pres('_b')=type_of('')       || _b || return(_result) ?};
_lok_akt:={? var_pres('_c')=type_of(0) & _c>0 || _c || 0               ?};

{? _akcja<>'T' & _akcja<>'N' || return(_result) ?};

_firma:=exec('ref_firma','#firma');
PLOB_OL.cntx_psh();
PLOB_OL.index('UNIQUE');
PLOB_OL.prefix();
{? PLOB_OL.seek(_ref)
|| {? PLOB_OL.AKT=_akcja
   || _result:=1
   || {? _akcja='N' | (_akcja='T' & ~exec('existActiv','plob_ol'))
      || PLOB_OL.AKT:=_akcja;
         _result:=PLOB_OL.put();
         {? _result & _lok_akt
         || PLOB_L.cntx_psh();
            PLOB_L.index('UNIQUE');
            PLOB_L.prefix(_firma,PLOB_OL.ref());
            {? PLOB_L.first()
            || {!
               |? exec('aktywuj_dezaktywuj','plob_l',PLOB_L.ref(),_akcja);
                  PLOB_L.next()
               !}
            ?};
            PLOB_L.cntx_pop()
         ?}
      ?}
   ?}
?};
PLOB_OL.cntx_pop();
_result


\exist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.42]
:: OPIS: Funkcja sprawdza czy istnieje jakakolwiek definicja dla firmy
::   WE:
::   WY: ref/null
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
_firma:=exec('ref_firma','#firma');
PLOB_OL.cntx_psh();
PLOB_OL.index('UNIQUE');
PLOB_OL.prefix(_firma);
{? PLOB_OL.first()
|| _result:=PLOB_OL.ref()
?};
PLOB_OL.cntx_pop();
_result


\existActiv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Funkcja sprawdza czy istnieje aktywna definicja obiektu do planowania
::   WE:
::   WY: ref/null
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
_firma:=exec('ref_firma','#firma');
PLOB_OL.cntx_psh();
PLOB_OL.index('AKT');
PLOB_OL.prefix(_firma,'T');
{? PLOB_OL.first()
|| _result:=PLOB_OL.ref()
?};
PLOB_OL.cntx_pop();
_result


\existUnique
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Funkcja sprawdza czy już istnieje definicja obiektu do planowania na unikalnym indexie
::   WE: _a - [STRING] - wartość pola TAB
::   WY: ref/null
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
_tab:={? var_pres('_a')=type_of('') || _a || return(_result) ?};

_firma:=exec('ref_firma','#firma');
PLOB_OL.cntx_psh();
PLOB_OL.index('UNIQUE');
PLOB_OL.prefix(_firma,_tab,);
{? PLOB_OL.first()
|| _result:=PLOB_OL.ref()
?};
PLOB_OL.cntx_pop();
_result


\existActivMsg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Zwraca komunikat informujący o istnieniu innej aktywnej definicji
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Istnieje już inna aktywna definicja obiektu lokalizacji.'@


\delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Kasuje podany rekord tabeli PLOB_OL (wykonywane w transakcji!!!)
::   WE: _a - PLOB_OL.ref()
::   WY: >0 -wyczyszczone,
::      <=0 -niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};

:: jeżeli transakcja została zerwana, to nie ma sensu przetwarzać formuły
{? do_state()=2 || return(-100) ?};

_can_continue:=1;

:: założenie transakcji
_mydo:=do_state()=0;
{? _mydo || do() ?};

PLOB_OL.cntx_psh(); PLOB_OL.clear();
{? PLOB_OL.seek(_ref)
|| {? exec('clean','plob_ol',_ref)>0
   || {? PLOB_OL.del(,1)>0
      || _result:=1
      || undo();
         _result:=-3
      ?}
   || _result:=-2
   ?}
|| _result:=0
?};
PLOB_OL.cntx_pop();

{? _result<0
|| undo()
?};
{? _mydo || end() ?};
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Czysci powiazania do rekordu tabeli PLOB_OL
::   WE: _a - PLOB_OL.ref()
::   WY: >0 -wyczyszczone,
::       <=0 -niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};

{? do_state()=2 || return(-100) ?};

_can_continue:=1;
:: założenie transakcji
_mydo:=do_state()=0;
{? _mydo || do() ?};

:: --- powiązania do ---
_can_continue:=exec('delete4','plob_l',_ref);

:: --- wszystkie powiazania usuniete? ---
{? _can_continue>0
|| _result:=1
|| undo()
?};

{? _mydo || end() ?};
_result


\plob_ol_tab_system
::----------------------------------------------------------------------------------------------------------------------
::  UTW: EJ [2015]
::  MOD: TMR [18.22]
:: OPIS: Funkcja na F3 w PLOB_OL.TAB
::----------------------------------------------------------------------------------------------------------------------
_result:=PLOB_OL.TAB;
_tab:=exec('tab_system','plob_ol');
_win:=_tab.mk_sel('Tabela'@,,,'#plob_ol_tabsym',,,,,'U');
_tab.win_sel(_win);
_tab.win_fld(_win,,'ACR');
_tab.win_act(_win,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);

{? _tab.first()
|| {? _tab.select() || _result:=_tab.ACR || '' ?}
|| FUN.emsg('Brak tabel w słowniku.'@)
?};
_result


\tab_system
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Formuła zwraca tabele znajdujące się w definicji systemu
::   WE: [_a] [STRING] - napis w postaci 'ACR1, ACR2' zawierający akronimy tabel do dodania (opcjonalny)
::   WY: [DICT]
::----------------------------------------------------------------------------------------------------------------------
_acrToAdd:={? var_pres('_a')=type_of('') || _a || '' ?};

_tab:=tab_tmp(1,'ACR','STRING[20]','Akronim'@);
{! _num:=1.. tab_num
|! _acr:=tab_acr(_num);
   {? _acr<>'MEMO' & tab_real(_num) & (_acrToAdd='' | (',%1,'[_acrToAdd])*(',%1,'[_acr]))
   || _tab.blank();
      _tab.ACR:=_acr;
      _tab.add(1)
   ?}
!};
_tab


\plob_ol_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Akcja "Dołącz" przed dla okienka wertowania WER
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PLOB_OL.cntx_psh();
PLOB_OL.index('UNIQUE');
PLOB_OL.prefix();
PLOB_OL.blank();
PLOB_OL.win_edit('RED');
{? PLOB_OL.edit("exec('check_record','plob_ol','add')")
|| PLOB_OL.add()
?};
PLOB_OL.cntx_pop();
~~


\plob_ol_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Akcja "Popraw" przed dla okienka wertowania WER
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PLOB_OL.win_edit('RED');
PLOB_OL.fld_fml('TAB','BEFORE_EDIT',"0");
{? PLOB_OL.edit("exec('check_record','plob_ol','put')")
|| PLOB_OL.put()
?};
PLOB_OL.fld_fml('TAB','BEFORE_EDIT',"*");
~~


\plob_ol_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Akcja "Usuń" przed dla okienka wertowania WER
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? FUN.ask('Usunięcie definicji obiektu lokalizacji spowoduje usunięcie \n'
           'wszystkich obiektów lokalizacji utworzonych na jej podstawie.'@+'\n\n'+
           'Czy usunąć wybraną definicję obiektu lokalizacji?'@)
|| _result:=exec('delete','plob_ol',PLOB_OL.ref())
?};
_result


\plob_ol_aktywuj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Akcja "Aktywuj" przed dla okienka wertowania "WER"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? PLOB_OL.AKT='T'
|| FUN.info('Wybrana definicja obiektu lokalizacji jest już aktywna.'@)
|| _wyn:=FUN.choice('Czy aktywować definicję obiektu lokalizacji?'@,,
                    'Tak - tylko &definicję'@,'Tak - razem z &lokalizacjami'@,,,'Nie'@);
   {? _wyn
   ||  _ref:=exec('existActiv','plob_ol');
      {? _ref & _ref<>PLOB_OL.ref()
      || FUN.emsg(exec('existActivMsg','plob_ol'))
      || exec('aktywuj','plob_ol',PLOB_OL.ref(),_wyn=2)
      ?}
   ?}
?};
~~


\plob_ol_dezakt_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Akcja "Dezaktywuj" przed dla okienka wertowania "WER"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? PLOB_OL.AKT='N'
|| FUN.info('Wybrana definicja obiektu lokalizacji nie jest aktywna.'@)
|| _wyn:=FUN.choice('Czy dezaktywować definicję obiektu lokalizacji?'@,,
                    'Tak - tylko &definicję'@,'Tak - razem z &lokalizacjami'@,,,'Nie'@);
   {? _wyn
   || exec('dezaktywuj','plob_ol',PLOB_OL.ref(),_wyn=2)
   ?}
?};
~~


\plob_ol_wer_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Rekord przed okienka "WER"
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_akc:='';
{? PLOB_OL.sel_size()=0
|| _akc:={? PLOB_OL.AKT='T' || 'A' || 'E' ?}
?};
PLOB_OL.actions_grayed('WER',_akc);
{? PLOB_OL.AKT='T' || Color.fnd_kol('PLOB_OL#01#01') ?}


\check_record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Formuła sprawdzająca rekord
::   WE:  _a  [STRING] - akcja po której następuje sprawdzenie
::       [_b] [NUMBER] - czy pomijać komunikaty?
::   WY: ''/akronim pola
::----------------------------------------------------------------------------------------------------------------------
_result:='';
 _akcja:={? var_pres('_a')=type_of('') || _a || return(_result) ?};
_no_msg:={? var_pres('_b')=type_of(0)  || _b || ~~              ?};

_result:=__CHK.record(PLOB_OL,_no_msg,'TAB','F_PRAC');
{? _result='' & PLOB_OL.AKT='T'
|| _ref:=exec('existActiv','plob_ol');
   {? _akcja='add' & _ref
   || _result:='AKT'
   |? _akcja='put' & _ref & _ref<>PLOB_OL.ref()
   || _result:='AKT'
   ?};
   {? _result='AKT'
   || FUN.emsg(exec('existActivMsg','plob_ol'))
   ?}
?};
:: sprawdzić czy podana tabela jest poprawną
{? _result=''
|| {? ~exec('tab_system','plob_ol',PLOB_OL.TAB).first()
   || FUN.emsg('Pole "Obiekt lokalizacji" nie wskazuje na tabelę z definicji systemu.'@);
      _result:={? _akcja='add' || 'TAB' || '' ?}
   ?}
?};
:: sprawdzamy czy pole z formułą jest poprawnie wypełnione
{? _result=''
|| PLOB_FO.cntx_psh();
   {? _result='' & exec('valid_formula','#field',PLOB_OL.F_DOD().TRESC)=0
   || _result:='F_DOD'
   ?};
   {? _result='' & exec('valid_formula','#field',PLOB_OL.F_AKT().TRESC)=0
   || _result:='F_AKT'
   ?};
   {? _result='' & exec('valid_formula','#field',PLOB_OL.F_DEZ().TRESC)=0
   || _result:='F_DEZ'
   ?};
   {? _result='' & exec('valid_formula','#field',PLOB_OL.F_OBDOM().TRESC)=0
   || _result:='F_OBDOM'
   ?};
   {? _result='' & exec('valid_formula','#field',PLOB_OL.F_PRAC().TRESC)=0
   || _result:='F_PRAC'
   ?};
   PLOB_FO.cntx_pop()
?};
_result


\plob_ol_legenda_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Akcja "Legenda" przed dla okna "WER" tabeli PLOB_OL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('legenda','color','PLOB_OL#01')

:Sign Version 2.0 jowisz:1028 2019/06/07 15:59:57 35714dfbc897387a7f9250e2c3abb7fe59b809a5b4cd9c0c7329f359b73e8f99cf70c75717fbe22e1fffec95b9761608f536a79e7467c6c553dddf68035c22a7549b37e116ecf3802651b7b87013a98465377cb582beba73c825632271a1e3899f224cbbe639c3319a22a7b144027309a87ba271028987625938a85cf05b0c70
