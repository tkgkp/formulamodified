:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: sklad.fml
:: Utworzony: 06.03.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Skład celny
::======================================================================================================================


\daj_cn_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Przed wyswietl dla pola sckrs zmiennej dopz
::   WE: _a - M.ref
::       _b - data
::       _c - rodzaj wyniku 1 - CN.KOD, 2 - CN.OPIS, wpw - CN.ref
::   WY: CN.ref
::----------------------------------------------------------------------------------------------------------------------
CN.cntx_psh();
CNM.cntx_psh();
_wyn:=obj_new(3);
_wyn[1]:=null;
_wyn[2]:='';
_wyn[3]:='';

{? var_pres('_c')<0 || _c:=0 ?};

CNM.index('MCN');
CNM.prefix(_a);

{? CNM.first
|| {!
   |? {? (CNM.DATA_OD<=_b & _b<=CNM.DATA_DO) | (CNM.DATA_OD<=_b & date(0,0,0)=CNM.DATA_DO)
      || _wyn[2]:=CNM.CN().KOD;
         _wyn[3]:=CNM.CN().OPIS;
         _wyn[1]:=CNM.CN
      ?};
      _wyn[1]=null & CNM.next()
   !}
?};

CNM.cntx_pop();
CN.cntx_pop();
{? _c=1
|| _wyn[2]
|? _c=2
|| _wyn[3]
|| _wyn[1]
?}


\uzup_cnm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: uzupełnia kod CN dla materiału
::   WE: _a-M.ref
::       _b-CN.ref
::       _d-data
::----------------------------------------------------------------------------------------------------------------------
{? _b & exec('daj_cn_ref','sklad',_a,_c)<>_b
||
   _wyj:=0;

   CNM.cntx_psh;
   CNM.index('M'); CNM.prefix(_a,_c);
   _wyj:=CNM.first;
   CNM.cntx_pop;
   {? _wyj || return ?};

   {? FUN.ask('Dopisać kod CN do listy kodów materiału?'@)
   ||
      CNM.cntx_psh;
      CNM.index('M'); CNM.prefix(_a);
      CNM.M:=_a;
      CNM.CN:=_b;
      CNM.DATA_OD:=_c;
      CNM.DATA_DO:=date(0,0,0);
      {? CNM.add & CNM.next
      ||
         _do:=CNM.DATA_OD-1;
         {? CNM.prev || CNM.DATA_DO:=_do; CNM.put ?}
      ?};
      _do:=CNM.DATA_OD-1;

      {? CNM.prev
      ||
         {? CNM.DATA_DO=date(0,0,0) | CNM.DATA_DO>_do
         ||
            CNM.DATA_DO:=_do;
            CNM.put
         ?}
      ?};
      CNM.cntx_pop
   ?}
?}


\cnm_pokaz_cn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Rekord przed dla tabeli TAB_SQL
::   WE: [_a] - ref M
::       [_b] - 0 bez okienka 1 (domyslnie) z okienkiem
::----------------------------------------------------------------------------------------------------------------------
{? HELP.REFMAT<>null || M.seek(HELP.REFMAT) ?};

{? _>=1 || {? type_of(_a)<>7 || _a:=M.ref() ?} || _a:=M.ref() ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

M.cntx_psh();
M.prefix();
{? M.seek(_a)
|| CNM.index('M');
   CNM.prefix(M.ref);
   {? _b || CNM.select() ?}
|? _b
|| FUN.info('Błąd, nie odnaleziono materiału.'@)
?};
M.cntx_pop()


\cnm_ba_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: przed akcja Dolacz dla tabeli CNM
::----------------------------------------------------------------------------------------------------------------------
CNM.cntx_psh();
CNM.win_edit('RED');
CNM.blank();
CNM.edit("exec('cnm_ae','sklad')");
CNM.cntx_pop()


\cnm_bl_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: BLANK dla pola M tabeli CNM
::----------------------------------------------------------------------------------------------------------------------
M.ref


\cnm_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: rekord po dla tabeli CNM
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_wyn:=__CHK.record(CNM,,'CN','DATA_OD');
{? _wyn='' & CNM.DATA_DO<>date(0,0,0) & CNM.DATA_DO<CNM.DATA_OD
|| FUN.info('Należy podać prawidłowy zakres okresu obowiązywania.'@);
   _wyn:='DATA_OD'
|? _wyn=''
|| CNM.cntx_psh();
   exec('START','sklad');
   _OHCL:=obj_new(@.CLASS.O_HIST,'CNM');
   _OHCL.INDEX('M');
   _OHCL.PREFIX('CNM.M');
   {? -(1+menu_txt())='d'
   || _wyn:=_OHCL.Add('DATA_OD','DATA_DO')
   |? -(1+menu_txt())='p'
   || _wyn:=_OHCL.Put('DATA_OD','DATA_DO')
   ?};
   CNM.cntx_pop()
?};
_wyn


\cnm_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: rekord przed dla tabeli CNM
::----------------------------------------------------------------------------------------------------------------------
exec('rekprzed','color','CNM#01')


\kcn_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Akcja przed usun. Kontrola powiazan powiadomien. Tabela KCN.
::----------------------------------------------------------------------------------------------------------------------
{? CN.count>0
|| FUN.info('Z wybranym kodem CN powiązano dokumenty.\nUsunięcie niemożliwe.'@);
   0
|| 1
?}


\kcn_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Formula po akcji Rekord. Kontrola wypelnienia pol dla tabeli kodow CN. Tabela KCN.
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_wyn:=__CHK.record(CN,,'KOD','OPIS');
{? _wyn=''
|| _kod:=CN.KOD;
   _ref:=null;
   {? -(1+menu_txt())='p'
   || _ref:=CN.ref()
   ?};
   CN.cntx_psh();
   CN.index('KOD');
   CN.prefix();
   {? CN.find_key(_kod,_kod)
   || {? -(1+menu_txt())='d'
      || FUN.info('Istnieje kod CN: %1.\nDodanie rekordu niemożliwe.'@[_kod]);
         _wyn:='KOD'
      |? -(1+menu_txt())='p' & _ref<>CN.ref()
      || FUN.info('Istnieje kod CN %1.\nEdycja rekordu niemożliwa.'@[_kod]);
         _wyn:='KOD'
      ?}
   ?};
   {? _wyn='' & +CN.KOD<8
   || FUN.info('Kod CN powinien mieć długość co najmniej 8 znaków.'@);
      _wyn:='KOD'
   ?};
   CN.cntx_pop()
?};
_wyn


\cn_jm_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: przed redakcja CN.JM
::----------------------------------------------------------------------------------------------------------------------
JM.win_dict('WER');
JM.f_clear()


\START
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Deklaracja klasy O_HIST
::----------------------------------------------------------------------------------------------------------------------
exec(,'_misc');
{? var_pres( 'O_HIST', @.CLASS ) < 0 || exec( 'O_HIST', 'sklad' ) ?}


\O_HIST
::======================================================================================================================
:: Zawartosc: Formuly do obslugi ...
::
::            Obiekt służy do obsługi akcji "Rekord Po" dla tabel realizujących historię
::            (daty: od, do). Sprawdza wypełnienie pól oraz poprawność zakresu dat.
::
::            Data ostatniej zmiany: 2007-10-19
::
::            Założenia:
::            - w tabeli znajdują się dwa pola typu DATE; akronimy tych pól przekazywane
::            są do metody AE w kolejności "OD", "DO".
::
::            Deklaracja klasy:
::            exec( 'START' ,'sklad' )
::
::            Powołanie obiektu klasy:
::            OHIST := obj_new( @.CLASS.O_HIST, DBF_ACR )
::
::            Metody:
::            INDEX(akr)
::            definiuje indeks po którym ma następować sprawdzenie zakresu dat.
::
::            PREFIX( fld1 [, fld2 [, ...]] )
::            definiuje dzidzinę, dla której ma następować sprawdzenie zakresu
::            dat.  FLDn - kolejne akronimy. Efektem działania jest funkcja
::            do wywołania, zapisana w polu ffld2prfx.
::
::            Put( akrod, akrdo )
::            Add( akrod, akrdo )
::            główna metoda realizująca akcję "Rekord Po".
::            Parametry:
::            akrod - akronim pola przechowującego datę OD
::            akrdo - akronim pola przechowującego datę DO
::
::            ODZX( obj, zas, cntx, tab, [od], [do], [dzx1], [dzx2] )
::======================================================================================================================
obj_decl( 'O_HIST',

   obj_fld( 'SELF', '' ),
   obj_fld( 'tab', '' ),
   obj_fld( 'idx', '' ),
   obj_fld( 'ffld2prfx', '' ),
   obj_fld( 'odzx', ~~ ),
   obj_fld( 'MS', ~~ ),

   obj_meth( '__init',"
_a.MS := obj_new(@.CLASS.MISC);
_a.odzx := obj_new(9);
{! _i := 1 .. 9 |! _a.odzx[_i] := ~~ !};
{? _a.MS.table( _b ) > 0
|| _a.SELF := _a;
   _a.tab := _b
|| .Error( '__init', '#3', 'TAB' )
?}", type_of('') ),

   obj_meth( '__init', ".Error( '__init', '#1' )", -1 ),

   obj_meth( 'INDEX',"
.idx := '';
{? .tab = ''
|| .Error( 'INDEX', '#4' )
|? ($.tab)().ndx_no(_a) = 0
|| .Error( 'INDEX', '#3', 'IDX' )
|| .idx := _a
?}", type_of('') ),

   obj_meth( 'PREFIX',"
{? .tab = ''
|| .Error( 'PREFIX', '#4' )
|? .idx = ''
|| .Error( 'PREFIX', '#5' )
|| _error := 0;
   {! _nra := 1 .._
   |? _error = 0
   |! _fld := _[_nra];
      {? type_of(_fld) <> type_of('')
      || .Error( 'PREFIX', '#2', 'FLD' + $_nra );
         _error += 1
      || .ffld2prfx += _fld + ','
      ?}
   !};
   {? _error > 0
   || .ffld2prfx := ''
   || .ffld2prfx := .tab + '.prefix(' + (.ffld2prfx-1) + ')';
      on_error(3);
      {| ($.tab)()
      |! cntx_psh();
         index(.idx);
         ($.ffld2prfx)();
         cntx_pop()
      |};
      {? in_error()
      || .Error( 'PREFIX', '#7' );
         .ffld2prfx := ''
      ?}
   ?}
?}" ),

   obj_meth( 'Put',"
_odp := 0;
{? .tab = ''
|| .Error( 'Put', '#4' )
|? .idx = ''
|| .Error( 'Put', '#5' )
|? .ffld2prfx = ''
|| .Error( 'Put', '#6' )
|? ~.MS.tab_acr( .tab, _a )
|| .Error( 'Put', '#3', 'OD' )
|? ~.MS.tab_acr( .tab, _b )
|| .Error( 'Put', '#3', 'DO' )
|| _odp := exec( 'run', 'sklad', .SELF, 0, _a, _b )
?};
_odp ", type_of(''), type_of('') ),

   obj_meth( 'Add',"
_odp := 0;
{? .tab = ''
|| .Error( 'Add', '#4' )
|? .idx = ''
|| .Error( 'Add', '#5' )
|? .ffld2prfx = ''
|| .Error( 'Add', '#6' )
|? ~.MS.tab_acr( .tab, _a )
|| .Error( 'Add', '#3', 'OD' )
|? ~.MS.tab_acr( .tab, _b )
|| .Error( 'Add', '#3', 'DO' )
|| _odp := exec( 'run', 'sklad', .SELF, 1, _a, _b )
?};
_odp ", type_of(''), type_of('') ),

   obj_meth( 'ODZX', "
{? _ < 4 | _ > 8
|| .Error( 'ODZX', '#1' )
|? type_of(_a) <> var_pres('O_DZX',@.CLASS)
|| .Error( 'ODZX', '#2', 'OBJ' )
|? type_of(_b) <> type_of('')
|| .Error( 'ODZX', '#2', 'ZAS' )
|? _b <> 'LL' & _b <> 'BD' & _b <> 'OS'
|| .Error( 'ODZX', '#3', 'ZAS' )
|? _tp := obj_new(6);
   {! _nr := 1 .. obj_len(_tp)
   |! _tp[_nr] := {? _nr + 2 <= _ || _[ _nr + 2 ] || ~~ ?}
   !};
   _a.par_ok( _tp, 'xxx' + _b )
|| .odzx[1] := _a;
   .odzx[2] := _b;
   {! _nr := 1 .. obj_len(_tp)
   |! .odzx[_nr+2] := _tp[_nr]
   !};
   1
?}" ),

   obj_meth( 'Error', "
{? _b = '#1' || _b := 'Nieprawidłowa liczba argumentów.'
|? _b = '#2' || _b := 'Nieprawidłowy typ argumentu ' + _c + ' .'
|? _b = '#3' || _b := 'Nieprawidłowa wartość argumentu ' + _c + ' .'
|? _b = '#4'
|| _b := 'Nie zdefiniowany akronim tabeli głównej!\n' +
         'Błędnie zainicjowany obiekt.'
|? _b = '#5'
|| _b := 'Nie zdefiniowany indeks działania.\n' +
         'Nie wywołana metoda INDEX lub\n' +
         'wywołana z błędnymi parametrami.'
|? _b = '#6'
|| _b := 'Nie zdefiniowana dziedzina działania!\n' +
         'Nie wywołana metoda PREFIX lub\n' +
         'wywołana z błędnymi parametrami.'
|? _b = '#7'
|| _b := 'Argumenty nie tworzą poprawnEGO prefix-u!'
?};
FUN.info( 'Klasa obiektu:  ' + form( 'O_HIST', 10 ) + '\n' +
          'Metoda:  ' + form( _a, 10 ) + '\n\n' + _b);
~~
" )
           )

\run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ? [--.--]
:: OPIS: ?
::   WE: ?
::   WY: zgodnie z komunikatami na końcu funkcji
::----------------------------------------------------------------------------------------------------------------------
_self := _a;
_add := _b;
_acrod := _c;
_acrdo := _d;
:
_err := 0;
do();
_odname := _self.tab + '.' + _acrod;
_doname := _self.tab + '.' + _acrdo;
{| ($_self.tab)()
|! _d0 := date(0,0,0);
   _od := ($_odname)();
   _do := ($_doname)();
   {? _do = _d0 | _od <= _do
   || _ref := ref();
      _konflikt := 0;
      _daty := '';
      cntx_psh();
      index(_self.idx);
      ($_self.ffld2prfx)();
      _dalej := first();
      {!
      |? _dalej
      |! _OD := ($_odname)();
         _DO := ($_doname)();
:        Porówniję z samym sobą (Popraw)
         {? ~_add & _ref = ref()
         || _ok := 1
:        Porównywany przedział jest zamknięty, wstawiany - zamknięty
:        i mają część wspólną
         |? _DO <> _d0 & _do <> _d0 &
            ( ( _od >= _OD & _od <= _DO ) | ( _do >= _OD & _do <= _DO ) )
         || _ok := 0
:        Porównywany przedział jest zamknięty, wstawiany - otwarty
:        i wstawiany zaczyna się wcześniej
         |? _DO <> _d0 & _do = _d0 & _od <= _DO
         || _ok := 0
:        Porównywany przedział jest otwarty, wstawiany - otwarty
:        i wstawiany zaczyna się wcześniej
         |? _DO = _d0 & _do = _d0 & _od <= _OD
         || _ok := 0
:        Porównywany przedział jest otwarty, wstawiany - zamknięty
:        i wstawiany obejmuje początek porównywanego
         |? _DO = _d0 & _do <> _d0 & _OD >= _od & _OD <= _do
         || _ok := 0
         || _ok := 1
         ?};
         {? ~_ok
         || _konflikt += 1;
            _daty += '(' + $($_odname)() + ' - ' + $($_doname)() + ')' +
               {? _konflikt%*4 = 0 || '\n' || '' ?}
         ?};
         _dalej := next()
      !};
      {? +_daty
      || _err := -1;
         undo()
      || {? _do = _d0
         || {? find_ge( _od )
            || {? ~_add & _ref = ref()
               || {? next()
                  || _do := ($_odname)()-1
                  ?}
               || _do := ($_odname)()-1
               ?}
            ?}
         ?};
         last();
:        Ewentualne zakończenie poprzedniego rekordu
         {? ($_doname)() = date(0,0,0) & ($_odname)() < _od
         || ($_doname)() := _od - 1;
            {? type_of(_self.odzx[1]) = 0
            || put()
            || _s := '_a.Put' + _self.odzx[2] + '(_b,_c,_d,_e,_f,_g)';
               ($_s)( _self.odzx[1],
                  _self.odzx[3], _self.odzx[4],
                  _self.odzx[5], _self.odzx[6],
                  _self.odzx[7], _self.odzx[8])
            ?}
         ?}
      ?};
      cntx_pop();
      ($_doname)() := _do;
      {? type_of(_self.odzx[1]) = 0
      || {? _add || add() || put() ?}
      || _s := '_a.' + {? _add || 'Add' || 'Put' ?}
            + _self.odzx[2] + '(_b,_c,_d,_e,_f,_g)';
            ($_s)( _self.odzx[1],
               _self.odzx[3], _self.odzx[4],
               _self.odzx[5], _self.odzx[6],
               _self.odzx[7], _self.odzx[8])
      ?}
   || _err := -2;
      undo()
   ?}
|};
{? end()
|| _odp := ~~
|| {? _err = -1
   || FUN.info( 'Daty obowiązywania nie mogą się nakładać!\n%1'@[_daty]);
      _odp := _acrod
   |? _err = -2
   || FUN.info( 'Data "%1" nie może być wcześniejsza niż "%2"!'@[_acrod,_sym]);
      _odp := _acrod
   || FUN.info( 'Próba zapisu nie powiodła się.\nWszystkie zmiany wycofane.'@);
      _odp := 0
   ?}
?};
_odp


\cnm_be_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: rekord przed dla tabeli CNM
::----------------------------------------------------------------------------------------------------------------------
{? (date()<=CNM.DATA_DO & date()>=CNM.DATA_OD) | (date(0,0,0)=CNM.DATA_DO & date()>=CNM.DATA_OD)
|| 'CNM#01#01'
|| 'CNM#01#02'
?}


\kcn_ba_clo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Akcja przed menu stawki celne. Tabela KCN.
::----------------------------------------------------------------------------------------------------------------------
CLO.index('CNKPDOD');
CLO.prefix(CN.ref);
BEER.KP:='';
CLO.select()


\kcn_ba_towar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Akcja przed menu towary. Tabela KCN.
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
CN.cntx_psh();
VAR_DEL.delete('TAB_SQL');
TAB_SQL:=sql(' select M.KTM, M.N,M.REFERENCE as REFM, CNM.DATA_OD, CNM.DATA_DO, ''A'' as A from CNM '+
             '     join M   using(CNM.M  ,  M.REFERENCE) '+
             '     join CN  using(CNM.CN , CN.REFERENCE) '+
             ' where CN.REFERENCE = '':_a'' ',BB.refsql(CN.ref),date(),date(0,0,0) );

data_zm:=date(0,0,0);
kocn_zm:='';

_zmg:=" undefine();
        define('DATA',date(),'Przenieść z datą:');
        define('CN','','Przenieść na kod CN');
        {? def_edit()
        || data_zm:=DEFINE.DATA;
           kocn_zm:=DEFINE.CN
        ?};
        undefine()
      ";

_zm:=" CN.cntx_psh();
       _ok:=1;
       {? TAB_SQL.A='T'
       || {? TAB_SQL.sel_size=0
          || undefine();
             define('DATA',date(),'Przenieść z datą:');
             define('CN','','Przenieść na kod CN');
             {? def_edit()
             || data_zm:=DEFINE.DATA;
                kocn_zm:=DEFINE.CN
             ?}
          ?};
          {? kocn_zm<>'' & data_zm<>date(0,0,0)
          || CN.cntx_psh();
             CN.index('KOD');
             {? CN.find_key(kocn_zm)
             || _ref_cn:=CN.ref()
             || _ref_cn:=null;
                FUN.info('Nie znaleziono kodu CN %1.\nOperacja anulowana.'@[kocn_zm]);
                _ok:=0
             ?};
             CN.cntx_pop();
             {? _ok
             || M.clear();
                {? _ref_cn<>null & M.seek(TAB_SQL.REFM)
                || do();
                   CNM.index('MCN');
                   CNM.prefix();
                   {? CNM.find_key(M.ref,CN.ref)
                   || CNM.DATA_DO:=data_zm-1;
                      CNM.put();
                      CNM.prefix();
                      CNM.blank();
                      CNM.M:=M.ref();
                      CNM.CN:=_ref_cn;
                      CNM.DATA_OD:=data_zm;
                      CNM.add();
                      TAB_SQL.DATA_DO:=data_zm-1;
                      TAB_SQL.put();
                      win_disp()
                   ?};
                   end()
                ?}
             ?}
          || 1
          ?};
          undefine()
       ?};
       CN.cntx_pop()
     ";
_ak:=" _odp:=FUN.choice('Które kody wyświetlić?'@,,'Wszystkie'@,'Aktualnie powiązane'@);
       {? _odp=2
       || TAB_SQL.prefix('T')
       |? _odp=1
       || TAB_SQL.prefix()
       ?}
     ";
_af:=" _pref:=TAB_SQL.cur_prfx;
       TAB_SQL.prefix();
       {? TAB_SQL.first()
       || {! |? {? (TAB_SQL.DATA_OD<=date() & TAB_SQL.DATA_DO>=date())
                     |(TAB_SQL.DATA_OD<=date() & TAB_SQL.DATA_DO=date(0,0,0))
                   || TAB_SQL.A:='T'
                   || TAB_SQL.A:='N'
                ?};
                TAB_SQL.put();
                TAB_SQL.next()
          !}
       ?};
     ($('TAB_SQL.prefix('+_pref+')'))();
     win_disp()
     ";
TAB_SQL.for_each(" {? (TAB_SQL.DATA_OD<=date() & TAB_SQL.DATA_DO>=date())
                     |(TAB_SQL.DATA_OD<=date() & TAB_SQL.DATA_DO=date(0,0,0))
                   || TAB_SQL.A:='T'
                   || TAB_SQL.A:='N'
                   ?};
                   TAB_SQL.put
                ");
TAB_SQL.index(TAB_SQL.ndx_tmp(,,'A',,));
TAB_SQL.prefix('T');
_win:= TAB_SQL.mk_sel('Materiały aktualnie przypisane do CN: %1'@[CN.KOD]);
TAB_SQL.win_fld(_win,,'KTM',,,30,,,'KTM materiału'@);
TAB_SQL.win_fld(_win,,'N',,,60,,,'Nazwa materiału'@);
TAB_SQL.win_fld(_win,,'DATA_OD',,,10,,,'Data od'@);
TAB_SQL.win_fld(_win,,'DATA_DO',,,10,,,'Data do'@);
TAB_SQL.win_act(_win,0,'Rekord',,,,"{? (TAB_SQL.DATA_OD<=date() & TAB_SQL.DATA_DO>=date())
                                       |(TAB_SQL.DATA_OD<=date() & TAB_SQL.DATA_DO=date(0,0,0)) || 1 || 0?}");
TAB_SQL.win_act(_win,1,'Formuła','Aktualne/Wszystkie'@@,,,_ak,,,,);
TAB_SQL.win_act(_win,0,'Formuła','Aktualne/Wszystkie'@@,,,_ak,,,,);
::{? ND_Z.R_LOCK='N' || TAB_SQL.win_act(_win,,'Formuła','Zmień CN'@,,,_zm,_af,,1,_zmg) ?};
TAB_SQL.win_sel(_win);
TAB_SQL.select();
VAR_DEL.delete('TAB_SQL');
&data_zm;
&kocn_zm;
CN.cntx_pop();
M.cntx_pop()


\clo_ba_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: przed akcja Dolacz dla tabeli CLO
::----------------------------------------------------------------------------------------------------------------------
CLO.cntx_psh();
CLO.prefix();
CLO.win_edit('RED');
CLO.blank();
{? CLO.edit("exec('clo_ae','sklad')")
|| 1
?};
CLO.cntx_pop()


\clo_ba_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: przed akcja Dolacz dla tabeli CLO
::----------------------------------------------------------------------------------------------------------------------
CLO.cntx_psh();
CLO.win_edit('RED');
CLO.edit("exec('clo_ae','sklad')");
CLO.cntx_pop()


\cnm_ba_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: przed akcja Dolacz dla tabeli CNM
::----------------------------------------------------------------------------------------------------------------------
CNM.cntx_psh();
CNM.win_edit('RED');
{? CNM.edit("exec('cnm_ae','sklad')")
|| 1
?};
CNM.cntx_pop()


\cnm_ba_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: przed usun dla rekordu tabeli CNM
::----------------------------------------------------------------------------------------------------------------------
{? CNM.count>0
|| FUN.info('Z wybranym rekordem istnieją powiązania .\nUsunięcie niemożliwe.'@);
   0
|| 1
?}


\clo_ba_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: przed usun dla rekordu tabeli CLO
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? CLO.count()>0
|| FUN.info('Z wybraną stawką celną powiązano dokumenty.\nUsunięcie niemożliwe.'@);
   0
|| 1
?}


\clo_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: rekord po dla tabeli CLO
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_wyn:=__CHK.record(CLO,,'KP','DATA_OD');
{? _wyn='' & CLO.CLO<0
|| FUN.info('Cło nie może być mniejsze od zera.'@);
   _wyn:='CLO'
?};
{? _wyn='' & CLO.DATA_DO<>date(0,0,0) & CLO.DATA_DO<CLO.DATA_OD
|| FUN.info('Należy podać prawidłowy zakres okresu obowiązywania.'@);
   _wyn:='DATA_OD'
|? _wyn=''
|| CLO.cntx_psh();
   exec('START','sklad');
   _OHCL:=obj_new(@.CLASS.O_HIST,'CLO');
   _OHCL.INDEX('CNKPDOD');
   _OHCL.PREFIX('CLO.CN','CLO.KP','CLO.KP');
   {? -(1+menu_txt())='d'
   || _wyn:=_OHCL.Add('DATA_OD','DATA_DO')
   |? -(1+menu_txt())='p'
   || _wyn:=_OHCL.Put('DATA_OD','DATA_DO')
   ?};
   CLO.cntx_pop()
?};
_wyn


\clo_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: rekord przed dla tabeli CLO
::----------------------------------------------------------------------------------------------------------------------
exec('rekprzed','color','CLO#01')


\clo_be_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: rekord przed dla tabeli CLO warunek
::----------------------------------------------------------------------------------------------------------------------
{? (date()<=CLO.DATA_DO & date()>=CLO.DATA_OD) | (date(0,0,0)=CLO.DATA_DO & date()>=CLO.DATA_OD)
|| 'CLO#01#04'
|| 'CLO#01#03'
?}


\clo_bl_cn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: BLANK dla pola CN tabeli CLO
::   WY: CN.ref
::----------------------------------------------------------------------------------------------------------------------
CN.ref()


\clo_bl_kp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: BLANK dla pola KP tabeli CLO
::   WY: Kraj pochodzenia
::----------------------------------------------------------------------------------------------------------------------
{? type_of(cur_tab)>0 & cur_tab=DK & DK.N().TYP().P='N'
|| DK.KP
|| BEER.KP
?}


\clo_be_kp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: przed redakcja pola KP tabeli CLl
::----------------------------------------------------------------------------------------------------------------------
BEER.KP=''


\clo_kp_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: F3 dla pola KP tabeli CLO
::----------------------------------------------------------------------------------------------------------------------
exec('slownik','intrastat','007',CLO.KP)


\daj_clo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Przed wyswietl dla pola sckrs zmiennej dopz
::   WE: _a - M.ref
::       _b - data
::       _c - kraj pochodzenia
::       _d - kod CN
::   WY: CLO.ref
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;

M.prefix();
{? M.seek(_a)
|| CLO.index('CNKPDOD');
   CN.index('KOD');
   CN.prefix();
   {? CN.find_key(_d) & _c<>''
   || CLO.prefix(CN.ref,_c);
      {? CLO.last()
      || _ok:=0;
         {! |? {? CLO.DATA_OD<=_b & CLO.DATA_DO>=_b | CLO.DATA_OD<=_b & CLO.DATA_DO=date(0,0,0)
               || _ok:=1;
                  _wyn:=CLO.ref()
               ?};
               ~_ok & CLO.prev()
         !}
      ?}
   ?}
?};

_wyn


\poz_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Akcja przed usun. Kontrola powiazan pozwolen.
::----------------------------------------------------------------------------------------------------------------------
{? SCPOZ.count>0
|| FUN.info('Z wybranym pozwoleniem powiązano dokumenty.\nUsunięcie niemożliwe.'@);
   0
|| 1
?}


\poz_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Formula po akcji Rekord. Kontrola wypelnienia pol dla tabeli pozwolen - tab. SCPOZ
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_wyn:=__CHK.record(SCPOZ,,'SYM','DATA');
{? _wyn=''
|| _sym:=SCPOZ.SYM;
   _ref:=null;
   {? -(1+menu_txt())='p'
   || _ref:=SCPOZ.ref()
   ?};
   SCPOZ.cntx_psh();
   SCPOZ.index('SYM');
   SCPOZ.prefix();
   {? SCPOZ.find_key(_sym,_sym)
   || {? -(1+menu_txt())='d'
      || FUN.info('Istnieje już pozwolenie o symbolu %1.\nDodanie rekordu niemożliwe.'@[_sym]);
         _wyn:='SYM'
      |? -(1+menu_txt())='p' & _ref <> SCPOZ.ref()
      || FUN.info('Istnieje już pozwolenie o symbolu %1.\nEdycja rekordu niemożliwa.'@[_sym]);
         _wyn:='SYM'
      ?}
   ?};
   SCPOZ.cntx_pop()
?};
_wyn


\pow_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Akcja przed usun. Kontrola powiazan powiadomien.
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? SCPOW.count>0
|| FUN.info('Z wybranym powiadomieniem powiązano dokumenty.\nUsunięcie niemożliwe.'@);
   0
|| 1
?}


\pow_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Formuła po akcji Rekord. Kontrola wypelnienia pol dla tabeli pozwolen - tab. SCPOW
::   WY: Pole do poprawy lub ''
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_wyn:=__CHK.record(SCPOW,,'SYM','DATA');
{? _wyn=''
|| _sym:=SCPOW.SYM;
   _ref:=null;
   {? -(1+menu_txt())='p'
   || _ref:=SCPOW.ref()
   ?};
   SCPOW.cntx_psh();
   SCPOW.index('SYM');
   SCPOW.prefix();
   {? SCPOW.find_key(_sym,_sym)
   || {? -(1+menu_txt())='d'
      || FUN.info('Istnieje już powiadomienie o symbolu %1.\nDodanie rekordu niemożliwe.'@[_sym]);
         _wyn:='SYM'
      |? -(1+menu_txt())='p' & _ref<>SCPOW.ref()
      || FUN.info('Istnieje już powiadomienie o symbolu %1.\nEdycja rekordu niemożliwa.'@[_sym]);
         _wyn:='SYM'
      ?}
   ?};
   SCPOW.cntx_pop()
?};
_wyn


\bd_dpoz_scwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Przed wyswietl dla pola scwal zmiennej dopz
::----------------------------------------------------------------------------------------------------------------------
DPOZ.SCWAL:=DK.N().SCWAL().KOD;
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 6600b54d65201644e74ffcddf143ed3c837f13dcc206a02af6e717558a2e86f59ee3cb3b6750111cb6191a38c5b44e7e6252c3f474fa01ab404bad28ed3b58bf56497891a591a3c7c8f2eb4fe9a1a56964046115d7ba41aa624f84e3e7e6d3845903e897ad45fb433fdeb20020e8ea2f15b577e3ee11dec0f9cb41eb9c7baacf
