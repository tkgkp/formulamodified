:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: umowy_aneks.fml
:: Utworzony: 09.01.2019
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Formuły do obsługi aneksów do umów
::======================================================================================================================


\okr_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009+]
:: OPIS: zwraca date rozpoczecia lub date zakonczenia okresu
::   WE: _a - (1) data rozpoczecia (2) data zakonczenia pierwszego mc dla biezacego okresu (3) data zakonczenia okresu
::       _b - sposob fakturowania
::       _c - numer okresu
::       _d - rok
::   WY: data rozpoczecia lub date zakonczenia okresu
::  OLD: \okr_data/funkc_zl.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=date();
{? _a=1
||
   {? _b='M'
   ||
      _wyn:=date(_d,_c,1)
   |? _b='K'
   ||
      _mies:={? _c=1 || 1 |? _c=2 || 4 |? _c=3 || 7 |? _c=4 || 10 ?};
      _wyn:=date(_d,_mies,1)
   |? _b='P'
   ||
      _mies:={? _c=1 || 1 |? _c=2 || 7 ?};
      _wyn:=date(_d,_mies,1)
   |? _b='R'
   ||
      _wyn:=date(_d,1,1)
   ||  _wyn:=date(_d,_c,1)
   ?};
   _wyn
|? _a=2
||
   {? _b='M'
   ||
      _wyn:=date(_d,_c,0)
   |? _b='K'
   ||
      _mies:={? _c=1 || 1 |? _c=2 || 4 |? _c=3 || 7 |? _c=4 || 10 ?};
      _wyn:=date(_d,_mies,0)
   |? _b='P'
   ||
      _mies:={? _c=1 || 1 |? _c=2 || 7 ?};
      _wyn:=date(_d,_mies,0)
   |? _b='R'
   ||
      _wyn:=date(_d,1,0)
   ||
      _wyn:=date(_d,_c,0)
   ?};
   _wyn
|? _a=3
||
   {? _b='M'
   ||
      _wyn:=date(_d,_c,0)
   |? _b='K'
   ||
      _mies:={? _c=1 || 3 |? _c=2 || 6 |? _c=3 || 9 |? _c=4 || 12 ?};
      _wyn:=date(_d,_mies,0)
   |? _b='P'
   ||
      _mies:={? _c=1 || 6 |? _c=2 || 12 ?};
      _wyn:=date(_d,_mies,0)
   |? _b='R'
   ||
      _wyn:=date(_d,12,0)
   ||
      _wyn:=date(_d,_c,0)
   ?}
?};
_wyn


\d_hgenod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009+]
:: OPIS: zwraca date od kiedy wygenerowano zlecenia
::   WE: _a - oddzial
::   WY: data od kiedy wygenerowano zlecenia
::  OLD: \d_hgenod/funkc_zl.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=date(0,0,0);
HGEN.cntx_psh();
HGEN.index('ODDZ');
HGEN.prefix(_a);
{? HGEN.first()
||
   {!
   |?
      {? HGEN.ST='T'
      || _wyn:=HGEN.OD
      ?};
      HGEN.next() & _wyn=date(0,0,0)
   !}
?};
HGEN.cntx_pop();
_wyn


\d_hgen_do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009+]
:: OPIS: zwraca date do kiedy wygenerowano zlecenia
::   WE: _a - oddzial
::   WY: data do kiedy wygenerowano zlecenia
::  OLD: \d_hgen_do/funkc_zl.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=date(0,0,0);
HGEN.cntx_psh();
HGEN.index('ODDZ');
HGEN.prefix(_a);
{? HGEN.last()
||
   {!
   |?
      {? HGEN.ST='T'
      || _wyn:=HGEN.DO
      ?};
      HGEN.prev() & _wyn=date(0,0,0)
   !}
?};
HGEN.cntx_pop();
_wyn


\add_mies
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009+]
:: OPIS: zwiekszenie daty o miesiac
::   WE: _a - data zwiekszana
::   WY: zwiekszona data
::  OLD: \add_mies/um.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a~2<12
||
   _dzien:=_a~3;
   _dzien2:=date(_a~1,(_a~2)+1,0)~3;
   _wyn:=date((_a~1),(_a~2)+1,{? _dzien2>_dzien || _dzien || _dzien2 ?})
||
   _dzien:=_a~3;
   _wyn:=date((_a~1)+1,1,_dzien)
?};
_wyn


\mmm_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: zaklada tabele tymczasowa MMM
::  OLD: \mmm_init/um2.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('MMM');
MMM:=tab_tmp(2
   ,'ZLE', 'STRING[20]','Zlecenie'
   ,'DW', 'DATE', 'Data'
   ,'F', 'STRING[1]', 'F'
   ,'FAKS','STRING[20]', 'Faktura'
   ,'FPOZ','INTEGER', 'Poz.'
   ,'KPOZ','STRING[20]', 'Karta przek. odpadów'
   ,'SR', 'STRING[1]', 'Status'
   ,'MASK', 'STRING[8]', 'Maska'
   ,'REF', 'INTEGER', 'Ref'
   ,'RP', 'STRING[2]', 'Rodzaj'
);
''


\usu_mmm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: usuwa to co jest przygotowane w MMM
::   WE:  _a   - ref ostatnich warunkow
::       [_b] - od daty
::       [_c] - do daty ... jezeli chcemy cos zrobic od .. do
::       [_d] - czy wyswietlac znaleznione zlecenia (0 - tak , 1 - nie)
::       [_e] - czy zlecnia te maja byc usuwane (0 - tak, 1 - nie)
::       [_f] - !!! Nie wykorzystywany
::       [_g] - czy transakcja wolana zewnetrznie 0 - nie , 1 -tak
::       [_h] - jezeli podano UP.ref to dziala tylko dla jednej pozycji umowy
::              (w takim przypadku sprawdza tylko biezace warunki)
::  OLD: \usu_mmm/um_aneks.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>4 || _b:=date(0,0,0) ?} || _b:=date(0,0,0) ?};
{? _>=3 || {? type_of(_c)<>4 || _c:=date(0,0,0) ?} || _c:=date(0,0,0) ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};
{? _>=6 || {? type_of(_f)<>1 || _f:=0 ?} || _f:=0 ?};
_g:=do_state();
{? _>=8 || {? type_of(_h)<>7 || _h:=null ?} || _h:=null ?};

_wyn:=0;
_um:=UM.SYM;
{? MMM.size()=0
||
   _wyn:=1
||
   {? {? _g=0 & _d=0 || FUN.ask('Wygenerowano zgłoszenia.\nWyświetlić szczegóły?'@) || 0 ?}
   ||
      PARAM_W.TAB_TMP:='MMM';
      PARAM_W.TAB_POL:='6;7;';
      PARAM_W.TAB_TYT:='Powiązane zgłoszenia do umowy %1'@[_um];
      t_sumk:='';
      _akr:=MMM.mk_sel('Zgłoszenia'@,,0,'#mmmsgloszenia',,,,,'U');
      MMM.win_fld(_akr,,'ZLE',,,20);
      MMM.win_fld(_akr,,'DW',,,10);
      MMM.win_fld(_akr,,'FAKS',,,20);
      MMM.win_fld(_akr,,'FPOZ',,,4);
      MMM.win_fld(_akr,,'SR',,,4);
      MMM.win_act(_akr,0,'Formuła','Drukuj'@@,,,,"rep_exec('uniwers')");
      MMM.win_sel(_akr);
      MMM.select()
   ?};

   {? n_fakt=1
   ||
      {? {? _e=0 || {? _d=0 || FUN.ask('Usunąć pozycje zgłoszeń?'@) || 1 ?} || 0 ?}
      ||
         {? _g=0 || do() ?};
         MMM.first();
         _mask:='';
         {!
         |?
            {? _mask<>MMM.MASK
            ||
               exec('zle_open','open_tab',UM.ODDZ,((4-MMM.MASK)-2),(6-MMM.MASK))
            ?};
            ZLP.clear();
            {? ZLP.seek(MMM.REF,MMM.MASK) || exec('zlp_usu','umowy_zlecenia',1) ?};
            _mask:=MMM.MASK;
            MMM.next()
         !};
         {? {? _g=0 || end() || _wyn:=1 ?}
         || _wyn:=1
         ?}
      ?}
   ?}
?};
_wyn


\up_rycz_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009+]
:: OPIS: sprawdzenie dla podanej pozycji umowy i daty, czy jest ciaglosc umowy
::       czy umowa jest ciagla w okresie  fakturowania
::       np. miesiecznie czy trwa caly miesiac - uwzglednienie zawieszen umowy
::   WE: _a - ref pozycji umowy
::       _b - data
::   WY: 1 - jesli umowa jest ciagla 0 - jezeli nie
::  OLD: \up_rycz_um/funkc_zl.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? _<2
|| FUN.info('Zbyt mało danych.'@)
||
   UP.cntx_psh();
   UP.clear();
   {? UP.seek(_a)
   ||
       UMZ.index('UM');
       UMZ.prefix(UP.UM().ref);
       {? UMZ.first
       ||
          _fas:=UP.UM().FAS().KOD;
          _okr:=exec('zwr_okr','#datetime',_fas,_b);
          _d_od:=exec('okr_data','umowy_wspolne',1,_fas,_okr,_b~1);
          _d_do:=exec('okr_data','umowy_wspolne',2,_fas,_okr,_b~1);

          _data:=_d_od;
          {? UM.OD~1=_data~1 & UM.OD~2 = _data~2 & UM.OD~3 <> _data~3 || _data:=UM.OD ?};
          _wyn:=1;
          {! _i:=#_d_od..#_d_do
          |?
             _wyn:=( UP.UM().OD<=_data & ( UP.UM().DO>=_data | UP.UM().DO=date(0,0,0)) );
             _data+=1;
             _wyn
          !}
       ||
          _wyn:=1
       ?}
   ?};
   UP.cntx_pop()
?};
_wyn


\nr_teczk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: automatyczne nadawanie nr teczki
::  OLD: \nr_teczk/um.fml
::       \be_umnrt/um3.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
UM.cntx_psh();
_form:="
   {? (UM.KH<>null & UM.NRT<>'' & UM.KH().TYP='P')
   ||
      _kh:=~-(1+UM.KH().NAZ);
      _st:=~-(1+UM.NRT);
      {? _st<>_kh
      || FUN.ask('Litera teczki nie jest zgodna z nazwą kontrahenta. Poprawić?'@)
      ?}
   ?}
";
_wyn:=UM.NRT;
_wy:=exec('unrt','umowy_wspolne');
{? +_wy || UM.NRT:=_wy;_wyn:=_wy ?};
{? (UM.KH<>null & UM.NRT='' & UM.KH().TYP='P') | _form()
||
   _kh:=~-(1+UM.KH().NAZ);
   _st:=~-(1+UM.NRT);
   _um_kh:=UM.KH;
   _nr:=0;
   UM.cntx_psh();
   _ind:=UM.ndx_tmp('',,'KH',,,'NRT',,);
   UM.index(_ind);
   UM.prefix(_um_kh);
   {? UM.first()
   || {!|? _nrt:=#(2-UM.NRT);{? _nrt>_nr || _nr:=_nrt-1 ?};UM.next() !}
   || _nr:=0
   ?};
   _nr:=0;
   _kh:=~-(1+UM.KH().NAZ);
   {? _nr=0
   ||
      _wyn:='';
      UM.cntx_psh();
      _ind:=UM.ndx_tmp('',,'NRT',,);
      UM.index(_ind);
      UM.prefix(_kh);
      _nr:=0;
      {? UM.first()
      ||
         {!
         |?
            _nrt:=#(2-UM.NRT);
            {? _nrt>_nr || _nr:=_nrt ?};
            UM.next()
         !}
      ?};
      UM.cntx_pop()
   ?};
   _wyn:=_kh+'/'+$(_nr+1);
   UM.cntx_pop();
   UM.ndx_drop(_ind);
   UM.NRT:=_wyn
?};
UM.cntx_pop();
UM.NRT:=_wyn;
''


\unrt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: sprawdza czy nie ma już umów z nr teczki
::  OLD: \unrt/um.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_kh:=UM.KH;
_sym:=UM.SYM;
UM.cntx_psh();
_ndum:=UM.ndx_tmp('',,'KH',,);
UM.clear;
UM.index(_ndum);
UM.prefix(_kh);
{? UM.first()
|| {!
   |? _wyn:=UM.NRT;
      UM.next()& (~(+_wyn))
   !}
?};
UM.ndx_drop(_ndum);
UM.cntx_pop();
_wyn


\stu_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: automatyczne zmiana statusu umowy z biezacego na podany w parametrach
::   WE: _a - ref statusu
::       _b - formula statusu
::      [_c] - czy seryjnie (0) nie / tak (1)
::      [_d] - opis dodatkowy dla wpisywania komunikatow jezeli _b=1 to _d musi byc podany
::  OLD: \stu_auto/um.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
_opis:={? var_pres('_d')=type_of('') || _d || '' ?};
_rodz:='N';

{? UM.STU<>_a
||
   UM.cntx_psh;
   UM.clear;
   {? ($(_b))(1)
   ||
      UM.STU:=_a;
      _wyn:=UM.put
   ?};
   UM.cntx_pop
||
   {? _c=1
   || exec('umglog_add','umowy_aneks','Nie można zmienić na ten sam status [%1]'@[_opis],_rodz)
   ?}
?};
_wyn


\kst_ste
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: domyslny status umowy aneksowanej
::   WY: STU.ref()
::  OLD: \kst_ste/um.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;
_fo:=exec('get','#params',100152,2);
{? _fo<>''
||
   STU.index('RODZ');
   STU.prefix('E','N',_fo,_fo);
   {? STU.first() || _wyn:=STU.ref() ?}
||
   {? do_state=1 || undo ?};
   {? _fo='' || FUN.info('Brak ustawień dla parametru sytemu 100152.\nUzupełnij parametry systemu.'@) ?}
?};
_wyn


\f3_pom_o
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: slownik pola UMO.FPACZ - zmiennej pomocniczej do sposobow fakturowania
::       dla miesiecznego, kwartalnego i polrocznego naliczania ksiazeczek
::   WE: [_a] - kod sposobu fakturowania
::  OLD: \f3_pom_o/um.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('data');
data:="UMO.NROKR:=_a";

{? _a ='M'
|| popup(0,'Wybierz miesiąc:',
           'styczeń',,"UMO.OKRES:='styczeń';data(1,1)",
              'luty',,"UMO.OKRES:='luty';data(2,2)",
            'marzec',,"UMO.OKRES:='marzec';data(3,3)",
          'kwiecień',,"UMO.OKRES:='kwiecień';data(4,4)",
               'maj',,"UMO.OKRES:='maj';data(5,5)",
          'czerwiec',,"UMO.OKRES:='czerwiec';data(6,6)",
            'lipiec',,"UMO.OKRES:='lipiec';data(7,7)",
          'sierpień',,"UMO.OKRES:='sierpień';data(8,8)",
          'wrzesień',,"UMO.OKRES:='wrzesień';data(9,9)",
       'październik',,"UMO.OKRES:='październik';data(10,10)",
          'listopad',,"UMO.OKRES:='listopad';data(11,11)",
          'grudzień',,"UMO.OKRES:='grudzień';data(12,12)")
|? _a ='K'
|| popup(0,'Wybierz kwartał:',
         'I kwartał',,"UMO.OKRES:='I kwartał';data(1,3)",
        'II kwartał',,"UMO.OKRES:='II kwartał';data(2,6)",
       'III kwartał',,"UMO.OKRES:='III kwartał';data(3,9)",
        'IV kwartał',,"UMO.OKRES:='IV kwartał';data(4,12)")
|? _a ='P'
|| popup(0,'Wybierz półrocze:',
        'I półrocze',,"UMO.OKRES:='I półrocze';data(1,6)",
       'II półrocze',,"UMO.OKRES:='II półrocze';data(2,12)")
|? _a ='R'
|| UMO.OKRES:='rok';data(1,12)
?};
&data;
UMO.OKRES


\ae_pom_o
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: po redakcji UMO.OKRES - zmiennej pomocniczej do sposobow fakturowania
::  OLD: \ae_pom_o/um.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? UMO.OKRES<>''
|| UMO.OKRES:=UMO.OKRES;
   _wyn:=1
?};
_wyn


\stposus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: wyswietlanie usunietych posesji w umowie
::   WE: [_a] - czy wysywietlac select
::   WY: zalozona tabela posesji
::  OLD: \stposus/um_pos.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
VAR_DEL.delete('__pos');
__pos:=tab_tmp(
   ,'OD','DATE','Od daty'@
   ,'MIA','STRING[20]','Miasto'@
   ,'UL','STRING[150]','Ulica'@
   ,'POS','STRING[10]','Posesja'@
   ,'OP','DATE','Data operacji'@
   ,'UP','INTEGER','ref up'
);

_um_bie:=UM.ref();
_um_an:=UM.AN;
UMAN.cntx_psh();
UM.cntx_psh();
UP.cntx_psh();
UMAN.index('POZ');
UMAN.prefix(UM.ref());
{? UMAN.first()
||
   _ref1:=_ref2:=#exec('uman_umo','umowy_aneks',UMAN.ref());
   {!
   |?
      _next:=1;
      {? UMAN.next()
      || _ref1:=_ref2; _ref2:=#exec('uman_umo','umowy_aneks',UMAN.ref()); _next:=1
      || _ref1:=_ref2; _ref2:=_um_bie; _next:=0
      ?};
      exec('por_us','umowy_wspolne',_ref1,_ref2);
      _next
   !}
?};
UP.cntx_pop();
UM.cntx_pop();
UMAN.cntx_pop();

_acr:=__pos.mk_sel('Usunięte posesje dla umowy'@,,0,'poses_jhgusiss',,,,,'U');
__pos.win_fld(_acr,,'OD');
__pos.win_fld(_acr,,'MIA');
__pos.win_fld(_acr,,'UL');
__pos.win_fld(_acr,,'POS');
__pos.win_sel(_acr);
{? _a=0
||
   {? __pos.size>0 || __pos.select || FUN.info('Brak usuniętych posesji.'@) ?}
?};
''


\por_us
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: Wczytuje i porownuje posesje z 2 warunkow i szuka usunietych
::   WE: _a - UM1.ref - pierwsze warunki
::       _b - UM2.ref - drugie warunki
::   WY:
::  OLD: \por_us/um_pos.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('XX1','XX2');

XX1:=tab_tmp(
   ,'OD','DATE','Od daty'
   ,'MIA','STRING[20]','Miasto'
   ,'UL','STRING[150]','Ulica'
   ,'POS','STRING[10]','Posesja'
   ,'UP','INTEGER','ref up'
);
XX2:=tab_tmp(
   ,'OD','DATE','Od daty'
   ,'MIA','STRING[20]','Miasto'
   ,'UL','STRING[150]','Ulica'
   ,'POS','STRING[10]','Posesja'
   ,'UP','INTEGER','ref up'
);

:: Tabelka z pierwszymi warunkami
_data1:=_data2:=date(0,0,0);
UP.index('UM');
UP.prefix(_a);
{? UP.first()
||
   {!
   |?
      XX1.blank();
      XX1.OD:=UP.UM().OD;
      _data1:=UP.UM().OD;
      XX1.UL:=UP.POS().UL().UL;
      XX1.MIA:=UP.POS().UL().MIA().NAZ;
      XX1.POS:=UP.POS().NR;
      XX1.UP:=UP.ref();
      XX1.add();

      UP.next()
   !}
?};

:: Tabelka z drugimi warunkami
UP.index('UM');
UP.prefix(_b);
{? UP.first()
||
   {!
   |?
      XX2.blank();
      XX2.OD:=UP.UM().OD;
      _data2:=UP.UM().OD;
      XX2.UL:=UP.POS().UL().UL;
      XX2.MIA:=UP.POS().UL().MIA().NAZ;
      XX2.POS:=UP.POS().NR;
      XX2.UP:=UP.ref();
      XX2.add();

      UP.next()
   !}
?};

:: porownanie
{? XX1.first()
||
   _ndx:=XX2.ndx_tmp('',,'MIA',,,'UL',,,'POS',,);
   XX2.index(_ndx);

   {!
   |?
      XX2.prefix(XX1.MIA,XX1.UL,XX1.POS);
      {? XX2.first()
      ||
         XX2.del()
      ||
         __pos.blank();
         __pos.OD:=_data2;
         __pos.UL:=XX1.UL;
         __pos.MIA:=XX1.MIA;
         __pos.POS:=XX1.POS;
         __pos.UP:=XX1.UP;
         __pos.OP:=UMAN.DR;
         __pos.add()
      ?};

      XX1.next()
   !};

   XX2.ndx_drop(_ndx)
?};
VAR_DEL.delete('XX1','XX2');
''


\kst_stu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: domyslny status nowej umowy
::   WY: STU.ref()
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;
_fo:=exec('get','#params',100150,2);
STU.index('RODZ');
STU.prefix('N','N',_fo,_fo);
{? STU.first() || _wyn:=STU.ref() ?};
_wyn


\umpojwys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: wyswietlanie pojemnikow do umowy
::  OLD: \umpojwys/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------
UMPOJ.index('UM_SRC');
UMPOJ.prefix(UM.UM_SRC);
UMPOJ.win_sel('WER');
UMPOJ.win_edit('RED');
UMPOJ.select();
''


\fzl_declare
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Deklaruje pomocniczy obiekt FZL do obsługi umów cyklicznych
::  OLD: \start/funkc_zl.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('FZL',@.CLASS)>0
|| return()
?};

obj_decl('FZL',
   obj_fld('krok', 0),
   obj_fld('proc', 0),
   obj_meth('UM_SP_ZAW',
            " _wyn:=0;
              {? _<2
              || FUN.info('Zbyt mało danych !'@)
              || _wyn:=1;
                 {| UMZ |!
                    index('UM');
                    prefix(_a);
                    {? first
                    || {!|?
                          {? _b>=OD & _b<=DO
                          || _wyn:=0
                          ?};
                          next & _wyn
                       !}
                    ?}
                 |}
              ?};
              _wyn
           "),
   obj_meth('OKR_NR',
           " _wyn:=0;
             {? _<2
             || FUN.info('Zbyt mało danych !'@)
             || {? _a='R' || _wyn:=1
                |? _a='P' || _wyn:={? _b<=date(_b~1,6,0) || 1 || 2 ?}
                |? _a='K' || {? _b<=date(_b~1,3,0) || _wyn:=1
                             |? _b<=date(_b~1,6,0) || _wyn:=2
                             |? _b<=date(_b~1,9,0) || _wyn:=3
                             || _wyn:=4 ?}
                |? _a='M' || _wyn:=_b~2
                || _wyn:=_b~2
                ?}
             ?};
             _wyn
           "),
   obj_meth('H_SPR',
            " _wyn:='';
              {? _<3
              ||  FUN.info('Zbyt mało danych !'@)
              ||
                 HN.index('ODDZ');
                 HN.prefix(_a,_b);
                 {? HN.first
                 || HARMON.index('HN');
                    HARMON.prefix(HN.ODDZ,HN.KOD,_c~1,_c~2);
                    {? HARMON.first
                    || _form:=$('HARMON.D'+form(_c~3,-2));
                       _wyn:=_form();
                       {? _wyn='N~' || _wyn:='' ?}
                    ?}
                 ?}
              ?};
              _wyn
            "),

   obj_meth('ECHO',
:: funkcja obslugujaca progress
::  _a  - kolejny numer (zalozenie ze zawsze rozpoczynamy od 1 - ustawiane parametry startowe)
::  _b  - liczba numerow
::  _c  - czas poczatkowy
::  _d  - biezacy czas
:: [_e] - opis (niewymagalny)
:: [_f] - krok - wymuszenie odswiezania co okreslona ilosc przebiegow, jezeli nie podany krok jest ustalony co 1%
:: [_g] - z mozliwoscia przerwania 1-przerwanie 0-nie
:: [_h] - 1-badanie w przedzialach nie wymagane podawanie kolejnych numerow skok o 1 procent
::        0(domyslnie)-badanie wg kolejnych przebiegow o 1
:: UWAGA. Metoda pokazuję prawidłowo czas w zakresie 24 godzin. Innymi słowy jeżeli operacja przekroczy okres 24 godzin
::        pojawią się wartości od zera
:: WY: 1-jest OK 0-przerwano przetwarzanie
   "  _wyn:=1;
      {? _>=7 || {? type_of(_g)<>1 || _g:=0 ?} || _g:=0 ?};
      {? _>=8 || {? type_of(_h)<>1 || _h:=0 ?} || _h:=0 ?};
      {? _a=1
      || {? _>=6 || {? type_of(_f)<>1 || _f:=0 ?} || _f:=0 ?};
         {? _f>0 & ~_h
         || .krok:=_f;
            .proc:=0
         || .krok:=int(_b/100);
            .proc:=0
         ?}
      ?};

      _go:=1;
      {? ~_h
      || {? _b>199
         || {? ~.krok | frac(_a/.krok)=0 | _a=1 | _a=_b
            || _go:=1
            || _go:=0
            ?}
         ?}
      || _ilm:={? ~.krok || _a || _a % .krok ?};
         {? _ilm>.proc
         || .proc:=_ilm;
            _go:=1
         || _go:=0
         ?}
      ?};
      {? _go
      || {? _d<_c || _d+=(24*60) ?};
         {? _>=5 || {? type_of(_e)<>2 || _e:='' ?} || _e:='' ?};
         _upl:=_d-_c;
         _tk:=(*((_b*(*_upl))/_a));
         _prc:=(_a/_b)*100;
         _text:=' / Szacunkowy: '+form(_tk,,3)+' / Pozostały : '+form(_tk-_upl,,3);
         {? ~_g
         || progress(_prc, _e+' ( '+$(_prc$0)+'% )', 'Czas: '+form(_upl,,3)+_text)
         || _wyn:=progress(_prc, _e+' ( '+$(_prc$0)+'% )', 'Czas: '+form(_upl,,3)+_text,,,,,'Przerwij')
         ?}
      ?};
      _wyn
   "),

   obj_meth('SPR_WAR',
            " _wyn:=0;
              {? type_of(_a)=3 & type_of(_b)=7 & type_of(_c)=7 & type_of(_d)=2 & type_of(_e)=2
              || _wyn:=
                 {? _b<>null & _c<>null
                 || {? _a() >= _d & _a() <= _e || 1 || 0 ?}
                    |? _b<>null & _c=null
                    || {? _a() >= _d || 1 || 0 ?}
                    |? _b=null  & _c<>null
                    || {? _a() <= _e || 1 || 0 ?}
                    |? _b=null & _c=null
                    || 1
                    ?}
              ||  FUN.info('błąd parametrów'@)
              ?};
              _wyn
            "),
   obj_meth('SPR_STR',
            "
              _max:=+_b;
              _wyn:=1;
              {? _max>0
              || {! _il:=1.._max |?
                    _znak_a:=1+_a;
                    _znak_b:=1+_b;
                    _a:=1-_a;
                    _b:=1-_b;
                    {? _znak_b='?' | _znak_b=_znak_a
                    || _wyn:=1
                    || _wyn:=0
                    ?};
                    _wyn
                !}
              || _wyn:=1
              ?};
              _wyn
            ")
);
~~


\umpojadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: dodawanie pojemnika do umowy
::  OLD: \umpojadd/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------
UMPOJ.blank();
UMPOJ.UM_SRC:=UM.UM_SRC;

{? UMPOJ.index('?')='UP_SRC' || UMPOJ.UP_SRC:=$UP.ref() ?};
UMO.MIA:=UMO.UL:=null;
UMPOJ.win_edit('RED');
{? UMPOJ.edit("exec('chkumpoj','umowy_wspolne')") || UMPOJ.add() ?};
''


\chkumpoj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: po redakcji pojemnika do umowy
::  OLD: \chkumpoj/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? _wyn='' & UMPOJ.IL<=0
||
   FUN.info('Należy podać ilość większą od zera.'@);
   _wyn:='IL'
?};
{? _wyn='' & UMPOJ.POJTYP=null & UMPOJ.JM=null
||
   FUN.info('Należy podać typ lub jednostkę miary.'@);
   _wyn:='POJTYP'
?};
{? _wyn='' & UMPOJ.OD=date(0,0,0)
||
   FUN.info('Należy podać datę przyjęcia.'@);
   _wyn:='OD'
?};
{? _wyn=''
||
   _um_src:=UM.UM_SRC;
   UM.cntx_psh();
   UM.prefix();
   {? UM.seek(_um_src) & UMPOJ.OD<UM.OD
   || _wyn:='OD';
      FUN.emsg('Data przyjęcia jest wcześniejsza od daty rozpoczęcia umowy %1.'@[$UM.OD])
   ?};
   UM.cntx_pop()
?};
_wyn


\ae_pojne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009+]
:: OPIS: po edycji pola nr ewidencyjny
::  OLD: \ae_pojne/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------

{? POJ.KOD<>''
|| POJ.IL:=1
?};
''


\be_pojil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009+]
:: OPIS: przed edycja pola ilosc
::  OLD: \be_pojil/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:=0;
{? POJ.KOD=''
|| _wyn:=1
?};
_wyn


\umpojrek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: rekord przed - zasoby do umowy
::  OLD: \umpojrek/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------
UMO.MIA:=UMPOJ.POS().MIA;
UMO.UL:=UMPOJ.POS().UL;
''


\be_ump_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: przed edycja pola posesja
::  OLd: \be_ump_pos/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------
UM.KH();
''


\ae_ump_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: po edycji pola posesja
::  OLD: \ae_ump_pos/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------
{? UMPOJ.POS<>null
||
   UMO.MIA:=POS.MIA;
   UMO.UL:=POS.UL
||
   UMO.MIA:=null;
   UMO.UL:=null
?};
''


\be_umpnr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: przed edycja pola nr ewidencyjny
::  OLD: \be_umpnr/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? UMPOJ.POJ().KOD<>''
|| _wyn:=0
?};
_wyn


\ae_ump_poj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: po edycji pola pojemnik
::  OLD: \ae_ump_poj/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------
{? UMPOJ.POJ().KOD<>''
||
   UMPOJ.efld_opt(cur_win(1,1),'mark=0',,'POJTYP');
   UMPOJ.efld_opt(cur_win(1,1),'mark=0',,'IL');
   UMPOJ.POJTYP:=UMPOJ.POJ().POJTYP;
   UMPOJ.NR:=UMPOJ.POJ().KOD;
   UMPOJ.IL:=1;
   UMPOJ.JM:=UMPOJ.POJ().JM;
   UMPOJ.NK:=UMPOJ.POJ().NK
||
   UMPOJ.efld_opt(cur_win(1,1),'mark=1',,'POJTYP');
   UMPOJ.efld_opt(cur_win(1,1),'mark=1',,'IL');
::   UMPOJ.POJTYP:=UMPOJ.POJ().POJTYP;
::   UMPOJ.NR:='';
::   UMPOJ.JM:=UMPOJ.POJ().JM;
::   UMPOJ.NK:=UMPOJ.POJ().NK;
::   UMPOJ.POJ:=null()
   ~~
?};
''


\ae_umpnr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: po edycji pola nr ewidencyjny
::  OLD: \ae_umpnr/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------
{? UMPOJ.NR<>''
|| UMPOJ.IL:=1
?};
''


\be_umpil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: przed edycja pola ilosc
::  OLD: \be_umpil/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? UMPOJ.POJ<>null | UMPOJ.NR<>''
|| _wyn:=0
?};
_wyn


\poj_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: dodanie pojemnika do ewidencji
::  OLD: \poj_add/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------

POJ.blank();
POJ.win_edit('RED');
{? POJ.edit("exec('chk_poj','umowy_wspolne')")
|| POJ.add()
?};
''


\poj_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: usuniecie pojemnika z ewidencji
::  OLD: \poj_del/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------

{? POJ.count()=0
||
   {? FUN.ask('Usunąć bieżący wiersz?'@)
   || POJ.del()
   ?}
||
   FUN.info('Zasób jest wykorzystywany w systemie.\nUsunięcie niemożliwe.'@)
?};
''


\chk_poj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: po redakcji pojemnika
::  OLD: \chk_poj/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:='';
{? _wyn='' & POJ.POJTYP=null & POJ.JM=null
||
   FUN.info('Należy podać typ lub jednostkę miary.'@);
   _wyn:='POJTYP'
?};
{? _wyn='' & POJ.IL<=0
||
   FUN.info('Należy podać ilość większą od zera.'@);
   _wyn:='IL'
?};
{? _wyn='' & POJ.KOD=''
|| FUN.info('Należy podać numer ewidencyjny.'@);
   _wyn:='KOD'
?};
_wyn


\poj_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: poprawa pojemnika w ewidencji
::  OLD: \poj_put/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------

POJ.get();
POJ.win_edit('RED');
{? POJ.edit("exec('chk_poj','umowy_wspolne')")
|| POJ.put()
?};
''


\bl_pojs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: blank na wartosc pola
::  OLD: \bl_pojs/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------
POM.BPOJ


\spr_typ_danych
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: sprawdza jaki podano typ danych
::----------------------------------------------------------------------------------------------------------------------
{? (';DUP'*fld())>1
|| 1
|| FUN.info('Dozwolone wartości to :\n D-Dzielnica \n U-Ulica \n P-Nr Posesji'@);
   0
?}


\kst_odp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: domyslny rodzaj odpadu - wartosc poczatkowa pola ODP
::   WY: ODP.ref()
::  OLD: \kst_odp/um.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;
_fo:=exec('get','#params',100140,2);
_wyn:={? _fo<>'' || exec('FindInSet','#table','ODP','KOD',_fo,_fo) || null() ?};
_wyn


\pl_dis_zlec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qpl_dis_zlec1/qtrasy.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pl_dis_zlec2','umowy_wspolne',1);
''


\pl_dis_zlec2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS:
::   WE:  [_a] - czy robić first
::   WY:
::  OLD: \qpl_dis_zlec2/qtrasy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
ZLP.index('PLTRA');
ZLP.prefix(PLTRA.ref,);
{? _a || ZLP.first() ?};
grp_disp(ZLP,'WER_PLA')


\zad_slo_zada
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Ustawia słownik ządań
::   WY: SLU.ref
::----------------------------------------------------------------------------------------------------------------------
_ctrlslu:=exec('get','#params',100181,2);
_ref_slu:={? _ctrlslu<>'' || exec('FindInSet','#table','SLU','NAZ',_ctrlslu,,,1,,null()) || null() ?};
SLU.index('NAZ');
SLU.prefix();
{? SLU.seek(_ref_slu)
|| SLU.ref()
|| null()
?}


\zad_hid_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qzad_hid_act/qtrasy.fml
::----------------------------------------------------------------------------------------------------------------------
UPMZAD.memo_get(,'UW');
_acr:=UPMZAD.win_sel('?');
_gen:={? ((UPMZAD.RODZ='P' | UPMZAD.RODZ='Z') & exec('FindInSet','#table','TR_NZL','DOK_REF',UPMZAD.uidref())<>null())
       | (UPMZAD.RODZ='W' & exec('FindInSet','#table','TR_NZL','DOK_REF','Z',UPMZAD.uidref())<>null())
       | UPMZAD.RODZ='N'
      || 'N(G)'
      || ''
      ?};
_tra:={? UPMZAD.sel_size() | exec('zlp2TR_NAG','transport_wspolne',UPMZAD.uidref())=3 || '' || 'N(S)' ?};

_act:={? UPMZAD.STAT_REJ='Z' || 'ZPU' || 'N(CSGH)' ?}+_gen+_tra;
UPMZAD.actions_grayed(_acr,_act);
''

\zad_log_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qzad_log_show/qtrasy.fml
::----------------------------------------------------------------------------------------------------------------------
UPMZAD.memo_get(,'LOGI');
UPMZAD.memo_vie(,'LOGI');
''


\tra_kto_zglasz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS:  Ustawia słownik ządań
::   WE:
::   WY: SLU.ref()
::  OLD: \qtra_kto_zglasz/qtrasy.fml
::----------------------------------------------------------------------------------------------------------------------
_ctrlslu:=exec('get','#params',100182,2);
_ref_slu:={? _ctrlslu<>'' || exec('FindInSet','#table','SLU','NAZ',_ctrlslu,,,1,,null()) || null() ?};
SLU.index('NAZ');
SLU.prefix();
{? SLU.seek(_ref_slu)
|| SLU.ref()
|| FUN.info('Wymagane ustawienie parametru aplikacyjnego 100182 - Słownik osób zgłaszających żadania.'
            '\n Niemożliwa edycja.'@);
   null();
   0
?}


\zad_ae_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS:
::   WE:
::   WY:
::  OLD: \zad_ae_pos/qtrasy.fml
::----------------------------------------------------------------------------------------------------------------------
UPMZAD.KH:=UPM.UM().KH;
UPMZAD.MIA:=UPM.POS().MIA;
UPMZAD.UL:=UPM.POS().UL;
UPMZAD.DZI:=UPM.POS().DZI;
win_disp();
1


\pltrazakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [12.10]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qpltrazakres/qtrasy.fml
::----------------------------------------------------------------------------------------------------------------------
UMC.win_edit('ZAKRES');
{? PLTRA.index('?')='PLA' || _spr:="" || _spr:="__CHK.record(UMC,,'DZAK')" ?};
{? UMC.edit(_spr)
||
   {? UMC.DZAK<=date() & UMC.DZAK<>date(0,0,0) || FUN.info('Uwaga. Zakres dat wskazuję na planowanie wstecz.'@) ?};
   {? PLTRA.index('?')='PLA'
   ||
      {? UMC.DZAK=date(0,0,0)
      || PLTRA.prefix(ST.ODDZ,UMC.RODZ)
      || PLTRA.prefix(ST.ODDZ,UMC.RODZ,'',UMC.DZAK)
      ?}
   || PLTRA.prefix(ST.ODDZ,UMC.RODZ,UMC.DZAK)
   ?};
   win_disp()
?};
1


\tr_add_upzad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [12.10]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qtr_add_qupzad/qtrasy.fml
::----------------------------------------------------------------------------------------------------------------------
_act:=menu_txt();
UPMZAD.blank();
UPMZAD.USER:=gsub(10+username(),'~',' ')+' '+$date()+' '+$time();
UPMZAD.ID:=$UPMZAD.tm_stamp();
UPMZAD.RUM:='MIA';
UPMZAD.TAB:='UPM';
UPMZAD.REF:=#UPM.ref();
UPMZAD.CRC:=UPM.crc;
UPMZAD.KH:=null;
{? (-_act)='podstawienia'
||
    UPMZAD.POS:=UPMPOJ.POS;
    UPMZAD.MIA:=UPMPOJ.POS().MIA;
    UPMZAD.UL:=UPMPOJ.POS().UL;
    UPMZAD.NEW_M:=UPMPOJ.M;
    UPMZAD.DZI:=UPMPOJ.POS().DZI;
    UPMZAD.NEW_IL:=UPMPOJ.IL;
    UPMZAD.ONAG:=UPMPOJ.ONAG;
    UPMZAD.DP:=date();
    exec('zad_slo_zada','umowy_wspolne');
    SLO.index('SL');
    SLO.prefix(SLU.ref,'0001');
    {? SLO.first() || UPMZAD.SLO:=SLO.ref ?}

|? (-_act)='wymiana'
||
    UPMZAD.POS:=UPMPOJ.POS;
    UPMZAD.MIA:=UPMPOJ.POS().MIA;
    UPMZAD.UL:=UPMPOJ.POS().UL;
    UPMZAD.DZI:=UPMPOJ.POS().DZI;
    UPMZAD.OLD_M:=UPMPOJ.M;
    UPMZAD.OLD_IL:=UPMPOJ.IL;
    UPMZAD.ONAG:=UPMPOJ.ONAG;
    UPMZAD.DP:=date();
    exec('zad_slo_zada','umowy_wspolne');
    SLO.index('SL');
    SLO.prefix(SLU.ref,'0002');
    {? SLO.first() || UPMZAD.SLO:=SLO.ref ?}

|? (-_act)='zabranie'
||
    UPMZAD.POS:=UPMPOJ.POS;
    UPMZAD.MIA:=UPMPOJ.POS().MIA;
    UPMZAD.UL:=UPMPOJ.POS().UL;
    UPMZAD.DZI:=UPMPOJ.POS().DZI;
    UPMZAD.NEW_M:=UPMPOJ.M;
    UPMZAD.NEW_IL:=UPMPOJ.IL;
    UPMZAD.ONAG:=UPMPOJ.ONAG;
    UPMZAD.DP:=date();
    exec('zad_slo_zada','umowy_wspolne');
    SLO.index('SL');
    SLO.prefix(SLU.ref,'0003');
    {? SLO.first() || UPMZAD.SLO:=SLO.ref ?}
?};
{? UPMZAD.edit("_wyn:=__CHK.record(UPMZAD,,'NEW_M','SLO');
                {? _wyn<>''
                || _wyn
                |? UPMZAD.NEW_IL<=0
                || FUN.info('Należy podać ilość większą od zera.'@);
                   'NEW_IL'
                || ''
                ?}")
|| {? UPMZAD.add()
   ||
      UPMZAD.memo_put(,'UW')
   ?}
?};
''


\tr_set_osoba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [12.10]
:: OPIS: Uzupełnia dane o Osobie.
::   WE:
::   WY:
::  OLD: \qtr_set_osoba/qtrasy.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_afld()='KIER' || PLTRA.S_KIER:=PLTRA.KIER().OSOBA().NAZWISKO+' '+PLTRA.KIER().OSOBA().PIERWSZE
|? cur_afld()='LAD1' || PLTRA.S_LAD1:=PLTRA.LAD1().OSOBA().NAZWISKO+' '+PLTRA.LAD1().OSOBA().PIERWSZE
|? cur_afld()='LAD2' || PLTRA.S_LAD2:=PLTRA.LAD2().OSOBA().NAZWISKO+' '+PLTRA.LAD2().OSOBA().PIERWSZE
?}


\tr_bl_rodzaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [12.10]
:: OPIS:
::   WE:
::   WY:
::  OLD: \qtr_bl_rodzaj/qtrasy.fml
::----------------------------------------------------------------------------------------------------------------------
UMC.RODZ


\poj_stu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: ustawianie statusu dla pojemnika oraz kolorowanie poj
::  OLD: \poj_stu/um_poj.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
POM.SPOJ:={? POJ.S='N' || 'zajęty'
          |? POJ.S='T' || _wyn:=1;'wolny'
          |? POJ.S='R' || 'remontowany'
          |? POJ.S='M' || 'na magazynie'
          || ''
          ?};
_wyn


\bl_mia_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: wartość początkowa pola POS.MIA
::----------------------------------------------------------------------------------------------------------------------
UMC.MIA


\pr_mia_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: przed redakcją pola POS.MIA
::----------------------------------------------------------------------------------------------------------------------
UMC.MIA=null()


\zad_chk_rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: kontrola poprawności rekordu
::   WY: ''-ok, pole-coś nie tak
::----------------------------------------------------------------------------------------------------------------------
_res:=__CHK.record(UPMZAD,,'NEW_M','SLO');
{? _res<>''
|| _res
|? UPMZAD.NEW_IL<=0
|| FUN.info('Należy podać ilość większą od zera.'@);
   _res:='NEW_IL'
|| _res:=''
?};
_res


\upmzad_dza_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: przycisk pola UPMZAD.DZP
::----------------------------------------------------------------------------------------------------------------------
_tr_rodz:=null();
{? UPMZAD.OLD_M & UPMZAD.NEW_M
|| {? UPMZAD.OLD_M().TR_RODZ=UPMZAD.NEW_M().TR_RODZ || _tr_rodz:=M.TR_RODZ ?}
|? UPMZAD.NEW_M
|| _tr_rodz:=UPMZAD.NEW_M().TR_RODZ
|| _tr_rodz:=UPMZAD.OLD_M().TR_RODZ
?};
Plugin.run('UPMZAD_FORM_001','DATA_PLAN');
exec('data_transportu','transport_moc','UPMZAD.DP',_tr_rodz,UPMZAD.ODDZ)


\upmzad_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Dołączenie przewozu dla usługi
::   WE: [_a] - rodzaj przewozu, domyślnie 'P'-podstawienie
::       [_b] - miejsce wywołania, domyślnie 'UPM'-umowa miejska
::----------------------------------------------------------------------------------------------------------------------
 _rodz:={? var_pres('_a')=type_of('') & (';PWZN'*_a)>1 || _a || 'P' ?};
_where:={? var_pres('_b')=type_of('') || _b |? UMC.WHERE<>'' || UMC.WHERE || 'UPM' ?};

_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LUM_UMO_DPRZ';
_params.AKCJA:='Dołącz'+{? _rodz='P' || '-podstawienie'
                        |? _rodz='W' || '-wymiana'
                        |? _rodz='Z' || '-zabranie'
                        |? _rodz='N' || '-inne'
                        || ''
                        ?};
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
{? _where='UPM'
|| exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'POS',UPM.POS);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'UPM',UPM.ref())
|? _where='UP'
|| exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'POS',UP.POS);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'UP',UP.ref())
?};
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'RODZ',_rodz);

UMC.WHERE:=_where;

exec('mp_run','#b__box',_params);
UMC.WHERE:='';
~~


\upmzad_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Modyfikacja przewozu dla usługi
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LUM_UMO_DPRZ';
_params.UIDREF:=UPMZAD.uidref();
_params.AKCJA:='Popraw';
exec('mp_run','#b__box',_params);
~~


\upmzad_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Modyfikacja przewozu dla usługi
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LUM_UMO_DPRZ';
_params.UIDREF:=UPMZAD.uidref();
_params.AKCJA:='Usuń';
exec('mp_run','#b__box',_params);
~~


\upmzad_zakoncz_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Przewóz dal usługi - Zakończ w oknie wertowania
::----------------------------------------------------------------------------------------------------------------------
UPMZAD.cntx_psh();
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LUM_UMO_DPRZ';
_params.UIDREF:=UPMZAD.uidref();
_params.AKCJA:='Zakończ_wer';

exec('mp_run','#b__box',_params);
UPMZAD.cntx_pop();
~~


\upmzad_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: ustawienie kolorowania dla tranportu
::----------------------------------------------------------------------------------------------------------------------
exec('zad_hid_act','umowy_wspolne');
_wyn:='';
{? UPMZAD.STAT_REJ='Z'
|| _wyn:={? UPMZAD.DR<>date(0,0,0) || 'UPMZAD#01#02' || 'UPMZAD#01#01' ?}
?};
_wyn


\icon_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Formuły na ICON_BEFORE dla okien przewozu dla usług
::----------------------------------------------------------------------------------------------------------------------
_formikon:="
   {? UPMZAD.STAT_REJ='Z'
   || {? UPMZAD.DR<>date(0,0,0)
      || exec('zrealizowany','icon')
      || exec('zarejestrowany','icon')
      ?}
   || exec('pusta','#icon')
   ?}
";
UPMZAD.win_fml('WER',,'SLO','TR','ICON_BEFORE',_formikon);
_formikon:="
   _gen:=exec('FindInSet','#table','TR_NZL','DOK_REF',UPMZAD.uidref(),,
       \"@.TR_NZL.TR_NAG<>null() & (';NP'*@.TR_NZL.REAL)>1\",1,,0);
   {? _gen & UPMZAD.STAT_REJ='Z' & UPMZAD.RODZ='P'
   || exec('transpDO','icon')
   |? _gen & UPMZAD.STAT_REJ='Z' & UPMZAD.RODZ='Z'
   || exec('transpZ','icon')
   |? _gen & UPMZAD.STAT_REJ='Z' & UPMZAD.RODZ='W'
   || exec('transpWymien','icon')
   || exec('pusta','#icon')
   ?}
";
UPMZAD.win_fml('WER',,'DR',,'ICON_BEFORE',_formikon);
~~


\upmzad_wycofaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Przewóz - wycofaj
::----------------------------------------------------------------------------------------------------------------------
_sel:=UPMZAD.sel_aget();
UPMZAD.sel_adel();
{? ~_sel.first() || _sel.REF:=#UPMZAD.ref(); _sel.add() ?};
UPMZAD.cntx_psh();
{? _sel.first() & FUN.ask({? _sel.size()>1
                          || 'Wycofać zakończenie redakcji dla zaznaczonych przewozów?'@
                          || 'Wycofać zakończenie redakcji przewozu:\n%1?'@[exec('UPMZAD','#to_string')]
                          ?})
|| {!
   |? {? (UPMZAD.prefix(); UPMZAD.seek(_sel.REF,)) & UPMZAD.STAT_REJ='Z'
      ||
         {? exec('upmzad_wycofaj_tr','umowy_wspolne',UPMZAD.uidref())
         ||
            UPMZAD.STAT_REJ:='N';
            UPMZAD.put(1)
         ?}
      ?};
      _sel.next()
   !}
?};
UPMZAD.cntx_pop();
obj_del(_sel);
~~


\upmzad_wycofaj_tr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Przewóz - wycofaj - sprawdzenie transportu
::   WE: _a - dokref
::   WY: 1/0 - można wycofać
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_Tr_nzl:=exec('get_tr_nzl','transport_zlec',_a);
{? _Tr_nzl.first()
||
   {! |?
      {? _wyn=1
      ||
         _wyn:=exec('FindAndGet','#table',TR_NZL,_Tr_nzl.REF,,"
            {? TR_NZL.STAT_REJ='N'
            ||
               {? FUN.ask('Przewóz jest powiązany z dyspozycją transportową %1.\n Czy usunąć powiązaną dyspozycje transportową?'@[TR_NZL.SYM])
               ||
                  _wyn:=exec('tr_nzl_usu','transport_zlec',1)
               ||
                  _wyn:=0
               ?}
            ||
               FUN.info('Przewóz jest powiązany z dyspozycją transportową %1 która jest zakończona.\n Nie można wyzofać przewozu.'@[TR_NZL.SYM]);
               _wyn:=0
            ?};
            _wyn
         ",1)
      ?};
      _Tr_nzl.next()
   !}
?};
_wyn

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 afb36d652fd0b891388ccab83a7456e5195334a3c3c0d659f5c5bf6fbdd7ccd9989982d4645e9db8debc391a6421982e9732c947881f33780e681a7e699f2527af94026672da9ba4d23da1496db58fff26b8da2cb616d93899f0c5de083dc792c634f09d02b0cc3d0ba8b218e396515c2dfbab40c375a0dc8d80a4a99b3c6b04
