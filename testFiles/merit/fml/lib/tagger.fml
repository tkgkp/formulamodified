:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: tagger.fml
:: Utworzony: 05.01.2023
:: Autor: PBS
::======================================================================================================================
:: Zawartość: Formuły do obsługi inteligentnych podpowiedzi
::======================================================================================================================


\tag_mask
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Otwiera odpowiednią maskę dla tabeli TAGAGR i TAGGER
::   WE: _a - ref kontrahenta
::       _b - typ tabeli ('a' - TAGAGR, 'g' - TAGGER)
::----------------------------------------------------------------------------------------------------------------------
_ilewmas:=exec('get','#params',300901,type_of(1));
{? type_of(_a)=type_of(2)
|| _ref:=_a
|| _ref:=#_a
?};
_maska:={? _b='a' || 'td' |? _b='g' || 'tg' ?}; _maska+='k';
_calk:=_ref%_ilewmas; _ulamek:=_ref%*_ilewmas;
_numer:=$(_calk+{? _ulamek>0 || 1 || 0 ?});
_numer:=(('00000'+_numer)+5);
_maska+=_numer;
_ok:=((_maska+5)<>'00000');
{? _ok & _b='a' || TAGAGR.use(_maska) ?};
{? _ok & _b='g' || TAGGER.use(_maska) ?};
_ok


\p300914
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła obsługująca edycję parametru 300914
::   WE: _a - obj_new - obiekt umożliwiający zapis parametru
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Podpowiedzi dla akcji grupowej dekretowania faktury w obiegu:'@,
          ,'&Tak'@,'&Pytaj'@,'&Nie'@);
_choice:={? _choice=1 || 'T'
         |? _choice=2 || 'P'
         |? _choice=3 || 'N'
         || _a.get()
         ?};
{? _choice<>'' || _a.save(_choice) ?};
~~


\p300916
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła obsługująca edycję parametru 300916
::   WE: _a - obj_new - obiekt umożliwiający zapis parametru
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Podpowiedzi dla pozycji VAT dokumentu księgowego:'@,
          ,'&Tak'@,'Tylko &grupa podatkowa'@,'&Nie'@);
_choice:={? _choice=1 || 'T'
         |? _choice=2 || 'G'
         |? _choice=3 || 'N'
         || _a.get()
         ?};
{? _choice<>'' || _a.save(_choice) ?};
~~


\param_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Obsługa edycji parametrów Taggera
::   WE: _a - obj_new - obiekt umożliwiający zapis parametru
::----------------------------------------------------------------------------------------------------------------------
_wybor:=FUN.ask('Zmiana parametrów spowoduje automatyczne uaktualnienie podpowiedzi,\nco może zająć dużo czasu.\n\n'@+
                'Kontynuować?'@);
{? ~_wybor || return(0) ?};
ROZNE.PCHOICE:=1; ROZNE.PFORM:=''; ROZNE.PDATE:='';
VAR_DEL.delete('PINFOBJ'); PINFOBJ:=_a;
_before:=_a.get(); _zmiana:=0;
_puid:=__PARSES.getBID();
PARSES.cntx_psh();
{? _puid<>'' & PARSES.seek(_puid)
|| OKRESY.PAR_OKR:=PARSES.OKRO().NAZWA;
   PARSES.ROK:=PARSES.OKRO().ROK; OKRESY.PAR_ROK:=$PARSES.ROK
?};
ROZNE.win_edit('PCHANGKH');
{? ROZNE.edit()
|| {? ROZNE.PCHOICE=1
   || _choice:='Ostatni zapis'
   |? ROZNE.PCHOICE=2
   || _choice:='Najczęściej stosowany zapis od '+ROZNE.PDATE
   |? ROZNE.PCHOICE=3
   || _choice:='Formuła: '+ROZNE.PFORM
   |? ROZNE.PCHOICE=4
   || _choice:='Brak'
   || _choice:=_a.get()
   ?};
   {? _choice<>_before || _zmiana:=1 ?};
   {? (1+_choice)='N' & ~(exec('proc_chck','tagger'))
   || FUN.info('Do poprawnego działania podpowiedzi stosowanych najczęściej od wybranego okresu\nnależy zaakceptować'@+
               ' proces FIN_TAG_GER.'@)
   ?};
   _a.save(_choice)
?};
OKRESY.PAR_OKR:=OKRESY.PAR_ROK:='';
PARSES.cntx_pop();
{? _zmiana
|| KH.cntx_psh(); KH.prefix();
   KH.for_each("exec('change_params','tagger',KH.uidref(),exec('formula_typ_hlp','tagger'))");
   KH.cntx_pop()
?};
VAR_DEL.delete('PINFOBJ');
~~


\proc_chck
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Sprawdza, czy proces FIN_TAG_GER jest zaakceptowany
::   WY: 1 - zaakceptowany, 0 - niezaakceptowany
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
B_PROC.cntx_psh();
B_PROC.index('SYMVER'); B_PROC.prefix(REF.FIRMA,'FIN_TAG_GER');
{? B_PROC.first()
|| _dalej:=1;
   {! |?
      {? B_PROC.ACCEPTED='T'
      || _dalej:=0;
         _wyn:=1
      ?};
      _dalej & B_PROC.next()
   !}
?};
B_PROC.cntx_pop();
_wyn


\bed_pform
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Przed wyświetleniem ROZNE.PFORM
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.win_edit('?')<>''
|| {? ROZNE.PCHOICE<>3
   || ROZNE.efld_opt(ROZNE.win_edit('?'),'editable=0,enable=0',ROZNE,'PFORM'); ROZNE.PFORM:=''
   || ROZNE.efld_opt(ROZNE.win_edit('?'),'editable=1,enable=1',ROZNE,'PFORM')
   ?}
?}; 1


\bed_pdate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Przed wyświetleniem ROZNE.PDATE
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.win_edit('?')<>''
|| {? ROZNE.PCHOICE<>2
   || ROZNE.efld_opt(ROZNE.win_edit('?'),'editable=0,enable=0',ROZNE,'PDATE'); ROZNE.PDATE:=''
   || ROZNE.efld_opt(ROZNE.win_edit('?'),'editable=1,enable=1',ROZNE,'PDATE');
      ROZNE.PDATE:=OKRESY.PAR_OKR+'/'+OKRESY.PAR_ROK
   ?}
?}; 1


\ae_pchoice
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Po edycji ROZNE.PCHOICE
::----------------------------------------------------------------------------------------------------------------------
exec('bed_pdate','tagger'); exec('bed_pform','tagger'); 1


\be_pdate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Przed redagowaniem ROZNE.PDATE
::----------------------------------------------------------------------------------------------------------------------
1


\f3_pdate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła na F3 dla pola ROZNE.PDATE
::----------------------------------------------------------------------------------------------------------------------
OKRO.cntx_psh(); PARSES.cntx_psh();
::exec('f3_parses_okro','parses');
exec('f3_okro','tagger');
_okres:=OKRESY.PAR_OKR+'/'+OKRESY.PAR_ROK;
OKRO.cntx_pop(); PARSES.cntx_pop(); OKRO.f_clear();
{? _okres='/' || _okres:='' ?};
_okres


\f3_pform
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła na F3 dla pola ROZNE.PFORM
::   WE:
::----------------------------------------------------------------------------------------------------------------------
exec('win_form1','tagger')


\f3_okro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła pomocnicza na F3 dla tabeli OKRO
::----------------------------------------------------------------------------------------------------------------------
_win:=OKRO.mk_sel('Wybór okresu'@,'T',0,,,,,0,'U','T',,,0,,,);
OKRO.win_fld(_win,,'ROK');
OKRO.win_fld(_win,,'NAZWA',,,,,,'Miesiąc'@);
OKRO.win_act(_win,0,'Formuła','&Wybierz'@,,,"sel_exit()",,1);
OKRO.f_clear(); OKRO.prefix();
OKRO.f_set('ROK,NR_OKR','join FIRMA using (FIRMA.REFERENCE,OKRO.FIRMA)',
           'FIRMA.SYMBOL=:_a and (OKRO.ROK<:_b or (OKRO.ROK=:_c and OKRO.NR_OKR<=:_d))',
           __Firma,date()~1,date()~1,date~2);
OKRO.f_find(#OKRESY.PAR_ROK);
OKRO.win_sel(_win);
{? OKRO.select()
|| PARSES.OKRO:=OKRO.ref(); OKRESY.PAR_OKR:=PARSES.OKRO().NAZWA;
   PARSES.ROK:=PARSES.OKRO().ROK; OKRESY.PAR_ROK:=$PARSES.ROK
?}


\p300901
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła obsługująca edycję parametru 300901
::   WE: _a - obj_new - obiekt umożliwiający zapis parametru
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.ask('Zmiana liczby kontrahentów w masce spowoduje automatyczne usunięcie\nwszystkich danych podpowiedzi'@+
                 ' i pobranie ich do nowych masek, co będzie czasochłonne.\n\nKontynuować?'@);
{? _choice
|| _tab:=tab_tmp(,'ILE','INTEGER','Liczba kontrahentów w masce'@);
   _ewin:=_tab.mk_edit('Liczba kontrahentów w masce'@,1);
   _tab.win_ebtn(_ewin,'text=Zapisz'@,'key:F2');
   _tab.win_ebtn(_ewin,'text=Anuluj'@,'key:Esc');
   _tab.win_edit(_ewin);
   _przed:=_tab.ILE:=_a.get();
   {? _tab.edit("{? cur_tab().ILE<=0 || FUN.info('Wprowadź liczbę większą od zera.'@); 'ILE' || '' ?} ")
   || _ile:=_tab.ILE;
      _a.save(_ile);
      {? _ile<>_przed || exec('refill_all','tagger') ?}
   ?}
?};
~~


\p300901_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła obsługująca edycję parametru 300901 - powrót do wartości domyślnej
::   WE: _a - obj_new - obiekt umożliwiający zapis parametru
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.ask('Zmiana liczby kontrahentów w masce spowoduje automatyczne usunięcie\nwszystkich danych podpowiedzi'@+
                 ' i pobranie ich do nowych masek, co będzie czasochłonne.\n\nKontynuować?'@);
{? _choice
|| _interface:=_a;
   _przed:=_interface.get();
   _val:=_interface.default();
   _interface.save(_val);
   {? _val<>_przed || exec('refill_all','tagger') ?}
?};
~~


\get_param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła odczytuje wszystkie parametry aplikacyjne dot. TAGGERa
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TAG_PAR')<=0
|| TAG_PAR:=obj_new('p300901','p300912','p300914','p300915','p300916','p300917','p300918',
                    'p300921','p300922','p300923');
   TAG_PAR.p300901:=exec('get','#params',300901,type_of(1));
   TAG_PAR.p300912:=exec('get','#params',300912,type_of('a'));
   TAG_PAR.p300914:=exec('get','#params',300914,type_of('a'));
   TAG_PAR.p300915:=exec('get','#params',300915,type_of('a'));
   TAG_PAR.p300916:=exec('get','#params',300916,type_of('a'));
   TAG_PAR.p300917:=exec('get','#params',300917,type_of('a'));
   TAG_PAR.p300918:=exec('get','#params',300918,type_of('a'));
   TAG_PAR.p300921:=exec('get','#params',300921,type_of('a'));
   TAG_PAR.p300922:=exec('get','#params',300922,type_of('a'));
   TAG_PAR.p300923:=exec('get','#params',300923,type_of('a'))
?}


\tagagr_erase_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa wszystkie dane z tabeli TAGAGR
::----------------------------------------------------------------------------------------------------------------------
_tagagr:=TAGAGR.names();
{? _tagagr.first()
|| {! |?
      _maska:=_tagagr.NAME+5;
      TAGAGR.use('tdk'+_maska); TAGAGR.prefix(); TAGAGR.erase();
      _tagagr.next()
   !}
?};
1


\tagagr_erase_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa wszystkie dane z tabeli TAGAGR związane z wybranym kontrahentem
::   WE: _a - złączenie do kontrahenta
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
{? KH.seek(_a)
|| _uref:=KH.uidref();
   TAGAGR.cntx_psh();
   exec('tag_mask','tagger',KH.ref(),'a');
   TAGAGR.index('TAG1'); TAGAGR.prefix(_uref,$REF.FIRMA);
   {? TAGAGR.first()
   || {! |? TAGAGR.del() !}
   ?};
   TAGAGR.cntx_pop()
?};
KH.cntx_pop()


\tagger_erase_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa wszystkie dane z tabeli TAGGER
::----------------------------------------------------------------------------------------------------------------------
_tagger:=TAGGER.names();
{? _tagger.first()
|| {! |?
      _maska:=_tagger.NAME+5;
      TAGGER.use('tgk'+_maska); TAGGER.prefix(); TAGGER.erase();
      _tagger.next()
   !}
?};
1


\tagger_erase_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa wszystkie dane z tabeli TAGGER związane z wybranym kontrahentem
::   WE: _a - złączenie do kontrahenta
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
{? KH.seek(_a)
|| _uref:=KH.uidref();
   TAGGER.cntx_psh();
   exec('tag_mask','tagger',KH.ref(),'g');
   TAGGER.index('TAG1'); TAGGER.prefix('N',_uref);
   {? TAGGER.first()
   || {! |? TAGGER.del() !}
   ?};
   TAGGER.cntx_pop()
?};
KH.cntx_pop()


\tagagr_fill_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Wypełnia tabelę TAGAGR dla pojedynczego kontrahenta
::   WE: _a - KH.uidref()
::      [_b] - jeśli podano i _b=1 to ponowne podczytanie parametrów
::----------------------------------------------------------------------------------------------------------------------
{? _>1 & _b=1
|| VAR_DEL.delete('TAG_PAR');
   exec('get_param','tagger')
|| exec('get_param','tagger')
?};
KH.cntx_psh(); KH.prefix();
{? KH.seek(_a) & KH.TAGGER='T'
|| _ref:=KH.ref();
   exec('tag_mask','tagger',_ref,'a');
   exec('a_dk_nag','tagger',_ref,'DK');
   exec('a_dk_nag','tagger',_ref,'OF');
   exec('a_dk_vpz','tagger',_ref,'DK');
   exec('a_dk_vpz','tagger',_ref,'OF');
   exec('a_dk_vpz','tagger',_ref,'DO');
   exec('a_of_csh','tagger',_ref)
|? KH.seek(_a) & KH.TAGGER<>'T'
|| _ref:=KH.ref();
   exec('tagagr_erase_kh','tagger',_ref)
?};
KH.cntx_pop();
1


\tagagr_erase_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa dane TAGAGR po zmianie parametrów
::   WE: _a - KH.uidref()
::       _b - typ (NAG/CSH/VPZ)
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
{? KH.seek(_a)
|| _uref:=KH.uidref();
   TAGAGR.cntx_psh();
   exec('tag_mask','tagger',KH.ref(),'a');
   TAGAGR.index('VPZ_I'); TAGAGR.prefix(_uref,$REF.FIRMA,_b);
   {? TAGAGR.first()
   || {! |? TAGAGR.del() !}
   ?};
   TAGAGR.cntx_pop()
?};
KH.cntx_pop()


\tagagr_fill_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Uzupełnia TAGAGR po zmianie parametru
::   WE: _a - KH.uidref()
::       _b - typ (NAG/CSH/VPZ)
::----------------------------------------------------------------------------------------------------------------------
exec('get_param','tagger');
KH.cntx_psh(); KH.prefix();
{? KH.seek(_a) & KH.TAGGER='T'
|| _ref:=KH.ref();
   exec('tag_mask','tagger',_ref,'a');
   {? _b='NAG'
   || exec('a_dk_nag','tagger',_ref,'DK');
      exec('a_dk_nag','tagger',_ref,'OF')
   ?};
   {? _b='VPZ'
   || exec('a_dk_vpz','tagger',_ref,'DK');
      exec('a_dk_vpz','tagger',_ref,'OF');
      exec('a_dk_vpz','tagger',_ref,'DO')
   ?};
   {? _b='CSH'
   || exec('a_of_csh','tagger',_ref)
   ?}
|? KH.seek(_a) & KH.TAGGER<>'T'
|| _ref:=KH.ref();
   exec('tagagr_erase_kh','tagger',_ref)
?};
KH.cntx_pop();
1


\tagger_fill_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Uzupełnia TAGGER po zmianie parametrów
::   WE: _a - KH.uidref()
::       _b - typ (NAG/CSH/VPZ)
::----------------------------------------------------------------------------------------------------------------------
exec('get_param','tagger');
KH.cntx_psh(); KH.prefix();
{? KH.seek(_a) & KH.TAGGER='T'
|| _ref:=KH.ref();
   exec('tag_mask','tagger',_ref,'g');
   {? _b='NAG'
   || exec('z_dk_nag','tagger',_ref,'DK');
      exec('z_dk_nag','tagger',_ref,'OF')
   ?};
   {? _b='VPZ'
   || exec('z_dk_vpz','tagger',_ref,'DK');
      exec('z_dk_vpz','tagger',_ref,'OF');
      exec('z_dk_vpz','tagger',_ref,'DO')
   ?};
   {? _b='CSH'
   || exec('z_of_csh','tagger',_ref)
   ?}
?};
KH.cntx_pop();
1


\change_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła po zmianie parametrów
::   WE: _a - KH.uidref()
::       _b - typ (NAG/CSH/VPZ)
::----------------------------------------------------------------------------------------------------------------------
exec('tagagr_erase_params','tagger',_a,_b);
exec('tagagr_fill_params','tagger',_a,_b);
exec('tagger_fill_params','tagger',_a,_b);
1


\tagagr_refill_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Wypełnia od nowa tabelę TAGAGR
::----------------------------------------------------------------------------------------------------------------------
exec('tagagr_erase_all','tagger');
VAR_DEL.delete('TAG_PAR');
exec('get_param','tagger');
KH.for_each("_ur:=KH.uidref(); exec('tagagr_fill_kh','tagger',_ur)");
1


\tagger_fill_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Wypełnia tabelę TAGGER dla pojedynczego kontrahenta
::   WE: _a - KH.uidref()
::       [_b] - jeśli podano i _b=1 to ponowne podczytanie parametrów
::----------------------------------------------------------------------------------------------------------------------
{? _>1 & _b=1
|| VAR_DEL.delete('TAG_PAR');
   exec('get_param','tagger')
|| exec('get_param','tagger')
?};
KH.cntx_psh(); KH.prefix();
{? KH.seek(_a) & KH.TAGGER='T'
|| _ref:=KH.ref();
   exec('tag_mask','tagger',_ref,'g');
   exec('z_dk_nag','tagger',_ref,'DK');
   exec('z_dk_nag','tagger',_ref,'OF');
   exec('z_dk_vpz','tagger',_ref,'DK');
   exec('z_dk_vpz','tagger',_ref,'OF');
   exec('z_dk_vpz','tagger',_ref,'DO');
   exec('z_of_csh','tagger',_ref)
|? KH.seek(_a) & KH.TAGGER<>'T'
|| _ref:=KH.ref();
   exec('tagger_erase_kh','tagger',_ref)
?};
KH.cntx_pop();
1


\tagger_refill_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Wypełnia od nowa tabelę TAGGER
::----------------------------------------------------------------------------------------------------------------------
exec('tagger_erase_all','tagger');
VAR_DEL.delete('TAG_PAR');
exec('get_param','tagger');
KH.for_each("_ur:=KH.uidref(); exec('tagger_fill_kh','tagger',_ur)");
1


\refill_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa dane podpowiedzi dla wybranego kontrahenta i wypełnia je na nowo
::   WE: _a - KH.uidref()
::       [_b] - jeśli podano i _b=1 to ponowne podczytanie parametrów
::----------------------------------------------------------------------------------------------------------------------
exec('tagagr_erase_kh','tagger',_a);
exec('tagagr_fill_kh','tagger',_a);
exec('tagger_erase_kh','tagger',_a);
exec('tagger_fill_kh','tagger',_a);
1


\refill_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa wszystkie dane podpowiedzi i wypełnia je na nowo
::----------------------------------------------------------------------------------------------------------------------
exec('tagagr_refill_all','tagger');
exec('tagger_refill_all','tagger');
1


\msc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła pomocnicza - zmienia miesiąc (słownie) na nr
::   WE: Nazwa miesiąca
::   WY: Nr m-c w kalendarzu
::----------------------------------------------------------------------------------------------------------------------
{? _a='styczeń' || 1
|? _a='luty' || 2
|? _a='marzec' || 3
|? _a='kwiecień' || 4
|? _a='maj' || 5
|? _a='czerwiec' || 6
|? _a='lipiec' || 7
|? _a='sierpień' || 8
|? _a='wrzesień' || 9
|? _a='październik' || 10
|? _a='listopad' || 11
|? _a='grudzień' || 12
?}


\mask_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła wyszukuje okres OKRO_F dla podanego miesiąca i roku i zwraca tabelę z danymi do otwarcia masek
::   WE: _a - miesiąc, _b - rok
::   WY: tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
_sql:='select ROK_F.NAZ as EMASK, OKRO_F.NR as MASK2, ROK_F.KOD as MASK1, \'    \' as MASKAD, '+
             '\'  \' as MASKAO '+
      'from @OKRO_F '+
      'join @ROK_F using (OKRO_F.ROK, ROK_F.REFERENCE) '+
      'join @FIRMA using (ROK_F.FIRMA, FIRMA.REFERENCE) '+
      'where FIRMA.REFERENCE=\':_a\' and OKRO_F.NR<>13 and OKRO_F.NR<>0 and '+
      '((ROK_F.NAZ>\':_b\' and ROK_F.NAZ<\':_c\') or (ROK_F.NAZ=\':_d\' and OKRO_F.NR>=:_e) or '+
      '(ROK_F.NAZ=\':_f\' and OKRO_F.NR<=:_g)) '+
      'order by 1,2 asc';
_mtab:=sql(_sql,$REF.FIRMA,_b,$(date()~1),_b,exec('msc','tagger',_a),$(date()~1),date()~2);
{? _mtab.first()
|| {! |?
      _maska:=_mtab.MASK1+form(_mtab.MASK2,-2);
      _mtab.MASKAD:=_maska;
      _maska:=_mtab.EMASK+2;
      _mtab.MASKAO:=_maska;
      _mtab.put();
      _mtab.next()
   !}
?};
_mtab


\par_help
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła pomocnicza do obługi wartości parametrów
::   WE: _a - Wartość par. mogącego przyjmować jedną z czterech wart. (ostatni zapis, najczęstszy, formuła, brak)
::   WY: Szukana wartość
::----------------------------------------------------------------------------------------------------------------------
{? 1+_a='B'
|| 'B'
|? 1+_a='O'
|| 'O'
|? 1+_a='N'
|| _par:=_a;
   _data:=STR.sub(_par,'Najczęściej stosowany zapis od ','');
   STR.split(_data,'/');
   _hlp:=obj_new('MC','ROK');
   _hlp.MC:=STR.get_word();
   _hlp.ROK:=STR.get_word();
   _hlp
|? 1+_a='F'
|| _form:=9-_a;
   _form
?}


\cur_okro_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła zwraca OKRO_F.ref() dla bieżącej daty
::   WE: [_a] - data dla której ma być znaleziony OKRO_F.ref() (brak - dzisiejsza data)
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of(date())
|| _data:=_a
|| _data:=date()
?};
ROK_F.cntx_psh(); ROK_F.prefix();
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix();
{? OKRO_F.last()
|| {! |?
      {? _data>=OKRO_F.POCZ & _data<=OKRO_F.KON & OKRO_F.ROK().FIRMA=REF.FIRMA
      || _ref:=OKRO_F.ref();
         _dalej:=0
      || _dalej:=OKRO_F.prev()
      ?};
      _dalej
   !}
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop();
_ref


\a_dk_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła uzupełniająca TAGAGR o dane potrzebne do podpowiedzi w nagłówku dokumentów
::   WE: _a - wskazanie na kontrahenta
::       _b - źródło: DK-dokumenty księgowe, OF - dokumenty w obiegu
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh(); KH.cntx_psh(); KH.prefix();
_ref:=null; _uref:=_kod:='';
{? KH.seek(_a)
|| _ref:=KH.ref(); _uref:=KH.uidref(); _kod:=KH.KOD
|| DOK.cntx_pop(); KH.cntx_pop(); return(0)
?};
{? _>1 & _b='OF'
|| _of:='and DOK.EDOKUM like \'skid_v%\' '
|| _of:='and DOK.EDOKUM not like \'skid_v%\' and DOK.DOKZRODL like \'dokum%\' '
?};
_sql1:='select DOK.IDADD as IDA, DOK.REFERENCE as REF, DOK.IDPUT as PUT1, ODD.FIRMA, DOK.REJ, DOK.DOK_REJ, '+
               'DOK.ODD, DOK_REJ.NAZ as DOKNAZ, REJ.KOD as REJKOD, RVAT.SYM as RVAT '+
       'from DOK join ODD using(DOK.ODD, ODD.REFERENCE) '+
       'join REJ using(DOK.REJ, REJ.REFERENCE) '+
       'join DOK_REJ using(DOK.DOK_REJ, DOK_REJ.REFERENCE) '+
       'join VAT_REJ using(DOK.RVAT, VAT_REJ.REFERENCE) '+
       'join RVAT using(VAT_REJ.RVAT, RVAT.REFERENCE) '+
       'join SLO using(DOK.WYS, SLO.REFERENCE) '+
       'join SLU using(SLO.SLU, SLU.REFERENCE) '+
       'join KH using(SLO.KOD, KH.KOD) '+
       'where ODD.FIRMA=\':_a\' and DOK.RVAT<>\'\' and SLU.WZ=\'Kontrahent\' and KH.REFERENCE=\':_b\' '+
       'and DOK.ZP=\'T\' '+_of+'and DOK_REJ.KOR=\'N\' '
       'order by 1 asc';
TAGAGR.cntx_psh();
TAGAGR.index('TAG1'); TAGAGR.prefix(_uref,$REF.FIRMA,_b,'NAG');
{? TAGAGR.first() || _empty:=0 || _empty:=1 ?};
{? 1+TAG_PAR.p300922='B'
|| 0
|? 1+TAG_PAR.p300922='O'
|| {? TAGAGR.first()
   || {! |? TAGAGR.del() !}
   ?};
   OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix();
   ROK_F.cntx_psh(); ROK_F.prefix();
   _oref:=exec('cur_okro_f','tagger');
   {? OKRO_F.seek(_oref)
   || {! |?
         _msk1:=OKRO_F.ROK().KOD; _msk2:=OKRO_F.NR;
         _mask:='doku'+_msk1+form(_msk2,-2);
         DOK.use(_mask); DOK.prefix();
         _tab:=sql(_sql1,$REF.FIRMA,$_ref);
         {? _tab.last()
         || _dalej:=0;
            TAGAGR.TAGREF:=_uref;
            TAGAGR.TAGKOD:=_kod;
            TAGAGR.FIRMA:=$REF.FIRMA;
            TAGAGR.SOURCE:=_b;
            TAGAGR.REF1:=':'+_tab.IDA+_tab.REF;
            TAGAGR.PUT1:=_tab.PUT1;
            TAGAGR.TYP:='NAG';
            TAGAGR.P1:=_tab.REJKOD;
            TAGAGR.P2:=_tab.DOKNAZ;
            TAGAGR.P3:=_tab.RVAT;
            TAGAGR.P4:=_tab.ODD;
            TAGAGR.add(1)
         || _dalej:=OKRO_F.prev()
         ?};
         &_tab;
         _dalej
      !}
   ?};
   OKRO_F.cntx_pop(); ROK_F.cntx_pop()
|? 1+TAG_PAR.p300922='N'
|| _hlp:=exec('par_help','tagger',TAG_PAR.p300922);
   _mtab:=exec('mask_tab','tagger',_hlp.MC,_hlp.ROK);
   _proceed:=1;
   {? ~_empty & _mtab.first()
   || {? TAGAGR.first() || _compare:=TAGAGR.REF1 || _compare:='' ?};
      _msrc:=ref_name(_compare)+4;
      {? _mtab.MASKAD=_msrc
      || _proceed:=0
      || _msk1:=2+_msrc;
         _msk2:=_msrc+2;
         _tagdel:=2;
         {? 1+_msk2='0' || _msk2:=_msk2+1 ?};
         {? _mtab.MASK1>_msk1 | (_mtab.MASK1=_msk1 & _mtab.MASK2>#_msk2)
         || _tagdel:=1
         |? _mtab.MASK1<_msk1 | (_mtab.MASK1=_msk1 & _mtab.MASK2<#_msk2)
         || _tagdel:=0
         ?};
         {? _tagdel
         || {? TAGAGR.first()
            || {! |?
                  _tmp:=ref_name(TAGAGR.REF1);
                  _tmp:=_tmp+4;
                  {? _mtab.MASK1>(2+_tmp) | (_mtab.MASK1=(2+_tmp) & _mtab.MASK2>#(_tmp+2))
                  || TAGAGR.del()
                  || TAGAGR.next()
                  ?}
               !}
            ?}; _proceed:=0
         || {! |?
               {? _mtab.MASK1>_msk1 | (_mtab.MASK1=_msk1 & _mtab.MASK2>=#_msk2)
               || _mtab.del()
               || _mtab.next()
               ?}
            !}
         ?}
      ?}
   ?};
   {? _proceed & _mtab.first()
   || {! |?
         DOK.use('doku'+_mtab.MASKAD); DOK.prefix();
         _tab:=sql(_sql1,$REF.FIRMA,$_ref);
         {? _tab.first()
         || {! |?
               TAGAGR.TAGREF:=_uref;
               TAGAGR.TAGKOD:=_kod;
               TAGAGR.FIRMA:=$REF.FIRMA;
               TAGAGR.SOURCE:=_b;
               TAGAGR.REF1:=':'+_tab.IDA+_tab.REF;
               TAGAGR.PUT1:=_tab.PUT1;
               TAGAGR.TYP:='NAG';
               TAGAGR.P1:=_tab.REJKOD;
               TAGAGR.P2:=_tab.DOKNAZ;
               TAGAGR.P3:=_tab.RVAT;
               TAGAGR.P4:=_tab.ODD;
               TAGAGR.add(1);
               _tab.next()
            !}
         ?};
         &_tab;
         _mtab.next()
      !}
   |? ~_mtab.first()
   || {? TAGAGR.first()
      || {! |?
            TAGAGR.del()
         !}
      ?}
   ?}
?};
DOK.cntx_pop(); KH.cntx_pop(); TAGAGR.cntx_pop();
1


\a_dk_vpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła uzupełniająca TAGAGR o dane potrzebne do podpowiedzi dla VPOZ
::   WE: _a - wskazanie na kontrahenta
::       _b - źródło: DK-dokumenty księgowe KSef, OF - dokumenty w obiegu, DO - Dokumenty księgowe
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh(); KH.cntx_psh(); VPOZ.cntx_psh(); KH.prefix();
_ref:=null; _uref:=_kod:='';
{? KH.seek(_a)
|| _ref:=KH.ref(); _uref:=KH.uidref(); _kod:=KH.KOD
|| DOK.cntx_pop(); KH.cntx_pop(); VPOZ.cntx_pop(); return(0)
?};
VROZ.cntx_psh();
TAGAGR.cntx_psh();
TAGAGR.index('TAG1'); TAGAGR.prefix(_uref,$REF.FIRMA,_b,'VPZ');
{? TAGAGR.first() || _empty:=0 || _empty:=1 ?};
{? _>1 & _b='OF'
|| _of:='and DOK.EDOKUM like \'skid_v%\' '
|? _>1 & _b='DO'
|| _of:='and DOK.EDOKUM not like \'skid_v%\' '
|| _of:='and DOK.EDOKUM not like \'skid_v%\' and DOK.DOKZRODL like \'dokum%\' '
?};
_sql1:='select VPOZ.IDADD as IDA, VPOZ.REFERENCE as REF, VPOZ.IDPUT as PUT1, ODD.FIRMA, VPOZ.REJ, VPOZ.DOK_REJ, '+
              'VPOZ.ODD, VPOZ.PR, GR_VAT.GRVAT as GRVAT, VPOZ.R, VPOZ.KK, VPOZ.K2, DOK.IDADD as IDADOK, VPOZ.DOK, '+
              'DOK.IDPUT as PUTDOK, REJ.KOD as REJKOD, RVAT.SYM as RVAT '+
       'from VPOZ '+
       'join ODD using(VPOZ.ODD, ODD.REFERENCE) '+
       'join DOK using(VPOZ.DOK, DOK.REFERENCE) '+
       'join REJ using(VPOZ.REJ, REJ.REFERENCE) '+
       'join VAT_REJ using(VPOZ.RVAT, VAT_REJ.REFERENCE) '+
       'join RVAT using(VAT_REJ.RVAT, RVAT.REFERENCE) '+
       'join SLO using(VPOZ.WYS, SLO.REFERENCE) '+
       'join SLU using(SLO.SLU, SLU.REFERENCE) '+
       'join KH using(SLO.KOD, KH.KOD) '+
       'join GR_VAT using(VPOZ.GRVAT, GR_VAT.REFERENCE)'
       'where ODD.FIRMA=\':_a\' and SLU.WZ=\'Kontrahent\' and KH.REFERENCE=\':_b\' '+
       'and DOK.ZP=\'T\' '+_of+'and DOK.KOR=\'\' '
       'order by 1 asc';
{? 1+TAG_PAR.p300923='B'
|| 0
|? 1+TAG_PAR.p300923='O'
|| {? TAGAGR.first()
   || {! |? exec('del_vrz_tagagr','tagger',_b,TAGAGR.REF2); TAGAGR.del() !}
   ?};
   OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix();
   ROK_F.cntx_psh(); ROK_F.prefix();
   _oref:=exec('cur_okro_f','tagger');
   {? OKRO_F.seek(_oref)
   || {! |?
         _msk1:=OKRO_F.ROK().KOD; _msk2:=OKRO_F.NR;
         _mask:='doku'+_msk1+form(_msk2,-2);
         DOK.use(_mask); DOK.prefix();
         VPOZ.use('pozv'+(_mask+4)); VPOZ.prefix();
         VROZ.use('povr'+(_mask+4)); VROZ.prefix();
         _tab:=sql(_sql1,$REF.FIRMA,$_ref);
         {? _tab.last()
         || _dalej:=0;
            TAGAGR.TAGREF:=_uref;
            TAGAGR.TAGKOD:=_kod;
            TAGAGR.FIRMA:=$REF.FIRMA;
            TAGAGR.SOURCE:=_b;
            TAGAGR.REF1:=':'+_tab.IDADOK+_tab.DOK;
            TAGAGR.PUT1:=_tab.PUTDOK;
            TAGAGR.REF2:=':'+_tab.IDA+_tab.REF;
            TAGAGR.PUT2:=_tab.PUT1;
            TAGAGR.TYP:='VPZ';
            TAGAGR.P1:=_tab.PR;
            TAGAGR.P2:=_tab.REJKOD;
            TAGAGR.P3:=_tab.GRVAT;
            TAGAGR.P4:=_tab.R;
            TAGAGR.P5:=_tab.KK;
            TAGAGR.P6:=_tab.K2;
            TAGAGR.P7:=_tab.ODD;
            TAGAGR.P8:=_tab.RVAT;
            TAGAGR.add(1);
            {? TAGAGR.P5='<- F3 ->'
            || exec('a_vrz','tagger','KK',_tab.REF,TAGAGR.SOURCE,_uref,_kod)
            ?};
            {? TAGAGR.P6='<- F3 ->'
            || exec('a_vrz','tagger','K2',_tab.REF,TAGAGR.SOURCE,_uref,_kod)
            ?}
         || _dalej:=OKRO_F.prev()
         ?};
         &_tab;
         _dalej
      !}
   ?};
   OKRO_F.cntx_pop(); ROK_F.cntx_pop()
|? 1+TAG_PAR.p300923='N'
|| _hlp:=exec('par_help','tagger',TAG_PAR.p300923);
   _mtab:=exec('mask_tab','tagger',_hlp.MC,_hlp.ROK);
   _proceed:=1;
   {? ~_empty & _mtab.first()
   || {? TAGAGR.first() || _compare:=TAGAGR.REF2 || _compare:='' ?};
      _msrc:=ref_name(_compare)+4;
      {? _mtab.MASKAD=_msrc
      || _proceed:=0
      || _msk1:=2+_msrc;
         _msk2:=_msrc+2;
         _tagdel:=2;
         {? 1+_msk2='0' || _msk2:=_msk2+1 ?};
         {? _mtab.MASK1>_msk1 | (_mtab.MASK1=_msk1 & _mtab.MASK2>#_msk2)
         || _tagdel:=1
         |? _mtab.MASK1<_msk1 | (_mtab.MASK1=_msk1 & _mtab.MASK2<#_msk2)
         || _tagdel:=0
         ?};
         {? _tagdel
         || {? TAGAGR.first()
            || {! |?
                  _tmp:=ref_name(TAGAGR.REF2);
                  _tmp:=_tmp+4;
                  {? _mtab.MASK1>(2+_tmp) | (_mtab.MASK1=(2+_tmp) & _mtab.MASK2>#(_tmp+2))
                  || exec('del_vrz_tagagr','tagger',_b,TAGAGR.REF2);
                     TAGAGR.del()
                  || TAGAGR.next()
                  ?}
               !}
            ?}; _proceed:=0
         || {! |?
               {? _mtab.MASK1>_msk1 | (_mtab.MASK1=_msk1 & _mtab.MASK2>=#_msk2)
               || _mtab.del()
               || _mtab.next()
               ?}
            !}
         ?};
         1
      ?}
   ?};
   {? _proceed & _mtab.first()
   || {! |?
         DOK.use('doku'+_mtab.MASKAD); DOK.prefix();
         VPOZ.use('pozv'+_mtab.MASKAD); VPOZ.prefix();
         VROZ.use('povr'+(_mtab.MASKAD)); VROZ.prefix();
         _tab:=sql(_sql1,$REF.FIRMA,$_ref);
         {? _tab.first()
         || {! |?
               TAGAGR.TAGREF:=_uref;
               TAGAGR.TAGKOD:=_kod;
               TAGAGR.FIRMA:=$REF.FIRMA;
               TAGAGR.SOURCE:=_b;
               TAGAGR.REF1:=':'+_tab.IDADOK+_tab.DOK;
               TAGAGR.PUT1:=_tab.PUTDOK;
               TAGAGR.REF2:=':'+_tab.IDA+_tab.REF;
               TAGAGR.PUT2:=_tab.PUT1;
               TAGAGR.TYP:='VPZ';
               TAGAGR.P1:=_tab.PR;
               TAGAGR.P2:=_tab.REJKOD;
               TAGAGR.P3:=_tab.GRVAT;
               TAGAGR.P4:=_tab.R;
               TAGAGR.P5:=_tab.KK;
               TAGAGR.P6:=_tab.K2;
               TAGAGR.P7:=_tab.ODD;
               TAGAGR.P8:=_tab.RVAT;
               TAGAGR.add(1);
               {? TAGAGR.P5='<- F3 ->'
               || exec('a_vrz','tagger','KK',_tab.REF,TAGAGR.SOURCE,_uref,_kod)
               ?};
               {? TAGAGR.P6='<- F3 ->'
               || exec('a_vrz','tagger','K2',_tab.REF,TAGAGR.SOURCE,_uref,_kod)
               ?};
               _tab.next()
            !}
         ?};
         &_tab;
         _mtab.next()
      !}
   |? ~_mtab.first()
   || {? TAGAGR.first()
      || {! |?
            TAGAGR.del()
         !}
      ?}
   ?}
?};
DOK.cntx_pop(); KH.cntx_pop(); VPOZ.cntx_pop(); TAGAGR.cntx_pop(); VROZ.cntx_pop();
1


\a_vrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Uzupełnia TAGAGR o dane do podpowiedzi dla VROZ
::   WE: _a - 'KK'/'K2', _b - VPOZ.ref(), _c - TAGAGR.SOURCE, _d - KH.uidref(), _e - KH.KOD
::----------------------------------------------------------------------------------------------------------------------
VROZ.cntx_psh(); VPOZ.cntx_psh(); VPOZ.prefix();
{? VPOZ.seek(_b)
|| VROZ.index('VROZ'); VROZ.prefix(VPOZ.ref(),_a)
|| VROZ.cntx_pop(); VPOZ.cntx_pop(); return(0)
?};
TAGAGR.cntx_psh();
TAGAGR.index('TAG1'); TAGAGR.prefix(_d,$REF.FIRMA,_c,'VRZ');
_podstawa:=0;
{? VROZ.first()
|| {! |?
      _podstawa+=VROZ.KW;
      VROZ.next()
   !}
?};
{? VROZ.first()
|| {! |?
      TAGAGR.REF2:=VROZ.uidref();
      TAGAGR.PUT2:=VROZ.IDPUT;
      TAGAGR.P1:=_a;
      TAGAGR.P2:=VROZ.KONTO;
      {? _podstawa<>0
      || TAGAGR.R1:=VROZ.KW/_podstawa
      || TAGAGR.R1:=1
      ?};
      VROZ.VPOZ();
      TAGAGR.TAGREF:=_d;
      TAGAGR.TAGKOD:=_e;
      TAGAGR.FIRMA:=$REF.FIRMA;
      TAGAGR.SOURCE:=_c;
      TAGAGR.REF1:=VPOZ.uidref();
      TAGAGR.PUT1:=VPOZ.IDPUT;
      TAGAGR.TYP:='VRZ';
      TAGAGR.add(1);
      VROZ.next()
   !}
?};
TAGAGR.cntx_pop();
VROZ.cntx_pop(); VPOZ.cntx_pop();
1


\del_vrz_tagagr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa rekordy typu VRZ z tabeli TAGAGR dla wybranych VPOZ
::   WE: _a - Źródło pochodzenia danych, _b - VPOZ.uidref()
::----------------------------------------------------------------------------------------------------------------------
TAGAGR.cntx_psh();
TAGAGR.index('VRZ'); TAGAGR.prefix('VRZ',_a,_b);
{? TAGAGR.first()
|| {! |?
      TAGAGR.del()
   !}
?};
TAGAGR.cntx_pop();
1


\e_con_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła uzupełniająca dane w tabeli ECON_SCH
::----------------------------------------------------------------------------------------------------------------------
ECON_SCH.cntx_psh();
_maska:=(ref_name($EDOKUM.ref))+2;
ECON_SCH.use('edosch'+_maska);
ECON_SCH.index('ONE'); ECON_SCH.prefix(EDOKUM.uidref());
{? ECON_SCH.first() || {! |? ECON_SCH.del() !} ?};
ECON_SCH.EDOKUM:=EDOKUM.uidref();
ECON_SCH.EDOKUMR:=$EDOKUM.ref();
ECON_SCH.ETSCHPDR:=ETSCHPDR.uidref();
ECON_SCH.DATE:=date();
ECON_SCH.add();
ECON_SCH.cntx_pop()


\a_of_csh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła uzupełniająca TAGAGR o dane potrzebne do podpowiedzi dla schematów controllingowych
::   WE: _a - wskazanie na kontrahenta
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh(); KH.prefix();
_ref:=null; _uref:=_kod:='';
{? KH.seek(_a)
|| _ref:=KH.ref(); _uref:=KH.uidref(); _kod:=KH.KOD
|| KH.cntx_pop(); return(0)
?};
TYPOBIEG.cntx_psh(); TYPOBIEG.index('UNIK'); TYPOBIEG.prefix('Obieg faktur','Obieg faktur'); _typobieg:=null;
{? TYPOBIEG.first()
|| _typobieg:=TYPOBIEG.ref()
|| KH.cntx_pop(); TYPOBIEG.cntx_pop(); return(0)
?};
TYPOBIEG.cntx_pop();
EDOKUM.cntx_psh(); EDOKOS.cntx_psh(); ECON_SCH.cntx_psh();
TAGAGR.cntx_psh();
TAGAGR.index('TAG1'); TAGAGR.prefix(_uref,$REF.FIRMA,'OF','CSH');
{? TAGAGR.first() || _empty:=0 || _empty:=1 ?};
_sql2:='select EDOKUM.REFERENCE '+
       'from EDOKUM '+
       'join EDOKOS using(EDOKOS.EDOKUM, EDOKUM.REFERENCE) '+
       'where KH.REFERENCE=\':_a\' and EDOKUM.FIRMA=\':_b\' and EDOKUM.TYPOBIEG=\':_c\' '+
       'and EDOKOS.B_PREL=EDOKUM.B_PREL';
_sql1:='select ECON_SCH.IDADD, ECON_SCH.ETSCHPDR, EDOKUM.IDADD as IDA, EDOKUM.REFERENCE as REF, EDOKUM.IDPUT as PUT1 '+
       'from ECON_SCH '+
       'join EDOKUM using(EDOKUM.REFERENCE, ECON_SCH.EDOKUMR) '+
       'join EDOKOS using(EDOKOS.EDOKUM, EDOKUM.REFERENCE) '+
       'join KH using(KH.REFERENCE, EDOKUM.KHKH) '+
       'where KH.REFERENCE=\':_a\' and EDOKUM.FIRMA=\':_b\' and EDOKUM.TYPOBIEG=\':_c\' and EDOKUM.ZAM<>\'T\' '+
       'and EDOKOS.OPERACJA=\'A\' and EDOKUM.REFERENCE not in (%1) '[_sql2]+
       'order by 1 asc';
{? 1+TAG_PAR.p300921='B'
|| 0
|? 1+TAG_PAR.p300921='O'
|| {? TAGAGR.first()
   || {! |? TAGAGR.del() !}
   ?};
   _mask:=($(date()~1))+2;
   {! |?
      EDOKUM.use('skid_v'+_mask); EDOKUM.prefix();
      EDOKOS.use('skid_y'+_mask); EDOKOS.prefix();
      ECON_SCH.use('edosch'+_mask); ECON_SCH.prefix();
      _tab:=sql(_sql1,$_ref,$REF.FIRMA,$_typobieg);
      {? _tab.first()
      || _dalej:=0;
         TAGAGR.TAGREF:=_uref;
         TAGAGR.TAGKOD:=_kod;
         TAGAGR.FIRMA:=$REF.FIRMA;
         TAGAGR.SOURCE:='OF';
         TAGAGR.REF1:=':'+_tab.IDA+_tab.REF;
         TAGAGR.PUT1:=_tab.PUT1;
         TAGAGR.P1:=_tab.ETSCHPDR;
         TAGAGR.TYP:='CSH';
         TAGAGR.add(1)
      || _dalej:=1;
         _tmpm:=(#(_mask))-1;
         {? _tmpm<0 || _dalej:=0 ?};
         _mask:=form(_tmpm,-2)
      ?};
      &_tab;
      _dalej
   !}
|? 1+TAG_PAR.p300921='N'
|| _hlp:=exec('par_help','tagger',TAG_PAR.p300921);
   _mtab:=exec('mask_tab','tagger',_hlp.MC,_hlp.ROK);
   _etab:=sql('select distinct MASKAO from :_a order by 1 asc',_mtab);
   _proceed:=1;
   {? ~_empty & _mtab.first()
   || {? TAGAGR.first() || _compare:=TAGAGR.REF1 || _compare:='' ?};
      _msrc:=ref_name(_compare)+2;
      {? _etab.first() & (_etab.MASKAO+2)=_msrc
      || _proceed:=0
      || _tagdel:=2;
         {? (_etab.MASKAO+2)>_msrc
         || _tagdel:=1
         |? (_etab.MASKAO+2)<_msrc
         || _tagdel:=0
         ?};
         {? _tagdel
         || {? TAGAGR.first()
            || {! |?
                  _tmp:=ref_name(TAGAGR.REF1);
                  _tmp:=_tmp+2;
                  {? (_etab.MASKAO+2)>(_tmp+2)
                  || TAGAGR.del()
                  || TAGAGR.next()
                  ?}
               !}
            ?}
         || {! |?
               {? (_etab.MASKAO+2)<_msrc
               || _etab.del()
               || _etab.next()
               ?}
            !}
         ?}
      ?}
   ?};
   {? _proceed & _mtab.first()
   || {? _etab.first()
      || {! |?
            EDOKUM.use('skid_v'+_etab.MASKAO); EDOKUM.prefix();
            EDOKOS.use('skid_y'+_etab.MASKAO); EDOKOS.prefix();
            ECON_SCH.use('edosch'+_etab.MASKAO); ECON_SCH.prefix();
            _tab:=sql(_sql1,$_ref,$REF.FIRMA,$_typobieg);
            {? _tab.first()
            || {! |?
                  TAGAGR.TAGREF:=_uref;
                  TAGAGR.TAGKOD:=_kod;
                  TAGAGR.FIRMA:=$REF.FIRMA;
                  TAGAGR.SOURCE:='OF';
                  TAGAGR.REF1:=':'+_tab.IDA+_tab.REF;
                  TAGAGR.PUT1:=_tab.PUT1;
                  TAGAGR.P1:=_tab.ETSCHPDR;
                  TAGAGR.TYP:='CSH';
                  TAGAGR.add(1);
                  _tab.next()
               !}
            ?};
            &_tab;
            _etab.next()
         !}
      ?}
   |? ~_mtab.first()
   || {? TAGAGR.first()
      || {! |?
            TAGAGR.del()
         !}
      ?}
   ?}
?};
KH.cntx_pop(); TAGAGR.cntx_pop(); EDOKOS.cntx_pop(); EDOKUM.cntx_pop(); ECON_SCH.cntx_pop()


\z_dk_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła przygotowuje rekordy z podpowiedziami i zapisuje je w tabeli TAGGER - dla nagłówków księgowych
::   WE: _a - kontrahent
::       _b - źródło (DK/OF)
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh(); {? KH.seek(_a) || _uref:=KH.uidref(); _kod:=KH.KOD; _refkh:=KH.ref() || _uref:=_kod:=''; _refkh:=null ?};
TAGAGR.cntx_psh();
_bufor:=obj_new('TAGREF','TAGKOD','FIRMA','SOURCE','TYP','P1','P2','P3','P4');
_sql:='select COUNT(P2) as ILE, P1, P2, P3, P4 '+
      'from TAGAGR '+
      'where TAGREF=\':_a\' and SOURCE=\':_b\' and TYP=\'NAG\' and FIRMA=\':_c\' '+
      'group by P4,P1,P2,P3 '+
      'order by 1 desc';
_tab:=sql(_sql,_uref,_b,$REF.FIRMA);
_multi:=0;
{? _tab.first()
|| _tmp1:=_tab.ILE;
   {? _tab.next() & _tmp1=_tab.ILE || _multi:=1 ?}
?};
{? ~_multi & _tab.first()
|| _bufor.TAGREF:=_uref;
   _bufor.TAGKOD:=_kod;
   _bufor.FIRMA:=$REF.FIRMA;
   _bufor.SOURCE:=_b;
   _bufor.TYP:='NAG';
::REJ.KOD
   _bufor.P1:=_tab.P1;
::DOK_REJ.NAZ
   _bufor.P2:=_tab.P2;
::RVAT
   _bufor.P3:=_tab.P3;
::ODD
   _bufor.P4:=_tab.P4
|? _multi & _tab.first()
|| _tmp1:=_tab.ILE;
   _ndx:=TAGAGR.ndx_tmp(,1,'TAGREF',,,'FIRMA',,,'SOURCE',,,'TYP',,,'P1',,,'P2',,,'P3',,,'P4',,);
   TAGAGR.index(_ndx);
   _ndx2:=_tab.ndx_tmp(,1,'ILE',,);
   _tab.index(_ndx2); _tab.prefix(_tmp1);
   _refs:=tab_tmp(,'CHCK1','STRING[4]','Sprawdzenie','ID','STRING[32]','Idadd','REF','STRING[16]','REF');
   _ndx3:=_refs.ndx_tmp(,1,'CHCK1',,1,'ID',,1);
   {? _tab.first()
   || {! |?
         TAGAGR.prefix(_uref,$REF.FIRMA,_b,'NAG',_tab.P1,_tab.P2,_tab.P3,_tab.P4);
         _refs.prefix();
         {? TAGAGR.first()
         || {! |?
               _refs.REF:=$TAGAGR.ref();
               _refs.ID:=TAGAGR.IDADD;
               _refs.CHCK1:=ref_name(TAGAGR.REF1)+4;
               _refs.add(1);
               TAGAGR.next()
            !}
         ?};
         _tab.next()
      !}
   ?};
   TAGAGR.prefix();
   _refs.index(_ndx3); _refs.prefix();
   {? _refs.first() & TAGAGR.seek(_refs.REF)
   || _bufor.TAGREF:=_uref;
      _bufor.TAGKOD:=_kod;
      _bufor.FIRMA:=TAGAGR.FIRMA;
      _bufor.SOURCE:=TAGAGR.SOURCE;
      _bufor.TYP:=TAGAGR.TYP;
::REJ.KOD
      _bufor.P1:=TAGAGR.P1;
::DOK_REJ.NAZ
      _bufor.P2:=TAGAGR.P2;
::RVAT.SYM
      _bufor.P3:=TAGAGR.P3;
::ODD
      _bufor.P4:=TAGAGR.P4
   || KH.cntx_pop(); TAGAGR.ndx_drop(_ndx); TAGAGR.cntx_pop(); return(0)
   ?};
   TAGAGR.ndx_drop(_ndx)
?};
TAGGER.cntx_psh();
{? var_pres('TAGREF',_bufor)>0
|| exec('tag_mask','tagger',_refkh,'g');
   TAGGER.index('TAG1'); TAGGER.prefix('N',_bufor.TAGREF,_bufor.FIRMA,_bufor.TYP,_bufor.SOURCE);
   {? TAGGER.first() || {! |? TAGGER.del() !} ?};
   TAGGER.TAGREF:=_bufor.TAGREF;
   TAGGER.TAGKOD:=_bufor.TAGKOD;
   TAGGER.FIRMA:=_bufor.FIRMA;
   TAGGER.SOURCE:=_bufor.SOURCE;
   TAGGER.TYP:=_bufor.TYP;
   TAGGER.P1:=_bufor.P1;
   TAGGER.P2:=_bufor.P2;
   TAGGER.P3:=_bufor.P3;
   TAGGER.P4:=_bufor.P4;
   TAGGER.USRSET:='N';
   TAGGER.add(1)
?};
TAGGER.cntx_pop();
KH.cntx_pop(); TAGAGR.cntx_pop();
1


\vpz_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła pomocnicza dla zapytań sql w z_dk_vpz
::   WE: _a - typ zapytania (GR-grupa, KO-konta)
::   WY: treść zapytania sql
::----------------------------------------------------------------------------------------------------------------------
_sql:={? _a='GR'
      || 'select COUNT(P3) as ILE, P3 '
      |? _a='KO'
      || 'select COUNT(P4) as ILE, P4, P5, P6 '
      ?};
_grp:={? _a='GR'
      || 'group by P3 '
      |? _a='KO'
      || 'group by P4, P5, P6 '
      ?};
_sql+='from TAGAGR '+
      'where TAGREF=\':_a\' and SOURCE=\':_b\' and TYP=\'VPZ\' and FIRMA=\':_c\' '+
      'and P7=\':_d\' and P2=\':_e\' and P1=\':_f\' '+_grp+
      'order by 1 desc';
_sql


\z_dk_vpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła przygotowuje rekordy z podpowiedziami i zapisuje je w tabeli TAGGER - dla pozycji VAT
::   WE: _a - kontrahent
::       _b - źródło (DK/OF/DO)
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh(); {? KH.seek(_a) || _uref:=KH.uidref(); _kod:=KH.KOD; _refkh:=KH.ref() || _uref:=_kod:=''; _refkh:=null ?};
TAGAGR.cntx_psh(); TAGAGR.prefix();
TAGGER.cntx_psh(); exec('tag_mask','tagger',_refkh,'g'); TAGGER.index('VPZ'); TAGGER.prefix();
_bufor:=obj_new('TAGREF','TAGKOD','FIRMA','SOURCE','TYP','P1','P2','P3','P4','P5','P6','P7','INT1');
_sql1:='select distinct P7, P2, P1 '+
       'from TAGAGR '+
       'where TAGREF=\':_a\' and SOURCE=\':_b\' and TYP=\'VPZ\' and FIRMA=\':_c\'';
_groups:=sql(_sql1,_uref,_b,$REF.FIRMA);
{? _groups.first()
|| {! |?
      _sql2:=exec('vpz_sql','tagger','GR');
      _tabgr:=sql(_sql2,_uref,_b,$REF.FIRMA,_groups.P7,_groups.P2,_groups.P1);
      _sql3:=exec('vpz_sql','tagger','KO');
      _tabko:=sql(_sql3,_uref,_b,$REF.FIRMA,_groups.P7,_groups.P2,_groups.P1);
      _is_ok:=0;
      {? _tabgr.first()
      || _bufor.P3:=_tabgr.P3;
         _bufor.INT1:=_tabgr.ILE;
         _is_ok:=1
      ?};
      {? _tabko.first()
      || _bufor.P4:=_tabko.P4;
         _bufor.P5:=_tabko.P5;
         _bufor.P6:=_tabko.P6
::         _is_ok:=1
      ?};
      {? _is_ok
      || _bufor.TAGREF:=_uref;
         _bufor.TAGKOD:=_kod;
         _bufor.FIRMA:=$REF.FIRMA;
         _bufor.SOURCE:=_b;
         _bufor.TYP:='VPZ';
         _bufor.P1:=_groups.P1;
         _bufor.P2:=_groups.P2;
         _bufor.P7:=_groups.P7;
         TAGGER.prefix('N',_uref,$REF.FIRMA,'VPZ',_groups.P1,_groups.P2,_groups.P7,_b);
         {? TAGGER.first()
         || {! |?
               exec('del_vrz_tagger','tagger',_uref,TAGGER.uidref());
               TAGGER.del()
            !}
         ?};
         TAGGER.prefix(); TAGGER.blank();
         TAGGER.TAGREF:=_bufor.TAGREF;
         TAGGER.TAGKOD:=_bufor.TAGKOD;
         TAGGER.FIRMA:=_bufor.FIRMA;
         TAGGER.SOURCE:=_bufor.SOURCE;
         TAGGER.TYP:=_bufor.TYP;
         TAGGER.P1:=_bufor.P1;
         TAGGER.P2:=_bufor.P2;
         TAGGER.P3:=_bufor.P3;
         TAGGER.P4:=_bufor.P4;
         TAGGER.P5:=_bufor.P5;
         TAGGER.P6:=_bufor.P6;
         TAGGER.P7:=_bufor.P7;
         TAGGER.R1:=_bufor.INT1;
         TAGGER.USRSET:='N';
         TAGGER.add(1);
         _tmpref:=TAGGER.uidref();
         {? TAGGER.P5='<- F3 ->'
         || exec('z_vrz','tagger','KK',_b,_uref,_kod,TAGGER.P1,TAGGER.P2,TAGGER.P3,TAGGER.P4,TAGGER.P5,TAGGER.P6,
                  TAGGER.P7,_tmpref)
         |? TAGGER.P6='<- F3 ->'
         || exec('z_vrz','tagger','K2',_b,_uref,_kod,TAGGER.P1,TAGGER.P2,TAGGER.P3,TAGGER.P4,TAGGER.P5,TAGGER.P6,
                  TAGGER.P7,_tmpref)
         ?}
      ?};
      &_tabgr; &_tabko;
      _groups.next()
   !}
?};
TAGAGR.cntx_pop(); KH.cntx_pop(); TAGGER.cntx_pop();
1


\del_vrz_tagger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła pomocnicza - usuwa rekordy VRZ z TAGGER
::   WE: _a - KH.uidref()
::       _b - wskazanie na rekord z TAGGER typu VPZ
::----------------------------------------------------------------------------------------------------------------------
TAGGER.cntx_psh();
TAGGER.index('VRZ'); TAGGER.prefix(_a,'VRZ','KK',_b);
{? TAGGER.first()
|| {! |? TAGGER.del() !}
?};
TAGGER.prefix(_a,'VRZ','K2',_b);
{? TAGGER.first()
|| {! |? TAGGER.del() !}
?};
TAGGER.cntx_pop()


\z_vrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Uzupełnia TAGGER o dane do podpowiedzi dla VROZ
::   WE: _a - 'KK'/'K2',
::       _b - SOURCE,
::       _c - KH.uidref(),
::       _d - KH.KOD,
::       _e.._k - TAGGER.P1..P7(z typu VPZ),
::       _l - TAGGER.uidref
::----------------------------------------------------------------------------------------------------------------------
TAGAGR.cntx_psh(); TAGAGR.index('VPZ_I'); TAGAGR.prefix(_c,$REF.FIRMA,'VPZ',_b,_e,_f,_g,_h,_i,_j,_k);
TAGGER.cntx_psh(); TAGGER.prefix();
_ref:='';
{? TAGAGR.last()
|| _ref:=TAGAGR.REF2
?};
TAGAGR.index('VRZ'); TAGAGR.prefix('VRZ',_b,_ref,_a);
{? TAGAGR.first()
|| {! |?
      TAGGER.TAGREF:=_c;
      TAGGER.TAGKOD:=_d;
      TAGGER.FIRMA:=$REF.FIRMA;
      TAGGER.TYP:='VRZ';
      TAGGER.SOURCE:=_b;
      TAGGER.P1:=_a;
      TAGGER.P2:=TAGAGR.P2;
      TAGGER.P3:=_l;
      TAGGER.R1:=TAGAGR.R1;
      TAGGER.USRSET:='N';
      TAGGER.add(1);
      TAGAGR.next()
   !}
?};

TAGAGR.cntx_pop(); TAGGER.cntx_pop(); 1


\z_of_csh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła uzupełniająca TAGGER o dane potrzebne do podpowiedzi dla schematów controllingowych
::   WE: _a - wskazanie na kontrahenta
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh(); {? KH.seek(_a) || _uref:=KH.uidref(); _kod:=KH.KOD || _uref:=_kod:='' ?};
_sql:='select COUNT(P1), P1 '+
      'from TAGAGR '+
      'where TAGREF=\':_a\' and FIRMA=\':_b\' and SOURCE=\'OF\' and TYP=\'CSH\' '+
      'group by P1 '+
      'order by 1 desc';
_tab:=sql(_sql,_uref,$REF.FIRMA);
TAGGER.cntx_psh(); TAGGER.index('TAG1');
{? _tab.first()
|| TAGGER.prefix('N',_uref,$REF.FIRMA,'CSH','OF');
   {? TAGGER.first() || {! |? TAGGER.del() !} ?};
   TAGGER.prefix();
   TAGGER.TAGREF:=_uref;
   TAGGER.TAGKOD:=_kod;
   TAGGER.FIRMA:=$REF.FIRMA;
   TAGGER.TYP:='CSH';
   TAGGER.SOURCE:='OF';
   TAGGER.P1:=_tab.P1;
   TAGGER.USRSET:='N';
   TAGGER.add(1)
?};
TAGGER.cntx_pop();
KH.cntx_pop(); 1


\tagagr_dok_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Uzupełnianie "na bieżąco" tabeli TAGAGR (typy NAG, VPZ)
::   WE: _a - DOK.uidref()
::----------------------------------------------------------------------------------------------------------------------
_p300922:=exec('get','#params',300922,type_of('a'));
_p300923:=exec('get','#params',300923,type_of('a'));
{? (1+_p300922)='B' & (1+_p300923)='B' || return(1) ?};
_rname:=(ref_name(_a))+4; _nagdalej:=_vpzdalej:=1;
{? (1+_p300922)='N'
|| _hlp:=exec('par_help','tagger',_p300922);
   _mtab:=exec('mask_tab','tagger',_hlp.MC,_hlp.ROK);
   _ndx:=_mtab.ndx_tmp(,1,'MASKAD',,); _mtab.index(_ndx); _mtab.prefix(_rname);
   {? _mtab.first() || _nagdalej:=1 || _nagdalej:=0 ?}; _mtab.ndx_drop(_ndx); &_ndx; &_hlp; &_mtab
|? (1+_p300923)='N'
|| _hlp:=exec('par_help','tagger',_p300923);
   _mtab:=exec('mask_tab','tagger',_hlp.MC,_hlp.ROK);
   _ndx:=_mtab.ndx_tmp(,1,'MASKAD',,); _mtab.index(_ndx); _mtab.prefix(_rname);
   {? _mtab.first() || _vpzdalej:=1 || _vpzdalej:=0 ?}; _mtab.ndx_drop(_ndx); &_ndx; &_hlp; &_mtab
?};
{? ~_nagdalej & ~_vpzdalej || return(1) ?};
KH.cntx_psh(); KH.prefix();
DOK.cntx_psh(); DOK.prefix();
TAGAGR.cntx_psh();
_refdok:=_refkh:=null; _dalej:=0; _rvat:=_odd:=_doknaz:=_rejkod:=_firma:=_uref:=_kod:='';
{? DOK.seek(_a) & DOK.WYS<>null & DOK.WYS().SLU().WZ='Kontrahent' & DOK.RVAT<>null
|| KH.index('KOD'); KH.prefix(2,DOK.WYS().KOD);
   {? KH.first() & KH.TAGGER='T'
   || ODD.cntx_psh(); REJ.cntx_psh(); DOK_REJ.cntx_psh(); VAT_REJ.cntx_psh(); RVAT.cntx_psh();
      _refdok:=DOK.ref(); _dokput:=DOK.idput_value(); _refkh:=KH.ref(); _uref:=KH.uidref(); _kod:=KH.KOD;
      _firma:=$DOK.ODD().FIRMA; _rejkod:=DOK.REJ().KOD; _doknaz:=DOK.DOK_REJ().NAZ; _rvat:=DOK.RVAT().RVAT().SYM;
      _odd:=$DOK.ODD;
      ODD.cntx_pop(); REJ.cntx_pop(); DOK_REJ.cntx_pop(); VAT_REJ.cntx_pop(); RVAT.cntx_pop();
      exec('tag_mask','tagger',_refkh,'a');
      _dalej:=1
   ?}
?};
{? _dalej & (1+_p300922)<>'B' & _nagdalej
|| {? (1+_p300922)='O'
   || TAGAGR.index('TAG1'); TAGAGR.prefix(_uref,_firma,{? 6+DOK.EDOKUM='skid_v' || 'OF' || 'DK' ?},'NAG');
      {? TAGAGR.first() || {! |? TAGAGR.del() !} ?}
   ?};
   TAGAGR.prefix(); TAGAGR.blank();
   TAGAGR.TAGREF:=_uref;
   TAGAGR.TAGKOD:=_kod;
   TAGAGR.FIRMA:=_firma;
   TAGAGR.SOURCE:={? 6+DOK.EDOKUM='skid_v' || 'OF' |? 5+DOK.DOKZRODL='dokum' || 'DK' || 'DO' ?};
   TAGAGR.TYP:='NAG';
   TAGAGR.REF1:=_a;
   TAGAGR.PUT1:=_dokput;
   TAGAGR.P1:=_rejkod;
   TAGAGR.P2:=_doknaz;
   TAGAGR.P3:=_rvat;
   TAGAGR.P4:=_odd;
   {? TAGAGR.SOURCE<>'DO'
   || TAGAGR.add(1)
   ?};
   1
?};
{? _dalej & (1+_p300923)<>'B' & _vpzdalej
|| {? (1+_p300923)='O'
   || TAGAGR.index('TAG1'); TAGAGR.prefix(_uref,_firma,{? 6+DOK.EDOKUM='skid_v' || 'OF' || 'DK' ?},'VPZ');
      {? TAGAGR.first()
      || {! |?
            {? TAGAGR.P5='<- F3 ->' | TAGAGR.P6='<- F3 ->'
            || exec('tagagr_vrz_del','tagger',_uref,TAGAGR.REF2)
            ?};
            TAGAGR.del()
         !}
      ?}
   ?};
   TAGAGR.prefix();
   VPOZ.cntx_psh();
   VPOZ.index('VDOK'); VPOZ.prefix(_refdok);
   {? VPOZ.first()
   || {! |?
         TAGAGR.blank();
         TAGAGR.TAGREF:=_uref;
         TAGAGR.TAGKOD:=_kod;
         TAGAGR.FIRMA:=_firma;
         TAGAGR.SOURCE:={? 6+DOK.EDOKUM='skid_v' || 'OF' |? 5+DOK.DOKZRODL='dokum' || 'DK' || 'DO' ?};
         TAGAGR.TYP:='VPZ';
         TAGAGR.REF1:=_a;
         TAGAGR.PUT1:=_dokput;
         TAGAGR.REF2:=VPOZ.uidref();
         TAGAGR.PUT2:=VPOZ.idput_value();
         TAGAGR.P1:=$VPOZ.PR;
         TAGAGR.P2:=_rejkod;
         TAGAGR.P3:=$VPOZ.GRVAT().GRVAT;
         TAGAGR.P4:=VPOZ.R;
         TAGAGR.P5:=VPOZ.KK;
         TAGAGR.P6:=VPOZ.K2;
         TAGAGR.P7:=$VPOZ.ODD;
         TAGAGR.P8:=_rvat;
         TAGAGR.add(1);
         {? VPOZ.KK='<- F3 ->'
         || exec('tagagr_vrz_add','tagger',VPOZ.ref(),'KK',_uref,_kod,_firma,
                 {? 6+DOK.EDOKUM='skid_v' || 'OF' |? 5+DOK.DOKZRODL='dokum' || 'DK' || 'DO' ?},
                 VPOZ.uidref(),VPOZ.idput_value())
         |? VPOZ.K2='<- F3 ->'
         || exec('tagagr_vrz_add','tagger',VPOZ.ref(),'K2',_uref,_kod,_firma,
                 {? 6+DOK.EDOKUM='skid_v' || 'OF' |? 5+DOK.DOKZRODL='dokum' || 'DK' || 'DO' ?},
                 VPOZ.uidref(),VPOZ.idput_value())
         ?};
         VPOZ.next()
      !}
   ?};
   VPOZ.cntx_pop()
?};
{? _dalej & (1+_p300922)='O' & (6+DOK.EDOKUM='skid_v' | 5+DOK.DOKZRODL='dokum')
|| exec('z_dk_nag','tagger',_uref,{? 6+DOK.EDOKUM='skid_v' || 'OF' |? 5+DOK.DOKZRODL='dokum' || 'DK' || 'DO' ?})
?};
{? _dalej & (1+_p300923)='O'
|| exec('z_dk_vpz','tagger',_uref,{? 6+DOK.EDOKUM='skid_v' || 'OF' |? 5+DOK.DOKZRODL='dokum' || 'DK' || 'DO' ?})
?};
TAGAGR.cntx_pop();
KH.cntx_pop(); DOK.cntx_pop();
1


\tagagr_vrz_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła uzupełnia "na bieżąco" tabelę TAGAGR o rekordy VROZ
::   WE: _a - VPOZ.ref()
::       _b - typ (KK/K2)
::       _c - KH.uidref()
::       _d - KH.KOD
::       _e - FIRMA
::       _f - Źródło (DK/OF)
::       _g - VPOZ.uidref()
::       _h - VPOZ.IDPUT
::----------------------------------------------------------------------------------------------------------------------
VROZ.cntx_psh();
VROZ.index('VROZ'); VROZ.prefix(_a,_b);
_podstawa:=0;
{? VROZ.first()
|| {! |?
      _podstawa+=VROZ.KW;
      VROZ.next()
   !}
?};
TAGAGR.cntx_psh(); TAGAGR.prefix();
{? VROZ.first()
|| {! |?
      TAGAGR.blank();
      TAGAGR.REF2:=VROZ.uidref();
      TAGAGR.PUT2:=VROZ.IDPUT;
      TAGAGR.P1:=_b;
      TAGAGR.P2:=VROZ.KONTO;
      {? _podstawa<>0
      || TAGAGR.R1:=VROZ.KW/_podstawa
      || TAGAGR.R1:=1
      ?};
      TAGAGR.TAGREF:=_c;
      TAGAGR.TAGKOD:=_d;
      TAGAGR.FIRMA:=_e;
      TAGAGR.SOURCE:=_f;
      TAGAGR.REF1:=_g;
      TAGAGR.PUT1:=_h;
      TAGAGR.TYP:='VRZ';
      TAGAGR.add(1);
      VROZ.next()
   !}
?};
VROZ.cntx_pop(); TAGAGR.cntx_pop(); 1


\tagagr_dok_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła usuwa "na bieżąco" rekordy z tabeli TAGAGR (typy NAG, VPZ)
::   WE: _a - DOK.uidref()
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh(); KH.prefix();
DOK.cntx_psh(); DOK.prefix();
TAGAGR.cntx_psh();
_dalej:=0; _uref:='';
{? DOK.seek(_a) & DOK.WYS<>null & DOK.WYS().SLU().WZ='Kontrahent' & DOK.RVAT<>null
|| KH.index('KOD'); KH.prefix(2,DOK.WYS().KOD);
   {? KH.first()
   || _uref:=KH.uidref(); _refkh:=KH.ref();
      exec('tag_mask','tagger',_refkh,'a');
      _dalej:=1
   ?}
?};
{? _dalej
|| TAGAGR.index('DOK'); TAGAGR.prefix(_uref,_a);
   {? TAGAGR.first()
   || {! |?
         {? TAGAGR.TYP='VPZ' & (TAGAGR.P5='<- F3 ->' | TAGAGR.P6='<- F3 ->')
         || exec('tagagr_vrz_del','tagger',_uref,TAGAGR.REF2)
         ?};
         TAGAGR.del()
      !}
   ?}
?};
TAGAGR.cntx_pop();
KH.cntx_pop(); DOK.cntx_pop();
1


\tagagr_vrz_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa "na bieżąco" rekordy typu VRZ z TAGAGR
::   WE: _a - KH.uidref(), _b - VPOZ.uidref()
::----------------------------------------------------------------------------------------------------------------------
TAGAGR.cntx_psh();
TAGAGR.index('DOK'); TAGAGR.prefix(_a,_b);
{? TAGAGR.first() || {! |? TAGAGR.del() !} ?};
TAGAGR.cntx_pop(); 1


\obiegi_sug_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Tworzy listę sugerowanych użytkowników do akceptacji
::   WE: _a - Wskazanie na kontrahenta
::----------------------------------------------------------------------------------------------------------------------
_continue:=1;
KH.cntx_psh(); KH.prefix();
TAGGER.cntx_psh();
VAR_DEL.delete('__suggested');
__suggested:=tab_tmp(,'LP','INTEGER','Lp.',
                      'USR','STRING[10]','Sugerowani użytkownicy',
                      'ILE','INTEGER','Ilość akceptacji');
VAR_DEL.delete('khsetintagger');
{? KH.seek(_a)
|| exec('tag_mask','tagger',_a,'g');
   TAGGER.index('KHSET'); TAGGER.prefix('T',KH.uidref(),$REF.FIRMA,'ACC','OF');
   _lp:=1;
   {? TAGGER.first()
   || {! |?
         __suggested.USR:=TAGGER.P1;
         __suggested.LP:=_lp;
         __suggested.ILE:=0;
         B_USRROL.cntx_psh();
         {? B_USRROL.find_key(__suggested.USR)
         || _lp+=1;
            __suggested.add(1)
         ?};
         B_USRROL.cntx_pop();
         TAGGER.next()
      !};
      khsetintagger:=1;
      _continue:=0
   ?}
?};
TAGGER.cntx_pop();
KH.cntx_pop();
{? _continue
|| {? var_pres('__edokos')<=0 || return(0) ?};
   _bsql:='select distinct :_a.REF, :_a.USER from :_a';
   _btab:=sql(_bsql,__edokos);
   _sql1:='select COUNT(:_a.USER) as ile, :_a.USER '+
          'from :_a '+
          'group by :_a.USER '+
          'order by 1 desc';
   _tab1:=sql(_sql1,_btab);
   _lp:=1;
   {? _tab1.first()
   || {! |?
         __suggested.blank();
         __suggested.USR:=_tab1.USER;
         __suggested.ILE:=_tab1.ILE;
         __suggested.LP:=_lp;
         B_USRROL.cntx_psh();
         {? B_USRROL.find_key(__suggested.USR)
         || _lp+=1;
            __suggested.add()
         ?};
         B_USRROL.cntx_pop();
         _tab1.next()
      !}
   ?}
?};
{? __suggested.first() || 1 ?};
_win:=__suggested.mk_sel('Sugerowani użytkownicy do akceptacji'@,'T',0,'sug_os',,,,,'U');
__suggested.win_fld(_win,,'LP',,,,,,'Lp.'@,,'Liczba porządkowa'@);
__suggested.win_fld(_win,,'USR',,,-30,,,'Sugerowani użytkownicy'@,,'Sugerowani użytkownicy'@);
__suggested.win_fld(_win,,'ILE',,,,,,'Ilość akceptacji'@,,'Ilość zaakceptowanych dokumentów'@);
__suggested.win_act(_win,,'Formuła','&Zaznacz sugerowanych'@,,'Zaznacz sugerowanych'@,,
                    "sel_exit(); VAR_DEL.delete('czyzaznusr');
                    {? __suggested.sel_size()=0 || czyzaznusr:=1 || czyzaznusr:=2 ?}",1,1,
                    "VAR_DEL.delete('__tmpsug'); __tmpsug:=__suggested.sel_aget()");
__suggested.win_act(_win,0,'Kolejność'@);
__suggested.win_btn(_win,'text=&Zaznacz sugerowanych,panel=bottom,align=end'@,'menu:Z');
__suggested.win_btn(_win,'text=&Anuluj,panel=bottom,align=end'@,'key:Esc');
_win


\usr_akc_zazn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Zaznacza sugerowanych użytkowników
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('czyzaznusr')>0 & czyzaznusr=1
|| B_USRROL.sel_adel();
   {? B_USRROL.find_key(__suggested.USR)
   || sel_add()
   ?}
|? var_pres('czyzaznusr')>0 & czyzaznusr=2
|| B_USRROL.sel_adel();
   {? var_pres('__tmpsug')>0 & __tmpsug.first()
   || {! |?
         {? __suggested.seek(__tmpsug.REF) & B_USRROL.find_key(__suggested.USR)
         || sel_add()
         ?};
         __tmpsug.next() & EDOKPAR.JEDEN_OP<>'T'
      !}
   ?};
   VAR_DEL.delete('__tmpsug')
|? var_pres('czyzaznusrhist')>0 & var_pres('__edokos')>0 & var_pres('__tmphist')<=0
|| B_USRROL.sel_adel();
   {? B_USRROL.find_key(__edokos.USER)
   || sel_add()
   ?}
|? var_pres('czyzaznusrhist')>0 & var_pres('__edokos')>0 & var_pres('__tmphist')>0 & __tmphist.first()
|| B_USRROL.sel_adel();
   {! |?
      {? __edokos.seek(__tmphist.REF) & B_USRROL.find_key(__edokos.USER)
      || sel_add()
      ?};
      __tmphist.next() & EDOKPAR.JEDEN_OP<>'T'
   !};
   VAR_DEL.delete('__tmphist')
?}


\obg_akc_aut_zazn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Zaznacza sugerowanych użytkowników przy wyświetleniu okienka wyboru akceptantów
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.cntx_psh();
EDOKOS.cntx_psh();
_fplg:=0;
{? EDOKPAR.BLZMUSR<>'T' & EDOKPAR.USR_FORM=null
|| _tmp:=exec('hist_akcept1','obiegi2','P');
   exec('obiegi_sug_akc','tagger',_tmp.KH);
   _tabplg:={? Plugin.runnable('TAG_OBG_AKC_001') || Plugin.run('TAG_OBG_AKC_001') || '' ?};
   {? _tabplg<>''
   || VAR_DEL.delete('__suggested');
      _fplg:=1;
      __suggested:=tab_tmp(,'LP','INTEGER','Lp.','USR','STRING[10]','Users');
      STR.split(_tabplg,',');
      _lpi:=1;
      {! |?
         __suggested.blank;
         __suggested.LP:=_lpi;
         _lpi+=1;
         __suggested.USR:=STR.get_word();
         __suggested.add();
         STR.next()
      !}
   ?};
   {? (var_pres('khsetintagger')>0 & khsetintagger=1) | _fplg
   || {? EDOKPAR.JEDEN_OP<>'T'
      || {? __suggested.first()
         || {! |?
               {? B_USRROL.find_key(__suggested.USR)
               || __lgtblbobg.USER:=__suggested.USR;
                  __lgtblbobg.add();
                  __suggested.add();
                  sel_add()
               ?};
               __suggested.next()
            !}
         ?}
      || {? __suggested.first() & B_USRROL.find_key(__suggested.USR)
         || __lgtblbobg.USER:=__suggested.USR;
            __lgtblbobg.add();
            __suggested.add();
            sel_add()
         ?}
      ?}
   || {? __suggested.first() & B_USRROL.find_key(__suggested.USR)
      || __lgtblbobg.USER:=__suggested.USR;
         __lgtblbobg.add();
         __suggested.add();
         sel_add()
      ?}
   ?};
   EDOKUM.ndx_drop(_tmp.NDXED)
?};
VAR_DEL.delete('czyzaznusr','czyzaznusrhist','__tmpsug','__tmphist','khsetintagger');
EDOKUM.cntx_pop();
EDOKOS.cntx_pop()


\tagagr_csh_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Funkcja dodaje do TAGAGR rekordy CSH
::   WE: _a - EDOKUM.uidref()
::----------------------------------------------------------------------------------------------------------------------
_p300921:=exec('get','#params',300921,type_of('a'));
_kh:='';
{? 1+_p300921<>'B'
|| EDOKUM.cntx_psh(); EDOKUM.prefix();
   ECON_SCH.cntx_psh(); ECON_SCH.use('edosch'+(ref_name(_a)+2)); ECON_SCH.index('ONE');
   KH.cntx_psh(); KH.prefix();
   {? EDOKUM.seek(_a)
   || ECON_SCH.prefix(EDOKUM.uidref());
      exec('tag_mask','tagger',EDOKUM.KHKH,'a');
      {? ECON_SCH.first() & KH.seek(EDOKUM.KHKH) & KH.TAGGER='T'
      || _kh:=KH.uidref();
         TAGAGR.prefix(); TAGAGR.blank();
         TAGAGR.TAGREF:=KH.uidref();
         TAGAGR.TAGKOD:=KH.KOD;
         TAGAGR.FIRMA:=$EDOKUM.FIRMA;
         TAGAGR.SOURCE:='OF';
         TAGAGR.REF1:=_a;
         TAGAGR.PUT1:=EDOKUM.idput_value();
         TAGAGR.P1:=ECON_SCH.ETSCHPDR;
         TAGAGR.TYP:='CSH';
         TAGAGR.add()
      ?}
   ?};
   KH.cntx_pop();
   ECON_SCH.cntx_pop();
   EDOKUM.cntx_pop()
?};
exec('tag_mask','tagger',EDOKUM.KHKH,'g');
{? 1+_p300921='O' || exec('z_of_csh','tagger',_kh) ?};
1


\tagagr_csh_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła usuwa "na bieżąco" rekordy typu CSH z tabeli TAGAGR
::   WE: _a - EDOKUM.ref()
::----------------------------------------------------------------------------------------------------------------------
TAGAGR.cntx_psh(); EDOKUM.cntx_psh(); EDOKUM.prefix();
{? EDOKUM.seek(_a)
|| exec('tag_mask','tagger',EDOKUM.KHKH,'a');
   TAGAGR.index('VRZ'); TAGAGR.prefix('CSH','OF',EDOKUM.uidref());
   {? TAGAGR.first()
   || {! |? TAGAGR.del() !}
   ?}
?};
TAGAGR.cntx_pop(); EDOKUM.cntx_pop(); 1


\tagger_tip_csh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Uzupełnia podziały controllingowe w fakturach w obiegu
::   WE: _a - EDOKUM.ref()
::       [_b] - jeśli podane i _b=1 wykonaj formułę, nawet jeśli wprowadzono już podziały
::----------------------------------------------------------------------------------------------------------------------
_par2:=exec('get','#params',300917,type_of('a'));
EDOKUM.cntx_psh(); ETSCHPDR.cntx_psh(); KH.cntx_psh(); TAGGER.cntx_psh(); EPODZ.cntx_psh();
EDOKUM.prefix(); KH.prefix(); ETSCHPDR.prefix();
EPODZ.index('EDOKUMDS'); EPODZ.prefix(_a);
{? _=1 ||  _b:=0 ?};
{? _par2<>'N' & EDOKUM.seek(_a) & KH.seek(EDOKUM.KHKH) & KH.TAGGER='T' & (~EPODZ.first() | _b=1)
|| exec('tag_mask','tagger',EDOKUM.KHKH,'g');
   _usrchc:=0;
   TAGGER.index('TAG1');
   TAGGER.prefix('T',KH.uidref(),$EDOKUM.FIRMA,'CSH','OF');
   {? TAGGER.first() & ETSCHPDR.seek(TAGGER.P1)
   || ETSCHPDN.index('UNIK'); ETSCHPDN.prefix(); ETSCHPDR.ETSCHPDN(); exec('e_con_sch','tagger');
      {? app_info('web_sesid')=''
      || exec('epodz_add_aut1','obiegi2')
      || EDOKUM.web_cntx_load();
         exec('maski_w','obiegi',1);
         EPODZ.index('EDOKUM'); EPODZ.prefix(EDOKUM.ref());
         exec('epodz_add_aut1','obiegi2')
      ?}
   || _usrchc:=1
   ?};
   {? _usrchc
   || TAGGER.prefix('N',KH.uidref(),$EDOKUM.FIRMA,'CSH','OF');
      {? TAGGER.first() & ETSCHPDR.seek(TAGGER.P1)
      || ETSCHPDN.index('UNIK'); ETSCHPDN.prefix(); ETSCHPDR.ETSCHPDN(); exec('e_con_sch','tagger');
         {? app_info('web_sesid')=''
         || exec('epodz_add_aut1','obiegi2')
         || EDOKUM.web_cntx_load();
            exec('maski_w','obiegi',1);
            EPODZ.index('EDOKUM'); EPODZ.prefix(EDOKUM.ref());
            exec('epodz_add_aut1','obiegi2')
         ?}
      ?}
   ?}
?};
EDOKUM.cntx_pop(); ETSCHPDR.cntx_pop(); KH.cntx_pop(); TAGGER.cntx_pop(); EPODZ.cntx_pop()


\etschpdr_sug_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Akcja "Sugerowane" w okienku WYB tabeli ETSCHPDR
::----------------------------------------------------------------------------------------------------------------------
exec('tagger_tip_csh','tagger',EDOKUM.ref(),1); sel_exit()


\etschpdr_wyb_hlp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła pomocnicza ukrywająca akcję "Sugerowane"
::----------------------------------------------------------------------------------------------------------------------
_par2:=exec('get','#params',300917,type_of('a'));
_wyn:=0;
EDOKUM.cntx_psh();
{? _par2<>'N'
|| KH.cntx_psh(); EDOKUM.KHKH();
   _warunek:=KH.TAGGER;
   TAGGER.cntx_psh();
   exec('tag_mask','tagger',KH.ref(),'g');
   TAGGER.index('TAG1'); TAGGER.prefix('N',KH.uidref(),$EDOKUM.FIRMA,'CSH','OF');
   {? TAGGER.first() || _wyn:=1 ?};
   TAGGER.prefix('T',KH.uidref(),$EDOKUM.FIRMA,'CSH','OF');
   {? TAGGER.first() || _wyn:=1 ?};
   TAGGER.cntx_pop(); KH.cntx_pop()
?};
{? _wyn & _warunek='T'
|| ETSCHPDR.actions('WYB','',,1)
|| ETSCHPDR.actions('WYB','S',,1)
?};
EDOKUM.cntx_pop(); 1


\tagger_tip_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Uzupełnia dane nagłówka dokumentu - dla KSEF
::   WE: _a - źródło
::       _b - KH.ref()
::       _c - FIRMA.ref()
::       _d - F - F - faktura, K - korekta
::----------------------------------------------------------------------------------------------------------------------
_parwym:=exec('get','#params',300912,type_of('a'));
_parkor:=exec('get','#params',300918,type_of('a'));
VAR_DEL.delete('__tagvpztip');
__tagvpztip:=0;
{? _=3 || _d:='' ?};
_iscorr:={? _d='K' || 1 || 0 ?};
{? _parwym='N' & _parkor='N' || return(0) ?};
_bodd:=DOK.ODD;
_brej:=DOK.REJ;
_bdokrej:=DOK.DOK_REJ;
_brvat:=DOK.RVAT;
KH.cntx_psh(); TAGGER.cntx_psh();
_firma:=$_c;
_kh:=_b;
_typ:='NAG';
_source:=_a;
_odd:=_rej:=_dokrej:=_rvat:=_khuid:=''; _dalej:=0;
{? ~_iscorr & KH.seek(_kh) & KH.TAGGER='T'
|| exec('tag_mask','tagger',KH.ref(),'g');
   TAGGER.index('TAG1'); TAGGER.prefix('T',KH.uidref(),_firma,_typ,_source);
   _khuid:=KH.uidref();
   {? TAGGER.first()
   || _odd:=TAGGER.P4;
      _rej:=TAGGER.P1;
      _dokrej:=TAGGER.P2;
      _rvat:=TAGGER.P3;
      __tagvpztip:=1;
      _dalej:=1
   ?};
   {? ~_dalej
   || TAGGER.prefix('N',KH.uidref(),_firma,_typ,_source);
      _khuid:=KH.uidref();
      {? TAGGER.first()
      || _odd:=TAGGER.P4;
         _rej:=TAGGER.P1;
         _dokrej:=TAGGER.P2;
         _rvat:=TAGGER.P3;
         __tagvpztip:=2;
         _dalej:=1
      ?}
   ?}
?};
{? _dalej
|| REJ.cntx_psh(); ODD.cntx_psh(); VAT_REJ.cntx_psh(); DOK_REJ.cntx_psh();

   ODD.prefix();
   DOK.ODD:={? ODD.seek(_odd) || ODD.ref() || null ?};

   REJ.index('KOD'); REJ.prefix();
   DOK.REJ:={? REJ.find_key(SSTALE.AR,DOK.ODD,_rej) || REJ.ref() || null ?};

   VAT_REJ.index('REJ_SYM'); VAT_REJ.prefix();
   DOK.RVAT:={? VAT_REJ.find_key(DOK.REJ,_rvat) || VAT_REJ.ref() || null ?};

   DOK_REJ.index('NAZ'); DOK_REJ.prefix();
   DOK.DOK_REJ:={? DOK_REJ.find_key(DOK.REJ, _dokrej) || DOK_REJ.ref() || null ?};

   REJ.cntx_pop(); ODD.cntx_pop(); VAT_REJ.cntx_pop(); DOK_REJ.cntx_pop();
   SLOSLU.SLSLU:='KONTRAHENCI';
   _wyn:=1
|| _wyn:=0
?};
{? _dalej & _wyn
|| exec('tagger_tip_vpz_ksef','tagger','DK',_khuid,_firma,_odd,_rej)
?};
{? _iscorr & _parkor='T'
|| exec('korekta','tagger',exec('find_ref_fa_kor','tagger',DOKUM.ref()))
?};
{? DOK.ODD=null | DOK.REJ=null | DOK.DOK_REJ=null | DOK.RVAT=null
|| DOK.ODD:=_bodd;
   DOK.REJ:=_brej;
   DOK.DOK_REJ:=_bdokrej;
   DOK.RVAT:=_brvat;
   _wyn:=0
?};
KH.cntx_pop(); TAGGER.cntx_pop(); _wyn


\korekta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Obsługa korekt dla KSEF i obiegów
::   WE: _a - Wskazanie na dokument korykowany
::----------------------------------------------------------------------------------------------------------------------
_kordok:=_a;
VAR_DEL.delete('__tagvpztip');
__tagvpztip:=0;
DOK.cntx_psh();
_kodd:=_krej:=_krvat:=_kdokrej:='';
_kdokref:=_ksppl:=null;
DOK.prefix();
{? _kordok<>'' & DOK.seek(_kordok,ref_name(_kordok))
|| _kodd:=$DOK.ODD;
   _krej:=DOK.REJ().KOD;
   _krvat:=DOK.RVAT().SYM;
   _kdokrej:=DOK.DOK_REJ().NAZ;
   _ksppl:=DOK.SP_PL;
   _kdokref:=DOK.ref();
   _ok:=1
|| _ok:=0
?};
DOK.cntx_pop();
{? _ok
|| REJ.cntx_psh(); ODD.cntx_psh(); VAT_REJ.cntx_psh(); DOK_REJ.cntx_psh();

   ODD.prefix();
   DOK.ODD:={? ODD.seek(_kodd) || ODD.ref() || null ?};

   REJ.index('KOD'); REJ.prefix();
   DOK.REJ:={? REJ.find_key(SSTALE.AR,DOK.ODD,_krej) || REJ.ref() || null ?};

   VAT_REJ.index('REJ_SYM'); VAT_REJ.prefix();
   DOK.RVAT:={? VAT_REJ.find_key(DOK.REJ,_krvat) || VAT_REJ.ref() || null ?};

   DOK_REJ.index('KOR'); DOK_REJ.prefix();
   DOK.DOK_REJ:={? DOK_REJ.find_key(DOK.REJ, 'T') || DOK_REJ.ref() || null ?};

   REJ.cntx_pop(); ODD.cntx_pop(); VAT_REJ.cntx_pop(); DOK_REJ.cntx_pop();

   DOK.SP_PL:=_ksppl;

   VPOZ.cntx_psh();
   VPOZ.index('VDOK'); VPOZ.prefix(_kdokref);
   _grvat:=null;
   _rr:=_kk:=_k2:='';
   {? VPOZ.first()
   || _grvat:=VPOZ.GRVAT().GRVAT;
      _rr:=VPOZ.R;
      _kk:=VPOZ.KK;
      _k2:=VPOZ.K2;
      _ok:=1
   || _ok:=0
   ?};
   VPOZ.cntx_pop();
   {? _ok
   || GR_VAT.cntx_psh();
      GR_VAT.index('REJ_GR'); GR_VAT.prefix(DOK.REJ,_grvat);
      VPOZ.GRVAT:={? GR_VAT.first() || GR_VAT.ref() || null ?};
      GR_VAT.cntx_pop();
      AN.cntx_psh(); _rkod:=SSTALE.AR().KOD; AN.use('koan__'+_rkod); AN.index('SYM'); AN.prefix(_rr,);
      {? AN.first() & _rr<>''
      || VPOZ.R:=_rr
      ?};
      AN.cntx_pop();
      {? _kk<>'<- F3 ->' & _kk<>''
      || VPOZ.KK:=_kk;
         {? ~exec('konto_spr','tagger','VPOZ','KK') || VPOZ.KK:='' ?}
      ?};
      {? _k2<>'<- F3 ->' & _k2<>''
      || VPOZ.K2:=_k2;
         {? ~exec('konto_spr','tagger','VPOZ','K2') || VPOZ.K2:='' ?}
      ?}
   ?};
   __tagvpztip:=3
?}


\korekta_vpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Obsługa podpowiedzi dla korekt - pozycje VAT w dokumentach księgowych
::----------------------------------------------------------------------------------------------------------------------
_kordok:=exec('dok_korekta','edi_fo_ksef_fks');
VAR_DEL.delete('__tagvpztip');
__tagvpztip:=0;
DOK.cntx_psh();
_kdokref:=null;
DOK.prefix();
{? _kordok<>'' & DOK.seek(_kordok,ref_name(_kordok))
|| _kdokref:=DOK.ref();
   _ok:=1
|| _ok:=0
?};
DOK.cntx_pop();
{? _ok
|| VPOZ.cntx_psh();
   VPOZ.index('VDOK'); VPOZ.prefix(_kdokref);
   _grvat:=_vpzref:=null;
   _rr:=_kk:=_k2:='';
   {? VPOZ.first()
   || _grvat:=VPOZ.GRVAT().GRVAT;
      _vpzref:=VPOZ.ref();
      _rr:=VPOZ.R;
      _kk:=VPOZ.KK;
      _k2:=VPOZ.K2;
      _ok:=1
   || _ok:=0
   ?};
   VPOZ.cntx_pop();
   {? _ok
   || GR_VAT.cntx_psh();
      GR_VAT.index('REJ_GR'); GR_VAT.prefix(DOK.REJ,_grvat);
      VPOZ.GRVAT:={? GR_VAT.first() || GR_VAT.ref() || null ?};
      GR_VAT.cntx_pop();
      AN.cntx_psh(); _rkod:=SSTALE.AR().KOD; AN.use('koan__'+_rkod); AN.index('SYM'); AN.prefix(_rr,);
      {? AN.first() & _rr<>''
      || VPOZ.R:=_rr
      ?};
      AN.cntx_pop();
      {? _kk<>'<- F3 ->' & _kk<>''
      || VPOZ.KK:=_kk;
         {? ~exec('konto_spr','tagger','VPOZ','KK') || VPOZ.KK:='' ?}
      |? _kk='<- F3 ->'
      || VAT7.KK:='T';
         VPOZ.KK:=_kk;
         VROZ.cntx_psh();
         VROZ.index('VROZ'); VROZ.prefix(VPOZ.ref,'KK');
         {? ~VROZ.first()
         || exec('korekta_vrz','tagger','KK',_vpzref,VPOZ.NETTO,VPOZ.ref())
         ?};
         VROZ.cntx_pop()
      ?};
      {? _k2<>'<- F3 ->' & _k2<>''
      || VPOZ.K2:=_k2;
         {? ~exec('konto_spr','tagger','VPOZ','K2') || VPOZ.K2:='' ?}
      |? _k2='<- F3 ->'
      || VAT7.K2:='T';
         VPOZ.K2:=_k2;
         VROZ.cntx_psh();
         VROZ.index('VROZ'); VROZ.prefix(VPOZ.ref,'K2');
         {? ~VROZ.first()
         || exec('korekta_vrz','tagger','K2',_vpzref,VPOZ.NETTO,VPOZ.ref())
         ?};
         VROZ.cntx_pop()
      ?}
   ?};
   __tagvpztip:=3
?}


\korekta_vrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Obsługa rozdzielnika dla podpowiedzi do korekt
::   WE: _a - KK/K2
::       _b - VPOZ.ref
::       _c - kwota do podziału na rozdzielnik
::       _d - nowy VPOZ.ref
::----------------------------------------------------------------------------------------------------------------------
VROZ.cntx_psh();
VROZ.index('VROZ'); VROZ.prefix(_b,_a);
_kwota:=0;
_reszta:=1;
_tabtmp:=tab_tmp(,'KONTO','STRING[60]','Konto','KWPR','REAL','Podział');
{? VROZ.first()
|| {! |?
      _kwota+=VROZ.KW;
      VROZ.next()
   !};
   {? VROZ.first()
   || {! |?
         _tabtmp.KONTO:=VROZ.KONTO;
         _tabtmp.KWPR:=VROZ.KW/_kwota;
         _tabtmp.add();
         _reszta:=_reszta-_tabtmp.KWPR;
         VROZ.next()
      !};
      _tabtmp.KWPR+=_reszta;
      _tabtmp.put()
   ?};
   _dopodz:=_c;
   VROZ.prefix();
   {? _tabtmp.first()
   || {! |?
         VROZ.KONTO:=_tabtmp.KONTO;
         VROZ.KW:=(_c*_tabtmp.KWPR)$2;
         VROZ.VPOZ:=_d;
         VROZ.TYP:=_a;
         VROZ.add(1);
         _dopodz:=_dopodz-VROZ.KW;
         _tabtmp.next()
      !};
      VROZ.KW+=_dopodz;
      VROZ.put(1)
   ?}
?};
VROZ.cntx_pop()


\tagger_tip_vpz_ksef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Uzupełnia dane VPOZ - dla KSEF
::   WE: _a - źródło
::       _b - KH.uidref()
::       _c - $FIRMA.ref()
::       _d - $ODD.ref()
::       _e - REJ.KOD
::----------------------------------------------------------------------------------------------------------------------
_parwym:=exec('get','#params',300912,type_of('a'));
_parkor:=exec('get','#params',300918,type_of('a'));

{? _parwym='N' & _parkor='N' || return(0) ?};
_khuid:=_b;
_firma:=_c;
_typ:='VPZ';
_source:=_a;
_odd:=_d;
_rejkod:=_e;
_grvat:=_rr:=_kk:=_k2:=''; _dalej:=0;
TAGGER.cntx_psh();
TAGGER.index('VPZ_NR'); TAGGER.prefix('T',_khuid,_firma,_typ,_source,_odd,_rejkod);
{? TAGGER.last()
|| _grvat:=TAGGER.P3;
   _rr:=TAGGER.P4;
   _kk:=TAGGER.P5;
   _k2:=TAGGER.P6;
   _dalej:=1
?};
{? ~_dalej
|| TAGGER.prefix('N',_khuid,_firma,_typ,_source,_odd,_rejkod);
   {? TAGGER.last()
   || _grvat:=TAGGER.P3;
      _rr:=TAGGER.P4;
      _kk:=TAGGER.P5;
      _k2:=TAGGER.P6;
      _dalej:=1
   ?}
?};
{? _dalej
|| GR_VAT.cntx_psh();
   GR_VAT.index('REJ_GR'); GR_VAT.prefix(DOK.REJ,BIT.sqlint(_grvat));
   VPOZ.GRVAT:={? GR_VAT.first() || GR_VAT.ref() || null ?};
   GR_VAT.cntx_pop();
   AN.cntx_psh(); _rkod:=SSTALE.AR().KOD; AN.use('koan__'+_rkod); AN.index('SYM'); AN.prefix(_rr,);
   {? AN.first() & _rr<>''
   || VPOZ.R:=_rr
   ?};
   AN.cntx_pop();
   {? _kk<>'<- F3 ->' & _kk<>''
   || VPOZ.KK:=_kk;
      {? ~exec('konto_spr','tagger','VPOZ','KK') || VPOZ.KK:='' ?}
   ?};
   {? _k2<>'<- F3 ->' & _k2<>''
   || VPOZ.K2:=_k2;
      {? ~exec('konto_spr','tagger','VPOZ','K2') || VPOZ.K2:='' ?}
   ?}
?};
TAGGER.cntx_pop()


\konto_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Sprawdzenie kont dla pól KK i K2 tabeli VPOZ
::   WE: _a - akronim tabeli [STRING]
::       _b - akronim pola [STRING]
::   WY: 1/0 - jeśli 1 konto może zostać użyte
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_vsep:=ROZNE.ROKKON().SEP;
{? KS.index('SYM'); KS.prefix(ROZNE.ROKKON); ~KS.first()
|| _wyn:=0
|? _wyn
|| _vsynt:=ROZNE.ROKKON().SYNT;
   konto:=($(_a+'.'+_b))();
   {? konto<>''
   || {? _vs:=form(_vsynt+konto); +_vs=_vsynt
      || {? KS.index('SYM'); KS.prefix(ROZNE.ROKKON,_vs); KS.first()
         || {? ~exec('akc_kont','edkonto',konto)
            || _vf:=_a+'.'+_b+':=konto'; ($(_vf))()
            || _wyn:=0
            ?}
         || _wyn:=0
         ?}
      || _wyn:=0
      ?}
   ?}
|| _wyn:=0
?};
{? var_pres('konto')>=0 || &konto ?};
_wyn


\tagger_tip_vpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Uzupełnia dane VPOZ
::   WE: _a - DOK.WYS
::       _b - źródło
::       _c - czy korekta (1/0)
::----------------------------------------------------------------------------------------------------------------------
_parwym:=exec('get','#params',300916,type_of('a'));
_parkor:=exec('get','#params',300918,type_of('a'));
VAR_DEL.delete('__tagvpztip');
__tagvpztip:=0;
_iscorr:={? _>=3 || _c || 0 ?};
{? _parwym='N' & _parkor='N' || return(0) ?};
_slo:=_a;
_source:=_b;
_bgrvat:=VPOZ.GRVAT;
_khkod:=_khuid:=_taguid:=_grvat:=_rr:=_kk:=_k2:=''; _dalej:=0;
SLO.cntx_psh(); SLO.prefix();
{? SLO.seek(_slo) & SLO.SLU().WZ='Kontrahent'
|| _khkod:=SLO.KOD; _dalej:=1
?};
SLO.cntx_pop();
TAGGER.cntx_psh();
{? _iscorr || _dalej:=0 ?};
{? _dalej
|| KH.cntx_psh(); KH.index('KOD'); KH.prefix(2,_khkod);
   {? KH.first() & KH.TAGGER='T' || _khuid:=KH.uidref(); exec('tag_mask','tagger',KH.ref(),'g') || _dalej:=0 ?};
   KH.cntx_pop()
?};
{? _dalej
|| TAGGER.index('VPZ'); TAGGER.prefix('T',_khuid,$DOK.ODD().FIRMA,'VPZ',$VPOZ.PR,DOK.REJ().KOD,$DOK.ODD,_source);
   {? TAGGER.first()
   || _grvat:=TAGGER.P3;
      _rr:=TAGGER.P4;
      _kk:=TAGGER.P5;
      _k2:=TAGGER.P6;
      _taguid:=TAGGER.uidref();
      __tagvpztip:=1;
      _dalej:=1
   || _dalej:=0
   ?};
   {? ~_dalej
   || TAGGER.prefix('N',_khuid,$DOK.ODD().FIRMA,'VPZ',$VPOZ.PR,DOK.REJ().KOD,$DOK.ODD,_source);
      {? TAGGER.first()
      || _grvat:=TAGGER.P3;
         _rr:=TAGGER.P4;
         _kk:=TAGGER.P5;
         _k2:=TAGGER.P6;
         _taguid:=TAGGER.uidref();
         __tagvpztip:=2;
         _dalej:=1
      || _dalej:=0
      ?}
   ?}
?};
{? _dalej
|| GR_VAT.cntx_psh();
   GR_VAT.index('REJ_GR'); GR_VAT.prefix(DOK.REJ,BIT.sqlint(_grvat));
   VPOZ.GRVAT:={? GR_VAT.first() || GR_VAT.ref() || null ?};
   {? VPOZ.GRVAT=null
   || VPOZ.GRVAT:=_bgrvat
   || exec('ae_grvat','dok_fks')
   ?};
   GR_VAT.cntx_pop();
   AN.cntx_psh(); _rkod:=DOK.REJ().ROK().KOD; AN.use('koan__'+_rkod); AN.index('SYM'); AN.prefix(_rr,);
   {? AN.first() & _rr<>'' & _parwym<>'G'
   || VPOZ.R:=_rr
   ?};
   AN.cntx_pop();
   {? _kk<>'<- F3 ->' & _kk<>'' & _parwym<>'G'
   || VPOZ.KK:=_kk;
      {? ~exec('konto_spr','tagger','VPOZ','KK') || VPOZ.KK:='' ?}
   ?};
   {? _k2<>'<- F3 ->' & _k2<>'' & _parwym<>'G'
   || VPOZ.K2:=_k2;
      {? ~exec('konto_spr','tagger','VPOZ','K2') || VPOZ.K2:='' ?}
   ?};
   {? _kk='<- F3 ->' & _parwym<>'G'
   || exec('tagger_tip_vrz','tagger',_khuid,'KK',_taguid); exec('ust_vkk','dok_fks','KK')
   ?};
   {? _k2='<- F3 ->' & _parwym<>'G'
   || exec('tagger_tip_vrz','tagger',_khuid,'KK',_taguid); exec('ust_vkk','dok_fks','K2')
   ?}
?};
{? _iscorr & _parkor='T'
|| exec('korekta_vpz','tagger')
?};
TAGGER.cntx_pop();
1


\tagger_tip_vrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Uzupełnia VROZ na podstawie podpowiedzi TAGGER
::   WE: _a - uidref z tabeli KH
::       _b - KK/K2
::       _c - TAGGER.uidref() (z typu VPOZ)
::----------------------------------------------------------------------------------------------------------------------
TAGGER.cntx_psh(); TAGGER.index('VRZ'); TAGGER.prefix(_a,'VRZ',_b,_c);
VROZ.cntx_psh();
VROZ.index('VROZ'); VROZ.prefix(VPOZ.ref(),_b);
{? VROZ.first() || _proceed:=0 || _proceed:=1 ?};
VROZ.cntx_pop();
{? _proceed & TAGGER.first()
|| VROZ.cntx_psh(); VROZ.prefix();
   _form:='VAT7.'+_b+':=\'T\''; ($_form)();
   _netto:=VPOZ.NETTO; _reszta:=_netto;
   _dalej:=1;
   {! |?
      {? ~exec('konto_spr','tagger','TAGGER','P2') || _dalej:=0 ?};
      _dalej & TAGGER.next()
   !};
   {? _dalej & TAGGER.first()
   || {! |?
         VROZ.blank();
         VROZ.VPOZ:=VPOZ.ref();
         VROZ.KONTO:=TAGGER.P2;
         VROZ.TYP:=_b;
         VROZ.KW:=TAGGER.R1*_netto # 2;
         VROZ.add(1);
         _reszta:=_reszta-VROZ.KW;
         TAGGER.next()
      !}
   ?};
   VROZ.KW+=_reszta;
   VROZ.put(1);
   VROZ.cntx_pop()
?};
TAGGER.cntx_pop(); 1


\tagger_tip_nag_of
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Uzupełnia dane nagłówka dokumentu przy dekretacji f. w obiegu na podstawie podpowiedzi TAGGER
::   WE: _a - wskazanie na kontrahenta (SLO)
::       _b - czy korekta? (T/N)
::----------------------------------------------------------------------------------------------------------------------
_parwym:=exec('get','#params',300915,type_of('a'));
_parkor:=exec('get','#params',300919,type_of('a'));
VAR_DEL.delete('__tagvpztip');
__tagvpztip:=0;
{? _=1 || _b:='' ?};
_iscorr:={? _b='T' || 1 || 0 ?};
{? _parwym='N' & _parkor='N' || return(0) ?};
_bodd:=DOK.ODD;
_brej:=DOK.REJ;
_bdokrej:=DOK.DOK_REJ;
_brvat:=DOK.RVAT;
KH.cntx_psh(); KH.index('KOD'); TAGGER.cntx_psh();
_firma:=$EDOKUM.FIRMA;
_kh:=EDOKUM.KH().KOD;
_typ:='NAG';
_source:='OF';
_odd:=_rej:=_dokrej:=_rvat:=_khuid:=''; _dalej:=0;
KH.prefix(2,_kh);
{? ~_iscorr & KH.first() & KH.TAGGER='T'
|| exec('tag_mask','tagger',KH.ref(),'g');
   TAGGER.index('TAG1'); TAGGER.prefix('T',KH.uidref(),_firma,_typ,_source);
   _khuid:=KH.uidref();
   {? TAGGER.first()
   || _odd:=TAGGER.P4;
      _rej:=TAGGER.P1;
      _dokrej:=TAGGER.P2;
      _rvat:=TAGGER.P3;
      __tagvpztip:=1;
      _dalej:=1
   ?};
   {? ~_dalej
   || TAGGER.prefix('N',KH.uidref(),_firma,_typ,_source);
      _khuid:=KH.uidref();
      {? TAGGER.first()
      || _odd:=TAGGER.P4;
         _rej:=TAGGER.P1;
         _dokrej:=TAGGER.P2;
         _rvat:=TAGGER.P3;
         __tagvpztip:=2;
         _dalej:=1
      ?}
   ?}
?};
{? _dalej
|| REJ.cntx_psh(); ODD.cntx_psh(); VAT_REJ.cntx_psh(); DOK_REJ.cntx_psh();

   ODD.prefix();
   DOK.ODD:={? ODD.seek(_odd) || ODD.ref() || null ?};

   REJ.index('KOD'); REJ.prefix();
   DOK.REJ:={? REJ.find_key(SSTALE.AR,DOK.ODD,_rej) || REJ.ref() || null ?};

   VAT_REJ.index('REJ_SYM'); VAT_REJ.prefix();
   DOK.RVAT:={? VAT_REJ.find_key(DOK.REJ,_rvat) || VAT_REJ.ref() || null ?};

   DOK_REJ.index('NAZ'); DOK_REJ.prefix();
   DOK.DOK_REJ:={? DOK_REJ.find_key(DOK.REJ,_dokrej) || DOK_REJ.ref() || null ?};

   REJ.cntx_pop(); ODD.cntx_pop(); VAT_REJ.cntx_pop(); DOK_REJ.cntx_pop();
   SLOSLU.SLSLU:='KONTRAHENCI';
   _wyn:=1
|| _wyn:=0
?};
{? _dalej & _wyn
|| exec('tagger_tip_vpz_of','tagger','OF',_khuid,_firma,_odd,_rej)
?};
{? _iscorr & _parkor='T'
|| exec('korekta','tagger',exec('of_find_ref_fa_kor','tagger'))
?};
{? DOK.ODD=null | DOK.REJ=null | DOK.DOK_REJ=null | DOK.RVAT=null
|| DOK.ODD:=_bodd;
   DOK.REJ:=_brej;
   DOK.DOK_REJ:=_bdokrej;
   DOK.RVAT:=_brvat;
   _wyn:=0
?};
KH.cntx_pop(); TAGGER.cntx_pop(); _wyn


\tagger_tip_vpz_of
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Uzupełnia dane VPOZ przy dekretacji f. w obiegu na podstawie podpowiedzi TAGGER
::   WE: _a - źródło
::       _b - KH.uidref()
::       _c - $FIRMA.ref()
::       _d - $ODD.ref()
::       _e - REJ.KOD
::----------------------------------------------------------------------------------------------------------------------
_parwym:=exec('get','#params',300915,type_of('a'));
_parkor:=exec('get','#params',300919,type_of('a'));
{? _parwym='N' & _parkor='N' || return(0) ?};
_khuid:=_b;
_firma:=_c;
_typ:='VPZ';
_source:=_a;
_odd:=_d;
_rejkod:=_e;
_grvat:=_rr:=_kk:=_k2:=''; _dalej:=0;
TAGGER.cntx_psh();
TAGGER.index('VPZ_NR'); TAGGER.prefix('T',_khuid,_firma,_typ,_source,_odd,_rejkod);
{? TAGGER.last()
|| _grvat:=TAGGER.P3;
   _rr:=TAGGER.P4;
   _kk:=TAGGER.P5;
   _k2:=TAGGER.P6;
   _dalej:=1
?};
{? ~_dalej
|| TAGGER.prefix('N',_khuid,_firma,_typ,_source,_odd,_rejkod);
   {? TAGGER.last()
   || _grvat:=TAGGER.P3;
      _rr:=TAGGER.P4;
      _kk:=TAGGER.P5;
      _k2:=TAGGER.P6;
      _dalej:=1
   ?}
?};
{? _dalej
|| GR_VAT.cntx_psh();
   GR_VAT.index('REJ_GR'); GR_VAT.prefix(DOK.REJ,BIT.sqlint(_grvat));
   VPOZ.GRVAT:={? GR_VAT.first() || GR_VAT.ref() || null ?};
   GR_VAT.cntx_pop();
   AN.cntx_psh(); _rkod:=SSTALE.AR().KOD; AN.use('koan__'+_rkod); AN.index('SYM'); AN.prefix(_rr,);
   {? AN.first() & _rr<>''
   || VPOZ.R:=_rr
   ?};
   AN.cntx_pop();
   {? _kk<>'<- F3 ->' & _kk<>''
   || VPOZ.KK:=_kk;
      {? ~exec('konto_spr','tagger','VPOZ','KK') || VPOZ.KK:='' ?}
   ?};
   {? _k2<>'<- F3 ->' & _k2<>''
   || VPOZ.K2:=_k2;
      {? ~exec('konto_spr','tagger','VPOZ','K2') || VPOZ.K2:='' ?}
   ?}
?};
TAGGER.cntx_pop()


\kh_set_tagger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Tworzy okno do ręcznego ustawiania podpowiedzi
::----------------------------------------------------------------------------------------------------------------------
TAGGER.cntx_psh();
exec('tag_mask','tagger',KH.ref(),'g');
_fmlnag:="TAGGER.index('KHSET'); TAGGER.prefix('T',KH.uidref(),$REF.FIRMA,'NAG')";
_fmlvpz:="TAGGER.index('KHSET'); TAGGER.prefix('T',KH.uidref(),$REF.FIRMA,'VPZ')";
_fmlcsh:="TAGGER.index('KHSET'); TAGGER.prefix('T',KH.uidref(),$REF.FIRMA,'CSH')";
_fmlacc:="TAGGER.index('KHSET'); TAGGER.prefix('T',KH.uidref(),$REF.FIRMA,'ACC')";
_win:=TAGGER.grp_make('Podpowiedzi'@,,'kh_set_tagger');
TAGGER.grp_sel(_win,,'NAG','Dokumenty księgowe'@,,,,,_fmlnag);
task_attach('FKS_DKS_DARK');
task_attach('FKS_DKS_DFZO');
task_attach('ZBL_DOK_RBUF');
task_attach('OBG_FZO_DARK');
TAGGER.grp_sel(_win,,'VPZ','Pozycje VAT dokumentów'@,,,,,_fmlvpz);
task_attach('FKS_DKS_DARK');
task_attach('FKS_DKS_DFZO');
task_attach('ZBL_DOK_RBUF');
task_attach('OBG_FZO_DARK');
TAGGER.grp_sel(_win,,'CSH','Schemat podziałów controllingowych (f. w obiegu)'@,,,,,_fmlcsh);
task_attach('OBG_FZO_DARK');
task_attach('OBG_FZO_CPRZ');
task_attach('OBG_FZO_EAKC');
TAGGER.grp_sel(_win,,'ACC','Użytkownicy do akceptacji (f. w obiegu)'@,,,,,_fmlacc);
task_attach('OBG_FZO_DARK');
task_attach('OBG_FZO_CPRZ');
task_attach('OBG_FZO_EAKC');
TAGGER.win_sel(_win);
TAGGER.select();
TAGGER.cntx_pop()


\win_form1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Okienko pomocnicze
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('PINFOBJ') <= 0 || return(0) ?};
VAR_DEL.delete('__tabkh','__tagrf');
_sql:='select \':\' || KH.IDADD || KH.REFERENCE as UIDREF, KH.KOD as Kod, KH.NAZ as Nazwa, \' \' as Podpowiedź, '+
              'KH.REFERENCE as REF '+
      'from KH where KH.P=2 and KH.TAGGER=\'T\' order by 2 asc';
__tabkh:=sql(_sql);
_win:=__tabkh.mk_sel('Kontrahenci'@,'T',0,'kh_form',,,,0,'U','T');
__tabkh.win_fld(_win,,'KOD');
__tabkh.win_fld(_win,,'NAZWA');
__tabkh.win_fld(_win,,'PODPOWIE',,,,,,,,,2,,"'T'","'N'","' '");
__tabkh.fld_attr('UIDREF',2,2);

__tabkh.win_act(_win,0,'Rekord',,,,
                "{? exec('czy_jest_formula_kh','tagger') || __tabkh.PODPOWIE:='T' || __tabkh.PODPOWIE:='N' ?}");
__tabkh.win_act(_win,,'Formuła','&Dołącz podpowiedź'@,,,
                "exec('win_form2','tagger'); win_disp()");
__tabkh.win_act(_win,,'Formuła','&Akceptuj'@,,,"exec('form_accept','tagger'); sel_exit()");
__tabkh.win_act(_win,,'Formuła','A&nuluj'@,,,"exec('form_accept','tagger'); sel_exit()");
__tabkh.win_act(_win,0,'Kolejność');

__tabkh.win_btn(_win,'text=&Dołącz'@,'menu:D');
__tabkh.win_btn(_win,'text=&Akceptuj'@,'menu:A');
__tabkh.win_btn(_win,'text=A&nuluj'@,'menu:N');

__tabkh.win_sel(_win);
__tabkh.select();
exec('form_accept','tagger');
VAR_DEL.delete('__tabkh','__tagrf','__tabfm')


\formula_typ_hlp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Zwraca typ rekordu TAGGER, którego dotyczy aktualnie redagowany parametr
::   WY: Typ [STRING] (CSH,NAG,VPZ,ACC)
::----------------------------------------------------------------------------------------------------------------------
_nr:=$PINFOBJ.nr();
_typ:={? _nr+3='921'
      || 'CSH'
      |? _nr+3='922'
      || 'NAG'
      |? _nr+3='923'
      || 'VPZ'
      |? _nr+3='924'
      || 'ACC'
      || ''
      ?};
_typ


\czy_jest_formula_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Sprawdza, czy kontrahent ma dodaną ręcznie podpowiedź (parametrem Formuła)
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_typ:=exec('formula_typ_hlp','tagger');
TAGGER.cntx_psh();
exec('tag_mask','tagger',BIT.sqlint(__tabkh.REF),'g');
TAGGER.index('FORM1'); TAGGER.prefix(__tabkh.UIDREF,$REF.FIRMA,_typ,'T');
{? TAGGER.first()
|| _wyn:=1
|| _wyn:=0
?};
TAGGER.cntx_pop();
_wyn


\win_form2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Tworzy okienko edycji podpowiedzi dla odpowiedniego typu
::   WE: _a - typ
::       _b - popraw
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
VAR_DEL.delete('__tabfm');
{? _typ='NAG'
|| __tabfm:=tab_tmp(,'ODDOD','STRING[60]','Jednostka księgowa',
                     'ODD','STRING[60]','ODD',
                     'REJ','STRING[60]','Rejestr księgowy',
                     'DOK_REJ','STRING[60]','Rodzaj dokumentu',
                     'RVAT','STRING[60]','Rejestr VAT',
                     'SOURCE','STRING[3]','Miejsce podpowiedzi');
   {? _>1 & _b || exec('win_frm_before','tagger',_a) ?};
   _ewin:=__tabfm.mk_edit('Podpowiedź dla kontrahenta: %1'@[KH.KOD],0);

   __tabfm.fld_fml('ODDOD','F3',"exec('f3_odd','tagger')");
   __tabfm.fld_fml('ODDOD','AFTER_EDIT',"exec('ae_odd1','tagger')");
   __tabfm.fld_fml('REJ','F3',"exec('f3_rej','tagger')");
   __tabfm.fld_fml('REJ','BEFORE_DISPLAY',
                   "{? __tabfm.ODD=''
                    || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'REJ')
                    || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'REJ')
                    ?}; 1");
   __tabfm.fld_fml('REJ','BEFORE_EDIT',"exec('be_rej1','tagger')");
   __tabfm.fld_fml('REJ','AFTER_EDIT',"exec('ae_rej1','tagger')");
   __tabfm.fld_fml('DOK_REJ','F3',"exec('f3_dokrej','tagger')");
   __tabfm.fld_fml('DOK_REJ','BEFORE_DISPLAY',
                   "{? __tabfm.REJ=''
                    || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'DOK_REJ')
                    || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'DOK_REJ')
                    ?}; 1");
   __tabfm.fld_fml('DOK_REJ','AFTER_EDIT',"exec('ae_dokrej1','tagger')");
   __tabfm.fld_fml('RVAT','F3',"exec('f3_rvat','tagger')");
   __tabfm.fld_fml('RVAT','BEFORE_DISPLAY',
                   "{? __tabfm.REJ=''
                    || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'RVAT')
                    || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'RVAT')
                    ?}; 1");
   __tabfm.fld_fml('RVAT','AFTER_EDIT',"exec('ae_rvat1','tagger')");

   __tabfm.win_efld(_ewin,,'ODDOD',,,,,0,,0,,,'F3_button=1');
   __tabfm.win_efld(_ewin,,'REJ',,,,,0,,0,,,'F3_button=1');
   __tabfm.win_efld(_ewin,,'DOK_REJ',,,,,0,,0,,,'F3_button=1');
   __tabfm.win_efld(_ewin,,'RVAT',,,,,0,,0,,,'F3_button=1');
   __tabfm.win_efld(_ewin,,'SOURCE',,,,,0,,0,,'radio-buttons',,'Dokumenty księgowe'@,"'DK'",'Dokumenty w obiegu'@,"'OF'");

   __tabfm.win_ebtn(_ewin,'text=&Zapisz'@,'key:F2');
   __tabfm.win_ebtn(_ewin,'text=&Anuluj'@,'key:Esc')

|? _typ='VPZ'
|| __tabfm:=tab_tmp(3,'ODDOD','STRING[60]','Jednostka księgowa',
                     'ODD','STRING[60]','ODD',
                     'REJ','STRING[60]','Rejestr księgowy',
                     'GRVAT','STRING[60]','GRVAT',
                     'GRVATKOD','STRING[8]','Grupa podatkowa',
                     'KRAJ','STRING[8]','Kraj',
                     'PR','STRING[60]','PR',
                     'PRVAT','STRING[8]','Procent VAT',
                     'R','STRING[60]','Rodzaj',
                     'KK','STRING[60]','Konto (1)',
                     'K2','STRING[60]','Konto (2)',
                     'VAT7KK','STRING[1]','POM1',
                     'VAT7K2','STRING[1]','POM2',
                     'SOURCE','STRING[3]','Miejsce podpowiedzi');
   {? _>1 & _b
   || exec('win_frm_before','tagger',_a)
   || __tabfm.KRAJ:='PL';
      __tabfm.VAT7KK:=__tabfm.VAT7K2:='N'
   ?};
   _ewin:=__tabfm.mk_edit('Podpowiedź dla kontrahenta: %1'[KH.KOD],0);

   __tabfm.fld_fml('ODDOD','F3',"exec('f3_odd','tagger')");
   __tabfm.fld_fml('ODDOD','AFTER_EDIT',"exec('ae_odd1','tagger',1)");
   __tabfm.fld_fml('REJ','F3',"exec('f3_rej','tagger')");
   __tabfm.fld_fml('REJ','BEFORE_DISPLAY',
                   {? _=1 | ~_b
                   || "{? __tabfm.ODD=''
                       || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'REJ')
                       || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'REJ')
                       ?}; 1"
                   || "__tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'REJ')"
                   ?});
   __tabfm.fld_fml('REJ','AFTER_EDIT',"exec('ae_rej1','tagger',1)");
   __tabfm.fld_fml('KRAJ','F3',"exec('f3_kraj','tagger')");
   __tabfm.fld_fml('KRAJ','AFTER_EDIT',"exec('ae_kraj','tagger')");
   __tabfm.fld_fml('KRAJ','BEFORE_DISPLAY',
                   "{? __tabfm.REJ=''
                    || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'KRAJ')
                    || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'KRAJ')
                    ?}; 1");
   __tabfm.fld_fml('PRVAT','F3',"exec('f3_prvat','tagger')");
   __tabfm.fld_fml('PRVAT','AFTER_EDIT',"exec('ae_prvat','tagger')");
   __tabfm.fld_fml('PRVAT','BEFORE_DISPLAY',
                   {? _=1 | ~_b
                   || "{? __tabfm.KRAJ='' | __tabfm.REJ=''
                       || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'PRVAT')
                       || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'PRVAT')
                       ?}; 1"
                   || "__tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'PRVAT')"
                   ?});
   __tabfm.fld_fml('GRVATKOD','F3',"exec('f3_grvatkod','tagger')");
   __tabfm.fld_fml('GRVATKOD','AFTER_EDIT',"exec('ae_grvatkod','tagger')");
   __tabfm.fld_fml('GRVATKOD','BEFORE_DISPLAY',
                   "{? __tabfm.PRVAT=''
                    || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'GRVATKOD');
                       __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'VAT7KK');
                       __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'VAT7K2');
                       __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'R');
                       __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'KK');
                       __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'K2')
                    || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'GRVATKOD');
                       {? __tabfm.SOURCE='DO'
                       || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'VAT7KK');
                          __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'VAT7K2')
                       ?};
                       __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'R');
                       __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'KK');
                       __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'K2')
                    ?}; 1");
   __tabfm.fld_fml('R','F3',"exec('f3_r','tagger')");
   __tabfm.fld_fml('R','AFTER_EDIT',"exec('ae_r','tagger')");
   __tabfm.fld_fml('KK','F3',"exec('f3_konto','tagger','KK')");
   __tabfm.fld_fml('KK','AFTER_EDIT',"exec('ae_konto','tagger',_a,'KK')");
   __tabfm.fld_fml('KK','PATTERN',"exec('patt_konto','tagger','KK')");
   __tabfm.fld_fml('K2','F3',"exec('f3_konto','tagger','K2')");
   __tabfm.fld_fml('K2','AFTER_EDIT',"exec('ae_konto','tagger',_a,'K2')");
   __tabfm.fld_fml('K2','PATTERN',"exec('patt_konto','tagger','K2')");
   __tabfm.fld_fml('VAT7KK','AFTER_EDIT',"exec('ae_vat7','tagger','KK')");
   __tabfm.fld_fml('VAT7K2','AFTER_EDIT',"exec('ae_vat7','tagger','K2')");
   __tabfm.fld_fml('SOURCE','AFTER_EDIT',"exec('ae_source_vpz','tagger')");

   __tabfm.win_efld(_ewin,,'SOURCE',,,,,0,,0,,'radio-buttons',,
                    'Dokumenty księgowe (KSeF)',"'DK'",'Dokumenty księgowe',"'DO'",'Dokumenty w obiegu',"'OF'");
   __tabfm.win_efld(_ewin,,'ODDOD',,,40,,0,,0,,,'F3_button=1');
   __tabfm.win_efld(_ewin,,'REJ',,,40,,0,,0,,,'F3_button=1');
   {? _=1 | ~_b
   || __tabfm.win_efld(_ewin,,'KRAJ',,,40,,0,,0,,,'F3_button=1')
   ?};
   __tabfm.win_efld(_ewin,,'PRVAT',,,40,,0,,0,,,'F3_button=1');
   __tabfm.win_efld(_ewin,,'GRVATKOD',,,40,,0,,0,,,'F3_button=1');
   __tabfm.win_efld(_ewin,,'R',,,40,,0,,0,,,'F3_button=1');
   __tabfm.win_efld(_ewin,,'VAT7KK',,,,,,,1,,'check-box',
                    'left_label=1,check_label=Kilka kont do dekretacji - Konto (1)',"'T'","'N'");
   __tabfm.win_efld(_ewin,,'KK',,,40,,0,,0,,,'F3_button=1');
   __tabfm.win_efld(_ewin,,'VAT7K2',,,,,,,1,,'check-box',
                    'left_label=1,check_label=Kilka kont do dekretacji - Konto (2)',"'T'","'N'");
   __tabfm.win_efld(_ewin,,'K2',,,40,,0,,0,,,'F3_button=1');

   __tabfm.win_ebtn(_ewin,'text=&Zapisz'@,'key:F2');
   __tabfm.win_ebtn(_ewin,'text=&Anuluj'@,'key:Esc')

|? _typ='CSH'
|| _etypy:=exec('etypy_hlp','tagger');
   ETSCHPDR.cntx_psh();
   ETSCHPDR.index('WYB'); ETSCHPDR.prefix(_etypy,REF.FIRMA,'T');
   _win:=ETSCHPDR.mk_sel('Schematy'@,'T',0,,,,,,'U','T',,,,'normal');
   ETSCHPDR.win_fld(_win,,'ETSCHPDN','NAZWA','UNIK',50);
   ETSCHPDR.win_act(_win,0,'Formuła','Wybierz',,,"exec('sel_exit_','#window')",,1);
   ETSCHPDR.win_sel(_win);
   {? ETSCHPDR.select()
   || exec('form_zap','tagger','CSH')
   ?};
   ETSCHPDR.cntx_pop()

|? _typ='ACC'
|| B_ROLE.cntx_psh();
   B_ROLE.index('UNIK'); B_ROLE.prefix(REF.FIRMA,'Akceptujący faktury I poziom');
   {? B_ROLE.first() || OBIEGI.B_ROLE:=B_ROLE.ref() ?};
   B_ROLE.cntx_pop();
   B_USRROL.cntx_psh();
   B_USRROL.index('B_ROLE'); B_USRROL.prefix(OBIEGI.B_ROLE);
   B_USRROL.win_sel('TAGGER');
   B_USRROL.select();
   B_USRROL.cntx_pop()
?};
{? var_pres('__tabfm')>0
|| {? _=1 || _b:=0 ?};
   __tabfm.win_edit(_ewin);
   {? __tabfm.edit({? _typ='NAG' || {? ~_b || "exec('valid','tagger','NAG',0)" || "exec('valid','tagger','NAG',1)" ?}
                   |? _typ='VPZ' || "exec('valid','tagger','VPZ')"
                   ?})
   || exec('form_zap','tagger',_a,_b)
   || {? _typ='VPZ' & (_=1 | ~_b)
      || _ref:=TAGGER.uidref();
         TAGGER.cntx_psh();
         TAGGER.index('KHVRZ'); TAGGER.prefix('T',KH.uidref(),'VRZ',_ref);
         {? TAGGER.first() || {! |? TAGGER.del() !} ?};
         TAGGER.cntx_pop();
         TAGGER.del()
      ?}
   ?}
?};
VAR_DEL.delete('__tabfm')


\ae_odd1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Po edytowaniu pola ODDOD
::   WE: [_a] - Czy dla typu VPZ
::----------------------------------------------------------------------------------------------------------------------
{? _=1 & _a || _vpz:=1 || _vpz:=0 ?};
_tmp:=__tabfm.ODD;
ODD.cntx_psh();
ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA,__tabfm.ODDOD,);
{? ODD.first() & __tabfm.ODDOD<>''
|| _zwrot:='';
   __tabfm.ODD:=$ODD.ref()
|| __tabfm.ODDOD:='';
   __tabfm.ODD:='';
   _zwrot:='ODDOD'
?};
ODD.cntx_pop();
{? (__tabfm.ODD='' | (_tmp<>'' & __tabfm.ODD<>_tmp)) & ~_vpz
|| __tabfm.REJ:='';
   __tabfm.DOK_REJ:='';
   __tabfm.RVAT:='';
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'REJ');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'DOK_REJ');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'RVAT')
|? (__tabfm.ODD='' | (_tmp<>'' & __tabfm.ODD<>_tmp)) & _vpz
|| __tabfm.REJ:='';
   __tabfm.GRVAT:=__tabfm.GRVATKOD:=__tabfm.PR:=__tabfm.PRVAT:=__tabfm.R:=__tabfm.KK:=__tabfm.K2:='';
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'REJ');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'GRVATKOD');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'KRAJ');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'PRVAT');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'R');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'VAT7KK');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'VAT7K2');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'KK');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'K2')
|? ~(__tabfm.ODD='' | (_tmp<>'' & __tabfm.ODD<>_tmp)) & ~_vpz
|| __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'REJ')
|? ~(__tabfm.ODD='' | (_tmp<>'' & __tabfm.ODD<>_tmp)) & _vpz
|| __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'REJ')
?};
_zwrot


\f3_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Akcja na F3 dla ODDOD
::----------------------------------------------------------------------------------------------------------------------
_tmp:=__tabfm.ODDOD;
ODD.cntx_psh();
ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
ODD.win_sel('WYB');
{? ODD.select()
|| _zwrot:=ODD.OD
|| _zwrot:=_tmp
?};
ODD.cntx_pop();
_zwrot


\be_rej1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Przed edytowaniem pola REJ
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__tagrej');
__tagrej:=__tabfm.REJ


\ae_rej1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Po edytowaniu pola REJ
::   WE: [_a] - Czy dla typu VPZ
::----------------------------------------------------------------------------------------------------------------------
_tmp:='';
{? _=1 & _a || _vpz:=1 || _vpz:=0 ?};
{? var_pres('__tagrej')>0 || _tmp:=__tagrej ?};
REJ.cntx_psh();
REJ.index('KOD'); REJ.prefix(SSTALE.AR,BIT.sqlint(__tabfm.ODD),__tabfm.REJ,);
{? REJ.first() & __tabfm.REJ<>''
|| _zwrot:=''
|| __tabfm.REJ:='';
   _zwrot:='REJ'
?};
REJ.cntx_pop();
{? (__tabfm.REJ='' | (_tmp<>'' & __tabfm.REJ<>_tmp)) & ~_vpz
|| __tabfm.DOK_REJ:='';
   __tabfm.RVAT:='';
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'DOK_REJ');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'RVAT')
|? ~(__tabfm.REJ='' | (_tmp<>'' & __tabfm.REJ<>_tmp)) & ~_vpz
|| __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'DOK_REJ');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'RVAT')
|? _vpz & (__tabfm.REJ='' | (_tmp<>'' & __tabfm.REJ<>_tmp))
|| __tabfm.GRVAT:=__tabfm.GRVATKOD:=__tabfm.PR:=__tabfm.PRVAT:=__tabfm.R:=__tabfm.KK:=__tabfm.K2:='';
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'GRVATKOD');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'KRAJ');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'PRVAT');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'R');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'VAT7KK');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'VAT7K2');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'KK');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'K2')
|? ~(__tabfm.REJ='' | (_tmp<>'' & __tabfm.REJ<>_tmp)) & _vpz
|| __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'KRAJ');
   {? __tabfm.KRAJ<>'' || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'PRVAT') ?}
?};
VAR_DEL.delete('__tagrej');
_zwrot


\f3_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Na F3 dla pola REJ
::----------------------------------------------------------------------------------------------------------------------
_sql:='select distinct REJ.KOD as Symbol, REJ.NAZ as Nazwa '+
      'from REJ join DOK_REJ using(DOK_REJ.REJ, REJ.REFERENCE) '+
      'where REJ.ROK=\':_a\' and REJ.ODD=\':_b\' and (DOK_REJ.SLO=\':_c\' or DOK_REJ.SLO=\':_d\') '+
      'order by 1 asc';
_tab:=sql(_sql,$SSTALE.AR,__tabfm.ODD,$exec('find_dokrej_slo','tagger','VAT'),$exec('find_dokrej_slo','tagger','SAD'));

_win:=_tab.mk_sel('Rejestry'@,'T',0,'rejqslo22',1,1,32,0);
_tab.win_fld(_win,_tab,'SYMBOL',,,8,0,0,'Symbol'@@,0,'',,);
_tab.win_fld(_win,_tab,'NAZWA',,,60,0,0,'',0,'',,);
_tab.win_act(_win,0,'Formuła','Wybierz'@@,'','',"exec('sel_exit_','#window')","",1,0,"","",'W');
_tab.win_sel(_win);
{? _tab.select()
|| _zwrot:=_tab.SYMBOL
|| _zwrot:=''
?};
_zwrot


\find_dokrej_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła znajduje ref słownika dla rodzajów dokumentów
::   WE: _a - VAT/SAD
::----------------------------------------------------------------------------------------------------------------------
SLU.cntx_psh();
SLU.index('NAZ'); SLU.prefix('~RODZAJE DOKUMENTÓW');
_wyn:=null();
{? SLU.first()
|| SLO.cntx_psh();
   SLO.index('SL'); SLO.prefix(SLU.ref(),_a);
   {? SLO.first() || _wyn:=SLO.ref() ?};
   SLO.cntx_pop()
?};
SLU.cntx_pop();
_wyn


\ae_dokrej1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Po redagowaniu DOK_REJ
::----------------------------------------------------------------------------------------------------------------------
REJ.cntx_psh();
REJ.index('KOD'); REJ.prefix(SSTALE.AR,BIT.sqlint(__tabfm.ODD),__tabfm.REJ);
{? REJ.first() || _rej:=REJ.ref() || _rej:=null ?};
REJ.cntx_pop();

DOK_REJ.cntx_psh();
DOK_REJ.index('NAZ'); DOK_REJ.prefix(_rej,__tabfm.DOK_REJ,);
{? DOK_REJ.first()
|| _zwrot:=''
|| __tabfm.DOK_REJ:='';
   _zwrot:='DOK_REJ'
?};
DOK_REJ.cntx_pop();
_zwrot


\f3_dokrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Na F3 dla rodzju dokumentu
::----------------------------------------------------------------------------------------------------------------------
REJ.cntx_psh();
REJ.index('KOD'); REJ.prefix(SSTALE.AR,BIT.sqlint(__tabfm.ODD),__tabfm.REJ);
{? REJ.first() || _rej:=REJ.ref() || _rej:=null ?};
REJ.cntx_pop();
_tmp:=__tabfm.DOK_REJ;
_sql:='select DOK_REJ.NAZ as "Nazwa dokumentu", AV.OP as Opis, AV.KOD as Kod '+
      'from DOK_REJ join AV using(DOK_REJ.AV, AV.REFERENCE) '+
      'where DOK_REJ.REJ=\':_a\' and (DOK_REJ.SLO=\':_b\' or DOK_REJ.SLO=\':_c\') '+
      'order by 1 asc';
_tab:=sql(_sql,$_rej,$exec('find_dokrej_slo','tagger','VAT'),$exec('find_dokrej_slo','tagger','SAD'));

_win:=_tab.mk_sel('Rodzaj dokumentu'@,'T',0,,,,,,'U','T');
_tab.win_fld(_win,,'NAZWA');
_tab.win_fld(_win,,'OPIS');
_tab.win_fld(_win,,'KOD');
_tab.win_act(_win,0,'Formuła','&Wybierz'@,,,,"exec('sel_exit_','#window')",1);
_tab.win_sel(_win);
{? _tab.select()
|| _zwrot:=_tab.NAZWA
|| _zwrot:=_tmp
?};
_zwrot


\ae_rvat1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Po redagowaniu pola RVAT
::----------------------------------------------------------------------------------------------------------------------
REJ.cntx_psh();
REJ.index('KOD'); REJ.prefix(SSTALE.AR,BIT.sqlint(__tabfm.ODD),__tabfm.REJ);
{? REJ.first() || _rej:=REJ.ref() || _rej:=null ?};
REJ.cntx_pop();

VAT_REJ.cntx_psh(); RVAT.cntx_psh(); RVAT.prefix();
VAT_REJ.index('REJ_SYM'); VAT_REJ.prefix(_rej,__tabfm.RVAT,);
{? VAT_REJ.first()
|| _zwrot:=''
|| __tabfm.RVAT:='';
   _zwrot:=VAT_REJ
?};
VAT_REJ.cntx_pop(); RVAT.cntx_pop();
_zwrot


\f3_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Na F3 dla rejestru VAT
::----------------------------------------------------------------------------------------------------------------------
REJ.cntx_psh();
REJ.index('KOD'); REJ.prefix(SSTALE.AR,BIT.sqlint(__tabfm.ODD),__tabfm.REJ);
{? REJ.first() || _rej:=REJ.ref() || _rej:=null ?};
REJ.cntx_pop();

VAT_REJ.cntx_psh(); RVAT.cntx_psh(); RVAT.prefix();
VAT_REJ.index('REJ_VREF'); VAT_REJ.prefix(_rej);
_win:=VAT_REJ.mk_sel('Rejestr VAT'@,'T',0);
VAT_REJ.win_fld(_win,,'RVAT','SYM','SYM');
VAT_REJ.win_fld(_win,,'RVAT','NAZ');
VAT_REJ.win_act(_win,0,'Formuła','&Wybierz'@,,,,"exec('sel_exit_','#window')",1);
VAT_REJ.win_sel(_win);
VAT_REJ.select();
_zwrot:=VAT_REJ.RVAT().SYM;
VAT_REJ.cntx_pop(); RVAT.cntx_pop();
_zwrot


\ae_kraj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Po redagowaniu pola KRAJ
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh(); SLU.cntx_psh();
exec('prz_kraj','nipyue'); SLO.index('SL'); SLO.prefix(SLU.ref(),__tabfm.KRAJ,);
{? ~SLO.first() || __tabfm.KRAJ:='' ?};
SLO.cntx_pop(); SLU.cntx_pop();
{? __tabfm.KRAJ=''
|| __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'PRVAT');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'R');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'VAT7KK');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'VAT7K2');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'KK');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'K2')
|| __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'PRVAT')
?};
1


\f3_kraj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Na F3 pola KRAJ
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh(); SLU.cntx_psh();
exec('prz_kraj','nipyue'); SLO.index('SL_TR'); SLO.prefix(SLU.ref());
SLO.win_sel('ONE_SEL');
{? SLO.select()
|| _zwrot:=SLO.KOD
|| _zwrot:=1
?};
SLO.cntx_pop(); SLU.cntx_pop();
_zwrot


\ae_prvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Po redagowaniu pola PRVAT
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh(); SLU.cntx_psh();
_tmp:=__tabfm.PR;
_krkod:={? __tabfm.KRAJ<>'' || __tabfm.KRAJ || 'PL' ?};
SLU.index('NAZ'); SLU.prefix('~STAWKI VAT '+_krkod);
SLO.index('SL');
_dalej:=0; _ref:=null;
{? SLU.first() & __tabfm.PRVAT<>''
|| SLO.prefix(SLU.ref(),__tabfm.PRVAT,);
   {? SLO.first() || _ref:=SLO.ref(); _dalej:=1 || _dalej:=0 ?}
|| _dalej:=0
?};
{? _dalej
|| __tabfm.PR:=$_ref
|| __tabfm.PR:=__tabfm.PRVAT:=''
?};
{? __tabfm.PR='' | (_tmp<>'' & __tabfm.PR<>_tmp)
|| __tabfm.GRVAT:=__tabfm.GRVATKOD:=__tabfm.R:=__tabfm.KK:=__tabfm.K2:='';
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'GRVATKOD');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'R');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'VAT7KK');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'VAT7K2');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'KK');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'K2')
|| __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'GRVATKOD');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'R');
   {? __tabfm.SOURCE='DO'
   || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'VAT7KK');
      __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'VAT7K2')
   ?};
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'KK');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'K2')
?};
SLO.cntx_pop(); SLU.cntx_pop();
1


\f3_prvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Na F3 dla PRVAT
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh(); SLU.cntx_psh();
_krkod:={? __tabfm.KRAJ<>'' || __tabfm.KRAJ || 'PL' ?};
SLU.index('NAZ'); SLU.prefix('~STAWKI VAT '+_krkod);
SLO.index('SL');
{? SLU.first()
|| SLO.prefix(SLU.ref())
|| SLO.cntx_pop(); SLU.cntx_pop(); FUN.info('Brak słownika ze stawkami VAT w wybranym kraju'@); return(0)
?};
SLO.win_sel('ONE_SEL');
{? SLO.select()
|| _zwrot:=SLO.KOD
|| _zwrot:=1
?};
SLO.cntx_pop(); SLU.cntx_pop();
_zwrot


\ae_grvatkod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Po redagowaniu pola GRVATKOD
::----------------------------------------------------------------------------------------------------------------------
GR_VAT.cntx_psh();
_tmp:=__tabfm.GRVAT;
REJ.cntx_psh();
REJ.index('KOD'); REJ.prefix(SSTALE.AR,BIT.sqlint(__tabfm.ODD),__tabfm.REJ);
{? REJ.first() || _rej:=REJ.ref() || _rej:=null ?};
REJ.cntx_pop();

GR_VAT.index('REJ_KOD'); GR_VAT.prefix(_rej,__tabfm.GRVATKOD,);
{? GR_VAT.first() & __tabfm.GRVATKOD<>''
|| __tabfm.GRVAT:=$GR_VAT.GRVAT
|| __tabfm.GRVAT:=__tabfm.GRVATKOD:=''
?};
GR_VAT.cntx_pop();
1


\f3_grvatkod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Na F3 dla kodu GRVAT
::----------------------------------------------------------------------------------------------------------------------
GR_VAT.cntx_psh();
_win:=GR_VAT.mk_sel('Grupy podatkowe'@,'P',0,'gr_vatqslo',1,1,32,0,'U','T',0,0,0,'','wrapped','on','lumen');
GR_VAT.win_fld(_win,GR_VAT,'KOD',,,8,0,1,'Kod'@@,0,'',,);
GR_VAT.win_fld(_win,GR_VAT,'GRVAT','TR','*',40,0,1,'Opis'@@,0,'',,);
GR_VAT.win_act(_win,0,'Formuła','Wybierz'@,,,,"exec('sel_exit_','#window')",1);
GR_VAT.win_act(_win,0,'Kolejność','','','',"","",0,0,"","",'',0,'mobile=1,target=window');
GR_VAT.win_sel(_win);

REJ.cntx_psh();
REJ.index('KOD'); REJ.prefix(SSTALE.AR,BIT.sqlint(__tabfm.ODD),__tabfm.REJ);
{? REJ.first() || _rej:=REJ.ref() || _rej:=null ?};
REJ.cntx_pop();

GR_VAT.index('REJ_KOD'); GR_VAT.prefix(_rej);
{? GR_VAT.select()
|| _zwrot:=GR_VAT.KOD
|| _zwrot:=1
?};
GR_VAT.cntx_pop();
_zwrot


\ae_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Po redagowaniu pola R
::----------------------------------------------------------------------------------------------------------------------
{? +__tabfm.R
|| {? ~exec('akc_kont','edkonto',__tabfm.R) || 1
   || FUN.info('Brak konta %1 w planie kont.'@[__tabfm.R]); 1
   ?}
|| 1
?}


\f3_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Na F3 dla rodzaju konta
::----------------------------------------------------------------------------------------------------------------------
AN.cntx_psh();
_mas1:=SSTALE.AR().KOD;
AN.use('koan__'+_mas1);
AN.win_sel('KON');
AN.index('SYM'); AN.prefix(); AN.find_key({? +fld() || fld() || '3' ?});
{? AN.select(,1)
|| __tabfm.R:=AN.SYM
?};
AN.cntx_pop();
1


\ae_konto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Po redagowaniu KK/K2
::   WE: _a - parametr automatyczny
::       _b - KK/K2
::----------------------------------------------------------------------------------------------------------------------
_fml:='__tabfm.VAT7'+_b;
{? ($_fml)()='N'
|| exec('ae_konto','edkonto',_a,'__tabfm',_b,0,1,1)
|| 1
?}


\patt_konto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Wzorzec dla pól KK/K2
::   WE: _a - KK/K2
::----------------------------------------------------------------------------------------------------------------------
_fml:='__tabfm.VAT7'+_a;
{? ($_fml)()='T'
|| '<- \\F\\3 ->#'
|| exec('wz_konto','edkonto','__tabfm','KK')
?}


\f3_konto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła na F3 dla pól KK/K2
::   WE: _a - KK/K2
::----------------------------------------------------------------------------------------------------------------------
_fml:='__tabfm.VAT7'+_a;
POMOC.F1:=0;
{? ($_fml)()='N'
|| exec('f3_konto','edkonto','__tabfm',_a)
|| _ret:=1; _suma:=0;
   {! |?
      exec('kh_vrz','tagger',_a,TAGGER.uidref());
      {? POMOC.F1<>100 & POMOC.F1<>0
      || FUN.info('Suma procent kwot rozdzielnika musi być równa 100.'@)
      || _ret:=0
      ?};
      {? POMOC.F1=0
      || _ret:=0
      ?};
      _ret
   !}
?}


\kh_vrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Wyświetla okienko VRZ tabeli TAGGER
::   WE: _a - KK/K2
::       _b - uidref do rekordu typu VPZ tabeli TAGGER
::----------------------------------------------------------------------------------------------------------------------
TAGGER.cntx_psh();
TAGGER.index('KHVRZ');
TAGGER.prefix('T',KH.uidref(),'VRZ',_b,_a);
VAR_DEL.delete('__vrzpar');
__vrzpar:=obj_new('A','B');
__vrzpar.A:=_a;
__vrzpar.B:=_b;
TAGGER.win_sel('VRZ');
TAGGER.select();
_sum:=sql('select sum(R1*100) skw from prefixed_table(:_a)',TAGGER);
{? _sum.first() || POMOC.F1:=_sum.SKW ?};
TAGGER.cntx_pop();
VAR_DEL.delete('__vrzpar');
1


\form_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła zapisuje dane podpowiedzi w tabeli TAGGER
::   WE: _a - typ podpowiedzi
::       _b - czy podpowiedź (1/0)
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
TAGGER.cntx_psh();
{? _typ='NAG'
|| TAGGER.prefix();
   TAGGER.blank();
   TAGGER.TAGREF:=KH.uidref();
   TAGGER.TAGKOD:=KH.KOD;
   TAGGER.FIRMA:=$REF.FIRMA;
   TAGGER.TYP:=_typ;
   TAGGER.SOURCE:=__tabfm.SOURCE;
   TAGGER.USRSET:='T';
   TAGGER.P1:=__tabfm.REJ;
   TAGGER.P2:=__tabfm.DOK_REJ;
   TAGGER.P3:=__tabfm.RVAT;
   TAGGER.P4:=__tabfm.ODD;
   {? ~_b || TAGGER.add(1) || TAGGER.put(1) ?}
|? _typ='VPZ'
|| TAGGER.SOURCE:=__tabfm.SOURCE;
   TAGGER.P1:=__tabfm.PR;
   TAGGER.P2:=__tabfm.REJ;
   TAGGER.P3:=__tabfm.GRVAT;
   TAGGER.P4:=__tabfm.R;
   TAGGER.P5:=__tabfm.KK;
   TAGGER.P6:=__tabfm.K2;
   TAGGER.P7:=__tabfm.ODD;
   TAGGER.put(1)
|? _typ='CSH'
|| TAGGER.prefix();
   TAGGER.blank();
   TAGGER.TAGREF:=KH.uidref();
   TAGGER.TAGKOD:=KH.KOD;
   TAGGER.FIRMA:=$REF.FIRMA;
   TAGGER.TYP:=_typ;
   TAGGER.SOURCE:='OF';
   TAGGER.USRSET:='T';
   TAGGER.P1:=ETSCHPDR.uidref();
   TAGGER.add(1)
?};
TAGGER.cntx_pop();
1


\form_accept
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła pomocnicza
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__tagrf') <=0 || return(1) ?};
{? menu_txt()<>'Akceptuj'
|| TAGGER.cntx_psh(); TAGGER.prefix(); __tagrf.prefix();
   {? __tagrf.first()
   || {! |?
         {? TAGGER.seek(__tagrf.UIDREF,ref_name(__tagrf.UIDREF)) || TAGGER.del() ?};
         __tagrf.next()
      !}
   ?};
   TAGGER.cntx_pop()
|| TAGGER.cntx_psh(); TAGGER.index('TAG1'); TAGGER.prefix(); __tagrf.prefix();
   {? __tagrf.first()
   || {! |?
         {? TAGGER.seek(__tagrf.UIDREF,ref_name(__tagrf.UIDREF))
         || _khuid:=TAGGER.TAGREF;
            _firma:=TAGGER.FIRMA;
            _typ:=TAGGER.TYP;
            TAGGER.prefix('N',_khuid,_firma,_typ);
            {? TAGGER.first() || {! |? TAGGER.del() !} ?}
         ?};
         __tagrf.next()
      !}
   ?};
   TAGGER.cntx_pop()
?};
VAR_DEL.delete('__tagrf')


\win_frm_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Przed akcją Popraw
::   WE: _a - typ
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
{? _typ='NAG'
|| __tabfm.REJ:=TAGGER.P1;
   __tabfm.DOK_REJ:=TAGGER.P2;
   __tabfm.RVAT:=TAGGER.P3;
   __tabfm.ODD:=TAGGER.P4;
   __tabfm.SOURCE:=TAGGER.SOURCE;
   ODD.cntx_psh(); ODD.prefix();
   {? __tabfm.ODD<>'' & ODD.seek(__tabfm.ODD)
   || __tabfm.ODDOD:=ODD.OD
   ?};
   ODD.cntx_pop();
   __tabfm.fld_fml('SOURCE','BEFORE_DISPLAY',
                   "__tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'SOURCE'); 1")
|? _typ='VPZ'
|| __tabfm.SOURCE:=TAGGER.SOURCE;
   __tabfm.PR:=TAGGER.P1;
   __tabfm.REJ:=TAGGER.P2;
   __tabfm.GRVAT:=TAGGER.P3;
   __tabfm.R:=TAGGER.P4;
   __tabfm.KK:=TAGGER.P5;
   __tabfm.K2:=TAGGER.P6;
   __tabfm.ODD:=TAGGER.P7;
   __tabfm.KRAJ:='PL';
   ODD.cntx_psh(); ODD.prefix();
   {? __tabfm.ODD<>'' & ODD.seek(__tabfm.ODD)
   || __tabfm.ODDOD:=ODD.OD
   ?};
   ODD.cntx_pop();
   SLO.cntx_psh(); SLO.prefix();
   {? __tabfm.GRVAT<>'' & SLO.seek(__tabfm.GRVAT) || __tabfm.GRVATKOD:=SLO.KOD ?};
   {? __tabfm.PR<>'' & SLO.seek(__tabfm.PR) || __tabfm.PRVAT:=SLO.KOD ?};
   SLO.cntx_pop();
   {? __tabfm.KK='<- F3 ->' || __tabfm.VAT7KK:='T' ?};
   {? __tabfm.K2='<- F3 ->' || __tabfm.VAT7K2:='T' ?};
   __tabfm.fld_fml('SOURCE','BEFORE_DISPLAY',
                   "__tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'SOURCE'); 1");
   __tabfm.fld_fml('ODDOD','BEFORE_DISPLAY',
                   "__tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'ODDOD'); 1")
?};
1


\valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Walidacja danych po zatwierdzonej edycji dla typów NAG i VPZ
::   WE: _a - typ
::       _b - czy poprawa danych (1/0)
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
_zwrot:=''; _repeat:=0;
{? _typ='NAG'
|| {? __tabfm.ODD=''
   || _zwrot:='ODDOD'
   |? __tabfm.REJ=''
   || _zwrot:='REJ'
   |? __tabfm.DOK_REJ=''
   || _zwrot:='DOK_REJ'
   |? __tabfm.RVAT=''
   || _zwrot:='RVAT'
   ?};
   TAGGER.cntx_psh();
   exec('tag_mask','tagger',KH.ref(),'g');
   TAGGER.index('KHSET'); TAGGER.prefix('T',KH.uidref(),$REF.FIRMA,_typ,__tabfm.SOURCE);
   {? TAGGER.first() || _repeat:=1 ?};
   TAGGER.cntx_pop();
   {? _zwrot<>''
   || FUN.info('Wszystkie pola muszą być uzupełnione.'@)
   |? _repeat & (_=1 | ~_b)
   || FUN.info('Istnieją już ręcznie wprowadzone dane podpowiedzi dla wybranego miejsca.'@); _zwrot:='ODDOD'
   ?}
|? _typ='VPZ'
|| {? __tabfm.ODD=''
   || _zwrot:='ODDOD';
      FUN.info('Pole \'Jednostka księgowa\' musi być uzupełnione'@)
   |? __tabfm.REJ=''
   || _zwrot:='REJ';
      FUN.info('Pole \'Rejestr księgowy\' musi być uzupełnione'@)
   |? __tabfm.KRAJ=''
   || _zwrot:='KRAJ';
      FUN.info('Pole \'Kraj\' musi być uzupełnione'@)
   |? __tabfm.PR=''
   || _zwrot:='PRVAT';
      FUN.info('Pole \'Procent VAT\' musi być uzupełnione'@)
   |? __tabfm.GRVAT=''
   || _zwrot:='GRVATKOD';
      FUN.info('Pole \'Grupa podatkowa\' musi być uzupełnione'@)
   ?};
   TAGGER.cntx_psh();
   exec('tag_mask','tagger',KH.ref(),'g');
   TAGGER.index('KHVPZ');
   TAGGER.prefix('T',KH.uidref(),$REF.FIRMA,_typ,__tabfm.SOURCE,__tabfm.PR,__tabfm.REJ,__tabfm.ODD);
   {? TAGGER.first() || _repeat:=1 ?};
   TAGGER.cntx_pop();
   {? _repeat & _=1 & menu_txt()<>'Popraw'
   || FUN.info('Istnieją już ręcznie wprowadzone dane podpowiedzi dla wybranego typu.'@); _zwrot:='ODDOD'
   ?};
   _kk:=_k2:=0;
   {? TAGGER.P5='<- F3 ->'
   || _ref:=TAGGER.uidref();
      TAGGER.cntx_psh();
      TAGGER.index('KHVRZ'); TAGGER.prefix('T',KH.uidref(),'VRZ',_ref,'KK');
      {? ~TAGGER.first()
      || _kk:=1
      ?};
      TAGGER.cntx_pop()
   ?};
   {? TAGGER.P6='<- F3 ->'
   || _ref:=TAGGER.uidref();
      TAGGER.cntx_psh();
      TAGGER.index('KHVRZ'); TAGGER.prefix('T',KH.uidref(),'VRZ',_ref,'K2');
      {? ~TAGGER.first()
      || _k2:=1
      ?};
      TAGGER.cntx_pop()
   ?};
   {? _kk || TAGGER.P5:='' ?}; {? _k2 || TAGGER.P6:='' ?}
?};
_zwrot


\kh_dol_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Dołącz dla okienka NAG tabeli TAGGER
::----------------------------------------------------------------------------------------------------------------------
exec('win_form2','tagger','NAG')


\kh_dol_vpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Dołącz dla okienka VPZ tabeli TAGGER
::----------------------------------------------------------------------------------------------------------------------
TAGGER.cntx_psh();
TAGGER.prefix(); TAGGER.blank();
TAGGER.TAGREF:=KH.uidref();
TAGGER.TAGKOD:=KH.KOD;
TAGGER.FIRMA:=$REF.FIRMA;
TAGGER.USRSET:='T';
TAGGER.TYP:='VPZ';
TAGGER.add(1);
_ref:=TAGGER.ref();
TAGGER.cntx_pop();
{? TAGGER.seek(_ref) || 1 ?};
exec('win_form2','tagger','VPZ')


\kh_dol_csh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Dołącz dla okienka CSH tabeli TAGGER
::----------------------------------------------------------------------------------------------------------------------
exec('win_form2','tagger','CSH')


\kh_dol_acc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Dołącz dla okienka ACC tabeli TAGGER
::----------------------------------------------------------------------------------------------------------------------
exec('win_form2','tagger','ACC')


\kh_dol_vrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Dołącz dla typu VRZ
::   WE: _a - czy akcja popraw (1/0)
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__vrzpar')<=0 || return(0) ?};
{? _=0 || _a:=0 ?};
_ewin:=TAGGER.mk_edit(,0);
TAGGER.win_efld(_ewin,,'P2',,,32,,0,'Konto'@,0,,,'F3_button=1');
TAGGER.win_efld(_ewin,,'R1',,,35,2,0,'Procent'@);

TAGGER.fld_fml('P2','PATTERN',"exec('wz_konto','edkonto','TAGGER','P2')");
TAGGER.fld_fml('P2','F3',"exec('f3_konto','edkonto','TAGGER','P2')");
TAGGER.fld_fml('P2','AFTER_EDIT',"exec('ae_konto','edkonto',_a,'TAGGER','P2',0,1,1)");
TAGGER.fld_fml('P2','BEFORE_EDIT',"exec('be_konto','edkonto','TAGGER','P2')");

TAGGER.win_ebtn(_ewin,'text=&Zapisz'@,'key:F2');
TAGGER.win_ebtn(_ewin,'text=&Anuluj'@,'key:Esc');

TAGGER.win_edit(_ewin);
{? ~_a
|| TAGGER.blank();
   TAGGER.TAGREF:=KH.uidref();
   TAGGER.TAGKOD:=KH.KOD;
   TAGGER.TYP:='VRZ';
   TAGGER.P3:=__vrzpar.B;
   TAGGER.P1:=__vrzpar.A;
   TAGGER.USRSET:='T';
   TAGGER.FIRMA:=$REF.FIRMA;
   TAGGER.SOURCE:='DK';
   {? TAGGER.edit("{? TAGGER.P2='' || 'P2' |? TAGGER.R1=0 || 'R1' || 1 ?}")
   || TAGGER.R1:=TAGGER.R1/100;
      TAGGER.add(1)
   ?}
|| TAGGER.get();
   TAGGER.R1:=TAGGER.R1*100;
   {? TAGGER.edit("{? TAGGER.P2='' || 'P2' |? TAGGER.R1=0 || 'R1' || 1 ?}")
   || TAGGER.R1:=TAGGER.R1/100;
      TAGGER.put(1)
   ?}
?};
TAGGER.fld_fml('P2','PATTERN',"*");
TAGGER.fld_fml('P2','F3',"*");
TAGGER.fld_fml('P2','AFTER_EDIT',"*");
TAGGER.fld_fml('P2','BEFORE_EDIT',"*");
1


\kh_usun_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa rekord typu NAG
::----------------------------------------------------------------------------------------------------------------------
{? TAGGER.sel_size>0 | FUN.ask('Czy na pewno usunąć dane podpowiedzi?'@)
|| TAGGER.del()
?}


\kh_usun_vpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa rekord typu VPZ
::----------------------------------------------------------------------------------------------------------------------
{? TAGGER.sel_size>0 | FUN.ask('Czy na pewno usunąć dane podpowiedzi?'@)
|| _ref:=TAGGER.uidref();
   TAGGER.cntx_psh();
   TAGGER.index('KHVRZ'); TAGGER.prefix('T',KH.uidref(),'VRZ',_ref);
   {? TAGGER.first()
   || {! |? TAGGER.del() !}
   ?};
   TAGGER.cntx_pop();
   TAGGER.del()
?}


\kh_usun_csh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa rekord typu CSH
::----------------------------------------------------------------------------------------------------------------------
{? TAGGER.sel_size>0 | FUN.ask('Czy na pewno usunąć dane podpowiedzi?'@)
|| TAGGER.del()
?}


\kh_usun_acc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa rekord typu ACC
::----------------------------------------------------------------------------------------------------------------------
_uref:=TAGGER.TAGREF;
_del:=0;
{? TAGGER.sel_size()>0 | FUN.ask('Czy na pewno usunąć dane podpowiedzi?'@)
|| TAGGER.del(); _del:=1
?};
{? _del & TAGGER.sel_size()<=0
|| TAGGER.cntx_psh();
   TAGGER.index('KHSET'); TAGGER.prefix('T',_uref,$REF.FIRMA,'ACC');
   {? TAGGER.first()
   || _lp:=1;
      {! |?
         TAGGER.INT1:=_lp;
         _lp+=1;
         TAGGER.put();
         TAGGER.next()
      !}
   ?};
   TAGGER.cntx_pop()
?}


\graf_kh_usun_acc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Grupa po akcji usuń okienka ACC
::----------------------------------------------------------------------------------------------------------------------
TAGGER.cntx_psh();
TAGGER.index('KHSET'); TAGGER.prefix('T',KH.uidref(),$REF.FIRMA,'ACC');
{? TAGGER.first()
|| _lp:=1;
   {! |?
      TAGGER.INT1:=_lp;
      _lp+=1;
      TAGGER.put();
      TAGGER.next()
   !}
?};
TAGGER.cntx_pop()


\kh_usun_vrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwa rekord typu VRZ
::----------------------------------------------------------------------------------------------------------------------
TAGGER.del()


\kh_rekpz_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Rekord przed (okienko NAG tabeli TAGGER)
::----------------------------------------------------------------------------------------------------------------------
ODD.cntx_psh();
ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? BIT.sqlint(TAGGER.P4) & ODD.seek(TAGGER.P4)
|| ROZNE.TODD:=ODD.OD
?};
ODD.cntx_pop();
{? TAGGER.SOURCE='DK'
|| ROZNE.TSOURCE:='Dokumenty księgowe'
|? TAGGER.SOURCE='OF'
|| ROZNE.TSOURCE:='Faktury w obiegu'
?};
_color:=exec('rekprzed','color','TAGGER#01');
_color


\kh_rekprz_vpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Rekord przed (okienko VPZ tabeli TAGGER)
::----------------------------------------------------------------------------------------------------------------------
ODD.cntx_psh();
ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? BIT.sqlint(TAGGER.P7) & ODD.seek(TAGGER.P7)
|| ROZNE.TODD:=ODD.OD
?};
ODD.cntx_pop();
{? TAGGER.SOURCE='DK'
|| ROZNE.TSOURCE:='Dokumenty księgowe (KSeF)'
|? TAGGER.SOURCE='OF'
|| ROZNE.TSOURCE:='Faktury w obiegu'
|? TAGGER.SOURCE='DO'
|| ROZNE.TSOURCE:='Dokumenty księgowe'
?};
SLO.cntx_psh(); SLO.prefix();
{? SLO.seek(TAGGER.P3) || ROZNE.TGRVAT:=SLO.KOD ?};
{? SLO.seek(TAGGER.P1) || ROZNE.TPR:=SLO.KOD ?};
SLO.cntx_pop();
{? cur_win(1,1)+1='P'
|| {? TAGGER.P5<>'<- F3 ->' & TAGGER.P6<>'<- F3 ->'
   || TAGGER.actions(cur_win(1,1),'T',,1)
   || TAGGER.actions(cur_win(1,1),'',,1)
   ?}
?};
_color:=exec('rekprzed','color','TAGGER#01');
_color


\kh_rekprz_csh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Rekord przed dla okienka wyświetlającego schematy
::----------------------------------------------------------------------------------------------------------------------
ETSCHPDR.cntx_psh();
{? ETSCHPDR.seek(TAGGER.P1)
|| ROZNE.TCSH:=ETSCHPDR.ETSCHPDN().NAZWA
?};
ETSCHPDR.cntx_pop();
_color:=exec('rekprzed','color','TAGGER#01');
_color


\kh_rekprz_acc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Rekord przed dla okienka wyświetlającego użytkowników
::----------------------------------------------------------------------------------------------------------------------
0


\kh_rekprz_vrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Rekord przed dla okienka wyświetlającego typ VRZ
::----------------------------------------------------------------------------------------------------------------------
TAGGER.R1:=100*TAGGER.R1; 0


\ae_vat7
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Po redagowaniu pól VAT7KK/VAT7/K2
::   WE: _a - KK/K2
::----------------------------------------------------------------------------------------------------------------------
_fml:='__tabfm.VAT7'+_a;
_konto:='__tabfm.'+_a;
{? ($_fml)()='N'
|| _ref:=TAGGER.uidref();
   TAGGER.cntx_psh();
   TAGGER.index('KHVRZ'); TAGGER.prefix('T',KH.uidref(),'VRZ',_ref,_a);
   {? TAGGER.first()
   || {! |? TAGGER.del() !}
   ?};
   TAGGER.cntx_pop();
   ($_konto)():=''
?};
1


\ae_source_vpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Po edytowaniu miejsca podpowiedzi dla VPZ
::----------------------------------------------------------------------------------------------------------------------
{? __tabfm.SOURCE<>'DO'
|| __tabfm.VAT7KK:=__tabfm.VAT7K2:='N';
   exec('ae_vat7','tagger','KK');
   exec('ae_vat7','tagger','K2');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'VAT7KK');
   __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=grayed',__tabfm,'VAT7K2')
|| {? __tabfm.PR<>''
   || __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'VAT7KK');
      __tabfm.efld_opt(__tabfm.win_edit('?'),'editable=1',__tabfm,'VAT7K2')
   ?}
?};
win_disp()


\etypy_hlp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła zwraca ref do tabeli ETYPY (Faktura VAT)
::----------------------------------------------------------------------------------------------------------------------
TYPOBIEG.cntx_psh();
TYPOBIEG.index('UNIK'); TYPOBIEG.prefix('Obieg faktur');
{? TYPOBIEG.first() || _typ:=TYPOBIEG.ref() || _typ:=null ?};
TYPOBIEG.cntx_pop();
ETYPY.cntx_psh();
ETYPY.index('UNIK_WP'); ETYPY.prefix(_typ,'N','Faktura VAT',);
{? ETYPY.first() || _wyn:=ETYPY.ref() || _wyn:=null ?};
ETYPY.cntx_pop();
_wyn


\kh_pop_csh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Popraw rekord typu CSH
::----------------------------------------------------------------------------------------------------------------------
_etypy:=exec('etypy_hlp','tagger');
ETSCHPDR.cntx_psh();
ETSCHPDR.index('WYB'); ETSCHPDR.prefix(_etypy,REF.FIRMA,'T');
_win:=ETSCHPDR.mk_sel('Schematy'@,'T',0,,,,,,'U','T',,,,'normal');
ETSCHPDR.win_fld(_win,,'ETSCHPDN','NAZWA','UNIK',50);
ETSCHPDR.win_act(_win,0,'Formuła','Wybierz'@,,,"exec('sel_exit_','#window')",,1);
ETSCHPDR.win_sel(_win);
{? ETSCHPDR.select()
|| TAGGER.del();
   exec('form_zap','tagger','CSH')
?};
ETSCHPDR.cntx_pop()


\kh_pop_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Popraw rekord typu NAG
::----------------------------------------------------------------------------------------------------------------------
exec('win_form2','tagger','NAG',1)


\kh_pop_vpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Popraw rekord typu VPZ
::----------------------------------------------------------------------------------------------------------------------
exec('win_form2','tagger','VPZ',1)


\kh_pop_vrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Popraw rekord typu VRZ
::----------------------------------------------------------------------------------------------------------------------
exec('kh_dol_vrz','tagger',1)


\user_up_down
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Akcja Przesuń w górę/w dół w okienku ACC
::   WE: 1 - w górę, 2 - w dół
::----------------------------------------------------------------------------------------------------------------------
TAGGER.cntx_psh();
_nr:=TAGGER.INT1;
_zmiana:=0;
{? _a=1
|| TAGGER.index('KHSET'); TAGGER.prefix('T',TAGGER.TAGREF,$REF.FIRMA,'ACC','OF',_nr-1)
|? _a=2
|| TAGGER.index('KHSET'); TAGGER.prefix('T',TAGGER.TAGREF,$REF.FIRMA,'ACC','OF',_nr+1)
?};
{? TAGGER.first()
|| _zmiana:=1;
   TAGGER.prefix();
   TAGGER.INT1:=_nr;
   TAGGER.put(1)
?};
TAGGER.cntx_pop();
{? _zmiana
|| {? _a=1
   || TAGGER.INT1:=_nr-1
   |? _a=2
   || TAGGER.INT1:=_nr+1
   ?};
   TAGGER.put()
?}


\users_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Akcja Wybierz w oknie wyboru użytkowników do akceptacji
::----------------------------------------------------------------------------------------------------------------------
TAGGER.blank();
_usr:=TAGGER.P1:=B_USRROL.USERS().KOD;
TAGGER.cntx_psh();
TAGGER.index('KHVPZ'); TAGGER.prefix('T',KH.uidref(),$REF.FIRMA,'ACC','OF',_usr);
{? TAGGER.first || _add:=0 || _add:=1 ?};
TAGGER.cntx_pop();
{? _add
|| {? B_USRROL.sel_size()>0
   || khusrcounter+=1
   || TAGGER.cntx_psh();
      TAGGER.index('KHSET'); TAGGER.prefix('T',KH.uidref(),$REF.FIRMA,'ACC','OF');
      {? TAGGER.last() || khusrcounter:=TAGGER.INT1+1 || khusrcounter:=1 ?};
      TAGGER.cntx_pop()
   ?};
   TAGGER.USRSET:='T';
   TAGGER.TYP:='ACC';
   TAGGER.TAGREF:=KH.uidref();
   TAGGER.TAGKOD:=KH.KOD;
   TAGGER.SOURCE:='OF';
   TAGGER.FIRMA:=$REF.FIRMA;
   TAGGER.INT1:=khusrcounter;
   TAGGER.add(1)
|| 1
?};
{? B_USRROL.sel_size()>0 || 1 || exec('sel_exit_','#window') ?}


\grbe_users_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Akcja Grupa przed wyborem użytkowników
::----------------------------------------------------------------------------------------------------------------------
TAGGER.cntx_psh();
TAGGER.index('KHSET'); TAGGER.prefix('T',KH.uidref(),$REF.FIRMA,'ACC');
VAR_DEL.delete('khusrcounter');
{? TAGGER.last() || khusrcounter:=TAGGER.INT1 || khusrcounter:=0 ?};
TAGGER.prefix()


\graf_users_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Akcja Grupa po wyborze użytkowników
::----------------------------------------------------------------------------------------------------------------------
TAGGER.cntx_pop();
VAR_DEL.delete('khusrcounter');
exec('sel_exit_','#window')


\enable_tagger_for_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła włącza podpowiedzi Tagger dla wybranego kontrahenta
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
KH.get(); KH.TAGGER:='T'; KH.put(1);
KH.cntx_pop()


\disable_tagger_for_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła wyłącza podpowiedzi Tagger dla wybranego kontrahenta
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
KH.get(); KH.TAGGER:='N'; KH.put(1);
KH.cntx_pop()


\refresh_for_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła odświeża dane podpowiedzi dla kontrahenta
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? KH.sel_size()=0 || _wyn:=FUN.ask('Odświeżenie danych podpowiedzi może zająć dużo czasu. Kontynuować?'@) ?};
{? _wyn || exec('refill_kh','tagger',KH.uidref()) ?}


\grbe_refresh_for_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Grupa przed akcją odświeżania danych dla kontrahentów
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Odświeżenie danych podpowiedzi może zająć dużo czasu. Kontynuować?'@)


\korekta_get_ksef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Wczytuje potrzebne dane dla korekty
::   WE: _a - DOKUM.ref()
::----------------------------------------------------------------------------------------------------------------------
_dokumz:=exec('dokumz','edi_fo_ufd',_a,'ufd');
VAR_DEL.delete('__plikikorekta');
__plikikorekta:=tab_tmp(1,'PLIK', 'STRING[250]', 'Plik z bezwzględną ścieżką'
                         ,'PTH',  'STRING[250]', 'Ścieżka bezwzględna do pliku'
                         ,'SIG',  'STRING[8]',   'Rozszerzenie pliku z podpisem elektronicznym'
                         ,'LP',   'INTEGER',     'LP nadawana podczas zbiorczego odczytu komunikatów'
                         ,'BLOB', 'BLOBRAW',     'Plik'
                         ,'IN',   'STRING[1]',   'BLOB przekazany parametrem'
                         ,'OK',   'STRING[1]',   'Plik przetworzony bez problemu');
exec('FindAndGet','#table',DOKUMZ,_dokumz,,"
   _Pliki:=__plikikorekta;
   _Pliki.blank();
   _file:=fopen(DOKUMZ.DOKUM,'r',,,1);
   {? _file.is_open()
   ||
      _Pliki.PLIK:=DOKUMZ.bl_info('DOKUM','NAME');
      _Pliki.OK:='N';
      _Pliki.IN:='T';
      {? _Pliki.add()
      ||
         _Pliki.bl_put('BLOB',_file,,,_Pliki.PLIK)
      ?}
   ?};
   obj_del(_file)
");
_pliki:=__plikikorekta;
_xml:=fopen(_pliki.BLOB,'b',0,,1);
_name_len:=255;
_val_len:=255;
_no_blob:=0;
_space_preserve:=0;
_tab:=xml_tparse(_xml,_name_len,_val_len,_no_blob,_space_preserve);
_kordane:=obj_new('SYMBOL','DATATXT','DATA');
{? _tab.first()
|| {! |?
      {? (_tab.NAME='ReferenceNumber' | _tab.NAME='NrFaKorygowanej') & _tab.VAL<>''
      || _kordane.SYMBOL:=_tab.VAL; _tab.next()
      |? (_tab.NAME='ReferenceDate' | _tab.NAME='DataWystFaKorygowanej') & _tab.VAL<>''
      || _kordane.DATATXT:=_tab.VAL; _tab.next()
      || _tab.next()
      ?}
   !}
?};
VAR_DEL.delete('__plikikorekta');
{? _kordane.DATATXT<>''
|| _kordane.DATA:=exec('str2date','#convert',_kordane.DATATXT);
   {? _kordane.DATA=date(0,0,0) || _kordane.DATA:=exec('str2date8','#convert',_kordane.DATATXT) ?}
?};
{? _kordane.SYMBOL='' | _kordane.DATA=date(0,0,0) || &_kordane; _kordane:=0 ?};
_kordane


\find_ref_fa_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Znajduje ref korygowanego dokumentu księgowego
::   WE: _a - DOKUM.ref()
::   WY: DOK REFERENCE
::----------------------------------------------------------------------------------------------------------------------
_kordane:=exec('korekta_get_ksef','tagger',_a);
{? type_of('_kordane')=type_of(0) || return('') ?};
_result:='';
_fdok:='';
_okrod:={? SSTALE.AO().NR-12<=0 || 0 || SSTALE.AO().NR-12 ?};
OKRO_F.cntx_psh; ROK_F.cntx_psh();
OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(FIRMA.ref());
SSTALE.AO(); SSTALE.AR();
_fdok+='\'doku'+ ROK_F.KOD+form(OKRO_F.NR,-2)+'\',';
_ii:=12;
{? OKRO_F.prev()
|| {!
   |? OKRO_F.ROK();
      {? OKRO_F.NAZ<>'Bilans zamknięcia' & OKRO_F.NAZ<>'Bilans otwarcia'
      || _ii-=1;
         _fdok+='\'doku'+ ROK_F.KOD+form(OKRO_F.NR,-2)+'\','
      ?};
      OKRO_F.prev() & _ii>0
   !};
   _fdok:=_fdok-1
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop();
_nk:=_kordane.SYMBOL;
_kh:=DOKUM.KH().KOD;
_dk:=_kordane.DATA;
_refd:='';
_nksql:=STR.gsub(_nk ,'\'','\'\'');
_rejsql:='';
_sql:='/*+MASK_FILTER(DOK,:_c) '+
          'INDEX (DOK,REJ_SYM) */ '+
          'ODD.OD ODDZIAL, REJ.KOD REJESTR, DOK.NR NR, SLO.KOD KH, DOK.SYM_ZEW, DOK.NK SYMBOL, DOK.DTO DATA, DOK.REFERENCE REF '+
          'from @DOK left join REJ using (DOK.REJ,REJ.REFERENCE) '+
          'left join SLO using (DOK.WYS,SLO.REFERENCE) '+
          'join ODD using (DOK.ODD,ODD.REFERENCE) ';
_where:='where DOK.NK=\':_a\' and DOK.DTO=to_date(:_f) and SLO.KOD=\':_e\' ';
_where+={? _refd='' || '' || 'and DOK.REFERENCE<>\':_d\' ' ?};
_tab:=sql('select '+_sql+_where+'order by 1,2,3',_nksql,_rejsql,_fdok,_refd,_kh,_dk);
{? _tab.first()
|| _result:=_tab.REF
?};
_result


\of_find_ref_fa_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Znajduje ref korygowanego dokumentu księgowego - obiegi
::----------------------------------------------------------------------------------------------------------------------
_result:='';
_fdok:='';
_okrod:={? SSTALE.AO().NR-12<=0 || 0 || SSTALE.AO().NR-12 ?};
OKRO_F.cntx_psh; ROK_F.cntx_psh();
OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(FIRMA.ref());
SSTALE.AO(); SSTALE.AR();
_fdok+='\'doku'+ ROK_F.KOD+form(OKRO_F.NR,-2)+'\',';
_ii:=12;
{? OKRO_F.prev()
|| {!
   |? OKRO_F.ROK();
      {? OKRO_F.NAZ<>'Bilans zamknięcia' & OKRO_F.NAZ<>'Bilans otwarcia'
      || _ii-=1;
         _fdok+='\'doku'+ ROK_F.KOD+form(OKRO_F.NR,-2)+'\','
      ?};
      OKRO_F.prev() & _ii>0
   !};
   _fdok:=_fdok-1
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop();
_nk:=EDOKUM.SYM_KOR;
_kh:=EDOKUM.KH().KOD;
_dk:=EDOKUM.DWKOR;
_refd:='';
_nksql:=STR.gsub(_nk ,'\'','\'\'');
_rejsql:='';
_sql:='/*+MASK_FILTER(DOK,:_c) '+
          'INDEX (DOK,REJ_SYM) */ '+
          'ODD.OD ODDZIAL, REJ.KOD REJESTR, DOK.NR NR, SLO.KOD KH, DOK.SYM_ZEW, DOK.NK SYMBOL, DOK.DTO DATA, DOK.REFERENCE REF '+
          'from @DOK left join REJ using (DOK.REJ,REJ.REFERENCE) '+
          'left join SLO using (DOK.WYS,SLO.REFERENCE) '+
          'join ODD using (DOK.ODD,ODD.REFERENCE) ';
_where:='where DOK.NK=\':_a\' and DOK.DTO=to_date(:_f) and SLO.KOD=\':_e\' ';
_where+={? _refd='' || '' || 'and DOK.REFERENCE<>\':_d\' ' ?};
_tab:=sql('select '+_sql+_where+'order by 1,2,3',_nksql,_rejsql,_fdok,_refd,_kh,_dk);
{? _tab.first()
|| _result:=_tab.REF
?};
_result


\kh_tagger_state
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Wyświetla okno podglądu z aktualną podpowiedzią Taggera
::----------------------------------------------------------------------------------------------------------------------
TAGGER.cntx_psh();
exec('tag_mask','tagger',KH.ref(),'g');
_fmlnag:="TAGGER.index('KHSET'); TAGGER.prefix('N',KH.uidref(),$REF.FIRMA,'NAG')";
_fmlvpz:="TAGGER.index('KHSET'); TAGGER.prefix('N',KH.uidref(),$REF.FIRMA,'VPZ')";
_fmlcsh:="TAGGER.index('KHSET'); TAGGER.prefix('N',KH.uidref(),$REF.FIRMA,'CSH')";
_win:=TAGGER.grp_make('Domyślne podpowiedzi'@,,'kh_show_tagger');
TAGGER.grp_sel(_win,,'NAG_P','Dokumenty księgowe'@,,,,,_fmlnag);
task_attach('FKS_DKS_DARK');
task_attach('FKS_DKS_DFZO');
task_attach('ZBL_DOK_RBUF');
task_attach('OBG_FZO_DARK');
TAGGER.grp_sel(_win,,'VPZ_P','Pozycje VAT dokumentów'@,,,,,_fmlvpz);
task_attach('FKS_DKS_DARK');
task_attach('FKS_DKS_DFZO');
task_attach('ZBL_DOK_RBUF');
task_attach('OBG_FZO_DARK');
TAGGER.grp_sel(_win,,'CSH_P','Schemat podziałów controllingowych (f. w obiegu)'@,,,,,_fmlcsh);
task_attach('OBG_FZO_DARK');
task_attach('OBG_FZO_CPRZ');
task_attach('OBG_FZO_EAKC');
TAGGER.win_sel(_win);
TAGGER.select();
TAGGER.cntx_pop()


\kh_save_tagger_state
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Zapisuje podpowiedź jako stałą
::----------------------------------------------------------------------------------------------------------------------
_ref:=TAGGER.ref(); _dalej:=0;
_nuref:='';
TAGGER.cntx_psh();
{? TAGGER.TYP='NAG' | TAGGER.TYP='CSH'
|| TAGGER.index('KHSET'); TAGGER.prefix('T',TAGGER.TAGREF,TAGGER.FIRMA,TAGGER.TYP,TAGGER.SOURCE);
   {? TAGGER.first() || {! |? TAGGER.del() !} ?}
|? TAGGER.TYP='VPZ'
|| TAGGER.index('VPZ');
   TAGGER.prefix('T',TAGGER.TAGREF,TAGGER.FIRMA,TAGGER.TYP,TAGGER.P1,TAGGER.P2,TAGGER.P7,TAGGER.SOURCE);
   {? TAGGER.first()
   || {! |?
         TAGGER.cntx_psh();
         TAGGER.index('KHVRZ'); TAGGER.prefix('T',TAGGER.TAGREF,'VRZ',TAGGER.uidref());
         {? TAGGER.first() || {! |? TAGGER.del() !} ?};
         TAGGER.cntx_pop();
         TAGGER.next()
      !}
   ?};
   {? TAGGER.first() || {! |? TAGGER.del() !} ?}
?};
TAGGER.prefix();
{? TAGGER.seek(_ref)
|| TAGGER.USRSET:='T';
   TAGGER.add(1);
   {? TAGGER.TYP='VPZ' & TAGGER.SOURCE='DO'
   || _nuref:=TAGGER.uidref();
      _dalej:=1
   |? TAGGER.TYP='VPZ' & TAGGER.SOURCE<>'DO' & TAGGER.P5='<- F3 ->'
   || TAGGER.P5=''; TAGGER.put(1)
   |? TAGGER.TYP='VPZ' & TAGGER.SOURCE<>'DO' & TAGGER.P6='<- F3 ->'
   || TAGGER.P6=''; TAGGER.put(1)
   ?}
?};
{? _dalej & TAGGER.seek(_ref)
|| TAGGER.index('KHVRZ'); TAGGER.prefix('N',TAGGER.TAGREF,'VRZ',TAGGER.uidref());
   {? TAGGER.first()
   || {! |?
         TAGGER.cntx_psh();
         TAGGER.prefix();
         TAGGER.USRSET:='T';
         TAGGER.P3:=_nuref;
         TAGGER.add();
         TAGGER.cntx_pop();
         TAGGER.next()
      !}
   ?}
?};
TAGGER.cntx_pop();
FUN.info('Podpowiedź została zapisana'@)


\kh_vrz_state
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Wyświetla konta rozdzielnika w podpowiedzi
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__vrzhelp');
__vrzhelp:=obj_new('KH','TUREF');
__vrzhelp.KH:=TAGGER.TAGREF;
__vrzhelp.TUREF:=TAGGER.uidref();
TAGGER.cntx_psh();
_fml1:="TAGGER.index('KHVRZ'); TAGGER.prefix('N',__vrzhelp.KH,'VRZ',__vrzhelp.TUREF,'KK')";
_fml2:="TAGGER.index('KHVRZ'); TAGGER.prefix('N',__vrzhelp.KH,'VRZ',__vrzhelp.TUREF,'K2')";
_win:=TAGGER.grp_make('Rozdzielnik kont dla pozycji VAT'@,,'kh_show_vrz',,,,,'normal');
TAGGER.grp_sel(_win,,'VRZ_P','Konta (1)'@,,,,,_fml1);
TAGGER.grp_sel(_win,,'VRZ_P','Konta (2)'@,,,,,_fml2);
TAGGER.win_sel(_win);
TAGGER.select();
TAGGER.cntx_pop();
VAR_DEL.delete('__vrzhelp');
1


\tagger_state_color
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Wyróżnia kolorem rekordy, które są identyczne w podpowiedziach ustawionych ręcznie i domyślnych
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
_usrset:={? TAGGER.USRSET='T' || 'N' || 'T' ?};
VAR_DEL.delete('__taggerbuff');
__taggerbuff:=obj_new('TAGREF','FIRMA','TYP','SOURCE','P1','P2','P3','P4','P5','P6','P7');
_ref:=TAGGER.ref();
__taggerbuff.TAGREF:=TAGGER.TAGREF;
__taggerbuff.FIRMA:=TAGGER.FIRMA;
__taggerbuff.TYP:=TAGGER.TYP;
__taggerbuff.SOURCE:=TAGGER.SOURCE;
__taggerbuff.P1:=TAGGER.P1;
__taggerbuff.P2:=TAGGER.P2;
__taggerbuff.P3:=TAGGER.P3;
__taggerbuff.P4:=TAGGER.P4;
__taggerbuff.P5:=TAGGER.P5;
__taggerbuff.P6:=TAGGER.P6;
__taggerbuff.P7:=TAGGER.P7;
TAGGER.cntx_psh();
TAGGER.index('VPZ_I');
TAGGER.prefix(__taggerbuff.TAGREF,__taggerbuff.FIRMA,__taggerbuff.TYP,__taggerbuff.SOURCE,__taggerbuff.P1,
              __taggerbuff.P2,__taggerbuff.P3,__taggerbuff.P4,__taggerbuff.P5,__taggerbuff.P6,__taggerbuff.P7);
{? TAGGER.first()
|| _dalej:=1;
   {! |?
      {? TAGGER.USRSET=_usrset || _zwrot:='TAGGER#01#01'; _dalej:=0 || _dalej:=1 ?};
      TAGGER.next() & _dalej
   !}
?};
TAGGER.cntx_pop();
VAR_DEL.delete('__taggerbuff');
_zwrot


\etschpdr_rekprzed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Rekord przed w okienku WYB tabeli ETSCHPDR
::----------------------------------------------------------------------------------------------------------------------
_par2:=exec('get','#params',300917,type_of('a'));
_wyn:=0;
_eref:=ETSCHPDR.uidref();
EDOKUM.cntx_psh();
{? _par2<>'N'
|| KH.cntx_psh(); EDOKUM.KHKH();
   _warunek:=KH.TAGGER;
   TAGGER.cntx_psh();
   exec('tag_mask','tagger',KH.ref(),'g');
   TAGGER.index('VPZ_I'); TAGGER.prefix(KH.uidref(),$EDOKUM.FIRMA,'CSH','OF',_eref);
   {? TAGGER.first() || _wyn:=1 ?};
   TAGGER.cntx_pop(); KH.cntx_pop()
?};
_zwrot:='';
{? _wyn & _warunek='T'
|| _zwrot:='TAGGER#02#01'
|| _zwrot:=''
?};
EDOKUM.cntx_pop();
_zwrot


\bed_tag_tip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Przed wyświetleniem pól uzupełnionych przez Tagger
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__tagvpztip')<=0 || return('') ?};
{? __tagvpztip
|| Color.fnd_kol('TAGGER#03#01')
|| ''
?}


\task_tagger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła pomocnicza dla TAGGER - proces FIN_TAG_GER
::----------------------------------------------------------------------------------------------------------------------
_nag:=exec('get','#params',300922,type_of('a'));
_vpz:=exec('get','#params',300923,type_of('a'));
_csh:=exec('get','#params',300921,type_of('a'));
KH.cntx_psh(); KH.prefix();
{? 1+_nag='N'
|| KH.for_each("exec('tagger_fill_params','tagger',KH.uidref(),'NAG')")
|| KH.for_each("exec('tagagr_erase_params','tagger',KH.uidref(),'NAG')")
?};
{? 1+_vpz='N'
|| KH.for_each("exec('tagger_fill_params','tagger',KH.uidref(),'VPZ')")
|| KH.for_each("exec('tagagr_erase_params','tagger',KH.uidref(),'VPZ')")
?};
{? 1+_csh='N'
|| KH.for_each("exec('tagger_fill_params','tagger',KH.uidref(),'CSH')")
|| KH.for_each("exec('tagagr_erase_params','tagger',KH.uidref(),'CSH')")
?};
KH.cntx_pop();
1

:Sign Version 2.0 jowisz:1045 2024/01/29 14:27:18 1bbf70c5c1c9454c5c76d087ef59d9cb645e08bee50ed116ac040b74f3276bb4ca496501439f7bf77bc3ac106ec15bbcd9fadf2c22505274cc40d0d326b82d89a8b7af46b5fbfdd878e987100701c2e158dddd6c38bcb99a0cc246f8740663519f08f89a9a63c5aa93e188c58004b9b977aae379c383bd9ab2561007b41d204b
