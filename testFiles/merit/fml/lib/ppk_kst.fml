:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: ppk_kst.fml [12.51]
:: Utworzony: 2019/02/19
:: Autor: jaws
:: Systemy: PPK
::======================================================================================================================
:: Zawartość: Formuły odpowiedzialne za obsługę parametrów pracy PPK.
::======================================================================================================================


\kst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.51]
:: OPIS: Udostępnia do edycji podstawowe parametry systemu.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('edytuj','#stalesys',
   KST,
   'PPK',
   "__CHK.record(KST,,'NAZWA','NIP','REG','KRAJ','WOJEWODZ','POWIAT','GMINA','MIASTO','DOM','KOD')"
)


\ustaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Jeśli brak stałych dla funkcji PPK, to ustaw wiadome wartości początkowe.
::   WE: _a INTEGER - czy aplikacja jest dostępna: 0/1 - nie/tak
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_ppk:=(var_pres('_a')=type_of(0) & _a<>0);

_d0:=date(2019,7,1);
:: to ze względu na wcześniejszą instalację
_dt:={? date()<_d0 || date(date()~1,1,1) || _d0 ?};

:: zmień konfigurację ustawień
KST_DEF.cntx_psh();
KST_DEF.clear();
KST_MAP.cntx_psh();
KST_MAP.index('KST_MAP');
KST_MAP.prefix('KST_PPK','KST_PPK');
:: wyłącz historię zmiany wartości
"  {! _ai:=1.._
   |! {? KST_MAP.find_key(_[_ai],_[_ai]) & KST_MAP.KST_DEF().HISTORIA<>'N'
      || KST_DEF.HISTORIA:='N';
         KST_DEF.put()
      ?}
   !}
"('PWP_DOM','PWP_WSZ','PWP_UKW','LICZ_OD','PPK_UZA','PPK_UMO','SK_FORMF','UST_OD');
:: wyłącz utrwalanie wartości
"  {! _ai:=1.._
   |! {? KST_MAP.find_key(_[_ai],_[_ai]) & KST_MAP.KST_DEF().ZAPIS<>'N'
      || KST_DEF.ZAPIS:='N';
         KST_DEF.put()
      ?}
   !}
"('PPK_UZA','PPK_UMO');
KST_DEF.cntx_pop();
KST_MAP.cntx_pop();

:: wczytaj dane początkowe
exec('czytaj','#stalesys',_dt,KST_PPK);

:: prosty test, czy zostały ustalone wymagane wartości
{? {? _ppk<>0
   || KST_PPK.LAT_MIN*KST_PPK.LAT_WYM*KST_PPK.LAT_MAX*KST_PPK.WZN_OKR*KST_PPK.WZN_DN*KST_PPK.WZN_MS*(+KST_PPK.SK_UWDF)
   || 1
   ?}*
   {? _ppk<>0
   || KST_PPK.SK_PF*KST_PPK.SK_MAXDF*KST_PPK.SK_MAXPU*KST_PPK.SK_MAXDU*KST_PPK.WMW
   || 1
   ?}
:: wszystkie wymagane wartości są ustawione
|| return()
?};

:: ustaw wartości początkowe
KST_PPK.blank();
KST_PPK.LAT_MIN:=18;
KST_PPK.LAT_WYM:=55;
KST_PPK.LAT_MAX:=70;
KST_PPK.ZAW_UM:=3;
KST_PPK.WZN_OKR:=4;
KST_PPK.WZN_DN:=1;
KST_PPK.WZN_MS:=4;
KST_PPK.SK_PF:=1.5;
KST_PPK.SK_MAXDF:=2.5;
KST_PPK.SK_MINPU:=0.5;
KST_PPK.SK_MAXPU:=2.0;
KST_PPK.SK_MAXDU:=2.0;
KST_PPK.SK_UWDF:='S';
KST_PPK.WMW:=1.2;

:: zapisz parametry
exec('zapisz','#stalesys',_dt,KST_PPK);
~~


\sprawdz_min
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Weryfikuje poprawność parametryzacji wersji minimalnej.
::   WE:
::   WY: wynik testu poprawności danych: akronim pola w przypadku braku lub błędnych danych, 1 gdy dane są poprawne
::----------------------------------------------------------------------------------------------------------------------

{? (_chk:=__CHK.record(KST_PPK,,'SK_PF','SK_MAXDF','SK_MAXPU','SK_MAXDU'))<>''
:: niewypełnione wymagane pole
|| return(_chk)
?};

_chk:='';
(_chk:=exec('spr_zakr','ppk_kst','SK_PF',0,100))<>'' |
(_chk:=exec('spr_zakr','ppk_kst','SK_MAXDF',0,100))<>'' |
(KST_PPK.SK_MAXDF>0 & (_chk:=exec('spr_zakr','ppk_kst','SK_DOMDF',0,KST_PPK.SK_MAXDF))<>'') |
(KST_PPK.SK_MAXPU>0 & (_chk:=exec('spr_zakr','ppk_kst','SK_MINPU',0,KST_PPK.SK_MAXPU))<>'') |
(_chk:=exec('spr_zakr','ppk_kst','SK_MAXPU',0,100))<>'' |
(_chk:=exec('spr_zakr','ppk_kst','SK_MAXDU',0,100))<>'';

_chk


\sprawdz_app
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Weryfikuje poprawność parametryzacji.
::   WE:
::   WY: wynik testu poprawności danych: akronim pola w przypadku braku lub błędnych danych, 1 gdy dane są poprawne
::----------------------------------------------------------------------------------------------------------------------
{? (_chk:=__CHK.record(KST_PPK,,'LAT_MIN','LAT_WYM','LAT_MAX','WZN_OKR','WZN_DN','WZN_MS','WMW'))<>''
:: niewypełnione wymagane pole
|| return(_chk)
?};

{? KST_PPK.D_PRZWPL<0 | KST_PPK.D_PRZWPL>31
|| FUN.emsg('Błędna wartość pola "%1".'@[MS.name(KST_PPK,'D_PRZWPL')]);
   return('D_PRZWPL')
?};

:: Sprawdzenie wypełnienia pola z formułą jeżeli stawka finansowana przez zatrudniającego ma być obliczana.
{? KST_PPK.SK_UWDF='O' & (_chk:=__CHK.record(KST_PPK,,'SK_FORMF'))<>''
|| return(_chk)
?};

{? (_chk:=exec('spr_wart_wz','ppk_kst','LAT_WYM','LAT_MIN'))<>'' |
   (_chk:=exec('spr_wart_wz','ppk_kst','LAT_MAX','LAT_WYM'))<>'' |
   (_chk:=exec('spr_zakr','ppk_kst','WZN_MS',1,12))<>''
|| return(_chk)
?};

_od:=date(,KST_PPK.WZN_MS,1)~3;
_do:=date(,KST_PPK.WZN_MS,0)~3;
{? (_chk:=exec('spr_zakr','ppk_kst','WZN_DN',_od,_do))<>''
|| return(_chk)
?};
{? KST_PPK.WZN_MS<>4 | KST_PPK.WZN_DN<>1
|| {? ~FUN.ask('Zgodnie z przepisami datą wznowienia wpłat powinien być 1 kwietnia.\nCzy kontynuować?'@)
   || return('WZN_MS')
   ?}
?};

:: Sprawdzenie poprawności wprowadzenia daty obowiązywania ustawy.
{? ~(KST_PPK.UST_OD=date(2019,7,1)
   |
   KST_PPK.UST_OD=date(2020,1,1)
   |
   KST_PPK.UST_OD=date(2020,7,1)
   |
   KST_PPK.UST_OD=date(2021,1,1))
|| FUN.info(
      'Należy wprowadzić poprawną datę objęcia przez ustawę.\n\n'+
      'Dopuszczalne daty to:                                          \n'+
      date(2019,7,1)$1+' - dla podmiotów zatrudniających od 250 zatrudnionych\n'+
      date(2020,1,1)$1+' - dla podmiotów zatrudniających od 50 zatrudnionych \n'+
      date(2020,7,1)$1+' - dla podmiotów zatrudniających od 20 zatrudnionych \n'+
      date(2021,1,1)$1+' - dla pozostałych podmiotów zatrudniających         '
   );
   return('UST_OD')
?};

:: Sprawdzenie poprawności wprowadzenia daty końca okresu przejściowego:
{? exec('jest_a05','ppk') & KST_PPK.PRZEJ_DO<KST_PPK.UST_OD
|| FUN.info(
      'Należy wprowadzić poprawną datę końca okresu przejściowego.\n'+
      'Data nie może być mniejsza niż data objęcia przez ustawę.'
   );
   return('PRZEJ_DO')
?};

:: Weryfikacja wprowadzonego współczynnika dla najniższej krajowej do weryfikacji dochodu uprawniającego do obniżenia
:: wpłaty podstawowej przez uczestnika PPK.
{? KST_PPK.WMW<0
|| FUN.emsg('Wartość w polu "Współczynnik minimalnego wynagrodzenia" nie może być mniejszy od 0.');
   return('WMW')
?};

exec('sprawdz_min','ppk_kst')


\spr_zakr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Sprawdza czy wartość znajduje się w zadanym zakresie. Wyświetla komunikat o wartości poza zakresem.
::   WE: _a STRING - akronim sprawdzanego pola
::       _b ANY - kres dolny
::       _c ANY - kres górny
::   WY: _a - test zakończony niepowodzeniem, tekst pusty - wartość poprawna
::----------------------------------------------------------------------------------------------------------------------
_val:=($('KST_PPK.'+_a))();
{? _val<_b | _c<_val
|| FUN.emsg('Wartość "'+MS.name(KST_PPK,_a)+'" musi być z zakresu od '+$_b+' do '+$_c+'.');
   _a
|| ''
?}


\spr_wart_wz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Sprawdza jedną wartość względem drugiej. Wyświetla komunikat o błędnej wartości względem innej.
::   WE: _a STRING - akronim pola z wartością sprawdzaną
::       _b STRING - akronim pola z wartością odniesienia
::   WY: _a - test zakończony niepowodzeniem, tekst pusty - wartość poprawna
::----------------------------------------------------------------------------------------------------------------------
{? ($('KST_PPK.'+_a+'<KST_PPK.'+_b))()
|| FUN.emsg('Wartość "'+MS.name(KST_PPK,_a)+'" nie może być mniejsza od wartości "'+MS.name(KST_PPK,_b)+'".');
   _a
|| ''
?}


\domdf_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.51]
:: OPIS: Przed wyświetleniem pola SK_DOMDF zmiennej KST_PPK, wartość w polu jest ukrywana gdy stawka wpłaty dodatkowej
::       pracodawcy nie jest stała.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KST_PPK.SK_UWDF='S'


\domdf_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.51]
:: OPIS: Przed redakcją pola SK_DOMDF zmiennej KST_PPK, pole nie jest dostępne do edycji gdy stawka wpłaty dodatkowej
::       pracodawcy nie jest stała.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KST_PPK.SK_UWDF='S'


\formf_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.51]
:: OPIS: Przed wyświetleniem pola SK_FORMF zmiennej KST_PPK.
::       Wartość w polu jest widoczna gdy stawka wpłaty dodatkowej pracodawcy ma być obliczana.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KST_PPK.efld_opt('RED','enable=%1,mark=%1'[$(KST_PPK.SK_UWDF='O')],,'SK_FORMF')


\formf_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.51]
:: OPIS: Przed redakcją pola SK_FORMF zmiennej KST_PPK.
::       Pole jest dostępne do edycji gdy stawka wpłaty dodatkowej pracodawcy ma być obliczana.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
1


\uwdf_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Formuła po pola SK_FORMF zmiennej KST_PPK.
::       Pole jest dostępne do edycji gdy stawka wpłaty dodatkowej pracodawcy ma być obliczana.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_test:=KST_PPK.SK_UWDF='O';
{? ~_test
|| KST_PPK.SK_FORMF:=''
?};
KST_PPK.efld_opt('RED','enable=%1,mark=%1'[$_test],,'SK_FORMF')


\ust_od_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.51]
:: OPIS: Przed edycją pola UST_OD zmiennej KST_PPK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? KST_PPK.UST_OD<>date(0,0,0)
|| return(1)
?};

_dt:=date();
KST_PPK.UST_OD:=
   {? _dt<=date(2019,10,25) || date(2019,7,1)
   |? _dt<=date(2020, 4,24) || date(2020,1,1)
   |? _dt<=date(2020,10,27) || date(2020,7,1)
                            || date(2021,1,1)
   ?};

1


\d_przwpl_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Przed redakcją pola D_PRZWPL zmiennej KST_PPK
::   WE:
::   WY: 0/1 - pole zablokowane/dostępne
::----------------------------------------------------------------------------------------------------------------------
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 5b25a72ab8579ba7a2c4a6a88f89abdfff44a642dca01f0f5d3057db770ed958077ffba87ac4917f85235cfc7941bf9e5a9c89059504a2cd6a0a090ce7a0535351ece3239dffb746156f8a5fffeb86197082e831ba318d4f210b6e4f64ea4818b33891725401a263024ada9cb45fd53fb2de040bf5fcb6571731991951cff16b
