:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: pkw.fml
:: Utworzony: 18.05.2016
:: Autor: TMR
::======================================================================================================================
:: Zawartość: Formuły oraz obszary robocze dziedziny PKW dla webterma.
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Formuła inicjująca dla dziedziny PKW.
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
BPMN.SYM_DOM:='PKW';

:: Otwarcie masek - pracownicy i zatrudnienie
exec('open_pkw','open_tab');

KST.blank(1);
POLA_GRP.blank(1);

:: Zmienna optymalizująca dostęp do parametru 188.
__PAR188:=PAR_SKID.get(188)='T';

:: Przeglądanie osób (czynność z dziedziny PKW), może odbywać się na rzecz procesu związanego np. z logistyką.
:: Tylko jawne wskazanie w procesie pozwala na jego identyfikację jako "personelowego".
:: Zmienna poniżej służy optymalizacji dostępu do tej informacji.
{? var_pres('__PERSONEL')<>type_of(0)
|| __PERSONEL:=0
?};

exec('__F_ZATR','object');
exec('RB','object');
exec('__KAL','object');
exec('__RUB','object');
exec('MASK','object');
exec('p_web_cx_set','p_web')>0


\pkw_por_www
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Główna formuła obszaru roboczego PKW_POR - Dane osobowe - webterm.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('env_wt','b_proces') & exec('init','pkw')
|| __PERSONEL:=1;
   {? exec('load_cur_prac','p_web')
   || AreaTitle.setTitle();
:: wyświetlamy okno grupowe z wizytówką zapamiętanego pracownika oraz z czynnościami podpiętymi pod przyciski
:: (i oddajemy działanie w ręce użytkownika portalu :-))
      exec('set_button_state','pkw',1);
      web_params_set(
         exec('obj_ntab_set','#array',,
            'P_WEB_WER_WYBIERZ_A',"exec('set_title','#b_area','PKW_POR'); exec('set_button_state','pkw')"
         )
      );
      P.web_select('WEB_GR_A')
   ?}
?}


\pkw_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Formuła uruchamia wskazaną akcję związaną z czynnością.
::   WE: _a [STRING] - Identyfikator czynności dot. własnych danych
::       _b [STRING] - Identyfikator czynności dot. danych podwładnego
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_id_W:={? var_pres('_a')=type_of('') || _a || '' ?};
_id_P:={? var_pres('_b')=type_of('') || _b || '' ?};

{? exec('set_env','pkw_por',0)
|| _id_run:={? exec('p_web_cx_get_rodzaj','pkw')='W' || _id_W || _id_P ?};
   exec('np_run','#b__box',_id_run)
?}


\set_button_state
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Ustawia dostępność przycisków w zależności od uprawnień do czynności
::   WE: _a [INTEGER] - czy ustawienie następuje w ramach inita dla okna redagowania
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_init:={? var_pres('_a')=type_of(0) || _a || 0 ?};
:: Zawsze zaczynamy, od przekazania parametrów "dalej".
web_params_set(web_params_get());

:: Ustawiam środowisko
{? exec('env_wt','b_proces')
||
:: formuła na ustawienie dostępności przycisku
:: parametrami fomruły są:
::   _a - identyfikator czynności dla własnych danych
::   _b - identyfikator czynności dla danych podwładnego
::   _c - identyfikator przycisku
::   _d - rodzaj przeglądanych danych (W-własne, P-podwładnego)
::   _e - wskazanie na użytkownika zalogowanego

   _set_state:=$("
      _id_W:=_a;
      _id_P:=_b;
      _btn_id:=_c;
      _rodzaj:=_d;
      _user:=_e;
      _normal:='normal';
      _grayed:='grayed';
      _state:=_grayed;
      _f_zatr:=P.F_ZATR().KOD;
      {? (_rodzaj='W' & _id_W<>'' & exec('chk_role','#b__box',_user,_id_W) & exec('dostepna_a','f_zatr',_f_zatr,_id_W))
         |
         (_rodzaj='P' & _id_P<>'' & exec('chk_role','#b__box',_user,_id_P) & exec('dostepna_a','f_zatr',_f_zatr,_id_P))
      || _state:=_normal
      ?};
      P.web_btn_e"+{? _init|| 'init' || 'opt' ?}+"('WEB_GR_A','WEB_PKW',_btn_id,'state=%1'[_state]);
      _state=_normal
   ");

   _rodzaj:=exec('p_web_cx_get_rodzaj','pkw');
   _user:=OPERATOR.USER;
:: - Panel lewy -
:: Dane osobowe
   _set_state('PKW_POR_OPDO','PKW_POR_PPDO','DANE_OSOBOWE',_rodzaj,_user);
:: Zatrudnienie
   _set_state('PKW_POR_IZAT','PKW_POR_PZAT','ZATRUDNIENIE',_rodzaj,_user);
:: Nieobecności
   _set_state('PKW_POR_INIE','PKW_POR_PNIE','N',_rodzaj,_user);
:: Karty urlopowe
   _set_state('PKW_POR_IKUR','PKW_POR_PKUR','KART_URL',_rodzaj,_user);
:: Wnioski urlopowe
   _set_state('PKW_POR_IRWU','PKW_POR_PRWU','NWU_R',_rodzaj,_user);
:: Wnioski urlopowe - weryfikacja
   _set_state('PKW_POR_IWWU','','NWU_W',_rodzaj,_user);
:: Plany urlopowe
   _set_state('PKW_POR_IRPU','PKW_POR_PRPU','URL_PLAN',_rodzaj,_user);
:: Plany urlopowe - weryfikacja
   _set_state('PKW_POR_IWPU','','URL_PLAN_WPU',_rodzaj,_user);
:: Adres
   _set_state('PKW_POR_IADR','PKW_POR_PADR','ADRES',_rodzaj,_user);
:: Rachunki bankowe
   _set_state('PKW_POR_IBAN','PKW_POR_PBAN','PKO',_rodzaj,_user);
:: Badania lekarskie
   _set_state('PKW_POR_IBOK','PKW_POR_PBOK','BDO',_rodzaj,_user);
:: Rodzina
   _set_state('PKW_POR_IRDA','PKW_POR_PRDA','RD',_rodzaj,_user);
:: Tytuły naukowe
   _set_state('PKW_POR_ITYN','PKW_POR_PTYN','OS_TYT',_rodzaj,_user);
:: Dodatkowe kwalifikacje
   _set_state('PKW_POR_IKWA','PKW_POR_PKWA','KWAL_DOD',_rodzaj,_user);
:: Wyróżnienia i kary
   _set_state('PKW_POR_IWYK','PKW_POR_PWYK','WYR_KAR',_rodzaj,_user);
:: Szkolenia BHP i PPOŻ
   _set_state('PKW_POR_IBPP','PKW_POR_PBPP','BHP_PPOZ',_rodzaj,_user);
:: Załączniki
   _set_state('PKW_POR_IZAL','PKW_POR_PZAL','ZALACZNIKI',_rodzaj,_user);
:: Start / Stop
   _set_state('PKW_POR_IRSS','PKW_POR_PRSS','START_STOP',_rodzaj,_user);
:: Praca zdalna stała
   _set_state('PKW_POR_IPZD','PKW_POR_PPZD','PRACA_ZDALNA',_rodzaj,_user);
:: Praca poza siedzibą firmy
   _set_state('PKW_POR_IPPS','PKW_POR_PPPS','PRACA_POZA',_rodzaj,_user);
:: Praca poza siedzibą firmy - adresy
   _set_state('PKW_POR_IPAD','PKW_POR_PPAD','PRACA_PADR',_rodzaj,_user);
:: Praca poza siedzibą firmy - oświadczenia
   _set_state('PKW_POR_IPPO','PKW_POR_PPPO','PRACA_POSW',_rodzaj,_user);

:: - Panel prawy -
:: Listy płac
   _set_state('PKW_POR_ILST','PKW_POR_PLST','LS',_rodzaj,_user);
:: Pożyczki
   _set_state('PKW_POR_IPOZ','PKW_POR_PPOZ','K',_rodzaj,_user);
:: Umowy cywilnopracne
   _set_state('PKW_POR_IUZC','PKW_POR_PUZC','ZC',_rodzaj,_user);
:: Premie miesięczne
   _set_state('PKW_POR_IRPM','','PM_NAG',_rodzaj,_user);

:: - Panel z wyborem kontekstu -
   P_WEB_CX.cntx_psh();
:: Podwładni
   _set_state:=$("P.web_btn_e"+{? _init|| 'init' || 'opt' ?}+"('WEB_GR_A','WEB_PWV2',_a,'state=%1'[_b])");
   exec('p_web_cx_set_prefix','p_web',,'RODZAJ','P');
   _podwladni:=P_WEB_CX.size();
   _set_state('BTN_CX_PODWL',{? _podwladni || 'normal' || 'grayed' ?});
:: Własne dane
   exec('p_web_cx_set_prefix','p_web',,'RODZAJ','W');
   _set_state('BTN_CX_OWN',{? P_WEB_CX.size()>1 | _podwladni || 'normal' || 'grayed' ?});
   P_WEB_CX.cntx_pop();
   ~~
?}


\osoba_web_red_gr_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Formuła na "Przed obsługą" dla okna WEB_RED tabeli OSOBA w oknie grupowym
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\p_web_akt_gr_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Formuła na "Przed obsługą" dla okna WEB_GR_A tabeli P w oknie grupowym
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\p_web_pkw_dane_osobowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Akcja przycisku "Dane osobowe"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_OPDO','PKW_POR_PPDO')


\p_web_pkw_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Akcja przycisku "Nieobecności".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_INIE','PKW_POR_PNIE')


\p_web_pkw_kart_url
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Akcja przycisku "Karty urlopowe".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IKUR','PKW_POR_PKUR')


\p_web_pkw_nwu_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Akcja przycisku "Wnioski urlopowe" (rejestracja).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Zawsze zaczynamy, od przekazania parametrów "dalej".
web_params_set(web_params_get());

:: Ustawiam środowisko i podczytuję pracownika.
{? exec('env_wt','b_proces') & exec('load_cur_prac','p_web')
|| POLA_GRP.TXT_1:=POLA_GRP.TXT_2:='';
   NWU.index('OD');
   NWU.prefix(P.ref());
   _uid:={? exec('p_web_cx_get_rodzaj','pkw')='W' || 'PKW_POR_IRWU' || 'PKW_POR_PRWU' ?};
   exec('web_global_params_set','pkw','PKW_POR__RWU','ACT_UID',_uid);
   web_set_help(exec('set_help','#help',_uid));
   NWU.web_select('WEB_WER')
?};
~~


\p_web_okw_nwu_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Akcja przycisku "Wnioski urlopowe - weryfikacja".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Zawsze zaczynamy, od przekazania parametrów "dalej".
web_params_set(web_params_get());

{? exec('env_wt','b_proces') & exec('load_cur_prac','p_web')
|| POLA_GRP.TXT_1:=POLA_GRP.TXT_2:='';
   web_set_help(exec('set_help','#help','PKW_POR_IWWU'));
   WT_NWU.index('ODNAIM');
   WT_NWU.prefix(exec('ref_firma','ustawienia'),exec('osoba2user','users',P.OSOBA));
   WT_NWU.web_select('WEB_WER')
?};
~~


\p_web_pkw_adres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Akcja przycisku "Adres"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IADR','PKW_POR_PADR')


\p_web_pkw_zatrudnienie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Akcja przycisku "Zatrudnienie"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IZAT','PKW_POR_PZAT')


\p_web_pkw_rd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Akcja przycisku "Rodzina".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IRDA','PKW_POR_PRDA')


\p_web_pkw_bdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Akcja przycisku "Badania lekarskie".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IBOK','PKW_POR_PBOK')


\p_web_pkw_os_tyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Akcja przycisku "Tytuły naukowe".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_ITYN','PKW_POR_PTYN')


\p_web_pkw_pko
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Akcja przycisku "Rachunki bankowe".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IBAN','PKW_POR_PBAN')


\p_web_pkw_kwal_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Akcja przycisku "Dodatkowe kwalifikacje".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IKWA','PKW_POR_PKWA')


\p_web_pkw_wyr_kar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Akcja przycisku "Wyróżnienia i kary".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IWYK','PKW_POR_PWYK')


\p_web_pkw_bhp_ppoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Akcja przycisku "Szkolenia BHP i PPOŻ".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IBPP','PKW_POR_PBPP')


\p_web_pkw_zalaczniki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Akcja przycisku "Załączniki".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IZAL','PKW_POR_PZAL')


\p_web_pkw_ls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Akcja przycisku "Listy płac".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_ILST','PKW_POR_PLST')


\p_web_pkw_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Akcja przycisku "Pożyczki".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IPOZ','PKW_POR_PPOZ')


\p_web_pkw_zc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Akcja przycisku "Umowy cywilnoprawne".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IUZC','PKW_POR_PUZC')


\p_web_pkw_pm_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.28]
:: OPIS: Akcja przycisku "Premie miesięczne"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IRPM')


\p_web_pkw_url_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Akcja przycisku "Plany urlopowe"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
web_params_set(web_params_get());
exec('select_irpu','plany_urlopowe')


\p_web_pkw_url_plan_wpu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS:  Akcja przycisku "Plany urlopowe - weryfikacja"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
web_params_set(web_params_get());
exec('select_iwpu','plany_urlopowe')


\p_web_cx_pole_set_val
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Usuwa zaznaczenie z pola WPU dla wszystkich rekordów z dziedziny.
::       UWAGA! - zakładamy, że dziedzina tabeli P_WEB_CX jest ustalona.
::   WE: _a [STRING] - akronim pola, dla którego ustawiamy wartość
::       _b [ANY]    - wartość ustawianego pola
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_pole:={? var_pres('_a')=type_of('') || _a || return(0) ?};
 _val:={? var_pres('_b')>0           || _b || return(0) ?};

{? P_WEB_CX.first()
|| {!
   |? _fml:="P_WEB_CX."+_pole+":=_a; P_WEB_CX.put()";
      ($_fml)(_val);
      P_WEB_CX.next()
   !}
?};
1


\p_web_cx_wpu_clear_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Usuwa zaznaczenie z pola WPU dla wszystkich rekordów z dziedziny
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('del','wt_group','WPU');
1


\p_web_cx_wwu_clear_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Usuwa zaznaczenie z pola WWU dla wszystkich rekordów z dziedziny
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('del','wt_group','WWU');
1


\p_web_cx_get_rodzaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Dla bieżącego kontekstu pracy (wybranego pracownika) zwraca jego rodzaj.
::   WE: [_a] [STRING] - Symbol kodu zależności służbowych, dla których tworzony będzie zbiór rekordów
::                       [domyślnie: 'DOSTINF'].
::   WY: Rodzaj przeglądanych danych:
::          'W' - Właściciel.
::          'P' - Podwładny.
::          ''  - Błąd, nie udało się ustalić kontekstu.
::----------------------------------------------------------------------------------------------------------------------
_kod:={? var_pres('_a')=type_of('') || _a || 'DOSTINF' ?};
{? exec('load_cur_prac','p_web')
|| exec('p_web_cx_set_prefix','p_web',_kod);
   {? P_WEB_CX.find_key(P.ref())
   || P_WEB_CX.RODZAJ
   || ''
   ?}
|| ''
?}


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Kasowanie danych w tabelach tymczasowych
::   WE: _a [INTEGER] - 1 - start TOMCATA
::                      2 - zakończenie sesji webterma
::                      3 - Zamknięcie zakładki - kasowane są tylko rekordy związane z daną zakładką.
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_tryb:={? var_pres('_a')=type_of(0) || _a || return(_result) ?};

exec('wt_r_del','pkw',_tryb) &
exec('prc_ws_del','prc_ws',_tryb) &
exec('wt_pbudz_del','pkw',_tryb) &
exec('wt_ppsfl_del','pkw',_tryb)


\get_user_login
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Zwraca login użytkownika
::   WY: login użytkownika
::----------------------------------------------------------------------------------------------------------------------
app_info('web_user')


\web_global_params_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Dodaje/uaktualnia wartość parametru do web_params
::   WE: _a [STRING] - ACT_UID - identyfikator czynności
::       _b [STRING] - akronim parametru (max 19 znaków!!!)
::       _c [ANY]    - wartość parametru
::   WY:
::----------------------------------------------------------------------------------------------------------------------
  _uid:={? var_pres('_a')=type_of('') || _a || return(~~) ?};
  _acr:={? var_pres('_b')=type_of('') || _b || return(~~) ?};
_value:={? var_pres('_c')>0           || _c || ~~         ?};

_acr:=_uid+'_'+_acr;
web_global_params_set(exec('obj_ntab_set','#array',web_global_params_get(),_acr,_value))


\web_global_params_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Pobiera wartość parametru z web_global_params
::   WE: _a [STRING] - ACT_UID - identyfikator czynności
::       _b [STRING] - akronim parametru (max 19 znaków!!!)
::       _c [ANY]    - wartość zwracana w przypadku gdy się nie udało pobrać parametru (domyślnie ~~)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
   _uid:={? var_pres('_a')=type_of('') || _a || return(~~) ?};
   _acr:={? var_pres('_b')=type_of('') || _b || return(~~) ?};
_result:={? var_pres('_c')>0           || _c || ~~         ?};

_acr:=_uid+'_'+_acr;
_fml:='_a.'+_acr;

_par:=web_global_params_get();
{? obj_ntab(_par)
|| {? var_pres(_acr,_par)>0
   || _result:=($_fml)(_par)
   ?}
?};
_result


\wt_r_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przed modyfikacją rekordu tabeli WT_R.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" - uzupełnia pola
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? WT_R.R<>null()
|| R.cntx_psh();
   WT_R.RN:=WT_R.R().RN;
   WT_R.RT:=R.RT;
   WT_R.OPIS:='%1 (%2)' [WT_R.RT,$WT_R.RN];
   R.cntx_pop();
   1
?}


\wt_r_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli WT_R.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('wt_r_modb','pkw')


\wt_r_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli WT_R.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('wt_r_modb','pkw')


\wt_r_setid_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wartość początkowa pola WT_R.SETID.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('web_global_params_get','pkw','GLOBAL','WT_R_SETID','')


\wt_r_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Kasowanie danych z "tymczasowej" tabeli składników płacowych.
::   WE: _a [INTEGER] - Tryb pracy (czas wywołania):
::                1 - Start TOMCATA.
::                2 - Zakończenie sesji webTerma.
::                3 - Zamknięcie zakładki - kasowane są tylko rekordy związane z daną zakładką.
::   WY: Status operacji: 0/1.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _tryb:=_a
|| return(0)
?};

_tcid:=app_info('web_tcid');
_sesid:=app_info('web_sesid');
_tabid:=app_info('web_tabid');

WT_R.index('R');
{? _tryb=1
|| WT_R.prefix(_tcid,)
|? _tryb=2
|| WT_R.prefix(_tcid,_sesid,)
|? _tryb=3
|| WT_R.prefix(_tcid,_sesid,_tabid,)
?};
{? WT_R.first()
|| {! |? WT_R.del() !}
?};

1


\wt_r_prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła ustawia prefix dla tabeli WT_R.
::       Operacja dotyczy pól: TCID, SESID, TABID, SETID. Zakłada się, że są one pierwszymi polami w indeksie.
::   WE:  _a  [STRING] - Identyfikator zestawu danych. Obsługiwane wartości - patrz formuła \wt_r_set/pkw.fml
::       [_b] [STRING] - Akronim indeksu [domyślnie: 'R'].
::   WY: Rezultat operacji: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & _a<>''
|| _setid:=_a
|| return(0)
?};
_ndx:={? var_pres('_b')=type_of('') || _b || 'R' ?};

WT_R.index(_ndx);
WT_R.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),_setid,);
1


\wt_r_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła wypełnia ('tymczasową') tabelę WT_R informacjami o odpowiednich składnikach płacowych.
::   WE: _a  [STRING] - Identyfikator zestawu danych. Obsługiwane wartości:
::             NWU.R    - Nieobecności, które można wprowadzać we wnioskach urlopowych.
::       [_b] [STRING] - Akronim indeksu [domyślnie: 'R'].
::   WY: Liczba dostępnych rodzajów nieobecności
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & _a<>''
|| _setid:=_a
|| return(0)
?};
_ndx:={? var_pres('_b')=type_of('') || _b || 'R' ?};

exec('__RUB','object');
exec('web_global_params_set','pkw','GLOBAL','WT_R_SETID',_setid);
R.prefix();

exec('wt_r_prefix','pkw',_setid,_ndx);
{? ~WT_R.first()
|| WT_R.blank();
   WT_R.SETID:=_setid;
   {? _setid='NWU.R'
   || _res_form:=Plugin.run('WT_R_SET_01',P.ref());
      _res:=_res_form();
      _TAB:={? type_of(WT_R)=type_of(_res) || _res || __RUB.sys_rub(193) ?};
      {? _TAB.first()
      || {!
         |? {? R.seek(_TAB.R,)
            || WT_R.R:=R.ref();
               WT_R.add()
            ?};
            _TAB.next()
         !}
      ?}
   ?}
?};
WT_R.first();
WT_R.size()


\p_web_cx_pole_check_selected
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Ustawia znacznik zaznaczenia pola zdognie z wyborem użytkownika
::   WE: _a [STRING] - identyfikator zestawu danych dla którego ustawiamy wartość
::       _b [ANY]    - wartość ustawianego pola
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_setid:={? var_pres('_a')=type_of('') || _a || return(0) ?};
  _val:={? var_pres('_b')>0           || _b || return(0) ?};

{? _val='T'
|| exec('add_selected','wt_group',_setid)
|? _val='N'
|| exec('del','wt_group',_setid)
?};
return(~~)


\p_web_cx_uwzglednij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja zaznacza rekord tabali P_WEB_CX
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
web_top_sel_add(,web_top_ident(),P_WEB_CX.ref());
0


\p_web_cx_uwzglednij_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja zaznacza rekord tabali P_WEB_CX
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_kod:=exec('web_global_params_get','pkw','P_WEB_CX','TYPPOZ','');

{? _kod<>''
|| exec('p_web_cx_set_prefix','p_web',_kod);
   {? P_WEB_CX.f_active()
   || _first:="P_WEB_CX.f_first()";
      _next:="P_WEB_CX.f_next()"
   || _first:="P_WEB_CX.first()";
      _next:="P_WEB_CX.next()"
   ?};

   {? _first()
   || {!
      |? web_top_sel_add(,web_top_ident(),P_WEB_CX.ref());
         _next()
      !}
   ?}
?};
0


\p_web_cx_pomin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja odznacza rekord tabeli P_WEB_CX
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
web_top_sel_del(,web_top_ident(),P_WEB_CX.ref());
0


\p_web_cx_pomin_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja odznacza wszystkie zaznaczone rekordy tabeli P_WEB_CX
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
web_top_sel_adel(,web_top_ident());
0


\p_web_cx_web_pm_wybierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.28]
:: OPIS: Akcja "Wybierz" wywoływana jeśli nie ma zaznaczonego żadnego rekordu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: odznaczamy rekordy
exec('del','wt_group','WPU');
FUN.info('Nie zaznaczono żadnego pracownika.'@);
0


\p_web_cx_web_pm_wybierz_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.28]
:: OPIS: Akcja "Wybierz" wywoływana jeśli jest zaznaczony choć jeden rekord
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('env_wt','b_proces')
||
:: odznaczamy rekordy
   exec('del','wt_group','WPU');

:: ustawiamy znacznik zaznaczenia zdognie z wyborem
   exec('p_web_cx_pole_check_selected','pkw','WPU','T');

   web_top_close();

:: uruchamiamy formułę po wyborze akcji
   _par:=web_params_get();
   {? var_pres('_par')>100 & var_pres('fml',_par)>0
   || _par.fml()
   ?}
?};
0


\wt_pbudz_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Kasowanie danych z "tymczasowej" tabeli budżetów premii uznaniowych.
::   WE: _a [INTEGER] - Tryb pracy (czas wywołania):
::                1 - Start TOMCATA.
::                2 - Zakończenie sesji webTerma.
::                3 - Zamknięcie zakładki - kasowane są tylko rekordy związane z daną zakładką.
::   WY: Status operacji: 0/1.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _tryb:=_a
|| return(0)
?};

_tcid:=app_info('web_tcid');
_sesid:=app_info('web_sesid');
_tabid:=app_info('web_tabid');

WT_PBUDZ.index('SKLOD');
{? _tryb=1
|| WT_PBUDZ.prefix(_tcid,)
|? _tryb=2
|| WT_PBUDZ.prefix(_tcid,_sesid,)
|? _tryb=3
|| WT_PBUDZ.prefix(_tcid,_sesid,_tabid,)
?};
{? WT_PBUDZ.first()
|| {! |? WT_PBUDZ.del() !}
?};

1


\p_web_pkw_inne_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Akcja przycisku "Inne dane"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IINN','PKW_POR_PINN')


\p_web_pkw_start_stop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Akcja przycisku "Start / Stop"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IRSS','PKW_POR_PRSS')


\p_web_pkw_praca_zdalna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Akcja przycisku "Praca zdalna stała"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IPZD','PKW_POR_PPZD')


\p_web_pkw_praca_poza
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Akcja przycisku "Praca poza siedzibą firmy"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IPPS','PKW_POR_PPPS')


\wt_ppsfl_setid_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [23.25]
:: OPIS: Wartość początkowa pola WT_PPSFL.SETID
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('web_global_params_get','pkw','GLOBAL','WT_PPSFL_SETID','')


\wt_ppsfl_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [23.25]
:: OPIS: Kasowanie danych z "tymczasowej" tabeli limitów pracy poza siedzibą.
::   WE: _a [INTEGER] - Tryb pracy (czas wywołania):
::                1 - Start TOMCATA.
::                2 - Zakończenie sesji webTerma.
::                3 - Zamknięcie zakładki - kasowane są tylko rekordy związane z daną zakładką.
::   WY: Status operacji: 0/1.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _tryb:=_a
|| return(0)
?};

_tcid:=app_info('web_tcid');
_sesid:=app_info('web_sesid');
_tabid:=app_info('web_tabid');

WT_PPSFL.index('ROK');
{? _tryb=1
|| WT_PPSFL.prefix(_tcid,)
|? _tryb=2
|| WT_PPSFL.prefix(_tcid,_sesid,)
|? _tryb=3
|| WT_PPSFL.prefix(_tcid,_sesid,_tabid,)
?};
{? WT_PPSFL.first()
|| {! |? WT_PPSFL.del() !}
?};

1


\wt_ppsfl_prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [23.25]
:: OPIS: Formuła ustawia prefix dla tabeli WT_PPSFL.
::       Operacja dotyczy pól: TCID, SESID, TABID, SETID. Zakłada się, że są one pierwszymi polami w indeksie.
::   WE:  _a  [STRING] - Identyfikator zestawu danych. Obsługiwane wartości - patrz formuła \wt_ppsfl_set/pkw.fml
::       [_b] [STRING] - Akronim indeksu [domyślnie: 'ROK'].
::   WY: Rezultat operacji: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & _a<>''
|| _setid:=_a
|| return(0)
?};
_ndx:={? var_pres('_b')=type_of('') || _b || 'ROK' ?};

WT_PPSFL.index(_ndx);
WT_PPSFL.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),_setid,);
1


\wt_ppsfl_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [23.25]
:: OPIS: Formuła wypełnia ('tymczasową') tabelę WT_PPSFL informacjami o odpowiednich limitach.
::   WE: _a  [STRING] - Identyfikator zestawu danych. Obsługiwane wartości:
::             STAN_L - Stan limitów danego typu danego pracownika.
::      [_b] [STRING] - Akronim indeksu [domyślnie: 'ROK'].
::       _c [STRING] - sposób limitowania D/G/H - Dni w roku, Godziny w roku, godziny w Hdniu
::   WY: Liczba dostępnych rodzajów nieobecności
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & _a<>''
|| _setid:=_a
|| return(0)
?};
_sl:={? var_pres('_c')=type_of('') || _c || '' ?};
{? ~(',D,G,H,'*',%1,'[_sl])
|| return(0)
?};
_ndx:={? var_pres('_b')=type_of('') || _b || 'ROK' ?};

exec('web_global_params_set','pkw','GLOBAL','WT_PPSFL_SETID',_setid);

exec('wt_ppsfl_prefix','pkw',_setid,_ndx);
{? ~WT_PPSFL.first()
|| WT_PPSFL.blank();
   WT_PPSFL.SETID:=_setid;
   {? _setid='STAN_L'
   || _LIM:=exec('ppsfn_limit_dane','ppsf',_sl);
      {? _LIM.first()
      || {!
         |? WT_PPSFL.ROK:=_LIM.ROK;
            WT_PPSFL.RDL:=_LIM.RDL;
            WT_PPSFL.SPL:=_LIM.SPL;
            {? _sl='D'
::             Limitowanie w dniach w roku:
            || WT_PPSFL.LIM_D:=_LIM.LIM;
               WT_PPSFL.WYK_D:=_LIM.WYK;
               WT_PPSFL.POZ_D:=_LIM.POZ
            |? _sl='G'
::             Limitowanie w godzinach na rok:
            || WT_PPSFL.LIM_G:=_LIM.LIM;
               WT_PPSFL.WYK_G:=_LIM.WYK;
               WT_PPSFL.POZ_G:=_LIM.POZ
            |? _sl='H'
::             Limitowanie w godzinach na dobę:
            || WT_PPSFL.LIM_G:=_LIM.LIM
            ?};
            WT_PPSFL.add();

            _LIM.next()
         !}
      ?}
   ?}
?};
WT_PPSFL.first();
WT_PPSFL.size()


\p_web_pkw_adresy_pracy_zd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Akcja przycisku "Adresy pracy zdalnej"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IPAD','PKW_POR_PPAD')


\p_web_pkw_oswiad_pracy_zd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Akcja przycisku "Oświadczenia pracy zdalnej"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pkw_run','pkw','PKW_POR_IPPO','PKW_POR_PPPO')

:Sign Version 2.0 jowisz:1045 2023/07/21 13:25:28 c1cfaefb6ca1e0d0e6ff89f7836dba01bad638afc093f8f51b7b7b94830aa93528ece913dd4a8406ed0f5505bd20537421b06f37ad2041fc5929aa98febcd6794af2ea869434019e7097b3f4b621a12c2b3c8353631d651b0fa15818db39353573a5daad1e3583a0ebca749b5faaf1377c1781f5d3f695f5d38c5bf5257c08f3
