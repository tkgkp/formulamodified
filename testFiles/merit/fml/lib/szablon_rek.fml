:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: szablon_rek.fml
:: Utworzony: 28.02.2020
:: Autor: achol
::======================================================================================================================
:: Zawartość: Formuły wykorzystywane w szablonach dokumentów WORD.
::======================================================================================================================

\adres_dom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala numer domu z adresu zamieszkania/zameldowania/korespondencyjnego (w zależności od przekazanego rekordu)
::       dla danej osoby.
::   WE: _a [SYSLOG] - rekord zawiertający dane dotyczące adresu konkretnego typu dla osoby.
::   WY: Numer domu ustalony na podstawie przekazanego adresu
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(SYSLOG) || _a.DOM || '' ?}


\adres_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Adres"
::   WE:
::   WY: 0/1 - nie udało się przywrócić kontekstu/udało się przywrócić kontekst
::----------------------------------------------------------------------------------------------------------------------
OS_ADRES.cntx_pop();
KRAJE.cntx_pop()


\adres_etykieta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Tworzy pełną etykietę dla adresu zamieszkania/zameldowania/korespondencyjnego (w zależności od przekazanego
::       rekordu) dla danej osoby.
::   WE: _a [SYSLOG] - rekord zawiertający dane dotyczące adresu konkretnego typu dla osoby.
::   WY: Pełna etykieta adresowa dla przekazanego adresu
::----------------------------------------------------------------------------------------------------------------------
_OS_ADRES:=_a;

{? type_of(_OS_ADRES)=type_of(SYSLOG)
|| _poczta:=_OS_ADRES.KOD+' '+{? |_OS_ADRES.POCZTA='' || _OS_ADRES.MIASTO || _OS_ADRES.POCZTA ?};
   _ulica:={? +_OS_ADRES.ULICA || _OS_ADRES.ULICA || _OS_ADRES.MIASTO ?}+' '+
            _OS_ADRES.DOM+{? |_OS_ADRES.LOKAL='' || '' || ' m. '+_OS_ADRES.LOKAL ?};

   {? |_OS_ADRES.POCZTA<>'' & |_OS_ADRES.POCZTA<>|_OS_ADRES.MIASTO & +_OS_ADRES.ULICA
   || _poczta+=', '+_OS_ADRES.MIASTO
   ?};

   _poczta+{? +_poczta & +_ulica || ', ' || '' ?}+{? +_ulica || _ulica || '' ?}
|| ''
?}


\adres_gmina
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala gminę dla adresu zamieszkania/zameldowania/korespondencyjnego (w zależności od przekazanego rekordu)
::       dla danej osoby.
::   WE: _a [SYSLOG] - rekord zawiertający dane dotyczące adresu konkretnego typu dla osoby.
::   WY: Nazwa gminy ustalony na podstawie przekazanego adresu
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(SYSLOG) || _a.GMINA || '' ?}


\adres_kod_pocztowy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala kod pocztowy dla adresu zamieszkania/zameldowania/korespondencyjnego (w zależności od przekazanego
::       rekordu) dla danej osoby.
::   WE: _a [SYSLOG] - rekord zawiertający dane dotyczące adresu konkretnego typu dla osoby.
::   WY: Kod pocztowy ustalony na podstawie przekazanego adresu
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(SYSLOG) || _a.KOD || '' ?}


\adres_kraj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala kraj dla adresu zamieszkania/zameldowania/korespondencyjnego (w zależności od przekazanego
::       rekordu) dla danej osoby.
::   WE: _a [SYSLOG] - rekord zawiertający dane dotyczące adresu konkretnego typu dla osoby.
::   WY: nazwa kraju ustalona na podstawie przekazanego adresu
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(SYSLOG)
|| _ref_kraj:=_a.KRAJ;

   {? KRAJE.seek(_ref_kraj,,1)
   || KRAJE.NAZ
   || ''
   ?}
|| ''
?}


\adres_lokal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala numer lokalu z adresu zamieszkania/zameldowania/korespondencyjnego (w zależności od przekazanego
::       rekordu) dla danej osoby.
::   WE: _a [SYSLOG] - rekord zawiertający dane dotyczące adresu konkretnego typu dla osoby.
::   WY: Numer lokalu ustalony na podstawie przekazanego adresu
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(SYSLOG) || _a.LOKAL || '' ?}


\adres_miasto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala nazwę miejscowości z adresu zamieszkania/zameldowania/korespondencyjnego (w zależności od przekazanego
::       rekordu) dla danej osoby.
::   WE: _a [SYSLOG] - rekord zawiertający dane dotyczące adresu konkretnego typu dla osoby.
::   WY: Nazwa miejscowości ustalona na podstawie przekazanego adresu
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(SYSLOG) || _a.MIASTO || '' ?}


\adres_od_rodzaju
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wyciąga dane dotyczące adresu w zależności od rodzaju ze źródła "Adres".
::   WE: _a [SYSLOG] - rekord zawierający zbiór adresów dla danej osoby
::       _b [DATE] - data, dla której sprawdzany jest adres zamieszkania
::       _c [STRING] - rodzaj adresu, na podstawie którego zostanie zwrócony wynik
::   WY: Tabela z danymi dotyczącymi adresu osoby w zależności od rodzaju lub ~~
::----------------------------------------------------------------------------------------------------------------------
_TAB:=_a;
_data:=_b;
_rodzaj:=_c;

_OS_ADRES:=sql('select * from :_a where :_a.RODZAJ=\':_b\'',_TAB,_rodzaj);

_ndx:=_OS_ADRES.ndx_tmp(,,'OD',,);
_OS_ADRES.index(_ndx);
_OS_ADRES.prefix();

{? _OS_ADRES.first()
|| {? _OS_ADRES.find_le(_data)
   || {? (_OS_ADRES.DO>=_data) | (_OS_ADRES.DO=date(0,0,0))
      || _ret:=_OS_ADRES
      || _ret:=~~
      ?}
   || _ret:=~~
   ?}
|| _ret:=~~
?};
_OS_ADRES.ndx_drop(_ndx);
_ret


\adres_poczta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala urząd pocztowy dla adresu zamieszkania/zameldowania/korespondencyjnego (w zależności od przekazanego
::       rekordu) dla danej osoby.
::   WE: _a [SYSLOG] - rekord zawiertający dane dotyczące adresu konkretnego typu dla osoby.
::   WY: urząd pocztowy ustalony na podstawie przekazanego adresu
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(SYSLOG) || _a.POCZTA || '' ?}


\adres_powiat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala powiat dla adresu zamieszkania/zameldowania/korespondencyjnego (w zależności od przekazanego
::       rekordu) dla danej osoby.
::   WE: _a [SYSLOG] - rekord zawiertający dane dotyczące adresu konkretnego typu dla osoby.
::   WY: nazwa powiatu ustalona na podstawie przekazanego adresu
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(SYSLOG) || _a.POWIAT || '' ?}


\adres_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachwouje kontekst dla tabel dla źródła danych "Adres"
::   WE:
::   WY: 0/1 - nie udało się zachować kontekstu/udało się zachować kontekst
::----------------------------------------------------------------------------------------------------------------------
OS_ADRES.cntx_psh();
KRAJE.cntx_psh()


\adres_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Adres".
::   WE: _a[REFERENCE] - referencja do rekordu P
::       _b [DATE] - data, dla której sprawdzamy
::   WY: referencja do rekordu lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref_os:=_a;
_data:=_b;

_OS_ADRES:=sql('select * from OS_ADRES join OSOBA using(OS_ADRES.OSOBA,OSOBA.reference)'
               'where OSOBA.reference = \':_a\'',$_ref_os);

OS_ADRES.index('OD');
OS_ADRES.prefix(_ref_os);

{?  type_of(_OS_ADRES)=type_of(SYSLOG) & _OS_ADRES.first() & OS_ADRES.first()
|| _OS_ADRES
|| ~~
?}


\adres_ulica
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala nazwę ulicy z adresu zamieszkania/zameldowania/korespondencyjnego (w zależności od przekazanego rekordu)
::       dla danej osoby.
::   WE: _a [SYSLOG] - rekord zawiertający dane dotyczące adresu konkretnego typu dla osoby.
::   WY: Nazwa ulicy ustalona na podstawie przekazanego adresu
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(SYSLOG) || _a.ULICA || '' ?}


\adres_wojewodztwo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala województwo dla adresu zamieszkania/zameldowania/korespondencyjnego (w zależności od przekazanego
::       rekordu) dla danej osoby.
::   WE: _a [SYSLOG] - rekord zawiertający dane dotyczące adresu konkretnego typu dla osoby.
::   WY: nazwa województwa ustalona na podstawie przekazanego adresu
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(SYSLOG) || _a.WOJEWODZ || '' ?}


\art92p1_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala listę urlopów bezpłatnych w ramach odbywania służby wojskowej dla pracownika.
::   WE: _a [SYSLOG] - tabela z danymi
::   WY: lista urlopów bezpłatnych w ramach odbywania służby wojskowej dla pracownika lub ''
::----------------------------------------------------------------------------------------------------------------------
_a.TEKST


\art92p1_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Dni wynikające z art. 92 § 1".
::   WE: _a [REFERENCE] - referencja do pracownika
::       _b [DATE] - data końca okresu, dla którego sprawdzamy
::       _c [DATE] - data początku okresu, dla którego sprawdzamy
::       _d [STRING] - identyfikator potrzebny do wywołania procedury
::   WY: lista dni wynikających z art. 92 § 1 dla pracownika
::----------------------------------------------------------------------------------------------------------------------

_ref_pracownika:=_a;
_data_do:={? _b=#0 || '0' || $(_b~1)+'-'+$(_b~2)+'-'+$(_b~3) ?};
_data_od:={? _c=#0 || '0' || $(_c~1)+'-'+$(_c~2)+'-'+$(_c~3) ?};
_art92p1:=_d;

{? P.seek(_ref_pracownika,,1) & _art92p1<>'' & _data_do<>'0'
|| _ART92P1:=proc_exec('sp92p1@zasw',$_ref_pracownika,_data_do,_data_od);
   {? type_of(_ART92P1)<>type_of(~~) || _ART92P1 || ~~ ?}
|| _ART92P1:=tab_tmp(,'TEKST','STRING[1]','String');
   _ART92P1.TEKST:=' ';
   _ART92P1.add();
   _ART92P1
?}


\firma_adres_pelny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala pełny adres dla firmy
::   WE: _a [SYSLOG] - rekord tabeli KST
::   WY: pełny adres firmy
::----------------------------------------------------------------------------------------------------------------------
exec('ulica','stalesys')


\firma_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Firma".
::   WE:
::   WY: 0/1 - nie udało się przywrócić kontekstu/udało się przywrócić kontekst
::----------------------------------------------------------------------------------------------------------------------
KST.cntx_pop()


\firma_nazwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala nazwę firmy.
::   WE: _a [SYSLOG] - rekord tabeli KST
::   WY: nazwa firmy
::----------------------------------------------------------------------------------------------------------------------
_a.NAZWA


\firma_nip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala numer NIP firmy.
::   WE: _a [SYSLOG] - rekord tabeli KST
::   WY: numer NIP firmy
::----------------------------------------------------------------------------------------------------------------------
_a.NIP


\firma_pkd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala numer PKD firmy.
::   WE: _a [SYSLOG] - rekord tabeli KST
::   WY: numer PKD firmy
::----------------------------------------------------------------------------------------------------------------------
_a.PKD


\firma_poczta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informacje o poczcie dla firmy.
::   WE: _a [SYSLOG] - rekord tabeli KST
::   WY: informacje o poczcie dla firmy
::----------------------------------------------------------------------------------------------------------------------
exec('poczta','stalesys')


\firma_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachowuje kontekst dla tabel dla źródła "Firma".
::   WE:
::   WY: 0/1 - błąd/zachowano kontekst
::----------------------------------------------------------------------------------------------------------------------
KST.cntx_psh()


\firma_przedstawiciel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala przerdstawiciela firmy.
::   WE: _a [SYSLOG] - rekord tabeli KST
::   WY: przedstawiciel firmy
::----------------------------------------------------------------------------------------------------------------------
_a.PRZEDST


\firma_regon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala numer REGON firmy.
::   WE: _a [SYSLOG] - rekord tabeli KST
::   WY: numer REGON firmy
::----------------------------------------------------------------------------------------------------------------------
_a.REG


\firma_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Firma".
::   WE: _a [DATE] - data, dla której będą sprawdzane informacje
::   WY: referencja do rekordu z danymi o firmie dla podanej daty lub ~~
::----------------------------------------------------------------------------------------------------------------------
_data:=_a;

{? exec('czytaj','#stalesys',_data,KST,'NAZWA','REG','NIP','PKD','PRZEDST','ULICA','MIASTO','DOM','LOKAL',
        'KOD','POCZTA')
|| KST
|| ~~
?}


\komornik_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala listę zajęć wynagrodzenia dla pracownika.
::   WE: _a [SYSLOG] - tabela z danymi
::   WY: lista zajęć wynagrodzenia dla pracownika lub ''
::----------------------------------------------------------------------------------------------------------------------
_a.TEKST


\komornik_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Zajęcia wynagrodzenia".
::   WE: _a [REFERENCE] - referencja do pracownika
::       _b [DATE] - data końca okresu, dla którego sprawdzamy
::       _c [DATE] - data zatrudnienia pracownika
::       _d [STRING] - idetyfikator wymagany do pobrania informacji z procedury
::   WY: lista zajęć wynagrodzenia przez komornika
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;
_data_do:={? _b=#0 || '0' || $(_b~1)+'-'+$(_b~2)+'-'+$(_b~3) ?};
_data_od:=_c;
_komornik:=_d;

{? P.seek(_ref_pracownika,,1) & _komornik='TAB' & _data_do<>'0'
|| _data_zatrudnienia:={? _data_od=#0
                       || $(P.DZA~1)+'-'+$(P.DZA~2)+'-'+$(P.DZA~3)
                       || $(_data_od~1)+'-'+$(_data_od~2)+'-'+$(_data_od~3)
                       ?};
   _ref_osoby:=P.OSOBA;
   _KOMORNIK:=proc_exec('komornik@zasw',$_ref_osoby,$_ref_pracownika,_data_zatrudnienia,_data_do);
   {? type_of(_KOMORNIK)<>type_of(~~) || _KOMORNIK || ~~ ?}
|| _KOMORNIK:=tab_tmp(,'TEKST','STRING[1]','String');
   _KOMORNIK.TEKST:=' ';
   _KOMORNIK.add();
   _KOMORNIK
?}


\listy_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Wymiary zatrudnienia"
::   WE:
::   WY: 0/1 - nie udało się przywrócić kontekstu/udało się przywrócić kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_pop()


\listy_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachwouje kontekst dla tabel dla źródeł danych "Wymiary zatrudnienia","Stanowiska"
::   WE:
::   WY: 0/1 - nie udało się zachować kontekstu/udało się zachować kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh()


\okresy_nieskladkowe_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala listę okresów nieskładkowych pracownika.
::   WE: _a [SYSLOG] - tabela z danymi
::   WY: lista okresów nieskładkowych pracownika lub ''
::----------------------------------------------------------------------------------------------------------------------
_a.TEKST


\okresy_nieskladkowe_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Okresy nieskładkowe".
::   WE: _a [REFERENCE] - referencja do pracownika
::       _b [DATE] - data końca okresu, dla którego sprawdzamy
::       _c [DATE] - data początku okresu, dla którego sprawdzamy
::       _d [STRING] - idetyfikator wymagany do pobrania informacji z procedury
::   WY: lista okresów nieskładkowych pracownika
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;
_data_do:={? _b=#0 || '0' || $(_b~1)+'-'+$(_b~2)+'-'+$(_b~3) ?};
_data_od:={? _c=#0 || '0' || $(_c~1)+'-'+$(_c~2)+'-'+$(_c~3) ?};
_okresy_nskl:=_d;

{? P.seek(_ref_pracownika,,1) & _okresy_nskl<>'' & _data_do<>'0'
|| _OKRESY_NSKL:=proc_exec('spns@zasw',$_ref_pracownika,_data_do,_data_od);
   {? type_of(_OKRESY_NSKL)<>type_of(~~) || _OKRESY_NSKL || ~~ ?}
|| _OKRESY_NSKL:=tab_tmp(,'TEKST','STRING[1]','String');
   _OKRESY_NSKL.TEKST:=' ';
   _OKRESY_NSKL.add();
   _OKRESY_NSKL
?}


\oblicz_s1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala pierwszy składnik wynikający z umowy dla podanego pracownika.
::   WE:  _a [SYSLOG]   - rekord z danymi o wynagrodzeniu pracownika
::       [_b] [STRING]  - informacja dla jakiego źródła wywoływana funkcja
::       [_c] [INTEGER] - pozwala na warunkowe utworzenie opisu jeśli przekazano 1
::   WY: pierwszy składnik płacowy pracownika w postaci tablicy nazwanej
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;
{? var_pres('aneks')>100 & var_pres('__CALL')>100 & var_pres('SW1',__CALL) & __CALL.SW1='' || return('') ?};
_wywolanie:={? var_pres('_b')=type_of('') & +_b || _b || '' ?};
_roznica:={? var_pres('_c')=type_of(0) & _c || _c || 0 ?};

_czy_godzinowa:=1+-_H.CP().S<>'u';

{? _H.S1 | (_wywolanie='zaswplac' & _roznica)
|| _info_rodzaj:={? _czy_godzinowa || '- stawka godzinowa' || '- płaca zasadnicza' ?};
   {? _wywolanie='zaswplac' || _info_rodzaj+=' ulega zmianie na kwotę' ?};
   _waluta:={? _H.CZYWAL='T' || _H.WAL().KOD+'' || 'zł' ?};
   _precyzja:=exec('ustal_precyzje','szablon_rek',_H.S1);
   _KWOTY:=obj_new('Liczbowo','Slownie');
   _KWOTY.Liczbowo:='%1 %2 %3' [_info_rodzaj,form(_H.S1,,_precyzja),_waluta];
   _KWOTY.Slownie:={? _H.CZYWAL='T' || '' || STR.kwota_sł(_H.S1) ?};
   _KWOTY
|| ''
?}


\oblicz_s2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala drugi składnik płacowy dla podanego pracownika.
::   WE:  _a [SYSLOG]   - rekord z danymi o wynagrodzeniu pracownika
::       [_b] [STRING]  - informacja dla jakiego źródła wywoływana funkcja
::       [_c] [INTEGER] - pozwala na warunkowe utworzenie opisu jeśli przekazano 1 (np. zmiana S2 z pewnej kwoty na 0)
::   WY: tablica nazwana z drugim składnikiem płacowym pracownika w postaci liczbowej i słownej lub drugi składnik
::       płacowy w postaci procentu
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;
{? var_pres('aneks')>100 & var_pres('__CALL')>100 & var_pres('SW2',__CALL) & __CALL.SW2='' || return('') ?};
_wywolanie:={? var_pres('_b')=type_of('') & +_b || _b || '' ?};
_roznica:={? var_pres('_c')=type_of(0) & _c || _c || 0 ?};

_czy_godzinowa:=1+-H.CP().S<>'u';

{? _H.S2 | (_wywolanie='zaswplac' & _roznica)
|| _info_rodzaj:={? _czy_godzinowa || '- dodatek brygadzistowski' || '- dodatek funkcyjny' ?};
   _waluta:={? _H.CZYWAL2='T' || _H.WAL().KOD+'' || 'zł' ?};
   _precyzja:=exec('ustal_precyzje','szablon_rek',_H.S2);
   _dodatkowa_informacja:={? _wywolanie='zaswplac' || 'ulega zmianie na ' || '' ?};
   {? _H.S2T='P'
   || '%1 wyrażony w %2, %3%4\% %5' [_info_rodzaj,_waluta,_dodatkowa_informacja,form(_H.S2,,_precyzja),_H.S2P().NAZWA]
   || _dodatkowa_informacja+={? _dodatkowa_informacja<>'' || 'kwotę ' || '' ?};
      _KWOTY:=obj_new('Liczbowo','Slownie');
      _KWOTY.Liczbowo:='%1 %2%3 %4' [_info_rodzaj,_dodatkowa_informacja,form(_H.S2,,_precyzja),_waluta];
      _KWOTY.Slownie:={? _H.CZYWAL2='T' || '' || STR.kwota_sł(_H.S2) ?};
      _KWOTY
   ?}
|| ''
?}


\oblicz_s3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala trzeci składnik płacowy dla podanego pracownika.
::   WE:  _a [SYSLOG]   - rekord z danymi o wynagrodzeniu pracownika
::       [_b] [STRING]  - informacja dla jakiego źródła wywoływana funkcja
::       [_c] [INTEGER] - pozwala na warunkowe utworzenie opisu jeśli przekazano 1
::   WY: tablica nazwana z trzecim składnikiem płacowym pracownika w postaci liczbowej i słownej lub trzeci składnik
::       płacowy w postaci procentu
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;
{? var_pres('aneks')>100 & var_pres('__CALL')>100 & var_pres('SW3',__CALL) & __CALL.SW3='' || return('') ?};
_wywolanie:={? var_pres('_b')=type_of('') & +_b || _b || '' ?};
_roznica:={? var_pres('_c')=type_of(0) & _c || _c || 0 ?};

{? _H.S3 | (_wywolanie='zaswplac' & _roznica)
|| _waluta:={? _H.CZYWAL3='T' || _H.WAL().KOD+'' || 'zł' ?};
   _precyzja:=exec('ustal_precyzje','szablon_rek',_H.S3);
   _dodatkowa_informacja:={? _wywolanie='zaswplac' || 'ulega zmianie na ' || '' ?};
   {? _H.S3T='P'
   || '- dodatek wyrażony w %1, %2%3\% %4' [_waluta,_dodatkowa_informacja,form(_H.S3,,_precyzja),_H.S3P().NAZWA]
   || _dodatkowa_informacja+={? _dodatkowa_informacja<>'' || 'kwotę ' || '' ?};
      _KWOTY:=obj_new('Liczbowo','Slownie');
      _KWOTY.Liczbowo:='- dodatek %1%2 %3' [_dodatkowa_informacja,form(_H.S3,,_precyzja),_waluta];
      _KWOTY.Slownie:={? _H.CZYWAL3='T' || '' || STR.kwota_sł(_H.S3) ?};
      _KWOTY
   ?}
|| ''
?}


\oblicz_s4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [22.26]
:: OPIS: Ustala czwarty składnik wynikający z umowy dla podanego pracownika.
::   WE:  _a [SYSLOG]   - rekord z danymi o wynagrodzeniu pracownika
::       [_b] [STRING]  - informacja dla jakiego źródła wywoływana funkcja
::       [_c] [INTEGER] - pozwala na warunkowe utworzenie opisu jeśli przekazano 1
::       [_d] [INTEGER] - czy wyświetlać pomimo zerowego pierwszego składnika (przeszeregowanie)
::   WY: czwarty składnik płacowy pracownika w postaci tablicy nazwanej
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;
{? var_pres('aneks')>100 & var_pres('__CALL')>100 & var_pres('SW4',__CALL) & __CALL.SW4='' || return('') ?};
_wywolanie:={? var_pres('_b')=type_of('') & +_b || _b || '' ?};
_roznica:={? var_pres('_c')=type_of(0) & _c || _c || 0 ?};
_wyswietl:={? var_pres('_d')=type_of(0) & _d || _d || 0 ?};
_czy_godzinowa:=1+-_H.CP().S<>'u';
{? (_H.S4 | (_wywolanie='zaswplac' & _roznica))
|| _info_rodzaj:={? _czy_godzinowa
                 || '- stawka godzinowa płacy związanej z oddelegowaniem'
                 || '- płaca oddelegowanie'
                 ?};
   {? _wywolanie='zaswplac'
   || _info_rodzaj+=' ulega zmianie na kwotę'
   ?};
   _waluta:={? _H.CZYWAL4='T' || _H.WAL().KOD+'' || 'zł' ?};
   _precyzja:=exec('ustal_precyzje','szablon_rek',_H.S4);
   _KWOTY:=obj_new('Liczbowo','Slownie');
   _KWOTY.Liczbowo:='%1 %2 %3' [_info_rodzaj,form(_H.S4,,_precyzja),_waluta];
   _KWOTY.Slownie:={? _H.CZYWAL4='T' || '' || STR.kwota_sł(_H.S4) ?};
   _KWOTY
|| ''
?}


\osoba_data_urodzenia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę urodzenia dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: data urodzenia podanej osoby
::----------------------------------------------------------------------------------------------------------------------
'urodzon'+{? _a.PLEC='K' || 'a ' || 'y ' ?}+_a.UR_DATA$6+' r.'


\osoba_dowod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala numer dowodu osobistego dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: numer dowodu osobistego osoby
::----------------------------------------------------------------------------------------------------------------------
_a.DOWOD


\osoba_dowod_organ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala nazwę organu wydającego dowód osobisty dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: nazwa organu wydającego dowód osobisty dla osoby
::----------------------------------------------------------------------------------------------------------------------
_a.ORG_DOW


\osoba_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Dane osobowe".
::   WE:
::   WY: 0/1 - błąd/przywrócono kontekst
::----------------------------------------------------------------------------------------------------------------------
OSOBA.cntx_pop()


\osoba_imie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala imię dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: imię osoby
::----------------------------------------------------------------------------------------------------------------------
_a.PIERWSZE


\osoba_imie_drugie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala drugie imię dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: drugie imię osoby
::----------------------------------------------------------------------------------------------------------------------
_a.DRUGIE


\osoba_imie_matki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala imię matki dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: imię matki dla podanej osoby
::----------------------------------------------------------------------------------------------------------------------
'imię matki '+_a.MATKA


\osoba_imie_ojca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala imię ojca dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: imię ojca dla podanej osoby
::----------------------------------------------------------------------------------------------------------------------
'imię ojca '+_a.OJCIEC


\osoba_miejsce_urodzenia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala miejsce urodzenia dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: miejsce urodzenia podanej osoby
::----------------------------------------------------------------------------------------------------------------------
_a.UR_MIEJ


\osoba_nazwisko
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala nazwisko dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: nazwisko dla podanej osoby
::----------------------------------------------------------------------------------------------------------------------
_a.NAZWISKO


\osoba_nazwisko_matki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala nazwisko matki dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: nazwisko matki dla podanej osoby
::----------------------------------------------------------------------------------------------------------------------
'nazwisko matki '+_a.MATKAN


\osoba_nazwisko_ojca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala nazwisko ojca dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: nazwisko ojca dla podanej osoby
::----------------------------------------------------------------------------------------------------------------------
'nazwisko ojca '+_a.OJCIECN


\osoba_nazwisko_rodowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala nazwisko rodowe dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: nazwisko rodowe osoby
::----------------------------------------------------------------------------------------------------------------------
_a.RODOWE


\osoba_nip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala numer NIP dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: numer NIP osoby
::----------------------------------------------------------------------------------------------------------------------
_a.NIP


\osoba_ojciecn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala nazwisko ojca dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: nazwisko ojca osoby
::----------------------------------------------------------------------------------------------------------------------
_a.OJCIECN


\osoba_paszport
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala numer paszportu dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: numer paszportu osoby
::----------------------------------------------------------------------------------------------------------------------
_a.PASZPORT


\osoba_paszport_krajwyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala kraj wydania paszportu dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: kraj wydania paszportu dla osoby
::----------------------------------------------------------------------------------------------------------------------
_a.KRAJPASZ().NAZ


\osoba_paszport_organ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala nazwę organu wydającego paszport dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: nazwa organu wydającego paszport dla osoby
::----------------------------------------------------------------------------------------------------------------------
_a.ORG_PASZ


\osoba_pesel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala numer PESELs dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: numer PESEL osoby
::----------------------------------------------------------------------------------------------------------------------
_a.PESEL


\osoba_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachowuje kontekst dla tabel dla źródła "Dane osobowe".
::   WE:
::   WY: 0/1 - błąd/zachowano kontekst
::----------------------------------------------------------------------------------------------------------------------
OSOBA.cntx_psh()


\osoba_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Dane osobowe".
::   WE: _a [REFERENCE] - referencja do osoby
::   WY: referencja do rekordu osoba lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref_os:=_a;

{? OSOBA.seek(_ref_os,,1) || OSOBA || ~~ ?}


\osoba_urzad_skarb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala nazwę urzędu skarbowego dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: nazwa urzędu skarbowego dla osoby
::----------------------------------------------------------------------------------------------------------------------
_a.US().NU


\osoba_wyksztalcenie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala wykształcenie dla podanej osoby.
::   WE: _a [SYSLOG] - rekord tabeli OSOBA
::   WY: wykształcenie osoby
::----------------------------------------------------------------------------------------------------------------------
_a.WYK().WK


\pierwszy_dzien_miesiaca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala czy dzień przekazanej daty jest pierwszym dniem miesiąca
::   WE: _a [DATE] - przekazana data
::   WY: 1/0 dzień przekazanej daty jest pierwszym dniem miesiąca/dzień przekazanej daty nie jest pierwszym dniem
::       miesiąca
::----------------------------------------------------------------------------------------------------------------------
_a~3=1


\pobierz_inne_warunki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala inne warunki umowy dotyczące danego okresu zatrudnienia.
::   WE: _a [REFERENCE] - referencja zatrudnienia przekazana do formuły, na podstawie której będą ustalane warunki
::   WY: treść dotycząca innych warunków wynikających z umowy dla danego okresu zatrudnienia lub ~~
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;

_inne_warunki:='';
{? _H.memo_get(,'INNE')
|| STR.split(exec('memo2print','#string',_H,'INNE'));
   _inne_warunki:=STR.line(240)
?};
_inne_warunki


\pobierz_ref_pracownika
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala referencję do pracownika.
::   WE: _a [REFERENCE] - referencja przekazana do formuły, na podstawie której będzie ustalany pracownik
::       [_b] [STRING] - dla jakiego kontekstu wywoływane pobranie
::   WY: referencja do pracownika lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_wywolanie:={? var_pres('_b')=type_of('') & +_b || _b || '' ?};

_wynik_szukania:=~~;

{? _wywolanie='zaswzatr'
|| {? H_UM.seek(_ref,,1)
   || _wynik_szukania:=H_UM.P().ref()
   ?}
?};
_wynik_szukania


\pobierz_ref_umowy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala referencję do umowy.
::   WE: _a [REFERENCE] - referencja przekazana do formuły, na podstawie której będzie ustalana umowa
::       [_b] [STRING] - dla jakiego kontekstu wywoływane pobranie
::       [_c] [DATE] - przekazana data, dla której sprawdzamy
::   WY: referencja do umowy  lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_wywolanie:={? var_pres('_b')=type_of('') & +_b || _b || '' ?};
_data:={? var_pres('_c')=type_of(date) || _c || '' ?};

_wynik_szukania:=~~;

{? _wywolanie='zaswzatr'
|| {? P.seek(_ref,,1)
   || H_UM.index('OD');
      H_UM.prefix(_ref);
      {? H_UM.first()
      || {? H_UM.find_le(_data)
         || _wynik_szukania:=H_UM.ref()
         ?}
      ?}
   ?}
?};
_wynik_szukania


\pobierz_ref_zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala referencję do pracownika dla podanej umowy w zależności od daty przekazanej do źródła "Zatrudnienie".
::   WE: _a [REFERENCE] - referencja przekazana do formuły, na podstawie której będzie ustalana referencja do
::       zatrudnienia
::       [_b] [STRING] - dla jakiego kontekstu wywoływane pobranie
::       [_c] [DATE] - data od której sprawdzamy
::       [_d] [DATE] - data do której sprawdzamy
::   WY: referencja do zatrudnienia lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_wywolanie:={? var_pres('_b')=type_of('') & +_b || _b || '' ?};
_data_od:={? var_pres('_c')=type_of(date) || _c || '' ?};
_data_do:={? var_pres('_d')=type_of(date) || _d || '' ?};

_wynik_szukania:=~~;

{? _wywolanie='zaswplac_ref_P'
|| {? P.seek(_ref,,1)
   || H.index('_HISTKOD');
      H.prefix(P.ref(),'Z');
      {? H.first()
      || {? H.find_le(_data_do) & H.OD>=_data_od || _wynik_szukania:=$H.ref() ?}
      ?}
   ?}
|? _wywolanie='zaswplac_ref_H'
|| {? H.seek(_ref,,1)
   || H.index('_HISTKOD');
      _ref_pracownika:=H.P;
      _od:=H.OD;
      H.prefix(_ref_pracownika,'Z');
      {? H.find_key(_od) || _wynik_szukania:=$H.ref() ?}
   ?}
?};
_wynik_szukania


\pracownik_data_zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę zatrudnienia dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli P
::   WY: data zatrudnienia dla pracownika
::----------------------------------------------------------------------------------------------------------------------
{? _a.DZA<>date(0,0,0) || _a.DZA$6 + ' r.' || '' ?}


\pracownik_data_zwolnienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę zwolnienia dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli P
::   WY: data zwolnienia dla pracownika
::----------------------------------------------------------------------------------------------------------------------
{? _a.DZ<>#0 || _a.DZ$6 + ' r.' || '' ?}


\pracownik_dziedz_tytul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala dziedzinę tytułu zawodowego dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli P
::   WY: dziedzina tytułu zawodowego dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.DZTZ().NAZWA


\pracownik_dziedz_tytuln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala dziedzinę tytułu naukowego dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli P
::   WY: dziedzina tytułu naukowego dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.DZTN().NAZWA


\pracownik_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Dane osobowe pracownika"
::   WE:
::   WY: 0/1 - nie udało się przywrócić kontekstu/udało się przywrócić kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_pop();
UD_SKL.cntx_pop();
ZAW.cntx_pop();
TYTULN.cntx_pop();
SLO_NAZ.cntx_pop()


\pracownik_opis_zwolnienie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala opis zwolnienia dla podanego pracownika(data, przyczyna).
::   WE: _a [SYSLOG] - rekord tabeli P
::   WY: opis zwolnienia dla podanego pracownika(data, przyczyna)
::----------------------------------------------------------------------------------------------------------------------
_P:=_a;

_informacja:='';

{? _P.ZA='N'
|| _informacja+='i został';
   {? _P.OSOBA().PLEC='K' || _informacja+='a' ?};
   _informacja+=' zwolnion'+{? _P.OSOBA().PLEC='K' || 'a' || 'y' ?}+' dnia '+_P.DZA$6+' r.';
   _przyczyna_zwolnienia:=exec('uspkod','personel',_a);
   _informacja+={? _przyczyna_zwolnienia<>'' || ' (przyczyna: '+_przyczyna_zwolnienia+')' || '' ?}
?};
_informacja


\pracownik_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachwouje kontekst dla tabel dla źródła danych "Dane osobowe pracownika"
::   WE:
::   WY: 0/1 - nie udało się zachować kontekstu/udało się zachować kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
UD_SKL.cntx_psh();
ZAW.cntx_psh();
TYTULN.cntx_psh();
SLO_NAZ.cntx_psh()


\pracownik_przyczyna_zwolnienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala przyczynę zwolnienia dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli P
::   WY: przyczyna zwolnienia pracownika
::----------------------------------------------------------------------------------------------------------------------
_przyczyna_zwolnienia:=exec('uspkod','personel',_a);
{? _przyczyna_zwolnienia<>'' || _przyczyna_zwolnienia || '' ?}


\pracownik_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Dane osobowe pracownika".
::   WE: _a [REFERENCE] - referencja do pracownika
::       _b [DATE] - przekazana data
::   WY: referencja do rekordu P lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref_prac:=_a;

{? P.seek(_ref_prac,,1) || P || ~~ ?}


\pracownik_teczka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala numer teczki dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli P
::   WY: numer teczki dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.T


\pracownik_tytul_nauk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala pełną nazwę tytułu naukowego dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli P
::   WY: pełna nazwa tytułu naukowego dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.TYTULN().NAZ


\pracownik_tytul_nauk_skr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala skrót tytułu naukowego dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli P
::   WY: skrót tytułu naukowego dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.TYTULN().KOD


\pracownik_tytul_zaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala tytuł zawodowy dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli P
::   WY: tytuł zawodowy pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.TYTULZ().NAZWA


\pracownik_zatrudniony
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala czy pracownik jest zatrudniony lub był zatrudniony.
::   WE: _a [SYSLOG] - rekord tabeli P
::   WY: informacja czy pracownik jest zatrudniony lub był zatrudniony
::----------------------------------------------------------------------------------------------------------------------
_P:=_a;

_informacja:='';
{? _P.ZA='T'
|| _informacja+='jest'
|| _informacja+='był';
   {? _P.OSOBA().PLEC='K' || _informacja+='a' ?}
?};
_informacja+=' zatrudnion'+{? _P.OSOBA().PLEC='K' || 'a' || 'y' ?};
_informacja


\pracownik_zawod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala zawód wykonywany dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli P
::   WY: zawód wykonywany przez pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.ZAW().ZD


\prawa_autorskie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala przychód wynikający z praw autorskich wynikające z danej umowy o pracę.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: przychód wynikający z praw autorskich dla umowy jako opis do szablonu standardowego
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;

{? _H.PAW
|| _informacja_przed:='';
   _precyzja:=exec('ustal_precyzje','szablon_rek',_H.PAW);
   _miara:={? _H.PAT='K'
           || _informacja_przed+='stanowić będzie kwotę';
              _informacja_po:='.';
              ' zł'
           |? _H.PAT='P'
           || _informacja_przed+='stanowić będzie';
              _informacja_po:=' płacy zasadniczej pomniejszonej za dni nieprzepracowane.';
              '%'
           ?};
   '%1 %2%3%4' [_informacja_przed,form(_H.PAW,,_precyzja),_miara,_informacja_po]
|? _H.PAW=0 & _H.PAT='G'
|| ' ustalane będzie każdorazowo za dany miesiąc na podstawie godzinowej ewidencji'+
              ' pracy twórczej.'
|| ''
?}


\prawa_autorskie_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala nr punktu na umowie (dla umowy o pracę) dotyczącego praw autorskich.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: nr punktu na umowie (dla umowy o pracę) dotyczącego praw autorskich
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;

_nr_punktu_na_umowie:=2;

{?  H_UM.RU().K='B' & H_UM.OD>=date(2016,2,22) & H_UM.WYM_UZAS='T' || _nr_punktu_na_umowie+=1 ?};
$_nr_punktu_na_umowie+'.'


\przekaz_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przekazuje dane z gałęzi wyższego poziomu do gałęzi niższego poziomu.
::   WE: _a [SYSLOG] - przekazywane dane
::   WY: przekazane dane
::----------------------------------------------------------------------------------------------------------------------
_a


\stanowiska_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala stanowisko/listę stanowisk dla pracownika.
::   WE: _a [SYSLOG] - tabela z danymi
::   WY: stanowisko/lista stanowisk dla pracownika lub ''
::----------------------------------------------------------------------------------------------------------------------
_a.ST


\slownik_byl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala napis był/była w zależności od źródła.
::   WE: _a[DICT] - tablica nazwana z elementami źródła "Słownik"
::   WY: napis był/była
::----------------------------------------------------------------------------------------------------------------------
_a.inne.byl_la


\slownik_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Słownik (PKD i PPL)"
::   WE:
::   WY: 0/1 - nie udało się przywrócić kontekstu/udało się przywrócić kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_pop();
OSOBA.cntx_pop()


\slownik_mieszkajac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala napis mieszkający/mieszkająca w zależności od źródła.
::   WE: _a[DICT] - tablica nazwana z elementami źródła "Słownik"
::   WY: napis mieszkający/mieszkająca
::----------------------------------------------------------------------------------------------------------------------
_a.inne.mieszkajacy_ca


\slownik_odmiana
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Odmienia rzeczownik w zależności od przypadku.
::   WE: _a [DICT] - rzeczownik do odmiany
::       _b [STRING] - symbol odpowiedniego przypadku
::   WY: rzeczownik odmieniony przez konkretny przypadek
::----------------------------------------------------------------------------------------------------------------------
_rzeczownik:=_a;
_przypadek:=_b;

{? _przypadek='M' || _rzeczownik.Mianownik
|? _przypadek='D' || _rzeczownik.Dopelniacz
|? _przypadek='C' || _rzeczownik.Celownik
|? _przypadek='B' || _rzeczownik.Biernik
|? _przypadek='N' || _rzeczownik.Narzednik
|? _przypadek='MM' || _rzeczownik.Miejscownik
|? _przypadek='W' || _rzeczownik.Wolacz
|| ''
?}


\slownik_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachwouje kontekst dla tabel dla źródła danych "Słownik (PKD i PPL)"
::   WE:
::   WY: 0/1 - nie udało się zachować kontekstu/udało się zachować kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
OSOBA.cntx_psh()


\slownik_rzeczownik_pan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przekazuje rzeczownik Pan/Pani w celu odmiany.
::   WE: _a[DICT] - tablica nazwana z elementami źródła "Słownik"
::   WY: rzeczownik Pan/Pani
::----------------------------------------------------------------------------------------------------------------------
_rzeczownik:=_a.rzeczowniki.pan_pani


\slownik_rzeczownik_pracownik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przekazuje rzeczownik pracownik/pracownica w celu odmiany.
::   WE: _a[DICT] - tablica nazwana z elementami źródła "Słownik"
::   WY: rzeczownik pracownik/pracownica
::----------------------------------------------------------------------------------------------------------------------
_rzeczownik:=_a.rzeczowniki.pracownik_pracownica


\slownik_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Słownik (PKD i PPL)".
::   WE: _a [REFERENCE] - referencja do osoby
::   WY: tablica z odmienionymi wyrazami lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref_osoby:=_a;

przypadki:="obj_new('Mianownik','Dopelniacz','Celownik','Biernik','Narzednik','Miejscownik','Wolacz')";

_slownik:=obj_new('rzeczowniki','inne');

_slownik.rzeczowniki:=obj_new('pan_pani','pracownik_pracownica');
_slownik.rzeczowniki.pan_pani:=przypadki();
_slownik.rzeczowniki.pracownik_pracownica:=przypadki();

_slownik.inne:=obj_new('zamieszkujacym_ca','zobowiazany_na','urodzony_na','byl_la','zatrudniony_na',
                             'wykonywal_la','mieszkajacy_ca','zamieszkaly_la');

{? OSOBA.seek(_ref_osoby,,1)
|| {? OSOBA.PLEC='K'
   ||
      _slownik.rzeczowniki.pan_pani.Mianownik:='Pani';
      _slownik.rzeczowniki.pan_pani.Dopelniacz:='Pani';
      _slownik.rzeczowniki.pan_pani.Celownik:='Pani';
      _slownik.rzeczowniki.pan_pani.Biernik:='Panią';
      _slownik.rzeczowniki.pan_pani.Narzednik:='Panią';
      _slownik.rzeczowniki.pan_pani.Miejscownik:='Pani';
      _slownik.rzeczowniki.pan_pani.Wolacz:='Pani';

      _slownik.rzeczowniki.pracownik_pracownica.Mianownik:='pracownica';
      _slownik.rzeczowniki.pracownik_pracownica.Dopelniacz:='pracownicy';
      _slownik.rzeczowniki.pracownik_pracownica.Celownik:='pracownicy';
      _slownik.rzeczowniki.pracownik_pracownica.Biernik:='pracownicę';
      _slownik.rzeczowniki.pracownik_pracownica.Narzednik:='pracownicą';
      _slownik.rzeczowniki.pracownik_pracownica.Miejscownik:='pracownicy';
      _slownik.rzeczowniki.pracownik_pracownica.Wolacz:='pracownico';

      _slownik.inne.zamieszkujacym_ca:='zamieszkującą';
      _slownik.inne.zobowiazany_na:='zobowiązana';
      _slownik.inne.urodzony_na:='urodzona';
      _slownik.inne.byl_la:='była';
      _slownik.inne.zatrudniony_na:='zatrudniona';
      _slownik.inne.wykonywal_la:='wykonywała';
      _slownik.inne.mieszkajacy_ca:='mieszkająca';
      _slownik.inne.zamieszkaly_la:='zamieszkała'
   ||
      _slownik.rzeczowniki.pan_pani.Mianownik:='Pan';
      _slownik.rzeczowniki.pan_pani.Dopelniacz:='Pana';
      _slownik.rzeczowniki.pan_pani.Celownik:='Panu';
      _slownik.rzeczowniki.pan_pani.Biernik:='Pana';
      _slownik.rzeczowniki.pan_pani.Narzednik:='Panem';
      _slownik.rzeczowniki.pan_pani.Miejscownik:='Panu';
      _slownik.rzeczowniki.pan_pani.Wolacz:='Panie';

      _slownik.rzeczowniki.pracownik_pracownica.Mianownik:='pracownik';
      _slownik.rzeczowniki.pracownik_pracownica.Dopelniacz:='pracownika';
      _slownik.rzeczowniki.pracownik_pracownica.Celownik:='pracownikowi';
      _slownik.rzeczowniki.pracownik_pracownica.Biernik:='pracownika';
      _slownik.rzeczowniki.pracownik_pracownica.Narzednik:='pracownikiem';
      _slownik.rzeczowniki.pracownik_pracownica.Miejscownik:='pracowniku';
      _slownik.rzeczowniki.pracownik_pracownica.Wolacz:='pracowniku';

      _slownik.inne.zamieszkujacym_ca:='zamieszkującym';
      _slownik.inne.zobowiazany_na:='zobowiązany';
      _slownik.inne.urodzony_na:='urodzony';
      _slownik.inne.byl_la:='był';
      _slownik.inne.zatrudniony_na:='zatrudniony';
      _slownik.inne.wykonywal_la:='wykonywał';
      _slownik.inne.mieszkajacy_ca:='mieszkający';
      _slownik.inne.zamieszkaly_la:='zamieszkały'
   ?};
   _slownik
|| ~~
?}


\slownik_urodzon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala napis urodzony/urodzona w zależności od źródła.
::   WE: _a[DICT] - tablica nazwana z elementami źródła "Słownik"
::   WY: napis urodzony/urodzona
::----------------------------------------------------------------------------------------------------------------------
_a.inne.urodzony_na


\slownik_wykonywal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala napis wykonywał/wykonywała w zależności od źródła.
::   WE: _a[DICT] - tablica nazwana z elementami źródła "Słownik"
::   WY: napis wykonywał/wykonywała
::----------------------------------------------------------------------------------------------------------------------
_a.inne.wykonywal_la


\slownik_zamieszkal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala napis zamieszkały/zamieszkała w zależności od źródła.
::   WE: _a[DICT] - tablica nazwana z elementami źródła "Słownik"
::   WY: napis zamieszkały/zamieszkała
::----------------------------------------------------------------------------------------------------------------------
_a.inne.zamieszkaly_la


\slownik_zamieszkujac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala napis zamieszkującym/zamieszkującą w zależności od źródła.
::   WE: _a[DICT] - tablica nazwana z elementami źródła "Słownik"
::   WY: napis zamieszkującym/zamieszkującą
::----------------------------------------------------------------------------------------------------------------------
_a.inne.zamieszkujacym_ca


\slownik_zatrudnion
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala napis zatrudniony/zatrudniona w zależności od źródła.
::   WE: _a[DICT] - tablica nazwana z elementami źródła "Słownik"
::   WY: napis zatrudniony/zatrudniona
::----------------------------------------------------------------------------------------------------------------------
_a.inne.zatrudniony_na


\slownik_zobowiazan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala napis zobowiązany/zobowiązana w zależności od źródła.
::   WE: _a[DICT] - tablica nazwana z elementami źródła "Słownik"
::   WY: napis zobowiązany/zobowiązana
::----------------------------------------------------------------------------------------------------------------------
_a.inne.zobowiazany_na


\stanowiska_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Stanowiska pracownika".
::   WE: _a [REFERENCE] - referencja do pracownika
::       _b [DATE] - data końca okresu, dla którego sprawdzamy
::       _c [DATE] - data początku okresu, dla którego sprawdzamy
::   WY: lista stanowisk dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;
_data_do:={? _b=#0 || '0' || $(_b~1)+'-'+$(_b~2)+'-'+$(_b~3) ?};
_data_od:={? _c=#0 || '0' || $(_c~1)+'-'+$(_c~2)+'-'+$(_c~3) ?};

{? P.seek(_ref_pracownika,,1) & _data_do<>'0'
|| {? _data_od='0'
   || _STANOWISKA:=proc_exec('spst@zasw',$_ref_pracownika,_data_do)
   || _STANOWISKA:=proc_exec('spstod@zasw',$_ref_pracownika,_data_do,_data_od)
   ?};
   {? type_of(_STANOWISKA)<>type_of(~~) || _STANOWISKA || ~~ ?}
|| _STANOWISKA:=tab_tmp(,'ST','STRING[1]','String');
   _STANOWISKA.ST:=' ';
   _STANOWISKA.add();
   _STANOWISKA
?}


\umowa_do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę zakończenia umowy.
::   WE: _a [SYSLOG] - rekord tabeli H_UM
::   WY: Data zakończenia umowy lub '' jeśli data 0000/00/00
::----------------------------------------------------------------------------------------------------------------------
{? H_UM.DO<>date(0,0,0) || H_UM.DO$6+' r.' || '' ?}


\umowa_numer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala numer umowy.
::   WE: _a [SYSLOG] - rekord tabeli H_UM
::   WY: Numer umowy
::----------------------------------------------------------------------------------------------------------------------
H_UM.NUMER


\umowa_od
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę rozpoczęcia umowy.
::   WE: _a [SYSLOG] - rekord tabeli H_UM
::   WY: Data rozpoczęcia umowy
::----------------------------------------------------------------------------------------------------------------------
H_UM.OD$6+' r.'


\umowa_przyczyna_zwol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala przyczynę zwolnienia dla pracownika
::   WE: _a [SYSLOG] - rekord tabeli H_UM
::   WY: przyczyna zwolnienia pracownika
::----------------------------------------------------------------------------------------------------------------------
_przyczyna:='';
{? H_UM.USPKOD
|| H_UM.USPKOD();
   _przyczyna:=S_ZUS.memo_txt(0,1,'OPIS')
|| _przyczyna:=H_UM.ROU().NAZWA
?};
_przyczyna


\umowa_rodzaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala rodzaj umowy dla pracownika wynikający z umowy.
::   WE: _a [SYSLOG] - rekord tabeli H_UM
::   WY: Rodzaj umowy dla pracownika wynikający z umowy
::----------------------------------------------------------------------------------------------------------------------
_a.UMOWA();
_ru:=_a.RU().K;
{? _ru='A'
|| 'okres próbny, do dnia zakończenia %1 r' [H_UM.P_DO$6]
|? ((_ru='B' & H_UM.OKR_UZAS().KOD='1') | _ru='D') & H_UM.P_DO=date(0,0,0)
|| 'czas nieobecności zastępowanego pracownika'
|? _ru='B' & H_UM.P_OD>=date(2016,2,22)
   & H_UM.OKR_UZAS().KOD='1'
|| 'czas nieobecności zastępowanego pracownika, do dnia zakończenia %1 r' [H_UM.P_DO$6]
|? _ru='B' & H_UM.P_OD>=date(2016,2,22)
|| 'czas określony, do dnia zakończenia %1 r' [H_UM.P_DO$6]
|? _ru='C'
|| 'czas nieokreślony'
|? _ru='D'
|| 'zastępstwo, do dnia zakończenia %1 r' [H_UM.P_DO$6]
|? _ru='E'
|| 'czas określony, do dnia porodu'
|| ''
?}


\ustal_precyzje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala prezycję dla podanego wynagrodzenia.
::   WE: _a [REAL] - kwota, dla której należy ustalić precyzję
::   WY: 0/2 - precyzja 0 dla podanej kwoty/precyzja 2 dla podanej kwoty
::----------------------------------------------------------------------------------------------------------------------
_kwota:=_a;

_precyzja:={? _kwota=int(_kwota) || 0 || 2 ?}


\wojsko_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala listę urlopów bezpłatnych w ramach odbywania służby wojskowej dla pracownika.
::   WE: _a [SYSLOG] - tabela z danymi
::   WY: lista urlopów bezpłatnych w ramach odbywania służby wojskowej dla pracownika lub ''
::----------------------------------------------------------------------------------------------------------------------
_a.TEKST


\wojsko_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Okresy odbywania służby wojskowej przez pracownika".
::   WE: _a [REFERENCE] - referencja do pracownika
::       _b [DATE] - data końca okresu, dla którego sprawdzamy
::       _c [DATE] - data początku okresu, dla którego sprawdzamy
::       _d [STRING] - czy zostały wprowadzone dane o wojsku
::       [_e] [INTEGER] - domyślnie 1 dla zapisów przed 22.04.2022, 2 - po tej dacie
::   WY: lista urlopów bezpłatnych w ramach odbywania służby wojskowej dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;
_data_do:={? _b=#0 || '0' || $(_b~1)+'-'+$(_b~2)+'-'+$(_b~3) ?};
_data_od:={? _c=#0 || '0' || $(_c~1)+'-'+$(_c~2)+'-'+$(_c~3) ?};
_wojsko:=_d;
_tekst:={? var_pres('_e')=type_of(0) || _e || 0 ?};
{? P.seek(_ref_pracownika,,1) & _wojsko<>'' & _data_do<>'0'
|| _WOJSKO:=proc_exec('spur@zasw',$_ref_pracownika,_data_do,'O',0,_data_od,_tekst);
   {? type_of(_WOJSKO)<>type_of(~~) || _WOJSKO || ~~ ?}
|| _WOJSKO:=tab_tmp(,'TEKST','STRING[1]','String');
   _WOJSKO.TEKST:=' ';
   _WOJSKO.add();
   _WOJSKO
?}


\wymzatrudnienia_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala wymiar zatrudnienia/listę wymiarów zatrudnienia dla pracownika.
::   WE: _a [SYSLOG] - tabela z danymi
::   WY: wymiar zatrudnienia/listę wymiarów zatrudnienia lub ''
::----------------------------------------------------------------------------------------------------------------------
_a.OPIS


\wymzatrudnienia_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Wymiary zatrudnienia".
::   WE: _a [REFERENCE] - referencja do pracownika
::       _b [DATE] - data końca okresu, dla którego sprawdzamy
::       _c [DATE] - data początku okresu, dla którego sprawdzamy
::   WY: lista wymiarów zatrudnienia dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;
_data_do:={? _b=#0 || '0' || $(_b~1)+'-'+$(_b~2)+'-'+$(_b~3) ?};
_data_od:={? _c=#0 || '0' || $(_c~1)+'-'+$(_c~2)+'-'+$(_c~3) ?};

{? P.seek(_ref_pracownika,,1) & _data_do<>'0'
|| _WYMZATR:=proc_exec('spwy@zasw',$_ref_pracownika,_data_do,_data_od);
   {? type_of(_WYMZATR)<>type_of(~~) || _WYMZATR || ~~ ?}
|| _WYMZATR:=tab_tmp(,'OPIS','STRING[1]','String');
   _WYMZATR.OPIS:=' ';
   _WYMZATR.add();
   _WYMZATR
?}


\zasw_uz_adres_osoby
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala adres osoby dla umowy cywilnoprawnej.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: adres osoby dla umowy cywilnoprawnej
::----------------------------------------------------------------------------------------------------------------------
_ZC:=_a.uchwyt;

_kod:=obj_new(4); _kod[1]:='C'; _kod[2]:='S'; _kod[3]:='K'; _kod[4]:='I';
_licz:=0;
_exit:=0;
{!
|? _licz+=1;
   {? exec('szukaj','osoba',_kod[_licz],_ZC.DZ) || _exit:=1 ?};
   ~_exit & _licz<obj_len(_kod)
!};
{? ~_exit || _licz:=1 ?};
exec('adres','osoba',_kod[_licz],_ZC.DZ)


\zasw_uz_data_zawarcia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę zawarcia umowy cywilnoprawnej.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: data zawarcia umowy cywilnoprawnej
::----------------------------------------------------------------------------------------------------------------------
_a.uchwyt.DZ$4


\zasw_uz_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Zaświadczenie o zatrudnieniu".
::   WE:
::   WY: 0/1 - błąd/przywrócono kontekst
::----------------------------------------------------------------------------------------------------------------------
ZC.cntx_pop()


\zasw_uz_kwota
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala kwotę wypłacaną po realizacji umowy cywilnoprawnej.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: kwota wypłacana po realizacji umowy cywilnoprawnej
::----------------------------------------------------------------------------------------------------------------------
form(_a.uchwyt.KU,,2)+' '+{? _a.uchwyt.CZYWAL='T' || _a.uchwyt.WAL().KOD || 'zł' ?}


\zasw_uz_liczba_dni
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala liczbę dni do zrealizowania w ramach umowy cywilnoprawnej.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: liczba dni do zrealizowania w ramach umowy cywilnoprawnej
::----------------------------------------------------------------------------------------------------------------------
{? (_a.uchwyt.TYP='N' | _a.uchwyt.TYP='M' | _a.uchwyt.TYP='D') & (_a.dane_z_okienka.DNI<>0)
|| $_a.dane_z_okienka.DNI
|| ''
?}


\zasw_uz_liczba_godz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala liczbę godzin do zrealizowania w ramach umowy cywilnoprawnej.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: liczba godzin do zrealizowania w ramach umowy cywilnoprawnej
::----------------------------------------------------------------------------------------------------------------------
{? _a.uchwyt.TYP='G' & (_a.dane_z_okienka.GODZ<>0) || $_a.dane_z_okienka.GODZ || '' ?}


\zasw_uz_numer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala numer umowy cywilnoprawnej.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: numer umowy cywilnoprawnej
::----------------------------------------------------------------------------------------------------------------------
_a.uchwyt.NU


\zasw_uz_okres_do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala koniec trwania okresu umowy cywilnoprawnej.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: koniec trwania okresu umowy cywilnoprawnej
::----------------------------------------------------------------------------------------------------------------------
_a.uchwyt.DW$4


\zasw_uz_okres_od
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala początek trwania okresu umowy cywilnoprawnej.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: początek trwania okresu umowy cywilnoprawnej
::----------------------------------------------------------------------------------------------------------------------
_a.uchwyt.DU$4


\zasw_uz_opis_miesieczne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala opis wynagrodzenia (czy miesięczne) okresu umowy cywilnoprawnej.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: opis wynagrodzenia (czy miesięczne) okresu umowy cywilnoprawnej
::----------------------------------------------------------------------------------------------------------------------
{? _a.uchwyt.TYP='M' || 'miesięczne' || '' ?}


\zasw_uz_opis_rachunek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala opis dla podstawy naliczania wynagrodzenia dla umowy cywilnoprawnej.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: opis dla podstawy naliczania wynagrodzenia dla umowy cywilnoprawnej
::----------------------------------------------------------------------------------------------------------------------
_ZC:=_a.uchwyt;
_dni:=_a.dane_z_okienka.DNI;

_informacja:='';
{? _ZC.TYP='G' | _ZC.TYP='D'
|| _informacja+='Podstawę naliczania wynagrodzenia stanowi rachunek wystawiony przez Zamawiającego.'
|? _ZC.TYP='N'
|| _informacja+='Wynagrodzenie netto wypłacone będzie po dokonaniu stosownych potrąceń w terminie '+$_dni+
   {? _dni=1 || ' dnia' || ' dni' ?}+' od daty wykonania zlecenia.'
|? _ZC.TYP='M'
|| _informacja+='Wynagrodzenie netto wypłacone będzie po dokonaniu stosownych potrąceń w terminie '+$_dni+
   '-go dnia każdego miesiąca.'
?};
_informacja


\zasw_uz_opis_za_dzien
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala opis wynagrodzenia (czy kwota za dzień) okresu umowy cywilnoprawnej.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: opis wynagrodzenia (czy kwota za dzień) okresu umowy cywilnoprawnej
::----------------------------------------------------------------------------------------------------------------------
_informacja:='';
{? _a.uchwyt.TYP='D'
|| _informacja+='/dzień'+{? _a.uchwyt.DNI<>0 || ' w przewidywanym wymiarze '+$_a.uchwyt.DNI+' dni.' ?}
?};
_informacja


\zasw_uz_opis_za_godzine
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala opis wynagrodzenia (czy kwota za godzinę) okresu umowy cywilnoprawnej.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: opis wynagrodzenia (czy kwota za godzinę) okresu umowy cywilnoprawnej
::----------------------------------------------------------------------------------------------------------------------
_informacja:='';
{? _a.uchwyt.TYP='G'
|| _godz:=_a.dane_z_okienka.GODZ;
   _informacja+='/godzinę'+{? _godz<>0 || ' w przewidywanym wymiarze '+$_godz+' godzin.' || '.' ?}
?};
_informacja


\zasw_uz_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachowuje kontekst dla tabel dla źródła "Umowy cywilnoprawne".
::   WE:
::   WY: 0/1 - błąd/zachowano kontekst
::----------------------------------------------------------------------------------------------------------------------
ZC.cntx_psh()


\zasw_uz_przedmiot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala przedmiot umowy cywilnoprawnej.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: przedmiot umowy cywilnoprawnej lub ''
::----------------------------------------------------------------------------------------------------------------------
_tresc:=_a.dane_z_okienka.TRESC;

{? type_of(_tresc)>100
|| _tresc.co+_tresc.co_1+_tresc.co_2+_tresc.co_3+_tresc.co_4
|| _tresc
?}


\zasw_uz_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Umowy cywilnoprawne".
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::       _b [DICT] - tablica przekazanych parametrów
::   WY: referencja do rekordu ZC lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref_umowy:=_a;
_parametry:=_b;

_zc:=obj_new('uchwyt','dane_z_okienka');

_zc.dane_z_okienka:=obj_new('DNI','GODZ','TRESC','ZLECENIODAWCA');
_zc.dane_z_okienka.DNI:=0;
_zc.dane_z_okienka.GODZ:=0;
_zc.dane_z_okienka.TRESC:='';
_zc.dane_z_okienka.ZLECENIODAWCA:='';

{? ZC.first() & ZC.seek(_ref_umowy,,1)
|| _zc.uchwyt:=ZC;
   _zc.dane_z_okienka.DNI:=_parametry.zc.dni;
   _zc.dane_z_okienka.GODZ:=_parametry.zc.godz;
   _zc.dane_z_okienka.TRESC:=_parametry.zc.tresc;
   _zc.dane_z_okienka.ZLECENIODAWCA:=_parametry.zc.zleceniodawca;
   _zc
|| ~~
?}


\zasw_uz_zleceniodawca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala zleceniodawcę.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: zleceniodawca lub ''
::----------------------------------------------------------------------------------------------------------------------
_a.dane_z_okienka.ZLECENIODAWCA


\zaswbwyp_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Rozwiązanie umowy bez wypowiedzenia".
::   WE: _a [REFERENCE] - referencja do pracownika
::   WY: tablica nazwana z danymi lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;
_data_rozwiazania:=_b;
_przyczyna_rozwiazania:=_c;
_sad_pracy:=_d;
_komisja:=_e;
_data_zawarcia:=_f;

{? P.seek(_ref_pracownika,,1)
|| _dane_do_rozwiazania:=obj_new('Data_zawarcia','Data_rozwiazania','Powod','Sad','Komisja');
   _dane_do_rozwiazania.Data_zawarcia:=_data_zawarcia;
   _dane_do_rozwiazania.Data_rozwiazania:=_data_rozwiazania;
   _dane_do_rozwiazania.Powod:=_przyczyna_rozwiazania;
   _dane_do_rozwiazania.Sad:=_sad_pracy;
   _dane_do_rozwiazania.Komisja:=_komisja;
   _dane_do_rozwiazania
|| ~~
?}


\zaswiadczenie_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę zaświadczenia.
::   WE: _a [DATE] - przekazana data
::   WY: data zaświadczenia
::----------------------------------------------------------------------------------------------------------------------
_a.Data$6+' r.'


\zaswiadczenie_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Zaświadczenie".
::   WE:
::   WY: 0/1 - błąd/przywrócono kontekst
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.cntx_pop()


\zaswiadczenie_miejsce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala miejsce zaświadczenia.
::   WE: _a [DATE] - przekazana data
::   WY: miejsce zaświadczenia
::----------------------------------------------------------------------------------------------------------------------
_a.Miejsce


\zaswiadczenie_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachowuje kontekst dla tabel dla źródła "Zaświadczenie".
::   WE:
::   WY: 0/1 - błąd/zachowano kontekst
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.cntx_psh()


\zaswiadczenie_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Zaświadczenie".
::   WE: _a [DATE] - przekazana data
::   WY: tablica nazwana z danymi lub ~~
::----------------------------------------------------------------------------------------------------------------------
_data:=_a;

_dane_zaswiadczenia:=obj_new('Data','Miejsce');
_dane_zaswiadczenia.Data:=_data;
_dane_zaswiadczenia.Miejsce:=PAR_WYDR.MIEJSC;
_dane_zaswiadczenia


\zaswplac_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Dane osobowe pracownika"
::   WE:
::   WY: 0/1 - nie udało się przywrócić kontekstu/udało się przywrócić kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_pop();
H.cntx_pop()


\zaswplac_adres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Ustala adres pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: Adres pracownika
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;

_adres:='';
{? _H.OS_ADRES<>null()
|| _adres:=exec('adres','osoba',_H.OS_ADRES().RODZAJ,_H.OS_ADRES().OD)
?};
_adres


\zaswplac_data_decyzji
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę decyzji w sprawie przeszeregowania.
::   WE: _a [DATE] - przekazana data decyzji
::   WY: data decyzji w sprawie przeszeregowania
::----------------------------------------------------------------------------------------------------------------------
{? _a<>date(0,0,0) || _a$6+' r.' || ''?}


\zaswplac_data_od
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę początku zmian w związku z przeszeregowaniem.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: data początku zmian w związku z przeszeregowaniem
::----------------------------------------------------------------------------------------------------------------------
_a.OD$6+' r.'


\zaswplac_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachwouje kontekst dla tabel dla źródła danych "Przeszeregowanie"
::   WE:
::   WY: 0/1 - nie udało się zachować kontekstu/udało się zachować kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
H.cntx_psh()


\zaswplac_opis_bez_zmian
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację dotyczącą składników wynagrodzenia pracownika.
::   WE: _a [DICT] - tablica nazwana z opisami dla szablonu
::   WY: informacja o tym, że składniki wynagrodzenia w stosunku do składników przed przeszeregowaniem nie ulegają
::       zmianie lub pusty ciąg znaków
::----------------------------------------------------------------------------------------------------------------------
_opisy:=_a;

{? type_of(_opisy)>100 || _opisy.Opis_bez_zmian || '' ?}


\zaswplac_opis_pozostale
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala, czy którykolwiek ze składników nie uległ zmianie.
::   WE: _a [DICT] - tablica nazwana z opisami dla szablonu
::   WY: informacja o tym, że jeden lub więcej składników nie uległ zmianie w porównaniu do poprzedniego okresu
::       zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_opisy:=_a;

{? type_of(_opisy)>100 || _opisy.Opis_pozostale || '' ?}


\zaswplac_opis_skladnik1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację dotyczącą pierwszego ze składników wynagrodzenia pracownika(czy uległ zmianie).
::   WE: _a [DICT] - tablica nazwana z opisami dla szablonu
::   WY: informacja o tym, że składnik pierwszy wynagrodzenia w porównaniu do poprzedniego okresu zatrudnienia ulega
::       zmianie
::----------------------------------------------------------------------------------------------------------------------
_opisy:=_a;

{? type_of(_opisy)>100 & _opisy.Opis_skladnik1<>'' || _opisy.Opis_skladnik1 || '' ?}


\zaswplac_opis_skladnik2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację dotyczącą drugiego ze składników wynagrodzenia pracownika(czy uległ zmianie).
::   WE: _a [DICT] - tablica nazwana z opisami dla szablonu
::   WY: informacja o tym, że składnik drugi wynagrodzenia w porównaniu do poprzedniego okresu zatrudnienia ulega
::       zmianie
::----------------------------------------------------------------------------------------------------------------------
_opisy:=_a;

{? type_of(_opisy)>100 & _opisy.Opis_skladnik2<>'' || _opisy.Opis_skladnik2 || '' ?}


\zaswplac_opis_skladnik3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację dotyczącą trzeciego ze składników wynagrodzenia pracownika(czy uległ zmianie).
::   WE: _a [DICT] - tablica nazwana z opisami dla szablonu
::   WY: informacja o tym, że składnik trzeci wynagrodzenia w porównaniu do poprzedniego okresu zatrudnienia ulega
::       zmianie
::----------------------------------------------------------------------------------------------------------------------
_opisy:=_a;

{? type_of(_opisy)>100 & _opisy.Opis_skladnik3<>'' || _opisy.Opis_skladnik3 || '' ?}


\zaswplac_opis_skladnik4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [22.26]
:: OPIS: Ustala informację dotyczącą czwartego ze składników wynagrodzenia pracownika(czy uległ zmianie).
::   WE: _a [DICT] - tablica nazwana z opisami dla szablonu
::   WY: informacja o tym, że składnik czwarty wynagrodzenia w porównaniu do poprzedniego okresu zatrudnienia ulega
::       zmianie
::----------------------------------------------------------------------------------------------------------------------
_opisy:=_a;

{? type_of(_opisy)>100 & _opisy.Opis_skladnik4<>'' || _opisy.Opis_skladnik4 || '' ?}


\zaswplac_opisy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Z podanej tablicy zawierającej informacje o skłądnikach wynagrodzenia wyciąga część opisową.
::   WE: _a [DICT] - tablica nazwana z informacjami o składnikach wynagrodzenia dla szablonu
::   WY: część opisowa na temat składników wynagrodzenia
::----------------------------------------------------------------------------------------------------------------------
_skladniki:=_a;

{? type_of(_skladniki)>100 || _skladniki.Opisy_zmian_skladnikow || '' ?}


\zaswplac_osoba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Zwraca etykietę dla osoby na podstawie danych wpisanych do zatrudnienia.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: etykieta dla osoby na podstawie danych wpisanych do zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;

_etykieta:=_H.P().OSOBA().PIERWSZE+{? +OSOBA.DRUGIE || ' '+OSOBA.DRUGIE || '' ?}+' '+OSOBA.NAZWISKO+
           ', zamieszkał'+{? OSOBA.PLEC='K' || 'a' || 'y' ?}+' '+
           {? _H.OS_ADRES<>null()
           || exec('adres','osoba',_H.OS_ADRES().RODZAJ,_H.OS_ADRES().OD)
           || _adres:=exec('adres','osoba','C',_H.OD);
              {? _adres='' || _adres:=exec('adres','osoba','S',_H.OD) ?};
              _adres
           ?}


\zaswplac_skladniki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację dotyczącą składników wynagrodzenia pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: tablica nazwana zawierająca informacje o składnikach wynagrodzenia, oraz opisy potrzebne do standardowej wersji
::       szablonu zaświadczenia o przeszeregowaniu
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;

_skladnik1:=_H.S1;
_skladnik2:=_H.S2;
_skladnik3:=_H.S3;
_skladnik4:=_H.S4;

_waluta_skladnik1:={? _H.CZYWAL='T'   || _H.WAL().KOD || 'zł' ?};
_waluta_skladnik2:={? _H.CZYWAL2='T' || _H.WAL().KOD || 'zł' ?};
_waluta_skladnik3:={? _H.CZYWAL3='T' || _H.WAL().KOD || 'zł' ?};
_waluta_skladnik4:={? _H.CZYWAL4='T' || _H.WAL().KOD || 'zł' ?};

_skladnik2_typ:=_H.S2T;
_skladnik2_podstawa:=_H.S2P().NAZWA;
_skladnik3_typ:=_H.S3T;
_skladnik3_podstawa:=_H.S3P().NAZWA;

_skladniki:=obj_new('Skladniki','Opisy_zmian_skladnikow');

_skladniki.Skladniki:=obj_new('Skladnik1','Skladnik2','Skladnik3','Skladnik4',
                              'Skladnik1_prev','Skladnik2_prev','Skladnik3_prev','Skladnik4_prev');
_skladniki.Opisy_zmian_skladnikow:=obj_new('Opis_bez_zmian','Opis_skladnik1','Opis_skladnik2','Opis_skladnik3',
                                           'Opis_skladnik4','Opis_pozostale');

_H.cntx_psh();
{? _ok:=_H.prev()
|| _skladniki.Skladniki.Skladnik1_prev:=exec('oblicz_s1','szablon_rek',_H);
   _skladniki.Skladniki.Skladnik2_prev:=exec('oblicz_s2','szablon_rek',_H);
   _skladniki.Skladniki.Skladnik3_prev:=exec('oblicz_s3','szablon_rek',_H);
   _skladniki.Skladniki.Skladnik4_prev:=exec('oblicz_s4','szablon_rek',_H);

   _skladnik1_prev:=_H.S1;
   _skladnik2_prev:=_H.S2;
   _skladnik3_prev:=_H.S3;
   _skladnik4_prev:=_H.S4;

   _waluta_skladnik1_prev:={? _H.CZYWAL='T' || _H.WAL().KOD || 'zł' ?};
   _waluta_skladnik2_prev:={? _H.CZYWAL2='T' || _H.WAL().KOD || 'zł' ?};
   _waluta_skladnik3_prev:={? _H.CZYWAL3='T' || _H.WAL().KOD || 'zł' ?};
   _waluta_skladnik4_prev:={? _H.CZYWAL4='T' || _H.WAL().KOD || 'zł' ?};

   _skladnik2_typ_prev:=_H.S2T;
   _skladnik2_podstawa_prev:=_H.S2P().NAZWA;
   _skladnik3_typ_prev:=_H.S3T;
   _skladnik3_podstawa_prev:=_H.S3P().NAZWA
?};
_H.cntx_pop();
{? ~_ok
|| return('')
?};

_skladniki.Skladniki.Skladnik1:=exec('oblicz_s1','szablon_rek',_H);
_skladniki.Skladniki.Skladnik2:=exec('oblicz_s2','szablon_rek',_H);
_skladniki.Skladniki.Skladnik3:=exec('oblicz_s3','szablon_rek',_H);
_skladniki.Skladniki.Skladnik4:=exec('oblicz_s4','szablon_rek',_H);

_czy_s1_rozne:={? (_skladnik1<>_skladnik1_prev | _waluta_skladnik1<>_waluta_skladnik1_prev)
               || _skladniki.Opisy_zmian_skladnikow.Opis_skladnik1:=exec('zatrudnienie_kwota_liczbowo','szablon_rek',
                  exec('oblicz_s1','szablon_rek',_H,'zaswplac',1));
                  1
               || _skladniki.Opisy_zmian_skladnikow.Opis_skladnik1:='';
                  0 ?};
_czy_s2_rozne:={? _skladnik2<>_skladnik2_prev | _waluta_skladnik2<>_waluta_skladnik2_prev
               | _skladnik2_podstawa<>_skladnik2_podstawa_prev | _skladnik2_typ<>_skladnik2_typ_prev
               || _skladniki.Opisy_zmian_skladnikow.Opis_skladnik2:=exec('zatrudnienie_kwota_liczbowo','szablon_rek',
                  exec('oblicz_s2','szablon_rek',_H,'zaswplac',1));
                  1
               || _skladniki.Opisy_zmian_skladnikow.Opis_skladnik2:='';
                  0
               ?};
_czy_s3_rozne:={? _skladnik3<>_skladnik3_prev | _waluta_skladnik3<>_waluta_skladnik3_prev
               | _skladnik3_podstawa<>_skladnik3_podstawa_prev | _skladnik3_typ<>_skladnik3_typ_prev
                 || _skladniki.Opisy_zmian_skladnikow.Opis_skladnik3:=exec('zatrudnienie_kwota_liczbowo','szablon_rek',
                    exec('oblicz_s3','szablon_rek',_H,'zaswplac',1));
                    1
                 || _skladniki.Opisy_zmian_skladnikow.Opis_skladnik3:='';
                    0
                 ?};
_czy_s4_rozne:={? _skladnik4<>_skladnik4_prev | _waluta_skladnik4<>_waluta_skladnik4_prev
                 || _skladniki.Opisy_zmian_skladnikow.Opis_skladnik4:=exec('zatrudnienie_kwota_liczbowo','szablon_rek',
                    exec('oblicz_s4','szablon_rek',_H,'zaswplac',1,1,1));
                    1
                 || _skladniki.Opisy_zmian_skladnikow.Opis_skladnik4:='';
                    0
                 ?};

{? _czy_s1_rozne=0 & _czy_s2_rozne=0 & _czy_s3_rozne=0 & _czy_s4_rozne=0
|| _skladniki.Opisy_zmian_skladnikow.Opis_bez_zmian:='składniki wynagrodzenia pozostają bez zmian.'
|| _skladniki.Opisy_zmian_skladnikow.Opis_bez_zmian:=''
?};

{? (_czy_s1_rozne=0 | _czy_s2_rozne=0 | _czy_s3_rozne=0 | _czy_s4_rozne=0) &
   (+_skladniki.Opisy_zmian_skladnikow.Opis_bez_zmian=0)
|| _skladniki.Opisy_zmian_skladnikow.Opis_pozostale:='Pozostałe składniki wynagrodzenia pozostają bez zmian.'
|| _skladniki.Opisy_zmian_skladnikow.Opis_pozostale:=''
?};

_skladniki


\zaswplac_skladnik1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala pierwszy składnik wynagrodzenia dla zmian związanych z przeszeregowaniem.
::   WE: _a [DICT] - tablica nazwana z informacjami na temat składników
::   WY: pierwszy składnik wynagrodzenia dla zmian związanych z przeszeregowaniem
::----------------------------------------------------------------------------------------------------------------------
_wartosci:=_a;

{? type_of(_wartosci)>100 & type_of(_wartosci.Skladnik1)>100 || _wartosci.Skladnik1 || '' ?}


\zaswplac_skladnik2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala drugi składnik wynagrodzenia dla zmian związanych z przeszeregowaniem.
::   WE: _a [DICT] - tablica nazwana z informacjami na temat składników
::   WY: drugi składnik wynagrodzenia dla zmian związanych z przeszeregowaniem
::----------------------------------------------------------------------------------------------------------------------
_wartosci:=_a;

{? type_of(_wartosci)>100 & type_of(_wartosci.Skladnik2)>100 || _wartosci.Skladnik2 || '' ?}


\zaswplac_skladnik3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala trzeci składnik wynagrodzenia dla zmian związanych z przeszeregowaniem.
::   WE: _a [DICT] - tablica nazwana z informacjami na temat składników
::   WY: trzeci składnik wynagrodzenia dla zmian związanych z przeszeregowaniem
::----------------------------------------------------------------------------------------------------------------------
_wartosci:=_a;

{? type_of(_wartosci)>100 & type_of(_wartosci.Skladnik3)>100 || _wartosci.Skladnik3 || '' ?}


\zaswplac_skladnik4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [22.26]
:: OPIS: Ustala czwarty składnik wynagrodzenia dla zmian związanych z przeszeregowaniem.
::   WE: _a [DICT] - tablica nazwana z informacjami na temat składników
::   WY: czwarty składnik wynagrodzenia dla zmian związanych z przeszeregowaniem
::----------------------------------------------------------------------------------------------------------------------
_wartosci:=_a;

{? type_of(_wartosci)>100 & type_of(_wartosci.Skladnik4)>100 || _wartosci.Skladnik4 || '' ?}


\zaswplac_stanowisko_poprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala poprzednie stanowisko pracownika w związku z przeszeregowaniem.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: poprzednie stanowisko pracownika
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;

_stanowisko_poprz:='';
_H.cntx_psh();
{? _a.prev() || _stanowisko_poprz:=_a.ST().ST || '' ?};
_H.cntx_pop();
_stanowisko_poprz


\zaswplac_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Przeszeregowanie".
::   WE: _a [DATE] - data decyzji
::       _b [DATE] - data od (okresu, dla którego szukamy danych)
::       _c [DATE] - data do (okresu, dla którego szukamy danych)
::       _d {STRING] - referencja do pracwonika, dla którego poszukujemy danych
::       _e [STRING] - referencja do okresu zatrudnienia, dla którego poszukujemy danych
::   WY: zestaw danych dla źródła "Przeszeregowanie"
::----------------------------------------------------------------------------------------------------------------------
_data_decyzji:=_a;
_data_od:=_b;
_data_do:=_c;
_ref_pracownika:=_d;
_ref_zatrudnienia:=_e;

_error_info:="FUN.emsg('Bieżący zapis nie jest przeszeregowaniem.'@)";

_uchwyt_do_H:={? +_ref_pracownika & _ref_zatrudnienia=''
              || _ref_zatrudnienia:=exec('pobierz_ref_zatrudnienia','szablon_rek',_ref_pracownika,'zaswplac_ref_P',
                 _data_od,_data_do);
                 {? type_of(_ref_zatrudnienia)<>type_of(~~) & H.seek(_ref_zatrudnienia,,1)
                 || H.cntx_psh();
                    _czy_poprzedni:={? H.prev() || 1 || 0 ?};
                    H.cntx_pop();
                    {? _czy_poprzedni & H.seek(_ref_zatrudnienia,,1) || H || ~~ ?}
                 || ~~
                 ?}
              |? _ref_pracownika='' & +_ref_zatrudnienia
              || _ref_zatrudnienia:=exec('pobierz_ref_zatrudnienia','szablon_rek',_ref_zatrudnienia,'zaswplac_ref_H',
                 _data_od,_data_do);
                 {? type_of(_ref_zatrudnienia)<>type_of(~~) & H.seek(_ref_zatrudnienia,,1)
                 || H.cntx_psh();
                    _czy_poprzedni:={? H.prev() || 1 || 0 ?};
                    H.cntx_pop();
                    {? _czy_poprzedni || H || ~~ ?}
                 || ~~
                 ?}
              || ~~
              ?};
{? type_of(_uchwyt_do_H)<>type_of(~~)
|| _uchwyt_do_H
|| _error_info();
   ~~
?}


\zaswplac_wartosci
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Z podanej tablicy zawierającej informacje o skłądnikach wynagrodzenia wyciąga część zawierającą wartości.
::   WE: _a [DICT] - tablica nazwana z informacjami o składnikach wynagrodzenia dla szablonu
::   WY: część zawierająca wartości składników wynagrodzenia
::----------------------------------------------------------------------------------------------------------------------
_skladniki:=_a;

{? type_of(_skladniki)>100 || _skladniki.Skladniki || '' ?}


\zaswprzechowanie_adres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala adres osoby do wykazania na zaświadczeniu dotyczącemu odbioru dokumentacji pracowniczej.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi przechowania akt
::   WY: adres osoby do wykazania na zaświadczeniu dotyczącemu odbioru dokumentacji pracowniczej
::----------------------------------------------------------------------------------------------------------------------
_a.Adres


\zaswprzechowanie_adres_kraj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala adres (miasto) osoby do wykazania na zaświadczeniu dotyczącemu odbioru dokumentacji pracowniczej.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi adresu
::   WY: adres (miasto) osoby do wykazania na zaświadczeniu dotyczącemu odbioru dokumentacji pracowniczej
::----------------------------------------------------------------------------------------------------------------------
_a.Kraj


\zaswprzechowanie_adres_miasto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala adres (miasto) osoby do wykazania na zaświadczeniu dotyczącemu odbioru dokumentacji pracowniczej.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi adresu
::   WY: adres (miasto) osoby do wykazania na zaświadczeniu dotyczącemu odbioru dokumentacji pracowniczej
::----------------------------------------------------------------------------------------------------------------------
_a.Miasto


\zaswprzechowanie_adres_pobierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala adres osoby do wykazania na zaświadczeniu dotyczącemu odbioru dokumentacji pracowniczej.
::   WE:
::   WY: adres osoby do wykazania na zaświadczeniu dotyczącemu odbioru dokumentacji pracowniczej
::----------------------------------------------------------------------------------------------------------------------
_symbol:=spli_str('S,C,K,I',',');
_ulica:=_miasto:=_poczta:=_kraj:='';

{! _ii:=1 .. obj_len(_symbol)
|! {? _ulica='' & _miasto='' & _poczta='' & _kraj=''
   & exec('szukaj','osoba',_symbol[_ii],{? P.DZ=date(0,0,0) || date() || P.DZ ?})
   || _ulica:=exec('ulica','osoba');
      {? ~-OS_ADRES.MIASTO<>~-OS_ADRES.POCZTA || _miasto:=OS_ADRES.MIASTO ?};
      _poczta:=exec('poczta','osoba');
      _kraj:={? ~-OS_ADRES.KRAJ().SYM<>'PL' || ~-OS_ADRES.KRAJ().NAZ || '' ?}
   ?}
!};
_adres:=obj_new('Ulica','Miasto','Poczta','Kraj');
_adres.Ulica:=_ulica;
_adres.Miasto:=_miasto;
_adres.Poczta:=_poczta;
_adres.Kraj:=_kraj;
_adres


\zaswprzechowanie_adres_poczta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala adres (pocztę) osoby do wykazania na zaświadczeniu dotyczącemu odbioru dokumentacji pracowniczej.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi adresu
::   WY: adres (poczta) osoby do wykazania na zaświadczeniu dotyczącemu odbioru dokumentacji pracowniczej
::----------------------------------------------------------------------------------------------------------------------
_a.Poczta


\zaswprzechowanie_adres_ulica
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala adres (ulicę) osoby do wykazania na zaświadczeniu dotyczącemu odbioru dokumentacji pracowniczej.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi adresu
::   WY: adres (ulica) osoby do wykazania na zaświadczeniu dotyczącemu odbioru dokumentacji pracowniczej
::----------------------------------------------------------------------------------------------------------------------
_a.Ulica


\zaswprzechowanie_data_rozw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę rozwiązania stosunku pracy z ostatniego okresu zatrudnienia pracownika.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi przechowania akt
::   WY: data rozwiązania stosunku pracy z ostatniego okresu zatrudnienia pracownika
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;

H_UM.index('OD');
H_UM.prefix(_ref_pracownika);
{? H_UM.last()
|| H_UM.DO$6+' r.'
|| ''
?}


\zaswprzechowanie_data_zatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę zatrudnienia z ostatniego okresu zatrudnienia pracownika.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi przechowania akt
::   WY: data zatrudnienia z ostatniego okresu zatrudnienia pracownika
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;

H_UM.index('OD');
H_UM.prefix(_ref_pracownika);
{? H_UM.last()
|| H_UM.OD$6+' r.'
|| ''
?}


\zaswprzechowanie_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Przechowanie akt".
::   WE:
::   WY: 0/1 - błąd/przywrócono kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_pop();
KART_DEF.cntx_pop();
KART_DOD.cntx_pop();
H_UM.cntx_pop();
OSOBA.cntx_pop();
OS_ADRES.cntx_pop()


\zaswprzechowanie_odbior_do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala końcową datę możliwości odbioru dokumentacji pracowniczej.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi przechowania akt
::   WY: końcowa data możliwości odbioru dokumentacji pracowniczej
::----------------------------------------------------------------------------------------------------------------------
_przechowanie_dane:=_a;

{? type_of(_przechowanie_dane)>100 || _przechowanie_dane.Odbior_do$6+' r.' || '' ?}


\zaswprzechowanie_odbior_od
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala początkową datę możliwości odbioru dokumentacji pracowniczej.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi przechowania akt
::   WY: początkowa data możliwości odbioru dokumentacji pracowniczej
::----------------------------------------------------------------------------------------------------------------------
_przechowanie_dane:=_a;

{? type_of(_przechowanie_dane)>100 || _przechowanie_dane.Odbior_od$6+' r.' || '' ?}


\zaswprzechowanie_okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala po ilu latach pracownik może odebrać swoją dokumentację pracowniczą.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi przechowania akt
::   WY: okres (w latach) po jakim pracownik może odebrać swoją dokumentację pracowniczą
::----------------------------------------------------------------------------------------------------------------------
_przechowanie_dane:=_a;

{? type_of(_przechowanie_dane)>100 || $_przechowanie_dane.Okres_lata || '' ?}


\zaswprzechowanie_opis_okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala opis do przekazania na zaświadczenie o przechowaniu akt w zależności od okresu.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi przechowania akt
::   WY: opis do przekazania na zaświadczenie o przechowaniu akt w zależności od okresu
::----------------------------------------------------------------------------------------------------------------------
_przechowanie_dane:=_a;

_informacja:='';

{? type_of(_przechowanie_dane)>100
|| {? _przechowanie_dane.Okres_lata=10
   || {? _przechowanie_dane.ZUS_RIA>0
      || _informacja+='końca roku kalendarzowego, w którym do ZUS został przekazany raport informacyjny ZUS RIA'
      || _informacja+='końca roku kalendarzowego, w którym stosunek pracy uległ rozwiązaniu lub wygasł'
      ?}
   || _informacja+='dnia, w którym stosunek pracy uległ rozwiązaniu lub wygasł'
   ?}
?};
_informacja


\zaswprzechowanie_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachowuje kontekst dla tabel dla źródła "Przechowanie akt".
::   WE:
::   WY: 0/1 - błąd/zachowano kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
KART_DEF.cntx_psh();
KART_DOD.cntx_psh();
H_UM.cntx_psh();
OSOBA.cntx_psh();
OS_ADRES.cntx_psh()


\zaswprzechowanie_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Przechowanie akt".
::   WE: _a [REFERENCE] - referencja do rekordu P
::       _b [REFERENCE] - referencja do tabeli KART_DEF
::       _c [DICT] - przekazane parametry
::   WY: zestaw danych dla źródła "Przechowanie akt"
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;
_ref_kart_def:=_b;
_data_rozpoczecia:=_c.przechowywanie.data_rozpoczecia;
_data_zakonczenia:=_c.przechowywanie.data_zakonczenia;

_data_zmian:=date(2018,12,0);

_przechowanie_dane:=obj_new('Okres_lata','Odbior_od','Odbior_do','ZUS_RIA','Adres');

{? P.seek(_ref_pracownika,,1) & KART_DEF.seek(_ref_kart_def,,1)
|| _przechowanie_dane.Adres:=exec('zaswprzechowanie_adres_pobierz','szablon_rek');
   KART_DOD.index('KART_DOD');
   {? KART_DEF.first()
   || KART_DOD.prefix(exec('ref_firma','ustawienia'),KART_DEF.ref())
   ?};
   _przechowanie_dane.Okres_lata:=10;
   _przechowanie_dane.ZUS_RIA:=0;
   {? _data_rozpoczecia>_data_zmian
   || _przechowanie_dane.Odbior_od:=date((_data_zakonczenia~1)+11,1,1);
      _przechowanie_dane.Odbior_do:=date((_data_zakonczenia~1)+11,1,0)
   || {? KART_DEF.first() & KART_DOD.find_key(P.OSOBA().ref()) & KART_DOD.OD<>date(0,0,0)
      || _przechowanie_dane.ZUS_RIA:=1;
         _przechowanie_dane.Odbior_od:=date((KART_DOD.OD~1)+11,1,1);
         _przechowanie_dane.Odbior_do:=date((KART_DOD.OD~1)+11,1,0)
      || _przechowanie_dane.Okres_lata:=50;
         _rok:=(_data_zakonczenia~1)+50;
         _miesiac:=_data_zakonczenia~2;
         _dzien:=_data_zakonczenia~3;
         _data_poczatku_odbioru:=date(_rok,_miesiac,0);
         {? _dzien<_data_poczatku_odbioru~3 || _data_poczatku_odbioru:=date(_rok,_miesiac,_dzien) ?};
         _przechowanie_dane.Odbior_od:=_data_poczatku_odbioru+1;

         {? exec('pierwszy_dzien_miesiaca','szablon_rek',_data_poczatku_odbioru)
         || _data_konca_odbioru:=date(_data_poczatku_odbioru~1,_data_poczatku_odbioru~2,0)
         |? exec('pierwszy_dzien_miesiaca','szablon_rek',_data_poczatku_odbioru+1)
         || _data_poczatku_odbioru+=1;
            _data_konca_odbioru:=date(_data_poczatku_odbioru~1,_data_poczatku_odbioru~2,0)
         || _data_przewidywana:=date(_data_poczatku_odbioru~1,_data_poczatku_odbioru~2,0)+1;
            _data_przewidywana:=date(_data_przewidywana~1,_data_przewidywana~2,0);
            _data_konca_odbioru:={? _data_poczatku_odbioru~3<=_data_przewidywana~3
                                 || date(_data_przewidywana~1,_data_przewidywana~2,(_data_poczatku_odbioru~3)-1)
                                 || _data_przewidywana
                                 ?}
         ?};
         _przechowanie_dane.Odbior_do:=_data_konca_odbioru
      ?}
   ?}
?};
_przechowanie_dane


\zaswrodz_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Zaświadczenie do zasiłku rodzinnego".
::   WE:
::   WY: 0/1 - błąd/przywrócono kontekst
::----------------------------------------------------------------------------------------------------------------------
O.cntx_pop();
P.cntx_pop();
H.cntx_pop();
FUNKCJE.OTWOLIST()


\zaswrodz_kwota
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala kwotę zarobków w danym roku dla zaświadczenia do zasiłku rodzinnego.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi zaświadczenia do zasiłku rodzinnego
::   WY: kwota zarobków w danym roku dla zaświadczenia do zasiłku rodzinnego
::----------------------------------------------------------------------------------------------------------------------
_dane_zasilek_rodz:=_a;

{? type_of(_dane_zasilek_rodz)>100 || _dane_zasilek_rodz.Kwota + ' zł' || '' ?}


\zaswrodz_kwota_slownie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala kwotę (słownie) zarobków w danym roku dla zaświadczenia do zasiłku rodzinnego.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi zaświadczenia do zasiłku rodzinnego
::   WY: kwota (słownie) zarobków w danym roku dla zaświadczenia do zasiłku rodzinnego
::----------------------------------------------------------------------------------------------------------------------
_dane_zasilek_rodz:=_a;

{? type_of(_dane_zasilek_rodz)>100 || '(słownie: '+_dane_zasilek_rodz.Kwota_slownie+')' || '' ?}


\zaswrodz_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachowuje kontekst dla tabel dla źródła "Zaświadczenie do zasiłku rodzinnego".
::   WE:
::   WY: 0/1 - błąd/zachowano kontekst
::----------------------------------------------------------------------------------------------------------------------
O.cntx_psh();
P.cntx_psh();
H.cntx_psh()


\zaswrodz_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala rok dla zaświadczenia do zasiłku rodzinnego.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi zaświadczenia do zasiłku rodzinnego
::   WY: rok dla zaświadczenia do zasiłku rodzinnego
::----------------------------------------------------------------------------------------------------------------------
_dane_zasilek_rodz:=_a;

{? type_of(_dane_zasilek_rodz)>100 || $_dane_zasilek_rodz.Rok+' r.' || '' ?}


\zaswrodz_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Zaświadczenie do zasiłku rodzinnego".
::   WE: _a [REFERENCE] - referencja do pracownika
::       _b [INTEGER] - rok, dla którego tworzone jest zaświadczenie
::   WY: tablica nazwana z danymi lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;
_rok:=_b;

_dane_do_zaswiadczenia:=obj_new('Rok','Kwota','Kwota_slownie');
_dane_do_zaswiadczenia.Rok:=_rok;
_dane_do_zaswiadczenia.Kwota:=form(0,,2);
_dane_do_zaswiadczenia.Kwota_slownie:=STR.kwota_sł(0);

{? P.seek(_ref_pracownika,,1)
||
   {? var_pres('__F_ZATR')<0 || exec('__F_ZATR','object') ?};
   {? var_pres('FUNKCJE')<0 || exec('FUNKCJE','object') ?};

   _skladniki:=obj_new('Przychod','Zasilek_wychowawczy','Wyrownanie_zasilku_wych','Koszty_uzyskania','Alimenty');
   _skladniki.Przychod:=780;
   _skladniki.Zasilek_wychowawczy:=520;
   _skladniki.Wyrownanie_zasilku_wych:=521;
   _skladniki.Koszty_uzyskania:=784;
   _skladniki.Alimenty:=824;

   _kwota_do_wykazania:=0;

   O.index('LISTYPLA');
   O.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P,_rok);
   {? _dany_okres:=O.first()
   || {!
      |? _dany_okres
      |!
         FUNKCJE.OTWOLIST();
         _Prac:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.DRUGIE;
         _kwota_do_wykazania+=FUNKCJE.L(_skladniki.Przychod);
         _kwota_do_wykazania+=FUNKCJE.L(_skladniki.Zasilek_wychowawczy)+FUNKCJE.L(_skladniki.Wyrownanie_zasilku_wych);
         _kwota_do_wykazania-=FUNKCJE.L(_skladniki.Koszty_uzyskania)+FUNKCJE.L(_skladniki.Alimenty);
         _dany_okres:=O.next()
      !};

      _dane_do_zaswiadczenia.Kwota:=form(_kwota_do_wykazania,,2);
      _dane_do_zaswiadczenia.Kwota_slownie:=STR.kwota_sł(_kwota_do_wykazania)
   ?}
?};
_dane_do_zaswiadczenia


\zaswroz_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę rozwiązania umowy dla pracownika.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: data rozwiązania umowy dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.Data_rozwiazania$6+' r.'


\zaswroz_data_zawarcia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę zawarcia umowy, której dotyczy rozwiązanie.
::   WE:
::   WY: data zawarcia umowy, której dotyczy rozwiązanie
::----------------------------------------------------------------------------------------------------------------------
_data_zawarcia:=_a.Data_zawarcia;

H_UM.prefix(P.ref());
H_UM.last();
H.prefix(H_UM.ref());
_data:={? H.first() & H.PODPIS<>#0 || H.PODPIS || H_UM.OD ?};
{? _data_zawarcia<>#0 & _data_zawarcia<>_data
|| _data_zawarcia$6+' r.'
|| _data$6+' r.'
?}


\zaswroz_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Rozwiązanie umowy za wypowiedzeniem".
::   WE:
::   WY: 0/1 - błąd/przywrócono kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_pop();
H_UM.cntx_pop();
H.cntx_pop()


\zaswroz_komisja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala komisję wykazywaną w rozwiązaniu umowy dla pracownika.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: komisja wykazywana w rozwiązaniu umowy dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.Komisja


\zaswroz_opis_komisja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala dodatkowy opis z nazwą komisji w rozwiązaniu umowy dla pracownika.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: dodatkowy opis z nazwą komisji w rozwiązaniu umowy dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_informacja:='';
{? +_a.Komisja<>0
|| _informacja+='Przed upływem tego terminu może Pan'+{? P.OSOBA().PLEC='K' || 'i' || '' ?}+
   ' złożyć wniosek o wszczęcie postępowania pojednawczego przed Komisją Pojednawczą '+_a.Komisja+'.'
?};
_informacja


\zaswroz_opis_przyczyna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala opis dla przyczyny zwolnienia w przypadku umowy na czas nieokreślony w razie jej rozwiązywania.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::       _b[REFERENCE] - referencja do pracownika
::       _c [DATE] - data rozwiązania umowy
::   WY: opis dla przyczyny zwolnienia w przypadku umowy na czas nieokreślony w razie jej rozwiązywania
::----------------------------------------------------------------------------------------------------------------------
_przyczyna_wypowiedzenia:=_a.Powod;
_data:=_a.Data_rozwiazania;
_ref_prac:=_b;

_informacja:='';

_umowa_znaleziona:=0;
H_UM.index('OD');
H_UM.prefix(_ref_prac);
{? H_UM.first()
|| {? H_UM.find_le(_data)
   || _umowa_znaleziona:=1
   ?}
?};

{? _umowa_znaleziona<>0
|| {? H_UM.RU().K='C'
   || _informacja+='Przyczyną wypowiedzenia umowy o pracę jest '+_przyczyna_wypowiedzenia+'.'
   ?}
?};
_informacja


\zaswroz_powod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala powód rozwiązania umowy dla pracownika.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: powód rozwiązania umowy dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.Powod


\zaswroz_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachowuje kontekst dla tabel dla źródła "Rozwiązanie umowy za wypowiedzeniem".
::   WE:
::   WY: 0/1 - błąd/zachowano kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
H_UM.cntx_psh();
H.cntx_psh()


\zaswroz_sad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala sąd wykazywany w rozwiązaniu umowy dla pracownika.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: sąd wykazywany w rozwiązaniu umowy dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.Sad


\zaswsw_art92p1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację, czy pracownik otrzymał/nie otrzymał wynagrodzenia przewidzianego w art.92 Kodeksu pracy.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: 'otrzymał/nie otrzymał wynagrodzenia przewidzianego w art.92 Kodeksu pracy', oraz jeśli tak, za co lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.dane)>100
|| _art92p1:=_dane_swiadectwa.parametry.ART92P1;
   _informacja+={? _art92p1='' || 'brak ' || '' ?}+'dni, za które pracowni'+{? OSOBA.PLEC='K' || 'ca' || 'k' ?}+
   ' nie zachował'+{? OSOBA.PLEC='K' || 'a' || '' ?}+' prawa do wynagrodzenia, przypadające w okresie od dnia 1 '+
   'stycznia 2003 r. do dnia 31 grudnia 2003 r., zgodnie z art. 92 § 1¹ Kodeksu pracy obowiązującym w tym okresie'
?};
_informacja


\zaswsw_choroba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację, czy pracownik otrzymał/nie otrzymał wynagrodzenia przewidzianego w art.92 Kodeksu pracy.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: 'otrzymał/nie otrzymał wynagrodzenia przewidzianego w art.92 Kodeksu pracy', oraz jeśli tak, za co lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.dane)>100
|| _choroba:=_dane_swiadectwa.parametry.CHOROBA;
   _informacja+={? _choroba='' || 'nie ' || '' ?}+'otrzymał'+{? OSOBA.PLEC='K' || 'a' || '' ?}+
   {? _choroba='' || ' wynagrodzenia przewidzianego' || ' wynagrodzenie przewidziane' ?}+' w art. 92 Kodeksu pracy '+
   {? _choroba='' || '' || 'za '+_choroba ?}
?};
_informacja


\zaswsw_data_wystawienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę wystawienia świadectwa pracy.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: data wystawienia świadectwa pracy
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _dane_swiadectwa.parametry.OD$6+' r.'
|| ''
?}


\zaswsw_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Świadectwo pracy".
::   WE:
::   WY: 0/1 - błąd/przywrócono kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_pop();
H.cntx_pop();
KST.cntx_pop();
OSOBA.cntx_pop()


\zaswsw_info_uzupelniajace1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala pierwszą informację uzupełniającą na świadectwo pracy.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: pierwsza informacja uzupełniająca lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.dane)>100
|| _info_uzupelniajace:=_dane_swiadectwa.parametry.IU1;
   {? _info_uzupelniajace<>'' || _informacja:=_info_uzupelniajace ?}
?};
_informacja


\zaswsw_info_uzupelniajace2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala drugą informację uzupełniającą na świadectwo pracy.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: druga informacja uzupełniająca lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.dane)>100
|| _info_uzupelniajace:=_dane_swiadectwa.parametry.IU2;
   {? _info_uzupelniajace<>'' || _informacja:=_info_uzupelniajace ?}
?};
_informacja


\zaswsw_info_uzupelniajace3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala trzecią informację uzupełniającą na świadectwo pracy.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: trzecia informacja uzupełniająca lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.dane)>100
|| _info_uzupelniajace:=_dane_swiadectwa.parametry.IU3;
   {? _info_uzupelniajace<>'' || _informacja:=_info_uzupelniajace ?}
?};
_informacja


\zaswsw_info_uzupelniajace4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala czwartą informację uzupełniającą na świadectwo pracy.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: czwarta informacja uzupełniająca lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.dane)>100
|| _info_uzupelniajace:=_dane_swiadectwa.parametry.IU4;
   {? _info_uzupelniajace<>'' || _informacja:=_info_uzupelniajace ?}
?};
_informacja


\zaswsw_ochrona
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację, czy pracownik korzystał/nie korzystał z ochrony stosunku pracy.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: 'korzystał/nie korzystał z ochrony stosunku pracy', oraz jeśli tak, w jakim okresie lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.dane)>100
|| _ochrona:=_dane_swiadectwa.parametry.OCHRONA;
   _informacja+={? _ochrona='' || 'nie ' || '' ?}+'korzystał'+{? OSOBA.PLEC='K' || 'a' || '' ?}+
   ' z ochrony stosunku pracy, o której mowa w art. 186⁸ § 1 pkt 2 Kodeksu pracy'+
   {? _ochrona='' || '' || ', w okresie (okresach) '+_ochrona ?}
?};
_informacja


\zaswsw_odwolanie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację o odwołaniu do Sądu Pracy.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: informację o odwołaniu do Sądu Pracy lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100 & type_of(_dane_swiadectwa.dane)>100
|| _odwolanie:=_dane_swiadectwa.parametry.ODW;
   {? _odwolanie=7
   || _informacja+='Pracownik może w ciągu 7 dni od otrzymania świadectwa pracy wystąpić do pracodawcy '+
      'z wnioskiem o sprostowanie tego świadectwa. W razie nieuwzględnienia wniosku pracownikowi przysługuje, w '+
      'ciągu 7 dni od otrzymania zawiadomienia o odmowie sprostowania świadectwa pracy, prawo wystąpienia z żądaniem '+
      'sprostowania świadectwa pracy do Sądu Rejonowego - Sądu Pracy';
      _sad:=_dane_swiadectwa.dane.sad;
      {? _sad='' || '' || _informacja+=' '+_sad ?}
   |? _odwolanie<>0
   || _informacja+='Pracownik może w ciągu '+$_odwolanie+' dni od otrzymania świadectwa pracy wystąpić z wnioskiem do '+
      'pracodawcy o sprostowanie świadectwa pracy. W razie nieuwzględnienia wniosku pracownikowi przysługuje, w ciągu '+
      $_odwolanie+' dni od zawiadomienia o odmowie sprostowania świadectwa pracy, prawo wystąpienia z żądaniem jego '+
      'sprostowania do sądu pracy. W przypadku niezawiadomienia przez pracodawcę o odmowie sprostowania świadectwa '+
      'pracy, żądanie sprostowania świadectwa pracy wnosi się do sądu pracy.'
   ?}
?};
_informacja


\zaswsw_okresy_nieskladkowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację, czy w okresie zatrudnienia pracownika przypadały/nie przypadały okresy nieskładkowe
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: informację, czy w okresie zatrudnienia pracownika przypadały/nie przypadały okresy nieskładkowe lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.dane)>100
|| _okresy_nskl:=_dane_swiadectwa.parametry.OKR_NSKL;
   _informacja+='okresy nieskładkowe, przypadające w okresie zatrudnienia wskazanym w ust. 1, uwzględniane przy'+
   ' ustalaniu prawa do emerytury lub renty'+{? _okresy_nskl='' || ': brak' || ' (łącznie '+_okresy_nskl+'):' ?}
?};
_informacja


\zaswsw_opieka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację, czy pracownik korzystał/nie korzystał ze zwolnienia z powodu opieki.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: 'korzystał/nie korzystał ze zwolnienia od pracy przewidzianego (...)', oraz jeśli tak, w jakim wymiarze lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.dane)>100
|| _opieka:=_dane_swiadectwa.parametry.OPIEKA;
   _informacja+={? _opieka='' || 'nie ' || '' ?}+'korzystał'+{? OSOBA.PLEC='K' || 'a' || '' ?}+
   ' ze zwolnienia od pracy przewidzianego art. 188 Kodeksu pracy '+
   {? _opieka='' || '' || 'w wymiarze '+_opieka ?}
?};
_informacja


\zaswsw_opis_skrocony
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala rozpoczęcie opisu dla skróconego okresu wypowiedzenia w wersji standardowej szablonu.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: 'Nie z' lub 'Z' lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.dane)>100
|| _skrocony_okres_od:=_dane_swiadectwa.dane.skrocony_okres_od;
   _informacja+={? _skrocony_okres_od='' || 'Nie z' || 'Z' ?}+'ostał zastosowany skrócony okres wypowiedzenia umowy o '+
   'pracę na podstawie art. 36¹ § 1 Kodeksu pracy'
?};
_informacja


\zaswsw_opis_skrocony_daty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala opis zawierający daty skróconego okresu od - do.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: 'od (data początku okresu) do (data końcowa okresu)' lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.dane)>100
|| _skrocony_okres_od:=_dane_swiadectwa.dane.skrocony_okres_od;
   _skrocony_okres_do:=_dane_swiadectwa.dane.skrocony_okres_do;
   {? _skrocony_okres_od<>'' & _skrocony_okres_do<>''
   || _informacja+='od '+_skrocony_okres_od+' do '+_skrocony_okres_do
   ?}
?};
_informacja


\zaswsw_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachowuje kontekst dla tabel dla źródła "Świadectwo pracy".
::   WE:
::   WY: 0/1 - błąd/zachowano kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
H.cntx_psh();
KST.cntx_psh();
OSOBA.cntx_psh()


\zaswsw_rozwiazanie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala przyczynę rozwiązania umowy o pracę dla świadectwa pracy.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: 'a) rozwiązania','b) wygaśnięcia' oraz przyczyna i podstawa prawna jeśli podane lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _rozwiazanie_umowy:=_dane_swiadectwa.parametry.RUM;
   {? _rozwiazanie_umowy='R' || _informacja+='a) rozwiązania ' || _informacja+='b) wygaśnięcia ' ?};
   _informacja+=_dane_swiadectwa.parametry.ORO;
   _podstawa_prawna:=_dane_swiadectwa.parametry.PRO;
   {? _podstawa_prawna<>'' || _informacja+=' (podstawa prawna: '+_podstawa_prawna+')' ?}
?};
_informacja


\zaswsw_szczegolne_warunki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację, czy pracownik wykonywał/nie wykonywał pracy w szczególnych warunkach.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: 'wykonywał/nie wykonywał pracy w szczególnych warunkach', oraz jeśli tak, w jakich lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _szczegolne_warunki:=_dane_swiadectwa.parametry.SCW;
   _informacja+={? _szczegolne_warunki='' || 'nie ' || '' ?}+'wykonywał'+{? OSOBA.PLEC='K' || 'a' || '' ?}+
   {? _szczegolne_warunki='' || ' pracy' || ' pracę' ?}+' w szczególnych warunkach lub w szczególnym charakterze '+
   {? _szczegolne_warunki='' || '' || _szczegolne_warunki ?}
?};
_informacja


\zaswsw_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Świadectwo pracy".
::   WE: _a [DICT] - wskazanie
::   WY: dane do świadectwa pracy lub ~~
::----------------------------------------------------------------------------------------------------------------------
_parametry:=_a;
_ref_pracownika:=_parametry.P_REF;

{? P.seek(_ref_pracownika,,1)
|| P.OSOBA();
   gender.setGender(OSOBA.PLEC);
   _dane_swiadectwa:=obj_new('parametry','dane');
   _dane_swiadectwa.parametry:=_parametry;
   _dane_swiadectwa.dane:=obj_new('skrocony_okres_od','skrocony_okres_do','sad');

   _skrocony_okres_od:={? _parametry.OKRES_OD<>#0 || _parametry.OKRES_OD$4 || '' ?};
   _skrocony_okres_do:={? _parametry.OKRES_DO<>#0 || _parametry.OKRES_DO$4 || '' ?};

   _dane_swiadectwa.dane.sad:={? _parametry.ODW=14 || '14' || _parametry.SAD ?};
   _dane_swiadectwa.dane.skrocony_okres_od:=_skrocony_okres_od;
   _dane_swiadectwa.dane.skrocony_okres_do:=_skrocony_okres_do;

   _dane_swiadectwa
|| ~~
?}


\zaswsw_urlop_bezplatny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację, czy pracownik korzystał/nie korzystał z urlopu bezpłatnego.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: informacja, czy pracownik korzystał/nie korzystał z urlopu bezpłatnego lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _urlop_bezplatny:=_dane_swiadectwa.parametry.URLOPB;
   _wojsko:=_dane_swiadectwa.parametry.WOJSKO+_dane_swiadectwa.parametry.WOJSKO_22;
   _informacja+={? _urlop_bezplatny='' & _wojsko='' || 'nie ' || '' ?}+'korzystał'+{? OSOBA.PLEC='K' || 'a ' || ' ' ?}+
   'z urlopu bezpłatnego'
?};
_informacja


\zaswsw_urlop_bezplatny_lista
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala zapis/listę wykorzystanego urlopu bezpłatnego.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: wykorzystany urlop bezpłatny w postaci pojedynczego zapisu lub listy
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _urlop_bezplatny:=_dane_swiadectwa.parametry.URLOPB;
   {? _urlop_bezplatny<>''
   || _ref_pracownika:=_dane_swiadectwa.parametry.P_REF;
      _udo:=_dane_swiadectwa.parametry.UDO;
      _umowa_do:={? _udo=#0 || '0' || $(_udo~1)+'-'+$(_udo~2)+'-'+$(_udo~3) ?};
      _uod:=_dane_swiadectwa.parametry.UOD;
      _umowa_od:={? _uod=#0 || '0' || $(_uod~1)+'-'+$(_uod~2)+'-'+$(_uod~3) ?};
      {? _umowa_do<>'0'
      || _URLOPB:=proc_exec('spur@zasw',$_ref_pracownika,_umowa_do,'B',0,_umowa_od);

         {? type_of(_URLOPB)<>type_of(~~) & _URLOPB.first()
         || _informacja+=' ';
            {!
            |? _informacja+=_URLOPB.TEKST+' ';
               _URLOPB.next()
            !}
         ?}
      ?}
   ?}
?};
_informacja


\zaswsw_urlop_dodatkowy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację, czy pracownik wykorzystał/nie wykorzystał dodatkowego urlopu.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: 'wykorzystał/nie wykorzystał dodatkowego urlopu' lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;
_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.dane)>100
|| _inny_urlop:=_dane_swiadectwa.parametry.DUR;
   _dodatkowy_urlop_dni:=_dane_swiadectwa.parametry.URLNSP;
   _dodatkowy_urlop_godziny:=_dane_swiadectwa.parametry.URLNSPG;
   _reh_dni:=_dane_swiadectwa.parametry.URLREH;
   _reh_godz:=_dane_swiadectwa.parametry.URLREHG;
   _nie:=_dodatkowy_urlop_godziny='0' & _reh_godz='0' & _inny_urlop='';

   _dod:=
      {? _dodatkowy_urlop_godziny='0'
      || ''
      || 'urlop dodatkowy w wymiarze %1 godzin, co stanowi %2'[_dodatkowy_urlop_godziny,_dodatkowy_urlop_dni]
      ?};
   _reh:=
      {? _reh_godz='0'
      || ''
      || {? +_dod || ', ' || '' ?}+'urlop rehabilitacyjny w wymiarze %1 godzin, co stanowi %2'[_reh_godz,_reh_dni]
      ?};
   _inny_urlop:=
      {? +_inny_urlop
      || {? +(_dod+_reh) || ', ' || '' ?}+_inny_urlop
      || ''
      ?};

   _informacja:=
      {? _nie
      || '%1 dodatkowego urlopu albo innych uprawnień lub świadczeń przewidzianych przepisami prawa pracy'
            [gender.text('nie wykorzystała','nie wykorzystał')]
      || '%1 dodatkowy urlop albo inne uprawnienia lub świadczenia przewidziane przepisami prawa pracy: %2%3%4'
            [gender.text('wykorzystała','wykorzystał'),_dod,_reh,_inny_urlop]
      ?}
?};
_informacja


\zaswsw_urlop_ojcowski_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [23.25]
:: OPIS: Wartość początkowa zmiennej OJCEC_W
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('nieo')>0 & var_pres('sw')>100
|| {? {? sw.ALL_UM
      || proc_exe('url_rodz@zasw',$P.ref(),$(sw.UDO~1)+'-'+$(sw.UDO~2)+'-'+$(sw.UDO~3),1153).first()
      || proc_exe('url_rodz@zasw',$P.ref(),$(sw.UDO~1)+'-'+$(sw.UDO~2)+'-'+$(sw.UDO~3),1153,,$sw.UOD).first()
      ?}
   || _ojciec:=100
   || _ojciec:=0
   ?};
   {? _ojciec || _ojciec || (nieo[15]/7)$0 ?}
|| 0
?}


\zaswsw_urlop_ojcowski
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację, czy pracownik korzystał/nie korzystał z urlopu ojcowskiego.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: 'wykorzystał/nie wykorzystał urlopu ojcowskiego', oraz jeśli tak, 'w wymiarze' oraz podany wymiar lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';
{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _urlop_ojcowski:=_dane_swiadectwa.parametry.OJCIEC_W;
   _informacja+={? _urlop_ojcowski=0
                || '%1 urlopu ojcowskiego '[gender.text('nie wykorzystała','nie wykorzystał')]
                || '%1 urlop ojcowski w wymiarze '[gender.text('wykorzystała','wykorzystał')]
                ?};
   {? _urlop_ojcowski=100
   || _ref_pracownika:=_dane_swiadectwa.parametry.P_REF;
      _udo:=_dane_swiadectwa.parametry.UDO;
      _umowa_do:={? _udo=#0 || '0' || $(_udo~1)+'-'+$(_udo~2)+'-'+$(_udo~3) ?};
      {? _umowa_do<>'0'
      || _URLOPO:=
            {? sw.ALL_UM
            || proc_exec('url_rodz@zasw',$_ref_pracownika,_umowa_do,1153)
            || proc_exec('url_rodz@zasw',$_ref_pracownika,_umowa_do,1153,,$sw.UOD)
            ?};

         {? type_of(_URLOPO)<>type_of(~~) & _URLOPO.first()
         || {!
            |? _informacja+=_URLOPO.OPIS+' ';
               _URLOPO.next()
            !}
         ?}
      ?}
   |? _urlop_ojcowski<>0
   || _informacja+=$_urlop_ojcowski+{? _urlop_ojcowski>1 || ' tygodni ' || ' tygodnia ' ?};
      _urlop_ojcowski_czesci:=_dane_swiadectwa.parametry.OJCIEC_C;
      {? _urlop_ojcowski_czesci<>0
      || _informacja+='w '+$_urlop_ojcowski_czesci+{? _urlop_ojcowski_czesci=1 || ' części' || ' częściach' ?}
      ?}
   ?}
?};
_informacja


\zaswsw_urlop_rodzicielski_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [23.25]
:: OPIS: Wartość początkowa zmiennej RODZIC_W
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_rodzic:=0;
{? var_pres('sw')>0
|| _rodzic:=
      {? sw.ALL_UM
      || {? proc_exe('url_rodz@zasw',$P.ref(),$(sw.UDO~1)+'-'+$(sw.UDO~2)+'-'+$(sw.UDO~3),1154).first()
         || 100
         || 0
         ?}
      || {? proc_exe('url_rodz@zasw',$P.ref(),$(sw.UDO~1)+'-'+$(sw.UDO~2)+'-'+$(sw.UDO~3),1154,,$sw.UOD).first()
         || 100
         || 0
         ?}
      ?}
?};
_rodzic


\zaswsw_urlop_rodzicielski
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację, czy pracownik korzystał/nie korzystał z urlopu rodzicielskiego.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: 'wykorzystał/nie wykorzystał urlopu rodzicielskiego', oraz jeśli tak, 'w wymiarze' oraz podany wymiar lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _urlop_rodzicielski:=_dane_swiadectwa.parametry.RODZIC_W;
   {? _urlop_rodzicielski=0
   || _informacja+='%1 z urlopu rodzicielskiego'[gender.text('nie korzystała','nie korzystał')]
   || _informacja+='%1 urlop rodzicielski '[gender.text('wykorzystała','wykorzystał')];
      {? _urlop_rodzicielski=100
      || _ref_pracownika:=_dane_swiadectwa.parametry.P_REF;
         _udo:=_dane_swiadectwa.parametry.UDO;
         _umowa_do:={? _udo=#0 || '0' || $(_udo~1)+'-'+$(_udo~2)+'-'+$(_udo~3) ?};
         {? _umowa_do<>'0'
         || _URLOPR:=
               {? sw.ALL_UM
               || proc_exec('url_rodz@zasw',$_ref_pracownika,_umowa_do,1154)
               || proc_exec('url_rodz@zasw',$_ref_pracownika,_umowa_do,1154,,$sw.UOD)
               ?};
            {? type_of(_URLOPR)<>type_of(~~) & _URLOPR.first()
            || {!
               |? _informacja+=_URLOPR.OPIS+' ';
                  _URLOPR.next()
               !}
            ?}
         ?}
      || _urlop_rodzicielski_podst:=_dane_swiadectwa.parametry.RODZIC_P;
         _informacja+='w wymiarze '+$_urlop_rodzicielski+{? _urlop_rodzicielski=1 || ' tygodnia ' || ' tygodni ' ?};
         _urlop_rodz_czesci:=_dane_swiadectwa.parametry.RODZIC_C;
         {? _urlop_rodz_czesci<>0
         || _informacja+='w '+$_urlop_rodz_czesci+{? _urlop_rodz_czesci=1 || ' części' || ' częściach' ?}
         ?}
      ?}
   ?}
?};
_informacja


\zaswsw_urlop_wychowawczy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację, czy pracownik korzystał/nie korzystał z urlopu wychowawczego.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: 'wykorzystał/nie wykorzystał urlopu wychowawczego', oraz jeśli tak, 'w wymiarze' oraz podany wymiar lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _urlop_wychowawczy:=_dane_swiadectwa.parametry.URLOPW;
  {? _urlop_wychowawczy=''
  || _informacja+='nie korzystał'+{? OSOBA.PLEC='K' || 'a' || '' ?}+' z urlopu wychowawczego'
  || _informacja+='wykorzystał'+{? OSOBA.PLEC='K' || 'a' || '' ?}+' urlop wychowawczy';
     _ref_pracownika:=_dane_swiadectwa.parametry.P_REF;
     _udo:=_dane_swiadectwa.parametry.UDO;
     _umowa_do:={? _udo=#0 || '0' || $(_udo~1)+'-'+$(_udo~2)+'-'+$(_udo~3) ?};
     _uod:=_dane_swiadectwa.parametry.UOD;
     _umowa_od:={? _uod=#0 || '0' || $(_uod~1)+'-'+$(_uod~2)+'-'+$(_uod~3) ?};
     {? +_urlop_wychowawczy & _umowa_do<>'0'
     || _informacja+=' udzielony na podstawie ';
        _URLOPW:=proc_exec('url_rodz@zasw',$_ref_pracownika,_umowa_do,114);
        {? type_of(_URLOPW)<>type_of(~~) & _URLOPW.first()
        || {!
           |? _informacja+=_URLOPW.OPIS+' ';
              _URLOPW.next()
           !}
        ?}
     || _urlop_wychowawczy_podst:=_dane_swiadectwa.parametry.WYCH_P;
        {? _urlop_wychowawczy_podst<>'' || _informacja+=' udzielony na podstawie '+_urlop_wychowawczy_podst ?};
        _informacja+=' w wymiarze '+_urlop_wychowawczy+' dni ';
        _URLOPW:=proc_exec('spur@zasw',$_ref_pracownika,_umowa_do,'W',0,_umowa_od);
        {? type_of(_URLOPW)<>type_of(~~) & _URLOPW.first()
        || {!
           |? _informacja+=_URLOPW.TEKST+' ';
              _URLOPW.next()
           !}
        ?}
     ?}
  ?}
?};
_informacja


\zaswsw_urlop_wypoczynkowy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala liczbę dni urlopu wypoczynkowego wykorzystanego przez pracownika.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: liczba dni urlopu wypoczynkowego wykorzystanego przez pracownika lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _urlop_dni:=_dane_swiadectwa.parametry.URLOP;
   _urlop_godzin:=_dane_swiadectwa.parametry.URLOPG;
   _urlop_na_zadanie_dni:=_dane_swiadectwa.parametry.URLOPNZ;
   _urlop_na_zadanie_godzin:=_dane_swiadectwa.parametry.URLOPNZG;
   _informacja+='wykorzystał'+{? OSOBA.PLEC='K' || 'a' || '' ?}+' urlop wypoczynkowy w wymiarze '+
   {? _urlop_godzin='' || '' || _urlop_godzin+' godzin, co stanowi ' ?}+_urlop_dni+', w tym wykorzystał'+
   {? OSOBA.PLEC='K' || 'a ' || ' ' ?}+_urlop_na_zadanie_dni+
   {? _urlop_na_zadanie_godzin<>' ' || ' ('+_urlop_na_zadanie_godzin+' godzin) ' || '' ?}+
   'na podstawie art. 167² Kodeksu pracy'
?};
_informacja


\zaswsw_wojsko
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację, czy pracownik odbywał/nie odbywał służbę wojskową.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: informacja, czy pracownik odbywał/nie odbywał służbę wojskową lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _wojsko:=_dane_swiadectwa.parametry.WOJSKO+_dane_swiadectwa.parametry.WOJSKO_22;
   _informacja+={? _wojsko='' || 'nie ' || '' ?}+'odbywał'+{? OSOBA.PLEC='K' || 'a' || '' ?}+
   {? _wojsko='' || ' służby wojskowej' || ' służbę wojskową' ?}
?};
_informacja


\zaswsw_wojsko_urlb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację, urlop bezpłatny był wykorzystywany w ramach służby wojskowej.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: ' na podstawie art. 124 ustawy o powszechnym obowiązku obrony Rzeczypospolitej Polskiej' lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _wojsko:=_dane_swiadectwa.parametry.WOJSKO;
   _informacja+={? _wojsko=''
                 || ''
                 || ' '+exec('info_wojsko','peronel_wydruki',date(2022,4,22))
                 ?}
?};
_informacja


\zaswsw_wojsko_urlb2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
::  MOD: MicKoc 08.09.2022
:: OPIS: Ustala informację, urlop bezpłatny był wykorzystywany w ramach służby wojskowej.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: ' na podstawie ustawy z dnia 11 marca 2022 r. o obronie Ojczyzny' lub ''
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _wojsko:=_dane_swiadectwa.parametry.WOJSKO_22;
   _informacja+={? _wojsko=''
                 || ''
                 || ' '+exec('info_wojsko','peronel_wydruki',date(2022,4,23))
                 ?}
?};
_informacja


\zaswsw_zajecie_wynagr_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację o zajęciu/braku zajęcia wynagrodzenia dla pracownika - oznaczenia komornika.
::   WE: _a [DICT] - tablica nazwana z danymi do zaświadczenia
::   WY: informacja o zajęciu/braku zajęcia wynagrodzenia dla pracownika - oznaczenia komornika lub ~~
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _komornik:=_dane_swiadectwa.parametry.OKR;
   {? _komornik<>'TAB'
   || _informacja+='Oznaczenia komornika: '+{? _komornik='' || 'brak' || _komornik ?}
   ?}
?};
_informacja


\zaswsw_zajecie_wynagr_kw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację o zajęciu/braku zajęcia wynagrodzenia dla pracownika - kwota.
::   WE: _a [DICT] - tablica nazwana z danymi do zaświadczenia
::   WY: informacja o zajęciu/braku zajęcia wynagrodzenia dla pracownika - kwota lub ~~
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _komornik:=_dane_swiadectwa.parametry.OKR;
   _kwota:=_dane_swiadectwa.parametry.WKP;
   {? _komornik<>'TAB'
   || _informacja+='Wysokość potrąconych kwot: '+{? _kwota=0 || 'brak' || form(_kwota,,2) ?}
   ?}
?};
_informacja


\zaswsw_zajecie_wynagr_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala informację o zajęciu/braku zajęcia wynagrodzenia dla pracownika - numer sprawy egzekucyjnej.
::   WE: _a [DICT] - tablica nazwana z danymi do zaświadczenia
::   WY: informacja o zajęciu/braku zajęcia wynagrodzenia dla pracownika - numer sprawy egzekucyjnej lub ~~
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _komornik:=_dane_swiadectwa.parametry.OKR;
   _nr_sprawy:=_dane_swiadectwa.parametry.NRE;
   {? _komornik<>'TAB'
   || _informacja+='Numery spraw egzekucyjnych: '+{? _nr_sprawy='' || 'brak' || _nr_sprawy ?}
   ?}
?};
_informacja


\zaswswyp_dlugosc_okresu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala długość okresu w rozwiązaniu umowy dla pracownika.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: długość okresu w rozwiązaniu umowy dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.Dlugosc_okresu


\zaswswyp_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Rozwiązanie umowy ze skróconym okresem wypowiedzenia".
::   WE: _a [REFERENCE] - referencja do pracownika
::       _b [DATE] - data rozwiązania umowy o pracę
::       _c [STRING] - przyczyna wypowiedzenia
::       _d [STRING] - opis długości skróconego okresu wypowiedzenia
::       _e [STRING] - odwołanie do Sądu Pracy
::       _f [STRING] - siedziba Komisji Pojednawczej
::   WY: tablica nazwana z danymi lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;
_data_rozwiazania:=_b;
_przyczyna_wypowiedzenia:=_c;
_dlugosc_okresu:=_d;
_sad_pracy:=_e;
_komisja:=_f;
_data_zawarcia:=_g;

{? P.seek(_ref_pracownika,,1)
|| _dane_do_rozwiazania:=obj_new('Data_zawarcia','Data_rozwiazania','Powod','Dlugosc_okresu','Sad','Komisja');
   _dane_do_rozwiazania.Data_zawarcia:=_data_zawarcia;
   _dane_do_rozwiazania.Data_rozwiazania:=_data_rozwiazania;
   _dane_do_rozwiazania.Powod:=_przyczyna_wypowiedzenia;
   _dane_do_rozwiazania.Dlugosc_okresu:=_dlugosc_okresu;
   _dane_do_rozwiazania.Sad:=_sad_pracy;
   _dane_do_rozwiazania.Komisja:=_komisja;
   _dane_do_rozwiazania
|| ~~
?}


\zaswuman_data_od
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Ustala datę początku obowiązywania aneksu do umowy o pracę.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: data początku zmian w związku z przeszeregowaniem
::----------------------------------------------------------------------------------------------------------------------
_a.uchwyt.OD$6+' r.'


\zaswuman_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Aneks do umowy o pracę".
::   WE:
::   WY: 0/1 - błąd/przywrócono kontekst
::----------------------------------------------------------------------------------------------------------------------
H.cntx_pop()


\zaswuman_godz_nadliczbowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala, w wyniku zmiany wynagrodzenia na aneksie pojawi się ppkt. 6).
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: '6) ' oraz ilość godzin nadliczbowych lub ''
::----------------------------------------------------------------------------------------------------------------------
_H:=_a.uchwyt;
_txt:=exec('zatrudnienie_dopelnienie','szablon_rek',_H);
{? _a.dane_z_czynnosci.aneks_dla_ppkt_inne & H.DOP_NADG || '1)   '+_txt || '' ?}


\zaswuman_inne_warunki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala, w wyniku zmiany wynagrodzenia na aneksie pojawi się ppkt. 5).
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: '5) inne warunki zatrudnienia' lub ''
::----------------------------------------------------------------------------------------------------------------------
_txt:=exec('pobierz_inne_warunki','szablon_rek',_a[1]);
{? _a.dane_z_czynnosci.aneks_dla_ppkt_inne  & +_txt || '2)   inne warunki zatrudnienia: '+_txt || '' ?}


\zaswuman_miejsce_wykonywania
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala, w wyniku zmiany miejsca wykonywania pracy na aneksie pojawi się ppkt. 2).
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: '2) miejsce wykonywania pracy: ', oraz miejsce lub ''
::----------------------------------------------------------------------------------------------------------------------
_ppkt_zmienione:=_a.dane_z_czynnosci.aneks_dla_ppkt;
_sprawdzenie_czy_ppkt2:=STR.sub(_ppkt_zmienione, '2)', '');
{? +_sprawdzenie_czy_ppkt2<>+_ppkt_zmienione || '2)   miejsce/miejsca wykonywania pracy: '+_a.uchwyt.MIEJSCE || '' ?}


\zaswuman_nowe_warunki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala opis dla ppkt. 2 aneksu umowy o pracę.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: treść 2 ppkt. aneksu umowy o pracę
::----------------------------------------------------------------------------------------------------------------------
_H:=_a.uchwyt;

_rozpoczecie_prac:={? _H.OD<>#0 || H.OD$4+' r.' || '' ?};

{? _H.DO=#0 || 'od dnia '+_rozpoczecie_prac || 'w okresie od dnia '+_rozpoczecie_prac+' do dnia '+_H.DO$4+' r.' ?}


\zaswuman_numer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala numer aneksu umowy o pracę.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: numer aneksu umowy o pracę
::----------------------------------------------------------------------------------------------------------------------
form(_a.uchwyt.UMOWA().NUMER)


\zaswuman_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachowuje kontekst dla tabel dla źródła "Aneks do umowy o pracę".
::   WE:
::   WY: 0/1 - błąd/zachowano kontekst
::----------------------------------------------------------------------------------------------------------------------
H.cntx_psh()


\zaswuman_ppkt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala, którego podpunktu umowy dotyczy aneks.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: podpunktu umowy, którego dotyczy aneks
::----------------------------------------------------------------------------------------------------------------------
{? form(_a.dane_z_czynnosci.aneks_dla_ppkt)=':'
|| form(_a.dane_z_czynnosci.aneks_dla_ppkt)
|| ': %1'[form(_a.dane_z_czynnosci.aneks_dla_ppkt)]
?}


\zaswuman_ppkt_inne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Treść punktu 3.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: podpunktu umowy, którego dotyczy aneks
::----------------------------------------------------------------------------------------------------------------------
{? _a.dane_z_czynnosci.aneks_dla_ppkt_inne
|| _txt:={? (_a.dane_z_czynnosci.aneks_dla_ppkt*'pkt.1 ppkt.') || 'też ' || '' ?};
   'Zmianie podlegają %1inne warunki pracy z pkt. 3 na następującą treść:'[_txt]
|| ''
?}


\zaswuman_rodzaj_pracy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala, w wyniku zmiany rodzaju pracy na aneksie pojawi się ppkt. 1).
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: '1) rodzaj umówionej pracy', oraz stanowisko lub ''
::----------------------------------------------------------------------------------------------------------------------
_ppkt_zmienione:=_a.dane_z_czynnosci.aneks_dla_ppkt;
_sprawdzenie_czy_ppkt4:=STR.sub(_ppkt_zmienione, '1)', '');

{? +_sprawdzenie_czy_ppkt4<>+_ppkt_zmienione || '1)   rodzaj umówionej pracy: '+_a.uchwyt.ST().ST || '' ?}


\zaswuman_stanowisko_poprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Ustala poprzednie stanowisko pracownika w związku z powstaniem aneksu do umowy.
::   WE: _a [SYSLOG] - obiekt z uchwytem do tabeli H oraz innymi parametrami
::   WY: poprzednie stanowisko pracownika
::----------------------------------------------------------------------------------------------------------------------
_H:=_a.uchwyt;

_stanowisko_poprz:='';
_H.cntx_psh();
{? _H.prev() || _stanowisko_poprz:=_H.ST().ST || '' ?};
_H.cntx_pop();
_stanowisko_poprz


\zaswuman_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Aneks do umowy o pracę".
::   WE: _a [REFERENCE] - referencja do tabeli H
::   WY: uchwyt do tabeli H z danymi lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref_zatrudnienia:=_a;
_parametry:=_b;

_zaswuman:=obj_new('uchwyt','dane_z_czynnosci');
_zaswuman.dane_z_czynnosci:=obj_new('aneks_dla_ppkt','aneks_dla_ppkt_inne','parametry');

_zaswuman.dane_z_czynnosci.aneks_dla_ppkt:=_parametry.zaswuman.ppkt;
_zaswuman.dane_z_czynnosci.aneks_dla_ppkt_inne:=_parametry.zaswuman.ppkt_inne;
_zaswuman.dane_z_czynnosci.parametry:=_parametry.zaswuman;

{? H.seek(_ref_zatrudnienia,,1)
|| _zaswuman.uchwyt:=H;
   _zaswuman
|| ~~
?}


\zaswuman_wymiar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala, w wyniku zmiany wymiaru pracy na aneksie pojawi się ppkt. 3).
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: '3) wymiar czasu pracy: ', oraz nowy wymiar lub ''
::----------------------------------------------------------------------------------------------------------------------
_H:=_a.uchwyt;
_ppkt_zmienione:=_a.dane_z_czynnosci.aneks_dla_ppkt;
_sprawdzenie_czy_ppkt3:=STR.sub(_ppkt_zmienione, '3)', '');

{? +_sprawdzenie_czy_ppkt3<>+_ppkt_zmienione
|| '3)   wymiar czasu pracy: '+{? _H.RWYM=1 || 'pełen etat' || '%1/%2 etatu' [$_H.RWYL,$_H.RWYM] ?}
|| ''
?}


\zaswuman_wynagrodzenie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala, w wyniku zmiany wynagrodzenia na aneksie pojawi się ppkt. 4).
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: '4) wynagrodzenie' lub ''
::----------------------------------------------------------------------------------------------------------------------
_ppkt_zmienione:=_a.dane_z_czynnosci.aneks_dla_ppkt;
_sprawdzenie_czy_ppkt4:=STR.sub(_ppkt_zmienione, '4)', '');

{? +_sprawdzenie_czy_ppkt4<>+_ppkt_zmienione || '4)   wynagrodzenie:' || '' ?}


\zaswumpr_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Umowa o pracę".
::   WE:
::   WY: 0/1 - błąd/przywrócono kontekst
::----------------------------------------------------------------------------------------------------------------------
H.cntx_pop();
H_UM.cntx_pop();
P.cntx_pop()


\zaswumpr_opis_data_rozp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala opis zawierający datę rozpoczęcia okresu zatrudnienia wynikającą z umowy o pracę.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: opis zawierający datę rozpoczęcia okresu zatrudnienia dla umowy o pracę przekazywany do szablonu standardowego
::----------------------------------------------------------------------------------------------------------------------
{? exec('upgrade2226_nru01','wnioski_urlopowe')
|| 'Dzień rozpoczęcia pracy %1 r.'[_a.UMOWA().P_OD$6]
|| 'termin rozpoczęcia pracy: %1 r.'[_a.UMOWA().P_OD$6]
?}


\zaswumpr_opis_dopelnienie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala opis zawierający dopełnienie do nadgodzin dla okresu zatrudnienia, które wynika z umowy o pracę.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: informacja o dopełnieniu do nadgodzin dla pracownika w kontekście danej umowy o pracę jako opis przekazywany
::       do szablonu standardowego lub pusty ciąg znaków
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;

_ret:={? _H.CZY_NADG='T'
   || _informacja:='Dopuszczalna liczba godzin pracy ponad określony w umowie wymiar czasu '
                   'pracy, których przekroczenie uprawnia pracownika, oprócz normalnego wynagrodzenia, do dodatku'
                   ' do wynagrodzenia: ';
      {? _H.DOP_NADG
      || _informacja+=$_H.DOP_NADG+' godz. dobowo';
      {? _H.DOP_ST || _informacja+=', ' ?}
      ?};

      {? _H.DOP_ST<>0
      || _informacja+=$_H.DOP_ST+' godz. średniotygodniowo'
      ?};
      _informacja
   || ''
   ?};
{? +|_ret || gsub(_ret+'.','..','.') || _ret ?}


\zaswumpr_opis_inne_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala opis zawierający inne warunki umowy dla umowy o pracę wynikające z tej umowy.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: inne warunki umowy jako opis przekazywany do szablonu standardowego lub pusty ciąg znaków
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;
_inne_warunki:=exec('pobierz_inne_warunki','szablon_rek',_H);
_ret:=
   {? _inne_warunki<>''
   || {? exec('upgrade2226_nru01','wnioski_urlopowe')
      || _inne_warunki+'.'
      || 'inne warunki zatrudnienia: %1.'[_inne_warunki]
      ?}
   || ''
   ?};
gsub(_ret,'..','.')


\zaswumpr_opis_przedluzona
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Umowa przedłużona o urlopy i nieobecności usprawiedliwione
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: tekst
::----------------------------------------------------------------------------------------------------------------------
{? _a.UMOWA().PRZ_USPR='T'
|| 'Postanowienie o przedłużeniu umowy: Umowa ulega przedłużeniu o czas urlopu, a także o czas innej '
   'usprawiedliwionej nieobecności pracownika w pracy, jeżeli wystąpią takie nieobecności.'
|| ''
?}


\zaswumpr_osoba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala etykietę osoby dla umowy o pracę.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: etykieta osoby dla umowy o pracę
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;

_H.P().OSOBA().PIERWSZE+' '+OSOBA.NAZWISKO+', zamieszkał'+{? OSOBA.PLEC='K' || 'a' || 'y' ?}+' '+
form(exec('adres','osoba',H.OS_ADRES().RODZAJ,H.OS_ADRES().OD))


\zaswumpr_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachowuje kontekst dla tabel dla źródła "Umowa o pracę".
::   WE:
::   WY: 0/1 - błąd/zachowano kontekst
::----------------------------------------------------------------------------------------------------------------------
H.cntx_psh();
H_UM.cntx_psh();
P.cntx_psh()


\zaswumpr_rodzaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala rodzaj umowy dla pracownika wynikający z przebiegu zatrudnienia wraz z określeniem do kiedy.
::   WE: _a [SYSLOG] - rekord tabeli H
::      [_b] [INTEGER] - parametr opcjonalny umożliwiający dodanie daty zakończenia umowy na zastępstwo na wydruku
::      [_c] [INTEGER] - parametr opcjonalny umożliwiający dopisanie w wydruku przyimka 'na'
::      [_d] [INTEGER] - 1 dołącza kropkę do r., 0 - domyślnie, nie dołącza
::   WY: rodzaj umowy dla pracownika wynikający z przebiegu zatrudnienia wraz z określeniem do kiedy
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<>type_of(0) || _b:=1 ?};
{? var_pres('_c')<>type_of(0) || _c:=0 ?};
_kropka:={? var_pres('_d')=type_of(0) & _d=1 || '.' || '' ?};
{? _c || _ret:='na '?};
_ru:=_a.RU().K;
_ret:=
   {? _ru='A'
   || 'okres próbny, do dnia zakończenia %1 r%2' [H_UM.P_DO$6,_kropka]
   |? ((_ru='B' & H_UM.OKR_UZAS().KOD='1') | _ru='D') & _b=2
   || 'czas nieobecności zastępowanego pracownika'
   |? (_ru='B' & H_UM.OKR_UZAS().KOD='1' & H_UM.P_DO=date(0,0,0)) | (_ru='D' & H_UM.P_DO=date(0,0,0))
   || 'czas nieobecności zastępowanego pracownika'
   |? _ru='B' & H_UM.OKR_UZAS().KOD='1'
   || 'czas nieobecności zastępowanego pracownika, do dnia zakończenia %1 r%2' [H_UM.P_DO$6,_kropka]
   |? _ru='B'
   || 'czas określony, do dnia zakończenia %1 r%2' [H_UM.P_DO$6,_kropka]
   |? _ru='C'
   || 'czas nieokreślony'
   |? _ru='D'
   || 'zastępstwo, do dnia zakończenia %1 r%2' [H_UM.P_DO$6,_kropka]
   |? _ru='E'
   || 'czas określony, do dnia porodu'
   || ''
   ?};
gsub(_ret,'..','.')


\zaswumpr_inne_brak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Napis brak, jeśli nie ma innych warunków.
::   WE:
::   WY: Napis 'brak' lub ''
::----------------------------------------------------------------------------------------------------------------------
_jest:=0;
_jest+=~_jest & H_UM.RU().K='B' & H_UM.OD>=date(2016,2,22) & H_UM.WYM_UZAS='T'
   & +form(exec('memo2print','#string',H_UM,'UZASDN'));
_jest+=~_jest & _a.CZY_NADG='T';
_jest+=~_jest & _a.UMOWA().PRZ_USPR='T';
_jest+=~_jest & exec('upgrade2226_nru01','wnioski_urlopowe') & var_pres('info')>0 & type_of(info)>100
   & var_pres('ZAM_OKR',info)>0 & info.ZAM_OKR<>'';
_jest+=~_jest & +form(exec('pobierz_inne_warunki','szablon_rek',_a));
{? _jest
|| ''
|| 'brak.'
?}


\zaswumpr_uzasadnienie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala uzasadnienie zawarcia umowy.
::   WE:
::   WY: uzasadnienie zawarcia umowy
::----------------------------------------------------------------------------------------------------------------------
_uzasadnienie1:='';
_uzasadnienie2:='';

{?  H_UM.RU().K='B' & H_UM.OD>=date(2016,2,22) & H_UM.WYM_UZAS='T'
|| _uzasdnienie_pelne:=exec('memo2print','#string',H_UM,'UZASDN');
   _uzasadnienie1:=253+_uzasdnienie_pelne;
   _uzasdnienie2:=253-_uzasdnienie_pelne;
   _uzasadnienie:=obj_new('Uzasadnienie1','Uzasadnienie2');
   _uzasadnienie.Uzasadnienie1:=_uzasadnienie1;
   _uzasadnienie.Uzasadnienie2:=_uzasadnienie2;
   _uzasadnienie
|| ''
?}


\zaswumpr_uzasadnienie1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala część pierwszą uzasadnienia zawarcia umowy.
::   WE:
::   WY: część pierwsza uzasadnienia zawarcia umowy
::----------------------------------------------------------------------------------------------------------------------
_uzasadnienie:=_a;

_informacja_przed:='Przyczyny uzasadniające zawarcie umowy: ';

_ret:={? type_of(_uzasadnienie)>100
   || {? exec('is_pzd02','ppsf') || '' || '2.    ' ?}+_informacja_przed+_uzasadnienie.Uzasadnienie1
   || ''
   ?};
{? type_of(_uzasadnienie)>100
|| {? ~+|_uzasadnienie.Uzasadnienie2 & +|_ret || gsub(_ret+'.','..','.') || _ret ?}
|| {? +|_ret || gsub(_ret+'.','..','.') || _ret ?}
?}


\zaswumpr_uzasadnienie2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala część drugą uzasadnienia zawarcia umowy.
::   WE:
::   WY: część druga uzasadnienia zawarcia umowy
::----------------------------------------------------------------------------------------------------------------------
_uzasadnienie:=_a;

_ret:={? type_of(_uzasadnienie)>100 || _uzasadnienie.Uzasadnienie2 || '' ?};
{? +|_ret || gsub(_ret+'.','..','.') || _ret ?}


\zaswzatr_rodzaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [21.37]
:: OPIS: Ustala rodzaj umowy dla pracownika wynikający z przebiegu zatrudnienia wraz z określeniem do kiedy.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: rodzaj umowy dla pracownika wynikający z przebiegu zatrudnienia wraz z określeniem do kiedy
::----------------------------------------------------------------------------------------------------------------------
_rodzaj:=_a;

{? type_of(_rodzaj)>100 || _rodzaj.Rodzaj_um || '' ?}


\zaswzatr_adres_osoby
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala adres osoby dla zaświadczenia o zatrudnieniu.
::   WE: _a [SYSLOG] - tablica nazwana z uchwytem do ZC oraz innymi danymi
::   WY: adres osoby dla zaświadczenia o zatrudnieniu
::----------------------------------------------------------------------------------------------------------------------
_kod:=obj_new(2);
_kod[1]:='C';
_kod[2]:='S';
_licz:=0;
_exit:=0;

{!
|? _licz+=1;
   {? exec('szukaj','osoba',_kod[_licz]) || _exit:=1 ?};
   ~_exit & _licz<obj_len(_kod)
!};
{? ~_exit || _licz:=2 ?};
exec('adres','osoba',_kod[_licz])


\zaswzatr_cel_zaswiadczenia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala cel zaświadczenia dla podanego okresu zatrudnienia.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: cel zaświadczenia dla podanego okresu zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_dane_okresowe:=_a;

{? type_of(_dane_okresowe)>100 || _dane_okresowe.Cel_zaswiadczenia || '' ?}


\zaswzatr_do_miesiaca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala do którego miesiąca wstecz będą wykazywane zarobki dla podanego okresu zatrudnienia.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: informacja do którego miesiąca wstecz będą wykazywane zarobki dla podanego okresu zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_dane_okresowe:=_a;

{? type_of(_dane_okresowe)>100 || _dane_okresowe.Do_miesiaca || '' ?}


\zaswzatr_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Zaświadczenie o zatrudnieniu".
::   WE:
::   WY: 0/1 - błąd/przywrócono kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_pop();
H.cntx_pop();
O.cntx_pop();
LS.cntx_pop()


\zaswzatr_kwota_obciazen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala kwotę obciążeń dla wykazywanych zarobków dla podanego okresu zatrudnienia.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: kwota obciążeń dla wykazywanych zarobków dla podanego okresu zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_dane_okresowe:=_a;

{? type_of(_dane_okresowe)>100 || _dane_okresowe.Kwota_obciazen || '' ?}


\zaswzatr_kwota_obciazen_sl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala kwotę obciążeń słownie dla wykazywanych zarobków dla podanego okresu zatrudnienia.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: kwota obciążeń słownie dla wykazywanych zarobków dla podanego okresu zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_dane_okresowe:=_a;

{? type_of(_dane_okresowe)>100 || _dane_okresowe.Kwota_obciazen_slownie || '' ?}


\zaswzatr_od_miesiaca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala od którego miesiąca będą wykazywane zarobki dla podanego okresu zatrudnienia.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: informacja od którego miesiąca będą wykazywane zarobki dla podanego okresu zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_dane_okresowe:=_a;

{? type_of(_dane_okresowe)>100 || _dane_okresowe.Od_miesiaca || '' ?}


\zaswzatr_opis_czy_zatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zwraca informację o tym, czy dany pracownik jest zatrudniony w podanym okresie.
::   WE: _a [REFERENCE] - referencja do pracownika, dla którego sprawdzamy
::   WY: opis zwracany w sytuacji, gdy pracownik jest zatrudniony
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;

_informacja:='';
{? P.seek(_ref_pracownika,,1)
||
   {? P.ZA='T'
   || _informacja+='jest'
   || _informacja+='był';
      _informacja+={? P.OSOBA().PLEC='K' || 'a' || '' ?}
   ?};
   _informacja+=' zatrudnion'+{? P.OSOBA().PLEC='K' || 'a' || 'y' ?}
?};
_informacja


\zaswzatr_opis_czy_zwol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
::  MOD: Michał Kocot
:: OPIS: Zwraca opis dla sytuacji, kiedy pracownik nie jest już zatrudniony.
::   WE: _a [REFERENCE] - referencja do pracownika, dla którego sprawdzamy
::   WY: opis zwracany w sytuacji, gdy pracwonik został zwolniony
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;

_informacja:='';
_kropka:=(form(exec('zaswumpr_rodzaj','szablon_rek',H,2,1,1))+1)='.';
{? H.RU().K='A' | H.RU().K='B' | H.RU().K='D' || _informacja+='.' ?};
{? P.seek(_ref_pracownika,,1)
|| {? (P.ZA='N' & P.DZ<>date(0,0,0)) | (P.ZA='T' & P.DZ<>date(0,0,0) & H.RU().K='C')
   || _informacja+={? P.DZ<date() || ' i został'+{? P.OSOBA().PLEC='K' || 'a' || '' ?} || ' i zostanie' ?}+
      ' zwolnion'+{? P.OSOBA().PLEC='K' || 'a' || 'y' ?}+
      ' dnia ';
      _informacja+=P.DZ$6+' r.';
      _przyczyna_zwolnienia:=exec('uspkod','personel',P);
      {? _przyczyna_zwolnienia<>'' || _informacja+=',(przyczyna: '+_przyczyna_zwolnienia+').' ?}
   || {? H.RU().K='C' | H.RU().K='E' | H.RU().K='' || _informacja+='.' ?}
   ?}
|| _informacja+='.'
?};
_kropka:=_kropka & (1+|_informacja='.');
_kropka-_informacja


\zaswzatr_opis_obciazenia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zwraca informacje o obciążeniach w zadanym okresie.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: informacje o obciążeniach w zadanym okresie
::----------------------------------------------------------------------------------------------------------------------
_dane_okresu:=_a;

_informacja:='';
{? type_of(_dane_okresu)>100
|| _typ_obciazen:=_dane_okresu.Typ_obciazen;
   {? _typ_obciazen='N'
   || ''
   || _kwota_obciazen:=_dane_okresu.Kwota_obciazen;
      _kwota_obciazen_sl:=_dane_okresu.Kwota_obciazen_slownie;
      _informacja+='Wynagrodzenie powyższe';
      {? _kwota_obciazen='0,00'
      || _informacja+=' nie jest obciążone z tytułu wyroków sądowych lub innych tytułów.'
      || _informacja+=' jest obciążone';
         {? _typ_obciazen='I'
         || _informacja+=' z tytułu wyroków sądowych i/lub innych tytułów.'
         || _informacja+=' kwotą %1 zł (słownie: %2).' [_kwota_obciazen,_kwota_obciazen_sl]
         ?}
      ?}
   ?}
?};
_informacja


\zaswzatr_opis_podsumowanie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zwraca opis dla sytuacji, kiedy pracownik jest/był zatrudniony w oparciu o umowę zlecenie w zadanym okresie.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: opis zwracany w sytuacji, gdy pracwonik jest/był zatrudniony w oparciu o umowę zlecenie w zadanym okresie
::----------------------------------------------------------------------------------------------------------------------
_dane_okresu:=_a;

_informacja:='';
{? type_of(_dane_okresu)>100
|| _rodzaj:=_dane_okresu.Rodzaj;
   _uwzglednienie_uz:=_dane_okresu.Uwzglednienie_uz;
   {? _rodzaj<>''
   || _srednia:=_dane_okresu.Srednia_netto;
      {? _srednia<>'0,00'
      || _miesiac_od:=_dane_okresu.Od_miesiaca;
         _miesiac_do:=_dane_okresu.Do_miesiaca;
         _informacja+='Wynagrodzenie zostało wyliczone na podstawie zarobków '+
         {? +_uwzglednienie_uz || _uwzglednienie_uz || '' ?}+' za okres od dnia %1 do dnia %2' [_miesiac_do,_miesiac_od]
      ?}
   ?}
?};
_informacja


\zaswzatr_opis_wynagr_brutto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zwraca informacje o średnim wynagrodzeniu brutto uzyskanym w zadanym okresie.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: informacje o średnim wynagrodzeniu brutto uzyskanym w zadanym okresie
::----------------------------------------------------------------------------------------------------------------------
_dane_okresu:=_a;

_informacja:='';
{? type_of(_dane_okresu)>100
|| _rodzaj:=_dane_okresu.Rodzaj;
   {? _rodzaj<>'' & (_rodzaj='brutto' | _rodzaj='netto i brutto')
   || _srednia_brutto:=_dane_okresu.Srednia_brutto;
      _srednia_brutto_sl:=_dane_okresu.Srednia_brutto_slownie;
      _informacja+='Średnie miesięczne wynagrodzenie brutto wynosi %1 zł (słownie: %2).' [_srednia_brutto,
      _srednia_brutto_sl]
   ?}
?};
_informacja


\zaswzatr_opis_wynagr_netto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zwraca informacje o średnim wynagrodzeniu netto uzyskanym w zadanym okresie.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: informacje o średnim wynagrodzeniu netto uzyskanym w zadanym okresie
::----------------------------------------------------------------------------------------------------------------------
_dane_okresu:=_a;

_informacja:='';
{? type_of(_dane_okresu)>100
|| _rodzaj:=_dane_okresu.Rodzaj;
   {? _rodzaj<>''
   || _srednia_netto:=_dane_okresu.Srednia_netto;
      _srednia_netto_sl:=_dane_okresu.Srednia_netto_slownie;
      _miesiac_do:=_dane_okresu.Do_miesiaca;
      _miesiac_od:=_dane_okresu.Od_miesiaca;
      {? _srednia_netto='0,00' | _srednia_netto=''
      || _informacja+='Brak danych o wynagrodzeniu '+_rodzaj+' za okres od dnia '+_miesiac_do+' do dnia '+_miesiac_od
      |? _rodzaj='netto i brutto' | _rodzaj='netto'
      || _informacja+='Średnie miesięczne wynagrodzenie'+{? _rodzaj='netto i brutto' || ' netto' || '' ?}+
         ' wynosi %1 zł (słownie: %2).' [_srednia_netto,_srednia_netto_sl]
      ?}
   ?}
?};
_informacja


\zaswzatr_opis_zwol_nieokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zwraca opis dla sytuacji, kiedy pracownik jest zatrudniony w oparciu o umowę na czas nieokreślony, ale z
::       pewnych przyczyn został zwolniony.
::   WE: _a [REFERENCE] - referencja do pracownika, dla którego sprawdzamy
::       _b [DATE] - data, dla której sprawdzamy
::   WY: opis zwracany w sytuacji, gdy pracwonik jest zatrudniony w oparciu o umowę na czas nieokreślony ale z pewnych
::       przyczyn został zwolniony
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;
_data:=_b;

_informacja:='';
{? P.seek(_ref_pracownika,,1)
|| _przyczyna_zwolnienia:=exec('uspkod','personel',P);
   {? _przyczyna_zwolnienia<>''
   || H_UM.index('HUM_RUM');
      H_UM.prefix(_ref_pracownika,'C');
      {? H_UM.first() & H_UM.find_le(_data)
      || _informacja:='Umowa zostanie rozwiązana z dniem '+P.DZ$6+' r.,(przyczyna: '+_przyczyna_zwolnienia+').'
      ?}
   ?}
?};
_informacja


\zaswzatr_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachowuje kontekst dla tabel dla źródła "Zaświadczenie o zatrudnieniu".
::   WE:
::   WY: 0/1 - błąd/zachowano kontekst
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
H.cntx_psh();
O.cntx_psh();
LS.cntx_psh()


\zaswzatr_srednia_brutto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala średnią brutto wykazywanych zarobków dla podanego okresu zatrudnienia.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: średnia brutto wykazywanych zarobków dla podanego okresu zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_dane_okresowe:=_a;

{? type_of(_dane_okresowe)>100 || _dane_okresowe.Srednia_brutto || '' ?}


\zaswzatr_srednia_brutto_sl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala średnią brutto słownie dla wykazywanych zarobków dla podanego okresu zatrudnienia.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: średnia brutto słownie dla wykazywanych zarobków dla podanego okresu zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_dane_okresowe:=_a;

{? type_of(_dane_okresowe)>100 || _dane_okresowe.Srednia_brutto_slownie || '' ?}


\zaswzatr_srednia_netto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala średnią netto wykazywanych zarobków dla podanego okresu zatrudnienia.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: średnia netto wykazywanych zarobków dla podanego okresu zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_dane_okresowe:=_a;

{? type_of(_dane_okresowe)>100 || _dane_okresowe.Srednia_netto || '' ?}


\zaswzatr_srednia_netto_sl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala średnią netto słownie dla wykazywanych zarobków dla podanego okresu zatrudnienia.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: średnia netto słownie dla wykazywanych zarobków dla podanego okresu zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_dane_okresowe:=_a;

{? type_of(_dane_okresowe)>100 || _dane_okresowe.Srednia_netto_slownie || '' ?}


\zaswzatr_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala status firmy dla podanego okresu zatrudnienia.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: status firmy dla podanego okresu zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_dane_okresowe:=_a;

{? type_of(_dane_okresowe)>100 || _dane_okresowe.Status_firmy || '' ?}


\zaswzatr_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Zaświadczenie o zatrudnieniu".
::   WE: _a [REFERENCE] - referencja do pracownika
::       _b [DATE] - data zaświadczenia
::       _c [INTEGER] - czy wykazywać kwotę netto
::       _d [INTEGER] - czy wykazywać kwotę brutto
::       _e [STRING] - czy uwzględnić listy otwarte
::       _f [STRING] - typ identyfikatora na zaświadczeniu
::       _g [INTEGER] - czy uwzględnić dane z umów cywilnoprawnych
::       _h [OBC] - czy wykazywać obciążenia(zajęcia)
::       _i [STRING] - okres odniesienia
::       _j [INTEGER] - okres odniesienia - rok
::       _k [INTEGER] - okres odniesienia - miesiąc
::       _l [INTEGER] - liczba miesięcy wstecz
::       _m [STRING] - cel wydania zaświadczenia
::       _n [STRING] - status firmy
::   WY: tablica nazwana z danymi lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;
_data_zaswiadczenia:=_b;
_wykaz_netto:=_c;
_wykaz_brutto:=_d;
_uwzglednij_otwarte:=_e;
_typ_identyfikatora:=_f;
_uwzglednij_dane_uz:=_g;
_wykaz_obciazenia:=_h;
_okres_odniesienia:=_i;
_okres_odniesienia_rok:=_j;
_okres_odniesienia_mies:=_k;
_liczba_miesiecy_wstecz:=_l;
_cel_wydania:=_m;
_status:=_n;

{? var_pres('__RUB')<0 || exec('__RUB','object') ?};
{? var_pres('__F_ZATR')<0 || exec('__F_ZATR','object') ?};

_ZLECENIOBIORCY:=exec('dostepne_p','schemat','PKD','Z');
_ZLECENIOBIORCY.index(_ZLECENIOBIORCY.ndx_tmp(,,'OSOBA',,));

{? P.seek(_ref_pracownika,,1)
|| {? _okres_odniesienia = 'K' || O.index('LISTYPLA') || O.index('LISTYPLP') ?};
   _skladniki:=obj_new('Brutto_dodawane','Brutto_odejmowane','Narzuty','Obciazenia');
   {! _lp:=1..obj_len(_skladniki)
   |! _skladniki[_lp]:=obj_new('Kwota','Rubryka');
   _skladniki[_lp].Kwota:=0
   !};
   _liczba_miesiecy:=0;
   {? _wykaz_netto | _wykaz_brutto
   || _skladniki.Brutto_dodawane.Rubryka:=__RUB.sys_rub(6411,_data_zaswiadczenia);
      _skladniki.Brutto_odejmowane.Rubryka:=__RUB.sys_rub(6412,_data_zaswiadczenia);
      {? _wykaz_netto || _skladniki.Narzuty.Rubryka:=__RUB.sys_rub(642,_data_zaswiadczenia) ?};
      {? _wykaz_obciazenia<>'N' || _skladniki.Obciazenia.Rubryka:=__RUB.sys_rub(643,_data_zaswiadczenia) ?};
      {! _miesiac:=1.._liczba_miesiecy_wstecz
      |! _data_okresu_odniesienia:=date(_okres_odniesienia_rok,_okres_odniesienia_mies-_miesiac+1,1);
         O.prefix(exec('ref_firma','ustawienia'),__F_ZATR.O,_data_okresu_odniesienia~1,_data_okresu_odniesienia~2);
         _dany_okres:=O.first();
         {!
         |? _dany_okres
         |! {? {? _uwzglednij_otwarte='T' || 1 || O.Z='T' ?}
            || LS.use(-O.LT);
               LS.index('PRACNRRU');
               {! _nr:=1..obj_len(_skladniki)
               |! {? type_of(_skladniki[_nr].Rubryka)>100 & _skladniki[_nr].Rubryka.first()
                  || {!
                     |? LS.prefix(_ref_pracownika,_skladniki[_nr].Rubryka.RN);
                        {? LS.first() || {! |? _skladniki[_nr].Kwota+=LS.KW; LS.next() !} ?};
                        _skladniki[_nr].Rubryka.next()
                     !}
                  ?}
               !}
            ?};
            _dany_okres:=O.next()
         !};
         {? _uwzglednij_dane_uz
         || P.cntx_psh();
            _ZLECENIOBIORCY.prefix($P.OSOBA);
            _dane_zlecenie:=_ZLECENIOBIORCY.first();
            {!
            |? _dane_zlecenie
            |! {? P.seek(_ZLECENIOBIORCY.REF)
               ||
                  O.prefix(exec('ref_firma','ustawienia'),'Z',_data_okresu_odniesienia~1,
                  _data_okresu_odniesienia~2);
                  _dany_okres:=O.first();
                  _par258:=PAR_SKID.get(258);
                  _dane_uz_par:=0;
                  {? _par258='T' || _dane_uz_par:=1 ?};
                  {!
                  |? _dany_okres
                  |! {? {? ~_dane_uz_par || 1 || {? _uwzglednij_otwarte='T' || 1 || O.Z='T' ?} ?}
                     || LS.use(-O.LT);
                        LS.index('PRACNRRU');
                        {! _nr:=1..obj_len(_skladniki)
                        |! {? type_of(_skladniki[_nr].Rubryka)>100 & _skladniki[_nr].Rubryka.first()
                           || {!
                              |? LS.prefix(P.ref(),_skladniki[_nr].Rubryka.RN);
                                 {? LS.first() || {! |? _skladniki[_nr].Kwota+=LS.KW; LS.next() !} ?};
                                 _skladniki[_nr].Rubryka.next()
                              !}
                           ?}
                        !}
                     ?};
                     _dany_okres:=O.next()
                  !}
               ?};
               _dane_zlecenie:=_ZLECENIOBIORCY.next()
            !};
            P.cntx_pop()
         ?};
         _liczba_miesiecy+=1
      !}
   ?};

   _ZLECENIOBIORCY.ndx_drop();

   _brutto:=_skladniki.Brutto_dodawane.Kwota-_skladniki.Brutto_odejmowane.Kwota;
   _netto:=_brutto-_skladniki.Narzuty.Kwota;

   _dane_okresu:=obj_new('Rodzaj','Srednia_netto','Srednia_netto_slownie','Srednia_brutto','Srednia_brutto_slownie',
                 'Typ_obciazen','Kwota_obciazen','Kwota_obciazen_slownie','Uwzglednienie_uz','Od_miesiaca',
                 'Do_miesiaca','Status_firmy','Cel_zaswiadczenia','Identyfikator','Rodzaj_um');

   _dane_okresu.Rodzaj:={? _wykaz_netto & _wykaz_brutto || 'netto i brutto'
                        |? _wykaz_netto || 'netto'
                        |? _wykaz_brutto || 'brutto'
                        || ''
                        ?};
   _dane_okresu.Srednia_netto:={? _liczba_miesiecy || form(_netto/_liczba_miesiecy$2,,2) || '' ?};
   _dane_okresu.Srednia_netto_slownie:={? _liczba_miesiecy || STR.kwota_sł(_netto/_liczba_miesiecy$2) || '' ?};
   _dane_okresu.Srednia_brutto:={? _liczba_miesiecy || form(_brutto/_liczba_miesiecy$2,,2) || '' ?};
   _dane_okresu.Srednia_brutto_slownie:={? _liczba_miesiecy || STR.kwota_sł(_brutto/_liczba_miesiecy$2) || '' ?};
   _dane_okresu.Typ_obciazen:={? (_wykaz_netto | _wykaz_brutto) & _brutto || _wykaz_obciazenia || 'N' ?};
   _dane_okresu.Kwota_obciazen:={? _liczba_miesiecy || form(_skladniki.Obciazenia.Kwota/_liczba_miesiecy$2,,2) || '' ?};
   _dane_okresu.Kwota_obciazen_slownie:={? _liczba_miesiecy
                                        || STR.kwota_sł(_skladniki.Obciazenia.Kwota/_liczba_miesiecy$2)
                                        || ''
                                        ?};
   _dane_okresu.Uwzglednienie_uz:={? _uwzglednij_dane_uz || '(z uwzględnieniem umów cywilno-prawnych)' || '' ?};
   _dane_okresu.Od_miesiaca:=date(_okres_odniesienia_rok,_okres_odniesienia_mies,0)$6+' r.';
   _data_odniesienia:=date(_okres_odniesienia_rok,_okres_odniesienia_mies-_liczba_miesiecy_wstecz+1,1);
   _dane_okresu.Do_miesiaca:={? P.DZA > _data_odniesienia || P.DZA || _data_odniesienia ?}$6+' r.';
   _dane_okresu.Status_firmy:={? _status='-'
                              || ''
                              || 'Zakład pracy '+
                                 {? _status='U' || 'znajduje się w stanie upadłości'
                                 |? _status='L' || 'znajduje się w okresie likwidacji'
                                 |? _status='N' || 'jest objęty postępowaniem naprawczym'
                                 || 'nie znajduje się w stanie upadłości ani w okresie likwidacji '+
                                     'ani nie jest objęty postępowaniem naprawczym'
                                 ?}+'.'
                              ?};
   _dane_okresu.Cel_zaswiadczenia:=_cel_wydania;
   _dane_okresu.Identyfikator:={? _typ_identyfikatora='N'
                                    || ''
                                    |? _typ_identyfikatora='P'
                                    || _ident:=P.OSOBA().PESEL; {? +_ident || ', PESEL: '+_ident || '' ?}
                                    |? _typ_identyfikatora='D'
                                    || _ident:=P.OSOBA().DOWOD; {? +_ident || ', dowód osobisty: '+_ident || '' ?}
                                    |? _typ_identyfikatora='S'
                                    || _ident:=P.OSOBA().PASZPORT; {? +_ident || ', paszport: '+_ident || '' ?}
                                    || ''
                                    ?};
   H.cntx_psh();
   H.index('_HISTKOD');
   H.prefix(P.ref,'Z');
   {? H.last()
   || H.UMOWA();
      _dane_okresu.Rodzaj_um:=exec('zaswumpr_rodzaj','szablon_rek',H,2,1,1)
   || _dane_okresu.Rodzaj_um:=''
   ?};
   H.cntx_pop();
   _dane_okresu
?}


\zaswzatr_identyfikator
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala identyfikator dla pracownika dla podanego okresu zatrudnienia.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: identyfikator dla pracownika dla podanego okresu zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_dane_okresowe:=_a;

{? type_of(_dane_okresowe)>100 || _dane_okresowe.Identyfikator || '' ?}


\zaswzatr_uzwglednienie_uz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala czy uwzględniać umowy cywilnoprawne dla wykazywanych zarobków dla podanego okresu zatrudnienia.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o okresie zatrudnienia
::   WY: informacja o uwzględnieniu umów cywilnoprawnych dla wykazywanych zarobków dla podanego okresu zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_dane_okresowe:=_a;

{? type_of(_dane_okresowe)>100 || _dane_okresowe.Uwzglednienie_uz || '' ?}


\zaswzmum_powod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala czy wykazywać powód rozwiązania warunków umowy o pracę i jeśli, tak to jaki.
::   WE: _a [DICT] - tablica nazwana zawierająca informacje o wypowiedzeniu warunków umowy o pracę
::   WY: powód rozwiązania warunków umowy o pracę i jeśli, tak to jaki
::----------------------------------------------------------------------------------------------------------------------
_powod:=_a.POWOD;

_informacja:='';

{? H_UM.RU().K='C'
|| _informacja+='Przyczyną wypowiedzenia dotychczasowych warunków umowy o pracę jest '+_powod+'.'
?};
_informacja


\zaswzwyp_dlugosc_okresu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala długość okresu w rozwiązaniu umowy dla pracownika.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: długość okresu w rozwiązaniu umowy dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_dlugosc_okresu:=_a.Dlugosc_okresu;

{? _dlugosc_okresu=1 || 'dwutygodniowego'
|? _dlugosc_okresu=2 || 'miesięcznego'
|? _dlugosc_okresu=3 || 'trzymiesięcznego'
|? _dlugosc_okresu=4 || 'trzydniowego'
|? _dlugosc_okresu=5 || 'tygodniowego'
?}


\zaswzwyp_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Rozwiązanie umowy za wypowiedzeniem".
::   WE: _a [REFERENCE] - referencja do pracownika
::       _b [DATE] - data rozwiązania umowy o pracę
::       _c [STRING] - przyczyna wypowiedzenia
::       _d [INTEGER] - numer odpowiadający okresowi wypowiedzenia
::       _e [STRING] - odwołanie do Sądu Pracy
::       _f [STRING] - siedziba Komisji Pojednawczej
::   WY: tablica nazwana z danymi lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;
_data_rozwiazania:=_b;
_przyczyna_wypowiedzenia:=_c;
_dlugosc_okresu:=_d;
_sad_pracy:=_e;
_komisja:=_f;
_data_zawarcia:=_g;

{? P.seek(_ref_pracownika,,1)
|| _dane_do_rozwiazania:=obj_new('Data_zawarcia','Data_rozwiazania','Powod','Dlugosc_okresu','Sad','Komisja');
   _dane_do_rozwiazania.Data_zawarcia:=_data_zawarcia;
   _dane_do_rozwiazania.Data_rozwiazania:=_data_rozwiazania;
   _dane_do_rozwiazania.Powod:=_przyczyna_wypowiedzenia;
   _dane_do_rozwiazania.Dlugosc_okresu:=_dlugosc_okresu;
   _dane_do_rozwiazania.Sad:=_sad_pracy;
   _dane_do_rozwiazania.Komisja:=_komisja;
   _dane_do_rozwiazania
|| ~~
?}


\zatrudnienie_adres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala adres na podstawie adresu uzupełnionego w chwili zatrudnienia pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: adres na podstawie adresu uzupełnionego w chwili zatrudnienia pracownika
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;

_adres:='';
{? _H.OS_ADRES<>null()
|| _adres:=exec('adres','osoba',_H.OS_ADRES().RODZAJ,_H.OS_ADRES().OD)
?};
_adres


\zatrudnienie_charakter
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala charakter pracy w okresie zatrudnienia wynikający z umowy dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: charakter pracy w okresie zatrudnienia dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.CP().O


\zatrudnienie_data_przyg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę przygotowania dokumentu dla okresu zatrudnienia wynikającą z umowy dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: data przygotowania dokumentu dla okresu zatrudnienia dla pracownika
::----------------------------------------------------------------------------------------------------------------------
{? _a.PRZYG<>date(0,0,0) || _a.PRZYG$4+' r.' || '' ?}


\zatrudnienie_data_rozp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę rozpoczęcia okresu zatrudnienia wynikającą z umowy dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: data rozpoczęcia okresu zatrudnienia dla pracownika
::----------------------------------------------------------------------------------------------------------------------
{? _a.OD<>date(0,0,0) || '%1 r.' [_a.OD$6] || '' ?}


\zatrudnienie_data_zak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę zakończenia okresu zatrudnienia wynikającą z umowy dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: data zakończenia okresu zatrudnienia dla pracownika
::----------------------------------------------------------------------------------------------------------------------
{? _a.DO<>date(0,0,0) || _a.DO$6 + ' r.' || '' ?}


\zatrudnienie_data_zaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala datę zawarcia aneksu dla okresu zatrudnienia dla pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: data zawarcia umowy dla okresu zatrudnienia dla pracownika
::----------------------------------------------------------------------------------------------------------------------
{? _a.PODPIS<>date(0,0,0) || _a.PODPIS$6 + ' r.' || '' ?}


\zatrudnienie_dopelnienie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala dopełnienie do nadgodzin dla okresu zatrudnienia wynikające z umowy dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: informacja o dopełnieniu do nadgodzin dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;

_informacja:='';
{? _H.CZY_NADG='T'
|| _informacja+='dopuszczalna liczba godzin pracy ponad określony w umowie wymiar czasu '+
                'pracy, których przekroczenie uprawnia pracownika, oprócz normalnego wynagrodzenia, do dodatku '+
                'do wynagrodzenia: ';
   {? _H.DOP_NADG
   || _informacja+=$_H.DOP_NADG+' godz. dobowo';
   {? _H.DOP_ST || _informacja+=', ' ?}
   ?};

   {? _H.DOP_ST<>0
   || _informacja+=$_H.DOP_ST+' godz. średniotygodniowo'
   ?}
?};
_informacja


\zatrudnienie_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przywraca kontekst dla tabel dla źródła danych "Zatrudnienie"
::   WE:
::   WY: 0/1 - nie udało się przywrócić kontekstu/udało się przywrócić kontekst
::----------------------------------------------------------------------------------------------------------------------
H.cntx_pop();
H_UM.cntx_pop();
P.cntx_pop();
UD_SKL.cntx_pop();
STN.cntx_pop();
S_ZUS.cntx_pop()


\zatrudnienie_inne_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala inne warunki umowy dla okresu zatrudnienia wynikające z umowy dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: inne warunki umowy dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;

_inne_warunki:=exec('pobierz_inne_warunki','szablon_rek',_H);
{? _inne_warunki<>'' || 'inne warunki zatrudnienia: %1' [_inne_warunki] || '' ?}


\zatrudnienie_kwota_liczbowo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypisuje przekazane wynagrodzenie dla podanego pracownika w postaci liczbowej.
::   WE: _a [tablica nazwana lub STRING] - drugi składnik płacowy
::   WY: przekazane wynagrodzenie pracownika w postaci liczbowej
::----------------------------------------------------------------------------------------------------------------------
_kwota:=_a;

{? type_of(_kwota)>100 || _kwota.Liczbowo || _kwota ?}


\zatrudnienie_kwota_slownie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypisuje przekazane wynagrodzenie dla podanego pracownika w postaci słownej.
::   WE: _a [tablica nazwana lub STRING] - drugi składnik płacowy
::   WY: przekazane wynagrodzenie pracownika w postaci słownej
::----------------------------------------------------------------------------------------------------------------------
_kwota:=_a;

{? type_of(_kwota)>100
|| {? _kwota.Slownie='' || '' || '(słownie: %1)' [_kwota.Slownie] ?}
|| ''
?}


\zatrudnienie_miejsce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala miejsce pracy dla okresu zatrudnienia wynikające z umowy dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: informacja o miejscu pracy dla pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.MIEJSCE


\zatrudnienie_osoba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zwraca etykietę dla osoby na podstawie danych wpisanych do zatrudnienia.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: etykieta dla osoby na podstawie danych wpisanych do zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
_H:=_a;

_H.P().OSOBA().PIERWSZE+{? +OSOBA.DRUGIE || ' '+OSOBA.DRUGIE || '' ?}+' '+OSOBA.NAZWISKO+
', zamieszkał'+{? OSOBA.PLEC='K' || 'a' || 'y' ?}+' '+
{? _H.OS_ADRES<>null()
|| form(exec('adres','osoba',_H.OS_ADRES().RODZAJ,_H.OS_ADRES().OD))
|| _adres:=exec('adres','osoba','C',_H.OD);
   {? _adres=''
   || _adres:=exec('adres','osoba','S',_H.OD)
   ?};
   form(_adres)
?}


\zatrudnienie_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Zachwouje kontekst dla tabel dla źródła danych "Zatrudnienie"
::   WE:
::   WY: 0/1 - nie udało się zachować kontekstu/udało się zachować kontekst
::----------------------------------------------------------------------------------------------------------------------
H.cntx_psh();
H_UM.cntx_psh();
P.cntx_psh();
UD_SKL.cntx_psh();
STN.cntx_psh();
S_ZUS.cntx_psh()


\zatrudnienie_rodzaj_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala rodzaj umowy dla pracownika wynikający z przebiegu zatrudnienia.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: rodzaj umowy dla pracownika wynikający z przebiegu zatrudnienia
::----------------------------------------------------------------------------------------------------------------------
{? _a.RU().K='A' || 'okres próbny'
|? _a.RU().K='B' || 'czas określony'
|? _a.RU().K='C' || 'czas nieokreślony'
|? _a.RU().K='D' || 'zastępstwo'
|? _a.RU().K='E' || 'czas określony'
|| ''
?}


\zatrudnienie_stanowisko
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala stanowisko podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: stanowisko pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.ST().ST


\zatrudnienie_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Wypełnia zestaw danych dla żródła "Zatrudnienie", oraz "Umowa o pracę".
::   WE: _a [REFERENCE] - referencja do rekordu P
::       _b [DATE] - przekazana data
::       _c [REFERENCE] - referencja do rekordu H_UM
::   WY: referencja do rekordu lub ~~
::----------------------------------------------------------------------------------------------------------------------
_ref_pracownika:=_a;
_data:=_b;
_ref_umowy:=_c;
{? +$_ref_pracownika & +$_ref_umowy || 1
|? +$_ref_pracownika & $_ref_umowy=''
|| _ref_umowy:=exec('pobierz_ref_umowy','szablon_rek',_ref_pracownika,'zaswzatr',_data)
|? $_ref_pracownika='' & +$_ref_umowy
|| _ref_pracownika:=exec('pobierz_ref_pracownika','szablon_rek',_ref_umowy,'zaswzatr')
|| return(~~)
?};

H.index('_HISTDAT');
H.prefix(_ref_pracownika);

{? H.find_le(_data)
|| {? type_of(_ref_umowy)<>type_of(~~) & type_of(_ref_pracownika)<>type_of(~~)
   & H_UM.seek(_ref_umowy,,1) & P.seek(_ref_pracownika,,1)
   || H
   || ~~
   ?}
|| ~~
?}


\zatrudnienie_wydzial
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala jednostkę organizacyjną dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: jednostka organizacyjna pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.WYDZIAL().SYMBOL


\zatrudnienie_wymiar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala wymiar zatrudnienia dla podanego pracownika.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: wymiar zatrudnienia pracownika
::----------------------------------------------------------------------------------------------------------------------
{? _a.RWYM=1 || 'pełen etat' || '%1/%2 etatu' [$_a.RWYL,$_a.RWYM] ?}


\zatrudnienie_wynagrodzenie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Przekazuje dalej rekord potrzebny do ustalenia składników wynagrodzenia dla pracownika w zadanym okresie na
::       podstawie umowy
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? H.seek(_a.ref(),,1) || H || ~~ ?}


\zatrudnienie_zatrudniajacy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.14]
:: OPIS: Ustala zatrudniejącego pracownika dla podanego okresu zatrudnienia
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: zatrudniający pracownika
::----------------------------------------------------------------------------------------------------------------------
_a.PRZEDST


\zmiana_wyslugi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Informacje o zmianie dodatku za wysługę.
::   WE: _a [_P] - wskazanie pracownika
::       _b [DATE] - data ustalenia zmiany wysługi
::   WY: tablica nazwana z polami
::       DATA - data zmiany wysługi
::       LATA - lata pracy
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_refp:=_a;
_data:=_b;

_ret:=obj_new('DATA','LATA');
_ret.DATA:=_data$6+'r.';
_ret.LATA:=0;

P.cntx_psh();
{? P.seek(_refp,,1)
|| _sl:=0;
   _lata:=0;
   {? P.DS~3=1
   || _sm:=P.DS~2
   || _sm:=(P.DS~2)+1;
      {? _sm>12
      || _sm:=1;
         _sl:=1
      ?}
   ?};
   {? P.ZA='T' & _data~2=_sm
   || _lata:=(_data~1)-(P.DS~1)-_sl
   ?};
   _ret.LATA:=_lata
?};
P.cntx_pop();

_ret


\sekwencje_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.14]
:: OPIS: Pusta tabela dla żródła "Sekwencje sterujące".
::   WE:
::   WY: referencja do pustego zestawu danych
::----------------------------------------------------------------------------------------------------------------------
_pus:=obj_new(1);
_pus


\umowa_p_do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Ustala pierwotną datę zakończenia umowy.
::   WE: _a [SYSLOG] - rekord tabeli H_UM
::   WY: Pierwotna data zakończenia umowy lub '' jeśli data 0000/00/00
::----------------------------------------------------------------------------------------------------------------------
{? H_UM.P_DO<>date(0,0,0) || H_UM.P_DO$6+' r.' || '' ?}


\umowa_p_od
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Ustala pierwotną datę rozpoczęcia umowy.
::   WE: _a [SYSLOG] - rekord tabeli H_UM
::   WY: Pierwotna data rozpoczęcia umowy
::----------------------------------------------------------------------------------------------------------------------
H_UM.P_OD$6+' r.'


\zaswsw_identyfikator
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [23.25]
:: OPIS: Zwraca wybrany identyfikator firmy dla szablonu "Świadectwo pracy".
::   WE:
::   WY: Identyfikator lub '' jeśli identyfikator jest inny niż przewidziany
::----------------------------------------------------------------------------------------------------------------------
_identFimy:=-_a.parametry.IDENT;
_dane:=exec('firma_tabela','szablon_rek',_a.parametry.OD);
{? type_of(_dane)=type_of(~~)
|| return('')
?};
{? _identFimy='n'
|| 'NIP: '+KST.NIP
|? _identFimy='r'
|| 'REGON-PKD: '+KST.REG
|| ''
?}


\umowa_rozp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [23.25]
:: OPIS: Ustala datę rozpoczęcia umowy.
::   WE: _a [SYSLOG] - rekord tabeli H_UM
::   WY: Data rozpoczęcia umowy
::----------------------------------------------------------------------------------------------------------------------
H.PODPIS$6+' r.'


\zaswuman_data_rozp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [23.25]
:: OPIS: Ustala datę początku obowiązywania aneksu do umowy o pracę.
::   WE: _a [SYSLOG] - rekord tabeli H
::   WY: data początku zmian w związku z przeszeregowaniem
::----------------------------------------------------------------------------------------------------------------------
_a.uchwyt.PODPIS$6+' r.'


\ppsf_h_prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Kontekst dla pracy zdalnej - odłożenie
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
Cntx.psh(PPSF_H,PPSFROZD,PPSF_ADR,PPSFT);
Cntx.clr(PPSF_H,PPSFROZD,PPSF_ADR,PPSFT)


\ppsf_h_epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Kontekst dla pracy zdalnej - przywrócenie
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
Cntx.pop(PPSF_H,PPSFROZD,PPSF_ADR,PPSFT);
{? PPSF_H.f_active() || PPSF_H.f_clear() ?};
{? PPSF_ADR.f_active() || PPSF_ADR.f_clear() ?}


\ppsf_h_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Wypełnia zestaw danych dla Pracy zdalnej stałej.
::   WE: _a [REFERENCE] - wskazanie na pracę zdalną
::       _b P.ref
::       _c H_UM.OD
::       _d H_UM.DO
::   WY: informacja o pracy zdalnej
::----------------------------------------------------------------------------------------------------------------------
_TAB:=tab_tmp(2,
   'NAG','INTEGER','0 Nagłówek/1 Pozyzje',
   'LP','IDADD',,
   'TEKST1','STRING[255]','Tekst',
   'TEKST2','STRING[255]','Tekst'
);
_add:="
   _a.NAG:=_b;
   _a.TEKST1:=_c;
   _a.TEKST2:=_d;
   _a.add()
";
{? _a
|| _nag:='świadczenie pracy w trybie pracy zdalnej zgodnie z art. 67¹⁸ Kodeksu pracy od %1 r.%2'
      [PPSF_H.OD$6,{? PPSF_H.DO<>#0 || ' do '+PPSF_H.DO$6+' r.' || '' ?}];
   _wh:='
      PPSF_ADR.P=:_a and
      PPSF_ADR.A=\'T\' and
      (PPSF_ADR.DO is null or PPSF_ADR.DO>to_date(:_b)) and
      (PPSF_ADR.OD<to_date(:_c) or to_date(:_c) is null)
   ';
   {? ~PPSF_ADR.f_set(,,_wh,_b,_c,_d)
   || PPSF_ADR.f_set(,,'0=1')
   ?};
   _ret:='';
   {? PPSF_ADR.f_first()
   || {!
      |? _ret+=exec('opis_warp','ppsf','adres');
         _ret+='; ';
         PPSF_ADR.f_next()
      !};
      _ret-=2
   ?};
   _add(_TAB,1,'- adres wykonywania pracy zdalnej: %1'[form(_ret)],_nag);
   _co:=obj_new(3); _na:=obj_new(obj_len(_co));
   _co[1]:='\n'; _na[1]:=' ';
   _co[2]:='\t'; _na[2]:=' ';
   _co[3]:='\"'; _na[3]:='\'';
   _ret:='';
   {? PPSF_H.PPSFROZD
   || PPSF_H.PPSFROZD();
      _ret:=gsub(PPSFROZD.memo_txt(,1,'TEKST'),_co,_na)
   ?};
   _add(_TAB,1,'- tryb pracy zdalnej: %1'[_ret],_nag);
   _ret:=gsub(PPSF_H.memo_txt(,1,'OPIS'),_co,_na);
   _add(_TAB,1,'- inne postanowienia dotyczące pracy zdalnej: %1'[_ret],_nag)
|| _add(_TAB,0,'','');
   _add(_TAB,1,'','')
?};
_TAB


\ppsf_h_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Ustala listę dla sprawozdania.
::   WE: _a [INTEGER] - 0 nagłówek, 1 treść, pozycje
::       _b [SYSLOG] - tabela z danymi
::   WY: lista opisów pracy zdalnej lub ''
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')=type_of(SYSLOG) || {? _a || _b.TEKST1 || _b.TEKST2 ?} || '' ?}


\ppsf_h_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Wskazanie na Pracę zdalną stałą
::       UWAGA
::       Zmienna par ustawiona w pkd_zaswumowaoprace.rpm
::   WE:
::   WY: ref lub null
::----------------------------------------------------------------------------------------------------------------------
{? +|par.UM.PPSF_H & PPSF_H.seek(par.UM.PPSF_H,,1) || PPSF_H.ref()|| null() ?}


\zdalna_sw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Praca zdalna dla świadectwa pracy
::   WE: _a [OBJ] - Zestaw parametrów
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('is_pzd01','ppsf') || return('') ?};
_ppsfr:=exec('FindInSet','#table','PPSFR','KOD','ZDALN_OK',exec('ref_firma','#firma'));
{? ~_ppsfr || return('') ?};
_startPz:=date(_a.parametry.UDO~1,1,1);
{? _startPz<_a.parametry.UOD || _startPz:=_a.parametry.UOD ?};
_zlicz:=exec('zlicz_ppsf','ppsf',P.ref(),_ppsfr,_startPz,_a.parametry.UDO);
{? _zlicz.jest
|| ', wykonywał%1 pracę zdalną przewidzianą w art. 67³³ § 1 Kodeksu pracy w wymiarze %2 %3'
      [{? OSOBA.PLEC='K' || 'a' || '' ?},$_zlicz.DR,{? _zlicz.DR=1 || 'dzień' || 'dni' ?}]
|| ''
?}


\warunki_pracy_zd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Tekst warunków pracy zdalnej
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=sql('
   select WARTOSC as TEKST
   from SD_UPAR
   where SD_UINS=\':_a\'
      and WIERSZ=cast(:_b as INTEGER_TYPE)
      and NAZWA like \'PR_ZD_%\'
   ',_a.PRACA_ZD,_a.PRACA_ZW);
_ret:='';
{? _tab.first()
|| {!
   |? _ret+=exec('str2val','#convert',_tab.TEKST)+' ';
      _tab.next()
   !}
?};
_ret-1


\scal_rekordy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Scala bufory rekordów w zmienną
::   WE: _a [BUFOR] - Najczęściej bufor __CALL
::       _b [BUFOR] - Najczęściej bufor __CALL2 itd...
::   WY: obj
::----------------------------------------------------------------------------------------------------------------------
_fld:='';
_val:='';
_jest:=obj_new(_);
{! _arg:=1.._ |!
   _jest[_arg]:=0;
   {? var_pres('_[%1]'[$_arg])=type_of(SYSLOG)
   || _jest[_arg]:=1;
      {! _licz:=1..obj_len(_[_arg]) |!
         _acr:=_[_arg].fld_acr(_licz);
         {? ~(_fld*("'"+_acr+"'"))
         || _fld+="'"+_acr+"',"
         ?}
      !}
   ?}
!};
_fld-=1;
_obj:=($('obj_new(%1)'[_fld]))();
{! _arg:=1.._ |!
   {? _jest[_arg]
   || {! _licz:=1..obj_len(_[_arg]) |!
         _acr:=_[_arg].fld_acr(_licz);
         {? (_fld*("'"+_acr+"'"))
         || ($('_a.%1:=_b'[_acr]))(_obj,_[_arg][_licz])
         ?}
      !}
   ?}
!};
_obj


\zaswsw_urlop_sila_wyzsza
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Ustala informację, czy pracownik korzystał/nie korzystał z urlopu z tytułu siły wyższej.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: tekst
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _urlop:=_dane_swiadectwa.parametry.USW;
   _informacja+={? _urlop=''
                || '%1 ze zwolnienia od pracy przewidzianego w art. 148¹ § 1 Kodeksu pracy'
                     [gender.text('nie korzystała','nie korzystał')]
                || '%1 zwolnienie od pracy przewidziane w art. 148¹ § 1 Kodeksu pracy w wymiarze %2'
                     [gender.text('wykorzystała','wykorzystał'),_urlop]
                ?}
?};
_informacja


\zaswsw_urlop_opiekunczy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Ustala informację, czy pracownik korzystał/nie korzystał z urlopu opiekuńczego.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: tekst
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _urlop:=_dane_swiadectwa.parametry.UOP;
   _informacja+={? _urlop=''
                || '%1 z urlopu opiekuńczego'[gender.text('nie korzystała','nie korzystał')]
                || '%1 urlop opiekuńczy w wymiarze %2'[gender.text('wykorzystała','wykorzystał'),_urlop]
                ?}
?};
_informacja


\zaswsw_praca_zdalna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Ustala informację, czy pracownik pracuje zdalnie.
::   WE: _a [DICT] - tablica nazwana z danymi dotyczącymi rozwiązania umowy
::   WY: tekst
::----------------------------------------------------------------------------------------------------------------------
_dane_swiadectwa:=_a;

_informacja:='';

{? type_of(_dane_swiadectwa)>100 & type_of(_dane_swiadectwa.parametry)>100
|| _ppsfr:=exec('FindInSet','#table','PPSFR','KOD','ZDALN_OK',exec('ref_firma','#firma'));
   _startPz:=date(_dane_swiadectwa.parametry.UDO~1,1,1);
   {? _startPz<_dane_swiadectwa.parametry.UOD
   || _startPz:=_dane_swiadectwa.parametry.UOD
   ?};
   _praca:=exec('zlicz_ppsf','ppsf',P.ref(),_ppsfr,_startPz,_dane_swiadectwa.parametry.UDO).DR;
   _informacja+={? _praca=0
                || '%1 pracy zdalnej przewidzianej w art. 67³³ § 1 Kodeksu pracy'
                     [gender.text('nie wykonywała','nie wykonywał')]
                || '%1 pracę zdalną przewidzianą w art. 67³³ § 1 Kodeksu pracy w wymiarze %2 %3'
                     [gender.text('wykonywała','wykonywał'),$_praca,{? _praca=1 || 'dnia' || 'dni'?}]
                ?}
?};
_informacja


\zaswuman_ppsf_tresc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Wiersz danych z opisu pracy zdalnej
::   WE:
::   WY: tekst pozycji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(SYSLOG) || _a.TEKST || '' ?}


\zaswuman_ppsf_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Dane o pracy zdalne dla aneksu
::   WE:
::   WY: set danych
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('' ) & +|_a
|| proc_exe('praca_zd_sd@zasw',_a,_b)
|| sql(''+"select '' C1, '' as TEKST from SYSLOG where 0=1")
?}


\zaswuman_ppsf_okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Informacja o okresie świadczenia pracy zdalnej
::   WE:
::   WY: tekst
::----------------------------------------------------------------------------------------------------------------------
_parametry:=_a.dane_z_czynnosci.parametry;
{? +|_parametry.praca_zd & +|_parametry.praca_od
|| '5)   świadczenie pracy w trybie pracy zdalnej zgodnie z art. 67¹⁸ Kodeksu pracy od %1 r.%2'
      [_parametry.praca_od,{? +_parametry.praca_do || ' do '+_parametry.praca_do+' r.' || '' ?}]
|| ''
?}


:Sign Version 2.0 jowisz:1045 2024/01/30 10:33:26 7be432fbc1880e09d27549257420930b07bc9ce18b8ce412a185b386e2c2b008e5ffdd21104885d0a81a2017158b6df98d37a3d048668e8c0854faae722c471919a2aead3b88127305d9885763469f39bbd461a3d5419527239ec5c99c3ca0a903827b265c818082a2eac9d063e48450574b6222ea850c80c86d174b18090ae5
