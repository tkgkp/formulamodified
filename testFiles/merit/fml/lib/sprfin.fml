:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: sprfin.fml
:: Utworzony: 23.02.2015
:: Autor: DRO
::======================================================================================================================
:: Zawartość: Formuły związane z obsługą sprawozdań finansowych
::======================================================================================================================


\usun_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: 'Grupa przed' dla akcji 'Usun' w sprawozdaniach finans.
::   WE: _a - akronim tabeli
::       [_b] - tekst komunikatu
::  OLD: \usun_bg/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
{?  {? _=2
     || FUN.ask(_b,,0,'Nie'@,'Tak'@)=0
     || FUN.ask('Usunąć zaznaczone rekordy?'@,,0,'Nie'@,'Tak'@)=0
     ?}
|| 0
|| sel_nchk();
   {? _a='DEFW'
   || TDEFW:=tab_tmp(1,
        'REF','INTEGER','REF',
        'KOLEJ','INTEGER','KOLEJ')
   ?};
   ssize_s:=($(_a+'.sel_size'))();
   bledy_s:=0;
   1
?}


\usun_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: 'Grupa po' dla akcji 'Usun' w sprawozdaniach finans.
::   WE: [_a] - tekst msg'a
::       [_b] - tekst okienka msg'a
::  OLD: \usun_ag/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TDEFW')>0
|| " dla tabeli DEFW usuniecie tych wierszy, ktorych nie udalo sie usunac w pierwszym podejsciu ";
   DEFW.cntx_psh();
   DEFA.cntx_psh();
   DEFA.index('SKLADNIK');
   _pet:=TDEFW.first;
   {!|? _pet
   |! {? DEFW.seek(TDEFW.REF,)
      || DEFA.prefix(DEFW.ref);
         _kolej:=TDEFW.KOLEJ;
         TDEFW.cntx_psh();
         _poza:=0;
         _pet1:=DEFA.first;
         {!|? _pet1 & _poza=0
         |! {? TDEFW.find_key(#DEFA.WYR)
            || TDEFW.KOLEJ:=_kolej+1;
               TDEFW.put
            || _poza:=1
            ?};
            _pet1:=DEFA.next
         !};
         TDEFW.cntx_pop();
         {? _poza
         || TDEFW.KOLEJ:=0; TDEFW.put
         ?}
      ?};
      _pet:=TDEFW.next
   !};
   DEFA.cntx_pop();
   DEFW.cntx_pop();
   _ndx:=TDEFW.ndx_tmp(,,'KOLEJ',,1);
   TDEFW.index(_ndx);
   _pet:=TDEFW.first;
   {!|? _pet
   |! {? TDEFW.KOLEJ<>0
      || {? DEFW.seek(TDEFW.REF,) || exec('defw_usu','sprfin',1) || bledy_s+=1 ?}
      || bledy_s+=1
      ?};
      _pet:=TDEFW.next
   !};
   obj_del(TDEFW)
?};
{? _ & +_a
|| FUN.emsg('Zaznaczonych: %1. \n%2 %3.'@[$ssize_s,_a,$(ssize_s-bledy_s)])
|| FUN.emsg('Zaznaczonych: %1. \nUsunięto:  %2.'@[$ssize_s,$(ssize_s-bledy_s)])
?};
&ssize_s; &bledy_s


\defw_usu
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: formula usun rekord w tabeli DEFW
::   WE: _a - 1 - nie dodawac do tabeli TDEFW,
::            0 lub brak - dodawac (tylko dla akcji grupowej)
::  OLD: \defw_usu/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ssize_s')>0 || _gr:=1 || _gr:=0 ?};
{? _=0 || _a:=0 ?};
DEFA.cntx_psh(); DEFA.index('SKLADNIK'); DEFA.prefix(DEFW.ref);
DEFK.index('DEFW'); DEFK.prefix(DEFW.ref());
{? var_press('E_SPR_P')>0
|| E_SPR_P.index('DEFW'); E_SPR_P.prefix(DEFW.ref())
?};
{? DEFA.first
|| {? ~_gr
   || FUN.emsg('Wiersz wykorzystywany w definicji algorytmu\ninnego wiersza.'@)
   || {? _a
      || bledy_s+=1
      ||
:: przy usuwaniu grupowym - wiersze do ktorych sa powiazania zostana usuniete w formule grupa po
         TDEFW.blank();
         TDEFW.REF:=#DEFW.ref;
         TDEFW.KOLEJ:=1;
         TDEFW.add()
      ?}
   ?}
|? DEFK.first()
|| {? ~_gr
   || FUN.info('Wiersz wykorzystywany w definicji algorytmu kolumn.'@)
   || bledy_s+=1
   ?}
|? var_press('E_SPR_P')>0 & E_SPR_P.first()
|| {? ~_gr
   || FUN.info('Wiersz ma przypisane wartości używane w e-Sprawozdaniu\ndotyczącym podatku dochodowego.'@)
   || bledy_s+=1
   ?}
|| _blad:=0;
:: sprawdzanie, czy wiersz sprawozdania mozna usunac w danym systemie
:: czy liczba zlaczen do wiersza jest rowna liczbie mozliwych do usuniecia powiazan
   _lic_zl:=DEFW.count(); _lic_zl1:=0; _lic_kp:=0; _lic_xbrl:=0;
:: WARTOSCI
   WARTOSCI.cntx_psh(); ROK_F.cntx_psh();
   ROK_F.index('ROKPOCZ');
   {? REF.FIRMA=REF.GRUPA
   || ROK_F.prefix()
   || ROK_F.prefix(REF.FIRMA)
   ?};
   {? ROK_F.first()
   || {! |?
        WARTOSCI.use('wsik_'+ROK_F.KOD);
        WARTOSCI.index('WYRAZ'); WARTOSCI.prefix(DEFW.ref());
        _lic_zl1+=WARTOSCI.size(); ROK_F.next()
      !}
   ?};
   WARTOSCI.cntx_pop(); ROK_F.cntx_pop();
:: DEFA - wszystkie
   DEFA.index('LP'); DEFA.prefix(DEFW.ref); _lic_zl1+=DEFA.size();
   DEFA.index('SKLADNIK'); DEFA.prefix(DEFW.ref); _lic_zl1+=DEFA.size();
:: WOPIS - wszystkie
   WOPIS.index('OPIS'); WOPIS.prefix(DEFW.ref()); _lic_zl1+=WOPIS.size();
:: ALG_PAR- wszystkie
   {? REF.FIRMA=REF.GRUPA
   || ALG_PAR.index('ALG_PAR4'); ALG_PAR.prefix(DEFW.ref())
   || ALG_PAR.index('ALG_PAR1'); ALG_PAR.prefix(REF.FIRMA,DEFW.ref())
   ?};
   _lic_zl1+=ALG_PAR.size();
:: XBRL
   XBRL_POW.index('DEFW'); XBRL_POW.prefix(DEFW.ref());
   _lic_xbrl:=XBRL_POW.size();
   {? XBRL_POW.first()
   || _xbrl_nag:=XBRL_POW.XBRL_DEF().XBRL_NAG().NAZ
   ?};
   {? _lic_zl<>_lic_zl1
   || _blad:=1;
      {? ~_gr
      || {? _lic_zl=(_lic_zl1+_lic_kp)
         || FUN.info('Dany wiersz jest wykorzystywany w pozycjach danych kokpitu.'
                     '\nUsunięcie niemożliwe.'@)
         |? _lic_zl=_lic_zl1+_lic_xbrl
         || FUN.info('Dany wiersz powstał na podstawie taksonomi XBRL: %1.\n'
                     'Usunięcie niemożliwe.'@[_xbrl_nag])
         || FUN.info('Dany wiersz jest wykorzystywany w innych systemach.'
                     '\nUsunięcie niemożliwe.'@)
         ?}
      || bledy_s+=1
      ?}
   ?};
   {? ~_blad & ((~_gr & FUN.ask('Czy usunąć wiersz?'@)) | _gr)
   || exec('us_defw', 'sprfin',_gr)
   ?}
?};
DEFA.cntx_pop();
1


\us_defw
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Usunięcie wiersza sprawozdania
::   WE: _a - 1 oznacza akcje grupowa, 0 lub brak parametru - nie grupowa
::  OLD: \us_defw/skid_sil
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _gr:=0 || _gr:=_a ?};
DEFW.cntx_psh;
DEFW.GRUPA();
DEFW.index('LP');
DEFW.prefix(GR_SIK.ref);
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ');
{? REF.FIRMA=REF.GRUPA
|| ROK_F.prefix()
|| ROK_F.prefix(REF.FIRMA)
?};
do;
DEFW.cntx_psh(); WARTOSCI.cntx_psh();
{? ROK_F.first
|| {! |?
     WARTOSCI.use('wsik_'+ROK_F.KOD);
     WARTOSCI.index('WYRAZ'); WARTOSCI.prefix(DEFW.ref);
     {? WARTOSCI.first  || {! |? WARTOSCI.del() !} ?};
     ROK_F.next()
   !}
?};
DEFW.cntx_pop(); WARTOSCI.cntx_pop();
DEFA.index('LP'); DEFA.prefix(DEFW.ref);
{? DEFA.first() || {! |? DEFA.del() !} ?};
WOPIS.index('OPIS'); WOPIS.prefix(DEFW.ref);
{? WOPIS.first() || {! |? WOPIS.del() !} ?};
W_ALGPAR.cntx_psh();
{? REF.FIRMA=REF.GRUPA
|| ALG_PAR.index('ALG_PAR4'); ALG_PAR.prefix(DEFW.ref())
|| ALG_PAR.index('ALG_PAR1'); ALG_PAR.prefix(REF.FIRMA,DEFW.ref)
?};
{? ALG_PAR.first()
|| {! |?
      {? ROK_F.first()
      || {! |?
           W_ALGPAR.use('walg_'+ROK_F.KOD);
           W_ALGPAR.index('W_ALGPAR'); W_ALGPAR.prefix(ALG_PAR.ref);
           {? W_ALGPAR.first  || {! |? W_ALGPAR.del() !} ?};
           ROK_F.next()
         !}
      ?};
      ALG_PAR.del()
   !}
?};
W_ALGPAR.cntx_pop();
:: czy ostatni rekord - jesli tak -  usunac i nic nie dosuwac
_defw_nad:="
   DEFW.cntx_psh(); DEFW.index('DEFW_NAD'); DEFW.prefix(DEFW.ref());
   {? DEFW.first()
   || {!
      |? DEFW.cntx_psh(); DEFW.prefix();
         DEFW.DEFW_NAD:=0; DEFW.put();
         DEFW.cntx_pop();
         DEFW.first()
      !}
   ?};
   DEFW.cntx_pop()
";
{? DEFW.next()
|| 'dosunięcie rekordów w tabeli ';
   _a:=DEFW.ref;
   _b:=1;
   DEFW.prev();
   exec('del_lang','lang',DEFW.ref());
   _defw_nad();
   DEFW.del();
   {? ~DEFW.seek(_a) || {? _gr || bledy_s+=1 ?}; undo(); _b:=2 ?};
   {? ~_gr
   || {!|? DEFW.LP-=1;
           {? ~DEFW.put || undo(); _b:=2 ?};
           DEFW.next()
      !}
   ?}
|| exec('del_lang','lang',DEFW.ref());
   _defw_nad();
   DEFW.del();
   _b:=0
?};
end;
ROK_F.cntx_pop();
DEFW.cntx_pop();
{? _b=1
|| DEFW.seek(_a)
|? _b=0
|| DEFW.last()
?}


\be_akt_o
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2006]
:: OPIS: Przed redakcja pol OKRES_OD i OKRES_DO zmiennej OKRESY
::  OLD: \be_akt_o/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
OKRESY.ROK1();
{? cur_afld()='OKRES_DO' & -(19+menu_txt())='aktualizacja danych'
|| 0
|| 1
?}


\okr_od_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Formula po redakcji okienka AKTUALIZ zmiennej OKRESY
::   WE: _a - 1 oznacza wywołanie tej formuły z procedury wbudowanej, 0 lub brak parametru nie z procedury
::  OLD: \okr_od_a/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _prc:=0 || _prc:=_a ?};
_p:='';
{? REF.S_FIRMA=REF.GRUPA
|| _p:=__CHK.record2(REF,'FIRMA','Firma');
   {? _p='' & REF.FIRMA().TYP<>'S'
   || _p:=__CHK.record2(REF,'W_SCH','Struktura')
   ?}
?};
{? _p=''
|| {? SIK.GR_SIK=null
   || GR_SIK.cntx_psh();
      GR_SIK.index('SAKCEPT');
      GR_SIK.prefix(REF.GRUPA,'T'); _is:=GR_SIK.first();
      GR_SIK.prefix(REF.FIRMA,'T'); _is+=GR_SIK.first();
      GR_SIK.cntx_pop();
      {? _is=0
      || {? ~_prc
         || FUN.info('Brak zaakceptowanych sprawozdań.'@);
            _p:='GR_SIK'
         || _p:='Brak zaakceptowanych sprawozdań.'
         ?}
      ?}
   |? SIK.GR_SIK().AKC<>'T'
   || {? ~_prc
      || FUN.info('Sprawozdanie nie jest zaakceptowane.'@);
         _p:='GR_SIK'
      || _p:='Sprawozdanie nie jest zaakceptowane.'
      ?}
   ?}
?};
{? _p=''
|| _zdate:=date(0,0,0);
   _p:=__CHK.record(OKRESY,,'ROK1','OKRES_OD','OKRES_DO');
   {? _p=''
   || _p:={? OKRESY.OKRES_OD().NR>OKRESY.OKRES_DO().NR
          || {? ~_prc
             || FUN.info('Niewłaściwy przedział okresów.'@)
             || 'Niewłaściwy przedział okresów.'
             ?};
             {? var_pres('srw')>0 || 'OKRES_OD' || 'OKRES_DO' ?}
          |? var_pres('srw')>0 & -OKRESY.OKRES_OD().NAZ='bilans otwarcia'
          || {? ~_prc
             || FUN.info('Nie można wybierać okresu Bilans otwarcia.'@);
               'OKRES_OD'
             || 'Nie można wybierać okresu Bilans otwarcia.'
             ?}
          || ''
          ?}
   ?};
   {? OKRESY.KONS1<>'T' & OKRESY.KONS2<>'T' & OKRESY.KONS3<>'T'
   || OKRESY.KONS1:='T';
      {? ~_prc
      || FUN.info('Należy wybrać element do aktualizacji.'@);
         return('KONS1')
      || 'Należy wybrać element do aktualizacji.'
      ?}
   ?};
   {? var_pres('srw')>0
   || _p
   || {? _p='' & exec('czy_all','sprfin') & ~_prc || 'GR_SIK' || _p ?}
   ?}
|| _p
?}


\czy_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.70]
:: OPIS: Pytanie, czy wykonywac aktualizacje dla wszystkich sprawozdan
::       jesli nie wypelniono SIK.GR_SIK
::  OLD: \czy_all/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? SIK.GR_SIK=null
|| ~FUN.ask(
      'Nie podano sprawozdania w parametrach aktualizacji danych.\n'
      'Zostanie wykonana aktualizacja dla wszystkich\n'
      'zaakceptowanych sprawozdań. \n\nKontynuować aktualizację?'@)
|| 0
?}


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Czysci WYRAZ.GRUPA, WYRAZ.KOLUMNA, WYRAZ.WIERSZ gdy nie istnieja do nich powiazania
::  OLD: \clean/def_wsk.fml
::----------------------------------------------------------------------------------------------------------------------
GR_SIK.cntx_psh(); GR_KOL.cntx_psh(); DEFW.cntx_psh();
GR_SIK.prefix(); {? ~GR_SIK.seek(WYRAZ.GRUPA) || WYRAZ.GRUPA:=null ?};
GR_KOL.prefix(); {? ~GR_KOL.seek(WYRAZ.KOLUMNA) || WYRAZ.KOLUMNA:=null ?};
DEFW.prefix(); {? ~DEFW.seek(WYRAZ.WIERSZ) || WYRAZ.WIERSZ:=null ?};
GR_SIK.cntx_pop(); GR_KOL.cntx_pop(); DEFW.cntx_pop()


\wczytaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.70]
:: OPIS: Wczytuje skladniki algorytmu dla wierszy typu S
::  OLD: \wczytaj/skid_usp.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('g_tot')>=0 | FUN.ask('Czy na pewno wczytać składnik algorytmu?'@)
|| _w:=_prz:=0;
   _lp:=DEFA.size();
   _ww:=#WYRAZ.WIERSZ;
   DEFW.clear; GR_KOL.clear;
   DEFA.blank();
   DEFA.WSP:=wspolcz;
   {? 2+TTMP.RW='IK'
   || {? TTMP.RW='IKK'
      || GR_KOL.prefix(BB.sqlint(TTMP.GR), TTMP.KLP)
      || GR_KOL.prefix(BB.sqlint(TTMP.GR))
      ?};
      DEFW.prefix(BB.sqlint(TTMP.GR));
      {? GR_KOL.first()
      || {!
         |? {? DEFW.first()
            || {!
               |? _prz+=1;
                  {? #DEFW.ref()<>_ww
                  || DEFA.LP:=_lp+1; DEFA.ARGUMENT:=DEFW.ref();
                     DEFA.ARG_KOL:=GR_KOL.ref();
                     {? DEFA.add()
                     || DEFW.cntx_psh();
                        DEFW.prefix();
                        DEFW.DEFW_NAD:=null; DEFW.put();
                        DEFW.cntx_pop();
                        _w+=1; _lp+=1;
                        TTMP.cntx_psh();
                        exec('wcz_ttmp','sprfin',TTMP.GS,GR_KOL.LP,DEFW.LP);
                        TTMP.cntx_pop()
                     ?}
                  ?};
                  DEFW.next()
               !}
            ?}; GR_KOL.next()
         !}
      ?}
   || {? DEFW.seek(BB.sqlint(TTMP.DR),DEFW.name()) &
         GR_KOL.seek(BB.sqlint(TTMP.KR),GR_KOL.name())
      || {? #DEFW.ref()<>_ww
         || DEFA.LP:=_lp+1;
            DEFA.ARGUMENT:=DEFW.ref(); DEFA.ARG_KOL:=GR_KOL.ref();
            {? _w:=_prz:=DEFA.add()
            || _lp+=1;
               DEFW.cntx_psh();
               DEFW.prefix();
               DEFW.DEFW_NAD:=null; DEFW.put();
               DEFW.cntx_pop()
            ?}
         || {? var_pres('g_cnt')<=0
            || FUN.info(
                  'Nie należy wprowadzać składnika wskazującego na ten sam wiersz.'
                  '\nSkładnik algorytmu nie został wczytany.'@
               )
            ?}
         ?}
      |? var_pres('g_cnt')<=0
      || FUN.info(
            'Wiersz usunięty przez innego użytkownika.'
            '\nSkładnik algorytmu nie został wczytany.'@
         )
      ?}
   ?};
   {? _w & var_pres('g_cnt')>0 || g_cnt+=_w ?};
   g_prz+=_prz;
   {? _w=_prz & _w>0
   || TTMP.cntx_psh();
      exec('wcz_ttmp','sprfin',TTMP.GS,TTMP.KLP,TTMP.DLP);
      TTMP.cntx_pop()
   ?};
   _w
?}


\algorytm_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.70]
:: OPIS: Funkcja usprawniajaca wprowadzanie algorytmow wiersza typu S
::  OLD: \algorytm_s/skid_usp.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TTMP');
GR_SIK.cntx_psh();
_qs:=SIK.CUR_SPR().TYP_KLIK;
GR_SIK.cntx_pop();
TTMP:=sql('select CAST(NULL as TREE_REF_TYPE) as TREE, -1 as ZW, ''POZ'' as RW, G.REFERENCE as GR, G.SYSTEM as GSY, G.SKROT as GS,'+
          'G.NAZWA as GN, G.AKC as GA, G.SKROT||'': ''||G.NAZWA as SIK, '+
          'K_IF.REFERENCE as KR,K_IF.LP as KLP,''[''||to_string(K_IF.LP)||''] ''||K_IF.NAZWA as KOL, '+
          'D.REFERENCE as DR,D.LP as DLP,''[''||to_string(D.LP)||''] ''||D.KOD||'' ''||D.NAZWA as WIE,'+
          '0 as WCZ '+
          'from GR_SIK G '+
          'join GR_KOL K_IF using (G.REFERENCE, K_IF.GRUPA) '+
          'join DEFW D using (G.REFERENCE, D.GRUPA) '+
          'where (G.FIRMA=\''+$REF.FIRMA+'\''+{? REF.FIRMA<>REF.GRUPA || ' or G.FIRMA=\''+$REF.GRUPA+'\'' || '' ?}+') '+
          {? _qs='TW'
          || ' and SUBSTR(G.TYP_KLIK,1,1)=\'T\''
          |? 1+_qs='T'
          || ' and G.REFERENCE=\''+$SIK.CUR_SPR+'\''
          || ''
          ?}+
          ' order by 1,GR,KLP,DLP');
{? type_of(TTMP)>100 & TTMP.first()
|| GR_SIK.cntx_psh(); GR_KOL.cntx_psh(); DEFW.cntx_psh();
   exec('algorytm_s1','sprfin',REF.FIRMA);
   {? REF.FIRMA<>REF.GRUPA
   || exec('algorytm_s1','sprfin',REF.GRUPA)
   ?};
   _okns:=TTMP.mk_edit('Pozycja składnika'@,,'ttmp_edit');
   TTMP.win_efld(_okns,,'GS',,,10,,,'Kod sprawozdania'@,,'Kod sprawozdania'@);
   TTMP.win_efld(_okns,,'GN',,,40,,,'Nazwa sprawozdania'@,,'Nazwa sprawozdania'@);
   TTMP.win_efld(_okns,,'KLP',,,5,0,,'Lp kolumny'@,,'Lp kolumny'@);
   TTMP.win_efld(_okns,,'DLP',,,5,0,,'Lp wiersza'@,,'Lp wiersza'@);
   TTMP.win_edit(_okns);
   {? ~wykres
   || _okn:=TTMP.mk_sel('Wybór składników algorytmu'@,'N',0,'ttmp_wer3',,,,1)
   || _okn:=TTMP.mk_sel('Wybór składników'@,'N',0,'ttmp_wer3',,,,1)
   ?};
   TTMP.win_fld(_okn,ZMIENNE,'TEXT1',,,75,,,'Sprawozdanie finansowe (wiersz/kolumna)'@);
   TTMP.win_fld(_okn,SIK,'P2',,,3,,,'Akc'@,,,2,,"'T'","'N'");
   TTMP.win_act(_okn,0,'Formuła','Wczytaj'@@,,'Dodaje składniki algorytmu'@,
                "{? var_pres('g_prz')<0 || g_prz:=0 ?};
                 wcz:=exec('wczytaj','sprfin')
                 ",
                "{? var_pres('g_cnt')<=0
                 || FUN.info(
                       {? g_prz>1
                       || 'Liczba dodanych składników: '+$(g_prz-(g_prz-wcz))+'.'+
                          {? g_prz<>wcz
                          || '\nLiczba składników, dla których operacja się nie powiodła: '+
                             $(g_prz-wcz)+'.'
                          || ''
                          ?}
                       || 'Dodano wskazany składnik.'
                       ?}
                     );
                    &g_prz; &wcz
                 ?}",1,1,
                "sel_nchk(); g_cnt:=g_prz:=0; g_tot:=TTMP.sel_size();
                 {? FUN.info('Czy na pewno dodać zaznaczone składniki algorytmu?'@)
                 || 1
                 || &g_cnt; &g_prz; &g_tot; 0
                 ?}",
                "_vt:='Dodawanie składników algorytmu';
                 {? g_cnt=g_prz
                 ||
                      {? g_cnt>0 & g_cnt=g_tot
                      || {? g_tot>g_cnt
                         ||  FUN.info('Operacja zakończona.\nDodano wszystkie zaznaczone składniki.\n'
                              'Liczba dodanych składników: %1.'
                              '\nLiczba składników, dla których operacja się nie powiodła: %2.'@[$g_cnt,$(g_tot-g_cnt)])
                         || FUN.info('Operacja zakończona.\nDodano wszystkie zaznaczone składniki.\n'
                              'Liczba dodanych składników: %1.'@[$g_cnt])
                         ?}
                      || {? g_tot>g_cnt
                         || FUN.info('Operacja zakończona.\nLiczba dodanych składników: %1.'
                            'Liczba składników, dla których operacja się nie powiodła:%2'@[$g_cnt,$(g_tot-g_cnt)])
                         || FUN.info('Operacja zakończona.\nLiczba dodanych składników: %1.'@[$g_cnt)
                         ?}
                      ?}
                 ||   {? g_prz<>g_cnt
                      ||  FUN.info('Operacja zakończona.\nLiczba dodanych składników: %1.'
                           '\nLiczba składników, dla których operacja się nie powiodła: %2.'@[$g_cnt,$(g_prz-g_cnt)])
                      ||  FUN.info('Operacja zakończona.\nLiczba dodanych składników: %1.'@[$g_cnt])
                      ?}
                 ?};
                 VAR_DEL.delete('g_cnt','g_prz','g_tot','wcz'); 1",'W');
   TTMP.win_act(_okn,0,'Rekord',,,,"{? TTMP.RW='IK' | TTMP.RW='PIN'
                                    || SIK.P1:=TTMP.GSY; SIK.P2:=TTMP.GA; ZMIENNE.TEXT1:=TTMP.SIK
                                    |? TTMP.RW='POZ'
                                    || SIK.P1:=SIK.P2:=''; ZMIENNE.TEXT1:='      Wiersz: '+TTMP.WIE
                                    |? TTMP.RW='IKK'
                                    || SIK.P1:=SIK.P2:=''; ZMIENNE.TEXT1:=TTMP.KOL
                                    || SIK.P1:=SIK.P2:=ZMIENNE.TEXT1:=''
                                    ?};
                                    echo(,'Współczynnik: '+$wspolcz);
                                    _t:='('+TTMP.GSY+') '+TTMP.GS+
                                         {? 2+TTMP.RW='IK' | TTMP.RW='PIN'
                                         || ': '+TTMP.GN
                                         || ', kolumna: '+TTMP.KOL
                                         ?};
                                    echo(_t,'Współczynnik: '+$wspolcz);
                                    {? TTMP.WCZ
                                    || exec('findtmp2','#color')
                                    |? 2+TTMP.RW='IK' | TTMP.RW='PIN'
                                    || exec('findtmp','#color')
                                    || ''
                                    ?}");
   TTMP.win_act(_okn,0,'Szukaj');
   TTMP.win_act(_okn,,'Formuła','Zwiń/&rozwiń całość'@@,,
                      'Zwijanie/rozwijanie całości'@,"exec('zwrw_all','#tree','TTMP','TREE')");
   {? wykres=0
   || TTMP.win_act(_okn,0,'Formuła','Ws&półczynnik'@@,,'Współczynnik sumowania dla składników algorytmu'@,
                   "undefine();
                    define('WSP',wspolcz,'Współczynnik'@,'Współczynnik sumowania dla składników algorytmu'@,,15,2);
                    def_btn('text=%1,icon=xwin16.png:13'['OK'@],'key:F2');
                    def_btn('text=%1,icon=xwin16.png:14'['Anuluj'@],'key:Esc');
                    {? def_edit(\"{? DEFINE.WSP=0
                                || FUN.info('Współczynik nie może być równy 0.'@);'WSP'
                                || 1
                                ?}\" ,'Współczynnik sumowania'@)
                    || wspolcz:=DEFINE.WSP
                    ?}
                   ",,,,,,'P')
   ?};
   TTMP.win_act(_okn,0,'Formuła','Legenda'@@,,'Opis znaczenia kolorowania'@,
   "exec('legenda','color','$TAB_TYMCZ#01#01$Sprawozdanie lub kolumna',
                              '$TAB_TYMCZ#01#02$Wiersz będący składnikiem algorytmu')",,,,,,'L');
   TTMP.win_btn(_okn,'text=%1,btn_label_align=center,panel=right,align=begin'['&Wczytaj'@],'menu:W');
   ind1:=($('TTMP.ndx_tmp('''',1,\'TREE\',,0,''GS'',,0,''KLP'',,0,''RW'',,0,''DLP'',,0)'))();
   ind2:=TTMP.ndx_tmp('',1,'GS',,0,'KLP',,0,'RW',,0,'DLP',,0,'ZW',,0);
   ind3:=TTMP.ndx_tmp('',1,'GS',,0,'RW',,0,'KLP',,0,'DLP',,0,'ZW',,0);
   ind4:=($('TTMP.ndx_tmp('''',1,''ZW'',,0,''RW'',,0)')
         )();
   ind5:=($('TTMP.ndx_tmp('''',1,''RW'',,0)'))();
   ind6:=($('TTMP.ndx_tmp('''',1,''GS'',,0,''GN'',,0,''KLP'',,0,''DLP'',,0)')
         )();
   ind7:=TTMP.ndx_tmp('',1,'GS',,0,'RW',,0,'RW',,0,'WCZ',,0,'KLP',,0,'DLP',,0);
   {? wykres=0
   || TTMP.for_each("{? TTMP.GS=grupa_s & TTMP.KLP=kolumna & TTMP.RW='POZ'
                     || TTMP.ZW:=1; TTMP.put()
                     ?}")
   ?};
   {? DEFA.size()
   || DEFA.cntx_psh(); DEFA.first();
      {!
      |? exec('wcz_ttmp','sprfin',DEFA.ARGUMENT().GRUPA().SKROT,DEFA.ARG_KOL().LP,DEFA.ARGUMENT().LP);
         DEFA.next()
      !};
      DEFA.cntx_pop()
   ?};
   TTMP.index(ind1);
   TTMP.prefix();
   ($('TTMP.prefix()'))();
   TTMP.win_sel(_okn);
   TTMP.hdr_sel();
   TTMP.hdr_sel(' dla: (%1) %2 - %3, kolumna: [%4] '
      '%5'@[WYRAZ.WIERSZ().GRUPA().SKROT,WYRAZ.WIERSZ().KOD,WYRAZ.WIERSZ().NAZWA,$WYRAZ.KOLUMNA().LP,WYRAZ.KOLUMNA().NAZWA]);
   TTMP.select(, {? wykres=0 || TTMP.find_key(null,grupa_s) ?});
   VAR_DEL.delete('ind1','ind2','ind3','ind4','ind5','ind6','ind7');
   GR_SIK.cntx_pop(); GR_KOL.cntx_pop(); DEFW.cntx_pop()
|| FUN.info('Brak zdefiniowanych sprawozdań finansowych.'@)
?};
VAR_DEL.delete('TTMP')


\algorytm_s1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.70]
:: OPIS: Funkcja usprawniajaca wprowadzanie algorytmow wiersza typu S
::   WE: _a - firma
::  OLD: \algorytm_s1/skid_usp.fml
::----------------------------------------------------------------------------------------------------------------------
_qs:=SIK.CUR_SPR().TYP_KLIK;
{? 1+_qs<>'T'
|| GR_SIK.index('SKROT'); GR_SIK.prefix(_a)
|? _qs='TW'
|| GR_SIK.index('TYP_KLIK'); GR_SIK.prefix(_a,'T')
|| GR_SIK.index('SKROT'); GR_SIK.prefix(_a,SIK.CUR_SPR().SKROT,)
?};
GR_KOL.index('LP'); DEFW.index('LP');
{? GR_SIK.first()
|| {!
   |? exec('ttmp_add','sprfin',null);
      GR_SIK.next()
   !}
?};
{? TTMP.first()
|| TTMP.index(TTMP.ndx_tmp('',1,'GR',,0,'KLP',,0,'DLP',,0));
   _treeg:=_tree:=null;
   {!
   |? {? TTMP.RW='IK' | TTMP.RW='PIN'
      || _tree:=null;
         _treeg:=TTMP.ref()
      ?};
      {? TTMP.RW='IKK' || _tree:=_treeg ?};
      {? TTMP.TREE<>_tree
      || TTMP.TREE:=_tree; TTMP.put()
      ?};
      {? TTMP.RW<>'POZ' || _tree:=TTMP.ref() ?};
      TTMP.next()
   !}
?}


\wcz_ttmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.70]
:: OPIS: Zmienia pole TTMP.WCZ dla TTMP.RW='POZ' wraz z przynaleznymi do niego 'IKK' i 'IK'
::   WE: _a - TTMP.GS
::       _b - TTMP.KLP
::       _c - TTMP.DLP
::  OLD: \wcz_ttmp/skid_usp.fml
::----------------------------------------------------------------------------------------------------------------------
TTMP.index(ind7); TTMP.prefix();
{? TTMP.find_key(_a,'POZ','POZ',0,_b,_c)
|| TTMP.WCZ:=1;
   {? TTMP.put()
   || {? ~TTMP.find_key(_a,'POZ','POZ',0,_b)
         & TTMP.find_key(_a,'IKK','IKK',0,_b)
      || TTMP.WCZ:=1;
         {? TTMP.put()
         || {? ~TTMP.find_key(_a,'POZ','POZ',0)
               & TTMP.find_key(_a,'IK','IK',0)
            || TTMP.WCZ:=1; TTMP.put()
            ?}
         ?}
      ?}
   ?}
?}


\zwin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.70]
:: OPIS: Zwija/rozwija pozycje sprawozdan finansowych
::  OLD: \zwin/skid_usp.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+TTMP.KOL)='+' | (1+TTMP.KOL)='-'
|| TTMP.cntx_psh(); _rodz:=3+TTMP.KOL;
   {? (_rodz='+ [') | (_rodz='- [')
   || TTMP.index(ind2); TTMP.prefix(TTMP.GS, TTMP.KLP,'POZ')
   || TTMP.index(ind3); TTMP.prefix(TTMP.GS,'I')
   ?};
   {? TTMP.first()
   || _zw:={? ((1+_rodz)='+') || 1 || -1 ?};
      {!|? {? TTMP.RW='POZ' | TTMP.RW='IKK'
           || TTMP.ZW:=_zw;
              {? TTMP.RW='IKK' || TTMP.KOL:={? _zw || '+' || '-' ?}+(1-TTMP.KOL) ?};
              TTMP.put()
           ?}; TTMP.next()!};
      {? TTMP.index('?')=ind3
      || TTMP.prefix(TTMP.GS,'POZ');
         {? TTMP.first()
         || {!|? {? TTMP.ZW<>-1 || TTMP.ZW:=-1; TTMP.put() ?}; TTMP.next()!}
         ?}
      ?}
   ?};
   TTMP.cntx_pop();
   TTMP.KOL:={? (1+TTMP.KOL)='+' || '-' || '+' ?}+(1-TTMP.KOL); TTMP.put()
?};
1


\ttmp_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.70]
:: OPIS: Funkcja dla potrzeb \algortym_s, dodaje rekordy opisujace.
::       Musi byc ustawiony GR_SIK.
::  OLD: \ttmp_add/skid_usp.fml
::----------------------------------------------------------------------------------------------------------------------
GR_KOL.prefix(GR_SIK.ref()); _kol:=GR_KOL.size(); GR_KOL.first();
DEFW.prefix(GR_SIK.ref()); _wier:=DEFW.size(); DEFW.first();
TTMP.blank();
TTMP.ZW:=1; TTMP.RW:='IK';
TTMP.GR:=BB.refsql(GR_SIK.ref());
TTMP.GSY:=GR_SIK.SYSTEM; TTMP.GS:=GR_SIK.SKROT; TTMP.GN:=GR_SIK.NAZWA; TTMP.GA:=GR_SIK.AKC;
TTMP.SIK:=GR_SIK.SKROT+': '+GR_SIK.NAZWA;
{? _kol=1
|| TTMP.KOL:='['+$GR_KOL.LP+'] '+GR_KOL.NAZWA;
   TTMP.KLP:=GR_KOL.LP
|| TTMP.KOL:=$_kol+' '+'Kolumn'+{? _kol=4 | _kol=3 | _kol=2 || 'y' || '' ?}
?};
TTMP.add();
{? _kol>=1
|| TTMP.blank();
   TTMP.ZW:=-1; TTMP.RW:='IKK';
   TTMP.GR:=BB.refsql(GR_SIK.ref());
   TTMP.GSY:=GR_SIK.SYSTEM; TTMP.GS:=GR_SIK.SKROT; TTMP.GN:=GR_SIK.NAZWA; TTMP.GA:=GR_SIK.AKC;
   GR_KOL.first();
   {!|? TTMP.KOL:='['+$GR_KOL.LP+'] '+GR_KOL.NAZWA;
        TTMP.KLP:=GR_KOL.LP;
        TTMP.add();
        GR_KOL.next()
   !}
?}


\alg_naz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca nazwe algorytmu dla wiersza/kolumny sprawozdania
::   WE: _a - 1-wiersza 2-kolumny
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| {? DEFW.ALGORYTM='F' || 'Formuła'
   |? DEFW.ALGORYTM='R' || 'Wartość ręczna'
   |? DEFW.ALGORYTM='S' || 'Suma'
   |? DEFW.ALGORYTM='I' || 'Iloczyn'
   |? DEFW.ALGORYTM='W' || 'Iloraz'
   |? DEFW.ALGORYTM='P' || 'Pusty'
   || ''
   ?}
|? _a=2
|| {? GR_KOL.ALGORYTM='F' || 'Podstawowy'
   |? GR_KOL.ALGORYTM='S' || 'Suma'
   |? GR_KOL.ALGORYTM='I' || 'Iloczyn'
   |? GR_KOL.ALGORYTM='W' || 'Iloraz'
   || ''
   ?}
|| ''
?}


\add_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodaje okno do okna grupowego
::   WE: _a - nazwa zakładki
::       _b - tabela
::       _c - okno grupowe
::----------------------------------------------------------------------------------------------------------------------
GrSikWer:=_o:=GR_SIK.mk_sel('Sprawozdania'@,'P',,'#grsiksel',,,,,'U');
GR_SIK.win_fld(_o,,'SKROT',,,,,,'Kod'@);
GR_SIK.win_fml(_o,,'SKROT',,'ICON_BEFORE',"exec('ikona_grupa','sprfin')");
::GR_SIK.win_fld(_o,,'NAZWA');
GR_SIK.win_fld(_o,SKID,'LANG_WER',,,40,,,'Nazwa'@);
GR_SIK.win_fml(_o,SKID,'LANG_WER',,'ICON_BEFORE',"exec('icon','lang')");
GR_SIK.win_fld(_o,,'ZAOKR',,,,,,'Wskaźnik zaokrąglenia'@);
GR_SIK.win_fld(_o,,'DOKL',,,,,,'Dokładność'@);
GR_SIK.win_fld(_o,,'AKC',,,,,,'Akceptacja'@,,,2,,"'T'","'N'");
GR_SIK.win_act(_o,,'Formuła','&Aktualizuj sprawozdanie'@@,,,"exec('akt_menu','!fks_ksp_deat')",,1);
task_attach('FKS_KSP_DEAT');
GR_SIK.win_act(_o,,'Formuła','&Wpisz wartości ręcznie'@@,,,"
   _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='FKS_KSP_DRED';
   _params.UIDREF:=exec('get_key1','sprfin');
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'GR_SIK',GR_SIK.ref());
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OKRO_F',SSTALE.AO);
   exec('mp_run','#b__box',_params)
",,,,,,'W');
task_attach('FKS_KSP_DRED');
GR_SIK.win_act(_o,,'Formuła','&Drukuj'@@,,,"
   params_set('RAP_ID','fks_sprfin1');
   exec('main','!fks_ksp_zawd')
",,,,,,'D');
task_attach('FKS_KSP_ZAWD');
GR_SIK.win_act(_o,,'Formuła','Drukuj wartości a&lgorytmów'@@,,,"
   params_set('RAP_ID','fks_sprfin2');
   exec('main','!fks_ksp_zawd')
",,,,,,'L');
task_attach('FKS_KSP_ZAWD');
GR_SIK.win_act(_o,,'Formuła','Analizy &BI'@@,,,"exec('np_run','#b__box','BIQ_FKS_KSPA')",,,,,,'B');
GR_SIK.win_act(_o,,'Menu','Wieloję&zyczność'@);
GR_SIK.win_act(_o,,'Formuła','Ustaw &język tłumaczeń'@@,'Wieloję&zyczność'@,,"exec('set_lang','lang',1); AreaTitle.setTitle()",,,,,,'J');
GR_SIK.win_act(_o,,'Formuła','Tłumaczenia nazwy'@@,'Wieloję&zyczność'@,,"exec('sel_lang','lang')",,,,,,'T');
task_attach('ZWS_PAR_FSPR');
GR_SIK.win_act(_o,,'Formuła','Pa&rametry pracy'@@,,,"exec('fks_ksp_params','sprfin')",,,,,,'R');
GR_SIK.win_act(_o,1,'Formuła','Pa&rametry pracy'@@,,,"exec('fks_ksp_params','sprfin')",,,,,,'R');
GR_SIK.win_act(_o,,'Formuła','Zmian&y'@@,,,"mb_exec('ZMIANY()')",,,,,,'Y');
GR_SIK.win_act(_o,,'Kolejność');
GR_SIK.win_act(_o,,'Formuła','Le&genda'@@,,,"exec('legenda','color','#GR_SIK#01')",,,,,,'G');
GR_SIK.win_act(_o,,'Rekord',,,,"
   _grey:='';
   DEFW.index('ALGORYTM'); DEFW.prefix(GR_SIK.ref(),);
   {? ~DEFW.first() || _grey+='W' ?};
   GR_SIK.actions_grayed(GrSikWer,_grey)
",,1);
GR_SIK.win_btn(_o,'text='+'&Wpisz wartości ręcznie'@+',btn_label_align=center,panel=right,align=begin','menu:W');
GR_SIK.win_btn(_o,'text='+'&Aktualizuj sprawozdanie'@+',btn_label_align=center,panel=right,align=begin','menu:A');
GR_SIK.win_btn(_o,'text='+'&Drukuj'@+',btn_label_align=center,panel=right,align=begin','menu:D');
GR_SIK.win_btn(_o,'text='+'Drukuj wartości a&lgorytmów'@+',btn_label_align=center,panel=right,align=begin','menu:L');

_b.grp_sel(_c,GR_SIK,_o,_a,"

",,,,"
   {? GR_SIK.sel_size()
   || GR_SIK.sel_adel()
   ?};
   {? var_press('Konsolid')>0
   || AreaTitle.setArea('KON_SPR')
   || AreaTitle.setArea('FKS2KSP','FKS_KSP')
   ?};
   AreaTitle.setTitle();
   exec('f_set_gr_sik','sprfin','T')
",,,,'maximized_with_title');
task_attach('FKS_KSP_DRED');
task_attach('FKS_KSP_DEAT');
task_attach('FKS_KSP_ZAWD');
::_b.tab_splt(_c,,'vertical','left');
~~


\get_key1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca rekord kluczowy
::----------------------------------------------------------------------------------------------------------------------
_k:=$GR_SIK.ref()+'#'+$SSTALE.AO+'#';
_k+((48-+_k)*'_')


\dokres
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: nazwa pola DEFW.DOKRES
::  OLD: \dokres/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
ZMIENNE.TEXT1:={? _a='K' ||  'wartość dla ostatniego miesiąca w okresie raportowania'
               |? _a='P' ||  'wartość dla pierwszego miesiąca w okresie raportowania'
               |? _a='S' ||  'suma wartości z miesięcy tworzących okres raportowania'
               |? _a='Z' ||  'różnica wartości dla ostatniego i pierwszego miesiąca w okresie raportowania'
               || ''
               ?}


\algorytm
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: ustawienie wartosci pola ZMIENNE.TEXT
::  OLD: \algorytm/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
ZMIENNE.TEXT:={? _a='P'|| 'pusty wiersz (brak algorytmu) '
              |? _a='R'|| 'wartość wpisywana ręcznie '
              |? _a='F'|| 'wiersz podstawowy '
              |? _a='S'|| 'suma wartości innych wierszy '
              |? _a='I'|| 'iloczyn wartości innych wierszy '
              |? _a='W'|| 'stosunek wartości innych wierszy '
              || ''
              ?}


\zapisz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Formula aktualizuje wartosci rekordu tabeli WARTOSCI
::       Dla wer.budz. - wprowadzono prefix ze zlaczeniem do ML_CZ
:: WE: _a - okres
::     _b - wiersz (ref DEFW)
::     _c - kolumna (ref GR_KOL)
::     _d - jednostka ksiegowa (ref ODD)
::     _e - interpretacja wartosci R -real, B -brak danych, N -nieskonczonosc
::     _f - wartosc
::     _g - wartosc zaokraglona
::    [_h - kod w slownika
::     _i - tresc w slowniku
::     _j - czesc (ref ML_CZ)]
::  OLD: \zapisz/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? OKRESY.CZYSPRZ || _f:=_g:=0 ?};
{? _>7 & _h<>'' || _zn:='T' || _zn:='N'; _i:=_h:='' ?};
{? MLEX.FIKSB=0 || _j:=null |? _>=10 || {? type_of(_j)<>7 || _j:=null ?} || _j:=exec('ref_cz','ml_spra') ?};
{? var_press('__Kodcz')>0
|| WARTOSCI.index('OKRESCZ'); WARTOSCI.prefix(_a,REF.WYKON,_j,_b,_c,_d,_zn,_h)
|| WARTOSCI.index('OKRES'); WARTOSCI.prefix(_a,REF.WYKON,_b,_c,_d,_zn,_h)
?};
_jest:=WARTOSCI.first();
{? _jest & _f$2=0
|| WARTOSCI.del()
|? _jest & _f$2<>0
|| WARTOSCI.WARTOSC:=_f$2;
   WARTOSCI.POSTAC:=_e;
   WARTOSCI.WZAOKR:=_g;
   WARTOSCI.DATA:=SIK.DATA_A;
   WARTOSCI.CZAS:=SIK.CZAS;
   {? _>8 || WARTOSCI.TR:=_i ?};
   WARTOSCI.put()
|? _jest=0 & _f$2<>0
|| WARTOSCI.blank();
   WARTOSCI.WERSJA:=REF.WYKON;
   WARTOSCI.WYRAZ:=_b;
   WARTOSCI.KOLUMNA:=_c;
   WARTOSCI.OKRES:=_a;
   WARTOSCI.WARTOSC:=_f$2;
   WARTOSCI.POSTAC:=_e;
   WARTOSCI.WZAOKR:=_g;
   WARTOSCI.DATA:=SIK.DATA_A;
   WARTOSCI.CZAS:=SIK.CZAS;
   WARTOSCI.ODD:=_d;
   WARTOSCI.KOD:=_h;
   WARTOSCI.CZ:=_j;
   {? _>8 || WARTOSCI.TR:=_i ?};
   WARTOSCI.ZN:=_zn;
   WARTOSCI.add()
?}


\pop_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.50]
:: OPIS: Wywolanie formuly do poprawienia wartosci wierszy powiazanych
::   WE: _a - wiersz (DEFW.ref()
::  OLD: \pop_pow/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_kol:=WYRAZ.KOLUMNA;
GR_KOL.cntx_psh();
SIK_ECHO:='';
exec('pop_pow1','sprfin',_a);
&SIK_ECHO;
GR_KOL.cntx_pop();
WYRAZ.KOLUMNA:=_kol;
echo()


\pop_pow1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.50]
:: OPIS: Formula do poprawienia wartosci wierszy powiazanych
::   WE: _a - wiersz (DEFW.ref()
::  OLD: \pop_pow1/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_czy_akt:=PAR_SKID.get(29)='T';
DEFW.cntx_psh();
DEFA.cntx_psh();
GR_SIK.cntx_psh();
DEFW.prefix();
DEFA.index('SKLADNIK');
DEFA.prefix(_a);
{? DEFA.first()
|| {!
   |? DEFW.cntx_psh();
      {? _czy_akt | DEFA.WYR().GRUPA=DEFA.ARGUMENT().GRUPA
      || _ref:=DEFA.ref();
         DEFA.WYR();
         exec('b_wskaz','sprfin',DEFW.ref(),DEFW.ALGORYTM);
         exec('pop_pow1','sprfin',DEFW.ref());
         DEFA.index('SKLADNIK');
         DEFA.prefix(_a);
         DEFA.seek(_ref)
      ?};
      DEFW.cntx_pop();
      DEFA.next()
   !}
?};
DEFW.cntx_pop();
GR_SIK.cntx_pop();
DEFA.cntx_pop()


\b_wskaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Formula wywoluje obliczenia dla wiersza
::   WE: _a - wiersz (ref DEFW)
::       _b - typ algorytmu wiersza
::       [_c - jesli nie nalezy liczyc dla jednostek ksiegowych]
::  OLD: \b_wskaz/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_wartosc:=wartzaok:=0; wskzaokr:=DEFW.ZAOKR; wskdokl:=DEFW.DOKL;
WYRAZ.WIERSZ:=_a;
WYRAZ.WIERSZ().GRUPA();
WYRAZ.GRUPA:=DEFW.GRUPA;
echo('WIERSZ (%1) %2  %3  %4 ,%5'@[form(DEFW.KOLEJ),OSPR.NAZWA,GR_SIK.NAZWA,DEFW.NAZWA,SIK_ECHO]);
{? _=3
|| exec('b_wskaz2','sprfin',_b,_c)
|| exec('b_wskaz2','sprfin',_b)
?};
&wartzaok; &wskzaokr; &wskdokl


\b_wskaz2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Wywolanie obliczen wartosci wiersza i wszystkich kolumn
::       uwzglednienie jednostek ksiegowych
::       Wymagane ustawienie zmiennych: WYRAZ.GRUPA, WYRAZ.WIERSZ
::   WE: _a - typ algorytmu wiersza
::       [_b - jesli nie nalezy liczyc dla jednostek ksiegowych]
::  OLD: \b_wskaz2/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_odd:=OPERATOR.DEPT;
GR_KOL.index('LP2'); GR_KOL.prefix(WYRAZ.GRUPA,'F');
{? GR_KOL.first()
|| {!
   |? WYRAZ.KOLUMNA:=GR_KOL.ref();
      {? _=1 || OPERATOR.DEPT:=null ?};
      exec('b_wskaz3','sprfin',_a,GR_KOL.ref());
      {? _=1 & PAR_SKID.get(12)='T'
      || ODD.cntx_psh();
         ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
         {? ODD.first()
         || {!|? OPERATOR.DEPT:=ODD.ref();
                 exec('b_wskaz3','sprfin',_a,GR_KOL.ref());
                 ODD.next()
            !}
         ?};
         ODD.cntx_pop()
      ?};
      GR_KOL.next()
   !}
?};
OPERATOR.DEPT:=_odd;
1


\b_wskaz3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Obliczenie wartosci wiersza dla wskazanej kolumny
::   WE: _a - typ algorytmu wiersza
::       _b - kolumna (ref GR_KOL)
::       Wymagane ustawienie zmiennych: WYRAZ.WIERSZ, WYRAZ.KOLUMNA
::  OLD: \b_wskaz3/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='F' | _a='R'
|| {? OKRESY.OKR_RAP().TYP='M'
   || exec('e_wskaz','sprfin',WYRAZ.WIERSZ,WYRAZ.KOLUMNA)
   || _wartosc:=exec('d_wskaz','sprfin',WYRAZ.WIERSZ,WYRAZ.KOLUMNA);
      exec('b_wskaz4','sprfin',_wartosc,_b)
   ?}
|? _a<>'P'
|| _wartosc:=exec('c_wskaz','sprfin',_a,_b);
   {? var_pres('_wartosc')>0
   || exec('b_wskaz4','sprfin',_wartosc,_b)
   ?}
?}


\b_wskaz4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Zakonczenie obliczen dla wiersza i kolumny (uzycie wspolczynnikow
::       wiersza i zapisanie do tabeli wartosci)
::       Wymagane ustawienie zmiennych: WYRAZ.WIERSZ
:: WE:  _a  - obliczona wartosc z algorytmu
::      _b  - kolumna (ref GR_KOL)
::     [_c] - kod slownika lub tabeli
::     [_d] - tresc slownika lub tabeli
::  OLD: \b_wskaz4/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.KOLUMNA:=_b;
WYRAZ.WIERSZ();
SIK.WARTOSC1:=wartzaok;
SIK.WARTOSC:=_a;
SIK.WARTOSC:={? DEFW.WSPOL<>0   || SIK.WARTOSC*DEFW.WSPOL || SIK.WARTOSC ?};
SIK.WARTOSC1:={? DEFW.WSPOL<>0 || SIK.WARTOSC1*DEFW.WSPOL || SIK.WARTOSC1 ?};
_x:=DEFW.WSPOLF; _wartrz:=SIK.WARTOSC;
_v2:=wartzaok; _v3:=wskzaokr; _v4:=wskdokl; _v5:=WYRAZ.KOLUMNA;
SIK.WARTOSC:={? DEFW.WSPOLF<>'' || ($_x)()*SIK.WARTOSC || SIK.WARTOSC ?};
wartzaok:=_v2; wskzaokr:=_v3; wskdokl:=_v4; WYRAZ.KOLUMNA:=_v5;
_wartrz1:=SIK.WARTOSC; SIK.WARTOSC:=_wartrz;
SIK.WARTOSC1:={? DEFW.WSPOLF<> '' || ($_x)()*SIK.WARTOSC1 || SIK.WARTOSC1 ?};
wartzaok:=_v2; wskzaokr:=_v3; wskdokl:=_v4; WYRAZ.KOLUMNA:=_v5;
SIK.WARTOSC:=_wartrz1;
{? _=4
|| exec('zapisz','sprfin',OKRESY.OKR_RAP,WYRAZ.WIERSZ,WYRAZ.KOLUMNA,OPERATOR.DEPT,
        'R',SIK.WARTOSC,SIK.WARTOSC1,_c,_d)
|| exec('zapisz','sprfin',OKRESY.OKR_RAP,WYRAZ.WIERSZ,WYRAZ.KOLUMNA,OPERATOR.DEPT,
        'R',SIK.WARTOSC,SIK.WARTOSC1)
?}


\e_wskaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Pobranie wartosci wiersza i kolumny do algorytmu (z poziomu DEFA)
::       Wymagane ustawienie zmiennych: SIK.ZN, SIK.KOD, SIK.TR, OPERATOR.DEPT,
::       OKRESY.OKR_RAP
::   WE: _a  - wiersz (ref DEFW)
::       _b  - kolumna (ref GR_KOL)
::      [_c] - czy z poziomu tabeli DEFA
::      [_d] - kod wiersza opartego na slowniku lub tabeli
::      [_e] - czesc (ref ML_CZ)
::  OLD: \e_wskaz/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? MLEX.FIKSB=0 || _e:=null |? _>=5 || {? type_of(_e)<>7 || _e:=null ?} || _e:=exec('ref_cz','ml_spra') ?};
_wartosc:=0; w_zkr1:=0;
_zn:={? _>=4 & _d<>'' || 'T' || 'N' ?};
{? var_press('__Kodcz')>0
|| WARTOSCI.index('OKRESCZ'); WARTOSCI.prefix(OKRESY.OKR_RAP,REF.WYKON,_e,_a,_b,OPERATOR.DEPT,_zn)
|| WARTOSCI.index('OKRES'); WARTOSCI.prefix(OKRESY.OKR_RAP,REF.WYKON,_a,_b,OPERATOR.DEPT,_zn)
?};
{? _zn='N' & WARTOSCI.first() | _zn='T' & WARTOSCI.find_key(_d)
|| _wartosc:=WARTOSCI.WARTOSC;  w_zkr1:=WARTOSCI.WZAOKR;
   {? var_pres('_c')>0 & _c || _wartosc*=DEFA.WSP; w_zkr1*=DEFA.WSP ?}
?};
_wartosc


\d_wskaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Obliczenie wartosci wiersza podstawowego dla okresow innych niz miesieczne
::  OLD: \d_wskaz/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.WIERSZ:=_a;
WYRAZ.WIERSZ();
_rodzaj:=DEFW.DOKRES;
_wartosc:=0;
_okr:=OKRESY.OKR_RAP;
{? _rodzaj='K'
|| OKRESY.OKR_RAP().OKRES_DO().ROK();
   exec('dod_ospr','okresy',ROK_F.ref,OKRO_F.NR,OKRO_F.NR,'','M');
   _wartosc+=exec('e_wskaz','sprfin',_a,_b);
   {? _wartosc$2=0 & OKRESY.OKR_RAP().OKRES_DO().KON=date(0,0,0)
   || OKRO_F.index('ROK');
      OKRO_F.prefix(OKRESY.OKR_RAP().ROK);
      {? OKRO_F.prev()
      || exec('dod_ospr','okresy',OKRO_F.ROK,OKRO_F.NR,OKRO_F.NR,'','M');
         _wartosc+=exec('e_wskaz','sprfin',_a,_b)
      ?}
   ?};
   _wartosc
|? _rodzaj='P'
|| OKRESY.OKR_RAP().OKRES_OD().ROK();
   exec('dod_ospr','okresy',ROK_F.ref,OKRO_F.NR,OKRO_F.NR,'','M');
   _wartosc+=exec('e_wskaz','sprfin',_a,_b)
|? _rodzaj='Z'
|| OKRESY.OKR_RAP().OKRES_DO().ROK();
   exec('dod_ospr','okresy',ROK_F.ref,OKRO_F.NR,OKRO_F.NR,'','M');
   _w2:=exec('e_wskaz','sprfin',_a,_b);
   OKRESY.OKR_RAP().OKRES_OD().ROK();
   exec('dod_ospr','okresy',ROK_F.ref,OKRO_F.NR,OKRO_F.NR,'','M');
   _w1:=exec('e_wskaz','sprfin',_a,_b);
   _wartosc+=_w2-_w1
|? _rodzaj='S'
|| OKRO_F.index('ROK');
   OKRO_F.prefix(OKRESY.OKR_RAP().ROK);
   _od:=OKRESY.OKR_RAP().OKRES_OD().NR;
   _do:=OKRESY.OKR_RAP().OKRES_DO().NR;
   {? OKRO_F.find_key(_od)
   || {!|?  exec('dod_ospr','okresy',OKRO_F.ROK,OKRO_F.NR,OKRO_F.NR,'','M');
            _wartosc+=exec('e_wskaz','sprfin',_a,_b);
            {? OKRO_F.NR<_do || OKRO_F.next() || 0 ?}
      !}
   ?}
?};
OKRESY.OKR_RAP:=_okr;
_wartosc


\c_wskaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Obliczenie wartosci wiersza nie podstawowego
::       Wymagane ustawienie zmiennych: WYRAZ.WIERSZ
:: WE: _a - typ algorytmu wiersza
::     _b - kolumna (ref GR_KOL)
::  OLD: \c_wskaz/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
GR_KOL.cntx_psh();
_wartosc:=wartzaok:=0;
w_zkr1:=0;
SIK.KOD:=SIK.TR:=''; SIK.ZN:='N';
WYRAZ.KOLUMNA:=_b;
DEFA.index('LP');
DEFA.prefix(WYRAZ.WIERSZ,WYRAZ.KOLUMNA);
{? DEFA.first()
|| {? _a='I' || _wartosc:=wartzaok:=1 ?};
   {? _a='S' | _a='I'
   || {!|? DEFA.cntx_psh();
           {? _a='S'
           || _war:=exec('e_wskaz','sprfin',DEFA.ARGUMENT,DEFA.ARG_KOL,1); _wartosc+=_war;
              {? (wskzaokr=DEFA.ARGUMENT().ZAOKR) & (wskdokl=DEFW.DOKL)
              || wartzaok+=(w_zkr1$wskdokl)
              || wartzaok+={? wskzaokr<>0 || ((_war/wskzaokr)$wskdokl) || 0 ?}
              ?}
           |? _a='I'
           || _war:=exec('e_wskaz','sprfin',DEFA.ARGUMENT,DEFA.ARG_KOL,1); _wartosc*=_war
           ?};
           DEFA.cntx_pop();
           DEFA.next()
      !}
   |? _a='W'
   || _wartosc:=exec('f_wskaz','sprfin',WYRAZ.KOLUMNA)
   ?};
   {? (_a='I' | _a='W') ||  wartzaok:=(_wartosc$wskdokl) ?}
|| _wartosc:=~~
?};
&w_zkr1;
GR_KOL.cntx_pop();
_wartosc


\f_wskaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Obliczenie wartosci wiersza typu W
::       Wymagane ustawienie zmiennych: WYRAZ.WIERSZ, WYRAZ.KOLUMNA
::  OLD: \f_wskaz/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_licznik:=_mianown:=_czymian:=_wartosc:=0;
DEFA.index('LP');
DEFA.prefix(WYRAZ.WIERSZ,WYRAZ.KOLUMNA);
{? DEFA.first()
|| {!|? DEFA.cntx_psh();
        {? DEFA.LM='L'
        || _wart:=exec('e_wskaz','sprfin',DEFA.ARGUMENT,DEFA.ARG_KOL,1); _licznik+=_wart
        |? DEFA.LM='M'
        || _wart:=exec('e_wskaz','sprfin',DEFA.ARGUMENT,DEFA.ARG_KOL,1); _mianown+=_wart;
           _czymian:=1
        ?};
        DEFA.cntx_pop();
        DEFA.next()
   !}
?};
{? _czymian=1 & _mianown<>0
|| _wartosc:=_licznik/_mianown
|? _czymian=0
|| _wartosc:=_licznik
|? _czymian=1 & _mianown=0
|| _wartosc:=0
?};
_wartosc


\wartosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.50]
:: OPIS: Ustalenie wartosci dla wiersza, kolumny, okresu
::   WE: _a - okres spr.
::       _b - wiersz
::       _c - kolumna
::      [_d - kod slownika]
::   WY: wartosc wiersza
::  OLD: \wartosc/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_odd:={? PAR_SKID.get(12)='T' || OPERATOR.DEPT || null ?};
{? _<4 || _e:='N'; _d:='' || _e:='T' ?};
OKRESY.OKR_RAP:=_a;
WARTOSCI.use('wsik_'+OKRESY.OKR_RAP().ROK().KOD);
WARTOSCI.index('OKRES');
WARTOSCI.prefix(_a,REF.WYKON,_b,_c,_odd,_e,_d);
{? WARTOSCI.first()
|| _wartosc:=WARTOSCI.WARTOSC;
   SIK.DATA_A:=WARTOSCI.DATA;
   SIK.CZAS:=WARTOSCI.CZAS
|| _wartosc:=0;
   SIK.DATA_A:=date(0,0,0); SIK.CZAS:=time(0,0,0)
?};
_wartosc


\f_set_gr_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Ustawienie filtra dla tabeli GR_SIK
::   WE: [_a] - znacznik akceptacji ('T', 'N', [''])
::  OLD: \f_set_gr_sik/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:='' ?};
GR_SIK.cntx_psh();
_qs:={? var_press('wyrGrupa')>0 & 1+SIK.CUR_SPR().TYP_KLIK='T' || ' and SUBSTR(TYP_KLIK,1,1)=\'T\'' || '' ?};
GR_SIK.cntx_pop();
_where:=
'(FIRMA=\''+{? var_press('Konsolid')>0 || $REF.GRUPA || $REF.FIRMA ?}+'\''+
{? REF.FIRMA<>REF.GRUPA
|| ' or FIRMA=\''+$REF.GRUPA+'\''
|| ''
?}+')'+{? _a='' || '' || ' and AKC=\''+_a+'\'' ?}+_qs;
GR_SIK.index('SKROT'); GR_SIK.clear();
GR_SIK.f_set('SKROT',,_where);
1


\f_set_gr_sik2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Ustawienie filtra dla tabeli GR_SIK dla okna redagowania 'RED' tabeli E_SPR w plikach JPK
::  OLD: \f_set_gr_sik/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
_where:=
'(FIRMA=\''+{? var_press('Konsolid')>0 || $REF.GRUPA || $REF.FIRMA ?}+'\''+
{? REF.FIRMA<>REF.GRUPA
|| ' or FIRMA=\''+$REF.GRUPA+'\''
|| ''
?}+')'+' and AKC=\'T\' and E_KOD=\''+ SIK.E_KOD +'\'';
GR_SIK.index('SKROT'); GR_SIK.clear();
GR_SIK.f_set('SKROT',,_where);
1

\be_sik_gr_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed redakcja SIK.GR_SIK
::  OLD: \be_sik_gr_sik/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('f_set_gr_sik','sprfin','T')


\parametr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS  [7.20]
:: OPIS: procedura w zaleznosci od skroconej nazwy formuly (pole ALG_PAR.FORMULA)
::       ustawia odpowiednie nazwy wymaganych parametrow (pola SIK.NP1 ... NP2)
::   WY: zmiana wartosci pol SIK.NP1 ... SIK.NP8
::  OLD: \parametr/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.NP1:=SIK.NP2:=SIK.NP3:=SIK.NP4:=SIK.NP5:=SIK.NP6:=SIK.NP7:=SIK.NP8:='';
_skrot:=ALG_PAR.FORMULA().SKROT;
{? _skrot='R_ROZNIC' | _skrot='R_SALDO'
|| SIK.NP1:='Maska konta';
   SIK.NP2:='Strona konta (Wn lub Ma)';
   SIK.NP3:='Jednostka księgowa (skrót)';
   SIK.NP4:='Waluta (symbol)';
   SIK.NP5:='Typ rozrachunku';
   SIK.NP6:='Od ilu dni po terminie płatn.';
   SIK.NP7:='Do ilu dni po terminie płatn.';
   SIK.NP8:=''
::Poczatek modyfikacji dla Maclex Fiks 12-10-2009 AK [1120] - salda i obroty na strukturach budzetowych
|? (_skrot*'SAL'>0 | _skrot*'OBR'>0 | (4+_skrot)*'BO'>0 | _skrot*'ROZNI'>0
   | _skrot*'ZM_STA'>0) & (_skrot*'SALB'=0 & _skrot*'OBRB'=0)
|| SIK.NP1:={? 1+_skrot='_' || '' || 'Maska konta'?};
   SIK.NP2:='Strona konta (Wn lub Ma)';
   {? 1+GR_SIK.TYP_KLIK<>'T'
   || SIK.NP3:='Jednostka księgowa (skrót)'
   ?};
   {? 1+_skrot<>'^' & 1+GR_SIK.TYP_KLIK<>'T'
   || SIK.NP4:='Waluta (symbol)';
      SIK.NP5:='Wyróżnik (słownik)';
      SIK.NP6:='Wyróżnik (kod)'
   || SIK.NP4:=SIK.NP5:=SIK.NP6:=''
   ?};
   SIK.NP7:='';
   SIK.NP8:=''
|? _skrot*'SALB'>0 | _skrot*'OBRB'>0
|| SIK.NP1:={? 1+_skrot='_' || '' || 'Maska struktury'?};
   SIK.NP2:='Strona konta (Wn lub Ma)';
   SIK.NP3:='Jednostka księgowa (skrót)';
   {? 1+_skrot<>'^'
   || SIK.NP4:='Waluta (symbol)';
      SIK.NP5:={?_skrot*'ML'||'Hierarchia słowników'||'Tabela budżetu'?};
      SIK.NP6:='Typ (prefix):'
   || SIK.NP4:=SIK.NP5:=SIK.NP6:=''
   ?};
   SIK.NP7:={?_skrot*'ML'||'Poziom'||''?};
   SIK.NP8:={? 1+_skrot='_' || 'Maska hierarchii' || ''?}
|? _skrot*'MSDB'>0
|| SIK.NP1:={? 1+_skrot='_' || '' || 'Sprawozdanie MSDB'?};
   SIK.NP2:='Kolumna MSDB';
   SIK.NP3:='Wiersz MSDB';
   SIK.NP4:='Jednostka księgowa (skrót)';
   SIK.NP5:=SIK.NP6:='';
   SIK.NP7:='';
   SIK.NP8:=''
|? _skrot*'PLANW'>0
|| SIK.NP1:='Paragraf';
   SIK.NP2:='Status zatrudnienia';
   SIK.NP3:='Jednostka księgowa (skrót)';
   SIK.NP4:=SIK.NP5:=SIK.NP6:='';
   SIK.NP7:='';
   SIK.NP8:=''
|? _skrot*'PLANZ'>0
|| SIK.NP1:='Paragraf';
   SIK.NP2:='Status zatrudnienia';
   SIK.NP3:='Jednostka księgowa (skrót)';
   SIK.NP4:=SIK.NP5:=SIK.NP6:='';
   SIK.NP7:='';
   SIK.NP8:=''
|? _skrot='ML_SUM'
|| SIK.NP1:='Formuła';
   SIK.NP2:='Cdn.1';
   SIK.NP3:='Cdn.2';
   SIK.NP4:='Cdn.3';
   SIK.NP5:='Cdn.4';
   SIK.NP6:='Cdn.5';
   SIK.NP7:='Komórka k1w1';
   SIK.NP8:='Kolejność'
|? _skrot='ML_RBNZ'
|| SIK.NP1:='Maska konta';
   SIK.NP2:='Strona konta (Wn lub Ma)';
   SIK.NP3:='Jednostka księgowa (skrót)';
   SIK.NP4:='Waluta (symbol)';
   SIK.NP5:='Typ rozrachunku';
   SIK.NP6:='Wyróżnik (słownik)';
   SIK.NP7:='Wyróżnik (kod)';
   SIK.NP8:='Wymagalne?'
|? _skrot='ML_RBNZR'
|| SIK.NP1:='Maska konta';
   SIK.NP2:='Strona konta (Wn lub Ma)';
   SIK.NP3:='Jednostka księgowa (skrót)';
   SIK.NP4:='Waluta (symbol)';
   SIK.NP5:='Typ rozrachunku';
   SIK.NP6:='Wyróżnik (słownik)';
   SIK.NP7:='Wyróżnik (kod)';
   SIK.NP8:='Wymagalne?'
|? _skrot='ML_RBRN'
|| SIK.NP1:='Maska konta';
   SIK.NP2:='Strona konta (Wn lub Ma)';
   SIK.NP3:='Jednostka księgowa (skrót)';
   SIK.NP4:='Waluta (symbol)';
   SIK.NP5:='Typ rozrachunku';
   SIK.NP6:='Wyróżnik (słownik)';
   SIK.NP7:='Wyróżnik (kod)';
   SIK.NP8:='Wymagalne?'
|? _skrot*'ML_NZ'
|| SIK.NP1:={? 1+_skrot='_' || '' || 'Maska struktury'?};
   SIK.NP2:='Strona konta (Wn lub Ma)';
   SIK.NP3:='Jednostka księgowa (skrót)';
   {? 1+_skrot<>'^'
   || SIK.NP4:='Waluta (symbol)';
      SIK.NP5:='Typ (prefix)'
   || SIK.NP4:=SIK.NP5:=SIK.NP6:=''
   ?};
   SIK.NP6:={? (_skrot*'ML_NZH') || 'Hierarchia słowników' || 'Typ rozrachunku' ?};
   SIK.NP7:='';
   SIK.NP8:=''
|? _skrot*'BZPLAN'>0
|| SIK.NP1:='';
   SIK.NP2:='Typ planu';
   SIK.NP3:='Poziom planu';
   SIK.NP4:='Maska planu';
   SIK.NP5:='Korekta';
   SIK.NP6:='';
   SIK.NP7:='';
   SIK.NP8:=''
::Koniec modyfikacji dla MacLex Fiks
|? _skrot='DL_NALEZ' | _skrot='DL_ZOBOW'
|| SIK.NP1:='Jednostka księgowa (skrót)';
   SIK.NP2:='Waluta (symbol)';
   SIK.NP3:='';
   SIK.NP4:='';
   SIK.NP5:='';
   SIK.NP6:='';
   SIK.NP7:='';
   SIK.NP8:=''
|? (3+(~-_skrot)='VAT') | (3+(~-_skrot)='VAN')
|| SIK.NP1:='Klasa ewidencji VAT';
   SIK.NP2:='Grupa podatkowa';
   SIK.NP3:='Rejestr VAT';
   SIK.NP4:='Jednostka księgowa (skrót)';
   SIK.NP5:='';
   SIK.NP6:='';
   SIK.NP7:='';
   SIK.NP8:=''
|? _skrot='WYNIKF'
|| SIK.NP1:='Uwzględniać konto wyniku finansowego?';
   SIK.NP2:='Symbol konta "Wynik finansowy"';
   SIK.NP3:='Waluta (symbol)';
   SIK.NP4:='Jednostka księgowa (skrót)';
   SIK.NP5:='';
   SIK.NP6:='';
   SIK.NP7:='';
   SIK.NP8:=''
|? _skrot='%POD.DOC'
|| SIK.NP1:='';
   SIK.NP2:='';
   SIK.NP3:='';
   SIK.NP4:='';
   SIK.NP5:='';
   SIK.NP6:='';
   SIK.NP7:='';
   SIK.NP8:=''
?}


\kol_ma_alg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Czy zaakceptopwane sprawozdanie zawiera kolumny z algorytmem
::  OLD: \kol_ma_alg/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
GR_KOL.cntx_psh();
GR_KOL.index('KOLEJ'); GR_KOL.prefix(GR_SIK.ref(),1);
_tak:=GR_KOL.first();
GR_KOL.cntx_pop();
_tak


\set_max_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Ustawia wartosci zwiazane z maksymalna wartoscia kolumn
::  OLD: \set_max_kol/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('tt_max','kolor');
tt_max:={? tt_size>UNPAR.P35 || UNPAR.P35 || tt_size ?};
tt_mov[1]:=0; tt_mov[2]:={? tt_max<tt_size || tt_size-tt_max ?}; tt_mov[3]:=0;
kolor:=obj_new(tt_max);
floor( (121-38-tt_max)/tt_max )


\gen_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Tworzy tabele z definicja okresow prezentowanych w kolumnach okna wertowania
::   WY: szerokosc kolumny okna wertowania lub kod bledu
::  OLD: \gen_okr/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('tt_okr','tt_size','tt_mov');
WERPVIEW.index('WER_VIEW'); WERPVIEW.prefix(SIK.WIDOK); tt_size:=WERPVIEW.size();
tt_okr:=obj_new(tt_size);
{! _i:=1..tt_size |! tt_okr[_i]:=obj_new(10) !}; _i:=0;
tt_mov:=obj_new(3);
_width:=exec('set_max_kol','sprfin');
{? WERPVIEW.first()
|| OSPR.index('OKR_ROK'); OSPR.prefix(REF.FIRMA);
   {!
   |? _i+=1;
      _rok:=exec('get_rok','sprfin',WERPVIEW.ROK,SIK.ROK1);
      {? _rok=null
      || _width:=-1
      |? OSPR.find_key(WERPVIEW.SLO,_rok)
      || tt_okr[_i][1]:=OSPR.ref();
         tt_okr[_i][3]:={? OSPR.TYP='M'
                           || exec('get_lang','lang',OSPR.OKRES_OD(); OKRO_F.ref())+' '+OKRO_F.ROK().NAZ
                           || exec('get_lang','lang',OSPR.ref())
                           ?}+{? WERPVIEW.WYKON='T' || '^' || '' ?};
         {? SSTALE.WARIANT=5
         || tt_okr[_i][2]:={? _width>15
                           || tt_okr[_i][3]
                           || exec('get_lang','lang',OSPR.ref(),,0)+{? WERPVIEW.WYKON='T' || '^' || '' ?}
                           ?}
         || tt_okr[_i][2]:={? _width>15
                           || tt_okr[_i][3]
                           || exec('get_lang','lang',OSPR.ref(),,0)+' '+OSPR.OKRES_OD().ROK().NAZ+{? WERPVIEW.WYKON='T' || '^' || '' ?}
                           ?}
         ?};
         tt_okr[_i][5]:=OSPR.TYP='M';
         tt_okr[_i][6]:=ROK_F.KOD;
         tt_okr[_i][7]:=exec('mod_ospr','sprfin');
         tt_okr[_i][10]:=WERPVIEW.WYKON
      || _width:=0
      ?};
      _width>0 & WERPVIEW.next()
   !}
?};
_width


\mod_ospr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Czy mozna modyfikowac wartosci okresu?
::  OLD: \mod_ospr/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
{? SIK.WERSJA().OSPR=null
|| 1
|| OKRO_F.cntx_psh(); OSPR.cntx_psh();
   OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.FIRMA);
   _fun:="
      {? OKRO_F.KON<>date(0,0,0)
      || OKRO_F.KON
      |? OKRO_F.NAZ='Bilans otwarcia'
      || {? OKRO_F.next()
         || OKRO_F.POCZ
         ?}
      |? OKRO_F.NAZ='Bilans zamknięcia'
      || {? OKRO_F.prev()
         || OKRO_F.KON
         ?}
      ?}
   ";
   OSPR.OKRES_DO();
   _d1:=_fun();
   SIK.WERSJA().OSPR().OKRES_DO();
   _d2:=_fun();
   OKRO_F.cntx_pop(); OSPR.cntx_pop();
   _d1>_d2
?}


\get_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Ustawia rok o _a lat w przod w stosunku do roku _b
::   WE: _a - liczba lat w przod
::       _b - rok (ROK_F.ref)
::   WE: ref roku lub null gdy nie zdefiniowano roku
::  OLD: \get_rok/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
_rok:=null;
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
{? ROK_F.seek(_b)
|| {!
   |? _ok:=_a<0 & ROK_F.next() | _a>0 & ROK_F.prev();
      {? _ok || {? _a>0 || _a-=1 |? _a<0 || _a+=1 ?} ?}
   !};
   {? _a=0 || _rok:=ROK_F.ref() ?}
?};
_rok


\mov_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przesuniecie okresow o _a
::   WE: _a - o ile przesunac okresy
::  OLD: \mov_okr/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=UNPAR.P34*_a;
_v:=tt_mov[1]+_a;
{? _v>tt_mov[2] || _v:=tt_mov[2]
|? _v<0 || _v:=0
?};
tt_mov[1]:=_v;
exec('set_kol_name','sprfin');
{? SSTALE.WARIANT=5
|| dalej:=1;
   sel_exit()
?}


\set_kol_name
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Ustawia nazwy kolumn
::   WE: _a - indeks do tabeli z nazwa kolumny
::  OLD: \set_kol_name/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=1 ?};
{? _a
|| {! _i:=1..tt_max
   |! ($('POMOC.K'+$_i+':=_a'))(tt_okr[_i+tt_mov[1]][2])
   !}
|| {! _i:=1..tt_kol_m
   |! ($('POMOC.K'+$_i+':=_a'))(tt_kol[_i][3])
   !}
?}


\load_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2006]
:: OPIS: Ustawia parametry zwiazane z wariantami prezentacji wartosci sprawozdan
::  OLD: \load_war/tree_spr.fml
::  OLD: \load_war/!fks_ksp_zspr.fml
::----------------------------------------------------------------------------------------------------------------------
WARIANTY.cntx_psh();
WARIANTY.index('STALE'); WARIANTY.prefix(null,STALE.ref());
{? WARIANTY.first() || WARIANTY.prefix(); WARIANTY.FIRMA:=REF.FIRMA; WARIANTY.put() ?};
WARIANTY.cntx_pop();
WARIANTY.index('STALE'); WARIANTY.prefix(REF.FIRMA,STALE.ref());
{? ~WARIANTY.first()
|| WARIANTY.blank();
   WARIANTY.STALE:=STALE.ref();
   ROK_F.index('NAZWA'); ROK_F.prefix(REF.FIRMA); ROK_F.first();
   WARIANTY.ROK:=ROK_F.ref();
   WARIANTY.add()
?};
OKRESY.ROK1:=WARIANTY.ROK;
OKRESY.TYP:=WARIANTY.TYP;
OKRESY.OKR_RAP:=WARIANTY.OSPR;
SSTALE.WARIANT:=WARIANTY.WARIANT;
SSTALE.ROK:=WARIANTY.ROK;
SSTALE.ROK2:=WARIANTY.ROK2;
SSTALE.TYP:=WARIANTY.TYP;
SSTALE.OSPR:=WARIANTY.OSPR;
SSTALE.OSPR2:=WARIANTY.OSPR2;
SSTALE.ZAOKR:=WARIANTY.ZAOKR;
SSTALE.PREC:=WARIANTY.PREC;
SSTALE.INC:=WARIANTY.INC;
SSTALE.GR_SIK:=WARIANTY.GR_SIK;
SSTALE.OKRES:=WARIANTY.OKRES;
SIK.WIDOK:=WARIANTY.WER_VIEW;
SSTALE.AF:=WARIANTY.AF; {? SSTALE.AF=null || SSTALE.AF:=REF.FIRMA ?};
SSTALE.W_SCH:=WARIANTY.W_SCH


\bd_wview
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przed akcja usun okna WER tabeli WER_VIEW
::  OLD: \bd_wview/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
WARIANTY.index('STALE'); WARIANTY.prefix();
{? WARIANTY.first()
|| {!
   |? _ok:=WARIANTY.WER_VIEW<>WER_VIEW.ref() & WARIANTY.KOLORY<>WER_VIEW.ref() &
           WARIANTY.WIDOK1<>WER_VIEW.ref() & WARIANTY.WIDOK2<>WER_VIEW.ref();
      _ok & WARIANTY.next()
   !}
?};
{? _ok=0
|| {? __WV_TYP='C'
   || FUN.info('Oznaczenie odchyleń używane przez użytkowników jako startowe.'@)
   || FUN.info('Widok używany przez użytkowników jako startowy.'@)
   ?};
   return()
?};
{? __WV_TYP='C' & FUN.ask('Czy usunąć oznaczenie odchyleń?'@) | __WV_TYP<>'C' & FUN.ask('Czy usunąć widok?'@)
|| {? WER_VIEW.r_lock(1,1)
   || {? __WV_TYP='C'
      || WERCVIEW.index('WER_VIEW'); WERCVIEW.prefix(WER_VIEW.ref());
         {? WERCVIEW.first() || {! |? WERCVIEW.del() !} ?};
         exec('del_wers_www','sprfin','WER_VIEW',WER_VIEW.ref());
         {? ~WER_VIEW.del() || WER_VIEW.r_unlock() ?}
      || WERPVIEW.index('WER_VIEW'); WERPVIEW.prefix(WER_VIEW.ref());
         {? WERPVIEW.first() || {! |? WERPVIEW.del() !} ?};
         exec('del_wers_www','sprfin','WER_VIEW',WER_VIEW.ref());
         {? ~WER_VIEW.del() || WER_VIEW.r_unlock() ?}
      ?}
   || {? __WV_TYP='C'
      || FUN.info('Oznaczenie odchyleń obsługuje inny operator.'@)
      || FUN.info('Widok obsługuje inny operator.'@)
      ?}
   ?}
?}


\del_wers_www
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Usuwa wskazania z pol tabeli WERS_WWW
::   WE: _a - akronim pola tabeli WERS_WWW
::       _b - wskazanie jakiej wartosci pola wyczyscic
::  OLD: \del_wers_www/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
WERS_WWW.index('WERSJE_W'); WERS_WWW.prefix(REF.FIRMA);
{? WERS_WWW.first()
|| {!
   |? ($('{? WERS_WWW.'+_a+'=_a || WERS_WWW.'+_a+':=null; WERS_WWW.put() ?}'))(_b);
      WERS_WWW.next()
   !}
?}


\werpview
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Widoki planów - pozycje
::  OLD: \werpview/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
_msg:='';
{? WER_VIEW.r_lock(1,1)
|| SLU.index('WZORZEC'); SLU.prefix('prosty','~TYPY OKRESÓW');
   {? SLU.first()
   || SLO.index('SL'); SLO.prefix(SLU.ref());
      SLO.win_sel('ONE'); SLO.win_dict('ONE'); slo_noact:=1;
      WERPVIEW.index('WER_VIEW'); WERPVIEW.prefix(WER_VIEW.ref());
      WERPVIEW.select();
      VAR_DEL.delete('slo_noact')
   || _msg:='Nie znaleziono słownika ~TYPY OKRESÓW.'@
   ?};
   WER_VIEW.r_unlock()
|| _msg:='Pozycje widoku są obsługiwane przez innego użytkownika.'@
?};
{? _msg<>'' || FUN.info(_msg) ?}


\bl_wer_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Wartosc poczatkowa pol typu WER_VIEW
::  OLD: \bl_wer_v/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
WER_VIEW.ref()


\ar_wer_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Rekord po okna WERC i WERW tabeli WER_VIEW
::  OLD: \ar_wer_v/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=__CHK.record2(WER_VIEW,'NAZWA','Nazwa');
{? _r=''
|| _ref:=WER_VIEW.ref(); _nazwa:=WER_VIEW.NAZWA;
   WER_VIEW.cntx_psh(); WER_VIEW.index('NAZWA'); WER_VIEW.prefix(__WV_TYP);
   {? WER_VIEW.find_key(_nazwa) & WER_VIEW.NAZWA=_nazwa & (-menu_txt()<>'popraw' | _ref<>WER_VIEW.ref())
   || {? __WV_TYP='W'
      || FUN.info('Istnieje już zestaw o nazwie: %1.'@[_nazwa])
      || FUN.info('Istnieje już oznaczenie o nazwie: %1.'@[_nazwa])
      ?};
      _r:='NAZWA'
   ?};
   WER_VIEW.cntx_pop()
?}; _r


\wv_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Akcja Eksport okna WERW tabeli WER_VIEW
::  OLD: \wv_exp/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy wyeksportować widoki i\nich pozycje do pliku tekstowego?'@)
|| WER_VIEW.cntx_psh();
   WER_VIEW.index('NAZWA'); WER_VIEW.prefix('W');
   {? WER_VIEW.first()
   || _f:=fopen('widokipl.txt','w',1);
      {? _f
      || WERPVIEW.index('WER_VIEW');
         {!
         |? fwrite(_f,'W@'+WER_VIEW.NAZWA+'@');
            WERPVIEW.prefix(WER_VIEW.ref());
            {? WERPVIEW.first()
            || {!
               |? fwrite(_f,'P@'+$WERPVIEW.LP+'@'+WERPVIEW.SLO().KOD+'@'+$WERPVIEW.ROK+'@'+WERPVIEW.WYKON+'@');
                  WERPVIEW.next()
               !}
            ?};
            WER_VIEW.next()
         !};
         fclose(_f);
         FUN.info('Widoki i ich pozycje zapisano w pliku widokipl.txt.'@)
      ?}
   ?};
   WER_VIEW.cntx_pop()
?}


\wv_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Akcja Import okna WERW tabeli WER_VIEW
::  OLD: \wv_imp/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy zaimportować widoki i\nich pozycje z pliku tekstowego?'@)
|| _f:=fopen('widokipl.txt','r',1);
   _l_add:=0;
   {? _f
   || _fun:="_p:=TXT*'@'; _w:=_p+TXT-1; TXT:=_p-TXT; _w";
      WER_VIEW.cntx_psh();
      WER_VIEW.index('NAZWA'); WER_VIEW.prefix();
      WERPVIEW.index('WER_VIEW'); WERPVIEW.prefix();
      SLU.index('WZORZEC'); SLU.prefix('prosty','~TYPY OKRESÓW');
      {? SLU.first()
      || SLO.index('SL'); SLO.prefix(SLU.ref());
         {!
         |? TXT:=fread(_f);
            {? TXT<>'\n'
            || {? _fun()='W'
               || _w:=_fun();
                  {? ~WER_VIEW.find_key('W',_w) | WER_VIEW.NAZWA<>_w
                  || WER_VIEW.TYP:='W';
                     WER_VIEW.NAZWA:=_w;
                     WER_VIEW.TYPE_VAL:='';
                     _ok:=WER_VIEW.add();
                     _l_add+=_ok
                  || _ok:=0
                  ?}
               |? _ok
               || WERPVIEW.WER_VIEW:=WER_VIEW.ref();
                  WERPVIEW.LP:=#_fun();
                  _w:=_fun();
                  {? SLO.find_key(_w) & _w=SLO.KOD
                  || WERPVIEW.SLO:=SLO.ref()
                  ?};
                  WERPVIEW.ROK:=#_fun();
                  WERPVIEW.WYKON:=_fun();
                  WERPVIEW.add()
               ?};
               1
            ?}
         !};
         &TXT
      || FUN.info('Nie znaleziono słownika \'%1\'.'@['~TYPY OKRESÓW'])
      ?};
      fclose(_f);
      WER_VIEW.cntx_pop()
   ?};
   FUN.info('Zakończono import.\nLiczba dodanych widoków: %1.'@[$_l_add])
?}


\ba_wview
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przed akcja Dolacz okna WER tabeli WERPVIEW
::  OLD: \ba_wview/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
_add:=-menu_txt()='dołącz';
_lp:=WERPVIEW.LP;
WERPVIEW.blank();
{? WERPVIEW.size()
|| WERPVIEW.LP:=_lp;
   {? _add=0 || WERPVIEW.LP+=1 ?}
|| WERPVIEW.LP:=1; _add:=0
?};
{? WERPVIEW.edit("exec('arwerpv','sprfin')")
|| {? _add
   || WERPVIEW.cntx_psh();
      WERPVIEW.last();
      {!
      |? WERPVIEW.LP+=1;
         WERPVIEW.put();
         WERPVIEW.prev() & WERPVIEW.LP>=_lp
      !};
      WERPVIEW.cntx_pop()
   ?};
   WERPVIEW.add()
?}


\arwerpv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Rekord po okna tabeli WERPVIEW
::  OLD: \arwerpv/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=__CHK.record(WERPVIEW,,'SLO');
{? _r='' & WERPVIEW.ROK>100
|| FUN.info('Maksymalna liczba lat wstecz wynosi 100.'@);
   _r:='ROK'
?};
{? _r='' || __CHG_VIEW:=1 ?};
_r


\bdpwview
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przed akcja usun okna WER tabeli WERPVIEW
::  OLD: \bdpwview/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć bieżący wiersz?'@)
|| WERPVIEW.cntx_psh();
   _next:=WERPVIEW.next();
   _ref:={? _next | WERPVIEW.prev() || WERPVIEW.ref() || null ?};
   WERPVIEW.cntx_pop();
   WERPVIEW.del();
   {? _next
   || {!
      |? WERPVIEW.LP-=1;
         WERPVIEW.put();
         WERPVIEW.next()
      !}
   ?};
   {? _ref || WERPVIEW.seek(_ref) ?};
   __CHG_VIEW:=1
?}


\brwerpv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Rekord przed okna tabeli WERPVIEW
::  OLD: \brwerpv/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
WERPVIEW.ROK | WERPVIEW.WYKON='T'


\werpvmov
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Akcje Do gory do dolu okna WER tabeli WERPVIEW
::   WE: _a - 1-do gory <>1-do dolu
::  OLD: \werpvmov/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=WERPVIEW.ref();
{? _a & WERPVIEW.prev() | ~_a & WERPVIEW.next()
|| _lp:=WERPVIEW.LP;
   WERPVIEW.LP:=0;
   WERPVIEW.put();
   _ref2:=WERPVIEW.ref();
   {? WERPVIEW.seek(_ref)
   || _lp2:=WERPVIEW.LP;
      WERPVIEW.LP:=_lp;
      WERPVIEW.put();
      {? WERPVIEW.seek(_ref2)
      || WERPVIEW.LP:=_lp2;
         WERPVIEW.put();
         WERPVIEW.seek(_ref)
      ?}
   ?};
   __CHG_VIEW:=1
||  {? _a
    || FUN.info('Nie można przenieść wyżej.'@)
    || FUN.info('Nie można przenieść niżej.'@)
    ?}
?}


\view_defw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Wyswietla plik z opisem algorytmu
::----------------------------------------------------------------------------------------------------------------------
{? DEFW.PLIK
|| exec('bl_view','#blob',DEFW,'PLIK')
|| FUN.info('Wiersz nie jest skojarzony z plikiem zawierającym opis algorytmu.'@)
?}


\def_opis
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: obsluga akcji Opis w okienku WER tabeli DEFW
::  OLD: \def_opis/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
WOPIS.index('OPIS');
WOPIS.prefix(DEFW.ref);
WOPIS.win_sel('WER');
WOPIS.select()


\fks_ksp_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Parametry pracy obszaru roboczego sprawozdan definiowalnych
::----------------------------------------------------------------------------------------------------------------------
{? __PARSES.editDom('FKS')
|| AreaTitle.setTitle()
?}


\get_key
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca rekord kluczowy
::----------------------------------------------------------------------------------------------------------------------
_k:=$SIK.GR_SIK+'#'+$OKRESY.OKRES_OD+'#'+$OKRESY.OKRES_DO+'#';
_k+((48-+_k)*'_')


\aktualizuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Uruchamia czynność aktualizacji sprawozdań
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_KSP_DEAT';
_params.UIDREF:=exec('get_key','sprfin');
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'GR_SIK',SIK.GR_SIK);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'POWIAZANE',OKRESY.AKT_POW='T');
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OKRES_OD',OKRESY.OKRES_OD);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OKRES_DO',OKRESY.OKRES_DO);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZAPISYWAC',OKRESY.CZY_PAR='T');
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYLKO_MC',OKRESY.AKT_INNE);
exec('mp_run','#b__box',_params)


\formatuj
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Formatowanie liczb do postaci stringowej
::  OLD: \formatuj/wskaznik.fml
::----------------------------------------------------------------------------------------------------------------------
{? PARAM.TW1='R'
|| PARAM.W1:=form(PARAM.WR1,15,{?PARAM.R_KWOT||2||WARTOSCI.WYRAZ().DOKL?})
|| PARAM.W1:=''
?};
{? PARAM.TW2='R'
|| PARAM.W2:=form(PARAM.WR2,15,{?PARAM.R_KWOT||2||WARTOSCI.WYRAZ().DOKL?})
|| PARAM.W2:=''
?};
{? PARAM.TW3='R'
|| {? OKRESY.LOKRES=1 & PARAM.TYP1='R'
   || PARAM.W3:=form(PARAM.WR3,10,2)
   || PARAM.W3:=form(PARAM.WR3,15,{?PARAM.R_KWOT||2||WARTOSCI.WYRAZ().DOKL?})
   ?}
|| {? OKRESY.LOKRES=1 & PARAM.TYP1='R'
   || PARAM.W3:=''
   || {? OKRESY.LOKRES>1 || PARAM.W3:='' ?}
   ?}
?};
{? PARAM.TW4='R'
|| PARAM.W4:=form(PARAM.WR4,15,{?PARAM.R_KWOT||2||WARTOSCI.WYRAZ().DOKL?})
|| PARAM.W4:=''
?};''


\ikona_grupa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Formula na ikone dla sprawozdania grupy
::----------------------------------------------------------------------------------------------------------------------
{? GR_SIK.FIRMA=REF.GRUPA || 'xwin16.png:182' || '' ?}


\c8_41_01
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [12.10]
:: OPIS: Formula dla wiersza 41. CIT-8 2012
::  OLD: \c8_41_01/skid_spr.fml
::----------------------------------------------------------------------------------------------------------------------
_reff:=REF.FIRMA;
REF.FIRMA:=GR_SIK.FIRMA;
_w1:=exec('war_wsk','sprfin','CIT-8 2012','38.',1);
_w2:=exec('war_wsk','sprfin','CIT-8 2012','40.',1);
{? SIK.WARTOSC>(_w1-_w2)$2 & _w1>=_w2
|| SIK.WARTOSC:=(_w1-_w2)$2
?};
REF.FIRMA:=_reff;
1


\c8_42_01
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [12.10]
:: OPIS: Formula dla wiersza 42. CIT-8 2012
::  OLD: \c8_42_01/skid_spr.fml
::----------------------------------------------------------------------------------------------------------------------
_reff:=REF.FIRMA;
REF.FIRMA:=GR_SIK.FIRMA;
_w1:=exec('war_wsk','sprfin','CIT-8 2012','38.',1);
_w2:=exec('war_wsk','sprfin','CIT-8 2012','40.',1);
_w3:=exec('war_wsk','sprfin','CIT-8 2012','41.',1);
{? SIK.WARTOSC>(_w1-_w2-_w3)$2 & _w1>=_w2+_w3
|| SIK.WARTOSC:=(_w1-_w2-_w3)$2
?};
REF.FIRMA:=_reff;
1


\war_wsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.30]
:: OPIS: Formula do sprawdzenia lub poprawienia wartosci wiersza
::   WE: _a - sprawozdanie (GR_SIK.ref lub GR_SIK.SKROT)
::       _b - wiersz (DEFW.ref lub DEFW.KOD)
::       _c - kolumna (GR_KOL.ref lub GR_KOL.LP)
::       [_d - wartosc do zmiany]
::   WY: wartosc wiersza
::  OLD: \war_wsk/skid_spr.fml
::----------------------------------------------------------------------------------------------------------------------
poziom:=DEFW.KOLEJ;
lp:=DEFW.LP;
gr:=DEFW.GRUPA;
GR_SIK.cntx_psh();
GR_KOL.cntx_psh();
DEFW.cntx_psh();
_war:=0;
{? type_of(_a)<>7
|| GR_SIK.index('SKROT'); GR_SIK.prefix(REF.FIRMA);
   {? type_of(_a)=2 & GR_SIK.find_key(_a) & GR_SIK.SKROT=_a
   || _a:=GR_SIK.ref()
   || _a:=null
   ?}
?};
{? _a<>null & type_of(_b)=2
|| DEFW.index('GRUPA');
   DEFW.prefix(_a,_b);
   _arg:={? DEFW.first() || DEFW.ref() || null ?};
   {? type_of(_c)<>7
   || GR_KOL.index('LP');
      GR_KOL.prefix();
      {? type_of(_c)=1 & GR_KOL.find_key(_a,_c)
      || _c:=GR_KOL.ref()
      || _c:=null
      ?}
   ?};
   {? _c<>null & _arg<>null
   || WARTOSCI.use('wsik_'+OKRESY.OKR_RAP().ROK().KOD);
      WARTOSCI.index('OKRES');
      WARTOSCI.prefix();
      {? WARTOSCI.find_key(OKRESY.OKR_RAP,REF.WYKON,_arg,_c,OPERATOR.DEPT,'N')
      || {? _=3
         || _war:=WARTOSCI.WARTOSC
         || WARTOSCI.WARTOSC:=_d;
            DEFW.cntx_psh();
            WARTOSCI.WYRAZ();
            WARTOSCI.WZAOKR:=(_d/DEFW.ZAOKR)$DEFW.DOKL;
            DEFW.cntx_pop();
            WARTOSCI.put();
            _wiersz:=WYRAZ.WIERSZ;
            _grupa:=WYRAZ.GRUPA;
            _war:=SIK.WARTOSC;
            exec('pop_pow','sprfin',_arg);
            WYRAZ.WIERSZ:=_wiersz;
            WYRAZ.GRUPA:=_grupa;
            SIK.WARTOSC:=_war
         ?}
      ?}
   ?}
?};
GR_SIK.cntx_pop();
GR_KOL.cntx_pop();
DEFW.cntx_pop();
_war


\in_gr_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Edycja parametru wejściowego czynności - GR_SIK
::   WE: _a - wartośc
::       _b - nazwa parametu wejściowego
::----------------------------------------------------------------------------------------------------------------------
_o:=GR_SIK.mk_sel('Sprawozdania'@,'P',,'#grsiksel',,,,,'U');
GR_SIK.win_fld(_o,,'SKROT',,,,,,'Kod'@);
GR_SIK.win_fld(_o,,'NAZWA');
GR_SIK.win_fld(_o,,'ZAOKR',,,,,,'Wskaźnik zaokrąglenia'@);
GR_SIK.win_fld(_o,,'DOKL',,,,,,'Dokładność'@);
GR_SIK.win_act(_o,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
GR_SIK.win_sel(_o);
exec('f_set_gr_sik','sprfin','T');
GR_SIK.prefix();
{? _a=~~ | ~GR_SIK.seek(_a) || GR_SIK.first() ?};
{? GR_SIK.select(,1,5)
|| GR_SIK.ref()
|| null
?}


\add_tab_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodaje okno do okna grupowego
::   WE: _a - nazwa zakładki
::       _b - tabela
::       _c - okno grupowe
::----------------------------------------------------------------------------------------------------------------------
_b.grp_sel(_c,GR_SIK,'WER',_a,"
   kolAkcG:='';
   _filtr:=GR_SIK.f_active() & GR_SIK.sel_size()=0;
   GR_KOL.index('LP');
   {? _filtr & GR_SIK.f_get() | ~_filtr & GR_SIK.get()
   || WYRAZ.GRUPA:=GR_SIK.ref;
      GR_KOL.prefix(WYRAZ.GRUPA);
      WYRAZ.LKOLUMN:=GR_KOL.size();
      {? GR_SIK.AKC='T'
      || kolAkcG:='DPU:D'
      ?};
      GR_KOL.actions_grayed('WERG',kolAkcG)
   || GR_KOL.prefix(null)
   ?};
   grp_disp(GR_KOL,'WERG')
",,,,"
   {? GR_SIK.sel_size()
   || GR_SIK.sel_adel()
   ?};
   {? var_press('Konsolid')>0
   || AreaTitle.setArea('KON_SPR')
   || {? AreaTitle.area<>'ZWS_PAR' || AreaTitle.setArea('FKS_KSP') ?}
   ?};
   AreaTitle.setTitle();
   exec('f_set_gr_sik','sprfin')
",,,,'maximized_with_title');
{? var_press('Konsolid')>0
|| task_attach('KON_SPR_DDEF')
|| task_attach('ZWS_PAR_FSPR')
?};
_b.tab_splt(_c,,'vertical','left');
_b.grp_sel(_c,GR_KOL,'WERG',,"",0,0,,"","",0,,'maximized_with_title');
GR_SIK.win_fml('WER',SKID,'LANG_WER',,'ICON_BEFORE',"exec('icon','lang')");
GR_KOL.win_fml('WERG',SKID,'LANG_WER',,'ICON_BEFORE',"exec('icon','lang')");
formikon:="exec('ikona_grupa','sprfin')";
GR_SIK.win_fml('WER',,'SKROT',,'ICON_BEFORE',formikon);
GR_SIK.win_fml('SLO2',,'SKROT',,'ICON_BEFORE',formikon);
SIK.blank();
GR_SIK.win_edit('RED2');
GR_SIK.actions('WER','L');
WYRAZ.AKCEPT:='N';
SIK.blank()


\chk_typ_klik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Sprawdza ustawienie pola TYP_KLIK
::   WE: _a - tryb: 1-edycja, 2-akceptacja
::----------------------------------------------------------------------------------------------------------------------
{? 1+GR_SIK.TYP_KLIK<>'T' || return('') ?};
_qs:=GR_SIK.TYP_KLIK;
SIK.CUR_SPR:=GR_SIK.ref();
_mod:=-menu_txt()='popraw';
_msg:='';
_ok:='';
{? _a=2
|| _ref:=GR_SIK.ref();
   GR_SIK.cntx_psh();
   GR_SIK.index('AKC_KLIK'); GR_SIK.prefix(GR_SIK.FIRMA,'T',GR_SIK.TYP_KLIK,);
   {? GR_SIK.first()
   || _msg:='Istnieje zaakceptowane sprawozdanie: %1 ze wskazanym użyciem w Qlik Sense.'@[GR_SIK.SKROT];
      _ok:='TYP_KLIK'
   ?};
   GR_SIK.cntx_pop();
   {? _msg<>''
   || exec('tmp_add','!zws_par_fspr',WYRAZ.GRUPA().SKROT,'',gsub(_msg,'\n',' '))
   ?}
?};
{? _ok='' & (_a=2 | _mod)
|| _alg_ok:={? GR_SIK.TYP_KLIK='TW' || 'FSIWP' || 'FSP' ?};
   DEFW.cntx_psh();
   DEFW.index('ALGORYTM'); DEFW.prefix(GR_SIK.ref());
   {? DEFW.first()
   || {!
      |? _msg:='';
         {? DEFW.TAB<>'' | DEFW.SLU
         || _ok:='TYP_KLIK';
            _msg:='Istnieje wiersz: %1 ze słownikiem lub kartoteką.\nUżycie w Qlik Sense nie jest możliwe.'@[DEFW.KOD]
         |? _alg_ok*DEFW.ALGORYTM=0
         || _ok:='TYP_KLIK';
            _msg:='Wiersz: %1 z nieprawidłowym typem algorytmu.\nUżycie w Qlik Sense nie jest możliwe.'@[DEFW.KOD]
         |? GR_SIK.TYP_KLIK='TW' & exec('find_slo_slu','slo_slu','~KODY_WSK',DEFW.KOD)=null
         || _ok:='TYP_KLIK';
            _msg:='Istnieje wiersze: %1 z kodem niedostępnym w słowniku.\nUżycie w Qlik Sense nie jest możliwe.'@[DEFW.KOD]
         ?};
         {? _a=2 & _msg<>''
         || exec('tmp_add','!zws_par_fspr',WYRAZ.GRUPA().SKROT,DEFW.NAZWA,gsub(_msg,'\n',' '))
         ?};
         (_a=2 | _ok='') & DEFW.next()
      !}
   ?};
   DEFW.cntx_pop();
   {? _ok=''
   || _fun_ok:=exec('qs_fun','sprfin');
      DEFW.cntx_psh();
      DEFW.index('ALGORYTM'); DEFW.prefix(SIK.CUR_SPR,'F');
      {? DEFW.first()
      || {!
         |? ALG_PAR.cntx_psh();
            ALG_PAR.index('ALG_PAR4'); ALG_PAR.prefix(DEFW.ref());
            {? ALG_PAR.first()
            || {!
               |? {? _fun_ok*(ALG_PAR.FORMULA().SKROT+'|')=0
                  || _ok:='TYP_KLIK';
                     _msg:='W wierszu: %1 użyto niedozwolonej funkcji (%2) do użytku z Qlik Sense.'[DEFW.KOD,FORMULA.SKROT]
                  ?};
                  {? _a=2 & _msg<>''
                  || exec('tmp_add','!zws_par_fspr',WYRAZ.GRUPA().SKROT,DEFW.NAZWA,gsub(_msg,'\n',' '))
                  ?};
                  (_a=2 | _ok='') & ALG_PAR.next()
               !}
            ?};
            ALG_PAR.cntx_pop();
            (_a=2 | _ok='') & DEFW.next()
         !}
      ?};
      DEFW.cntx_pop()
   ?};
   {? _ok=''
   || GR_SIK.cntx_psh();
      DEFA.cntx_psh();
      DEFA.index('GRUPA'); DEFA.prefix(SIK.CUR_SPR);
      {? DEFA.first()
      || {!
         |? {? _qs='TW' & 1+DEFA.ARGUMENT().GRUPA().TYP_KLIK<>'T'
            || _ok:='TYP_KLIK';
               _msg:='W algorytmie wiersza: %1 użyto sprawozdanie: %2 bez włączonego użycia z Qlik Sense.'@[DEFW.KOD,GR_SIK.SKROT]
            |? _qs<>'TW' & DEFA.ARGUMENT().GRUPA<>SIK.CUR_SPR
            || _ok:='TYP_KLIK';
               _msg:='W algorytmie wiersza: %1 użyto sprawozdanie: %2 (innego niż bieżące).'@[DEFA.WYR().KOD,DEFA.ARGUMENT().GRUPA().SKROT]
            ?};
            _ok='' & DEFA.next()
         !}
      ?};
      DEFA.cntx_pop();
      GR_SIK.cntx_pop()
   ?}
?};
{? _msg<>'' & _a=1
|| FUN.info(_msg)
?};
_ok


\qs_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Funkcje dozwolone w algorytmach dla Qlik Sense
::----------------------------------------------------------------------------------------------------------------------
'BO|SALDO1|PERSALDO|'


\gr_sik_xls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Tworzy arkusz na potrzeby analiz Qlik Sense
:: ~OST: INCLIEXEC
::----------------------------------------------------------------------------------------------------------------------
_ext:='Pliki Excel (*.xlsx)|*.xlsx|'+'Wszystkie pliki'@+' (*.*)|*.*';
_fn:=-GR_SIK.FIRMA().SYMBOL+'_'+GR_SIK.SKROT+'_'+SSTALE.AR().NAZ+'.xlsx';
_Interm:=exec('interm','#system');
VAR_DEL.delete('__dir_controling');
__dir_controling:=fmk_tmp_dir(0);
_filename:=_fn;
_fn:=__dir_controling.get_path()+'\\'+_fn;
{? _fn='' || return() ?};
exec('Xls','object');
{? Xls.create('xlsx') & Xls.addSheet('Plan')
|| _s_n_noedit:=Xls.addStyle(); Xls.setStyle('bold'); Xls.setStyle('bgcolor:200:200:200');
   _s_n_edit:=Xls.addStyle(); Xls.setStyle('bgcolor:230:230:230');
   _s_edit:=Xls.addStyle(); Xls.setStyle('editable:1');
   _kw:=Xls.addStyle(); Xls.setStyle('format:# ##0.00');
   {! _row:=0..1
   |! Xls.addRow(_row);
      _lp:=1;
      OSPR.index('OKRES1'); OSPR.prefix(REF.FIRMA,'M',SSTALE.AR);
      {? OSPR.first()
      || {!
         |? GR_KOL.cntx_psh();
            GR_KOL.index('LP'); GR_KOL.prefix(GR_SIK.ref());
            {? GR_KOL.last()
            || _lp+=1;
               {? _row=0
               || Xls.setAutoSizeColumn(_lp);
                  Xls.addCell(_lp,OSPR.NAZWA); Xls.setCellStyle(_s_n_edit)
               || Xls.addCell(_lp,$GR_KOL.LP+' - '+GR_KOL.NAZWA); Xls.setCellStyle(_s_n_edit)
               ?}
            ?};
            GR_KOL.cntx_pop();
            OSPR.next()
         !}
      ?}
   !};
   DEFW.cntx_psh();
   DEFW.index('LP'); DEFW.prefix(GR_SIK.ref());
   {? DEFW.first()
   || {!
      |? _row+=1;
         _edit:='FPR'*DEFW.ALGORYTM;
         _styl:={? _edit || _s_n_edit || _s_n_noedit ?};
         Xls.addRow(_row);
         Xls.addCell(0,DEFW.KOD); Xls.setCellStyle(_styl);
         Xls.addCell(1,DEFW.NAZWA); Xls.setCellStyle(_styl);
         {! _cel:=2.._lp
         |! Xls.addCell(_cel,{? _edit || 0 || '' ?}); {? _edit || Xls.setCellStyle(_s_edit) || Xls.setCellStyle(_s_n_edit) ?}
         !};
         DEFW.next()
      !}
   ?};
   DEFW.cntx_pop();
   {! _i:=0.._lp
   |! Xls.autoSizeColumn(_i)
   !};
   Xls.freeze(2,2);
   Xls.lock('');
   {? ~Xls.save(_fn)
   || FUN.info('Nie udało się zapisać arkusza.'@)
   || {? _Interm
      ||
         dlg_save(_fn,0,_filename)
      ||
         _nazw:= dlg_save(_fn,0,_filename);
         cli_exec(_fn +'\\'+_nazw)
      ?}
   ?}
|| FUN.info('Nie udało się utworzyć pliku.'@)
?};
VAR_DEL.delete('__dir_controling')


\kody_wsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Dodaje słownik ~KODY_WSK i jego pozycje
::----------------------------------------------------------------------------------------------------------------------
SLU.cntx_psh(); SLO.cntx_psh();
_slu:="
   SLU.index('NAZ');
   SLU.prefix(_a,);
   {? ~SLU.first()
   || SLU.blank(); SLU.SYSTEM:='T'; SLU.NAZ:=_a;
      SLU.OP:=_b;
      SLU.WZ:='prosty';
      SLU.DL:=_c;
      SLU.add()
   ?}
";
_slo:="
   SLO.index('SL'); SLO.prefix(SLU.ref(),_a,);
   {? ~SLO.first()
   || SLO.SLU:=SLU.ref();
      SLO.KOD:=_a;
      SLO.TR:=_b;
      SLO.add()
   ?}
";
_slu('~KODY_WSK','Rodzaje kodów wierszy sprawozdań wskaźnikowych',8);
_slo('CASH','Środki pieniężne');
_slo('CASH_VAT','Środki pieniężne na rachunkach VAT');
_slo('COSTS','Koszty');
_slo('CR','Wskaźnik płynności bieżącej');
_slo('EBIT','Zysk operacyjny');
_slo('EBIT%','Marża EBIT');
_slo('GPROFIT','Wynik na sprzedaży');
_slo('INDEBTED ','Zadłużenie');
_slo('LIABILIT','Zobowiązania');
_slo('LR','Wskaźnik natychmiastowej wymagalności');
_slo('NPROFIT','Wynik netto');
_slo('NPROFIT%','Marża netto');
_slo('QR','Wskaźnik płynności szybki');
_slo('RECEIVAB','Należności');
_slo('REVENUES','Przychody');
_slo('ROA','Rentowność aktywów');
_slo('ROS_B','Rentowność sprzedaży brutto');
_slo('ROS_N','Rentowność sprzedaży netto');
SLO.cntx_pop(); SLU.cntx_pop();
~~


\exp_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Eksport/Import sprawozdań finansowych
::----------------------------------------------------------------------------------------------------------------------
_pyt:=FUN.choice('Wybierz operację.'@,2,'Eksport'@,'Import'@);
{? _pyt=1
|| exec('exp_spr','sprfin')
|? _pyt=2
|| exec('imp_spr','sprfin')
?};
''


\exp_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Eksport definicji pojedynczego sprawozdania
::  OLD: \exp_spr/skid_im2.fml
::  OLD: \exp_spr/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.GR_SIK:=null;
SIK.P1:='A';SIK.P9:='W';
SIK.ZN:='T';
ROK_F.win_dict('WER');
GR_SIK.win_dict('SLO2');
SIK.win_edit('EXGRSIK');
SIK.GR_SIK:=GR_SIK.ref();
exec('set_fml','#field',SIK,'P1',"","","","
   _alg:=SIK.P1='A';
   _rok:=SIK.P9<>'I';
   SIK.efld_opt('EXGRSIK','enable='+$_alg,SIK,'P9');
   SIK.efld_opt('EXGRSIK','enable='+$(_alg&_rok),SIK,'ALGROK');
   ~~
");
exec('set_fml','#field',SIK,'P9',"","","","
   _rok:=SIK.P9<>'I';
   SIK.efld_opt('EXGRSIK','enable='+$_rok,SIK,'ALGROK');
   ~~
");
exec('set_fml','#field',SIK,'ZN',"","","","");
{? SIK.edit()
|| lp:=0; eks:=1; sep:='@';
   echo('Przygotowanie danych do eksportu.'@);
   DEFW.index('LP');   DEFW.prefix(SIK.GR_SIK);
   GR_KOL.index('LP'); GR_KOL.prefix(SIK.GR_SIK);
   DEFA.index('LP');   ALG_PAR.index('ALG_PAR1');
   {? DEFW.first() & GR_KOL.first() & SIK.P1='A'
   || {!
      |? GR_KOL.first();
         {!
         |? GR_KOL.cntx_psh(); DEFW.cntx_psh();
            DEFA.prefix(REF.S_FIRMA,DEFW.ref,GR_KOL.ref);
            {? DEFA.first()
            || {!
               |? {? DEFA.WYR().GRUPA<>DEFA.ARGUMENT().GRUPA & DEFA.ARGUMENT().GRUPA<>null
                  || lp+=1
                  ?};
                  DEFA.next()
               !}
            ?};
            GR_KOL.cntx_pop(); DEFW.cntx_pop();
            GR_KOL.next()
         !};
         DEFW.next()
      !}
   ?};
   VAR_DEL.delete('GRSPR');
   GRSPR:=tab_tmp(2,
      'SP'   ,'STRING[1]' ,'Spr.'  ,
      'IM'   ,'STRING[1]' ,'Eksp.?',
      'REF'  ,'INTEGER'   ,'Ref'   ,
      'KOL'  ,'INTEGER'   ,'Kol.Exp.',
      'SKROT','STRING[10]','Kod' ,
      'NAZ'  ,'STRING[40]','Nazwa'
   );
   {? SIK.GR_SIK=null
   || eks:=0;
      _tab:=tab_tmp(1,
         'SKROT','STRING[10]','Skrót',
         'NAZWA','STRING[40]','Nazwa',
         'REF','INTEGER','ref',
         'SEL','INTEGER','Eksport'
      );
      _i2:=_tab.ndx_tmp('',1,'SEL',,0);
      GR_SIK.index('AKCEPT'); GR_SIK.prefix(REF.FIRMA,'FKS','T');
      {? GR_SIK.first()
      || {!
         |? _tab.REF:=GR_SIK.ref();
            _tab.SKROT:=GR_SIK.SKROT;
            _tab.NAZWA:=GR_SIK.NAZWA;
            _tab.SEL:=0;
            _tab.add();
            GR_SIK.next()
         !}
      ?};
      _o:=_tab.mk_sel('Sprawozdania do eksportu'@,'P',,,,,,,'U');
      _tab.win_fld(_o,,'SEL',,,,,,,,,2,,"1","0");
      _tab.win_fld(_o,,'SKROT');
      _tab.win_fld(_o,,'NAZWA');
      _tab.win_act(_o,,'Formuła','Wybierz'@@,,,"cur_tab().SEL:=~cur_tab().SEL; cur_tab().put()",,1);
      _tab.win_act(_o,,'Formuła','Dalej'@@,,,"sel_exit()");
      _tab.win_sel(_o);
      {? _tab.select()
      || _tab.index(_i2);
         _tab.prefix(1);
         {? _tab.first()
         || lp:=1;
            eks:=1;
            GR_SIK.prefix();
            {!
            |? {? GR_SIK.seek(_tab.REF,)
               || GRSPR.SP:='G';
                  GRSPR.IM:='T';
                  GRSPR.REF:=GR_SIK.ref();
                  GRSPR.SKROT:=GR_SIK.SKROT;
                  GRSPR.NAZ:=GR_SIK.NAZWA;
                  GRSPR.add()
               ?};
               _tab.next()
            !}
         ?}
      ?}
   ?};
   _INDS:=GRSPR.ndx_tmp('',0,'SKROT',,0);
   INDR:=GRSPR.ndx_tmp('',0,'REF',,0);
   _INDK:=GRSPR.ndx_tmp('',0,'SP',,1,'KOL',,0);
   _INDE:=GRSPR.ndx_tmp('',0,'SP',,1,'IM',,1,'KOL',,1);
   {? var_press('EX_SPR',@.CLASS)<=0
   || obj_decl('EX_SPR',
         obj_fld('N_FILE','kop_sprf.txt'),
         obj_fld('U_FILE',0),
         obj_fld('DOD',0),
         obj_meth('__init',""),
         obj_meth('add_grspr',"
            {? SIK.GR_SIK
            || GRSPR.SKROT:=SIK.GR_SIK().SKROT;
               GRSPR.NAZ:=SIK.GR_SIK().NAZWA;
               GRSPR.REF:=#SIK.GR_SIK;
               GRSPR.IM:='T'; GRSPR.SP:=_b; GRSPR.KOL:=_a+1; .DOD+=GRSPR.add()
            ?}
         ",1,2),
         obj_meth('to_grspr',"exec('pto_grspr','sprfin',_a,_b,_c)",1,1,2),
         obj_meth('o_file',"
            __dir_controling:=fmk_tmp_dir(0);
            FUN.info(.N_FILE);
            _file:=__dir_controling.get_path()+'/'+.N_FILE+'.txt';
            .U_FILE:=fopen(_file,'uw',0)
         "),
         obj_meth('c_file',"{? .U_FILE
                            ||
                               fclose(.U_FILE);
                               VAR_DEL.delete('__dir_controling')
                            ?} "),
         obj_meth('s_grsik',"
            fwrite(.U_FILE,
               _a + sep + 'GR_SIK' + sep +
               WYRAZ.GRUPA().SYSTEM + sep  + WYRAZ.GRUPA().SKROT  + sep +
               WYRAZ.GRUPA().NAZWA  + sep  + $WYRAZ.GRUPA().ZAOKR + sep +
               $WYRAZ.GRUPA().DOKL  + sep  + WYRAZ.GRUPA().E_KOD  +sep
            );
            .s_lang(_a,'S')
         ",2),
         obj_meth('s_grkol',"
            fwrite(.U_FILE,
               _a + sep + 'GR_KOL' + sep +
               WYRAZ.GRUPA().SKROT + sep + $GR_KOL.LP + sep + GR_KOL.NAZWA + sep +
               GR_KOL.ALGORYTM+sep+
               $GR_KOL.DOKL+sep+
               $GR_KOL.ZAOKR+sep+GR_KOL.E_KOD+sep
            );
            .s_lang(_a,'K')
         ",2),
         obj_meth('s_defw',"
            fwrite(.U_FILE,
               _a + sep + 'DEFW'   + sep +
               WYRAZ.GRUPA().SKROT + sep + $DEFW.LP + sep + DEFW.KOD + sep + DEFW.NAZWA +
               sep + form(DEFW.WSPOL,,,'9.') + sep + DEFW.WSPOLF + sep + DEFW.ALGORYTM  +
               sep + $DEFW.KOLEJ + sep + $DEFW.ZAOKR + sep + $DEFW.DOKL + sep + DEFW.TAB +
               sep + DEFW.INDEX + sep + DEFW.PREFIX + sep + DEFW.KODF + sep + DEFW.TR +
               sep + DEFW.SLU().GDZIE + sep + DEFW.SLU().SLU().NAZ + sep + DEFW.MASKA +
               sep + DEFW.DOKRES + sep +
               DEFW.ANA_TYP+sep+DEFW.ANA_VIEW().NAZWA+sep+
               DEFW.VAL_TYP+sep+DEFW.JM().KOD+sep+$DEFW.DEFW_NAD+sep+DEFW.E_KOD+sep
            );
            .s_lang(_a,'W')
         ",2),
         obj_meth('s_wopis',"
            fwrite(.U_FILE,
               _a + sep + 'WOPIS' +sep + WYRAZ.GRUPA().SKROT + sep + $WOPIS.WSK().LP +
               sep + WOPIS.WSK().KOD + sep + $WOPIS.LP + sep + WOPIS.T + sep
            )
         ",2),
         obj_meth('s_defa' ,"
            fwrite(.U_FILE,
               _a + sep + 'DEFA'    + sep +
               WYRAZ.GRUPA().SKROT  + sep + $DEFA.WYR().LP + sep + $DEFA.WYR().KOD + sep + $DEFA.KOL().LP + sep + DEFA.KOL().NAZWA + sep +
               $DEFA.LP + sep + DEFA.LM + sep + form(DEFA.WSP,,,'9.') + sep + DEFA.ARGUMENT().GRUPA().SKROT + sep +
               DEFA.ARGUMENT().KOD + sep + DEFA.ARG_KOL().GRUPA().SKROT + sep + $DEFA.ARG_KOL().LP + sep + DEFA.ARG_KOL().NAZWA + sep
            )
         ", 2),
         obj_meth('s_algpar',"
            fwrite(.U_FILE,
               _a + sep + 'ALG_PAR' + sep +
               WYRAZ.GRUPA().SKROT + sep + ALG_PAR.DEFW().KOD + sep + $ALG_PAR.DEFW().LP + sep +
               $ALG_PAR.GR_KOL().LP + sep + ALG_PAR.AKTYWNA + sep + $ALG_PAR.LP + sep + '' + sep + ALG_PAR.FORMULA().RODZAJ + sep +
               ALG_PAR.FORMULA().SKROT + sep + ALG_PAR.P1 + sep + ALG_PAR.P2 + sep + ALG_PAR.P3 + sep + ALG_PAR.P4 + sep + ALG_PAR.P5 + sep + ALG_PAR.P6 + sep + ALG_PAR.P7 + sep + ALG_PAR.P8 + sep +
               ALG_PAR.ROK().NAZ + sep + form(ALG_PAR.WSP,,,'9.') + sep + ALG_PAR.SYSTEM + sep +
               ALG_PAR.WYL+sep+ALG_PAR.FIRMAWYL().SYMBOL+sep+ALG_PAR.FORM_WYL().SKROT+sep+ALG_PAR.FIRMA().SYMBOL+sep
            )
         ",2),
         obj_meth('s_algorytmy',"exec('ps_algorytmy','sprfin',_a)",2),
         obj_meth('s_lang',"exec('exp_lang','sprfin',_a,_b,.U_FILE,sep)",2,2)
              )
   ?};
   VAR_DEL.delete('O_EX');
   O_EX:=obj_new(@.CLASS.EX_SPR);
   GR_SIK.clear();
   O_EX.add_grspr(0,'G');
   l:=0;
   {? lp
   || {!
      |? _wyj:=0;
         {? GRSPR.first()
         || {!
            |? {? GR_SIK.seek(GRSPR.REF, GR_SIK.name())
               || GRSPR.cntx_psh();
                  O_EX.to_grspr(GRSPR.REF,l,'P');
                  _wyj+=O_EX.DOD;
                  l+=O_EX.DOD;
                  GRSPR.cntx_pop()
               ?};
               GRSPR.next()
            !}
         ?};
         _wyj
      !}
   ?};
   GRSPR.index(_INDK); GRSPR.prefix('P');
   {? GRSPR.first()
   || _OKW:=GRSPR.mk_sel(,'P',,'grspr_wer',,,,,'U');
      GRSPR.win_fld(_OKW,,'IM',,,6,,0);
      GRSPR.win_fld(_OKW,,'SKROT',,,10,,0);
      GRSPR.win_fld(_OKW,,'NAZ',,,40,,0);
      GRSPR.win_fld(_OKW,,'KOL',,,8,,0);
      GRSPR.win_act(_OKW,0,'Formuła','Eksp./&nie eksp.'@@,,'Eksportować/Nie eksportować sprawozdanie powiązane'@,,"GRSPR.IM:={?GRSPR.IM='T'||'N'||'T'?};GRSPR.put()",1,,,,'N');
      GRSPR.win_act(_OKW,0,'Formuła','Eksport'@@,,'Eksp. sprawozd. wraz z zazn. sprawozd. powiązanymi'@,,"eks:=1;sel_exit()",0,,,,'E');
      GRSPR.win_act(_OKW,0,'Rekord',,,,"{? GRSPR.IM='T' || exec('findtmp','#color') ?}",,);
      GRSPR.win_sel(_OKW);
      GRSPR.hdr_sel('Wybór sprawozdań powiązanych z %1 do eksportu'@[SIK.GR_SIK().SKROT]);
      eks:=0;
      GRSPR.select()
   ?};
   {? eks & O_EX.o_file()
   || GRSPR.index(_INDE); GRSPR.prefix('P','T');
      {? GRSPR.first()
      || GR_SIK.index('SKROT'); GR_SIK.prefix(REF.S_FIRMA); GR_KOL.index('LP'); DEFW.index('LP'); WOPIS.index('OPIS');
         echo('Eksport danych.'@);
         {!
         |? {? GR_SIK.find_key(GRSPR.SKROT)
            || WYRAZ.GRUPA:=GR_SIK.ref();
               O_EX.s_grsik('P');
               GR_KOL.prefix(WYRAZ.GRUPA);
               {? GR_KOL.first()
               || {!
                  |? O_EX.s_grkol('P');
                     exec('exp_defk','sprfin',O_EX.U_FILE,'P');
                     GR_KOL.next()
                  !}
               ?};
               DEFW.prefix(WYRAZ.GRUPA);
               {? DEFW.first()
               || {!
                  |? O_EX.s_defw('P'); WOPIS.prefix(DEFW.ref());
                     {? WOPIS.first() || {! |? O_EX.s_wopis('P'); WOPIS.next() !} ?};
                     DEFW.next()
                  !}
               ?};
               O_EX.s_algorytmy('P')
            ?};
            GRSPR.next()
         !}
      ?};
      GRSPR.prefix('G','T');
      {? GRSPR.first()
      || {!
         |? GR_SIK.prefix();
            {? GR_SIK.seek(GRSPR.REF,)
            || WYRAZ.GRUPA:=GR_SIK.ref();
               O_EX.s_grsik('G');
               GR_KOL.prefix(WYRAZ.GRUPA);
               {? GR_KOL.first()
               || {!
                  |? O_EX.s_grkol('G');
                     exec('exp_defk','sprfin',O_EX.U_FILE,'G');
                     GR_KOL.next()
                  !}
               ?};
               DEFW.prefix(WYRAZ.GRUPA);
               {? DEFW.first()
               || {!
                  |? O_EX.s_defw('G'); WOPIS.prefix(DEFW.ref());
                     {? WOPIS.first() || {!|? O_EX.s_wopis('G');WOPIS.next() !} ?}; DEFW.next()!}
               ?};
               O_EX.s_algorytmy('G')
            ?};
            GRSPR.next()
         !}
      ?};
      O_EX.c_file();
      FUN.info('Dane wyeksportowano do pliku %1.'@[O_EX.N_FILE])
   ?};
   VAR_DEL.delete('O_EX','GRSPR','INDR','eks','l','lp','sep');
   echo()
?};
exec('set_fml','#field',SIK,'P1');
exec('set_fml','#field',SIK,'P9');
exec('set_fml','#field',SIK,'ZN')


\pto_grspr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: definicja formuly metody EX_SPR.to_grspr
::   WE: argumenty przekazywane do metody EX_SPR.to_grspr
::       _a: wartosc pola GRSPR.REF
::       _b: liczba, od ktorej bedzie numerowane pole GRSPR.KOL
::       _c: wartosc zapisywana w polu GRSPR.SP ('P' - sprawozdanie powiazane)
::  OLD: \pto_grspr/skid_im2.fml
::  OLD: \pto_grspr/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.index('LP'); GR_KOL.index('LP'); DEFA.index('LP');
DEFW.clear; GR_KOL.clear; DEFA.clear; GR_SIK.clear;O_EX.DOD:=0; _l:=_b;
{? GR_SIK.seek(_a, GR_SIK.name)
|| DEFW.prefix(GR_SIK.ref()); GR_KOL.prefix(GR_SIK.ref());
   {? DEFW.first() & GR_KOL.first()
   || {!
      |? GR_KOL.first();
         {!
         |? GR_KOL.cntx_psh(); DEFW.cntx_psh();
            DEFA.prefix(DEFW.ref(),GR_KOL.ref());
            {? DEFA.first()
            || GRSPR.index(INDR); GRSPR.prefix();
               {!
               |? {? DEFA.WYR().GRUPA<>DEFA.ARGUMENT().GRUPA
                     & DEFA.ARGUMENT().GRUPA<>null
                     & ~GRSPR.find_key(#DEFA.ARGUMENT().GRUPA)
                  || GRSPR.SKROT:=DEFA.ARGUMENT().GRUPA().SKROT;
                     GRSPR.NAZ:=DEFA.ARGUMENT().GRUPA().NAZWA;
                     GRSPR.REF:=#DEFA.ARGUMENT().GRUPA;
                     GRSPR.IM:='T'; GRSPR.SP:=_c; _l+=1; GRSPR.KOL:=_l;
                     O_EX.DOD+=GRSPR.add()
                  ?};
                  DEFA.next()
               !}
            ?};
            GR_KOL.cntx_pop(); DEFW.cntx_pop();
            GR_KOL.next()
         !};
         DEFW.next()
      !}
   ?}
?}


\ps_algorytmy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: definicja formuly metody EX_SPR.s_algorytmy
::   WE: argument wskazuje czy jest to sprawozdanie powiazane ('P') czy glowne ('G')
::  OLD: \ps_algorytmy/skid_im2.fml
::  OLD: \ps_algorytmy/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_KOL.first() & DEFW.first() & SIK.P1='A'
|| {!
   |? GR_KOL.first();
      {!
      |? {? 'WI'*SIK.P9>0
         || DEFA.prefix(DEFW.ref(),GR_KOL.ref());
            {? DEFA.first()
            || DEFW.cntx_psh(); GR_KOL.cntx_psh();
               {! |? O_EX.s_defa(_a); DEFA.next() !};
               DEFW.cntx_pop(); GR_KOL.cntx_pop()
            ?}
         ?};
         {? 'WF'*SIK.P9>0
         || {? REF.S_FIRMA=REF.GRUPA
            || ALG_PAR.index('ALG_PAR8');
               {? SIK.ALGROK<>null
               || ALG_PAR.prefix(DEFW.ref(),GR_KOL.ref(),SIK.ALGROK().NAZ)
               || ALG_PAR.prefix(DEFW.ref(),GR_KOL.ref())
               ?}
            || ALG_PAR.index('ALG_PAR1');
               {? SIK.ALGROK<>null
               || ALG_PAR.prefix(REF.S_FIRMA,DEFW.ref(),GR_KOL.ref(),SIK.ALGROK().NAZ)
               || ALG_PAR.prefix(REF.S_FIRMA,DEFW.ref(),GR_KOL.ref())
               ?}
            ?};
            {? ALG_PAR.first()
            || {!
               |? {? (SIK.ZN='T' & ALG_PAR.AKTYWNA='T') | SIK.ZN='N'
                  || O_EX.s_algpar(_a)
                  ?};
                  ALG_PAR.next()
               !}
            ?}
         ?};
         GR_KOL.next()
      !};
      DEFW.next()
   !}
?}


\exp_defk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Eksport definicji algorytmow kolumny
::   WE: _a - uchwyt do pliku
::       _b - identyfikator sprawozdania
::  OLD: \exp_defk/skid_im2.fml
::  OLD: \exp_defk/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
GR_KOL.cntx_psh();
DEFK.index('LP'); DEFK.prefix(GR_KOL.ref());
{? DEFK.first()
|| {!
   |? fwrite(_a,_b+sep+'DEFK'+sep+DEFK.ARGUMENT().NAZWA+sep+DEFK.DEFW().KOD+sep+DEFK.LM+sep+$DEFK.WSP+sep+$DEFK.LP);
      DEFK.next()
   !}
?};
GR_KOL.cntx_pop()


\imp_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Import definicji pojedynczego sprawozdania
::   WE: [_a] - nazwa pliku ktory chcemy importowac - umozliwa import kilku sprawozdan
::              z roznych plikow - domyslnie pozostaje 'kop_sprf'
::       [_b] - 1 (lub brak parametru) - z pokazywaniem elementów dialogowych
::       [_c] - plik lokalny
::  OLD: \imp_spr/skid_im2.fml
::  OLD: \imp_spr/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<1 | (type_of(_a)<>2) || _a:='kop_sprf' ?};
{? var_pres('_a')>0 & _a*'.'=0 || _a+='.txt' ?};
{? _<2 || _b:=1 ?};
_local:={? var_pres('_c')<=0 | type_of(_c)<>type_of(1)|| 1 || _c ?};
echo('Import definicji pojedynczego sprawozdania.'@);
{? var_pres('IM_SPR',@.CLASS)<=0
|| obj_decl('IM_SPR',
      obj_fld('N_FILE','kop_sprf.txt'),
      obj_fld('L_FILE',1),
      obj_fld('AUTO',1),
      obj_fld('RESULT',0),
      obj_fld('U_FILE',0),
      obj_fld('DOD',0),
      obj_fld('STR',''),
      obj_fld('CHR',0),
      obj_fld('SP','@'),
      obj_fld('TSTR',''),
      obj_fld('RSTR',''),
      obj_fld('GS',0),
      obj_fld('WS',0),
      obj_fld('KS',0),
      obj_meth('__init',""),
      obj_meth('n_file',".N_FILE:=_a"),
      obj_meth('o_file',"
         .L_FILE:={? var_pres('_a')>0 || _a || 1 ?};
         _tmpdir:=fmk_tmp_dir(0);
         {? type_of(_tmpdir) <> type_of(~~)
         || _fdir:=_tmpdir.get_path
         || FUN.emsg('Nie udało się utworzyć katalogu tymczasowego po stronie serwera.'@);
            return()
         ?};
         {? .L_FILE
         || _sep:=exec('sep','#file',2);
            _filepath:=_fdir+_sep+'file.txt';
            _file:=dlg_upload(_filepath,0,'.txt',0)
         || _file:=.N_FILE
         ?};
         {? _file<>''
         || .U_FILE:=fopen({? .L_FILE || _filepath || _file ?},'ur',~.L_FILE)
         ?}
      "),
      obj_meth('c_file',"{? .U_FILE || fclose(.U_FILE) ?}"),
      obj_meth('cz_linie',"{? (.STR:=fread(.U_FILE))='\n' || .CHR:=-1 ?}"),
      obj_meth('get_str',".TSTR:='';_i:=_a*.SP;.TSTR:=(_i-1)+_a;_a:=_i-_a;.RSTR:=_a",2),
      obj_meth('add_ispr',"
         .RSTR:=.STR; I_SPR.IM:='T';I_SPR.SPR:=1+.STR;
         I_SPR.TYP:={? I_SPR.SPR='G' || 'Główne' || 'Powiązane' ?};
         .get_str(.RSTR); .get_str(.RSTR); I_SPR.KOL:={? I_SPR.SPR='P' || _a+1 || 1 ?};
         .get_str(.RSTR); I_SPR.SYSTEM:='FKS'; .TSTR;
         .get_str(.RSTR); I_SPR.SKROT:=.TSTR;
         .get_str(.RSTR); I_SPR.NAZ:=.TSTR;
         .get_str(.RSTR); I_SPR.ZAOKR:=#.TSTR;
         .get_str(.RSTR); I_SPR.DOKL:=#.TSTR;
         .get_str(.RSTR); I_SPR.E_KOD:=.TSTR;
         .DOD:=I_SPR.add()
      ",1),
      obj_meth('add_ikol',"
         .RSTR:=.STR; I_KOL.SPR:=1+.STR;
         .get_str(.RSTR); .get_str(.RSTR);  .get_str(.RSTR); I_KOL.SKROT:=.TSTR;
         .get_str(.RSTR); I_KOL.LP:=#.TSTR; .get_str(.RSTR); I_KOL.NAZWA:=.TSTR;
         .get_str(.RSTR); I_KOL.ALGORYTM:=.TSTR;
         .get_str(.RSTR); I_KOL.DOKL:=#.TSTR;
         .get_str(.RSTR); I_KOL.ZAOKR:=#.TSTR;
         .get_str(.RSTR); I_KOL.E_KOD:=.TSTR;
         .DOD:=I_KOL.add()
      "),
      obj_meth('add_iwie',"
         .RSTR:=.STR; I_WIE.SPR:=1+.STR;
         .get_str(.RSTR); .get_str(.RSTR);     .get_str(.RSTR); I_WIE.SKROT:=.TSTR;
         .get_str(.RSTR); I_WIE.LP:=#.TSTR;    .get_str(.RSTR); I_WIE.KOD:=.TSTR;    .get_str(.RSTR); I_WIE.NAZWA:=.TSTR;
         .get_str(.RSTR); I_WIE.WSPOL:=#.TSTR; .get_str(.RSTR); I_WIE.WSPOLF:=.TSTR; .get_str(.RSTR); I_WIE.ALGORYTM:=.TSTR;
         .get_str(.RSTR); I_WIE.KOLEJ:=#.TSTR; .get_str(.RSTR); I_WIE.ZAOKR:=#.TSTR; .get_str(.RSTR); I_WIE.DOKL:=#.TSTR;
         .get_str(.RSTR); I_WIE.TAB:=.TSTR;    .get_str(.RSTR); I_WIE.INDEX:=.TSTR;  .get_str(.RSTR); I_WIE.PREFIX:=.TSTR;
         .get_str(.RSTR); I_WIE.KODF:=.TSTR;   .get_str(.RSTR); I_WIE.TR:=.TSTR;     .get_str(.RSTR); I_WIE.SLAPG:=.TSTR;
         .get_str(.RSTR); I_WIE.SLUNAZ:=.TSTR; .get_str(.RSTR); I_WIE.MASKA:=.TSTR;  .get_str(.RSTR); I_WIE.DOKRES:=.TSTR;
         .get_str(.RSTR); I_WIE.ANA_TYP:=.TSTR;.get_str(.RSTR); I_WIE.ANA_VIEW:=.TSTR;.get_str(.RSTR); I_WIE.VAL_TYP:=.TSTR;
         .get_str(.RSTR); I_WIE.JM:=.TSTR;     .get_str(.RSTR); I_WIE.DEFW_NAD:=#.TSTR;
         .get_str(.RSTR); I_WIE.E_KOD:=.TSTR;
         .DOD:=I_WIE.add()
      "),
      obj_meth('add_ialgpar',"
         .RSTR:=.STR; IAWSP.SPR:=1+.STR;
         .get_str(.RSTR); .get_str(.RSTR);     .get_str(.RSTR); IAWSP.SKROT:=.TSTR;
         .get_str(.RSTR); IAWSP.WK:=.TSTR;
         .get_str(.RSTR); IAWSP.WLP:=#.TSTR;   .get_str(.RSTR); IAWSP.KLP:=#.TSTR;    .get_str(.RSTR); IAWSP.AKTYWNA:=.TSTR;
         .get_str(.RSTR); IAWSP.LP:=#.TSTR;    .get_str(.RSTR); IAWSP.FSYSTEM:=.TSTR; .get_str(.RSTR); IAWSP.FRODZAJ:=.TSTR;
         .get_str(.RSTR); IAWSP.FSKROT:=.TSTR; .get_str(.RSTR); IAWSP.P1:=.TSTR;      .get_str(.RSTR); IAWSP.P2:=.TSTR;
         .get_str(.RSTR); IAWSP.P3:=.TSTR;     .get_str(.RSTR); IAWSP.P4:=.TSTR;      .get_str(.RSTR); IAWSP.P5:=.TSTR;
         .get_str(.RSTR); IAWSP.P6:=.TSTR;     .get_str(.RSTR); IAWSP.P7:=.TSTR;      .get_str(.RSTR); IAWSP.P8:=.TSTR;
         .get_str(.RSTR); IAWSP.ROK:=.TSTR;    .get_str(.RSTR); IAWSP.WSP:=#.TSTR;    .get_str(.RSTR); IAWSP.SYSTEM:=.TSTR;
         .get_str(.RSTR); IAWSP.WYL:={? .TSTR='' || 'N' || .TSTR ?};
         .get_str(.RSTR); IAWSP.FWYL:=.TSTR;
         .get_str(.RSTR); IAWSP.FMLWYL:=.TSTR;
         .get_str(.RSTR); IAWSP.FIRMA:=.TSTR;
         .DOD:=IAWSP.add()
      "),
      obj_meth('add_idefa',"
         .RSTR:=.STR; IAIWS.SPR:=1+.STR;
         .get_str(.RSTR); .get_str(.RSTR);      .get_str(.RSTR); IAIWS.SKROT:=.TSTR;
         .get_str(.RSTR); IAIWS.WLP:=#.TSTR;    .get_str(.RSTR); IAIWS.WK:=.TSTR;      .get_str(.RSTR); IAIWS.KLP:=#.TSTR;
         .get_str(.RSTR); IAIWS.KN:=.TSTR;      .get_str(.RSTR); IAIWS.LP:=#.TSTR;     .get_str(.RSTR); IAIWS.LM:=.TSTR;
         .get_str(.RSTR); IAIWS.WSP:=#.TSTR;    .get_str(.RSTR); IAIWS.GWSKROT:=.TSTR; .get_str(.RSTR); IAIWS.GWK:=.TSTR;
         .get_str(.RSTR); IAIWS.GKSKROT:=.TSTR; .get_str(.RSTR); IAIWS.GKLP:=#.TSTR;   .get_str(.RSTR); IAIWS.GKN:=.TSTR;
         .DOD:=IAIWS.add()
      "),
      obj_meth('add_iwopis',"
         .RSTR:=.STR; I_WOP.SPR:=1+.STR;
         .get_str(.RSTR); .get_str(.RSTR);    .get_str(.RSTR); I_WOP.SKROT:=.TSTR;
         .get_str(.RSTR); I_WOP.WLP:=#.TSTR;  .get_str(.RSTR); I_WOP.WKOD:=.TSTR;
         .get_str(.RSTR); I_WOP.LP:=#.TSTR;   .get_str(.RSTR); I_WOP.T:=.TSTR;
         .DOD:=I_WOP.add()
      "),
      obj_meth('roz_spr',"exec('proz_spr','sprfin',_a,_b,_c)",2,2,2),
      obj_meth('add_ilang',"exec('add_ilang','sprfin',.STR)")
   )
?};
{? var_pres('O_IM')>0 || obj_del(O_IM) ?};
O_IM:=obj_new(@.CLASS.IM_SPR);
O_IM.n_file(_a);
O_IM.AUTO:=_b=2;
{? O_IM.o_file(_local)
|| {? var_pres('I_SPR')>0 || obj_del(I_SPR) ?};
   I_SPR:=tab_tmp(2,
      'IM'    ,'STRING[1]' ,'Importować?',
      'SPR'   ,'STRING[1]' ,'Spr',
      'TYP'   ,'STRING[9]' ,'Typ',
      'KOL'   ,'INTEGER'   ,'Kolejność'    ,
      'SYSTEM','STRING[8]' ,'System'      ,
      'SKROT' ,'STRING[10]','Kod'       ,
      'NAZ'   ,'STRING[40]','Nazwa'       ,
      'REF'   ,'INTEGER'   ,'Ref'         ,
      'NREF'  ,'INTEGER'   ,'Nref'        ,
      'NSKROT','STRING[10]','Nowy kod'  ,
      'NNAZ'  ,'STRING[40]','Nowa nazwa'  ,
      'ZAOKR' ,'INTEGER'   ,'Zaokrąglenie',
      'DOKL'  ,'INTEGER'   ,'Dokładność',
      'E_KOD' ,'STRING[50]','e-Kod'
   );
   I_SPR.ndx_tmp('',0,'KOL',,0);
   INDSP:=I_SPR.ndx_tmp('',0,'SPR',,0,'KOL',,0);
   INDSS:=I_SPR.ndx_tmp('',0,'SKROT',,0,'SKROT',,0);
   INDS1:=I_SPR.ndx_tmp('',0,'SYSTEM',,0,'SKROT',,0,'SKROT',,0);
   INDS2:=I_SPR.ndx_tmp('',0,'SPR',,0,'IM',,0,'KOL',,0);
   {? var_pres('I_KOL')>0 || obj_del(I_KOL) ?};
   I_KOL:=tab_tmp(3,
      'SPR'   ,'STRING[1]' ,'Spr.'   ,
      'SKROT' ,'STRING[10]' ,'Skrót',
      'LP'    ,'INTEGER'   ,'Lp.'    ,
      'NAZWA' ,'STRING[60]','Nazwa',
      'ALGORYTM','STRING[1]','Algorytm',
      'DOKL','INTEGER','Dokładność',
      'ZAOKR','INTEGER','Zaokrąglenie',
      'E_KOD','STRING[50]','e-Kod'
   );
   IKOL:=I_KOL.ndx_tmp('',0,'SPR',,0,'SKROT',,0,'SKROT',,0,'LP',,0);
   {? var_pres('I_KOL_A')>0 || obj_del(I_KOL_A) ?};
   I_KOL_A:=tab_tmp(1,
      'GR_KOL','INTEGER' ,,
      'LP','INTEGER','Lp.',
      'LM','STRING[1]','Typ',
      'ARGUMENT','STRING[60]','Kolumna',
      'DEFW','STRING[15]','Wiersz',
      'WSP','REAL','Współczynnik'
   );
::   IKOLA:=I_KOL_A.ndx_tmp('',0,'GR_KOL',,0);
   {? var_pres('I_WIE')>0 || obj_del(I_WIE) ?};
   I_WIE:=tab_tmp(3,
      'SPR'     ,'STRING[1]'  ,'Spr.'  ,
      'SKROT'   ,'STRING[10]'  ,'Kod',
      'LP'      ,'INTEGER'    ,'Lp.'   ,
      'KOD'     ,'STRING[15]' ,'Kod'   ,
      'NAZWA'   ,'STRING[80]' ,'Nazwa' ,
      'WSPOL'   ,'REAL'       ,'Współczynnik' ,
      'WSPOLF'  ,'STRING[255]','Formuła wsp.',
      'ALGORYTM','STRING[1]'  ,'Algorytm '  ,
      'KOLEJ'   ,'INTEGER'    ,'Kolejność' ,
      'ZAOKR'   ,'INTEGER'    ,'wsk.zaokr.' ,
      'DOKL'    ,'INTEGER'    ,'Dokładność'  ,
      'TAB'     ,'STRING[8]'  ,'Tabela',
      'INDEX'   ,'STRING[8]'  ,'Index' ,
      'PREFIX'  ,'STRING[60]' ,'Prefix',
      'KODF'    ,'STRING[60]' ,'Kod (formuła)',
      'TR'      ,'STRING[60]' ,'Nazwa (formuła)',
      'SLAPG'   ,'STRING[1]'  ,'Slapg' ,
      'SLUNAZ'  ,'STRING[20]' ,'Słownik uż.',
      'MASKA'   ,'STRING[100]' ,'Maska kodów' ,
      'DOKRES'  ,'STRING[1]'  ,'Dla okresu->m-c',
      'ANA_TYP' ,'STRING[1]'  ,'Typ analizy',
      'ANA_VIEW','STRING[30]' ,'Oznaczenie odchylenia',
      'VAL_TYP' ,'STRING[1]'  ,'Typ wartości',
      'JM'      ,'STRING[5]'  ,'Kod jednostki',
      'DEFW_NAD','INTEGER'    ,'Nadrzędny',
      'E_KOD'   ,'STRING[50]' ,'e-Kod'
   );
   IWIE:=I_WIE.ndx_tmp('',0,'SPR',,0,'SKROT',,0,'SKROT',,0,'LP',,0);
   {? var_pres('I_WOP')>0 || obj_del(I_WOP) ?};
   I_WOP:=tab_tmp(4,
      'SPR'     ,'STRING[1]'  ,'Spr.'     ,
      'SKROT'   ,'STRING[10]'  ,'Kod'   ,
      'WLP'     ,'INTEGER'    ,'Lp. wier.',
      'WKOD'    ,'STRING[15]' ,'Kod wier.',
      'LP'      ,'INTEGER'    ,'Lp.'      ,
      'T'       ,'STRING[75]' ,'Treść'
    );
   IWOP:=I_WOP.ndx_tmp('',0,'SPR',,0,'SKROT',,0,'SKROT',,0,'WLP',,0,'LP',,0);
   {? var_pres('IAWSP')>0 || obj_del(IAWSP) ?};
   IAWSP:=tab_tmp(4,
      'SPR'     ,'STRING[1]'  ,'Spr.'       ,
      'SKROT'   ,'STRING[10]' ,'Kod'        ,
      'WK'      ,'STRING[15]' ,'Kod wiersza',
      'WLP'     ,'INTEGER'    ,'Nr wiersza'   ,
      'KLP'     ,'INTEGER'    ,'Nr kolumny'    ,
      'AKTYWNA' ,'STRING[1]'  ,'Aktywny?'   ,
      'LP'      ,'INTEGER'    ,'Lp.'        ,
      'FSYSTEM' ,'STRING[8]'  ,'Formuła system'   ,
      'FRODZAJ' ,'STRING[1]'  ,'Formuła rodzaj'  ,
      'FSKROT'  ,'STRING[8]'  ,'Formuła skrót'  ,
      'P1'      ,'STRING[35]' ,'Parametr 1' ,
      'P2'      ,'STRING[35]' ,'Parametr 2' ,
      'P3'      ,'STRING[35]' ,'Parametr 3' ,
      'P4'      ,'STRING[35]' ,'Parametr 4' ,
      'P5'      ,'STRING[35]' ,'Parametr 5' ,
      'P6'      ,'STRING[35]' ,'Parametr 6' ,
      'P7'      ,'STRING[35]' ,'Parametr 7' ,
      'P8'      ,'STRING[35]' ,'Parametr 8' ,
      'ROK'     ,'STRING[20]' ,'ROK'        ,
      'WSP'     ,'REAL'       ,'Współczynnik',
      'SYSTEM'  ,'STRING[8]'  ,'SYSTEM',
      'WYL'     ,'STRING[1]'  ,'Wyłączenia',
      'FWYL'    ,'STRING[4]'  ,'Firma wyłączeniowa',
      'FMLWYL'  ,'STRING[8]'  ,'Formuła wyłączenia',
      'FIRMA'   ,'STRING[4]'  ,'Firma'
   );
   I_AWSP:=IAWSP.ndx_tmp('',0,'SPR',,0,'SKROT',,0,'SKROT',,0,'WLP',,0,'KLP',,0);
   IAWSP.index(I_AWSP);
   {? var_pres('IAIWS')>0 || obj_del(IAIWS) ?};
   IAIWS:=tab_tmp(4,
      'SPR'     ,'STRING[1]'  ,'Spr.'       ,
      'SKROT'   ,'STRING[10]' ,'Kod'        ,
      'WLP'     ,'INTEGER'    ,'Nr wiesza.'   ,
      'WK'      ,'STRING[15]' ,'Kod wiersza',
      'KLP'     ,'INTEGER'    ,'Nr kolumny'    ,
      'KN'      ,'STRING[60]' ,'Nazwa kolumny' ,
      'LP'      ,'INTEGER'    ,'Lp.'        ,
      'LM'      ,'STRING[1]'  ,'Typ'        ,
      'WSP'     ,'REAL'       ,'Współczynnik'       ,
      'GWSKROT' ,'STRING[10]'  ,'Powiązane sprawozdanie'  ,
      'GWK'     ,'STRING[15]' ,'Kod powiązanego wiersza' ,
      'GKSKROT' ,'STRING[10]'  ,''          ,
      'GKLP'    ,'INTEGER'    ,'Lp powiązanej kolumny',
      'GKN'     ,'STRING[60]' ,'Pow.n.kol.'
   );
   I_AIWS:=IAIWS.ndx_tmp('',0,'SPR',,0,'SKROT',,0,'SKROT',,0,'WLP',,0,'KLP',,0);
   IAIWS.index(I_AIWS);
   VAR_DEL.delete('I_LANG','ILANGS','ILANGK');
   I_LANG:=tab_tmp(4,
      'TYP','STRING[1]','',
      'SPR','STRING[10]','',
      'ID','STRING[20]','',
      'SLO','STRING[8]','Język',
      'LANG','STRING[80]','Tłumaczenie'
   );
   ILANGS:=I_LANG.ndx_tmp('',0,'TYP',,0,'SPR',,0,'SPR',,0);
   ILANGK:=I_LANG.ndx_tmp('',0,'TYP',,0,'SPR',,0,'ID',,0,'ID',,0);
   echo('Trwa wczytywanie danych.'@);
   _ls:=0;
   {!
   |? O_IM.STR:='';
      O_IM.cz_linie();
      {? +O_IM.STR
      || {? O_IM.STR*'@GR_SIK@' > 0
         || _ls+=O_IM.add_ispr(_ls);
            {? O_IM.DOD || echo('Trwa wczytywanie danych... %1'@[I_SPR.SKROT]) ?}
         |? O_IM.STR*'@GR_KOL@' > 0
         || O_IM.add_ikol();
            {? O_IM.DOD || echo('Trwa wczytywanie danych... %1 Kolumna: %2'@[I_SPR.SKROT,I_KOL.NAZWA]) ?}
         |? O_IM.STR*'@DEFK@' > 0
         || {? exec('add_defk','sprfin',O_IM.STR) || echo('Trwa wczytywanie danych... %1 Algorytm.'@[I_KOL.NAZWA]) ?}
         |? O_IM.STR*'@DEFW@' > 0
         || O_IM.add_iwie();
            {? O_IM.DOD || echo('Trwa wczytywanie danych... %1 Wiersz: %2'@[I_SPR.SKROT,I_WIE.KOD]) ?}
         |? O_IM.STR*'@WOPIS@' > 0
         || O_IM.add_iwopis();
            {? O_IM.DOD || echo('Trwa wczytywanie danych... %1 Opis: %2'@[I_SPR.SKROT,I_WOP.T]) ?}
         |? O_IM.STR*'@ALG_PAR@' > 0
         || O_IM.add_ialgpar();
            {? O_IM.DOD || echo('Trwa wczytywanie danych... %1 algorytm wiersza podstawowego: %2'@[I_SPR.SKROT,$IAWSP.LP]) ?}
         |? O_IM.STR*'@DEFA@' > 0
         || O_IM.add_idefa();
            {? O_IM.DOD || echo('Trwa wczytywanie danych... %1 algorytm innego wiersza: %2'@[I_SPR.SKROT,$IAIWS.LP]) ?}
         |? XINFO.SLJEZYK & O_IM.STR*'@LANG_SIK@' > 0
         || O_IM.add_ilang()
         ?}
      ?};
      O_IM.CHR<>-1
   !};
   echo();
   I_SPR.clear;
   {? I_SPR.first()
   || {!
      |? I_SPR.cntx_psh();
         O_IM.roz_spr(I_SPR.SYSTEM,I_SPR.SKROT,I_SPR.NAZ);
         I_SPR.cntx_pop();
         I_SPR.next()
      !}
   ?};
   I_SPR.index(INDSP);
   {? I_SPR.find_key('G')
   || {? O_IM.AUTO & exec('spr_spr','sprfin',0)
      || exec('e_spr','sprfin',2)
      || _OKS:=I_SPR.mk_sel(,'P',,'i_spr_wer',,,,,'U');
         I_SPR.win_fld(_OKS,,'IM',,,,,0,,,,2,,"'T'","'N'");
         I_SPR.win_fld(_OKS,,'TYP',,,,,0);
         I_SPR.win_fld(_OKS,,'KOL',,,8,,0);
         I_SPR.win_fld(_OKS,,'SKROT',,,10,,0);
         I_SPR.win_fld(_OKS,,'NAZ',,,15,,0);
         I_SPR.win_fld(_OKS,,'NSKROT',,,10,,0);
         I_SPR.win_fld(_OKS,,'NNAZ',,,14,,0);
         I_SPR.win_act(_OKS,0,'Formuła','Zaznacz'@@,,'Importować sprawozdanie powiązanego'@,,"
            {? I_SPR.SPR='P' & I_SPR.IM='N'
            || I_SPR.IM:='T';
               I_SPR.put()
            ?}
         ",1,,,,'Z');
         I_SPR.win_act(_OKS,0,'Formuła','Odznacz'@@,,'Nie importować sprawozdanie powiązanego'@,,"
            {? I_SPR.SPR='P' & I_SPR.IM='T'
            || I_SPR.IM:='N';
               I_SPR.put()
            ?}
         ",1,,,,'O');
         I_SPR.win_act(_OKS,0,'Formuła','Importuj'@@,,'Imp. sprawozd. wraz z zazn. sprawozd. powiązanymi'@,,"
            {? exec('spr_spr','sprfin')
            || exec('e_spr','sprfin');
               sel_exit()
            ?}
         ",,,,,'I');
         I_SPR.win_act(_OKS,0,'Formuła','Wiersze'@@,,'Wczytane wiersze sprawozdania'@,,"
            I_WIE.index(IWIE);
            I_WIE.prefix(I_SPR.SPR,I_SPR.SKROT,I_SPR.SKROT);
            I_WIE.hdr_sel(I_SPR.SKROT);
            I_WIE.select()
         ",,,,,'W');
         I_SPR.win_act(_OKS,0,'Formuła','Kolumny'@@,,'Wczytane kolumny sprawozdania'@,,"
            I_KOL.index(IKOL);
            I_KOL.prefix(I_SPR.SPR,I_SPR.SKROT,I_SPR.SKROT);
            I_KOL.hdr_sel(I_SPR.SKROT);
            I_KOL.select()
         ",,,,,'K');
         I_SPR.win_act(_OKS,0,'Menu'   ,'Algorytmy'@,,'Wczytane algorytmy sprawozdania'@);
         I_SPR.win_act(_OKS,0,'Formuła','Wierszy podstawowych'@@,'Algorytmy'@,'Wczytane algorytmy wierszy podstawowych sprawozdania'@,,"
            exec('alg_wskp','sprfin')
         ",,,,,'W');
         I_SPR.win_act(_OKS,0,'Formuła','Innych wierszy'@@,'Algorytmy'@,'Wczytane algorytmy innych wierszy sprawozdania'@,,"
            IAIWS.prefix(I_SPR.SPR,I_SPR.SKROT,I_SPR.SKROT);
            IAIWS.hdr_sel(I_SPR.SKROT);
            IAIWS.select()
         ",,,,,'I');
         I_SPR.win_act(_OKS,0,'Formuła','Tłumaczenia'@@,,'Tłumaczenia sprawozdania'@,,"
            I_LANG.index(ILANGS);
            I_LANG.prefix('S',I_SPR.SKROT,I_SPR.SKROT);
            I_LANG.hdr_sel();
            I_LANG.select()
         ",,,,,'T');
         I_SPR.win_act(_OKS,0,'Formuła','Przypisz'@@,,'Przypisanie nowgo kodu i nazwy sprawozdania'@,,"
            exec('spr_g','sprfin')
         ",,,,,'P');
         I_SPR.win_act(_OKS,0,'Rekord',,,,"
            {? I_SPR.SPR='G'
            || _gray:='ZO';
               _def:=''
            |? I_SPR.IM='T'
            || _gray:='Z';
               _def:='O'
            || _gray:='O';
               _def:='Z'
            ?};
            I_SPR.actions_grayed(I_SPR.win_sel('?'),_gray);
            I_SPR.actions(I_SPR.win_sel('?'),,_def,1);
            {? I_SPR.REF>0 & I_SPR.IM='T' || exec('findtmp','#color') ?}
         ",,);
         I_SPR.win_btn(_OKS,'text='+'Zaznacz'@+',btn_label_align=center,panel=right,align=begin','menu:Z');
         I_SPR.win_btn(_OKS,'text='+'Odznacz'@+',btn_label_align=center,panel=right,align=begin','menu:O');
         I_SPR.win_btn(_OKS,'text='+'Importuj'@+',btn_label_align=center,panel=bottom,align=begin','menu:I');
         I_SPR.win_sel(_OKS);
         I_SPR.hdr_sel('Sprawozdanie %1 (wybór sprawozdań powiązanych z %2 do importu)'@[I_SPR.SKROT,I_SPR.SKROT]);
         _OKK:=I_KOL.mk_sel('Kolumny sprawozdania: '@,'P',,'i_kol_wer',,,,,'U');
         I_KOL.win_fld(_OKK,,'LP',,,5,,0);
         I_KOL.win_fld(_OKK,,'NAZWA',,,60,,0);
         I_KOL.win_fld(_OKK,,'ALGORYTM',,,2,,0);
         I_KOL.win_fld(_OKK,,'DOKL',,,5,,0);
         I_KOL.win_fld(_OKK,,'ZAOKR',,,5,,0);
         I_KOL.win_act(_OKK,0,'Formuła','Algorytm'@@,,'Algorytm kolumny'@,,"
            I_KOL_A.prefix(I_KOL.ref());
            I_KOL_A.hdr_sel();
            I_KOL_A.hdr_sel(I_KOL.NAZWA);
            I_KOL_A.select()
         ",1,,,,'A');
         I_KOL.win_act(_OKK,0,'Formuła','Tłumaczenia'@@,,'Tłumaczenia sprawozdania'@,,"I_LANG.index(ILANGK); I_LANG.prefix('K',I_SPR.SKROT,$I_KOL.LP,$I_KOL.LP); I_LANG.hdr_sel(); I_LANG.select()",1,,,,'T');
         I_KOL.win_btn(_OKK,'text='+'Algorytm'@+',btn_label_align=center,panel=right,align=begin','menu:A');
         I_KOL.win_btn(_OKK,'text='+'Tłumaczenia'@+',btn_label_align=center,panel=right,align=begin','menu:T');
         I_KOL.win_sel(_OKK);
         _OKA:=I_KOL_A.mk_sel('Algorytm kolumny: '@,'P',,'i_kol_a_wer',,,,,'U');
         I_KOL_A.win_fld(_OKA,,'LP',,,5,,0);
         I_KOL_A.win_fld(_OKA,,'LM',,,2,,0);
         I_KOL_A.win_fld(_OKA,,'ARGUMENT',,,60,,0);
         I_KOL_A.win_fld(_OKA,,'DEFW',,,15,,0);
         I_KOL_A.win_fld(_OKA,,'WSP',,,5,2,0);
         I_KOL_A.win_sel(_OKA);
         _OKW:=I_WIE.mk_sel('Wiersze sprawozdania: '@,'P',,'i_wie_wer',,,,,'U');
         I_WIE.win_fld(_OKW,,'LP',,,5,,0);
         I_WIE.win_fld(_OKW,,'KOD',,,15,,0);
         I_WIE.win_fld(_OKW,,'NAZWA',,,40,,0);
         I_WIE.win_act(_OKW,0,'Formuła','Tłumaczenia'@@,,'Tłumaczenia sprawozdania'@,,"I_LANG.index(ILANGK); I_LANG.prefix('W',I_SPR.SKROT,I_WIE.KOD,I_WIE.KOD); I_LANG.hdr_sel(); I_LANG.select()",1,,,,'T');
         I_WIE.win_act(_OKW,0,'Szukaj');
         I_WIE.win_btn(_OKW,'text=%1,btn_label_align=center,panel=right,align=begin'['Tłumaczenia'@],'menu:T');
         I_WIE.win_sel(_OKW);
         _OKWE:=I_WIE.mk_edit('Wiersz sprawozdania'@,,'i_wie_edit');
         I_WIE.win_efld(_OKWE,,'LP',,,5,,0);
         I_WIE.win_efld(_OKWE,,'KOD',,,15,,0);
         I_WIE.win_efld(_OKWE,,'NAZWA',,,40,,0);
         I_WIE.win_efld(_OKWE,,'ALGORYTM',,,1,,0);
         I_WIE.win_efld(_OKWE,,'WSPOL',,,15,2,0);
         I_WIE.win_efld(_OKWE,,'WSPOLF',,,55,,0);
         I_WIE.win_efld(_OKWE,,'ZAOKR',,,7,,0);
         I_WIE.win_efld(_OKWE,,'DOKL',,,2,,0);
         I_WIE.win_efld(_OKWE,,'DOKRES',,,1,,0);
         I_WIE.win_efld(_OKWE,,'TAB',,,8,,0);
         I_WIE.win_efld(_OKWE,,'INDEX',,,8,,0);
         I_WIE.win_efld(_OKWE,,'PREFIX',,,60,,0);
         I_WIE.win_efld(_OKWE,,'KODF',,,60,,0);
         I_WIE.win_efld(_OKWE,,'MASKA',,,35,,0);
         I_WIE.win_efld(_OKWE,,'TR',,,60,,0);
         I_WIE.win_efld(_OKWE,,'SLUNAZ',,,20,,0);
         I_WIE.win_edit(_OKWE);
         _OKAW:=IAWSP.mk_sel('Algorytmy wierszy podstawowych sprawozdania: '@,'P',,'iawsp_wer',,,,,'U');
         IAWSP.win_fld(_OKAW,,'WLP',,,5,,0);
         IAWSP.win_fld(_OKAW,,'WK',,,10,,0);
         IAWSP.win_fld(_OKAW,,'KLP',,,5,,0);
         IAWSP.win_fld(_OKAW,,'FSYSTEM',,,8,,0);
         IAWSP.win_fld(_OKAW,,'FRODZAJ',,,1,,0);
         IAWSP.win_fld(_OKAW,,'FSKROT',,,8,,0);
         IAWSP.win_fld(_OKAW,,'ROK',,,10,,0);
         IAWSP.win_act(_OKAW,0,'Szukaj');
         IAWSP.win_sel(_OKAW);
         _OKAI:=IAIWS.mk_sel('Algorytmy innych wierszy sprawozdania: '@,'P',,'iaiws_wer',,,,,'U');
         IAIWS.win_fld(_OKAI,,'WLP',,,5,,0);
         IAIWS.win_fld(_OKAI,,'WK',,,11,,0);
         IAIWS.win_fld(_OKAI,,'KLP',,,5,,0);
         IAIWS.win_fld(_OKAI,,'LP',,,5,,0);
         IAIWS.win_fld(_OKAI,,'LM',,,1,,0);
         IAIWS.win_fld(_OKAI,,'GWSKROT',,,10,,0);
         IAIWS.win_fld(_OKAI,,'GWK',,,11,,0);
         IAIWS.win_fld(_OKAI,,'GKLP',,,5,,0);
         IAIWS.win_sel(_OKAI);
         _OKAL:=I_LANG.mk_sel('Tłumaczenia'@,'P',,'ilang_wer',,,,,'U');
         I_LANG.win_fld(_OKAL,,'SLO',,,5,,0);
         I_LANG.win_fld(_OKAL,,'LANG',,,80,,0);
         I_LANG.win_sel(_OKAL);
         eks:=0;
         GR_SIK.cntx_psh();
         {? _b=0 & I_SPR.size() || exec('e_spr','sprfin',_b) || I_SPR.select() ?};
         GR_SIK.cntx_pop()
      ?}
   ?};
   O_IM.c_file();
   echo();
   VAR_DEL.delete('INDSP','INDSS','INDS1','INDS2','IKOL','IWIE','I_AWSP','I_AIWS','IWOP');
   VAR_DEL.delete('IAIWS','IAWSP','I_WIE','I_KOL','I_SPR','I_WOP','eks')
?};
_ok:=O_IM.RESULT;
VAR_DEL.delete('O_IM');
_ok


\proz_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Definicja formuly metody IM_SPR.roz_spr
::   WE: argumenty przekazywane do metody IM_SPR.roz_spr
::       _a - nazwa systemu z ktorego pochodzi sprawozdanie
::       _b - kod sprawozdania
::       _c - nazwa sprawozdania
::  OLD: \proz_spr/skid_im2.fml
::  OLD: \proz_spr/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
I_SPR.index(INDS1); I_SPR.prefix();
{? I_SPR.find_key(_a,_b) & I_SPR.SKROT=_b & I_SPR.NAZ=_c
|| GR_SIK.cntx_psh();
   GR_SIK.index('SYSSKROT'); GR_SIK.prefix(REF.S_FIRMA);
   {? I_SPR.SPR='G'
   || {? exec('is_gr_sik','sprfin',_b,_c)
      || I_SPR.REF:=0; I_SPR.NSKROT:=I_SPR.NNAZ:=''
      || I_SPR.REF:=0; I_SPR.NSKROT:=I_SPR.SKROT; I_SPR.NNAZ:=I_SPR.NAZ
      ?}
   |? I_SPR.SPR='P'
   || {? GR_SIK.find_key(_a,_b) & GR_SIK.SKROT=_b & GR_SIK.NAZWA=_c
      || I_SPR.REF:=#GR_SIK.ref();
         I_SPR.NSKROT:=GR_SIK.SKROT;
         I_SPR.NNAZ:=GR_SIK.NAZWA
      || I_SPR.REF:=0;
         I_SPR.NSKROT:=I_SPR.SKROT;
         I_SPR.NNAZ:=I_SPR.NAZ
      ?}
   ?};
   GR_SIK.cntx_pop();
   I_SPR.put()
?}


\is_gr_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Czy istnieje sprawozdania o skrócie i nazwie
::   WE: _a - skrót
::       _b - nazwa
::----------------------------------------------------------------------------------------------------------------------
GR_SIK.cntx_psh();
GR_SIK.index('SKROT'); GR_SIK.prefix();
_jest:=GR_SIK.find_key(REF.S_FIRMA,_a,);
{? ~_jest
|| GR_SIK.index('NAZWA'); GR_SIK.prefix();
   _jest:=GR_SIK.find_key(REF.S_FIRMA,_b,)
?};
GR_SIK.cntx_pop();
_jest


\add_ilang
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Zapisuje do tabeli tlumaczenia
::   WE: _a - linija z importowanego pliku
::  OLD: \add_ilang/skid_im2.fml
::  OLD: \add_ilang/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
O_IM.RSTR:=_a;
O_IM.get_str(O_IM.RSTR);
O_IM.get_str(O_IM.RSTR);
O_IM.get_str(O_IM.RSTR); _tab:=O_IM.TSTR;
I_LANG.blank();
O_IM.get_str(O_IM.RSTR); I_LANG.SPR:=O_IM.TSTR;
I_LANG.TYP:=_tab;
{? _tab='K' | _tab='W'
|| O_IM.get_str(O_IM.RSTR); I_LANG.ID:=O_IM.TSTR
?};
O_IM.get_str(O_IM.RSTR); I_LANG.SLO:=O_IM.TSTR;
O_IM.get_str(O_IM.RSTR); I_LANG.LANG:=O_IM.TSTR;
I_LANG.add()


\add_defk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Dodanie rekordu do I_KOL_A
::  OLD: \add_defk/skid_im2.fml
::  OLD: \add_defk/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
_w:=spli_str(O_IM.STR,O_IM.SP);
I_KOL_A.GR_KOL:=I_KOL.ref();
I_KOL_A.ARGUMENT:=_w[3];
I_KOL_A.DEFW:=_w[4];
I_KOL_A.LM:=_w[5];
I_KOL_A.WSP:=#form(_w[6]);
I_KOL_A.LP:=#form(_w[7]);
_ok:=I_KOL_A.add();
obj_del(_w);
_ok


\spr_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Sprawdza czy wszystkie sprawozdania sa powiazane
::   WE: [_a] - dialogi [1]-tak 0-nie
::  OLD: \spr_spr/skid_im2.fml
::  OLD: \spr_spr/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
_dial:={? var_pres('_a')>0 || _a || 1 ?};
I_SPR.cntx_psh();
I_SPR.index(INDSP);
_d:=1;_r:=0;
{? I_SPR.first()
|| {!
   |? {? (+I_SPR.NSKROT=0 | +I_SPR.NNAZ=0) & I_SPR.IM='T'
      || _d:=0; {? _dial || FUN.info('Sprawozdanie %1 nie ma przypisanej nowej nazwy i kodu.'@[I_SPR.SKROT]) ?}
      |? I_SPR.SPR='P' & I_SPR.IM='T'
      || {? I_SPR.REF=0 & (I_SPR.NSKROT=I_SPR.SKROT | I_SPR.NNAZ=I_SPR.NAZ)
            & (GR_SIK.index('SYSSKROT');GR_SIK.prefix(REF.S_FIRMA); GR_SIK.find_key(I_SPR.SYSTEM,I_SPR.SKROT))
         || _d:=0; {? _dial || FUN.info('Sprawozdanie %1 ma źle przypisane sprawozdanie.'@[I_SPR.SKROT]) ?}
         |? I_SPR.REF>0 & ~GR_SIK.seek(I_SPR.REF,GR_SIK.name())
         || _d:=0; {? _dial || FUN.info('Sprawozdanie %1 brak przypisanego sprawozdania o nr ref: %2.'@[I_SPR.SKROT,$I_SPR.REF]) ?}
         |? I_SPR.REF>0 & (GR_SIK.seek(I_SPR.REF,GR_SIK.name());
            GR_SIK.SKROT<>I_SPR.SKROT | GR_SIK.NAZWA<>I_SPR.NAZ)
         || _d:=0;
            {? _dial
            || FUN.info(
                  'Sprawozdanie %1 ma inne nazwy niż sprawozdanie o nr ref: %2\n'
                  '(%3).'@[I_SPR.SKROT,$I_SPR.REF,GR_SIK.SKROT+', '+GR_SIK.NAZWA]
               )
            ?}
         |? I_SPR.REF>0 & (GR_SIK.seek(I_SPR.REF,GR_SIK.name());
            GR_SIK.SKROT<>I_SPR.NSKROT | GR_SIK.NAZWA<>I_SPR.NNAZ)
         || _d:=0;
            {? _dial
            || FUN.info(
                  'Sprawozdanie %1 powiązanie ma inne nazwy niż sprawozdanie o nr ref: %2\n'
                  '(%3).'@[I_SPR.SKROT,$I_SPR.REF,GR_SIK.SKROT+', '+GR_SIK.NAZWA]
               )
            ?}
         ?}
      ?};
      _r:=#I_SPR.ref();
      _d & I_SPR.next()
   !}
?};
I_SPR.cntx_pop();
{? ~_d || I_SPR.seek(_r,I_SPR.name()) ?};
_d


\e_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Wyeksportowane dane wpisuje do systemu
::   WE: [_a] - 1 lub (dotychczasowe działanie) brak parametru - z pokazywaniem elementów dialogowych, 2-tylko błedu
::  OLD: \e_spr/skid_im2.fml
::  OLD: \e_spr/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ERR')>0 || obj_del(ERR) ?};
{? _<1 || _b:=1 ?};
{? var_press('_a')<=0 || _a:=1 ?};
ERR:=tab_tmp(1,
   'LP','INTEGER','Lp.',
   'SPR','STRING[1]','Spr.',
   'SKROT','STRING[10]','Kod',
   'ERR','STRING[255]','Błąd'
);
I_ERR:=ERR.ndx_tmp('',0,'LP',,0); ERR.index(I_ERR);
I_SPR.index(INDS2); I_SPR.prefix('P','T');
le:=0;
echo('Wczytywanie sprawozdań powiązanych...'@);
{? I_SPR.first()
|| {!
   |? echo('Wczytywanie struktury sprawozdaia powiązanego - %1'@[I_SPR.SKROT]);
      exec('g_spr','sprfin');
      exec('w_spr','sprfin');
      exec('o_spr','sprfin');
      exec('k_spr','sprfin');
      I_SPR.next()
   !}
?};
{? I_SPR.first()
|| {!
   |? echo('Wczytywanie algorytmów sprawozdaia powiązanego - %1'@[I_SPR.SKROT]);
      O_IM.GS:={? I_SPR.REF>0 || I_SPR.REF || I_SPR.NREF ?};
      exec('algpar_spr','sprfin');
      exec('defa_spr','sprfin');
      exec('defk_spr','sprfin');
      I_SPR.next()
   !}
?};
I_SPR.prefix('G');
{? I_SPR.first()
|| {!
   |? echo('Wczytywanie danych sprawozdania głównego - %1'@[I_SPR.SKROT]);
      exec('g_spr','sprfin');
      exec('w_spr','sprfin');
      exec('o_spr','sprfin');
      exec('k_spr','sprfin');
      exec('algpar_spr','sprfin');
      exec('defa_spr','sprfin');
      exec('defk_spr','sprfin');
      I_SPR.next()
   !}
?}; echo();
O_IM.RESULT:=~ERR.first();
{? _a<>0 & ~O_IM.RESULT
|| _OKE:=ERR.mk_sel('Błędy po imporcie definicji sprawozdania'@,'P',,'err_wer',,,,,'U');
   ERR.win_fld(_OKE,,'LP'   ,,,5,,0);
   ERR.win_fld(_OKE,,'SPR'  ,,,1,,0);
   ERR.win_fld(_OKE,,'SKROT',,,10,,0);
   ERR.win_fld(_OKE,,'ERR'  ,,,50,,0);
   ERR.win_act(_OKE,0,'Formuła','Drukuj'@@,,'Wydruk błędów importu'@,,"
      VAR_DEL.delete('g_tt_w');
      g_tt_w:=obj_new(ERR.fld_num());
      g_tt_w[1]:=5; g_tt_w[2]:=3; g_tt_w[3]:=10; g_tt_w[4]:=85;
      PAR_WYDR.TTMPAKR:='ERR';
      PAR_WYDR.TITLE:='BŁĘDY PO IMPORCIE DEFINICJI SPRAWOZDANIA'@;
      exec('rep_exec','#b_report','','wsp_tt',,,,,,,,'W');
      VAR_DEL.delete('g_tt_w');
      0
   ",1,,,,'W');
   ERR.win_sel(_OKE);
   ERR.select()
?};
&I_ERR; obj_del(ERR);&le;
echo();
{? GR_SIK.f_active() || GR_SIK.f_rfresh() ?};
{? _a=1 || FUN.info('Wczytane dane zapisano do systemu.'@) ?}


\g_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Wczytywanie GR_SIK do systemu
::  OLD: \g_spr/skid_im2.fml
::  OLD: \g_spr/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
{? I_SPR.REF>0
|| O_IM.GS:=I_SPR.REF
|| GR_SIK.blank();
   GR_SIK.SYSTEM:='FKS';
   GR_SIK.SKROT:=I_SPR.NSKROT; GR_SIK.AKC:='N';
   GR_SIK.NAZWA:=I_SPR.NNAZ; GR_SIK.ZAOKR:=I_SPR.ZAOKR; GR_SIK.DOKL:=I_SPR.DOKL;
   GR_SIK.UID:=GR_SIK.SKROT;
   GR_SIK.FIRMA:=REF.S_FIRMA;
   GR_SIK.E_KOD:=I_SPR.E_KOD;
   O_IM.DOD:=GR_SIK.add();
   {? O_IM.DOD
   || O_IM.GS:=#GR_SIK.ref(); I_SPR.NREF:=#GR_SIK.ref(); I_SPR.put();
      exec('g_lang','sprfin','S')
   || exec('do_err','sprfin','Nie dodano sprawozdania: ('+I_SPR.SPR+') '+I_SPR.SKROT)
   ?}
?}


\w_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Wczytywanie DEFW do systemu
::  OLD: \w_spr/skid_im2.fml
::  OLD: \w_spr/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
{? I_SPR.REF=0
|| I_WIE.index(IWIE);I_WIE.prefix(I_SPR.SPR,I_SPR.SKROT,I_SPR.SKROT);SLUAPPL.index('NAZ');
   SLUAPPL.prefix();DEFW.clear();
   {? I_WIE.first() & GR_SIK.seek(O_IM.GS,GR_SIK.name())
   || {!|? DEFW.blank(1);DEFW.GRUPA:=GR_SIK.ref();
           DEFW.LP:=I_WIE.LP;
           DEFW.KOD:=I_WIE.KOD;
           DEFW.UID:=exec('set_defw_uid','sprfin');
           DEFW.NAZWA:=I_WIE.NAZWA;
           DEFW.WSPOL:=I_WIE.WSPOL;
           DEFW.WSPOLF:=I_WIE.WSPOLF;
           DEFW.ALGORYTM:=I_WIE.ALGORYTM;
           DEFW.KOLEJ:=I_WIE.KOLEJ;
           DEFW.ZAOKR:=I_WIE.ZAOKR;
           DEFW.DOKL:=I_WIE.DOKL;
           DEFW.TAB:=I_WIE.TAB;
           DEFW.INDEX:=I_WIE.INDEX;
           DEFW.PREFIX:=I_WIE.PREFIX;
           DEFW.KODF:=I_WIE.KODF;
           DEFW.TR:=I_WIE.TR;
           {? +I_WIE.SLAPG & +I_WIE.SLUNAZ & SLUAPPL.find_key(I_WIE.SLAPG,I_WIE.SLUNAZ)
              & SLUAPPL.SLU().NAZ=I_WIE.SLUNAZ
           || DEFW.SLU:=SLUAPPL.ref()
           || DEFW.SLU:=null
           ?};
           DEFW.MASKA:=I_WIE.MASKA;DEFW.DOKRES:=I_WIE.DOKRES;
           DEFW.ANA_TYP:=I_WIE.ANA_TYP;
           WER_VIEW.index('NAZWA'); WER_VIEW.prefix(I_WIE.ANA_VIEW);
           {? WER_VIEW.first() & WER_VIEW.NAZWA=I_WIE.ANA_VIEW || DEFW.ANA_VIEW:=WER_VIEW.ref() ?};
           DEFW.VAL_TYP:=I_WIE.VAL_TYP;
           JM.index('KOD'); JM.prefix(I_WIE.JM);
           {? JM.first() & JM.KOD=I_WIE.JM || DEFW.JM:=JM.ref() ?};
           DEFW.DEFW_NAD:=I_WIE.DEFW_NAD;
           DEFW.E_KOD:=I_WIE.E_KOD;
           _d:=O_IM.DOD:=DEFW.add();
           {? O_IM.DOD
           || exec('g_lang','sprfin','W')
           || exec('do_err','sprfin','Nie dodano wiersza: '+I_WIE.KOD+
                                       ' sprawozdania: ('+I_SPR.SPR+') '+I_SPR.SKROT)
           ?}; I_WIE.next()
      !}
   ?}
?}


\o_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Wczytywanie WOPIS do systemu
::  OLD: \o_spr/skid_im2.fml
::  OLD: \o_spr/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
{? I_SPR.REF=0
|| I_WOP.index(IWOP);I_WOP.prefix(I_SPR.SPR,I_SPR.SKROT,I_SPR.SKROT); DEFW.index('GRUPA');
   WOPIS.prefix();
   {? I_WOP.first() & GR_SIK.seek(O_IM.GS,GR_SIK.name())
   || {!|? {? DEFW.prefix(GR_SIK.ref(),I_WOP.WKOD); DEFW.first() & DEFW.KOD=I_WOP.WKOD
           || WOPIS.blank(1); WOPIS.WSK:=DEFW.ref(); WOPIS.LP:=I_WOP.LP; WOPIS.T:=I_WOP.T;
              {? ~WOPIS.add()
              || exec('do_err','sprfin','Nie dodano opisu: '+I_WOP.T+' wiersza '+I_WOP.WKOD+
                                          ', sprawozdania: ('+I_SPR.SPR+') '+I_SPR.SKROT)
              ?}
           ?};
           I_WOP.next()!}
   ?}
?}


\k_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Wczytywanie GR_KOL do systemu
::  OLD: \k_spr/skid_im2.fml
::  OLD: \k_spr/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
{? I_SPR.REF=0
|| I_KOL.index(IKOL);I_KOL.prefix(I_SPR.SPR,I_SPR.SKROT,I_SPR.SKROT); GR_KOL.clear();
   {? I_KOL.first() & GR_SIK.seek(O_IM.GS,GR_SIK.name())
   || {!|? GR_KOL.blank(1); GR_KOL.GRUPA:=GR_SIK.ref();
           GR_KOL.LP:=I_KOL.LP; GR_KOL.NAZWA:=I_KOL.NAZWA;
           GR_KOL.ALGORYTM:=I_KOL.ALGORYTM;
           GR_KOL.DOKL:=I_KOL.DOKL;
           GR_KOL.ZAOKR:=I_KOL.ZAOKR;
           GR_KOL.E_KOD:=I_KOL.E_KOD;
           O_IM.DOD:=GR_KOL.add();
           {? O_IM.DOD
           || exec('g_lang','sprfin','K')
           || exec('do_err','sprfin','Nie dodano kolumny: '+$I_KOL.LP+
                                       ' sprawozdania: ('+I_SPR.SPR+') '+I_SPR.SKROT)
           ?}; I_KOL.next()
      !}
   ?}
?}


\algpar_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Wczytywanie ALG_PAR do systemu
::  OLD: \algpar_spr/skid_im2.fml
::  OLD: \algpar_spr/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
{? I_SPR.REF=0
|| IAWSP.prefix(I_SPR.SPR,I_SPR.SKROT,I_SPR.SKROT);
   {? IAWSP.first() & GR_SIK.seek(O_IM.GS,GR_SIK.name())
   || DEFW.index('LP');DEFW.prefix();
      GR_KOL.index('LP'); GR_KOL.prefix();
      FORMULA.index('FORMULA4'); FORMULA.prefix();
      ROK_F.index('NAZWA'); ROK_F.prefix(); ALG_PAR.clear();
      {!|? ALG_PAR.blank(1);
           ALG_PAR.SYSTEM:=exec('blsysalg','!zws_par_fspr');
           {? DEFW.find_key(GR_SIK.ref(),IAWSP.WLP)
           || ALG_PAR.DEFW:=DEFW.ref() || ALG_PAR.DEFW:=null ?};
           {? GR_KOL.find_key(GR_SIK.ref(), IAWSP.KLP)
           || ALG_PAR.GR_KOL:=GR_KOL.ref() || ALG_PAR.GR_KOL:=null ?};
           ALG_PAR.AKTYWNA:=IAWSP.AKTYWNA; ALG_PAR.LP:=IAWSP.LP;
           {? FORMULA.find_key(IAWSP.FRODZAJ,IAWSP.FSKROT) & FORMULA.SKROT=IAWSP.FSKROT & +IAWSP.FSKROT
           || ALG_PAR.FORMULA:=FORMULA.ref()
           || ALG_PAR.FORMULA:=null
           ?};
           ALG_PAR.P1:=IAWSP.P1; ALG_PAR.P2:=IAWSP.P2; ALG_PAR.P3:=IAWSP.P3; ALG_PAR.P4:=IAWSP.P4;
           ALG_PAR.P5:=IAWSP.P5; ALG_PAR.P6:=IAWSP.P6; ALG_PAR.P7:=IAWSP.P7; ALG_PAR.P8:=IAWSP.P8;
           ALG_PAR.FIRMA:={? REF.S_FIRMA=REF.GRUPA
                          || FIRMA.cntx_psh();
                             FIRMA.index('SYMBOL'); FIRMA.prefix();
                             _ref:={? FIRMA.find_key(IAWSP.FIRMA,) || FIRMA.ref() || REF.S_FIRMA ?};
                             FIRMA.cntx_pop();
                             _ref
                          || REF.S_FIRMA
                          ?};
           ALG_PAR.ROK:={? +IAWSP.ROK & ROK_F.find_key(ALG_PAR.FIRMA,IAWSP.ROK) & ROK_F.NAZ=IAWSP.ROK
                        || ROK_F.ref()
                        || null
                        ?};
           {? REF.S_FIRMA<>REF.GRUPA | ALG_PAR.FIRMA=REF.GRUPA | ALG_PAR.ROK().PLAN_GR<>'T'
           || ALG_PAR.WSP:=IAWSP.WSP;
              ALG_PAR.WYL:=IAWSP.WYL;
              ALG_PAR.MIEJSCE:='F';
              {? ALG_PAR.WYL='T'
              || FIRMA.cntx_psh(); FIRMA.index('SYMBOL'); FIRMA.prefix();
                 ALG_PAR.FIRMAWYL:={? IAWSP.FWYL<>'' & FIRMA.find_key(IAWSP.FWYL,) || FIRMA.ref() || null ?};
                 FIRMA.cntx_pop();
                 ALG_PAR.FORM_WYL:={? IAWSP.FMLWYL<>'' & FORMULA.find_key('w',IAWSP.FMLWYL,) || FORMULA.ref() || null ?}
              ?};
              {? ALG_PAR.FORMULA<>null & ALG_PAR.ROK<>null & ALG_PAR.DEFW<>null & ALG_PAR.GR_KOL<>null
              || O_IM.DOD:=ALG_PAR.add();
                 {? ~O_IM.DOD
                 || exec('do_err','sprfin','Nie dodano wiersza podstawowego: '+$ALG_PAR.DEFW().LP+
                         ', (kolumna) '+$ALG_PAR.GR_KOL().LP+' sprawozdania: ('+I_SPR.SPR+') '+I_SPR.SKROT)
                 ?}
              || {? ALG_PAR.FORMULA=null
                 || exec('do_err','sprfin','Nie dodano wiersza podstawowego: '+$ALG_PAR.DEFW().LP+
                         ', (kolumna) '+$ALG_PAR.GR_KOL().LP+' sprawozdania: ('+I_SPR.SPR+') '+I_SPR.SKROT+
                         ' wiersz: '+$IAWSP.WLP+', kolumna: '+$IAWSP.KLP+' - brak formuły '+IAWSP.FSKROT+' w systemie')
                 |? ALG_PAR.ROK=null
                 || exec('do_err','sprfin','Nie dodano wiersza podstawowego: '+$ALG_PAR.DEFW().LP+
                         ', (kolumna) '+$ALG_PAR.GR_KOL().LP+' sprawozdania: ('+I_SPR.SPR+') '+I_SPR.SKROT+
                         ' - brak roku '+IAWSP.ROK+' w systemie')
                 |? ALG_PAR.DEFW=null
                 || exec('do_err','sprfin','Nie dodano wiersza podstawowego: '+$ALG_PAR.DEFW().LP+
                         ', (kolumna) '+$ALG_PAR.GR_KOL().LP+' sprawozdania: ('+I_SPR.SPR+') '+I_SPR.SKROT+
                         ' - brak wiersza '+IAWSP.WK+' w systemie')
                 |? ALG_PAR.GR_KOL=null
                 || exec('do_err','sprfin','Nie dodano wiersza podstawowego: '+$ALG_PAR.DEFW().LP+
                         ', (kolumna) '+$ALG_PAR.GR_KOL().LP+' sprawozdania: ('+I_SPR.SPR+') '+I_SPR.SKROT+
                         ' - brak kolumny '+$IAWSP.KLP+' w systemie')
                 ?}
              ?}
           ?};
           IAWSP.next()
      !}
   ?}
?}


\defa_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Wczytywanie DEFA do systemu
::  OLD: \defa_spr/skid_im2.fml
::  OLD: \defa_spr/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
{? I_SPR.REF=0
|| IAIWS.prefix(I_SPR.SPR,I_SPR.SKROT,I_SPR.SKROT);
   {? IAIWS.first() & GR_SIK.seek(O_IM.GS,GR_SIK.name())
   || DEFA.clear(); GR_SIK.index('SKROT'); GR_SIK.prefix(REF.S_FIRMA);
      DEFW.index('GRUPA');DEFW.prefix();
      GR_KOL.index('LP'); GR_KOL.prefix();
      {!|? DEFA.blank(1);
           GR_SIK.seek(O_IM.GS,GR_SIK.name());
           {? DEFW.find_key(GR_SIK.ref(),IAIWS.WK) & DEFW.KOD=IAIWS.WK
           || DEFA.WYR:=DEFW.ref() || DEFA.WYR:=null ?};
           {? GR_KOL.find_key(GR_SIK.ref(), IAIWS.KLP)
           || DEFA.KOL:=GR_KOL.ref() || DEFA.KOL:=null ?};
           DEFA.LP:=IAIWS.LP; DEFA.LM:=IAIWS.LM; DEFA.WSP:=IAIWS.WSP;
           I_SPR.cntx_psh(); I_SPR.index(INDSS);I_SPR.prefix();
           _g:=0;
           {? I_SPR.find_key(IAIWS.GWSKROT) & I_SPR.SKROT=IAIWS.GWSKROT & +IAIWS.GWSKROT
           || {? I_SPR.IM='T' & I_SPR.REF>0
              || _g:=I_SPR.REF
              |? I_SPR.IM='T' & I_SPR.NREF>0
              || _g:=I_SPR.NREF
              ?}
           |? GR_SIK.find_key(IAIWS.GWSKROT) & GR_SIK.SKROT=IAIWS.GWSKROT & +IAIWS.GWSKROT
           || _g:=#GR_SIK.ref()
           ?};
           {? _g>0
           || {? GR_SIK.seek(_g,GR_SIK.name())
              || {? DEFW.find_key(GR_SIK.ref(),IAIWS.GWK) & DEFW.KOD=IAIWS.GWK & +IAIWS.GWK
                 || DEFA.ARGUMENT:=DEFW.ref();
                    {? GR_KOL.find_key(GR_SIK.ref(), IAIWS.GKLP, IAIWS.GKN, IAIWS.GKN)
                       & GR_KOL.NAZWA=IAIWS.GKN & +IAIWS.GKN
                    || DEFA.ARG_KOL:=GR_KOL.ref()
                    || DEFA.ARG_KOL:=null
                    ?}
                 || DEFA.ARGUMENT:=null; DEFA.ARG_KOL:=null
                 ?}
              || DEFA.ARGUMENT:=null; DEFA.ARG_KOL:=null
              ?}
           || DEFA.ARGUMENT:=null; DEFA.ARG_KOL:=null
           ?};
           I_SPR.cntx_pop();
           {? DEFA.WYR<>null & DEFA.KOL<>null  & DEFA.ARGUMENT<>null & DEFA.ARG_KOL<>null
           || O_IM.DOD:=DEFA.add();
              {? ~O_IM.DOD
              || exec('do_err','sprfin','Nie dodano innego wiersza: '+
                      $DEFA.WYR().LP+', (kolumna) '+
                      $DEFA.KOL().LP+' sprawozdania: ('+I_SPR.SPR+') '+I_SPR.SKROT)
              ?}
           || {? DEFA.ARGUMENT=null
              || exec('do_err','sprfin','Nie dodano innego wiersza: '+
                      $DEFA.WYR().LP+', (kolumna) '+
                      $DEFA.KOL().LP+' sprawozdania: ('+I_SPR.SPR+') '+I_SPR.SKROT+
                      ' - brak wskazania do sprawozdania '+IAIWS.GWSKROT)
              |? DEFA.WYR=null
              || exec('do_err','sprfin','Nie dodano innego wiersza: '+
                      $DEFA.WYR().LP+', (kolumna) '+
                      $DEFA.KOL().LP+' sprawozdania: ('+I_SPR.SPR+') '+I_SPR.SKROT+
                      ' - brak wiersza '+IAWSP.WK+' w systemie')
              |? DEFA.KOL=null
              || exec('do_err','sprfin','Nie dodano innego wiersza: '+
                      $DEFA.WYR().LP+', (kolumna) '+
                      $DEFA.KOL().LP+' sprawozdania: ('+I_SPR.SPR+') '+I_SPR.SKROT+
                      ' - brak kolumny '+$IAWSP.KLP+' w systemie')
              ?}
           ?};
           IAIWS.next()
      !}
   ?}
?}


\do_err
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Wczytywanie do tabeli tymczasowej ERR
::  OLD: \do_err/skid_im2.fml
::  OLD: \do_err/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=1 & +_a
|| ERR.LP:=le+1; ERR.SPR:=I_SPR.SPR; ERR.SKROT:=I_SPR.SKROT;
   ERR.ERR:=_a; {? ERR.add() || le+=1?}
?}


\g_lang
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Zapisuje tlumaczenia do tabeli LANG_SIK
::   WE: _a - typ
::  OLD: \g_lang/skid_im2.fml
::  OLD: \g_lang/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.SLJEZYK
|| {? _a='S'
   || I_LANG.index(ILANGS); I_LANG.prefix('S',I_SPR.SKROT,I_SPR.SKROT)
   || I_LANG.index(ILANGK);
      {? _a='K'
      || I_LANG.prefix('K',I_SPR.SKROT,$I_KOL.LP,$I_KOL.LP)
      || I_LANG.prefix('W',I_SPR.SKROT,I_WIE.KOD,I_WIE.KOD)
      ?}
   ?};
   SLO.index('SL'); SLO.prefix(XINFO.SLJEZYK);
   LANG_SIK.prefix();
   {? I_LANG.first()
   || {!
      |? {? SLO.find_key(I_LANG.SLO) & SLO.KOD=I_LANG.SLO
         || LANG_SIK.blank(1);
            LANG_SIK.SLO:=SLO.ref();
            {? _a='S'
            || LANG_SIK.MASKA:=GR_SIK.name();
               LANG_SIK.REF:=#GR_SIK.ref()
            |? _a='K'
            || LANG_SIK.MASKA:=GR_KOL.name();
               LANG_SIK.REF:=#GR_KOL.ref()
            || LANG_SIK.MASKA:=DEFW.name();
               LANG_SIK.REF:=#DEFW.ref()
            ?};
            LANG_SIK.NAZWA:=I_LANG.LANG;
            LANG_SIK.add()
         ?};
         I_LANG.next()
      !}
   ?}
?}


\defk_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Dodanie algorytmu do kolumny
::  OLD: \defk_spr/skid_im2.fml
::  OLD: \defk_spr/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
DEFK.prefix();
GR_KOL.index('NAZWA');
{? GR_SIK.seek(O_IM.GS,)
|| GR_KOL.prefix(GR_SIK.ref());
   DEFW.index('GRUPA'); DEFW.prefix(GR_SIK.ref());
   I_KOL.index(IKOL); I_KOL.prefix(I_SPR.SPR,I_SPR.SKROT,I_SPR.SKROT);
   {? I_KOL.first()
   || {!
      |? {? GR_KOL.find_key(I_KOL.NAZWA) & GR_KOL.NAZWA=I_KOL.NAZWA
         || _kref:=GR_KOL.ref();
            I_KOL_A.prefix(I_KOL.ref());
            {? I_KOL_A.first()
            || {!
               |? DEFK.GR_KOL:=_kref;
                  {? GR_KOL.find_key(I_KOL_A.ARGUMENT) & GR_KOL.NAZWA=I_KOL_A.ARGUMENT
                  || DEFK.ARGUMENT:=GR_KOL.ref();
                     {? I_KOL_A.DEFW<>'' & DEFW.find_key(I_KOL_A.DEFW) & DEFW.KOD=I_KOL_A.DEFW
                     || DEFK.DEFW:=DEFW.ref()
                     || DEFK.DEFW:=null
                     ?};
                     DEFK.LM:=I_KOL_A.LM;
                     DEFK.WSP:=I_KOL_A.WSP;
                     DEFK.LP:=I_KOL_A.LP;
                     {? ~DEFK.add()
                     || exec('do_err','sprfin','Nie dodano algorytmu '+$I_KOL_A.LP+' kolumny: ('+$I_KOL.LP+') '+I_KOL.NAZWA)
                     ?}
                  ?};
                  I_KOL_A.next()
               !}
            ?}
         ?};
         I_KOL.next()
      !}
   ?}
?}


\spr_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Formula sprawdza okienko nozwy i kodu importowanego sprawozdania
::  OLD: \spr_ok/skid_im2.fml
::  OLD: \spr_ok/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
_i:=0;_r:=I_SPR.ref();
I_SPR.cntx_psh();I_SPR.prefix();
{? I_SPR.first()
|| {!|? {? I_SPR.ref<>_r & (I_SPR.NNAZ=DEFINE.NAZWA | I_SPR.NSKROT=DEFINE.SKROT)
        || _i:={? I_SPR.NSKROT=DEFINE.SKROT || 1 || 2 ?}
        ?}; _i=0 & I_SPR.next()
   !}
?}; I_SPR.cntx_pop();
{? _i>0
|| {? _i=1 || FUN.info('Występuje już sprawozdanie importowane pod tym kodem.'@);'SKROT'
           || FUN.info('Występuje już sprawozdanie importowane pod tą nazwą.'@);'NAZWA'
   ?}
|| GR_SIK.index('SKROT'); GR_SIK.prefix(REF.S_FIRMA);
   _s:=~(GR_SIK.find_key(DEFINE.SKROT) & GR_SIK.SKROT=DEFINE.SKROT) & +DEFINE.SKROT;
   GR_SIK.index('NAZWA'); GR_SIK.prefix(REF.S_FIRMA);
   _n:=~(GR_SIK.find_key(DEFINE.NAZWA) & GR_SIK.NAZWA=DEFINE.NAZWA) & +DEFINE.NAZWA;
   {? +DEFINE.SKROT & +DEFINE.NAZWA
   || {? I_SPR.SPR='G'
      || {? ~_s|~_n
         || {? ~_s
            || FUN.info('Sprawozdanie o kodzie %1 istnieje w systemie.'@[DEFINE.SKROT])
            || FUN.info('Sprawozdanie o nazwie %1 istnieje w systemie.'@[DEFINE.NAZWA])
            ?};
            {? ~_s || 'SKROT' || 'NAZWA' ?}
         || _s & _n
         ?}
      || {? ~_s & ~_n & DEFINE.SKROT=I_SPR.SKROT & DEFINE.NAZWA=I_SPR.NAZ
         || 1
         || {? _s & _n
            || 1
            || {? ~_s
               || FUN.info('Sprawozdanie o kodzie %1 istnieje w systemie.'@[DEFINE.SKROT])
               || FUN.info('Sprawozdanie o nazwie %1 istnieje w systemie.'@[DEFINE.NAZWA])
               ?};
               {? ~_s || 'SKROT' || 'NAZWA' ?}
            ?}
         ?}
      ?}
   |? +DEFINE.SKROT=0
   || __CHK.err_empty('Nowy kod');
      'SKROT'
   || __CHK.err_empty('Nowa nazwa');
      'NAZWA'
   ?}
?}


\spr_g
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: Przypisanie nazwy importowanego sprawozdania
::  OLD: \spr_g/skid_im2.fml
::  OLD: \spr_g/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
undefine();
define('SKROT','','Nowy kod'@,'Nowy kod sprawozdania'@,10,10,);
def_opt('mark=1','SKROT');
define('NAZWA','','Nowa nazwa'@,'Nowa nazwa sprawozdania'@,40,40,);
def_opt('mark=1','NAZWA');
def_btn('text=%1,icon=xwin16.png:13'['OK'@],'key:F2');
def_btn('text=%1,icon=xwin16.png:14'['Anuluj'@],'key:Esc');
GR_SIK.index('SYSSKROT');GR_SIK.prefix(REF.S_FIRMA);
{? +I_SPR.NSKROT=0
|| {? ~GR_SIK.find_key(I_SPR.SYSTEM,I_SPR.SKROT) & I_SPR.SPR='G'
   || DEFINE.SKROT:=I_SPR.SKROT;
      DEFINE.NAZWA:=I_SPR.NAZ
   |? GR_SIK.find_key(I_SPR.SYSTEM,I_SPR.SKROT) & I_SPR.SPR='P' & GR_SIK.SKROT=I_SPR.SKROT
   || DEFINE.SKROT:=GR_SIK.SKROT;
      DEFINE.NAZWA:=GR_SIK.NAZWA
   || DEFINE.SKROT:=DEFINE.NAZWA:=''
   ?}
|| DEFINE.SKROT:=I_SPR.NSKROT;
   DEFINE.NAZWA:=I_SPR.NNAZ
?};
{? def_edit("exec('spr_ok','sprfin')",'Nowy kod i nazwa importowanego sprawozdania'@)
|| {? I_SPR.SPR='G'
   || I_SPR.NSKROT:=DEFINE.SKROT;
      I_SPR.NNAZ:=DEFINE.NAZWA
   || {? DEFINE.SKROT=I_SPR.SKROT & DEFINE.NAZWA=I_SPR.NAZ
      || I_SPR.REF:=#GR_SIK.ref()
      || I_SPR.REF:=0
      ?};
      I_SPR.NSKROT:=DEFINE.SKROT;
      I_SPR.NNAZ:=DEFINE.NAZWA
   ?}; I_SPR.put(); undefine()
?}


\alg_wskp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.50]
:: OPIS: ustawia okienko redakcyjne oraz wyswietla algorytmy wierszy podstawowych
::  OLD: \alg_wskp/skid_im2.fml
::  OLD: \alg_wskp/!zws_par_fspr.fml
::----------------------------------------------------------------------------------------------------------------------
FORMULA.index('FORMULA4'); FORMULA.prefix();
{? FORMULA.find_key(IAWSP.FRODZAJ, IAWSP.FSKROT)
|| ALG_PAR.FORMULA:=FORMULA.ref()
|| ALG_PAR.FORMULA:=null
?};
exec('parametr','sprfin');
{? SIK.NP2='Strona konta (Wn lub Ma):' || SIK.NP2:='Strona konta (Wn/Ma)' ?};
_OKAWE:=IAWSP.mk_edit('Algorytm wierszy podstawowych sprawozdania'@);
IAWSP.win_efld(_OKAWE,,'WLP',,,5,,0);
IAWSP.win_efld(_OKAWE,,'WK',,,15,,0);
IAWSP.win_efld(_OKAWE,,'KLP',,,5,,0);
IAWSP.win_efld(_OKAWE,,'LP',,,5,,0);
IAWSP.win_efld(_OKAWE,,'FSKROT',,,8,,0);
IAWSP.win_efld(_OKAWE,,'P1',,,35,,0,form(SIK.NP1,30));
IAWSP.win_efld(_OKAWE,,'P2',,,35,,0,form(SIK.NP2,30));
IAWSP.win_efld(_OKAWE,,'P3',,,35,,0,form(SIK.NP3,30));
IAWSP.win_efld(_OKAWE,,'P4',,,35,,0,form(SIK.NP4,30));
IAWSP.win_efld(_OKAWE,,'P5',,,35,,0,form(SIK.NP5,30));
IAWSP.win_efld(_OKAWE,,'P6',,,35,,0,form(SIK.NP6,30));
IAWSP.win_efld(_OKAWE,,'P7',,,35,,0,form(SIK.NP7,30));
IAWSP.win_efld(_OKAWE,,'P8',,,35,,0,form(SIK.NP8,30));
IAWSP.win_efld(_OKAWE,,'ROK',,,20,,0);
IAWSP.win_efld(_OKAWE,,'WSP',,,20,2,0);
IAWSP.win_efld(_OKAWE,,'AKTYWNA',,,1,,0);
IAWSP.win_edit(_OKAWE);
IAWSP.prefix(I_SPR.SPR,I_SPR.SKROT,I_SPR.SKROT);
IAWSP.hdr_sel(I_SPR.SKROT);
IAWSP.select()


\exp_lang
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Zapisuje do pliku tlumaczenia
::   WE: _a - znacznik typu eksportu
::       _b - typ elementu sprawozdania
::       _c - uchwyt otwartego do zapisu pliku
::       _d - separator
::  OLD: \exp_lang/skid_im2.fml
::  OLD: \exp_lang/sprfin.fml
::----------------------------------------------------------------------------------------------------------------------
{? _c
|| LANG_SIK.index('JEZYK');
   _t:={? _a='ALL' || _b || _a+_d+'LANG_SIK'+_d+_b ?}+_d;
   {? _b='S'
   || LANG_SIK.prefix(GR_SIK.name(),#GR_SIK.ref());
      {? LANG_SIK.first()
      || _t+=GR_SIK.SKROT+_d;
         {!
         |? fwrite(_c,_t+LANG_SIK.SLO().KOD+_d+LANG_SIK.NAZWA+_d);
            LANG_SIK.next()
         !}
      ?}
   |? _b='K'
   || LANG_SIK.prefix(GR_KOL.name(),#GR_KOL.ref());
      {? LANG_SIK.first()
      || _t+=GR_SIK.SKROT+_d+$GR_KOL.LP+_d;
         {!
         |? fwrite(_c,_t+LANG_SIK.SLO().KOD+_d+LANG_SIK.NAZWA+_d);
            LANG_SIK.next()
         !}
      ?}
   |? _b='W'
   || LANG_SIK.prefix(DEFW.name(),#DEFW.ref());
      {? LANG_SIK.first()
      || _t+=GR_SIK.SKROT+_d+$DEFW.KOD+_d;
         {!
         |? fwrite(_c,_t+LANG_SIK.SLO().KOD+_d+LANG_SIK.NAZWA+_d);
            LANG_SIK.next()
         !}
      ?}
   ?}
?}


\czy_algpar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [1902]
:: OPIS: Formuła pomocnicza do def_pop1 sprawdzająca, czy można edytować wartości ręcznie dla widocznych kolumn.
::   WE: [_a - numer kolejnej kolumny po WYRAZ.KOLUMNA]
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
GR_KOL.cntx_psh();
ALG_PAR.cntx_psh();
ALG_PAR.index('ALG_PAR1');
_liczba:=5;
{? GR_KOL.seek(WYRAZ.KOLUMNA)
|| _ii:=-1;
   {!
   |? _ii+=1;
      ALG_PAR.prefix(REF.FIRMA,DEFW.ref(), GR_KOL.ref(),SSTALE.AR().NAZ,);
      {? _=0
      || {? ~ALG_PAR.first()
         || _ok:=0
         || {? var_press('__pop1er')>0 || __pop1er[_ii+1]:=0 ?}
         ?}
      || {? _ii=_a & ~ALG_PAR.first() || _ok:=0 ?}
      ?};
      _ii+1<_liczba & GR_KOL.next()
   !}
?};
ALG_PAR.cntx_pop();
GR_KOL.cntx_pop();
_ok


\war_alg
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Formula do kolorowania o kodzie 'PARAM#WAR_PAR#01'
::   WE: _a - jakiego okresu dotycza aktualizowane dane
::  OLD: \war_alg/def_wsk.fml
::  OLD: \war_alg/!fks_ksp_zspr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ks2alg_par')>0 || return(0) ?};
PARAM.WAR_PAR:=0;
_ospr:=OKRESY.OKR_RAP;
OKRESY.OKR_RAP:=exec('ospr_fg','konsolidacja',OKRESY.OKR_RAP,'F',ALG_PAR.FIRMA);
W_ALGPAR.cntx_psh();
W_ALGPAR.use('walg_'+OKRESY.OKR_RAP().ROK().KOD);
W_ALGPAR.index('W_ALGPAR');
_typ:=OKRESY.OKR_RAP().TYP;
_mno:={? var_press('AlgMno')>0 || AlgMno |? ALG_PAR.WYL='T' || -1 || 1 ?};
{? _typ='M'
|| {? REF.FIRMAWYL
   || W_ALGPAR.prefix(ALG_PAR.ref,OKRESY.OKR_RAP,OPERATOR.DEPT,REF.FIRMAWYL)
   || W_ALGPAR.prefix(ALG_PAR.ref,OKRESY.OKR_RAP,OPERATOR.DEPT)
   ?};
   {? W_ALGPAR.first() || PARAM.WAR_PAR:=_mno*W_ALGPAR.WAR ?}
|| OSPR.index('OKRES2'); OSPR.prefix(ALG_PAR.FIRMA,'M',OKRESY.OKR_RAP().ROK,OKRESY.OKR_RAP().OKRES_OD().NR,OKRO_F.NR);
   {? OSPR.first || _b:=OSPR.ref() ?};
   OSPR.prefix(ALG_PAR.FIRMA,'M',OKRESY.OKR_RAP().ROK,OKRESY.OKR_RAP().OKRES_DO().NR,OKRO_F.NR);
   {? OSPR.first || _c:=OSPR.ref() ?};
   {? _b & _c
   || {? _a='K'
      || W_ALGPAR.prefix(ALG_PAR.ref,_c,OPERATOR.DEPT);
         {? W_ALGPAR.first() || PARAM.WAR_PAR:=_mno*W_ALGPAR.WAR ?}
      |? _a='P'
      || W_ALGPAR.prefix(ALG_PAR.ref,_b,OPERATOR.DEPT);
         {? W_ALGPAR.first() || PARAM.WAR_PAR:=_mno*W_ALGPAR.WAR ?}
      |? _a='Z'
      || W_ALGPAR.prefix(ALG_PAR.ref,_b,OPERATOR.DEPT);
         {? W_ALGPAR.first() || PARAM.WAR_PAR:=_mno*W_ALGPAR.WAR ?};
         W_ALGPAR.prefix(ALG_PAR.ref,_c,OPERATOR.DEPT);
         {? W_ALGPAR.first() || PARAM.WAR_PAR-=_mno*W_ALGPAR.WAR ?}
      |? _a='S'
      || OSPR.index('OKRES2'); OSPR.prefix(ALG_PAR.FIRMA,'M',OKRESY.OKR_RAP().ROK);
         _do:=OKRESY.OKR_RAP().OKRES_DO().NR;
         {? OSPR.find_key(OKRESY.OKR_RAP().OKRES_OD().NR)
         || {!
            |? W_ALGPAR.prefix(ALG_PAR.ref,OSPR.ref,OPERATOR.DEPT);
               {? W_ALGPAR.first() || PARAM.WAR_PAR+=_mno*W_ALGPAR.WAR ?};
               OSPR.OKRES_DO().NR<_do & OSPR.next()
            !}
         ?}
      ?}
   ?}
?};
W_ALGPAR.cntx_pop();
OKRESY.OKR_RAP:=_ospr;
{? cur_win='PAR_PLAN'
|| PARAM.WAR_PAR
|| PARAM.WAR_PAR<>0
?}


\bd_suma_algw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [1902]
:: OPIS: Przed wyswietl Oblicza podsumowanie wartosci algorytmow wiersza w polu wartosc wskaznika
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab()=ALG_PAR & cur_win()='PAR_PLAN' & cur_afld()='KW1'
|| {? f_usr_changed()
   || ALG_PAR.cntx_psh();
      PARAM.KW1:=0;
      {? ALG_PAR.f_active()
      || {? ALG_PAR.f_first()
         || {! |?
            PARAM.KW1+=exec('war_alg','sprfin',DEFW.DOKRES);
            ALG_PAR.f_next()
            !}
         ?}
      || WARTOSCI.cntx_psh(); W_ALGPAR.cntx_psh();
         WYRAZ.WIERSZ:=DEFW.ref();
         _rok:=OKRESY.OKR_RAP().ROK().KOD;
         WARTOSCI.use('wsik_'+_rok);
         W_ALGPAR.use('walg_'+_rok);
         WARTOSCI.index('OKRES');
         WARTOSCI.prefix(OKRESY.OKR_RAP,REF.WYKON,DEFW.ref(),GR_KOL.ref(),{? SSTALE.WARIANT<99 || OPERATOR.DEPT || ODD_PLAN ?});
         PARAM.KW1:={? WARTOSCI.first || WARTOSCI.WARTOSC || 0 ?};
         W_ALGPAR.cntx_pop(); WARTOSCI.cntx_pop()
      ?};
      ALG_PAR.cntx_pop()
   || {? ~ALG_PAR.f_active()
      || WARTOSCI.cntx_psh(); W_ALGPAR.cntx_psh();
         WYRAZ.WIERSZ:=DEFW.ref();
         _rok:=OKRESY.OKR_RAP().ROK().KOD;
         WARTOSCI.use('wsik_'+_rok);
         W_ALGPAR.use('walg_'+_rok);
         WARTOSCI.index('OKRES');
         WARTOSCI.prefix(OKRESY.OKR_RAP,REF.WYKON,DEFW.ref(),GR_KOL.ref(),{? SSTALE.WARIANT<99 || OPERATOR.DEPT || ODD_PLAN ?});
         PARAM.KW1:={? WARTOSCI.first || WARTOSCI.WARTOSC || 0 ?};
         W_ALGPAR.cntx_pop(); WARTOSCI.cntx_pop()
      || ALG_PAR.cntx_psh();
         PARAM.KW1:=0;
         {? ALG_PAR.f_first()
         || {! |?
            PARAM.KW1+=exec('war_alg','sprfin',DEFW.DOKRES);
            ALG_PAR.f_next()
            !}
         ?};
         ALG_PAR.cntx_pop()
      ?}
   ?}
?}


\add_alg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodanie algorytmu
::   WE: _a - formuła dodająca
::----------------------------------------------------------------------------------------------------------------------
_fml:='exec(''bo'',''!fks_ksp_deat'')';
_a('BO','Bilans otwarcia na początek roku - persaldo',_fml);
_a('_BO','Bilans otwarcia KONTA na początek roku - persaldo',_fml);
_a('^ABO','Bilans otwarcia ANALITYKI na początek roku - persaldo',_fml);
_a('^BO','Bilans otwarcia WYROŻNIKA na początek roku - persaldo',_fml);
_fml:='exec(''bo2'',''!fks_ksp_deat'')';
_a('BO2','Bilans otwarcia na początek roku - saldo "rozwarte"',_fml);
_a('_BO2','Bilans otwarcia KONTA na początek roku - saldo "rozwarte"',_fml);
_a('^ABO2','Bilans otwarcia ANALITYKI na pocz. roku - saldo "rozwarte"',_fml);
_a('^BO2','Bilans otwarcia WYROŻNIKA na pocz. roku - saldo "rozwarte"',_fml);
_fml:='exec(''persaldo'',''!fks_ksp_deat'')';
_a('PERSALDO','perSaldo na koniec okresu obrachunkowego (od początku roku obrotowego)',_fml);
_a('_PERSALD','perSaldo KONTA na kon. okresu obrachunkowego (od pocz. roku)',_fml);
_a('^PERSALD','perSaldo WYROŻNIKA na kon. okresu obrachun. (od pocz. roku)',_fml);
_a('^APERSAL','perSaldo ANALITYKI na koniec okresu obrach. (od pocz. roku)',_fml);
_fml:='exec(''obroty'',''!fks_ksp_deat'')';
_a('OBROTY','Obroty narastająco od początku roku obrotowego z BO',_fml);
_a('_OBROTY','Obroty KONTA narastająco od początku roku obrotowego z BO',_fml);
_a('^OBROTY','Obroty WYRÓŻNIKA narastająco od pocz. roku obrotowego z BO',_fml);
_a('^AOBROT','Obroty ANALITYKI narastająco od pocz. roku obrotowego z BO',_fml);
_fml:='exec(''obroty1'',''!fks_ksp_deat'')';
_a('OBROTY1','Obroty (bez BZ) narastająco od początku roku obrotowego',_fml);
_a('_OBROTY1','Obroty KONTA (bez BZ) narastająco od pocz. roku obrotowego',_fml);
_a('^OBROTY1','Obroty WYROŻNIKA (bez BZ) narastająco od pocz. roku obrot.',_fml);
_a('^AOBROT1','Obroty ANALITYKI (bez BZ) narastająco od pocz. roku obrot.',_fml);
_fml:='exec(''obroty_b'',''!fks_ksp_deat'')';
_a('OBROTY_B','Obroty narastająco od początku roku bez bilansu otwarcia',_fml);
_a('_OBROTYB','Obroty KONTA narastająco od pocz. roku bez bilansu otwarcia',_fml);
_a('^OBROTYB','Obroty WYRÓŻNIKA narastająco od pocz. roku bez bilansu otw.',_fml);
_a('^AOBROTB','Obroty ANALITYKI narastająco od pocz. roku bez bilansu otw.',_fml);
_fml:='exec(''obroty_o'',''!fks_ksp_deat'')';
_a('OBROTY_O','Obroty w okresie raportowania',_fml);
_a('_OBROTYO','Obroty KONTA w okresie raportowania',_fml);
_a('^OBROTYO','Obroty WYRÓŻNIKA w okresie raportowania',_fml);
_a('^AOBROTO','Obroty ANALITYKI w okresie raportowania',_fml);
_fml:='exec(''obrot_o1'',''!fks_ksp_deat'')';
_a('OBROT_O1','Obroty (bez BZ) w okresie raportowania',_fml);
_a('_OBROT_1','Obroty KONTA (bez BZ) w okresie raportowania',_fml);
_a('^OBROT_1','Obroty WYRÓZNIKA (bez BZ) w okresie raportowania',_fml);
_a('^AOBRO_1','Obroty ANALITYKI (bez BZ) w okresie raportowania',_fml);
_fml:='exec(''roznicao'',''!fks_ksp_deat'')';
_a('ROZNICAO','Różnica obrotów w okresie obrachunkowym',_fml);
_a('_ROZNICO','Różnica obrotów KONTA w okresie obrachunkowym',_fml);
_a('^ROZNICO','Różnica obrotów WYRÓŻNIKA w okresie obrachunkowym',_fml);
_a('^AROZNIO','Różnica obrotów ANALITYKI w okresie obrachunkowym',_fml);
_fml:='exec(''roznica'',''!fks_ksp_deat'')';
_a('ROZNICA','Różnica obrotów narastająco od początku roku obrotowego',_fml);
_a('_ROZNICA','Różnica obrotów KONTA narastająco od pocz. roku obr.',_fml);
_a('^ROZNICA','Różnica obrotów WYRÓŻNIKA narastająco od pocz. roku obr.',_fml);
_a('^AROZNI','Różnica obrotów ANALITYKI narastająco od pocz. roku obr.',_fml);
_fml:='exec(''roznico1'',''!fks_ksp_deat'')';
_a('ROZNICO1','Różnica obrotów (bez BZ) w okresie obrachunkowym',_fml);
_a('_ROZNIC_1','Różnica obrotów KONTA (bez BZ) w okresie obrachunkowym',_fml);
_a('^ROZNIC_1','Różnica obrotów WYRÓŻNIKA (bez BZ) w okresie obrachunkowym',_fml);
_a('^AROZNI1','Różnica obrotów ANALITYKI (bez BZ) w okresie obrachunkowym',_fml);
_fml:='exec(''roznica1'',''!fks_ksp_deat'')';
_a('ROZNICA1','Różnica obrotów narastająco (bez BZ) od początku roku obrotowego',_fml);
_a('_ROZNICB','Różnica obrotów KONTA narastająco (bez BZ) od pocz. roku obr.',_fml);
_a('^ROZNICB','Różnica obrotów WYRÓŻNIKA narastająco (bez BZ) od pocz. roku obr.',_fml);
_a('^AROZNIB','Różnica obrotów ANALITYKI narastająco (bez BZ) od pocz. roku obr.',_fml);
_fml:='exec(''saldo1'',''!fks_ksp_deat'')';
_a('SALDO1','Saldo (bez BZ) na koniec okresu obrachunkowego (od początku roku obrotowego)',_fml);
_a('_SALDO1','Saldo KONTA (bez BZ) na kon. okresu obrach. (od pocz. roku)',_fml);
_a('^SALDO1','Saldo WYRÓŻNIKA (bez BZ) na kon. okr. obrach. (od pocz. roku)',_fml);
_a('^ASALDO1','Saldo ANALITYKI (bez BZ) na kon. okr. obr. (od pocz. roku)',_fml);
_fml:='exec(''saldo2'',''!fks_ksp_deat'')';
_a('SALDO2','Saldo "rozwarte" na koniec okresu obrachunkowego (od początku roku obrotowego)',_fml);
_a('_SALDO2','Saldo "rozwarte" KONTA na kon. okresu obrach.(od pocz. roku)',_fml);
_a('^SALDO2','Saldo "rozwarte" WYRÓŻNIKA na kon. okr. obrach.(od pocz. roku)',_fml);
_a('^ASALDO2','Saldo "rozwarte" ANALITYKI na kon. okr. obr.(od pocz. roku)',_fml);
::Poczatek modyfikacji dla Maclex Fiks 12-10-2009 AK [1120]
_fml:='exec(''psalbpg'',''!fks_ksp_deat'')';
_a('PSALBPG','Saldo na koniec okresu raportowania - paragrafy',_fml);
_a('_PSALBPG','perSaldo PARAGRAFY na kon. okresu obrach. (od pocz. roku)',_fml);
_fml:='exec(''obrbpg'',''!fks_ksp_deat'')';
_a('OBRBPG','Obroty narastająco od początku roku obrotowego z BO-paragraf',_fml);
_a('_OBRBPG','Obroty PARAGRAFY nar. od początku roku obrotowego z BO',_fml);
_fml:='exec(''psalb_mlgr'',''!fks_ksp_deat'')';
_a('PSALBML','Saldo na koniec okresu raportowania-HIERARCHIA',_fml);
_a('_PSALBML','perSaldo na kon. okresu obrach.(od pocz. roku)-HIERARCHIA',_fml);
_fml:='exec(''obrb_mlgr'',''!fks_ksp_deat'')';
_a('OBRBML','Obroty narastająco od początku roku obrotowego z BO-HIERARCHIA',_fml);
_a('_OBRBML','Obroty nar. od początku roku obrotowego z BO-HIERARCHIA',_fml);
_fml:='exec(''obrbm_mlgr'',''!fks_ksp_deat'')';
_a('OBRBML2','Obroty miesiąca - HIERARCHIA',_fml);
_a('_OBRBML2','Obroty miesiąca - HIERARCHIA',_fml);
_fml:='exec(''obrbpg2'',''!fks_ksp_deat'')';
_a('_OBRBPG2','Obroty PARAGRAFY z aktualnego okresu',_fml);
_a('OBRBPG2','Obroty PARAGRAFY z aktualnego okresu',_fml);
_fml:='exec(''msdb'',''!fks_ksp_deat'')';
_a('MSDB','Dane do MSDB z systemu Kadry i Płace',_fml);
_a('_MSDB','Dane do MSDB z systemu Kadry i Płace',_fml);
_fml:='exec(''planz'',''!fks_ksp_deat'')';
_a('PLANZ','Dane do rb-70, plan zatrudnienia',_fml);
_a('_PLANZ','Dane do rb-70, plan zatrudnienia',_fml);
_fml:='exec(''planw'',''!fks_ksp_deat'')';
_a('PLANW','Dane do rb-70, plan wynagrodzenia',_fml);
_a('_PLANW','Dane do rb-70, plan wynagrodzenia',_fml);
_fml:='exec(''ml_sum'',''!fks_ksp_deat'')';
_a('ML_SUM','Obliczenie sumy kolumn w wierszu sprawozdania',_fml);
_a('ML_RBNZ','Należności/Zobowiązania do RB-N,Z','exec(''ml_rbnz'',''!fks_ksp_deat'')');
_a('ML_RBNZR','Nal/Zob do RB-N,Z rozwarte','exec(''ml_rbnzr'',''!fks_ksp_deat'')');
_a('ML_RBRN','Nal/Zob do RB-N,Z rozwarte nie rozliczone','exec(''ml_rbrn'',''!fks_ksp_deat'')');
_fml:='exec(''ml_rbwnal_zob'',''!fks_ksp_deat'')';
_a('ML_NZWZ','Nal/Zob wymag.(sal.zwarte) PARAGRAFY na koniec bież. okresu',_fml);
_a('_ML_NZWZ','Nal/Zob wymag.(sal.zwarte) PARAGRAFY na koniec bież. okresu',_fml);
_fml:='exec(''ml_rbpnal_zob'',''!fks_ksp_deat'')';
_a('ML_NZPZ','Nal/Zob wymag.(sal.zwarte) PARAGRAFY na koniec poprz. roku',_fml);
_a('_ML_NZPZ','Nal/Zob wymag.(sal.zwarte) PARAGRAFY na koniec poprz. roku',_fml);
_fml:='exec(''ml_rbnnal_zob_r'',''!fks_ksp_deat'')';
_a('ML_NZNR','Nal/Zob niewymag.(s.rozzwarte) PARAGRAFY na koniec bież. okresu',_fml);
_a('_ML_NZNR','Nal/Zob niewymag.(s.rozzwarte) PARAGRAFY na koniec bież. okresu',_fml);
_fml:='exec(''ml_rb_nal_zob_r'',''!fks_ksp_deat'')';
_a('ML_NZ_R','Nal/Zob wszystkie.(s.rozzwarte) PARAGRAFY na koniec bież. okresu',_fml);
_a('_ML_NZ_R','Nal/Zob wszystkie.(s.rozzwarte) PARAGRAFY na koniec bież. okresu',_fml);
_fml:='exec(''ml_rbwnal_zob_r'',''!fks_ksp_deat'')';
_a('ML_NZWR','Nal/Zob wymag.(s.rozzwarte) PARAGRAFY na koniec bież. okresu',_fml);
_a('_ML_NZWR','Nal/Zob wymag.(s.rozzwarte) PARAGRAFY na koniec bież. okresu',_fml);
_a('_BZPLAN','Plan wydatków/kosztów w budżecie zadaniowym','exec(''bzplan'',''!fks_ksp_deat'')');
_a('_ML_NZH','Nal/Zob niewymag.(s.zwarte) na koniec bież. okresu (HIERARCHIA)','exec(''ml_nal_zob_h'',''!fks_ksp_deat'')');
::Koniec modyfikacji dla MacLex Fiks
_a('DL_NALEZ','Należności długoterminowe (termin płatności powyżej 1 roku)','exec(''dl_nalez'',''!fks_ksp_deat'')');
_a('DL_ZOBOW','Zobowiązania długoterminowe (termin płatnośvi powyżej 1 roku)','exec(''dl_zobow'',''!fks_ksp_deat'')');
_a('R_ROZNIC','Wiekowanie dla sumy różnic obrotów rozrachunków na kon. okr.','exec(''r_obroty'',''!fks_ksp_deat'')');
_a('R_SALDO','Wiekowanie dla sumy sald rozrachunków na koniec okresu','exec(''r_saldo'',''!fks_ksp_deat'')');
_a('VAT-N-22','wartość netto - wg stawki 22% - aktualny okres obrachunkowy','exec(''vat_sik'',''!fks_ksp_deat'',''22'',''N'')');
_a('VAT-N-17','wartość netto - wg stawki 17% - aktualny okres obrachunkowy','exec(''vat_sik'',''!fks_ksp_deat'',''17'',''N'')');
_a('VAT-N-12','wartość netto - wg stawki 12% - aktualny okres obrachunkowy','exec(''vat_sik'',''!fks_ksp_deat'',''12'',''N'')');
_a('VAT-N-07','wartość netto - wg stawki 7% - aktualny okres obrachunkowy','exec(''vat_sik'',''!fks_ksp_deat'','' 7'',''N'')');
_a('VAT-N-03','wartość netto - wg stawki 3% - aktualny okres obrachunkowy','exec(''vat_sik'',''!fks_ksp_deat'','' 3'',''N'')');
_a('VAT-N-00','wartość netto - wg stawki 0% - aktualny okres obrachunkowy','exec(''vat_sik'',''!fks_ksp_deat'','' 0'',''N'')');
_a('VAT-N-IN','wartość netto  wg stawek <> 22%, 7%, 0% ,ZW) - aktualny okres obrachunkowy ','exec(''vat1_sik'',''!fks_ksp_deat'',''22, 7, 0,ZW'',''N'')');
_a('VAT-N-ZW','wartość netto zwolniona z VAT - aktualny okres obrachunkowy','exec(''vat_sik'',''!fks_ksp_deat'',''ZW'',''N'')');
_a('VAT-V-22','podatek VAT - wg stawki 22% - aktualny okres obrachunkowy','exec(''vat_sik'',''!fks_ksp_deat'',''22'',''V'')');
_a('VAT-V-17','podatek VAT - wg stawki 17% - aktualny okres obrachunkowy','exec(''vat_sik'',''!fks_ksp_deat'',''17'',''V'')');
_a('VAT-V-12','podatek VAT - wg stawki 12% - aktualny okres obrachunkowy','exec(''vat_sik'',''!fks_ksp_deat'',''12'',''V'')');
_a('VAT-V-07','podatek VAT - wg stawki 7% - aktualny okres obrachunkowy','exec(''vat_sik'',''!fks_ksp_deat'','' 7'',''V'')');
_a('VAT-V-03','podatek VAT - wg stawki 3% - aktualny okres obrachunkowy','exec(''vat_sik'',''!fks_ksp_deat'','' 3'',''V'')');
_a('VAT-V-IN','podatek VAT - (stawki <> 22,7%) - aktualny okres obrachunkowy','exec(''vat1_sik'',''!fks_ksp_deat'',''22, 7'',''V'')');
_a('VAN-N-22','wartość netto - wg stawki 22% - narastająco od początku roku','exec(''vatn_sik'',''!fks_ksp_deat'',''22'',''N'')');
_a('VAN-N-17','wartość netto - wg stawki 17% - narastająco od początku roku','exec(''vatn_sik'',''!fks_ksp_deat'',''17'',''N'')');
_a('VAN-N-12','wartość netto - wg stawki 12% - narastająco od początku roku','exec(''vatn_sik'',''!fks_ksp_deat'',''12'',''N'')');
_a('VAN-N-07','wartość netto - wg stawki 7% - narastająco od początku roku','exec(''vatn_sik'',''!fks_ksp_deat'','' 7'',''N'')');
_a('VAN-N-03','wartość netto - wg stawki 3% - narastająco od początku roku','exec(''vatn_sik'',''!fks_ksp_deat'','' 3'',''N'')');
_a('VAN-N-0K','wartość netto - wg stawki 0% - narastająco od początku roku','exec(''vatn_sik'',''!fks_ksp_deat'','' 0'',''N'')');
_a('VAN-N-IN','wartość netto  wg stawek <> 22%, 7%, 0% ,ZW) - narastająco od początku roku ','exec(''vatn1_sik'',''!fks_ksp_deat'',''22, 7, 0,ZW'',''N'')');
_a('VAN-N-ZW','wartość netto zwolniona z VAT - narastająco od początku roku','exec(''vatn_sik'',''!fks_ksp_deat'',''ZW'',''N'')');
_a('VAN-V-22','podatek VAT - wg stawki 22% - narastająco od początku roku','exec(''vatn_sik'',''!fks_ksp_deat'',''22'',''V'')');
_a('VAN-V-17','podatek VAT - wg stawki 17% - narastająco od początku roku','exec(''vatn_sik'',''!fks_ksp_deat'',''17'',''V'')');
_a('VAN-V-12','podatek VAT - wg stawki 12% - narastająco od początku roku','exec(''vatn_sik'',''!fks_ksp_deat'',''12'',''V'')');
_a('VAN-V-07','podatek VAT - wg stawki 7% - narastająco od początku roku','exec(''vatn_sik'',''!fks_ksp_deat'','' 7'',''V'')');
_a('VAN-V-03','podatek VAT - wg stawki 3% - narastająco od początku roku','exec(''vatn_sik'',''!fks_ksp_deat'','' 3'',''V'')');
_a('VAN-V-IN','podatek VAT - (stawki <> 22,7%) - narastająco od początku roku','exec(''vatn1_sik'',''!fks_ksp_deat'',''22, 7'',''V'')');
_a('%POD.DOC','stawka podatku dochodowego od osób prawnych','exec(''podatek'',''!fks_ksp_deat'')');
_a('WYNIKF','zysk/strata liczona na podstawie sald kont wynikowych','exec(''wynikf'',''!fks_ksp_deat'')');
_fml:='exec(''zm_stan'',''!fks_ksp_deat'')';
_a('ZM_STAN','Zmiana stanu (BO-BZ)',_fml);
_a('_ZM_STAN','Zmiana stanu KONTA (BO-BZ)',_fml);
_a('^ZM_STAN','Zmiana stanu WYRÓŻNIKA (BO-BZ)',_fml);
_a('^AZM_STA','Zmiana stanu ANALITYKI (BO-BZ)',_fml)


\spr_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.02]
:: OPIS: Formuła sprawdzająca, czy suma dla jednostek księgowych różni się od wartości dla wszystkich
::       jednostek księgowych.
::   WE: [_a] - Zmienna pomocnicza z aktualną wartością.
::       [_b] - odwołanie do kolumny sprawozdania.
::----------------------------------------------------------------------------------------------------------------------
_ok:=0; _suma_odd:=0; _odd:=OPERATOR.DEPT;
ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? ODD.first()
|| {!
   |? OPERATOR.DEPT:=ODD.ref();
      _suma_odd+=exec('wartosc','sprfin',OKRESY.OKR_RAP,DEFW.ref,_b);
      ODD.next()
   !}
?};
ODD.cntx_pop();
OPERATOR.DEPT:=_odd;

WARTOSCI.cntx_psh();
WARTOSCI.index('OKRES'); WARTOSCI.prefix(OKRESY.OKR_RAP,REF.WYKON,DEFW.ref(),_b,null);
{? WARTOSCI.first() || {? WARTOSCI.WARTOSC<>_suma_odd || _ok:=1 ?} || {? _suma_odd<>0 || _ok:=1 ?} ?};
WARTOSCI.cntx_pop();


{? _ok & wys_ask
|| {? FUN.choice('Suma dla jednostek księgowych różni się od wartości dla wszystkich '
                 'jednostek księgowych!\nCzy uaktualnić wartość dla wszystkich '
                 'jednostek księgowych?'@,1,'Tak'@,,,,'Nie'@)
   || odp_ask:=1; wys_ask:=0
   || wys_ask:=0
   ?}
?};
{? ~odp_ask || _ok:=0 ?};
{? _ok
|| SIK.CZAS:=time(); SIK.DATA_A:=date();
   exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref(),GR_KOL.ref(),null,
        'R',_suma_odd,((_suma_odd/DEFW.ZAOKR)$DEFW.DOKL))
?};
_ok


\czy_defa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.02]
:: OPIS: Formuła pomocnicza sprawdzająca, czy można edytować wartości ręcznie dla widocznych kolumn.
::   WE: [_a - numer kolejnej kolumny po WYRAZ.KOLUMNA]
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
GR_KOL.cntx_psh();
DEFA.cntx_psh();
DEFA.index('LP');
_liczba:=5;
{? GR_KOL.seek(WYRAZ.KOLUMNA)
|| _ii:=-1;
   {!
   |? _ii+=1;
      DEFA.prefix(DEFW.ref(), GR_KOL.ref());
      {? _=0
      || {? ~DEFA.first()
         || _ok:=0
         || {? var_press('__pop1er')>0 || __pop1er[_ii+1]:=0 ?}
         ?}
      || {? _ii=_a & ~DEFA.first() || _ok:=0 ?}
      ?};
      _ii+1<_liczba & GR_KOL.next()
   !}
?};
DEFA.cntx_pop();
GR_KOL.cntx_pop();
_ok


\czy_grkol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.02]
:: OPIS: Formuła pomocnicza sprawdzająca, czy można edytować wartości ręcznie dla widocznych kolumn.
::   WE: [_a - numer kolejnej kolumny po WYRAZ.KOLUMNA]
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
GR_KOL.cntx_psh();
_liczba:=5;
{? GR_KOL.seek(WYRAZ.KOLUMNA)
|| _ii:=-1;
   {!
   |? _ii+=1;
      {? _=0
      || {? GR_KOL.ALGORYTM='F'
         || _ok:=0
         || {? var_press('__pop1er')>0 || __pop1er[_ii+1]:=0 ?}
         ?}
      || {? _ii=_a & GR_KOL.ALGORYTM='F' || _ok:=0 ?}
      ?};
      _ii+1<_liczba & GR_KOL.next()
   !}
?};
GR_KOL.cntx_pop();
_ok


\bv_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.02]
:: OPIS: Formuła na wyświetl SIK.WAR kolorująca redagowalne.
::   WY: _a - numer kolejnej kolumny po WYRAZ.KOLUMNA
::----------------------------------------------------------------------------------------------------------------------
{? (DEFW.ALGORYTM<>'P' & exec('pr_sw','!fks_ksp_dred',_a))
|| exec('rekprzed','color','DEFW#01#02')
|| ''
?}


\set_defw_uid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [22.26]
:: OPIS: Znajduję DEFW.UID dla bieżącego rekordu
::   WY: UID
::----------------------------------------------------------------------------------------------------------------------
_uid:=(8+DEFW.GRUPA().UID)+' '+DEFW.KOD;
_nr:=1;
DEFW.cntx_psh();
DEFW.index('UID');
DEFW.prefix();
{!
|? {? DEFW.find_key(_uid)
   || _uid:=(12+_uid)+(('0000'+$_nr)+4);
      _nr+=1;
      1
   ?}
!};
DEFW.cntx_pop();
_uid

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 a69a02c82376014878d9cd9e0876127c90a0788e7e078e0f217862c3cb5437009557282e7528cbadb0f2166883c8b2561c563a2774523dfd230664da7bc380c78ac054ec33dccece457e86a66df71c90fb0c3c3d7a26f8d220fe11425adceab91c8f6256782060df6d86794ad94686d4a49dae763674c75af1860a4cc8c292f2
