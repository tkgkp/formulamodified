:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zpr.fml
:: Utworzony: 20.11.2014
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Formuły oraz wywoływacze obszaru ZPR
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła inicjująca dla obszaru ZPR
::----------------------------------------------------------------------------------------------------------------------
exec('JCQ_decl','#message');
{? var_pres('KOMM')<100 || KOMM:=obj_new(@.CLASS.JCQ) ?};
~~


\zpr_proces
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Główna formuła wywoływacza ZPR_PRO - Obsługa procesów
::----------------------------------------------------------------------------------------------------------------------
:: Pytanie o adres e-mail jeżeli użytkownik jest administratorem
exec('admin_ask_mail','users');

VAR_DEL.delete('MOD_ENV');
KOMM.init(250,,'Import obszarów i czynności'@);
_modeler:=exec('env','zpr');
MOD_ENV:=_modeler;
_modeler.load();
params_set('env',_modeler);
_modeler.select();
VAR_DEL.delete('MOD_ENV');
~~


\env
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Srodowisko do obslugi modelera
::   WY: obj_new - tablica nazwana zawierajaca wszystko co potrzebne
::----------------------------------------------------------------------------------------------------------------------
::UWAGA: _fld, i _mth to formulki pomocnicze, zeby wygodniej tworzyc tablice i komentowac poszczegolne jej elementy
::       powiedzmy, ze to bedzie pole
         _fld:="31+form(_a)";
::       powiedzmy, ze to bedzie metoda
         _mth:="31+form(_a)";

_env:=obj_new( _fld('MODE','Tryb wyswietlania okna: MBASE,JAVA')
               ,_fld('SEL_PROC','Zaznaczony proces')
               ,_fld('KOMM_PROC','Zaznaczony proces')
               ,_fld('ZAKRES','Tryb wyświetlania procesów (wszystkie,aktywne,nieaktywne)')
               ,_fld('MY_PROC','Tryb wyświetlania procesów (wszystkie,moje)')
               ,_fld('ONLY_OWNER','Dostęp jedynie do własnych procesów')
               ,_fld('GRP_ACT','Czy akcja grupowa dla procesów')
               ,_fld('GRUPA','Czy akcja grupowa dla czynności')
               ,_fld('NR_ROOT','Numer root-a komunikatów')

::             identyfikatory okienek
               ,_fld('wid_main' ,'ID okienka glownego')
               ,_fld('wid_proc' ,'ID okienka z procesami')
               ,_fld('wid_act'  ,'ID okienka z czynnosciami')
               ,_fld('wid_btn'  ,'ID okienka z klawiszami')
               ,_fld('wid_port' ,'ID okienek z portami')

::             tytuly okienek
               ,_fld('tit_main' ,'Tytul okienka glownego')
               ,_fld('tit_proc' ,'Tytul okienka z procesami')
               ,_fld('tit_act'  ,'Tytul okienka z czynnosciami')
               ,_fld('tit_btn'  ,'Tytul okienka z klawiszami')
               ,_fld('tit_port' ,'Tytuly okienek z portami')

::             tabele tymczasowe
               ,_fld('TAB_PROC' ,'Tabela tymczasowa zawierająca drzewo procesu')
               ,_fld('TAB_ACT'  ,'Tabela tymczasowa zawierająca drzewo czynnosci')
               ,_fld('TAB_SQL'  ,'Tabela roznic w definicjach procesow, czynnosci')

::             indeksy tymczasowych tabel
               ,_fld('IN_PROC1' ,'Indeks tabeli procesow')
               ,_fld('IN_PROC2' ,'Indeks tabeli procesow')
               ,_fld('IN_ACT1'  ,'Indeks tabeli czynnosci')

::             uchwyty do okien
               ,_fld('WIN_MAIN' ,'Glowne okno grupowe')
               ,_fld('WIN_PROC' ,'Okno z procesami')
               ,_fld('WIN_ACT'  ,'Okno z czynnosciami')

::             uchwyty do przycisków
               ,_fld('BTN_IMPORT','Przycisk `Aktualizuj` w oknie wywoływacza')
               ,_fld('BTN_CONFIG','Przycisk `Konfiguruj` w oknie wywoływacza')
               ,_fld('BTN_MODELER'  ,'Przycisk `Modeler` w oknie wywoływacza')
               ,_fld('BTN_INSTANCJE','Przycisk `Instancje` w oknie wywoływacza')
               ,_fld('BTN_PARAMETRY','Przycisk `Parametry` w oknie wywoływacza')
               ,_fld('BTN_PERM','Przycisk `Uprawnienia` w oknie wywoływacza')
               ,_fld('BTN_INSTACT','Przycisk `Instancje` w oknie wywoływacza (panel czynności)')
               ,_fld('BTN_HIST_UPR','Przycisk `Historia uprawnień` w oknie wywoływacza')
               ,_fld('BTN_PORTAL','Przycisk `HR Portal`')

::             METODY
               ,_mth('select'       ,'Wyswietla designera')
               ,_mth('load'         ,'Laduje zawartosc designera, tworzy struktury')
               ,_mth('refreash'     ,'Odswierza zawartosc okienek')
               ,_mth('clear'        ,'Czysci informacje o roznicach')
               );
_env.SEL_PROC:=null();
_env.KOMM_PROC:=null();
_env.ZAKRES:='A';
_env.MY_PROC:='N';
_env.GRP_ACT:=0;
_env.NR_ROOT:=0;

{? exec('chk_role','#b__box',OPERATOR.USER,'ZPR_PRO_MODE')
|| _env.ONLY_OWNER:=0
||
   {? exec('chk_role','#b__box',OPERATOR.USER,'ZPR_PRO_MODW')
   || _env.ONLY_OWNER:=1;
      BPMN.MY_PROC:='T'
   || _env.ONLY_OWNER:=0
   ?}
?};

B_PROC.fld_fml('OWNER','BEFORE_EDIT',"
   exec('chk_role','#b__box',OPERATOR.USER,'ZPR_PRO_MODE')
");

_env.wid_main:='#m_design_main';
_env.wid_proc:='#m_design_proc';
_env.wid_act:='#m_design_act';
_env.wid_btn:='#m_design_btn';
_env.wid_port:=obj_new('IN','INTERNAL','OUT');
_env.wid_port.IN:='#m_design_port1';
_env.wid_port.INTERNAL:='#m_design_port2';
_env.wid_port.OUT:='#m_design_port3';

:: Tytuł głównego okna ustawiany przez obiekt AreaTitle
_env.tit_main:='';
_env.tit_proc:='Dostępne procesy wg firm'@;
_env.tit_act:='Dostępne czynności'@;
_env.tit_btn:='';
_env.tit_port:=obj_new('IN','INTERNAL','OUT');
_env.tit_port.IN:='Parametry %1'@[exec('opis_in','#b_port').MM];
_env.tit_port.INTERNAL:='Parametry %1'@[exec('opis_internal','#b_port').MM];
_env.tit_port.OUT:='Parametry %1'@[exec('opis_out','#b_port').MM];

_env.WIN_MAIN:='';
_env.WIN_PROC:='';
_env.WIN_ACT:='';
_env.TAB_SQL:=tab_tmp(1,'SQL','STRING[16]','ref SQL'
               ,'ACT','STRING[1]','akcja');

_env.BTN_IMPORT:='';
_env.BTN_MODELER:='';
_env.BTN_INSTANCJE:='';
_env.BTN_PARAMETRY:='';
_env.BTN_PERM:='';
_env.BTN_INSTACT:='';
_env.BTN_HIST_UPR:='';

_env.select:="

      params_set(params_get());
      B_PROC.cntx_psh();

      {? .ONLY_OWNER
      || B_PROC.index('AKTOWNER');
         B_PROC.prefix(OPERATOR.USER,'N','T',REF.FIRMA)
      || B_PROC.index('AKT');
         B_PROC.prefix('N','T',REF.FIRMA)
      ?};

::    Tworzymy okna do tabel tymczasowych
      .WIN_PROC:=exec('win_proc','zpr',.);
      .WIN_ACT:=exec('win_act','zpr',.);

::    Tworzymy okno glowne
      exec('grp_make','zpr',.);

::    Pokazujemy okno
      .TAB_PROC.select();

      B_PROC.cntx_pop();
      ~~
";

_env.load:="
::    Tworzymy tabele tymczasowe
      {? type_of(.TAB_PROC)=0 || .TAB_PROC:=exec('tab_proc','zpr',.) ?};
      {? type_of(.TAB_ACT)=0  || .TAB_ACT:=exec('tab_act','zpr',.)  ?};

::    Wypelniamy drzewo
      exec('load_proc','zpr',.);
      exec('load_act','zpr',.);
      ~~
";

_env.refreash:="
::    Wypelniamy drzewo
      exec('act_proc','zpr',.);
      exec('refreash','zpr',.);
      ~~
";

_env.clear:="
::    Czysci informacje o zmianach
      _tab:=.TAB_SQL;
      _tab.clear();
      {? _tab.first() || {! |? _tab.del() !} ?};
      ~~
";

_env


\tab_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Tworzy tabelke tymczasowa zawierajaca widok procesow wg firm
::   WE: _a - env - srodowisko designera - wynik dzialania exec('env','zpr')
::   WY: tab_tmp
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=tab_tmp( 2
               ,'PARENT'   ,'TREE_REF'    ,'Rodzic'
               ,'SYMBOL'   ,'STRING[100]' ,'Symbol'
               ,'NAZWA'    ,'STRING[80]'  ,'Nazwa'
               ,'ACCEPTED' ,'STRING[1]'   ,'Zaakceptowana - T-tak, N-nie'
               ,'SIZE'     ,'INTEGER'     ,'Ilość procesów'
               ,'B_PROC'   ,'STRING[16]'  ,'Ref SQL B_PROC'
               ,'FIRMA'    ,'STRING[4]'   ,'Symbol Firmy'
               );
_env.IN_PROC1:=_tab.ndx_tmp(,,'PARENT',,,'FIRMA',,);
_env.IN_PROC2:=_tab.ndx_tmp(,,'B_PROC',,);
_tab


\tab_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Tworzy tabelke tymczasowa zawierajaca widok czynnosci wg obszarow
::   WE: _a - env - srodowisko designera - wynik dzialania exec('env','zpr')
::   WY: tab_tmp
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=tab_tmp( 2
               ,'SYMBOL'   ,'STRING[50]'  ,'Symbol'@
               ,'NAZWA'    ,'STRING[30]'  ,'Nazwa'@
               ,'DOMAIN'   ,'STRING[30]'  ,'Dziedzina produktowa'@
               ,'PROC_RUN' ,'STRING[1]'   ,'Uruchamiana w procesie'@
               ,'AUTO_RUN' ,'STRING[1]'   ,'Czy uruchamiana automatycznie'@
               ,'SERVICE'  ,'STRING[1]'   ,'Czy uruchamiana jako usługa'@
               ,'USER'     ,'STRING[1]'   ,'Czy uruchamiana przez użytkownika'@
               ,'LOOP'     ,'STRING[1]'   ,'Czy uruchamiana w pętli'@
               ,'ICON'     ,'STRING[60]'  ,'Ikona'@
               ,'COLOR'    ,'STRING[23]'  ,'Kolor'@
               ,'SIZE'     ,'INTEGER'     ,'Liczba czynności w obszarze'@
               ,'B_ACT'    ,'STRING[16]'  ,'Ref SQL B_ACTION'
               ,'B_DOM'    ,'STRING[16]'  ,'Ref SQL B_DOMAIN'
               ,'B_CAN'    ,'STRING[1]'   ,'Kanał dostępu'@
               ,'FWTODO'   ,'STRING[255]' ,'Formuła wdrożeniowa na opis'@
               ,'WDR_DESC' ,'STRING[1]'   ,'Czy opis wdrożeniowy aktywny'@
               ,'RUNMICRO' ,'STRING[1]'   ,'Uruchamianie bez zadania'@
               ,'TAKEOVER' ,'STRING[1]'   ,'Przejmowanie zadania'@
               ,'PORTAL'   ,'STRING[1]'   ,'HR Portal'@
               ,'INTERM'   ,'STRING[1]'   ,'Czynność dostępna na Interm?'@
               ,'MOBILE'   ,'STRING[1]'   ,'Czynność dostępna w trybie mobilnym?'@
               ,'RELEASE'  ,'STRING[1]'   ,'Zwalnianie zadania'@
               ,'RUNNPROC' ,'STRING[1]'   ,'Uruchamianie bez menadżera procesów'@
               );
_tab.fld_fml('WDR_DESC','AFTER_EDIT',"params_exec('config_eopt','zpr')");
_tab.fld_fml('FWTODO','F3',"params_exec('fwtodo_f3','zpr')");

_tab.fld_attr('B_ACT',2);
_tab.fld_attr('B_DOM',2);
_tab


\load_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Laduje do designera procesy
::   WE: _a - env - srodowisko designera - wynik dzialania exec('env','zpr')
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=_env.TAB_PROC;

_tab.cntx_psh();
:: usuniecie starych zapisow
exec('del_tree_branch','#tree',_tab,'PARENT',,0);

FIRMA.cntx_psh();
B_PROC.cntx_psh();
FIRMA.index('SYMBOL');
FIRMA.prefix();
{? FIRMA.first()
|| {!
   |? B_PROC.index('FIRMA');
      B_PROC.prefix(FIRMA.ref(),'T');
      {? B_PROC.first()
      || _tab.clear();
         _tab.blank();
         _tab.PARENT:=0;
         _tab.SYMBOL:='FIRMA: '+FIRMA.SYMBOL;
         _tab.NAZWA:=FIRMA.OPIS;
         _tab.FIRMA:=FIRMA.SYMBOL;
         {? _tab.add(1)
         || _size:=0;
            _parent:=_tab.ref();
            _tab.cntx_psh();
            {!
            |? _tab.clear();
               _tab.blank();
               _tab.PARENT:=_parent;
               _tab.SYMBOL:=B_PROC.SYMBOL;
               _tab.NAZWA:=B_PROC.NAME;
               _tab.ACCEPTED:=B_PROC.ACCEPTED;
               _tab.B_PROC:=$B_PROC.ref();
               _tab.FIRMA:=FIRMA.SYMBOL;
               {? _tab.add(1) || _size+=1 ?};
               B_PROC.next()
            !};
            _tab.cntx_pop();
            _tab.SIZE:=_size;
            _tab.SYMBOL+=' ('+form(_size,,0,'99')+')';
            _tab.put(1)
          ?}
      ?};
      FIRMA.next()
   !}
?};
_tab.cntx_pop();
FIRMA.cntx_pop();
B_PROC.cntx_pop();
~~


\load_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Laduje do designera czynnosci
::   WE: _a - env - srodowisko designera - wynik dzialania exec('env','zpr')
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=_env.TAB_ACT;

_tab.cntx_psh();
:: usuniecie starych zapisow
{? _tab.first()
|| {!
   |? _tab.del(,1);
      _tab.first()
   !}
?};
FIRMA.cntx_psh();
_czapa:='N';
{? REF.FIRMA().TYP='C'
|| _czapa:='T'
?};

B_DOMAIN.cntx_psh();
B_ACTION.cntx_psh();
B_DOMAIN.index('SYMBOL');
B_DOMAIN.prefix();
{? B_DOMAIN.first()
|| {!
   |? {? _czapa='T'
      || B_ACTION.index('GRP_FIRM');
         B_ACTION.prefix(_czapa,'T',B_DOMAIN.ref())
      || B_ACTION.index('B_DOMAIN');
         B_ACTION.prefix('T',B_DOMAIN.ref())
      ?};

      {? B_ACTION.first()
      ||
         _tab.cntx_psh();
         {!
         |? _tab.clear();
            exec('tab_act_rek_fill','zpr',_tab);
            _tab.add(1);
            B_ACTION.next()
         !};
         _tab.cntx_pop();
         ~~
      ?};
      B_DOMAIN.next()
   !}
?};
_tab.cntx_pop();
B_DOMAIN.cntx_pop();
B_ACTION.cntx_pop();
FIRMA.cntx_pop();
~~


\win_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Tworzy okno tymczasowe zawierajace widok procesow wg firm
::   WE: _a - env - srodowisko designera - wynik dzialania exec('env','zpr')
::   WY: STRING - uchwyt do okna
:: ~OST: INWINBTN
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=_env.TAB_PROC;

_wer:=_tab.mk_sel(_env.tit_proc,'P',0,_env.wid_proc,1,1,,1);
_tab.win_fld(_wer,,'SYMBOL' ,,,20,,,'Symbol'@,0);
_tab.win_fld(_wer,,'NAZWA'  ,,,30,,,'Nazwa'@,0);
_tab.win_fld(_wer,,'ACCEPTED',,,-3,,1,'Zaakceptowane?'@,,,2,,"'T'","'N'","''");

_formula:="exec('zwrw_all','#tree',MOD_ENV.TAB_PROC,'PARENT',MOD_ENV.WIN_PROC)";
_tab.win_act(_wer,,'Formuła','Zwiń/rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,_formula,,1);
_formula:="exec('rek_proc','zpr')";
_tab.win_act(_wer,,'Rekord',,,,_formula);

_formula:="exec('select4proc','#b_design',MOD_ENV.SEL_PROC)";

_tab.win_act(_wer,0,'Formuła','Modeler'@@,,,_formula,,1);
_env.BTN_MODELER:=_tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['Modeler'@]
                  ,'menu:M',,,,,,'noempty');

_formula:="exec('bi_proc_form','zpr')";
_tab.win_act(_wer,0,'Formuła','Instancje'@@,,,_formula);
_env.BTN_INSTANCJE:=_tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['Instancje'@]
                  ,'menu:I',,,,,,'noempty');

_tab.win_act(_wer,,'Szukaj');
_tab.win_act(_wer,,'Kolejność');

_formula:="exec('display_form','zpr',MOD_ENV.TAB_PROC)";
_tab.fld_fml('ACCEPTED','DISPLAY_FORMAT',_formula);

_tab.win_sel(_wer);
_wer


\win_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Tworzy okno tymczasowe zawierające widok czynności wg obszarów
::   WE: _a - env - środowisko designera - wynik działania exec('env','zpr')
::   WY: STRING - uchwyt do okna
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=_env.TAB_ACT;

_wer:=_tab.mk_sel(_env.tit_act,'P',0,_env.wid_act,1,1,,,'U');
_tab.win_fld(_wer,,'SYMBOL',,,16,,,'Symbol'@,0);
_tab.win_fld(_wer,,'NAZWA',,,20,,,'Nazwa'@,0);
_tab.win_fld(_wer,,'B_CAN',,,-4,,,'Wywołanie'@,,'M=jTerm, W=webTerm, B=jTerm+webTerm, O=OLAP, Q=Aplikacja QlikView'@);
_tab.win_fld(_wer,,'PROC_RUN',,,-4,,1,'Procesowa'@,,,2,,"'T'","'N'","''");
::_tab.win_fld(_wer,,'AUTO_RUN',,,-4,,1,'Automatyczna'@,,,2,,"'T'","'N'","''");
_tab.win_fld(_wer,,'SERVICE',,,-4,,1,'Usługowa'@,,,2,,"'T'","'N'","''");
::_tab.win_fld(_wer,,'LOOP',,,-4,,1,'Uruchamiana w pętli'@,,,2,,"'T'","'N'","''");
_tab.win_fld(_wer,,'RUNMICRO',,,-4,,1,'Uruchamianie bez zadania'@,,,2,,"'T'","'N'","''");
_tab.win_fld(_wer,,'TAKEOVER',,,-4,,1,'Przejmowanie zadania'@,,,2,,"'T'","'N'","''");
_tab.win_fld(_wer,,'RELEASE',,,-4,,1,'Zwalnianie zadania'@,,,2,,"'T'","'N'","''");
_tab.win_fld(_wer,,'PORTAL',,,-4,,1,'HR Portal',,,2,,"'T'","'N'","''");
::_tab.win_fld(_wer,,'RUNNPROC',,,-4,,1,'Uruchamianie bez menadżera procesów'@,,,2,,"'T'","'N'","''");

_formula:="exec('rek_act','zpr')";
_tab.win_act(_wer,,'Rekord',,,,_formula);

_formula:="params_exec('import_act','zpr')";
_tab.win_act(_wer,,'Formuła','Aktualizuj'@@,,'Aktualizacja czynności'@,_formula,,,,,,'A');
task_attach('ZPR_PRO_MODE'); task_attach('ZPR_PRO_MODW');
_env.BTN_IMPORT:=_tab.win_btn(_wer,'text=%1,panel=right,align=begin'['Aktualizuj'@],'menu:A',,,,,,'noempty');

_tab.win_act(_wer,,'Menu','Ko&nfiguruj'@@,,,,,,,,,'N');
_formula:="params_exec('config_act','zpr')";
_tab.win_act(_wer,,'Formuła','Czy&nność'@@,'#N','Konfiguracja czynności'@,_formula,,,1,_formula,,'N');
task_attach('ZPR_PRO_MODE'); task_attach('ZPR_PRO_MODW');
_formula:="params_exec('b_actpro_role','#b_action',exec('typ_runmicro','#b_action'))";
_tab.win_act(_wer,,'Formuła','Role &uruchamiające czynność bez zad.'@@,'#N',
   ,_formula,,,1,_formula,,'U');
task_attach('ZPR_PRO_MODE'); task_attach('ZPR_PRO_MODW');
_formula:="params_exec('b_actpro_role','#b_action',exec('typ_takeover','#b_action'))";
_tab.win_act(_wer,,'Formuła','Role, którym można &przydzielać zad.'@@,'#N',
   ,_formula,,,1,_formula,,'P');
task_attach('ZPR_PRO_MODE'); task_attach('ZPR_PRO_MODW');
_env.BTN_CONFIG:=_btn:=_tab.win_btn(_wer,'text=%1,panel=right,align=begin'['Ko&nfiguruj'@],'Menu');
_tab.btn_menu(_wer,_btn,'menu:NN');
_tab.btn_menu(_wer,_btn,'menu:NU');
_tab.btn_menu(_wer,_btn,'menu:NP');

_formula:="exec('b_port_form','zpr')";
_tab.win_act(_wer,,'Formuła','Parametry'@@,,'Podgląd parametrów czynności'@,_formula,,,,,,'P');
_env.BTN_PARAMETRY:=_tab.win_btn(_wer,'text=%1,panel=right,align=begin'['Parametry'@],'menu:P',,,,,,'noempty');

_formula:="exec('b_perm_a_sel','#b_perm')";
_tab.win_act(_wer,,'Formuła','Up&rawnienia'@@,,'Podgląd uprawnień czynności'@,_formula,,,,,,'R');
_env.BTN_PERM:=_tab.win_btn(_wer,'text=%1,panel=right,align=begin'['Up&rawnienia'@],'menu:R',,,,,,'noempty');

_formula:="exec('portal_fun_sel','#portal')";
_tab.win_act(_wer,,'Formuła','HR P&ortal'@@,,'Funkcjonalności portalu HR'@,_formula,,,,,,'O');
_env.BTN_PORTAL:=_tab.win_btn(_wer,'text=%1,panel=right,align=begin'['HR P&ortal'@],'menu:O',,,,,,'noempty');

_formula:="exec('select','#bi_inst',,exec('FindAndGet','#table',B_ACTION,cur_tab(1,1).B_ACT))";
_tab.win_act(_wer,,'Formuła','Instancje'@@,,'Podgląd instancji czynności'@,_formula,,,,,,'I');
_env.BTN_INSTACT:=_tab.win_btn(_wer,'text=%1,panel=right,align=begin'['Instancje'@],'menu:I',,,,,,'noempty');

_formula:="exec('history_action','#b_history',cur_tab(1,1).B_ACT)";
_tab.win_act(_wer,,'Formuła','Historia uprawnień'@@,,'Podgląd użytkowników i ról uprawnionych do czynności'@,_formula,,,,,,'H');
_env.BTN_HIST_UPR:=_tab.win_btn(_wer,'text=%1,panel=right,align=begin'['Historia uprawnień'@],'menu:H',,,,,,'noempty');

_tab.win_act(_wer,,'Menu','Rapor&ty'@@,,,,,,,,,'T');
_formula:="params_exec('main','!zpr_ins_zsql')";
_tab.win_act(_wer,,'Formuła','Zapytania S&QL'@@,'#T','Zapytania SQL procesów, czynności'@,_formula,,,,,,'Q');
task_attach('ZPR_INS_ZSQL');

_tab.win_act(_wer,1,'Menu','Rapor&ty'@@,,,,,,,,,'T');
_formula:="params_exec('main','!zpr_ins_zsql')";
_tab.win_act(_wer,1,'Formuła','Zapytania S&QL'@@,'#T','Zapytania SQL procesów, czynności'@,_formula,,,,,,'Q');
task_attach('ZPR_INS_ZSQL');

_formula:="exec('help','#help',cur_tab(1,1).SYMBOL)";
_tab.win_act(_wer,,'Formuła','Opis &czynności'@@,,,_formula,,,,,,'C');

_tab.win_act(_wer,,'Szukaj');
_tab.win_act(_wer,,'Kolejność');

_formula:="
   _tab:=cur_tab(1,1);
   {? _tab.B_ACT<>'' || exec('FindAndGet','#table',B_ACTION,_tab.B_ACT,,\"win_edit('RED'); display()\") ?}
";
_tab.win_act(_wer,,'Wyświetl',,,,_formula);

_formula:="exec('iconact','zpr')";
_tab.win_fml(_wer,,'SYMBOL',,'ICON_BEFORE',_formula);

_tab.win_sel(_wer);
_wer


\iconact
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Ikona dla galezi czynnosci
::   WY: ikona
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);

{? _tab.ICON<>''
|| _tab.ICON
|| 'xwin16.png:110'
?}


\rek_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: akcja Rekord - wlacza/wylacza klawisz
::----------------------------------------------------------------------------------------------------------------------
~~


\rek_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: akcja Rekord - wlacza/wylacza klawisz
::----------------------------------------------------------------------------------------------------------------------
~~


\grp_make
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Tworzy okienko grupowe designera
::   WE: _a - _env - srodowisko wywoływacza exec('env','zpr')
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=_env.TAB_PROC;
{? _env.WIN_MAIN=''
||
   _grpbefor:="
         _env:=MOD_ENV;
         exec('refreash','zpr',_env);
         grp_disp(B_PROC,'WER',1);
         grp_disp(_env.TAB_ACT,_env.WIN_ACT,1);
         ~~
      ";

   _grp:=_tab.grp_make(_env.tit_main,_grpbefor,_env.wid_main,1,1,"exec('exit','zws',_a)");

   _after_rfr:="params_set(params_get());exec('after_rfr_proc','zpr',MOD_ENV)";
   _tab.grp_sel(_grp,B_PROC,'WER',,_after_rfr,,,20,,,,,'maximized_with_title');
   _tab.grp_splt(_grp,'panel0','horizontal','Dolny',30);
   _tab.grp_edit(_grp,BPMN,'MODELER','',,,,,'maximized');

   _tab.grp_splt(_grp,'panel0','vertical','Right');
   _after_rfr:="params_set(params_get());exec('after_rfr_act','zpr',MOD_ENV)";
   _tab.grp_sel(_grp,_env.TAB_ACT,_env.WIN_ACT,,_after_rfr,,,,,,,,'maximized_with_title');

   _tab.win_sel(_grp);
   _env.WIN_MAIN:=_grp;

   AreaTitle.setTabWin(_tab,_grp);
   AreaTitle.setTitle();
   ~~
?};
~~


\act_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: aktualizuje informacje o procesach
::   WE: _a - _env - srodowisko designera exec('env','zpr')
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_buf:=_env.TAB_SQL;
_tab:=_env.TAB_PROC;
_in1:=_env.IN_PROC1;
_in2:=_env.IN_PROC2;
_buf.clear();
{? _buf.first()
|| _tab.cntx_psh();
   {!
   |? _tab.index(_in2);
      {? _tab.find_key(_buf.SQL)
      || {? _buf.ACT='D'
         || _parent:=_tab.PARENT;
            _tab.del();
            _tab.clear();
            {? _tab.seek(_parent,)
            || {? _tab.SIZE<=1
               || _tab.del()
               || _tab.SIZE-=1;
                  _wsk:=_tab.SYMBOL*'(';
                  _tab.SYMBOL:=(_wsk+_tab.SYMBOL)+form(_tab.SIZE,,0,'99')+')';
                  _tab.put(1)
               ?}
            ?}
         |? _buf.ACT='M' | _buf.ACT='A'
         || _parent:=_tab.PARENT;
            _firma:=_tab.FIRMA;
            B_PROC.cntx_psh();
            B_PROC.clear();
            {? B_PROC.seek(_buf.SQL)
            || {? _firma<>B_PROC.FIRMA().SYMBOL
               || _tab.del();
                  _tab.clear();
                  {? _tab.seek(_parent,)
                  || {? _tab.SIZE<=1
                     || _tab.del()
                     || _tab.SIZE-=1;
                        _tab.SYMBOL:='Firma: '+_tab.FIRMA+' ('+form(_tab.SIZE,,0,'99')+')';
                        _tab.put(1)
                     ?}
                  ?};
                  _tab.index(_in1);
                  {? _tab.find_key(0,B_PROC.FIRMA().SYMBOL,)
                  || _parent:=_tab.ref();
                     _tab.SIZE+=1;
                     _tab.SYMBOL:='Firma: '+_tab.FIRMA+' ('+form(_tab.SIZE,,0,'99')+')';
                     _tab.put(1)
                  || _tab.blank();
                     _tab.PARENT:=0;
                     _tab.SIZE:=1;
                     _tab.SYMBOL:='FIRMA: '+B_PROC.FIRMA().SYMBOL+' ('+form(_tab.SIZE,,0,'99')+')';
                     _tab.NAZWA:=B_PROC.FIRMA().OPIS;
                     _tab.FIRMA:=B_PROC.FIRMA().SYMBOL;
                     {? _tab.add(1) || _parent:=_tab.ref() ?}
                  ?};
                  {? _parent<>null()
                  || _tab.clear();
                     _tab.blank();
                     _tab.PARENT:=_parent;
                     _tab.SYMBOL:=B_PROC.SYMBOL;
                     _tab.NAZWA:=B_PROC.NAME;
                     _tab.ACCEPTED:=B_PROC.ACCEPTED;
                     _tab.B_PROC:=$B_PROC.ref();
                     _tab.FIRMA:=B_PROC.FIRMA().SYMBOL;
                     _tab.add(1)
                  ?}
               || _tab.SYMBOL:=B_PROC.SYMBOL;
                  _tab.NAZWA:=B_PROC.NAME;
                  _tab.ACCEPTED:=B_PROC.ACCEPTED;
                  _tab.put(1)
               ?}
            ?};
            B_PROC.cntx_pop()
         ?}
      |? _buf.ACT='A'
      || B_PROC.cntx_psh();
         B_PROC.clear();
         {? B_PROC.seek(_buf.SQL)
         || _tab.index(_in1);
            {? _tab.find_key(0,B_PROC.FIRMA().SYMBOL,)
            || _parent:=_tab.ref();
               _tab.SIZE+=1;
               _wsk:=_tab.SYMBOL*'(';
               _tab.SYMBOL:=(_wsk+_tab.SYMBOL)+form(_tab.SIZE,,0,'99')+')';
               _tab.put(1)
            || _tab.blank();
               _tab.PARENT:=0;
               _tab.SIZE:=1;
               _tab.SYMBOL:='FIRMA: '+B_PROC.FIRMA().SYMBOL+' ('+form(_tab.SIZE,,0,'99')+')';
               _tab.NAZWA:=B_PROC.FIRMA().OPIS;
               _tab.FIRMA:=B_PROC.FIRMA().SYMBOL;
               {? _tab.add(1) || _parent:=_tab.ref() ?}
            ?};
            {? _parent<>null()
            || _tab.clear();
               _tab.blank();
               _tab.PARENT:=_parent;
               _tab.SYMBOL:=B_PROC.SYMBOL;
               _tab.NAZWA:=B_PROC.NAME;
               _tab.ACCEPTED:=B_PROC.ACCEPTED;
               _tab.B_PROC:=$B_PROC.ref();
               _tab.FIRMA:=B_PROC.FIRMA().SYMBOL;
               _tab.add(1)
            ?}
         ?};
         B_PROC.cntx_pop()
      ?};
      _buf.next()
   !};
   _tab.cntx_pop()
?};
~~


\refreash
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Odswieza wyswietlanie w tabeli
::   WE: _a - _env - srodowisko designera exec('env','zpr')
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
grp_disp(B_PROC,'WER');
grp_disp(_env.TAB_ACT,_env.WIN_ACT);
~~


\display_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: format wyswietlania
::   WE: _a - _uchwyt tabeli
::   WY: wyswietla lub nie
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_res:={? ~_tab.PARENT || 'empty=1' || 'empty=0' ?};
obj_del(_tab);
_res


\bi_proc_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: wyswietla instancje procesu
::----------------------------------------------------------------------------------------------------------------------
exec('select','#bi_inst',B_PROC.ref())


\b_port_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: wyswietla parametry czynnosci
::----------------------------------------------------------------------------------------------------------------------
_tab:=MOD_ENV.TAB_ACT;
B_ACTION.cntx_psh();
B_ACTION.clear();
{? B_ACTION.seek(_tab.B_ACT)
|| exec('b_action_ports','#b_action')
?};
B_ACTION.cntx_pop();
~~


\after_rfr_proc
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PRIVATE
::  UTW: WH [17.00]
:: OPIS: Po odswieżeniu w tabeli .TAB_PROC
::   WE: _a - env - środowisko wywoływacza - wynik działania exec('env','zpr')
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
params_set(params_get());
_nogrp:=~B_PROC.sel_size();
_act:=':';
{? B_PROC.ACTIVE='N'
|| _act:='N(JB)'+_act
?};
{? B_PROC.ACCEPTED='T'
|| _act:={? _nogrp || 'A' || '' ?}+_act
|? B_PROC.ACCEPTED='N'
|| _act:={? _nogrp || 'W' || '' ?}+_act
?};
{? _env.ONLY_OWNER>0
|| _act:='Ć(I)'+_act+'Ć(I)'
?};

B_PROC.actions_grayed('WER',_act);
~~


\after_rfr_act
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PRIVATE
::  UTW: WH [17.00]
:: OPIS: Po odswieżeniu w tabeli .TAB_ACT
::   WE: _a - env - środowisko wywoływacza - wynik działania exec('env','zpr')
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=_env.TAB_ACT;

_grupa:=_env.GRUPA:=_tab.sel_size();

params_set(params_get());
_act:='';
:: akcja Parametry
{? _tab.PROC_RUN='N'
|| {? _tab.B_CAN<>'Q' || _env.SEL_PROC:=null(); _act+='P' ?}
?};
:: akcja Up&rawnienia
{? ~Perm.hasPermAct(_tab.B_ACT) || _act+='R' ?};
:: akcja Instancje
{?  _tab.PROC_RUN='N' || _act+='I' ?};
_tab.actions_grayed(_env.WIN_ACT,_act);
:: akcja Opis czynności
{? _tab.B_ACT='' || _act+='C' ?};
:: akcja Konfiguruj
{? _grupa=0 & (_tab.PROC_RUN<>'T' | _tab.USER<>'T')
|| _act+='N(N)'
?};
{? _grupa=0 & _tab.RUNMICRO='T'
|| _act+='N(U)'
?};
{? _grupa=0 & _tab.TAKEOVER='T'
|| _act+='N(P)'
?};
{? _grupa=0 & _tab.PORTAL='N'
|| _act+='O'
?};
_tab.actions_grayed(_env.WIN_ACT,_act);
~~


\proc_activate_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Akcja 'Aktywuj' w oknie wertowania procesów
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA>
::----------------------------------------------------------------------------------------------------------------------
exec('set_active','#b_proc',,'T')


\proc_activate_gr1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Akcja grupa przed 'Aktywuj' w oknie wertowania procesów
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA>
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_tab:=cur_tab(1,1);
{? FUN.ask('Zaznaczonych procesów: %1. Czy aktywować je wszystkie?'@[$_tab.sel_size()])
|| _result:=1;
   sel_nchk();
   KOMM.init(200,,'Aktywowanie procesów')
?};
_result


\proc_activate_gr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Akcja grupa po 'Aktywuj' w oknie wertowania procesów
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA>
::----------------------------------------------------------------------------------------------------------------------
KOMM.select()


\proc_deactivate_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Akcja 'Dezaktywuj' w oknie wertowania procesów
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA>
::----------------------------------------------------------------------------------------------------------------------
exec('set_active','#b_proc',,'N')


\proc_deactivate_gr1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Akcja grupa przed 'Dezaktywuj' w oknie wertowania procesów
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA>
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_tab:=cur_tab(1,1);
{? FUN.ask('Zaznaczonych procesów: %1. Czy dezaktywować je wszystkie?'@[$_tab.sel_size()])
|| _result:=1;
   sel_nchk();
   KOMM.init(200,,'Dezaktywacja procesów')
?};
_result


\proc_deactivate_gr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Akcja grupa po 'Dezaktywuj' w oknie wertowania procesów
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA>
::----------------------------------------------------------------------------------------------------------------------
KOMM.select()


\proc_zakres_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Akcja 'Zakres' w oknie wertowania procesów
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
params_set(params_get());

BPMN.win_edit('ZAKRES');
BPMN.ZAKRES:=_env.ZAKRES;
BPMN.MY_PROC:=_env.MY_PROC;

{? _env.ONLY_OWNER
|| BPMN.MY_PROC:='T';
   BPMN.efld_opt('ZAKRES','enable=0',,'MY_PROC')
|| BPMN.efld_opt('ZAKRES','enable=1',,'MY_PROC')
?};

{? BPMN.edit()
|| _env.ZAKRES:=BPMN.ZAKRES;
   _env.MY_PROC:=BPMN.MY_PROC;
   {? _env.ZAKRES='A'
   || {? _env.MY_PROC='T' | _env.ONLY_OWNER
      || B_PROC.index('AKTOWNER');
         B_PROC.prefix(OPERATOR.USER,'N','T',REF.FIRMA)
      || B_PROC.index('AKT');
         B_PROC.prefix('N','T',REF.FIRMA)
      ?}
   |? _env.ZAKRES='N'
   || {? _env.MY_PROC='T' | _env.ONLY_OWNER
      || B_PROC.index('AKTOWNER');
         B_PROC.prefix(OPERATOR.USER,'N','N',REF.FIRMA)
      || B_PROC.index('AKT');
         B_PROC.prefix('N','N',REF.FIRMA)
      ?}
   |? _env.ZAKRES='W'
   || {? _env.MY_PROC='T' | _env.ONLY_OWNER
      || B_PROC.index('SYMOWNER');
         B_PROC.prefix(OPERATOR.USER,'N',REF.FIRMA)
      || B_PROC.index('SYM');
         B_PROC.prefix('N',REF.FIRMA)
      ?}
   ?};
   {? (B_PROC.ACTIVE='T' & _env.ZAKRES='N') | (B_PROC.ACTIVE='N' & _env.ZAKRES='T') || B_PROC.first() ?}
?};
~~


\import_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Akcja w oknie drzewa czynności - aktualizacja
::   WY:
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
params_set(params_get());

_tab:=_env.TAB_ACT;

_action:=exec('FindAndGet','#table',B_ACTION,_tab.B_ACT,,,null());
exec('import_needed_act','#b_design',_action);
exec('FindAndGet','#table',B_ACTION,_action,,"
   _tab:=_b.TAB_ACT;
   exec('tab_act_rek_fill','zpr',_tab);
   _tab.put()
   ",,_env);
~~


\zpr_zas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Główna formuła obszaru roboczego ZPR_ZAS - Zastępstwa użytkownika
::----------------------------------------------------------------------------------------------------------------------
exec('zast_select','zastepstwa');
~~


\config_act
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PRIVATE
::  UTW: WH [18.22]
:: OPIS: Akcja 'Konfiguruj' w oknie wertowania czynności
::   WE: _a - env - środowisko obszaru roboczego - wynik działania exec('env','zpr')
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;
_tab:=_env.TAB_ACT;
:: grupa rekordów
_grupa:=_env.GRUPA;

:: pobranie wybranych czynności
_Sel:=_tab.sel_aget();
{? ~_Sel.first() || _Sel.REF:=#_tab.ref(); _Sel.add() ?};

B_ACTION.cntx_psh(); B_ACTION.prefix();
{? B_ACTION.seek(_tab.B_ACT)
|| _edit:=exec('config_win_desc','zpr');
   _tab.win_edit(_edit);
   exec('config_eopt','zpr',_edit);
   _valid:="
      _tab:=cur_tab(1,1);
      _result:='';
      {? _tab.WDR_DESC='T' & _tab.FWTODO=''
      || FUN.emsg('Formuła wdrożeniowa na opis TODO nie może być pusta.'@);
         _result:='FWTODO'
      ?};
      {? _result='' & exec('valid_formula','#field',_tab.FWTODO)=0
      || _result:='FWTODO'
      ?};
      {? _result='' & _tab.RUNNPROC='T' & exec('is_act','#b__box',B_ACTION.UID,,1,1)=1
      || _choice:=FUN.choice(
            'Czynność wykorzystana jest w zaakceptowanym i aktywnym procesie.\n'
            'Nie można ustawić uruchamiania czynności bez menadżera procesów.'@,,'Szczegóły'@,,,,'OK'@
         );
         {? _choice=1
         || params_exec('proc4act','zpr',B_ACTION.UID)
         ?};
         _result:='RUNNPROC'
      ?};
      _result
   ";
   {? _grupa
   ||
      _tab.RUNMICRO:='';
      _tab.TAKEOVER:='';
      _tab.RELEASE:='';
      _tab.RUNNPROC:=''
   ?};
   {? _tab.edit(_valid)
   || _continue:=1;
      {? _grupa=0
      ||
         _tab.put();
         B_ACTION.WDR_DESC:=_tab.WDR_DESC;
         B_ACTION.FWTODO:=_tab.FWTODO;
         _continue:=B_ACTION.put()
      ?};
      _env1:=obj_new('TAB','B_ACTION','GRUPA','RUNMICRO','TAKEOVER','RELEASE','RUNNPROC');
      _env1.TAB:=_tab;
      _env1.B_ACTION:=_Sel;
      _env1.GRUPA:=_grupa;
      _env1.RUNMICRO:=_tab.RUNMICRO;
      _env1.TAKEOVER:=_tab.TAKEOVER;
      _env1.RELEASE:=_tab.RELEASE;
      _env1.RUNNPROC:=_tab.RUNNPROC;
      params_set('env',_env1);
      exec('b_actpro_config','#b_action')
   ?}
?};
B_ACTION.cntx_pop();

_tab.sel_adel();
0


\config_win_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy okienko redagowania konfigurowania opisu na TODO
::   WE: _a - 0-pojedynczy rekord; 1-grupa rekordów
::   WY:
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_tab:=_env.TAB_ACT;
_grupa:=_env.GRUPA;

_edit:=_tab.mk_edit('Konfiguracja czynności'@,0,'#bactconfdesc');
{? _grupa
||
   _tab.win_esep(_edit,'Kontrola wywołania'@);
   _tab.win_efld(_edit,_tab,'RUNNPROC',,,100,0,,'Uruchamianie bez menadżera procesów'@,,
      ,'radio-buttons',,'Bez zmiany'@,"''",'Tak'@,"'T'",'Nie'@,"'N'");
   _tab.win_efld(_edit,_tab,'RUNMICRO',,,100,0,,'Uruchamianie bez zadania'@,,
      ,'radio-buttons',,'Bez zmiany'@,"''",'Tak'@,"'T'",'Nie'@,"'N'");
   _tab.win_efld(_edit,_tab,'TAKEOVER',,,100,0,,'Możliwe przydzielenie zadania'@,,
      ,'radio-buttons',,'Bez zmiany'@,"''",'Tak'@,"'T'",'Nie'@,"'N'");
   _tab.win_efld(_edit,_tab,'RELEASE',,,100,0,,'Możliwe zwolnienie zadania'@,,
      ,'radio-buttons',,'Bez zmiany'@,"''",'Tak'@,"'T'",'Nie'@,"'N'")
||
   _tab.win_esep(_edit,'Parametryzowany opis TODO'@);
   _tab.win_efld(_edit,_tab,'WDR_DESC',,,100,0,,'Stan'@,,,'radio-buttons',,'Aktywny'@,"'T'",'Nieaktywny'@,"'N'");
   _tab.win_efld(_edit,_tab,'FWTODO',,,100,,,'Formuła wdrożeniowa'@,,,,'F3_button=1');
   {? _tab.PROC_RUN='T'
   ||
      _tab.win_esep(_edit,'Kontrola wywołania'@);
      _not_mod:=exec('FindAndGet','#table',B_ACTION,_tab.B_ACT,,"B_ACTION.RUNNPROC",'?')<>'T';
      _tab.win_efld(_edit,_tab,'RUNNPROC',,,100,0,_not_mod,'Uruchamianie bez menadżera procesów'@,,
         ,'check-box','check_label="%1"'['Czynność będzie uruchamiana bez udziału menadżera procesów'@]
         ,"'T'","'N'");
      _tab.efld_opt(_edit,'editable='+{? _not_mod || 'grayed' || '1' ?},,'RUNNPROC');
      _not_mod:=exec('FindAndGet','#table',B_ACTION,_tab.B_ACT,,"B_ACTION.RUNMICRO",'?')<>'';
      _tab.win_efld(_edit,_tab,'RUNMICRO',,,100,0,_not_mod,'Uruchamianie bez zadania'@,,
         ,'check-box','check_label="%1"'['Czynność może być uruchamiana bez zadania na liście zadań'@]
         ,"'T'","'N'");
      _tab.efld_opt(_edit,'editable='+{? _not_mod || 'grayed' || '1' ?},,'RUNMICRO');
      _not_mod:=exec('FindAndGet','#table',B_ACTION,_tab.B_ACT,,"B_ACTION.TAKEOVER",'?')<>'';
      _tab.win_efld(_edit,_tab,'TAKEOVER',,,100,0,_not_mod,'Możliwe przydzielenie zadania'@,,
         ,'check-box','check_label="%1"'['Zadanie może być przydzielone innemu użytkownikowi'@]
         ,"'T'","'N'");
      _tab.efld_opt(_edit,'editable='+{? _not_mod || 'grayed' || '1' ?},,'TAKEOVER');
      _not_mod:=exec('FindAndGet','#table',B_ACTION,_tab.B_ACT,,"B_ACTION.RELEASE",'?')<>'';
      _tab.win_efld(_edit,_tab,'RELEASE',,,100,0,_not_mod,'Możliwe zwolnienie zadania'@,,
         ,'check-box','check_label="%1"'['Użytkownik może zwolnić przydzielone zadanie'@]
         ,"'T'","'N'");
      _tab.efld_opt(_edit,'editable='+{? _not_mod || 'grayed' || '1' ?},,'RELEASE')
   ?}
?};
exec('ok_esc','#window',_tab,_edit);
_edit


\config_eopt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Formuła wyszarzająca pola w akcji 'Konfiguruj'
::   WE: [_a] - akronim okienka redagowania
::   WY: 0/1
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_edit:='';
{? var_pres('_a')=type_of('')
|| _edit:=_a
|| _edit:=cur_win(1,1)
?};

_tab:=_env.TAB_ACT;

_enable:='enable=1';
_mark:=',mark=1';

{? _tab.WDR_DESC<>'T'
|| _enable:='enable=0';
   _mark:=',mark=0'
?};
_tab.efld_opt(_edit,_enable+_mark,,'FWTODO');
::_tab.efld_opt(_edit,_mark,,'FWTODO');
1


\fwtodo_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Formuła na F3 w polu FWTODO
::   WY: STRING
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_result:=fld();
_fml:=exec('select_formula','#file');

{? _fml<>''
|| _fml:=gsub(_fml,'.m.fml','.fml');
   _split:=spli_str(_fml,'\\');
   {? obj_len(_split)>1
   || _result:='params_exec(\''+_split[1]+'\',\''+_split[2]-4+'\')'
   ?}
?};
_result


\zpr_zas_www
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Główna formuła obszaru roboczego ZPR_ZAS - Zastępstwa na portalu
::----------------------------------------------------------------------------------------------------------------------
exec('env_wt','b_proces');
exec('FUN','#object');
exec('AreaTitle','#object');
AreaTitle.setArea('ZPR_ZAS');
web_title('%1, %2: %3'[exec('nazwa','#system'),'Firma '@+REF.FIRMA().SYMBOL,AreaTitle.getTitle()],'all');
USERS.cntx_psh(); USERS.index('USR_KKOD'); USERS.prefix();
OPERATOR.USER();
x_user:=OPERATOR.USER;
web_global_params_set(exec('obj_ntab_set','#array',web_global_params_get(),'x_user',x_user));
USERS.cntx_pop();
ZAST_NAG.index('DISP'); ZAST_NAG.prefix(REF.FIRMA,x_user);
ZAST_NAG.web_select('WER_WEB2');
web_ses_close();
~~


\tab_act_rek_fill
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: wypełnia rekord tabeli TAB_ACT
::   WE: _a - uchwyt do tabeli TAB_ACT
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_tab.blank();
_tab.SYMBOL:=B_ACTION.UID;
_tab.NAZWA:=B_ACTION.NAME;
_tab.DOMAIN:=B_DOMAIN.SYMBOL;
_tab.PROC_RUN:=B_ACTION.PROC;
_tab.AUTO_RUN:=B_ACTION.AUTOMAT;
_tab.LOOP:=B_ACTION.LOOP;
_tab.SERVICE:=B_ACTION.SERVICE;
_tab.USER:=B_ACTION.USER;
_tab.ICON:=B_ACTION.ICON;
_tab.B_ACT:=$B_ACTION.ref();
_tab.B_CAN:=B_ACTION.B_CAN;
{? B_ACTION.WDR_DESC<>''
|| _tab.WDR_DESC:=B_ACTION.WDR_DESC
|| _tab.WDR_DESC:='N'
?};
_tab.FWTODO:=B_ACTION.FWTODO;
_tab.PORTAL:=B_ACTION.PORTAL;
_tab.INTERM:=B_ACTION.INTERM;
_tab.MOBILE:=B_ACTION.MOBILE;
B_ACTPRO.cntx_psh();
B_ACTPRO.index('UNIK');
B_ACTPRO.prefix(B_ACTION.ref(),REF.FIRMA);
{? B_ACTPRO.first()
|| _tab.RUNMICRO:=B_ACTPRO.RUNMICRO;
   _tab.TAKEOVER:=B_ACTPRO.TAKEOVER;
   _tab.RELEASE:=B_ACTPRO.RELEASE;
   _tab.RUNNPROC:=B_ACTPRO.RUNNPROC
?};
B_ACTPRO.cntx_pop()


\import_needed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: Importuje wszystko co potrzebne modelerowi do działania
::   WE: _a - 0 - obszar "Obsługa procesów"
::   WY: ''
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_tab:=_env.TAB_ACT;
_symbol:=_tab.SYMBOL;
params_exec('import_needed','#b_design',0,"params_exec('load_act','zpr',params_get().env)");
{? _tab.f_active()
|| _tab.f_find(_symbol)
|| _tab.find_key(_symbol)
?};
''


\biq_zpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Analiza BI w obszarze "Obsługa procesów"
::----------------------------------------------------------------------------------------------------------------------
exec('np_run','#b__box','BIQ_ZPR_PROA')


\proc4act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26_07]
:: OPIS: Wyświetla procesy powiązane z czynnością - wsparcie do porządkowania listy procesów
::   WE: _a - B_ACTION.UID
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

{? var_pres('_a')=type_of('') || _uid:=_a || return() ?};
_tab:=sql('
   select
      B_PROC.REFERENCE as PROC_REF,
      B_PROC.SYMBOL,
      B_PROC.VER,
      B_PROC.ACCEPTED,
      B_PROC.ACTIVE,
      B_PREL.REFERENCE as PREL_REF
   from B_ACTION join B_PREL using(B_ACTION.B_ELE,B_PREL.B_ELE) join B_PROC
   where B_PROC.MICRO=\'N\' and B_PROC.FIRMA=:_a and B_ACTION.UID=\':_b\'
',REF.FIRMA,_uid);
_wer:=_tab.mk_sel('Powiązane procesy'@,,,'procconn',,,,,'U');
_tab.win_fld(_wer,,'SYMBOL',,,60,,,'Symbol'@);
_tab.win_fld(_wer,,'VER',,,6,,,'Wersja'@);
_tab.win_fld(_wer,,'ACCEPTED',,,,,,'Zaakceptowany'@,,,2,,"'T'","'N'");
_tab.win_fld(_wer,,'ACTIVE',,,,,,'Aktywny'@,,,2,,"'T'","'N'");
_formula:="
   _tab:=cur_tab(1,1);
   _proc_ref:=exec('FindAndGet','#table',B_PROC,_tab.PROC_REF);
   _prel_ref:=exec('FindAndGet','#table',B_PREL,_tab.PREL_REF);
   exec('select4proc','#b_design',_proc_ref,0,_prel_ref,0);
   _tab.ACCEPTED:=exec('FindAndGet','#table',B_PROC,_tab.PROC_REF,,\"B_PROC.ACCEPTED\",'N');
   _tab.put();
   ~~
";
_tab.win_act(_wer,,'Formuła','Pod&gląd procesu'@@,,,_formula,,1,,,,'G');
_formula:="
   _tab:=cur_tab(1,1);
   _proc_ref:=exec('FindAndGet','#table',B_PROC,_tab.PROC_REF);
   exec('select','#bi_inst',_proc_ref)
";
_tab.win_act(_wer,,'Formuła','Instancje'@@,,,_formula,,,,,,'I');
_formula:="
   _tab:=cur_tab(1,1);
   B_PROC.cntx_psh();
   B_PROC.prefix();
   {? B_PROC.seek(_tab.PROC_REF)
   || params_exec('proc_wyc_act','#b_design');
      _tab.ACCEPTED:=B_PROC.ACCEPTED;
      _tab.put()
   ?};
   B_PROC.cntx_pop();
   ~~
";
_tab.win_act(_wer,,'Formuła','Wycofaj'@@,,,_formula,,,,,,'W');
_formula:="
   _tab:=cur_tab(1,1);
   _ref:=exec('FindAndGet','#table',B_PROC,_tab.PROC_REF);
   exec('set_active','#b_proc',_ref,'N');
   _tab.ACTIVE:=exec('FindAndGet','#table',B_PROC,_tab.PROC_REF,,\"B_PROC.ACTIVE\",'N');
   _tab.put();
   ~~
";
_formula_group_before:="
   _result:=0;
   _tab:=cur_tab(1,1);
   {? FUN.ask('Zaznaczonych procesów: %1. Czy dezaktywować je wszystkie?'@[$_tab.sel_size()])
   || _result:=1;
      sel_nchk();
      KOMM.init(200,,'Dezaktywacja procesów')
   ?};
   _result
";
_formula_group_after:="
   KOMM.select();
   ~~
";
_tab.win_act(_wer,,'Formuła','Dezaktywu&j'@@,,,_formula,,,1,_formula_group_before,_formula_group_after,'J');
_tab.win_sel(_wer);
_tab.select();
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 23639e586484f2ed2b9a3a0fdd21ffe7157f9c1ea4ab690d20b92fcb97c69dea647a69cb84fecd9a30860c883568742c1f1d82952cc45feb038e8fcce3899821eb4e455e4fbcba5c6c0bd3fc53446bf7867c4cddb1c1d4c0c29e7bc9f71dd4ca8285f98e2c7fe14c5f66f1de76cf6a4d3e00b082164f39624251f49cd519a512
