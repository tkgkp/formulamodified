:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku:  px_pd.fml
:: Utworzony: 09.05.2023
:: Autor: WH
::======================================================================================================================
:: Zawartosc: Formuły do obsługi powiazania planu strategicznego z planem dostaw
::======================================================================================================================


\is_plan_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Czy planowanie z uwzględnieniem planu dostaw?
::   WY: 0/1
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
PD_D_ZN.cntx_psh();
PD_D_ZN.index('NAZ');
PD_D_ZN.prefix('Plan strategiczny',);
{? PD_D_ZN.first()=0
|| _result:=0
?};
PD_D_ZN.cntx_pop();
_result;
0


\prepare
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Przygotowuje plan dostaw związany z planem strategicznym. Zasila go indeksami na podstawie PX_MAT
::   WE: _a - obj_new - obiekt do obsługi planu dostaw
::       _b - PX_VER.ref() - wersja planu
::       _c - _args - argumenty dla funkcji raportujacej progress, wynik exec('plan_progress_a','px_logix')
::   WY:
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_pdprod:=_a;
_px_ver:=_b;
_argsprog:=_c;

_can_continue:=1;
_result:=0;

_tab_pd_mat:=exec('pdprod_plan_mat_tab','plan_dostaw_prod');

{? var_pres('_pdprod')>100
|| PX_STAGE.cntx_psh();
   GROPS.cntx_psh();
   PX_MAT.cntx_psh();
   PX_MAT.index('UNIQALL');
   PX_GRP.cntx_psh();

   _index:=1;
   _prg_step:=1;

   {? _can_continue>0
   ||
::    Grupy operacji 1
      PX_GRP.index('PLAN_G');
      PX_GRP.prefix(_px_ver,'N','N','G','P',);
      {? PX_GRP.first()
      || {!
         |? {? PX_GRP.GROPS<>null()
            || _px_stage:=exec('px_stage4grops','px_grop',PX_GRP.GROPS);

               {? _px_stage<>null()
               || PX_MAT.prefix(_px_stage);
                  {? PX_MAT.first()
                  || {!
                     |?
                        _argsprog.PROGLOC+=1;
                        _argsprog.STRING:='Wstępne zasilenie planu dostaw dla: %1'@[PX_GRP.SYMBOL];
                        _can_continue:=exec('plan_progress','px_logix',_argsprog,_prg_step);
                        {? _can_continue>0
                        || _can_continue:=exec('px_mat2prepare','px_pd',_tab_pd_mat,_index)
                        ?};
                        _index+=1;
                        PX_MAT.next() & _can_continue>0
                     !}
                  ?}
               ?}
            ?};
            PX_GRP.next() & _can_continue>0
         !}
      ?}
   ?};

   {? _can_continue>0
   ||
::    Kolejka planu normalna
      PX_GRP.index('PLAN');
      PX_GRP.prefix(_px_ver,'N','N','Z');
      {? PX_GRP.first()
      || {!
         |? {? PX_GRP.PX_TEX<>null()
            || _RootRef:=null();
               {? PX_GRP.PX_TEX().TKTL<>null()
               || _RootRef:=PX_GRP.PX_TEX().TKTL
               || _RootRef:=PX_GRP.PX_TEX
               ?};
               exec('PX_STAGE_prefix','px_stage',_RootRef);
               {? PX_STAGE.first()
               || {!
                  |? PX_MAT.prefix(PX_STAGE.ref());
                     {? PX_MAT.first()
                     || {!
                        |?
                           _argsprog.PROGLOC+=1;
                           _argsprog.STRING:='Wstępne zasilenie planu dostaw dla: %1'@[PX_GRP.SYMBOL];
                           _can_continue:=exec('plan_progress','px_logix',_argsprog,_prg_step);
                           {? _can_continue>0
                           || _can_continue:=exec('px_mat2prepare','px_pd',_tab_pd_mat,_index)
                           ?};
                           _index+=1;
                           PX_MAT.next() & _can_continue>0
                        !}
                     ?};
                     PX_STAGE.next() & _can_continue>0
                  !}
               ?}
            ?};
            PX_GRP.next()
         !}
      ?}
   ?};

   {? _can_continue>0
   ||
::    Grupy operacji 2
      PX_GRP.index('PLAN_G');
      PX_GRP.prefix(_px_ver,'N','N','G','K',);
      {? PX_GRP.first()
      || {!
         |? {? PX_GRP.GROPS<>null()
            || _px_stage:=exec('px_stage4grops','px_grop',PX_GRP.GROPS);

               {? _px_stage<>null()
               || PX_MAT.prefix(_px_stage);
                  {? PX_MAT.first()
                  || {!
                     |?
                        _argsprog.PROGLOC+=1;
                        _argsprog.STRING:='Wstępne zasilenie planu dostaw dla: %1'@[PX_GRP.SYMBOL];
                        _can_continue:=exec('plan_progress','px_logix',_argsprog,_prg_step);
                        {? _can_continue>0
                        || _can_continue:=exec('px_mat2prepare','px_pd',_tab_pd_mat,_index)
                        ?};
                        _index+=1;
                        PX_MAT.next() & _can_continue>0
                     !}
                  ?}
               ?}
            ?};
            PX_GRP.next() & _can_continue>0
         !}
      ?}
   ?};

   {? _can_continue>0
   || _argsprog.MULTI.ph_sname(,'Uruchomienie aktualizacji planu dostaw...'@);
      {? _can_continue>0
      || _can_continue:=_pdprod.poz_create(_tab_pd_mat)
      ?};
      _argsprog.PROGLOC+=1;
      _can_continue:=exec('plan_progress','px_logix',_argsprog,1)
   ?};

   {? _can_continue>0
   || _argsprog.MULTI.ph_sname(,'Wstępne zasilenie planu dostaw zakończone powodzeniem.'@)
   || _argsprog.MULTI.ph_sname(,'Wstępne zasilenie planu dostaw zakończone niepowodzeniem.'@)
   ?};

   PX_GRP.cntx_pop();
   GROPS.cntx_pop();
   PX_MAT.cntx_pop();
   PX_STAGE.cntx_pop();
   ~~
?};
{? _can_continue>0
|| _result:=1
?};
_result


\plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Dodaje surowce operacji planu do analizy PD i zwraca info czy na podany termin się da czy nie da
::       Kontekst pracy - rekord paczki
::   WE: _a - obj_new - obiekt planu dostaw
::       _b - obj_new - obiekt paczki planistycznej
::   WY: obj_new - obiekt z wynikiem, dostępne pola: STATUS, DATA
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_pdprod:=_a;
_pxpack:=_b;
_paczka:=_pxpack.Paczka;

_result:=~~;
{? type_of(_pdprod)>0 & _paczka.PL_START>0
||
   _tab:=exec('mat2plan','plan_dostaw_prod');

   _plan_time:=_paczka.PL_START;
   _paczka.cntx_psh();
   _paczka.index(_pxpack.Ndx_fwd);
   _paczka.prefix('M',_paczka.NUM);
   {? _paczka.first()
   || {!
      |?
         exec('px_mat2plan','px_pd',_tab,_pxpack,_plan_time);
         _paczka.next()
      !}
   ?};
   _paczka.cntx_pop();
   _tab.prefix();
   {? _tab.size()>0
   || _result:=_pdprod.plan(_tab)
   ?}
?};
_result


\px_mat2prepare
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Dodaje rekord PX_MAT do tabelki z materiałami do analizy PD
::       Kontekst pracy: PX_MAT
::   WE: _a - tab_tmp - docelowa tabelka, wynik działania exec('pdprod_plan_mat_tab','plan_dostaw_prod')
::       _b - REAL - kolejny nr porządkowy
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;

_result:=0;

_tab.cntx_psh();
_tab.prefix();
_tab.blank();
_tab.M:=$PX_MAT.M;
_tab.ID:=$PX_MAT.PX_STAGE;
_tab.IL:=PX_MAT.IL;
_result:=_tab.add();
_tab.cntx_pop();
_result


\px_mat2plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Dodaje rekord PX_MAT do tabelki z materiałami do planowania na podstawie PD
::       Kontekst pracy: rekord paczki
::   WE: _a - tab_tmp - docelowa tabelka, wynik działania exec('mat2plan','plan_dostaw_prod')
::       _b - obj_new - obiekt paczki planistycznej
::       _c - REAL - początek planu dla operacji
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_pxpack:=_b;
_plan_tm:=_c;

_paczka:=_pxpack.Paczka;

_result:=0;

_tab.cntx_psh();
_tab.prefix();
_tab.blank();
_tab.M:=_paczka.MATERIAL;
_tab.ID:=$_pxpack.PX_GRP+' - '+_paczka.PX_STAGE;
_tab.IL:=_paczka.NORMA;
_tab.D:=exec('tm_stamp2date','#tm_stamp',_plan_tm);
_tab.T:=exec('tm_stamp2time','#tm_stamp',_plan_tm);
_result:=_tab.add();
_tab.cntx_pop();
_result


\task_size_prepare
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Zwraca rozmiar zadania dla zasilenia planu dostaw indeksami
::   WE: _a - PX_VER.ref() - wersja planu
::   WY:
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_px_ver:=_a;

_can_continue:=1;
_result:=1;

PX_STAGE.cntx_psh();
GROPS.cntx_psh();
PX_MAT.cntx_psh();
PX_MAT.index('UNIQALL');
PX_GRP.cntx_psh();

{? _can_continue>0
||
:: Grupy operacji 1
   PX_GRP.index('PLAN_G');
   PX_GRP.prefix(_px_ver,'N','N','G','P',);
   {? PX_GRP.first()
   || {!
      |? {? PX_GRP.GROPS<>null()
         || _px_stage:=exec('px_stage4grops','px_grop',PX_GRP.GROPS);

            {? _px_stage<>null()
            || PX_MAT.prefix(_px_stage);
               {? PX_MAT.first()
               || {!
                  |?
                     _result+=1;
                     PX_MAT.next() & _can_continue>0
                  !}
               ?}
            ?}
         ?};
         PX_GRP.next() & _can_continue>0
      !}
   ?}
?};

{? _can_continue>0
||
:: Kolejka planu normalna
   PX_GRP.index('PLAN');
   PX_GRP.prefix(_px_ver,'N','N','Z');
   {? PX_GRP.first()
   || {!
      |? {? PX_GRP.PX_TEX<>null()
         || _RootRef:=null();
            {? PX_GRP.PX_TEX().TKTL<>null()
            || _RootRef:=PX_GRP.PX_TEX().TKTL
            || _RootRef:=PX_GRP.PX_TEX
            ?};
            exec('PX_STAGE_prefix','px_stage',_RootRef);
            {? PX_STAGE.first()
            || {!
               |? PX_MAT.prefix(PX_STAGE.ref());
                  {? PX_MAT.first()
                  || {!
                     |?
                        _result+=1;
                        PX_MAT.next() & _can_continue>0
                     !}
                  ?};
                  PX_STAGE.next() & _can_continue>0
               !}
            ?}
         ?};
         PX_GRP.next()
      !}
   ?}
?};

{? _can_continue>0
||
:: Grupy operacji 2
   PX_GRP.index('PLAN_G');
   PX_GRP.prefix(_px_ver,'N','N','G','K',);
   {? PX_GRP.first()
   || {!
      |? {? PX_GRP.GROPS<>null()
         || _px_stage:=exec('px_stage4grops','px_grop',PX_GRP.GROPS);

            {? _px_stage<>null()
            || PX_MAT.prefix(_px_stage);
               {? PX_MAT.first()
               || {!
                  |?
                     _result+=1;
                     PX_MAT.next() & _can_continue>0
                  !}
               ?}
            ?}
         ?};
         PX_GRP.next() & _can_continue>0
      !}
   ?}
?};

:: Dodaję jeszcze jeden krok - wywołanie metody poz_create
_result+=1;

PX_GRP.cntx_pop();
GROPS.cntx_pop();
PX_MAT.cntx_pop();
PX_STAGE.cntx_pop();
_result


\verify
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Sprawdza stan planu po zaplanowaniu - czy coś w tym czasie się nie zmieniło
::       Jeżeli się zmieniło to uruchamia od nowa planowanie tych zmienionych elementów
::   WE: _a - obj_new - obiekt planu dostaw
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_pdprod:=_a;

_result:=1;
_ret:=_pdprod.plan_verify();

{? _ret.STATUS<>1
|| _result:=0;
   _tab:=_ret.MAT2PLAN;
   _tab.prefix();
   {? _tab.first()
   || {!
      |? {? _tab.ID<>''
         || {? _tab.STATUS<>-1 & _tab.STATUS<>1
            ||
               _id:=_tab.ID;
               _split:=spli_str(_id,' - ');
               {? obj_len(_split)>1
               || _ref_px_grp:=_split[1];
                  _ref_px_stage:=_split[2];
                  {? ref_tab(_ref_px_grp)=PX_GRP & ref_tab(_ref_px_stage)=PX_STAGE
                  || PX_GRP.cntx_psh(); PX_GRP.prefix();
                     PX_STAGE.cntx_psh(); PX_STAGE.prefix();
                     {? PX_GRP.seek(_ref_px_grp) & PX_STAGE.seek(_ref_px_stage)
                     ||
                        _msg:='Weryfikacja planu wykazała zmiany dla surowców na operacji: %1. Należy ponownie przeliczyć plan.'@[exec('PX_STAGE','#to_string')];
                        {? var_pres('_komm_args')>100
                        || obj_del(_komm_args)
                        ?};
                        _komm_args:=exec('add_komm_a','px_komm');
                        _komm_args.PX_VER:=PX_GRP.PX_VER;
                        _komm_args.PX_GRP:=PX_GRP.ref();
                        _komm_args.TYP:=exec('type_error','px_komm');
                        _komm_args.SRC_KIND:=exec('src_plan_nosur','px_komm');
                        _komm_args.MESSAGE:=_msg;
                        exec('add_komm','px_komm',_komm_args)
                     ?};
                     PX_GRP.cntx_pop();
                     PX_STAGE.cntx_pop()
                  ?}
               ?}
            ?}
         ?};
         _tab.next()
      !}
   ?}
?};
_result



:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 d9662382c451f1892e7dc9957b01491ea883b60b6aadd3ef372ef0cd2bc32d3eaefd2941036031ed4e3c68eed30bf53a21280084070a82652223d91c78180201861df38697eaa353dfbbd1ed81da0e24458fe670a12c14ff3e1bc1a4a789e03c5095cabd041d81ec2e9ecfdc2f6e4611b1dd28a5e9b8880b17b76543664631ae
