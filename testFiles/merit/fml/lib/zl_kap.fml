:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zl_kap.fml
:: Utworzony: 09.02.2016
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi rejestracji kart pracy dla zleceń (tabela KAP)
::======================================================================================================================


\przp_kap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: Selekcja kart pracy dla pozycji przewodnika
::   WE: [_a] - ZGP.ref() - jeżeli określone, to nie zastanawiam się czy Tpz czy główna operacja
::  OLD: \przp_kap/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('access','zl_wyk')
||
   KAP.cntx_psh();
   ZGP.cntx_psh(); ZGP.clear();

   {? var_pres('_a')=type_of(null())
   ||
      {? ~ZGP.seek(_a)
      || KAP.cntx_pop();
         ZGP.cntx_pop();
         return()
      ?};
      {? ZGP.TPZ='T'
      || VAR1.IN_TPZ:=1
      || VAR1.IN_TPZ:=0
      ?};
      __ZGPTPZ:=_a;
      _zgp:=_a
   ||
      {? ZGP.WEW='N'
      || FUN.emsg('Karty pracy dostępne są tylko dla operacji wewnętrznych.'@);
         KAP.cntx_pop();
         ZGP.cntx_pop();
         return()
      ?};

      {? ZGP.NTIME=0
      || FUN.emsg('Karty pracy nie są dostępne dla operacji bez normy czasowej.'@);
         KAP.cntx_pop();
         ZGP.cntx_pop();
         return()
      ?};

      {? VAR1.TPZ='T'
      || _tpz:=FUN.choice('Karty pracy dla:'@,1,'Operacji głównej'@,'Tpz'@)
      || _tpz:=1
      ?};

      {? _tpz=2
      || VAR1.IN_TPZ:=1; _zgp:=__ZGPTPZ
      |? _tpz=1
      || VAR1.IN_TPZ:=0; _zgp:=ZGP.ref()
      ||
         KAP.cntx_pop();
         ZGP.cntx_pop();
         return()
      ?}
   ?};

   GROPP.cntx_psh();
   GROPP.index('ZGP');
   GROPP.prefix(_zgp);
   {? GROPP.first()
   || FUN.emsg('Zapis użyty w grupie operacji — nie można przypisać karty pracy.'@);
      KAP.cntx_pop();
      ZGP.cntx_pop();
      GROPP.cntx_pop();
      return()
   ?};
   GROPP.cntx_pop();

   ZLGD.cntx_psh();
   ZLGB.cntx_psh();
   ZLBR.cntx_psh();
   ZLBS.cntx_psh();
:: tutaj już naprawdę staję na odpowiednim ZGP.ref()
   {? ZGP.seek(_zgp)
   ||
      {? exec('zgp_lock','zl_kap',ZGP.ref())
      ||
::         VAR1.fld_fml('K_SUM_I','BEFORE_DISPLAY',"{? ZGP.NRZLP().ZLEC().TYP().WP='W' || exec('findfnv','#color') || ~~ ?}");
::         VAR1.fld_fml('K_SUM_T','BEFORE_DISPLAY',"{? ZGP.NRZLP().ZLEC().TYP().WP='W' || ~~ || exec('findfnv','#color') ?}");
         VAR1.fld_fml('K_SUM_WI','BEFORE_DISPLAY',"{? ZGP.NRZLP().ZLEC().TYP().WP='W' || exec('findfnv','#color') || ~~ ?}");
         VAR1.fld_fml('K_SUM_WT','BEFORE_DISPLAY',"{? ZGP.NRZLP().ZLEC().TYP().WP='W' || ~~ || exec('findfnv','#color') ?}");

         {? ZGP.BRYG='T'
         || VAR.TYMCZAS:='BZ';
            _wer:='WER_BZ';
            _red:='RED_BZ';
            ZLBR.win_dict(exec('zlbr_win_grp','zasoby'));
            ZLBR.actions('WER_PRJ','AY');
            exec('__KAL','object')
         || VAR.TYMCZAS:='Z';
            _wer:='WER_Z';
            _red:='RED_Z'
         ?};
::         KAP.actions(_wer,'DPU:D');

         {? var_pres('bie_r')>100 || obj_del(bie_r) ?};

         _env:=obj_new('bie_r'); _env.bie_r:=ST.AR;
         params_set('env',_env);

         _grp:=exec('win_grp','zl_kap',1,{? ZGP.BRYG='T' || 1 || 0 ?},_wer);
         KAP.win_sel(_grp);
         KAP.win_edit(_red);
         KAP.select();

         KAP.actions(_wer,'');

::         VAR1.fld_fml('K_SUM_I','BEFORE_DISPLAY',"*");
::         VAR1.fld_fml('K_SUM_T','BEFORE_DISPLAY',"*");
         VAR1.fld_fml('K_SUM_WI','BEFORE_DISPLAY',"*");
         VAR1.fld_fml('K_SUM_WT','BEFORE_DISPLAY',"*");
         exec('zgp_unlock','zl_kap',ZGP.ref())
      ?}
   ?};
   ZLBR.actions('WER_PRJ','');
   VAR_DEL.delete('__wer');
   KAP.cntx_pop();
   ZLGD.cntx_pop();
   ZLGB.cntx_pop();
   ZLBR.cntx_pop();
   ZLBS.cntx_pop();
   ZGP.cntx_pop()
?};
~~


\zgp_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: Blokada rekordu pozycji przewodnika ( ZGP.r_lock(1,1,1) )
::   WE: _a - #ZGP.ref(), a jak brak parametru, to ustawiony rekord w tabali ZGP
::   WY: 0 / 1
::  OLD: \zgp_lock/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=#ZGP.ref() ?};
_ok:=0;
BLK.index('AMR');
BLK.prefix('ZGP',ZGP.name(),_a);
{? ~BLK.first()
|| BLK.ACR:='ZGP';
   BLK.MSK:=ZGP.name();
   BLK.REF:=_a;
   BLK.SES_ID:=ZGP.ses_id();
   _ok:=BLK.add()
|| _ok:=1
?};
{? _ok
|| {? BLK.r_lock(1,1,1)
   || BLK.SES_ID:=P.ses_id();
      _ok:=BLK.put()
   ||
      FUN.emsg(
         'Karty dla tej pozycji są redagowane przez użytkownika \'%1\' '
         'na terminalu \'%2\'.'@[KAL_UD.ses_info(BLK.SES_ID,'log_name'),KAL_UD.ses_info(BLK.SES_ID,'log_tty')]
      );
      _ok:=0
   ?}
?};
_ok


\zgp_unlock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: Usuniecie blokady rekordu pozycji przewodnika ( ZGP.r_unlock() )
::   WE: _a - #ZGP.ref(), a jak brak parametru, to ustawiony rekord w tabali ZGP
::  OLD: \zgp_unlock/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=#ZGP.ref() ?};
BLK.index('AMR');
BLK.prefix('ZGP',ZGP.name(),_a);
{? BLK.first()
|| BLK.r_unlock();
   BLK.del()
?};
~~


\pracowni_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Blokada rekordu pracownika ( P.r_lock(1,1,1) )
::   WE: _a - #P.ref(), a jak brak parametru, to ustawiony rekord w tabali OS_VIEW
::   WY: 0 / 1
::  OLD: \osv_lock/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=#P.ref() ?};
_ok:=0;
BLK.index('AMR');
BLK.prefix('P',P.name(),_a);
{? ~BLK.first()
|| BLK.ACR:='P';
   BLK.MSK:=P.name();
   BLK.REF:=_a;
   BLK.SES_ID:=P.ses_id();
   _ok:=BLK.add()
|| _ok:=1
?};
{? _ok
|| {? BLK.r_lock(1,1,1)
   || BLK.SES_ID:=P.ses_id();
      _ok:=BLK.put()
   ||
      FUN.emsg(
         'Karty dla tego pracownika są redagowane przez użytkownika \'%1\' '
         'na terminalu \'%2\'.'@[KAL_UD.ses_info(BLK.SES_ID,'log_name'),KAL_UD.ses_info(BLK.SES_ID,'log_tty')]
      );
      _ok:=0
   ?}
?};
_ok


\pracowni_unlock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Usunięcie blokady rekordu pracownika ( P.r_unlock() )
::   WE: _a - #P.ref(), a jak brak parametru, to ustawiony rekord w tabali OS_VIEW
::  OLD: \osv_unlock/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=#P.ref() ?};
BLK.index('AMR');
BLK.prefix('P',P.name(),_a);
{? BLK.first()
|| BLK.r_unlock();
   BLK.del()
?};
~~


\zlbr_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: Blokada rekordu brygady ( ZLBR.r_lock(1,1,1) )
::   WE: _a - #ZLBR.ref(), a jak brak parametru, to ustawiony rekord w tabali ZLBR
::   WY: 0 / 1
::  OLD: \zlbr_lock/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) || _zlbr:=_a || _zlbr:=#ZLBR.ref() ?};

_ok:=1;
{? _zlbr=0 || return(_ok) ?};

BLK.index('AMR');
BLK.prefix('ZLBR',ZLBR.name(),_zlbr);
{? ~BLK.first()
|| BLK.ACR:='ZLBR';
   BLK.MSK:=ZLBR.name();
   BLK.REF:=_zlbr;
   BLK.SES_ID:=ZLBR.ses_id();
   _ok:=BLK.add()
|| _ok:=1
?};
{? _ok
|| {? BLK.r_lock(1,1,1)
   || BLK.SES_ID:=ZLBR.ses_id();
      _ok:=BLK.put()
   ||
      FUN.emsg(
         'Karty dla tej brygady są redagowane przez użytkownika \'%1\' '
         'na terminalu \'%2\'.'@[KAL_UD.ses_info(BLK.SES_ID,'log_name'),KAL_UD.ses_info(BLK.SES_ID,'log_tty')]
      );
      _ok:=0
   ?}
?};
_ok


\zlbr_unlock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: Usuniecie blokady rekordu brygady ( ZLBR.r_unlock() )
::   WE: _a - #ZLBR.ref(), a jak brak parametru, to ustawiony rekord w tabali ZLBR
::  OLD: \zlbr_unlock/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=#ZLBR.ref() ?};
BLK.index('AMR');
BLK.prefix('ZLBR',ZLBR.name(),_a);
{? BLK.first()
|| BLK.r_unlock();
   {? BLK.r_lock(1,1,1) || BLK.del() ?}
?};
~~


\sum_kap_zgp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: Sumuje ilość godzin zadanych i wykonanych z kart pracy dla pozycji przewodnika
::   WE: [_a] - ZGP.ref()
::       [_b] - czy wyliczać ilości wykonane (ZLGD): [1] - Tak, 0 - Nie
::       [_c] - maski: 1 - wszystkie, [0] - tylko aktualna
::       [_d] - P.ref()/ZLBR.ref() - wyliczenie ilości na kp oraz ilości wykonanych dla danego pracwonika/brygady
::  OLD: \sum_kap_zgp/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>0 || _zgp:=_a || _zgp:=ZGP.ref() ?};
_chk_zlgd:={? var_press('_b')=type_of(0) || _b || 1 ?};
_all_msk:={? var_press('_c')=type_of(0) || _c || 0 ?};
_pb:={? var_press('_d')=type_of(null()) || _d || null() ?};

VAR1.K_SUM_I:=VAR1.K_SUM_T:=VAR1.K_SUM_WI:=VAR1.K_SUM_WT:=VAR1.K_SUMPI:=VAR1.K_SUMPWI:=0;
KAP.cntx_psh();
ZGP.cntx_psh();
ZGP.clear();
{? ZGP.seek(_zgp)
|| _name:=5+KAP.name();
   ZL.cntx_psh();
   {? _all_msk=0
   || _msk_start:=KAP.name();
      _msk_end:=_msk_start
   || _msk_start:=_name+ZGP.ZL().ODDZ+(2-$(ZL.OD~1));
      {? ZL.STAN='Z'
      || _rok:=exec('max','#math',ZL.ROK_MAX,ZL.DO~1);
         _msk_end:=_name+ZGP.ZL().ODDZ+(2-$(_rok))
      || _rok:=exec('max','#math',ZL.ROK_MAX,date()~1,ST.AR);
         _msk_end:=_name+ZGP.ZL().ODDZ+(2-$(_rok))
      ?}
   ?};
   ZL.cntx_pop();

   _rule:="
      _args:=_b;
      _zgp:=_args.ZGP;
      _chk:=_args.CHK_ZLGD;
      _pb:=_args.PB;
      ZLGD.cntx_psh();
      KAP.index('ZDP');
      KAP.prefix(_zgp);
      {? KAP.first()
      || {!
         |?
            VAR1.K_SUM_I+=KAP.IL;
            VAR1.K_SUM_T+=KAP.TIME;
            _sumpwi:=0;
            {? _pb<>null & ((KAP.P<>null() & KAP.P=_pb) | (KAP.B<>null() & KAP.B=_pb))
            || VAR1.K_SUMPI+=KAP.IL;
               _sumpwi:=1
            ?};
            {? _chk>0
            || ZLGD.use(5+ZLGD.name()+(KAP.name()+3));
               ZLGD.index('KAP');
               ZLGD.prefix(KAP.ref());
               {? ZLGD.first()
               || {!
                  |? VAR1.K_SUM_WI+=ZLGD.IL;
                     VAR1.K_SUM_WT+=ZLGD.TIME;
                     {? _sumpwi
                     || VAR1.K_SUMPWI+=ZLGD.IL
                     ?};
                     ZLGD.next()
                  !}
               ?}
            ?};
            KAP.next()
         !}
      ?};
      ZLGD.cntx_pop()
   ";
   _args:=obj_new('ZGP','CHK_ZLGD','PB');
   _args.ZGP:=_zgp;
   _args.CHK_ZLGD:=_chk_zlgd;
   _args.PB:=_pb;
   exec('for_each_mask','#table',KAP,_rule,_msk_start,_msk_end,_args)
?};
ZGP.cntx_pop();
KAP.cntx_pop();
~~


\ust_zm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2010]
:: OPIS: Przed redagowaniem pola KAP.ZGP
::  OLD: \ust_zm/karta.fml
::----------------------------------------------------------------------------------------------------------------------


\po_zmka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2010]
:: OPIS: Po redagowaniu pola KAP.ZGP
::  OLD: \po_zmka/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.ZAKLADKI*'R'>0
|| {? VAR1.TPZ='N' || KAP.IL:=ZGP.ILOSC-VAR1.K_SUM_I ?};
   exec('sum_kap_zgp','zl_kap',_zgp)
?};
1


\kapbpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [12.10]
:: OPIS: Przed redakcja brygada na kartach pracy
::  OLD: \kapbpr/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.ZAKLADKI*'R'>0
|| KAP.ZGP().BRYG='T'
|| 1
?}


\bd_kap_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.10]
:: OPIS: Przed wyswietleniem pola KAP.IL
::  OLD: \bd_kap_il/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.A_NRPRZ().ZLEC().TYP().WP<>'W' & ~VAR1.IN_TPZ || ~~ || exec('findfnv','#color') ?}


\be_kap_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.10]
:: OPIS: Przed redakcja pola KAP.IL
::  OLD: \be_kap_il/karta.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.A_NRPRZ().ZLEC().TYP().WP<>'W' & ~VAR1.IN_TPZ


\bd_kap_time
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.10]
:: OPIS: Przed wyswietleniem pola KAP.TIME
::  OLD: \bd_kap_time/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.A_NRPRZ().ZLEC().TYP().WP='W' | VAR1.IN_TPZ || ~~ || exec('findfnv','#color') ?}


\be_kap_time
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.10]
:: OPIS: Przed redakcja pola KAP.TIME
::  OLD: \be_kap_time/karta.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.A_NRPRZ().ZLEC().TYP().WP='W' | VAR1.IN_TPZ


\chk_kap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: Kontrola rekordu KAP.ZGP
::       Kontekst wywołania: wypełniony bufor KAP oraz rekord ZGP
::   WY: STRING '' lub pole do którego wrócić
::  OLD: \chk_kap/karta.fml
::----------------------------------------------------------------------------------------------------------------------
_result:='';
{? ~exec('zgp_lock','zl_kap',KAP.ZGP)
|| _result:='DT'
|| exec('zgp_unlock','zl_kap',KAP.ZGP)
?};
{? _result='' & KAP.P<>null()
|| {? ~exec('pracowni_lock','zl_kap',KAP.P)
   || _result:='P_NAZ'
   || exec('pracowni_unlock','zl_kap',KAP.P)
   ?}
?};
{? _result='' & KAP.B<>null()
|| {? ~exec('zlbr_lock','zl_kap',KAP.B)
   || _result:='B'
   || exec('zlbr_unlock','zl_kap',KAP.B)
   ?}
?};

{? _result=''
||
   {? ZGP.ZL().TYP().WP='W' | VAR1.IN_TPZ
   || _result:=__CHK.record(KAP,,{? ZGP.BRYG='T' || 'B' || 'P_NAZ' ?},'KRED_ZGH','KRED_ZGP')
   || _result:=__CHK.record(KAP,,{? ZGP.BRYG='T' || 'B' || 'P_NAZ' ?},'KRED_ZGH','KRED_ZGP')
   ?}
?};
{? _result='' & VEK.TERM<>'T' & ZGP.BRYG<>'T'
|| {? KAP.P=null()
   || FUN.emsg('Pole "Pracownik" musi być wypełnione.\nNależy uzupełnić brakujące informacje.'@);
      _result:='P_NAZ'
   ?}
?};
{? _result='' & KAP.DT~1<>ST.AR
|| FUN.emsg(
      'Błędnie wypełniona data na karcie: %1\n\n'
      'Data musi pochodzić z wybranego roku: %2'@[$KAP.DT,$ST.AR]
   );
   _result:='DT'
?};
{? _result='' & KAP.DT<KAP.ZGH().ZLEC().OD
|| FUN.emsg('Data na karcie nie może być wcześniejsza niż data powołania zlecenia.'@);
   _result:='DT'
?};
{? _result='' & ZGP.ENDD<>date(0,0,0)
|| {? KAP.DT>ZGP.ENDD
   || _choice:=FUN.choice(
         'Błędnie wypełniona data w karcie: %1\n\n'
         'Sugerowany zakres dat:\n'
         '• początek: %2\n'
         '• koniec: %3'@[$KAP.DT,$ZGP.STARTD,$ZGP.ENDD],,
         'Akceptuj'@,,,,'Popraw'@
      );
      {? _choice=1
      || _result:=''
      || _result:='DT'
      ?}
   ?}
?};
{? _result='' & ZGP.STARTD<>date(0,0,0)
|| {? KAP.DT<ZGP.STARTD
   || _choice:=FUN.choice(
         'Błędnie wypełniona data w karcie: %1\n\n'
         'Sugerowany zakres dat:\n'
         '• początek: %2\n'
         '• koniec: %3'@[$KAP.DT,$ZGP.STARTD,$ZGP.ENDD],,
         'Akceptuj'@,,,,'Popraw'@
      );
      {? _choice=1
      || _result:=''
      || _result:='DT'
      ?}
   ?}
?};
:: Sprawdzam czy skład brygady nie jest pusty na zadany dzień
{? _result='' & VEK.TERM<>'T' & KAP.B<>null() & ~exec('zlbr_chk_zlbs','prod_rej',KAP.B,KAP.DT,1)
|| _result:='B'
?};

{? _result=''
|| {? VAR.A_NRPRZ().ZLEC().TYP().WP='W' | VAR1.IN_TPZ
   || {? KAP.TIME<0
      || FUN.info('Czas nie może być liczbą ujemną.'@);
         _result:='TIME'
      |? KAP.TIME=0
      || {? ~FUN.ask('Zarejestrowana zostanie karta pracy z zerowym czasem.\n\nCzy kontynuować?'@)
         || _result:='TIME'
         ?}
      || ''
      ?}
   || _dokl:=exec('jaka_dok_m','jm',KAP.ZGH().ZLEC().KTM);
      _wynik:=exec('poil','zl_wyk', {? _dokl=0 || 'N' || 'T' ?},'KAP.IL',_dokl);
      {? _wynik
      || {? KAP.IL=0
         || {? ~FUN.ask('Zarejestrowana zostanie karta pracy z zerową ilością.\n\nCzy kontynuować?'@)
            || _result:='IL'
            ?}
         |? _il:=ZGP.ILOSC-VAR1.K_SUM_I+{? -~menu_txt='popraw' || __IL || 0 ?};{? _il<0 || _il:=0 ?}; KAP.IL>_il
         || {? FUN.choice(
                  'Błędnie wypełniona ilość w karcie (maksimum: %1).'@[$_il],,
                  'Akceptuj'@,,,,'Popraw'@
               )
            || ''
            || _result:='IL'
            ?}
         || ''
         ?}
      || _result:='IL'
      ?}
   ?}
?};
_result


\kap_z_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: Dołączanie karty pracy dla pozycji przewodnika
::  OLD: \kap_z_dol/karta.fml
::----------------------------------------------------------------------------------------------------------------------
KAP.blank();
KAP.ZGH:=ZGP.NRZLP;
_zgp:={? VAR1.IN_TPZ || __ZGPTPZ || ZGP.ref() ?};
KAP.ZGP:=_zgp;
KAP.DT:=ZGP.STARTD;
{? KAP.DT=date(0,0,0) || KAP.DT:=date() ?};
{? ZGP.BRYG='T'
|| KAP.win_edit('RED_BZ')
|| KAP.win_edit('RED_Z')
?};
exec('sum_kap_zgp','zl_kap',_zgp,,1);
exec('efld_opt','zl_kap');
{? VAR1.TPZ='N' || KAP.IL:=ZGP.ILOSC-VAR1.K_SUM_I ?};
{? KAP.IL<0 || KAP.IL:=0 ?};
{? KAP.edit("exec('chk_kap','zl_kap')")
|| {? KAP.add()
   || VAR1.K_SUM_I+=KAP.IL;
      VAR1.K_SUM_T+=KAP.TIME
   ?}
?};
~~


\kap_z_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: Poprawianie karty pracy dla pozycji przewodnika
::  OLD: \kap_z_pop/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZGP.BRYG='T'
|| KAP.win_edit('RED_BZ')
|| KAP.win_edit('RED_Z')
?};
exec('sum_kap_zgp','zl_kap');
exec('efld_opt','zl_kap');
__IL:=KAP.IL; __TIME:=KAP.TIME;
{? KAP.edit("exec('chk_kap','zl_kap')")
|| {? KAP.put()
   || VAR1.K_SUM_I:=VAR1.K_SUM_I-__IL+KAP.IL;
      VAR1.K_SUM_T:=VAR1.K_SUM_T-__TIME+KAP.TIME
   ?}
?};
&__IL; &__TIME;
~~


\kap_z_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [8.70]
:: OPIS: Usuwanie karty pracy dla pozycji przewodnika
::  OLD: \kap_z_usu/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? KAP.count()<>0
|| FUN.info('Karta wykorzystana — nie można usunąć.'@)
||
   {? FUN.ask('Czy usunąć bieżący wiersz?'@)
   || {? KAP.del(,1)
      || VAR1.K_SUM_I-=KAP.IL;
         VAR1.K_SUM_T-=KAP.TIME
      ?}
   ?}
?};
~~


\kap2zlgd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2011]
:: OPIS: Wyświetla powiązane z KAP rekordy w ZLGD
::  OLD: \kap2zlgd/karta.fml
::----------------------------------------------------------------------------------------------------------------------
_zlgd:=sql('
   select
      ZL.SYM as ZL,
      case
         when ZLGD.BP=''P'' then (''Pracownik: '' || OSOBA.NAZWISKO || '' '' || OSOBA.PIERWSZE)
         when ZLGD.BP=''B'' then (''Brygada: '' || ZLBR.KOD)
         else ''???''
      end as P,
      ZLGD.DT,
      ZLGD.ZMIANA,
      ZLGD.IL,
      ZLGD.IL_BRAK
   from @ZLGD
   join ZL
   left join P using(ZLGD.P,P.REFERENCE) left join OSOBA using(P.OSOBA,OSOBA.REFERENCE)
   left join ZLBR using(ZLGD.B,ZLBR.REFERENCE)
   where ZLGD.KAP=:_a
',KAP.ref());
_wer:=_zlgd.mk_sel('Rozliczenie godzin'@,,0,'kap2zlgd',,5,15);
_zlgd.win_fld(_wer,,'ZL',,,20,,,'Zlecenie'@);
_zlgd.win_fld(_wer,,'P',,,50,,,' ');
_zlgd.win_fld(_wer,,'DT',,,,,,'Data'@);
_zlgd.win_fld(_wer,,'ZMIANA',,,2,,,'Zmiana'@);
_zlgd.win_fld(_wer,,'IL',,,15,4,,'Ilość — dobre'@);
_zlgd.win_fld(_wer,,'IL_BRAK',,,15,4,,'Ilość — braki'@);
_zlgd.win_sel(_wer);
_zlgd.select();
~~


\druk_kap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: drukowanie kart pracy
::  OLD: \druk_kap/drukujp.fml
::----------------------------------------------------------------------------------------------------------------------
:: Zakładamy, że VAR.TYMCZAS jest poprawinie ustawione
params_set(params_get());
exec('rep_exec','#b_report','TTE_TEC_XXXX','tte_kap_*','Wydruki kart pracy',1);
1


\legenda_kap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2011]
:: OPIS: 'Legenda' w oknach wertowania tabeli KAP
::  OLD: \legenda_kap/karta.fml
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','KAP#01#01');
~~


\rkprz_kap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2011]
:: OPIS: 'Przed rekord' w oknach wertowania tabeli KAP
::  OLD: \rkprz_kap/karta.fml
::----------------------------------------------------------------------------------------------------------------------
VAR1.IN_TPZ:=KAP.ZGP().TPZ='T';
VAR.A_NRPRZ:=KAP.ZGH;
VAR1.K_WYK_I:=VAR1.K_WYK_T:=0;
ZLGD.cntx_psh();
ZLGD.index('KAP');
ZLGD.prefix(KAP.ref());
{? ZLGD.first()
|| {!
   |? VAR1.K_WYK_I+=ZLGD.IL;
      VAR1.K_WYK_T+=ZLGD.TIME;
      ZLGD.next()
   !};
   _result:='KAP#01#01'
|| _result:=''
?};
ZLGD.cntx_pop();
_result


\kart_zlec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2011]
:: OPIS: Selekcja kart pracy od strony zlecenia
::       Kontekst wywołania: VAR.A_ZLEC
::  OLD: \kart_zlec/karta.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('access','zl_wyk')
||
   ZL.cntx_psh(); ZL.prefix();
   KAP.cntx_psh();
   ZGH.cntx_psh();
   ZGP.cntx_psh();
   ZLGD.cntx_psh();
   ZLGB.cntx_psh();

:: tutaj już naprawdę staję na odpowiednim ZGP.ref()
   {? ZL.seek(VAR.A_ZLEC)
   ||
      _wer:='WER_ZL';
      _red:='RED_ZL';

      {? var_pres('bie_r')>100 || obj_del(bie_r) ?};

      _env:=obj_new('bie_r','ZL'); _env.bie_r:=ST.AR; _env.ZL:=exec('buffer','zl_head'); _env.ZL.get();
      params_set('env',_env);

      _grp:=exec('win_grp','zl_kap',2,,_wer);
      KAP.win_sel(_grp);
      KAP.win_edit(_red);
      KAP.select()
   ?};

   KAP.cntx_pop(); KAP.f_clear();
   ZLGD.cntx_pop();
   ZLGB.cntx_pop();
   ZGP.cntx_pop();
   ZGH.cntx_pop();
   ZL.cntx_pop()
?};
~~


\efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Opcje pól w oknach redagowania KAP
::----------------------------------------------------------------------------------------------------------------------
_opt:=(VAR.A_NRPRZ().ZLEC().TYP().WP<>'W' & ~VAR1.IN_TPZ);
KAP.efld_opt('RED_BZ','enable='+$_opt,,'IL');
KAP.efld_opt('RED_BZ','enable='+$~_opt,,'TIME');
KAP.efld_opt('RED_Z','enable='+$_opt,,'IL');
KAP.efld_opt('RED_Z','enable='+$~_opt,,'TIME');
~~


\zgp_is_kap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Sprawdza, czy do podanego przewodnika (ZGP) jest przypisana karta pracy (w dowolnej masce).
::   WE: _a - ZGP.ref()
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_zgp:=_a;
{? _zgp<>null()
|| ZGP.cntx_psh();
   ZGP.clear();
   {? ZGP.seek(_zgp)
   || _name:=5+KAP.name();
      ZL.cntx_psh();
      _msk_start:=_name+ZGP.ZL().ODDZ+(2-$(ZL.OD~1));
      {? ZL.STAN='Z'
      || _rok:=exec('max','#math',ZL.ROK_MAX,ZL.DO~1);
         _msk_end:=_name+ZGP.ZL().ODDZ+(2-$(_rok))
      || _rok:=exec('max','#math',ZL.ROK_MAX,date()~1,ST.AR);
         _msk_end:=_name+ZGP.ZL().ODDZ+(2-$(_rok))
      ?};
      ZL.cntx_pop();
      _rule:="
         _result:=0;
         _zgp:=_b;
         KAP.cntx_psh();
         KAP.index('REF');
         KAP.prefix(_zgp);
         {? KAP.first()
         || _result:=1
         ?};
         KAP.cntx_pop();
         _result
      ";
      _result:=~exec('for_each_mask','#table',KAP,_rule,_msk_start,_msk_end,_zgp,0)
   ?};
   ZGP.cntx_pop()
?};
_result


\win_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Tworzy okno grupowe do wyświetlania kart pracy dla byrgad (wraz ze składem brygady)
::   WE: [_a] - rodzaj okna: [0] - selekcja kart dla aktualnego okresu
::                            1  - selekcja kart z wybranych lat dla pozycji przewodnika (praca na aktualnym rek. ZGP)
::                            2  - selekcja kart z wybranych lat dla zlecenia (praca na aktualnym rekordzie ZL)
::       [_b] - typ kart pracy: 0 - pracownik , [1] - brygada
::       [_c] - nazwa okna wertowania tabeli KAP (główne okno wertowania w oknie grupowym). Domyślnie WER_Z/WER_BZ
::   WY: utworzone okno grupowe
::----------------------------------------------------------------------------------------------------------------------
_type:={? var_press('_a')=type_of(0) || _a || 0 ?};
_bryg:={? var_press('_b')=type_of(0) || _b || 1 ?};
_wer:={? var_press('_c')=type_of('') || _c || {? _bryg || 'WER_BZ' || 'WER_Z' ?} ?};
_ident:={? _type=2
        || 'kartypracyzl'
        |? _type=1
        || 'kartypracyzgp'+(-ZGP.BRYG)
        || 'kartypracy'+{? _bryg || 't' || 'n' ?}
        ?};
_title:={? _type=2
        || 'Karty pracy zlecenia: %1'@[ZL.SYM]
        || 'Karty pracy'@
        ?};

_grp:=KAP.grp_make(_title,,_ident,,,,,'normal');

_od:={? _type=2 || ZL.OD~1 |? _type=1 || ZGP.NRZLP().ZLEC().OD~1 || date()~1 ?};

exec('__KAL','object');

{! _rok:=date()~1 // -1 .. _od
|!
   {? _type=2
   || _form:=$("
         _env:=params_get().env;
         _env.bie_r:="+$_rok+";
         KAP.use('kap__'+ST.ODDZ+(($_env.bie_r)+2));
         ZLGD.use('zlgd_'+ST.ODDZ+(($_env.bie_r)+2));
         ZLGB.use('zlgb_'+ST.ODDZ+(($_env.bie_r)+2));
         _args:=obj_new('zl'); _args.zl:='(\'''+$_env.ZL.ref()+'\'')'; params_set('args',_args);
         {? _env.ZL.RODZAJ='Z' | _env.ZL.RODZAJ='N'
         || params_exec('zl_iterate','zl_common',\"params_get().args.zl+=',(\'''+$ZL.ref()+'\'')'\",_env.ZL.ref())
         ?};
         KAP.index('ZLEC');
         KAP.prefix();
         KAP.f_set(
            'ZGH(NRPRZ),ZGP(NRP)',
            'join ZGH as ZGH1 using(2ZGP.NRZLP,ZGH1.REFERENCE)',
            '(ZGH1.ZLEC) in values :_a',
            _args.zl
         );
         KAP.f_first()
      ")
   |? _type=1
   || _form:=$("
         params_get().env.bie_r:="+$_rok+";
         KAP.use('kap__'+ST.ODDZ+(($params_get().env.bie_r)+2));
         ZLGD.use('zlgd_'+ST.ODDZ+(($params_get().env.bie_r)+2));
         ZLGB.use('zlgb_'+ST.ODDZ+(($params_get().env.bie_r)+2));
         exec('sum_kap_zgp','zl_kap',ZGP.ref());
         {? params_get().env.bie_r=ST.AR & ZGP.STATUS<>exec('status_end','zl_guide')
         || KAP.actions('"+_wer+"','',,1)
         || KAP.actions('"+_wer+"','DPU:D',,1)
         ?};
         KAP.index('ZDP');
         KAP.prefix(ZGP.ref());
         KAP.first()
      ")
   || _form:="~~"
   ?};
   {? _bryg
   || _af:="
         ZLBS.index('BODIP');
         ZLBS.prefix(KAP.B);
         grp_disp(ZLBS,'WER_PRJ');
         grp_disp(R_WZCZ,'ZAS');
         ~~
      "
   || _af:="~~"
   ?};
   KAP.grp_sel(_grp,,_wer,{? _type<>0 ||$_rok || '' ?},_af,,,,_form,,,,'maximized')
!};
:: Dodanie panelu ze składem brygady
{? _bryg
|| R_WZCZ.index('R_WZWND');
   KAP.grp_splt(_grp,,'horizontal','zlbs',20);
   _before:=$("
      {? (grp_empty(KAP,'"+_wer+"',1) | KAP.B=null()) & 1
      || '#disable'
      || _grayed:={? ZLBR.AKT='T' & exec('blk_lock','#table','ZLBR',ZLBR.ref()) || '' || 'DpuG:DG' ?};
         ZLBS.actions_grayed('WER_PRJ',_grayed);
         ~~
      ?}

   ");
   KAP.grp_sel(_grp,ZLBS,'WER_PRJ','Skład brygady'@,,,,,_before,"exec('blk_unlock','#table','ZLBR',ZLBR.ref())"
               ,,,'maximized'
   );
   _before:=$("
      {? grp_empty(KAP,'"+_wer+"',1) | KAP.B=null()
      || '#disable'
      || R_WZCZ.prefix(ZLBR.name(),ZLBR.ref(),'N','N');
         {? ~R_WZCZ.size()
         || exec('dod_kal_czesc','kaledit',ZLBR)
         ?};
         R_WZCZ.win_edit('KAL');
         {? _a
         || exec('r_wzcz_fld_fml','kaledit',ZLBR);
            __KAL.set_cal(ZLBR.KAL)
         ?};
         ~~
      ?}
   ");
   KAP.grp_sel(_grp,R_WZCZ,'ZAS','Wzorce czasu pracy'@,,,,,_before,"exec('r_wzcz_fld_fml','kaledit')",,,'maximized')
?};
_grp


\rej_bez_kap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Akcja Zarejestruj bez kart pracy - rejestracja wykonania z pominięciem powiązania z kartami pracy
::----------------------------------------------------------------------------------------------------------------------
VAR1.BEZ_KAP:='T';
sel_exit();
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 0bbff9888fd1ec6317e04b24fea30daf517044b4acbe6bb873eb48dad8d3a10f346662f03132b3f2633753d5802dea937dcf75f0d1feb1dc2ac6ec658d5b22b1ff3d105540c714f1ed23003a0d0a28adaf5eda555578c3e8d97990b8e799141e75cce8298507b2e2a934b65016625e676a928a5851a8726cfba6db0daf2c033b
