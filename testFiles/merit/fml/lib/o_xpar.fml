:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: o_xpar.fml
:: Utworzony: 28.10.2020
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły biblioteczne dla obsługi tabel O_RPAR i O_ZPAR.
::======================================================================================================================


\_r_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem lub poprawieniem wiersza tabeli O_RPAR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
O_FPAR.cntx_psh();
O_RPAR.O_DPAR:=O_RPAR.O_FPAR().O_DPAR;
O_RPAR.FIRMA:=O_RPAR.O_FPAR().FIRMA;
O_FPAR.cntx_pop();
1


\_r_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(O_RPAR,
:: sprawdź wymagane dane i unikalność indeksów
   $("_a.table(_b,"+$_mode+",'IDREK','O_FPAR')")
)


\_r_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli O_RPAR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_r_modb','o_xpar') & exec('_r_chk','o_xpar',0)


\_r_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli O_RPAR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_r_modb','o_xpar') & exec('_r_chk','o_xpar',1)


\_z_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem lub poprawieniem wiersza tabeli O_ZPAR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
O_FPAR.cntx_psh();
O_ZPAR.O_DPAR:=O_ZPAR.O_FPAR().O_DPAR;
O_ZPAR.FIRMA:=O_ZPAR.O_FPAR().FIRMA;
O_FPAR.cntx_pop();
1


\_z_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(O_ZPAR,
:: sprawdź wymagane dane i unikalność indeksów
   $("_a.table(_b,"+$_mode+",'IDREK','O_FPAR','WARTOSC')"),
:: zweryfikuj dozwolone wartości
   "_a.in_set(_b,'WARTOSC',,'T','N')"
)


\_z_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli O_ZPAR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawnl
::----------------------------------------------------------------------------------------------------------------------
exec('_z_modb','o_xpar') & exec('_z_chk','o_xpar',0)


\_z_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli O_ZPAR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawml
::----------------------------------------------------------------------------------------------------------------------
exec('_z_modb','o_xpar') & exec('_z_chk','o_xpar',1)


\del_ndx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Usuwa zawartość tabel w zakresie wskazanym argumentem.
::   WE: _a ANY - ograniczenie zakresu
::   WY: wynik operacji usuwania
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_val:=_a;
_key:='';

{? type_of(_val)=type_of('')
|| _key:='SYMBOL'
|? type_of(_val)=type_of(null) & _val<>null
|| {? ref_tab(_val)=O_FPAR
   || _key:='UNIQUE'
   |? ref_tab(_val)=O_DPAR
   || _key:='FK_1'
   ?}
|| return(0)
?};

exec('del_ndx','#table',O_RPAR,_key,_val) &
exec('del_ndx','#table',O_ZPAR,_key,_val)


\buf_blank_fml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Tworzy bufor treści formuł na wartość początkową pól IDREK tabel O_RPAR i O_ZPAR.
::   WE:
::   WY: wskazanie tablicy nazwanej o strukturze:
::       O_RPAR - treść formuły na wartość początkową pola O_RPAR.IDREK
::       O_ZPAR - treść formuły na wartość początkową pola O_ZPAR.IDREK
::----------------------------------------------------------------------------------------------------------------------
obj_new('O_RPAR','O_ZPAR')


\get_blank_fml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Pobiera treści formuł na wartość początkową pól IDREK tabel O_RPAR i O_ZPAR.
::   WE:
::   WY: wskazanie tablicy nazwanej (patrz \buf_blank_fml/o_xpar)
::----------------------------------------------------------------------------------------------------------------------
_buf:=exec('buf_blank_fml','o_xpar');
_fld:='IDREK';
_fml:='*BLANK';

_buf.O_RPAR:=O_RPAR.fld_fml(_fld,_fml);
_buf.O_ZPAR:=O_ZPAR.fld_fml(_fld,_fml);

_buf


\set_blank_fml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Ustawia formuły na wartość początkową pól IDREK tabel O_RPAR i O_ZPAR.
::   WE: _a OBJECT - wskazanie tablicy nazwanej (patrz \buf_blank_fml/o_xpar)
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_buf:=_a;
_fld:='IDREK';
_fml:='BLANK';

_buf.O_RPAR:=O_RPAR.fld_fml(_fld,_fml,_buf.O_RPAR);
_buf.O_ZPAR:=O_ZPAR.fld_fml(_fld,_fml,_buf.O_ZPAR);

~~


\tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zwraca alias tabeli z wartościami dla podanego typu.
::   WE: _a [STRING] - typ wartości
::   WY: alias tabeli lub ~~
::----------------------------------------------------------------------------------------------------------------------
{? _a='R' || O_RPAR
|? _a='Z' || O_ZPAR
|| ~~
?}


\create_rid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Tworzy identyfikator rekordu
::   WE: _a TABLE - alias tabeli
::   WY: identyfikator
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;

{? (_id:=_TAB.idadd_value())=''
|| _id:='TMP:%1'[$_TAB.tm_stamp()]
?};

_id


\set_blank_rid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Ustawia formuły na wartość początkową pól IDREK tabel O_RPAR i O_ZPAR.
::   WE: _a STRING - identyfikator rekordu
::   WY:  wskazanie tablicy nazwanej (patrz \buf_blank_fml/o_xpar)
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_rid:=_a;
_fld:='IDREK';
_fml:='BLANK';
_exe:=$'\'%1\''[_rid];

_buf:=exec('buf_blank_fml','o_xpar');
_buf.O_RPAR:=O_RPAR.fld_fml(_fld,_fml,_exe);
_buf.O_ZPAR:=O_ZPAR.fld_fml(_fld,_fml,_exe);

_buf


\grp_make
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Tworzy panel zawierający parametry listy/kryterium.
::   WE:
::   WY: akronim okienka
::----------------------------------------------------------------------------------------------------------------------
_mod:='maximized';
_grp:=O_ZPAR.grp_make(,,'#o_xpar',,,,,'normal');
O_ZPAR.grp_sel(_grp,O_ZPAR,'WER','Znaczniki sterujące'@,,,,,,,,,_mod);
O_ZPAR.grp_sel(_grp,O_RPAR,'WER','Wartości liczbowe'@,,,,,,,,,_mod);
_grp


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyświetlenie listy parametrów.
::   WE: _a TABLE - alias tabeli
::       _b [INTEGER] - <>0 blokada akcji, wpp akcje dostępne
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;
_lck:=(var_pres('_b')=type_of(0) & _b<>0);

_grp:=exec('grp_make','o_xpar');
_exe:=exec('get_blank_fml','o_xpar');

O_ZPAR.cntx_psh();
O_ZPAR.index('NAZWA');
O_ZPAR.prefix(_exe.O_ZPAR());
O_RPAR.cntx_psh();
O_RPAR.index('NAZWA');
O_RPAR.prefix(_exe.O_RPAR());

O_ZPAR.win_sel(_grp);
O_ZPAR.hdr_sel(
   {? _TAB=KT || 'Parametry kryterium'@
   |? _TAB=O  || 'Parametry listy płac'@
   || ''
   ?}
);
{? _lck
|| O_RPAR.actions('WER','DPUZ:DZ');
   O_ZPAR.actions('WER','DPUWYZ:DZ')
?};
O_ZPAR.select();
O_RPAR.actions('WER');
O_ZPAR.actions('WER');

O_RPAR.cntx_pop();
O_ZPAR.cntx_pop();

:: porządki
O_ZPAR.win_del(_grp);
~~


\r_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem zapisu w okienkach tabeli O_RPAR.
::   WE:
::   WY: wynik sprawdzenia warunku wykonania zasadniczej akcji
::----------------------------------------------------------------------------------------------------------------------
1


\r_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Dołączenie zapisu w okienkach tabeli O_RPAR.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_exe:=exec('get_blank_fml','o_xpar');
_rid:=_exe.O_RPAR();

{? (_sel:=exec('wybierz','o_fpar','R',_rid,1)).OK
|| exec('uzupelnij','o_xpar',O_RPAR,_sel.O_FPAR)
?};
~~


\r_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed poprawieniem zapisu w okienkach tabeli O_RPAR.
::   WE:
::   WY: wynik sprawdzenia warunku wykonania zasadniczej akcji
::----------------------------------------------------------------------------------------------------------------------
1


\r_popraw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Poprawienie zapisu w okienkach tabeli O_RPAR.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
O_RPAR.get();
_chk:="
   _chk:=exec('_r_chk','o_xpar',1);
   {? (type_of(_chk)=type_of('') & _chk<>'') |
      (type_of(_chk)=type_of(0) & _chk=0)
   || return(_chk)
   ?};
   O_RPAR.O_FPAR().O_DPAR();
   _fml:={? O_FPAR.MOD_AE='T' || O_FPAR || O_DPAR ?}.memo_txt(,1,'FML_AE');
   {? form(_fml)<>''
   || _chk:=($_fml)(O_RPAR.WARTOSC);
      {? type_of(_chk)=type_of('') & _chk<>''
      || _txt:='%1 nie jest prawidłową wartością.\n%2'[$O_RPAR.WARTOSC,_chk];
         FUN.emsg(_txt);
         return(0)
      |? type_of(_chk)=type_of(0) & _chk=0
      || _txt:='Podano nieprawidłową wartość %1.'[$O_RPAR.WARTOSC];
         FUN.emsg(_txt);
         return(0)
      ?}
   ?};
   1
";
{? O_RPAR.edit(_chk)
|| O_RPAR.put()
?};
~~


\r_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed usunięciem zapisu w okienkach tabeli O_RPAR.
::   WE:
::   WY: wynik sprawdzenia warunku wykonania zasadniczej akcji
::----------------------------------------------------------------------------------------------------------------------
1


\r_uzupelnij_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem brakujących zapisów w okienkach tabeli O_RPAR.
::   WE:
::   WY: wynik sprawdzenia warunku wykonania zasadniczej akcji
::----------------------------------------------------------------------------------------------------------------------
1


\r_uzupelnij_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Uzupełnienie zapisów w okienkach tabeli O_RPAR.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('x_uzupelnij_a','o_xpar',O_RPAR);
~~


\r_rekord_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: "Rekord przed" w okienkach tabeli O_RPAR.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
O_RPAR.O_FPAR().O_DPAR;
{? _a=0 || return() ?};

_aid:='';
{? ~exec('r_dolacz_b','o_xpar')
:: zablokuj "popraw"
|| _aid+='D'
?};
{? ~exec('r_popraw_b','o_xpar')
:: zablokuj "popraw"
|| _aid+='P'
?};

O_RPAR.actions_grayed(cur_win(1,1),_aid);
~~


\z_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem zapisu w okienkach tabeli O_ZPAR.
::   WE:
::   WY: wynik sprawdzenia warunku wykonania zasadniczej akcji
::----------------------------------------------------------------------------------------------------------------------
1


\z_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Dołączenie zapisu w okienkach tabeli O_ZPAR.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_exe:=exec('get_blank_fml','o_xpar');
_rid:=_exe.O_ZPAR();

{? (_sel:=exec('wybierz','o_fpar','Z',_rid,1)).OK
|| exec('uzupelnij','o_xpar',O_ZPAR,_sel.O_FPAR)
?};
~~


\z_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed poprawieniem zapisu w okienkach tabeli O_ZPAR.
::   WE:
::   WY: wynik sprawdzenia warunku wykonania zasadniczej akcjl
::----------------------------------------------------------------------------------------------------------------------
1


\z_popraw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Poprawienie zapisu w okienkach tabeli O_ZPAR.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
O_ZPAR.get();
{? O_ZPAR.edit("exec('_z_chk','o_xpar',1)")
|| O_ZPAR.put()
?};
~~


\z_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed usunięciem zapisu w okienkach tabeli O_ZPAR.
::   WE:
::   WY: wynik sprawdzenia warunku wykonania zasadniczej akcjl
::----------------------------------------------------------------------------------------------------------------------
1


\z_uzupelnij_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed uzupełnieniem zapisów w okienkach tabeli O_ZPAR.
::   WE:
::   WY: wynik sprawdzenia warunku wykonania zasadniczej akcjl
::----------------------------------------------------------------------------------------------------------------------
1


\z_uzupelnij_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Uzupełnienie zapisów w okienkach tabeli O_ZPAR.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('x_uzupelnij_a','o_xpar',O_ZPAR);
~~


\z_zmien
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Włącza/wyłącza parametr.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
O_ZPAR.WARTOSC:={? O_ZPAR.WARTOSC='T' || 'N' || 'T' ?};
O_ZPAR.put();
~~


\z_wlacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed włączeniem parametru w okienkach tabeli O_ZPAR.
::   WE:
::   WY: wynik sprawdzenia warunku wykonania zasadniczej akcji
::----------------------------------------------------------------------------------------------------------------------
O_ZPAR.sel_size()>1 | O_ZPAR.WARTOSC<>'T'


\z_wlacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Włączenie parametru w okienkach tabeli O_ZPAR.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? O_ZPAR.WARTOSC='N'
|| exec('z_zmien','o_xpar')
?}


\z_wylacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed wyłączeniem parametru w okienkach tabeli O_ZPAR.
::   WE:
::   WY: wynik sprawdzenia warunku wykonania zasadniczej akcji
::----------------------------------------------------------------------------------------------------------------------
O_ZPAR.sel_size()>1 | O_ZPAR.WARTOSC<>'N'


\z_wylacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyłączenie parametru w okienkach tabeli O_ZPAR.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? O_ZPAR.WARTOSC='T'
|| exec('z_zmien','o_xpar')
?};
~~


\z_rekord_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: "Rekord przed" w okienkach tabeli O_ZPAR.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
O_ZPAR.O_FPAR().O_DPAR;
{? _a=0 || return() ?};

_aid:='';
{? ~exec('z_dolacz_b','o_xpar')
:: zablokuj "popraw"
|| _aid+='D'
?};
{? ~exec('z_popraw_b','o_xpar')
:: zablokuj "popraw"
|| _aid+='P'
?};
{? ~exec('z_wlacz_b','o_xpar')
:: zablokuj "włącz"
|| _aid+='W'
?};
{? ~exec('z_wylacz_b','o_xpar')
:: zablokuj "wyłącz"
|| _aid+='Y'
?};

O_ZPAR.actions_grayed(cur_win(1,1),_aid);
~~


\jest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza, czy w tabelach parametrów istnieje jakiś zapis.
::   WE: _a [ANY] - ograniczenie zakresu
::   WY: 0/1 - brak/istnieje wiersz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_val:={? var_pres('_a')>type_of(~~) || _a || '' ?};

exec('jest_x','o_xpar',O_RPAR,_val) |
exec('jest_x','o_xpar',O_ZPAR,_val)


\jest_x
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza, czy w tabeli parametrów istnieje jakiś zapis.
::   WE: _a TABLE - alias tabeli parametrów
::       _b [ANY] - ograniczenie zakresu
::   WY: 0/1 - brak/istnieje wiersz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;
_val:={? var_pres('_b')>type_of(~~) || _b || '' ?};

_key:='';
{? type_of(_val)=type_of('')
|| _key:='SYMBOL'
|? type_of(_val)=type_of(null) & _val<>null
|| {? ref_tab(_val)=O_FPAR
   || _key:='UNIQUE'
   |? ref_tab(_val)=O_DPAR
   || _key:='FK_1'
   ?}
|| return(0)
?};

_TAB.cntx_psh();
{? type_of(_val)=type_of('') & _val=''
|| _TAB.blank();
   _val:=_TAB.IDREK
?};
_TAB.index(_key);
_TAB.prefix(_val);
_ret:=_TAB.first();
_TAB.cntx_pop();
_ret


\wartosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zwraca wartość parametru.
::   WE: _a STRING - identyfikator wiersza
::       _b STRING - symbol parametru
::   WY: any/~~ - wartość/brak parametru
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_rid:=_a;
_sym:=_b;

{? _val:=exec('wartosc_x','o_xpar',O_ZPAR,_rid,_sym);
   type_of(_val)<>type_of(~~)
|| _val

|? _val:=exec('wartosc_x','o_xpar',O_RPAR,_rid,_sym);
   type_of(_val)<>type_of(~~)
|| _val

|| ~~
?}


\wartosc_x
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zwraca wartość parametru.
::   WE: _a TABLE - alias tabeli z wartościami
::       _b STRING - identyfikator wiersza
::       _c STRING - symbol parametru
::   WY: any/~~ - wartość/brak parametru
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;
_rid:=_b;
_sym:=_c;

_val:=~~;

_TAB.cntx_psh();
_TAB.index('SYMBOL');
_TAB.prefix(_rid);
{? _TAB.find_key(_sym,)
:: znaleziono parametr
|| _val:=_TAB.WARTOSC
?};
_TAB.cntx_pop();

:: wartość
_val


\x_uzupelnij_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Uzupełnienie zapisów w okienkach wartości parametrów.
::   WE: _a TABLE - alias uzupełnianej tabeli
::       _b INTEGER - <>0 nie wyświetlaj komunikatu, wpp wyświetlaj informację
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;
_msg:=(var_pres('_b')<>type_of(0) | _b=0);
_typ:=
   {? _TAB=O_RPAR || 'R'
   |? _TAB=O_ZPAR || 'Z'
   || '?'
   ?};

:: przygotuj listę parametrów w firmie
_BUF:=exec('wybierz_buf','o_fpar').O_FPAR;
O_FPAR.cntx_psh();
O_FPAR.index('WYM_JEST');
O_FPAR.prefix(exec('ref_firma','ustawienia'),'T',_typ);
_loop:=O_FPAR.first();
{!
|? _loop
|! _BUF.NUM:=_BUF.size()+1;
   _BUF.REF:=#O_FPAR.ref();
   _BUF.SQL:=$O_FPAR.ref();
   _BUF.add();
   _loop:=O_FPAR.next()
!};
O_FPAR.cntx_pop();
:: uzupełnij brakujące parametry z firmy
_cnt:=exec('uzupelnij','o_xpar',_TAB,_BUF);

{? _msg
|| FUN.info(
      {? _cnt=0
      || 'Uzupełnienie informacji nie było wymagane.'@
      || 'Uzupełniono brakujące informacje.\n'
         'Liczba dodanych parametrów: %1'@[$_cnt]
      ?}
   )
?};
~~


\uzupelnij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Dołączenie brakujących wierszy.
::   WE: _a TABLE - alias uzupełnianej tabeli
::       _b TABLE - alias tabeli ze wskazaniami parametrów firmy
::   WY: liczba dodanych wierszy
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;
_BUF:=_b;

_cnt:=0;
O_DPAR.cntx_psh();
O_DPAR.clear();
O_FPAR.cntx_psh();
O_FPAR.prefix(exec('ref_firma','ustawienia'));
_TAB.cntx_psh();
_TAB.blank();
_TAB.index('SYMBOL');
_TAB.prefix(_TAB.IDREK);
_BUF.cntx_psh();
_BUF.prefix();

_loop:=_BUF.first();
{!
|? _loop
|! {? O_FPAR.seek(_BUF.SQL) & ~_TAB.find_key(O_FPAR.O_DPAR().SYMBOL,)
::    nie znaleziono wartości dla parametru w firmie
   || _TAB.blank();
      _TAB.O_FPAR:=O_FPAR.ref();
::    ustal wartość domyślną parametru na podstawie formuł na wartość początkową
      _val:=(${? O_FPAR.MOD_BL='T' || O_FPAR || O_DPAR ?}.memo_txt(,1,'FML_BL'))();
      _TAB.WARTOSC:=
         {? type_of(_val)<>type_of(_TAB.WARTOSC)
::          użyj wartości domyślnej dla typu danych
         || ($exec('def_fml_bl','o_dpar',O_DPAR.TYP))()
         || _val
         ?};
      _cnt+=_TAB.add()
   ?};
   _loop:=_BUF.next()
!};

_BUF.cntx_pop();
_TAB.cntx_pop();
O_FPAR.cntx_pop();
O_DPAR.cntx_pop();
_cnt


\dodaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Dla firmy dodaje wartość parametru dla wskazanego kryterium lub listy płac.
::   WE: _a [_FIRMA] - wskazanie wiersza w tabeli FIRMA, jeśli pominięty lub null, to przyjęta będzie bieżąca firma
::       _b [_O/_KT] - wskazanie listy lub kryterium
::       _c [STRING] - symbol parametru
::       _d [ANY] - wartość parametru, jeśli pominięta, to przyjęta zostanie domyślna
::   WY: 0/1 - porażka/sukces
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_fir:={? var_pres('_a')<>type_of(null) | _a=null || exec('ref_firma','ustawienia') || _a ?};
_ref:=_b;
_sym:=_c;
_val:={? var_pres('_d')>type_of(~~) || _d || ~~ ?};

_ret:=0;

_TAB:=ref_tab(_ref);
_TAB.cntx_psh();
_TAB.prefix();
{? _TAB.seek(_ref)
|| _rid:=_TAB.idadd_value();
:: znajdź wykorzystanie parametru w bieżącej firmie
   _par:=exec('szukaj','o_fpar',_fir,_sym,1);
   _DST:=exec('tabela','o_xpar',_par.O_DPAR.TYP);
   {? _par.REF<>null & _par.WLACZONY='T'
::    parametr jest dostępny
   || _DST.cntx_psh();
      _DST.index('UNIQUE');
      _DST.prefix(_par.REF);
      {? _DST.find_key(_rid,)
      || _ret:=1
      || _DST.blank(1);
         _DST.IDREK:=_rid;
         _DST.O_FPAR:=_par.REF;
         _def:=(${? _par.MOD_BL='T' || _par.FML_BL || _par.O_DPAR.FML_BL ?})();
         _DST.WARTOSC:={? type_of(_val)<>type_of(_def) || _def || _val ?};
         _ret:=_DST.add()
      ?};
      _DST.cntx_pop()
   ?}
?};
_TAB.cntx_pop();

_ret


\kopiuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Kopiuje parametry.
::   WE: _a STRING - identyfikator źródła parametrów
::       _b [STRING] - docelowy identyfikator
::   WY: 0/1 - błąd/sukces
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_src:=_a;
_dst:={? var_pres('_b')=type_of('') & _b<>'' || _b || '' ?};

exec('kopiuj_x','o_xpar',O_RPAR,_src,_dst) &
exec('kopiuj_x','o_xpar',O_ZPAR,_src,_dst)


\kopiuj_x
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Kopiuje parametry.
::   WE: _a TABLE - alias tabeli
::       _b STRING - identyfikator źródła parametrów
::       _c [STRING] - docelowy identyfikator
::   WY: 0/1 - błąd/sukces
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;
_src:=_b;
_dst:={? var_pres('_c')=type_of('') & _c<>'' || _c || '' ?};

_err:=0;
_TAB.cntx_psh();
{? _dst=''
|| _TAB.blank();
   _dst:=_TAB.IDREK
?};
_TAB.clear();
_TAB.index('UNIQUE');
_TAB.f_set(,,'IDREK=\':_a\'',_src);
_loop:=_TAB.f_first();
{!
|? _loop
|! {? ~_TAB.find_tab(0,'O_FPAR',,'=',_TAB.O_FPAR,'IDREK',,'=',_dst)
   || _TAB.IDREK:=_dst;
      {? ~_TAB.add()
      || _err:=1
      ?}
   ?};
   _loop:=(~_err & _TAB.f_next())
!};
_TAB.f_clear(1);
_TAB.cntx_pop();
~_err


\utrwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zapisuje parametry z nowym IDREK.
::   WE: _a STRING - tymczasowy identyfikator
::       _b STRING - docelowy identyfikator
::   WY: 0/1 - błąd/sukces
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_tmp:=_a;
_rid:=_b;

exec('utrwal_x','o_xpar',O_RPAR,_tmp,_rid) &
exec('utrwal_x','o_xpar',O_ZPAR,_tmp,_rid)


\utrwal_x
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zapisuje parametry z nowym IDREK.
::   WE: _a TABLE - alias tabeli
::       _b STRING - tymczasowy identyfikator
::       _c STRING - docelowy identyfikator
::   WY: 0/1 - błąd/sukces
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;
_tmp:=_b;
_rid:=_c;

_err:=0;
_TAB.cntx_psh();
_TAB.clear();
_TAB.f_set(,,'IDREK=\':_a\'',_tmp);
_loop:=_TAB.f_first();
{!
|? _loop
|! _TAB.IDREK:=_rid;
   {? ~_TAB.put()
   || _err:=1
   ?};
   _loop:=(~_err & _TAB.f_next())
!};
_TAB.f_clear(1);
_TAB.cntx_pop();
~_err

:Sign Version 2.0 jowisz:1048 2021/04/09 15:26:29 9410d90d82713f6f64d617087c89ca9ca88bfcf9ac2b318482504b12010b75ad021df0aea546d825b264bdb06564281a6172d8b1d644b6ceea52e19cf61c04ecadcacef8c7f7f6f57871e0a3f95f5948655efff6136903f2ab1b2adf67a9e638882ad2e085a34047ed917d6a737103c329306244b13704c6da4b319535f4b071
