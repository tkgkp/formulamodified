:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: param_wydr (dawniej skid_pw.fml)
:: Utworzony: 06.09.2001
:: Autor: AMA
::======================================================================================================================
:: Zawartość:  Formuły dla obsługi parametrów drukarek, wydruków
::======================================================================================================================


\set_parw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [$7.53] 06.09.2001
:: OPIS: Funkcja ustawia wartości parametrów wydruków zmiennej
::        PAR_WYDR na podstawie parametrów użytkownika lub globalnych
::        (jeśli nie zdefiniowano parametrów uzytkownika). Jeżeli nie
::        zdefiniowano parametrów globalnych, funkcja tworzy zestaw
::        parametrów z wartościami domyślnymi.
::        Funkcja jest uruchamiana przy starcie systemu oraz po
::        modyfikacji parametrów globalnych lub użytkownika.
::  OLD: \set_parw/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
_r_user:=exec('user_ref','param_wydr',app_info('app_user'));
PARWYD.index('USER');
PARWYD.prefix(_r_user);
{? PARWYD.first()
|| exec('set_var','param_wydr')
|| PARWYD.index('USER');
   PARWYD.prefix(null());
   {? ~PARWYD.first()
   || PARWYD.USER:=null();
      PARWYD.HEAD:=PARWYD.SIGN:=PARWYD.NUM:=PARWYD.SEP:=PARWYD.RSEP:=PARWYD.CZAS:=1; PARWYD.LOGO:=0;
      PARWYD.SHAD:=10;
      PARWYD.MIEJSC:=XINFO.MIA;
      PARWYD.FONTW:='Times New Roman';
      PARWYD.FONTTAB:='Arial';
      PARWYD.MLEFT:=PARWYD.MTOP:=PARWYD.MBOT:=PARWYD.MRIGHT:=15;
:\ [bz]  parametry do drukarek kreskowych
      PARWYD.FONTKRES:='MacroBar Code128-20';
      PARWYD.DRIVER:='hp3h_128';
      PARWYD.ZAKRESDR:=0; PARWYD.MO_DO:=0; PARWYD.SKRESL:=1;
      PARWYD.add(1)
   ?};
   exec('set_var','param_wydr')
?}


\set_var
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [$7.53]
:: OPIS: 06.09.2001
::       Funkcja ustawia wartości parametrów wydruków zmiennej
::       PAR_WYDR na podstawie parametrów użytkownika lub globalnych.
::  OLD: \set_parw/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
_interm:={? exec('interm','#system') || 1 || 0 ?};
PAR_WYDR.MTOP:=PARWYD.MTOP;
PAR_WYDR.MBOT:=PARWYD.MBOT;
PAR_WYDR.MLEFT:=PARWYD.MLEFT;
PAR_WYDR.MRIGHT:=PARWYD.MRIGHT;
PAR_WYDR.MIEJSC:=PARWYD.MIEJSC;
PAR_WYDR.FONTW:={? _interm || 'inter' || PARWYD.FONTW ?};
PAR_WYDR.FONTTAB:={? _interm || 'inter' || PARWYD.FONTTAB ?};
PAR_WYDR.HEAD:=PARWYD.HEAD;
PAR_WYDR.SIGN:=PARWYD.SIGN;
PAR_WYDR.NUM:=PARWYD.NUM;
PAR_WYDR.SEP:=PARWYD.SEP;
PAR_WYDR.RSEP:=PARWYD.RSEP;
PAR_WYDR.SHAD:=PARWYD.SHAD;
PAR_WYDR.CZAS:=PARWYD.CZAS;
PAR_WYDR.LOGO:=PARWYD.LOGO;
PAR_WYDR.PATH_TXT:=PARWYD.PATH_TXT;
PAR_WYDR.PATHLTXT:=PARWYD.PATHLTXT;
PAR_WYDR.REDANTRE:=PARWYD.REDANTRE;
PAR_WYDR.OKOSZLT:=PARWYD.OKOSZLT;
PAR_WYDR.PODZILT:=PARWYD.PODZILT;
PAR_WYDR.PBUDZLT:=PARWYD.PBUDZLT;
PAR_WYDR.WYM4LT:=PARWYD.WYM4LT;
PAR_WYDR.WYM5LT:=PARWYD.WYM5LT;

::[bz] parametry do drukarek kreskowych
PAR_WYDR.DRIVER:=PARWYD.DRIVER;
PAR_WYDR.FONTKRES:={? _interm || 'inter' || PARWYD.FONTKRES ?};
PAR_WYDR.KODKRESK:=PARWYD.KODKRESK;
PAR_WYDR.TYPDR:=PARWYD.TYPDR;
PAR_WYDR.URZ_LAB:=PARWYD.URZ_LAB;
PAR_WYDR.TYPKOL:=PARWYD.TYPKOL;
PAR_WYDR.FILE_FRM:=PARWYD.FILE_FRM;
PAR_WYDR.FILEFIND:=PARWYD.FILEFIND;
PAR_WYDR.KATALOG:=PARWYD.KATALOG;
PAR_WYDR.ZAKRESDR:=PARWYD.ZAKRESDR
:: pozostałe parametry


\par_wydg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Funkcja otwiera okienko redagowania parametrów globalnych wydruków.
::   WE: _a = 1 - parametry podstawowe
::       _a = 2 - parametry urządzeń
::       _a = 3 - parametry domyślne wydruków
::  OLD: \par_wydg/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=1 ?};
{? _a=1
|| PARWYD.win_edit('REDG');
   PARWYD.hdr_edit('Globalne parametry wydruków'@)
|? _a=2
|| PARWYD.win_edit('RED_URZ');
   PARWYD.hdr_edit('Globalne parametry urządzeń'@)
|? _a=3
|| PARWYD.win_edit('RED_FST');
   PARWYD.hdr_edit('Globalne parametry domyślne'@)
?};
PARWYD.index('USER');
PARWYD.prefix(null);
{? ~PARWYD.first() || exec('addpus','param_wydr',null) ?};
{? PARWYD.first()
|| {? _a=2 || PARWYD.efld_opt('RED_URZ','enable='+$(PARWYD.FILEFIND=0),,'KATALOG') ?};
   {? PARWYD.edit()
   || PARWYD.put();
      _r_user:=exec('user_ref','param_wydr',app_info('app_user'));
      PARWYD.cntx_psh();
      PARWYD.index('USER');
      PARWYD.prefix(_r_user);
      _v:=~PARWYD.first();
      PARWYD.cntx_pop();
      {? _v || exec('set_var','param_wydr') ?}
   ?}
?}


\ae_pwshd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [$7.53] 06.09.2001
:: OPIS: Funkcja po redakcji sprawdza poprawność wypełnienia pola
::       wartością z przedziału 0-100.
::  OLD: \ae_pwshd/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
{? PARWYD.SHAD<0 | PARWYD.SHAD>100
|| FUN.emsg('Błędna wartość!\nProcent wyszarzenia powinien być wartością '
      'z przedziału 0 - 100.'@); 0
|| 1
?}


\par_wydu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Funkcja otwiera okienko redagowania parametrów użytkownika wydruków.
::   WE: _a = 1 - parametry podstawowe
::       _a = 2 - parametry urządzen
::       _a = 3 - parametry domyślne wydruków
::  OLD: \par_wydu/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=1 ?};
{? _a=1
|| PARWYD.win_edit('REDG');
   PARWYD.hdr_edit('Parametry wydruków użytkownika'@)
|? _a=2
|| PARWYD.win_edit('RED_URZ');
   PARWYD.hdr_edit('Parametry urządzeń użytkownika'@);
   exec('myDPRINT','object')
|? _a=3
|| PARWYD.win_edit('RED_FST');
   PARWYD.hdr_edit('Parametry domyślne użytkownika'@)
?};
_r_user:=exec('user_ref','param_wydr',app_info('app_user'));
PARWYD.index('USER');
PARWYD.prefix(_r_user);
{? ~PARWYD.first() || exec('addpus','param_wydr',_r_user) ?};
{? PARWYD.edit()
|| PARWYD.put();
   exec('set_var','param_wydr')
?}


\addpus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2006]
:: OPIS: Ustawienia parametry użytkownika, jeśli jeszcze nie ma takich w bazie
::  OLD: \addpus/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
PARWYD.USER:=_a;
PARWYD.HEAD:=PAR_WYDR.HEAD;
PARWYD.SIGN:=PAR_WYDR.SIGN;
PARWYD.NUM:=PAR_WYDR.NUM;
PARWYD.SEP:=PAR_WYDR.SEP;
PARWYD.RSEP:=PAR_WYDR.RSEP;
PARWYD.SHAD:=PAR_WYDR.SHAD;
PARWYD.MIEJSC:=PAR_WYDR.MIEJSC;
PARWYD.FONTW:=PAR_WYDR.FONTW;
PARWYD.FONTTAB:=PAR_WYDR.FONTTAB;
PARWYD.MTOP:=PAR_WYDR.MTOP;
PARWYD.MBOT:=PAR_WYDR.MBOT;
PARWYD.MRIGHT:=PAR_WYDR.MRIGHT;
PARWYD.MLEFT:=PAR_WYDR.MLEFT;
PARWYD.CZAS:=PAR_WYDR.CZAS;
PARWYD.LOGO:=PAR_WYDR.LOGO;
PARWYD.DRIVER:=PAR_WYDR.DRIVER;
PARWYD.FONTKRES:=PAR_WYDR.FONTKRES;
PARWYD.KODKRESK:=PAR_WYDR.KODKRESK;
PARWYD.TYPDR:=PAR_WYDR.TYPDR;
PARWYD.URZ_LAB:=PAR_WYDR.URZ_LAB;
PARWYD.TYPKOL:=PAR_WYDR.TYPKOL;
PARWYD.FILE_FRM:=PAR_WYDR.FILE_FRM;
PARWYD.FILEFIND:=PAR_WYDR.FILEFIND;
PARWYD.KATALOG:=PAR_WYDR.KATALOG;
PARWYD.ZAKRESDR:=PAR_WYDR.ZAKRESDR;
PARWYD.MO_DO:=PAR_WYDR.MO_DO;
PARWYD.SKRESL:=PAR_WYDR.SKRESL;
PARWYD.add()


\hier_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2006]
:: OPIS: Ustawienia struktury hierarchicznej dla użytkownika
::  OLD: \hier_par/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
_r_user:=exec('user_ref','param_wydr',app_info('app_user'));
PARWYD.win_edit('REDTREE3');
PARWYD.hdr_edit(' użytkownika'@);
PARWYD.index('USER');
PARWYD.prefix(_r_user);
{? ~PARWYD.first() || exec('addpus','param_wydr',_r_user) ?};
{? PARWYD.edit()
|| PARWYD.put();
   exec('set_var','param_wydr')
?}


\user_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.60]
:: OPIS: Funkcja zwraca ref użytkownika
::   WE: nazwa zalogowanego użytkownika
::   WY: ref użytkownika w tabeli użytkownikow
::  OLD: \user_ref/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:='USERS'; _ind:='USR_KKOD';
_v_ref:=($('{| '+_tab+' |! cntx_psh(); index(\''+_ind+'\');prefix(\''+_a+'\');
            {? first() || _v:=ref || _v:=null ?}; cntx_pop() |}; _v'))();
_v_ref


\prt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.60]
:: OPIS: Funkcja zwraca akronim pola z informacją o sterowniku drukarki
::   WE:  [_a] [STRING] - Orientacja strony:
::             v - Pionowa [domyślnie].
::             h - Pozioma.
::       [_b] [TABLE] - Alias zestawu stałych [domyślnie: FINFO].
::  OLD: \prt/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
_fld:={? var_press('_a')=type_of('') & _a='h' || 'SZ_PRN' || 'W_PRN' ?};
_zest:={? var_press('_b')=type_of(FINFO) || _b || FINFO ?};
exec('set_parw','param_wydr');
exec('czytaj','#stalesys',,_zest,_fld);
($(!_zest+'.'+_fld))()


\ae_shad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.60]
:: OPIS: Sprawdza poprawność wypelnienia pola SHAD tabeli PARWYD
::  OLD: \ae_shad/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld<0 | fld>100
|| FUN.info('Należy wprowadzić wartość z przedziału 0-100.'@); 0
|| 1
?}


\get_font
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: dialog wyboru rodzaju czcionki
::  OLD: \get_font/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
_Interm:=exec('interm','#system');
{? _Interm
|| FUN.emsg(exec('interm_nacc_msg','#system'));
   ~~
||
   exec('myDIALOG','object');
   _wynik:=myDIALOG.GetFont(fld);
   {? _wynik <> '' || _wynik || ~~ ?}
?}


\sim_font
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: uproszczony dialog wyboru rodzaju czcionki
::  OLD: \sim_font/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
_Interm:=exec('interm','#system');
{? _Interm
|| FUN.emsg(exec('interm_nacc_msg','#system'));
   ~~
||
   exec('myDIALOG','object');
   _wynik:=myDIALOG.SimpleGetFont(fld);
   {? _wynik <> '' || _wynik || ~~ ?}
?}


\get_driver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [TS] [8.50]
:: OPIS: dialog wyboru drajwera drukarki
::  OLD: \get_driver/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
_drivers:=exec('driver_list','param_wydr');
_drivers.find_key(fld());
_wer:=_drivers.mk_sel('Dostępne sterowniki'@,,0,'_drivers_wer',,,,,'U');
_drivers.win_fld(_wer,,'DRIVER',,,10,,,'Sterownik'@);
_drivers.win_fld(_wer,,'DESCR',,,60,,,'Opis'@);
_drivers.win_act(_wer,,'Formuła','Wybierz'@@,,'Wybór bieżącej pozycji'@,"sel_exit()",,1,,,,'W');
_drivers.win_sel(_wer);
{? _drivers.select(,1,5) || fld():=_drivers.DRIVER ?};
0


\driver_descr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [TS] [8.50]
:: OPIS: pobiera opis drajwera .prt z pliku .drs (musi byc też na ścieżce)
::   WE: _a - nazwa drajwera
::   WY: opis drajwera
::  OLD: \driver_descr/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:='';
_plik:=fopen(_a+'.drs', 'r', 1);
{? _plik
|| {! |?
      _str:=fread(_plik);
      {? _str <> '\n'
      || {? 9+_str='driver = ' || _wynik:=9-_str ?}
      ?};
      _str<>'\n'
   !};
   fclose(_plik)
?};
_wynik


\ae_font
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [8.60]
:: OPIS: Sprawdza czy font o podanej nazwie jest zainstalowany w systemie.
::   WE: _a - nazwa fontu
::   WY: 1 = dalej, 0 - powrót do redakcji
::  OLD: \ae_font/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
_Interm:=exec('interm','#system');
{? _Interm
|| FUN.emsg(exec('interm_nacc_msg','#system'));
   _dalej:=1
||
   _f:=fld();
   {? _f<>''
   || exec('myDIALOG','object');
      {? myDIALOG.FindFont(_f)=0
      || _dalej:=FUN.ask('Font o podanej nazwie nie jest zainstalowany w systemie. Kontynuować?'@)
      || _dalej:=1
      ?}
   || _dalej:=1
   ?}
?};
{? _dalej=1 & cur_afld()='FONTKRES' || _dalej:=exec('ae_font_bar','param_wydr') ?};
_dalej


\f3_katal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2006]
:: OPIS: Wybór lokalnego folderu z danymi z czytników kodów kreskowych
::  OLD: \f3_katal/skid_pw.fml
:: ~OST: INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
{? exec('interm','#system')
|| return(0)
|| _wynik:=exec('filechooser','#file','Wskaż folder z danymi z czytników kodów kreskowych'@,0,,,,'DIRECTORIES_ONLY',1)
?};
{? _wynik <> '' || _wynik || ~~ ?}


\driver_list
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2011]
:: OPIS: zwraca liste z drajwerami drukarek
::  OLD: \driver_list/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
_files:=files('*.prt');
_drivers:=tab_tmp(1,'DRIVER','STRING[8]','Drajwer'@,
                    'DESCR','STRING[50]','Opis'@);
_ndx:=_drivers.ndx_tmp(,,'DRIVER',,,'DRIVER',,);
_drivers.index(_ndx);

{? _files.first()
|| {!
   |?
      _drivers.blank();
      _drivers.DRIVER:=_files.FILENAME-4;
      _drivers.DESCR:=exec('driver_descr','param_wydr',_drivers.DRIVER);
      _drivers.add();
      _files.next()
   !}
?};
_drivers


\ae_driver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2011]
:: OPIS: po redakcji pola 'driver'
::  OLD: \ae_driver/skid_pw.fml
::----------------------------------------------------------------------------------------------------------------------
_drivers:=exec('driver_list','param_wydr');
_drivers.prefix(fld(),fld());
{? ~_drivers.first()
|| FUN.emsg('Brak sterownika o nazwie \'%1\'.'@[fld()]); 0
|| 1
?}


\ae_font_bar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: Weryfikacja nazwy fontu z kodem kreskowym, przy zalożeniu że nazwa zawiera symbol
::   WY: 1 - ok, obsługiwany font, 0 - nieobługiwany font
::  OLD: \ae_font/skid_uz.fml
::       \ae_font/skid_czt.fml
::----------------------------------------------------------------------------------------------------------------------
1


\chk_druk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.10]
:: OPIS: Weryfikacja wypełnienia okienka z nazwami sterowników drukarek
::   WE: _a = nazwa sterownika wprowadzona w polu (waski papier)
::       _b = nazwa sterownika wprowadzona w polu (szeroki papier)
::  OLD: \chk_druk/param.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=chk_rec();
{? _wy=''
|| {? +_a>8
   || FUN.emsg('Nazwa sterownika (%1) jest dłuższa niż 8 znaków.'@[_a]);
      return('W_PRN')
   ?};
   {? +_b>8
   || FUN.emsg('Nazwa sterownika (%1) jest dłuższa niż 8 znaków.'@[_b]);
      return('SZ_PRN')
   ?};
   _drivers:=exec('driver_list','param_wydr');
   {? ~_drivers.find_key(_a) | _drivers.DRIVER<>_a
   || FUN.emsg('Nie istnieje sterownik o nazwie: %1.'@[_a]);
      return('W_PRN')
   ?};
   {? ~_drivers.find_key(_b) | _drivers.DRIVER<>_b
   || FUN.emsg('Nie istnieje sterownik o nazwie: %1.'@[_b]);
      return('SZ_PRN')
   ?}
?};
_wy


\par_wydr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: Sterowniki drukarek
::  OLD: \par_wydr/param.fml
::----------------------------------------------------------------------------------------------------------------------
exec('edytuj','#stalesys',FINFO,'DRUK',"exec('chk_druk','param_wydr',FINFO.W_PRN,FINFO.SZ_PRN)",1)<>date(0,0,0)


\hier_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawienia struktury hierarchicznej dokumentów dla użytkownika
::----------------------------------------------------------------------------------------------------------------------
_r_user:=exec('user_ref','param_wydr',app_info('app_user'));
PARWYD.win_edit('REDTREE4');
PARWYD.index('USER');
PARWYD.prefix(_r_user);
{? ~PARWYD.first() || exec('addpus','param_wydr',_r_user) ?};
{? PARWYD.edit()
|| PARWYD.put();
   exec('set_var','param_wydr')
?}


\ae_filefind
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola PARWYD.FILEFIND - czy pliki z kolektorów danych znajdują się na serwerze
::----------------------------------------------------------------------------------------------------------------------
PARWYD.efld_opt('RED_URZ','enable='+$(PARWYD.FILEFIND=0),,'KATALOG');
{? PARWYD.FILEFIND=1 || PARWYD.KATALOG:='' ?};
1


\nopanel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: czy wyswietlac panel wydruku
::   WE: _a-'S'-sprzedaz, 'Z'-zakup, 'M'-magazyn
::   WY: 0-tak, 1-nie
::  OLD: \nopanel/wydr_fak.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=
   {? var_pres('__TOPDF')>0 & __TOPDF
   || exec('get','#params',{? _a='S'  || 2123 |? _a='Z' || 6123 || 1123 ?},1,OPERATOR.USER)
   || exec('get','#params',{? _a='S'  || 2120 |? _a='Z' || 6120 || 1120 ?},1,OPERATOR.USER)
   ?};
_par=2 | _par=8 | {? exec('czy_grp_dr','faktury_wydruk') || {? __GRP_DR.PDF || 1 || __GRP_DR.FIRST=0 ?} ?}


\noparam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: czy wyswietlac parametry wydruku
::   WE: _a-'S'-sprzedaz, 'Z'-zakup, 'M'-magazyn
::   WY: 0-tak, 1-nie
::  OLD: \noparam/wydr_fak.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=
   {? var_pres('__TOPDF')>0 & __TOPDF
   || exec('get','#params',{? _a='S'  || 2123 |? _a='Z' || 6123 || 1123 ?},1,OPERATOR.USER)
   || exec('get','#params',{? _a='S'  || 2120 |? _a='Z' || 6120 || 1120 ?},1,OPERATOR.USER)
   ?};
_par=4 | _par=8 | {? exec('czy_grp_dr','faktury_wydruk') || __GRP_DR.FIRST=0 ?}


\lbl_gen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Generowanie etykiety na podstawie obowiazujacej definicji w parametrach wydruków
::  OLD: \lbl_gen/skid_uz.fml
::----------------------------------------------------------------------------------------------------------------------
_label:='';
EANX.FNC1:=PAR_WYDR.TYPDR().FNC1;
{? PAR_WYDR.URZ_LAB<>null
|| {? PAR_WYDR.URZ_LAB().TRYB='Z'
   || _label:=exec('lbl_adv','param_wydr')
   |? PAR_WYDR.URZ_LAB().TRYB='P'
   || {? PAR_WYDR.URZ_LAB().URZ_KOM().KOD='DPL'
      || _label:=exec('lbl_simple_dpl','param_wydr')
      |? PAR_WYDR.URZ_LAB().URZ_KOM().KOD='EPL2'
      || _label:=exec('lbl_simple_epl2','param_wydr')
      |? PAR_WYDR.URZ_LAB().URZ_KOM().KOD='TSPL'
      || _label:=exec('lbl_simple_tspl','param_wydr')
      ?}
   ?}
|| FUN.emsg('W parametrach wydruków nie ustawiono obowiązującej definicji etykiety.'@)
?};
_label


\ddruk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formula zapisuje kod etykiety w jezyku drukarki do pliku tekstowego
::        VAR.DEBUG = 1 - zapis z komentarzami
::        VAR.DEBUG = 2 - zapis czystego kodu etykiety, ktory mozna wyslac na drukarke przez instrukcje COPY
::        VAR.DEBUG = 3 - tworzy dodadtkowy plik tekstowy (dodawane kolejne etykiety) z: zapis z komentarzami
::  OLD: \ddruk/skid_uz.fml
:: ~OST: INFOPEN
::----------------------------------------------------------------------------------------------------------------------
on_error(2);
_out:=fopen('@out.txt','bw',1);
{? VAR.DEBUG=3 || _ous:=fopen('@out_str.txt','ua',1) ?};
on_error(0);
{? _out
|| _txt:=exec('lbl_gen','param_wydr');
   {? _txt='' || _txt:='Blad - brak tresci etykiety.\n' ?};
   {? VAR.DEBUG=1
   || fwrite(_out,'--------------------- START -----------------\n');
      fwrite(_out,'WYDRUKOWANO DNIA: '+$date()+' O GODZINIE: '+$time()+'\n');
      fwrite(_out,'KOD ETYKIETY    : '+PAR_WYDR.URZ_LAB().KOD+'\n');
      fwrite(_out,'--------------------- TRESC:-----------------\n')
   ?};
   fwrite(_out,_txt);
   {? VAR.DEBUG=1
   || fwrite(_out,'--------------------- END -------------------\n')
   ?};
   fclose(_out);
   {? VAR.DEBUG=3 & _ous
   || fwrite(_ous,'--------------------- START -----------------\n');
      fwrite(_ous,'WYDRUKOWANO DNIA: '+$date()+' O GODZINIE: '+$time()+'\n');
      fwrite(_ous,'KOD ETYKIETY    : '+PAR_WYDR.URZ_LAB().KOD+'\n');
      fwrite(_ous,'--------------------- TRESC:-----------------\n');
      fwrite(_ous,_txt);
      fwrite(_ous,'--------------------- END -------------------\n');
      fclose(_ous)
   ?};
   1
|| FUN.emsg('Błąd otwarcia pliku out.txt'@);
   0
?}


\lbl_adv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła generuje etykiete w języku drukarki na podstawie definicji zaawansowanej
::  OLD: \lbl_adv/skid_uz.fml
::----------------------------------------------------------------------------------------------------------------------
_txt:='';
_noutf:=PAR_WYDR.TYPDR().NOUTF;
EANX.FNC1:=PAR_WYDR.TYPDR().FNC1;
{? PAR_WYDR.URZ_LAB<>null
|| URZ_LAB.index('URZ_LAB');
   URZ_LAB.prefix();
   {? URZ_LAB.seek(PAR_WYDR.URZ_LAB)
   || URZ_LABZ.index('URZ_LABZ');
      URZ_LABZ.prefix(URZ_LAB.ref());
      {? URZ_LABZ.first()
      || {! |?
            _txt+={? URZ_LABZ.LOG='' | ($URZ_LABZ.LOG)() || URZ_LABZ.POZ || '' ?};
            URZ_LABZ.next()
         !};
         {? _txt*'<' || _txt:=exec('tag','param_wydr',_txt) ?}
      || FUN.emsg('Wskazana w parametrach wydruków etykieta jest pusta - brak pozycji definicji.'@)
      ?}
   || FUN.emsg('Nie znaleziono definicji etykiety ustawionej w parametrach wydruku.'@)
   ?}
|| FUN.emsg('W parametrach wydruków nie ustawiono obowiązującej definicji etykiety.'@)
?};
{? ~_noutf || STR.maz2w95(_txt) || STR.maz2nop(_txt) ?}


\lbl_simple_dpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła generuje etykiete w języku DPL na podstawie definicji prostej
::  OLD: \lbl_simple_dpl/skid_uz.fml
::----------------------------------------------------------------------------------------------------------------------
_label:='<STX>L<CR>';
_label+='H'+$URZ_LAB.TEMPERAT+'<CR>';
_label+='D11<CR>';
URZ_LABP.index('URZ_LABP');
URZ_LABP.prefix(URZ_LAB.ref());
{? URZ_LABP.first()
|| {! |?
      _line:=URZ_LABP.ROTACJA;
      {? URZ_LABP.URZ_LABT().TYP='TEKST'
      || _line+='9';
         _line+='11'
      |? URZ_LABP.URZ_LABT().TYP='KOD KRESKOWY'
      || _line+={? URZ_LABP.PODPIS='N'
                || -URZ_LABP.BARCODE().SYMBOL
                || URZ_LABP.BARCODE().SYMBOL
                ?};
         _line+='00'
      ?};
      {? URZ_LABP.URZ_LABT().TYP='TEKST'
      || _line+=URZ_LABP.FONTSIZE().KOD
      |? URZ_LABP.URZ_LABT().TYP='KOD KRESKOWY'
      || _line+=URZ_LABP.URZ_BARH().KOD
      ?};
      _poz_x:=(URZ_LABP.POZ_X/0.254) $ 0;
      _poz_y:=(URZ_LABP.POZ_Y/0.254) $ 0;
      _line+=form(_poz_y,-4,0,'9');
      _line+=form(_poz_x,-4,0,'9');
      _line+={? URZ_LABP.TXT_RODZ='W'
             || URZ_LABP.TEKST
             || {? URZ_LABP.URZ_LABT().TYP='KOD KRESKOWY' & URZ_LABP.BARCODE().URZ_KOM().KOD='DPL'
                   & URZ_LABP.BARCODE().KOD*'128'
                || 'B' + URZ_LABP.URZ_TAG().KOD
                || URZ_LABP.URZ_TAG().KOD
                ?}
             ?};
      _line+='<CR>';
      _label+=_line;
      URZ_LABP.next()
   !}
?};
_label+='E<CR>';
_label:=exec('tag','param_wydr',_label);
STR.maz2nop(_label)


\lbl_simple_epl2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła generuje etykiete w języku EPL2 na podstawie definicji prostej
::  OLD: \lbl_simple_epl2/skid_uz.fml
::----------------------------------------------------------------------------------------------------------------------
_label:='<LF>N<LF>';
_label+='Q<HEIGHT>,<HOLE><LF>';
_label+='q<WIDTH><LF>';
_label+='D'+$URZ_LAB.TEMPERAT+'<LF>';
_label+='I8,B<LF>';
URZ_LABP.index('URZ_LABE');
URZ_LABP.prefix(URZ_LAB.ref());
{? URZ_LABP.first()
|| {! |?
      _line:='';
      {? URZ_LABP.URZ_LABT().TYP='TEKST'
      || _line+='A';
         _line+=form(URZ_LABP.POZ_X*8);
         _line+=','+form(URZ_LABP.POZ_Y*8);
         {? URZ_LABP.ROTACJA='1' || _rotacja:='0'
         |? URZ_LABP.ROTACJA='2' || _rotacja:='1'
         |? URZ_LABP.ROTACJA='3' || _rotacja:='2'
         |? URZ_LABP.ROTACJA='4' || _rotacja:='3'
         ?};
         _line+=','+_rotacja;
         _line+=','+URZ_LABP.FONTSIZE().KOD;
         _line+=',1';
         _line+=',2';
         _line+=',N';
         _line+=',"'+{? URZ_LABP.TXT_RODZ='W'
                || URZ_LABP.TEKST
                || URZ_LABP.URZ_TAG().KOD
                ?}+'"'
      |? URZ_LABP.URZ_LABT().TYP='KOD KRESKOWY'
      || _line+='B';
         _line+=form(URZ_LABP.POZ_X*8);
         _line+=','+form(URZ_LABP.POZ_Y*8);
         {? URZ_LABP.ROTACJA='1' || _rotacja:='0'
         |? URZ_LABP.ROTACJA='2' || _rotacja:='1'
         |? URZ_LABP.ROTACJA='3' || _rotacja:='2'
         |? URZ_LABP.ROTACJA='4' || _rotacja:='3'
         ?};
         _line+=','+_rotacja;
         _line+=','+URZ_LABP.BARCODE().SYMBOL;
         _line+=',2';
         _line+=',3';
         _line+=','+URZ_LABP.URZ_BARH().KOD;
         _line+={? URZ_LABP.PODPIS='N'
                || ',N'
                || ',B'
                ?};
         _line+=',"'+{? URZ_LABP.TXT_RODZ='W'
                    || URZ_LABP.TEKST
                    || URZ_LABP.URZ_TAG().KOD
                    ?}+'"'
      ?};
      _label+=_line+'<LF>';
      URZ_LABP.next()
   !}
?};
_label:=exec('tag','param_wydr',_label);
_label


\lbl_simple_tspl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła generuje etykiete w języku TSPL na podstawie definicji prostej
::  OLD: \lbl_simple_tspl/skid_uz.fml
::----------------------------------------------------------------------------------------------------------------------
_label:='CODEPAGE 852<CR><LF>';
_label+='SIZE <WIDTH> mm,<HEIGHT> mm<CR><LF>';
_label+='SPEED 2<CR><LF>';
_label+='DENSITY '+$URZ_LAB.TEMPERAT+'<CR><LF>';
_label+='SET CUTTER OFF<CR><LF>';
_label+='DIRECTION 0<CR><LF>';
_label+='REFERENCE 0,0<CR><LF>';
_label+='CLS<CR><LF>';
_label+='GAP <HOLE> mm,0<CR><LF>';
_label+='SET COM1 96,N,8,1<CR><LF>';
URZ_LABP.index('URZ_LABE');
URZ_LABP.prefix(URZ_LAB.ref());
{? URZ_LABP.first()
|| {! |?
      _line:='';
      {? URZ_LABP.URZ_LABT().TYP='TEKST'
      || _line+='TEXT ';
         _line+=form(URZ_LABP.POZ_X*8);
         _line+=','+form(URZ_LABP.POZ_Y*8);
         _line+=',"'+URZ_LABP.FONTSIZE().KOD+'"';
         {? URZ_LABP.ROTACJA='1' || _rotacja:='0'
         |? URZ_LABP.ROTACJA='2' || _rotacja:='90'
         |? URZ_LABP.ROTACJA='3' || _rotacja:='180'
         |? URZ_LABP.ROTACJA='4' || _rotacja:='270'
         ?};
         _line+=','+_rotacja;
         _line+=',1';
         _line+=',1';
         _line+=',"'+{? URZ_LABP.TXT_RODZ='W'
                     || URZ_LABP.TEKST
                     || URZ_LABP.URZ_TAG().KOD
                     ?}+'"'
      |? URZ_LABP.URZ_LABT().TYP='KOD KRESKOWY'
      || _line+='BARCODE ';
         _line+=form(URZ_LABP.POZ_X*8);
         _line+=','+form(URZ_LABP.POZ_Y*8);
         _line+=',"'+URZ_LABP.BARCODE().SYMBOL+'"';
         _line+=','+URZ_LABP.URZ_BARH().KOD;
         _line+={? URZ_LABP.PODPIS='N'
                || ',0'
                || ',1'
                ?};
         {? URZ_LABP.ROTACJA='1' || _rotacja:='0'
         |? URZ_LABP.ROTACJA='2' || _rotacja:='90'
         |? URZ_LABP.ROTACJA='3' || _rotacja:='180'
         |? URZ_LABP.ROTACJA='4' || _rotacja:='270'
         ?};
         _line+=','+_rotacja;
         _line+=',2';
         _line+=',2';
         _line+=',"'+{? URZ_LABP.TXT_RODZ='W'
                     || URZ_LABP.TEKST
                     || URZ_LABP.URZ_TAG().KOD
                     ?}+'"'
      ?};
      _label+=_line+'<CR><LF>';
      URZ_LABP.next()
   !}
?};
_label+='PRINT 1<CR><LF>';
_label:=exec('tag','param_wydr',_label);
_label


\tag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formula zamienia tagi na wartosci w podanej zmiennej tekstowej
::  OLD: \tag/skid_uz.fml
::----------------------------------------------------------------------------------------------------------------------
_txt:=_a;
URZ_TAG.index('URZ_TAG');
URZ_TAG.prefix();
{? URZ_TAG.first()
|| {! |?
      {!
      |? {? URZ_TAG.KOD*':??>'
         || _poz:=_txt*gsub(URZ_TAG.KOD,':??>');
            _len:=+(URZ_TAG.KOD-3);
            _par:=((_len+_poz-1)-_txt);
            _par:=((_par*'>')-1)+_par;
            _min:={? (_par+1)='n' || -1 || 1 ?}
         || _poz:=_txt*URZ_TAG.KOD;
            _par:='';
            _min:=1
         ?};
         {? _poz<>0
         || _temp_b:=(_poz-1)+_txt;
            _temp_a:=_txt+(+_txt-(_poz+(+URZ_TAG.KOD)-_min));
            _tag:={? _par<>'' || ($(URZ_TAG.FORMULA))(_par) || ($(URZ_TAG.FORMULA))(_par) ?};
::          zmiana znakow niedozwolonych
            {? URZ_TAG.KOD='<NST>' || _tag:=gsub(_tag,'"','') ?};
            _txt:=_temp_b+_tag+_temp_a
         ?};
         _poz<>0
      !};
      URZ_TAG.next()
   !}
?};
_txt


\font
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Definicja czcionek dla sekcji _a
::   WE: _a - sekcja wydruku dla której wyznaczana jest czcionka
::   WY: symbol czcionki
::----------------------------------------------------------------------------------------------------------------------
_font:=exec('get','#params',100224,2)(_a);
{? _font<>~~ & _font<>'' || return(_font) ?};
:: nagłówek wydruku
{? _a='head'            || 'TMB'
|? _a='header'          || 'TM'
|? _a='head_ie'         || 'IE'
|? _a='head_if'         || 'IF'
:: tabela pozycji
|? _a='tabhead_poz'     || 'TM'
|? _a='poz'             || 'TM'
|? _a='poz1'            || 'TM'
:: tabel vat
|? _a='tabhead_vat'     || 'TM'
|? _a='vat'             || 'TM'
|? _a='razem'           || 'TMB'
:: stopka
|? _a='footer'          || 'TM'
:: korekta zbiorcza
|? _a='kz_oddo_tr'      || 'TM'
|? _a='kz_oddo'         || 'TMB'
|? _a='kz_rab_tr'       || 'TM'
|? _a='kz_rab'          || 'TMB'
|? _a='kz_rab_proc'     || 'TMB'
|? _a='kz_kwrab_tr'     || 'TM'
|? _a='kz_kwrab'        || 'TMB'
|? _a='kz_kwrab_wal'    || 'TMB'
|? _a='kz_kwzp_tr'      || 'TM'
|? _a='kz_kwzp'         || 'TMB'
|? _a='kz_kwzp_wal'     || 'TMB'
|? _a='kz_fak_kor'      || 'TMB'
:: strony
|? _a='strony'          || 'TM'
|? _a='strony_s1_l01'   || 'TMB'
|? _a='strony_s1_l02'   || 'TM'
|? _a='strony_s1_l03'   || 'TM'
|? _a='strony_s1_l04'   || 'TM'
|? _a='strony_s1_l05'   || 'TMB'
|? _a='strony_s1_l06'   || 'TM'
|? _a='strony_s1_l07'   || 'TMB'
|? _a='strony_s1_l08'   || 'TMB'
|? _a='strony_s1_l09'   || 'TMB'
|? _a='strony_s1_l10'   || 'TM'
|? _a='strony_s1_l11'   || 'TM'
|? _a='strony_s1_l12'   || 'TM'
|? _a='strony_s1_l13'   || 'TM'
|? _a='strony_s1_l14'   || 'TM'
|? _a='strony_s1_l15'   || 'TM'
|? _a='strony_s2_l01'   || 'TMB'
|? _a='strony_s2_l02'   || 'TM'
|? _a='strony_s2_l03'   || 'TM'
|? _a='strony_s2_l04'   || 'TM'
|? _a='strony_s2_l05'   || 'TMB'
|? _a='strony_s2_l06'   || 'TM'
|? _a='strony_s2_l07'   || 'TM'
|? _a='strony_s2_l08'   || 'TM'
|? _a='strony_s2_l09'   || 'TM'
|? _a='strony_s2_l10'   || 'TM'
|? _a='strony_s2_l11'   || 'TM'
|? _a='strony_s2_l12'   || 'TM'
|? _a='strony_po'       || 'TM'
:: korekta przed, po
|? _a='kor_przed'       || 'TMB'
|? _a='kor_po'          || 'TMB'
:: forma, termin, wartość płatności
|? _a='fp_tr'           || 'TM'
|? _a='fp_war'          || 'TMB'
|? _a='fp_ods'          || 'TM'
|? _a='tp_tr'           || 'TM'
|? _a='tp_war'          || 'TMB'
|? _a='wp_tr'           || 'TM'
|? _a='wp_war'          || 'TM'
|? _a='wp_wal'          || 'TM'
:: do zapłaty kwota i słownie
|? _a='dz_tr'           || 'TM'
|? _a='dz_war'          || 'TMB'
|? _a='dz_wal'          || 'TMB'
|? _a='dz_wezw'         || 'TM'
|? _a='dzsl_tr'         || 'TMB'
|? _a='dzsl_war'        || 'TM'
:: kwota zaliczki
|? _a='kwzal_tr'        || 'TM'
|? _a='kwzal_war'       || 'TMB'
|? _a='kwzal_wal'       || 'TMB'
|? _a='kwzal1_tr'       || 'TM'
|? _a='kwzal1_war'      || 'TM'
|? _a='kwzal1_wal'      || 'TM'
|? _a='kwzal1_da_tr'    || 'TM'
|? _a='kwzal1_da_war'   || 'TM'
:: termin realizacji
|? _a='tr_tr'           || 'TM'
|? _a='tr_war'          || 'TMB'
:: termin ważności
|? _a='tw_tr'           || 'TM'
|? _a='tw_war'          || 'TMB'
:: powiązane zaliczki
|? _a='powzal_nag'      || 'TM'
|? _a='powzal_1'        || 'TM'
|? _a='powzal_2'        || 'TM'
|? _a='powzal_3'        || 'TM'
|? _a='powzal_4'        || 'TM'
|? _a='powzal_5'        || 'TM'
|? _a='powzal_6'        || 'TM'
:: rozliczone zaliczki
|? _a='rozzal_nag'      || 'TM'
|? _a='rozzal_1'        || 'TM'
|? _a='rozzal_2'        || 'TM'
|? _a='rozzal_3'        || 'TM'
|? _a='rozzal_4'        || 'TM'
|? _a='rozzal_5'        || 'TM'
|? _a='rozzal_6'        || 'TM'
|? _a='rozzal_narod'    || 'TM'
:: różne
|? _a='daty'            || 'TM'
|? _a='ory_kop'         || 'TM'
|? _a='inf_dod'         || 'TM'
|? _a='fakupr_txt'      || 'TM'
|? _a='zw_pod'          || 'TM'
|? _a='opis_wg_tlu'     || 'TM'
|? _a='opis'            || 'TM'
|? _a='uwagi'           || 'TM'
|? _a='podpisy'         || 'TM'
|? _a='upowaznienie'    || 'TM'
|? _a='kor_przyczyna'   || 'TM'
|? _a='oswiadczenie_rr' || 'TM'
|? _a='mpp'             || 'TM'
|? _a='dane'            || 'TM'
|? _a='dane_bold'       || 'TMB'
:: podatek należny
|? _a='podnal_zm'       || 'TM'
|? _a='podnal_zm_war'   || 'TM'
|? _a='podnal_zm_wal'   || 'TM'
|? _a='podnal_zw'       || 'TM'
|? _a='podnal_zw_war'   || 'TM'
|? _a='podnal_zw_wal'   || 'TM'
:: domyślne mapowanie
|? _a='T8'              || 'TM'
|? _a='T8B'             || 'TM'
|? _a='T8G'             || 'TM'
|? _a='T8GB'            || 'TMB'
|? _a='T10B'            || 'TMB'
                        || 'TM'
?}


\space
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Odstęp międzywierszowy
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'B'


\wydr_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: Zwraca szerokość kolumn w wydruku
::   WE: _a - całkowita szerokość wiersza, domyślnie charleft()
::       _b - ilość kolumn, domyślnie 2
::   WY: objekt - width - szerokość kolumn,
::                last - szerokość ostatniej kolumny (jest dodawana reszta z błędu zaokrąglenia)
::----------------------------------------------------------------------------------------------------------------------
:: przekazane parametry - domyślne wartości
_row:={? _>0 || {? var_press('_a')=1 || _a || charleft() ?} || charleft() ?};
_count:={? _>1 || {? var_press('_b')=1 & _b > 0 || _b || 2 ?} || 2 ?};
:: odjęcie od całości ramek z odstępem z obu stron 2 + 2 oraz (ilość kolumn - 1) * 3 (ramka i odstępy między kolumnami)
_row-=4 + (_count - 1) * 3;
:: obliczenie szerokości kolumn
_width:=floor(int((_row)/_count));
_last:=_width + (_row - _width * _count);
:: zwracany objekt
_obj:=obj_new('Width', 'Last');
_obj.Width:=_width;
_obj.Last:=_last;
_obj


\grp_dr_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Środowisko grupowego drukowania - init
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_GRP_DR:=obj_new('GR','SEL','SIZE','FIRST','ESC','WZ','PDF','SHOW_PDF','DR_N_AKC','JEZYK','JEZYK_KH','DR_N_CAN'
          ,'SHOW_EM','DR_N_EDOK','DR_N_GWZ');
:: __GRP_DR.GR - [0/1] - wydruk grupowy
_GRP_DR.GR:=0;
:: __GRP_DR.SEL - dokumenty do wydruku (wynik funkcji sel_aget)
_GRP_DR.SEL:=~~;
:: __GRP_DR.SIZE - ilość dokumentów do wydruku
_GRP_DR.SIZE:=0;
:: __GRP_DR.FIRST - drukowanie pierwszego dokumentu sposrod zaznaczonych 0-nie 1-tak
_GRP_DR.FIRST:=1;
:: __GRP_DR.ESC - zrezygnowano z wypelnienia parametrow wydruku 0-nie 1-tak
_GRP_DR.ESC:=0;
:: __GRP_DR.WZ - wybrany wzorzec wydruku
_GRP_DR.WZ:='';
:: __GRP_DR.PDF - utworz pdf 0-nie 1-tak
_GRP_DR.PDF:=0;
:: __GRP_DR.SHOW_PDF - wyswietlac utworzone pdf 0-nie 1-tak
_GRP_DR.SHOW_PDF:=0;
:: __GRP_DR.DR_N_AKC - drukowac niezaakceptowane -1-do ustalenia 0-nie 1-tak
_GRP_DR.DR_N_AKC:=-1;
:: __GRP_DR.DR_N_CAN - drukowac anulowane -1-do ustalenia 0-nie 1-tak
_GRP_DR.DR_N_CAN:=-1;
:: __GRP_DR.JEZYK - wersja jezykowa
_GRP_DR.JEZYK:=null();
:: __GRP_DR.JEZYK_KH - wersja jezykowa kontrahenta
_GRP_DR.JEZYK_KH:='N';
:: __GRP_DR.SHOW_EM - wyswietlac utworzone e-dokumnety 0-nie 1-tak
_GRP_DR.SHOW_EM:=0;
:: __GRP_DR.DR_N_EDOK - drukowac e-dokumenty -1-do ustalenia 0-nie 1-tak
_GRP_DR.DR_N_EDOK:=-1;
:: __GRP_DR.DR_N_GWZ - drukować fakturę z rezerwacją bez WZ -1-do ustalenia 0-nie 1-tak
_GRP_DR.DR_N_GWZ:=-1;
_GRP_DR


\grp_dr_done
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Środowisko grupowego drukowania - done
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__GRP_DR')


\format_kodkresk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [22.26]
:: OPIS: Formuła na wybór formatu do kodów kreskowych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_kod:=tab_tmp(1,'KOD','STRING[20]','Kod');

_kod.KOD:='Code 128'; _kod.add();
_kod.KOD:='Code 39'; _kod.add();

_wer:=_kod.mk_sel('Format czcionki kodu kreskowego'@,,0,'fkod_kresk',,,,,'U');
_kod.win_fld(_wer,,'KOD',,,20,,,'Numer'@);
_kod.win_act(_wer,,'Formuła','Wybierz'@@,,'Wybór bieżącej pozycji'@,"sel_exit()",,1,,,,'W');
_kod.win_sel(_wer);
{? _kod.select() || PARWYD.KODKRESK:=_kod.KOD ?};
1


\etykieta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Formuła obsługi wydruku etykiety dla kodów kreskowych
::   WE: _a - miejsce wywołania
::       Automatyczne parametry (ich podanie decyduję o bezpośrednim wydruku etykiet(y)):
::       [_b] - miejsce wydruku
::       [_c] - wzorzec etykiety
::       [_d] - urządzenie
::       [_e] - 0-zwraca kod etykiety 1(domyślnie)-na drukarkę
::       [_f] - 1(domyślnie) pierwsze uruchomienie 0-zmiana
::       [_g] - ilość etykiet, domyślnie 1
::   WY: pusty string lub dla _e=0 definicja etykiety
::----------------------------------------------------------------------------------------------------------------------
_defet:='';
_eand:={? var_pres('_a')=type_of('') || _a || '' ?};
{? (1+_eand)='@' || _eane:=gsub(8-_eand,'_',''); _eanb:='@' || _eane:='';_eanb:='' ?};
:: parametry wywołania automatycznego
_e_ean:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_e_lab:={? var_pres('_c')=type_of(null()) || _c || null() ?};
_e_urz:={? var_pres('_d')=type_of(null()) || _d || null() ?};
_toprn:={? var_pres('_e')=type_of(0) || _e || 1 ?};
_first:={? var_pres('_f')=type_of(0) || _f || 1 ?};
_il_et:={? var_pres('_g')=type_of(0) || _g || 1 ?};

_auto:=_e_ean<>null() & _e_lab<>null() & _e_urz<>null();

EANX.CHANGE:=0;
EANX.FIRSTEAN:=_eand;

{? ~_first
|| EANX.E_EANT:=_e_ean;
   EANX.E_LAB:=_e_lab;
   EANX.E_URZ:=_e_urz;
   EANX.MJS:=8+(_eand+(8*'_'));
   _auto:=2
|? _auto
|| EANX.E_EANT:=_e_ean;
   EANX.E_LAB:=_e_lab;
   EANX.E_URZ:=_e_urz;
   exec('grp_etyk','param_wydr')
?};

EANX.EAND:='';
_beertab:=BEER.TAB;
{? _eand=''
|| FUN.info('Nie podano miejsca wywołania (akronimu tabeli).'@)
|? ~exec('isDEFetyk','magazyn_mobi',_eand)
|| FUN.info('Brak aktywnych miejsca wywołania %1,'
            ' do których przypisano definicję etykiet.'
            '\n\nFunkcja niedostępna.'@[_eand])
|? _eand<>'' & (BEER.TAB:={? _eane<>'' || _eane || _eand ?}; exec('Struct','libfml',,'BEER.TAB',1)<>'')
||
:: Pobieramy listę etykiet wg miejsca wywołania
   _etyk:=null();
   EANX.EAND:=_eand;
   _kod:={? _eanb='' || 8+(EANX.EAND+(8*'_')) || 8+(_eane+(8*'_')) ?};
   _pow:='';
   _tab:={? _eane<>'' || _eane || _eand ?};
   _tap:={? _eane<>'' || _eane || '' ?};
   _mjs:='';
   _ind:='';
   _ref:={? _eane<>'' || null() || ($('%1.ref()'[EANX.EAND]))() ?};
   _log:={? _eane<>'' || exec('FindInSet','#table','EANT','KOD',_eand,,"@.EANT.LOG",1,,'') || '' ?};

:: Pobranie parametrów
   _ilmjs:={? ~_auto || exec('eseletyk','param_wydr',0,_kod) || 1 ?};

:: Pobrano etykietę
   {? EANX.E_EANT<>null() & (~_auto | (EANX.E_LAB<>null() & EANX.E_URZ<>null()))
   || {? _auto<>1 || exec('worketyk','param_wydr',1,_kod) ?};
      {? _eane=''
      || _tab:=EANX.E_EANT().TAB;
         _tap:=EANX.E_EANT().SUB;
         _ind:=EANX.E_EANT().IND
      || _tab:='@';
         _tap:=_eane;
         _ind:=''
      ?};
      EANX.MJS:={? _tap<>'' || {? _eane<>'' || _eand+8 || EANX.E_EANT().KOD+8 ?} || 8+EANX.E_EANT().KOD ?};
      VAR_DEL.delete('__etyksel','__ewinsel','__etyktag');
      _oki:=exec('listetyk','param_wydr',_tab,_tap,_ind,_ref,$EANX.E_LAB,$EANX.E_URZ,_auto=1,_ilmjs,_il_et,_log);
      __etyksel.prefix();
      {? ~EANX.CHANGE & _oki & __etyksel.first()
      || _vardebug:=VAR.DEBUG;
         VAR.DEBUG:=0;
         {!
         |? {? __etyksel.ILET>0 & __etyksel.LAB<>''
             & (_etyk:=exec('FindAndGet','#table',URZ_LAB,__etyksel.LAB,,null()); _etyk<>null())
             & (_urz:=exec('FindAndGet','#table',URZ,__etyksel.URZ,,null()); _urz<>null())
            ||
::               __etyktag.clear();
::               __etyktag.prefix($__etyksel.ref());
::               {? __etyktag.first()
::               || FUN.info('Ilość etykiet do wysłania: %1.'[$__etyksel.ILET])
::               ?}
               PAR_WYDR.TYPDR:=_urz;
               PAR_WYDR.URZ_LAB:=_etyk;
               _Tab:=ref_tab(__etyksel.SQL);
               _Tab.cntx_psh();
               _Tab.prefix();
               {? _Tab.seek(__etyksel.SQL)
               || EANX.EAND:=exec('tab_acr','#table',_Tab);
                  {! _ii:=1..__etyksel.ILET
                  |! {? _toprn
                     || exec('druk','kody_kresk')
                     || _defet+=exec('memoetyk','param_wydr',0)
                     ?}
                  !}
               ?};
               _Tab.cntx_pop();
               obj_del(_Tab)
            ?};
            __etyksel.next()
         !};
         VAR.DEBUG:=_vardebug
      ?};
      VAR_DEL.delete('__etyksel','__ewinsel','__etyktag')
   ?}
?};

BEER.TAB:=_beertab;
{? EANX.CHANGE
|| _defet:=exec('etykieta','param_wydr',EANX.FIRSTEAN,EANX.E_EANT,EANX.E_LAB,EANX.E_URZ,,0)
?};
_defet


\eseletyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Pobranie danych wg miejsca do wydruku etykietyFormuła obsługi wydruku etykiety dla kodów kreskowych
::   WE: _a - tryb 0-z miejscami (domyślnie), 1 bez
::       _b - miejsce
::   WY: 1-wprowadzono dane, 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_kod:={? var_pres('_b')=type_of('') || _b || '' ?};

_eanxmjs:=EANX.MJS;
EANX.MJS:=_kod;
_winsel:=EANT.win_dict('?');
EANT.win_dict('SEM');
_act:=EANT.actions('SEM','W');
{? ~_tryb
|| EANX.E_EANT:=null(); EANX.E_LAB:=null(); EANX.E_URZ:=null();
   exec('worketyk','param_wydr',0,_kod);
   exec('grp_etyk','param_wydr');
   EANX.win_edit('ETPAR')
|| EANX.win_edit('ETPAQ')
?};
EANT.cntx_psh();
URZ_LAB.cntx_psh();
URZ.cntx_psh();
{? EANX.E_EANT=null()
|| EANX.E_EANT:=exec('pr_e_mjs','param_wydr',1);
   {? EANX.E_EANT<>null()
   || EANX.E_LAB:=exec('FindInSet','#table','URZ_MJS','EANT',EANX.MJS,,"@.URZ_MJS.URZ_LAB",,,null());
      {? EANX.E_LAB<>null()
      || _kat:=exec('FindInSet','#table','URZ_KAT','NAZWA','DRUKARKA',,1,,,null());
         EANX.E_URZ:=null();
         _dom:=0;
         URZ.index('URZ');
         URZ.prefix(_kat,EANX.E_LAB().URZ_KOM);
         {? URZ.first()
         || {!
            |? {? (_dom:=exec('FindInSet','#table','URZ_DOM','URZ_LAB',EANX.E_LAB,,,,null())<>null(); _dom)
                | EANX.E_URZ=null()
               || EANX.E_URZ:=URZ.ref()
               ?};
               ~_dom & URZ.next()
            !}
         ?}
      ?}
   ?}
?};
_ilmjs:=exec('pr_e_mjs','param_wydr',-1);

{? (~_tryb & EANX.E_EANT<>null())
 | EANX.edit("_res:='';
              {? EANX.E_EANT=null() || FUN.info('Wymagane podanie Rodzaju wydruku.'@); _res:='E_EANT'
              |? EANX.E_LAB=null() || FUN.info('Wymagane podanie Wzorca etykiety.'@); _res:='E_LAB'
              |? EANX.E_URZ=null() || FUN.info('Wymagane podanie Urządzenia.'@); _res:='E_URZ'
              ?};
              _res")
|| _res:=1
?};
EANT.f_clear();
URZ_LAB.f_clear();
URZ.f_clear();
EANT.cntx_pop();
URZ_LAB.cntx_pop();
URZ.cntx_pop();
EANX.MJS:=_eanxmjs;
EANT.win_dict(_winsel);
EANT.actions('SEM',_act);
{? _ilmjs>1 & _res || _res:=_ilmjs ?};
_res


\listetyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Formuła obsługi wydruku etykiety dla kodów kreskowych
::   WE: _a - tabela
::       _b - tabela powiązana
::       _c - indeks
::       _d - ref prefiksu
::       _e - wybrana etykieta
::       _f - wybrane urządzenie
::       [_g] - czy tryb automatyczny (wybór wszystkich bez select-a)
::       [_h] - ilość miejsc wywołania
::       [_i] - ilość etykiet, domyślnie 1
::       [_j] - warunek do sprawdzenia - domyślnie brak
::   WY: 1-zatwierdzono wybór 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_tab:={? var_pres('_a')=type_of('') || _a || '' ?};
_pow:={? var_pres('_b')=type_of('') || _b || '' ?};
_ind:={? var_pres('_c')=type_of('') || _c || '' ?};
_ref:={? var_pres('_d')=type_of(null()) || _d || null() ?};
_lab:={? var_pres('_e')=type_of('') || _e || '' ?};
_urz:={? var_pres('_f')=type_of('') || _f || '' ?};
_auto:={? var_pres('_g')=type_of(0) || _g || 0 ?};
_ilmjs:={? var_pres('_h')=type_of(0) || _h || 0 ?};
_ilet:={? var_pres('_i')=type_of(0) || _i || 1 ?};
_war:={? var_pres('_j')=type_of('') || _j || '' ?};

__etyksel:=tab_tmp(1,'LP','INTEGER',''
            ,'KOD','STRING[50]',''
            ,'OPIS','STRING[100]',''
            ,'IL','REAL',''
            ,'WGIL','STRING[1]',''
            ,'WGLP','STRING[1]',''
            ,'WGMN','STRING[1]',''
            ,'ILET','INTEGER',''
            ,'SQL','STRING[16]',''
            ,'LAB','STRING[16]',''
            ,'LABOP','STRING[35]',''
            ,'URZ','STRING[16]',''
            ,'URZNAZ','STRING[30]','');
__etyktag:=tab_tmp(2,'ETYKSEL','STRING[16]',''
            ,'LP','INTEGER',''
            ,'OPIS','STRING[255]','');
__ewinsel:=__etyksel.mk_sel('Wybór pozycji do wydruku etykiet'@,'P',,'#wybetykprn',,,,,'U');
__etyksel.win_fld(__ewinsel,,'LP',,,3,0,1,'Lp.'@);
__etyksel.win_fld(__ewinsel,,'KOD',,,20,0,1,'Kod'@);
__etyksel.win_fld(__ewinsel,,'OPIS',,,30,0,1,'Opis'@);
__etyksel.win_fld(__ewinsel,,'IL',,,12,3,0,'Ilość'@);
__etyksel.win_fld(__ewinsel,,'WGIL',,,,,,'Wg ilości'@,,'Liczba etykiet wg ilości [T/N]?'@,2,,"'T'","'N'");
__etyksel.win_fld(__ewinsel,,'WGLP',,,,,,'Wg pozycji'@,,'Liczba etykiet wg pozycji [T/N]?'@,2,,"'T'","'N'");
__etyksel.win_fld(__ewinsel,,'WGMN',,,,,,'Wg operatora'@,,'Podano liczbę etykiet [T/N]?'@,2,,"'T'","'N'");
__etyksel.win_fld(__ewinsel,,'LABOP',,,20,,1,'Etykieta'@);
__etyksel.win_fld(__ewinsel,,'URZNAZ',,,30,,1,'Urządzenie'@);
__etyksel.win_fld(__ewinsel,,'ILET',,,8,0,0,'Wybrano'@);
__etyksel.win_act(__ewinsel,,'Formuła','&Popraw'@@,,,"exec('modletyk','param_wydr')",,,1
 ,"exec('modletyk','param_wydr')",,'P');
__etyksel.win_act(__ewinsel,,'Formuła','Druku&j'@@,,,"sel_exit()",,1,,,,'J',,'icon=print');
__etyksel.win_act(__ewinsel,,'Formuła','&Etykieta'@@,,,"exec('infletyk','param_wydr')",,,,,,'E');
__etyksel.win_act(__ewinsel,,'Formuła','&Zmień etykietę'@@,,,"exec('chngetyk','param_wydr')",,,1
 ,"exec('chngetyk','param_wydr')",,'Z');
{? _ilmjs>1 || __etyksel.win_act(__ewinsel,,'Formuła','Zmień &miejsce'@@,,,"exec('chngmjsw','param_wydr')",,,,,,'M') ?};
__etyksel.win_act(__ewinsel,,'Szukaj',);
__etyksel.win_act(__ewinsel,,'Kolejność',);
__etyksel.win_btn(__ewinsel,'text='+'Druku&j'@+', panel=bottom, align=end','menu:J'
 ,,,,,,'noempty');
__etyksel.win_btn(__ewinsel,'text='+'Anuluj'@+', panel=bottom, align=end','key:Esc');
__etyksel.win_sel(__ewinsel);

{? _pow=''
|| __etyksel.blank();
   __etyksel.LP:=1;
   __etyksel.KOD:=exec('dane','%etykiety',_tab,0);
   __etyksel.OPIS:=exec('dane','%etykiety',_tab,1);
   __etyksel.IL:=exec('dane','%etykiety',_tab,2);
   __etyksel.WGIL:='N';
   __etyksel.WGLP:='T';
   __etyksel.WGMN:='N';
   __etyksel.ILET:=_ilet;
   _form:=$('%1.ref()'[_tab]);
   __etyksel.SQL:=$_form();
   _buf:=exec('ulabetyk','param_wydr',exec('dane','%etykiety',_pow,3),exec('dane','%etykiety',_pow,5));
   __etyksel.LAB:={? _buf<>null() & ($_buf)<>_lab || $_buf || _lab ?};
   __etyksel.LABOP:=exec('FindAndGet','#table',URZ_LAB,__etyksel.LAB,,"KOD",'');
   _etyk:=exec('FindAndGet','#table',URZ_LAB,__etyksel.LAB,,,null());
   _buf:=exec('udometyk','param_wydr',_etyk);
   __etyksel.URZ:={? _buf<>null() & ($_buf)<>_urz || $_buf || _urz ?};
   __etyksel.URZNAZ:=exec('FindAndGet','#table',URZ,__etyksel.URZ,,"NAZWA",'');
   {? __etyksel.add(1) || exec('tagletyk','param_wydr',_tab,_pow) ?}
|| {| ($_pow)()
   |! cntx_psh();
      {? _tab<>'@'
      || index(_ind);
         prefix(_ref)
      || prefix()
      ?};
      {? first()
      || _lp:=1;
         {!
         |? {? {? _tab<>'@' || 1 |? _war<>'' || ($_war)() || 0 ?}
            || __etyksel.blank();
               __etyksel.LP:=_lp;
               __etyksel.KOD:=exec('dane','%etykiety',_pow,0);
               __etyksel.OPIS:=exec('dane','%etykiety',_pow,1);
               __etyksel.IL:=exec('dane','%etykiety',_pow,2);
               __etyksel.WGIL:='N';
               __etyksel.WGLP:='T';
               __etyksel.WGMN:='N';
               __etyksel.ILET:=_ilet;
               __etyksel.SQL:=$ref();
               _buf:=exec('ulabetyk','param_wydr',exec('dane','%etykiety',_pow,3),exec('dane','%etykiety',_pow,5));
               __etyksel.LAB:={? _buf<>null() & ($_buf)<>_lab || $_buf || _lab ?};
               __etyksel.LABOP:=exec('FindAndGet','#table',URZ_LAB,__etyksel.LAB,,"KOD",'');
               _etyk:=exec('FindAndGet','#table',URZ_LAB,__etyksel.LAB,,,null());
               _buf:=exec('udometyk','param_wydr',_etyk);
               __etyksel.URZ:={? _buf<>null() & ($_buf)<>_urz || $_buf || _urz ?};
               __etyksel.URZNAZ:=exec('FindAndGet','#table',URZ,__etyksel.URZ,,"NAZWA",'');
               {? __etyksel.add(1) || exec('tagletyk','param_wydr',_tab,_pow) ?};
               _lp+=1
            ?};
            next()
         !}
      ?};
      cntx_pop()
   |}
?};
__etyksel.clear();
{? _auto | __etyksel.select() || _res:=1 ?};
_res


\modletyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Poprawianie ilości etykiet
::----------------------------------------------------------------------------------------------------------------------
_sel:=__etyksel.sel_aget();
__etyksel.sel_adel();
_edit:=EANX.win_edit('?');
__etyksel.cntx_psh();
_sel.prefix();
{? _sel.first()
|| EANX.ETKOD:='';
   EANX.ETOPIS:='';
   EANX.ETIL:=0;
   EANX.ETWG:='P';
   EANX.ILET:=1;
   EANX.win_edit('ETGRP');
   {? EANX.edit()
   || {!
      |? {? (__etyksel.prefix(); __etyksel.seek(_sel.REF,))
         || {? EANX.ETWG='I' || __etyksel.WGIL:='T'; __etyksel.WGLP:='N'; __etyksel.WGMN:='N'
            |? EANX.ETWG='P' || __etyksel.WGIL:='N'; __etyksel.WGLP:='T'; __etyksel.WGMN:='N'
            |? EANX.ETWG='M' || __etyksel.WGIL:='N'; __etyksel.WGLP:='N'; __etyksel.WGMN:='T'
            ?};
            __etyksel.ILET:={? __etyksel.WGIL='T' || ceil(__etyksel.IL)
                            |? __etyksel.WGLP='T' || 1
                            || EANX.ILET
                            ?};
            __etyksel.put(1)
         ?};
         _sel.next()
      !}
   ?}
|| EANX.ETKOD:=__etyksel.KOD;
   EANX.ETOPIS:=__etyksel.OPIS;
   EANX.ETIL:=__etyksel.IL;
   EANX.ETWG:={? __etyksel.WGIL='T' || 'I'
              |? __etyksel.WGLP='T' || 'P'
              |? __etyksel.WGMN='T' || 'M'
              || ''
              ?};
   EANX.ILET:=__etyksel.ILET;
   EANX.win_edit('ETMOD');
   {? EANX.edit()
   || {? EANX.ETWG='I' || __etyksel.WGIL:='T'; __etyksel.WGLP:='N'; __etyksel.WGMN:='N'
      |? EANX.ETWG='P' || __etyksel.WGIL:='N'; __etyksel.WGLP:='T'; __etyksel.WGMN:='N'
      |? EANX.ETWG='M' || __etyksel.WGIL:='N'; __etyksel.WGLP:='N'; __etyksel.WGMN:='T'
      ?};
      __etyksel.ILET:=EANX.ILET;
      __etyksel.put(1)
   ?}
?};
__etyksel.cntx_pop();
EANX.win_edit(_edit);
~~


\tagletyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Zapis linii etykiety wg tag-ów
::   WE: _a - tabela
::       _b - powiązana tabela
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_tap:=_b;

_sql:=$__etyksel.ref();
_noutf:=exec('FindAndGet','#table',URZ,__etyksel.URZ,,"NOUTF",0);
EANX.FNC1:=exec('FindAndGet','#table',URZ,__etyksel.URZ,,"FNC1",'');
_eanxeand:=EANX.EAND;
__etyktag.clear();
__etyktag.prefix($__etyksel.ref());
{? __etyktag.first() || {! |? __etyktag.del() !} ?};

{? __etyksel.ILET>0 & __etyksel.LAB<>''
 & (_etyk:=exec('FindAndGet','#table',URZ_LAB,__etyksel.LAB,,null()); _etyk<>null())
|| EANX.EAND:={? _tap<>'' || _tap || _tab ?};
   URZ_LABZ.cntx_psh();
   URZ_LABZ.index('URZ_LABZ');
   URZ_LABZ.prefix(_etyk);
   {? URZ_LABZ.first()
   || {!
      |? {? URZ_LABZ.LOG='' | ($URZ_LABZ.LOG)()
         || _txt:=exec('tag','param_wydr',URZ_LABZ.POZ);
            _txt:={? ~_noutf || STR.maz2w95(_txt) || STR.maz2nop(_txt) ?};
            __etyktag.blank();
            __etyktag.ETYKSEL:=_sql;
            __etyktag.LP:=URZ_LABZ.LP;
            __etyktag.OPIS:=_txt;
            __etyktag.add(1)
         ?};
         URZ_LABZ.next()
      !}
   ?};
   URZ_LABZ.cntx_pop()
?};
EANX.EAND:=_eanxeand;
~~


\infletyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wyświetla linie etykiety
::----------------------------------------------------------------------------------------------------------------------
_sel:=__etyktag.mk_sel('Polecenia dla etykiety'@,'P',,'#tagetykprn',,,,,'U');
__etyktag.win_fld(_sel,,'LP',,,3,0,1,'Lp.'@);
__etyktag.win_fld(_sel,,'OPIS',,,100,0,1,'Opis'@);
__etyktag.win_act(_sel,,'Formuła','&Notatnik'@@,,,"exec('memoetyk','param_wydr')",,1,,,,'N');
__etyktag.win_act(_sel,,'Szukaj',);
__etyktag.win_act(_sel,,'Kolejność',);
__etyktag.win_sel(_sel);
__etyktag.prefix($__etyksel.ref());
{? __etyktag.first()
|| __etyktag.select()
|| FUN.info('Brak poleceń na urządzenie.'@)
?}


\chngetyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Zmienia definicję etykiety
::----------------------------------------------------------------------------------------------------------------------
_mjs:=EANX.MJS;
_sel:=__etyksel.sel_aget();
__etyksel.sel_adel();
__etyksel.cntx_psh();

_e_lab:=EANX.E_LAB;
_e_urz:=EANX.E_URZ;
EANX.E_LAB:=exec('FindAndGet','#table',URZ_LAB,__etyksel.LAB,,,null());
EANX.E_URZ:=exec('FindAndGet','#table',URZ,__etyksel.URZ,,,null());

{? exec('eseletyk','param_wydr',1)
|| _etyk:=EANX.E_LAB;
   _urz:=EANX.E_URZ;
   {? _sel.first()
   || {!
      |? {? (__etyksel.prefix(); __etyksel.seek(_sel.REF,)) & ($_etyk<>__etyksel.LAB | $_urz<>__etyksel.URZ)
         || __etyksel.LAB:=$_etyk;
            __etyksel.LABOP:=exec('FindAndGet','#table',URZ_LAB,__etyksel.LAB,,"KOD",'');
            __etyksel.URZ:=$_urz;
            __etyksel.URZNAZ:=exec('FindAndGet','#table',URZ,__etyksel.URZ,,"NAZWA",'');
            {? __etyksel.put(1) & __etyksel.SQL<>''
            || _tab:=ref_tab(__etyksel.SQL);
               _tab.cntx_psh();
               _tab.prefix();
               {? _tab.seek(__etyksel.SQL) || exec('tagletyk','param_wydr',exec('tab_acr','#table',_tab),'') ?};
               _tab.cntx_pop();
               obj_del(_tab)
            ?}
         ?};
         _sel.next()
      !}
   |? $_etyk<>__etyksel.LAB
   || __etyksel.LAB:=$_etyk;
      __etyksel.LABOP:=exec('FindAndGet','#table',URZ_LAB,__etyksel.LAB,,"KOD",'');
      __etyksel.URZ:=$_urz;
      __etyksel.URZNAZ:=exec('FindAndGet','#table',URZ,__etyksel.URZ,,"NAZWA",'');
      {? __etyksel.put(1) & __etyksel.SQL<>''
      || _tab:=ref_tab(__etyksel.SQL);
         _tab.cntx_psh();
         _tab.prefix();
         {? _tab.seek(__etyksel.SQL) || exec('tagletyk','param_wydr',exec('tab_acr','#table',_tab),'') ?};
         _tab.cntx_pop();
         obj_del(_tab)
      ?}
   ?}
?};
__etyksel.cntx_pop();
obj_del(_sel);
EANX.E_LAB:=_e_lab;
EANX.E_URZ:=_e_urz;
~~


\ulabetyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Zwraca etykietę wg przypisania do kartoteki
::   WE: _a - uidref materiału
::       _b - uidref kontrahenta
::   WY: wskazanie na etykietę lub null()
::----------------------------------------------------------------------------------------------------------------------
_res:=null();
_mat:={? var_pres('_a')=type_of('') || _a || '' ?};
_ukh:={? var_pres('_b')=type_of('') || _b || '' ?};
_mgr:={? _mat<>'' || exec('FindAndGet','#table',M,_mat,,"MGR().uidref()",'') || '' ?};

URZ_DOM.cntx_psh();
URZ_DOM.index('UID');
URZ_DOM.prefix(_mat);
{? URZ_DOM.first()
|| _res:={? exec('clabetyk','param_wydr',URZ_DOM.URZ_LAB,EANX.EAND,EANX.MJS)
         || URZ_DOM.URZ_LAB
         || null()
         ?}
?};
{? _res=null() & _mgr<>''
|| URZ_DOM.prefix(_mgr);
   {? URZ_DOM.first()
   || _res:={? exec('clabetyk','param_wydr',URZ_DOM.URZ_LAB,EANX.EAND,EANX.MJS)
            || URZ_DOM.URZ_LAB
            || null()
            ?}
   ?}
?};
{? _res=null() & _ukh<>''
|| URZ_DOM.prefix(_ukh);
   {? URZ_DOM.first()
   || _res:={? exec('clabetyk','param_wydr',URZ_DOM.URZ_LAB,EANX.EAND,EANX.MJS)
            || URZ_DOM.URZ_LAB
            || null()
            ?}
   ?}
?};
URZ_DOM.cntx_pop();
_res


\clabetyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Kontrola czy dana etykieta została przypisana do aktualnego miejsca wywołania
::   WE: _a - etykieta
::       _b - wywołano z
::       _c - miejsce skrócone
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_urz_lab:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_tab:={? var_pres('_b')=type_of('') || _b || '' ?};
_mjs:={? var_pres('_c')=type_of('') || _c || '' ?};

{? _urz_lab<>null() & _tab<>'' & _mjs<>''
|| _mtb:=8+(_tab+(8*'_'));
   {? _mtb=_mjs
   || _eant:='%1%2'[_mjs,8*'_'];
      _res:=exec('FindInSet','#table','URZ_MJS','URZ_LAB',_eant,_urz_lab,,1,,null())<>null()
   || _eant:='%1%2'[_mtb,_mjs];
      _res:=exec('FindInSet','#table','URZ_MJS','URZ_LAB',_eant,_urz_lab,,1,,null())<>null();
      {? ~_res
      || _eant:='%1%2'[_mjs,8*'_'];
         _res:=exec('FindInSet','#table','URZ_MJS','URZ_LAB',_eant,_urz_lab,,1,,null())<>null()
      ?}
   ?}
?};
_res


\worketyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Robi zapis o do tabeli URZ_WORK
::   WE: _a - 1-zapis 0-odczyt
::       _b - kod wywołania
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_mjs:={? var_pres('_b')=type_of('') || _b || 'xxx' ?};

_tty:=tty();
{? _tryb & EANX.E_LAB<>null()
|| URZ_WORK.index('USERS');
   URZ_WORK.prefix(OPERATOR.USER,_tty,_mjs);
   {? URZ_WORK.first()
   || URZ_WORK.URZ:=EANX.E_URZ().uidref();
      URZ_WORK.URZ_LAB:=EANX.E_LAB().uidref();
      URZ_WORK.PRN:=EANX.E_URZ().DRIVER;
      URZ_WORK.EANT:=EANX.E_EANT().uidref();
      URZ_WORK.put(1)
   || URZ_WORK.blank();
      URZ_WORK.USER:=OPERATOR.USER;
      URZ_WORK.TTY:=_tty;
      URZ_WORK.URZ:=EANX.E_URZ().uidref();
      URZ_WORK.URZ_LAB:=EANX.E_LAB().uidref();
      URZ_WORK.PRN:=EANX.E_URZ().DRIVER;
      URZ_WORK.MJS:=_mjs;
      URZ_WORK.EANT:=EANX.E_EANT().uidref();
      URZ_WORK.add(1)
   ?}
|? ~_tryb
|| URZ_WORK.index('USERS');
   URZ_WORK.prefix(OPERATOR.USER,_tty,_mjs);
   {? URZ_WORK.first()
   || {!
      |? {? URZ_WORK.EANT<>''
         || _eant:=exec('FindAndGet','#table',EANT,URZ_WORK.EANT,
                    ,"{? A='T' & (LOG='' | ($LOG)()) || ref() || null() ?}",null())
         || _eant:=null()
         ?};
         {? _eant<>null()
         || {? URZ_WORK.URZ_LAB<>'' || EANX.E_LAB:=exec('FindAndGet','#table',URZ_LAB,URZ_WORK.URZ_LAB,,,null()) ?};
            {? URZ_WORK.URZ<>'' || EANX.E_URZ:=exec('FindAndGet','#table',URZ,URZ_WORK.URZ,,,null()) ?};
            {? URZ_WORK.EANT<>'' || EANX.E_EANT:=_eant ?};
            0
         || URZ_WORK.next()
         ?}
      !}
   ?}
?};
~~


\memoetyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Podgląd danych etykiety w trybie notanikowym
::   WE: [_a] - 1(domyślnie) wyświetlenie 0-zwrócenie definicji etykiety
::----------------------------------------------------------------------------------------------------------------------
_txt:='';
_tryb:={? var_pres('_a')=type_of(0) || _a || 1 ?};

__etyktag.cntx_psh();
__etyktag.clear();
__etyktag.prefix($__etyksel.ref());
{? __etyktag.first()
|| URZ_LABM.cntx_psh();
   URZ_LABM.index('URZ_LAB');
   URZ_LABM.prefix(null());
   {!
   |? _txt+='%1\n'[form(__etyktag.OPIS)];
      __etyktag.next()
   !};
   _txt-=1;
   {? _tryb
   || URZ_LABM.blank(1);
      URZ_LABM.URZ_LAB:=null();
      URZ_LABM.memo_set(_txt,'ETYK');
      URZ_LABM.display()
   ?};
   URZ_LABM.cntx_pop()
?};
__etyktag.cntx_pop();
_txt


\po_etwg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Po wybraniu EANX.ETWG
::----------------------------------------------------------------------------------------------------------------------
{? EANX.ETWG='I' || EANX.ILET:=ceil(EANX.ETIL)
|? EANX.ETWG='P' || EANX.ILET:=1
|? EANX.ETWG='M' || EANX.ILET:=0
?};
''


\pr_ilet
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przed redakcją pola EANX.ILET
::----------------------------------------------------------------------------------------------------------------------
EANX.ETWG='M'


\pr_e_mjs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przed redakcją pola EANX.E_MJS
::   WE: [_a]-0(domyślnie) - przed redakcją pola 1-zwraca EANT -1-zwraca ilość miejsc wywołań dla etykiety
::   WY: 1/0 dla trybu 0, ref/null() dla trybu 1, ilość miejsc dla trybu -1
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_ilmjs:=0;
{? EANX.E_LAB=null() | _tryb=-1
|| _ref:=null();
   _dom:=0;
   EANT.clear();
   EANT.f_clear();
   EANT.f_set('OPIS,KOD','','');
   {? EANT.f_first()
   || {!
      |? {? EANT.A='T' & (8+EANT.KOD)=EANX.MJS & (EANT.LOG='' | ($EANT.LOG)())
          & exec('FindInSet','#table','URZ_MJS','EANT',EANT.KOD,,,,,null())<>null()
         || {? (~_dom & EANT.DOM='T') | _ref=null() || _ref:=EANT.ref() ?};
            _ilmjs+=1;
            EANT.f_next()
         || EANT.f_del()
         ?}
      !};
      EANT.f_first()
   ?};
   _res:={? _tryb=1 || EANT.f_clear(); _ref |? _tryb=-1 || _ilmjs || 1 ?}
?};
_res


\po_e_mjs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Po redakcji pola EANX.E_MJS
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? EANX.E_EANT<>null()
|| EANX.E_LAB:=exec('FindInSet','#table','URZ_MJS','EANT',EANX.MJS,,"@.URZ_MJS.URZ_LAB",,,null())
|| FUN.info('Należy wskazać Rodzaj wydruku.'@);
   _res:=0
?};
_res


\pr_e_urz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przed redakcją pola EANX.E_URZ
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? EANX.E_LAB<>null()
|| URZ.clear();
   URZ.f_clear();
   URZ.f_set('NAZWA'
    ,''
    ,'URZ.URZ_KOM=:_a'
    ,EANX.E_LAB().URZ_KOM);
   {? URZ.f_size()=1 & EANX.E_URZ=null() || EANX.E_URZ:=URZ.ref() ?};
   _res:=1
?};
_res


\po_e_urz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Po redakcji pola EANX.E_URZ
::----------------------------------------------------------------------------------------------------------------------
1


\pr_e_lab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Przed redakcją pola EANX.E_LAB
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? EANX.E_EANT<>null()
|| URZ_LAB.clear();
   URZ_LAB.f_clear();
   URZ_LAB.f_set('KOD,OPIS'
    ,'left join URZ_MJS using(URZ_LAB.REFERENCE,URZ_MJS.URZ_LAB)'
    ,'URZ_MJS.EANT=\':_a\''
    ,EANX.E_EANT().KOD);
   {? URZ_LAB.f_size()=1 & EANX.E_LAB=null() || EANX.E_LAB:=URZ_LAB.ref() ?};
   _res:=1
?};
_res


\po_e_lab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Po redakcji pola EANX.E_LAB
::----------------------------------------------------------------------------------------------------------------------
{? EANX.E_LAB<>null() & EANX.E_URZ=null()
|| EANX.E_URZ:=exec('udometyk','param_wydr',EANX.E_LAB)
?};
1


\udometyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Zwraca domyślne urządzenie dla etykiety
::   WE: _a - etykieta
::   WY: _b - urządzenie
::----------------------------------------------------------------------------------------------------------------------
_lab:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_res:=null();

{? _lab<>null()
|| URZ_DOM.cntx_psh();
   URZ_DOM.index('URZ_LAB');
   URZ_DOM.prefix(_lab,'URZ');
   {? URZ_DOM.first() || _res:=exec('FindAndGet','#table',URZ,URZ_DOM.UID,,,null()) ?};
   URZ_DOM.cntx_pop()
?};
_res


\ctrletyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Sprawdzenie czy dla danego miejsca wywołania są wogóle zdefiniowane etykiety
::   WE: _a - miejsce
::   WY: 1-tak 0-nie 2-tylko jeden rodzaj
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_res


\grp_etyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Zmienia wskazanie miejsca wywołania na podstawie grupy w zmiennej EANX.E_EANT
::----------------------------------------------------------------------------------------------------------------------
{? EANX.E_EANT().GRP<>'' & EANX.E_EANT().LOG<>'' & ~($EANX.E_EANT().LOG)()
|| _grp:=EANT.GRP;
   EANT.cntx_psh();
   EANT.index('AGRP');
   EANT.prefix('T',_grp,);
   {? EANT.first()
   || {!
      |? {? EANT.LOG<>'' & ($EANT.LOG)()
         || EANX.E_EANT:=EANT.ref();
            0
         || EANT.next()
         ?}
      !}
   ?};
   EANT.cntx_pop()
?};
~~


\chngmjsw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Zmienia miejsce wywołania
::----------------------------------------------------------------------------------------------------------------------
_e_mjs:=EANX.E_EANT;
_e_lab:=EANX.E_LAB;
_e_urz:=EANX.E_URZ;
_t_mjs:=EANX.MJS;
EANX.MJS:=8+('%1%2'[EANX.FIRSTEAN,8*'_']);
EANX.E_LAB:=EANX.E_URZ:=null();
_winsel:=EANT.win_dict('?');
EANT.win_dict('SEM');
_act:=EANT.actions('SEM','W');
EANX.win_edit('ETPAR');
exec('pr_e_mjs','param_wydr');
{? EANX.edit("_res:='';
              {? EANX.E_EANT=null() || FUN.info('Wymagane podanie Rodzaju wydruku.'@); _res:='E_EANT'
              |? EANX.E_LAB=null() || FUN.info('Wymagane podanie Wzorca etykiety.'@); _res:='E_LAB'
              |? EANX.E_URZ=null() || FUN.info('Wymagane podanie Urządzenia.'@); _res:='E_URZ'
              ?};
              _res")
|| sel_exit();
   EANX.CHANGE:=1
|| EANX.E_EANT:=_e_mjs;
   EANX.E_LAB:=_e_lab;
   EANX.E_URZ:=_e_urz;
   EANX.MJS:=_t_mjs
?}


\qr_code
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25_JST01]
:: OPIS: Zwraca bieżącą treść QRcode dla dokumentu
::----------------------------------------------------------------------------------------------------------------------
exec('get','#params',300250,2)


\qr_code_ksef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25_JST01]
:: OPIS: Zwraca bieżącą treść QRcode - link weryfikacyjny dla dokumentu KSEF
::       (musi mieć nadany numer KSeF - obsługiwany tylko tryb ONLINE)
::----------------------------------------------------------------------------------------------------------------------
_qr_code_ksef:='';
{? __STRTAB='FAKS' & FAKS.T().KSEF='T' & FAKS.NRKSEF<>''
|| DOKUM.cntx_psh();
   {? exec('bl_dokum_seek','zbl',FAKS)
   || _qr_code_ksef:=exec('ksef_verification_link','businesslink3')
   ?};
   DOKUM.cntx_pop()
?};
_qr_code_ksef

:Sign Version 2.0 jowisz:1045 2024/01/29 14:27:18 0338f70feafb9f1c5b269c72ea4c73d4c783d728373f1e7a6447ccf6c8057edb7ca1fcdc565af62c9a6c5bf26ff1debe3755ec24ab6f7c04c248f989dae274b42830558f1e0d2e1d1e9e3a24117d2830f13af0baee2f31b739613892394cf6943a2f1b1efaf6a0cc830d1b0b748434ebebf83ef809ba97fcf5d10c0a0da6518d
