:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: portal_bip.fml
:: Utworzony: 22.11.2019
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły obsługujące Bazy Informacji Portalowych. Głównymi tabelami mechanizmu są:
::             - BIPKAT - Kategorie.
::             - BIPNAG - Tabela główna (nagłówkowa) z informacją.
::             - BIPODB - Tabela z odbiorcami - uprawnionymi współpracownikami.
::            Kody obsługiwanych funkcjonalności zdefiniowane są w \_funkc i weryfikowane przez \_funkc_valid.
::======================================================================================================================
:: Formuły zawarte w pliku umożliwiają obsługę następujących działań:
::    1. Redagowanie kategorii.
::    2. Redagowanie nagłówków informacji wraz z powiązaniami (załączniki, kryteria, odbiorcy, ...).
:: Dostosowanie tych działań (np. w przypadku tworzenia nowej funkcjonalności) w ogromnej mierze polega na wypełnieniu
:: odpowiednimi wartościami tablicy tworzonej przez funkcję _cfg (zwróć uwagę na obowiązkowy parametr _a).
:: Jednak są miejsca w kodzie, które mogą wymagać zmian:
::    * \funkc       - formuła definiująca kody obsługiwanych funkcjonalności.
::    * \bipnag_chk  - formuła sprawdzająca poprawność wypełnienia pól tabeli BIPNAG.
::    * \bipnag_wnds - formuła budowy okna grupowego z widokiem nagłówków i elementów powiązanych.
::    * \bipodb_chk  - formuła sprawdzająca poprawność wypełnienia pól tabeli BIPODB.
::----------------------------------------------------------------------------------------------------------------------
:: Zasady obsługi pola BIPODB.STATUS.
:: 1. Wartości:
::       A - Zapis dodany automatycznie (spełnia kryterium).
::       R - Zapis dodany ręcznie.
::       W - Zapis utworzony automatycznie i usunięty przez operatora (wykluczony ręcznie).
::       O - Organizator (tylko dla wydarzeń grupowych).
:: 2. Zasady zmiany statusu podczas aktualizacji.
::    a) Rekord spełnia kryteria:
::          A -> A | Bez zmian: spełniał kryteria i nadal je spełnia.
::          R -> R | Bez zmian: kryteria nie dotyczą rekordu dodanego ręcznie przez operatora.
::          W -> W | Bez zmian: rekord został ręcznie wykluczony.
::          O -> O | Bez zmian.
::    b) Rekord nie spełnia kryteriów:
::          A -> del | Rekord utworzony automatycznie wypadł z kryteriów - może być usunięty.
::          R -> R   | Bez zmian: kryteria nie dotyczą rekordu dodanego ręcznie przez operatora.
::          W -> W   | Nie chcemy, aby rekord ręcznie wykluczony pojawił się w przyszłości - zostawmy status 'W'.
::          O -> O   | Bez zmian.
::----------------------------------------------------------------------------------------------------------------------
:: Zasady ustalania daty badania kryteriów w zależności od obsługiwanej funkcjonalności.
::    - WDRZ (wydarzenia grupowe) - dzień rozpoczęcia wydarzenia (BIPNAG.DT1). Jeżeli ktoś w dniu rozpoczęcia wydarzenia
::      nie spełnia kryteriów (nie jest zatrudniony / na odpowiednim stanowisku / w odpowiedniej jednostce
::      organizacyjnej / ...) to nie weźmie udziału w takim wydarzeniu.
::    - W pozostałych przypadkach - data bieżąca.
::      Jeżeli element bazy wiedzy został utworzony 1 III, a pracownik został zatrudniony 1 V, to nie oznacza, że nie
::      może mieć dostępu do tego elementu (bo 1 III nie był zatrudniony).
::----------------------------------------------------------------------------------------------------------------------

\_napraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuły naprawcze związane ze zmianami produkcyjnymi.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BIPODB.cntx_psh();
BIPODB.index('LINK');
BIPODB.prefix();
BIPODB.for_each("
   _put:=0;
   {? BIPODB.POW_KOM=''
   || BIPODB.POW_KOM:='N';
      _put+=1
   ?};
   {? BIPODB.POW_MAIL=''
   || BIPODB.POW_MAIL:='N';
      _put+=1
   ?};
   {? BIPODB.FIRMA=null()
   || _put+=1
   ?};
   {? _put
   || BIPODB.put()
   ?}
",1);
BIPODB.cntx_pop();

BIPNAG.cntx_psh();
BIPNAG.index('KAT');
BIPNAG.prefix();
BIPNAG.for_each("
   _put:=0;
   {? BIPNAG.AKT=''
   || BIPNAG.AKT:='N';
      _put+=1
   ?};
   {? BIPNAG.FIRMA=null()
   || _put+=1
   ?};
   {? _put
   || BIPNAG.put()
   ?}
",1);
BIPNAG.cntx_pop();

BIPPYTN.cntx_psh();
BIPPYTN.index('BIPKAT');
BIPPYTN.prefix();
BIPPYTN.for_each("
   {? BIPPYTN.FIRMA=null()
   || BIPPYTN.put()
   ?}
",1);
BIPPYTN.cntx_pop();

BIPULP.cntx_psh();
BIPULP.index('BIPKAT');
BIPULP.prefix();
BIPULP.for_each("
   {? BIPULP.FIRMA=null()
   || BIPULP.put()
   ?}
",1);
BIPULP.cntx_pop();

BNFTP.cntx_psh();
BNFTP.prefix();
BNFTP.for_each("{? BNFTP.R=null() | BNFTP.SRC='' | 1+BNFTP.SRC=':' || BNFTP.put() ?}",1);
BNFTP.cntx_pop();

GSPP.cntx_psh();
GSPP.prefix();
GSPP.for_each("{? GSPP.MINUS='' || GSPP.MINUS:='N'; GSPP.put() ?}",1);
GSPP.cntx_pop();

GSXM.cntx_psh();
GSXM.prefix();
GSXM.for_each("{? GSXM.TYP='GSPN' & GSXM.FLAGA='IsOnPayCompChart' & GSXM.MAX=0 || GSXM.MAX:=20; GSXM.put() ?}");
GSXM.cntx_pop();

1


\_funkc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła zwraca informacje o obsługiwanych funkcjonalnościach.
::       Ponieważ funkcja ma charakter wewnętrzny i elementarny, to poprawność parametrów nie jest wnikliwie sprawdzana
::       (oszczędność czasu).
::   WE: [_a] [STRING] - Rodzaj informacji:
::            KODY  - Lista kodów [domyślnie].
::            KODYP - Lista kodów funkcjonalności obsługujących pytania.
::            NAZWA - Opis funkcjonalności, której kod podany jest w _b.
::            PYTANIE - Informacja o tym, czy funkcjonalność, której kod podany jest w _b obsługuje pytania [T/N].
::       [_b] [STRING]
::             dla _a='KODY' lub _a='KODYP'
::                Format wyniku:
::                   'P' - lista prosta [domyślnie];
::                   'S' - lista napisów.
::             dla _a='NAZWA' lub _a='PYTANIE'
::                Kod funkcjonalności, której dotyczy wywołanie.
::   WY: W zależności od parametru _a.
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_a')=type_of('') & ',KODY,KODYP,NAZWA,PYTANIE,'*',%1,' [_a] || _a || 'KODY' ?};

:: Poniżej znajduje się dość newralgiczna część parametryzacji - napis z konfiguracją obsługiwanych funkcjonalności.
:: Ponieważ nie planujemy dynamicznego przyrostu konfiguracji, to napis nie jest szczególnie przyjazny, ale nie jest też
:: szczególnie skomplikowany.
:: W każdym wierszu znajduje się informacja o jednej funkcjonalności: kod, nazwa, czy funkcjonalność z obsługą pytań -
:: a więc obecnie 3 kolumny.
:: Uwaga: jeżeli liczba obsługiwanych funkcjonalności przekroczy 24, to należy zmienić sposób walidacji pola
::        BIPKAT.FUNKC w odpowiednim wyzwalaczu.
_lc:=3;
_arr:=spli_str(
   'WDRZ|'+'Wydarzenia'@+'|N|'
   'BLTN|'+'Biuletyny'@+'|N|'
   'WIEDZA|'+'Baza wiedzy'@+'|N|'
   'KDR|'+'Kontakt z działem kadr'@+'|T|'
   'ZAL|'+'Dokumenty'@+'|N|'

   'ULP|'+'Ulepszenia'@+'|T|'
:: sztuczna funkcjonalność dla pytań i komentarzy do ulepszeń
   'ULP_PYT|'+'Ulepszenia pytania'@+'|N|'
   'ULP_KOM|'+'Ulepszenia komentarze'@+'|N|'

   'OGL|'+'Ogłoszenia'@+'|T|'
:: sztuczna funkcjonalność dla pytań i komentarzy do ogłoszeń
   'OGL_PYT|'+'Ogłoszenia pytania'@+'|N|'
   'OGL_KOM|'+'Ogłoszenia komentarze'@+'|N|'

:: Benefity występują tutaj trochę sztucznie. Będzie dla nich zdefiniowana tylko jedna kategoria.
   'BNFT|'+'Benefity'@+'|N',
   '|'
);

_len:=obj_len(_arr);
{? 4+_typ='KODY'
|| _tf:={? var_pres('_b')=type_of('') & (_b='P' | _b='S') || _b || 'P' ?};
   _form:=
      {? _tf='S'
      || "'\\''+_a+'\\''"
      || "_a"
      ?};
   _war:=
      {? _typ='KODYP'
      || "_a[_b+2]='T'"
      || "1"
      ?};
   _ret:='';
   {! _lp:=1 // _lc .. _len
   |! {? _war(_arr,_lp)
      || _ret+=','+_form(_arr[_lp])
      ?}
   !};
   1-_ret

|? (_typ='NAZWA' | _typ='PYTANIE') & var_pres('_b')=type_of('')
|| _delta:={? _typ='NAZWA' || 1 || 2 ?};
   {! _lp:=1 // _lc .. _len
   |! {? _arr[_lp]=_b
      || return(_arr[_lp+_delta])
      ?}
   !};
   '???'
|| ~~
?}


\_funkc_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła wewnętrzna, sprawdza poprawność kodu funkcjonalności. Zakładamy, że parametr _a JEST typu napisowego
::       sprawdzić przed wywołaniem).
::   WE:  _a  [STRING] - Kod funkcjonalności.
::       [_b] [NUMBER] - Tryb wsadowy (bez komunikatów [0*/1].
::   WY: Kod funkcjonalności poprawny (obsługiwany): 0 / 1.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & (',%1,' [exec('_funkc','portal_bip','KODY')] * ',%1,' [_a])
|| 1
|| {? ~(var_pres('_b')=type_of(0) & _b)
   || _stack:=form_stack(2);
      FUN.error('Nieprawidłowy kod (%1) funkcjonalności.'@ [_a]+'\n(\\%1/%2.fml)' [_stack[2].name,_stack[2].file])
   ?};
   0
?}


\_cfg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła tworząca struktury (do wypełnienia) wymagane przy obsłudze kategorii i nagłówków.
::   WE:  _a  [STRING] - Rodzaj zwracanej struktury: BIPKAT / BIPNAG / BNFTT.
::                       Dostępne są jeszcze kody wewnętrzne: NAG, ODB.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & (',BIPKAT,BIPNAG,BNFTT,NAG,ODB,BIPULP,BIPOGL'*_a)
|| _typ:=_a
|| return(obj_new(1))
?};

{? _typ='BIPKAT'
|| exec('obj_ntab_set','#array',,
      'funkc','*Kod obsługiwanej funkcjonalności*',
      'ws','*Kategoria: akronim okna wertowania*',
      'we','*Kategoria: akronim okna redagowania*',
      'wp','*Kategoria: akronim okna wyszukiwania*',
      'hdrs','*Kategoria: tytuł okna wertowania*',
      'hdre','*Kategoria: tytuł okna redagowania / wyszukiwania*'
   )

|? _typ='ODB'
|| exec('obj_ntab_set','#array',,
      'bipodb_main',exec('obj_ntab_set','#array',,
::       Formuła, której wynikiem jest identyfikator odbiorcy.
         'id',"
            OSOBA.cntx_psh();
            OSOBA.prefix();
            BIPODB.OSOBA();
            _ret:='%1 %2 (PESEL: %3).'[OSOBA.NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL];
            OSOBA.cntx_pop();
            _ret"
      ),

      'bipodb_usun',exec('obj_ntab_set','#array',,
         'ask1','*BIPODB_USUN: treść pytania przy zaznaczonym jednym rekordzie*',
         'askn','*BIPODB_USUN: treść pytania przy zaznaczonych wielu rekordach*',
         'title','*BIPODB_USUN: tytuł okna z raportem po przetwarzaniu*',
         'askb','*BIPODB_USUN: treść pytania dla bieżącego rekordu*',
         'root_r','*BIPODB_USUN: tytuł sekcji odbiorców, których nie można usunąć *'
      ),

      'bipodb_wyklucz',exec('obj_ntab_set','#array',,
         'ask1','*BIPODB_WYKLUCZ: treść pytania przy zaznaczonym jednym rekordzie*',
         'askn','*BIPODB_WYKLUCZ: treść pytania przy zaznaczonych wielu rekordach*',
         'title','*BIPODB_WYKLUCZ: tytuł okna z raportem po przetwarzaniu*',
         'askb','*BIPODB_WYKLUCZ: treść pytania dla bieżącego rekordu*',
         'root_a','*BIPODB_WYKLUCZ: tytuł sekcji odbiorców, których nie można wykluczyć *'
      ),

      'bipodb_uwzglednij',exec('obj_ntab_set','#array',,
         'ask1','*BIPODB_UWZGLEDNIJ: treść pytania przy zaznaczonym jednym rekordzie*',
         'askn','*BIPODB_UWZGLEDNIJ: treść pytania przy zaznaczonych wielu rekordach*',
         'title','*BIPODB_UWZGLEDNIJ: tytuł okna z raportem po przetwarzaniu*',
         'askb','*BIPODB_UWZGLEDNIJ: treść pytania dla bieżącego rekordu*',
::       Formuła zwracająca treść komunikatu o zmianie statusu z A na R.
         'a2r',"'Zmiana statusu na ''A'' nie jest możliwa.'",
         'rootr','*BIPODB_UWZGLEDNIJ: tytuł sekcji odbiorców, którym status zmieniono na R*',
         'root_w','*BIPODB_UWZGLEDNIJ: tytuł sekcji odbiorców, których nie można uwzględnić*'
      ),

      'bipodb_powiadom',exec('obj_ntab_set','#array',,
         'ask1','*BIPODB_POWIADOM: treść pytania przy zaznaczonym jednym rekordzie*',
         'askn','*BIPODB_POWIADOM: treść pytania przy zaznaczonych wielu rekordach*',
         'title','*BIPODB_POWIADOM: tytuł okna z raportem po przetwarzaniu*',
         'askb','*BIPODB_POWIADOM: treść pytania dla bieżącego rekordu*',
         'root_ok','*BIPODB_POWIADOM: tytuł sekcji odbiorców niewymagających przetwarzania*'
      ),
   )

|? _typ='NAG'
|| exec('obj_ntab_set','#array',exec('_cfg','portal_bip','ODB'),
      'uid','*Identyfikator czynności*',
      'funkc','*Kod obsługiwanej funkcjonalności*',
::    Pola techniczne.
::    Okno obszaru.
      'area',0,
::    Informacja o uprawnieniach do czynności.
      'upr',0,
::    Bufor do obsługi informacji o modyfikacji rekordów w oknie.
      'buf',obj_new('service')
   )

|? _typ='BIPNAG'
|| exec('obj_ntab_set','#array',exec('_cfg','portal_bip','NAG'),
      'bipkat',exec('obj_ntab_set','#array',,
         'wd','*BIPKAT: akronim okna słownika*',
         'we','*BIPKAT: akronim okna edycji*',
         'wp','*BIPKAT: akronim okna wyszukiwania*',
::       Wydarzenia mają okna dedykowane - nie trzeba definiować tytułów.
         'SLO_hdr_sel','*BIPKAT: tytuł okna wyboru*',
         'RED_hdr_edit','*BIPKAT: tytuł okna podglądu / wyszukiwania*'
      ),

      'bipnag_wnds',exec('obj_ntab_set','#array',,
         'nag_ws','*BIPNAG_WNDS: akronim okna wertowania*',
         'nag_edit','*BIPNAG_WNDS: akronim okna redagowania*',
         'nag_patt','*BIPNAG_WNDS: akronim okna wyszukiwania*',
         'grp_title','*BIPNAG_WNDS: tytuł okna grupowego*',
         'kryt_tab','*BIPNAG_WNDS: tytuł zakładki z kryteriami*',
         'odb_ws','*BIPNAG_WNDS: akronim okna wertowania z odbiorcami*',
         'odb_tab','*BIPNAG_WNDS: tytuł zakładki z odbiorcami*'
      ),

      'bipnag_main',exec('obj_ntab_set','#array',,
         'brak','*BIPNAG_MAIN: komunikat o braku odbiorców*',
::       Formuła, której wynikiem jest identyfikator nagłówka.
         'id',"BIPNAG.uidref()",
         'on','*BIPNAG_MAIN: wyróżnik akcji "włączającej"*',
         'off','*BIPNAG_MAIN: wyróżnik akcji "wyłączającej"*'
      ),

      'bipnag_on',exec('obj_ntab_set','#array',,
         'ask1','*BIPNAG_ON: treść pytania przy zaznaczonym jednym rekordzie*',
         'askn','*BIPNAG_ON: treść pytania przy zaznaczonych wielu rekordach*',
         'title','*BIPNAG_ON: tytuł okna z raportem po przetwarzaniu*',
         'askb','*BIPNAG_ON: treść pytania dla bieżącego rekordu*',
         'root_odb','*BIPNAG_ON: tytuł sekcji nagłówków bez odbiorców*',
         'root_ok','*BIPNAG_ON: tytuł sekcji nagłówków niewymagających przetwarzania*'
      ),

      'bipnag_off',exec('obj_ntab_set','#array',,
         'ask1','*BIPNAG_OFF: treść pytania przy zaznaczonym jednym rekordzie*',
         'askn','*BIPNAG_OFF: treść pytania przy zaznaczonych wielu rekordach*',
         'title','*BIPNAG_OFF: tytuł okna z raportem po przetwarzaniu*',
         'askb','*BIPNAG_OFF: treść pytania dla bieżącego rekordu*',
::       Formuła wykonywana przed "wyłączeniem" nagłówka.
::          _a [ARRAY]  - Tablica ze wszystkimi parametrami.
::          _a [NUMBER] - Czy obsługa akcji grupowej [0/1].
         'confirm',"1",
         'root_ok','*BIPNAG_OFF: tytuł sekcji nagłówków niewymagających przetwarzania *'
      )
   )

|? _typ='BNFTT'
|| exec('obj_ntab_set','#array',exec('_cfg','portal_bip','NAG'),
::    Formuła, której wynikiem jest identyfikator nagłówka.
      'main',exec('obj_ntab_set','#array',,
         'id',"'%1 - %2 | %3: %4' [$BNFTT.OD,$BNFTT.DO,BNFTT.AKRONIM,BNFTT.NAZWA]"
      ),
      'bnftt',exec('obj_ntab_set','#array',,
         'bipkat',null()
      )
   )

|? _typ='BIPULP'
|| exec('obj_ntab_set','#array',exec('_cfg','portal_bip','NAG'),
      'bipkat',exec('obj_ntab_set','#array',,
         'wd','*BIPKAT: akronim okna słownika*',
         'we','*BIPKAT: akronim okna edycji*',
         'wp','*BIPKAT: akronim okna wyszukiwania*',
         'SLO_hdr_sel','*BIPKAT: tytuł okna wyboru*',
         'RED_hdr_edit','*BIPKAT: tytuł okna podglądu / wyszukiwania*'
      ),

      'bipulp_wnds',exec('obj_ntab_set','#array',,
         'nag_ws','*BIPULP_WNDS: akronim okna wertowania*',
         'nag_edit','*BIPULP_WNDS: akronim okna redagowania*',
         'nag_patt','*BIPULP_WNDS: akronim okna wyszukiwania*',
         'grp_title','*BIPULP_WNDS: tytuł okna grupowego*',
         'kryt_tab','*BIPULP_WNDS: tytuł zakładki z kryteriami*',
         'odb_ws','*BIPULP_WNDS: akronim okna wertowania z odbiorcami*',
         'odb_tab','*BIPULP_WNDS: tytuł zakładki z odbiorcami*'
      )
   )

|? _typ='BIPOGL'
|| exec('obj_ntab_set','#array',exec('_cfg','portal_bip','NAG'),
      'bipkat',exec('obj_ntab_set','#array',,
         'wd','*BIPKAT: akronim okna słownika*',
         'we','*BIPKAT: akronim okna edycji*',
         'wp','*BIPKAT: akronim okna wyszukiwania*',
         'SLO_hdr_sel','*BIPKAT: tytuł okna wyboru*',
         'RED_hdr_edit','*BIPKAT: tytuł okna podglądu / wyszukiwania*'
      ),

      'bipulp_wnds',exec('obj_ntab_set','#array',,
         'nag_ws','*BIPULP_WNDS: akronim okna wertowania*',
         'nag_edit','*BIPULP_WNDS: akronim okna redagowania*',
         'nag_patt','*BIPULP_WNDS: akronim okna wyszukiwania*',
         'grp_title','*BIPULP_WNDS: tytuł okna grupowego*',
         'kryt_tab','*BIPULP_WNDS: tytuł zakładki z kryteriami*',
         'odb_ws','*BIPULP_WNDS: akronim okna wertowania z odbiorcami*',
         'odb_tab','*BIPULP_WNDS: tytuł zakładki z odbiorcami*'
      )
   )
?}


\bipkat_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bipkat_modb','portal_bip') & exec('bipkat_chk','portal_bip',0)


\bipkat_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bipkat_modb','portal_bip') & exec('bipkat_chk','portal_bip',1)


\bipkat_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli BIPKAT.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',BIPKSN,'NAZWA',BIPKAT.ref())


\bipkat_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: podstawowy warunek dalszego działania
{? ~_a | do_state()<>1 || return() ?};

{? BIPKAT.FUNKC<>bfld('FUNKC')
|| BIPKSN.cntx_psh();
   BIPKSN.index('NAZWA');
   BIPKSN.prefix(BIPKAT.ref());
   _loop:=BIPKSN.first();
   {!
   |? _loop
   |! BIPKSN.put();
      _loop:=BIPKSN.next()
   !};
   BIPKSN.cntx_pop()
?};
~~


\bipkat_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli BIPKAT.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;

__CHK.validate(BIPKAT,
   $("_a.table(_b,"+$_put+",,'FIRMA','FUNKC','KOD','NAZWA','POW_LIST','POW_PUSH')"),
   $("_a.in_set(_b,'FUNKC',,"+exec('_funkc','portal_bip','KODY','S')+")"),
   $("{? _b.KOD='$' | exec('valid_acronim','#string',_b.KOD)
      || 1
      || _a.err_fld(_b,'KOD',1,'"+
            'Kod musi rozpoczynać się od wielkiej litery.\n'
            'Może zawierać wyłącznie litery, cyfry i znak podkreślenia.'@+"'
         );
         'KOD'
      ?}
   "),
   "_a.in_set(_b,'SAMOUCZ',,'T','N')",
   "_a.in_set(_b,'POW_LIST',,'T','N')",
   "_a.in_set(_b,'POW_PUSH',,'T','N')",
   $("{? _b.POW_KOM<0 || _a.err_fld(_b,'POW_KOM',1,'"+'Wartość nie może być ujemna.'@+"') || 1 ?}"),
   $("{? _b.POW_MAIL<0 || _a.err_fld(_b,'POW_MAIL',1,'"+'Wartość nie może być ujemna.'@+"') || 1 ?}")
)


\bipkat_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? BIPKAT.POW_LIST='N'
|| BIPKAT.POW_PUSH:='N'
?};
1


\bipkat_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła zwraca informację o kategorii, na podstawie funkcjonalności i kodu.
::   WE:  _a  [STRING] - Funkcjonalność.
::        _b  [STRING] - Kod.
::       [_c] [STRING] - Nazwa.
::       [_d] [STRING] - Rodzaj zwracanej informacji: 'ref' [domyślnie] lub akronim jednego z pól.
::       [_e] [NUMBER] - Czy w przypadku braku rekordu utworzyc go? [0*/1]
::   WY: Informacja określona przez _c lub ~~ w przypadku błędu parametrów.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & exec('_funkc_valid','portal_bip',_a)
|| _funkc:=_a
|| return()
?};
{? var_pres('_b')=type_of('')
|| _kod:=_b
|| return()
?};
_nazwa:={? var_pres('_c')=type_of('') || _c || _kod ?};
{? var_pres('_d')=type_of('') & var_pres(_d,BIPKAT)>0
|| _info:=_d
|| _info:='ref()'
?};
_add:=var_pres('_e')=type_of(0) & _e;

_ret:=~~;
BIPKAT.cntx_psh();
BIPKAT.index('KOD');
BIPKAT.prefix(exec('ref_firma','ustawienia'),_funkc,_kod,);
{? BIPKAT.first()
|| _ret:=($('BIPKAT.'+_info))()
|| BIPKAT.blank();
   BIPKAT.FUNKC:=_funkc;
   BIPKAT.KOD:=_kod;
   BIPKAT.NAZWA:=_nazwa;
   {? BIPKAT.add()
   || _ret:=($('BIPKAT.'+_info))()
   ?}
?};
BIPKAT.cntx_pop();
_ret


\bipkat_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wertowanie kategorii.
::   WE: _a [ARRAY] - Tablica elementów nazwanych z parametryzacją (patrz formuła \_cfg powyżej dla _a='BIPKAT').
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _<1
|| _stack:=form_stack();
   FUN.error('Brak parametru "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~obj_ntab(_a)
|| _stack:=form_stack();
   FUN.error('Nieprawidłowy typ parametru "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~exec('array_cmptype','#array',_a,exec('_cfg','portal_bip','BIPKAT'))
|| _stack:=form_stack();
   FUN.error('Nieprawidłowa budowa tablicy "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~exec('_funkc_valid','portal_bip',_a.funkc)
|| return(0)
?};
_cfg:=_a;

:: Obsługa wniosków wymaga zmiennych globalnych :(.
typobi:=2;
_typobiegu:=exec('bl_typ','obiegi',typobi);
_typobiegu==OBIEGI.TYPOBIEG;
_portal:='T';
_portal==POMOC.W_PORTAL;

_fetypy:=exec('get','#filter',ETYPY);
ETYPY.cntx_psh();
ETYPY.prefix();
ETYPY.win_dict('SLO');
BIPKAT.cntx_psh();
BIPKAT.f_clear();
BIPKAT.index('KOD');
BIPKAT.prefix(exec('ref_firma','ustawienia'),_cfg.funkc,);
{? _cfg.funkc='ZAL'
|| exec('bipkat_wndn','portal_bip',_cfg)
|? exec('_funkc','portal_bip','PYTANIE',_a.funkc)='T'
|| exec('bipkat_wnds','portal_bip',_cfg)
|| BIPKAT.win_sel(_cfg.ws)
?};
BIPKAT.win_edit(_cfg.we);
BIPKAT.win_patt(_cfg.wp);
BIPKAT.fld_fml('FUNKC','BLANK',$("'"+_cfg.funkc+"'"));
BIPKAT.hdr_sel();
BIPKAT.hdr_sel(_cfg.hdrs);
params_set('cfg',_cfg);
BIPKAT.select();
BIPKAT.fld_fml('FUNKC','BLANK');
BIPKAT.cntx_pop();
ETYPY.cntx_pop();
exec('set','#filter',ETYPY,_fetypy);

_portal==POMOC.W_PORTAL;
_typobiegu==OBIEGI.TYPOBIEG;
&typobi;
~~


\bipkat_wndn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Formuła odpowiedzialna za budowę okna grupowego kategorii dla funkcjonalności obsługujących dokumenty.
::   WE: _a [ARRAY] - Tablica elementów nazwanych z parametryzacją (patrz formuła \_cfg powyżej dla _a='BIPKAT').
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_cfg:=_a;

:: zmienione okno redagowania komunikatu potwierdzenia pobrania załącznika
_we:=ZAL_KOM.mk_edit('Komunikat'@,,'zal_komqred');
ZAL_KOM.win_esep(_we,'Dane podstawowe'@@);
ZAL_KOM.win_efld(_we,ZAL_KOM,'ZGODA',,,,,,'Potwierdzenie'@@,0,'Wymagana zgoda do pobrania załącznika'@,
   'check-box','left_label=1,check_label="%1"'['Tak, pobranie załącznika po potwierdzeniu'@@],"'T'","'N'"
);
ZAL_KOM.win_efld(_we,ZAL_KOM,'TEXT',,,60,-7,,'Treść komunikatu'@@,,
   'Treść komunikatu wyświetlana przy próbie pobrania załącznika'@
);
ZAL_KOM.efld_opt(_we,'mark=1',ZAL_KOM,'TEXT');
ZAL_KOM.win_esep(_we,'Wyświetlanie komunikatu'@@);
ZAL_KOM.win_efld(_we,ZAL_KOM,'CZW',,,15,2,,'Częstotliwość'@@,,'Częstotliwość wyświetlania komunikatu'@,
   'radio-buttons','left_label=1','Jednorazowo'@@,"'J'",'Każdorazowo'@@,"'K'"
);
exec('ok_esc','#window',ZAL_KOM,_we);

:: ustal tytuł okna wewnętrznego
BIPKAT.win_sel(_cfg.ws);
BIPKAT.hdr_sel();
BIPKAT.hdr_sel(_cfg.hdrs);

:: panel kategorii dokumentów
_wnd:=BIPKAT.grp_make(,
:: przy otwarciu
   $("BIPKSN.cntx_psh();
      BIPKSN.index('NAZWA');
      BIPKSN.win_sel('WER');
      BIPKSN.hdr_sel();
      BIPKSN.hdr_sel('"+'Typy załączników'@+"');
      BIPKSN.win_edit('RED');
      BIPKSN.hdr_edit('"+'Typ załącznika'@+"');
      ZAL_KOM.cntx_psh();
      ZAL_KOM.index('TYP');
      ZAL_KOM.win_edit('"+_we+"');
      ~~
   "),
:: identyfikator
   '#bipkat_%1'[-_cfg.funkc],,,
:: podczas zamykania
   $("ZAL_KOM.cntx_pop();
      ZAL_KOM.win_edel('"+_we+"');
      BIPKSN.cntx_pop();
      1
   ")
);
_mode:='maximized_with_title';
:: lista kategorii dla dokumentów
BIPKAT.grp_sel(_wnd,,_cfg.ws,,
:: po odświeżeniu
   "  params_set(params_get());
      grp_disp(BIPKSN,'WER',1)
   ",,,,,,,,
:: tryb, identyfikator
   _mode,
   'bipkat'
);
:: lista nazw dla kategorii
BIPKAT.grp_splt(_wnd,,'horizontal','bottom',15);
BIPKAT.grp_sel(_wnd,BIPKSN,'WER',,
   "  params_set(params_get());
      grp_disp(ZAL_KOM,'WER')
   ",,,,
:: przed obsługą
   "  {? grp_empty('bipkat')
      || return('#disable')
      ?};
      BIPKSN.prefix(BIPKAT.ref())
   ",,,,
:: tryb
   _mode,
   'bipksn'
);
:: potwierdzenia odbioru
BIPKAT.grp_splt(_wnd,,'horizontal','zal_kom','31,66%');
BIPKAT.grp_sel(_wnd,ZAL_KOM,'WER',,,,,,
   "  {? grp_empty('bipksn')
      || return('#disable')
      ?};
      ZAL_KOM.prefix(BIPKSN.SLO_NAZ)
   "
);

BIPKAT.win_sel(_wnd);
~~


\bipkat_wnds
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła odpowiedzialna za budowę okna grupowego kategorii dla funkcjonalności obsługujących pytania z portalu.
::   WE: _a [ARRAY] - Tablica elementów nazwanych z parametryzacją (patrz formuła \_cfg powyżej dla _a='BIPKAT').
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=_a;

{? _cfg.funkc='ULP'
|| _pytk_hdr:='Osoby obsługujące kategorię ulepszeń'@
|? _cfg.funkc='OGL'
|| _pytk_hdr:='Osoby obsługujące kategorię ogłoszeń'@
|| _pytk_hdr:='Osoby obsługujące kategorię pytań'@
?};

_grp:=BIPKAT.grp_make(,
   "  BIPPYTK.cntx_psh();
      BIPPYTK.index('VIEW');
      ~~
   ",
   '#bipkat_%1'[-_cfg.funkc],,,
   "  BIPPYTK.cntx_pop();
      1
   "
);
_mode:='maximized_with_title';
BIPKAT.grp_sel(_grp,,_cfg.ws,,
   "params_set(params_get()); grp_disp(BIPPYTK,'WERO')",,,,,,,,
   _mode,
   'bipkat'
);
BIPKAT.win_sel(_cfg.ws);
BIPKAT.hdr_sel();
BIPKAT.hdr_sel(_cfg.hdrs);
BIPKAT.grp_splt(_grp,,'horizontal','oo',15);
BIPKAT.grp_sel(_grp,BIPPYTK,'WERO',,,,,,
   "  {? grp_empty('bipkat')
      || '#disable'
      || BIPPYTK.prefix(BIPKAT.ref())
      ?}
   ",,,,
   _mode
);
BIPPYTK.win_sel('WERO');
BIPPYTK.hdr_sel();
BIPPYTK.hdr_sel(_pytk_hdr);

BIPKAT.win_sel(_grp);

~~


\_bipkat_we_cfg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła tworząca struktury (do wypełnienia) wymagane do utworzenia okna redagowania / wyszukiwania tabeli
::       BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_fldacr:=spli_str('KOD,NAZWA,POW_KOM,POW_MAIL,IKONA,OPIS,WNIOSEK,SAMOUCZ,POW_LIST,POW_PUSH',',');
_fml:="exec('obj_ntab_set','#array',";
{! _lp:=1 .. obj_len(_fldacr)
|! _fml+=',\'%1\',_a(\'%1\')' [_fldacr[_lp]]
!};
_fml+=')';
_fld:=($_fml)("
   exec('obj_ntab_set','#array',,
      'NAME',MS.name(BIPKAT,_a),
      'HELP',MS.comment(BIPKAT,_a),
      'LABEL','',
      'VISIBLE',0,
      'MARK',0
   )
"
);

_fld.SAMOUCZ.NAME:='Samouczki'@;
_fld.SAMOUCZ.LABEL:='Tak, kategoria zawiera samouczki'@;

_fld.POW_LIST.NAME:='Na liście'@;
_fld.POW_LIST.LABEL:='Tak, powiadomienia na liście'@;

_fld.POW_PUSH.NAME:='Wyskakujące'@;
_fld.POW_PUSH.LABEL:='Tak, powiadomienia wyskakujące'@;

_visible:="
   _fldacr:=spli_str({? var_pres('_a')=type_of('') || _a || '' ?},',');
   {! _lp:=1 .. obj_len(_fldacr)
   |! {? var_pres(_fldacr[_lp],.fld)>100
      || ($'_a.%1.VISIBLE:=1'[_fldacr[_lp]])(.fld)
      ?}
   !}
";

_mark:="
   _fldacr:=spli_str({? var_pres('_a')=type_of('') || _a || '' ?},',');
   {! _lp:=1 .. obj_len(_fldacr)
   |! {? var_pres(_fldacr[_lp],.fld)>100
      || ($'_a.%1.MARK:=1'[_fldacr[_lp]])(.fld)
      ?}
   !}
";

_esep:=exec('obj_ntab_set','#array',,
   'podstawowe','Dane podstawowe'@@,
   'powiadomienia','Powiadomienia'@@,
   'przypomnienia','Przypomnienie (liczba dni przed wydarzeniem)'@@
);

exec('obj_ntab_set','#array',,
   'ident','bipkat',
   'fld',_fld,
   'VISIBLE',_visible,
   'MARK',_mark,
   'esep',_esep
)


\_bipkat_we_make
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła tworzy okno redagowania tabeli BIPKAT.
::   WE:  _a  [ARRAY]  - Tablica elementów nazwanych z parametryzacją (patrz formuła \_bipkat_we_cfg powyżej).
::       [_b] [NUMBER] - Okno do obsługi akcji "Szukaj" [0*/1].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _<1
|| _stack:=form_stack();
   FUN.error('Brak parametru "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~obj_ntab(_a)
|| _stack:=form_stack();
   FUN.error('Nieprawidłowy typ parametru "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~exec('array_cmptype','#array',_a,exec('_bipkat_we_cfg','portal_bip'))
|| _stack:=form_stack();
   FUN.error('Nieprawidłowa budowa tablicy "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
?};
_cfg:=_a;
_szukaj:=var_pres('_b')=type_of(0) & _b;

_szer:=60;
_we:=BIPKAT.mk_edit(,,_cfg.ident);
BIPKAT.win_esep(_we,_cfg.esep.podstawowe);
:: KOD i NAZWA występują w oknie, bez wzgledu na flagę VISIBLE.
BIPKAT.win_efld(_we,BIPKAT,'KOD',,,12,,,_cfg.fld.KOD.NAME,,_cfg.fld.KOD.HELP);
BIPKAT.win_efld(_we,BIPKAT,'NAZWA',,,_szer,,,_cfg.fld.NAZWA.NAME,,_cfg.fld.NAZWA.HELP);
{? _cfg.fld.IKONA.VISIBLE
|| BIPKAT.win_efld(_we,BIPKAT,'IKONA',,,_szer-3,,,_cfg.fld.IKONA.NAME,0,_cfg.fld.IKONA.HELP,,'F3_button=1')
?};
{? _cfg.fld.OPIS.VISIBLE
|| BIPKAT.win_efld(_we,BIPKAT,'OPIS',,,_szer,,,_cfg.fld.OPIS.NAME,,_cfg.fld.OPIS.HELP)
?};
{? _cfg.fld.WNIOSEK.VISIBLE
|| BIPKAT.win_efld(_we,BIPKAT,'WNIOSEK','NAZWA','UNIK_WP',_szer-3,,,_cfg.fld.WNIOSEK.NAME,,_cfg.fld.WNIOSEK.HELP)
?};
{? _cfg.fld.SAMOUCZ.VISIBLE
|| {? _szukaj
   || BIPKAT.win_efld(_we,BIPKAT,'SAMOUCZ',,,3,,,_cfg.fld.SAMOUCZ.NAME,,_cfg.fld.SAMOUCZ.HELP,'check-box',
         'check_label="%1"'[_cfg.fld.SAMOUCZ.LABEL],"'T'","'N'","''"
      )
   || BIPKAT.win_efld(_we,BIPKAT,'SAMOUCZ',,,3,,,_cfg.fld.SAMOUCZ.NAME,,_cfg.fld.SAMOUCZ.HELP,'check-box',
         'check_label="%1"'[_cfg.fld.SAMOUCZ.LABEL],"'T'","'N'"
      )
   ?}
?};
{? _cfg.fld.POW_LIST.VISIBLE | _cfg.fld.POW_PUSH.VISIBLE
|| BIPKAT.win_esep(_we,_cfg.esep.powiadomienia);
   {? _cfg.fld.POW_LIST.VISIBLE
   || {? _szukaj
      || BIPKAT.win_efld(_we,BIPKAT,'POW_LIST',,,3,,,_cfg.fld.POW_LIST.NAME,,_cfg.fld.POW_LIST.HELP,'check-box',
            'check_label="%1"'[_cfg.fld.POW_LIST.LABEL],"'T'","'N'","''"
         )
      || BIPKAT.win_efld(_we,BIPKAT,'POW_LIST',,,3,,,_cfg.fld.POW_LIST.NAME,,_cfg.fld.POW_LIST.HELP,'check-box',
            'check_label="%1"'[_cfg.fld.POW_LIST.LABEL],"'T'","'N'"
         )
      ?}
   ?};
   {? _cfg.fld.POW_PUSH.VISIBLE
   || {? _szukaj
      || BIPKAT.win_efld(_we,BIPKAT,'POW_PUSH',,,3,,,_cfg.fld.POW_PUSH.NAME,,_cfg.fld.POW_PUSH.HELP,'check-box',
            'check_label="%1"'[_cfg.fld.POW_PUSH.LABEL],"'T'","'N'","''"
         )
      || BIPKAT.win_efld(_we,BIPKAT,'POW_PUSH',,,3,,,_cfg.fld.POW_PUSH.NAME,,_cfg.fld.POW_PUSH.HELP,'check-box',
            'check_label="%1"'[_cfg.fld.POW_PUSH.LABEL],"'T'","'N'"
         )
      ?}
   ?}
?};
{? _cfg.fld.POW_KOM.VISIBLE | _cfg.fld.POW_MAIL.VISIBLE
|| BIPKAT.win_esep(_we,_cfg.esep.przypomnienia);
   {? _cfg.fld.POW_KOM.VISIBLE
   || BIPKAT.win_efld(_we,BIPKAT,'POW_KOM',,,,,,_cfg.fld.POW_KOM.NAME,,_cfg.fld.POW_KOM.HELP)
   ?};
   {? _cfg.fld.POW_MAIL.VISIBLE
   || BIPKAT.win_efld(_we,BIPKAT,'POW_MAIL',,,,,,_cfg.fld.POW_MAIL.NAME,,_cfg.fld.POW_MAIL.HELP)
   ?}
?};

_fldacr:=obj_ntab_names(_cfg.fld);
{! _lp:=1 .. obj_len(_fldacr)
|! {? _cfg.fld[_lp].MARK
   || BIPKAT.efld_opt(_we,'mark=1',BIPKAT,_fldacr[_lp])
   ?}
!};

exec('ok_esc','#window',BIPKAT,_we);

_we


\bipkat_we
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła parametryzująca okno redagowania / szukania tabeli BIPKAT.
::   WE:  _a  [STRING] - Funkcjonalność.
::       [_b] - Okno do obsługi akcji "Szukaj" [0*/1].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & exec('_funkc_valid','portal_bip',_a)
|| _funkc:=_a
|| return()
?};
_szukaj:=var_pres('_b')=type_of(0) & _b;

_cfg:=exec('_bipkat_we_cfg','portal_bip',_funkc);
_cfg.ident:='bipkat%1%2'[~_funkc,$_szukaj];

:: KOD i NAZWA są wymagalne we wszystkich funkcjonalnościach.
_cfg.fld.KOD.MARK:=_cfg.fld.NAZWA.MARK:=1;

{? _funkc='BLTN'
|| _cfg.VISIBLE('KOD,NAZWA,IKONA,OPIS,POW_LIST,POW_PUSH')
|? _funkc='KDR'
|| _cfg.VISIBLE('KOD,NAZWA')
|? _funkc='OGL'
|| _cfg.VISIBLE('KOD,NAZWA,IKONA,OPIS')
|? _funkc='ULP'
|| _cfg.VISIBLE('KOD,NAZWA,IKONA,OPIS')
|? _funkc='WDRZ'
|| _cfg.VISIBLE('KOD,NAZWA,POW_MAIL,POW_LIST,POW_PUSH')
|? _funkc='WIEDZA'
|| _cfg.VISIBLE('KOD,NAZWA,IKONA,OPIS,WNIOSEK,SAMOUCZ,POW_LIST,POW_PUSH')
|? _funkc='ZAL'
|| _cfg.VISIBLE('KOD,NAZWA,IKONA,OPIS,POW_LIST,POW_PUSH')
?};

exec('_bipkat_we_make','portal_bip',_cfg,_szukaj)


\bipkat_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Okno - przed" dla okien wertowania tabeli BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();

_ws:=cur_win(1,1);
_we:=BIPKAT.win_edit('?');

{? _we='WDRZR'
:: Kluczowym jest aktualnie ustawione okno redagowania, bo to w nim chcemy wyszarzyć pole EDIT_VAR.TN.
|| EDIT_VAR.TN:='';
   BIPKAT.efld_opt('WDRZR','enable=0',EDIT_VAR,'TN')
?};

{? ',WIEDZA,BLTN,OGL,ULP,ZAL,'*',%1,'[_par.cfg.funkc]
|| BIPKAT.win_fml(_ws,,'NAZWA',,'ICON_BEFORE',"Icon.icon_before(BIPKAT.IKONA)");
   BIPKAT.win_efml(_we,,'IKONA',,'ICON_BEFORE',"Icon.icon_before(BIPKAT.IKONA)")
?};

{? _ws='SLO'
:: Tytuł okna wyboru kategorii (wydarzenia mają dedykowane okno - nie trzeba ustawiać tytułu).
|| _hdr:=_par.cfg.bipkat.SLO_hdr_sel;
   _wsb:=BIPKAT.win_sel('?');
   {? _wsb<>_ws
   || BIPKAT.win_sel(_ws)
   ?};
   BIPKAT.hdr_sel();
   BIPKAT.hdr_sel(_hdr);
   {? _wsb<>_ws
   || BIPKAT.win_sel(_wsb)
   ?}
?};
~~


\bipkat_ao
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Obsługa akcji "Okno - po" dla okien wertowania tabeli BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();

_ws:=cur_win(1,1);
_we:=BIPKAT.win_edit('?');

{? ',WIEDZA,BLTN,OGL,ULP,ZAL,'*',%1,'[_par.cfg.funkc]
|| BIPKAT.win_efml(_we,,'IKONA',,'ICON_BEFORE');
   BIPKAT.win_fml(_ws,,'NAZWA',,'ICON_BEFORE')
?};
~~


\bipkat_wb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Wyświetl - przed" w oknach SLO i WDRZS tabeli BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BIPKAT.hdr_edit();
BIPKAT.hdr_edit(params_get().cfg.bipkat.RED_hdr_edit);
BIPKAT.display()


\bipkat_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Przed obsługą standardowej akcji "Dołącz" w oknie WER tabeli BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BIPKAT.hdr_edit();
BIPKAT.hdr_edit(params_get().cfg.hdre);
1


\bipkat_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Przed obsługą standardowej akcji "Popraw" w oknie WER tabeli BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BIPKAT.hdr_edit();
BIPKAT.hdr_edit(params_get().cfg.hdre);
1


\bipkat_szukaj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Przed obsługą standardowej akcji "Szukaj" w oknie WER tabeli BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ws:=cur_win(1,1);
{? _ws='WER' | _ws='WDRZ'
|| _txt:=params_get().cfg.hdre
|? _ws='SLO' | _ws='WDRZS'
|| _txt:=params_get().cfg.bipkat.RED_hdr_edit
|| _txt:=''
?};
_we:=BIPKAT.win_edit('?');
_wp:=BIPKAT.win_patt('?');
{? _we<>_wp
|| BIPKAT.win_edit(_wp)
?};
BIPKAT.hdr_edit();
BIPKAT.hdr_edit(_txt);
{? _we<>_wp
|| BIPKAT.win_edit(_we)
?};
1


\bipkat_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Rekord - po" w oknach wertowania tabeli BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_chk:=exec('bipkat_chk','portal_bip',-menu_txt()='popraw');
{? (type_of(_chk)=type_of('') & _chk<>'') | (type_of(_chk)=type_of(0) & ~_chk)
|| return(_chk)
?};
_ret:='';
{? BIPKAT.WNIOSEK
|| ETYPY.cntx_psh();
   ETYPY.prefix();
   BIPKAT.WNIOSEK();
   {? (ETYPY.AKTYWNY<>'T' | ETYPY.WID_WP<>'T') &
      ~FUN.ask(
         'Wniosek nie jest aktywny i/lub widoczny na portalu.\n'
         'Złożenie wniosku na portalu nie będzie możliwe.\n'
         'Czy na pewno chcesz zakończyć redakcję?'@
      )
   || _ret:='WNIOSEK'
   ?};
   ETYPY.cntx_pop()
?};
_ret


\bipkat_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Wyświetl - przed" w oknie WER tabeli BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BIPKAT.hdr_edit();
BIPKAT.hdr_edit(params_get().cfg.hdre);
BIPKAT.display();
1


\bipkat_kod_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Przed redagowaniem pola BIPKAT.KOD
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
:: Ponieważ na portalu KOD kategorii jest niemodyfikowalny, to blokujemy możliwość poprawiania.
-menu_txt()<>'popraw'


\bipkat_pow_list_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Przed redagowaniem pola BIPKAT.POW_LIST.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
1


\bipkat_pow_list_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Po redagowaniu pola BIPKAT.POW_LIST.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? fld()='N'
|| BIPKAT.POW_PUSH:='N'
?};
1


\bipkat_pow_push_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Przed redagowaniem pola BIPKAT.POW_PUSH.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
1


\bipkat_pow_push_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Po redagowaniu pola BIPKAT.POW_PUSH.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? fld()='T'
|| BIPKAT.POW_LIST:='T'
?};
1


\dbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła dla bieżącego rekordu "nagłówkowego" ustala datę badania kryteriów.
::       Zakłada się, że tabela nagłówkowa jest zrelacjonowana z tabela BIPKAT poprzez pole o akronimie BIPKAT.
::   WE: _a [TABLE] - Uchwyt tabeli nagłówkowej.
::   WY: Data badania kryteriów lub ~~ w przypadku błędnego parametru.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(SYSLOG) & (_a=BIPNAG | _a=BNFTT | _a=BIPULP)
|| _NAG:=_a
|| return()
?};

_dt:={? _NAG=BIPNAG | _NAG=BIPULP || _NAG.DT1 || _NAG.OD ?};

BIPKAT.cntx_psh();
BIPKAT.prefix();
{? _NAG.BIPKAT().FUNKC='WDRZ'
|| _dbk:=_dt
|| _dbk:=date();
   {? _dbk<_dt
   || _dbk:=_dt
   ?}
?};
BIPKAT.cntx_pop();
_dbk


\bip_firma_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed"
::       dla tabeli BIP* w celu uzupełnienia pola FIRMA.
::   WE: _a [DICT] - alias do tabeli
::   WY: 0/1
::  TAG: <TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_TAB:={? var_pres('_a')=type_of(SYSLOG) || _a || return(_result) ?};

{? var_pres('FIRMA',_TAB)>0 & var_pres('BIPKAT',_TAB)>0 & _TAB.BIPKAT
|| BIPKAT.cntx_psh();
   BIPKAT.prefix();
   {? _TAB.FIRMA=null()
   || _TAB.FIRMA:=_TAB.BIPKAT().FIRMA
   |? _TAB.FIRMA<>_TAB.BIPKAT().FIRMA
   || undo('%1: %2' [2-!_TAB,'Brak jednoznaczności powiązania z firmą.'@]);
      _result:=0
   ?};
   BIPKAT.cntx_pop()
?};
_result


\bipnag_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BIPNAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::  hash('')='da39a3ee5e6b4b0d3255bfef95601890afd80709'
BIPNAG.HASH:='da39a3ee5e6b4b0d3255bfef95601890afd80709';

exec('dok_addb','phr_tab',BIPNAG) &
exec('bipnag_chk','portal_bip',0) &
exec('bip_firma_modb','portal_bip',BIPNAG)


\bipnag_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - po" dla tabeli BIPNAG.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('dok_adda','phr_tab',BIPNAG,_a);
   exec('bipnag_moda','portal_bip')
?};
~~


\bipnag_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli BIPNAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_putb','phr_tab',BIPNAG) &
exec('bipnag_chk','portal_bip',1) &
exec('bip_firma_modb','portal_bip',BIPNAG)


\bipnag_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli BIPNAG.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1 & exec('dok_puta','phr_tab',BIPNAG,_a)
|| {? bfld('AUTOR')<>BIPNAG.AUTOR
   || exec('bipnag_moda','portal_bip',bfld('AUTOR'))
   ?};
   {? bfld('AKT')<>BIPNAG.AKT |
::    Jeżeli zmienił się stan aktywności lub zmieniły się "parametry" przechowywane również w BIPODB ...
      bfld('DT1')<>BIPNAG.DT1 | bfld('GD1')<>BIPNAG.GD1 |
      bfld('DT2')<>BIPNAG.DT2 | bfld('GD2')<>BIPNAG.GD2 |
      bfld('BIPKAT')<>BIPNAG.BIPKAT | bfld('TYTUL')<>BIPNAG.TYTUL
::    ... to aktualizujemy listę odbiorców.
   || exec('bipodb_update','portal_bip',BIPNAG.ZZ_DOK,1)
   ?};
:: Zweryfikujmy liczbę odbiorców.
   _lodb:=exec('bipodb_licz','portal_bip',BIPNAG.ZZ_DOK);
   {? BIPNAG.LODB<>_lodb
   || BIPNAG.LODB:=_lodb;
      BIPNAG.put()
   ?}
?};
~~


\bipnag_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Usuń - przed" dla tabeli BIPNAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Usunięcie nagłówka poprzedzone jest usunięciem wszystkich pozycji. Jednak podczas usuwania pozycji aktualizowany jest
:: nagłówek - nie ma to sensu. Dlatego korzystamy z mechanizmu wspomagającego operacje hurtowe.
{? exec('add','#bulk',BIPNAG,'del',$BIPNAG.ZZ_DOK)
|| exec('del_ndx','#table',BIPODB,'LINK',BIPNAG.NP_DOK,BIPNAG.ZZ_DOK) &
   exec('del_ndx','#table',BIPODN,'LINK',BIPNAG.NP_DOK,BIPNAG.ZZ_DOK) &
   exec('del','#bulk',BIPNAG,'del',$BIPNAG.ZZ_DOK)
?}


\bipnag_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Usuń - po" dla tabeli BIPNAG.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('del_ndx','#table',ZZ_KRYT,'UNIQUE',bfld('NP_DOK'),bfld('ZZ_DOK')) &
   exec('dok_dela','phr_tab',_a)
?};
~~


\bipnag_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli BIPNAG.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;

{? BIPNAG.BIPKAT=null()
|| return(__CHK.validate(BIPNAG,"_a.record(_b,,'BIPKAT')"))
?};

BIPKAT.cntx_psh();
_funkc:=BIPNAG.BIPKAT().FUNKC;
BIPKAT.cntx_pop();

__CHK.validate(BIPNAG,
:: Pola redagowalne (w podziale na obsługiwaną funkcjonalność).
   {? _funkc='WDRZ'
   || _txt:=obj_new('TYTUL','AUTOR','DT1','GD1','DT2','GD2');
      _txt.TYTUL:='Tytuł'@;
      _txt.AUTOR:='Organizator'@;
      _txt.DT1:='Data rozpoczęcia'@;
      _txt.GD1:='Godzina rozpoczęcia'@;
      _txt.DT2:='Data zakończenia'@;
      _txt.GD2:='Godzina zakończenia'@;
      $("_ret:=_a.record2(_b,
            'TYTUL','"+_txt.TYTUL+"','AUTOR','"+_txt.AUTOR+"',
            'DT1','"+_txt.DT1+"','DT2','"+_txt.DT2+"'
         );
         {? _ret<>''
         || _ret
         |? _b.DT2<_b.DT1
         || _a.err_incorrect('"+_txt.DT2+"',
               '"+'Data w polu "%1" nie może być wcześniejsza niż data w polu "%2".'@ [_txt.DT2,_txt.DT1]+"'
            );
            'DT2'
         |? _b.GD1~1>23
         || _a.err_incorrect('"+_txt.GD1+"',
               '"+'Godzina w polu "%1" nie może być późniejsza niż 23:59:59.'@ [_txt.GD1]+"'
            );
            'GD1'
         |? _b.GD2~1>23
         || _a.err_incorrect('"+_txt.GD2+"',
               '"+'Godzina w polu "%1" nie może być późniejsza niż 23:59:59.'@ [_txt.GD2]+"'
            );
            'GD2'
         |? _b.DT1=_b.DT2 & _b.GD2<_b.GD1
         || _a.err_incorrect('"+_txt.GD2+"',
               '"+'Godzina w polu "%1" nie może być wcześniejsza niż godzina w polu "%2".'@ [_txt.GD2,_txt.GD1]+"'
            );
            'GD2'
         |? _b.DT1=_b.DT2 & _b.GD2=_b.GD1
         || _a.err_incorrect('"+_txt.GD2+"',
               '"+'Godzina w polu "%1" nie może być równa godzinie w polu "%2".'@ [_txt.GD2,_txt.GD1]+"'
            );
            'GD2'
         || 1
         ?}
      ")
   |? _funkc='WIEDZA' | _funkc='BLTN'
   || $("_a.record2(
            _b,'TYTUL','"+'Tytuł'@+"','AUTOR','"+'Autor'@+"',
            'DT1','"+'Data utworzenia'@+"'
         )
      ")
::    Jakieś pola na pewno są redagowalne i wymagalne.
   || _stack:=form_stack();
      _txt:='(\\\\%1/%2.fml)' [_stack.name,_stack.file];
      $("undo('"+'Brak kastomizacji w formule sprawdzającej wypełnienie pól tabeli %1.'@ ['BIPNAG']+"\n"+_txt+"')")
   ?},
:: Unikalność.
   $("_a.index(_b,"+$_put+")"),
:: Pola nieredagowalne.
   "_a.in_set(_b,'AKT',,'T','N')"
)


\bipnag_moda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Po modyfikacji rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - po" i "Popraw - po" dla tabeli BIPNAG.
::   WE: [_a] [REFERENCE] - Organizator (przed zmianą) [domyslnie: null].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_autor:={? var_pres('_a')=type_of(null()) & _a<>null() & ref_tab(_a)=P || _a || null() ?};

:: Organizator - obsługa specjalna dla wydarzeń.
BIPKAT.cntx_psh();
BIPKAT.prefix();
{? BIPNAG.BIPKAT().FUNKC='WDRZ'
|| BIPODB.cntx_psh();
   BIPODB.index('LINK');
   {? _autor<>null()
::    Jeżeli zmiana organizatora, to poprzedniego usuwamy. Odpowiednie mechanizmy uczynią go uczestnikiem, jeżeli będzie
::    spełniał kryteria.
   || BIPODB.prefix(BIPNAG.NP_DOK,BIPNAG.ZZ_DOK,_autor);
      {? BIPODB.first()
      || BIPODB.del()
      ?}
   ?};
   BIPODB.prefix(BIPNAG.NP_DOK,BIPNAG.ZZ_DOK,BIPNAG.AUTOR);
   {? BIPODB.first()
   || BIPODB.STATUS:='O';
      exec('bipodb_set','portal_bip','BIPNAG');
      BIPODB.put()
   || BIPODB.blank();
      BIPODB.ZZ_LINK:=BIPNAG.ZZ_DOK;
      BIPODB.P:=BIPNAG.AUTOR;
      BIPODB.STATUS:='O';
      exec('bipodb_set','portal_bip','BIPNAG');
      BIPODB.add()
   ?};
   BIPODB.cntx_pop()
?};
BIPKAT.cntx_pop();
~~


\bipnag_autor_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wartość początkowa pola BIPNAG.AUTOR.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\bipnag_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wertowanie nagłówków informacji portalowych w oknie grupowym.
::   WE:  _a  [ARRAY]  - Tablica elementów nazwanych z parametryzacją (patrz formuła \_cfg powyżej dla _a='BIPNAG').
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _<1
|| _stack:=form_stack();
   FUN.error('Brak parametru "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~obj_ntab(_a)
|| _stack:=form_stack();
   FUN.error('Nieprawidłowy typ parametru "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~exec('array_cmptype','#array',_a,exec('_cfg','portal_bip','BIPNAG'))
|| _stack:=form_stack();
   FUN.error('Nieprawidłowa budowa tablicy "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~exec('_funkc_valid','portal_bip',_a.funkc)
|| return(0)
?};
_cfg:=_a;

_cfg.upr:=exec('chk_role','#b__box',OPERATOR.USER,_cfg.uid);

_buf:=exec('save_fml_type','#field',ZZ_KRYT,'BLANK');

BIPNAG.cntx_psh();
BIPNAG.f_clear();
BIPNAG.index('DTGD');
BIPNAG.prefix(exec('ref_firma','ustawienia'),_cfg.funkc,);
params_set('cfg',_cfg);
{? exec('bipnag_wnds','portal_bip',_cfg)
|| {? _cfg.area
   || AreaTitle.setTitle()
   ?};
   BIPNAG.select()
?};
BIPNAG.cntx_pop();

exec('restore_fml_type','#field',ZZ_KRYT,'BLANK',_buf);

~~


\bipnag_wnds
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła odpowiedzialna za budowę okna grupowego dla informacji portalowych i ustawienie odpowiednich okien
::       redakcyjnych.
::   WE: _a [ARRAY] - Tablica elementów nazwanych z parametryzacją (patrz formuła \_cfg powyżej dla _a='BIPNAG').
::   WY: Wynik operacji: 0 /1.
::----------------------------------------------------------------------------------------------------------------------
_cfg:=_a;

_mode:='maximized';
_grp:=BIPNAG.grp_make(_cfg.bipnag_wnds.grp_title,
   "  _cfg:=params_get().cfg;
      _funkc:=_cfg.funkc;
      exec('zz_pom_psh','phr_widok',_cfg.uid);
      ZZ_DOK.cntx_psh();
      ZZ_DOK.f_clear();
      ZZ_DOK.prefix();
      ZZ_KRYT.cntx_psh();
      ZZ_KRYT.f_clear();
      ZZ_KRYT.index('UNIQUE');
      ZZ_KRYT.fld_fml('ZZ_LINK','BLANK',""BIPNAG.ZZ_DOK"");
      ZZ_KRYT.fld_fml('ZZ_TYP','BLANK',""exec('typ_find','phr_dane',ZZ_POM.MODUL,'ODB')"");
      ZZ_KRYT.fld_fml('ZZ_KRYT','BLANK',""exec('zz_kryt_zz_kryt_bl','phr_widok')"");
      UD_DEF.cntx_psh();
      UD_DEF.f_clear();
      UD_DEF.index('OPIS');
      exec('ud_def_zz_zal_bf','phr_widok');
      BIPKAT.cntx_psh();
      BIPKAT.f_clear();
      BIPKAT.win_dict(_cfg.bipkat.wd);
      BIPKAT.win_edit(_cfg.bipkat.we);
      BIPKAT.win_patt(_cfg.bipkat.wp);
      BIPKAT.fld_fml('FUNKC','BLANK',$(""'""+_funkc+""'""));
      BIPODB.cntx_psh();
      BIPODB.f_clear();
      BIPODB.index('NAZW');
      BIPODB.fld_fml('ZZ_LINK','BLANK',""BIPNAG.ZZ_DOK"");
      {? _funkc='WIEDZA'
      || BIPODN.cntx_psh();
         BIPODN.f_clear();
         BIPODN.index('LINK');
         BIPODN.fld_fml('ZZ_LINK','BLANK',""BIPNAG.ZZ_DOK"");
         BIPODN.win_edit('RED')
      ?};
      ~~
   ",
   '#bipnag_%1'[-_cfg.funkc],,,
   "  _cfg:=params_get().cfg;
      {? _cfg.area & ~exec('exit','zws')
      || return(0)
      ?};
      {? _cfg.funkc='WIEDZA'
      || BIPODN.fld_fml('ZZ_LINK','BLANK');
         BIPODN.f_clear();
         BIPODN.cntx_pop()
      ?};
      BIPODB.fld_fml('ZZ_LINK','BLANK');
      BIPODB.actions('WER',':');
      BIPODB.f_clear();
      BIPODB.cntx_pop();
      BIPKAT.fld_fml('FUNKC','BLANK');
      BIPKAT.f_clear();
      BIPKAT.cntx_pop();
      exec('ud_def_zz_zal_oc','phr_widok');
      UD_DEF.cntx_pop();
      ZZ_KRYT.fld_fml('ZZ_KRYT','BLANK');
      ZZ_KRYT.fld_fml('ZZ_TYP','BLANK');
      ZZ_KRYT.fld_fml('ZZ_LINK','BLANK');
      ZZ_KRYT.actions('CFG',':',,1);
      ZZ_KRYT.f_clear();
      ZZ_KRYT.cntx_pop();
      ZZ_DOK.f_clear();
      ZZ_DOK.cntx_pop();
      exec('zz_pom_pop','phr_widok');
      1
   ",,
   _mode
);

:: Nagłówek informacji portalowej.
BIPNAG.grp_sel(_grp,,_cfg.bipnag_wnds.nag_ws,,
   $("params_set(_par:=params_get());
      ZZ_POM.DOKZ_LNK:=BIPNAG.ZZ_DOK().ref();
      {? BIPNAG.BIPKAT().SAMOUCZ='T'
      || tab_hide(,1,'detale');
         tab_show(2,'detale')
      || tab_show(,'detale');
         grp_disp(UD_DEF,'ZZ_SEL',1)
      ?};
      {? _par.cfg.funkc='WIEDZA'
      || grp_disp(BIPODN,'WER',1)
      ?};
      grp_disp(ZZ_KRYT,'CFG',1);
      grp_disp(BIPODB,'"+_cfg.bipnag_wnds.odb_ws+"',1)
   "),,,,,,,,
   _mode
);
BIPNAG.grp_splt(_grp,,'horizontal','detale',20);

:: Załączniki (zakładka w dolnym panelu).
_ws:={? _cfg.upr || 'WER' || 'WEO' ?};
UD_DEF.win_sopt('ZZ_SEL','select_record_checkbox=0');
BIPNAG.grp_sel(_grp,UD_DEF,'ZZ_SEL','Załączniki'@,
   $("params_set(params_get()); grp_disp(ZZ_DOKZ,'"+_ws+"')"),,,,
   $("_TAB:=BIPNAG;
      {? grp_empty(_TAB,'"+_cfg.bipnag_wnds.nag_ws+"')
      || '#disable'
      || exec('typzal_root','phr_dane',_TAB);
         UD_DEF.prefix(exec('szukaj_ud_sch','schemat','TYPZAL',2-!_TAB))
      ?}
   "),,,,
   _mode
);
BIPNAG.tab_splt(_grp,,'vertical','zz_dokz',',25%');
BIPNAG.grp_sel(_grp,ZZ_DOKZ,_ws,,,,,,
   "  {? grp_empty(UD_DEF,'ZZ_SEL')
      || '#disable'
      || exec('ud_def_zal_wer_bs','phr_widok')
      ?}
   ",,,,
   _mode
);

{? _cfg.funkc='WIEDZA'
:: Odnośniki (zakładka w dolnym panelu).
|| BIPNAG.grp_sel(_grp,BIPODN,'WER','Odnośniki'@,,,,,
      $("{? grp_empty(BIPNAG,'"+_cfg.bipnag_wnds.nag_ws+"')
         || '#disable'
         || _upr:="+$_cfg.upr+";
            BIPODN.actions('WER',{? _upr || ':' || 'dpu:d' ?},,1);
            BIPODN.prefix(BIPNAG.NP_DOK,BIPNAG.ZZ_DOK)
         ?}
      "),,,,
      _mode
   )
?};

:: Kryteria uczestnictwa (zakładka w dolnym panelu).
BIPNAG.grp_sel(_grp,ZZ_KRYT,'CFG',_cfg.bipnag_wnds.kryt_tab,
   $("params_set(params_get()); grp_disp(BIPNAG,'"+_cfg.bipnag_wnds.nag_ws+"')"),,,,
   $("{? grp_empty(BIPNAG,'"+_cfg.bipnag_wnds.nag_ws+"')
      || '#disable'
      || _upr:="+$_cfg.upr+";
         {? _upr & _a
         || ZZ_KRYT.dnd_sel('CFG',,'records.ZZ_KRYT',""exec('zz_kryt_dnd','phr_widok')"")
         ?};
         ZZ_KRYT.actions('CFG',{? BIPNAG.AKT='T' | ~_upr || 'WDPTUYW:WD' || 'Y:Y' ?},,1);
         ZZ_KRYT.prefix(ref_name(ZZ_POM.DOKZ_LNK),ZZ_POM.DOKZ_LNK,ZZ_KRYT.fld_fml('ZZ_TYP','*BLANK')());
         {? _a & BIPNAG.AKT<>'T'
         || _cntx:=obj_new('recs','key');
            _cntx.recs:=0;
            _cntx.key:='';
            ZZ_KRYT.cntx_psh();
            {? ZZ_KRYT.first()
            || {!
               |? _cntx.recs+=1;
                  _cntx.key+='%1|%2|' [ZZ_KRYT.uidref(),$ZZ_KRYT.crc()];
                  ZZ_KRYT.next()
               !}
            ?};
            ZZ_KRYT.cntx_pop();
            params_get().cfg.buf.service:=_cntx
         ?}
      ?}
   "),
   $("{? _a & ~grp_empty(BIPNAG,'"+_cfg.bipnag_wnds.nag_ws+"')
      || ZZ_KRYT.dnd_sel('CFG',,'records.ZZ_KRYT',"""");
         {? BIPNAG.AKT<>'T'
         || _cntx:=obj_new('recs','key');
            _cntx.recs:=0;
            _cntx.key:='';
            ZZ_KRYT.cntx_psh();
            {? ZZ_KRYT.first()
            || {!
               |? _cntx.recs+=1;
                  _cntx.key+='%1|%2|' [ZZ_KRYT.uidref(),$ZZ_KRYT.crc()];
                  ZZ_KRYT.next()
               !}
            ?};
            ZZ_KRYT.cntx_pop();
            _buf:=params_get().cfg.buf;
            {? _buf.service.recs<>_cntx.recs | _buf.service.key<>_cntx.key
            || exec('bipodb_update','portal_bip',BIPNAG.ZZ_DOK)
            ?};
            obj_del(_buf.service)
         ?}
      ?}
   "),,,
   _mode
);

:: Odbiorcy (zakładka w dolnym panelu).
BIPNAG.grp_sel(_grp,BIPODB,_cfg.bipnag_wnds.odb_ws,_cfg.bipnag_wnds.odb_tab,
   $("params_set(params_get()); grp_disp(BIPNAG,'"+_cfg.bipnag_wnds.nag_ws+"')"),,,,
   $("{? grp_empty(BIPNAG,'"+_cfg.bipnag_wnds.nag_ws+"')
      || '#disable'
      || BIPODB.prefix(BIPNAG.NP_DOK,BIPNAG.ZZ_DOK);
         BIPODB.actions_grayed('"+_cfg.bipnag_wnds.odb_ws+"',{? BIPNAG.AKT='T' || ':W' || ':' ?})
      ?}
   "),,,,
   _mode
);
{? ~_cfg.upr
:: Akcje w oknie WER tabeli BIPODB nie mogą być przywiązane do czynności (bo występują w kilku różnych).
:: Obecnie możemy zatem jedynie wyłączyć je w sposób jak poniżej. Niestety, związane z nimi przyciski nadal pozostaną
:: widoczne, choć wyszarzone.
|| BIPODB.actions('WER','DULGW:DW')
?};

BIPNAG.win_sel(_grp);
BIPNAG.win_edit(_cfg.bipnag_wnds.nag_edit);
BIPNAG.win_patt(_cfg.bipnag_wnds.nag_patt);
1


\bipnag_popraw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Popraw - po" w oknach wertowania tabeli BIPNAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? BIPNAG.AKT='T' & exec('bipodb_licz','portal_bip',BIPNAG.ZZ_DOK)=0
|| FUN.info('Żaden z pracowników nie spełnia podanych kryteriów.'@+'\n'+params_get().cfg.bipnag_main.brak)
?}


\bipnag_aktn_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "grupa przed" przy włączaniu aktywności w oknach wertowania tabeli BIPNAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_txt:=params_get().cfg.bipnag_on;
{? FUN.ask({? BIPNAG.sel_size()=1 || _txt.ask1 || _txt.askn ?})
|| sel_nchk();
   KOMM.init(,,_txt.title);
   1
?}


\bipnag_aktn_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "przed" przy włączaniu aktywności w oknach wertowania tabeli BIPNAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=params_get().cfg;
_main:=_cfg.bipnag_main;
_txt:=_cfg.bipnag_on;

_gr:=BIPNAG.sel_size();
{? BIPNAG.AKT<>'T'
|| {? _gr | FUN.ask(_txt.askb)
   || BIPNAG.AKT:='T';
      {? BIPNAG.put()
      || {? BIPNAG.BIPKAT().SAMOUCZ<>'T' & exec('bipodb_licz','portal_bip',BIPNAG.ZZ_DOK)=0
::          Dla samouczków nie definiujemy odbiorców - nie liczmy więc ich i nie komunikujmy ich braku.
         || {? _gr
            || KOMM.set_root(_txt.root_odb);
               KOMM.add(_main.id());
               KOMM.sect_end()
            || FUN.info('Żaden z pracowników nie spełnia podanych kryteriów.'@+'\n'+_main.brak)
            ?}
         ?}
      ?}
   ?}
|? _gr
|| KOMM.set_root(_txt.root_ok);
   KOMM.add(_main.id());
   KOMM.sect_end()
|| melody()
?};
~~


\bipnag_aktn_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "grupa po" przy włączaniu aktywności w oknach wertowania tabeli BIPNAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KOMM.select()


\bipnag_aktt_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "grupa przed" przy wyłączaniu aktywności w oknach wertowania tabeli BIPNAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_txt:=params_get().cfg.bipnag_off;
{? FUN.ask({? BIPNAG.sel_size()=1 || _txt.ask1 || _txt.askn ?})
|| sel_nchk();
   KOMM.init(,,_txt.title);
   1
?}


\bipnag_aktt_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "przed" przy wyłączaniu aktywności w oknach wertowania tabeli BIPNAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=params_get().cfg;
_main:=_cfg.bipnag_main;
_txt:=_cfg.bipnag_off;

_gr:=BIPNAG.sel_size();
{? BIPNAG.AKT<>'N'
|| {? _gr | FUN.ask(_txt.askb)
   || {? _txt.confirm(_cfg,_gr)
      || BIPNAG.AKT:='N';
         BIPNAG.put()
      ?}
   ?}
|? _gr
|| KOMM.set_root(_txt.root_ok);
   KOMM.add(_main.id());
   KOMM.sect_end()
|| melody()
?}


\bipnag_aktt_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "grupa po" przy wyłączaniu aktywności w oknach wertowania tabeli BIPNAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KOMM.select()


\bipnag_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Rekord - przed" w oknach wertowania tabeli BIPNAG.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _ag:='';
   {? ~BIPNAG.sel_size()
   || _main:=params_get().cfg.bipnag_main;
      {? BIPNAG.AKT='T'
      || _ag+=_main.on
      || _ag+=_main.off
      ?}
   ?};
   BIPNAG.actions_grayed(cur_win(1,1),_ag)
?};
~~


\bipnag_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Rekord - po" w oknie WER tabeli BIPNAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bipnag_chk','portal_bip',-menu_txt()='popraw')


\bipodb_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bipodb_chk','portal_bip',0) &
exec('bipodb_modb','portal_bip') &
exec('bip_firma_modb','portal_bip',BIPODB)


\bipodb_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - po" dla tabeli BIPODB.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| _klasa:=exec('FindAndGet','#table',ZZ_DOK,BIPODB.ZZ_LINK,,"KLASA",'');

   {? _klasa='BIPNAG' | _klasa='BNFTT' | _klasa='BIPULP'
   || _NAG:=($_klasa)();
      _NAG.cntx_psh();
      _NAG.index('ZZ_DOK');
      _NAG.prefix(BIPODB.NP_DOK,BIPODB.ZZ_LINK);
      {? _NAG.first()
      || _NAG.LODB+=1;
         {? _klasa='BIPULP'
::       Podczytanie pola SYS_MEMO w celu poprawnej walidacji wypełnienia pola BIPULP.OPIS:
         || _NAG.memo_get(,'OPIS')
         ?};
         _NAG.put()
      ?};
      _NAG.cntx_pop()
   ?}
?};
~~


\bipodb_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bipodb_chk','portal_bip',1) &
exec('bipodb_modb','portal_bip') &
exec('bip_firma_modb','portal_bip',BIPODB)


\bipodb_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli BIPODB.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| _klasa:=exec('FindAndGet','#table',ZZ_DOK,BIPODB.ZZ_LINK,,"KLASA",'');
   {? _klasa='BIPNAG' | _klasa='BNFTT' | _klasa='BIPULP'
   || _NAG:=($_klasa)();
      _NAG.cntx_psh();
      _NAG.index('ZZ_DOK');
      _NAG.prefix(BIPODB.NP_DOK,BIPODB.ZZ_LINK);
      {? _NAG.first()
      || {? bfld('STATUS')<>BIPODB.STATUS
         || _NAG.LODB+={? BIPODB.STATUS='W' || -1 || 1 ?}
         ?};
::    Podczytanie pola SYS_MEMO w celu poprawnej walidacji wypełnienia pola BIPULP.OPIS:
         {? _NAG=BIPULP
         || BIPULP.memo_get(,'OPIS')
         ?};
         _NAG.put(,1)
      ?};
      _NAG.cntx_pop()
   ?}
?};
~~


\bipodb_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Usuń - po" dla tabeli BIPODB.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| _klasa:=exec('FindAndGet','#table',ZZ_DOK,bfld('ZZ_LINK'),,"KLASA",'');
   {? _klasa='BIPNAG' | _klasa='BNFTT' | _klasa='BIPULP'
   || _NAG:=($_klasa)();
      {? ~exec('get','#bulk',_NAG,'del',$bfld('ZZ_LINK'))
      || _NAG.cntx_psh();
         _NAG.index('ZZ_DOK');
         _NAG.prefix(bfld('NP_DOK'),bfld('ZZ_LINK'));
         {? _NAG.first()
         || {? bfld('STATUS')<>'W'
            || _NAG.LODB-=1
            ?};
            {? _klasa='BIPULP'
::          Podczytanie pola SYS_MEMO w celu poprawnej walidacji wypełnienia pola BIPULP.OPIS:
            || _NAG.memo_get(,'OPIS')
            ?};
            _NAG.put(,1)
         ?};
         _NAG.cntx_pop()
      ?}
   ?}
?};
~~


\bipodb_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli BIPODB.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;

{? BIPODB.BIPKAT=null()
|| return(__CHK.validate(BIPODB,"_a.record(_b,,'BIPKAT')"))
?};

BIPKAT.cntx_psh();
_funkc:=BIPODB.BIPKAT().FUNKC;
BIPKAT.cntx_pop();

__CHK.validate(BIPODB,
:: Pola redagowalne
   {? _funkc='WDRZ'
   || $("_a.table(_b,"+$_put+",,'DT1','DT2','BIPKAT')")
   |? _funkc='WIEDZA' | _funkc='BLTN'
   || $("_a.table(_b,"+$_put+",,'DT1','BIPKAT')")
   |? _funkc='BNFT'
   || $("_a.table(_b,"+$_put+",,'DT1','BIPKAT')")
   |? _funkc='OGL' | _funkc='ULP'
   || $("_a.table(_b,"+$_put+",,'DT1','GD1','BIPKAT')")
::    Jakieś pola na pewno są redagowalne i wymagalne.
   || _stack:=form_stack();
      _txt:=
         'Brak kastomizacji w formule sprawdzającej wypełnienie pól tabeli %1.'@ ['BIPODB']+'\n'+
         '(\\\\%1/%2.fml)' [_stack.name,_stack.file];
      $("undo('"+_txt+"')")
   ?},
:: Pola nieredagowalne
   "_a.record(_b,,'ZZ_LINK','P','POW_KOM','POW_MAIL','AKT','STATUS')",
   "_a.in_set(_b,'POW_KOM',,'T','N')",
   "_a.in_set(_b,'POW_MAIL',,'T','N')",
   "_a.in_set(_b,'AKT',,'T','N')",
   {? _funkc='WDRZ'
   || "_a.in_set(_b,'STATUS',,'A','R','W','O')"
   || "_a.in_set(_b,'STATUS',,'A','R','W')"
   ?}
)


\bipodb_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? BIPODB.ZZ_LINK
|| BIPODB.NP_DOK:=ref_name(BIPODB.ZZ_LINK)
?};
{? BIPODB.P
|| P.cntx_psh();
   P.prefix();
   BIPODB.P();
   BIPODB.FIRMA:=P.FIRMA;
   BIPODB.OSOBA:=P.OSOBA;
   BIPODB.WYDZIAL:=P.WYDZIAL;
   BIPODB.ST:=P.ST;
   BIPODB.CP:=P.CP;
   BIPODB.F_ZATR:=P.F_ZATR;
   P.cntx_pop()
?};
{? BIPODB.STATUS='A' & BIPODB.ZZ_LINK
|| _klasa:=exec('FindAndGet','#table',ZZ_DOK,BIPODB.ZZ_LINK,,"KLASA",'');

   {? _klasa='BIPNAG' | _klasa='BNFTT' | _klasa='BIPULP'
   || _NAG:=($_klasa)();
      _NAG.cntx_psh();
      _NAG.index('ZZ_DOK');
      _NAG.prefix(BIPODB.NP_DOK,BIPODB.ZZ_LINK);
      {? _NAG.first()
      || BIPODB.AKT:=
            {? _klasa='BIPULP'
            || {? exec('bipulp_status_kod','portal_bip')<>'EDYCJA'
               || 'T'
               || 'N'
               ?}
            || _NAG.AKT
            ?}
      ?};
      _NAG.cntx_pop()
   ?}

|? BIPODB.STATUS='W'
|| BIPODB.AKT:='N'
?};
1


\bipodb_licz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła narzędziowa do zliczania liczby odbiorców.
::   WE:  _a  [ZZ_DOK]    - Wskazanie na rekord właściciela.
::       [_b] [NUMBER]    - Uwzględniać zapisy wykluczone [0*/1].
::       [_c] [REFERENCE] - Wskazanie na pracownika
::   WY: Liczba rekordów (może być 0) lub -1 (w przypadku błędu).
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) & _a<>null() & ref_tab(_a)=ZZ_DOK
|| _zz_dok:=_a
|| return(-1)
?};

_zw:=var_pres('_b')=type_of(0) & _b;
_p_ref:={? var_pres('_c')=type_of(null()) || _c || null() ?};

_ret:=0;
BIPODB.cntx_psh();
BIPODB.index('LINK');
{? _p_ref
|| BIPODB.prefix(ref_name(_zz_dok),_zz_dok,_p_ref)
|| BIPODB.prefix(ref_name(_zz_dok),_zz_dok)
?};
{? _zw
|| _ret:=BIPODB.size()
|? BIPODB.first()
|| {!
   |? _ret+=BIPODB.STATUS<>'W';
      BIPODB.next()
   !}
?};
BIPODB.cntx_pop();
_ret


\bipodb_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Okno - przed" dla okien wertowania tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
P.prefix();
OSOBA.cntx_psh();
OSOBA.prefix();
UD_SKL.cntx_psh();
UD_SKL.prefix();
STN.cntx_psh();
STN.prefix();
CP.cntx_psh();
CP.prefix();
F_ZATR.cntx_psh();
F_ZATR.prefix();
~~


\bipodb_ao
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Okno - po" dla okien wertowania tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
F_ZATR.cntx_pop();
CP.cntx_pop();
STN.cntx_pop();
UD_SKL.cntx_pop();
OSOBA.cntx_pop();
P.cntx_pop();
~~


\bipodb_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Rekord - przed" w oknach wertowania tabeli BIPODB.
::       Okna tabeli BIPODB nie są oknami "samodzielnymi" - zawsze są elementami okna grupowego. Zakładamy, że
::       "właścicielem" okna grupowego jest tabela typu nagłówkowego, w którym występuje pole AKT.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| {? params_get().cfg.upr
   || _NAG:=cur_tab(0,1);
      _ws:=cur_win(1,1);
      _ag:=':';
::    Obsługiwane akcje i ich wyróżniki:
::       Usuń [U]
::       Wyklucz [L]
::       Uwzględnij [G]
::       Odśwież [W:W]
      {? BIPODB.sel_size()=0
      || {? BIPODB.STATUS<>'A'
         || _ag:='L'+_ag
         ?};
         {? BIPODB.STATUS<>'R'
         || _ag:='U'+_ag
         ?};
         {? BIPODB.STATUS<>'W'
         || _ag:='G'+_ag
         ?}
      ?};
      _akt:={? _NAG=BIPULP
            || exec('bipulp_status_kod','portal_bip')<>'EDYCJA'
            || _NAG.AKT='T'
            ?};
      {? _akt
      || _ag:='W'+_ag+'W'
      ?};
      {? _NAG=BIPULP
      || _p_ref:=params_get().cfg.OCP;
         _kat_ok:=exec('bipkat_ok','portal_bip',BIPULP.BIPKAT,_p_ref);
::       jeżeli nie mamy uprawnień do kategorii ogłoszeń / ulepszeń to wyłączamy wszystkie akcje
         {? ~_kat_ok || _ag:='DULGW'+_ag+'DW' ?}
      ?};
      {? BIPODB.POW_MAIL<>'T'
      || _ag:='I'+_ag+'I'
      ?};
      BIPODB.actions_grayed(_ws,_ag)
   ?}
?};
POLA_GRP.TXT_1:=
   {? BIPODB.STATUS='A' || 'Automatyczny'
   |? BIPODB.STATUS='R' || 'Ręczny'
   |? BIPODB.STATUS='W' || 'Wykluczony'
   |? BIPODB.STATUS='O' || 'Organizator'
   || ''
   ?};
~~


\bipodb_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła do aktualizacji pól odbiorców na podstawie danych w nagłówku. Zakłada się, że rekord nagłówka jest
::       wczytany do bufora.
::   WE: _a [STRING] - Akronim tabeli nagłówkowej, na podstawie której uzupełnione zostaną pola tabeli BIPODB.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| _NAG:=($_a)();
   {? _NAG=BIPNAG | _NAG=BNFTT | _NAG=BIPULP
   || BIPODB.BIPKAT:=_NAG.BIPKAT;
      {? _NAG=BIPNAG | _NAG=BNFTT
      || BIPODB.AKT:=_NAG.AKT
      || BIPODB.AKT:={? exec('bipulp_status_kod','portal_bip')<>'EDYCJA' || 'T' || 'N' ?}
      ?};
      {? _NAG=BIPNAG | _NAG=BIPULP
      || BIPODB.TYTUL:=_NAG.TYTUL;
         BIPODB.DT1:=_NAG.DT1;
         BIPODB.GD1:=_NAG.GD1;
         BIPODB.DT2:=_NAG.DT2;
         BIPODB.GD2:=_NAG.GD2
      || BIPODB.DT1:=_NAG.OD;
         BIPODB.DT2:=_NAG.DO
      ?}
   ?}
?};

~~


\bipodb_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Aktualizacja listy odbiorców na podstawie kryteriów związanych z nagłówkiem.
::   WE:  _a  [ZZ_DOK] - Wskazanie rekordu właściciela.
::       [_b] [NUMBER] - Tryb wsadowy (bez komunikatów / paska postępu) [0*/1].
::   WY: Wynik operacji: 0/1.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) & _a<>null() & ref_tab(_a)=ZZ_DOK
|| _zz_dok:=_a
|| return(0)
?};
_batch:=var_pres('_b')=type_of(0) & _b;
_show:=~_batch;

_zz_typ:=exec('typ_find','phr_dane','P','ODB');
{? _zz_typ=null()
|| return(0)
?};

_ds:=do_state();
{? _ds=0
|| do()
|? _ds=2
|| return(0)
?};

_klasa:=exec('FindAndGet','#table',ZZ_DOK,_zz_dok,,"KLASA",'');
_NAG:=($_klasa)();

_NAG.cntx_psh();
_NAG.index('ZZ_DOK');
_NAG.prefix(ref_name(_zz_dok),_zz_dok);
{? _NAG.first()
|| BIPKAT.cntx_psh();
   BIPKAT.prefix();
   _funkc:=_NAG.BIPKAT().FUNKC;
   BIPKAT.cntx_pop();

   _dbk:=exec('dbk','portal_bip',_NAG);

   BIPODB.cntx_psh();
   BIPODB.index('LINK');
   BIPODB.prefix(_NAG.NP_DOK,_NAG.ZZ_DOK);

   F_ZATR.cntx_psh();
   F_ZATR.prefix();
   P.cntx_psh();
   P.index('PRACONAZ');
   P.prefix(exec('firma','ustawienia'));

   _prg:=obj_new('ts','step','size','proc','msg','run','stop','txt1','txt2');
   _prg.txt1:='Proszę czekać'@;
   _prg.txt2:='Przetwarzanie danych'@;
   {? _show
   || _prg.ts:=time();
      _prg.step:=0;
      _prg.size:=BIPODB.size()+P.size();
      _prg.proc:=-1;
      _prg.msg:=
         {? _funkc='WDRZ'
         || 'Ustalanie listy uczestników na podstawie zdefiniowanych kryteriów.'@
         |? _funkc='BNFT'
         || 'Ustalanie listy potencjalnych beneficjentów na podstawie zdefiniowanych kryteriów.'@
         || 'Ustalanie listy odbiorców na podstawie zdefiniowanych kryteriów.'@
         ?};
      _prg.run:="
         .step+=1;
         _proc:=(100*.step/.size)$0;
         {? .proc<>_proc
         || .proc:=_proc;
            progress(.proc,
               .msg+'\n'+
               '%1 [%2%%] ...' [.txt1,form(.proc$0,3,0,'9.')],
               .txt2
            )
         ?}
      ";
      _prg.stop:="prgs_clr()"
   || _prg.run:=_prg.stop:=""
   ?};

:: Zakładamy, że jedynym kierunkiem zmiany formy współpracy, jest kierunek DOCELOWA='N' -> DOCELOWA='T'. Tak więc,
:: jeżeli współpracownik znajduje się wśród odbiorców / uczestników (Etap I) to na pewno ma już docelową formę
:: współpracy (i nie sprawdzamy tego).
:: Inaczej sprawa wygląda przy dodawaniu zapisów (Etpa II) - tutaj weryfikacja formy współpracy jest niezbędna.

:: Etap I - weryfikacja istniejących zapisów. Jeżeli pracownik nadal spełnia kryteria uczestnictwa, to
:: (bez względu na BIPODB.STATUS) aktualizujemy odpowiednie pola. Jeżeli już nie spełnia, to dla BIPODB.STATUS='A'
:: usuwamy odbiorcę.
   {? BIPODB.first()
   || {!
      |? _prg.run();
         {? BIPODB.STATUS='W'
::          Jeżeli operator wykluczył zapis, to nic z nim nie robimy.
         || BIPODB.next()
         || BIPODB.P();
            {? BIPODB.STATUS='R' | BIPODB.STATUS='O' | exec('test_kryt','phr_dane',_NAG.ZZ_DOK,_zz_typ,0,_dbk,P)>0
::             Jeżeli został utworzony ręcznie lub dotyczy Organizatora lub spełnia kryteria, to aktualizujemy wartości
::             pól (NIE zmieniamy wartości pola BIPODB.STATUS).
            || exec('bipodb_set','portal_bip',_klasa);
               BIPODB.put();
               BIPODB.next()
            |? BIPODB.STATUS='A'
::             Nie spełnia kryterium, a został utworzony Automatycznie - możemy usunąć.
            || BIPODB.del(,1)=2
            ?}
         ?}
      !}
   ?};

:: Etap II - dodajmy nowe zapisy.
:: Powyżej zagwarantowaliśmy sobie, że istniejące zapisy 'A', 'R' i 'O' zostały zaktualizowane.

   _loop:=P.first();
   {!
   |? _loop
   |! _prg.run();
      {? P.F_ZATR().DOCELOWA='T' &
         ~BIPODB.find_key(P.ref()) & exec('test_kryt','phr_dane',_NAG.ZZ_DOK,_zz_typ,0,_dbk,P)>0
      || BIPODB.blank();
         BIPODB.ZZ_LINK:=_NAG.ZZ_DOK;
         BIPODB.P:=P.ref();
         exec('bipodb_set','portal_bip',_klasa);
         BIPODB.add()
      ?};
      _loop:=P.next()
   !};

   _prg.stop();

   P.cntx_pop();
   F_ZATR.cntx_pop();

   BIPODB.cntx_pop()
?};
_NAG.cntx_pop();

{? _ds=0
|| end()
|| do_state()=1
?}


\p2bipodb_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Aktualizacja odbiorców informacji portalowych dla wskazanego pracownika.
::   WE: [_a] [REF] - Ref, SQL-ref lub uidref rekordu pracownik [domyślnie: P.uidref()].
::   WY: Wynik operacji: 0/1.
::----------------------------------------------------------------------------------------------------------------------
_vp:=var_pres('_a');
{? _vp=-1
|| _ref:=P.uidref()
|? (_vp=type_of('') & (+_a=16 | +_a=48)) | (_vp=type_of(null()) & _a<>null())
|| _ref:=_a
|| return(0)
?};

_zz_typ:=exec('typ_find','phr_dane','P','ODB');
{? _zz_typ=null()
|| return(0)
?};

_ds:=do_state();
{? _ds=0
|| do()
|? _ds=2
|| return(0)
?};

F_ZATR.cntx_psh();
F_ZATR.prefix();
P.cntx_psh();
P.index('F_ZATR');
P.prefix();
{? P.seek(_ref) & P.F_ZATR().DOCELOWA='T'
|| _naga:=spli_str(1-
      ',BIPNAG|KAT'
      ',BNFTT|AKRONIM'
      ,','
   );
:: Tablica _naga zawiera elementy (pary) (tabela,indeks). Indeks musi na pierwszym polu zawierać relacje do FIRMA.
   {! _lpn:=1 .. obj_len(_naga)
   |! _nag1:=spli_str(_naga[_lpn],'|');
      _NAG:=($_nag1[1])();
      _NAG.cntx_psh();
      _NAG.index(_nag1[2]);
      _NAG.prefix(P.FIRMA);
      {? _NAG.first()
      || BIPODB.cntx_psh();
         BIPODB.index('LINK');
         {!
         |? _dbk:=exec('dbk','portal_bip',_NAG);
            _kryt:=exec('test_kryt','phr_dane',_NAG.ZZ_DOK,_zz_typ,0,_dbk,P)>0;
            BIPODB.prefix(_NAG.NP_DOK,_NAG.ZZ_DOK,P.ref());
            _odb:=BIPODB.first();
            {? ~_kryt & _odb & BIPODB.STATUS='A'
::             Pracownik nie spełnia kryteriów uczestnictwa, a ma zapis 'A' - możemy go usunąć.
            || BIPODB.del()
            |? _kryt & ~_odb
::             Pracownik spełnia kryteria uczestnictwa, a nie ma zapisu - tworzymy go.
            || BIPODB.blank();
               BIPODB.ZZ_LINK:=_NAG.ZZ_DOK;
               BIPODB.P:=P.ref();
               exec('bipodb_set','portal_bip',_nag1[1]);
               BIPODB.add()
            ?};
            _NAG.next()
         !};
         BIPODB.cntx_pop()
      ?};
      _NAG.cntx_pop();
      obj_del(_NAG);
      obj_del(_nag1)
   !}
?};
P.cntx_pop();
F_ZATR.cntx_pop();

{? _ds=0
|| end()
|| do_state()=1
?}


\bipodb_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Dołącz - przed" w oknie WER tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BIPODB.cntx_psh();
BIPODB.index('LINK');
BIPODB.prefix();
BIPODB.blank();
BIPODB.prefix(ref_name(BIPODB.ZZ_LINK),BIPODB.ZZ_LINK);

_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='POR';
_args.SQL_WHERE:='"P".REFERENCE not in '
   '(select BIPODB.P from BIPODB where BIPODB.NP_DOK=\'%1\' and BIPODB.ZZ_LINK=\'%2\')'
   [ref_name(BIPODB.ZZ_LINK),$BIPODB.ZZ_LINK];
_args.GRP_IDENT:='por_wybierz';
_args.GRP_MODE:='html_maximized';
:: Pokaż wszystkich współpracowników - bez względu na aktualnie ustawioną w parametrach formę współpracy.
_args.F_ZATR:='*T';
_ret:=exec('wybierz','pracownik',_args);
{? _ret.STATUS=''
|| _klasa:=exec('FindAndGet','#table',ZZ_DOK,BIPODB.ZZ_LINK,,"KLASA",'');
   P.cntx_psh();
   P.prefix();
   _P:=_ret.P;
   _loop:=_P.first();
   {!
   |? _loop
   |! {? P.seek(_P.UID)
      || {? ~BIPODB.find_key(P.ref())
         || BIPODB.blank();
            BIPODB.P:=P.ref();
            BIPODB.STATUS:='R';
            exec('bipodb_set','portal_bip',_klasa);
            BIPODB.add()
         ?}
      ?};
      _loop:=_P.next()
   !};
   P.cntx_pop()
?};

BIPODB.cntx_pop();
~~


\bipodb_usun_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Usuń - grupa przed" w oknach wertowania tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_txt:=params_get().cfg.bipodb_usun;
_ile:=BIPODB.sel_size();
{? FUN.ask(
      {? _ile=1 || _txt.ask1 || _txt.askn ?}+
      '\n'+'(operacja dotyczyć będzie wyłącznie zapisów utworzonych ręcznie)'@
   )
|| sel_nchk();
   KOMM.init(,,_txt.title)
?}


\bipodb_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Usuń - przed" w oknach wertowania tabeli BIPODB.
::       Funkcja usuwa rekord 'R'.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=params_get().cfg;
_txt:=_cfg.bipodb_usun;
_gr:=BIPODB.sel_size();
{? BIPODB.STATUS='R'
|| {? _gr | FUN.ask(_txt.askb)
   || BIPODB.del()
   ?}
|? _gr
|| KOMM.set_root(_txt.root_r);
   KOMM.add(_cfg.bipodb_main.id());
   KOMM.sect_end()
|| melody()
?}


\bipodb_usun_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Usuń - grupa po" w oknach wertowania tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KOMM.select()


\bipodb_wyklucz_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Wyklucz - grupa przed" w oknach wertowania tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_txt:=params_get().cfg.bipodb_wyklucz;
_ile:=BIPODB.sel_size();
{? FUN.ask(
      {? _ile=1 || _txt.ask1 || _txt.askn ?}+'\n'+
      '(operacja dotyczyć będzie wyłącznie zapisów utworzonych automatycznie)'@
   )
|| sel_nchk();
   KOMM.init(,,_txt.title)
?}


\bipodb_wyklucz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Wyklucz - przed" w oknach wertowania tabeli BIPODB. ()
::       Funkcja zmienia status rekordu z 'A' na 'W'.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=params_get().cfg;
_txt:=_cfg.bipodb_wyklucz;
_gr:=BIPODB.sel_size();

{? BIPODB.STATUS='A'
|| {? _gr | FUN.ask(_txt.askb)
   || BIPODB.STATUS:='W';
      BIPODB.put()
   ?}
|? _gr
|| KOMM.set_root(_txt.root_a);
   KOMM.add(_cfg.bipodb_main.id());
   KOMM.sect_end()
|| melody()
?}


\bipodb_wyklucz_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Wyklucz - grupa po" w oknach wertowania tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KOMM.select()


\bipodb_uwzglednij_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Uwzględnij - grupa przed" w oknach wertowania tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_txt:=params_get().cfg.bipodb_uwzglednij;
_ile:=BIPODB.sel_size();
{? FUN.ask({? _ile=1 || _txt.ask1 || _txt.askn ?}+'\n'+'(operacja dotyczyć będzie wyłącznie zapisów wykluczonych)'@)
|| sel_nchk();
   KOMM.init(,,_txt.title);
   1
?}


\bipodb_uwzglednij_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Uwzględnij - przed" w oknach wertowania tabeli BIPODB.
::       Okna tabeli BIPODB nie są oknami "samodzielnymi" - zawsze są elementami okna grupowego. Zakładamy, że
::       "właścicielem" okna grupowego jest tabela typu nagłówkowego, w którym występuje pole ZZ_DOK.
::
::       Jeżeli spełnione są kryteria, to funkcja zmienia status rekordu z 'W' na 'A'.
::       W przeciwnym przypadku decyzję podejmuje operator:
::          * Rekord może pozostać przy statusie 'W'.
::          * Rekord może zostać usunięty.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=params_get().cfg;
_txt:=_cfg.bipodb_uwzglednij;
_gr:=BIPODB.sel_size();
{? BIPODB.STATUS='W'
|| {? _gr | FUN.ask(_txt.askb)
   || _zz_typ:=exec('typ_find','phr_dane','P','ODB');
      {? _zz_typ<>null()
      || _NAG:=cur_tab(0,1);
         _dbk:=exec('dbk','portal_bip',_NAG);
         {? exec('test_kryt','phr_dane',_NAG.ZZ_DOK,_zz_typ,0,_dbk,P)>0
         || BIPODB.STATUS:='A';
            BIPODB.put()
         || BIPODB.STATUS:='R';
            BIPODB.put();
            {? _gr
            || KOMM.set_root(_txt.root_r);
               KOMM.add(_cfg.bipodb_main.id());
               KOMM.sect_end()
            || FUN.info(_txt.a2r())
            ?}
         ?}
      ?}
   ?}
|? _gr
|| KOMM.set_root(_txt.root_w);
   KOMM.add(_cfg.bipodb_main.id());
   KOMM.sect_end()
|| melody()
?}


\bipodb_uwzglednij_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Uwzględnij - grupa po" w oknach wertowania tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KOMM.select()


\bipodb_odswiez_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Odśwież - przed" w oknach wertowania tabeli BIPODB.
::       Okna tabeli BIPODB nie są oknami "samodzielnymi" - zawsze są elementami okna grupowego. Zakładamy, że
::       "właścicielem" okna grupowego jest tabela typu nagłówkowego, w którym występują pola: AKT i ZZ_DOK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_NAG:=cur_tab(0,1);
_akt:=
   {? _NAG=BIPULP
   || exec('bipulp_status_kod','portal_bip')<>'EDYCJA'
   || _NAG.AKT='T'
   ?};
{? ~_akt
|| exec('bipodb_update','portal_bip',_NAG.ZZ_DOK)
?};
~~


\bipodn_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BIPODN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bipodn_chk','portal_bip',0) & exec('bipodn_modb','portal_bip')


\bipodn_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Wyzwalacz "Dołącz - po" dla tabeli BIPODN.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

_klasa:=exec('FindAndGet','#table',ZZ_DOK,BIPODN.ZZ_LINK,,"KLASA",'');

{? _klasa='BIPNAG'
|| _NAG:=($_klasa)();
   _NAG.cntx_psh();
   _NAG.index('ZZ_DOK');
   _NAG.prefix(BIPODN.NP_DOK,BIPODN.ZZ_LINK);
   {? _NAG.first()
   || _NAG.put(,1)
   ?};
   _NAG.cntx_pop()
?};
~~


\bipodn_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli BIPODN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bipodn_chk','portal_bip',1) & exec('bipodn_modb','portal_bip')


\bipodn_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli BIPODN.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

_klasa:=exec('FindAndGet','#table',ZZ_DOK,BIPODN.ZZ_LINK,,"KLASA",'');

{? _klasa='BIPNAG'
|| _NAG:=($_klasa)();
   _NAG.cntx_psh();
   _NAG.index('ZZ_DOK');
   _NAG.prefix(BIPODN.NP_DOK,BIPODN.ZZ_LINK);
   {? _NAG.first()
   || _NAG.put(,1)
   ?};
   _NAG.cntx_pop()
?};

~~


\bipodn_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Wyzwalacz "Usuń - po" dla tabeli BIPODN.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

_klasa:=exec('FindAndGet','#table',ZZ_DOK,bfld('ZZ_LINK'),,"KLASA",'');

{? _klasa='BIPNAG'
|| _NAG:=($_klasa)();
   _NAG.cntx_psh();
   _NAG.index('ZZ_DOK');
   _NAG.prefix(bfld('NP_DOK'),bfld('ZZ_LINK'));
   {? _NAG.first()
   || _NAG.put(,1)
   ?};
   _NAG.cntx_pop()
?};

~~


\bipodn_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli BIPODN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? BIPODN.ZZ_LINK
|| BIPODN.NP_DOK:=ref_name(BIPODN.ZZ_LINK)
?};
1


\bipodn_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli BIPODB.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(BIPODN,
   $("_a.table(_b,"+$_put+",,'ZZ_LINK','ETYKIETA','ADRES')")
)


\bipodn_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Rekord - po" w oknie WER tabeli BIPODN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bipodn_chk','portal_bip',-menu_txt()='popraw')


\bipodn_otworz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Otwórz - przed" w oknie WER tabeli BIPODN
::   WE:
::   WY:
:: ~OST: INWEBBROWSER
::----------------------------------------------------------------------------------------------------------------------
_url:=BIPODN.memo_txt(,1,'ADRES');
{? _url*'<iframe'
|| _html:=
   '<!doctype html>'
   '<html lang="pl">'
   '<head>'
      '<meta charset="UTF-8">'
      '<title>%1</title>'
   '</head>'
   '<body>%2</body>'
   '</html>'
   [BIPODN.ETYKIETA,_url];

   BIPODN.cntx_psh();
   _win_acr:=BIPODN.mk_ctr('Przeglądarka','ctrl_webbrowser');
   BIPODN.win_ctr(_win_acr);
   {? exec('interm','#system')
   || BIPODN.win_cctr(_win_acr,'ctr_id','@webframe');
      BIPODN.control(,,
         $("ctr_set(,'ctr_id','setHTMLContent','"+gsub(_html,'\'','\'\'')+"');
            ~~
         ")
      )
   || BIPODN.win_cctr(_win_acr,'ctr_id','@webbrowser2');
      BIPODN.control(,,
         $("ctr_set(,'ctr_id','closeAfterEscape','true');
            ctr_set(,'ctr_id','setHTMLContent','"+gsub(_html,'\'','\'\'')+"');
            ~~
         ")
      )
   ?};
   BIPODN.cntx_pop()
|| {? ~(_url*'http')
   || _url:='http:////'+_url
   ?};
   cli_open_link(_url)
?}


\bippytn_exist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Sprawdza czy istnieje rekord tabeli BIPPYTN dla podanych parametrów
::   WE: [_a] [REFERENCE] - wskazanie na pracownika
::       [_b] [REFERENCE] - wskazanie na kategorię
::       [_c] [STRING]    - tytuł
::       [_d] [REFERENCE] - wskazanie na właściciela
::       [_e] [DATE]      - data otwarcia wątku (domyślnie - bieżąca data)
::       [_f] [TIME]      - godzina otwarcia wątku (domyślnie - bieżąca godzina)
::       [_g] [DATE]      - data zamknięcia wątku
::       [_h] [TIME]      - godzina zamknięcia wątku
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
  _p_ref:={? var_pres('_a')=type_of(null) || _a || null() ?};
_kat_ref:={? var_pres('_b')=type_of(null) || _b || null() ?};
  _title:={? var_pres('_c')=type_of('')   || _c || ''     ?};
_zz_link:={? var_pres('_d')=type_of(null) || _d || null() ?};
 _o_date:={? var_pres('_e')=type_of(#0)   || _e || #0     ?};
 _o_time:={? var_pres('_f')=type_of(*0)   || _f || *0     ?};
 _c_date:={? var_pres('_g')=type_of(#0)   || _g || #0     ?};
 _c_time:={? var_pres('_h')=type_of(*0)   || _h || *0     ?};

BIPPYTN.cntx_psh();
BIPPYTN.index('BIPKAT');
BIPPYTN.prefix();
BIPPYTN.blank(1);
BIPPYTN.P:=_p_ref;
BIPPYTN.BIPKAT:=_kat_ref;
BIPPYTN.ZZ_LINK:=_zz_link;
BIPPYTN.DTO:=_o_date;
BIPPYTN.GDO:=_o_time;
BIPPYTN.DTZ:=_c_date;
BIPPYTN.GDZ:=_c_time;
BIPPYTN.TYTUL:=_title;
{? BIPPYTN.find_rec()
|| _result:=BIPPYTN.ref()
?};
BIPPYTN.cntx_pop();
_result


\bippytn_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Dodaje rekord tabeli BIPPYTN
::   WE: _a  [REFERENCE] - wskazanie na pracownika
::       _b  [REFERENCE] - wskazanie na kategorię
::      [_c] [STRING]    - tytuł
::      [_d] [REFERENCE] - wskazanie na właściciela
::      [_e] [DATE]      - data otwarcia wątku (domyślnie - bieżąca data)
::      [_f] [TIME]      - godzina otwarcia wątku (domyślnie - bieżąca godzina)
::      [_g] [DATE]      - data zamknięcia wątku
::      [_h] [TIME]      - godzina zamknięcia wątku
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
  _p_ref:={? var_pres('_a')=type_of(null) || _a || null() ?};
_kat_ref:={? var_pres('_b')=type_of(null) || _b || null() ?};
  _title:={? var_pres('_c')=type_of('')   || _c || ''     ?};
_zz_link:={? var_pres('_d')=type_of(null) || _d || null() ?};
 _o_date:={? var_pres('_e')=type_of(#0)   || _e || date() ?};
 _o_time:={? var_pres('_f')=type_of(*0)   || _f || time() ?};
 _c_date:={? var_pres('_g')=type_of(#0)   || _g || #0     ?};
 _c_time:={? var_pres('_h')=type_of(*0)   || _h || *0     ?};

BIPPYTN.cntx_psh();
BIPPYTN.index('BIPKAT');
BIPPYTN.prefix();
BIPPYTN.blank();
BIPPYTN.P:=_p_ref;
BIPPYTN.BIPKAT:=_kat_ref;
BIPPYTN.ZZ_LINK:=_zz_link;
BIPPYTN.DTO:=_o_date;
BIPPYTN.GDO:=_o_time;
BIPPYTN.DTZ:=_c_date;
BIPPYTN.GDZ:=_c_time;
BIPPYTN.TYTUL:=_title;
{? BIPPYTN.add()
|| _result:=BIPPYTN.ref()
?};
BIPPYTN.cntx_pop();
_result


\bippytn_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BIPPYTN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bippytn_chk','portal_bip',0) &
exec('bippytn_modb','portal_bip') &
exec('bip_firma_modb','portal_bip',BIPPYTN)


\bippytn_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli BIPPYTN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('bippytn_chk','portal_bip',1) & exec('bippytn_modb','portal_bip') & exec('bip_firma_modb','portal_bip',BIPPYTN)
|| exec('bippytn_update_dtgd','portal_bip');
   1
?}


\bippytn_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Usuń - przed" dla tabeli BIPPYTN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('add','#bulk',BIPPYTN,'del',$BIPPYTN.ref())
|| exec('del_ndx','#table',BIPPYTP,'BIPPYTN',BIPPYTN.ref()) &
   exec('del','#bulk',BIPPYTN,'del',$BIPPYTN.ref())
?}


\bippytn_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli BIPPYTN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? BIPPYTN.ZZ_LINK
|| BIPPYTN.NP_DOK:=ref_name(BIPPYTN.ZZ_LINK)
?};
{? BIPPYTN.P
|| P.cntx_psh();
   P.prefix();
   BIPPYTN.P();
   BIPPYTN.OSOBA:=P.OSOBA;
   BIPPYTN.WYDZIAL:=P.WYDZIAL;
   BIPPYTN.ST:=P.ST;
   BIPPYTN.CP:=P.CP;
   BIPPYTN.F_ZATR:=P.F_ZATR;
   P.cntx_pop()
?};
1


\bippytn_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli BIPPYTN.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(BIPPYTN,
   $("_a.table(_b,"+$_put+",,'P','BIPKAT','TYTUL','DTO','GDO','WO')"),
   "_a.in_set(_b,'WO',,'T','N')"

)


\bippytn_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Wertowanie pytań i odpowiedzi z portalu.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ref:=exec('selPracFromUser','portal_bip','KDR');

{? _ref.BIPPYTO=null() | _ref.P=null()
|| return()
?};

_P:=exec('dostepne_p','schemat','POR','*','*');

AreaTitle.setTitle();
params_set('ODP',_ref.P);
BIPPYTN.cntx_psh();
BIPPYTN.prefix();
BIPPYTN.f_set(
   'WO^,DTOP,GDOP,BIPKAT(FUNKC),BIPKAT(KOD):Wg czasu oczekiwania na odpowiedź',,
   '"BIPPYTN".BIPKAT in (select BIPPYTK.BIPKAT from BIPPYTK where BIPPYTK.BIPPYTO=:_a) and '
    '"BIPPYTN".P in (select :_b.REF from :_b)',
   _ref.BIPPYTO,_P
);
BIPPYTN.win_sel(exec('bippytn_wnds','portal_bip'));
BIPPYTN.win_edit('RED');
BIPPYTN.win_patt('SZUK');
BIPPYTN.select();
BIPPYTN.f_clear();
BIPPYTN.cntx_pop();
~~


\bippytn_wnds
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła odpowiedzialna za budowę okna grupowego dla obsługi odpowiedzi na pytaia z portalu.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BIPPYTP.win_fml('WER',,'OSOBA','NAZWISKO','ICON_BEFORE',
   "{? BIPPYTP.P=BIPPYTP.BIPPYTN().P || 'xwin16.png:15' || 'xwin16.png:1' ?}"
);
BIPPYTP.win_fml('WER',,'TRESC',,'ICON_BEFORE',"{? BIPPYTP.ZAL || 'xwin16.png:119' || 'xwin16.png:110' ?}");

_grp:=BIPPYTN.grp_make('Pytania z portalu'@,
   $("BIPPYTP.cntx_psh();
      BIPPYTP.index('BIPPYTN');
      BIPPYTP.win_edit('RED');
      BIPPYTK.cntx_psh();
      BIPPYTK.index('VIEW');
      BIPPYTK.win_sel('WERO');
      BIPPYTK.hdr_sel('"+'Osoby uprawnione do obsługi'@+"');
      BIPPYTK.actions('WERO','DU:D',,1);
      UD_TYP.cntx_psh();
      UD_TYP.prefix();
      exec('szukaj_ud_typ','schemat','PODZORG');
      ~~
   "),
   '#bippytn',,,
   "  {? ~exec('exit','zws')
      || return(0)
      ?};
      BIPPYTK.actions('WERO',':');
      BIPPYTK.cntx_pop();
      UD_TYP.cntx_pop();
      BIPPYTP.cntx_pop();
      1
   ",,
   'maximized'
);

_mode:='maximized_with_title';

BIPPYTN.grp_sel(_grp,,'WER',,
   "  params_set(params_get());
      grp_disp(BIPPYTP,'WER');
      grp_disp(BIPPYTK,'WERO')
   ",,,,,,,,
   _mode
);

BIPPYTN.grp_splt(_grp,,'horizontal','poz','15,50%');

BIPPYTN.grp_sel(_grp,BIPPYTP,'WER',,
   "params_set(params_get()); grp_disp(BIPPYTN,'WER')",,,,
   "  BIPPYTP.prefix(BIPPYTN.ref());
      BIPPYTP.last();
      win_set('cur_row_pos=-1')
   ",,,,
   _mode
);

BIPPYTN.grp_splt(_grp,,'horizontal','odp','29,66%');

BIPPYTN.grp_sel(_grp,BIPPYTK,'WERO',,,,,,
   "BIPPYTK.prefix(BIPPYTN.BIPKAT)",,,,
   _mode
);


_grp


\bippytn_update_dtgd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Aktualizacja pól "Data i czas ostatniego pytania / ostatniej odpowiedzi".
::   WE: [_a] [REF] - Ref, SQL-ref lub uidref rekordu tabeli BIPPYTN. Jeżeli parametr nie został podany, to znaczy,
::                    że operacja jest przeprowadzana na BIEŻĄCYM rekordzie. Formuła uaktualni odpowiednie pola, ale
::                    nie zapisze rekordu. Jeżeli parametr został podany, to formuła i uaktualni odpowiednie pola
::                    i zapisze zmiany na dysku.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_vp:=var_pres('_a');
_ref:={? (_vp=type_of('') & (+_a=16 | +_a=48)) | (_vp=type_of(null()) & _a<>null()) || _a || null() ?};

{? _ref<>null()
|| BIPPYTN.cntx_psh();
   BIPPYTN.prefix();
   _ok:=BIPPYTN.seek(_ref)
|| _ok:=1
?};
{? _ok
|| _DT:="
      _ret:=obj_new('jest','dt','gd','set');
      _ret.jest:=0;
      _ret.dt:=date(0,0,0);
      _ret.gd:=time(0,0,0);
      _ret.set:="".jest:=1; .dt:=BIPPYTP.DT; .gd:=BIPPYTP.GD"";
      _ret
   ";
   _oo:=_DT();
   _op:=_DT();

   BIPPYTP.cntx_psh();
   BIPPYTP.index('BIPPYTN');
   BIPPYTP.prefix(BIPPYTN.ref());
   _loop:=BIPPYTP.last();
   {!
   |? _loop
   |! {? BIPPYTP.P=BIPPYTN.P
::       Pytanie.
      || {? ~_op.jest
         || _op.set()
         ?}
::       Odpowiedź lub znacznik odpowiedzi telefonicznej (na pytaniu).
      || {? ~_oo.jest
         || _oo.set()
         ?}
      ?};
      _loop:=~(_op.jest & _oo.jest) & BIPPYTP.prev()
   !};
   BIPPYTP.cntx_pop();

   _zmiana:=0;
   {? ~(BIPPYTN.DTOO=_oo.dt & BIPPYTN.GDOO=_oo.gd)
   || BIPPYTN.DTOO:=_oo.dt;
      BIPPYTN.GDOO:=_oo.gd;
      _zmiana+=1
   ?};
   {? ~(BIPPYTN.DTOP=_op.dt & BIPPYTN.GDOP=_op.gd)
   || BIPPYTN.DTOP:=_op.dt;
      BIPPYTN.GDOP:=_op.gd;
      _zmiana+=1
   ?}
|| _zmiana:=0
?};
{? _ref<>null()
|| {? _zmiana
   || BIPPYTN.WO:=
         {? exec('CompareDateTime','#datetime',BIPPYTN.DTOO,BIPPYTN.GDOO,BIPPYTN.DTOP,BIPPYTN.GDOP)=2
         || 'T'
         || 'N'
         ?};
      BIPPYTN.put()
   ?};
   BIPPYTN.cntx_pop()
?};

~~


\bippytn_akcje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Formuła dla bieżącego rekordu tabeli BIPPYTN określa dostępność akcji w oknie wertowania.
::   WE:
::   WY: Tablica z elementami nazwanymi.
::----------------------------------------------------------------------------------------------------------------------
_akcje:=obj_new('popraw','usun','szczegoly');
:: Wstępnie - wszystkie akcje są niedostępne. Elementy tablicy wskazują na
{! _lp:=1 .. obj_len(_akcje)
|! _akcje[_lp]:=0
!};

{? BIPPYTN.get()
|| {? BIPPYTN.DTOP=date(0,0,0) & BIPPYTN.GDOP=time(0,0,0)
   || _akcje.popraw:=_akcje.usun:=1
   ?};
   {? BIPPYTN.ZZ_LINK
   || _akcje.szczegoly:=1
   ?}
?};

_akcje


\bippytn_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie WER tabeli BIPPYTN.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _akcje:=exec('bippytn_akcje','portal_bip');
   _ag:='';
   {? ~_akcje.popraw
   || _ag+='P'
   ?};
   {? ~_akcje.usun
   || _ag+='U'
   ?};
   {? ~_akcje.szczegoly
   || _ag+='E'
   ?};
   BIPPYTN.actions_grayed('WER',_ag)
?};
POLA_GRP.TXT_1:=exec('_funkc','portal_bip','NAZWA',BIPPYTN.BIPKAT().FUNKC);
~~


\bippytn_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Obsługa akcji "Wyświetl - przed" w oknie WER tabeli BIPPYTN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BIPPYTN.cntx_psh();
BIPPYTN.win_edit('VIEW');
BIPPYTN.display();
BIPPYTN.cntx_pop()


\bippytn_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Obsługa akcji "Rekord - po" w oknie WER tabeli BIPPYTN. Akcja przeznaczona jedynie dla funkcjonalności
::       "Pytania do działu kadr" - pozwala na inicjowanie dyskusji przez dział kadr.
::   WE: [_a] [NUMBER] - Tryb pracy:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;

_ret:=exec('bippytn_chk','portal_bip');
{? (type_of(_ret)=type_of('') & _ret<>'') | (type_of(_ret)=type_of(0) & _ret=0)
|| return(_ret)
?};
{? _put
|| exec('bippytp_chk','portal_bip')
:: Przy dołączaniu rekordu zastosujemy uproszzczoną walidację (konkretnego pola), ponieważ inne wymagane pola (np.
:: BIPPYTP.BIPPYTN) nie mogą być jeszcze wypełnione.
|| __CHK.record(BIPPYTP,,'TRESC')
?}


\bippytn_edycja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Formuła odpowiedzialna za edycję rekordu tabeli BIPPYTN (dołączenie / poprawienie) dostępną jedynie dla
::       funkcjonalności "Pytania do działu kadr" - pozwala na inicjowanie dyskusji przez dział kadr.
::   WE: [_a] [NUMBER] - Tryb pracy:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;

_pkdr:=params_get().ODP;

:: Uwaga: poprawność tablicy _cfg nie jest nigdzie weryfikowana.
_cfg:=exec('_cfg','portal_bip','BIPNAG');
_cfg.funkc:='KDR';
_cfg.bipkat.wd:='SLO';
_cfg.bipkat.we:=exec('bipkat_we','portal_bip',_cfg.funkc,0);
_cfg.bipkat.wp:=exec('bipkat_we','portal_bip',_cfg.funkc,1);
_cfg.bipkat.SLO_hdr_sel:='Kategorie pytań do działu kadr'@;
_cfg.bipkat.RED_hdr_edit:='Kategoria pytań do działu kadr'@;

BIPKAT.cntx_psh();
BIPKAT.prefix();
BIPKAT.f_set('KOD',,'BIPKAT.FIRMA=:_a and BIPKAT.FUNKC=\':_b\'',exec('ref_firma','ustawienia'),_cfg.funkc);
BIPKAT.win_dict(_cfg.bipkat.wd);
BIPKAT.win_edit(_cfg.bipkat.we);
BIPPYTN.cntx_psh();
BIPPYTN.win_edit('RED');
BIPPYTP.cntx_psh();
{? _put
|| BIPPYTP.index('BIPPYTN');
   BIPPYTP.prefix(BIPPYTN.ref());
   _ok:=BIPPYTP.first() & BIPPYTP.memo_get(,'TRESC')
|| BIPPYTN.blank();
:: Przyjmijmy datę i czas otwarcia wątku na potrzeby formuły walidacyjnej.
   _dttm:=utc_get();
   BIPPYTN.DTO:=utc_date(_dttm);
   BIPPYTN.GDO:=utc_time(_dttm);

   BIPPYTP.prefix();
   BIPPYTP.blank();
   BIPPYTP.memo_set(,'TRESC');
   BIPPYTP.bl_file('ZAL',1);

   _ok:=1
?};

params_set('cfg',_cfg);
{? _ok & BIPPYTN.edit($("exec('bippytn_ae','portal_bip',"+$_put+")"))
|| _dttm:=utc_get();
:: Uaktualnijmy datę i czas otwarcia wątku.
   BIPPYTN.DTO:=utc_date(_dttm);
   BIPPYTN.GDO:=utc_time(_dttm);
   do();
   {? {? _put || BIPPYTN.put() || BIPPYTN.add() ?}
   || BIPPYTP.BIPPYTN:=BIPPYTN.ref();
      BIPPYTP.DT:=BIPPYTN.DTO;
      BIPPYTP.GD:=BIPPYTN.GDO;
      BIPPYTP.P:=_pkdr;
      {? _put || BIPPYTP.put() || BIPPYTP.add() ?};
      BIPPYTP.memo_put(,'TRESC');
      _file:=BIPPYTP.bl_file('ZAL');
      {? _file<>''
      || BIPPYTP.bl_put('ZAL',_file)
      ?}
   ?};
   {? end() & ~_put
   || BIPPYTN.f_add()
   ?}
?};
BIPPYTP.cntx_pop();
BIPPYTN.cntx_pop();
BIPKAT.f_clear();
BIPKAT.cntx_pop();
~~


\bippytn_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Obsługa akcji "Dołącz - przed" w oknie WER tabeli BIPPYTN. Akcja przeznaczona jedynie dla funkcjonalności
::       "Pytania do działu kadr" - pozwala na inicjowanie dyskusji przez dział kadr.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('bippytn_edycja','portal_bip',0)


\bippytn_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Obsługa akcji "Popraw - przed" w oknie WER tabeli BIPPYTN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('bippytn_akcje','portal_bip').popraw
|| params_exec('bippytn_edycja','portal_bip',1)
|| melody();
   return()
?}


\bippytn_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Obsługa akcji "Usuń - przed" w oknie WER tabeli BIPPYTN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('bippytn_akcje','portal_bip').usun
|| melody();
   return()
|? exec('del_ask','#table')
|| BIPPYTN.del()
?}


\bippytn_szczegoly_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Szczegóły - przed" w oknie WER tabeli BIPPYTN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('bippytn_akcje','portal_bip').szczegoly
|| melody();
   return()
?};

_klasa:=exec('FindAndGet','#table',ZZ_DOK,BIPPYTN.ZZ_LINK,,"KLASA",'');

{? _klasa='BIPNAG'
|| BIPKAT.cntx_psh();
   {? BIPPYTN.BIPKAT().FUNKC='BLTN'
   || BIPNAG.cntx_psh();
      BIPNAG.index('ZZ_DOK');
      BIPNAG.prefix(BIPPYTN.NP_DOK,BIPPYTN.ZZ_LINK);
      {? BIPNAG.first()
      || BIPNAG.win_edit('BLTNR');
         BIPNAG.display()
      ?};
      BIPNAG.cntx_pop()
   ?};
   BIPKAT.cntx_pop()
|? _klasa='BIPULP'
|| BIPKAT.cntx_psh();
   {? BIPPYTN.BIPKAT().FUNKC='ULP'
   || BIPULP.cntx_psh();
      BIPULP.index('ZZ_DOK');
      BIPULP.prefix(BIPPYTN.NP_DOK,BIPPYTN.ZZ_LINK);
      {? BIPULP.first()
      || BIPULP.win_edit('ULPR');
         BIPULP.display()
      ?};
      BIPULP.cntx_pop()
   ?};
   BIPKAT.cntx_pop()
?};

~~


\bippytp_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BIPPYTP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bippytp_chk','portal_bip',0) & exec('bippytp_modb','portal_bip')


\bippytp_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - po" dla tabeli BIPPYTP.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('bippytn_update_dtgd','portal_bip',BIPPYTP.BIPPYTN)
?};

BIPPYTN.cntx_psh();
BIPPYTN.prefix();
_klasa:=exec('FindAndGet','#table',ZZ_DOK,BIPPYTP.BIPPYTN().ZZ_LINK,,"KLASA",'');

{? _klasa='BIPULP'
|| _NAG:=($_klasa)();
   _NAG.cntx_psh();
   _NAG.index('ZZ_DOK');
   _NAG.prefix(BIPPYTN.NP_DOK,BIPPYTN.ZZ_LINK);
   {? _NAG.first()
   || {? _klasa='BIPULP'
::    Podczytanie pola SYS_MEMO w celu poprawnej walidacji wypełnienia pola BIPULP.OPIS:
      || _NAG.memo_get(,'OPIS')
      ?};
      _NAG.put(,1)
   ?};
   _NAG.cntx_pop()
?};
BIPPYTN.cntx_pop();

~~


\bippytp_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli BIPPYTP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bippytp_chk','portal_bip',1) & exec('bippytp_modb','portal_bip')


\bippytp_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli BIPPYTP.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('bippytn_update_dtgd','portal_bip',BIPPYTP.BIPPYTN)
?};

BIPPYTN.cntx_psh();
BIPPYTN.prefix();
_klasa:=exec('FindAndGet','#table',ZZ_DOK,BIPPYTP.BIPPYTN().ZZ_LINK,,"KLASA",'');

{? _klasa='BIPULP'
|| _NAG:=($_klasa)();
   _NAG.cntx_psh();
   _NAG.index('ZZ_DOK');
   _NAG.prefix(BIPPYTN.NP_DOK,BIPPYTN.ZZ_LINK);
   {? _NAG.first()
   || {? _klasa='BIPULP'
::    Podczytanie pola SYS_MEMO w celu poprawnej walidacji wypełnienia pola BIPULP.OPIS:
      || _NAG.memo_get(,'OPIS')
      ?};
      _NAG.put(,1)
   ?};
   _NAG.cntx_pop()
?};
BIPPYTN.cntx_pop();

~~


\bippytp_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Usuń - po" dla tabeli BIPPYTP.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| {? ~exec('get','#bulk',BIPPYTN,'del',$bfld('BIPPYTN'))
   || exec('bippytn_update_dtgd','portal_bip',bfld('BIPPYTN'))
   ?};
   _ulpzz:=null();
   BIPPYTN.cntx_psh();
   {? BIPPYTN.seek(bfld('BIPPYTN'),,1)
   || BIPULP.cntx_psh();
      BIPULP.index('ZZ_DOK');
      BIPULP.prefix(BIPPYTN.NP_DOK,BIPPYTN.ZZ_LINK);
      {? BIPULP.first()
      || _ulpzz:=BIPULP.ZZ_DOK
      ?};
      BIPULP.cntx_pop();
::    Sprawdzenie czy jest to usuwanie całgo BIPULP (wtedy poniższe zabiegi tracą sens):
      {? ~exec('get','#bulk',BIPULP,'del',$_ulpzz)
      || {? BIPPYTN.seek(bfld('BIPPYTN'),,1)
         || BIPKAT.cntx_psh();
            BIPKAT.prefix();
            exec('bippytn_del','portal_bip',BIPPYTN.ref(),3+BIPPYTN.BIPKAT().KOD);
            BIPKAT.cntx_pop();
            _klasa:=exec('FindAndGet','#table',ZZ_DOK,BIPPYTN.ZZ_LINK,,"KLASA",'');
            {? _klasa='BIPULP'
            || _NAG:=($_klasa)();
               _NAG.cntx_psh();
               _NAG.index('ZZ_DOK');
               _NAG.prefix(BIPPYTN.NP_DOK,BIPPYTN.ZZ_LINK);
               {? _NAG.first()
               || {? _klasa='BIPULP'
::                Podczytanie pola SYS_MEMO w celu poprawnej walidacji wypełnienia pola BIPULP.OPIS:
                  || _NAG.memo_get(,'OPIS')
                  ?};
                  _NAG.put(,1)
               ?};
               _NAG.cntx_pop()
            ?}
         ?}
      ?}
   ?};
   BIPPYTN.cntx_pop()
?};

~~


\bippytp_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli BIPPYTP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? BIPPYTP.P
|| P.cntx_psh();
   P.prefix();
   BIPPYTP.P();
   BIPPYTP.OSOBA:=P.OSOBA;
   P.cntx_pop()
?};
{? BIPPYTP.TEL='T'
|| BIPPYTP.ZAL:=null()
?};
1


\bippytp_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli BIPPYTP.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(BIPPYTP,
   $("_a.table(_b,"+$_put+",,'BIPPYTN','DT','GD','P','TEL','TRESC')"),
   "_a.in_set(_b,'TEL',,'T','N')"
)


\bippytp_tel_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Po redagowaniu pola BIPPYTP.TEL.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bippytp_efld_opt','portal_bip')


\bippytp_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła odpowiedzialna za dynamiczne ustawianie właściwości pól tabeli BIPPYTP.
::       Formuła wywoływana jest w dwóch kontekstach pracy:
::          - Po redagowaniu konkretnego pola, które determinuje właściwości wyświetlania innych pól.
::          - Przed wyświetleniem okna redagowania (przed właściwymi akcjami Dołącz, Popraw, Wyświetl), ustawia
::            właściwości wszystkich pól (wymagających tego).
::       Kontekst pracy jest określany na podstawie argumentu wywołania.
::   WE: [_a] [STRING] - Kontekst pracy:
::             '1' - Obsługa jednego pola [domyślnie].
::             '*' - Obsługa wszystkich pól.
::       [_b] [TABLE]  - Uchwyt tabeli, w oknie redagowania której znajdują sie pola. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęta bieżąca tabela.
::       [_c] [STRING] - Akronim okna, w którym mają być ustawione właściwości pól. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęte bieżące okno.
::       [_d] [STRING] - Akronim pola, którego wartość determinuje właściwości wyświetlania innych pól. Parametr ma
::             znaczenie wyłącznie dla _a='1'. [Domyślnie: bieżące pole].
::   WY: 0 - Błąd argumentów wywołania.
::       1 - Argumenty poprawne (właściwości ustawione).
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (_a='1' | _a='*') || _a || '1' ?};
{? var_pres('_b')=type_of(BIPPYTP)
|| _TAB:=_b
|? _tryb='1'
|| _TAB:=cur_tab(1,1)
|| return(0)
?};
{? var_pres('_c')=type_of('')
|| _we:=_c
|? _tryb='1'
|| _we:=cur_win(1,1)
|| return(0)
?};
{? var_pres('_d')=type_of('')
|| _fld:=_d
|? _tryb='1'
|| _fld:=cur_afld()
|| _fld:=''
?};

{? _fld='' | _fld='TEL'
|| _msg:='Odpowiedzi udzielono telefonicznie.';
   {? _tryb='1'
   || _txt:=BIPPYTP.memo_txt(,,'TRESC');
      {? BIPPYTP.TEL='T'
      || {? _txt*_msg=0
         || _msg+={? _txt='' || '' || '\n'+_txt ?};
            BIPPYTP.memo_set(_msg,'TRESC')
         ?}
      |? _txt*_msg
      || _txt:=(+_msg)-_txt;
         {? 1+_txt='\n'
         || _txt:=1-_txt
         ?};
         BIPPYTP.memo_set(_txt,'TRESC')
      ?}
   ?};
   BIPPYTP.efld_opt(_we,'enable=%1' [$(BIPPYTP.TEL<>'T')],,'ZAL')
?};

{? _fld='' | _fld='TRESC'
||
   BIPPYTP.efld_opt(_we,'mark=1',,'TRESC')
?};

1


\bipkat_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Funkcja sprawdza czy pracownik może "obsługiwać" wskazaną kategorię
::   WE: _a [REFERENCE] - wskazanie na kategorię
::       _b [REFERENCE] - wskazanie na pracownika
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_bipkat:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};
 _p_ref:={? var_pres('_b')=type_of(null()) || _b || return(_result) ?};

:: sprawdzenie czy pracownik może "obsługiwać" tę kategorię ulepszeń
BIPPYTK.cntx_psh();
BIPPYTK.index('PO');
BIPPYTK.prefix(_bipkat,_p_ref);
_result:=BIPPYTK.first();
BIPPYTK.cntx_pop();
_result


\bippytp_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie WER tabeli BIPPYTP.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _par:=params_get();
   _funkc:=BIPPYTP.BIPPYTN().BIPKAT().FUNKC;
   _kod:=BIPKAT.KOD;
   _p_ref:=null();
   _cfg:={? var_pres('cfg',_par)>0 || _par.cfg || ~~ ?};
   _cfg_ok:=type_of(_cfg)>0;
   {? _cfg_ok
   || _funkc:=_par.cfg.funkc;
      _p_ref:=_par.cfg.OCP
   || _p_ref:=_par.ODP
   ?};
   _ne:='DPU';
   _empty:='D';
   {? _funkc='ULP' | _funkc='OGL'
:: ulepszenia i ogłoszenia
   || _tab:=exec('bipulp_statusy','portal_bip',_funkc);
      _own_ulp:=_own_pyt:=0;
      P.cntx_psh();
      OSOBA.cntx_psh();
      {? _p_ref & P.seek(_p_ref)
      || _osoba:=P.OSOBA;
         _own_ulp:=BIPULP.P().OSOBA=_osoba;
         _own_pyt:=BIPPYTP.P().OSOBA=_osoba
      ?};
      OSOBA.cntx_pop();
:: sprawdzenie czy pracownik może "obsługiwać" tę kategorię ulepszeń / ogłoszeń
      _kat_ok:=exec('bipkat_ok','portal_bip',BIPULP.BIPKAT,_p_ref);
:: sprawdzenie czy jesteśmy odbiorcami
      _odb_ok:=exec('bipodb_licz','portal_bip',BIPULP.ZZ_DOK,0,_p_ref)>0;
      P.cntx_pop();
      {? _kod='ULP_PYT' | _kod='OGL_PYT'
::    pytania prywatne
      || _tab.find_tab(,'STATUS',,'=',BIPULP.STATUS);
         _stat_ok:={? _funkc='ULP' || _tab.KOD='GŁOSOWANIE' | _tab.KOD='OCENA'
                   |? _funkc='OGL' || _tab.KOD='AKTYWNE' | _tab.KOD='ODRZUCONE'
                   || 0
                   ?};
         {? _stat_ok & (_kat_ok | _odb_ok) || _ne:=_empty:='' || _ne:=_empty:='D' ?};
         {? ~(_own_pyt & _cfg_ok & _stat_ok) || _ne+='PU' ?}
::       komentarze
      || _moderation:=exec('isModerationEnabled','portal_bip',_funkc);
         _tab.find_tab(,'STATUS',,'=',BIPULP.STATUS);
         _stat_ok:={? _funkc='ULP' || _tab.KOD='GŁOSOWANIE'
                   |? _funkc='OGL' || _tab.KOD='AKTYWNE'
                   || 0
                   ?};
         {? _cfg_ok & _stat_ok & _odb_ok || _ne:=_empty:='' ?};
         {? ~_own_pyt || _ne+='P' ?};
         {? _moderation
         || {? ~_own_pyt & ~_kat_ok || _ne+='U' ?}
         || {? ~_own_pyt || _ne+='U' ?}
         ?};
         {? _stat_ok & _moderation & _kat_ok
         || _ne+={? BIPPYTP.ZATW='T' || 'T' || 'W' ?}
         || _ne+='TW'
         ?}
      ?}
   |? BIPPYTP.P=BIPPYTP.BIPPYTN().P
   || _ne:='PU'
   || _ne:='D'
   ?};
:: Akcje modyfikujące (Popraw, Usuń) NIE są możliwe dla wypowiedzi inicjatora wątku, czyli dla pytań.
:: Akcja "Odpowiedz" - tylko dla pytania.
   {? BIPPYTP.ZAL=null()
   || _ne+='OZ'
   ?};
   _win:={? (_funkc='ULP' | _funkc='OGL') & _cfg_ok
         || {? _kod='ULP_PYT' | _kod='OGL_PYT' || 'WER_%1P'[_funkc] || 'WER_%1'[_funkc] ?}
         || 'WER'
         ?};
   _ag:='%1:%2'[_ne,_empty];
   BIPPYTP.actions_grayed(_win,_ag)
?};
~~


\bippytp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.14]
:: OPIS: Obsługa akcji "Rekord - po" w oknie WER tabeli BIPPYTP.
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
_ret:=exec('bippytp_chk','portal_bip',_put);
_tr:=type_of(_ret);
{? (_tr=type_of('') & _ret<>'') | (_tr=type_of(0) & ~_ret)
|| return(_ret)
?};
{? exec('lic','#b_domain','POR') & exec('att_size','portal_lib',BIPPYTP,'ZAL')<>1
:: Dla używających HR Portal-u i typu załącznika prezentowanego na portalu - weryfikacja rozmiaru załącznika.
|| 'ZAL'
|| ''
?}


\bippytp_wer_ulp_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa akcji "Okienko - przed" w oknie WER_ULP (komentarze) tabeli BIPPYTP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_funkc:=_par.cfg.funkc;
_ne:='';_empty:='D';
_p_ref:=_par.cfg.OCP;
_tab:=exec('bipulp_statusy','portal_bip',_funkc);
_tab.find_tab(,'STATUS',,'=',BIPULP.STATUS);
_stat_ok:={? _funkc='ULP'
          || _tab.KOD='GŁOSOWANIE'
          |? _funkc='OGL'
          || _tab.KOD='AKTYWNE'
          || 0
          ?};
:: sprawdzenie czy jesteśmy odbiorcami
_odb_ok:=exec('bipodb_licz','portal_bip',BIPULP.ZZ_DOK,0,_p_ref)>0;
{? _stat_ok & _odb_ok || _empty:='' ?};
_ag:='%1:%2'[_ne,_empty];
BIPPYTP.actions_grayed(cur_win(1,1),_ag)


\bippytp_wer_ulpp_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa akcji "Okienko - przed" w oknie WER_ULPP i WER_OGLP (pytania prywatne) tabeli BIPPYTP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_funkc:=_par.cfg.funkc;
_ne:='';_empty:='D';
:: sprawdzamy czy mamy jakieś wątki pozakładane i czy jesteśmy autorem ulepszenia
_kat_pyt:=_par.cfg.kat_pyt;
BIPPYTN.index('BIPKAT');
BIPPYTN.prefix(_kat_pyt,BIPULP.NP_DOK,BIPULP.ZZ_DOK);
_watek:=BIPPYTN.first();
_p_ref:=_par.cfg.OCP;
_p_ok:=BIPULP.P<>_p_ref;
_tab:=exec('bipulp_statusy','portal_bip',_funkc);
_tab.find_tab(,'STATUS',,'=',BIPULP.STATUS);
_stat_ok:={? _funkc='ULP'
          || _tab.KOD='GŁOSOWANIE' | _tab.KOD='OCENA'
          |? _funkc='OGL'
          || _tab.KOD='AKTYWNE' | _tab.KOD='ODRZUCONE'
          || 0
          ?};
:: sprawdzenie czy pracownik może "obsługiwać" tę kategorię ulepszeń / ogłoszeń
_kat_ok:=exec('bipkat_ok','portal_bip',BIPULP.BIPKAT,_p_ref);
:: sprawdzenie czy jesteśmy odbiorcami
_odb_ok:=exec('bipodb_licz','portal_bip',BIPULP.ZZ_DOK,0,_p_ref)>0;
{? _stat_ok & (_p_ok | (~_p_ok & _watek)) & (_kat_ok | _odb_ok) || _empty:='' ?};
_ag:='%1:%2'[_ne,_empty];
BIPPYTP.actions_grayed(cur_win(1,1),_ag)


\bippytp_zatwierdz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła w oknie WER_ULP i WER_OGL tabeli BIPPYTP dla akcji "Zatwierdź - przed".
::       Zatwierdza komentarz - dostępna jeżeli jest włączony parametr moderacji.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy zatwierdzić komentarz?')
|| BIPPYTP.ZATW:='T';
   BIPPYTP.put()
?}


\bippytp_wycofaj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła w oknie WER_ULP i WER_OGL tabeli BIPPYTP dla akcji "Wycofaj - przed".
::       Wycofuje zatwierdzenie dla komentarza - dostępna jeżeli jest włączony parametr moderacji.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy wycofać zatwierdzenie dla komentarza?')
|| BIPPYTP.ZATW:='N';
   BIPPYTP.put()
?}


\bippytp_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła w oknie WER_ULPP i WER_OGLP tabeli BIPPYTP dla akcji "Dołącz - przed".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_win:=cur_win(1,1);
_par:=params_get();
{? var_pres('cfg',_par)>0
|| _funkc:=_par.cfg.funkc;
   {? _win='WER_%1P'[_funkc]
   || _kat_pyt:=_par.cfg.kat_pyt;
      _txt_pyt:='Prywatne pytania do autora';
::    wyszukanie wątku prywatnego
::    jeżeli osoba obsługująca jest również autorem ulepszenia to tylko odpowiadam w wątkach założonych przez innych
::    pracowników, jeżeli nie jestem autorem to zadaję pytania w wątku założonym przeze mnie
      _p_ref:={? _par.cfg.OCP=BIPULP.P || BIPPYTN.P || _par.cfg.OCP ?};
      _ref:=exec('bippytn_exist','portal_bip',_p_ref,_kat_pyt,_txt_pyt,BIPULP.ZZ_DOK);
      {? _ref=null()
      || _ref:=exec('bippytn_add','portal_bip',_p_ref,_kat_pyt,_txt_pyt,BIPULP.ZZ_DOK)
      ?};
      BIPPYTN.cntx_psh();
      {? BIPPYTN.seek(_ref)
      || BIPPYTP.cntx_psh();
         BIPPYTP.prefix();
         _added:=params_exec('bippytp_odpowiedz_b','portal_bip');
         BIPPYTP.cntx_pop()
      ?};
      BIPPYTN.cntx_pop();
      exec('bippytn_del','portal_bip',_ref,_funkc);
      {? _added || BIPPYTN.seek(_ref) ?};

:: odświeżenie okna z wątkami
      {? cur_tab(1,1)=BIPPYTP
      || _cfg:=exec('obj_ntab_set','#array',_par.cfg,'added',_added);
         params_set('cfg',_cfg);
         grp_disp(BIPPYTN,'WER_ULP',1)
      ?}
   |? _win='WER_%1'[_funkc]
   || _ok:=0;
      _portal2:=~~;
      _weblogin:=~~;
      _mail_ok:=~~;
      _login:=app_info('app_user');
      USERS.cntx_psh();
      _user:=exec('getUser','users',_login);
      {?  _user
      || _portal2:=exec('FindInSet','#table','USERSF','UNIK',USERS.ref(),REF.S_FIRMA,"USERSF.PORTAL2")='T';
         _weblogin:=(+USERS.WEBLOGIN);
         _mail_ok:=exec('mail_ok','#email',USERS.WEBLOGIN)=1;
         _ok:=_portal2 & _weblogin & _mail_ok
      ?};
      USERS.cntx_pop();
      {? _ok
      || _kat_kom:=_par.cfg.kat_kom;
         _tytul:='Komentarz';
         _ref:=exec('bippytn_exist','portal_bip',BIPULP.P,_kat_kom,_tytul,BIPULP.ZZ_DOK);
         {? _ref=null()
         || _ref:=exec('bippytn_add','portal_bip',BIPULP.P,_kat_kom,_tytul,BIPULP.ZZ_DOK)
         ?};
         BIPPYTN.cntx_psh();
         {? BIPPYTN.seek(_ref)
         || BIPPYTP.cntx_psh();
            BIPPYTP.prefix();
            _added:=params_exec('bippytp_odpowiedz_b','portal_bip');
            BIPPYTP.cntx_pop()
         ?};
         BIPPYTN.cntx_pop();
:: odświeżenie okna z komentarzami
         {? cur_tab(1,1)=BIPPYTP
         || _cfg:=exec('obj_ntab_set','#array',_par.cfg,'added',_added);
            params_set('cfg',_cfg);
            grp_disp(BIPPYTP,'WER_%1'[_funkc],1)
         ?}
      || _powod:={? _portal2=0
                 || 'Brak ustawionego dostępu do portalu dla użytkownika'
                 |? _weblogin=0
                 || 'Brak loginu portalowego dla użytkownika'
                 |? _mail_ok=0
                 || 'Brak podanego adresu e-mail użytkownika'
                 || 'Nie znaleziono użytkownika portalowego dla użytkownika'
                 ?};
         _txt:='%1: %2.\nNie można dodać komentarza.'@[_powod,_login];
         FUN.info(_txt);
         return(0)
      ?}
   ?}
?}


\bippytn_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła odpowiedzialna za usuwanie "pustych" wątków dla pytań prywatnych
::   WE: [_a] [REFERENCE] - wskazanie na wątek (opcjonalnie)
::        _b  [STRING]    - funkcjonalność
::   WY: ~~
::  TAG: <TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
  _ref:={? var_pres('_a')=type_of(null()) || _a || bfld('BIPPYTN') ?};
_funkc:={? var_pres('_b')=type_of('')     || _b || return(~~)      ?};

_bip_kat:={? _funkc='ULP'
          || exec('bipkat_ulp_pyt','portal_bip')
          |? _funkc='OGL'
          || exec('bipkat_ogl_pyt','portal_bip')
          || null()
          ?};

BIPPYTN.cntx_psh();
BIPPYTN.prefix();
BIPPYTP.cntx_psh();
BIPPYTP.index('BIPPYTN');
BIPPYTP.prefix(_ref);
{? ~BIPPYTP.first()
|| {? BIPPYTN.seek(_ref) & BIPPYTN.BIPKAT=_bip_kat || BIPPYTN.del() ?}
?};
BIPPYTP.cntx_pop();
BIPPYTN.cntx_pop();
~~


\bippytp_wer_ulpp_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła w oknie WER_ULPP i WER_OGLP tabeli BIPPYTP realizuje akcje "Usuń - po"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
:: odświeżenie okna z wątkami
grp_disp(BIPPYTN,'WER_ULP',1)


\bippytp_odpowiedz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła w oknie WER tabeli BIPPYTP realizuje akcję typu "Dołącz - przed". Jednak wywołana na zapisie będącym
::       pytaniem, prezentuje również jego treść.
::   WE:
::   WY: null/ref
:: ~OST: INBLVIEW
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
_par:=params_get();
_funkc:='';
{? var_pres('cfg',_par)>0
|| _funkc:=_par.cfg.funkc
?};

:: Tabela tymczasowa na wartości związane z pytaniem.
_BUF:=tab_tmp(1,
   'UID','STRING[48]','UID rekordu z pytaniem',
   'DT','DATE','Data',
   'GD','TIME','Godzina',
   'TRESC','SYS_MEMO','Treść pytania',
   'ZAL','BLOBRAW','Załącznik'
);
_BUF.blank();
_BUF.UID:=BIPPYTP.uidref();
_BUF.DT:=BIPPYTP.DT;
_BUF.GD:=BIPPYTP.GD;
_BUF.memo_set(BIPPYTP.memo_txt(,1,'TRESC'),'TRESC');
_BUF.ZAL:=BIPPYTP.ZAL;

BIPPYTP.blank();
BIPPYTP.memo_set(,'TRESC');
BIPPYTP.bl_file('ZAL',1);
BIPPYTP.BIPPYTN:=BIPPYTN.ref();
BIPPYTP.P:={? _funkc='ULP' | _funkc='OGL' || _par.cfg.OCP || _par.ODP ?};
:: Wstępne przypisanie daty i godziny (dla walidatora).
BIPPYTP.DT:=date();
BIPPYTP.GD:=time();

_szer:=60;
_wys:=-5;
{? _funkc='ULP' | _funkc='OGL'
:: komentarze do ulepszeń i ogłoszeń
|| _pyt:=BIPPYTP.BIPPYTN().BIPKAT().KOD='ULP_PYT' | BIPKAT.KOD='OGL_PYT';
   {? _pyt
   || _title:={? BIPPYTP.P=BIPPYTN.P || 'Pytanie'@ || 'Odpowiedź'@ ?};
      _dt_txt:='Data dodania pytania'@;
      _gd_txt:='Godzina dodania pytania'@;
      _tr_txt1:='Treść'@;
      _tr_txt2:='Treść dodanego pytania'@
   || _title:='Komentarz'@;
      _dt_txt:='Data dodania komentarza'@;
      _gd_txt:='Godzina dodania komentarza'@;
      _tr_txt1:='Treść'@;
      _tr_txt2:='Treść dodanego komentarza'@
::    w obecnej wersji wszystkie komentarze są zatwierdzone (domyślna wartość pola ZATW)
::      BIPPYTP.ZATW:={? exec('isModerationEnabled','portal_bip',_funkc) || 'N' || 'T' ?}
   ?};
   _we:=BIPPYTP.mk_edit(_title);
   BIPPYTP.win_esep(_we,'Dane podstawowe'@);
   BIPPYTP.win_efld(_we,,'DT',,,,,1,'Data'@,,_dt_txt);
   BIPPYTP.win_efld(_we,,'GD',,,8,,1,'Godzina'@,,_gd_txt);
   BIPPYTP.win_efld(_we,,'TRESC',,,_szer,_wys,,_tr_txt1,,_tr_txt2)
||
   _we:=BIPPYTP.mk_edit('Odpowiedź',,,,,'html_maximized');
   BIPPYTP.win_esep(_we,'Zadający pytanie'@);
   BIPPYTP.win_efld(_we,BIPPYTN,'OSOBA','NAZWISKO',,_szer-3,,1,,,MS.comment(OSOBA,'NAZWISKO'));
   BIPPYTP.win_efld(_we,BIPPYTN,'OSOBA','PIERWSZE',,_szer-3,,1,,,MS.comment(OSOBA,'PIERWSZE'));
   BIPPYTP.win_esep(_we,'Pytanie'@);
   BIPPYTP.win_efld(_we,_BUF,'DT',,,,,1,'Data'@,,'Data zadania pytania'@);
   BIPPYTP.win_efld(_we,_BUF,'GD',,,8,,1,'Godzina'@,,'Godzina zadania pytania'@);
   BIPPYTP.win_efld(_we,_BUF,'TRESC',,,_szer,_wys,1,'Treść pytania'@,,'Treść zadanego pytania'@);
   BIPPYTP.win_efld(_we,_BUF,'ZAL',,,_szer,,1,'Załącznik'@,,'Załączony plik'@);
   BIPPYTP.win_esep(_we,'Odpowiedź'@);
   BIPPYTP.win_efld(_we,,'TEL',,,,,,'Odpowiedź telefoniczna'@,,MS.comment(BIPPYTP,'TEL'),
      'check-box','check_label=%1' ['Odpowiedzi udzielono telefonicznie'@],"'T'","'N'"
   );
   BIPPYTP.win_efld(_we,,'TRESC',,,_szer,_wys,,'Treść'@,,'Treść udzielonej odpowiedzi'@);
   BIPPYTP.win_efld(_we,,'ZAL',,,_szer-3,,,'Załącznik'@,,'Załączony plik'@,,'F3_button=1')
:: Przycisk pozwalający otworzyć załącznik z pytania byłby ciekawym rozszerzeniem funkcjonalności.
:: Niestety, obecnie technologia zakłada jedną szerokość wszystkich przycisków (w ramach panelu).
:: Oznacza to, że tę samą szerokość "zyskują" przyciski z etykietami:
::    * "Otwórz załącznik z pytania";
::    * "OK".
:: Wygląda to słabo. Dlatego na razie rezygnujemy z tego przycisku ...
::_bopen:=BIPPYTP.win_ebtn(_we,'text=%1,align=begin' ['Otwórz załącznik z pytania'@],
::   "params_get().BUF.bl_view('ZAL'); ''"
::);
::BIPPYTP.btn_eopt(_we,_bopen,'tooltip=%1' ['Otworzenie załącznika do podglądu'@])

?};
exec('ok_esc','#window',BIPPYTP,_we);

_wep:=BIPPYTP.win_edit('?');
BIPPYTP.win_edit(_we);

params_set('BUF',_BUF);
exec('bippytp_efld_opt','portal_bip','*',BIPPYTP,_we);
{? BIPPYTP.edit("exec('bippytp_ae','portal_bip',0)")
|| do();
   BIPPYTP.DT:=date();
   BIPPYTP.GD:=time();
   {? BIPPYTP.add() & BIPPYTP.memo_put(,'TRESC')
   || _result:=BIPPYTP.ref()
   ?};
   {? _result & BIPPYTP.TEL='N' & (_file:=BIPPYTP.bl_file('ZAL'))<>''
   || BIPPYTP.bl_put('ZAL',_file)
   ?};
   end()
?};
BIPPYTP.win_edit(_wep);
BIPPYTP.win_edel(_we);

_result


\bippytp_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Popraw - przed" w oknie WER tabeli BIPPYTP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_funkc:='';
{? var_pres('cfg',_par)>0
|| _funkc:=_par.cfg.funkc
?};
_wep:=BIPPYTP.win_edit('?');
_we:={? _funkc='ULP' | _funkc='OGL' || 'RED_ULP' || 'RED' ?};
exec('bippytp_efld_opt','portal_bip','*',BIPPYTP,_we);
BIPPYTP.win_edit(_we);
{? BIPPYTP.edit("exec('bippytp_ae','portal_bip',1)")
|| do();
   BIPPYTP.P:={? _funkc='ULP' | _funkc='OGL' || _par.cfg.OCP || _par.ODP ?};
   BIPPYTP.memo_set('[Zmodyfikowano %1 %2]\n' [date()$1,time()$3]+BIPPYTP.memo_txt(,,'TRESC'),'TRESC');
   {? BIPPYTP.put() & BIPPYTP.memo_put(,'TRESC') & BIPPYTP.TEL='N' & (_file:=BIPPYTP.bl_file('ZAL'))<>''
   || BIPPYTP.bl_put('ZAL',_file)
   ?};
   end()
?};
BIPPYTP.win_edit(_wep);
0


\bippytp_otworz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Otwórz - przed" w oknie WER tabeli BIPPYTP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bl_view','#blob',BIPPYTP,'ZAL')


\bippytp_zapisz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Zapisz - przed" w oknie WER tabeli BIPPYTP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('save_1b_as','#file',BIPPYTP,'ZAL',,'BIPPYTP','SaveDir')


\bippytp_legenda_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Legenda - przed" w oknie WER tabeli BIPPYTP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? cur_win(1,1)='WER_ULP' | cur_win(1,1)='WER_OGL'
|| exec('legenda','color','BIPPYTP#WER_ULP#')
|| exec('legenda','color','BIPPYTP#WER#')
?}


\bippytp_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Wyświetl - przed" w oknie WER tabeli BIPPYTP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BIPPYTP.cntx_psh();
_we:='DISP';
BIPPYTP.win_edit(_we);
_title:={? BIPPYTP.P=BIPPYTP.BIPPYTN().P || 'Pytanie'@ || 'Odpowiedź'@ ?};
BIPPYTP.hdr_edit();
BIPPYTP.hdr_edit(_title);
BIPPYTP.display();
BIPPYTP.cntx_pop();
~~


\bippyto_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BIPPYTO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bippyto_chk','portal_bip',0) & exec('bippyto_modb','portal_bip')


\bippyto_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli BIPPYTO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bippyto_chk','portal_bip',1) & exec('bippyto_modb','portal_bip')


\bippyto_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli BIPPYTO.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~(_a & do_state()=1)
|| return()
?};

:: Właściwie wszystkie pola z tabeli BIPPYTO są nadmiarowo przechowywane w tabeli BIPPYTK - ze względu na wyświetlanie.
:: Jeżeli więc zmienił się bieżący rekord w tabeli BIPPYTO, to zaktualizujmy też powiązane z nim rekordy w tabeli
:: BIPPYTK (wystarczy put() - resztę załatwią wyzwalacze).
BIPPYTK.cntx_psh();
BIPPYTK.index('UNIQ');
BIPPYTK.prefix(BIPPYTO.ref());
{? BIPPYTK.first()
|| {!
   |? BIPPYTK.put();
      BIPPYTK.next()
   !}
?};
BIPPYTK.cntx_pop();
~~


\bippyto_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli BIPPYTO.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(BIPPYTO,
   $("_a.table(_b,"+$_put+",,'USERS','P')")
)


\bippyto_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli BIPPYTO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? BIPPYTO.P
|| P.cntx_psh();
   P.prefix();
   BIPPYTO.P();
   BIPPYTO.OSOBA:=P.OSOBA;
   BIPPYTO.WYDZIAL:=P.WYDZIAL;
   BIPPYTO.ST:=P.ST;
   BIPPYTO.CP:=P.CP;
   BIPPYTO.F_ZATR:=P.F_ZATR;
   P.cntx_pop()
?};
1


\bippyto_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Usuń - przed" dla tabeli BIPPYTO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',BIPPYTK,'UNIQ',BIPPYTO.ref())


\bippyto_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wertowanie osób obsługujących pytania z portalu.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BIPPYTO.cntx_psh();
BIPPYTO.index('VIEW');
BIPPYTO.prefix();
exec('bippyto_wnds','portal_bip');
BIPPYTO.select();
BIPPYTO.cntx_pop();
~~


\bippyto_wnds
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła odpowiedzialna za budowę okna grupowego z osobami odpowiadającymi na pytania z portali i ich
::       "kompetencjami".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BIPPYTO.win_edit('DISP');

_grp:=BIPPYTO.grp_make('Osoby obsługujące pytania'@,
   "  BIPPYTK.cntx_psh();
      BIPPYTK.index('KAT');
      ~~
   ",
   '#bippytogrp',,,
   "  BIPPYTK.cntx_pop();
      1
   "
);

_mode:='maximized';
BIPPYTO.grp_sel(_grp,,'WER',,"grp_disp(BIPPYTK,'WERK')",,,,,,,,_mode);
BIPPYTO.grp_splt(_grp,,'horizontal','kat',15);
BIPPYTO.grp_sel(_grp,BIPPYTK,'WERK',,,,,,
   "  {? grp_empty(BIPPYTO,'WER')
      || '#disable'
      || BIPPYTK.prefix(BIPPYTO.ref())
      ?}
   ",,,,
   _mode
);
BIPPYTO.win_sel(_grp);
~~


\bippyto_mk_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła tworzy okno wertowania (tylko pola) dla tabeli BIPPYTO.
::   WE: [_a] [STRING] - Tytuł okna [domyślnie: 'Wybór kontekstu pracy'@]
::   WY: Uchwyt okna.
::----------------------------------------------------------------------------------------------------------------------
_title:={? var_pres('_a')=type_of('') || _a || 'Wybór kontekstu pracy'@ ?};
_ws:=BIPPYTO.mk_sel(_title,,,'#wyb',,,,,'U');
BIPPYTO.win_fld(_ws,,'OSOBA','NAZWISKO',,-20,,1,,,MS.comment(OSOBA,'NAZWISKO'));
BIPPYTO.win_fld(_ws,,'OSOBA','PIERWSZE',,-10,,1,,,MS.comment(OSOBA,'PIERWSZE'));
BIPPYTO.win_fld(_ws,,'P','T',,-9,,1,,,MS.comment(P,'T'));
BIPPYTO.win_fld(_ws,,'WYDZIAL','SYMBOL',,-16,,1,MS.name(P,'WYDZIAL'),,MS.comment(P,'WYDZIAL'));
BIPPYTO.win_fld(_ws,,'ST','ST',,-20,,1,MS.name(P,'ST'),,MS.comment(P,'ST'));
BIPPYTO.win_fld(_ws,,'USERS','KOD',,-10,,1,'Użytkownik aplikacji'@,,'Kod użytkownika aplikacji'@);
BIPPYTO.win_fld(_ws,,'USERS','WEBLOGIN',,-20,,1,'Użytkownik portalu'@,,'Kod użytkownika portalu'@);
BIPPYTO.win_fld(_ws,,'USERS','DANE',,-20,,1,'Dane'@,,'Informacje o użytkowniku'@);
BIPPYTO.win_fld(_ws,,'USERS','EMAIL',,-20,,1,'E-mail'@,,'E-mail'@);
_ws


\bippytk_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BIPPYTK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bippytk_chk','portal_bip',0) & exec('bippytk_modb','portal_bip')


\bippytk_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli BIPPYTK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bippytk_chk','portal_bip',1) & exec('bippytk_modb','portal_bip')


\bippytk_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Wyzwalacz "Usuń - po" dla tabeli BIPPYTK.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};
BIPPYTO.cntx_psh();
BIPPYTO.prefix();
{? BIPPYTO.seek(bfld('BIPPYTO')) & ~BIPPYTO.count()
|| BIPPYTO.del()
?};
BIPPYTO.cntx_pop();
~~


\bippytk_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli BIPPYTK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? BIPPYTK.BIPPYTO
|| BIPPYTO.cntx_psh();
   BIPPYTO.prefix();
   BIPPYTK.BIPPYTO();
   BIPPYTK.USERS:=BIPPYTO.USERS;
   BIPPYTK.P:=BIPPYTO.P;
   BIPPYTK.OSOBA:=BIPPYTO.OSOBA;
   BIPPYTK.WYDZIAL:=BIPPYTO.WYDZIAL;
   BIPPYTK.ST:=BIPPYTO.ST;
   BIPPYTK.CP:=BIPPYTO.CP;
   BIPPYTK.F_ZATR:=BIPPYTO.F_ZATR;
   BIPPYTO.cntx_pop()
?};
1


\bippytk_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli BIPPYTK.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(BIPPYTK,
   $("_a.table(_b,"+$_put+",,'BIPPYTO','BIPKAT')")
)


\bippytk_dolaczo_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Dołącz - przed" w oknie WERO tabeli BIPPYTK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
USERS.cntx_psh();
USERS.prefix();
P.cntx_psh();
P.prefix();

_sql:=
   'select '
      'USERS.WEBLOGIN, USERS.KOD, USERS.DANE, USERS.REFERENCE as "UREF", '
      'OSOBA.NAZWISKO, OSOBA.PIERWSZE, '
      'STN.ST, '
      'P.T, '
      'UD_SKL.SYMBOL as "WYDS", UD_SKL.OPIS as "WYDO", '
      'P.REFERENCE as "PREF" '
   'from P join OSOBA using(P.OSOBA,OSOBA.REFERENCE) join USERS using(OSOBA.REFERENCE,USERS.OSOBA) '
          'join STN using(P.ST,STN.REFERENCE) '
          'join UD_SKL using(P.WYDZIAL,UD_SKL.REFERENCE) '
   'where USERS.AKT=\'T\' '
          'and P.PORTAL=\'T\' '
          'and P.REFERENCE in (select REF from :_a) '
          'and (USERS.REFERENCE,P.REFERENCE) not in '
              '(select BIPPYTK.USERS,BIPPYTK.P from BIPPYTK where BIPPYTK.BIPKAT=:_b) '
   'order by  OSOBA.NAZWISKO,OSOBA.PIERWSZE,P.T,STN.ST'
;

_TAB:=sql(_sql,exec('dostepne_p','schemat','POR','*T','T'),BIPKAT.ref());
_TAB.fld_fml('T','DISPLAY_FORMAT',P.fld_fml('T','*DISPLAY_FORMAT'));

_ws:=_TAB.mk_sel('Użytkownicy'@,,,'#upyto',,,,,'U');
_TAB.win_fld(_ws,,'NAZWISKO',,,-20,,,MS.name(OSOBA,'NAZWISKO'),,MS.comment(OSOBA,'NAZWISKO'));
_TAB.win_fld(_ws,,'PIERWSZE',,,-10,,,MS.name(OSOBA,'PIERWSZE'),,MS.comment(OSOBA,'PIERWSZE'));
_TAB.win_fld(_ws,,'T',,,-9,,,MS.name(P,'T'),,MS.comment(P,'T'));
_TAB.win_fld(_ws,,'WYDS',,,-16,,,'Jednostka organizacyjna - kod'@,,'Kod jednostki organizacyjnej'@);
_TAB.win_fld(_ws,,'ST',,,-20,,,MS.name(P,'ST'),,MS.comment(P,'ST'));
_TAB.win_fld(_ws,,'KOD',,,-10,,,'Użytkownik aplikacji'@,,'Kod użytkownika aplikacji'@);
_TAB.win_fld(_ws,,'WEBLOGIN',,,-20,,,'Użytkownik portalu'@,,'Kod użytkownika portalu'@);
_TAB.win_fld(_ws,,'DANE',,,-20,,,'Dane'@,,'Informacje o użytkowniku'@);
_TAB.win_act(_ws,,'Formuła','Wybierz'@@,,,"
      _TAB:=cur_tab(1,1);
      _ret:=0;
      {? USERS.seek(_TAB.UREF) & P.seek(_TAB.PREF)
      || BIPPYTO.cntx_psh();
         BIPPYTO.index('UNIQ');
         BIPPYTO.prefix(USERS.ref(),P.ref());
         _ref:=null();
         {? BIPPYTO.first()
         || _ref:=BIPPYTO.ref()
         || BIPPYTO.blank();
            BIPPYTO.USERS:=USERS.ref();
            BIPPYTO.P:=P.ref();
            {? BIPPYTO.add()
            || _ref:=BIPPYTO.ref()
            ?}
         ?};
         {? _ref<>null()
         || BIPPYTK.blank();
            BIPPYTK.BIPPYTO:=_ref;
            BIPPYTK.BIPKAT:=BIPKAT.ref();
            _ret:=BIPPYTK.add()
         ?};
         BIPPYTO.cntx_pop()
      ?};
      _ret
   ",
   "  {? cur_tab(1,1).sel_size()=0
      || sel_exit()
      ?}
   ",
   1,
   1,,
   "sel_exit()",
   'W'
);
_TAB.win_act(_ws,,'Kolejność');
_TAB.win_sel(_ws);
_TAB.select();

P.cntx_pop();
USERS.cntx_pop();
~~


\bippytk_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie WER tabeli BIPPYTK.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
POLA_GRP.TXT_1:=exec('_funkc','portal_bip','NAZWA',BIPPYTK.BIPKAT().FUNKC);
~~


:: - - - - - - - - - - - - - - - - - - - -U L E P S Z E N I A - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

\isModerationEnabled
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Sprawdza czy włączona jest moderacja zgłoszonych ulepszeń / ogłoszeń
::   WE: _a [STRING] - symbol funkcjonalności
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & (',ULP,OGL,'*',%1,'[_a])
|| _funkc:=_a
|| return(0)
?};

_mod:=0;
_sym:=
   {? _funkc='ULP'
   || 'ImprovementWithVerification'
   |? _funkc='OGL'
   || 'AdvertisementWithVerification'
   ?};

_firma:=exec('ref_firma','ustawienia');
_por_conf:=exec('por_conf_firma','portal_lib',_firma);

PORPAR.cntx_psh();
PORPAR.index('SYMBOL');
PORPAR.prefix(_por_conf.firma,_sym,);
{? PORPAR.first()
|| _mod:=(PORPAR.WARTOSC*'1')>0
?};
PORPAR.cntx_pop();

_mod


\canIAcceptOwnRequests
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Sprawdza czy mogę akceptować / oceniać własne wnioski dot. ulepszeń / ogłoszeń
::   WE: _a [STRING] - symbol funkcjonalności
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_funkc:={? var_pres('_a')=type_of('') || _a || return(0) ?};
exec('czytaj','#stalesys',,XINFO,'POR_CONF','POR_OAKW','POR_UAKW','POR0OAKW','POR0UAKW');
{? _funkc='ULP'
|| {? XINFO.POR_CONF='W' || XINFO.POR0UAKW='T' ||  XINFO.POR_UAKW='T'?}
|? _funkc='OGL'
|| {? XINFO.POR_CONF='W' || XINFO.POR0OAKW='T' ||  XINFO.POR_OAKW='T'?}
|| 0
?}


\bipkat_ulp_pyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Zwraca kategorię obsługującą prywatne pytania do ulepszeń
::   WE:
::   WY: ref/null
::----------------------------------------------------------------------------------------------------------------------
exec('bipkat_get','portal_bip','ULP_PYT','ULP_PYT','Prywatne pytania do ulepszeń','ref',1)


\bipkat_ulp_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Zwraca kategorię obsługującą komentarze do ulepszeń
::   WE:
::   WY: ref/null
::----------------------------------------------------------------------------------------------------------------------
exec('bipkat_get','portal_bip','ULP_KOM','ULP_KOM','Komentarze do ulepszeń','ref',1)


\selPracFromUser
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Wybiera pracownika spośród pracowników przypisanych do użytkownika
::   WE: _a [STRING] - kod funkcjonalności
::   WY: objekt o polach:
::          P       - wskazanie na pracownika w ramach, którego będziemy pracować
::          BIPPYTO - wskazanie na osobę oceniająca ulepszenia
::----------------------------------------------------------------------------------------------------------------------
_res:=obj_new('BIPPYTO','P');
{! _lp:=1 .. obj_len(_res) |! _res[_lp]:=null() !};
_funkc:={? var_pres('_a')=type_of('') || _a || return(_res) ?};

_user:=exec('operatorUser','#users');

BIPPYTO.cntx_psh();
BIPPYTO.prefix();
_from:="join BIPPYTK using(BIPPYTO.reference,BIPPYTK.BIPPYTO)
        join BIPKAT "+'';
_where:="BIPPYTO.USERS=:_a and BIPKAT.FUNKC=':_b' and \"3P\".PORTAL='T' and \"3P\".FIRMA=:_c"+'';



BIPPYTO.f_set('OSOBA(NAZWISKO),OSOBA(PIERWSZE),P(T),ST(ST)',_from,_where,_user,_funkc,exec('ref_firma','ustawienia'));
_fsize:=BIPPYTO.f_size();
{? _fsize=0
|| _funkcText:=exec('_funkc','portal_bip','NAZWA',_funkc);
   FUN.info(
      _funkcText+': '+
      'Użytkownik nie posiada uprawnień do żadnej kategorii.\n\n'
      'Należy sprawdzić listę osób obsługujących wybraną funkcjonalność\n'
      '(Ustawienia i parametryzacja -> Parametryzacja -> HR Portal -> Słowniki -> Kategorie ...).'@
   )

|? _fsize=1 & BIPPYTO.f_first()
|| _res.BIPPYTO:=BIPPYTO.ref();
   _res.P:=BIPPYTO.P

|| _ws:=exec('bippyto_mk_sel','portal_bip');
   BIPPYTO.win_act(_ws,,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W');
   BIPPYTO.win_sel(_ws);
   {? BIPPYTO.select()
   || _res.BIPPYTO:=BIPPYTO.ref();
      _res.P:=BIPPYTO.P
   ?};
   BIPPYTO.hdr_sel()
?};
BIPPYTO.f_clear();
BIPPYTO.cntx_pop();
_res


\bipulp_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wertowanie ulepszeń portalowych w oknie grupowym.
::   WE: _a [ARRAY] - Tablica elementów nazwanych z parametryzacją (patrz formuła \_cfg powyżej dla _a='BIPULP').
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _<1
|| _stack:=form_stack();
   FUN.error('Brak parametru "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~obj_ntab(_a)
|| _stack:=form_stack();
   FUN.error('Nieprawidłowy typ parametru "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~exec('array_cmptype','#array',_a,exec('_cfg','portal_bip','BIPULP'))
|| _stack:=form_stack();
   FUN.error('Nieprawidłowa budowa tablicy "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~exec('_funkc_valid','portal_bip',_a.funkc)
|| return(0)
?};
_cfg:=_a;

_cfg.upr:=exec('chk_role','#b__box',OPERATOR.USER,_cfg.uid);

BIPULP.cntx_psh();
BIPULP.f_clear();
BIPULP.index('DTGD');
BIPULP.prefix(exec('ref_firma','ustawienia'),_cfg.funkc,);
:: kategoria dla pytań prywatnych w ulepszeniach
_ocp:=_bippyto:=null();
_res:=exec('selPracFromUser','portal_bip','ULP');
_ocp:=_res.P;
_bippyto:=_res.BIPPYTO;
_kat_kom:=exec('bipkat_ulp_kom','portal_bip');
_kat_pyt:=exec('bipkat_ulp_pyt','portal_bip');
params_set('cfg',exec('obj_ntab_set','#array',_cfg,'OCP',_ocp,
                'BIPPYTO',_bippyto,'kat_kom',_kat_kom,'kat_pyt',_kat_pyt));
{? _ocp & exec('bipulp_wnds','portal_bip',_cfg)
|| {? _cfg.area
   || AreaTitle.setTitle()
   ?};
   BIPULP.select()
?};
BIPULP.cntx_pop();
~~


\bipulp_legenda_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Obsługa akcji "Legenda - przed" w oknie WER tabeli BIPULP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_funkc:=params_get().cfg.funkc;
{? _funkc='ULP'
|| exec('legenda','color','BIPULP#01','BIPULP#WER#')
|? _funkc='OGL'
|| exec('legenda','color','BIPOGL#01','BIPOGL#WER#')
?}


\bipulp_wnds
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Formuła odpowiedzialna za budowę okna grupowego dla ulepszeń i ustawienie odpowiednich okien
::       redakcyjnych.
::   WE: _a [ARRAY] - Tablica elementów nazwanych z parametryzacją (patrz formuła \_cfg powyżej dla _a='BIPULP').
::   WY: Wynik operacji: 0 /1.
::----------------------------------------------------------------------------------------------------------------------
_cfg:=_a;

_mode:='maximized';
_grp:=BIPULP.grp_make(_cfg.bipulp_wnds.grp_title,
   "  _cfg:=params_get().cfg;
      _funkc:=_cfg.funkc;
      exec('zz_pom_psh','phr_widok',_cfg.uid);
      ZZ_DOK.cntx_psh();
      ZZ_DOK.f_clear();
      ZZ_DOK.prefix();
      ZZ_KRYT.cntx_psh();
      ZZ_KRYT.f_clear();
      ZZ_KRYT.index('UNIQUE');
      ZZ_KRYT.fld_fml('ZZ_LINK','BLANK',""BIPULP.ZZ_DOK"");
      ZZ_KRYT.fld_fml('ZZ_TYP','BLANK',""exec('typ_find','phr_dane',ZZ_POM.MODUL,'ODB')"");
      ZZ_KRYT.fld_fml('ZZ_KRYT','BLANK',""exec('zz_kryt_zz_kryt_bl','phr_widok')"");
      UD_DEF.cntx_psh();
      UD_DEF.f_clear();
      UD_DEF.index('OPIS');
      exec('ud_def_zz_zal_bf','phr_widok');
      BIPKAT.cntx_psh();
      BIPKAT.win_dict(_cfg.bipkat.wd);
      BIPKAT.win_edit(_cfg.bipkat.we);
      BIPKAT.win_patt(_cfg.bipkat.wp);
      BIPKAT.fld_fml('FUNKC','BLANK',$(""'""+_funkc+""'""));
      BIPODB.cntx_psh();
      BIPODB.f_clear();
      BIPODB.index('NAZW');
      BIPODB.fld_fml('ZZ_LINK','BLANK',""BIPULP.ZZ_DOK"");
      ~~
   ",
   {? _cfg.funkc='OGL'
   || '#bipogl20200101'
   || '#bipulp20200101'
   ?}
   ,,,
   "  _cfg:=params_get().cfg;
      {? _cfg.area & ~exec('exit','zws')
      || return(0)
      ?};
      BIPODB.fld_fml('ZZ_LINK','BLANK');
      BIPODB.actions('WER',':');
      BIPODB.f_clear();
      BIPODB.cntx_pop();
      BIPKAT.fld_fml('FUNKC','BLANK');
      BIPKAT.f_clear();
      BIPKAT.cntx_pop();
      exec('ud_def_zz_zal_oc','phr_widok');
      UD_DEF.cntx_pop();
      ZZ_KRYT.fld_fml('ZZ_KRYT','BLANK');
      ZZ_KRYT.fld_fml('ZZ_TYP','BLANK');
      ZZ_KRYT.fld_fml('ZZ_LINK','BLANK');
      ZZ_KRYT.actions('CFG',':',,1);
      ZZ_KRYT.f_clear();
      ZZ_KRYT.cntx_pop();
      ZZ_DOK.f_clear();
      ZZ_DOK.cntx_pop();
      exec('zz_pom_pop','phr_widok');
      1
   ",,
   _mode
);

::_wer_g:='WER';
{? _cfg.funkc='ULP'
|| _wer_g:=exec('bipulpg_wnd','portal_bip');
   _wer_o:=exec('bipulpo_wnd','portal_bip')
?};
BIPULP.win_fml(_cfg.bipulp_wnds.nag_ws,,'STATUS',,'ICON_BEFORE',
   "params_exec('bipulp_icon_status','portal_bip',cur_tab(1,1).STATUS)",2
);
:: Ulepszenie / ogłoszenia portalowe.
BIPULP.grp_sel(_grp,,_cfg.bipulp_wnds.nag_ws,,
   $("params_set(_par:=params_get());
      ZZ_POM.DOKZ_LNK:=BIPULP.ZZ_DOK().ref();
      grp_disp(UD_DEF,'ZZ_SEL',1,1);
      grp_disp(ZZ_KRYT,'CFG',1,1);
      grp_disp(BIPODB,'"+_cfg.bipulp_wnds.odb_ws+"',1,1)"+
      {? _cfg.funkc='ULP'
      || ";
          grp_disp(BIPULPG,'"+_wer_g+"',1,1);
:: OCENY zakomentowane do czasu pojawienia się na portalu:
::          grp_disp(BIPULPO,'"+_wer_o+"',1);
          grp_disp(BIPPYTP,'"+'WER_%1'[_cfg.funkc]+"',1,1);
          grp_disp(BIPPYTN,'WER_ULP',1,1)"
      || ";
::    pielęgnacja filtra
         _lm:=exec('last_mod_get','#table',BIPULP);
         {? EDIT_VAR.OGL_LM<>_lm
         || EDIT_VAR.OGL_LM:=_lm;
            {? BIPULP.sel_size()=0 & BIPULP.f_active()>0
            || BIPULP.f_rfresh();
               grp_disp(BIPULP,cur_win(1,1),0)
            ?}
         ?};
          grp_disp(BIPPYTP,'"+'WER_%1'[_cfg.funkc]+"',1,1);
          grp_disp(BIPPYTN,'WER_ULP',1,1)
         "
      ?}
    ),,,,
::  przed obsługą
   " {? _a
     || EDIT_VAR.OGL_LM:=exec('last_mod_get','#table',BIPULP)
     ?}
   "
    ,,,,
   _mode
);
BIPULP.grp_splt(_grp,,'horizontal','detale',15);

:: Załączniki (zakładka w dolnym panelu).
_ws:={? _cfg.upr || 'WER' || 'WEO' ?};
UD_DEF.win_sopt('ZZ_SEL','select_record_checkbox=0');
BIPULP.grp_sel(_grp,UD_DEF,'ZZ_SEL','Załączniki'@,
   $("params_set(params_get()); grp_disp(ZZ_DOKZ,'"+_ws+"')"),,,,
   $("_TAB:=BIPULP;
      {? grp_empty(_TAB,'"+_cfg.bipulp_wnds.nag_ws+"')
      || '#disable'
      || exec('typzal_root','phr_dane',_TAB);
         _ref:=exec('szukaj_ud_sch','schemat','TYPZAL',2-!_TAB);
         UD_DEF.prefix(_ref)"+
         {? _cfg.funkc='ULP' | _cfg.funkc='OGL'
         || "; _ne:='DPU';_empty:='D';
            _cfg:=params_get().cfg;
            _tab:=exec('bipulp_statusy','portal_bip','ULP');
            _tab.find_tab(,'STATUS',,'=',BIPULP.STATUS);
            _stat_ok:={? _cfg.funkc='ULP'
                      || _tab.KOD<>'ZAAKCEPTOWANE' & _tab.KOD<>'ODRZUCONE'
                      || _tab.KOD<>'ARCHIWALNE'
                      ?};
            _p_ref:=_cfg.OCP;
            _prac_ok:=_p_ref=BIPULP.P;
            {? _stat_ok & _prac_ok || _ne:=_empty:='' ?};
            _ag:='%1:%2'[_ne,_empty];
            ZZ_DOKZ.actions_grayed('"+_ws+"',_ag)"
         || ""
         ?}+"
      ?}
   "),,,,
   _mode
);
BIPULP.tab_splt(_grp,,'vertical','zz_dokz',',25%');
BIPULP.grp_sel(_grp,ZZ_DOKZ,_ws,,,,,,
   "  {? grp_empty(UD_DEF,'ZZ_SEL')
      || '#disable'
      || exec('ud_def_zal_wer_bs','phr_widok')
      ?}
   ",,,,
   _mode
);

{? _cfg.funkc='ULP'
||
:: Głosy (zakładka w dolnym panelu).
   BIPULP.grp_sel(_grp,BIPULPG,_wer_g,'Głosowanie'@,
   $("params_set(params_get()); grp_disp(BIPULP,'"+_cfg.bipulp_wnds.nag_ws+"'); grp_disp(BIPULPG,cur_win(1,1))")
   ,,,,
      $("{? grp_empty(BIPULP,'"+_cfg.bipulp_wnds.nag_ws+"')
         || '#disable'
         || BIPULPG.index('LINK');
            BIPULPG.prefix(BIPULP.NP_DOK,BIPULP.ZZ_DOK)
         ?}
      "),,,,
      _mode
   )
?};

:: Komentarze (zakładka w dolnym panelu)
BIPPYTP.win_fml('WER_%1'[_cfg.funkc],,'OSOBA','NAZWISKO','ICON_BEFORE',
   "{? BIPPYTP.P=BIPPYTP.BIPPYTN().P ||  exec('odpowiedz','icon') || exec('komentarz','icon') ?}"
);
BIPPYTP.win_fml('WER_%1'[_cfg.funkc],,'TRESC',,'ICON_BEFORE',
   "{? BIPPYTP.ZAL || exec('zalacznik','icon') || exec('pusta','#icon') ?}"
);
BIPULP.grp_sel(_grp,BIPPYTP,'WER_%1'[_cfg.funkc],'Komentarze'@,,,,,
   $("{? grp_empty(BIPULP,'"+_cfg.bipulp_wnds.nag_ws+"')
      || '#disable'
      || _cfg:=params_get().cfg;
         _kat_kom:=_cfg.kat_kom;
         _added:={? var_pres('added',_cfg)>0 || _cfg.added || null() ?};
         BIPPYTN.index('BIPKAT');
         BIPPYTN.prefix(_kat_kom,BIPULP.NP_DOK,BIPULP.ZZ_DOK);
         _ref:=null();
         {? BIPPYTN.first()
         || _ref:=BIPPYTN.ref()
         ?};
         BIPPYTP.prefix(_ref);
         {? _added || BIPPYTP.seek(_added) ?}
      ?}
   "),,,,
   _mode
);
BIPPYTN.win_patt('SZUK');

:: Pytania prywatne (zakładka w dolnym panelu)
BIPULP.grp_sel(_grp,BIPPYTN,'WER_ULP','Pytania'@,
   "params_set(_par:=params_get()); grp_disp(BIPPYTP,'WER_%1P'[_par.cfg.funkc])"
   ,,,,
   $("{? grp_empty(BIPULP,'"+_cfg.bipulp_wnds.nag_ws+"')
      || '#disable'
      || _kat_pyt:=params_get().cfg.kat_pyt;
         BIPPYTN.index('BIPKATWO');
         BIPPYTN.prefix(_kat_pyt,BIPULP.NP_DOK,BIPULP.ZZ_DOK)
      ?}
   "),,,,
   _mode
);

BIPPYTP.win_fml('WER_%1P'[_cfg.funkc],,'OSOBA','NAZWISKO','ICON_BEFORE',
   "{? BIPPYTP.P=BIPULP.P || exec('odpowiedz','icon') || exec('pytanie','icon') ?}"
);
BIPPYTP.win_fml('WER_%1P'[_cfg.funkc],,'TRESC',,'ICON_BEFORE',
   "{? BIPPYTP.ZAL || exec('zalacznik','icon') || exec('pusta','#icon') ?}"
);
BIPULP.tab_splt(_grp,,'horizontal','bippytn',6);
BIPULP.grp_sel(_grp,BIPPYTP,'WER_%1P'[_cfg.funkc],,,,,,
   $("{? grp_empty(BIPULP,'"+_cfg.bipulp_wnds.nag_ws+"')
      || '#disable'
      || _cfg:=params_get().cfg;
         _added:={? var_pres('added',_cfg)>0 || _cfg.added || null() ?};
         _ref:={? grp_empty(BIPPYTN,'WER_ULP')
               || null()
               || BIPPYTN.ref()
               ?};
         BIPPYTP.prefix(_ref);
         {? _added || BIPPYTP.seek(_added) ?}
      ?}
   "),,,,
   _mode
);

:: OCENY zakomentowane do czasu pojawienia się na portalu:
::{? _cfg.funkc='ULP'
::||
:::: Oceny (zakładka w dolnym panelu).
::   BIPULP.grp_sel(_grp,BIPULPO,_wer_o,'Oceny'@,
::      $("params_set(params_get()); exec('bipulpo_bd','portal_bip',1); grp_disp(BIPULP,'"+_cfg.bipulp_wnds.nag_ws+"')")
::      ,,,,
::      $("{? grp_empty(BIPULP,'"+_cfg.bipulp_wnds.nag_ws+"')
::         || '#disable'
::         || BIPULPO.index('LINK');
::            BIPULPO.prefix(BIPULP.NP_DOK,BIPULP.ZZ_DOK)
::         ?}
::      "),,,,
::      _mode
::   )
::?};

:: Kryteria uczestnictwa (zakładka w dolnym panelu).
BIPULP.grp_sel(_grp,ZZ_KRYT,'CFG',_cfg.bipulp_wnds.kryt_tab,
   $("params_set(params_get()); grp_disp(BIPULP,'"+_cfg.bipulp_wnds.nag_ws+"')"),,,,
   $("{? grp_empty(BIPULP,'"+_cfg.bipulp_wnds.nag_ws+"')
      || '#disable'
      || _upr:="+$_cfg.upr+";
         {? _upr & _a
         || ZZ_KRYT.dnd_sel('CFG',,'records.ZZ_KRYT',""exec('zz_kryt_dnd','phr_widok')"")
         ?};
         _statKod:=exec('bipulp_status_kod','portal_bip');
         ZZ_KRYT.actions('CFG',{? _statKod<>'EDYCJA' | ~_upr || 'WDPTUYW:WD' || 'Y:Y' ?},,1);
         ZZ_KRYT.prefix(ref_name(ZZ_POM.DOKZ_LNK),ZZ_POM.DOKZ_LNK,ZZ_KRYT.fld_fml('ZZ_TYP','*BLANK')());
         {? _a & _statKod='EDYCJA'
         || _cntx:=obj_new('recs','key');
            _cntx.recs:=0;
            _cntx.key:='';
            ZZ_KRYT.cntx_psh();
            {? ZZ_KRYT.first()
            || {!
               |? _cntx.recs+=1;
                  _cntx.key+='%1|%2|' [ZZ_KRYT.uidref(),$ZZ_KRYT.crc()];
                  ZZ_KRYT.next()
               !}
            ?};
            ZZ_KRYT.cntx_pop();
            params_get().cfg.buf.service:=_cntx
         ?}
      ?}
   "),
   $("{? _a & ~grp_empty(BIPULP,'"+_cfg.bipulp_wnds.nag_ws+"')
      || ZZ_KRYT.dnd_sel('CFG',,'records.ZZ_KRYT',"""");
         {? exec('bipulp_status_kod','portal_bip')='EDYCJA'
         || _cntx:=obj_new('recs','key');
            _cntx.recs:=0;
            _cntx.key:='';
            ZZ_KRYT.cntx_psh();
            {? ZZ_KRYT.first()
            || {!
               |? _cntx.recs+=1;
                  _cntx.key+='%1|%2|' [ZZ_KRYT.uidref(),$ZZ_KRYT.crc()];
                  ZZ_KRYT.next()
               !}
            ?};
            ZZ_KRYT.cntx_pop();
            _buf:=params_get().cfg.buf;
            {? _buf.service.recs<>_cntx.recs | _buf.service.key<>_cntx.key
            || exec('bipodb_update','portal_bip',BIPULP.ZZ_DOK)
            ?};
            obj_del(_buf.service)
         ?}
      ?}
   "),,,
   _mode
);

:: Odbiorcy (zakładka w dolnym panelu).
BIPULP.grp_sel(_grp,BIPODB,_cfg.bipulp_wnds.odb_ws,_cfg.bipulp_wnds.odb_tab,
   $("params_set(params_get()); grp_disp(BIPULP,'"+_cfg.bipulp_wnds.nag_ws+"')"),,,,
   $("{? grp_empty(BIPULP,'"+_cfg.bipulp_wnds.nag_ws+"')
      || '#disable'
      || _statKod:=exec('bipulp_status_kod','portal_bip');
         _p_ref:=params_get().cfg.OCP;
         _kat_ok:=exec('bipkat_ok','portal_bip',BIPULP.BIPKAT,_p_ref);
         _empty:=_ne:='';
         {? _statKod<>'EDYCJA' || _empty+='W' ?};
         {? ~_kat_ok || _ne+='DULGW'; _empty+='DW' ?};
         _ag:='%1:%2'[_ne,_empty];
         BIPODB.prefix(BIPULP.NP_DOK,BIPULP.ZZ_DOK);
         BIPODB.actions_grayed('"+_cfg.bipulp_wnds.odb_ws+"',_ag)
      ?}
   "),,,,
   _mode
);
{? ~_cfg.upr
:: Akcje w oknie WER tabeli BIPODB nie mogą być przywiązane do czynności (bo występują w kilku różnych).
:: Obecnie możemy zatem jedynie wyłączyć je w sposób jak poniżej. Niestety, związane z nimi przyciski nadal pozostaną
:: widoczne, choć wyszarzone.
|| BIPODB.actions('WER','DULGW:DW')
?};

BIPULP.win_sel(_grp);
BIPULP.win_edit(_cfg.bipulp_wnds.nag_edit);
BIPULP.win_patt(_cfg.bipulp_wnds.nag_patt);
1


\bipulp_wer_sb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: "Szukaj - przed" - ustawia kontekst tabeli UD_TYP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ud_typ:=exec('szukaj_ud_typ','schemat','PODZORG');
UD_SKL.index('SYMBOL');
UD_SKL.prefix(_ud_typ)


\bipulp_wer_status_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Formuła akcji "Zmień status" w oknie WER tabeli BIPULP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('bipulp_zmien_status','portal_bip')


\bipulp_statusy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Zwraca tabelę ze statusami ulepszeń lub ogłoszeń
::   WE: _a [STRING]  - Kod funkcjonalności
::       _b [INTEGER] - Czy pobierać wszystkie możliwe statusy? 0 (domyślnie) / 1
::       _c [INTEGER] - Dodatkowo ograniczony zakres statusów?
::                     0 (domyślnie)
::                     1 - dla oceniających
::                     2 - dla autora (autor nie ma uprawnień do weryfikacji kategorii)
::                     3 - dla autora (autor ma uprawnienia do weryfikacji kategorii)
::   WY: tabela ze statusami
::----------------------------------------------------------------------------------------------------------------------
_funkc:={? var_pres('_a')=type_of('') || _a || '' ?};
  _all:={? var_pres('_b')=type_of(0)  || _b || 0  ?};
_scope:={? var_pres('_c')=type_of(0)  || _c || 0  ?};

_tab:=tab_tmp(1
::   wewnętrzny kod statusu
   ,'KOD','STRING[15]','Kod'
::   status
   ,'STATUS','STRING[50]','Status'
::   liczba porządkowa
   ,'LP','INTEGER','Lp'
::   czy nadanie statusu spowoduje że rekord będzie widoczny na portalu
   ,'PORTAL','STRING[1]','Widoczność na portalu'
::   icona dla statusu
   ,'ICON','STRING[50]','Ikona'
);
_moderation:=exec('isModerationEnabled','portal_bip',_funkc);
_ownAccept:=exec('canIAcceptOwnRequests','portal_bip',_funkc);

{? _funkc='ULP'
:: TODO: zmienić - po ustaleniu z SL jakie statusy będa na Portalu
|| _lp:=1;
   {? _all | _scope<>1
   || _tab.LP:=_lp; _tab.KOD:='EDYCJA'; _tab.STATUS:='W trakcie edycji'@;
      _tab.PORTAL:='N'; _tab.ICON:='xwin16.png:42';
      _tab.add(); _lp+=1
   ?};
   {? _all | (_moderation & _scope<>1 & _scope<>3)
   || _tab.LP:=_lp; _tab.KOD:='WERYFIKACJA'; _tab.STATUS:='W trakcje weryfikacji'@;
      _tab.PORTAL:='N'; _tab.ICON:='xwin16.png:16';
      _tab.add(); _lp+=1
   ?};
   {? _all | (~_moderation & _scope<>1) | _scope=0 | _scope=1 | _scope=3
   || _tab.LP:=_lp; _tab.KOD:='GŁOSOWANIE'; _tab.STATUS:='W trakcie głosowania'@;
      _tab.PORTAL:='T';  _tab.ICON:='xwin16.png:20';
      _tab.add(); _lp+=1
   ?};
   {? _all | _scope=0 | _scope=1 | (_scope=3 & _ownAccept)
:: IS!!! Zakomentowany status OCENA do czasu pojawienia się ocen na portalu
   ||
::      _tab.LP:=_lp; _tab.KOD:='OCENA'; _tab.STATUS:='Zamknięte - w trakcie oceny'@;
::      _tab.PORTAL:='T';   _tab.ICON:='xwin16.png:16';
::      _tab.add(); _lp+=1;
      _tab.LP:=_lp; _tab.KOD:='ZAAKCEPTOWANE'; _tab.STATUS:='Zamknięte - zaakceptowane'@;
      _tab.PORTAL:='T'; _tab.ICON:='xwin16.png:1';
      _tab.add(); _lp+=1;
      _tab.LP:=_lp; _tab.KOD:='ODRZUCONE'; _tab.STATUS:='Zamknięte - odrzucone'@;
      _tab.PORTAL:='T'; _tab.ICON:='xwin16.png:8';
      _tab.add()
   ?}
|? _funkc='OGL'
|| _lp:=1;
   {? _all | _scope<>1
   || _tab.LP:=_lp; _tab.KOD:='EDYCJA'; _tab.STATUS:='W trakcie edycji'@;
      _tab.PORTAL:='N'; _tab.ICON:='xwin16.png:42';
      _tab.add(); _lp+=1
   ?};
   {? _all | (_moderation & _scope<>1 & _scope<>3)
   || _tab.LP:=_lp; _tab.KOD:='WERYFIKACJA'; _tab.STATUS:='W trakcie weryfikacji'@;
      _tab.PORTAL:='N'; _tab.ICON:='xwin16.png:16';
      _tab.add(); _lp+=1
   ?};
   {? _all | (~_moderation & _scope<>1) | _scope=0 | _scope=1 | _scope=3
   || _tab.LP:=_lp; _tab.KOD:='AKTYWNE'; _tab.STATUS:='Aktywne'@;
      _tab.PORTAL:='T'; _tab.ICON:='xwin16.png:1';
      _tab.add(); _lp+=1
   ?};
   {? _all | _scope=0 | _scope=1 | (_scope=3 & _ownAccept)
   || _tab.LP:=_lp; _tab.KOD:='ODRZUCONE'; _tab.STATUS:='Odrzucone'@;
      _tab.PORTAL:='N'; _tab.ICON:='xwin16.png:8';
      _tab.add(); _lp+=1;
      _tab.LP:=_lp; _tab.KOD:='ARCHIWALNE'; _tab.STATUS:='Archiwalne'@;
      _tab.PORTAL:='T'; _tab.ICON:='xwin16.png:157';
      _tab.add()
   ?}
?};
_tab


\bipulp_icon_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Ikona symbolizująca status ulepszenia
::   WE: _a - status (BIPULP.STATUS)
::----------------------------------------------------------------------------------------------------------------------
_status:={? var_pres('_a')=type_of('') || _a || '~~' ?};
_funkc:=params_get().cfg.funkc;
_tab:=exec('bipulp_statusy','portal_bip',_funkc,1);
{? _tab.find_tab(,'STATUS',,'=',_status)
|| _tab.ICON
|| ''
?}


\bipulp_zmien_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Funkcja umożliwiająca zmianę statusu ulepszenia
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_akcje:=exec('ulp_ogl_akcje','portal_bip');
{? _akcje.zmien_status
|| _funkc:=_par.cfg.funkc;
   _p_ref:=_par.cfg.OCP;
:: sprawdzenie czy pracownik może "obsługiwać" tę kategorię ulepszeń / ogłoszeń
   _kat_ok:=exec('bipkat_ok','portal_bip',BIPULP.BIPKAT,_p_ref);
   _osoba:=exec('FindAndGet','#table',P,_p_ref,,"P.OSOBA",null());
   P.cntx_psh();
   _scope:={? BIPULP.P().OSOBA=_osoba || {? _kat_ok || 3 || 2 ?} || 1 ?};
   P.cntx_pop();
   _tab:=exec('bipulp_statusy','portal_bip',_funkc,,_scope);
   _tab.cntx_psh();
   _ndx:=_tab.ndx_tmp('',1,'LP',,0);
   _tab.index(_ndx);
   _wer:=_tab.mk_sel('Wybierz status operacji'@ ,,,'#bipulpstatus',,,_tab.size()+1);
   _tab.win_fld(_wer,,'LP',,,-4,,,'');
   _tab.win_fld(_wer,,'STATUS',,,30,,,,,'Status ulepszenia'@);
   _tab.win_fld(_wer,,'PORTAL',,,40,,,'Widoczne na portalu dla wszystkich'@,,,2,,"'T'","'N'");
   _tab.win_act(_wer,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
   _tab.win_fml(_wer,,'STATUS',,'ICON_BEFORE',"params_exec('bipulp_icon_status','portal_bip',cur_tab(1,1).STATUS)",2);
:: ukrywamy pola techniczne
   _tab.fld_attr('KOD',2);
   _tab.fld_attr('ICON',2);
   _tab.win_sel(_wer);
:: spróbuj wyszukać bieżący status w tabeli statusów
   _kod:='';
   {? _tab.find_tab(,'STATUS',,'=',BIPULP.STATUS) || _kod:=_tab.KOD ?};
   {? _tab.select(,1,-1)
::    Sprawdzenie okresu retencji:
   || _rtn:=exec('retentionAdsImprovement','portal_lib');
::    Sprawdzenie czy są odbiorcy aktywowowanego ogłoszenia:
      {? BIPULP.LODB=0 & _tab.KOD='AKTYWNE'
      || FUN.emsg('Żaden z pracowników nie spełnia podanych kryteriów.'@+'\n'+
                  'Brak odbiorców %1.'@[{? _funkc='OGL' || 'ogłoszenia'@ |? _funkc='ULP' || 'ulepszenia'@ || '' ?}]
                  +'\n'+'Nie zmieniono statusu.'@)
      |? _kod='GŁOSOWANIE' & BIPULP.PKT>0 & (_tab.KOD='EDYCJA' | _tab.KOD='WERYFIKACJA')
      || FUN.emsg('Na wybrane ulepszenie zostały oddane już głosy.\n'
                  'Zmiana statusu ulepszenia na: "%1" nie jest możliwa.'@[_tab.STATUS])
      |? _tab.PORTAL='T' & _rtn<>0 &
         (_funkc<>'OGL' | (BIPULP.DT2~1)<>0) &
         ({? BIPULP.DT2>BIPULP.DT3 || BIPULP.DT2~1 || BIPULP.DT3~1 ?})<((date()~1)-_rtn)
      || FUN.emsg('%1 starsze niż zakładany okres retencji.\nZmiana statusu na: "%2" nie jest możliwa.'@
                  [{? _funkc='OGL' || 'Ogłoszenie'@ || 'Ulepszenie'@ ?},_tab.STATUS])
      || BIPULP.STATUS:=_tab.STATUS;
::       Podczytanie pola SYS_MEMO w celu poprawnej walidacji wypełnienia pola BIPULP.OPIS:
         BIPULP.memo_get(,'OPIS');
         BIPULP.put();
         {? _funkc='OGL' * BIPULP.f_active()>0 || BIPULP.f_rfresh() ?}
      ?}
   ?};
   _tab.cntx_pop();
   _tab.ndx_drop(_ndx)
||
   _txt:={? _akcje.idput_changed || 'Rekord został wcześniej zmodyfikowany przez innego użytkownika.'@ || '' ?} +
         '\n' + 'Nie można zmienić statusu rekordu.'@;
   FUN.info(_txt)
?}


\bipulp_status_kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Zwraca kod statusu o podanej nazwie, lub dla danego ulepszenia. W przypadku braku parametrów wejściowych
::       zakłada się, że jest odpowiednio ustawiony kontekst tabeli BIPULP.
::   WE: _a [STRING]  - Kod funkcjonalności
::       _b [STRING]  - nazwa statusu
::      [_c][_BIPULP] - wskazanie ulepszenia
::   WY: _kod [STRING] - kod statusu, ciąg pusty jeśli nie znaleziono
::----------------------------------------------------------------------------------------------------------------------
_funkc:={? var_pres('_a')=type_of('') || _a || '' ?};
_nazwa:={? var_pres('_b')=type_of('') || _b || '' ?};
_kod:='';
_pop:=0;

{? ~+(_funkc+_nazwa)
|| {? var_pres('_c')=30
   || _pop:=1;
      BIPULP.cntx_psh();
      BIPULP.seek(_c,,1)
   ?};
   BIPKAT.cntx_psh();
   _funkc:=BIPULP.BIPKAT().FUNKC;
   BIPKAT.cntx_pop();
   _nazwa:=BIPULP.STATUS
?};

_TAB:=exec('bipulp_statusy','portal_bip',_funkc,1);
{? _TAB.first() & _TAB.find_tab(,'STATUS',,'=',_nazwa)
|| _kod:=_TAB.KOD
?};

{? _pop
|| BIPULP.cntx_pop()
?};

_kod


\bipulp_status_nazwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Zwraca nazwę statusu o podym kodzie.
::   WE: _a [STRING]  - Kod statusu
::       _b [STRING]  - Kod funkcjonalności
::   WY: _naz [STRING] - nazwa statusu, ciąg pusty jeśli nie znaleziono
::----------------------------------------------------------------------------------------------------------------------
_kod:={? var_pres('_a')=type_of('') || _a || '' ?};
_funkc:={? var_pres('_b')=type_of('') || _b || '' ?};
_naz:='';

_TAB:=exec('bipulp_statusy','portal_bip',_funkc,1);
{? +_kod & _TAB.first() & _TAB.find_key(_kod)
|| _naz:=_TAB.STATUS
?};

_naz


\bipulp_zdjecie_pt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Formuła na wzorzec pola ZDJECIE tabeli BIPULP
::----------------------------------------------------------------------------------------------------------------------
'Pliki graficzne;*.bmp;*.jpg;*.jpeg;*.png'


\ulp_ogl_akcje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Funkcja dla bieżącego rekordu tabeli BIPULP (ulepszenia) określa dostępność akcji w oknie wertowania.
::   WE: _a [STRING]    - funkcjonalność
::       _b [REFERENCE] - wskazanie na pracownika obsługującego ulepszenia / ogłoszenia
::   WY: Tablica z elementami nazwanymi.
::----------------------------------------------------------------------------------------------------------------------
_akcje:=obj_new('dolacz','popraw','usun','zmien_status','data_realizacji','archiwum','idput_changed');
:: Wstępnie - wszystkie akcje są niedostępne.
{! _lp:=1 .. obj_len(_akcje) |! _akcje[_lp]:=0 !};
_idput:=BIPULP.idput_value();

{? BIPULP.get()
|| _akcje.idput_changed:=_idput<>BIPULP.idput_value();
   _funkc:=params_get().cfg.funkc;
   _p_ref:=params_get().cfg.OCP;
:: podczytaliśmy rekord więc włączamy dostępność wszystkich akcji
   {! _lp:=1 .. obj_len(_akcje) |! _akcje[_lp]:=1 !};
:: sprawdzenie czy pracownik może "obsługiwać" tę kategorię ulepszeń / ogłoszeń
   _kat_ok:=exec('bipkat_ok','portal_bip',BIPULP.BIPKAT,_p_ref);
   _osoba:=exec('FindAndGet','#table',P,_p_ref,,"P.OSOBA",null());
   P.cntx_psh();
   _own:=BIPULP.P().OSOBA=_osoba;
   P.cntx_pop();
   {? ~_own || _akcje.usun:=_akcje.popraw:=0 ?};
   _ownAccept:=exec('canIAcceptOwnRequests','portal_bip',_funkc);
   _own2:=_own & ~_ownAccept;
   {? ~_kat_ok & ~_own || _akcje.zmien_status:=0 ?};
:: wyszukujemy status "Zamknięte - zaakceptowane"
   _tab:=exec('bipulp_statusy','portal_bip',_funkc,1);
   {? _tab.find_tab(,'KOD',,'=','ZAAKCEPTOWANE') & BIPULP.STATUS<>_tab.STATUS | ~_kat_ok | _own2
   || _akcje.data_realizacji:=0
   ?};
   {? _tab.find_tab(,'STATUS',,'=',BIPULP.STATUS)
   || {? _funkc='ULP' & _tab.KOD<>'EDYCJA' & _tab.KOD<>'WERYFIKACJA' |
         _funkc='OGL' & _tab.KOD<>'EDYCJA' & _tab.KOD<>'WERYFIKACJA' & _tab.KOD<>'AKTYWNE'
      || _akcje.usun:=_akcje.popraw:=0
      ?};
      {? _funkc='ULP'
      || {? _own2 & ((_kat_ok & _tab.KOD<>'EDYCJA' & _tab.KOD<>'GŁOSOWANIE') |
                    (~_kat_ok & _tab.KOD<>'EDYCJA' & _tab.KOD<>'WERYFIKACJA'))
            |
            ~_own & _tab.KOD='EDYCJA'
         || _akcje.zmien_status:=0
         ?}
      |? _funkc='OGL'
      || {? _own2 & ((_kat_ok & _tab.KOD<>'EDYCJA' & _tab.KOD<>'AKTYWNE') |
                    (~_kat_ok & _tab.KOD<>'EDYCJA' & _tab.KOD<>'WERYFIKACJA'))
            |
            ~_own & _tab.KOD='EDYCJA'
         || _akcje.zmien_status:=0
         ?}
      ?}
   ?}
?};
_akcje


\bipulp_wer_data_real_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła na ustawienie daty realizacji ulepszenia
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_akcje:=exec('ulp_ogl_akcje','portal_bip');
{? _akcje.data_realizacji
|| _data:=BIPULP.DT2;
   _valid:=$("
         _result:='';
         _val:=cur_tab(1,1).VAL;
         {? _val=#0
         || FUN.info('"+'Planowana data realizacji nie może być datą zerową.'@+"');
            _result:='VAL'
         |? _val<BIPULP.DT1
         || FUN.info('"+
            'Planowana data realizacji nie może być wcześniejsza niż data zgłoszenia (%1).'@[$BIPULP.DT1]+"');
            _result:='VAL'
         ?};
         _result
   ");
   _data:=exec('edit_date','#edit',_data,'Planowana data realizacji'@,_valid,'Ulepszenie'@,
               'Planowana data realizacji ulepszenia'@);

   {? type_of(_data)=type_of(date())
   || BIPULP.DT2:=_data;
::    Podczytanie pola SYS_MEMO w celu poprawnej walidacji wypełnienia pola BIPULP.OPIS:
      BIPULP.memo_get(,'OPIS');
      BIPULP.put()
   ?}
|| _txt:={? _akcje.idput_changed || 'Rekord został wcześniej zmodyfikowany przez innego użytkownika.'@ || '' ?} +
         '\n' + 'Nie można zmienić daty realizacji.'@;
   FUN.info(_txt)
?};
1


\bipulp_fld_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wartość początkowa dla pól tabeli BIPULP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_funkc:={? type_of(_par)=117 & var_pres('cfg',_par)>0 || _par.cfg.funkc || '' ?};
_fld:=cur_afld();

{? _fld='STATUS'
|| {? _funkc='ULP' | _funkc='OGL'
   || _tab:=exec('bipulp_statusy','portal_bip',_funkc);
      {? _tab.find_tab(,'KOD',,'=','EDYCJA') || _tab.STATUS || '' ?}
   || ''
   ?}
|? _fld='OSOBA' | _fld='WYDZIAL' | _fld='ST' | _fld='CP' | _fld='F_ZATR'
|| ($('P.'+_fld))()
|? _fld='PKT' & _funkc='OGL'
|| 1
|? _fld='DT2'
|| {? _funkc='OGL' || exec('ogl_data_w','portal_bip') || #0 ?}
|? _fld='DT3'
|| #0
|? _fld='GD2'
|| *0
|? _fld='GD3'
|| *0
?}


\bipulp_add_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: "Dołącz - przed"
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_p_ref:=params_get().cfg.OCP;
P.seek(_p_ref)


\bipulp_add_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: "Dołącz - po"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_funkc:=params_get().cfg.funkc;
{? _funkc='OGL' * BIPULP.f_active()>0 || BIPULP.f_rfresh() ?}


\bipulp_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: "Popraw - przed"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_akcje:=exec('ulp_ogl_akcje','portal_bip');
{? ~_akcje.popraw
|| _txt:={? _akcje.idput_changed || 'Rekord został wcześniej zmodyfikowany przez innego użytkownika.'@ || '' ?} +
         '\n' + 'Nie można poprawić rekordu.'@;
   FUN.info(_txt)
?};
_akcje.popraw


\bipulp_popraw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: "Popraw - po"
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_funkc:=params_get().cfg.funkc;
_p_ref:=params_get().cfg.OCP;
_moderation:=exec('isModerationEnabled','portal_bip',_funkc);
{? _moderation
|| _tab:=exec('bipulp_statusy','portal_bip',_funkc,1);
   _tab.find_tab(,'KOD',,'=','EDYCJA');
   _edycja:=BIPULP.STATUS=_tab.STATUS;
:: sprawdzenie czy pracownik może "obsługiwać" tę kategorię ulepszeń / ogłoszeń
   _kat_ok:=exec('bipkat_ok','portal_bip',BIPULP.BIPKAT,_p_ref);
   {? ~_edycja & ~_kat_ok & _tab.find_tab(,'KOD',,'=','WERYFIKACJA')
   || BIPULP.STATUS:=_tab.STATUS;
      BIPULP.put()
   ?}
?};
{? _funkc='OGL' * BIPULP.f_active()>0 || BIPULP.f_rfresh() ?}


\bipulp_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: "Usuń - przed"
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_akcje:=exec('ulp_ogl_akcje','portal_bip');
{? ~_akcje.usun
|| _txt:={? _akcje.idput_changed || 'Rekord został wcześniej zmodyfikowany przez innego użytkownika.'@ || '' ?} +
         '\n' + 'Nie można usunąć rekordu.'@;
   FUN.info(_txt)
?};
_akcje.usun


\bipulp_bipkat_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Obsługa akcji "Przed redagowaniem" dla pola BIPULP.BIPKAT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_funkc:=params_get().cfg.funkc;
BIPKAT.prefix();
BIPKAT.f_clear();
_where:="BIPKAT.FIRMA=:_a and BIPKAT.FUNKC=':_b'"+'';
BIPKAT.f_set('KOD',,_where,exec('ref_firma','ustawienia'),_funkc)


\bipulp_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Obsługa akcji "Rekord - przed" w oknach wertowania tabeli BIPULP.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_funkc:=_par.cfg.funkc;
_p_ref:=_par.cfg.OCP;
:: sprawdzenie czy pracownik może "obsługiwać" tę kategorię ulepszeń / ogłoszeń
_kat_ok:=exec('bipkat_ok','portal_bip',BIPULP.BIPKAT,_p_ref);
{? _a
|| _ag:='';
   _akcje:=exec('ulp_ogl_akcje','portal_bip');
   {? ~_akcje.usun || _ag+='U' ?};
   {? ~_akcje.popraw || _ag+='P' ?};
   {? ~_akcje.zmien_status || _ag+='T' ?};
   {? ~_akcje.data_realizacji || _ag+='R' ?};
   BIPULP.actions_grayed(cur_win(1,1),_ag)
?};
{? _kat_ok
|| Color.fnd_kol('BIPULP#01#01')
|| Color.fnd_kol('BIPULP#01#02')
?}


\bipulp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Obsługa akcji "Rekord - po" w oknie WER tabeli BIPULP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bipulp_chk','portal_bip',-menu_txt()='popraw')


\bipulp_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli BIPULP.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::  TAG: <TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;

{? BIPULP.BIPKAT=null()
|| return(__CHK.validate(BIPULP,"_a.record(_b,,'BIPKAT')"))
?};

BIPKAT.cntx_psh();
_funkc:=BIPULP.BIPKAT().FUNKC;
BIPKAT.cntx_pop();

_txt:=obj_new('TYTUL','DT1','GD1','DT2','GD2','OPIS');
_txt.TYTUL:='Tytuł'@;
_txt.DT1:='Data zgłoszenia'@;
_txt.GD1:='Godzina zgłoszenia'@;
_txt.DT2:='Data realizacji'@;
_txt.GD2:='Godzina realizacji'@;
_txt.OPIS:='Opis'@;

__CHK.validate(BIPULP,
:: Pola redagowalne (w podziale na obsługiwaną funkcjonalność).
   {? _funkc='ULP'
   || $("_ret:=_a.record2(_b,'TYTUL','"+_txt.TYTUL+"','DT1','"+_txt.DT1+"','GD1','"+_txt.GD1+"','OPIS','"+_txt.OPIS+"');
         {? _ret<>''
         || _ret
         |? _b.DT2<>#0 & _b.DT2<_b.DT1
         || _a.err_incorrect('"+_txt.DT2+"',
               '"+'Data w polu "%1" nie może być wcześniejsza niż data w polu "%2".'@ [_txt.DT2,_txt.DT1]+"'
            );
            'DT2'
         |? _b.DT1=_b.DT2 & _b.GD2<_b.GD1
         || __CHK.err_incorrect('"+_txt.GD2+"',
               '"+'Godzina w polu "%1" nie może być wcześniejsza niż godzina w polu "%2".'@ [_txt.GD2,_txt.GD1]+"'
            );
            'GD2'
         || 1
         ?}
      ")
   |? _funkc='OGL'
   || $("_ret:=_a.record2(_b,'TYTUL','"+_txt.TYTUL+"','DT1','"+_txt.DT1+"','GD1','"+_txt.GD1+"','OPIS','"+_txt.OPIS+"');
         {? _ret<>''
         || _ret
         |? _b.DT2<>#0 & _b.DT2<_b.DT1
         || _a.err_incorrect('"+_txt.DT2+"',
               '"+'Data w polu "%1" nie może być wcześniejsza niż data w polu "%2".'@ [_txt.DT2,_txt.DT1]+"'
            );
            'DT2'
         |? _b.DT1=_b.DT2 & _b.GD2<_b.GD1
         || _a.err_incorrect('"+_txt.GD2+"',
               '"+'Godzina w polu "%1" nie może być wcześniejsza niż godzina w polu "%2".'@ [_txt.GD2,_txt.GD1]+"'
            );
            'GD2'
         || 1
         ?}
      ")
   || _stack:=form_stack();
      _txt:='(\\\\%1/%2.fml)' [_stack.name,_stack.file];
      $("undo('Brak kastomizacji w formule sprawdzającej wypełnienie pól tabeli %1.'@ ['BIPULP']+'\n"+_txt+"')")
   ?},
:: Unikalność.
   $("_a.index(_b,"+$_put+")")
)


\bipulp_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BIPULP.
::   WE:
::   WY:
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
::  hash('')='da39a3ee5e6b4b0d3255bfef95601890afd80709'
BIPULP.HASH:='da39a3ee5e6b4b0d3255bfef95601890afd80709';

:: Ustalenie autora dla ZZ_DOK:
{? BIPULP.P<>null()
|| P.cntx_psh();
   P.prefix();
   OSOBA.cntx_psh();
   OSOBA.prefix();
   _autor:='%1 %2'[BIPULP.P().OSOBA().PIERWSZE,OSOBA.NAZWISKO];
   OSOBA.cntx_pop();
   P.cntx_pop()
|| _autor:=''
?};

exec('dok_addb','phr_tab',BIPULP,_autor) & exec('bipulp_chk','portal_bip',0) & exec('bipulp_modb','portal_bip')


\bipulp_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Dołącz - po" dla tabeli BIPULP.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('last_mod_set','#table',BIPULP);
   {? exec('dok_adda','phr_tab',BIPULP,_a)
::    dodajemy zawsze jeden "publiczny" nagłówek wątku do obsługi komentarzy
   || BIPKAT.cntx_psh();
      BIPKAT.prefix();
      {? BIPULP.BIPKAT().FUNKC='ULP'
      || _ulp_kom:=exec('bipkat_ulp_kom','portal_bip')
      || _ulp_kom:=exec('bipkat_ogl_kom','portal_bip')
      ?};
      BIPKAT.cntx_pop();
      _tytul:='Komentarz';
      {? ~exec('bippytn_exist','portal_bip',BIPULP.P,_ulp_kom,_tytul,BIPULP.ZZ_DOK)
      || exec('bippytn_add','portal_bip',BIPULP.P,_ulp_kom,_tytul,BIPULP.ZZ_DOK)
      ?}
   ?}
?};
~~


\bipulp_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BIPULP.
::   WE:
::   WY:
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
exec('dok_putb','phr_tab',BIPULP) & exec('bipulp_chk','portal_bip',1) & exec('bipulp_modb','portal_bip')


\bipulp_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli BIPULP.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1 & exec('last_mod_set','#table',BIPULP) & exec('dok_puta','phr_tab',BIPULP,_a)
|| {? bfld('STATUS')<>BIPULP.STATUS |
::    Jeżeli zmienił się sttus lub zmieniły się "parametry" przechowywane również w BIPODB ...
      bfld('DT1')<>BIPULP.DT1 | bfld('GD1')<>BIPULP.GD1 |
      bfld('DT2')<>BIPULP.DT2 | bfld('GD2')<>BIPULP.GD2 |
      bfld('BIPKAT')<>BIPULP.BIPKAT | bfld('TYTUL')<>BIPULP.TYTUL
::    ... to aktualizujemy listę odbiorców.
   || exec('bipodb_update','portal_bip',BIPULP.ZZ_DOK,1)
   ?};
:: Zweryfikujmy liczbę odbiorców.
   _lodb:=exec('bipodb_licz','portal_bip',BIPULP.ZZ_DOK);
   {? BIPULP.LODB<>_lodb
   || BIPULP.LODB:=_lodb;
      BIPULP.put()
   ?};
   {? (BIPULP.PORTAL<>'T' & bfld('PORTAL')<>BIPULP.PORTAL) |
::    Jeżeli zmienił się znacznik widoczności na portalu na 'N' lub zmieniły się załączniki ...
      bfld('HASH')<>BIPULP.HASH
::    ... to przeputowujemy to co ma zostać skasowane:
   || exec('idput_ndx','#table',BIPODB,'LINK',BIPULP.NP_DOK,BIPULP.ZZ_DOK);
      exec('idput_ndx','#table',BIPULPG,'LINK',BIPULP.NP_DOK,BIPULP.ZZ_DOK)
   ?}
?};
~~


\bipulp_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli BIPULP.
::   WE:
::   WY:
::  TAG: <TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
{? BIPULP.P
|| BIPKAT.cntx_psh();
   P.cntx_psh();
   P.prefix();
   BIPULP.P();
   BIPULP.OSOBA:=P.OSOBA;
   BIPULP.WYDZIAL:=P.WYDZIAL;
   BIPULP.ST:=P.ST;
   BIPULP.CP:=P.CP;
   BIPULP.F_ZATR:=P.F_ZATR;
   {? +form(BIPULP.STATUS)>0
   || _tab:=exec('bipulp_statusy','portal_bip',BIPULP.BIPKAT().FUNKC,1);
      {? _tab.find_tab(,'STATUS',,'=',BIPULP.STATUS)
      || BIPULP.PORTAL:=_tab.PORTAL
      ?}
   ?};
   P.cntx_pop();
   BIPKAT.cntx_pop()
|| BIPULP.OSOBA:=null();
   BIPULP.WYDZIAL:=null();
   BIPULP.ST:=null();
   BIPULP.CP:=null();
   BIPULP.F_ZATR:=null();
   BIPULP.PORTAL:='N'
?};
exec('bip_firma_modb','portal_bip',BIPULP)


\bipulp_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Usuń - przed" dla tabeli BIPULP.
::   WE:
::   WY:
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
{? exec('add','#bulk',BIPULP,'del',$BIPULP.ZZ_DOK)
|| exec('del_ndx','#table',BIPULPG,'LINK',BIPULP.NP_DOK,BIPULP.ZZ_DOK) &
   exec('del_ndx','#table',BIPULPO,'LINK',BIPULP.NP_DOK,BIPULP.ZZ_DOK) &
   exec('del_ndx','#table',BIPPYTN,'LINK',BIPULP.NP_DOK,BIPULP.ZZ_DOK) &
   exec('del_ndx','#table',BIPODB,'LINK',BIPULP.NP_DOK,BIPULP.ZZ_DOK) &
   exec('del','#bulk',BIPULP,'del',$BIPULP.ZZ_DOK)
?}


\bipulp_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Usuń - po" dla tabeli BIPULP.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('last_mod_set','#table',BIPULP);
   exec('del_ndx','#table',ZZ_KRYT,'UNIQUE',bfld('NP_DOK'),bfld('ZZ_DOK')) &
   exec('dok_dela','phr_tab',_a)
?};
~~


\bipulp_pkt_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Aktualizuje liczbę punktów (oddanych głosów) dla ulepszenia. Formuła wykorzystywana w triggerach
::   WE:
::   WY:
::  TAG: <TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
BIPULP.cntx_psh();
BIPULP.index('ZZ_DOK');
BIPULP.prefix(BIPULPG.NP_DOK,BIPULPG.ZZ_LINK);
{? BIPULP.first()
|| BIPULPG.cntx_psh();
   BIPULPG.index('LINK');
   BIPULPG.prefix(BIPULP.NP_DOK,BIPULP.ZZ_DOK);
   BIPULP.PKT:=BIPULPG.size();
   BIPULPG.cntx_pop();
:: Podczytanie pola SYS_MEMO w celu poprawnej walidacji wypełnienia pola BIPULP.OPIS:
   BIPULP.memo_get(,'OPIS');
   BIPULP.put()
?};
BIPULP.cntx_pop()


\bipulp_ocena_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Aktualizuje ocenę dla ulepszenia. Formuła wykorzystywana w triggerach
::   WE:
::   WY:
::  TAG: <TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
BIPULP.cntx_psh();
BIPULP.index('ZZ_DOK');
BIPULP.prefix(BIPULPO.NP_DOK,BIPULPO.ZZ_LINK);
{? BIPULP.first()
|| _ocena:=0;
   _size:=0;
   BIPULPO.cntx_psh();
   BIPULPO.index('LINK');
   BIPULPO.prefix(BIPULP.NP_DOK,BIPULP.ZZ_DOK);
   {? BIPULPO.first()
   || _size:=BIPULPO.size();
      {!
      |? _ocena+=BIPULPO.OCENA;
         BIPULPO.next()
      !}
   ?};
   BIPULPO.cntx_pop();
   BIPULP.OCENA:={? _size>0 || _ocena/_size || 0 ?};
:: Podczytanie pola SYS_MEMO w celu poprawnej walidacji wypełnienia pola BIPULP.OPIS:
   BIPULP.memo_get(,'OPIS');
   BIPULP.put()
?};
BIPULP.cntx_pop()


\bipulpg_wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Dodawanie głosów w imieniu pracowników - TODO: funkcja techniczna do usunięcia przed emisją!!!
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_win:=BIPULPG.mk_sel('Głosowanie',,0,'identbipulpg',,,,,'U');
BIPULPG.win_fld(_win,,'P','T',,,,,,,MS.comment(P,'T'));
BIPULPG.win_fld(_win,,'OSOBA','NAZWISKO',,,,,,,MS.comment(OSOBA,'NAZWISKO'));
BIPULPG.win_fld(_win,,'OSOBA','PIERWSZE',,,,,,,MS.comment(OSOBA,'PIERWSZE'));
BIPULPG.win_fld(_win,,'DATA',,,,,,,,MS.comment(BIPULPG,'DATA'));
BIPULPG.win_fld(_win,,'GODZ',,,,,,,,MS.comment(BIPULPG,'GODZ'));
_add:="
   _p_ref:=params_get().cfg.OCP;
   P.cntx_psh();
   {? P.seek(_p_ref)
   || BIPULPG.blank(1);
      BIPULPG.ZZ_LINK:=BIPULP.ZZ_DOK;
      BIPULPG.P:=P.ref();
      BIPULPG.DATA:=date();
      BIPULPG.GODZ:=time();
      BIPULPG.add()
   ?};
   P.cntx_pop()
";
_task_id:='POR_BIP_RULP';
BIPULPG.win_act(_win,1,'Formuła','Dołącz',,,_add);
task_attach(_task_id);
BIPULPG.win_act(_win,0,'Formuła','Dołącz',,,_add);
task_attach(_task_id);
BIPULPG.win_act(_win,0,'Usuń');
task_attach(_task_id);
BIPULPG.win_act(_win,,'Rekord',,,,
   "params_set(params_get());
    exec('bipulpg_bd','portal_bip',_a)
   "
);
BIPULPG.win_act(_win,1,'Okienko',,,,"params_set(params_get());exec('bipulpg_wer_ob','portal_bip')");
BIPULPG.win_btn(_win,'text=%1' ['Dołącz'@],'menu:D');
BIPULPG.win_btn(_win,'text=%1' ['Usuń'@],'menu:U',,,,,,'noempty');
_win


\bipulpg_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie wertowania tabeli BIPULPG.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _cfg:=params_get().cfg;
   _p_ref:={? var_pres('OCP',_cfg)=type_of(null()) || _cfg.OCP || null() ?};
:: wyszukujemy status "Zamknięte - w trakcie oceny"
   _tab:=exec('bipulp_statusy','portal_bip',_cfg.funkc);
:: domyślnie wyłączamy wszystkie akcje
   _ne:='DU';
   _empty:='D';

   P.cntx_psh();
   P.prefix();
   {? _p_ref & P.seek(_p_ref)
   || _odb_ok:=exec('bipodb_licz','portal_bip',BIPULP.ZZ_DOK,0,_p_ref)>0;
      {? _odb_ok & _tab.find_tab(,'KOD',,'=','GŁOSOWANIE') & BIPULP.STATUS=_tab.STATUS
      || _my_own:=BIPULP.P=_p_ref;
         BIPULPG.cntx_psh();
         BIPULPG.index('LINK');
         BIPULPG.prefix(BIPULP.NP_DOK,BIPULP.ZZ_DOK,_p_ref);
::       sprawdzamy czy osoba oceniająca już oddała głos
         {? BIPULPG.size()>0 | _my_own
         || _ne:='D'; _empty:='D'
         || _ne:=''; _empty:=''
         ?};
         BIPULPG.cntx_pop();
         {? BIPULPG.P<>_p_ref
         || _ne+='U'
         ?}
      ?}
   ?};
   P.cntx_pop();
   _ag:='%1:%2'[_ne,_empty];
   BIPULPG.actions_grayed(cur_win(1,1),_ag)
?};
~~


\bipulpg_wer_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa akcji "Okienko - przed" w oknie WER tabeli BIPPYTG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=params_get().cfg;
_p_ref:={? var_pres('OCP',_cfg)=type_of(null()) || _cfg.OCP || null() ?};
_ne:='';_empty:='D';

:: czy jesteśmy odbiorcą
_odb_ok:=exec('bipodb_licz','portal_bip',BIPULP.ZZ_DOK,0,_p_ref)>0;

:: czy status ok
_tab:=exec('bipulp_statusy','portal_bip','ULP');
_tab.find_tab(,'STATUS',,'=',BIPULP.STATUS);
_stat_ok:=_tab.KOD='GŁOSOWANIE';
{? _stat_ok & _odb_ok || _empty:='' ?};

P.cntx_psh();
P.prefix();
{? _p_ref & P.seek(_p_ref)
|| {? BIPULP.P=_p_ref
   || _empty:='D'
   ?}
?};
P.cntx_pop();
_ag:='%1:%2'[_ne,_empty];
BIPULPG.actions_grayed(cur_win(1,1),_ag)


\bipulpg_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BIPULPG.
::   WE:
::   WY:
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
exec('bipulpg_chk','portal_bip',0) & exec('bipulpg_modb','portal_bip')


\bipulpg_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Dołącz - po" dla tabeli BIPULPG.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('bipulp_pkt_upd','portal_bip')
?};
~~


\bipulpg_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli BIPULPG.
::   WE:
::   WY:
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
exec('bipulpg_chk','portal_bip',1) & exec('bipulpg_modb','portal_bip')


\bipulpg_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli BIPULPG.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('bipulp_pkt_upd','portal_bip')
?};
~~


\bipulpg_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Usuń - po" dla tabeli BIPULPG.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| {? ~exec('get','#bulk',BIPULP,'del',$bfld('ZZ_LINK'))
   || exec('bipulp_pkt_upd','portal_bip')
   ?}
?};
~~


\bipulpg_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli BIPULPG.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw
::  TAG: <TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;

__CHK.validate(BIPULPG,
:: Pola redagowalne
   $("_a.table(_b,"+$_put+",,'DATA','GODZ')"),
:: Pola nieredagowalne
   "_a.record(_b,,'ZZ_LINK','P')"
)


\bipulpg_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli BIPULPG.
::   WE:
::   WY:
::  TAG: <TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
{? BIPULPG.ZZ_LINK
|| BIPULPG.NP_DOK:=ref_name(BIPULPG.ZZ_LINK)
?};
{? BIPULPG.P
|| P.cntx_psh();
   P.prefix();
   BIPULPG.P();
   BIPULPG.OSOBA:=P.OSOBA;
   BIPULPG.WYDZIAL:=P.WYDZIAL;
   BIPULPG.ST:=P.ST;
   BIPULPG.CP:=P.CP;
   BIPULPG.F_ZATR:=P.F_ZATR;
   P.cntx_pop()
?};
1


\bipulpo_wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Okno ocen
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_win:=BIPULPO.mk_sel('Oceny',,0,'identbipulpo',,,,,'U');
BIPULPO.win_fld(_win,,'DATA');
BIPULPO.win_fld(_win,,'GODZ');
BIPULPO.win_fld(_win,,'OCENA');
BIPULPO.win_fld(_win,,'P','T');
BIPULPO.win_fld(_win,,'OSOBA','NAZWISKO');
BIPULPO.win_fld(_win,,'OSOBA','PIERWSZE');

_edit:="
   _cfg:=params_get().cfg;
   _bippyto:={? var_pres('BIPPYTO',_cfg)=type_of(null()) || _cfg.BIPPYTO || null() ?};
   _ok:=0;
   P.cntx_psh();
   BIPPYTO.cntx_psh();
   BIPPYTO.prefix();
   {? _bippyto & BIPPYTO.seek(_bippyto)
   || BIPULPO.win_edit('RED');
      {? BIPULPO.edit(\"
            {? BIPULPO.OCENA<0
            || FUN.emsg('Ocena nie może byc mniejsza od 0.');
               return('OCENA')
            ?};
            1
         \")
      ||
         BIPULPO.ZZ_LINK:=BIPULP.ZZ_DOK;
         BIPULPO.NP_DOK:=BIPULP.NP_DOK;
         BIPULPO.P:=BIPPYTO.P;
         BIPULPO.BIPPYTO:=BIPPYTO.ref();
         BIPULPO.DATA:=date();
         BIPULPO.GODZ:=time();
         _ok:=1
      ?}
   ?};
   BIPPYTO.cntx_pop();
   P.cntx_pop();
";

_add:=$("BIPULPO.blank();"+_edit+"{? _ok || BIPULPO.add() ?}");
_put:=$(_edit+"{? _ok || BIPULPO.put() ?}");
_del:="";

_task_id:='POR_BIP_RULP';
BIPULPO.win_act(_win,1,'Formuła','Dołącz',,,_add);
task_attach(_task_id);
BIPULPO.win_act(_win,0,'Formuła','Dołącz',,,_add);
task_attach(_task_id);
BIPULPO.win_act(_win,0,'Formuła','Popraw',,,_put);
task_attach(_task_id);
BIPULPO.win_act(_win,0,'Usuń',,,,_del);
task_attach(_task_id);
BIPULPO.win_act(_win,0,'Rekord',,,,
   "params_set(params_get());
    exec('bipulpo_bd','portal_bip',_a)
   "
);
BIPULPO.win_btn(_win,'text=%1' ['Dołącz'@],'menu:D');
BIPULPO.win_btn(_win,'text=%1' ['Popraw'@],'menu:P');
BIPULPO.win_btn(_win,'text=%1' ['Usuń'@],'menu:U',,,,,,'noempty');
_win


\bipulpo_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie wertowania tabeli BIPULPO.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _cfg:=params_get().cfg;
   _p_ref:={? var_pres('OCP',_cfg)=type_of(null()) || _cfg.OCP || null() ?};
   _bippyto:={? var_pres('BIPPYTO',_cfg)=type_of(null()) || _cfg.BIPPYTO || null() ?};
:: wyszukujemy status "Zamknięte - w trakcie oceny"
   _tab:=exec('bipulp_statusy','portal_bip',_cfg.funkc);
:: domyślnie wyłączamy wszystkie akcje
   _ne:='DUP';
   _empty:='D';
:: sprawdzenie czy pracownik może "obsługiwać" tę kategorię ulepszeń
   _kat_ok:=exec('bipkat_ok','portal_bip',BIPULP.BIPKAT,_p_ref);

   P.cntx_psh();
   OSOBA.cntx_psh();
   {? _kat_ok & _p_ref & P.seek(_p_ref)
   || _osoba:=P.OSOBA;
      {? _tab.find_tab(,'KOD',,'=','OCENA') & BIPULP.STATUS=_tab.STATUS
      || {? _bippyto
         || BIPULPO.cntx_psh();
            BIPULPO.index('LINK');
            BIPULPO.prefix(BIPULP.NP_DOK,BIPULP.ZZ_DOK,_bippyto);
::          sprawdzamy czy osoba oceniająca już udzieliła oceny
            {? BIPULPO.size()>0
            || _ne:='D'; _empty:='D'
            || _ne:=''; _empty:=''
            ?};
            BIPULPO.cntx_pop();
::          mogę poprawiać i usuwać tylko własne oceny
            {? BIPULPO.BIPPYTO<>_bippyto
            || _ne+='PU'
            ?};
::          nie mogę oceniać jeżeli to jest moje własne zgłoszenie
            {? BIPULP.P=_p_ref
            || _ne+='DP'; _empty+='D'
            ?}
         ?}
      ?}
   ?};
   OSOBA.cntx_pop();
   P.cntx_pop();
   _ag:='%1:%2'[_ne,_empty];
   BIPULPO.actions_grayed(cur_win(1,1),_ag)
?};
~~


\bipulpo_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BIPULPO.
::   WE:
::   WY:
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
exec('bipulpo_chk','portal_bip',0) & exec('bipulpo_modb','portal_bip')


\bipulpo_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Dołącz - po" dla tabeli BIPULPO.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('bipulp_ocena_upd','portal_bip')
?};
~~


\bipulpo_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli BIPULPO.
::   WE:
::   WY:
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
exec('bipulpo_chk','portal_bip',1) & exec('bipulpo_modb','portal_bip')


\bipulpo_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli BIPULPO.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('bipulp_ocena_upd','portal_bip')
?};
~~


\bipulpo_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wyzwalacz "Usuń - po" dla tabeli BIPULPO.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| {? ~exec('get','#bulk',BIPULP,'del',$bfld('ZZ_LINK'))
   || exec('bipulp_ocena_upd','portal_bip')
   ?}
?};
~~


\bipulpo_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli BIPULPO.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw
::  TAG: <TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;

__CHK.validate(BIPULPO,
:: Pola nieredagowalne
   "_a.record(_b,,'ZZ_LINK','P')"
)


\bipulpo_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli BIPULPO.
::   WE:
::   WY:
::  TAG: <TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
{? BIPULPO.ZZ_LINK
|| BIPULPO.NP_DOK:=ref_name(BIPULPO.ZZ_LINK)
?};
{? BIPULPO.P
|| P.cntx_psh();
   P.prefix();
   BIPULPO.P();
   BIPULPO.OSOBA:=P.OSOBA;
   BIPULPO.WYDZIAL:=P.WYDZIAL;
   BIPULPO.ST:=P.ST;
   BIPULPO.CP:=P.CP;
   BIPULPO.F_ZATR:=P.F_ZATR;
   P.cntx_pop()
?};
1

:: - - - - - - - - - - - - - - - - - - - -O G Ł O S Z E N I A - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

\ogl_data_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Pobiera informacje o parametrze dotyczącym daty ważności ogłoszenia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: TODO: zmienić na parametr
date()+14


\bipkat_ogl_pyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Zwraca kategorię obsługującą prywatne pytania do ogłoszeń
::   WE:
::   WY: ref/null
::----------------------------------------------------------------------------------------------------------------------
exec('bipkat_get','portal_bip','OGL_PYT','OGL_PYT','Prywatne pytania do ogłoszeń','ref',1)


\bipkat_ogl_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Zwraca kategorię obsługującą komentarze do ogłoszeń
::   WE:
::   WY: ref/null
::----------------------------------------------------------------------------------------------------------------------
exec('bipkat_get','portal_bip','OGL_KOM','OGL_KOM','Komentarze do ogłoszeń','ref',1)


\bipogl_fset
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Ustawia filtr dla ogłoszeń
::   WE: _a [ARRAY]   - Tablica elementów nazwanych z parametryzacją (patrz formuła \_cfg powyżej dla _a='BIPOGL').
::       _b [INTEGER] - czy filtr dla archiwum, czy normalny (domyślnie)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=_a;
_arch:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_tab:=exec('bipulp_statusy','portal_bip',_cfg.funkc);
_status:='';
{? _tab.find_tab(,'KOD',,'=','ARCHIWALNE')
|| _status:=_tab.STATUS
?};
_from:="join BIPKAT using(BIPKAT.reference,BIPULP.BIPKAT)"+'';
{? _arch
|| _where:="BIPKAT.FUNKC=':_a' and BIPULP.STATUS like ':_b'"+''
|| _where:="BIPKAT.FUNKC=':_a' and BIPULP.STATUS not like ':_b'"+''
?};
_where+=' and BIPKAT.FIRMA=:_c';
BIPULP.f_set('DT1^,GD1^',_from,_where,_cfg.funkc,_status,exec('ref_firma','ustawienia'))


\bipogl_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Wertowanie ogłoszeń portalowych w oknie grupowym.
::   WE: _a [ARRAY] - Tablica elementów nazwanych z parametryzacją (patrz formuła \_cfg powyżej dla _a='BIPOGL').
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _<1
|| _stack:=form_stack();
   FUN.error('Brak parametru "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~obj_ntab(_a)
|| _stack:=form_stack();
   FUN.error('Nieprawidłowy typ parametru "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~exec('array_cmptype','#array',_a,exec('_cfg','portal_bip','BIPULP'))
|| _stack:=form_stack();
   FUN.error('Nieprawidłowa budowa tablicy "%1".'@ ['CFG']+'\n(\\%1/%2.fml)' [_stack.name,_stack.file]);
   return(0)
|? ~exec('_funkc_valid','portal_bip',_a.funkc)
|| return(0)
?};
_cfg:=_a;

_cfg.upr:=exec('chk_role','#b__box',OPERATOR.USER,_cfg.uid);
P.win_sel('CTR');

BIPULP.cntx_psh();
BIPULP.f_clear();
BIPULP.index('DTGD');
BIPULP.prefix();
exec('bipogl_fset','portal_bip',_cfg);
_ocp:=_bippyto:=null();
_res:=exec('selPracFromUser','portal_bip','OGL');
_ocp:=_res.P;
_bippyto:=_res.BIPPYTO;
_kat_kom:=exec('bipkat_ogl_kom','portal_bip');
_kat_pyt:=exec('bipkat_ogl_pyt','portal_bip');
params_set('cfg',exec('obj_ntab_set','#array',_cfg,'OCP',_ocp,
                'BIPPYTO',_bippyto,'kat_kom',_kat_kom,'kat_pyt',_kat_pyt));
{? _ocp & exec('bipulp_wnds','portal_bip',_cfg)
|| {? _cfg.area
   || AreaTitle.setTitle()
   ?};
   BIPULP.select()
?};
BIPULP.cntx_pop();
~~


\bipulp_archiwum_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Wyświetla listę archiwalnych ogłoszeń
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=params_get().cfg;
{? BIPULP.f_active=1 | BIPULP.f_active=3
|| BIPULP.f_clear(1)
?};
_win:=BIPULP.win_sel('?');
exec('bipogl_fset','portal_bip',_cfg,1);
BIPULP.win_sel('WER_OA');
params_set('cfg',_cfg);
BIPULP.win_fml('WER_OA',,'STATUS',,'ICON_BEFORE',
   "params_exec('bipulp_icon_status','portal_bip',cur_tab(1,1).STATUS)",2
);
_ref:=BIPULP.ref();
BIPULP.select();
BIPULP.win_sel(_win);
exec('bipogl_fset','portal_bip',_cfg);
BIPULP.seek(_ref);
BIPULP.f_rfresh()


\bip_autor_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Przed wyświetleniem pola AUTOR / P.
::   WE: [_a]  [TABLE] - Alias do tabeli [domyślnie: tabela bieżącego okna].
::       [_b] [STRING] - Akronim pola obsługującego "autora" [domyślnie: akronim bieżącego pola].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:={? var_pres('_a')=type_of(SYSLOG) || _a || cur_tab(1,1) ?};
_fld_name:={? var_pres('_b')=type_of('') || _b || cur_afld() ?};
{? var_pres(_fld_name,_TAB)<>26
|| return(0)
?};

_fld:=($('_a.%1' [_fld_name]))(_TAB);
{? _fld & ref_tab(_fld)=P
|| P.cntx_psh();
   P.prefix();
   OSOBA.cntx_psh();
   OSOBA.prefix();
   ($('_a.%1().OSOBA()' [_fld_name]))(_TAB);
   _val:='%1 %2'[OSOBA.NAZWISKO,OSOBA.PIERWSZE];
   OSOBA.cntx_pop();
   P.cntx_pop()
|| _val:=''
?};
($('EDIT_VAR.%1:=_a' [_fld_name]))(_val);
~~


\bip_autor_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Po redagowaniu pola AUTOR / P.
::   WE: [_a]  [TABLE] - Alias do tabeli [domyślnie: tabela bieżącego okna].
::       [_b] [STRING] - Akronim pola obsługującego "autora" [domyślnie: akronim bieżącego pola].
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_TAB:={? var_pres('_a')=type_of(SYSLOG) || _a || cur_tab(1,1) ?};
_fld_name:={? var_pres('_b')=type_of('') || _b || cur_afld() ?};
{? var_pres(_fld_name,_TAB)<>26
|| return(0)
?};

_ret:=1;
_brak:="
   FUN.info('Brak podanej osoby w kartotece pracowników.\nNależy wybrać ze słownika.');
   exec('bip_autor_f3','portal_bip',_a)";

OSOBA.cntx_psh();
OSOBA.prefix();
P.cntx_psh();
P.prefix();
_val:=($('EDIT_VAR.%1' [_fld_name]))();
{? +_val &
   (($('_a.%1' [_fld_name]))(_TAB)=null() |
    _val<>('%1 %2'[($('_a.%1().OSOBA()' [_fld_name]))(_TAB);OSOBA.NAZWISKO,OSOBA.PIERWSZE]))
|| _PRAC:=exec('autouzu_p','pracownik',_val,'POR',,,'P.PORTAL=\'T\'');
:: Jest tylko jeden pasujący pracownik:
   {? type_of(_PRAC)=type_of(SYSLOG)
   || P.cntx_psh();
      {? P.seek(_PRAC.REF,,1)
      || ($('_a.%1:=_b' [_fld_name]))(_TAB,P.ref());
         ($('EDIT_VAR.%1:=_a' [_fld_name]))('%1 %2'[_PRAC.NAZWISKO,_PRAC.PIERWSZE])
      || _ret:=0;
         _brak(_TAB)
      ?};
      P.cntx_pop()
   || _ret:=0;
      _brak(_TAB)
   ?}
?};
P.cntx_pop();
OSOBA.cntx_pop();

_ret


\bip_autor_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Na f3 pola AUTOR / P.
::   WE: [_a]  [TABLE] - Alias do tabeli [domyślnie: tabela bieżącego okna].
::       [_b] [STRING] - Akronim pola obsługującego "autora" [domyślnie: akronim bieżącego pola].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:={? var_pres('_a')=type_of(SYSLOG) || _a || cur_tab(1,1) ?};
_fld_name:={? var_pres('_b')=type_of('') || _b || cur_afld() ?};
{? var_pres(_fld_name,_TAB)<>26
|| return(0)
?};

_args:=exec('wybierz_args','pracownik');

_args.DOMAIN:='POR';
_args.WIELU:=0;
_args.F_ZATR:=exec('kody','f_zatr');
_args.GRP_MODE:='html_maximized';
_args.SQL_WHERE:='"P".PORTAL=\'T\'';

:: Ustawienie się na odpowiednim rekordzie w P na podstawie tego co wpisano (o ile to możliwe):
_OSOBY:=exec('autouzu_p','pracownik',($('EDIT_VAR.%1' [_fld_name]))(),'POR',,1,'P.PORTAL=\'T\'');
{? type_of(_OSOBY)=type_of(SYSLOG)
|| _OSOBY.first();
   P.cntx_psh();
   P.seek(_OSOBY.REF,,1)
?};

_PRAC:=exec('wybierz','pracownik',_args);
{? type_of(_OSOBY)=type_of(SYSLOG)
|| P.cntx_pop()
?};

{? ~+_PRAC.STATUS & _PRAC.P.first()
|| P.cntx_psh();
   P.seek(_PRAC.P.REF,,1);
   OSOBA.cntx_psh();
   OSOBA.prefix();
   ($('_a.%1:=_b' [_fld_name]))(_TAB,P.ref());
   ($('EDIT_VAR.%1:=_a' [_fld_name]))('%1 %2'[P.OSOBA().NAZWISKO,OSOBA.PIERWSZE]);
   OSOBA.cntx_pop();
   P.cntx_pop()
?}


\bipksn_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Przed dołączeniem/poprawieniem wiersza BIPKSN.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
BIPKAT.cntx_psh();
BIPKAT.prefix();
BIPKSN.BIPKAT();
BIPKSN.FIRMA:=BIPKAT.FIRMA;
BIPKSN.FUNKC:=BIPKAT.FUNKC;
BIPKAT.cntx_pop();
~~


\bipksn_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(BIPKSN,$("_a.table(_b,"+$_mode+")"))


\bipksn_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wyzwalacz "przed dołącz" wiersza tabeli BIPKSN.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('bipksn_modb','portal_bip');
exec('bipksn_chk','portal_bip',0)


\bipksn_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wyzwalacz "po dołącz" tabeli BIPKSN.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: zgodny ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
:: podstawowy warunek dalszego działania
{? ~_a | do_state()<>1 || return() ?};

:: wymuś synchronizację załączników
exec('bipksn_sync','portal_bip',BIPKSN.SLO_NAZ);
~~


\bipksn_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wyzwalacz "przed popraw" wiersza tabeli BIPKSN.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('bipksn_modb','portal_bip');
exec('bipksn_chk','portal_bip',1)


\bipksn_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wyzwalacz "po popraw" tabeli BIPKSN.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: zgodny ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
:: podstawowy warunek dalszego działania
{? ~_a | do_state()<>1 || return() ?};

{? BIPKSN.SLO_NAZ<>bfld('SLO_NAZ')
:: wymuś synchronizację załączników
|| exec('bipksn_sync','portal_bip',bfld('SLO_NAZ'));
   exec('bipksn_sync','portal_bip',BIPKSN.SLO_NAZ)
?};
~~


\bipksn_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wyzwalacz "po usuń" tabeli BIPKSN.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: zgodny ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
:: podstawowy warunek dalszego działania
{? ~_a | do_state()<>1 || return() ?};

:: wymuś synchronizację załączników
exec('bipksn_sync','portal_bip',bfld('SLO_NAZ'));
~~


\bipksn_sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wymusza synchronizację załączników.
::   WE: _a _SLO_KOD - wskazanie słownikowanej nazwy
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_slo:=_a;

ZALACZ.cntx_psh();
ZALACZ.index('TYP_ZAL');
ZALACZ.prefix(exec('ref_firma','ustawienia'),_slo,'T');
_loop:=ZALACZ.first();
{!
|? _loop
|! ZALACZ.put(,1);
   _loop:=ZALACZ.next()
!};
ZALACZ.cntx_pop();
~~


\bipksn_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Weryfikacja poprawności wiersza w oknach tabeli BIPKSN.
::   WE:
::   WY: wynik testu poprawności zgodny ze specyfikacją akcji "rekord po"
::----------------------------------------------------------------------------------------------------------------------
exec('bipksn_modb','portal_bip');
exec('bipksn_chk','portal_bip',-menu_txt()='popraw')


\slo_typ_bipksn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wzorzec pola SLO_NAZ tabeli BIPKSN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_typ:=BIPKAT.FUNKC;

:: ustalenie typu słownika
:: {? _typ='ABC' || _typ:='XYZ'
:: ?}
exec('slownik','ext_slo',_typ)


\bipksn_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Dedykowana akcja "Dołącz" okienka WER tabeli BIPKSN.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('slo_typ_bipksn','portal_bip');

_typ:=EDIT_VAR.SLO_TYP;
_pfx:="
   SLO_NAZ.f_set(
      'NAZWA',,
      'SLO_TYP=:_a and REFERENCE not in ('
      '  select SLO_NAZ from BIPKSN where FIRMA=:_b and FUNKC=\\':_c\\''
      ')',
      _a,BIPKAT.FIRMA,BIPKAT.FUNKC
   )
";

:: wybierz nazwy ze słownika
_sel:=exec('wybierz_nazwy','ext_slo',_typ,0,,_pfx);
SLO_NAZ.f_clear();
{? _sel.OK=0
|| return()
?};
:: wybrane wiersze
_NAZ:=_sel.WYBOR;

KOMM.init(,,'Załączniki wymagające weryfikacji (rozmiar)'@,'Typ załącznika | Nazwa | Data powstania | Rozmiar'@);
SLO_NAZ.cntx_psh();
BIPKSN.cntx_psh();
BIPKSN.index('UNIQUE');
BIPKSN.prefix(BIPKAT.FIRMA,BIPKAT.FUNKC);
OSOBA.cntx_psh();
OSOBA.prefix();
P.cntx_psh();
P.prefix();
ZALACZ.cntx_psh();
ZALACZ.index('TYP_ZAL');

_form:="form(_a,,,' ')";
_loop:=_NAZ.first();
_last:=null;
_done:=0;
{!
|? _loop
|! {? SLO_NAZ.seek(_NAZ.REF,,1)
   || {? ~BIPKSN.find_key(SLO_NAZ.ref())
      || BIPKSN.blank();
         BIPKSN.SLO_NAZ:=SLO_NAZ.ref();
         {? BIPKSN.add()
         || _last:=BIPKSN.ref();
            _done+=1
         ?}
      ?};
      ZALACZ.prefix(BIPKSN.FIRMA,SLO_NAZ.ref());
      {? ZALACZ.first()
      || {!
         |? {? exec('att_size','portal_lib',ZALACZ,'ZAL',1)<>1
            || {? ZALACZ.P
               || ZALACZ.P().OSOBA();
                  _sect:='Współpracownik: %1 %2, numer teczki: %3'@ [OSOBA.NAZWISKO,OSOBA.PIERWSZE,P.T]
               || ZALACZ.OSOBA();
                  _sect:='Osoba: %1 %2'@ [OSOBA.NAZWISKO,OSOBA.PIERWSZE]
               ?};
               _root:=KOMM.set_root(_sect);
               {? KOMM.find_msg(SLO_NAZ.NAZWA,_root)
               || KOMM.set_root(SLO_NAZ.NAZWA,_root);
                  _beg:=0
               || KOMM.sect_beg(SLO_NAZ.NAZWA);
                  _beg:=1
               ?};
               _sc:=exec('B2xB','#convert',ZALACZ.SIZE);
               _ss:=
                  {? _sc.p=''
                  || '%1B' [_form(ZALACZ.SIZE)]
                  || '%1 %2B (%3 B)' [_form(_sc.r$4),_sc.p,_form(ZALACZ.SIZE)]
                  ?};
               obj_del(_sc);
               KOMM.add('%1 | %2 | %3' [ZALACZ.ZAL_NAME,$ZALACZ.DATA,_ss]);
               {? _beg
               || KOMM.sect_end()
               ?};
               KOMM.sect_end()
            ?};
            ZALACZ.next()
         !}
      ?}
   ?};
   _loop:=_NAZ.next()
!};

ZALACZ.cntx_pop();
P.cntx_pop();
OSOBA.cntx_pop();
BIPKSN.cntx_pop();
SLO_NAZ.cntx_pop();
:: odrysuj
{? _done<>0
|| win_disp();
   BIPKSN.seek(_last)
?};
KOMM.select();
~~


\bipksn_popraw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Dedykowana akcja "Popraw" okienka WER tabeli BIPKSN.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('slo_typ_bipksn','portal_bip');

_typ:=EDIT_VAR.SLO_TYP;
_naz:=BIPKSN.SLO_NAZ().NAZWA;
_pfx:="
   SLO_NAZ.f_set(
      'NAZWA',,
      'SLO_TYP=:_a and (REFERENCE=:_b or REFERENCE not in ('
      '  select SLO_NAZ from BIPKSN where FIRMA=:_c and FUNKC=\\':_d\\''
      '))',
      _a,BIPKSN.SLO_NAZ,BIPKAT.FIRMA,BIPKAT.FUNKC
   )
";

:: wybierz nazwę ze słownika
_sel:=exec('wybierz_nazwy','ext_slo',_typ,1,_naz,_pfx);
SLO_NAZ.f_clear();
{? _sel.OK=0
|| return()
?};
:: wybrane wiersze
_NAZ:=_sel.WYBOR;

_done:=0;
SLO_NAZ.cntx_psh();
{? _NAZ.first() & SLO_NAZ.seek(_NAZ.REF,,1)
|| BIPKSN.SLO_NAZ:=SLO_NAZ.ref();
   _done+=BIPKSN.put()
?};
SLO_NAZ.cntx_pop();
:: odrysuj
{? _done<>0
|| win_disp()
?};
~~


\bipodb_powiad_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Obsługa akcji "Powiadom - grupa przed" w oknach wertowania tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_txt:=params_get().cfg.bipodb_powiadom;
_ile:=BIPODB.sel_size();
{? FUN.ask({? _ile=1 || _txt.ask1 || _txt.askn ?})
|| sel_nchk();
   KOMM.init(,,_txt.title)
?}


\bipodb_powiad_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Obsługa akcji "Powiadom - przed" w oknach wertowania tabeli BIPODB. ()
::       Funkcja zmienia status powiadomienia mail z 'T' na 'N', oraz zeruje datę i godzinę powiadomienia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=params_get().cfg;
_txt:=_cfg.bipodb_powiadom;
_gr:=BIPODB.sel_size();

{? BIPODB.POW_MAIL='T'
|| {? _gr | FUN.ask(_txt.askb)
   || BIPODB.POW_MAIL:='N';
      BIPODB.DT_MAIL:=date(0,0,0);
      BIPODB.GD_MAIL:=time(0,0,0);
      BIPODB.put()
   ?}
|? _gr
|| KOMM.set_root(_txt.root_ok);
   KOMM.add(_cfg.bipodb_main.id());
   KOMM.sect_end()
|| melody()
?}


\bipodb_powiad_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Obsługa akcji "Powiadom - grupa po" w oknach wertowania tabeli BIPODB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KOMM.select()


\bipkat_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [22.26]
:: OPIS: Obsługa akcji "Rekord - przed" dla okien wertowania tabeli BIPKAT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _ws:=cur_win(1,1);
   BIPKAT.actions_grayed(_ws,{? BIPKAT.SYSTEM='T' || 'pu' || ':' ?})
?};
0


\bipulp_bipkat_szuk_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [22.26]
:: OPIS: Obsługa akcji "Przed redagowaniem" dla akcji Szukaj
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BIPKAT.prefix();
BIPKAT.f_clear();
BIPKAT.f_set('KOD,NAZWA',,'BIPKAT.FIRMA=:_a',exec('ref_firma','ustawienia'))

:Sign Version 2.0 jowisz:1045 2023/12/19 14:09:47 718bbce9fb4b3f508553af22338728166cfd8e3f028a1f01862d113420a22bb631a64030c23c37aa494cf0747cb0dec12beaa9b3bf59324def77a5b582aea5643706a8f882eb45e5006d28dd03a400d7a7604afbb22343331fe6413456885068777c0c94453661cfac491e3b2bc71ea46aa895092fd064e70ba2a02238c1bffe
