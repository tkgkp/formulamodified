:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: st_kh.fml
:: Utworzony: 03.06.2020
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Obsługa kontrahentów dla systemu Statystyki
::======================================================================================================================


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Czyści powiązania do rekordu tabeli ST_KH
::   WE: _a - ST_KH.ref()
::   WY: >0  -wyczyszczone,
::       <=0 -niewyczyszczone
::  TAG: <PRYWATNA><CLEAN>
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=2 || return(-100) ?};

_ref:=_a;

_result:=0;
_can_continue:=1;

_mydo:=do_state()=0;
{? _mydo || do() ?};
:: --- powiązania do ---
ST_KH.cntx_psh(); ST_KH.clear();
{? ST_KH.seek(_ref)
||
   {? _can_continue>0
   ||
::    1. Usuwam ST_KHI które wskazują na ten element
      ST_KHI.cntx_psh();
      ST_KHI.index('KH');
      ST_KHI.prefix(ST_KH.ref());
      {? ST_KHI.first()
      || {!
         |? _can_continue:=exec('delete','st_khi',ST_KHI.ref());
            ST_KHI.first() & _can_continue>0
         !}
      ?};
      ST_KHI.cntx_pop()
   ?};
   ~~
?};
ST_KH.cntx_pop();
:: --- wszystkie powiazania usuniete? ---

{? _can_continue>0
|| _result:=1
|| undo()
?};

{? _mydo || end() ?};

_result


\delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Kasuje podany rekord tabeli ST_KH (wykonywane w transakcji!!!)
::   WE: _a - ST_KH.ref()
::   WY: >0 -wyczyszczone,
::       <=0 -niewyczyszczone
::  TAG: <PUBLICZNA><DEL>
::UWAGA: Parametry bez [] są wymagane, formula może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
:: jeżeli transakcja została zerwana, to nie ma sensu przetwarzać formuły
{? do_state()=2 || return(-100) ?};

_ref:=_a;

_result:=0;
_can_continue:=1;

:: sprawdzam, czy to w tej formule będę zakładał transakcję, czy już jest założona
_mydo:=do_state()=0;
{? _mydo || do() ?};
ST_KH.cntx_psh(); ST_KH.clear();
{? ST_KH.seek(_ref)
|| {? exec('clean','st_kh',_ref)>0
   || {? ST_KH.del(,1)>0
      || _result:=1
      || undo();
         _result:=-3
      ?}
   || _result:=-2
   ?}
|| _result:=0
?};

{? _result<0
|| undo()
?};

ST_KH.cntx_pop();
{? _mydo || end() ?};
_result


\st_kh_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Dołącz dla ST_KH
::----------------------------------------------------------------------------------------------------------------------
ST_KH.win_edit('RED');
ST_KH.blank();
{? ST_KH.edit()
|| ST_KH.add()
?};
~~


\st_kh_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Usuń dla ST_KH
::----------------------------------------------------------------------------------------------------------------------
{? VAR.GRUPA='T' | FUN.ask('Czy usunąć bieżący wiersz?'@)
|| exec('delete','st_kh',ST_KH.ref())
?};
~~


\st_kh_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Popraw dla ST_KH
::----------------------------------------------------------------------------------------------------------------------
ST_KH.win_edit('RED');
{? ST_KH.edit()
|| ST_KH.put()
?};
~~


\st_kh_del_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Usuń przed dla grupy rekordów (tabela ST_KH)
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć zaznaczone wiersze?'@)
|| VAR.GRUPA:='T';
   1
|| 0
?}


\st_kh_del_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja Usuń po dla grupy rekordów (tabela ST_KH)
::----------------------------------------------------------------------------------------------------------------------
VAR.GRUPA:='N';
~~


\st_kh_aktu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Aktualizacja kontrahentów - pobieranie danych z webserwisu
::   WE: [_a] - INTEGER Czy na koniec wyświetlić listę komunikatów: [0]/1
::        _b  - STRING - dane logowania do webservice (format: 'login@pass')
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_komm:={? var_press('_a')=type_of(0) || 0 || 1 ?};
_auth:=_b;

_result:=1;
_can_continue:=1;

KOMM.init(255,,'Aktualizacja kontrahentów.'@);
:: Konfiguracja połączenia
_client:=exec('client','__mwac','kh_lic','silent');
{? ~_client.Valid
|| KOMM.add('Błąd przy konfiguracji połączenia z webserwisem - błąd walidacji obiektu client.'@);
   _can_continue:=0
?};
{? _can_continue>0
||
   _login:='';
   _pass:='';

   _split:=spli_str(_auth,'@');

   _login:=_split[1];
   _pass:=_split[2];

   _client.setAuthentication(_login,_pass);
   _method:=_client.getMethod('Get');
   {? ~_method.Valid
   || KOMM.add('Błąd przy konfiguracji połączenia z webserwisem - błąd walidacji obiektu method.'@);
      _can_continue:=0
   ?}
?};

{? _can_continue>0
|| ST_KH.cntx_psh();
   ST_KH.index('NRS');
   ST_KH.prefix();
   _date:=date();
   _time:=time();
   {? ST_KH.first()
   || {!
      |? _can_continue:=1;
         _method.addParams('NRS',ST_KH.NRS);
         _res:='';
         {? ~_method.prepare()
         || _can_continue:=0
         ?};
         {? _can_continue>0
         || _log_name:='kh_lic_%1.log'[ST_KH.NRS];
            _log_name:=gsub(_log_name,'/','');
            _log_name:=gsub(_log_name,':','');
            _method.Inet.Object.set_verbose(_log_name);
            _method.Inet.Object.set_opt('SSL_VERIFYPEER', 0)
         ?};
         {? _can_continue>0 & _method.call()=200
         || _res:=_method.Inet.Response.Data[1];
::          Parsowanie wyniku
            {? _res<>'' & ST_KH.NRS<>'000004'
            || {? var_press('_parsed')>100 || obj_del(_parsed) ?};
               _parsed:=json_parse(_res);
               {? var_press('_parsed')>100
               || {? var_press('_tab')>100 || obj_del(_tab) ?};
                  {? _parsed.response.status='OK'
                  || _tab:=_parsed.response.data[1];
::                   Aktualizuje dane kontrahenta
                     ST_KH.DANE:=_tab.NAZ_P;
                     ST_KH.KOD_ERP:=_tab.KOD_ERP;
                     ST_KH.KOD_ABS:=_tab.KOD_ABS;
                     ST_KH.SNIP:=_tab.SNIP;
                     ST_KH.ZGODA:={? _tab.ZGODA<>'N' || 'T' || 'N' ?};
                     ST_KH.DT:=date();
                     _ghw:=null();
::                   Sprawdzam czy jest już GHW o podanym kodzie
                     ST_GHW.cntx_psh();
                     ST_GHW.index('DANE');
                     ST_GHW.prefix(_tab.GHW,);
                     {? _tab.GHW<>''
                     || {? ST_GHW.first()
                        || _ghw:=ST_GHW.ref()
                        || ST_GHW.prefix();
                           ST_GHW.DANE:=_tab.GHW;
                           {? ~ST_GHW.add()
                           || _env.message('%1: %2 - ST_GHW.add()'@[ _error, _kind]);
                              _can_continue:=0
                           || _ghw:=ST_GHW.ref()
                           ?}
                        ?}
                     ?};
                     ST_GHW.cntx_pop();
                     ST_KH.ST_GHW:=_ghw;
                     ST_KH.put();

                     ST_KHI.cntx_psh();
                     ST_KHI.index('KH');
                     ST_KHI.prefix(ST_KH.ref());
                     {? ST_KHI.first()
                     || {!
                        |? ST_KHI.ANALIZA:=ST_KH.ZGODA;
                           ST_KHI.put();
                           ST_KHI.next()
                        !}
                     ?};
                     ST_KHI.cntx_pop()
                  ||
::                   Webservice zwrócił błąd, prawdopodbnie nie znalazł licencji kontrahentów o podanym nr seryjnym
                     ~~
                  ?}
               ?}
            ?}
         || KOMM.add('Nieudane połączenie z webservicem: Status %1'@[$_method.Inet.Response.Status])
         ?};

         {? _can_continue<=0
         || _result:=0
         ?};
         ST_KH.next()
      !}
   ?};
   ST_KH.cntx_pop()
?};
{? _komm>0 || KOMM.select() ?};
_result


\chmura_podmiana
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Podmienia nr seryjny który przyszedł z pliku .mstat na taki który będzie się zaczynał od litery C
::       Podmiana jest spowodowana tym że do tej pory w statystykach trzymaliśmy tylko 6 ostatnich znaków z numeru licencji
::       W dniu 18.10.2022 w którym licencje na chmurze są podmieniane na indywidualne okazuje się że te 6 ostatnich liter
::       to jest za mało i numery chmurowe zaczęły konfliktować pod kątem unikalności z innymi normalnymi instalacjami klientów
::   WE: _a - STRING - numer seryjny np WSRV043938
::   WY: STRING - jeżeli na wejściu CHMU043938 to zwraca C43938
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_input:=_a;
_result:='';

{? _input*'CHMU'>0
|| _result:='C'+(_input+5)
|| _result:=_input+6
?};
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 d80cbe8e4871d4086fcd60f1bad4dff9ab57cdc9007daddfc78f8b1e339eca03858e7d8fb628b7536c4ef8ce0d2cbf0845245ec1b51b0c5531678030d9a3c0cd879595739f14d3581678a5d1e93557fb7a66f31b613a4f0f03cf1fb01c49023f541586e3128d216c8ad710e95aedcd25931847203d7d3c6c18050b7983310d61
