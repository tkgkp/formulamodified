:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: ppk_rda.fml [12.51]
:: Utworzony: 2019/05/09
:: Autor: jaws
:: Systemy: PPK
::======================================================================================================================
:: Zawartość: Formuły odpowiedzialne za obsługę zawartości raportów.
::======================================================================================================================


\_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli PPK_RDA.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
_numer:=0;
PPK_RDA.cntx_psh();
PPK_RDA.index('NUMER');
PPK_RDA.prefix(PPK_RDA.PPK_RPL,PPK_RDA.PPK_RDA);
{? PPK_RDA.last()
|| _numer:=PPK_RDA.NUMER
?};
PPK_RDA.cntx_pop();
PPK_RDA.NUMER:=_numer+1;
1


\_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli PPK_RDA.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
PPK_RPL.cntx_psh();
_ok:=(PPK_RDA.PPK_RPL().WYS_STAT<>'T');
PPK_RPL.cntx_pop();

_ok:=
   _ok &
   exec('del_ndx','#table',PPK_RDA,'PPK_RDA',PPK_RDA.ref()) &
   exec('set_null','#table',PPK_WNU,'PPK_RDA',PPK_RDA.ref());
{? ~_ok
|| return(_ok)
?};

PPK_ZDN.cntx_psh();
PPK_ZDN.index('PPK_RDA');
PPK_ZDN.prefix();
PPK_ZDN.f_set('PPK_RDA',,'"PPK_ZDN"."PPK_RDA"=:_a',PPK_RDA.ref());
_loop:=PPK_ZDN.f_first();
{!
|? _ok & _loop
|! PPK_ZDN.PPK_RDA:=null();
   _ok:=PPK_ZDN.put();
:: Najpierw musimy odpiąć raport od historii, ponieważ wyzwalacz nie pozwoli nam usunąć historii powiazanej z raportem.
   {? _ok & PPK_ZDN.AUTO='T'
   || _ok:=PPK_ZDN.del(1,1)
   ?};
   _loop:=PPK_ZDN.f_next()
!};
PPK_ZDN.f_clear();
PPK_ZDN.cntx_pop();

_ok &
exec('set_null','#table',PPK_RUC,'PPK_RDA',PPK_RDA.ref()) &
exec('set_null','#table',PPK_RAP,'PPK_RDA',PPK_RDA.ref()) &
exec('set_null','#table',PPK_KWN,'PPK_RDA',PPK_RDA.ref())


\zaw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyświetla dane raportu.
::   WE: _a _PPK_RPL - wskazanie plików raportu
::       _b [INTEGER] - numer rekordu od którego ma być "odcięte" drzewo
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
PPK_RDA.cntx_psh();
PPK_RDA.index('NUMER');
PPK_RDA.prefix(_a);

PPK_RDA.win_sel('WER');
PPK_RDA.tr_root('WER',1,_b);
PPK_RDA.select();

PPK_RDA.cntx_pop();
~~


\zr_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Akcja "Zwiń/rozwiń" okienek tabeli PPK_RDA
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_TAB:=cur_tab(1,1);
_ref:=_TAB.ref();
_tst:=_TAB.first();
_win:=cur_win(1,1);
{!
|? _tst:=_TAB.tr_state();
   _TAB.next() & _tst
!};
_TAB.first();
_TAB.tr_set({? _tst || 0 || 1 ?},_win);
{? ~_tst || _TAB.seek(_ref) ?};
~~


\szukaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyszukuje zawartość w raporcie.
::   WE: _a _PPK_RPL - plik raportu
::       _b [_PPK_RDA] - zapis nadrzędny
::       _c STRING - symbol opis elementu
::   WY: wskazanie istniejącego zapisu lub null
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_rpl:=_a;
_rda:={? var_pres('_b')=type_of(null) || _b || null ?};
_xel:=exec('szukaj','ppk_xel',_c);

PPK_RDA.index('MAIN');
PPK_RDA.prefix(_rpl,_rda);
{? PPK_RDA.find_key(_xel)
|| PPK_RDA.ref()
|| null
?}


\dodaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Dodaje nową zawartość do raportu.
::   WE: _a _PPK_RPL - plik raportu
::       _b [_PPK_RDA] - zapis nadrzędny
::       _c STRING - symbol opisu elementu
::       _d [STRING] - wartość
::       _e [STRING] - rodzaj zapisu: Sekcja/Wartość/Atrybut (domyślnie W)
::       _f [INTEGER] - zapis wielokrotny
::   WY: wskazanie dodanego/istniejącego zapisu lub null
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_rpl:=_a;
_rda:={? var_pres('_b')=type_of(null) || _b || null ?};
_sym:=_c;
_xel:=exec('szukaj','ppk_xel',_sym);
_war:={? var_pres('_d')=type_of('') || _d || '' ?};
_rod:={? var_pres('_e')=type_of('') || _e || 'W' ?};

:: sprawdź, czy dane już istnieją
_ref:=exec('szukaj','ppk_rda',_rpl,_rda,_sym);
{? _rod='W' & _war=''
|| {? _ref<>null
   || PPK_RDA.del()
   ?};
   return(null)

|? var_pres('_f')<>type_of(0) | _f=0
|| {? _ref<>null
::    znaleziono
   || return(_ref)
   ?}
?};

PPK_RDA.blank();
PPK_RDA.PPK_RPL:=_rpl;
PPK_RDA.PPK_RDA:=_rda;
PPK_RDA.PPK_XEL:=_xel;
PPK_RDA.WARTOSC:=_war;
PPK_RDA.RODZAJ:=_rod;
{? PPK_RDA.add()
|| _ref:=PPK_RDA.ref()
?};

_ref


\usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Usuwa wskazany zapis tabeli PPK_RDA
::   WE: _a _PPK_RDA - dane raportu
::   WY: wynik operacji usuwania
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_ref:=_a;

_ret:=1;
PPK_RDA.cntx_psh();
PPK_RDA.prefix();
{? PPK_RDA.seek(_ref)
|| _ret:=PPK_RDA.del(,1)
?};
PPK_RDA.cntx_pop();
_ret

:Sign Version 2.0 jowisz:1045 2020/04/03 17:16:43 2a07ee73d2bb25f828fc800b545076cadfd85a0d071b712e180036438ce207198044963628f969a24eef5f635c121dbfa36550df0dda7b03b2799479e1e835b2f7d928511c80798fcbe53945d95161ce1f2d30a2a168093a87a87426b41fc9074a6cad7a334b7d19744368702e6a13216b4cceb51f89cd186ca32bbd59d32e47
