:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: godz_kop.fml [2004]
:: Utworzony: 2004/07/16
:: Autor: [casper] Grzegorz Lubos
::======================================================================================================================
:: Zawartosc: Kopiowanie skladnikow podzialu kosztow
::======================================================================================================================


\kopdoskl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Kopiowanie schematu do innego składnika.
::       UWAGA!!! Formuła zakłada, że jest ustalony bufor rekordu tabeli G, z którego kopiowane są informacje.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('spr_pr','godziny')=0
|| R.cntx_psh();
   R.win_sel('WYB');
   {? R.select(,1)
   || G.cntx_psh();
      G.index('PODZ_ML');
      {? (ZMIENNE.RODZAJ='S' & PAR_SKID.get(395)='L') | (ZMIENNE.RODZAJ='M' & PAR_SKID.get(396)='L')
      || G.prefix(G.P,G.M,'K',VAR.NAZWALIS+{? ZMIENNE.RODZAJ='S' || 3 || 8 ?},)
      || G.prefix(G.P,G.M,'K',{? ZMIENNE.RODZAJ='S' || '< ---- >' || '' ?},)
      ?};
      {? ~G.find_key(R.RN)
      || _ref:=R.ref();
         _wyr:=FUN.ask('Czy kopiować definicje wyróżników?'@);
         G.cntx_psh();
         {? G.find_key(_rn:=G.K().RN)
         || _maska:=G.name();
            {!
            |? _gef:=G.ref();
               G.K:=_ref;
               G.add();
               {? _wyr
               || exec('kop_wyr','godz_kop',_gef,_maska,G.ref(),_maska)
               ?};
               G.seek(_gef);
               G.next & G.K().RN=_rn
            !}
         ?};
         G.cntx_pop()
      ?};
      G.cntx_pop()
   ?};
   R.cntx_pop()
?}


\kop_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: kopiowanie wyróżników
::   WE: _a - ref składnika głównego
::       _b - maska tabeli składnika głównego
::       _c - ref składnika do ktorego kopiujemy
::       _d - maska tabeli składnika do ktorego kopiujemy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a') < 0 || return(0) ?};
{? var_press('_b') < 0 || return(0) ?};
{? var_press('_c') < 0 || return(0) ?};
{? var_press('_d') < 0 || return(0) ?};
SKID_WYR.cntx_psh;
SKID_WYR.index('SKID_WYR');
SKID_WYR.prefix(REF.FIRMA,'G',_b,#_a,'X');
{? SKID_WYR.first()
|| {!
   |? SKID_WYR.REF:=_c;
      SKID_WYR.TABNAME:=_d;
      SKID_WYR.cntx_psh();
      SKID_WYR.prefix(REF.FIRMA);
      SKID_WYR.add();
      SKID_WYR.cntx_pop();
      SKID_WYR.next()
   !}
?};
SKID_WYR.cntx_pop()


\kopzmies
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GL [8.60]
:: OPIS: kopiowanie skladnika z innego miesiaca dla danego pracownika
::----------------------------------------------------------------------------------------------------------------------
_rok:={? var_press('_a')=type_of(0) || _a || date~1 ?};
_msc:={? var_press('_b')=type_of(0) || _b || date~2 ?};
{? _rok=0 | _msc=0
|| FUN.emsg('Brak wskazanego roku lub miesiąca'@);
   return(0)
?};

_TPAR:=tab_tmp(1,
::  Dane podstawowe
   'ROK','INTEGER','Rok'@,
   'MSC','INTEGER','Miesiąc'@,
:: Opcje dodatkowe
   'WYR','INTEGER','Czy kopiować definicje wyróżników?'@,
   'NADP','INTEGER','Czy nadpisać istniejące zapisy?'@
);

_we:=_TPAR.mk_edit('Parametry kopiowania'@);
_TPAR.win_esep(_we,'Dane podstawowe'@);
_TPAR.win_efld(_we,,'ROK',,,,,,,,'Rok źródłowy'@);
_TPAR.efld_opt(_we,'mark=1',,'ROK');
_TPAR.win_efld(_we,,'MSC',,,,,,,,'Miesiąc źródłowy'@);
_TPAR.efld_opt(_we,'mark=1',,'MSC');
_TPAR.win_esep(_we,'Opcje dodatkowe'@);
_TPAR.win_efld(_we,,'WYR',,,,,,'Wyróżniki',0,'Kopiuje definicję wyróżników do miesiąca docelowego','check-box',
                    'check_label="Kopiuj definicję wyróżników"',"1","0");
_TPAR.win_efld(_we,,'NADP',,,,,,'Nadpisz',0,'Zastępuje istniejące zapisy w miesiącu docelowym','check-box',
                    'check_label="Zastąp istniejące zapisy"',"1","0");
exec('ok_esc','#window',_TPAR,_we);
_TPAR.win_edit(_we);

params_set(
   'TPAR',_TPAR,
   'rok',_rok,
   'msc',_msc
);

_TPAR.ROK:=_rok;
_TPAR.MSC:=_msc;
_TPAR.WYR:=0;
_TPAR.NADP:=0;

{? _TPAR.edit(
   "  _par:=params_get();
      _TPAR:=_par.TPAR;
      _rok:=_par.rok;
      _msc:=_par.msc;
      {? (_chk:=__CHK.record(_TPAR,,'ROK','MSC'))<>''
      || _chk
      || {? _TPAR.ROK<1900 | _TPAR.MSC<1 | _TPAR.MSC>12
         || FUN.emsg('Błędne dane'@);
            'ROK'
         || {? _TPAR.ROK<>_rok | _TPAR.MSC<>_msc
            || ''
            || FUN.emsg('Nie można kopiować z tego samego okresu'@);
               'MSC'
            ?}
         ?}
      ?}
   ")
|| {? ~exec('kopzdowmies','godz_kop',P.ref(),_TPAR.ROK,_TPAR.MSC,_rok,_msc,_TPAR.WYR,_TPAR.NADP,1) &
     (~_TPAR.NADP) & G.size()
   || FUN.info('Nie skopiowano podziałów. '
               'W bieżącym miesiącu są już zdefiniowane podziały.\n\n'
               'W celu nadpisania podziałów należy użyć akcji:\n'
               '"Kopiuj -> kopiowanie podziału wszystkich składników z innego miesiąca" '
               'oraz zaznaczyć pole "Nadpisz"'@)
   ?};
   1
?}


\kopzdowmies
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GL [8.60]
:: OPIS: kopiowanie składnika z dowolnego miesiąca
::   WE: _a [REFERENCE] - wskazanie na pracownika (P.ref)
::       _b [INTEGER]   - rok źródłowy
::       _c [INTEGER]   - miesiąc źródłowy
::       _d [INTEGER]   - rok docelowy
::       _e [INTEGER]   - miesiąc docelowy
::       _f [INTEGER]   - czy kopiować wyróżniki (0/1)
::       _g [INTEGER]   - czy nadpisywać istniejące zapisy (0/1)
::       _h [INTEGER]   - czy komunikować o braku podziałów (0/1)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
   _p_ref:={? var_pres('_a')=type_of(null()) || _a || null() ?};
   _rok_z:={? var_pres('_b')=type_of(0)      || _b || 0      ?};
   _msc_z:={? var_pres('_c')=type_of(0)      || _c || 0      ?};
  _rok_do:={? var_pres('_d')=type_of(0)      || _d || 0      ?};
  _msc_do:={? var_pres('_e')=type_of(0)      || _e || 0      ?};
  _kopWyr:={? var_pres('_f')=type_of(0)      || _f || 0      ?};
_nadpisac:={? var_pres('_g')=type_of(0)      || _g || 0      ?};
     _msg:={? var_pres('_h')=type_of(0)      || _h || 0      ?};

_result:=0;
_usu:=1;
_maska_old:='godz'+$_rok_z;
_maska:='godz'+$_rok_do;
_var_nazwalis:='L'+($_rok_z+2)+form(_msc_z,-2)+(VAR.NAZWALIS+3);

G.cntx_psh();
G.use(_maska_old);
{? _rok_z<>_rok_do
|| G.use(_maska_old)
?};
_czyL:=PAR_SKID.get(396)='L';
G.index('PODZ_ML');
{? _czyL
|| G.prefix(_p_ref,_msc_z,'K',_var_nazwalis,)
|| G.prefix(_p_ref,_msc_z,'K','',)
?};
{? G.first()
|| _tmp:=G.K().RN;
   {!
   |? {? _nadpisac & _usu
      || G.cntx_psh();
         {!
         |? G.cntx_psh();
            _nr:=G.K().RN;
            {? _rok_z<>_rok_do || G.use(_maska) ?};
            G.index('PODZ_ML');
            {? _czyL
            || G.prefix(_p_ref,_msc_do,'K',VAR.NAZWALIS,_nr)
            || G.prefix(_p_ref,_msc_do,'K','',_nr)
            ?};
            {? G.first()
            || {! |? exec('kas_wyr','dok_fks_aut_dok','G',#G.ref(),'X'); G.del() !}
            ?};
            G.cntx_pop();
            G.next()
         !};
         _usu:=0;
         G.cntx_pop()
      ?};
      _nr:=G.K().RN;

      {? _nadpisac
      || _dalej:=1
      || G.cntx_psh();
         G.use(_maska);
         G.index('PODZ_ML');
         {? _czyL
         || G.prefix(_p_ref,_msc_do,'K',VAR.NAZWALIS,_nr)
         || G.prefix(_p_ref,_msc_do,'K','',_nr)
         ?};
         {? G.first()
         || G.cntx_pop();
            _dalej:=1;
            {! |? _dalej & _nr=G.K().RN |!
               _dalej:=G.next()
            !}
         || G.cntx_pop;_dalej:=1
         ?}
      ?};
      {!
      |? _dalej & _nr=G.K().RN
      |! G.cntx_psh();
         _gef:=G.ref();
         {? _rok_z<>_rok_do || G.use(_maska) ?};
         G.index('MSCKW_KK');
         G.prefix();
         G.M:=_msc_do;
         {? _czyL
         || G.LT:=VAR.NAZWALIS
         || G.LT:=''
         ?};
         G.D:=date(_rok_do,_msc_do,1);
         _result+=G.add();
         {? _kopWyr
         || exec('kop_wyr','godz_kop',_gef,_maska_old,G.ref,_maska)
         ?};
         G.cntx_pop();
         _dalej:=G.next()
      !};
      _dalej
   !}
|| {? _msg || FUN.info('Brak zdefiniowanych podziałów w miesiącu źródłowym.'@) ?}
?};
G.cntx_pop();
_result


\kop_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW:
:: OPIS: okno wyboru pracowników, którym chcemy skopiować składnik
::   WE: _a  [INTEGER] - 1 - kopiowanie jednego składnika
::                       0 - kopiowanie wielu składników
::      [_b] [INTEGER] - miesiąc dla którego kopiujemy składnik
::   WY: 0 lub liczba skopiowanych rekordów
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_jeden:={? var_press('_a')=type_of(0) || _a || return(_result) ?};
  _msc:={? var_press('_b')=type_of(0) || _b || 0               ?};

{? _jeden < 0 || return(0) ?};

_aktual_p:=P.ref();

{? exec('spr_pr','godziny')=0
||
   G.cntx_psh();

   _TPAR:=tab_tmp(1,
::    Opcje dodatkowe
      'WYR','INTEGER','Czy kopiować definicje wyróżników?'@,
      'NADP','INTEGER','Czy nadpisać istniejące zapisy?'@
   );

   _we:=_TPAR.mk_edit('Parametry kopiowania'@);
   _TPAR.win_esep(_we,'Opcje dodatkowe'@);
   _TPAR.win_efld(_we,,'WYR',,,,,,'Wyróżniki',0,'Kopiuje definicję wyróżników do miesiąca docelowego','check-box',
                       'check_label="Kopiuj definicję wyróżników"',"1","0");
   _TPAR.win_efld(_we,,'NADP',,,,,,'Nadpisz',0,'Zastępuje istniejące zapisy w miesiącu docelowym','check-box',
                       'check_label="Zastąp istniejące zapisy"',"1","0");
   exec('ok_esc','#window',_TPAR,_we);
   _TPAR.win_edit(_we);

   _TPAR.WYR:=0;
   _TPAR.NADP:=0;

   {? _TPAR.edit()
   ||
:: wybranie pracowników do dalszego przetwarzania
      _args:=exec('wybierz_args','pracownik');
      _args.DOMAIN:='PPL';
      _args.HDR_SEL:='1. Wstępny wybór pracowników'@;
      _args.SQL_WHERE:='P.REFERENCE <> \'%1\''[$_aktual_p];

      _wyb:=exec('wybierz','pracownik',_args);
      {? _wyb.STATUS<>''
      || FUN.info(_wyb.STATUS)
      ?};

      P.cntx_psh();
      P.prefix();
      {? _wyb.P.first()
      || {!
         |? {? P.seek(_wyb.P.SQL) & P.ref()<>_aktual_p
            || {? _jeden
               || _result+=exec('kop_do_p','godz_kop',P.ref(),_TPAR.WYR,G.K().RN,_TPAR.NADP,_msc)
               || _result+=exec('kop_wsz','godz_kop',P.ref(),_TPAR.WYR,_TPAR.NADP,_msc)
               ?}
            ?};
            _wyb.P.next()
         !}
      ?};
      P.cntx_pop()
   ?};
   G.cntx_pop()
?};
_result


\kop_wsz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: kopiowanie wszystkich składników
::   WE: _a [REFERENCE] - ref pracownika
::       _b [INTEGER]   - kopiowanie wyróżników (0 - nie)(1 - tak)
::       _c [INTEGER]   - nadpisywanie istniejących (0 - nie)(1 - tak)
::      [_d] [INTEGER] - miesiąc dla którego kopiujemy składnik
::   WY: 0 lub liczba skopiowanych rekordów
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
  _p_ref:={? var_press('_a')=type_of(null) || _a || return(_result) ?};
 _kopWyr:={? var_press('_b')=type_of(0)    || _b || return(_result) ?};
_nadpisz:={? var_press('_c')=type_of(0)    || _c || return(_result) ?};
    _msc:={? var_press('_d')=type_of(0)    || _d || 0               ?};

{? G.first()
|| _rn:=0;
   {!
   |? {? _rn<>G.K().RN
      || _rn:=R.RN;
         _result+=exec('kop_do_p','godz_kop',_p_ref,_kopWyr,_rn,_nadpisz,_msc)
      ?};
      G.next()
   !}
?};
_result


\kop_do_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: kopiowanie jednego składnika
::   WE: _a  [REFERENCE] - ref pracownika
::       _b  [INTEGER]   - kopiowanie wyróżników (0 - nie)(1 - tak)
::       _c  [INTEGER]   - numer rubryki
::       _d  [INTEGER]   - nadpisywanie istniejących (0 - nie)(1 - tak)
::      [_e] [INTEGER]   - miesiąc dla którego kopiujemy składnik
::   WY: 0 lub liczba skopiowanych rekordów
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
  _p_ref:={? var_press('_a')=type_of(null) || _a || return(_result) ?};
 _kopWyr:={? var_press('_b')=type_of(0)    || _b || return(_result) ?};
  _nrRub:={? var_press('_c')=type_of(0)    || _c || return(_result) ?};
_nadpisz:={? var_press('_d')=type_of(0)    || _d || return(_result) ?};
    _msc:={? var_press('_e')=type_of(0)    || _e || 0               ?};

{? ZMIENNE.RODZAJ<>'S' & _msc=0 || return(_result) ?};

_czyML:=PAR_SKID.get(396)='L';
_czySL:=PAR_SKID.get(395)='L';
G.cntx_psh();
{? ZMIENNE.RODZAJ='S'
|| G.index('PODZ_SL')
|| G.index('PODZ_ML')
?};
{? _nadpisz
|| {? ZMIENNE.RODZAJ='S'
   || {? _czySL || G.prefix(_p_ref,'K',VAR.NAZWALIS+3,_nrRub) || G.prefix(_p_ref,'K','< ---- >',_nrRub) ?}
   || {? _czyML || G.prefix(_p_ref,_msc,'K',VAR.NAZWALIS,_nrRub) || G.prefix(_p_ref,_msc,'K','',_nrRub) ?}
   ?};
   {? G.first()
   || {! |? exec('kas_wyr','dok_fks_aut_dok','G',#G.ref(),'X'); G.del() !}
   ?}
?};
{? ZMIENNE.RODZAJ='S'
|| {? _czySL || G.prefix(_p_ref,'K',VAR.NAZWALIS+3,) || G.prefix(_p_ref,'K','< ---- >',) ?}
|| {? _czyML || G.prefix(_p_ref,_msc,'K',VAR.NAZWALIS,) || G.prefix(_p_ref,_msc,'K','',) ?}
?};
{? ~G.find_key(_nrRub)
|| G.cntx_pop();
   G.cntx_psh();
   _maska:=G.name();
   {? G.first()
   || {!
      |? {? G.K().RN=_nrRub
         || G.cntx_psh();
            _gef:=G.ref();
            G.prefix();
            G.P:=_p_ref;
            _result+=G.add();
            {? _kopWyr
            || exec('kop_wyr','godz_kop',_gef,_maska,G.ref(),_maska)
            ?};
            G.cntx_pop()
         ?};
         G.next()
      !}
   ?}
?};
G.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 af11a08caadb8588a3e63b6a8268317b615c8de8188f7105ba933f835566dfa9d5718adcb8f32d5917e92d762bef0441d4aaa864789ddd127943235baaee61b2b5a0183c49cf5741139bb1ec5f3c49b67e5577745ab0f86c512dff4a5687543659da708d784e2470a136ff8f34aaeb506a1e06eb0d3ab27499125bd515f132ea
