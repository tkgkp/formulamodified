:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: typysp.fml [17.00]
:: Utworzony: 19.02.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: obsługa formuł dla pól tabeli TYPYSP oraz STS - typydokumentów oraz stanowiska
::            Formuły są formułami wspólnymi dla dziedzin LSP i LZK
::======================================================================================================================


\pr_typsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: przed redakcją typu dokumentu sprzedaży/zakupu
::  OLD: \pr_typsp/defin.fml
::----------------------------------------------------------------------------------------------------------------------
:: exec('mod_typ','defin','TYPYSP')
exec('sp_count','typysp')


\po_typsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdzenie typu dokumentu magazynowego
::  OLD: \po_typsp/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? TYPYSP.T*' '
|| FUN.info('W typie dokumentu nie może być znaku SPACJI.'@);
   0
|| 1
?}


\beer_fis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: BEER.FIS
::  OLD: \beer_fis/defin.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.FIS


\prfispar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcją przeliczać od brutta
::   WY: 1-można edytować 0-nie można
::  OLD: \prfispar/defin.fml
::----------------------------------------------------------------------------------------------------------------------
exec('sp_count','typysp') & TYPYSP.PAR='N' & TYPYSP.DRPAR='N'
& exec('FindInSet','#table','TYPYSP','DOKSP',TYPYSP.T,TYPYSP.T)=null


\beer_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: BEER.KOR
::  OLD: \beer_kor/defin.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.KOR


\sp_count
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: czy mozna edytować pola w TYPYSP
::   WE: [_a] 0 - obsługa pola (domyślnie), 1 - nie
::  OLD: \sp_count/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0)
|| _a:=0
?};
_dopi:=0;
{? ~_a & 1+menu_txt='D'
|| _dopi:=1
?};
TYPYSP.cntx_psh();
_wyn:=exec('sp_count_core','typysp',~_dopi,_a);
TYPYSP.cntx_pop();
_wyn


\sp_count_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: czy mozna edytować pola w TYPYSP (z poziomu okna oraz funkcji importujących)
::   WE: [_a] 0 - dopisywanie (domyślnie), 1 - poprawianie
::       [_b] 0 - obsługa pola (domyślnie), 1 - nie
::   WY: 1 - tak, 0 - nie
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0)
|| _a:=0
?};
{? var_pres('_b')<>type_of(0)
|| _b:=0
?};
TYPYSP.cntx_psh();
{? _a
|| _il:=TYPYSP.count()-exec('infdodef_size','typyzam','TYPYSP');
   {? ~_b & TYPYSP.ZAK='N' & cur_afld()='KOR'
   || _td:=exec('FindAndGet','#table',TYPYSP,TYPYSP.ref(),,"TYPYSP.uidref()",'');
      WYDRUKIL.cntx_psh();
      WYDRUKIL.index('DP_TD');
      WYDRUKIL.prefix('T',_td);
      _il+=WYDRUKIL.size();
      WYDRUKIL.cntx_pop()
   ?};
   _wyn:=~_il
|| _wyn:=1
?};
TYPYSP.cntx_pop();
_wyn


\aetypkor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: po redakcji TYPYSP.KOR
::  OLD: \aetypkor/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? TYPYSP.KOR<>'T' || TYPYSP.HIS:='N' ?};
{? TYPYSP.KOR<>'N'
|| TYPYSP.PAR:='N'; TYPYSP.DOKSP:=''; TYPYSP.KH:=null(); TYPYSP.KK:=null();
   {? TYPYSP.HIS='N' || TYPYSP.NDVAT:='N' ?}
?};
{? TYPYSP.KOR='Z' || TYPYSP.NRT:=0; TYPYSP.ZAL:='N'
|? TYPYSP.KOR='N' || TYPYSP.SPPK:='N'
?};
exec('set_efld_opt','typysp');
1


\tsp_where
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Buduje warunek sql
::   WE: [_a] WHERE - jaki typ faktury, gdzie wystawiana
::       [_b] - ceny netto ('N') / brutto ('T') / dowolnie ('') <-domyslnie
::       [_c] - 'T'-magazyn typu sklad celny
::       [_d] - TYPYSP.SPP
::       [_e] - typ dokumnetu sprzedazy
::       [_f] - 'KOR' - korekta, 'HIS' - korekta historyczna, 'KZB' - korekta zbiorcza
::       [_g] - TYPYSP.UE
::       [_h] - TYPYSP.VATZPOZ
::   WY: warunek
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? _>=2  || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
{? _>=3  || {? type_of(_c)<>2 || _c:='' ?} || _c:='' ?};
{? _>=4  || {? type_of(_d)<>2 || _d:='' ?} || _d:='' ?};
{? _>=5  || {? type_of(_e)<>2 || _e:='' ?} || _e:='' ?};
{? _>=6  || {? type_of(_f)<>2 || _f:='' ?} || _f:='' ?};
{? _>=7  || {? type_of(_g)<>2 || _g:='' ?} || _g:='' ?};
{? _>=8  || {? type_of(_h)<>2 || _h:='' ?} || _h:='' ?};

_where:=0;

{? _a='Z'
:: zakup
|| _where:=$"UE='N' and ZAK='T' and ZAL_ROZ<>'S' and ZAL='N'"
|? _a='E'
:: zakup wewnętrzna
|| _where:=$"UE='T' and ZAL='N' and ZAK='T' and ZAL_ROZ<>'S' and ZAL='N'"
|? _a='l'
:: zakup zaliczka
|| _where:=$"ZAL='T' and ZAK='T' and ZAL_ROZ<>'S'";
   _where+={? _b='N' || $" and FIS='N'" |? _b='T' || $" and FIS='T'" || '' ?};
   _where+={? _d='N' || $" and SPP='N'" |? _d='T' || $" and SPP='T'" || '' ?};
   _where+={? _g='T' || $" and UE='T'" |? _g='N' || $" and UE='N'" || '' ?}
|? _a='L'
:: sprzedaż zaliczka
|| _where:=$"ZAL='T' and ZAK='N' and ZAL_ROZ<>'S'";
   _where+={? _b='N' || $" and FIS='N'" |? _b='T' || $" and FIS='T'" || '' ?};
   _where+={? _d='N' || $" and SPP='N'" |? _d='T' || $" and SPP='T'" || '' ?};
   _where+={? _g='T' || $" and UE='T'" |? _g='N' || $" and UE='N'" || '' ?}
:: pozostałe sprzedaży 'P', 'M', ''-nieokreślony
|| {? _b='T'
   || _where:=$"FIS='T' and ZAL_ROZ<>'S'";
      _where+={? _a='M' & _c='T' || $" and PAR='N'" || '' ?};
      _where+={? _d='N' || $" and SPP='N'" |? _d='T' || $" and SPP='T'" || '' ?}
   |? _b='N'
   || _where:=$"FIS='N' and ZAL_ROZ<>'S'";
      _where+={? _d='N' || $" and SPP='N'" |? _d='T' || $" and SPP='T'" || '' ?}
   || _where:=$"ZAL_ROZ<>'S'"
   ?};
   _where+={? _a='' || '' || $" and ZAL='N'" ?};
   _where+={? BEER.SZ='S' || $" and ZAK='N'" |? BEER.SZ='Z' || $" and ZAK='T'" || '' ?};
   _where+={? _g='T' || $" and UE='T'" |? _g='N' || $" and UE='N'" || '' ?}
?};
_where+={? _e=''  || '' || $" and TYPYSP.T='"+_e+$"'" ?};
_where+=
   {? _f='KOR' || $" and KOR='T' and HIS='N'"
   |? _f='HIS' || $" and KOR='T' and HIS='T'"
   |? _f='KZB' || $" and KOR='Z'"
               || $" and KOR='N'"
   ?};
_where+={? _h='T' || $" and VATZPOZ='T'" |? _h='N' || $" and VATZPOZ='N'" || '' ?};
_where


\tsp_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wyswietla uprawnione TYPYSP - typy dokumentow sprzedazy
::       przy okazji laduje TYPYSP do bufora
::   WE: [_a] dodatkowe warunki tylko dla tab. TYPYSP - jako [STRING: sql-where]
::            np.: 'ZAL='\T'\' lub $"KOR='N'"
::       [_b] rodzaj wyniku
::       [_c] czy komunikat 1-(domyslnie) tak 0-nie
::       [_d] czy usuwac filtr
::       [_e] czy zwrocenie jednego dokumentu (1) - inaczej nie powoluje select-a
::       [_f] okienko bez grupowego wyboru - domyślnie z grupowym wyborem
::       [_g] użytkownik
::       [_h] stanowisko STS.ref()
::   WY:
::       _b=1 => wybrany TYPYSP.ref (ESC zwraca null)
::       _b=2 => STRING zawierajacy typy wg podanych parametrow
::  OLD: \tsp_upr/fak_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? _>=2  || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
{? _>=3  || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};
{? _>=4  || {? type_of(_d)<>1 || _d:=1 ?} || _d:=1 ?};
{? _>=5  || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};
{? _>=6  || {? type_of(_f)<>1 || _f:=1 ?} || _f:=1 ?};
{? var_pres('_g')<>type_of(null()) || _g:=OPERATOR.USER ?};
{? var_pres('_h')<>type_of(null()) || _h:={? BEER.SZ='S' || ST.STS || ST.STZ ?} ?};

_wyn:={? _b=2 || '' || null ?};

_upr:=exec('get','#params',{? BEER.SZ='S' || 2002 || 6002 ?},2,_g);
{? _a='' || _where:='1=1' || _where:=_a ?};
{? _upr<>'' || _upr:=' '+_upr; _where+=' and position((\' \' || TYPYSP.T || \' \') in \''+_upr+'\')<>0' ?};

TYPYSP.clear();
TYPYSP.win_edit('RED'+BEER.SZ);
{? _h & exec('FindInSet','#table','T2STS','UNIK',_h)
|| _from:='join T2STS using(TYPYSP.REFERENCE,T2STS.T)';
   TYPYSP.f_set('T',_from,_where+' and T2STS.STS=:_a',_h)
|| TYPYSP.f_set('T',,_where)
?};
{? TYPYSP.f_size()>1 & TYPYSP.f_first() & _e<>1
||
   {? _b=2
   ||
      {!
      |? _wyn+=TYPYSP.T+' ';
         TYPYSP.f_next()
      !}
   ||
      _dfl_typ:=form(exec('get','#params',{? BEER.SZ='S' || 2003 || 6003 ?},2,OPERATOR.USER));
      TYPYSP.win_sel({? _f || 'WYST' || 'WYSB' ?});
      TYPYSP.hdr_sel();
      TYPYSP.hdr_sel({? BEER.SZ='S' || ' sprzedaży'@ || ' zakupu'@ ?});
      {? TYPYSP.select(,{? _dfl_typ='' || TYPYSP.f_first() || TYPYSP.f_find(_dfl_typ) ?},10)
      || _wyn:=TYPYSP.ref()
      ?}
   ?}
|? TYPYSP.f_size()=1
||
   {? TYPYSP.f_first()
   || {? _b=2
      || _wyn:=TYPYSP.T+' '
      || _wyn:=TYPYSP.ref()
      ?}
   ?}
|? _e
||
   _czy_upr:=sql('select * from TYPYSP where :_a',_a).size();
:   {? _c || FUN.info('Brak uprawnionych typów dokumentów '@+{? BEER.SZ='S' || 'sprzedaży.'@ || 'zakupu.'@ ?}) ?}
   {? _c
   || {? BEER.SZ='S'
      || {? _czy_upr>0
         || FUN.info('Brak uprawnionych typów dokumentów sprzedaży.'@)
         || {? AreaTitle.area = 'LSP_ZKN'
            || FUN.info('Brak typu dokumentu sprzedaży spełniającego kryteria zamówienia sprzedaży.'@)
            || FUN.info('Brak typu dokumentu sprzedaży spełniającego podane kryteria.'@)
            ?}
         ?}
      || FUN.info('Brak uprawnionych typów dokumentów zakupu.'@)
      ?}
   ?}
?};
{? _d || TYPYSP.f_clear() ?};
_wyn


\tsp_fak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: szuka wlasciwego typu dokumentu sprzedazy
::   WE: [_a] WHERE - jaki typ faktury, gdzie wystawiana
::       [_b] - ceny netto ('N') / brutto ('T') / dowolnie ('') <-domyslnie
::       [_c] - 'T'-magazyn typu sklad celny
::       [_d] - TYPYSP.SPP
::       [_e] - typ dokumnetu sprzedazy
::       [_f] - 'KOR' - korekta, 'HIS' - korekta historyczna, 'KZB' - korekta zbiorcza
::       [_g] - TYPYSP.UE
::       [_h] - TYPYSP.VATZPOZ
::       [_i] - klazula where
::   WY: TYPYSP.ref
::  OLD: \tsp_fak/fak_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? _>=2  || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
{? _>=3  || {? type_of(_c)<>2 || _c:='' ?} || _c:='' ?};
{? _>=4  || {? type_of(_d)<>2 || _d:='' ?} || _d:='' ?};
{? _>=5  || {? type_of(_e)<>2 || _e:='' ?} || _e:='' ?};
{? _>=6  || {? type_of(_f)<>2 || _f:='' ?} || _f:='' ?};
{? _>=7  || {? type_of(_g)<>2 || _g:='' ?} || _g:='' ?};
{? _>=8  || {? type_of(_h)<>2 || _h:='' ?} || _h:='' ?};
{? _>=9  || {? type_of(_i)<>2 || _i:='' ?} || _i:='' ?};

_stan:={? BEER.SZ='S' || ST.STS || ST.STZ ?};
_res:=null();
_byl:=0;

{? _e<>'' &  exec('FindInSet','#table','T2STS','UNIK',_stan)<>null()
|| _res:=exec('FindInSet','#table','TYPYSP','TYPYKOD',_e,_e);
   _byl:=_res<>null() & exec('FindInSet','#table','T2STS','UNIK',_res,_stan)<>null();
   _e:=''
?};
{? ~_byl
|| _where:=exec('tsp_where','typysp',_a,_b,_c,_d,_e,_f,_g,_h)+_i;
   _res:=exec('tsp_upr','typysp',_where,,,,2)
?};
_res


\tsp_zest_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: przed redakcja TYPYSP.ZEST
::  OLd: \tsp_zest_be/defin.fml
::----------------------------------------------------------------------------------------------------------------------
TYPYSP.ZAL<>'T'


\beer_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: BEER.ZAL
::  OLD: \beer_zal/defin.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.ZAL


\tsp_zal_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: przed redakcją TYPYSP.ZAL
::  OLD: \tsp_zal_be/defin.fml
::       \tsp_zalroz_be/defin.fml
::----------------------------------------------------------------------------------------------------------------------
TYPYSP.KOR<>'Z' & exec('sp_count','typysp')


\tsp_zal_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: po redakcji TYPYSP.ZAL
::  OLD: \tsp_zal_ae/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? TYPYSP.ZAL='T' || TYPYSP.ZEST:='N' ?};
{? TYPYSP.ZAL<>exec('FindInSet','#table','TYPYSP','TYPYKOD',TYPYSP.DOKSP,TYPYSP.DOKSP,"TYPYSP.ZAL",1,,'')
||
   TYPYSP.DOKSP:=''
?};
1


\his_fb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: formuła przed redkacją pola TYPYSP.HIS
::   WY: 1/0
::  OLD: \his_fb/firma.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('sp_count','typysp');
{? _wyn=1
|| {? TYPYSP.KOR='T'
   || _wyn:=1
   || TYPYSP.HIS:='N';
      _wyn:=0
   ?}
?};
_wyn


\tsp_rtransak_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcją TYPYSP.RTRANSAK
::  OLD: \tsp_rtransak_pr
::----------------------------------------------------------------------------------------------------------------------
TYPYSP.UE='T' & TYPYSP.KOR<>'Z'


\tsp_rtransak_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: klawisz F3 TYPYSP.RTRANSAK
::  OLD: \tsp_rtransak_f3/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('slownik','intrastat','004',TYPYSP.RTRANSAK)


\tsp_rtransak_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: po redakcji TYPYSP.RTRANSAK
::   WY: 1 - spełnione warunki, 0 - wpp
::  OLD: \tsp_rtransak_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=1;

:: sprawdzenie czy wartosc istnieje w slowniku 004
{? TYPYSP.RTRANSAK<>'' & exec('find_sl','intrastat','004',TYPYSP.RTRANSAK)=null || _return:=0 ?};

{? _return=0
|| FUN.info('Niedozwolona wartość pola \"Rodzaj transakcji\".'@)
?};

_return


\beer_zak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: BEER.ZAK
::  OLD: \beer_zak/defin.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.ZAK


\chk_typs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: formuła po dla akcji Rekord okien TYPYSP.SEL i TYPYSP.WER
::  OLD: \chk_typs/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};

_imp:=_a<>'';
{? _a='' & -(1+menu_txt)='d'
|| _a:='add'
|| _a:='put'
?};
_akcja:=_a;

_wyn:='';
{? TYPYSP.PAR<>'T' | _imp
|| _wyn:=__CHK.record(TYPYSP,,'T','NAZ','KOD')
|| _wyn:=__CHK.record(TYPYSP,,'T','NAZ','KOD','KH')
?};
{? _wyn='' & TYPYSP.NRT & TYPYSP.KOR='Z'
|| FUN.info('Numeracja tymczasowa jest niedostępna dla korekt zbiorczych.'@);
   _wyn:='KOR'
?};
{? TYPYSP.ZAL='T' || TYPYSP.ZAL_ROZ:='N'; TYPYSP.ZEST:='N' ?};
{? _wyn=''
||
   _kod:=TYPYSP.T;
   _ref:=TYPYSP.ref();
   TYPYSP.cntx_psh();
   TYPYSP.index('TYPYKOD');
   TYPYSP.prefix(_kod,_kod);
   {? TYPYSP.first()
   ||
      {!
      |?
         {? TYPYSP.ref()<>_ref | _akcja='add'
         ||
            {? BEER.ZAK<>TYPYSP.ZAK
            || FUN.info('Istnieje już typ '@ +_kod+'.\nUwaga. Typ wykorzystany dla dokumentów '@+{? TYPYSP.ZAK='T' || 'zakupu.'@ || 'sprzedaży.'@ ?})
            || FUN.info('Istnieje już typ '@ +_kod+'.')
            ?};
            _wyn:='T'
         ?};
         _wyn='' & TYPYSP.next()
      !}
   ?};
   TYPYSP.cntx_pop()
?};
{? _wyn='' & TYPYSP.UE='T' & TYPYSP.PAR='T'
|| FUN.info('Paragon nie może być dokumentem unijnym.'@);
   _wyn:='UE'
?};
{? _wyn='' & TYPYSP.NRT=1 & exec('FindInSet','#table','NRDOK','NRDOK',TYPYSP.KOD,,"NRDOK.FT",,,'')=''
||
   FUN.info('Definicja numeracji %1 nie ma formuły na znak tymczasowy.\n'
      'Numeracja tymczasowa została wyłączona.'@ [TYPYSP.KOD]);
   TYPYSP.NRT:=0
?};
_wyn


\typysp_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: popraw TYPYSP
::  OLD: \typysp_pop/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~TYPYSP.r_lock(1,1,1)
|| FUN.info('Typ blokowany przez innego użytkownika.'@)
|| _zest:=TYPYSP.ZEST;
   {? TYPYSP.ZAK='N' || exec('set_efld_opt','typysp') ?};
   {? TYPYSP.edit("exec('chk_typs','typysp')")
   ||
      {? TYPYSP.put() & _zest<>TYPYSP.ZEST
      ||
         FAKS.cntx_psh();
         _Tab:=FAKS.names();
         _loop:=_Tab.first();
         {!
         |? _loop
         |!
            FAKS.use(_Tab.NAME);
            FAKS.index('CONTROL');
            _loop1:=FAKS.first();
            {!
            |? _loop1
            |!
               exec('zest','faktury_nag');
               {? FAKS.put()
               ||
                  FAKS.cntx_psh();
                  {? TYPYSP.PAR='N' & FAKS.SYMF<>''
                  || FAKS.use(8+FAKS.SYMF);
                     FAKS.prefix();
                     {? FAKS.seek(FAKS.SYMF)
                     || exec('zest','faktury_nag');
                        FAKS.put()
                     ?}
                  |? TYPYSP.KOR='Z'
                  || _kz_uid:=exec('FindAndGet','#table',FAKS,FAKS.ref(),,"FAKS.uidref()",'');
                     _zest:=FAKS.ZEST;
                     _zestakc:=FAKS.ZEST_AKC;
                     FAKS_KZF.cntx_psh();
                     FAKS_KZF.index('KZ_UID');
                     FAKS_KZF.prefix(_kz_uid);
                     _loop2:=FAKS_KZF.first();
                     {!
                     |? _loop2
                     |!
                        FAKS.prefix();
                        {? FAKS.seek(FAKS_KZF.KOR)
                        || FAKS.ZEST:=_zest;
                           FAKS.ZEST_AKC:=_zestakc;
                           FAKS.put()
                        ?};
                        _loop2:=FAKS_KZF.next()
                     !};
                     FAKS_KZF.cntx_pop()
                  ?};
                  FAKS.cntx_pop()
               ?};
               _loop1:=FAKS.next()
            !};
            _loop:=_Tab.next()
         !};
         FAKS.cntx_pop()
      ?}
   ?};
   TYPYSP.r_unlock()
?}


\typs_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja przed usuń dla typów dokumentów sprzedaży TYPYSP
::  OLD: \typs_del/defin.fml
::----------------------------------------------------------------------------------------------------------------------
:: {? exec('mod_typ','defin','TYPYSP')
_czy:=exec('sp_count','typysp',1);
{? ~_czy || _czy:=(TYPYSP.count()-exec('ilefakso','fakso','faktodef','TYP',TYPYSP.ref()))=0 ?};
{? _czy>0
|| exec('delfakso','fakso','faktodef','TYP',TYPYSP.ref())
|| FUN.info('Typ dokumentu powiązany.\nUsunięcie niemożliwe'@);
   0
?}


\typd_inf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: informacje dodatkowe dla typu dokumentu sprzedaży
::   WY: ''
::  OLD: \typd_inf/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? TYPYSP.KOR='Z'
|| FUN.info('Funkcja niedostępna dla korekt zbiorczych.'@);
   return
?};
POM.TYPYSP:=TYPYSP.ref();
POM.TYPYDOK:=BEER.TYPYZAM:=null;

FAKSO.cntx_psh();
FAKSO.use('faktodef');
FAKSO.win_sel('WERT');
FAKSO.index('TYP');
FAKSO.prefix(TYPYSP.ref());
FAKSO.select();
FAKSO.cntx_pop();

POM.TYPYSP:=null;
''


\typs_kop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: kopiowanie typu dokumentu sprzedaży lub zakupu
::  OLD: \typs_kod/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_typ_old:=TYPYSP.ref();
FZ.TYPS_T:='';
FZ.win_edit('TYPS_KOP');
{? FZ.edit("
      _wyn:='~~';
      {? __CHK.record(FZ,,'TYPS_T')<>''
      || _wyn:='TYPS_T'
      |? FZ.TYPS_T*' '
      || FUN.info('W typie dokumentu nie może być znaku SPACJI.'@);
         _wyn:=0
      || TYPYSP.cntx_psh();
         TYPYSP.index('TYPYKOD'); TYPYSP.prefix(FZ.TYPS_T,FZ.TYPS_T);
         {? TYPYSP.first()
         || FUN.info('Typ dokumentu %1 już istnieje.\nKopiowanie na ten sam typ jest niedostępne.'@ [TYPYSP.T]);
            _wyn:='TYPS_T'
         ?};

         TYPYSP.cntx_pop()
      ?};
      _wyn")
|| TYPYSP.T:=FZ.TYPS_T;
   {? TYPYSP.add()
   || _typ_new:=TYPYSP.ref();
      {? FZ.KOP_INFD=1
      || FAKSO.cntx_psh();
         FAKSO.use('faktodef');
         FAKSO.index('TYP');
         FAKSO.prefix(_typ_old);
         {? FAKSO.first()
         || {!
            |? FAKSO.cntx_psh();
               FAKSO.TYPYSP:=_typ_new;
               FAKSO.prefix();
               FAKSO.add();
               FAKSO.cntx_pop();
               FAKSO.next()
            !}
         ?};
         FAKSO.cntx_pop()
      ?}
   ?}
?};
~~


\sel_exi2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: zwykły sel_exit lub sprawdzenie dla paragonów formy platności dla kontrahenta
::   WY: sel_exit lub 0-jak brak
::  OLD: \sel_exi2/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__taxtt')>0
|| sel_exit()
|? TYPYSP.PAR='T' & TYPYSP.KH().PLATNOSC=null
|| FUN.info('Dla kontrahenta do paragonu nie przypisano formy płatności.\n'+
    'Niemożliwy wybór dokumentu typu Paragon.'@);
   0
|| sel_exit()
?}


\typys_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Po Ten okna WYST tabeli TYPYSP
::  OLD: \typys_nr/defin.fml
::----------------------------------------------------------------------------------------------------------------------
POM.TYPDOK:=TYPYSP.KOD


\sel_wybr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: zwraca tabele zaznaczen + sel_exit
::  OLD: \sel_wybr/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__selwyb')>100 || obj_del(__selwyb) ?};
__selwyb:=cur_tab.sel_aget(); cur_tab.sel_adel();
sel_exit()


\be_sts_oddz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: przed redakcją pola STS.ODDZ
::  OLD: \be_sts_oddz/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? 1+(-menu_txt())<>'d' || STS.count()=0 || 1 ?}


\f3_sts_oddz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: F3 dla pola STS.ODDZ
::  OLD: \f3_sts_oddz/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('sel_upr','users','ODDZ','KOD')
|| STS.ODDZ:=ODDZ.KOD;
   {? exec('ae_sts_oddz','typysp')
   || STS.ODDZ
   ?}
?}


\ae_sts_oddz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: po redakcji pola STS.ODDZ
::  OLD: \ae_sts_oddz/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? STS.ODDZ<>''
|| _wyn:=exec('spr_upr','users','ODDZ',STS.ODDZ)
|| __CHK.record(STS,,'ODDZ')
?};
_wyn


\sts_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2009]
:: OPIS: akcja przed usuń dla definicji stanowisk sprzedaży/zakupu
::   WY: czy dozwolone usunięcie rekordu
::  OLD: \sts_del/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? STS.count-exec('sts_ile_upr','typysp',STS.ref())>0
|| FUN.info('Ze stanowiskiem powiązano dokumenty, uprawnienia lub rachunki bankowe.\nUsunięcie niemożliwe.'@)
|? FUN.ask('Usunąć stanowisko?'@)
|| USERS_UP.cntx_psh();
   USERS_UP.index('USM');
   USERS_UP.prefix('STS');
   {? USERS_UP.first()
   || {!
      |? {? USERS_UP.STS=STS.ref()
         || USERS_UP.del()
         || USERS_UP.next()
         ?}
      !}
   ?};
   USERS_UP.prefix('STZ');
   {? USERS_UP.first()
   || {!
      |? {? USERS_UP.STZ=STS.ref()
         || USERS_UP.del()
         || USERS_UP.next()
         ?}
      !}
   ?};
   USERS_UP.cntx_pop();
   STS.del()
?};
0


\sts_ile_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: sprawdza liczbę użytkowników uprawnionych do danego stanowiska sprzedaży/zakupu
::   WE: _a - ODDZ.ref
::   WY: ilosc użytkowników
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_sql:='select users from users_up '
      +'where (akr = \'STS\' and sts = \'' + $_a + '\') or (akr = \'STZ\' and stz = \'' + $_a + '\')';
_tab:=sql(_sql);
_wyn:=_tab.size();
_wyn



\chk_sts
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja rekord po dla słownika stanowisk STS
::       UWAGA - formuła wołana również podczas importu rekordów
::   WE: [_a] - 'add' / 'put' - dołączenie lub poprawa rekordu
::  OLD: \chk_sts/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};

{? _a='' & -(1+menu_txt)='d'
|| _a:='add'
|| _a:='put'
?};
_akcja:=_a;

_wyn:=__CHK.record(STS,,'ODDZ','KOD');
{? _wyn='' & STS.ODDZ<>''
||
   _chk:=exec('spr_upr','users','ODDZ',STS.ODDZ);
   {? _chk<>1
   || _wyn:='ODDZ'
   ?}
?};


{? _wyn=''
|| _kod:=STS.KOD;
   _ref:=STS.ref();
   STS.cntx_psh();
   STS.index('K');
   STS.prefix(_kod,);
   {? STS.first()
   || {!
      |? {? STS.ref()<>_ref | _akcja='add'
         || FUN.info('Istnieje już stanowisko z kodem %1.\n'
            'Uwaga. Kod stanowiska sprawdzany jest równocześnie dla stanowisk sprzedaży i zakupów.'@[_kod]);
            _wyn:='KOD'
         ?};
         _wyn='' & STS.next()
      !}
   ?};
   STS.cntx_pop()
?};
_wyn


\bl_faksz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: wartość początkowa pola FAKS.SZ
::  OLD: \bl_faksz/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='S';
{? BEER.SZ<>'' || _wyn:=BEER.SZ ?};
_wyn


\exp_ue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: sprawdza czy dokument eksportowy lub wdt
::   WY: 1-dokument eksportowy lub wdt, 0-wpp
::  OLD: \exp_ue/defin.fml
::----------------------------------------------------------------------------------------------------------------------
TYPYSP.cntx_psh;
_wyn:=FAKS.T().EXPORT='T' | FAKS.T().UE='T' & TYPYSP.ZAK='N';
TYPYSP.cntx_pop;
_wyn


\t2sts
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [14.10]
:: OPIS: Typy dokumentów stanowiska
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_sts:=STS.ref();

T2STS.index('T');
T2STS.prefix(_sts);
T2STS.win_sel('WER');
T2STS.hdr_sel();
T2STS.hdr_sel(' '+exec('FindAndGet','#table',STS,_sts,,"STS.KOD",''));
T2STS.select()


\t2sts_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AWI] [17.14]
:: OPIS: dodanie TYPYSP do T2STS
::----------------------------------------------------------------------------------------------------------------------
_sts:=STS.ref();

_war:=
   {? STS.SZ='S'
   || "TYPYSP.ZAK='N'"
   || "TYPYSP.ZAK='T'"
   ?};
_par:=_buf:='';
T2STS.cntx_psh();
{? T2STS.first()
|| {!
   |? _par+=T2STS.T().T+' ';
      T2STS.next()
   !}
?};
_buf:=_par;
TYPYDOK.index('TYP');
_par:=exec('typysp_wyb','params',_par,_war,0);
{? _par<>'' | _par<>_buf
|| _ch:=' ';
   _all:=0;
   {? _par<>''
   || {!
      |? _wsk:=_par*_ch;
         _typ:=(_wsk-1)+_par;
         _par:=_wsk-_par;
         _ref:=exec('FindInSet','#table','TYPYSP','TYPYKOD',_typ,_typ);
         _wsk:=_buf*(_typ+_ch);
         {? _wsk || _buf:=((_wsk-1)+_buf)+((_wsk-1+(+(_typ+_ch)))-_buf) ?};
         {? ~_wsk & _ref<>null()
         || T2STS.blank();
            T2STS.STS:=_sts;
            T2STS.T:=_ref;
            T2STS.add(1)
         ?};
         +form(_par)>0
      !}
   || _all:=1
   ?};
   {? _buf<>''
   ||
      {!
      |? _wsk:=_buf*_ch;
         _typ:=(_wsk-1)+_buf;
         _buf:=_wsk-_buf;
         _ref:=exec('FindInSet','#table','TYPYSP','TYPYKOD',_typ,_typ);
         {? _ref<>null()
         || T2STS.index('UNIK');
            T2STS.prefix(_sts,_ref);
            {? T2STS.first() || T2STS.del() ?}
         ?};
         +form(_buf)>0
      !}
   ?}
?};
T2STS.cntx_pop();
''


\st_sts
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: ST.STS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ST.STS


\st_sts_reference
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: $ST.STS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
$ST.STS


\his_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.02]
:: OPIS: formuła po redkacji pola TYPYSP.HIS
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('t_or_n','#field');
{? _wyn || exec('set_efld_opt','typysp') ?};
_wyn


\pofispar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.02]
:: OPIS: formuła po redkacji pola TYPYSP.FIS
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
exec('set_efld_opt','typysp');
1


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.02]
:: OPIS: formuła po redkacji pola TYPYSP.HIS
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
TYPYSP.efld_opt('REDS',{? (TYPYSP.KOR='N' | TYPYSP.HIS='T') & TYPYSP.FIS='N' & TYPYSP.PAR='N'
                       || 'enable=1'
                       || 'enable=0'
                       ?},,'NDVAT');
TYPYSP.efld_opt('REDS',{? TYPYSP.PAR='T' || 'mark=1' || 'mark=0' ?},,'KH');
TYPYSP.efld_opt('REDS',{? TYPYSP.PAR='T' || 'editable=grayed' || 'editable=1' ?},,'WAL','KOD');
TYPYSP.efld_opt('REDS',{? TYPYSP.UE='T' || 'editable=1' || 'editable=grayed' ?},,'UE_WSU');
~~


\typysp_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: Formuła eksportująca wartość parametru TYPYSP dla czynności
::   WE: _a - TYPYSP.ref() - wartość parametru
::   WY: STRING - treść formuły która się wykona po stronie importu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_typydok:=_a;

_fml:='';

TYPYSP.cntx_psh();
TYPYSP.clear();
{? TYPYSP.seek(_typydok)
||
   _fml:=exec('formulizer_common','#b_export');
   _fml+='
      TYPYSP.cntx_psh();
      TYPYSP.index(\'TYPYKOD\');
      TYPYSP.prefix(\''+TYPYSP.T+'\',);
      {? TYPYSP.first()
      || _result.REF:=TYPYSP.ref();
         _result.RESULT:=1
      || _result.RESULT:=0;
         _result.REF:=null();
         {? _komm>0
         ||
            _msg:=\'Nie znaleziono typu dokumentu sprzedaży o symbolu: %1\'@[\''+TYPYSP.T+'\'];
            exec(\'import_komm\',\'#b_export\',_msg)
         ?}
      ?};
      TYPYSP.cntx_pop();
      _result
   ';
   _fml:=exec('formulizer_clean','#b_export',_fml)
?};
TYPYSP.cntx_pop();
_fml


\spp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: po redakcji TYPYSP.SPP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TYPYSP.SPP='N' || TYPYSP.SPPK:='N' ?};
1


\sppk_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: przed redakcją TYPYSP.SPPK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
(TYPYSP.KOR='T' | TYPYSP.KOR='Z')
& exec('sp_count','typysp')


\pr_add_typysp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: przed redakcją TYPYSP
::----------------------------------------------------------------------------------------------------------------------
TYPYSP.efld_opt('REDS','mark=0',,'KH');
TYPYSP.efld_opt('REDS',{? TYPYSP.UE='T' || 'editable=1' || 'editable=grayed' ?},,'UE_WSU');
1


\tpsp2kor_wyb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Dla typu dokumentu sprzedaży wybór typów dokumentów korygujących z listy możliwych typów
::----------------------------------------------------------------------------------------------------------------------
_tp_sp:=TYPYSP.ref();

_par0:='';
TYPYSP.cntx_psh();
TP2TP.cntx_psh();
TP2TP.index('T1');
TP2TP.prefix(1,_tp_sp);
{? TP2TP.first()
|| {!
   |? {? TP2TP.TPS2<>null()
      || _par0+=TP2TP.TPS2().T+' '
      ?};
      TP2TP.next()
   !}
?};
TYPYSP.cntx_pop();
TP2TP.cntx_pop();

_war:='TYPYSP.UE=\''+TYPYSP.UE+'\' & TYPYSP.KOR=\'T\' & TYPYSP.ZAL=\''+TYPYSP.ZAL+
      '\' & TYPYSP.HIS=\'N\' & TYPYSP.FIS=\''+TYPYSP.FIS+
      '\' & TYPYSP.ZAK=\'N\' & TYPYSP.SPP=\''+TYPYSP.SPP+'\' & TYPYSP.VATZPOZ=\''+TYPYSP.VATZPOZ+
      '\' & TYPYSP.T<>\''+TYPYSP.T+'\'';
_war:=$_war;

_par:=exec('typysp_wyb','params',_par0,_war);
{? _par<>_par0
|| TYPYSP.cntx_psh();
   TP2TP.cntx_psh();
   TP2TP.index('T1');
   TP2TP.prefix(1,_tp_sp);
   {? TP2TP.first()
   || {!
      |? {? (' '+_par+' ')*(' '+TP2TP.TPS2().T+' ')=0
         || TP2TP.cntx_psh();
            _next:=TP2TP.next();
            TP2TP.cntx_pop();
            TP2TP.del();
            _next
         || TP2TP.next()
         ?}
      !}
   ?};
   {? _par<>'' & _par-1<>''
   || TYPYSP.index('SPRZAK');
      _par_t:=spli_str(_par-1,' ');
      {! _ii:=1..obj_len(_par_t)
      |! TYPYSP.prefix('N',_par_t[_ii]);
         {? TYPYSP.first() & ~TP2TP.find_key(TYPYSP.ref())
         || TP2TP.blank();
            TP2TP.RODZ:=1;
            TP2TP.TPS1:=_tp_sp;
            TP2TP.TPS2:=TYPYSP.ref();
            TP2TP.add()
         ?}
      !}
   ?};
   TYPYSP.cntx_pop();
   TP2TP.cntx_pop()
?};
~~


\tpsp2kor_lista
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Dla dokumentu sprzedaży lista symboli powiązanych typów dokumentów korygujących (np. "'FK','FK1'")
::   WE: _a - TYPYSP.ref()
::----------------------------------------------------------------------------------------------------------------------
_tp_sp:=_a;
_lista:='';
TYPYSP.cntx_psh();
TP2TP.cntx_psh();
TP2TP.index('T1');
TP2TP.prefix(1,_tp_sp);
{? TP2TP.first()
|| {!
   |? {? _lista<>''
      || _lista+=','
      ?};
      _lista+='\''+TP2TP.TPS2().T+'\'';
      TP2TP.next()
   !}
?};
TP2TP.cntx_pop();
TYPYSP.cntx_pop();
_lista


\rb_typs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Rekord przed okna TYPYSP.WER
::   WE: _a - 0/1 - ostatni odrysowany rekord
::----------------------------------------------------------------------------------------------------------------------
{? _a & TYPYSP.ZAK='N'
|| {? TYPYSP.KOR='T'
   || TYPYSP.actions_grayed('WER','R')
   |? TYPYSP.KOR='Z'
   || TYPYSP.actions_grayed('WER','RZ')
   || TYPYSP.actions_grayed('WER','Z')
   ?}
?};
~~


\tpkor2zz_wyb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Dla typu dokumentu sprzedaży korygującego wybór typów dokumentów zwrotu z listy możliwych typów
::----------------------------------------------------------------------------------------------------------------------
_tp_kor:=TYPYSP.ref();

_par0:='';
TYPYDOK.cntx_psh();
TP2TP.cntx_psh();
TP2TP.index('T2');
TP2TP.prefix(2,_tp_kor);
{? TP2TP.first()
|| {!
   |? {? TP2TP.TPM2<>null()
      || _par0+=TP2TP.TPM2().T+' '
      ?};
      TP2TP.next()
   !}
?};
TYPYDOK.cntx_pop();
TP2TP.cntx_pop();

_war:='TYPYDOK.Z=\'T\' & TYPYDOK.P=\'T\' & TYPYDOK.DN=\'T\' & TYPYDOK.TD=\'\' & TYPYDOK.DS=\'N\'';
_war:=$_war;

_par:=exec('typydok_wyb','params',_par0,_war);
{? _par<>_par0
|| TYPYDOK.cntx_psh();
   TP2TP.cntx_psh();
   TP2TP.index('T2');
   TP2TP.prefix(2,_tp_kor);
   {? TP2TP.first()
   || {!
      |? {? (' '+_par+' ')*(' '+TP2TP.TPM2().T+' ')=0
         || TP2TP.cntx_psh();
            _next:=TP2TP.next();
            TP2TP.cntx_pop();
            TP2TP.del();
            _next
         || TP2TP.next()
         ?}
      !}
   ?};
   {? _par<>'' & _par-1<>''
   || TYPYDOK.index('TYP');
      _par_t:=spli_str(_par-1,' ');
      {! _ii:=1..obj_len(_par_t)
      |! TYPYDOK.prefix(_par_t[_ii],_par_t[_ii]);
         {? TYPYDOK.first() & ~TP2TP.find_key(TYPYDOK.ref())
         || TP2TP.blank();
            TP2TP.RODZ:=2;
            TP2TP.TPS1:=_tp_kor;
            TP2TP.TPM2:=TYPYDOK.ref();
            TP2TP.add()
         ?}
      !}
   ?};
   TYPYDOK.cntx_pop();
   TP2TP.cntx_pop()
?};
~~


\tpkor2zz_lista
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Dla dokumentu sprzedaży korygującego lista symboli powiązanych typów dokumentów zwrotu (np. "'ZW','ZW1'")
::   WE: _a - TYPYSP.ref()
::----------------------------------------------------------------------------------------------------------------------
_tp_sp:=_a;
_lista:='';
TYPYDOK.cntx_psh();
TP2TP.cntx_psh();
TP2TP.index('T2');
TP2TP.prefix(2,_tp_sp);
{? TP2TP.first()
|| {!
   |? {? _lista<>''
      || _lista+=','
      ?};
      _lista+='\''+TP2TP.TPM2().T+'\'';
      TP2TP.next()
   !}
?};
TP2TP.cntx_pop();
TYPYDOK.cntx_pop();
_lista


\ue_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: formuła po redkacji pola TYPYSP.UE
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('t_or_n','#field');
{? _wyn
|| {? TYPYSP.UE='N'
   || TYPYSP.UE_WSU:='N'
   ?};
   exec('set_efld_opt','typysp')
?};
_wyn


\uewsu_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: formuła po redkacji pola TYPYSP.UE_WSU
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('t_or_n','#field');
{? _wyn
|| {? TYPYSP.UE_WSU='T'
   || TYPYSP.TOW_USL:='U'
   ?}
?};
_wyn

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 d146ac7c00eea2c6a203117d37fe609bc28c1a9d59ce3a1fe1702079a7c8d983ce9237f3886e0afdf3f8f205474e7db8f45bce833b4edb32820ebb9097bcaea6a5785f5e6a9cf6bb8dbef724f906c54037620d96125c6dd2643d54fdaa231cef5f7a1ea1e9fb767ff401c3eab988099f0bd6aef5c9e1c615074f26beb1970fc8
