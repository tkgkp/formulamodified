:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: skanuj.fml
:: Utworzony: 04.02.2020
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły do obsługi skanowania i OCR dokumentów
::======================================================================================================================


\send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Wysłanie dokumentu
::   WE: _a - url
::       _b - nagłówki HTTP
::       _c - in
::       _d - out
::----------------------------------------------------------------------------------------------------------------------
::_http:=inet_get(_a);
_http:=exec('inet_get','proxy',{? exec('interm','#system') || '' || '@' ?}+_a);
::_http.set_verb('inet_log.bin');
{? var_pres('_b')>0
|| _head:=spli_str(_b,'\n');
   {! _i:=1..obj_len(_head)
   |! _http.append_h(_head[_i])
   !}
?};
no_msg(1);
_res:={? var_pres('_c')>0
      || {? type_of(_c)=type_of(1) & _c=-1
         || _http.http_del(_d)
         || _http.http_post(_d,_c)
         ?}
      || _http.http_get(_d)
      ?};
no_msg(0);
_res


\getToken
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Pobranie tokane ze skanuj.to
::   WE: [_a] - czy odczytać dane autoryzacyjne: [1] - tak 0 - nie
::   WY: tablica z polami:
::       token - Token autoryzacyjny pozostałych metod lub '' gdy błąd
::       msg - informacja dotycząca autoryzacji np o błędzie
::----------------------------------------------------------------------------------------------------------------------
_buf:=exec('obj_token','skanuj');
_obj:=obj_new('token','msg');
_obj.token:=_buf.get();
_obj.msg:='';
{? _obj.token=''
|| _auth_get:={? var_pres('_a')>0 || _a || 1 ?};
   {? _auth_get=0 | exec('auth_ok','skanuj')
   || {? SKAN_USR.TYP='H'
      || _in:='email='+SKAN_USR.LOGIN+'&password='+SKAN_USR.PASS
      || _in:='email='+SKAN_USR.LOGIN+'&key='+SKAN_USR.PASS
      ?};
      _fnout:='scn_res.bin';
      _out:=fopen(_fnout,'bw',1,,1);
      _token:='';
      {? _out.is_open()
      || _res:=exec('send','skanuj','https://app.skanuj.to/api/auth',,_in,_out);
         _out.fclose();
         &_out
      ?};
      {? _res=200
      || _txt:=exec('read','skanuj',_fnout);
         {? _txt<>''
         || _json:=json_parse(_txt);
            {? var_pres('token',_json)>0
            || _obj.token:=_json.token;
               {? _obj.token<>'' || _buf.set(_obj.token) ?}
            ?};
            {? var_pres('msg',_json)>0
            || _obj.msg:=_json.msg
            ?}
         ?}
      || _obj.msg:='Pobranie tokenu. Wynik połączenia: '+$_res
      ?};
      ferase(_fnout,1)
   || _obj.msg:='Nie wypełnione dane autoryzacyjne.'
   ?}
?};
_obj


\send_doc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Wysłanie bieżącego dokumentu do skanuj.to
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_dok:=obj_new('id','msg','state');
_dok.id:=-1;
_dok.msg:='';
_obj:=exec('getToken','skanuj');
{? _obj.token<>''
|| _sep:=hash(tm_stamp);
   _hdr:='token: '+_obj.token+'\ncompany_id: '+$REF.FIRMA().ST_ID+'\n'
         'Content-Type: multipart/form-data; boundary='+_sep+'\n'
         'Connection: keep-alive';
   _fn:=SKAN_DOK.bl_info('PLIK','NAME');
   _fnout:='st'+$SYSLOG.tm_stamp()+'.bin';
   _out:=fopen(_fnout,'Uw',1);
   {? _out
   || fwrite(_out,'--'+_sep);
      fwrite(_out,'Content-Disposition: form-data; name="FILE"; filename="'+_fn+'"');
      fwrite(_out,'Content-Type: image/jpg\r\n');
      fclose(_out)
   ?};
   _out:=fopen(_fnout,'b',1);
   {? _out
   || fseek(_out,fgetsize(_out));
      _file:=fopen(SKAN_DOK.PLIK,'br',0);
      {? _file
      || {!
         |? {? (_byte:=fread(_file))<>-1
            || fwrite(_out,_byte);
               1
            ?}
         !};
         fclose(_file)
      ?};
      fclose(_out)
   ?};
   _out:=fopen(_fnout,'Ua',1);
   {? _out
   ||
      fwrite(_out,'\r\n--'+_sep);
      fwrite(_out,'Content-Disposition: form-data; name="mode"\r\n');
      fwrite(_out,'upload-file');
      {? exec('get_par','#parametr',115)='T'
      || fwrite(_out,'--'+_sep);
         fwrite(_out,'Content-Disposition: form-data; name="extra"');
         fwrite(_out,'Content-Type: application/json\r\n');
         fwrite(_out,'{"forceUploadExisted":1}')
      ?};
      fwrite(_out,'--'+_sep+'--');
      fclose(_out)
   ?};
   _res:=-1;
   _fnres:='st'+$SYSLOG.tm_stamp()+'.bin';
   _in:=fopen(_fnout,'br',1,,1);
   {? _in.is_open()
   || _out:=fopen(_fnres,'bw',1,,1);
      {? _out.is_open()
      || _res:=exec('send','skanuj','https://app.skanuj.to/api/document',_hdr,_in,_out);
         fclose(_out);
         &_out
      ?};
      _in.fclose();
      &_in
   ?};
   {? _res=200
   || _txt:=exec('read','skanuj',_fnres);
      _json:=json_parse(_txt);
      {? var_pres('good',_json)>0
      || {? var_pres('doc_id',_json.good[1])>0
         || _dok.id:=_json.good[1].doc_id
         ?};
         {? var_pres('state',_json.good[1])>0
         || _dok.state:=_json.good[1].state
         ?}
      |? var_pres('bad',_json)>0
      || _dok.msg:='';
         {! _ii:=1..obj_len(_json.bad)
         |! {? _dok.msg<>'' || _dok.msg+='\n' ?};
            _dok.msg+=_json.bad[_ii]
         !}
      ?}
   ?};
   ferase(_fnres,1);
   ferase(_fnout,1)
|| _dok.msg:=_obj.msg
?};
_dok


\token_doc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Pobiera token do weryfikacji dokumentu
::----------------------------------------------------------------------------------------------------------------------
_dok:=obj_new('token','msg');
_dok.token:='';
_dok.msg:='';
exec('auth_get','skanuj');
_fn:='st'+$SYSLOG.tm_stamp()+'.bin';
_out:=fopen(_fn,'bw',1,,1);
{? _out.is_open()
|| _in:='doc_id='+SKAN_DOK.ID+'&email='+SKAN_USR.LOGIN+'&'+{? SKAN_USR.TYP='H' || 'password' || 'apikey' ?}+'='+SKAN_USR.PASS;
   _res:=exec('send','skanuj','https://app.skanuj.to/api/docauth',,_in,_out);
   fclose(_out);
   &_out
?};
{? _res=200
|| _txt:=exec('read','skanuj',_fn);
   {? _txt<>''
   || _json:=json_parse(_txt);
      {? var_pres('doc_token',_json)>0
      || _dok.token:=_json.doc_token
      ?};
      {? var_pres('msg',_json)>0
      || _dok.msg:=_json.msg
      ?}
   ?}
?};
ferase(_fn,1);
_dok


\ver_list
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Zwraca listę zweryfikowanych dokumentów
::   WE: _a - status zwracanych dokumentów: 2-zweryfikowane 3-do weryfikacji
::----------------------------------------------------------------------------------------------------------------------
_status:={? var_pres('_a')>0 || _a || 2 ?};
_dok:=obj_new('list','msg','ok');
_dok.list:=~~;
_dok.ok:=0;
_obj:=exec('getToken','skanuj');
{? _obj.token<>''
|| _hdr:='token: '+_obj.token+'\ncompany_id: '+$REF.FIRMA().ST_ID;
   _res:=-1;
   _fn:='st'+$SYSLOG.tm_stamp()+'.bin';
   _out:=fopen(_fn,'bw',1,,1);
   {? _out.is_open()
   || _res:=exec('send','skanuj','https://app.skanuj.to/api/document/mode/list-id-to-retrieve?state='+$_status,_hdr,,_out);
      fclose(_out);
      &_out
   ?};
   {? _res=200
   || _dok.ok:=1;
      _txt:=exec('read','skanuj',_fn);
      {? _txt<>''
      || _json:=json_parse(_txt);
         {? var_pres('_json')>0
         || _dok.list:=_json
         ?}
      ?}
   ?};
   ferase(_fn,1)
|| _dok.msg:=_obj.msg
?};
_dok


\ver_doc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Weryfikacja dokumentu
::----------------------------------------------------------------------------------------------------------------------
_obj:=exec('token_doc','skanuj');
{? _obj.token<>''
|| _url:='https://app.skanuj.to/customer/document/token/'+_obj.token;
   exec('open_http','control',_url,'Weryfikacja dokumentu');
   _dok:=exec('ver_list','skanuj');
   {? _dok.ok
   || {? var_pres('list',_dok)>0
      || {! _i:=1..obj_len(_dok.list)
         |! {? SKAN_DOK.ID=$_dok.list[_i]
            || SKAN_DOK.STATUS:='V';
               SKAN_DOK.put()
            ?}
         !}
      ?}
   || FUN.info('Nie udało się pobrać listy zweryfikowanych dokumentu.')
   ?}
|? _obj.msg<>''
|| FUN.info('Informacja ze skanuj.to:\n%1'@[_obj.msg])
|| FUN.info('Nie udało się pobrać tokenu do weryfikacji dokumentu.')
?}


\get_doc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Pobiera dane dokumentu od skanuj.to
::----------------------------------------------------------------------------------------------------------------------
_dok:=obj_new('file','msg','state');
_dok.file:='st'+$SYSLOG.tm_stamp()+'.json';
_dok.state:=-1;
_dok.msg:='';
_obj:=exec('getToken','skanuj');
{? _obj.token<>''
|| _hdr:='token: '+_obj.token+'\ncompany_id: '+$REF.FIRMA().ST_ID;
   _res:=-1;
   _out:=fopen(_dok.file,'bw',1,,1);
   {? _out.is_open()
   || _res:=exec('send','skanuj','https://app.skanuj.to/api/document/mode/one-xt?id='+SKAN_DOK.ID,_hdr,,_out);
      fclose(_out);
      &_out
   ?};
   {? _res=200
   || _txt:=exec('read','skanuj',_dok.file);
      {? _txt*'Brak dokumentu o podanym id.'
      || _dok.msg:=_txt;
         _dok.file:=''
      || _json:=json_parse(_txt);
         {? var_pres('state',_json)>0
         || _dok.state:=_json.state
         ?}
      ?}
   || _dok.file:=''
   ?}
|| _dok.msg:=_obj.msg
?};
_dok


\exp_doc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Ustawia znacznik eksportu w skanuj.to
::   WE: _a - status 1/0
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
_obj:=exec('getToken','skanuj');
{? _obj.token<>''
|| _hdr:='token: '+_obj.token;
   _in:='mode=change-status&id='+SKAN_DOK.ID+'&status='+$_a;
   _res:=-1;
   _fn:='st'+$SYSLOG.tm_stamp()+'.bin';
   _out:=fopen(_fn,'bw',1,,1);
   {? _out.is_open()
   || _res:=exec('send','skanuj','https://app.skanuj.to/api/document',_hdr,_in,_out);
      fclose(_out);
      &_out
   ?};
   {? _res=200
   || _txt:=exec('read','skanuj',_fn);
      {? _txt<>''
      || _json:=json_parse(_txt);
         _ok:=var_pres('code',_json)>0 & _json.code=10
      ?}
   ?};
   ferase(_fn,1)
?};
_ok


\del_doc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Ustawia dokument ze skanuj.to
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
_obj:=exec('getToken','skanuj');
{? _obj.token<>''
|| _hdr:='token: '+_obj.token;
   _res:=-1;
   _fn:='st'+$SYSLOG.tm_stamp()+'.bin';
   _out:=fopen(_fn,'bw',1,,1);
   {? _out.is_open()
   || _res:=exec('send','skanuj','https://app.skanuj.to/api/document?id='+SKAN_DOK.ID,_hdr,-1,_out);
      fclose(_out);
      &_out
   ?};
   {? _res=200
   || _txt:=exec('read','skanuj',_fn);
      {? _txt<>''
      || _json:=json_parse(_txt);
         _ok:=var_pres('code',_json)>0 & _json.code=10
      ?}
   ?};
   ferase(_fn,1)
?};
_ok


\read
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Odczytuje zawartość pliku textowego
::   WE: _a - plik
::----------------------------------------------------------------------------------------------------------------------
_file:=_a;
_txt:='';
_out:=fopen(_file,'r',1,,1);
{? _out.is_open()
|| {!
   |? {? (_line:=_out.fread())<>'\n'
      || _txt+=_line;
         1
      ?}
   !};
   fclose(_out)
?};
_txt


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Dodaje zeskanowany dokument
::   WE:  _a  - scieżka do pliku z fakturą
::        _b  - typ: D-dokument księgowy, F-faktura w obiegu, ''-jedno i drugie
::       [_c] - scieżka do pliku - dodatkowy załacznik lub ''-gdy brak
::   WY: SKAN_DOK.ref lub informacja o błędzie
::----------------------------------------------------------------------------------------------------------------------
_file:=fopen(_a,'br',0,,1);
{? _file.is_open()
|| _hash:=hash(_file);
   fclose(_file);
   _ref:=null;
   _jest:=0;
   SKAN_DOK.cntx_psh();
   SKAN_DOK.index('HASH');
   SKAN_DOK.prefix(REF.FIRMA);
   {? ~SKAN_DOK.find_key(_hash,) | PAR_SKID.get(115)='T'
   || SKAN_DOK.blank();
      SKAN_DOK.FIRMA:=REF.FIRMA;
      SKAN_DOK.R_DATA:=date();
      SKAN_DOK.R_CZAS:=time();
      SKAN_DOK.R_USER:=OPERATOR.USER().KOD;
      SKAN_DOK.STATUS:='R';
      SKAN_DOK.HASH:=_hash;
      SKAN_DOK.TYP:=1+_b;
      {? SKAN_DOK.add()
      || SKAN_DOK.bl_put('PLIK',_a,0);
         SKAN_DOK.put();
         _ref:=SKAN_DOK.ref();
         {? var_pres('_c')>0 & _c<>''
         || DOKUM.cntx_psh();
            DOKUM.prefix();
            POM.TAB:='DOKUM';
            POM.TYPDOK:='SYS';
            DOKUM.blank();
            DOKUM.TYP:='I';
            DOKUM.REFSQL:=$SKAN_DOK.ref();
            DOKUM.memo_set(,'OPIS');
            {? DOKUM.add()
            || DOKUM.NR:=exec('numer_new','numery','PACZKA');
               exec('znak','numery','DOKUM');
               DOKUM.bl_put('DOKUM',_c,0);
               DOKUM.NAZWA:=DOKUM.bl_info('DOKUM','NAME');
               DOKUM.put()
            ?};
            DOKUM.cntx_pop()
         ?}
      ?}
   || _jest:=1;
      _ref:=SKAN_DOK.ref()
   ?};
   SKAN_DOK.cntx_pop();
   {? _jest
   || SKAN_DOK.seek(_ref);
      'Plik już istnieje.'
   |? _ref
   || SKAN_DOK.seek(_ref);
      _ref
   || 'Nie udało się dołączyć pliku'
   ?}
|| 'Nie udało się otworzyć pliku.'
?}


\triger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Triger przed add, put
::----------------------------------------------------------------------------------------------------------------------
SKAN_DOK.STATUS_O:={? SKAN_DOK.STATUS='R'
                   || 'Zarejestrowany'
                   |? SKAN_DOK.STATUS='P'
                   || 'Powielony'
                   |? SKAN_DOK.STATUS='S'
                   || 'Wysłany'
                   |? SKAN_DOK.STATUS='G'
                   || 'Do weryfikacji'
                   |? SKAN_DOK.STATUS='V'
                   || 'Zweryfikowany'
                   |? SKAN_DOK.STATUS='D'
                   || 'Dane pobrane'
                   |? SKAN_DOK.STATUS='Z'
                   || 'Zadekretowany'
                   || ''
                   ?};
SKAN_DOK.AKTYWNY:={? SKAN_DOK.STATUS='Z' || 'N' || 'T' ?};
{? SKAN_DOK.PLIK
|| SKAN_DOK.NAZ:=SKAN_DOK.bl_info('PLIK','NAME')
?};
1


\triger_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Triger przed del dla tabeli SKAN_DOK, odznacza "wysłany do OCR" w powiązanym DOKUMZ
::----------------------------------------------------------------------------------------------------------------------
{? DOKUMZ.seek(SKAN_DOK.POW_DOK)
|| DOKUMZ.W_OCR:='N';
   DOKUMZ.put()
|| 1
?}


\auth_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Edycja danych autoryzacyjnych
::   WE: [_a] - użytkownik 1-aktualnie zalogowany 0-z listy użytkowników
::----------------------------------------------------------------------------------------------------------------------
_cur_usr:={? var_pres('_a')>0 || _a || 1 ?};
_put:=exec('auth_get','skanuj',_cur_usr);
SKAN_USR.win_edit('RED');
SKAN_USR.hdr_edit();
SKAN_USR.hdr_edit(' do skanuj.to');
{? SKAN_USR.edit("exec('auth_edit_ok','skanuj')")
|| SKAN_USR.prefix();
   {? _put || SKAN_USR.put() || SKAN_USR.add() ?}
?}


\auth_edit_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Po redakcji danych autoryzacyjnych do skanuj.to
::----------------------------------------------------------------------------------------------------------------------
_ret:='';
{? SKAN_USR.LOGIN=''
|| FUN.info('Nie podano loginu.'@);
   _ret:='LOGIN'
?};
{? _ret='' & SKAN_USR.PASS=''
|| {? SKAN_USR.TYP='H'
   || FUN.info('Nie podano hasła.'@)
   || FUN.info('Nie podano klucza.'@)
   ?};
   _ret:='PASS'
?};
{? _ret=''
|| _token:=exec('getToken','skanuj',0);
   {? _token.token=''
   || {? _token.msg<>''
      || FUN.info('Informacja ze skanuj.to:\n%1'@[_token.msg])
      || FUN.info('Nie udało się połączyć ze skanuj.to\nlub niepoprawny login lub hasło.'@)
      ?};
      _ret:='PASS'
   ?}
?};
_ret


\auth_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Ustawienie danych autoryzacyjnych do skanuj.to
::   WE: [_a] - użytkownik 1-aktualnie zalogowany 0-z listy użytkowników
::----------------------------------------------------------------------------------------------------------------------
_users:={? var_pres('_a')<=0 | _a=1 || OPERATOR.USER || USERS.ref() ?};
SKAN_USR.index('USERS'); SKAN_USR.prefix(_users);
{? ~SKAN_USR.first()
|| SKAN_USR.blank(1);
   SKAN_USR.USERS:=_users;
   0
|| 1
?}


\auth_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Czy dane autoryzacyjne do skanuj.to są poprawne
::----------------------------------------------------------------------------------------------------------------------
exec('auth_get','skanuj');
SKAN_USR.LOGIN<>'' & SKAN_USR.PASS<>''


\correct
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Czy można wysłać dokument do skanuj.to
::----------------------------------------------------------------------------------------------------------------------
_grp:=var_pres('GrSD')>0;
_ok:=0;
{? REF.FIRMA().ST_ID=0
|| _grp=0 | FUN.info('Brak identyfikatora firmy w skanuj.to.'@)
|? exec('auth_ok','skanuj')=0
|| {? _grp=0 & FUN.ask('Brak danych autoryzacyjnych do skanuj.to.\nCzy chcesz je uzupełnić?'@)
   || exec('auth_edit','skanuj');
      _ok:=exec('auth_ok','skanuj')
   ?}
|| _ok:=1
?};
_ok


\view_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Tworzy tabele na dane z OCR
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new(
   'DOK','werDOK',
   'POZF','werPOZF',
   'POZ','werPOZ',
   'wer',
   'select',
   'date','sv'
);
_dok:=tab_tmp(1,
   'SYM_ZEW','STRING[50]','Symbol',
   'DOP','DATE','Data operacji',
   'DTO','DATE','Data wystawienia',
   'D4','DATE','Data otrzymania',
   'TP','DATE','Termin płatności',
   'NIP','STRING[20]','NIP',
   'KH_SKR','STRING[10]','Kontrahent - skrót',
   'KH_NAZ','STRING[255]','Kontrahent - nazwa',
   'KH_UL','STRING[150]','Kontrahent - ulica',
   'KH_M','STRING[40]','Kontrahent - miasto',
   'KH_P','STRING[10]','Kontrahent - poczta',
   'RB','STRING[30]','Konto bankowe',
   'KOR_SYM','STRING[50]','Faktura korygowana',
   'KOR_P','STRING[255]','Przyczyna korekty',
   'WAL','STRING[3]','Waluta',
   'KURS','REAL','Kurs',
   'S_PL','STRING[30]','Sposób płatności'
);
_obj.DOK:=_dok;
_pozf:=tab_tmp(1,
   'LP','INTEGER','Pozycja',
   'NAZ','STRING[100]','Nazwa',
   'SV','REAL','Stawka VAT',
   'SV_TXT','STRING[5]','Stawka VAT - napis',
   'JM','STRING[10]','Jednostka',
   'ILE','REAL','Ilość',
   'N','REAL','Netto',
   'V','REAL','VAT',
   'B','REAL','Brutto'
);
_obj.POZF:=_pozf;
_poz:=tab_tmp(1,
   'SV','REAL','Stawka VAT',
   'SV_TXT','STRING[5]','Stawka VAT - napis',
   'N','REAL','Netto',
   'V','REAL','VAT',
   'B','REAL','Brutto'
);
_obj.POZ:=_poz;

_o:=_dok.mk_sel('Dokument','P',,'#dokfromocr1',,,,,'U');
_dok.win_fld(_o,,'SYM_ZEW',,,40,,,'Symbol');
_dok.win_fld(_o,,'DTO',,,,,,'Wystawiono');
_dok.win_fld(_o,,'DOP',,,,,,'Data operacji');
_dok.win_fld(_o,,'TP',,,,,,'Termin płatności');
_dok.win_fld(_o,,'NIP',,,,,,'NIP');
_dok.win_fld(_o,,'KH_SKR',,,16,,,'Kontrahent');
_dok.win_fld(_o,,'WAL',,,3,,,'Waluta');
_dok.win_fld(_o,,'KURS',,,9,6,,'Kurs');
_dok.win_act(_o,,'Kolejność');
_obj.werDOK:=_o;

_o:=_pozf.mk_sel('Pozycje','P',,'#dokfromocr2',,,,,'U');
_pozf.win_fld(_o,,'LP',,,5,,,'Lp.');
_pozf.win_fld(_o,,'NAZ',,,68,,,'Nazwa');
_pozf.win_fld(_o,,'ILE',,,10,2,,'Ilość');
_pozf.win_fld(_o,,'JM',,,5,,,'Miara');
_pozf.win_fld(_o,,'SV_TXT',,,5,,,'Stawka');
_pozf.win_fld(_o,,'N',,,12,2,,'Netto');
_pozf.win_fld(_o,,'V',,,12,2,,'VAT');
_pozf.win_fld(_o,,'B',,,12,2,,'Brutto');
_pozf.win_act(_o,,'Kolejność');
_obj.werPOZF:=_o;

_o:=_poz.mk_sel('Pozycje VAT','P',,'#dokfromocr3',,,,,'U');
_poz.win_fld(_o,,'SV_TXT',,,98,,,'Stawka');
_poz.win_fld(_o,,'N',,,12,2,,'Netto');
_poz.win_fld(_o,,'V',,,12,2,,'VAT');
_poz.win_fld(_o,,'B',,,12,2,,'Brutto');
_poz.win_act(_o,,'Kolejność');
_obj.werPOZ:=_o;


_obj.wer:=_grp:=_dok.grp_make('Dokument z OCR',"
   _obj:=Obj;
   grp_disp(_obj.POZF,_obj.werPOZF);
   grp_disp(_obj.POZ,_obj.werPOZ)
",'#dokfromocr');
_dok.grp_sel(_grp,,_obj.werDOK,,,,,,"","");
_dok.grp_splt(_grp,,'horizontal','pozf',5);
_dok.grp_sel(_grp,_obj.POZF,_obj.werPOZF,,,,,,"","");
_dok.grp_splt(_grp,'pozf','horizontal','poz',20);
_dok.grp_sel(_grp,_obj.POZ,_obj.werPOZ,,,,,,"","");
_dok.win_sel(_grp);

_obj.select:="
   Obj:=.;
   .DOK.first();
   .POZF.first();
   .POZ.first();
   _dok:=.DOK;
   _dok.select();
   VAR_DEL.delete('Obj')
";
_obj.date:="
   date(#(4+_a),#(5-_a-3),#(_a+2))
";
_obj.sv:="
   {? _a>=0
   || $_a+' %'
   |? _a=-1
   || 'Zwol.'
   || $_a
   ?}
";

_obj


\json
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Zwraca obiekt JSON z danych z OCR
::   WE: [_a] - plik xml, domyślnie SKAN_DOK.PLIK_OCR
::----------------------------------------------------------------------------------------------------------------------
_src:={? var_pres('_a')>0 || _a || SKAN_DOK.PLIK_OCR ?};
_typ_str:=type_of(_src)=type_of('');
_json:=~~;
{? _typ_str & _src<>'' | ~_typ_str & _src
|| _file:=fopen(_src,'r',_typ_str,,1);
   {? _file.is_open()
   || _json:=json_parse(_file);
      fclose(_file)
   ?}
?};
_json


\set_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Ustawia dane nagłówkowe z danych zwróconych z OCR
::   WE: [_a] - tablica z danymi z OCR, domyślnie dane pobierane z rekordu (BLOB)
::----------------------------------------------------------------------------------------------------------------------
_json:={? var_pres('_a')>0 || _a || exec('json','skanuj') ?};
{? var_pres('_json')>0
|| SKAN_DOK.SYM_ZEW:=_json.attributes.NrFaktury.value;
   SKAN_DOK.WAL:=_json.attributes.Waluta.value;
   _typ:=_json.type_dict;
   _nip:={? _typ*'zakupu' || _json.attributes.SprzedawcaNip.value
         |? _typ*'sprzed' || _json.attributes.NabywcaNip.value
         || 'brak'
         ?};
   _snip:=exec('niptostr','#string',_nip);
   {? 2+_snip='PL' || _snip:=2-_snip ?};
   SKAN_DOK.NIP:=_snip;
   KH.cntx_psh();
   KH.index('SNIP'); KH.prefix(2,_snip,);
   {? KH.first()
   || SKAN_DOK.KH:=KH.ref()
   ?};
   KH.cntx_pop();
   {? SKAN_DOK.KH=null & #(2+_snip)=0
   || NIPY.cntx_psh();
      NIPY.index('SNIP2');
      NIPY.prefix(_snip,);
      {? NIPY.first()
      || SKAN_DOK.KH:=NIPY.KH
      ?};
      NIPY.cntx_pop()
   ?};
:: Wtyczka na rozpoznanie KH ze skanuj to - brak wtyczki działanie dotychczasowe.
   {? Plugin.exists('KH_FIND_OCR')
   || _khkod:='';
      _khkod:=Plugin.run('KH_FIND_OCR',_json);
      {? _khkod<>''
      || KH.cntx_psh(); KH.index('KOD'); KH.prefix(2,_khkod,);
         {? KH.first()
         || SKAN_DOK.KH:=KH.ref();
            SKAN_DOK.NIP:={? KH.TYP='P'
                          || KH.NIP
                          |? KH.TYP='R' | KH.TYP='I'
                          || {? KH.NIP<>'' || KH.NIP || KH.PESEL ?}
                          |? KH.TYP='U'
                          || exec('jak_nue','kontrahent')
                          ||''
                          ?}
         ?};
       KH.cntx_pop()
      ?}
   ?};
   SKAN_DOK.NETTO:=#_json.attributes.RazemNetto.value;
   SKAN_DOK.VAT:=#_json.attributes.RazemVAT.value;
   SKAN_DOK.BRUTTO:=#_json.attributes.RazemBrutto.value;
   {? var_pres('MiesiacKsiegowy',_json.attributes)>0
   || SKAN_DOK.OKRES:=_json.attributes.MiesiacKsiegowy.value
   ?};
   SKAN_DOK.PROCENT:=exec('valid','skanuj',_json)
?}


\view_parse
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Zasilenie tabel danymi z OCR
::   WE: _a - obiekt z tabelami
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_json:=exec('json','skanuj');
{? var_pres('_json')>0
|| _dok:=_obj.DOK;
   _typ:=_json.type_dict;
   _zak:=_typ*'zakupu';
   _dok.SYM_ZEW:=_json.attributes.NrFaktury.value;
   {? var_pres('DataSprzedazy',_json.attributes)>0
   || _dok.DOP:=_obj.date(_json.attributes.DataSprzedazy.value)
   ?};
   {? var_pres('DataZakupu',_json.attributes)>0
   || _dok.DOP:=_obj.date(_json.attributes.DataZakupu.value)
   ?};
   {? var_pres('DataWystawienia',_json.attributes)>0
   || _dok.DTO:=_obj.date(_json.attributes.DataWystawienia.value)
   ?};
   {? var_pres('DataWplywu',_json.attributes)>0
   || _dok.D4:=_obj.date(_json.attributes.DataWplywu.value)
   ?};
   {? var_pres('TerminPlatnosci',_json.attributes)>0
   || _dok.TP:=_obj.date(_json.attributes.TerminPlatnosci.value)
   ?};
   _dok.NIP:=SKAN_DOK.NIP;
   _dok.KH_SKR:=SKAN_DOK.KH().SKR;
   {? var_pres('KontoBankowe',_json.attributes)>0
   || _dok.RB:=_json.attributes.KontoBankowe.value
   ?};
   _kor:=var_pres('Korygujaca',_json.attributes)>0 & #_json.attributes.Korygujaca.value;
   {? _kor
   || {? var_pres('FakturaKorygowana',_json.attributes)>0
      || _dok.KOR_SYM:=_json.attributes.FakturaKorygowana.value
      ?};
      {? var_pres('PrzyczynaKorekty',_json.attributes)>0
      || _dok.KOR_P:=_json.attributes.PrzyczynaKorekty.value
      ?}
   ?};
   _dok.WAL:=SKAN_DOK.WAL;
   {? var_pres('KursWaluty',_json.attributes)>0
   ||  _dok.KURS:=#_json.attributes.KursWaluty.value
   ?};
   {? var_pres('SposobPlatnosci',_json.attributes)>0
   || _dok.S_PL:=_json.attributes.SposobPlatnosci.value
   ?};
   {? var_pres('contractor',_json)>0
   || _dok.KH_NAZ:=_json.contractor.name;
      _dok.KH_UL:=_json.contractor.address;
      _dok.KH_M:=_json.contractor.city;
      _dok.KH_P:=_json.contractor.post_code
   ?};
   _dok.add();

   _poz:=_obj.POZ;
   _pozf:=_obj.POZF;
   {? var_pres('positions',_json)>0
   || {! _ii:=1..obj_len(_json.positions)
      |! _pozf.blank(1);
         _pf:=_json.positions[_ii];
         _pozf.LP:=_ii;
         {? var_pres('Nazwa',_pf)>0
         || _pozf.NAZ:=_pf.Nazwa
         ?};
         {? var_pres('StawkaVAT',_pf)>0
         || _pozf.SV:=_pf.StawkaVAT;
            _pozf.SV_TXT:=_obj.sv(_pozf.SV)
         ?};
         {? var_pres('Jednostka',_pf)>0
         || _pozf.JM:=_pf.Jednostka
         ?};
         {? var_pres('Ilosc',_pf)>0
         || _pozf.ILE:=_pf.Ilosc
         ?};
         {? var_pres('Netto',_pf)>0
         || _pozf.N:=_pf.Netto$2
         ?};
         {? var_pres('VAT',_pf)>0
         || _pozf.V:=_pf.VAT$2
         ?};
         {? var_pres('Brutto',_pf)>0
         || _pozf.B:=_pf.Brutto$2
         ?};
         &_pf;
         _pozf.add();
         {? ~_poz.find_key(_pozf.SV)
         || _poz.blank(1);
            _poz.SV:=_pozf.SV;
            _poz.SV_TXT:=_obj.sv(_poz.SV);
            _poz.add()
         ?};
         _poz.N+=_pozf.N;
         _poz.V+=_pozf.V;
         _poz.B+=_pozf.B;
         _poz.put()
      !}
   ?}
?};
1


\add_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Dodaje dokument księgowy/fakturę w obiegu na podstawie zesakanowanego dokumentu
::   WE: _a - 1-dokument księgowy 2-fakturę w obiegu
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
_obj:=exec('view_tab','skanuj');
exec('view_parse','skanuj',_obj);
_dok:=_obj.DOK;
{? _dok.DOP=date(0,0,0)
|| {? FUN.ask('Data operacji dokumentu nie została wypełniona.\nCzy chcesz wypełnić ją ręcznie?')
   || _red:=_dok.mk_edit('Data operacji');
      _dok.win_efld(_red,,'DOP');
      _ok:=_dok.win_ebtn(_red,'text=OK',"'key:F2'");
      _anuluj:=_dok.win_ebtn(_red,'text=Anuluj',"'key:Esc'");
      _dok.btn_eopt(_red,_ok,'tooltip='+exec('help_red_ok','#window','P'));
      _dok.btn_eopt(_red,_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
      _dok.win_edit(_red);
      {? _dok.edit("_ret:=cur_tab.DOP<>date(0,0,0);
                    {? _ret=0 || FUN.info('Należy wybrać inną datę niż 0000/00/00') ?};
                    _ret
                   ")
      || _obj.DOK.DOP:=_dok.DOP
      ?}
   ?}
?};
POMOC.DATA:=_dok.DOP;
OKRO_F.cntx_psh();
OKRO_F.index('KON');
OKRO_F.prefix(REF.FIRMA);
{? OKRO_F.find_ge(POMOC.DATA)
|| _okres:=OKRO_F.ref()
|| _okres:=null
?};
OKRO_F.cntx_pop();
{? _okres
|| {? var_pres('GrSD')>0
   || GrSD.load(_a)
   |? POMOC.D_ODD=null
   || POMOC.D_ODD:=OPERATOR.DEPT;
      {? POMOC.D_ODD=null
      || ODD.cntx_psh();
         ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
         {? ODD.first() & ~ODD.next()
         || POMOC.D_ODD:=ODD.ref()
         ?};
         ODD.cntx_pop()
      ?}
   ?};
   {? var_pres('GrSD')<=0
   || POMOC.D_OKRO_F:=_okres;
      POMOC.D_ROK_F:=POMOC.D_OKRO_F().ROK
   ?};
   exec('ae_pomoc_d','skanuj','D_ROK_F');
   {? _a=1
   || POMOC.win_edit('DOK_REJ')
   || typobi:=1;
      TYPOBIEG.cntx_psh(); TYPOBIEG.index('UNIK');
      TYPOBIEG.prefix('Obieg faktur','Obieg faktur'); ETYPY.win_edit('RED');
      OBIEGI.TYPOBIEG:={? TYPOBIEG.first() || TYPOBIEG.ref() || null ?};
      OBIEGI.TYP_ID:='T';
      TYPOBIEG.cntx_pop();
      {? POMOC.D_ETYPY=null
      || ETYPY.cntx_psh();
         ETYPY.index('UNIK'); ETYPY.prefix(OBIEGI.TYPOBIEG);
         {? ETYPY.first() & ~ETYPY.next()
         || POMOC.D_ETYPY:=ETYPY.ref()
         ?};
         ETYPY.cntx_pop()
      ?};
      POMOC.win_edit('EDOK_REJ')
   ?};
   {? var_pres('GrSD')>0 & GrSD.correct(_a)
      |
      var_pres('GrSD')<=0 & POMOC.edit("exec('ar_pomoc_d','skanuj')")
   || _ar:=SSTALE.AR;
      _ao:=SSTALE.AO;
      SSTALE.AR:=POMOC.D_ROK_F;
      SSTALE.AO:=POMOC.D_OKRO_F;
      exec('open_tabele','open_tab','F');
      _refkh:=null();
      _par119:=PAR_SKID.get(119);
      {? _par119='T' | _par119='J'
      || {? _dok.KH_SKR=''
         || {? _par119='T'
            || _refkh:=exec('add_kh','skanuj',_obj)
            |? _par119='J'
            || _par120:=PAR_SKID.get(120);
               {? _par120<>''
               || KH.cntx_psh();
                  KH.index('KOD'); KH.prefix(2,_par120,);
                  {? KH.first
                  || _refkh:=KH.ref()
                  ?};
                  KH.cntx_pop()
               ?}
            ?};
            {? _refkh<>null() || SKAN_DOK.KH:=_refkh; SKAN_DOK.put() ?}
         ?}
      ?};
      _ref:={? _a=1 || exec('add_dok2','skanuj',_obj) || exec('add_edok','skanuj',_obj) ?};
      SSTALE.AR:=_ar;
      SSTALE.AO:=_ao;
      exec('open_tabele','open_tab','F')
   ?}
?};
_ref


\be_pomoc_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Przed redakcją  pól POMOC.D_*
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_ret:=1;
{? _fld='D_OKRO_F'
|| POMOC.D_ROK_F();
   OkroFInd:=1;
   _ret:=POMOC.D_ROK_F<>null
|? _fld='D_REJ'
|| POMOC.AKC:='O';
   POMOC.D_ROK_F();
   POMOC.D_ODD();
   _ret:=POMOC.D_ROK_F<>null & POMOC.D_ODD<>null
|? _fld='D_DOK_R'
|| POMOC.D_REJ();
   _ret:=POMOC.D_REJ<>null
|? _fld='D_RVAT'
|| POMOC.D_REJ();
   _ret:=POMOC.D_REJ<>null
|? _fld='D_GR_VAT'
|| POMOC.D_REJ();
   _ret:=POMOC.D_REJ<>null
|? _fld='D_ETYPY'
|| typobi:=1;
   TYPOBIEG.cntx_psh(); TYPOBIEG.index('UNIK');
   TYPOBIEG.prefix('Obieg faktur','Obieg faktur'); ETYPY.win_edit('RED');
   OBIEGI.TYPOBIEG:={? TYPOBIEG.first() || TYPOBIEG.ref() || null ?};
   OBIEGI.TYP_ID:='T';
   TYPOBIEG.cntx_pop();
   _ret:=1
?};
_ret


\ae_pomoc_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Po redakcji pól POMOC.D_*
::   WE: [_a] - akronim pola
::----------------------------------------------------------------------------------------------------------------------
_fld:={? var_pres('_a')>0 || _a || cur_afld() ?};
_dok:=1+POMOC.win_edit('?')='D';
_ret:=1;
{? _fld='D_ROK_F'
|| {? POMOC.D_OKRO_F & POMOC.D_OKRO_F().ROK<>POMOC.D_ROK_F
   || OKRO_F.cntx_psh();
      OKRO_F.index('ROK'); OKRO_F.prefix(POMOC.D_ROK_F,POMOC.D_OKRO_F().NR);
      {? OKRO_F.first()
      || POMOC.D_OKRO_F:=OKRO_F.ref()
      || POMOC.D_OKRO_F:=null
      ?};
      OKRO_F.cntx_pop()
   ?};
   {? _dok & POMOC.D_REJ & POMOC.D_REJ().ROK<>POMOC.D_ROK_F
   || REJ.cntx_psh();
      REJ.index('KOD'); REJ.prefix(POMOC.D_ROK_F,POMOC.D_ODD);
      {? REJ.find_key(POMOC.D_REJ().KOD,)
      || POMOC.D_REJ:=REJ.ref()
      || POMOC.D_REJ:=null
      ?};
      REJ.cntx_pop();
      exec('ae_pomoc_d','skanuj','D_REJ')
   ?}
|? _fld='D_ODD'
|| {? _dok & POMOC.D_REJ & POMOC.D_REJ().ODD<>POMOC.D_ODD
   || REJ.cntx_psh();
      REJ.index('KOD'); REJ.prefix(POMOC.D_ROK_F,POMOC.D_ODD);
      {? REJ.find_key(POMOC.D_REJ().KOD,)
      || POMOC.D_REJ:=REJ.ref()
      || POMOC.D_REJ:=null
      ?};
      REJ.cntx_pop();
      exec('ae_pomoc_d','skanuj','D_REJ')
   ?}
|? _fld='D_REJ'
|| {? POMOC.D_DOK_R & POMOC.D_DOK_R().REJ<>POMOC.D_REJ
   || DOK_REJ.cntx_psh();
      DOK_REJ.index('NAZ'); DOK_REJ.prefix(POMOC.D_REJ,POMOC.D_DOK_R().NAZ,);
      {? DOK_REJ.first()
      || POMOC.D_DOK_R:=DOK_REJ.ref()
      || POMOC.D_DOK_R:=null
      ?};
      DOK_REJ.cntx_pop()
   ?};
   {? POMOC.D_DOK_R=null & POMOC.D_REJ<>null
   || DOK_REJ.cntx_psh();
      DOK_REJ.prefix();
      DOK_REJ.blank(1); DOK_REJ.REJ:=POMOC.D_REJ; DOK_REJ.DM:='T';
      {? DOK_REJ.find_rec()
      || POMOC.D_DOK_R:=DOK_REJ.ref()
      ?};
      DOK_REJ.cntx_pop()
   ?};
   {? POMOC.D_RVAT & POMOC.D_RVAT().REJ<>POMOC.D_REJ
   || VAT_REJ.cntx_psh();
      VAT_REJ.index('REJ_SYM'); VAT_REJ.prefix(POMOC.D_REJ,POMOC.D_RVAT().SYM,);
      {? VAT_REJ.first()
      || POMOC.D_RVAT:=VAT_REJ.ref()
      || POMOC.D_RVAT:=null
      ?};
      VAT_REJ.cntx_pop()
   ?};
   {? POMOC.D_RVAT=null & POMOC.D_REJ<>null
   || VAT_REJ.cntx_psh();
      VAT_REJ.prefix();
      VAT_REJ.blank(1); VAT_REJ.REJ:=POMOC.D_REJ; VAT_REJ.DM:='T';
      {? VAT_REJ.find_rec()
      || POMOC.D_RVAT:=VAT_REJ.ref()
      || POMOC.D_RVAT:=null
      ?};
      VAT_REJ.cntx_pop();
      exec('ae_pomoc_d','skanuj','D_RVAT')
   ?}
|? _fld='D_RVAT'
|| {? POMOC.D_GR_VAT & POMOC.D_GR_VAT().REJ<>POMOC.D_REJ
   || GR_VAT.cntx_psh();
      GR_VAT.index('REJ_KOD'); GR_VAT.prefix(POMOC.D_REJ,POMOC.D_GR_VAT().KOD,);
      {? GR_VAT.first()
      || POMOC.D_GR_VAT:=GR_VAT.ref()
      || POMOC.D_GR_VAT:=null
      ?};
      GR_VAT.cntx_pop()
   ?};
   {? POMOC.D_GR_VAT=null & POMOC.D_RVAT<>null
   || GR_VAT.cntx_psh();
      GR_VAT.index('REJ_GR'); GR_VAT.prefix(POMOC.D_REJ,POMOC.D_RVAT().RVAT().GRVAT);
      {? GR_VAT.first()
      || POMOC.D_GR_VAT:=GR_VAT.ref()
      ?};
      GR_VAT.cntx_pop()
   ?}
?};
_ret


\ar_pomoc_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Po redakcji parametrów do dekretacjji
::----------------------------------------------------------------------------------------------------------------------
_dok:=1+POMOC.win_edit('?')='D';
{? _dok
|| _ret:=__CHK.record(POMOC,,'D_ROK_F','D_OKRO_F','D_ODD','D_REJ','D_DOK_R','D_RVAT','D_GR_VAT');
   {? _ret='' & POMOC.D_OKRO_F().POCZ=date(0,0,0)
   || FUN.info('Wskazanym okresem nie może być bilans otwarcia ani bilans zamknięcia.');
      _ret:='D_OKRO_F'
   ?};
   {? _ret='' & var_pres('GrSD')<=0 & (POMOC.DATA<POMOC.D_OKRO_F().POCZ | POMOC.DATA>POMOC.D_OKRO_F().KON)
   || FUN.info('Data operacji dokumentu %1 pochodzi z innego okresu niż %2.'@[$POMOC.DATA,POMOC.D_OKRO_F().NAZ+' '+POMOC.D_OKRO_F().ROK().NAZ]);
      _ret:='D_OKRO_F'
   ?};
   _ret
|| _ret:=__CHK.record(POMOC,,'D_ROK_F','D_OKRO_F','D_ETYPY');
   {? _ret='' & var_pres('GrSD')<=0 & (POMOC.DATA<POMOC.D_ROK_F().POCZ_ROK | POMOC.DATA>POMOC.D_ROK_F().KON_ROK)
   || FUN.info('Data operacji dokumentu %1 pochodzi z innego roku niż %2.'@[$POMOC.DATA,POMOC.D_ROK_F().NAZ]);
      _ret:='D_OKRO_F'
   ?};
   _ret
?}


\add_dok2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Dodaje dokument księgowy na podstawie OCR dokumentu
::   WE: _a - obiekt z danymi z OCR
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
_obj:=_a;
_dok:=_obj.DOK;
DOK.cntx_psh();
DOK.index('REJ'); DOK.prefix(POMOC.D_REJ);
_nr:={? DOK.last() || DOK.NR+1 || 1 ?};
DOK.prefix();
DOK.blank(1);
DOK.REJ:=POMOC.D_REJ;
DOK.NR:=_nr;
DOK.A:=DOK.ZP:=DOK.ZK:=DOK.WSK_XD:='N';
DOK.DOKZRODL:=$SKAN_DOK.ref();
{? DOK.add()
|| _ref:=DOK.ref();
   DOK.ODD:=DOK.REJ().ODD;
   DOK.DOK_REJ:=POMOC.D_DOK_R;
   DOK.JPK_V_T:=exec('typ_dok','obiegi2');
   DOK.RVAT:=POMOC.D_RVAT;
   DOK.NK:=_dok.SYM_ZEW;
   {? var_pres('SYM_ZEW',DOK)>0
   || DOK.SYM_ZEW:=_dok.SYM_ZEW
   ?};
   sourcedk:='ZSO';
   DOK.SYSTEM:=exec('blsystemdok','dok_fks');
   DOK.ZAR:=exec('usr_zar','dok_fks');
   DOK.DR:=date();
   DOK.DTO:=_dok.DTO;
   DOK.DTW:=DOK.DOP:=_dok.DOP;
   DOK.D4:=_dok.D4;
   DOK.D3:=_dok.TP;
   exec('be_okrvt','dok_fks');
   DOK.RVAT().RVAT();
   DOK.KRAJ:={? DOK.RVAT().RVAT().KRAJ=null || exec('kod_pl','slo_slu') || RVAT.KRAJ ?};
   DOK.JORG:=exec('ust_vwal','kraje',DOK.KRAJ().KOD);
   KH.cntx_psh();
   KH.index('KOD');
   KH.prefix(2,SKAN_DOK.KH().KOD);
   {? KH.first()
   || DOK.NIP:=SKAN_DOK.NIP;
      DOK.KH_FULL:=KH.NAZ_P;
      DOK.KH:=KH.SKR;
      DOK.KH_KRAJ:=KH.KRAJ; DOK.KH_KRISO:=KH.KRAJISO;
      DOK.MIASTO:=KH.MIASTO;
      DOK.UL:=KH.UL;
      DOK.POCZ:=KH.POCZ;
      DOK.DOM:=KH.DOM;
      DOK.LOKAL:=KH.LOKAL;
      DOK.KPOCZ:=KH.KPOCZ;
      {? DOK.DOK_REJ().POCH<>null
      || RS.cntx_psh(); RS.index('RS'); RS.prefix();
         {? RS.find_key(DOK.DOK_REJ().POCH().SLU().WZ,) & RS.TAB='KH'
         || _kod:=($('KH.'+RS.KOD))();
            SLO.cntx_psh();
            SLO.index('SL'); SLO.prefix(SLU.ref());
            {? ~SLO.find_key(_kod) | _kod<>SLO.KOD
            || SLO.blank();
               SLO.SLU:=SLU.ref();
               SLO.KOD:=_kod;
               SLO.TR:=KH.NAZ;
               SLO.add()
            ?};
            DOK.WYS:=SLO.ref();
            SLO.cntx_pop()
         ?};
         RS.cntx_pop()
      ?}
   ?};
   KH.cntx_pop();
   DOK.SP_PL:=exec('sp_pl','%skanuj',_dok.S_PL);
   {? DOK.DOK_REJ().KOR='T'
   || DOK.KOR_ZEW:=_dok.KOR_SYM;
      DOK.KOR:=DOK.KOR_ZEW;
      DOK.KOR_PRZY:=_dok.KOR_P
   ?};
   DOK.put();
   {? DOK.DOK_REJ().JPK_FA_P='T'
   || _pozf:=_obj.POZF;
      {? _pozf.first()
      || _lp:=0;
         POZF.cntx_psh();
         POZF.use('pozf'+(DOK.name()+4));

         POZF.prefix();
         _cena:=DOK.DOK_REJ().TYP_CENY;
         {!
         |? POZF.blank(1);
            POZF.DOK:=DOK.ref();
            POZF.LP:=(_lp+=1);
            POZF.NAZ:=_pozf.NAZ;
            POZF.SV:=exec('procvat4xml','obiegi2',_pozf.SV_TXT);
            POZF.JM:=exec('FindInSet','#table','JM','KOD',_pozf.JM);
            POZF.IL:=_pozf.ILE;
            POZF.WN:=_pozf.N;
            POZF.WV:=_pozf.V;
            POZF.WB:=_pozf.B;
            {? _cena='N'
            || POZF.C:=(POZF.WN/POZF.IL)$2
            || POZF.C:=(POZF.WB/POZF.IL)$2
            ?};
            POZF.add();
            _pozf.next()
         !};
         POZF.cntx_pop()
      ?}
   ?};
   _poz:=_obj.POZ;
   {? _poz.first()
   || VPOZ.cntx_psh();
      VPOZ.prefix();
      {!
      |? VPOZ.blank(1);
         VPOZ.DOK:=DOK.ref();
         VPOZ.PR:=exec('procvat4xml','obiegi2',_poz.SV_TXT);
         VPOZ.NETTO:=_poz.N;
         VPOZ.VAT:=_poz.V;
         VPOZ.BRUTTO:=_poz.B;
         VPOZ.GRVAT:=POMOC.D_GR_VAT;
         VPOZ.RVAT:=POMOC.D_RVAT;
         {? _dok.WAL<>'PLN'
         || SLU.cntx_psh(); SLO.cntx_psh();
            SLU.index('NAZ');
            SLO.index('SL'); SLU.prefix();
            {? SLU.find_key('WALUTY')
            || SLO.prefix(SLU.ref,_dok.WAL);
               {? SLO.first()
               || DOK.WAL:=SLO.ref();
                  exec('dok_bank','!fks_dks_dark');
::                  exec('wz_bank','wzorce');
                  DOK.put()
               ?}
            ?};
            SLU.cntx_pop(); SLO.cntx_pop();
            jedn:=1;
            VPOZ.WARW:=_poz.B;
            VPOZ.NETTO_W:=_poz.N;
            VPOZ.VAT_W:=_poz.V;
            VPOZ.BRUTTO_W:=_poz.B;
            VPOZ.NETTO:=(_poz.N*_dok.KURS/jedn)$2;
            VPOZ.VAT:=(_poz.V*_dok.KURS/jedn)$2;
            VPOZ.BRUTTO:=(_poz.B*_dok.KURS/jedn)$2;
            VPOZ.KURS:=_dok.KURS
         ?};
         exec('setvatodl','dok_fks');
         VPOZ.add();
         _poz.next()
      !};
      VPOZ.cntx_pop();
      exec('fl_decl','dekret_aut');
      exec('dek_decl','dekret_aut');
      exec('sd_decl','dekret_aut');
      exec('poz_dekv','dok_fks')
   ?};
   SKAN_DOK.cntx_psh();
   SKAN_DOK.prefix();
   SKAN_DOK.STATUS:='Z'; SKAN_DOK.put();
   exec('add_zal','skanuj',SKAN_DOK.PLIK,SKAN_DOK.bl_info('PLIK','NAME'),'D',1);
   exec('add_zal','skanuj',SKAN_DOK.PLIK_OCR,SKAN_DOK.bl_info('PLIK_OCR','NAME')+'.json','I',1);
   DOKUM.cntx_psh();
   DOKUM.index('TYP'); DOKUM.prefix($SKAN_DOK.ref(),'I');
   {? DOKUM.first()
   || {!
      |? DOKUM.cntx_psh();
         exec('add_zal','skanuj',DOKUM.DOKUM,DOKUM.bl_info('DOKUM','NAME'),'D',1);
         DOKUM.cntx_pop();
         DOKUM.next()
      !}
   ?};
   DOKUM.cntx_pop();
   _file:=fopen(SKAN_DOK.PLIK,'br',,,1);
   {? _file.is_open()
   || DOK.bl_put('E_DOC',_file,,,SKAN_DOK.bl_info('PLIK','NAME'));
      DOK.put();
      fclose(_file)
   ?};
   SKAN_DOK.cntx_pop()
?};
DOK.cntx_pop();
_ref


\obj_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Obiekt używany do grupowej dekretacji
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new(
   'D_ROK_F','D_OKRO_F','D_ODD','D_REJ','D_DOK_R','D_RVAT','D_GR_VAT','D_ETYPY','ALL','OK','JEST','INNY','INNYOKR',
   'save','load','edit','correct','info'
);
_obj.ALL:=_obj.OK:=_obj.JEST:=_obj.INNY:=_obj.INNYOKR:=0;
_obj.edit:="
   {? _a=1
   || POMOC.win_edit('DOK_REJ')
   || POMOC.win_edit('EDOK_REJ')
   ?};
   POMOC.edit(\"exec('ar_pomoc_d','skanuj')\")
";
_obj.save:="
   .D_ROK_F:=POMOC.D_ROK_F;
   .D_OKRO_F:=POMOC.D_OKRO_F;
   .D_ODD:=POMOC.D_ODD;
   .D_REJ:=POMOC.D_REJ;
   .D_DOK_R:=POMOC.D_DOK_R;
   .D_RVAT:=POMOC.D_RVAT;
   .D_GR_VAT:=POMOC.D_GR_VAT;
   .D_ETYPY:=POMOC.D_ETYPY
";
_obj.load:="
   POMOC.D_ROK_F:=.D_ROK_F;
   POMOC.D_OKRO_F:=.D_OKRO_F;
   POMOC.D_ODD:=.D_ODD;
   POMOC.D_REJ:=.D_REJ;
   POMOC.D_DOK_R:=.D_DOK_R;
   POMOC.D_RVAT:=.D_RVAT;
   POMOC.D_GR_VAT:=.D_GR_VAT;
   POMOC.D_ETYPY:=.D_ETYPY
";
_obj.correct:="
   {? _a=1
   || _okr:=POMOC.DATA>=POMOC.D_OKRO_F().POCZ & POMOC.DATA<=POMOC.D_OKRO_F().KON;
      {? ~_okr || .INNYOKR+=1 ?};
      POMOC.D_ROK_F<>null &
      POMOC.D_OKRO_F<>null &
      POMOC.D_ODD<>null &
      POMOC.D_REJ<>null &
      POMOC.D_DOK_R<>null &
      POMOC.D_RVAT<>null &
      POMOC.D_GR_VAT<>null &
      _okr
   || _okr:=POMOC.DATA>=POMOC.D_ROK_F().POCZ_ROK & POMOC.DATA<=POMOC.D_ROK_F().KON_ROK;
      {? ~_okr || .INNYOKR+=1 ?};
      POMOC.D_ROK_F<>null &
      POMOC.D_OKRO_F<>null &
      POMOC.D_ETYPY<>null &
      _okr
   ?}
";
_obj.info:="
   FUN.info(
      'Liczba zaznaczonych dokumentów: '+$.ALL+'\n'+
      'Liczba zadekretowanych dokumentów: '+$.OK+'\n'+
      {? .JEST
      || 'Liczba już zadekretowanych dokumentów: '+$.JEST+'\n'
      || ''
      ?}+
      {? .INNYOKR
      || 'Liczba dokumentów z innego okresu: '+$.INNYOKR+'\n'
      || ''
      ?}+
      {? .INNY
      || 'Liczba dokumentów innego typu: '+$.INNY+'\n'
      || ''
      ?}+
      {? .ALL<>.OK+.JEST+.INNY+.INNYOKR
      || 'Liczba nieudanych dekretacji dokumentów: '+$(.ALL-.OK-.JEST-.INNY-.INNYOKR)
      || ''
      ?}
   )
";
_obj


\obj_gr_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Obiekt używany do grupowego pobierania dokumentów
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new(
   'ALL','OK','JEST','NOT','NOTVER',
   'info'
);
_obj.ALL:=_obj.OK:=_obj.JEST:=_obj.NOT:=_obj.NOTVER:=0;
_obj.info:="
   FUN.info(
      'Liczba zaznaczonych dokumentów: '+$.ALL+'\n'+
      'Liczba pobranych dokumentów: '+$.OK+'\n'+
      {? .JEST
      || 'Liczba już pobranych dokumentów: '+$.JEST+'\n'
      || ''
      ?}+
      {? .NOT
      || 'Liczba nie wysłanych dokumentów: '+$.NOT+'\n'
      || ''
      ?}+
      {? .NOTVER
      || 'Liczba nie zweryfikowanych dokumentów: '+$.NOTVER+'\n'
      || ''
      ?}+
      {? .ALL<>.OK+.JEST+.NOT+.NOTVER
      || 'Liczba nieudanych pobrań dokumentów: '+$(.ALL-.OK-.JEST-.NOT-.NOTVER)
      || ''
      ?}
   )
";
_obj


\add_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Dodaje załączniki do dokumentu księgowego
::   WE: _a - BLOBRAW
::       _b - Nazwa pliku
::       _c - typ
::       _d - 1-DOK 2-EDOKUM
::----------------------------------------------------------------------------------------------------------------------
{? _d=1
|| DOKUM.cntx_psh();
   DOKUM.index('DOKUM'); DOKUM.prefix();
   _tab:=POM.TAB;
   _typdok:=POM.TYPDOK;
   POM.TAB:='DOKUM';
   POM.TYPDOK:='SYS';
   exec('add_grnr','numery','SYS');
   DOKUM.blank();
   DOKUM.TYP:=_c;
   DOKUM.REFSQL:=$DOK.ref();
   DOKUM.NR:=exec('numer_new','numery','PACZKA');
   DOKUM.NAZWA:=DOKUM.KR_OP:=_b;
   _file:=fopen(_a,'br',,,1);
   {? _file.is_open() & DOKUM.add()
   || DOKUM.bl_put('DOKUM',_file,,,_b);
      DOKUM.put();
      exec('znak','numery','DOKUM')
   || numer:=DOKUM.NR;
      oldnumer:=1;
      exec('nr_old','numery')
   ?};
   {? _file.is_open()
   || fclose(_file)
   ?};
   DOKUM.cntx_pop();
   POM.TAB:=_tab;
   POM.TYPDOK:=_typdok
|| EDOKUMZ.cntx_psh();
   EDOKUMZ.prefix();
   EDOKUMZ.blank(1);
   EDOKUMZ.DOKUM:=EDOKUM.ref();
   EDOKUMZ.DATE:=date();
   EDOKUMZ.TIME:=time();
   EDOKUMZ.USER:=OPERATOR.USER().KOD;
   _file:=fopen(_a,'br',,,1);
   {? _file.is_open()
   || {? EDOKUMZ.add()
      || EDOKUMZ.bl_put('EDOKUM',_file,,,_b);
         EDOKUMZ.NAZWA:=_b;
         EDOKUMZ.put()
      ?};
      fclose(_file)
   ?};
   EDOKUMZ.cntx_pop()
?}


\skan_erase
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.41]
:: OPIS: Czyszczenie starych skanow (jesli sa) w katalogu tymczasowym
::   WE: [_a] - katalog z plikami
::  OLD: \skan_erase/skid_do1.fml
::  OLD: \skan_erase/!obg_fzo_dask.fml
::----------------------------------------------------------------------------------------------------------------------
_dir:={? var_pres('_a')=type_of('') || _a || '@!Tmp' ?};
ferase(_dir+'/skaner.txt');
ferase(_dir+'/faktura.jpg');
ferase(_dir+'/faktura.pdf');
_numer:=_loop:=1;
{!
|? _str:=('000'+$_numer)+4;
   {? fexists(_dir+'/faktura'+_str+'.pdf',0)
   || ferase(_dir+'/faktura'+_str+'.pdf');
         _numer+=1
   |? fexists(_dir+'/faktura'+_str+'.jpg',0)
   || ferase(_dir+'/faktura'+_str+'.jpg');
      _numer+=1
   || _loop:=0
   ?};
   _loop
!}


\read_skaner_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.41]
:: OPIS: Czyta plik skaner.txt i tworzy tabele tymczasowa z baza zeskanowanych kodow kreskowych
::   WE: _a - katalog z plikiami
::  OLD: \read_skaner_txt/skid_do1.fml
::  OLD: \read_skaner_txt/!obg_fzo_dask.fml
::----------------------------------------------------------------------------------------------------------------------
_dir:={? var_pres('_a')=type_of('') || _a || '@!Tmp' ?};
_tab:=tab_tmp(,
   'NO','INTEGER','Lp.',
   'FILE','STRING[100]','Plik',
   'FILE2','STRING[100]','Plik',
   'CODE','STRING[100]','Kod'
);
{? _plik:=fopen(_dir+'/skaner.txt','ur')
|| _no:=0;
   {!
   |? (_wiersz:=fread(_plik))<>'\n'
   |! {? |_wiersz<>''
      || _str:=spli_str(_wiersz,'@');
         {? var_pres('_tab')>0
         || _tab.NO:=_no+=1;
            _tab.FILE:=_str[1];
            _tab.CODE:=_str[2];
            _tab.FILE2:=_str[3];
            _tab.add()
         ?};
         &_str
      ?}
   !};
   fclose(_plik)
?};
_tab


\add_edok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Dodaje fakturę w obiegu na podstawie zeskanowanego dokumentu
::   WE: _a - obiekt z danymi ze zeskanowanego dokumentu
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
_obj:=_a;
_dok:=_obj.DOK;
EDOKUM.cntx_psh();
EDOKUM.prefix();
EDOKUM.blank();
EDOKUM.FIRMA:=REF.FIRMA;
EDOKUM.ROK_F:=SSTALE.AR;
EDOKUM.ODD:=POMOC.D_ODD;
EDOKUM.TYP:=POMOC.D_ETYPY;
EDOKUM.DATAW:=date();
EDOKUM.ALERTY:='T';
EDOKUM.AUTOMAT:=2;
OBIEGI.DEL_ETAT:='';
EDOKUM.DOSTAWCA:=OPERATOR.USER().OSOBA;
EDOKUM.USERS:=OPERATOR.USER;
EDOKUM.UNIK_ID:=tm_stamp();
EDOKUM.TYPOBIEG:=EDOKUM.TYP().TYPOBIEG;
EDOKUM.SYM:=_dok.SYM_ZEW;
EDOKUM.DOP:=_dok.DOP;
EDOKUM.DW:=_dok.DTO;
EDOKUM.DO:=_dok.D4;
EDOKUM.TP:=_dok.TP;
KH.cntx_psh();
KH.index('KOD');
KH.prefix(2,SKAN_DOK.KH().KOD,);
{? KH.first()
|| EDOKUM.KH_FULL:=KH.NAZ_P;
   EDOKUM.MIASTO:=KH.MIASTO;
   EDOKUM.UL:=KH.UL;
   EDOKUM.DOM:=KH.DOM;
   EDOKUM.LOKAL:=KH.LOKAL;
   EDOKUM.POCZ:=KH.POCZ;
   EDOKUM.KPOCZ:=KH.KPOCZ;
   {? EDOKUM.TYP().DOM_SL<>null
   || RS.cntx_psh(); RS.index('RS'); RS.prefix();
      {? RS.find_key(EDOKUM.TYP().DOM_SL().SLU().WZ,) & RS.TAB='KH'
      || _kod:=($('KH.'+RS.KOD))();
         SLO.cntx_psh();
         SLO.index('SL'); SLO.prefix(SLU.ref());
         {? ~SLO.find_key(_kod) | _kod<>SLO.KOD
         || SLO.blank();
            SLO.SLU:=SLU.ref();
            SLO.KOD:=_kod;
            SLO.TR:=KH.NAZ;
            SLO.add()
         ?};
         EDOKUM.KH:=SLO.ref();
         EDOKUM.KHKH:=exec('edokum_khkh','obiegi');
         SLO.cntx_pop()
      ?};
      RS.cntx_pop()
   ?}
?};
KH.cntx_pop();
EDOKUM.PLATNOSC:=exec('sp_pl','%skanuj',_dok.S_PL,'EDOKUM');
{? EDOKUM.PLATNOSC=null & EDOKUM.TYP().PLATNOSC<>null
|| EDOKUM.PLATNOSC:=EDOKUM.TYP().PLATNOSC
?};
{? EDOKUM.TP=date(0,0,0) & EDOKUM.PLATNOSC<>null
|| _rd:=exec('get_par','slo_slu',EDOKUM.PLATNOSC,6);
   EDOKUM.TP:={? _rd='S' || EDOKUM.DOP |? _rd='O' || EDOKUM.DO || EDOKUM.DW ?}+#exec('get_par','slo_slu',EDOKUM.PLATNOSC,2)

?};
EDOKUM.DOK_POW:=SKAN_DOK.uidref();
{? XINFO.SLWAL=null
|| exec('czytaj','#stalesys',,XINFO,'SLWAL')
?};
{? XINFO.SLWAL<>null
|| SLO.cntx_psh();
   SLO.index('SL'); SLO.prefix(XINFO.SLWAL,_dok.WAL,);
   {? SLO.first()
   || EDOKUM.WAL:=SLO.ref();
      EDOKUM.KURS:=_dok.KURS
   || {? FINFO.NAROD=null
      || exec('czytaj','#stalesys',,FINFO,'NAROD')
      ?};
      EDOKUM.WAL:=FINFO.NAROD
   ?};
   SLO.cntx_pop()
?};
{? _dok.KOR_SYM<>''
|| EDOKUM.KOREKTA:='T';
   EDOKUM.SYM_KOR:=_dok.KOR_SYM;
   DOK.KOR_ZEW:=_dok.KOR_SYM;
   EDOKUM.KOR_PRZY:=_dok.KOR_P
|| EDOKUM.KOREKTA:='N'
?};
{? EDOKUM.add()
|| _ref:=EDOKUM.ref();
   {? EDOKUM.TYP().AUT_ID='T' & EDOKUM.ID=''
   || VAR_DEL.delete('id_edok');
      exec('ustal_numer','obiegi',1,SSTALE.AR,1,0);
      EDOKUM.ID:={? var_pres('id_edok')>0 || id_edok || '' ?};
      EDOKUM.put()
   ?};
   zakres:=1;
   exec('dol_edokos','obiegi');
   {? EDOKUM.TYP().ATR_G1R>0
   || exec('edk_atr_dolacz','obiegi',0)
   ?};
   exec('add_zal','skanuj',SKAN_DOK.PLIK,SKAN_DOK.bl_info('PLIK','NAME'),'D',2);
   exec('add_zal','skanuj',SKAN_DOK.PLIK_OCR,SKAN_DOK.bl_info('PLIK_OCR','NAME'),'I',2);
   DOKUM.cntx_psh();
   DOKUM.index('TYP'); DOKUM.prefix($SKAN_DOK.ref(),'I');
   {? DOKUM.first()
   || {!
      |? DOKUM.cntx_psh();
         exec('add_zal','skanuj',DOKUM.DOKUM,DOKUM.bl_info('DOKUM','NAME'),'D',2);
         DOKUM.cntx_pop();
         DOKUM.next()
      !}
   ?};
   DOKUM.cntx_pop();
   _file:=fopen(SKAN_DOK.PLIK,'br',,,1);
   {? _file.is_open()
   || EDOKUM.bl_put('EDOKUM',_file,,,SKAN_DOK.bl_info('PLIK','NAME'));
      EDOKUM.put();
      fclose(_file)
   ?};
   {? EDOKUM.TYP().POZF='T'
   || _pozf:=_obj.POZF;
      {? _pozf.first()
      || _lp:=0;
         POZF.cntx_psh();
         POZF.use('pozf__'+(EDOKUM.name()+2));

         POZF.prefix();
         _cena:=EDOKUM.TYP().TYP_CENY;
         {!
         |? POZF.blank(1);
            POZF.EDOKUM:=_ref;
            POZF.LP:=(_lp+=1);
            POZF.NAZ:=_pozf.NAZ;
            POZF.SV:=exec('procvat4xml','obiegi2',_pozf.SV_TXT);
            POZF.JM:=exec('FindInSet','#table','JM','KOD',_pozf.JM);
            POZF.IL:=_pozf.ILE;
            POZF.WN:=_pozf.N;
            POZF.WV:=_pozf.V;
            POZF.WB:=_pozf.B;
            {? _cena='N'
            || POZF.C:=(POZF.WN/POZF.IL)$2
            || POZF.C:=(POZF.WB/POZF.IL)$2
            ?};
            POZF.add();
            _pozf.next()
         !};
         POZF.cntx_pop()
      ?}
   ?};
   _poz:=_obj.POZ;
   _netto:=0;
   _brutto:=0;
   EDOKUM.WART:=0;
   {? FINFO.NAROD=null
   || exec('czytaj','#stalesys',,FINFO,'NAROD')
   ?};
   {? EDOKUM.WAL=FINFO.NAROD
   || {? _poz.first()
      || EVAT.cntx_psh();
         EVAT.prefix();
         {!|? EVAT.blank(1);
              EVAT.EDOKUM:=_ref;
              EVAT.PR:=exec('procvat4xml','obiegi2',_poz.SV_TXT);
              _netto+=EVAT.NETTO:=_poz.N;
              EVAT.VAT:=_poz.V;
              _brutto+=EVAT.BRUTTO:=_poz.B;
              EVAT.add();
              _poz.next()
         !};
         EVAT.cntx_pop()
      ?}
   || {? _poz.first()
      ||  {!|?
             _netto+=_poz.N;
             _brutto+=_poz.B;
             _poz.next()
         !}
      ?}
   ?};
   EDOKUM.NETTO:=_netto;
   EDOKUM.WART:=_brutto;
   EDOKUM.put();
   SKAN_DOK.cntx_psh();
   SKAN_DOK.prefix();
   SKAN_DOK.STATUS:='Z';
   SKAN_DOK.put();
   SKAN_DOK.cntx_pop()
?};
EDOKUM.cntx_pop();
_ref


\add_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Dodaje kontrahenta
::   WE: _a - obiekt z danymi z OCR
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
_obj:=_a;
_dok:=_obj.DOK;
{? _dok.NIP<>''
|| _snip:=exec('niptostr','#string',_dok.NIP);
   {? 2+_snip='PL' || _snip:=2-_snip ?};
   {? #(2+_snip)=0
   || NIPY.cntx_psh();
      NIPY.index('SNIP2');
      NIPY.prefix(_snip,);
      {? ~NIPY.first()
      || KH.cntx_psh();
         KH.index('SNIP'); KH.prefix(2,_snip,);
         {? ~KH.first()
         || KH.prefix();
            KH.blank();
            KH.TYP:='U';
            KH.KOD:=exec('kh_kod','%skanuj');
            KH.SKR:=exec('kh_skr','%skanuj',_obj);
            KH.P:=2;
            KH.NAZ:=KH.NAZ_P:=_dok.KH_NAZ;
            KH.UL:={? -_dok.KH_UL*'ul. '>0 || 4-_dok.KH_UL || _dok.KH_UL ?};
            KH.MIASTO:=_dok.KH_M;
            KH.KPOCZ:=_dok.KH_P;
            {? KH.add()
            || _ref:=KH.ref();
               NIPY.index('SNIP');  NIPY.prefix(KH.ref());
               {? ~NIPY.first()
               || SLO.cntx_psh(); SLU.cntx_psh();
                  SLU.index('NAZ'); SLU.prefix('~KRAJE UE');
                  {? SLU.first() & SLU.NAZ='~KRAJE UE'
                  || SLO.index('SL'); SLO.prefix(SLU.ref());
                     {? SLO.find_key(2+_snip)
                     || NIPY.blank();
                        NIPY.KH:=KH.ref();
                        NIPY.KRAJ:=SLO.ref();
                        NIPY.NIP:=(2-_snip);
                        NIPY.SNIP:=NIPY.KRAJ().KOD+exec('niptostr','#string',NIPY.NIP);
                        NIPY.add()
                     ?}
                  ?};
                   SLO.cntx_pop(); SLU.cntx_pop()
               ?}
            ?}
         ?};
         KH.cntx_pop()
      ?};
      NIPY.cntx_pop()
   ||
      KH.cntx_psh();
      KH.index('SNIP'); KH.prefix(2,_snip,);
      {? ~KH.first()
      || KH.prefix();
         KH.blank();
         KH.TYP:='P';
         KH.KOD:=exec('kh_kod','%skanuj');
         KH.SKR:=exec('kh_skr','%skanuj',_obj);
         KH.P:=2;
         KH.SNIP:=_snip;
         KH.NIP:=_snip;
         KH.NAZ:=KH.NAZ_P:=_dok.KH_NAZ;
         KH.UL:={? -_dok.KH_UL*'ul. '>0 || 4-_dok.KH_UL || _dok.KH_UL ?};
         KH.MIASTO:=_dok.KH_M;
         KH.KPOCZ:=_dok.KH_P;
         {? KH.add()
         || _ref:=KH.ref()
         ?}
      ?};
      KH.cntx_pop()
   ?}
?};
_ref


\typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Ustawia parametr wejściowy TYP czynności
::   WE: _a - wartość dotychczasowa
::----------------------------------------------------------------------------------------------------------------------
_nr:={? _a='Dokument księgowy' || 1 || 2 ?};
_pyt:=FUN.choice('Typ wyjściowy dokumentu',_nr,'Dokument księgowy','Faktura w obiegu');
{? _pyt=1
|| 'Dokument księgowy'
|? _pyt=2
|| 'Faktura w obiegu'
|| ~~
?}


\win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Zwraca okno obszaru zeskanowane dokumenty
::----------------------------------------------------------------------------------------------------------------------
_win:=SKAN_DOK.mk_sel('','P',,'#skandokwin',,,,,'U',,,,,'html_maximized');
SKAN_DOK.win_fld(_win,,'R_DATA');
SKAN_DOK.win_fld(_win,,'R_CZAS');
SKAN_DOK.win_fld(_win,,'NAZ',,,34,,,'Nazwa pliku');
SKAN_DOK.win_fld(_win,,'STATUS_O',,,20);
SKAN_DOK.win_fld(_win,,'PROCENT',,,5,2,,'% rozpoznania');
SKAN_DOK.win_fld(_win,,'SYM_ZEW',,,32);
SKAN_DOK.win_fld(_win,,'NIP',,,20);
SKAN_DOK.win_fld(_win,,'KH','SKR',,10);
SKAN_DOK.win_fld(_win,,'WAL',,,3);
SKAN_DOK.win_fld(_win,,'BRUTTO',,,12);
{! _typ:=0..1
|! SKAN_DOK.win_act(_win,_typ,'Formuła','Dołącz'@@,,,"exec('akc_add','zso_scn')");
   task_attach('ZSO_SCN_DARK');
   SKAN_DOK.win_act(_win,_typ,'Formuła','Ska&nuj'@@,,,"exec('akc_scn','zso_scn')");
   task_attach('ZSO_SCN_DASK')
!};
SKAN_DOK.win_act(_win,,'Formuła','Usuń'@@,,,"exec('akc_del','zso_scn')",,,1,
   "exec('bg_akc_del','zso_scn')","exec('ag_akc_del','zso_scn')"
);
task_attach('ZSO_SCN_DARK'); task_attach('ZSO_SCN_DASK');
SKAN_DOK.win_act(_win,,'Formuła','Otwórz'@@,,,"exec('akc_open','zso_scn')");
SKAN_DOK.win_act(_win,,'Formuła','Zapisz'@@,,,"exec('akc_save','zso_scn')");
SKAN_DOK.win_act(_win,,'Formuła','W&yślij'@@,,,"exec('akc_send','zso_scn')",,,1,
   "exec('bg_akc_send','zso_scn')","exec('ag_akc_send','zso_scn')"
);
task_attach('ZSO_SCN_OCRD');
SKAN_DOK.win_act(_win,,'Formuła','Weryfikuj'@@,,,"exec('akc_ver','zso_scn')");
task_attach('ZSO_SCN_OCRD');
SKAN_DOK.win_act(_win,,'Formuła','Pobierz'@@,,,"exec('akc_get','zso_scn')",,,1,
   "exec('bg_akc_get','zso_scn')","exec('ag_akc_get','zso_scn')"
);
task_attach('ZSO_SCN_OCRD');
SKAN_DOK.win_act(_win,,'Formuła','Pod&gląd danych'@@,,,"exec('akc_view_data','zso_scn')");
SKAN_DOK.win_act(_win,,'Formuła','Zmień kont&rahenta'@@,,,"exec('zmien_kh','skanuj',SKAN_DOK.KH().KOD)");
_menu:='U&twórz';
SKAN_DOK.win_act(_win,,'Menu','U&twórz'@@);
SKAN_DOK.win_act(_win,,'Formuła','Dokument księgowy'@@,_menu,,"exec('akc_utw_dok','zso_scn')",,,1,
   "exec('bg_akc_utw_dok','zso_scn',1)","exec('ag_akc_utw_dok','zso_scn')"
);
task_attach('ZSO_SCN_TDOK');
SKAN_DOK.win_act(_win,,'Formuła','Faktura w obiegu'@@,_menu,,"exec('akc_utw_edok','zso_scn')",,,1,
   "exec('bg_akc_utw_dok','zso_scn',2)","exec('ag_akc_utw_dok','zso_scn')"
);
task_attach('ZSO_SCN_TEDO');
{! _typ:=0..1
|! SKAN_DOK.win_act(_win,_typ,'Formuła','Załą&czniki'@@,,,"exec('akc_zal','zso_scn')");
   SKAN_DOK.win_act(_win,_typ,'Formuła','Z&mień zakres'@@,,,"exec('zakres','zso_scn')");
   SKAN_DOK.win_act(_win,_typ,'Formuła','Ustaw &autoryzację'@@,,,"exec('akc_pass','zso_scn')");
   task_attach('ZSO_SCN_OCRD')
!};
SKAN_DOK.win_act(_win,,'Szukaj');
SKAN_DOK.win_act(_win,,'Kolejność');
SKAN_DOK.win_act(_win,,'Rekord',,,,"exec('br_skan_dok','zso_scn')");
SKAN_DOK.win_btn(_win,'text=%1,btn_label_align=center,panel=right,align=begin'['Z&mień zakres'@],'menu:M');
SKAN_DOK.win_btn(_win,'text=%1,btn_label_align=center,panel=right,align=begin'['Dołącz'@],'menu:D');
SKAN_DOK.win_btn(_win,'text=%1,btn_label_align=center,panel=right,align=begin'['Ska&nuj'@],'menu:N');
SKAN_DOK.win_btn(_win,'text=%1,btn_label_align=center,panel=right,align=begin'['Weryfikuj'@],'menu:W');
SKAN_DOK.win_btn(_win,'text=%1,btn_label_align=center,panel=right,align=begin'['Pobierz'@],'menu:P');
SKAN_DOK.win_btn(_win,'text=%1,btn_label_align=center,panel=right,align=begin'['Pod&gląd danych'@],'menu:G');
_win


\zmien_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [20xx]
:: OPIS: Zmiana kontrahenta w rozpoznanej z OCR fakturze
::   WE: _a kod kontrahenta rozpoznanego
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_win:=KH.win_sel('?');
_kod:=_a;
KH.win_sel('SEL');
KH.cntx_psh();
KH.index('KOD');
KH.prefix(2);
KH.find_key(_kod);
{? KH.select(,1)
|| SKAN_DOK.KH:=KH.ref();
   SKAN_DOK.NIP:={? KH.TYP='P'
                          || KH.NIP
                          |? KH.TYP='R' | KH.TYP='I'
                          || {? KH.NIP<>'' || KH.NIP || KH.PESEL ?}
                          |? KH.TYP='U'
                          || exec('jak_nue','kontrahent')
                          ||''
                          ?};
   SKAN_DOK.put()
?};
KH.cntx_pop();
KH.win_sel(_win);
1


\service_send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Wysłanie zeskanowanych deokumentów do skanuj.to
::----------------------------------------------------------------------------------------------------------------------
_sql:=sql('select REFERENCE as REF from SKAN_DOK where status=\'R\'');
{? _sql.first()
|| SKAN_DOK.cntx_psh();
   SKAN_DOK.prefix();
   {!
   |? {? SKAN_DOK.seek(BIT.sqlint(_sql.REF),) & SKAN_DOK.STATUS='R'
      || _obj:=exec('send_doc','skanuj');
         {? _obj.id<>-1
         || SKAN_DOK.STATUS:={? _obj.state=5 || 'P' || 'S' ?};
            SKAN_DOK.ID:=$_obj.id;
            SKAN_DOK.put()
         ?};
         &_obj
      ?};
      _sql.next()
   !};
   SKAN_DOK.cntx_pop()
?};
1


\service_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Aktualizacja statusu zeskanowanego dokumentu
::----------------------------------------------------------------------------------------------------------------------
_dok:=exec('ver_list','skanuj',3);
{? _dok.ok & var_pres('list',_dok)>0
|| _pGet:=exec('get','#parametr',116)='T';
   _pMin:=#exec('get','#parametr',117);
   SKAN_DOK.cntx_psh();
   SKAN_DOK.index('ID');
   SKAN_DOK.prefix();
   {! _ii:=1..obj_len(_dok.list)
   |! {? SKAN_DOK.find_key($_dok.list[_ii],) & SKAN_DOK.STATUS='S'
      || _obj:=exec('get_doc','skanuj');
         {? _obj.file<>''
         || {? SKAN_DOK.bl_put('PLIK_OCR',_obj.file,1)
            || SKAN_DOK.put();
               exec('set_nag','skanuj')
            ?};
            ferase(_obj.file,1)
         ?};
         &_obj;
         SKAN_DOK.STATUS:={? _pGet & SKAN_DOK.PROCENT>=_pMin || 'D' || 'G' ?};
         SKAN_DOK.put();
         {? SKAN_DOK.STATUS='D'
         || exec('del_doc','skanuj');
            _op:=OPERATOR.USER;
            OPERATOR.USER:=exec('FindInSet','#table','USERS','USR_KKOD',SKAN_DOK.R_USER);
            {? OPERATOR.USER
            || _params:=exec('mp_run_a','#b__box');
               _params.ACT_UID:='ZSO_SCN_OCRD';
               _params.AKCJA:='Zakończ';
               _params.UIDREF:=SKAN_DOK.uidref();
               _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
               exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'SKAN_DOK',SKAN_DOK.ref());
               _params.PROC_START:='N';
               exec('mp_run','#b__box',_params);
               &_params
            ?};
            OPERATOR.USER:=_op
         ?}
      ?}
   !};
   SKAN_DOK.cntx_pop()
?};
1


\valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca status danych pobranych z OCR
::   WE: [_a] - tablica z danymi z OCR, domyślnie dane pobierane z rekordu (BLOB)
::----------------------------------------------------------------------------------------------------------------------
_value:=0;
_ile:=0;
_lista2:=',Korygujaca,FakturaKorygowana,PrzyczynaKorekty,';
_lista:='NrFaktury,DataSprzedazy,DataZakupu,DataWystawienia,DataWplywu,TerminPlatnosci,KontoBankowe,Korygujaca,'+
   'FakturaKorygowana,PrzyczynaKorekty,KursWaluty,SposobPlatnosci,NabywcaNip,SprzedawcaNip';
_arr:=spli_str(_lista,',');
_json:={? var_pres('_a')>0 || _a || exec('json','skanuj') ?};
{? var_pres('_json')>0 & var_pres('attributes',_json)>0
|| _kor:=var_pres('Korygujaca',_json.attributes)>0 & #_json.attributes.Korygujaca.value=1;
   {! _ii:=1..obj_len(_arr)
   |! {? var_pres(_arr[_ii],_json.attributes)>0 & (_lista2*_arr[_ii]=0 | _kor)
      || _el:=($('_a.attributes.'+_arr[_ii]))(_json);
         {? var_pres('status',_el)>0
         || _val:={? type_of(_el.status)=type_of('') || #_el.status || _el.status ?};
            _value+=_val<>1;
            _ile+=1
         ?};
         &_el
      ?}
   !}
?};
{? var_pres('_json')>0 & var_pres('positions',_json)>0
|| {! _ii:=1..obj_len(_json.positions)
   |! {? var_pres('is_valid',_json.positions[_ii])>0
      || _val:={? type_of(_json.positions[_ii].status)=type_of('')
               || #_json.positions[_ii].status
               || _json.positions[_ii].status
               ?};
         _value+=_val<>1;
         _ile+=1
      ?}
   !}
?};
(_value/_ile*100)$2


\log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_file:=fopen('skanuj.to','a',1);
{? _file
|| fwrite(_file,time$3+' - '+_a);
   fclose(_file)
?}


\obj_token
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Obiekt do przechowywania tokena
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ScnToken')<=0
|| _obj:=obj_new(
      'token','date','time',
      'set','get'
   );
   _obj.token:='';
   _obj.date:=date();
   _obj.time:=time(0,0,0);
   _obj.set:="
      .token:=_a;
      .date:=date();
      .time:=time()+10;
      ~~
   ";
   _obj.get:="
      {? .token<>'' & (.date<>date() | .time<time())
      || .token=''
      ?};
      .token
   ";
   ScnToken:=_obj
?};
ScnToken

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:39 0d882a6454485f08449c31ba09ec15ae366376e51ae8f5e14e96c8dc506c84de2b3e853a2d80f8c261f9ac17372af1b5d8feff85ac67100efc9542b1968fa42a0ca002aee054f2de7802dfa1abb310e78d1078afad99813ce6b15e7949a0735e4b4220c954c3aa0700eefd3e2dd4ec99f725dc23341010c4367bbe5bc008dfb8
