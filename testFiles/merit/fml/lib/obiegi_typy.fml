:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: obiegi_typy.fml
:: Utworzony: 21.05.2021
:: Autor: MB
::======================================================================================================================
:: Zawartość: Obsługa typów dokumentów w obiegu
::======================================================================================================================


\def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Definiowanie typów dokumentów w obiegu
::   WE: [_a] - rodzaj: 'W'-wnioski, 'D'-delegacje
::----------------------------------------------------------------------------------------------------------------------
_rodzaj:={? var_pres('_a')=type_of('') || _a || 'W' ?};
_ar:=SSTALE.AR;
exec('typobieg','obiegi');
exec('__RQ_BT','object');
exec('__RQ_GR','object');
OBIEGI.TYPFOR:='E';
OBIEGI.OBIEGKON:=OBIEGI.FAKT_DEL:=1;
POMOC.TAT_M:='W';
SCH_FORM.cntx_psh(); SCH_FORM.win_sel('WER'); SCH_FORM.win_dict('WER');
{? POMOC.W_PORTAL='N'
|| _ok:=ETYPY.grp_make('Typy wniosków w obiegu'@,,'wnioski_typ',,,,,'normal');
   ETYPY.grp_sel(_ok,,'WERW','Wnioski'@,,,,,"typobi:=2; exec('deftypdo1','!zws_par_wtyp')",,,,'maximized');
   ETYPY.grp_sel(_ok,,'WERW','Delegacje'@,,,,,"typobi:=3; exec('deftypdo1','!zws_par_wtyp')",,,,'maximized');
   EDIT_VAR.fld_fml('RODZ_WP','F3',"exec('edit_var_rodz_wp_f3','!zws_par_wtyp')");
   ETYPY.fld_fml('GRUPA_WP','F3',"exec('etypy_grupa_wp_f3','!zws_par_wtyp')");
   ETYPY.fld_fml('WID_WP','AFTER_EDIT',"exec('etypy_wid_wp_ae','!zws_par_wtyp')");
   ETYPY.win_efml('REDW',,'GRUPA_WP',,'ICON_BEFORE',"Icon.icon_before(__RQ_GR.getIcon(ETYPY.GRUPA_WP))");
   {? exec('lic','#b_domain','POR')
   || _fml:="{? typobi=2 || {? ETYPY.IN_POR || 'xwin16.png:11' || 'xwin16.png:110' ?} || '' ?}"
   || _fml:="''"
   ?};
   ETYPY.win_fml('WERW',,'NAZWA',,'ICON_BEFORE',_fml)
|? _rodzaj='D'
|| _ok:='WERDWP';
   typobi:=3;
   exec('deftypdo1','!zws_par_wtyp');
   ETYPY.actions(_ok,'DJ:D')
|| _win:='WERWWP'; _win_red:='REDWWP';
   EDIT_VAR.fld_fml('RODZ_WP','F3',"exec('edit_var_rodz_wp_f3','!zws_par_wtyp')");
   ETYPY.fld_fml('GRUPA_WP','F3',"exec('etypy_grupa_wp_f3','!zws_par_wtyp')");
   ETYPY.fld_fml('WID_WP','AFTER_EDIT',"exec('etypy_wid_wp_ae','!zws_par_wtyp')");
   ETYPY.win_efml(_win_red,,'GRUPA_WP',,'ICON_BEFORE',"Icon.icon_before(__RQ_GR.getIcon(ETYPY.GRUPA_WP))");
   exec('etypy_efld_opt','obiegi_typy','*',ETYPY,'REDWWP',,'put');
   {? POMOC.W_PORTAL='T'
   || _ok:=ETYPY.grp_make('Typy wniosków w obiegu'@,,'wnioski_typ',,,,,'normal');
      ETYPY.grp_sel(_ok,,_win,'Wnioski'@,,,,,"typobi:=2; exec('deftypdo1','!zws_par_wtyp')",,,,'maximized');
      _wer:=ETYPY.mk_sel('Wnioski o urlop'@,,,'wu',,,,,'U');
      ETYPY.win_fld(_wer,,'ID_WP',,,20);
      ETYPY.win_fld(_wer,,'NAZWA',,,45);
      ETYPY.win_fld(_wer,,'FORM_WAL','SKROT',,-20,,1,'Formuła walidacyjna - skrót'@);
      ETYPY.win_fld(_wer,,'FORM_WAL','TRESC',,45,,1,'Formuła walidacyjna - treść'@);
      ETYPY.win_act(_wer,,'Formuła','&Procesy powiązane'@@,,,"exec('pow_proc','!zws_par_wtyp')",,,,,,'P');
      ETYPY.win_act(_wer,,'Formuła','Typy &załączników'@@,,,"exec('etypyatt_sel','portal_paperless')",,,,,,'Z');
      ETYPY.win_act(_wer,,'Formuła','Zmian&y'@@,,'Informacje o modyfikacjach bieżącego zapisu'@,"mb_exec('ZMIANY()')");
      ETYPY.win_act(_wer,,'Rekord',,,
         ,$("{? _a || ETYPY.actions_grayed('"+_wer+"',{? ETYPY.ZAL_WP || '' || 'Z' ?})?}")
      );
      ETYPY.grp_sel(_ok,,_wer,'Wnioski o urlop'@,,,,
         ,"ETYPY.index('UNIK_WP'); ETYPY.prefix(exec('bl_typ','obiegi',typobi),'X')",,,,'maximized'
      )
   || typobi:=2; exec('deftypdo1','!zws_par_wtyp');
      _ok:='WERWWP'
   ?};
   ETYPY.actions(_win,{? POMOC.W_PORTAL='s' || 'B:BJ' || '' ?})
?};
ETYPY.win_sel(_ok);
__ofz:='T';
SCH_FORM.actions('WER','W');
ETYPY.select();
SCH_FORM.actions('WER');
VAR_DEL.delete('__ofz','SchSel','PorSloW');
VAR_DEL.delete('typobi');
SCH_FORM.cntx_pop();
exec('tabkhdel','kontrahent');
SSTALE.AR:=_ar;
~~


\ae_idinhead
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.37]
:: OPIS: Formuła po redakcji pola - informacje dodatkowe w nagłówku
::----------------------------------------------------------------------------------------------------------------------
{? ETYPY.IDINHEAD || ETYPY.ATR_G1R:=1 ?};
1


\def_faktur
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Definiowanie typów faktur w obiegu
::----------------------------------------------------------------------------------------------------------------------
__ofz:='T';
_ar:=SSTALE.AR;
exec('typobieg','obiegi');
OBIEGI.OBIEGKON:=OBIEGI.FAKT_DEL:=1;
SCH_FORM.cntx_psh(); SCH_FORM.win_sel('WER'); SCH_FORM.win_dict('WER');
typobi:=1;
TYPOBIEG.cntx_psh(); TYPOBIEG.index('UNIK');
TYPOBIEG.prefix('Obieg faktur','Obieg faktur');
OBIEGI.TYPOBIEG:={? TYPOBIEG.first() || TYPOBIEG.ref() || null ?};
OBIEGI.TYP_ID:='T';
TYPOBIEG.cntx_pop();
{? OBIEGI.TYPOBIEG
|| exec('tabkhini','kontrahent');
   ETYPY.index('UNIK_WP'); ETYPY.prefix(exec('bl_typ','obiegi',typobi),POMOC.W_PORTAL);
   {? POMOC.W_PORTAL='S'
   || _red:='RED_SEOD';
      PorsloFld:=exec('customField','portal_slowniki');
      PORSLO.win_sel('ULW');
      PORSLO.win_edit('ULW')
   || _red:='RED'
   ?};
   ETYPY.win_edit(_red);
   ODD.win_dict('SLO'); HAN.win_dict('SLO'); REJ.win_dict('SLO1'); SKID_MBN.win_dict('WER');
   ETYPY.win_sel('WER'); ETYPY.select()
?};
VAR_DEL.delete('__ofz','typobi','PorsloFld');
SCH_FORM.cntx_pop();
exec('tabkhdel','kontrahent');
SSTALE.AR:=_ar;
~~


\bl_idinhead
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Formuła na wartość początkową pola ETYPY.IDINHEAD
::----------------------------------------------------------------------------------------------------------------------
ETYPY.W_PORTAL='s'


\etypy_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła odpowiedzialna za dynamiczne ustawianie właściwości pól tabeli ETYPY. Formuła wywoływana jest
::       w dwóch kontekstach pracy:
::          - Po redagowaniu konkretnego pola, które determinuje właściwości wyświetlania innych pól.
::          - Przed wyświetleniem okna redagowania (przed właściwymi akcjami Dołącz, Popraw, Wyświetl), ustawia
::            właściwości wszystkich pól (wymagających tego).
::       Kontekst pracy jest określany na podstawie argumentu wywołania.
::   WE: [_a] [STRING] - Kontekst pracy:
::             '1' - Obsługa jednego pola [domyślnie].
::             '*' - Obsługa wszystkich pól.
::       [_b] [TABLE]  - Uchwyt tabeli, w oknie redagowania której znajdują sie pola. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęta bieżąca tabela.
::       [_c] [STRING] - Akronim okna, w którym mają być ustawione właściwości pól. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęte bieżące okno.
::       [_d] [STRING] - Akronim pola, którego wartość determinuje właściwości wyświetlania innych pól. Parametr ma
::             znaczenie wyłącznie dla _a='1'. [Domyślnie: bieżące pole].
::       [_e] [STRING] - typ operacji: 'add', 'put' lub ''
::   WY: 0 - Błąd argumentów wywołania.
::       1 - Argumenty poprawne (właściwości ustawione).
::  OLD: \etypy_efld_opt/!zws_par_wtyp.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (_a='1' | _a='*') || _a || '1' ?};
{? var_pres('_b')=type_of(ETYPY)
|| _tab:=_b
|? _tryb='1'
|| _tab:=cur_tab(1,1)
|| return(0)
?};
{? var_pres('_c')=type_of('')
|| _we:=_c
|? _tryb='1'
|| _we:=cur_win(1,1)
|| return(0)
?};
{? var_pres('_d')=type_of('')
|| _fld:=_d
|? _tryb='1'
|| _fld:=cur_afld()
|| _fld:=''
?};
_akc:={? var_pres('_e')=type_of('') || _e || '' ?};

{? _fld='' | _fld='WID_WP'
|| _sval:=$(ETYPY.WID_WP='T');
   _tab.efld_opt(_we,'mark='+_sval,EDIT_VAR,'RODZ_WP');
   _tab.efld_opt(_we,'enable='+_sval,EDIT_VAR,'RODZ_WP');
   _tab.efld_opt(_we,'enable='+_sval,ETYPY,'ZAL_WP');
   _tab.efld_opt(_we,'enable='+_sval,ETYPY,'GRUPA_WP');
   _tab.efld_opt(_we,'enable='+_sval,ETYPY,'TAGI_WP')
?};
{? _fld=''
|| _edid:=1;
   {? _akc='put'
   || ETYPY.cntx_psh();
      _uid:=ETYPY.uidref();
      ETYPY.cntx_pop();
      {? var_pres('_uid')=type_of('') & _uid<>''
      || _id:=exec('get_id_cloud','portal_core','PORTAL_ETYPY_RR_ID',_uid);
         {? _id=0
         || _id:=exec('get_id_cloud','portal_core','PORTAL_ETYPY_RT_ID',_uid)
         ?};
         _edid:=_id=0
      ?}
   ?};
:: Identyfikator jest dostępny do redakcji gdy typ wniosku nie był jeszcze wysłany na portal
   _tab.efld_opt(_we,'editable='+$_edid,ETYPY,'ID_WP')
?};
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 8eebbce59e5f6b0aff0b0f918af398b6e6a981ac4b6bddd88aec63535ed1397821a11a6a9ecf175a4e009a2d6c741e02210f26813b11a14ad755e18d843b91117c09d345ad0c663ff9c0b3a240a1bf98fb381a91afbabdba626ab21396513d5c70fcadddaefa146aa109bf0d53b87edc5580aa6164d1aed417254a54a21af157
