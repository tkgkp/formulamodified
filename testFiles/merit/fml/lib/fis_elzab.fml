:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: fis_elzab.fml
:: Utworzony: 25.07.2016
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Drukarka fiskalna
::            Formuly do obslugi obiektu DRUKARKA  dla drukarki fiskalnej ELZAB FP600
::            dla stawek podatkowych: 1-22%, 2-12%, 3-7%, 4-0%, 5-zwolniony
::            Ewentualne zmiany symboli stawek należy wprowadzić w metodzie get_vat
::======================================================================================================================


\mode
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: tryb otwarcia portu
::----------------------------------------------------------------------------------------------------------------------
'db,mode=binary,speed=115200,parity=no'


\create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AJ [2008]
:: OPIS: Formula tworzy obiekt klasy DRUKARKA, patrz: drukarka.fml
::       Ustawia metody wirtualne dla drukarki ELZAB FP-600
::   WE: _a - 0 - ELZAB (domyślnie), 1 - ELZAB-ONLINE
::----------------------------------------------------------------------------------------------------------------------
_elzab_onlize:=0;
{? var_pres('_a')=type_of(0)
|| _elzab_onlize:=_a
?};

_druk:=obj_new(@.CLASS.DRUKARKA);

:: definicja metod wirtualnych clasy DRUKARKA
set_virt(_druk,'init',"
   .PROTO:='ELZAB';
   .ESC:=%27;
   .ACK:=6;
   .NAK:=21
");

set_virt(_druk,'get_stat',"
_byte1:=_byte2:=255;
_l:=.ESC+.hex2char('94');
fwrite(.STR,_l,2);
_byte1:=fread(.STR,1);
_l:=.ESC+.hex2char('95');
fwrite(.STR,_l,2);
_byte2:=fread(.STR,1);
{? _byte1<0|_byte2<0|_byte1=255|_byte2=255 || FUN.info('Drukarka nie odpowiada.\nSprawdź zasilanie i połączenie.'@);''
|? (_byte1=0) & (_byte2=0)                 || _l:='ok';_l
|? (_byte1%4)%*2 & _byte2=1                || FUN.info('W pamięci fiskalnej zostało mniej niż 30 rekordów do zapisania.'@); .get_stat()
|? _byte1=0 & _byte2=1                     || .get_stat()
|| _l:='';
   {? _byte1%*2     || FUN.info('Brak wolnego miejsca w bazie kontrolnej nazw i stawek.'@) ?};
   {? (_byte1%2)%*2 || FUN.info('W pamięci znajduje się dokument do wydrukowania.'@) ?};
   _byte1:=_byte1%8;
   {? _byte1%*2
   || {? ~(_=1 & _a='rd')
      || FUN.info('Nie został wykonany raport dobowy za poprzedni dzień.\n Wykonaj raport dobowy.'@)
      ?};
      _l:='rd'
   ?};
   _byte2:=_byte2%2;
   {? _byte2%*2 | (_byte2%32)%*2 || FUN.info('Brak papieru w drukarce.\n Zmień taśmę.'@) ?};
   {? (_byte2%8)%*2              || FUN.info('Nastąpiło unieważnienie paragonu.'@) ?};
   _l
?}
");

set_virt(_druk,'chk_stat',"
  _ok:=0;
  _l:=.get_stat();
  {? _l='ok' || _ok:=1 ?};
  _ok
");

set_virt(_druk,'chck_prt',"
   .STR:=fopen(.DEV,.MODE);
   {? .STR ||
      {? _=1 ||
         _result:=.get_stat(_a);
         {? _result<>'ok' & _result<>_a || fclose(.STR); .STR:=0; .ONLINE:=0 || .ONLINE:=1 ?}
      ||
         {? .chk_stat() || .ONLINE:=1 || fclose(.STR); .STR:=0; .ONLINE:=0 ?}
      ?}
   || .ONLINE:=0
   ?};
   .ONLINE
");

set_virt(_druk,'send',"
   fwrite(.STR,_a);
   _result:=0;
   _result:=fread(.STR,1);
   {? _result=.NAK ||
      .chk_stat();
      {? .STR || fclose(.STR); .STR:=0; .ONLINE:=0 ?};
      0
   ||
      _result=.ACK
   ?}
");

set_virt(_druk,'send_clo',"
   _a:=.send(_a);
   {? _a ||
      exec('delay','fis_elzab',5);
      FUN.info('Dane zostały wysłane do drukarki.'@)
   ?};
   {? .STR || fclose(.STR); .STR:=0; .ONLINE:=0 ?};
   _a
");


set_virt(_druk,'vatget',"
   _res:=obj_new('RES','A','B','C','D','E','F','G');
   _res.RES:=0;
   {? .chck_prt()
   ||
      _l:=.ESC+.hex2char('D1');
      fwrite(.STR,_l);
      _l:=fread(.STR,1);
      {? _l<>.ACK
      ||
         fclose(.STR); ''
      ||
         _res.RES:=1;
         _nazwy:='ABCDEFG';
         {!
         |? _nazwy<>''
         |!
            _nazwa:=1+_nazwy; _nazwy:=1-_nazwy;
            _txt:=$fread(.STR,1); _txt+=$fread(.STR,1);
            _txt:={? _txt='800' || '' |? _txt='400' || 'Zwol.' || _txt:=(.hex2int(_txt)/10); (' '+$_txt+' %')+4 ?};
            ($'_a.%1'[~(_nazwa)])(_res):=_txt
         !}
      ?}
   ?};
   _res
");


set_virt(_druk,'get_vat',"
   {? OZ.A().KOD*_a || %1
   |? OZ.B().KOD*_a || %2
   |? OZ.C().KOD*_a || %3
   |? OZ.D().KOD*_a || %4
   |? OZ.E().KOD*_a || %6
   |? OZ.F().KOD*_a || %7
   |? OZ.ZW().KOD*_a || %5
   || %8
   ?}
");

set_virt(_druk,'beg_par',"
   {? .chck_prt() ||
       _l:=.ESC+.hex2char('21');
      .send(_l)
   ||
      0
   ?}
");

set_virt(_druk,'line_par',"
{? .ONLINE ||
   _l:=.ESC+.hex2char('06');
   _l+={? _a || .hex2char('20') || .hex2char('2D') ?};
   _b+=28*'.';
   _l+=form(_b,28)+'0';
   fwrite(.STR,_l);
   _il:=$_c;
   _dokl:=(_il*',');
   {? _dokl || _dokl:=(+_il)-_dokl ?};
   _c*=pow(10,_dokl);
   exec('send_val','fis_elzab',.STR,_c);
   _l:={? _dokl<5 & _dokl>0 || %_dokl || .hex2char('30') ?};
   _l+={? _=7 || form(_g,4) || '    ' ?};
   fwrite(.STR,_l);
   _e:=(_e $ 2)*100;
   exec('send_val','fis_elzab',.STR,_e);
   _l:=.ESC;
   _l+=.get_vat(_d);
   fwrite(.STR,_l);
   _f:=(_f $ 2)*100;
   exec('send_val','fis_elzab',.STR,_f);
   {? ~.chk_stat() || fclose(.STR); .STR:=0; 0 || 1 ?}
|| 0 ?}
");

set_virt(_druk,'nip_nab',"
   {? .ONLINE
   ||
      _l:=.ESC+.hex2char('4B')
      _a:=42+(_a+(42*' '));
      _l+=_a;
      fwrite(.STR,_l);
      _result:=fread(.STR,1);
      {? _result=120
      ||
         .chk_stat();
         {? .STR || fclose(.STR); .STR:=0; .ONLINE:=0 ?};
         0
      ||
         _result=0
      ?}
   ||
      0
   ?}
");

set_virt(_druk,'payment',"
   {? .ONLINE
   ||
      _typ:=exec('payment_typ','fis_elzab',_a);
      _war:=_b;
      _txt:=_typ;
      _linefoot:=params_get().linefoot;
      _linefoot.add(.hex2int('32'),22+(_txt+(22*' ')))
   ?}
");

set_virt(_druk,'end_par',"
:: _a - wartość brutto
:: _b - ok/anul - zatwierdzić koniec paragonu lub anulować paragon
:: _c - kod kasy (1 znak) + kod kasjera (2 znaki)
:: _d - wartość płatności
:: _e - czy drukowane linie po logo fiskalnym
   {? .ONLINE
   ||
      _l:=.ESC+.hex2char('07');
      fwrite(.STR,_l);
      _a:=(_a $ 2)*100;
      exec('send_val','fis_elzab',.STR,_a);
::    drukowanie na paragonie dodatkowych linii po transakcji
      _linefoot:=params_get().linefoot;
      {? _linefoot.PRT
      ||
         _LinesFoot:=_linefoot.TAB;
         _loop:=_LinesFoot.first();
         {!
         |? _loop
         |!
            _id:=_LinesFoot.ID;
            _na:=_LinesFoot.NA;
            PRT_FISK.linefoot(_id,_na);
            _loop:=_LinesFoot.next()
         !};
         .end_foot()
      ?};
      _linefoot.PRT:=0;
      _l:=.ESC+.hex2char({? _b='ok' || '24' || '23' ?});
      .send_clo(_l)
   ||
      0
   ?}
");

set_virt(_druk,'sizefoot',"6");

set_virt(_druk,'linefoot',"
    _l:=.ESC;
    _l+=.hex2char('09');
    _l+=.hex2char(BB.hex(_a));
    _l+=_b;
    _l+=.hex2char('0A');
    fwrite(.STR,_l);
    _result:=fread(.STR,1);
    ~~
");

set_virt(_druk,'lchkfoot',"
   _id:=_a;
   _na:=_b;
   _txt1:=_c;
   _txt2:=_d;
   {? _id<48 | 70<_id
   ||
      FUN.info(_txt1+'Jako pierwszy parametr należy podać liczbę szesnastkową z zakresu <30H..46H>.'@+_txt2);
      0

   ||
      _hex_id:=BB.hex(_id);
      _dl:=0;
      {? _hex_id='32' & +_na<>22 || _dl:=22 ?};
      {? _dl=0
      ||
         1
      ||
         FUN.info(_txt1+'Jako drugi parametr należy podać napis o długości %1 zanków.'@[$_dl]+_txt2);
         0
      ?}
   ?}
");

set_virt(_druk,'end_foot',"");

set_virt(_druk,'beg_k_b',"
   {? .chck_prt() ||
      _l:=.ESC+.hex2char('3F');
      fwrite(.STR,_l);
      exec('delay','fis_elzab',5);
      1
   ||
      0
   ?}
");

set_virt(_druk,'poz_k_b',"
   {? .ONLINE ||
      _l:=.get_vat(_b);
      _a+=28*'.';
      _l+=form(_a,28);
      fwrite(.STR,_l);
      exec('delay','fis_elzab',1);
      1
   ||
      0
   ?}
");

set_virt(_druk,'end_k_b',"
   {? .ONLINE ||
      _l:=.ESC+.hex2char('51');
      .send_clo(_l)
   ||
      0
   ?}
");

set_virt(_druk,'rap_ok',"
   {? .chck_prt() ||
       '_a = DEFINE.DATA1, _b = DEFINE.DATA2';
      _l:=.ESC+.hex2char('29');
      fwrite(.STR,_l);
      exec('delay','fis_elzab',2);
      _lata:=(_a~1)%*100;
      fwrite(.STR,_lata%10);
      fwrite(.STR,_lata%*10);
      fwrite(.STR,(_a~2)%10);
      fwrite(.STR,(_a~2)%*10);
      fwrite(.STR,(_a~3)%10);
      fwrite(.STR,(_a~3)%*10);
      _lata:=(_b~1)%*100;
      fwrite(.STR,_lata%10);
      fwrite(.STR,_lata%*10);
      fwrite(.STR,(_b~2)%10);
      fwrite(.STR,(_b~2)%*10);
      fwrite(.STR,(_b~3)%10);
      .send_clo((_b~3)%*10)
   ||
      0
   ?}
");

set_virt(_druk,'rap_dob',"
   {? .chck_prt('rd') ||
      _l:=.ESC+.hex2char('25');
      .send_clo(_l)
   ||
      0
   ?}
");

set_virt(_druk,'rap_zmn',"
   FUN.info('Drukarka nie obsługuje tego polecenia.'@)
");

set_virt(_druk,'rap_prt',"
   {? .chck_prt() ||
      _l:=.ESC+.hex2char('26');
      .send_clo(_l)
   ||
      0
   ?}
");

set_virt(_druk,'ust_zeg',"
   {? .chck_prt() ||
      _l:=.ESC+.hex2char('35');
      {? .send(_l) ||
         fread(.STR,1); fread(.STR,1); fread(.STR,1);
         fread(.STR,1); fread(.STR,1); fread(.STR,1);
         _pt:=time(fread(.STR,1)*10+fread(.STR,1), fread(.STR,1)*10+fread(.STR,1) ,1);
         _dt:=time()-_pt;
         _ok:=0;
         {? _dt~2<>0 ||
            fwrite(.STR,.ESC+.hex2char('36'));
            {? _dt~2<0 || fwrite(.STR,0) || fwrite(.STR,1) ?};
            {? _dt~1<>0 || fwrite(.STR,6); _ok:=.send_clo(0)
            || _dt:=|(_dt~2);
               fwrite(.STR,_dt%10);
               _ok:=.send_clo(_dt*%10)
            ?};
            .get_time();
            _ok
         ||
            fclose(.STR);
            1
         ?}
      ||
         fclose(.STR);
         0
      ?}
   ||
      0
   ?}
");

set_virt(_druk,'zm_vat',"
   {? .chck_prt() ||
      _l:=.ESC+.hex2char('44');
      fwrite(.STR,_l);
      fwrite(.STR,#_a);
      fwrite(.STR,#_b);
      fwrite(.STR,#_c);
      .send_clo(#_d)
   ||
      0
   ?}
");

set_virt(_druk,'get_info',"msg('Drukarka nie obsługuje tego polecenia.',ST.MSG)");

set_virt(_druk,'get_time',"
   {? .chck_prt() ||
      _l:=.ESC+.hex2char('35');
      fwrite(.STR,_l);
      _l:=fread(.STR,1);
      {? _l<>.ACK || fclose(.STR); ''
      ||
         _l:=fread(.STR,1); _l*=10;
         _l+=fread(.STR,1);
         _str:='\nData: '+form(_l,-2)+'/';
         _l:=fread(.STR,1); _l*=10;
         _l+=fread(.STR,1);
         _str+=form(_l,-2)+'/';
         _l:=fread(.STR,1); _l*=10;
         _l+=fread(.STR,1);
         _str+=form(_l,-2)+'\n';
         _l:=fread(.STR,1); _l*=10;
         _l+=fread(.STR,1);
         _str+='\nCzas: '+form(_l,-2)+':';
         _l:=fread(.STR,1); _l*=10;
         _l+=fread(.STR,1);
         _str+=form(_l,-2)+'\n';
         fclose(.STR);
         _str
      ?}
   ||
      ''
   ?}
");


{? _elzab_onlize
|| set_virt(_druk,'get_nrdr',"
   {? .chck_prt()
   ||
      _l:=.ESC+.hex2char('65');
      fwrite(.STR,_l,+_l);
      _l:=fread(.STR,1);
      {? _l<>.ACK
      ||
         fclose(.STR);
         -1
      ||
         _num:=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         fclose(.STR);
         _num
      ?}
   ||
      -1
   ?}
   ")
|| set_virt(_druk,'get_nrdr',"
   {? .chck_prt()
   ||
      _l:=.ESC+.hex2char('71');
      fwrite(.STR,_l,+_l);
      _l:=fread(.STR,1);
      {? _l<>.ACK
      ||
         fclose(.STR);
         ''
      ||
         _num:=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         _num+=%fread(.STR,1);
         fclose(.STR);
         _num
      ?}
   ||
      ''
   ?}
   ")
?};


set_virt(_druk,'par_num',"
  {? .chck_prt() ||
    _l:=.ESC+.hex2char('66');
    fwrite(.STR,_l,+_l);
    _l:=fread(.STR,1);
    {? _l<>.ACK || fclose(.STR); -1
    ||
       _num:=fread(.STR,1);
       _num+=fread(.STR,1)*256;
       fclose(.STR);
       _num
    ?}
  ||
    -1
  ?}
");

_druk


\delay
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AJ [2008]
:: OPIS: Ustwienie zmiennych
::----------------------------------------------------------------------------------------------------------------------
_t:=time();
_sek:=(_t~1)*3600+(_t~2)*60+_t~3;
{! |? _t:=time(); (_t~1)*3600+(_t~2)*60+_t~3<_sek+_a !}


\send_val
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AJ [2008]
:: OPIS: pisanie do _a
::   WE: _a - uchwyt
::       _b - wartosc
::----------------------------------------------------------------------------------------------------------------------
fwrite(_a,_b%*256); _b:=_b%256;
fwrite(_a,_b%*256); _b:=_b%256;
fwrite(_a,_b%*256); _b:=_b%256;
fwrite(_a,_b%*256)


\payment_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: typ formy płatności
::   WE: _a - SLO.ref
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('FindAndGet','#table',SLO,$_a,,"
   _nazwa:=exec('FindInSet','#table','ZR_SLO','SLO_NR',5,SLO.ref(),\"ZR_SLO.WAR\",,,'');
   exec('payment_typ_name','fis_elzab',_nazwa)
",'4')


\payment_typ_name
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [21.14]
:: OPIS: nazwa typu formy płatności
::   WE: _a - string - nazwa typu płatności (wartość parametru nr 5 w płatnościach)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_re:=SLO.KOD;
{? _>0
||
   {? type_of(_a)=type_of('')
   ||
      _a
   ?}
?}


:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:17 8d8128c8391eea19ee31552d3c50950c7c4af6b71725afa3ec301bdf0aa75fd3f1324a2b312c9504d9ee82d8589e87c18d31f72da524b526fdb65c3f0e988797269cba81a1eba6e275b185e5bdbd56c74f57fd599fefec19ca6cec18a916267bb01bfd73d1212838db4e51750c401c84abe2a2fb7394be8dbc9db9744c9af6e2
