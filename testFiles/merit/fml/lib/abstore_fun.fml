:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: abstore_fun.fml
:: Utworzony: 10.01.2019
:: Autor: Markus
::======================================================================================================================
:: Zawartość: Funkcje dodatkowe do obsługi AbStore
::======================================================================================================================


\zdjecia_materialu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.02]
:: OPIS: Ustawia w oknach kartoteki materiałowej odpowiedni indeks i prefiks dla towarów
::   WE: [_a] - 0 bez okienka 1 (domyslnie) z okienkiem
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

M_IMG.f_clear();
M_IMG.win_dict('WER');
M_IMG.win_edit('RED');
M_IMG.index('M');
M_IMG.prefix(M.ref);
{? _a || M_IMG.select() ?};
''


\check_record_mimg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [20.14]
:: OPIS: Sprawdzenie poprawności wypełnienia zdjęcia dla materiału
::   WE: [_a] - 0 bez okienka 1 (domyslnie) z okienkiem
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? M_IMG.FILE='' | M_IMG.bl_file('IMG')=''
||
   {? _a || FUN.info('Wymagane jest podanie nazwy oraz wczytania zdjęcia.'@) ?};
   return(0)
?};
1


\material_abstore_b2b_on
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [20.14]
:: OPIS: Włącza widoczność w Abstore dla wybranych materiałów
::----------------------------------------------------------------------------------------------------------------------
_check:=exec('checkProduct','abstore',$M.ref(),'B2B');
{? _check = '' ||
   M.ABSTORE:='T';
   M.put()
?};
1


\material_abstore_b2b_off
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [20.14]
:: OPIS: Wyłącza widoczność w Abstore dla wybranych materiałów
::----------------------------------------------------------------------------------------------------------------------
{? M.ABSTORE='T'
||
   M.ABSTORE:='N';
   M.MAXILZAM:=0;
   M.put()
?};
1


\material_abstore_b2c_on
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [20.14]
:: OPIS: Włącza widoczność w Abstore dla wybranych materiałów
::----------------------------------------------------------------------------------------------------------------------
_check:=exec('checkProduct','abstore',$M.ref(),'B2C');
{? _check = '' ||
   M.ABSTOREC:='T';
   M.put()
?};
1


\material_abstore_b2c_off
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [20.14]
:: OPIS: Wyłącza widoczność w Abstore dla wybranych materiałów
::----------------------------------------------------------------------------------------------------------------------
{? M.ABSTOREC='T'
||
   M.ABSTOREC:='N';
   M.MAXILZAM:=0;
   M.put()
?};
1


\etykiety_materialu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: Ustawia w oknach kartoteki materiałowej odpowiedni indeks i prefiks dla towarów
::   WE: [_a] - 0 bez okienka 1 (domyslnie) z okienkiem
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

LABEL.win_dict('WER');

M_LABEL.f_clear();
M_LABEL.win_dict('WER');
:M_LABEL.win_edit('RED');
M_LABEL.index('NL');
M_LABEL.prefix(M.ref);
{? _a || M_LABEL.select() ?};
''


\chk_m_label
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: po rekord tab. M_LABEL
::----------------------------------------------------------------------------------------------------------------------
exec('chk_m_label_core','abstore_fun',-menu_txt()='popraw')


\chk_m_label_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: Walidacja rekordu tabeli M_LABEL
::       - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::----------------------------------------------------------------------------------------------------------------------
_wyn:=__CHK.record(M_LABEL,,'M','L');
{? _wyn=''
||
   {? __CHK.index(M_LABEL,_a)=''
   || _wyn:=''
   || _wyn:='L'
   ?}
?};
_wyn


\chk_label
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: po rekord tab. LABEL
::----------------------------------------------------------------------------------------------------------------------
exec('chk_label_core','abstore_fun',-menu_txt()='popraw')


\chk_label_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: Walidacja rekordu tabeli LABEL
::       - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::----------------------------------------------------------------------------------------------------------------------
_wyn:=__CHK.record(LABEL,,'N');
{? _wyn=''
||
   {? __CHK.index(LABEL,_a)=''
   || _wyn:=''
   || _wyn:='N'
   ?}
?};
_wyn


\be_usun_label
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: Przed usunięciem rekordu tabeli LABEL. Sprawdza, czy nie wykorzystywany
::   WY: 0 - nie można usuwać, zapis wykorzystywany w innych danych systemie
::       1 - można usuwać
::----------------------------------------------------------------------------------------------------------------------
_count:=LABEL.count();
{? _count || FUN.emsg('Nie można usunąć tej etykiety. Istnieją zapisy z nią powiązane.'@) ?};
~_count


\kh_osob_wer_osobo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: lista odbiorców dla osoby kontaktowej
::----------------------------------------------------------------------------------------------------------------------
BEER.KH:=KH.ref();
KH.cntx_psh();
KH_OSOBO.f_clear();
KH_OSOBO.win_dict('WER');
KH_OSOBO.win_edit('RED');
KH_OSOBO.index('OSOBA');
KH_OSOBO.prefix(KH_OSOB.ref());
KH_OSOBO.select();
KH.cntx_pop();
''


\chk_kh_osob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: po rekord tab. KH_OSOB
::----------------------------------------------------------------------------------------------------------------------
exec('chk_kh_osob_core','abstore_fun',-menu_txt()='popraw')


\chk_kh_osob_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: Walidacja rekordu tabeli KH_OSOB
::       - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::----------------------------------------------------------------------------------------------------------------------
_wyn:=__CHK.record(KH_OSOB,,'OSOBA','ODBIORCA');
{? _wyn=''
||
   {? __CHK.index(KH_OSOB,_a)=''
   || _wyn:=''
   || _wyn:='ODBIORCA'
   ?}
?};
_wyn


\kh_osob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: KH_OSOB.ref
::----------------------------------------------------------------------------------------------------------------------
KH_OSOB.ref()


\kh_odb_abstore_on
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: Włącza widoczność w Abstore dla wybranych odbiorców
::----------------------------------------------------------------------------------------------------------------------
_check:=exec('checkRecipient','abstore',$KH_ODB.ref());
{? _check <> '' ||
   FUN.info(_check)
:   KH_ODB.ABSTORE:=KH_ODB_ABSTORE_VALUE_PREV_B2B
||
   _chk:={? KH_ODB.NAZ='' || 'NAZ' || '' ?};
   _chk:={? _chk='' & KH_ODB.MIASTO='' || 'MIASTO' || _chk ?};
   _chk:={? _chk='' & KH_ODB.UL='' || 'UL' || _chk ?};
   _chk:={? _chk='' & KH_ODB.KPOCZ='' || 'KPOCZ' || _chk ?};
   _chk:={? _chk='' & KH_ODB.EM='' || 'EM' || _chk ?};
   _chk:={? _chk='' & KH_ODB.KRAJ='' || 'KRAJ' || _chk ?};
   {? _chk=''
   ||
       {? exec('mail_ok','#email',KH_ODB.EM)
       ||
           KH_ODB.ABSTORE:='T';
           KH_ODB.put()
       ||
            FUN.info('Odbiorca ma nieprawidłowy adres e-mail.'@)
       ?}
   ||
       FUN.info('Odbiorca ma nieprawidłowo wypełnione pole %1'@[_chk])
   ?}
?};
1


\kh_odb_abstore_off
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: Wyłącza widoczność w Abstore dla wybranych odbiorców
::----------------------------------------------------------------------------------------------------------------------
KH_ODB.ABSTORE:='N';
KH_ODB.put();
1


\kh_odb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: KH_ODB.ref
::----------------------------------------------------------------------------------------------------------------------
KH_ODB.ref()


\kh_odb_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [22.26]
:: OPIS: KH_ODB.ref
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
KH_ODB.KH();
_wyn:=KH.ref();
KH.cntx_pop();
_wyn


\kh_odb_wer_mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: lista magazynów dla odbiorcy
::----------------------------------------------------------------------------------------------------------------------
_par:=exec('get','#params', 800109);
_mag:=spli_str(_par,',');
_len:=obj_len(_mag);

_sql:='';
{! _i.._len
|!
   {? _sql<>'' || _sql+=' or ' || _sql+='' ?};
   _sql+='MG.SYM=''%1'''[_mag[_i]]
!};

MG.cntx_psh();
MG.f_clear();
MG.clear();
MG.win_dict('WER');
_default:=MG.actions('WER','TMLZYFN');
MG.f_set('SYM',,_sql);

KH_ODBMG.f_clear();
KH_ODBMG.win_dict('WER');
::KH_ODBMG.win_edit('RED');
KH_ODBMG.index('KO');
KH_ODBMG.prefix(BEER.KH, KH_ODB.ref());
KH_ODBMG.select();

MG.actions('WER',,_default);
MG.f_clear();
MG.cntx_pop();
''


\chk_kh_odbmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: po rekord tab. KH_ODBMG
::----------------------------------------------------------------------------------------------------------------------
exec('chk_kh_odbmg_core','abstore_fun',-menu_txt()='popraw')


\kh_odbmg_br
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: akcja przed rekord
::----------------------------------------------------------------------------------------------------------------------
KH_ODBMG.cntx_psh();
KH_ODBMG.index('KO');
KH_ODBMG.prefix(BEER.KH, KH_ODB.ref());
{? KH_ODBMG.size()=1 & KH_ODB.ABSTORE<>''
|| KH_ODBMG.actions_grayed('WER','U')
|| KH_ODBMG.actions_grayed('WER')
?};
KH_ODBMG.cntx_pop();
1


\kh_odbmg_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: akcja przed usuń
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
KH_ODBMG.cntx_psh();
KH_ODBMG.index('KO');
KH_ODBMG.prefix(BEER.KH, KH_ODB.ref());
{? KH_ODBMG.size()=1 & KH_ODB.ABSTORE='T'
|| FUN.info('Nie można usunąć ostatniego magazynu\nodbiorcy zintegrowanego z Abstore.'@);_wyn:=0
?};
KH_ODBMG.cntx_pop();
_wyn


\kh_odbmg_ad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: akcja przed usuń
::----------------------------------------------------------------------------------------------------------------------
KH_ODBMG.cntx_psh();
KH_ODBMG.index('KO');
KH_ODBMG.prefix(KH.ref(), KH_ODB.ref());
{? KH_ODBMG.size()=0 & KH_ODB.ABSTORE='T'
|| FUN.info('Usunięto ostatni magazyn\nodbiorcy zintegrowanego z Abstore.\nOdbuorca został dezaktywowany.'@);
   KH_ODB.cntx_psh();
   KH_ODB.prefix();
   KH_ODB.get();
   KH_ODB.ABSTORE:='N';
   KH_ODB.put();
   KH_ODB.cntx_pop()
?};
KH_ODBMG.cntx_pop();
1


\chk_kh_odbmg_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: Walidacja rekordu tabeli KH_ODBMG
::       - wołana z poziomu okna oraz funkcji importujących
::   WE: _a - specyfikacja testu: 1-poprawianie, 0-dołączanie
::----------------------------------------------------------------------------------------------------------------------
_wyn:=__CHK.record(KH_ODBMG,,'KH','ODB','MG');
{? _wyn=''
||
   {? __CHK.index(KH_ODBMG,_a)=''
   || _wyn:=''
   || _wyn:='MG'
   ?}
?};
_wyn


\trig_sync_b2b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: wyzwalacz synchronizacji danych z AbStore - b2b
::   WE:
::   WY: [0/1]
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',800102)<>''
||
   exec('trig_sync','abstore_fun',exec('get','#params',800107))
?}


\trig_sync_b2c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: wyzwalacz synchronizacji danych z AbStore - b2c
::   WE:
::   WY: [0/1]
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',800202)<>''
||
   exec('trig_sync','abstore_fun',exec('get','#params',800207))
?}


\trig_sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: wyzwalacz synchronizacji danych z AbStore
::   WE: _a - 'Abstoreb2b', 'Abstoreb2c'
::   WY: [0/1]
::----------------------------------------------------------------------------------------------------------------------
_pd:=_a;
_repl:=0;

_result:=0;

{? _pd=''
||
   return(_result)
?};

SYNC.cntx_psh();
SYNC.use('synd___');
SYNC.index('PDSYM');
SYNC.prefix(_pd,);
_result:=SYNC.first();
{? _result=0
||
   SYNC.use('synd'+__Firma);
   SYNC.index('PDSYM');
   SYNC.prefix(_pd,);
   _result:=SYNC.first()
?};
SYNC.cntx_pop();

_result


\af_red_m_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: znacznik czasu ostatniej modyfikacji materiału
::----------------------------------------------------------------------------------------------------------------------
M.LAST_MOD:=$tm_stamp(date~1,date~2,date~3,time~1,time~2,time~3);
1


\chk_kh_abstore
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: po rekord tab. KH
::----------------------------------------------------------------------------------------------------------------------
exec('chk_kh_abstore_core','abstore_fun',-menu_txt()='popraw')


\chk_kh_abstore_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.22]
:: OPIS: sprawdza wypelnienie wymaganych pol dla abstoreb2b
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? KH.ABSTORE<>''
||
   _wyn:=__CHK.record(KH,,'REG','NIP', 'KRAJ', 'MIASTO', 'UL', 'KPOCZ', 'POCZ', 'T', 'TEL','EM');
   {? _wyn=''
   ||
      {? exec('mail_ok','#email',KH.EM) & (((KH.EM*'@')-KH.EM)*'.')>0
      || _wyn:=''
      ||
         FUN.info('Nieprawidłowy adres e-mail.'@);
         _wyn:='EM'
      ?}
   ?}
?};
_wyn


::\chk_kh_abstore
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: po rekord tab. KH_ODB
::----------------------------------------------------------------------------------------------------------------------
::exec('chk_kh_odb_abstore_core','abstore_fun',-menu_txt()='popraw')


\chk_kh_odb_abstore_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [19.22]
:: OPIS: sprawdza wypelnienie wymaganych pol dla abstoreb2b dla oddzialu
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? KH_ODB.ABSTORE<>''
||
   _wyn:=__CHK.record(KH_ODB,,'KH_ODB','NAZ', 'KRAJ', 'MIASTO', 'UL','KPOCZ', 'POCZ','EM', 'KH_ODB');
   {? _wyn=''
   ||
      {? exec('mail_ok','#email',KH_ODB.EM) & (((KH_ODB.EM*'@')-KH_ODB.EM)*'.')>0
      || _wyn:=''
      ||
         FUN.info('Nieprawidłowy adres e-mail.'@);
         _wyn:='EM'
      ?}
   ?}
?};
_wyn


\chk_kh_osob_abstore_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: sprawdza wypelnienie wymaganych pol dla abstoreb2b dla oddzialu
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? KH_OSOB.ABSTORE<>''
||
   _wyn:=__CHK.record(KH_OSOB,,'EMAIL','IMIE','NAZWISKO', 'TEL');
   {? _wyn=''
   ||
      {? exec('mail_ok','#email',KH_OSOB.EMAIL) & (((KH_OSOB.EMAIL*'@')-KH_OSOB.EMAIL)*'.')>0
      || _wyn:=''
      ||
         FUN.info('Nieprawidłowy adres e-mail.'@);
         _wyn:='EMAIL'
      ?}
   ?}
?};
_wyn


\before_kh_abstore
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: ustawienie zmiennej globalnej na podstawie pola ABSTORE tabeli KH
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('KH_ABSTORE_VALUE_PREV_B2B');
:KH_ABS:=KH.ABSTORE;
_abs:=exec('FindAndGet','#table',KH,KH.ref(),,"ABSTORE",0);
{? type_of(_abs)<>type_of(0) & menu_txt='Popraw' || KH_ABSTORE_VALUE_PREV_B2B:=_abs ?};
1


\change_kh_abstore
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: zaznacza pola jako wymagane w oknie redagowania kontrahenta
::----------------------------------------------------------------------------------------------------------------------
::{? KH.ABSTORE='T'
::||
::   _check:=exec('checkClient','abstore',$KH.ref());
::   {? _check<>''
::   ||
::      KH.ABSTORE:='N'
::   ?}
::?};
:obsługa kontroli poprawności zmiany radio-buttonów
{? var_pres('KH_ABSTORE_VALUE_PREV_B2B')=type_of('')
||
   {? KH_ABSTORE_VALUE_PREV_B2B=''
   ||
      KH.ABSTORE:={? KH.ABSTORE<>'T' || '' || 'T' ?}
   |? KH_ABSTORE_VALUE_PREV_B2B<>'N'
   ||
      KH.ABSTORE:={? KH.ABSTORE<>'N' || 'T' || 'N' ?}
   ?}
||
   KH.ABSTORE:={? KH.ABSTORE<>'' || '' || '' ?}
?};

{? KH.ABSTORE='T' & KH_ABSTORE_VALUE_PREV_B2B<>'T' ||
   _check:=exec('checkClient','abstore',$KH.ref());
   {? _check <> '' ||
      KH.ABSTORE:=KH_ABSTORE_VALUE_PREV_B2B
   ?}
?};

exec('set_required_fields','!zws_par_kkhr');

1


\before_kh_osob_abstore
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: ustawienie zmiennej globalnej na podstawie pola ABSTORE tabeli KH_OSOB
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('KH_OSOB_ABSTORE_VALUE_PREV_B2B');
:KHOS_ABS:=KH_OSOB.ABSTORE;
_abs:=exec('FindAndGet','#table',KH_OSOB,KH_OSOB.ref(),,"ABSTORE",0);
{? type_of(_abs)<>type_of(0) & menu_txt='Popraw' || KH_OSOB_ABSTORE_VALUE_PREV_B2B:=_abs ?};
1


\change_kh_osob_abstore
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: zaznacza pola jako wymagane w oknie redagowania osoby kontrahenta
::----------------------------------------------------------------------------------------------------------------------
:obsługa kontroli poprawności zmiany radio-buttonów
_result:=1;
{? var_pres('KH_OSOB_ABSTORE_VALUE_PREV_B2B')=type_of('')
||
   {? KH_OSOB_ABSTORE_VALUE_PREV_B2B=''
   ||
      KH_OSOB.ABSTORE:={? KH_OSOB.ABSTORE<>'T' || '' || 'T' ?}
   |? KH_OSOB_ABSTORE_VALUE_PREV_B2B<>'N'
   ||
      KH_OSOB.ABSTORE:={? KH_OSOB.ABSTORE<>'N' || 'T' || 'N' ?}
   ?}
||
   KH_OSOB.ABSTORE:={? KH_OSOB.ABSTORE<>'' || '' || '' ?}
?};
{? KH_OSOB.ABSTORE='T' & KH_OSOB_ABSTORE_VALUE_PREV_B2B<>'T' ||
   _check:=exec('checkContactPerson','abstore',$KH_OSOB.ref());
   {? _check <> '' ||
      FUN.info(_check);
      KH_OSOB.ABSTORE:=KH_OSOB_ABSTORE_VALUE_PREV_B2B;
      _result:=0
   ?}
?};

exec('khOsob_set_required_fields','!zws_par_kkhr');
_result


\before_kh_odb_abstore
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: ustawienie zmiennej globalnej na podstawie pola ABSTORE tabeli KH_ODB
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('KH_ODB_ABSTORE_VALUE_PREV_B2B');
:KHOD_ABS:=KH_ODB.ABSTORE;
_abs:=exec('FindAndGet','#table',KH_ODB,KH_ODB.ref(),,"ABSTORE",0);
{? type_of(_abs)<>type_of(0) & menu_txt='Popraw' || KH_ODB_ABSTORE_VALUE_PREV_B2B:=_abs ?};
1


\change_kh_odb_abstore
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: zaznacza pola jako wymagane w oknie redagowania osoby kontrahenta
::----------------------------------------------------------------------------------------------------------------------
:obsługa kontroli poprawności zmiany radio-buttonów
{? var_pres('KH_ODB_ABSTORE_VALUE_PREV_B2B')=type_of('')
||
   {? KH_ODB_ABSTORE_VALUE_PREV_B2B=''
   ||
      KH_ODB.ABSTORE:={? KH_ODB.ABSTORE<>'T' || '' || 'T' ?}
   |? KH_ODB_ABSTORE_VALUE_PREV_B2B<>'N'
   ||
      KH_ODB.ABSTORE:={? KH_ODB.ABSTORE<>'N' || 'T' || 'N' ?}
   ?}
||
   KH_ODB.ABSTORE:={? KH_ODB.ABSTORE<>'' || '' || '' ?}
?};
{? KH_ODB.ABSTORE='T' & KH_ODB_ABSTORE_VALUE_PREV_B2B<>'T' ||
   _check:=exec('checkRecipient','abstore',$KH_ODB.ref());
   {? _check <> '' ||
      FUN.info(_check);
      KH_ODB.ABSTORE:=KH_ODB_ABSTORE_VALUE_PREV_B2B
   ?}
?};
exec('kh_odb_mark','kontrahent');
1


\view_m_abstore
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: akcja po zmianie zaznaczenia abstore w materiałach
::----------------------------------------------------------------------------------------------------------------------
_win_red:=M.win_edit('?');
{? M.ABSTORE='T' | M.ABSTOREC='T'
||
   M.efld_opt(_win_red,'editable=1',M,'MAXILZAM');
   M.efld_opt(_win_red,'editable=1',M,'KZ')
||
   M.MAXILZAM:=0;
   M.efld_opt(_win_red,'editable=grayed',M,'MAXILZAM');
   M.KZ:=0;
   M.efld_opt(_win_red,'editable=grayed',M,'KZ')
?};
1


\view_m_abstore_b2c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [20.14]
:: OPIS: akcja przed wyświetleniem
::----------------------------------------------------------------------------------------------------------------------
_win_red:=M.win_edit('?');
{? M.ABSTOREC='T' | M.ABSTORE='T'
||
   M.efld_opt(_win_red,'editable=1',M,'MAXILZAM');
   M.efld_opt(_win_red,'editable=1',M,'KZ')
||
   M.MAXILZAM:=0;
   M.efld_opt(_win_red,'editable=grayed',M,'MAXILZAM');
   M.KZ:=0;
   M.efld_opt(_win_red,'editable=grayed',M,'KZ')
?};
1


\before_m_abstore_b2c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: ustawienie zmiennej globalnej na podstawie pola ABSTOREC tabeli M
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('M_ABSTORE_VALUE_PREV_B2C');
:M_ABSC:=M.ABSTOREC;
_abs:=exec('FindAndGet','#table',M,M.ref(),,"ABSTOREC",0);
{? type_of(_abs)<>type_of(0) & menu_txt='Popraw' || M_ABSTORE_VALUE_PREV_B2C:=_abs ?};
1


\change_m_abstore_b2c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [20.14]
:: OPIS: akcja po zmianie zaznaczenia abstore w materiałach
::----------------------------------------------------------------------------------------------------------------------
_win_red:=M.win_edit('?');
{? var_pres('M_ABSTORE_VALUE_PREV_B2C')=type_of('')
||
   {? M_ABSTORE_VALUE_PREV_B2C=''
   ||
      M.ABSTOREC:={? M.ABSTOREC<>'T' || '' || 'T' ?}
   |? M_ABSTORE_VALUE_PREV_B2C<>'N'
   ||
      M.ABSTOREC:={? M.ABSTOREC<>'N' || 'T' || 'N' ?}
   ?}
||
   M.ABSTOREC:={? M.ABSTOREC<>'' || '' || '' ?}
?};
{? M.ABSTOREC='T' & M_ABSTORE_VALUE_PREV_B2C<>'T' ||
   _check:=exec('checkProduct','abstore',$M.ref(),'B2C');
   {? _check <> '' ||
      M.ABSTOREC:=M_ABSTORE_VALUE_PREV_B2C
   ?}
?};
exec('view_m_abstore','abstore_fun');
1


\view_m_abstore_b2b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [20.14]
:: OPIS: akcja przed wyświetleniem
::----------------------------------------------------------------------------------------------------------------------
_win_red:=M.win_edit('?');
{? M.ABSTORE='T' | M.ABSTOREC='T'
||
   M.efld_opt(_win_red,'editable=1',M,'MAXILZAM')
||
   M.MAXILZAM:=0;
   M.efld_opt(_win_red,'editable=grayed',M,'MAXILZAM')
?};
1


\before_m_abstore_b2b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: ustawienie zmiennej globalnej na podstawie pola ABSTORE tabeli M
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('M_ABSTORE_VALUE_PREV_B2B');
:M_ABSB:=M.ABSTORE;
_abs:=exec('FindAndGet','#table',M,M.ref(),,"ABSTORE",0);
{? type_of(_abs)<>type_of(0) & menu_txt='Popraw' || M_ABSTORE_VALUE_PREV_B2B:=_abs ?};
1


\change_m_abstore_b2b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [20.14]
:: OPIS: akcja po zmianie zaznaczenia abstore w materiałach
::----------------------------------------------------------------------------------------------------------------------
_win_red:=M.win_edit('?');
{? var_pres('M_ABSTORE_VALUE_PREV_B2B')=type_of('')
||
   {? M_ABSTORE_VALUE_PREV_B2B=''
   ||
      M.ABSTORE:={? M.ABSTORE<>'T' || '' || 'T' ?}
   |? M_ABSTORE_VALUE_PREV_B2B<>'N'
   ||
      M.ABSTORE:={? M.ABSTORE<>'N' || 'T' || 'N' ?}
   ?}
||
   M.ABSTORE:={? M.ABSTORE<>'' || '' || '' ?}
?};
{? M.ABSTORE='T' & M_ABSTORE_VALUE_PREV_B2B<>'T' ||
   _check:=exec('checkProduct','abstore',$M.ref(),'B2B');
   {? _check <> '' ||
      M.ABSTORE:=M_ABSTORE_VALUE_PREV_B2B
   ?}
?};
exec('view_m_abstore','abstore_fun');
1


\before_mgr_abstore_b2b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: ustawienie zmiennej globalnej na podstawie pola ABSTORE tabeli MGR
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('MGR_ABSTORE_VALUE_PREV_B2B');
:MGR_ABSB:=MGR.ABSTORE;
_abs:=exec('FindAndGet','#table',MGR,MGR.ref(),,"ABSTORE",0);
{? type_of(_abs)<>type_of(0) & menu_txt='Popraw' || MGR_ABSTORE_VALUE_PREV_B2B:=_abs ?};
1


\change_mgr_abstore_b2b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: akcja po zmianie zaznaczenia abstore w materiałach
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('MGR_ABSTORE_VALUE_PREV_B2B')=type_of('')
||
   {? MGR_ABSTORE_VALUE_PREV_B2B=''
   ||
      MGR.ABSTORE:={? MGR.ABSTORE<>'T' || '' || 'T' ?}
   |? MGR_ABSTORE_VALUE_PREV_B2B<>'N'
   ||
      MGR.ABSTORE:={? MGR.ABSTORE<>'N' || 'T' || 'N' ?}
   ?}
||
   MGR.ABSTORE:={? MGR.ABSTORE<>'' || '' || '' ?}
?};
1


\before_mgr_abstore_b2c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: ustawienie zmiennej globalnej na podstawie pola ABSTOREC tabeli MGR
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('MGR_ABSTORE_VALUE_PREV_B2C');
:MGR_ABSC:=MGR.ABSTOREC;
_abs:=exec('FindAndGet','#table',MGR,MGR.ref(),,"ABSTOREC",0);
{? type_of(_abs)<>type_of(0) & menu_txt='Popraw' || MGR_ABSTORE_VALUE_PREV_B2C:=_abs ?};
1


\change_mgr_abstore_b2c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: akcja po zmianie zaznaczenia abstore w materiałach
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('MGR_ABSTORE_VALUE_PREV_B2C')=type_of('')
||
   {? MGR_ABSTORE_VALUE_PREV_B2C=''
   ||
      MGR.ABSTOREC:={? MGR.ABSTOREC<>'T' || '' || 'T' ?}
   |? MGR_ABSTORE_VALUE_PREV_B2C<>'N'
   ||
      MGR.ABSTOREC:={? MGR.ABSTOREC<>'N' || 'T' || 'N' ?}
   ?}
||
   MGR.ABSTOREC:={? MGR.ABSTOREC<>'' || '' || '' ?}
?};
1


\before_grkh_abstore
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: ustawienie zmiennej globalnej na podstawie pola ABSTORE tabeli GRKH
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('GRKH_ABSTORE_VALUE_PREV_B2B');
:GRKH_ABS:=GRKH.ABSTORE;
_abs:=exec('FindAndGet','#table',GRKH,GRKH.ref(),,"ABSTORE",0);
{? type_of(_abs)<>type_of(0) & menu_txt='Popraw' || GRKH_ABSTORE_VALUE_PREV_B2B:=_abs ?};
1


\change_grkh_abstore_b2b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: akcja po zmianie zaznaczenia abstore w materiałach
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('GRKH_ABSTORE_VALUE_PREV_B2B')=type_of('')
||
   {? GRKH_ABSTORE_VALUE_PREV_B2B=''
   ||
      GRKH.ABSTORE:={? GRKH.ABSTORE<>'T' || '' || 'T' ?}
   |? GRKH_ABSTORE_VALUE_PREV_B2B<>'N'
   ||
      GRKH.ABSTORE:={? GRKH.ABSTORE<>'N' || 'T' || 'N' ?}
   ?}
||
   GRKH.ABSTORE:={? GRKH.ABSTORE<>'' || '' || '' ?}
?};
1


\kontrahent_naz_lotusuid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: Usunięcie kodu LOTUSUID z pełnej nzawy kontrahenta
::   WE: _a - nazwa kontrahenta
::     : _b - kod uid
::   WY: string - nazwa kontrahenta
::----------------------------------------------------------------------------------------------------------------------
_text:=_a;
{? _>1 & _b<>''
||
   _text:=STR.sub(_a, ' ' + _b, '')
?};
_text
::exec('kontrahent_naz_lotusuid','abstore_fun','Damian Nowak 10015','10015')


\ar_m_maxilzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: Funkcja po redakcji pola MAXILZAM w M
::   WE: -
::   WY: -
::----------------------------------------------------------------------------------------------------------------------
_dokl:=M.DOKL;
{? M.DOKL>4 || _dokl:=4 ?};
_step:={? M.KZ>0 || M.KZ || pow(10, - _dokl) ?};

{? M.MAXILZAM<0
||
   FUN.info('Błędna wartość pola Maks. ilość na zamówieniu, liczba musi być większa lub równa zeru.'@);
   return(0)
|? M.MAXILZAM<_step & M.MAXILZAM<>0
||
   FUN.info(
'Błędna wartość pola Maks. ilość na zamówieniu, liczba musi być większa bądź równa dokładności ilości lub krotności.'@);
   return(0)
|? M.KZ>0 & ((frac(M.MAXILZAM/M.KZ)<>0) | (M.MAXILZAM < M.KZ))
||
   FUN.info('Błędna wartość pola Maks. ilość na zamówieniu, niezgodna z polem Krotność'@);
   return(0)
|? M.MAXILZAM>999999999999999
||
   FUN.info('Błędna wartość pola Maks. ilość na zamówieniu.\nAbStore zezwala na maskymalnie 15 znakowe wartości.'@);
   return(0)
?};
1


\m_max_prec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Formuła formatu wyświetlania dla pola M.MAXILZAM
::----------------------------------------------------------------------------------------------------------------------
_mmax:=frac(M.MAXILZAM);
{? _mmax>0
||
   _liczba:=$(+$_mmax-2)
||
   _liczba:='0'
?};

'out_prec=' + _liczba


\check_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Sprawdzanie czy można wysłać kontrahenta do abstore
::   WE: -
::   WY: -
::----------------------------------------------------------------------------------------------------------------------
_check:=exec('checkClient','abstore',$KH.ref());
{? _check=''
||
   FUN.info('Kontrahent może być przesłany do AbStore.'@)
?};
1


\check_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Sprawdzanie czy można wysłać materiał do abstore b2b
::   WE: -
::   WY: -
::----------------------------------------------------------------------------------------------------------------------
_check:=exec('checkProduct','abstore',$M.ref(),'B2B');
{? _check=''
||
   FUN.info('Materiał może być przesłany do AbStore B2B.'@)
?};
1


\check_m_b2c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [20.14]
:: OPIS: Sprawdzanie czy można wysłać materiał do abstore b2c
::   WE: -
::   WY: -
::----------------------------------------------------------------------------------------------------------------------
_check:=exec('checkProduct','abstore',$M.ref(),'B2C');
{? _check=''
||
   FUN.info('Materiał może być przesłany do AbStore B2C.'@)
?};
1


\chk_kh_osobo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: po rekord tab. KH_OSOBO
::----------------------------------------------------------------------------------------------------------------------
exec('chk_kh_osobo_core','abstore_fun',-menu_txt()='popraw')


\chk_kh_osobo_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: sprawdza poprawne wypelnienie kh_osobo
::----------------------------------------------------------------------------------------------------------------------
_wyn:=__CHK.record(KH_OSOBO,,'ODB');
_wyn


\clear_abstore
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [20.14]
:: OPIS: Czyszczenie powiązań z integracją, wszystkie pola ABSTORE z tabel: M, MGR, KH, KH_OSOB, KH_ODB są czyszczone
::----------------------------------------------------------------------------------------------------------------------
M.for_each("
   M.cntx_psh();
   M.ABSTORE:='';
   M.ABSTOREC:='';
   M.put();
   M.cntx_pop()
");
MGR.for_each("
   MGR.cntx_psh();
   MGR.ABSTORE:='';
   MGR.ABSTOREC:='';
   MGR.put();
   MGR.cntx_pop()
");
KH.for_each("
   KH.cntx_psh();
   KH.ABSTORE:='';
   KH.LOTUSUID:='';
   KH.put();
   KH.cntx_pop()
");
KH_ODB.for_each("
   KH_ODB.cntx_psh();
   KH_ODB.ABSTORE:='';
   KH_ODB.put();
   KH_ODB.cntx_pop()
");
KH_OSOB.for_each("
   KH_OSOB.cntx_psh();
   KH_OSOB.ABSTORE:='';
   KH_OSOB.put();
   KH_OSOB.cntx_pop()
");
GRKH.for_each("
   GRKH.cntx_psh();
   GRKH.ABSTORE:='';
   GRKH.put();
   GRKH.cntx_pop()
");
exec('param_set','abs_conf', 800202, '');
exec('setupAbstoreb2c','abstore');
exec('clear_sync','abstore','','');
exec('param_set','abs_conf', 800102, '');
exec('setupAbstoreb2b','abstore');
exec('clear_sync','abstore','','');
1


\kh_odb_abstore_visibility
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Ustawia wyszarzanie opcji menu dla Abstore w zależności od aktualnej wartości tego pola (tabela KH_ODB)
::----------------------------------------------------------------------------------------------------------------------
{? KH_ODB.ABSTORE = 'T' ||
   KH_ODB.actions_grayed('WER', 'A(W(W))')
|? KH_ODB.ABSTORE <> 'T' ||
   KH_ODB.actions_grayed('WER', 'A(W(Y))')
?}


\m_kz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Formuła po readagowaniu dla pola M.KZ
::----------------------------------------------------------------------------------------------------------------------
{? M.KZ=0
||
   return(1)
|? M.KZ<0
||
   FUN.info('Błędna wartość pola Krotność, liczba musi być większa lub równa zeru.'@);
   return(0)
|? (M.KZ>0 & M.MAXILZAM=0) | (M.KZ>0 & (frac(M.MAXILZAM/M.KZ)<>0)) | (M.MAXILZAM < M.KZ)
||
   FUN.info('Błędna wartość pola Krotność, niezgodna z polem Maks. ilość na zamówieniu.'@);
   return(0)
?};
1


\m_kz_prec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Formuła formatu wyświetlania dla pola M.KZ
::----------------------------------------------------------------------------------------------------------------------
_mkz:=frac(M.KZ);
{? _mkz>0
||
   _liczba:=$(+$_mkz-2)
||
   _liczba:='0'
?};

'out_prec=' + _liczba


\kh_lim
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Formuła po readagowaniu dla pola KH.DAYS_LIM
::----------------------------------------------------------------------------------------------------------------------
{? KH.DAYS_LIM<0
||
   FUN.info('Błędna wartość pola Limit dni przeterminowania, liczba musi być większa lub równa zeru.'@);
   return(0)
?};
1


\kh_str
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Formuła po readagowaniu dla pola KH.STR_LIM
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();KH.get();_ofe_kh:=KH.STR_LIM; KH.cntx_pop();
_ofe:=exec('param_get','abs_conf', 800121, 2);
{? KH.STR_LIM='Blokuj dla wszystkich należności powyżej limitu lub przeterminowanych'|| 1
|? KH.STR_LIM='Blokuj'|| 1
|? KH.STR_LIM='Nie blokuj'|| 1
|? KH.STR_LIM='Blokuj dla przeterminowanych należności'|| 1
|? KH.STR_LIM='Blokuj dla wszystkich należności powyżej limitu'|| 1
|? KH.STR_LIM='Blokuj dla przeterminowanych należności powyżej limitu'|| 1
|? KH.STR_LIM='' & (KH.STR_LIM=_ofe | KH.STR_LIM=_ofe_kh)|| 1
|? KH.STR_LIM<>'' || FUN.info('Brak strategii w słowniku.'@);0
|| 0 ?}


\material_abstore_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Akcja 'Opis' w menu Abstore kartoteki materiałowej
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('edit_html_sysmemo','#edit',M,'OPIS','abstore_opis',,'Opis dla Abstore'@);
~~


\sync_dokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli DOKUM
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:={? DOKUM.REFSQL * 'mater' | DOKUM.REFSQL * 'faktuc' || 1 || 0 ?}
|? var_press('_a')=2 & _a='B2C'
||
   _wyn:={? DOKUM.REFSQL * 'mater' || 1 || 0 ?}
?};
_wyn


\sync_faks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli FAKS
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
KH.cntx_psh();
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=FAKS.KH().ABSTORE<>''
?};
KH.cntx_pop();
_wyn


\sync_grkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli GRKH
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=GRKH.ABSTORE<>''
?};
_wyn


\sync_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli DOKUM
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=KH.ABSTORE<>''
?};
_wyn


\sync_kh_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli KH_DOD
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
KH.cntx_psh();
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=KH_DOD.KH().ABSTORE<>''
?};
KH.cntx_pop();
_wyn


\sync_kh_odb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli KH_ODB
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=KH_ODB.ABSTORE<>''
?};
_wyn


\sync_kh_osob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli KH_OSOB
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=KH_OSOB.ABSTORE<>''
?};
_wyn


\sync_kh_osobo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli KH_OSOBO
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
KH.cntx_psh();
KH_ODB.cntx_psh();
KH_OSOB.cntx_psh();
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=KH_OSOBO.KH().ABSTORE<>'' & KH_OSOBO.ODB().ABSTORE<>'' & KH_OSOBO.OSOBA().ABSTORE<>''
?};
KH.cntx_pop();
KH_ODB.cntx_pop();
KH_OSOB.cntx_pop();
_wyn


\sync_kh_odbmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Warunek dla tabeli KH_ODBMG
::   WE: 'B2B'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
KH.cntx_psh();
KH_ODB.cntx_psh();
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=KH_ODBMG.KH().ABSTORE<>'' & KH_ODBMG.ODB().ABSTORE<>''
?};
KH.cntx_pop();
KH_ODB.cntx_pop();
_wyn


\sync_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli M
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=M.ABSTORE<>''
|? var_press('_a')=2 & _a='B2C'
||
   _wyn:=M.ABSTOREC<>''
?};
_wyn


\sync_mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli MGR
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=MGR.ABSTORE<>''
|? var_press('_a')=2 & _a='B2C'
||
   _wyn:=MGR.ABSTOREC<>''
?};
_wyn


\sync_mgrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli MGRP
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
MGR.cntx_psh();
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=MGRP.MGR().ABSTORE<>''
|? var_press('_a')=2 & _a='B2C'
||
   _wyn:=MGRP.MGR().ABSTOREC<>''
?};
MGR.cntx_pop();
_wyn


\sync_mz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli MZ
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
M.cntx_psh();
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=MZ.M().ABSTORE<>'' & MZ.MZ().ABSTORE<>''
?};
M.cntx_pop();
_wyn


\sync_m_img
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli M_IMG
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
M.cntx_psh();
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=M_IMG.M().ABSTORE<>''
|? var_press('_a')=2 & _a='B2C'
||
   _wyn:=M_IMG.M().ABSTOREC<>''
?};
M.cntx_pop();
_wyn


\sync_m_label
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli M_LABEL
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
M.cntx_psh();
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=M_LABEL.M().ABSTORE<>''
|? var_press('_a')=2 & _a='B2C'
||
   _wyn:=M_LABEL.M().ABSTOREC<>''
?};
M.cntx_pop();
_wyn


\sync_sm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli SM
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
M.cntx_psh();
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=SM.M().ABSTORE<>''
|? var_press('_a')=2 & _a='B2C'
||
   _wyn:=SM.M().ABSTOREC<>''
?};
M.cntx_pop();
_wyn


\sync_mdost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli SM
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
M.cntx_psh();
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=MDOST.M().ABSTORE<>''
|? var_press('_a')=2 & _a='B2C'
||
   _wyn:=MDOST.M().ABSTOREC<>''
?};
M.cntx_pop();
_wyn


\sync_tap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli TAP
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
M.cntx_psh();
MGR.cntx_psh();
TAR.cntx_psh();
GRKH.cntx_psh();
_cennik:=gsub(exec('param_get','abs_conf', 800106, 2),' ,',',');
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=
:: cenniki standardowe
   (_cennik*TAP.TAR().KOD & TAP.TAR().KH=null() & TAP.TAR().GRKH=null() & TAP.TAR().SD='S' & TAP.M<>null & TAP.M().ABSTORE<>''& TAP.OD<=date() & (TAP.DO>=date() | TAP.DO=date(0,0,0))) & (TAP.name()+2)<>'hs'
:: cenniki standardowe dla grup materiałowych
   |
   (_cennik*TAP.TAR().KOD & TAP.TAR().KH=null() & TAP.TAR().GRKH=null() & TAP.TAR().SD='S' & TAP.M=null & TAP.MGR<>null & TAP.MGR().ABSTORE<>'' & TAP.OD<=date() & (TAP.DO>=date() | TAP.DO=date(0,0,0))) & (TAP.name()+2)<>'hs'
:: cenniki kontrahenta
   |
   (TAP.TAR().KH<>null() & TAP.TAR().KH().ABSTORE<>'' & TAP.TAR().GRKH=null() & TAP.TAR().SD='S' & TAP.M<>null & TAP.M().ABSTORE<>''& TAP.OD<=date() & (TAP.DO>=date() | TAP.DO=date(0,0,0))) & (TAP.name()+2)<>'hs'
:: cenniki kontrahenta dla grup materiałowych
   |
   (TAP.TAR().KH<>null() & TAP.TAR().KH().ABSTORE<>'' & TAP.TAR().GRKH=null() & TAP.TAR().SD='S' & TAP.M=null & TAP.MGR<>null & TAP.MGR().ABSTORE<>'' & TAP.OD<=date() & (TAP.DO>=date() | TAP.DO=date(0,0,0))) & (TAP.name()+2)<>'hs'
:: cenniki grup kontrahenta
   |
   (TAP.TAR().KH=null() & TAP.TAR().GRKH<>null() & TAP.TAR().GRKH().ABSTORE<>'' & TAP.TAR().SD='S' & TAP.M<>null & TAP.M().ABSTORE<>''& TAP.OD<=date() & (TAP.DO>=date() | TAP.DO=date(0,0,0))) & (TAP.name()+2)<>'hs'
:: cenniki grup kontrahenta dla grup materiałowych
   |
   (TAP.TAR().KH=null() & TAP.TAR().GRKH<>null() & TAP.TAR().GRKH().ABSTORE<>'' & TAP.TAR().SD='S' & TAP.M=null & TAP.MGR<>null & TAP.MGR().ABSTORE<>'' & TAP.OD<=date() & (TAP.DO>=date() | TAP.DO=date(0,0,0))) & (TAP.name()+2)<>'hs'

|? var_press('_a')=2 & _a='B2C'
||
   _wyn:=
   (_cennik*TAP.TAR().KOD & TAP.TAR().SD='S' & TAP.M<>null & TAP.M().ABSTOREC<>''& TAP.OD<=date() & (TAP.DO>=date() | TAP.DO=date(0,0,0))) & (TAP.name()+2)<>'hs'
   |
   (_cennik*TAP.TAR().KOD & TAP.TAR().SD='S' & TAP.M=null & TAP.MGR<>null & TAP.MGR().ABSTOREC<>'' & TAP.OD<=date() & (TAP.DO>=date() | TAP.DO=date(0,0,0))) & (TAP.name()+2)<>'hs'
?};
M.cntx_pop();
MGR.cntx_pop();
TAR.cntx_pop();
GRKH.cntx_pop();
_wyn


\sync_zk_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli ZK_N
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? var_press('_a')=2 & _a='B2B'
||
   _wyn:=(ZK_N.IDABSTOR<>0 & ZK_N.A<>'Z')
|? var_press('_a')=2 & _a='B2C'
||
   _wyn:=(ZK_N.IDABSTOR<>0 & ZK_N.A<>'Z')
?};
_wyn


\sync_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Warunek dla tabeli OP
::   WE: 'B2B' | 'B2C'
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
KH.cntx_psh();
{? var_press('_a')=2 & _a='B2B'
||
:: sprawdzenie czy del nie powstał poprzez funckję porządkującą i czy nie istnieją jego zapisy w poprzednich latach
   _prev_op:=1;
   ROK_F.cntx_psh();
   OP.cntx_psh();
   _rok_f:=SKID.ROK_F;
   _kh:=OP.KH;
   _sym_rok:=OP.SYM_ROK;
   ROK_F.index('KOD');
   ROK_F.prefix(REF.FIRMA,OP.name()+2,);
   {? ~ROK_F.first() || _prev_op:=0 ?};
   SKID.ROK_F:=ROK_F.ref();
   ROK_F.index('ROKPOCZ');
   {? _prev_op & ROK_F.seek(SKID.ROK_F) & ROK_F.prev()
   || SKID.ROK_F:=ROK_F.ref();
      OP.use('operac'+SKID.ROK_F().KOD);
      OP.index('KHSYMR');
      OP.prefix(_kh,_sym_rok);
      {? ~OP.first() || _prev_op:=0 ?}
   || _prev_op:=0
   ?};
   SKID.ROK_F:=_rok_f;
   ROK_F.cntx_pop();
   OP.cntx_pop();

   _wyn:=OP.KH<>null & OP.KH().ABSTORE<>''
?};
KH.cntx_pop();
_wyn


\str_ofe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Strategia ofert
::----------------------------------------------------------------------------------------------------------------------
exec('param_get','abs_conf', 800130, 2)


\str_ofe_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Strategia ofert
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>=0 || __choice:=_a.get() || __choice:=KH.STR_OFE ?};

_Choice:=tab_tmp(1,'STR','STRING[14]','Strategia'@,'O','STRING[70]','Opis'@);
_Choice.STR:='PMAG_PIND_BKLI';_Choice.O:='Oferta standardowa magazynowa + pełna oferta indywidualna'@; _Choice.add();
_Choice.STR:='PMAG_OIND_BKLI'; _Choice.O:='Oferta standardowa magazynowa + ograniczona oferta indywidualna'@; _Choice.add();
_Choice.STR:='BMAG_BIND_OKLI'; _Choice.O:='Ograniczona oferta standardowa kontrahenta'@; _Choice.add();
_Choice.STR:='BMAG_BIND_PKLI'; _Choice.O:='Pełna oferta standardowa kontrahenta'@; _Choice.add();

_wer:=_Choice.mk_sel('Strategia ofert kontrahenta'@);
_Choice.win_fld(_wer,,'STR',,,14,,,'Akronim'@);
_Choice.win_fld(_wer,,'O',,,70,,,'Opis'@);

_fb:="
   _Tab:=cur_tab();
   _Sel:=_Tab.sel_aget();_Sel.REF:=#_Tab.ref(); _Sel.add();
   {? _Sel.first() & _Tab.seek(_Sel.REF,) & _Tab.STR<>'' || __choice:=_Tab.STR ?};
   sel_exit();
   0
";
_Choice.win_act(_wer,,'Formuła','&Akceptuj'@@,,,_fb,,1,1,_fb,,'A');
_Choice.win_sel(_wer);
_Choice.select();
{? var_press('_a')>=0
|| _a.save(__choice);
   {? __choice<>_a.get()
   ||
      {? __choice='PMAG_PIND_BKLI' | __choice='PMAG_OIND_BKLI'
      ||
         {? ~exec('po_act_fo','abstore_fun',1)
         || FUN.info('Nie udało się aktywować ofert indywidualnych.'@)
         ?}
      |? __choice='BMAG_BIND_OKLI' | __choice='BMAG_BIND_PKLI'
      ||
         {? ~exec('po_act_fo','abstore_fun',0)
         || FUN.info('Nie udało się dezaktywować ofert indywidualnych'@)
         ?}
      ?}
   ?}
||
   _ofe:=exec('param_get','abs_conf', 800130, 2);
   {?
      {? __choice<>_ofe
      || FUN.ask('Wybrana stretegia jest różna\nod parametru nr 800130 (%1).\nCzy zatwierdzić wartość?'@[_ofe])
      || 1
     ?}
   ||
      KH.STR_OFE:=__choice
   ?}
?};
VAR_DEL.delete('__choice');
~~


\str_ofe_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Strategia ofert
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();KH.get();_ofe_kh:=KH.STR_OFE; KH.cntx_pop();
_ofe:=exec('param_get','abs_conf', 800130, 2);
{? KH.STR_OFE='PMAG_PIND_BKLI'
| KH.STR_OFE='PMAG_OIND_BKLI'
| KH.STR_OFE='BMAG_BIND_OKLI'
| KH.STR_OFE='BMAG_BIND_PKLI'
| KH.STR_OFE='' & (KH.STR_OFE=_ofe | KH.STR_OFE=_ofe_kh)
|| 1
|? KH.STR_OFE<>''
|| FUN.info('Brak strategii w słowniku.'@);0
?}


\abs_sta_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Numeracja statusów
::----------------------------------------------------------------------------------------------------------------------
type:={? var_pres('_a')=type_of('') || _a || 'A' ?};
ABS_STA.cntx_psh();
ABS_STA.index('NR');
ABS_STA.prefix(type,);
ABS_STA.last();
_wyn:={? ABS_STA.last() || (ABS_STA.NR+1) || 1 ?};
ABS_STA.cntx_pop();
_wyn


\abs_sta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Edycja statusów zamówienia
::----------------------------------------------------------------------------------------------------------------------
ABS_STA.cntx_psh();
ABS_STA.index('NR');
{? ABS_STA.size()=0 || exec('abs_slo','abstore_fun',1) ?};
_grp:=ABS_STA.grp_make('Statusy',,'statusy_grp');
_b_abs:="ABS_STA.prefix('A',)";
ABS_STA.grp_sel(_grp,,'WER','Statusy AbStore'@,,,,,_b_abs,,,,'maximized');
_b_bas:="ABS_STA.prefix('B',)";
ABS_STA.grp_sel(_grp,,'WER_Z','Statusy BaseLinker'@,,,,,_b_bas,,,,'maximized');
ABS_STA.win_sel(_grp);
ABS_STA.select(,1);
ABS_STA.cntx_pop()


\abs_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Słownik statusów
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lmod');
__lmod:=0;

ABS_STA.cntx_psh();
ABS_STA.prefix();

ABS_STA.blank(); ABS_STA.TRANSL:='Oczekuje na opłacenie'; ABS_STA.STATUS:='WAITING_FOR_PAYMENT';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Oczekuje na opłacenie od strony ERP'; ABS_STA.STATUS:='WAITING_FOR_ERP_PAYMENT';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Opłacone'; ABS_STA.STATUS:='PAID';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Wysłane'; ABS_STA.STATUS:='SENT';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Gotowe do odbioru'; ABS_STA.STATUS:='READY_TO_RECEIVE';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Zakończone'; ABS_STA.STATUS:='FINISHED'; ABS_STA.LAST:=1;
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Zakończone ze zmianami'; ABS_STA.STATUS:='FINISHED_WITH_CHANGES'; ABS_STA.LAST:=1;
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Anulowane'; ABS_STA.STATUS:='CANCELED'; ABS_STA.LAST:=1;
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Przygotowywane'; ABS_STA.STATUS:='PREPARE';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Przygotowywane rozdzielnie'; ABS_STA.STATUS:='PARENT_SPLITTABLE_ORDER';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Przygotowywanie zakończone'; ABS_STA.STATUS:='PREPARE_COMPLETED';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Otrzymane'; ABS_STA.STATUS:='RECEIVED';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Zmodyfikowane w ERP'; ABS_STA.STATUS:='ORDER_CHANGED_IN_ERP';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Uworzenie zewnętrznej paczki'; ABS_STA.STATUS:='EXTERNAL_PACKAGE_CREATED';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Błędnie zweryfikowane'; ABS_STA.STATUS:='VERIFICATION_ERROR';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Zaakceptowane'; ABS_STA.STATUS:='ACCEPTED';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Nowe'; ABS_STA.STATUS:='NEW';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Potwierdzone'; ABS_STA.STATUS:='ACKNOWLEDGED';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Oczekujące na kompletacje'; ABS_STA.STATUS:='WAITING_FOR_COMPLETION';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Niepotwierdona e-płatność'; ABS_STA.STATUS:='UNCONFIRMED_EPAYMENT';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Niepotwierdzone opóźnienie płatności'; ABS_STA.STATUS:='UNCONFIRMED_DELAYED_PAYMENT';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Weryfikowane'; ABS_STA.STATUS:='VERIFICATION';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Zaległe'; ABS_STA.STATUS:='OVERDUE';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Zaległe, potwierdzone'; ABS_STA.STATUS:='OVERDUE_ACKNOWLEDGED';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Zaległe, przygotowywane'; ABS_STA.STATUS:='OVERDUE_PREPARE';
{? ABS_STA.add(1) || __lmod+=1 ?};
ABS_STA.blank(); ABS_STA.TRANSL:='Zaległe, przygotowywane'; ABS_STA.STATUS:='CLIENT_VERIFICATION';
{? ABS_STA.add(1) || __lmod+=1 ?};

ABS_STA.cntx_pop();

{? _=0
||
__UPG.msg('Zaktualizowano statusy AbStore.');
__UPG.msg('Dodano: %1 zapisów.'[$__lmod])
?};

VAR_DEL.delete('__lmod');
_res


\ten_sta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Numeracja statusów
::----------------------------------------------------------------------------------------------------------------------
_nr:=ABS_STA.NR;
_nr_a:=ABS_STA.NR_A;
_nr_b:=ABS_STA.NR_B;
ABS_STA.cntx_psh();
{? ZK_N.ABS_STA<>null()
||
   {? ZK_N.ABS_STA().LAST
   || FUN.info('Status zamówienia jest ostateczny.\nStatus nie został zmieniony.'@); ABS_STA.cntx_pop(); return(~~)
   |? ZK_N.ABS_STA().NR_A<>0 & ZK_N.ABS_STA().NR_A<>_nr
   || FUN.info('Nieprawidłowa kolejność statusów.\nStatus nie został zmieniony.'@); ABS_STA.cntx_pop(); return(~~)
   |? _nr_b<>0 & _nr_b<>ZK_N.ABS_STA().NR
   || FUN.info('Nieprawidłowa kolejność statusów.\nStatus nie został zmieniony.'@); ABS_STA.cntx_pop(); return(~~)
   ?}
?};
ABS_STA.cntx_pop();
ZK_N.ABS_STA:=ABS_STA.ref();
ZK_N.put();
sel_exit()


\abs_s_c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Numeracja statusów
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of('') & _a<>''
||
   ABS_STA.cntx_psh();
   ABS_STA.index('STA');
   ABS_STA.prefix('A',_a,);
   {? ABS_STA.first()
   ||
      _wyn:=ABS_STA.ref()
   ||
      ABS_STA.prefix();
      ABS_STA.blank();
      ABS_STA.STATUS:=_a;
      ABS_STA.add();
      _wyn:=ABS_STA.ref()
   ?};
   ABS_STA.cntx_pop()
||
   _wyn:=null()
?};
_wyn


\abs_s_up
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Aktualizacja statusów
::   WE: _a -  ZK_N.ref()
::       _b -  BEER.ETAP
::       _c -  ZK_N.STAN
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();ABS_STA.cntx_psh();
ZK_N.prefix();
_wyn:=null();
{? type_of(_a)=7
& ZK_N.seek(_a, ref_name(_a))
& ZK_N.IDABSTOR<>0
& type_of(_b)=2
& _b<>''
& (exec('param_get','abs_conf', 800129, 2)='T' | exec('param_get','abs_conf', 800229, 2)='T')
||
   {? Plugin.runnable('ABS_STA_001')
   || _abs_sta:=Plugin.run('ABS_STA_001',_b, _c, ZK_N.ABS_STA().STATUS, ZK_N.ABS_SCON().STATUS)
   || _abs_sta:=exec('translate_orderstatus','abstore',_b, _c, ZK_N.ABS_STA().STATUS, ZK_N.ABS_SCON().STATUS)
   ?};
   {? _abs_sta<>''
   ||
      _wyn:=exec('FindInSet','#table','ABS_STA','STA',_abs_sta,,,1,,null())
   ?}
?};
ZK_N.cntx_pop();ABS_STA.cntx_pop();
{? _wyn<>null()
||
   ZK_N.ABS_STA:=_wyn
?};
~~


\status_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: AB_STA.STATUS po edycji
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_status:=ABS_STA.STATUS;
{? _status='' || return(0) ?};
_ref:=ABS_STA.ref();
ABS_STA.cntx_psh();
ABS_STA.index('STA');
ABS_STA.prefix(_status,);
{? ABS_STA.first()
||
   {? ABS_STA.ref()=_ref & (1+menu_txt()<>'D') || _wyn:=1 || FUN.info('Status jest już w systemie.'@) ?}
||
   _wyn:=1
?};
ABS_STA.cntx_pop();
_wyn


\sta_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: ABS_STA przed usunięciem
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? ABS_STA.count()>0
|| FUN.info('Status jest wykorzystywany w zamówieniu sprzedaży.\nNie można usunąć pozycji.'@);_wyn:=0
?};
_wyn


\nr_a_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: ABS_STA.NR_A i ABS_STA.NR_B po edycji
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_nr:=ABS_STA.NR_A;
{? ABS_STA.NR_A=0 || return(1) ?};
{? ABS_STA.NR=ABS_STA.NR_A || FUN.info('Należy podać status inny\nniż aktualnie edytowany.'@);return(0) ?};
ABS_STA.cntx_psh();
ABS_STA.index('NR');
ABS_STA.prefix(_nr);
{? ~ABS_STA.first() || FUN.info('Brak statusu o podanym numerze.'@); _wyn:=0 ?};
ABS_STA.cntx_pop();
_wyn


\nr_b_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: ABS_STA.NR_A i ABS_STA.NR_B po edycji
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_nr:=ABS_STA.NR_B;
{? ABS_STA.NR_B=0 || return(1) ?};
{? ABS_STA.NR=ABS_STA.NR_B || FUN.info('Należy podać status inny\nniż aktualnie edytowany.'@);return(0) ?};
ABS_STA.cntx_psh();
ABS_STA.index('NR');
ABS_STA.prefix(_nr);
{? ~ABS_STA.first() || FUN.info('Brak statusu o podanym numerze.'@); _wyn:=0 ?};
ABS_STA.cntx_pop();
_wyn


\po_act_fo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Dezaktywacja ofert indywidualnych po zmianie parametru
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Dla działającego sklepu należy\nustawić aktywnośći ofert indywidualnych.\nCzy uruchomić zadanie?'@)
||
   KH.cntx_psh();KH.prefix();
   _sql:='select KH.REFERENCE as REF from KH where KH.ABSTORE<>\'\' and KH.STR_OFE=\'\'';
   _KH:=sql(_sql);
   {? _KH.first()
   ||
      {!|?
         {? ~KH.seek(_KH.REF) || KH.cntx_pop();return(0) ?};
         {? ~exec('po_act','abstore', KH.ref(), _a) || KH.cntx_pop();return(0) ?};
         _KH.next()
      !}
   ?};
   KH.cntx_pop()
?};
1


\ch_kh_b2c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Przed wyświtleniem KH.ABSTOREC
::----------------------------------------------------------------------------------------------------------------------
1


\be_kh_b2c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Przed redagowaniem KH.ABSTOREC
::----------------------------------------------------------------------------------------------------------------------
{? KH.LOTUSUID<>'' || 1 || 0 ?}


\chg_kh_b2c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Po redagowaniu KH.ABSTOREC
::----------------------------------------------------------------------------------------------------------------------
1


\lotusuid_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: identyfikator przed edycją
::----------------------------------------------------------------------------------------------------------------------
1


\lotusuid_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: identyfikator po edycji
::----------------------------------------------------------------------------------------------------------------------
{? KH.ABSTOREC<>'' & KH.LOTUSUID='' || FUN.info('Należy najpierw wyłączyć integrację dla AbStore B2C.'@);0 || 1 ?}


\odb_main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Główny odbiorca przed edycją
::----------------------------------------------------------------------------------------------------------------------
_odb:=KH_ODB.ref();
_kh:=KH_ODB.KH;
_edit:=1;
KH_ODB.cntx_psh();
KH_ODB.index('KH_ODB');
KH_ODB.prefix(_kh);
{? KH_ODB.first()
||
   {!|?
      {? KH_ODB.MAIN='T' & KH_ODB.ref()<>_odb || _edit:=0 ?};
      KH_ODB.next()
   !}
?};
KH_ODB.cntx_pop();
_edit


\odb_main_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Główny odbiorca przed edycją
::----------------------------------------------------------------------------------------------------------------------
1


\odb_main_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Główny odbiorca po edycji
::----------------------------------------------------------------------------------------------------------------------
1


\gen_guid_rand
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.02]
:: OPIS: Generowanie guida
::----------------------------------------------------------------------------------------------------------------------
_tab:='0123456789abcdef';
_lp:=int(rand() * 16);
1 + (_lp - _tab)


\gen_guid_rand_4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.02]
:: OPIS: Generowanie guida
::----------------------------------------------------------------------------------------------------------------------
exec('gen_guid_rand', 'abstore_fun') + '' + exec('gen_guid_rand', 'abstore_fun') + ''
+ exec('gen_guid_rand', 'abstore_fun') + '' + exec('gen_guid_rand', 'abstore_fun')


\gen_guid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.02]
:: OPIS: Generowanie guida
::----------------------------------------------------------------------------------------------------------------------
::xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
exec('gen_guid_rand_4', 'abstore_fun') + '' + exec('gen_guid_rand_4', 'abstore_fun') + '-'
+ exec('gen_guid_rand_4', 'abstore_fun') + '-' + exec('gen_guid_rand_4', 'abstore_fun') + '-'
+ exec('gen_guid_rand_4', 'abstore_fun') + '-' + exec('gen_guid_rand_4', 'abstore_fun') + ''
+ exec('gen_guid_rand_4', 'abstore_fun') + '' + exec('gen_guid_rand_4', 'abstore_fun')


\gen_guid_str
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [12.10]
:: OPIS: zamienia podany string na ciag hex
::   WE: _a - string z ktorego zostanie utworzony guid
::----------------------------------------------------------------------------------------------------------------------
_tab:='0123456789abcdef';
_hex:='';
{!  _idx:=1 .. +_a |!
::      debug;
    _znak:=%(1+(_idx-_a ));
    _h1:=_znak % 16;
    _h2:=_znak %* 16;
    _hex+=1+(_h1-_tab);
    _hex+=1+(_h2-_tab)
!};
{! |?
   _hex+='00';
   +_hex<40
!};
_guid:=8+_hex + '-' + (4+(8-_hex)) + '-' + (4+(12-_hex)) + '-' + (4+(16-_hex))+'-'+(4+(24-_hex))+'-'+(8+(32-_hex));
_guid

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 3456b6ae87f2882ecfece909e38b1b112f76bc9e244d713536c751c86a4536bde0dd68ede3c441554e0e1b5f65b4f98e08e5af496509525c4875fd09baa0862a0a879d4a8a8544bdb4d8ee58680857073bc0da63f752350d879dc5c1eee085e918d134ffdc9b94a4d526de03df9d577cbfafc31a1546e8581cf76fb694de6d2b
