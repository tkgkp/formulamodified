:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: portal_alerty.fml
:: Utworzony: 24.02.2020
:: Autor: IS
::======================================================================================================================
:: Zawartość: Formuły pomocnicze przy tworzeniu powiadomień doryczących portalu.
::======================================================================================================================


\bip_wdg_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Formuła przygotowuje i udostępnia tabelę tymczasową z uidref pracowników, których należy poinformować
::       o nadchodzących wydarzeniach.
::       Uwagi:
::          - Bufor tabeli P nie jest zapamiętywany.
::          - Zakłada się, że na tabelę P jest załozony filtr.
::          - Formuła wykorzystywana w 'alertach' i w wydrukach.
::   WE:  _a  [DATE]   - Początek badanego okresu.
::        _b  [DATE]   - Koniec badanego okresu.
::       [_c] [STRING] - Napis interpretowany jako formuła [domyślnie: '1']. Jeżeli formuła zwróci wartość 0 to dany
::                       współpracownik nie będzie przetwarzany.
::       [_d] [STRING] - Czy uwzględniać pracowników, którzy są aktualnie zatrudnieni, a którym umowa o pracę wygasa
::                       przed datą kontroli lub końcem badanego okresu? ['T'/'N'*]
::       [_e] [STRING] - Czy uwzględniać również niezatrudnionych pracowników? ['T'/'N'*]
::   WY: Tabela tymczasowa z uidref pracowników i wydarzeń, o których należy ich poinformować.
::----------------------------------------------------------------------------------------------------------------------
_dzis:=date();
_in:=obj_new('OD','DO');

_in.OD:=_a;
_in.DO:=_b;
_war:={? var_pres('_c')=type_of('') & _c<>'' || $_c || "1" ?};
_za:={? var_pres('_d')=type_of('') || _d || 'N' ?};
_all:={? var_pres('_e')=type_of('') || _e || 'N' ?};

:: Parametr czy informacja ma być zbiorcza:
_parZb:=PAR_SKID.get(391);
{? type_of(_parZb)<>type_of('') | (_parZb<>'T' & _parZb<>'N')
|| _parZb:='N'
?};

_TAB:=tab_tmp(1,'PUID','STRING[48]','P.uidref()',
                'WUID','STRING[48]','BIPNAG.uidref()',
                'ZBIOR','INTEGER','Zbiorcze',
                'MAIL','STRING[100]','e-mail');

{? _in.OD<=_in.DO & P.f_active() & P.f_first()
|| BIPODB.cntx_psh();
   BIPODB.index('KPOD');
   BIPKAT.cntx_psh();
   {!
   |? _add:=0;
      BIPODB.prefix(exec('ref_firma','ustawienia'),'WDRZ',P.ref());
::    Sprawdzamy (FML - dodatkowe filtry) i (czy data zatrudnienia mieści się w badanym okresie)
::    i (czy data zwolnienia nie jest przed badanym okresem, lub czy badamy wg. par. wej. _d)
::    i (czy istnieje rekord BIPODB związany danym P o dacie OD niemniejszej niż podana OD)
      {? _war() & (P.DZA<=_in.DO)
         &
         (_all='T' | P.DZ=date(0,0,0) | _in.OD<=P.DZ | (_za='T' & P.DZ>=_dzis))
         &
         BIPODB.find_ge(_in.OD)
::       Idę po rekordach BIPODB:
      || {!
         |? _dtPow:=BIPODB.DT1-BIPODB.BIPKAT().POW_MAIL;
::          Jeśli odbiorca nie został jeszcze poinformowany i data kiedy należy powiadomić mieści się
::          w zadanym zakresie, to dodaję takiego pracownika do zwracanej tabeli:
            {? BIPODB.POW_MAIL<>'T' & _dtPow>=_in.OD & _dtPow<=_in.DO
            || BIPNAG.cntx_psh();
               BIPNAG.index('ZZ_DOK');
               BIPNAG.prefix(BIPODB.NP_DOK,BIPODB.ZZ_LINK);
               {? BIPNAG.first() & BIPNAG.AKT='T'
               || _TAB.PUID:=P.uidref();
                  _TAB.WUID:=BIPNAG.uidref();
                  _TAB.ZBIOR:=(_parZb='T');
::                Przypisanie adresu e-mail. Najpierw z tabeli USERS, jeśli tam nie ma to z OS_ADRES:
                  _TAB.MAIL:=exec('users_p_email','personel_alerty',P.ref());
                  {? _TAB.MAIL=''
                  || OSOBA.cntx_psh();
                     _TAB.MAIL:=exec('email','osoba',P.OSOBA);
                     OSOBA.cntx_pop()
                  ?};
                  _add:=_TAB.add()
               ?};

               BIPNAG.cntx_pop()
            ?};
::          Jeśli parametr "zbiorcze"=T i dodano już dla pracownika to nie idę dalej, idę do następnego pracownika:
            (~_add | _parZb='N') & BIPODB.next()
         !}
      ?};

      P.f_next()
   !};
   BIPKAT.cntx_pop();
   BIPODB.cntx_pop()
?};

_TAB


\por_pyt_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Formuła przygotowuje i udostępnia tabelę tymczasową z uidref pracowników, których należy poinformować
::       o pytaniach z portalu oczekujących na ich odpowiedź.
::       Uwagi:
::          - Bufor tabeli P nie jest zapamiętywany.
::          - Zakłada się, że na tabelę P jest załozony filtr.
::          - Formuła wykorzystywana w 'alertach' i w wydrukach.
::   WE:  _a  [DATE]   - Początek badanego okresu.
::        _b  [DATE]   - Koniec badanego okresu.
::       [_c] [STRING] - Napis interpretowany jako formuła [domyślnie: '1']. Jeżeli formuła zwróci wartość 0 to dany
::                       współpracownik nie będzie przetwarzany.
::       [_d] [STRING] - Czy uwzględniać pracowników, którzy są aktualnie zatrudnieni, a którym umowa o pracę wygasa
::                       przed datą kontroli lub końcem badanego okresu?
::   WY: Tabela tymczasowa z uidref pracowników i wydarzeń, o których należy ich poinformować.
::----------------------------------------------------------------------------------------------------------------------
_dzis:=date();
_in:=obj_new('OD','DO');

_in.OD:=_a;
_in.DO:=_b;
_war:={? var_pres('_c')=type_of('') & _c<>'' || $_c || "1" ?};
_za:={? var_pres('_d')=type_of('') || _d || 'N' ?};

_TAB:=tab_tmp(1,'PUID','STRING[48]','P.uidref()',
                'MAIL','STRING[100]','e-mail');

{? _in.OD<=_in.DO & P.f_active() & P.f_first()
|| BIPPYTO.cntx_psh();
   BIPPYTO.index('P');
   BIPPYTK.cntx_psh();
   BIPPYTK.index('KAT');
   BIPKAT.cntx_psh();
   BIPPYTN.cntx_psh();
   BIPPYTN.index('VIEW');
   {!
   |? _add:=0;
      BIPPYTO.prefix(P.ref());
::    Sprawdzamy (FML - dodatkowe filtry) i (czy data zatrudnienia mieści się w badanym okresie)
::    i (czy data zwolnienia nie jest przed badanym okresem, lub czy badamy wg. par. wej. _d)
::    i (czy istnieje rekord BIPODB związany danym P o dacie OD niemniejszej niż podana OD)
      {? _war() & (P.DZA<=_in.DO)
         &
         (P.DZ=date(0,0,0) | _in.OD<=P.DZ | (_za='T' & P.DZ>=_dzis))
         &
         BIPPYTO.first()
::       Idę po rekordach BIPPYTO (osoby odpowiedzialne za udzielanie odpowiedzi):
      || {!
         |? BIPPYTK.prefix(BIPPYTO.ref());
            {? BIPPYTK.first()
::          Idę po rekordach BIPPYTK (kategorie za które dana osoba jest odpowiedzialna):
            || {!
               |? BIPPYTK.BIPKAT();
                  BIPPYTN.prefix(exec('ref_firma','ustawienia'),'T',BIPKAT.FUNKC,BIPKAT.KOD,);
::                Jeśli jest takie pytanie wymagające odpowiedzi, dodaję takiego pracownika do zwracanej tabeli:
                  {? BIPPYTN.find_ge(_in.OD) & BIPPYTN.find_le(_in.DO)
                  || _TAB.PUID:=P.uidref();
::                   Przypisanie adresu e-mail. Najpierw z tabeli USERS, jeśli tam nie ma to z OS_ADRES:
                     _TAB.MAIL:=exec('users_p_email','personel_alerty',P.ref());
                     {? _TAB.MAIL=''
                     || OSOBA.cntx_psh();
                        _TAB.MAIL:=exec('email','osoba',P.OSOBA);
                        OSOBA.cntx_pop()
                     ?};
                     _add:=_TAB.add()
                  ?};

                  ~_add & BIPPYTK.next()
               !}
            ?};

            ~_add & BIPPYTO.next()
         !}
      ?};

      P.f_next()
   !};
   BIPPYTN.cntx_pop();
   BIPKAT.cntx_pop();
   BIPPYTK.cntx_pop();
   BIPPYTO.cntx_pop()
?};

_TAB

:Sign Version 2.0 jowisz:1048 2021/04/09 15:26:30 0fe6c159b01878b503171ca5b05ca6569434a108545558d35fd1dd99e9bab25b4b6fb0d1c36949a0f7be2c2b63822f028ace4bfa4ee757ecfaf063feeeb383885878a71f5f02873182e2f6325f6c29e687c0867247671da999a06db9089d3c539e89d6d2fcc738eb2ea69377e6855754bd32cd793659de759eb8e4b21b4585dc
