:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zaliczki.fml
:: Utworzony: 2015-04-20
:: Autor: DRO
::======================================================================================================================
:: Zawartość: Formuły do obsługi zaliczek i e-zaliczek
::======================================================================================================================


\upd_pb_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Uaktualnia pozycje zaliczek po eksporcie i wycofaniu przelewu
::  OLD: \upd_pb_zal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? PB_OP.ZRODLO<>''
|| {? 8+PB_OP.ZRODLO='skid_kzl'
   || EZALPOZ.prefix();
      {? EZALPOZ.seek(BB.sqlint(PB_OP.ZRODLO),)
      || EZALPOZ.POCH:=$PB_OP.ref();
         {? PB_OP.name()='popxxxx'
         || EZALPOZ.ZAL_POCH:='Przelew oczekujący'
         || EZALPOZ.ZAL_POCH:='Przelew wyeksportowany dnia '+$PB.DP
         ?};
         EZALPOZ.put()
      ?}
   ?}
?}


\besymzal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Przed redakcja pola EZAL.SYM
::  OLD: \besymzal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
EZAL.ETYPZAL<>null & EZAL.ETYPZAL().EDSYMZAL='T' & EZAL.ZAL_DLA<>null


\zalaesym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Po redakcji pola EZAL.SYM
::  OLD: \zalaesym/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? EZAL.SYM=''
|| FUN.info('Nie wprowadzono symbolu zaliczki.'@); _zwrot:=0
?};
{? _zwrot || _zwrot:=exec('unik_zal','zaliczki',1) ?};
_zwrot


\unik_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Sprawdza czy symbol zaliczki dla osoby jest unikalny
::   WE: _a - 1/0 - pokazywac/nie pokazywac komunikat
::   WY: 1/0 - jest/nie jest unikalny
::  OLD: \unik_zal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? -menu_txt()='popraw' || _ref:=EZAL.ref() ?};
EZAL.cntx_psh();
EZAL.index('UNIK'); EZAL.prefix(REF.FIRMA,EZAL.ZAL_DLA,EZAL.SYM,EZAL.SYM);
{? EZAL.first() & ((-menu_txt()='popraw' & _ref<>EZAL.ref()) | -menu_txt()<>'popraw')
|| {? _a
   || FUN.info('Istnieje już zaliczka o symbolu %1'
               '\ndla osoby %2.'@[EZAL.SYM,EZAL.ZAL_DLA().NAZWISKO+' '+EZAL.ZAL_DLA().PIERWSZE])
   ?};
   _zwrot:=0
?};
EZAL.cntx_pop();
_zwrot


\aeoszal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Po redakcja pola EZAL.ZAL_DLA
::  OLD: \aeoszal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? EZAL.ZAL_DLA=null
|| 1
|? EZAL.KASPRZEL='K'
|| EZAL.N:=''; exec('bl_ezaln','zaliczki')
|? EZAL.KASPRZEL='P' &
   (EZAL.N='' | (EZAL.N<>'' & RB.getrrban(EZAL.N,REF.FIRMA().SYMBOL+'OSOBA',#EZAL.ZAL_DLA)=null))
|| EZAL.N:=exec('bl_ezaln','zaliczki')
|| 1
?};
_zwrot


\beoszal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Przed redakcja pola EZAL.OSOBA
::  OLD: \beoszal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
OSOBA.win_dict('SLO'); 1


\bl_ezaln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Wartosc poczatkowa pola EZAL.N
::  OLD: \bl_ezaln/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? EZAL.KASPRZEL='P'
|| RB.get_drb(4,REF.FIRMA().SYMBOL+'OSOBA',#EZAL.ZAL_DLA)
|| ''
?}


\zalbewal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Przed redakcja pola EZAL.WAL
::  OLD: \zalbewal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? EZAL.ETYPZAL<>null & EZAL.ETYPZAL().ED_WAL='T'
|| FINFO.SLWAL().SLU(); 1
|| 0
?}


\bdsdpotr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Przed wyswietleniem dla pola EZAL.POTRODDN
::  OLD: \bdsdpotr/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? EZAL.PLACE<>'T'
|| exec('findfnv','#color')
|| ''
?}


\bedpotr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Przed redakcja pola EZAL.POTRODDN
::  OLD: \bedpotr/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
EZAL.PLACE='T'


\bekasprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Przed redakcja pola EZAL.KASPRZEL
::  OLD: \bekasprz/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
EZAL.ETYPZAL<>null & EZAL.ETYPZAL().SYSTEM='N'


\aekasprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Po redakcji pola EZAL.KASPRZEL
::  OLD: \aekasprz/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? EZAL.KASPRZEL='P' & EZAL.ZAL_DLA & EZAL.N=''
|| EZAL.N:=exec('bl_ezaln','zaliczki')
?};
win_disp()


\aeplace
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Po redakcji pola EZAL.PLACE
::  OLD: \aeplace/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? EZAL.PLACE='T'
|| {? EZAL.POTRODDN=date(0,0,0) || EZAL.POTRODDN:=EZAL.TP_PLAN ?}
|| EZAL.POTRODDN:=date(0,0,0)
?};
win_disp(); 1


\bd_ezaln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przed wyswietleniem pola EZAL.N
::  OLD: \bd_ezaln/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? EZAL.KASPRZEL='P' & EZAL.ZAL_DLA
|| EZAL.N:=RB.get_rbtx(2,EZAL.N); ''
|| exec('findfnv','#color')
?}


\be_ezaln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przed redakcja pola EZAL.N
::  OLD: \be_ezaln/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
EZAL.KASPRZEL='P' & EZAL.ZAL_DLA


\f3_ezaln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Klawisz F3 pola EZAL.N
::  OLD: \f3_ezaln/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
EZAL.ZAL_DLA();
ROZNE.KKBAN:=1; PAR_WYDR.TABAKR:=REF.FIRMA().SYMBOL+'OSOBA'; PAR_WYDR.REF:=#OSOBA.ref();
RACHBANK.KB_5R_BD:='RACHBANK.KB_5R:=RB.get_rbtx(1,SKID_RBK.ref())';
SKID_RBK.win_sel('SLO_RBO');
SKID_RBK.win_edit('RED_RBO');
SKID_RBK.win_patt('SZUK_RBO');
_TAB_ACR:=REF.FIRMA().SYMBOL+'OSOBA';
exec('rb_aktywne','rachunki',_TAB_ACR,#OSOBA.ref(),' dla osoby: %1'@[OSOBA.PIERWSZE+' '+OSOBA.NAZWISKO]);
_ref:=RB.getrrban(EZAL.N,REF.FIRMA().SYMBOL+'OSOBA',#OSOBA.ref());
{? _ref || SKID_RBK.seek(_ref) ?};
{? SKID_RBK.select(,1,,{? OSOBA.KALI='T' || 'DuP:D' || '' ?})
|| fld(SKID_RBK.N)
?}


\ae_ezaln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Po redakcji pola EZAL.N
::  OLD: \ae_ezaln/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? EZAL.N<>'' & RB.getrrban(EZAL.N,REF.FIRMA().SYMBOL+'OSOBA',#EZAL.ZAL_DLA)=null
|| FUN.info('Wskazany rachunek bankowy nie jest rachunkiem osoby %1.'@[EZAL.ZAL_DLA().PIERWSZE+' '+OSOBA.NAZWISKO]); 0
|| 1
?}


\refresh1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2009]
:: OPIS: Formula po odswiezeniu okienka wertowania tabeli EZAL
::  OLD: \refresh1/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
EZALPOZ.index('ZALICZKA');
{? EZAL.get()
|| EZALPOZ.prefix(EZAL.ref())
|| EZALPOZ.prefix(null)
?};
{? ~EZALPOZ.get() || EZALPOZ.first() ?};
grp_disp(EZALPOZ,'WER')


\spterpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Sprawdzanie wprowadzonego spodziewanego terminu platnosci
::  OLD: \spterpl/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? EZAL.TP_PLAN=date(0,0,0)
|| FUN.info('Nie wprowadzono planowanego terminu płatności.'@); _zwrot:='TP_PLAN'
?};
{? _zwrot='' & EZAL.TP_PLAN<EZAL.DATA_WY
|| FUN.info('Planowany termin płatności musi być co najmniej równy\n'+
            'dacie wystawienia zaliczki (%1).'@[$EZAL.DATA_WY]); _zwrot:='TP_PLAN'
?};
_zwrot


\sprdatwyn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Sprawdzanie wypelnienia pola EZAL.POTRODDN
::   WY: Akronim pola w przypadku bledu
::  OLD: \sprdatwyn/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? EZAL.PLACE='T'
|| {? EZAL.POTRODDN=date(0,0,0)
   || FUN.info('Nie wprowadzono daty, od której mogą być tworzone\n'+
               'potrącenia z wynagrodzenia.'@); _zwrot:='POTRODDN'
   |? EZAL.POTRODDN<EZAL.TP_PLAN
   || FUN.info('Data, od której mogą być tworzone potrącenia z wynagrodzenia\n'@+
               'nie może być mniejsza od planowanego terminu płatności.'@); _zwrot:='POTRODDN'
   ?}
?};
_zwrot


\zaldstyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Przed wyswietleniem dla pola SKID.ETYPZAL
::  OLD: \zaldstyp/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
SKID.ETYPZAL:={? cur_tab(1,1)=ETYPY
              || ETYPY.ETYPZAL().NAZ
              || EZAL.ETYPZAL().NAZ
              ?};
1


\zalf3typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Na klawisz F3 dla pola SKID.ETYPZAL
::  OLD: \zalf3typ/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
ETYPZAL.cntx_psh();
{? exec('indpreftyp','zaliczki') & SKID.ETYPZAL<>'' || ETYPZAL.find_key(SKID.ETYPZAL) ?};
ETYPZAL.win_sel('SLO');
{? ETYPZAL.select(,1) || EZAL.ETYPZAL:=ETYPZAL.ref(); SKID.ETYPZAL:=ETYPZAL.NAZ ?};
ETYPZAL.cntx_pop();
SKID.ETYPZAL


\indpreftyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Ustawanie indeksu i prefiksu dla typu zaliczki
::   WY: 1/0 - czy znaleziono pasujace rekordy
::  OLD: \indpreftyp/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('zal_kasa')>0
|| ETYPZAL.index('DISP1'); ETYPZAL.prefix(REF.FIRMA,'T','K');
   ETYPZAL.first()
|| _pref:={? cur_tab(1,1)=ETYPY || 'N' || 'T' ?};
   ETYPZAL.index('UNIK'); ETYPZAL.prefix(REF.FIRMA,_pref);
   ETYPZAL.first()
?}


\zalbetyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Przed redakcja pola SKID.ETYPZAL
::  OLD: \zalbetyp/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('zal_kasa')>0 & -menu_txt()='popraw' & EZAL.ETYPZAL().KASPRZEL<>'K'
|| 0
|| {? cur_tab(1,1)<>ETYPY || typ_zal:=EZAL.ETYPZAL ?}; 1
?}


\zalaetyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Po redakcji pola EZAL.ETYPZAL
::  OLD: \zalaetyp/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_dalej:=1;
exec('indpreftyp','zaliczki');
{? cur_tab(1,1)=ETYPY
|| {? SKID.ETYPZAL<>''
   || {? ETYPZAL.find_key(SKID.ETYPZAL)
      || ETYPY.ETYPZAL:=ETYPZAL.ref(); SKID.ETYPZAL:=ETYPZAL.NAZ
      || FUN.info('Nie znaleziono typu zaliczki o nazwie: %1'@[SKID.ETYPZAL]); _dalej:=0
      ?}
   || ETYPY.ETYPZAL:=null
   ?};
   _dalej
|| {? SKID.ETYPZAL<>''
   || {? ETYPZAL.find_key(SKID.ETYPZAL)
      || EZAL.ETYPZAL:=ETYPZAL.ref(); SKID.ETYPZAL:=ETYPZAL.NAZ
      || FUN.info('Nie znaleziono typu zaliczki o nazwie: %1'@[SKID.ETYPZAL]); _dalej:=0
      ?}
   || EZAL.ETYPZAL:=null
   ?};
   {? _dalej & EZAL.ETYPZAL=null || _dalej:=1 ?};
   {? _dalej
   || EZAL.ETYPZAL(); _error:=0;
      {? -menu_txt<>'popraw' || EZAL.PLACE:=ETYPZAL.DOT_WYN ?};
      {? ETYPZAL.ED_WAL='N' || EZAL.WAL:=FINFO.NAROD ?};
      {? (EZAL.SYM='' | typ_zal<>EZAL.ETYPZAL) & ETYPZAL.AUT_SYM='T'
      || EZAL.SYM:=(($ETYPZAL.FORMSYMZ)());
         {? ETYPZAL.EDSYMZAL='N'
         || _error:=exec('sprgenszal','zaliczki')
         ?}
      ?};
      {? _error
      || 0
      || EZAL.KASPRZEL:=ETYPZAL.KASPRZEL;
         EZAL.KASA:={? EZAL.KASPRZEL='K' || 'T' || 'N' ?};
         EZAL.PRZELEW:={? EZAL.KASPRZEL='P' || 'T' || 'N' ?};
         {? EZAL.KASPRZEL='P' & EZAL.ZAL_DLA & EZAL.N=''
         || EZAL.N:=exec('bl_ezaln','zaliczki')
         ?};
         _okno:=EZAL.win_edit('?');
         {? EZAL.TP_PLAN=date(0,0,0) || EZAL.TP_PLAN:=EZAL.DATA_WY+ETYPZAL.DOMLDNIR ?};
         {? EZAL.POTRODDN=date(0,0,0) || EZAL.POTRODDN:=EZAL.TP_PLAN ?};
         {? EZAL.KASPRZEL='P'
         || EZAL.efld_opt(_okno,'mark=1',,'N')
         || EZAL.efld_opt(_okno,'mark=0',,'N')
         ?};
         win_disp();
         1
      ?}
   ?}
?}


\bds_czy_zalp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla pola ETYPY.CZY_ZALP
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1)=ETYPY
|| {? ETYPY.CZY_ZALP='T'
   || ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=1,mark=1',SKID,'ETYPZAL')
   || ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=0,mark=0',SKID,'ETYPZAL')
   ?};
   {? ETYPY.CZY_ZALP='T' & ETYPY.ETYPZAL
   || ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=1',ETYPZAL,'NAZ');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=1',ETYPZAL,'DOMLDNIR');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=1',ETYPZAL,'KASPRZEL');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=1',ETYPZAL,'DOT_WYN');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=1',ETYPZAL,'ED_WAL');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=1',ETYPZAL,'EDSYMZAL');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=1',ETYPZAL,'AUT_SYM');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=1',ETYPZAL,'FORMSYMZ')
   |? ETYPY.CZY_ZALP='N'
   || ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=0',ETYPZAL,'NAZ');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=0',ETYPZAL,'DOMLDNIR');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=0',ETYPZAL,'KASPRZEL');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=0',ETYPZAL,'DOT_WYN');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=0',ETYPZAL,'ED_WAL');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=0',ETYPZAL,'EDSYMZAL');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=0',ETYPZAL,'AUT_SYM');
      ETYPY.efld_opt(ETYPY.win_edit('?'),'enable=0',ETYPZAL,'FORMSYMZ')
   ?}
?};
1


\sprgenszal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Sprawdzanie symbolu zaliczki
::  OLD: \sprgenszal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_error:=(EZAL.SYM='');
{? ~_error
|| _error:=~exec('unik_zal','zaliczki',0)
?};
{? _error
|| FUN.info('Błąd podczas automatycznego tworzenia symbolu zaliczki.\n'
            'Pusty symbol zaliczki lub\n'
            'istnieje już zaliczka o symbolu: %1'
            '\ndla osoby: %2'@[EZAL.SYM,EZAL.ZAL_DLA().NAZWISKO+' '+EZAL.ZAL_DLA().PIERWSZE])
?};
_error


\typy_zal_noob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Definiowanie typów zaliczek bez obiegu
::----------------------------------------------------------------------------------------------------------------------
ETYPZAL.cntx_psh();
ETYPZAL.index('UNIK'); ETYPZAL.prefix(REF.FIRMA);
{? ~ETYPZAL.find_key('T','PRZELEW - BEZ OBIEGU - DOTYCZY WYNAGRODZEŃ','PRZELEW - BEZ OBIEGU - DOTYCZY WYNAGRODZEŃ')
|| ETYPZAL.blank(1);
   ETYPZAL.FIRMA:=REF.FIRMA;
   ETYPZAL.NAZ:='PRZELEW - BEZ OBIEGU - DOTYCZY WYNAGRODZEŃ'; ETYPZAL.SYSTEM:='T'; ETYPZAL.KASPRZEL:='P';
   ETYPZAL.EDSYMZAL:=ETYPZAL.ED_WAL:='T'; ETYPZAL.AUT_SYM:='N'; ETYPZAL.DOT_WYN:='T';
   ETYPZAL.add()
?};
{? ~ETYPZAL.find_key('T','PRZELEW - BEZ OBIEGU - NIE DOTYCZY WYNAGRODZEŃ','PRZELEW - BEZ OBIEGU - NIE DOTYCZY WYNAGRODZEŃ')
|| ETYPZAL.FIRMA:=REF.FIRMA;
   ETYPZAL.NAZ:='PRZELEW - BEZ OBIEGU - NIE DOTYCZY WYNAGRODZEŃ'; ETYPZAL.DOT_WYN:='N';
   ETYPZAL.add()
?};
{? ~ETYPZAL.find_key('T','KASA - BEZ OBIEGU - DOTYCZY WYNAGRODZEŃ','KASA - BEZ OBIEGU - DOTYCZY WYNAGRODZEŃ')
|| ETYPZAL.FIRMA:=REF.FIRMA;
   ETYPZAL.NAZ:='KASA - BEZ OBIEGU - DOTYCZY WYNAGRODZEŃ';
   ETYPZAL.KASPRZEL:='K'; ETYPZAL.ED_WAL:='N'; ETYPZAL.DOT_WYN:='T'; ETYPZAL.add()
?};
{? ~ETYPZAL.find_key('T','KASA - BEZ OBIEGU - NIE DOTYCZY WYNAGRODZEŃ','KASA - BEZ OBIEGU - NIE DOTYCZY WYNAGRODZEŃ')
|| ETYPZAL.FIRMA:=REF.FIRMA;
   ETYPZAL.NAZ:='KASA - BEZ OBIEGU - NIE DOTYCZY WYNAGRODZEŃ'; ETYPZAL.DOT_WYN:='N'; ETYPZAL.add()
?};
ETYPZAL.cntx_pop()


\rkprzzal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Rekord przed tabeli EZAL
::  OLD: \rkprzzal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_gray:='';
{? EZAL.OBIEGI='T' | EZAL.ZAKCREJ='T' | EZAL.sel_size()
|| _gray+='UZ'
|| EZALPOZ.cntx_psh(); EZALPOZ.index('ZALICZKA'); EZALPOZ.prefix(EZAL.ref());
   {? EZALPOZ.first() || _gray+='UZ' ?};
   EZALPOZ.cntx_pop()
?};
{? EZAL.sel_size() || _gray+='P' ?};
{? ~EZAL.sel_size()
|| _gray+={? EZAL.ZAM='T' || 'M' || 'O' ?}
?};
EZAL.actions_grayed('WER',_gray);
exec('rekprzed','color','EZAL#01')


\rkprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Rekord przed tabeli EZAL - formula wewnetrzna
::  OLD: \rkprz/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? EZAL.ZAM='T' || 'EZAL#01#01' || '' ?}


\legenda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Akcja "Legenda" w okienku wertowania tabeli EZAL
::  OLD: \legenda/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','EZAL#01')


\zal_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Tworzy okno redagowania zaliczki
::----------------------------------------------------------------------------------------------------------------------
_okn:=EZAL.mk_edit('Zaliczka'@);
zak_zal:=0;
EZAL.win_etab(_okn,'Zaliczka'@);
{? var_pres('zal_kasa')>0
|| EZAL.win_ewin(_okn,,'WPR_KASA')
|| EZAL.win_ewin(_okn,,'WPR')
?};
EZAL.win_etab(_okn,'Status'@);
EZAL.win_ewin(_okn,,'WPR_STAT');
_zakoncz:=EZAL.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=end,display=0'['&Zakończ'@],
              "zak_zal:=1; 'key:F2'");
EZAL.btn_eopt(_okn,_zakoncz,'tooltip='+exec('help_red_zakoncz','#window','DK'));
_zapisz:=EZAL.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=end,display=0'['Zapisz'@],
              "'key:F2'");
EZAL.btn_eopt(_okn,_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
_anuluj:=EZAL.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Anuluj'@],
              'key:Esc');
EZAL.btn_eopt(_okn,_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
EZAL.win_edit(_okn);
1


\zak_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zakończenie rejestracji zaliczki
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_mp:=_args.mp;
_wy:=_args.out;
{? FUN.ask('Zakończyć rejestrację zaliczki?'@)
|| EZAL.ZAKCREJ:='T'; EZAL.DAKC_REJ:=date();
   {? EZAL.put()
   || _mp.save(,_wy);
      _mp.done()
   ?}
?};
1


\zakr_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zmiana zakresu zaliczek
::   WE: _a - 1 - niezamknięte
::            2 - zamknięte
::            3 - wszystkie
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('zal_kasa')>0
|| EZAL.hdr_sel();
   {? _a=3
   || EZAL.index('INDEX32'); EZAL.prefix(REF.FIRMA,SKID.OSOBA,SKID.WAL_DOK);
      EZAL.hdr_sel('Zaliczki wszystkie'@)
   |? _a=1
   || EZAL.index('INDEX42'); EZAL.prefix(REF.FIRMA,'N',SKID.OSOBA,SKID.WAL_DOK);
      EZAL.hdr_sel('Zaliczki niezamknięte'@)
   || EZAL.index('INDEX42'); EZAL.prefix(REF.FIRMA,'T',SKID.OSOBA,SKID.WAL_DOK);
      EZAL.hdr_sel('Zaliczki zamknięte'@)
   ?};
   zakr_zal:=_a
|| {? _a=3
   || EZAL.index('INDEX31'); EZAL.prefix(REF.FIRMA)
   |? _a=1
   || EZAL.index('INDEX41'); EZAL.prefix(REF.FIRMA,'N')
   || EZAL.index('INDEX41'); EZAL.prefix(REF.FIRMA,'T')
   ?};
   zakr_zal:=_a;
   AreaTitle.setTitle()
?}


\title
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Nagłówek dla tabeli zaliczek
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('zakr_zal')>0
|| {? zakr_zal=1
   || 'niezamknięte'
   |? zakr_zal=2
   || 'zamknięte'
   || 'wszystkie'
   ?}
|| ''
?}


\pre_przelewy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Parametry przygotowywania przelewów dla zaliczek pracowniczych
::  OLD: \przelewy/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.TABAKR:=REF.INFO;
RACHBANK.KB_1R_BD:='exec(\'bd_varrb\',\'rachunki\',\'RACHBANK\',\'KB_1R\',REF.INFO,0)';
RACHBANK.KB_1R_BE:='exec(\'set_kbr1\',\'rozrach_przel\'); '+
                   '{? WYDRUKI.WAL<>null || PB.WAL:=WYDRUKI.WAL; 1 || RACHBANK.KB_1R:=\'\';  0?}';
RACHBANK.KB_1R_F3:='exec(\'f3_vrbup\',\'rachunki\',\'RACHBANK\',\'KB_1R\',REF.INFO,0)';
RACHBANK.KB_1R_AE:='exec(\'ae_rb\',\'zaliczki\')';
ROZRACH.OPIS2:='';
WYDRUKIN.DATA:=date();
WYDRUKI.WAL:=FINFO.NAROD;
UNPAR.PODD:=OPERATOR.DEPT;
UNPAR.PODD_BE:='OPERATOR.DEPT=null';
UNPAR.PODD_AE:='';
ROZNE.RODZZAGR:=null;
ROZNE.KOD_STAT:=null;
ROZNE.TRYB_POS:=null;
PAR_WYDR.SLPAR2:='';
RACHBANK.KB_1R:='';
KOMM.init(,,'Uwagi dotyczące generowania przelewów.'@)


\optmp_from_ezal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Formuła tworzy zapis w OPTMP na podstawie zaliczki pracowniczej
::   WE: _a = user
::  OLD: \przelewy/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
OPTMP.blank();
OPTMP.ODD:=UNPAR.PODD;
OPTMP.USER:=_a;
OPTMP.SYM:=EZAL.SYM;
OPTMP.PAR1:=EZAL.ZAL_DLA().NAZWISKO;
OPTMP.TYT:=EZAL.TRESC;
OPTMP.KOMPWN:=#EZAL.ref();
OPTMP.DATA:=EZAL.TP_PLAN;
OPTMP.SAL:=EZAL.KW_PROP-EZAL.ROZCHOD;
{? PAR_WYDR.PAR3
|| OPTMP.ROZL:=OPTMP.SAL
|| OPTMP.ROZL:=0
?};
OPTMP.RB:=EZAL.N;
{? OPTMP.SAL & OPTMP.add()
|| ROZRACH.SUM1+=OPTMP.SAL;
   ROZRACH.SUM2+=OPTMP.ROZL
?}


\przelewy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Akcja przygotuj przelewy dla zaliczek pracowniczych
::   WE: [_a] - wskazanie na zaliczkę (EZAL.ref())
::  OLD: \przelewy/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
__genpzl:=0;
exec('pre_przelewy','zaliczki');
exec('odd_filtr','fst');
WYDRUKIN.win_edit('PBGENZAL');
{? WYDRUKIN.edit("exec('spr_pb_par','zaliczki')")
|| _user:=tm_form(OPTMP.tm_stamp())+24; OPTMP.use('optmp__');
   OPTMP.index('ZNACZ'); OPTMP.prefix(_user);
   EZAL.cntx_psh();
   EZAL.index('INDEX4');
   EZAL.prefix(REF.FIRMA,'P','T');
   {? EZAL.first()
   || ROZRACH.SUM1:=ROZRACH.SUM2:=ROZRACH.SUM3:=0;
      {!
      |? {? EZAL.ZAM='N' & EZAL.N<>'' & WYDRUKI.WAL=EZAL.WAL
         || exec('optmp_from_ezal','zaliczki',_user)
         ?};
         EZAL.next()
      !};
      ROZRACH.SUM3:=ROZRACH.SUM1-ROZRACH.SUM2
   ?};
   EZAL.cntx_pop();
   OPTMP.win_sel('PB_ZAL');
   OPTMP.hdr_sel();
   _title:=' '+WYDRUKI.WAL().KOD;
   OPTMP.hdr_sel(_title);
   {? OPTMP.first()
   || {? OPTMP.select(,,,{? OPERATOR.DEPT || 'J' || '' ?})
      || 1
      || _pyt:=0;
         {? OPTMP.first()
         || {!
            |? _pyt:=OPTMP.ROZL & OPTMP.ODD;
               _pyt=0 & OPTMP.next()
            !}
         ?};
         {? _pyt & FUN.ask('Wygenerować zatwierdzone przelewy?'@)
         || PB.use('pbxxxx'); PB.index('PB'); PB.prefix(); PBHIST.use('phxxxx');
            PB_OP.use('popxxxx'); PB_OP.index('SYM'); PB_OP.prefix();
            EZAL.cntx_psh(); EZAL.prefix(REF.FIRMA);
            OPTMP.first();
            {! |?
               {? OPTMP.ROZL
               || EZAL.seek(int(OPTMP.KOMPWN),EZAL.name());
                  exec('m_dzal','zaliczki')
               ?};
               OPTMP.next()
            !};
            EZAL.cntx_pop();
            {? PB.f_active()=1 | PB.f_active()=3 || PB.f_rfresh() ?};
            {? ~KOMM.empty()
            || {? FUN.ask('Liczba utworzonych przelewów: %1. Wyświetlić listę napotkanych problemów?'@[$__genpzl])
               || KOMM.select()
               ?}
            || FUN.info('Liczba utworzonych przelewów: %1.'@[$__genpzl])
            ?};
            __genpzl:=0
         ?};
         {? OPTMP.first()
         || {! |? OPTMP.del() !}
         ?}
      ?}
   || FUN.info('Brak zaliczek realizowanych przelewem\nspełniających zadane kryteria.'@)
   ?}
?}


\pbosogen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła generuje przelewy z zaliczek
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab=OPTMP || sel_exit() ?};
PB.use('pbxxxx'); PB.index('PB'); PB.prefix(); PBHIST.use('phxxxx');
PB_OP.use('popxxxx'); PB_OP.index('SYM'); PB_OP.prefix();
EZAL.cntx_psh(); EZAL.prefix(REF.FIRMA);
OPTMP.first();
{! |?
   {? OPTMP.ROZL
   || EZAL.seek(int(OPTMP.KOMPWN),EZAL.name());
      exec('m_dzal','zaliczki')
   ?};
   OPTMP.next()
!};
EZAL.cntx_pop();
{? PB.f_active()=1 | PB.f_active()=3 || PB.f_rfresh() ?};
{? ~KOMM.empty()
|| {? FUN.ask('Liczba utworzonych przelewów: %1. Wyświetlić listę napotkanych problemów?'@[$__genpzl])
   || KOMM.select()
   ?}
|| FUN.info('Liczba utworzonych przelewów: %1.'@[$__genpzl])
?};
{? OPTMP.first()
|| {! |? OPTMP.del() !}
?};
__genpzl:=0


\ae_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Po redakcji rachunku bankowego do przelewów z zaliczek pracowniczych
::  OLD: \ae_rb/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
exec('cr_tt_rb','rachunki');
_vr:=RB.getrrban(fld(),REF.INFO,0); SKID_RBK.prefix();
{? _vr & SKID_RBK.seek(_vr)
|| _vrb:=RB.get_rbtx(1,_vr,SKID_RBK.KRAJ().KODISO)
|| _vrb:=''
?};
TT_RB.index(TT_RB1); TT_RB.prefix();
{? _vrb<>'' & TT_RB.find_key(_vrb)
|| 1
|| FUN.emsg('Należy wybrać rachunek znajdujący się w słowniku.'@);
   0
?}


\spr_pb_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Sprawdza parametry przy generowaniu przelewow
::  OLD: \spr_pb_par/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=__CHK.record(UNPAR,,'PODD');
{? _r='' || _r:=__CHK.record(WYDRUKIN,,'WAL','DATA') ?};
{? _r='' || _r:=__CHK.record(RACHBANK,,'KB_1R') ?};
{? _r='' & WYDRUKI.WAL<>FINFO.NAROD
|| _bank:=RB.getrbank(3,RACHBANK.KB_1R);
   {? _bank=null
   || FUN.emsg('Nie znaleziono oddziału banku dla konta bankowego.'@);
      _r:='KB_1R'
   |? ~ROZNE.RODZZAGR & ~XINFO.SL_RPZ
   || FUN.emsg('Nie ustalono słownika rodzajów płatności zagranicznych.'@);
      _r:='WAL'
   |? ~ROZNE.KOD_STAT & ~exec('bepbslb','hbn','KODY_STATS')
   || FUN.emsg('Nie ustalono słownika kodów statystycznych dla banku.'@);
      _r:='WAL'
   |? ~ROZNE.TRYB_POS & ~exec('bepbslb','hbn','TRYB_POS')
   || FUN.emsg('Nie ustalono słownika trybów przetwarzania dla banku.'@);
      _r:='WAL'
   ?};
   {? _r=''
   || _r:=__CHK.record(ROZNE,,'RODZZAGR','KOD_STAT','TRYB_POS')
   ?}
?};
{? _r=''
|| _rach:=RB.get_rbel(2,RACHBANK.KB_1R);
   SKID_RBK.cntx_psh();
   SKID_RBK.index('NUMER');
   SKID_RBK.prefix(_rach,_rach);
   _vat:=0;
   {? SKID_RBK.first() || _vat:=SKID_RBK.VAT='T' ?};
   SKID_RBK.cntx_pop();
   {? _vat
   || {? ~FUN.ask('Wybrany rachunek jest rachunkiem do obsługi VAT (Split payment). Kontynuować?'@) || _r:='KB_1R' ?}
   ?}
?};
_r


\br_pboso
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Rekord przed okna PB_ZAL tabeli OPTMP
::  OLD: \br_pboso/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
OPTMP.SAL=OPTMP.ROZL


\ar_pboso
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Rekord po okna PB_ZAL tabeli OPTMP
::  OLD: \ar_pboso/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
OPTMP.ROZL:=OPTMP.ROZL$2;
{? OPTMP.ROZL>OPTMP.SAL
|| FUN.info('Kwota wypłaty nie może być większa niż do zapłaty.'@);
   0
|? OPTMP.ROZL<0
|| FUN.info('Kwota wypłaty powinna być większa od zera.'@);
   0
|| 1
?}


\bdpboso
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Na wyswietl okna PB_ZAL tabeli OPTMP
::  OLD: \bdpboso/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
EZAL.cntx_psh();
EZAL.prefix(REF.FIRMA);
{? EZAL.seek(OPTMP.KOMPWN,)
|| EZAL.win_edit('WPR');
   EZAL.display()
|| FUN.info('Nie znaleziono zaliczki.'@)
?};
EZAL.cntx_pop()


\pbosoodd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Akcja jednostka ksiegowa okna PB_ZAL tabeli OPTMP
::  OLD: \pbosoodd/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.sel_size() | exec('pboddsel','zaliczki')
|| OPTMP.ODD:=UNPAR.PODD;
   OPTMP.put()
?}


\pboddsel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Wybor jednostki ksiegowej z okna wertowania
::   WY: czy wybrano jednostke ksiegowa? 1-tak 0-nie
::  OLD: \pboddsel/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
exec('odd_filtr','fst');
ODD.win_sel('WYB');
{? ODD.select()
|| UNPAR.PODD:=ODD.ref();
   1
?}


\bg_pbodd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przed akcja grupowa jednostka ksiegowa okna PB_ZAL tabeli OPTMP
::  OLD: \bg_pbodd/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pboddsel','zaliczki')


\pbosowpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Akcja wplata okna PB_ZAL tabeli OPTMP
::   WE: _a - 1 - wplata calkowita
::            0 - wplata czesciowa
::  OLD: \pbosowpl/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| {? OPTMP.ROZL
   || ROZRACH.SUM2-=OPTMP.ROZL;
      ROZRACH.SUM3+=OPTMP.ROZL;
      OPTMP.ROZL:=0
   || OPTMP.ROZL:=OPTMP.SAL;
      ROZRACH.SUM2+=OPTMP.ROZL;
      ROZRACH.SUM3-=OPTMP.ROZL
   ?};
   OPTMP.put()
|| _r:=OPTMP.SAL-ROZRACH.KW3;
   _r:=OPTMP.ROZL-_r;
   ROZRACH.SUM2+=_r;
   ROZRACH.SUM3-=_r
?}


\rprzzalp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Rekord przed dla okienka wertowania tabeli EZALPOZ (kasa)
::  OLD: \rprzzalp/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? (3+EZALPOZ.POCH)='kpd' & PAR_SKID.get(90)='T'
|| EZALPOZ.actions('WER','','P',1)
|| EZALPOZ.actions('WER','P','',1)
?}; 0


\dspzalpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Przed wyswietl dla okna wertowania tabeli EZALPOZ
::  OLD: \dspzalpz/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? (3+EZALPOZ.POCH)='kpd'
|| _ref:=BB.sqlint(EZALPOZ.POCH); _nam:=form(EZALPOZ.POCH-8);
   {? _ref<>0 & _nam<>''
   || POZDOK.cntx_psh(); POZDOK.use(_nam); POZDOK.prefix();
      {? POZDOK.seek(_ref,_nam)
      || OPER.cntx_psh(); OPER.prefix();
         DOKUMENT.cntx_psh(); DOKUMENT.use('kdo'+(POZDOK.name()+5)); DOKUMENT.prefix();
         RAPORT.cntx_psh(); RAPORT.use('krp'+(POZDOK.name()+5)); RAPORT.prefix();
         POZDOK.DOKUMENT().RAPORT(); DOKUMENT.OPER();
         _stan:=#((POZDOK.name()-2)+3);
         STANKAS.cntx_psh(); STANKAS.index('KOD'); STANKAS.prefix(_stan);
         {? STANKAS.first() & STANKAS.KOD=_stan
         || POZDOK.win_edit('SZUK');
            POZDOK.display()
         ?};
         STANKAS.cntx_pop();
         OPER.cntx_pop(); DOKUMENT.cntx_pop(); RAPORT.cntx_pop()
      ?};
      POZDOK.cntx_pop()
   ?}
?};
1


\dszalpoc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Na wyswietl dla pola SKID.ZAL_POCH
::  OLD: \dszalpoc/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
SKID.ZAL_POCH:='';
{? (3+EZALPOZ.POCH)='kpd'
|| _ref:=BB.sqlint(EZALPOZ.POCH); _nam:=form(EZALPOZ.POCH-8);
   {? _ref<>0 & _nam<>''
   || POZDOK.cntx_psh(); POZDOK.use(_nam); POZDOK.prefix();
      {? POZDOK.seek(_ref,_nam)
      || OPER.cntx_psh(); DOKUMENT.cntx_psh(); RAPORT.cntx_psh();
         DOKUMENT.use('kdo'+(POZDOK.name()+5)); DOKUMENT.prefix();
         RAPORT.use('krp'+(POZDOK.name()+5)); RAPORT.prefix();
         POZDOK.DOKUMENT().RAPORT();
         ROK_F.cntx_psh(); ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA,POZDOK.name()+2);
         {? ROK_F.first()
         || _stan:=#((POZDOK.name()-2)+3);
            STANKAS.cntx_psh(); STANKAS.index('KOD'); STANKAS.prefix(_stan);
            {? STANKAS.first() & STANKAS.KOD=_stan
            || SKID.ZAL_POCH:='Rok: '+ROK_F.NAZ+' stanowisko kasowe: '+STANKAS.NAZWA+
                              ' raport: '+$RAPORT.NUM_RAP+' dokument: '+$DOKUMENT.LP
            ?};
            STANKAS.cntx_pop()
         ?};
         ROK_F.cntx_pop(); OPER.cntx_pop(); DOKUMENT.cntx_pop(); RAPORT.cntx_pop()
      ?};
      POZDOK.cntx_pop()
   ?}
|? (6+EZALPOZ.POCH)='edokzl'
|| _ref:=BB.sqlint(EZALPOZ.POCH); _nam:=form(EZALPOZ.POCH-8);
   {? _ref<>0 & _nam<>''
   || EDOK_ZAL.cntx_psh(); EDOK_ZAL.use(_nam); EDOK_ZAL.prefix();
      {? EDOK_ZAL.seek(_ref,_nam)
      || EDOKUM.cntx_psh();
         EDOKUM.use('skid_v'+(EDOK_ZAL.name()+2));
         EDOKUM.index('DISP'); EDOKUM.prefix();
         EDOK_ZAL.EDOKUM();
         ROK_F.cntx_psh(); ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA,EDOKUM.name()+2);
         {? ROK_F.first()
         || SKID.ZAL_POCH:='Zaliczka w delegacji - rok: '+ROK_F.NAZ+' delegacja: '+EDOKUM.ID
         ?};
         ROK_F.cntx_pop(); EDOKUM.cntx_pop()
      ?};
      EDOK_ZAL.cntx_pop()
   ?}
|? 3+EZALPOZ.POCH='PPL'
|| SKID.ZAL_POCH:=EZALPOZ.ZAL_POCH
|? 3+EZALPOZ.POCH='pop'
|| SKID.ZAL_POCH:=EZALPOZ.ZAL_POCH
?};
1


\wni_aekasprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji pola EDOKUM.KASPRZEL
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| exec('ustaw_pola_wt','obiegi2');
   {? EDOKUM.KASPRZEL='K'
   || EDOKUM.N:='';
      EDOKUM.web_efld_opt(web_top_win(),,'editable=0,mark=0',,'N')
   |? EDOKUM.N=''
   || exec('RB','object'); EDOKUM.N:=RB.get_drb(4,REF.FIRMA().SYMBOL+'OSOBA',#EDOKUM.DOSTAWCA);
      EDOKUM.web_efld_opt(web_top_win(),,'editable=1,mark=1',,'N')
   ?}
|| {? EDOKUM.KASPRZEL='K'
   || EDOKUM.N:='';
      cur_tab(1,1).efld_opt(cur_win(),'editable=0,mark=0',EDOKUM,'N')
   |? EDOKUM.N=''
   || exec('RB','object'); EDOKUM.N:=RB.get_drb(4,REF.FIRMA().SYMBOL+'OSOBA',#EDOKUM.DOSTAWCA);
      cur_tab(1,1).efld_opt(cur_win(),'editable=1,mark=1',EDOKUM,'N')
   ?}
?};
1


\wni_aekasprz_web
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji pola EDOKUM.KASPRZEL
::----------------------------------------------------------------------------------------------------------------------
exec('env_wt','b_proces');
_dynamic:=exec('get_wt_par','obiegi2','dynamic');
{? _dynamic=1
|| _flds:=web_def_get();
   {? _flds.KASPRZEL='K'
   || _flds.N:='';
      web_def_fld_opt(web_top_win, 'editable=0,mark=0','N');
      web_def_update(,_flds)
   || {? _flds.N=''
      || exec('RB','object');
         _flds.N:=RB.get_drb(4,REF.FIRMA().SYMBOL+'OSOBA',#exec('prac_firm_af_www1','obiegi2',_flds.DOSTAWCA));
         web_def_update(,_flds)
      ?};
      web_def_fld_opt(web_top_win, 'editable=1,mark=1','N')
   ?}
?};
1


\wni_bl_ezaln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wartość początkowa pola EDOKUM.N
::----------------------------------------------------------------------------------------------------------------------
''


\wni_bd_ezaln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla pola EDOKUM.N
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.N<>''
|| exec('RB','object'); EDOKUM.N:=RB.get_rbtx(2,EDOKUM.N)
?};
''


\wni_f3_ezaln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na F3 dla pola EDOKUM.N
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| exec('env_wt','b_proces');
   _dynamic:=exec('get_wt_par','obiegi2','dynamic')
?};
exec('RB','object');
ROZNE.KKBAN:=1; PAR_WYDR.TABAKR:=_TAB_ACR:=REF.FIRMA().SYMBOL+'OSOBA';
RACHBANK.KB_5R_BD:='RACHBANK.KB_5R:=RB.get_rbtx(1,SKID_RBK.ref())';
SKID_RBK.index('TAB');
{? app_info('web_sesid')<>'' & _dynamic=1
|| _flds:=web_def_get();
   PAR_WYDR.REF:=#exec('prac_firm_af_www1','obiegi2',_flds.DOSTAWCA);
   SKID_RBK.prefix(null,_TAB_ACR,_TAB_ACR,PAR_WYDR.REF);
   _ref:=RB.getrrban(_flds.N,REF.FIRMA().SYMBOL+'OSOBA',PAR_WYDR.REF)
|| EDOKUM.DOSTAWCA();
   PAR_WYDR.REF:=#OSOBA.ref();
   SKID_RBK.prefix(null,_TAB_ACR,_TAB_ACR,#OSOBA.ref());
   _ref:=RB.getrrban(EDOKUM.N,REF.FIRMA().SYMBOL+'OSOBA',#OSOBA.ref())
?};
{? _ref || SKID_RBK.seek(_ref) ?};
{? app_info('web_sesid')<>'' & ~_dynamic || EDOKUM.web_cntx_save() ?};
exec('tab_form','obiegi','SKID_RBK','wyb_skid_rbk','zaliczki','bobs_skid_rbk','zaliczki');
{? app_info('web_sesid')<>''
|| SKID_RBK.web_select('SLO_RBOW',,1)
|| SKID_RBK.win_sel('SLO_RBO');
   SKID_RBK.win_edit('RED_RBO');
   SKID_RBK.win_patt('SZUK_RBO');
   SKID_RBK.select(,1,-1,);
   EDOKUM.N:=SKID_RBK.N
?}


\bobs_skid_rbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą okienka wertowania SKID_RBK
::----------------------------------------------------------------------------------------------------------------------
exec('RB','object');
exec('czytaj','#stalesys');
RACHBANK.KB_5R:='';RACHBANK.KB_5R_BD:='';
1


\wyb_skid_rbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wybór rachunku bankowego - webterm w EDOKUM
::----------------------------------------------------------------------------------------------------------------------
{? exec('get_wt_par','obiegi2','dynamic')=1
|| web_top_close(0);
   web_top_def_fld_update(1,1,RB.get_rbtx(2,SKID_RBK.N))
|| EDOKUM.web_cntx_load();
   EDOKUM.N:=RB.get_rbtx(2,SKID_RBK.N);
   web_top_close(0);
   web_top_fld_update(1,1)
?};
1


\wni_ae_ezaln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji pola EDOKUM.N
::----------------------------------------------------------------------------------------------------------------------
exec('RB','object');
{? EDOKUM.N<>'' & RB.getrrban(EDOKUM.N,REF.FIRMA().SYMBOL+'OSOBA',#EDOKUM.DOSTAWCA)=null
|| FUN.info('Wskazany rachunek bankowy nie jest rachunkiem osoby %1.'@[EDOKUM.DOSTAWCA().PIERWSZE+' '+OSOBA.NAZWISKO]); 0
|| 1
?}


\wni_aeplace
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji pola EDOKUM.PLACE
::   WE: _a - 0/1 - zmień opcje dla pola
::----------------------------------------------------------------------------------------------------------------------
_opt:={? var_pres('_a')>0 || _a || 1 ?};
{? EDOKUM.PLACE='T'
|| {? EDOKUM.POTRODDN=date(0,0,0) || EDOKUM.POTRODDN:=EDOKUM.TP ?};
   {? _opt
   || {? app_info('web_sesid')<>''
      || EDOKUM.web_efld_opt(web_top_win(),,'mark=1',,'POTRODDN')
      || cur_tab(1,1).efld_opt(cur_win(),'mark=1',EDOKUM,'POTRODDN')
      ?}
   ?}
|| EDOKUM.POTRODDN:=date(0,0,0);
   {? _opt
   || {? app_info('web_sesid')<>''
      || EDOKUM.web_efld_opt(web_top_win(),,'mark=0',,'POTRODDN')
      || cur_tab(1,1).efld_opt(cur_win(),'mark=0',EDOKUM,'POTRODDN')
      ?}
   ?}
?};
1


\wni_aeplace_web
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [RR.xx]
:: OPIS: Po redakcji pola EDOKUM.PLACE - webterm
::----------------------------------------------------------------------------------------------------------------------
exec('env_wt','b_proces');
_dynamic:=exec('get_wt_par','obiegi2','dynamic');
{? _dynamic=1
|| _flds:=web_def_get();
   {? _flds.PLACE='T'
   || {? _flds.POTRODDN=date(0,0,0) & var_pres('TP',_flds)>0 || _flds.POTRODDN:=_flds.TP ?};
      web_def_fld_opt(web_top_win, 'mark=1','POTRODDN');
      web_def_update(,_flds)
   || _flds.POTRODDN:=date(0,0,0);
      web_def_fld_opt(web_top_win, 'mark=0','POTRODDN');
      web_def_update(,_flds)
   ?}
?};
1


\wni_bdsdpotr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla pola EDOKUM.POTRODDN
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.POTRODDN


\wni_spterpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Sprawdzanie wprowadzonego spodziewanego terminu platnosci
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? EDOKUM.TP=date(0,0,0)
|| FUN.info('Nie wprowadzono planowanego terminu płatności.'@); _zwrot:='TP'
?};
_zwrot


\wni_sprdatwyn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Sprawdzanie wypelnienia pola EDOKUM.POTRODDN
::   WY: Akronim pola w przypadku bledu
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? EDOKUM.PLACE='T'
|| {? EDOKUM.POTRODDN=date(0,0,0)
   || FUN.info('Nie wprowadzono daty, od której mogą być tworzone potrącenia z wynagrodzenia.'@); _zwrot:='POTRODDN'
   |? EDOKUM.TYP().ZAPOT & EDOKUM.POTRODDN<EDOKUM.TP
   || FUN.info('Data, od której mogą być tworzone potrącenia z wynagrodzenia\n'@+
               'nie może być mniejsza od planowanego terminu płatności.'@); _zwrot:='POTRODDN'
   ?}
?};
_zwrot


\edokzal_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed obsługą okna wertowania zaliczek i wydatków do delegacji
::   WE: _a - 1 - zaliczki
::            2 - wydatki
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| EDOKUM.web_cntx_load(1);
   EDOK_ZAL.use('edokzl'+(EDOKUM.name()+2));
   EDOK_ZAL.index('WAL');
   {? _a=1
   || EDOK_ZAL.prefix(EDOKUM.ref(),'Z')
   || EDOK_ZAL.prefix(EDOKUM.ref(),'W')
   ?}
|| EDOK_ZAL.index('WAL');
   {? _a=1
   || EDOK_ZAL.prefix(EDOKUM.ref(),'Z')
   || EDOK_ZAL.prefix(EDOKUM.ref(),'W')
   ?};
   {? ~EDOK_ZAL.get() || EDOK_ZAL.first() ?}
?}


\edk_zal_zw_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Wartosc poczatkowa EDOK_ZAL.ZW
::   WY:
::  OLD: \edk_zal_zw_wp/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
OBIEGI.ZW


\edk_zal_kp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Po redagowaniu EDOK_ZAL.KASPRZEL
::  OLD: \edk_zal_kp_ae/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
::wyrzucenie konta jak wyplata w kasie
{? EDOK_ZAL.ZW='Z'
|| {? EDOK_ZAL.KASPRZEL='K'
   || EDOK_ZAL.SKID_RBK:=null;
      EDOK_ZAL.N:='';
      EDOK_ZAL.web_efld_opt('RED_ZWW',,'mark=0, enable=0',EDOK_ZAL,'N')
   || EDOK_ZAL.web_efld_opt('RED_ZWW',,'mark=0, enable=1, editable=1',EDOK_ZAL,'N')
   ?}
?};
~~


\edk_zal_zgodwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: sprawdza czy waluty biezacej zaliczki i rachunku sa zgadne
::   WY: 0 -OK, 1 - brak zgodnosci
::  OLD: \edk_zal_zgodwal/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
(EDOK_ZAL.WAL<>EDOK_ZAL.SKID_RBK().WAL) & (EDOK_ZAL.SKID_RBK().INNWAL='N')


\edk_zal_rbk_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Po redagowaniu EDOK_ZAL.SKID_RBK
::   WY: 1/0 - czy mozna opuscic pole
::  OLD: \edk_zal_rbk_ae/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOK_ZAL.SKID_RBK<>null
|| {? exec('edk_zal_zgodwal','zaliczki')
   || FUN.emsg('Waluta rachunku nie jest zgodna z walutą konta.'@);
      0
   || 1
   ?}
|| 1
?}


\be_win_edok_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed wyświetleniem okna zaliczki
::----------------------------------------------------------------------------------------------------------------------
{? EDOK_ZAL.ZW='Z'
|| {? (EDOK_ZAL.KASPRZEL='P') & (EDOK_ZAL.WAL<>null)
   || EDOK_ZAL.web_efld_init('RED_ZWW',,'mark=0, enable=1, editable=1',EDOK_ZAL,'N')
   || EDOK_ZAL.web_efld_init('RED_ZWW',,'mark=0, enable=0',EDOK_ZAL,'N')
   ?}
?};
1


\ae_edok_zal_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola WAL tabeli EDOK_ZAL
::----------------------------------------------------------------------------------------------------------------------
{? EDOK_ZAL.ZW='Z'
|| {? (EDOK_ZAL.KASPRZEL='P') & (EDOK_ZAL.WAL<>null)
   || {? app_info('web_sesid')<>''
      || EDOK_ZAL.web_efld_opt('RED_ZWW',,'mark=0, enable=1, editable=1',EDOK_ZAL,'N')
      || EDOK_ZAL.efld_opt('RED_Z','mark=0, enable=1, editable=1',EDOK_ZAL,'N')
      ?}
   || {? app_info('web_sesid')<>''
      || EDOK_ZAL.web_efld_opt('RED_ZWW',,'mark=0, enable=0',EDOK_ZAL,'N')
      || EDOK_ZAL.efld_opt('RED_Z','mark=0, enable=0',EDOK_ZAL,'N')
      ?}
   ?}
?};
1


\zaliczka_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na Dołącz dla zaliczek do delegacji
::----------------------------------------------------------------------------------------------------------------------
web_params_set(web_params_get());
exec('env_wt','b_proces');
exec('RB','object');
exec('czytaj','#stalesys',,FINFO);
{? ~FINFO.SLWAL
|| FUN.info('Nie wybrano słownika walut.'@);
   return(0)
?};
EDOKUM.web_cntx_load(1);
EDOKUM.web_cntx_save(1);
{? EDOKUM.ZAM='T'
|| FUN.info('Delegacja zamknięta, nie podlega modyfikacjom.'@);
   return()
?};
OBIEGI.ZW:='Z';
EDOK_ZAL.blank();
EDOK_ZAL.EDOKUM:=EDOKUM.ref();
EDOK_ZAL.ZW:='Z';
exec('be_win_edok_zal','zaliczki');
_form:="web_params_set(web_params_get());
        exec('env_wt','b_proces');
        {? _a='OK'
        || _chk:=exec('edk_zal_ra','zaliczki');
           {? _chk=''
           || EDOK_ZAL.prefix();
              EDOK_ZAL.add();
              EDOK_ZAL.web_eclose();
              EDOKUMD.use('bdiety'+(EDOK_ZAL.name()+2)); EDOKUMD.index('DELEG'); EDOKUMD.prefix();
              EDOKUMD.web_refresh('POZ_DEL','poz_del_zaliczki')
           ?}
        |? _a='ANULUJ'
        ||  EDOK_ZAL.web_eclose()
        ?}";
EDOK_ZAL.web_edit('RED_ZWW','_edok_zalz',,,_form)


\edk_zal_ra
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Weryfikacja danych w oknie zaliczki (EDOK_ZAL)
::   WY: jak dla rekord po
::  OLD: \edk_zal_ra/delegdan.fml
::----------------------------------------------------------------------------------------------------------------------
__CHK.record(EDOK_ZAL,,'KWOTA','WAL','KASPRZEL')


\zaliczka_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na Popraw dla tabeli zaliczek EDOK_ZAL
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.web_cntx_load(1);
EDOKUM.web_cntx_save(1);
{? EDOK_ZAL.EDOKUM().ZAM='T'
|| FUN.info('Delegacja zamknięta, nie podlega modyfikacjom.'@);
   return()
?};
web_params_set(web_params_get());
exec('env_wt','b_proces');
exec('czytaj','#stalesys',,FINFO);
{? ~FINFO.SLWAL
|| FUN.info('Nie wybrano słownika walut.'@);
   return(0)
?};
exec('be_win_edok_zal','zaliczki');
_form:="web_params_set(web_params_get());
        exec('env_wt','b_proces');
        {? _a='OK'
        || _chk:=exec('edk_zal_ra','zaliczki');
           {? _chk=''
           || EDOK_ZAL.put();
              EDOK_ZAL.web_eclose();
              EDOKUMD.use('bdiety'+(EDOK_ZAL.name()+2)); EDOKUMD.index('DELEG'); EDOKUMD.prefix();
              EDOKUMD.web_refresh('POZ_DEL','poz_del_zaliczki')
           ?}
        |? _a='ANULUJ'
        ||  EDOK_ZAL.web_eclose()
        ?}";
EDOK_ZAL.web_edit('RED_ZWW','_edok_zalz',,,_form)


\zaliczka_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyświetla rekord w tabeli zaliczek
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')=''
|| EDOK_ZAL.win_edit('RED_Z'); EDOK_ZAL.display()
|| _form:="EDOK_ZAL.web_eclose()";
   EDOK_ZAL.web_display('RED_ZWWD','_edok_zalz',_form)
?}


\zaliczka_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na Usuń dla tabeli zaliczek EDOK_ZAL
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.use('skid_v'+(EDOK_ZAL.name()+2));
{? EDOK_ZAL.EDOKUM().ZAM='T'
|| FUN.info('Delegacja zamknięta, nie podlega modyfikacjom.'@);
   return()
?};
EDOK_ZAL.web_cntx_save();
_form:="{? _a=1
        || {? EDOK_ZAL.web_cntx_load() || EDOK_ZAL.del() ?};
           EDOKUMD.use('bdiety'+(EDOK_ZAL.name()+2)); EDOKUMD.index('DELEG'); EDOKUMD.prefix();
           EDOKUMD.web_refresh('POZ_DEL','poz_del_zaliczki')
        ?}";
web_ask(_form,'Usunąć bieżącą zaliczkę?',FUN.TYT)


\edok_zal_rbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS:
::----------------------------------------------------------------------------------------------------------------------
exec('RB','object')


\bl_zal_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na wartość początkową w polu EDOK_ZAL.N
::----------------------------------------------------------------------------------------------------------------------
''


\bd_zal_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed wyświetleniem w polu EDOK_ZAL.N
::----------------------------------------------------------------------------------------------------------------------
exec('RB','object'); EDOK_ZAL.N:=RB.get_rbtx(2,EDOK_ZAL.SKID_RBK().N);
''


\f3_zal_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Obsługa F3 w polu EDOK_ZAL.N
::----------------------------------------------------------------------------------------------------------------------
EDOK_ZAL.EDOKUM();
{? EDOKUM.DOSTAWCA
|| EDOKUM.DOSTAWCA()
||
:: jesli nie wpisano osoby do pola DOSTAWCA, to osoba, ktora puscila w obieg
   EDOKOS.cntx_psh();
   EDOKOS.use('skid_y'+(EDOKUM.name()+2));
   EDOKOS.index('SZUK2'); EDOKOS.prefix(EDOKUM.ref(),'W');
   {? EDOKOS.first() || EDOKOS.USERS(); USERS.OSOBA() ?};
   EDOKOS.cntx_pop()
?};
exec('RB','object');
ROZNE.KKBAN:=1; PAR_WYDR.TABAKR:='OSOBA'; PAR_WYDR.REF:=#OSOBA.ref();
RACHBANK.KB_5R_BD:='RACHBANK.KB_5R:=RB.get_rbtx(1,SKID_RBK.ref())';
SKID_RBK.index('TAB');
_TAB_ACR:=REF.FIRMA().SYMBOL+'OSOBA';
SKID_RBK.prefix(null,_TAB_ACR,_TAB_ACR,#OSOBA.ref());
_ref:=RB.getrrban(EDOK_ZAL.N,REF.FIRMA().SYMBOL+'OSOBA',#OSOBA.ref());
{? _ref || SKID_RBK.seek(_ref) ?};
exec('tab_form','obiegi','SKID_RBK','wyb_zal_rbk','zaliczki','bobs_skid_rbk','zaliczki');
SKID_RBK.web_select('SLO_RBOW',,1)


\ae_zal_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola EDOK_ZAL.N
::----------------------------------------------------------------------------------------------------------------------
exec('RB','object');
EDOK_ZAL.EDOKUM();
{? EDOKUM.DOSTAWCA
|| EDOKUM.DOSTAWCA()
||
:: jesli nie wpisano osoby do pola DOSTAWCA, to osoba, ktora puscila w obieg
   EDOKOS.cntx_psh();
   EDOKOS.use('skid_y'+(EDOKUM.name()+2));
   EDOKOS.index('SZUK2'); EDOKOS.prefix(EDOKUM.ref(),'W');
   {? EDOKOS.first() || EDOKOS.USERS(); USERS.OSOBA() ?};
   EDOKOS.cntx_pop()
?};
{? EDOK_ZAL.N<>'' & RB.getrrban(EDOK_ZAL.N,REF.FIRMA().SYMBOL+'OSOBA',#EDOKUM.DOSTAWCA)=null
|| FUN.info('Wskazany rachunek bankowy nie jest rachunkiem osoby %1.'@[EDOKUM.DOSTAWCA().PIERWSZE+' '+OSOBA.NAZWISKO]);
   0
|| SKID_RBK.index('TAB');
   _TAB_ACR:=REF.FIRMA().SYMBOL+'OSOBA';
   SKID_RBK.prefix(null,_TAB_ACR,_TAB_ACR,#OSOBA.ref());
   _ref:=RB.getrrban(EDOK_ZAL.N,REF.FIRMA().SYMBOL+'OSOBA',#OSOBA.ref());
   {? _ref & SKID_RBK.seek(_ref) || EDOK_ZAL.SKID_RBK:=SKID_RBK.ref() ?};
   1
?}


\wyb_zal_rbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wybór rachunku bankowego - webterm w EDOK_ZAL
::----------------------------------------------------------------------------------------------------------------------
EDOK_ZAL.N:=SKID_RBK.N;
EDOK_ZAL.SKID_RBK:=SKID_RBK.ref();
SKID_RBK.web_close();
web_top_fld_update(1,1);
1


\ezal_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Trigger dla add przed i put przed dla EZAL
::----------------------------------------------------------------------------------------------------------------------
_prop:=EZAL.KW_PROP$2; _rozch:=EZAL.ROZCHOD$2;
{? EZAL.ZAM<>'T' & (EZAL.PRZ_P='T' | (_prop>0 & _prop=_rozch))
|| EZAL.DATA_ZAM:=date();
   EZAL.ZAM:='T';
   EZAL.OPERZAM:=OPERATOR.USER
?};
1


\ezal_dsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Wyświetl dla zaliczki
::----------------------------------------------------------------------------------------------------------------------
exec('zal_edit','zaliczki');
EZAL.display();
1


\bobs_edok_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed obsługą tabeli EDOK_ZAL
::   WE: _a - 'Z' - zaliczki
::            'W' - wydatki
::----------------------------------------------------------------------------------------------------------------------
exec('env_wt','b_proces');
exec('czytaj','#stalesys');
exec('RB','object');
OBIEGI.ZW:=_a;
1


\m_dzal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Obszar roboczy Zaliczki pracownicze
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='HBN_PRZ_DZAL';
_params.AKCJA:='Generuj';
_params.UIDREF:=EZAL.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EZAL',EZAL.ref());
_params.PROC_START:='N';
exec('mp_run','#b__box',_params)


\bdsplace
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.14]
:: OPIS: Przed wyświetl dla pola EZAL.PLACE
::----------------------------------------------------------------------------------------------------------------------
{? EZAL.PLACE='T'
|| EZAL.efld_opt(EZAL.win_edit('?'),'mark=1,enable=1',,'POTRODDN')
|| EZAL.efld_opt(EZAL.win_edit('?'),'mark=0,enable=0',,'POTRODDN')
?};
1


\numeruj
::----------------------------------------------------------------------------
::   UTW: AMK [2009]
::  OPIS: Nadanie kolejnego numeru zaliczki (symbol)
::  OLD: \numeruj/skid_zal.fml
::----------------------------------------------------------------------------
_sym:=''; _ref:=EZAL.ref();
EZAL.cntx_psh();
_ndx:=EZAL.ndx_tmp(,1,'FIRMA',,,'SYM',,,'SYM',,);
EZAL.index(_ndx); EZAL.prefix(REF.FIRMA);
_lp:=EZAL.size();
{? -menu_txt='popraw' || _ref:=EZAL.ref() || _lp+=1 ?};
{! |?
   _sym:={? cli_ver()='mbasic'
         || $(date()~1)
         ||
::            (4+USRCONST.ROK().NAZ)
            (4+SSTALE.AR().NAZ)
         ?}+'/'+(('0000000000'+$_lp)+10);
   _dalej:=EZAL.find_key(_sym,_sym);
   {? -menu_txt='popraw' & _dalej & _ref=EZAL.ref() || _dalej:=0 ?};
   {? _dalej || _lp+=1 ?};
   _dalej
!};
EZAL.ndx_drop(_ndx);
EZAL.cntx_pop();
_sym

:Sign Version 2.0 jowisz:1045 2023/09/19 15:38:52 1cfe7c7ec22047047d77b9e5faaae353bbcb0a6f13681d2d174278622ecd183333bffe7b395528ce11e0224ca39e447050f8ea1d19197bc8d74bc9915bdd087a60cb7862321f66f1bbe3818e041f8572decf06331bbb996905893b5cadb67171863de987c077cd78d1944165a99acbaf97915dbf7d91b32ce00e605cd6db30d7
