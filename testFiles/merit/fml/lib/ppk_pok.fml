:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: ppk_pok.fml [12.51]
:: Utworzony: 2019/10/16
:: Systemy: PPK
::======================================================================================================================
:: Zawartosc: Formuły odpowiedzialne za obsługę kwot wpłat uwzględnianych w przychodzie.
::======================================================================================================================


\_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Przed dołączeniem lub poprawieniem wiersza tabeli PPK_POK.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
PPK_POK.KW:=PPK_POK.KW$2;
~~


\_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(PPK_POK,
   $("_a.table(_b,"+$_mode+",,'PPK_POD','R')")
)


\_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli PPK_POK.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_modb','ppk_pok');
exec('_chk','ppk_pok',0)


\_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyzwalacz po dołączeniu wiersza tabeli PPK_POK.
::   WE: _a - zgodne ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: podstawowy warunek dalszego działania
{? ~_a | do_state()<>1 || return() ?};

:: aktualizuj kwotę przychodu do opodatkowania
PPK_POD.cntx_psh();
PPK_POD.prefix();
PPK_POK.PPK_POD();
:: zwiększ o kwotę dodanej wpłaty
PPK_POD.WYL_KW+=PPK_POK.KW;
PPK_POD.put();
PPK_POD.cntx_pop();
~~


\_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli PPK_POK.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_modb','ppk_pok');
exec('_chk','ppk_pok',1)


\_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyzwalacz po poprawieniu wiersza tabeli PPK_POK.
::   WE: _a - zgodne ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: podstawowy warunek dalszego działania
{? ~_a | do_state()<>1 || return() ?};

:: aktualizuj kwotę przychodu do opodatkowania
PPK_POD.cntx_psh();
PPK_POD.prefix();
PPK_POK.PPK_POD();
:: skoryguj o zmianę kwoty wpłaty
{? PPK_POK.KW<>bfld('KW')
|| PPK_POD.WYL_KW+=(PPK_POK.KW-bfld('KW'))
?};
   PPK_POD.put();
PPK_POD.cntx_pop();
~~



\_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli PPK_POK.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
1


\_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyzwalacz po usunięciu wiersza tabeli PPK_POK.
::   WE: _a - zgodne ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: podstawowy warunek dalszego działania
{? ~_a | do_state()<>1 || return() ?};

:: aktualizuj kwotę przychodu do opodatkowania
PPK_POD.cntx_psh();
PPK_POD.prefix();
{? PPK_POD.seek(bfld('PPK_POD'))
:: zmniejsz o kwotę usuniętej wpłaty
|| PPK_POD.WYL_KW-=bfld('KW');
   PPK_POD.put()
?};
PPK_POD.cntx_pop();
~~


\mod_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Przed modyfikacją w okienkach tabeli PPK_POK.
::   WE:
::   WY: 0/1 - nie można zmieniać danych/zmiany są możliwe
::----------------------------------------------------------------------------------------------------------------------
PPK_POD.POD_O=null


\dod_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Przed dołączeniem w okienkach tabeli PPK_POK.
::   WE:
::   WY: 0/1 - nie można dodać rekordu/dołączenie jest możliwe
::----------------------------------------------------------------------------------------------------------------------
exec('mod_b','ppk_pok')


\pop_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Przed poprawieniem w okienkach tabeli PPK_POK.
::   WE:
::   WY: 0/1 - nie można zmieniać rekordu/zmiana jest możliwa
::----------------------------------------------------------------------------------------------------------------------
exec('mod_b','ppk_pok')


\usu_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Przed usunięciem w okienkach tabeli PPK_POK.
::   WE:
::   WY: 0/1 - nie można usuwać rekordu/usunięcie jest możliwe
::----------------------------------------------------------------------------------------------------------------------
exec('mod_b','ppk_pok')


\rek_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Po edycji w okienkach tabeli PPK_POK.
::   WE:
::   WY: wynik testu poprawności danych.
::----------------------------------------------------------------------------------------------------------------------
exec('_chk','ppk_pok',-menu_txt()='popraw')


\wnd_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: "Okienko przed" okienek tabeli PPK_POK.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
R.prefix();
_od:=date(PPK_POD.WYL_R,PPK_POD.WYL_M,0);
R.f_set('RN',,'RN in (:_a)',__RUB.sys_sql(726,_od));
1


\wnd_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: "Okienko po" okienek tabeli PPK_POK.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
R.f_clear();
1


\szukaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyszukuje informację o przychodzie z tytułu konkretnej wpłaty.
::   WE: _a _PPK_POD - wskazanie informacji o przychodach z tytułu wpłat
::       _b INTEGER - numer składnika płacowego
::   WY: wskazanie wiersza tabeli PPK_POK lub null
::UWAGA: poprawność argumentów wywołania nie jest weryfikowana
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_pprz:=_a;
_r_rn:=_b;

_ref:=null;
PPK_POK.cntx_psh();
PPK_POK.index('RN');
PPK_POK.prefix(_pprz);
{? PPK_POK.find_key(_r_rn)
|| _ref:=PPK_POK.ref()
?};
PPK_POK.cntx_pop();

_ref


\zapisz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Dodaje/aktualizuje informację o przychodzie z tytułu konkretnej wpłaty.
::   WE: _a _PPK_POD - wskazanie informacji o przychodach z tytułu wpłat
::       _b INTEGER - numer składnika płacowego
::       _d [REAL] - kwota przychodu, domyślnie 0.00
::   WY: wskazanie tablicy nazwanej zawierającej:
::       REF - wskazanie wiersza tabeli PPK_POK
::       MOD - 0/1 informacja o modyfikacji wiersza (1 gdy dołączono, poprawiono, usunięto)
::UWAGA: poprawność argumentów wywołania nie jest weryfikowana
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_pprz:=_a;
_r_rn:=_b;
_kprz:={? var_pres('_c')=type_of(0) || _c ?};

_ret:=obj_new('REF','MOD');
_ret.MOD:=0;

PPK_POK.cntx_psh();
PPK_POK.prefix();
:: sprawdź, czy dane istnieją
_ret.REF:=exec('szukaj','ppk_pok',_pprz,_r_rn);
:: ewentualne zmiany w PPK_POK (dołączenie, zmiana kwoty, usunięcie)
:: są uwzględniane w wyzwalaczach, które zaktualizują PPK_POD.KW
{? _ret.REF=null
:: utwórz zapis
|| {? _kprz<>0
   || PPK_POK.blank(1);
      PPK_POK.PPK_POD:=_pprz;
      PPK_POK.R:=__RUB.ref(_r_rn);
      PPK_POK.KW:=_kprz;
      {? PPK_POK.add()
      || _ret.REF:=PPK_POK.ref();
         _ret.MOD:=1
      ?}
   ?}
|? PPK_POK.seek(_ret.REF)
:: aktualizuj dane
|| {? _kprz=0
::    usuń zerową kwotę
   || PPK_POK.del();
      _ret.REF:=null;
      _ret.MOD:=1
::    aktualizuj kwotę
   || PPK_POK.KW:=_kprz;
      {? ~PPK_POK.put()
      || _ret.REF:=null
      || _ret.MOD:=1
      ?}
   ?}
?};
PPK_POK.cntx_pop();

_ret

:Sign Version 2.0 jowisz:1048 2020/10/16 15:22:56 a797426506748d87579c98062c7cb684fcb0dd7f9895c869c877c6b83fea32bcf59df165c5f3b78bbf5ac7a0051c481ab1dd61f7c8e5a84b7c88d3e7f50d450c257d3f4b302f021442ca8784eb55f7fd10b7c45776311aaecd3719010ed5957dedae4d2fc20232b07c6e188e275f486b24d0fab9487a15d20c291d447e71aa91
