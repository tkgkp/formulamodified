:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: kontrahent.fml
:: Utworzony: 16.02.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Obsługa kontrahenta
::======================================================================================================================


\kh_dod_ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: podczytanie KH_DOD dla aktualnej firmy i kontrahenta
::   WE:  _a - KH.ref
::        _b - 0-podczytać KH_DOD, 1-podczytać i dodać KH_DOD jeśli nie istniał
::   WY: 1-podczytanie powiodlo sie, 0-wpp
::  OLD: \kh_dod_ini/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=KH.ref() ?} || _a:=KH.ref() ?};
{? var_pres('_b')<>type_of(0) || _b:=1 ?};
KH_DOD.index('KH_DOD'); KH_DOD.prefix(REF.FIRMA,_a);
{? KH_DOD.first()
||
   1
||
   KH_DOD.blank();
   KH_DOD.FIRMA:=REF.FIRMA;
   KH_DOD.KH:=_a;
   {? _b || KH_DOD.add() ?}
?}


\jak_nue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula zwraca NIP UE dla aktualnego kontrahenta - jesli jest jeden lub ''
::  OLD: \jak_nue/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
NIPY.index('SNIP'); NIPY.prefix(KH.ref);
{? _ = 1 || _nipue:=_a || _nipue:='' ?};
{? NIPY.first() & ~NIPY.next() || exec('nip_ue','kontrahent') || _nipue ?}


\nip_ue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Formula ustala symbol NIP UE na podstwie aktualnego rekordu NIPY
::  OLD: \nip_ue/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
NIPY.KRAJ().KOD+' '+NIPY.NIP


\f3_kontr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.60]
:: OPIS: Obsluga na F3 dla pol KH i NIP tabeli DOK i zmiennej PAR_WYDR
::   WE: _a: 1 - F3 w polu DOK.KH,      2 - F3 w polu DOK.NIP,
::           3 - F3 w polu PAR_WYDR.KH, 4 - F3 w polu PAR_WYDR.NIP
::           5 - F3 w polu POZDOK.KH,   6 - F3 w polu POZDOK.NIP
::           7 - F3 w polu D.NIP_UE
::  OLD: \f3_kontr/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=2 & 1+DOK.RVAT().RVAT().KVAT().SYM='_'
|| _n:=0;
   {? KVAT.SYM+1='w'
   || ref_nip:=null;
      NIPY.win_sel(exec('wsel','kontrahent'));
      NIPY.index('SNIP_F'); NIPY.prefix(REF.S_FIRMA);
      fld(~-DOK.NIP);
      {? ~NIPY.find_key((2+DOK.NIP)+exec('niptostr','#string',form(2-DOK.NIP))) || NIPY.first() ?}
   || NIPY.win_edit('RED2');
      NIPY.win_sel('WER2');
      wyp_kh:=1;
      {? DOK.KH<>'' & DOK.NIP=''
      || KH.index('SKR'); KH.prefix(2);
         {? KH.find_key(DOK.KH)
         || NIPY.index('SNIP');  NIPY.prefix();
            NIPY.find_key(KH.ref())
         ?}
      || NIPY.index('SNIP2');
         NIPY.prefix();
         fld(~-DOK.NIP);
         {? ~NIPY.find_key((2+DOK.NIP)+exec('niptostr','#string',form(2-DOK.NIP))) || NIPY.first() ?}
      ?}
   ?};
   _wsel:=KH.mk_sel('Kontrahenci'@,'P',0,'kh_wer3',,,,,'U');
   KH.win_fld(_wsel,,'SKR');
   KH.win_fld(_wsel,,'KOD');
   KH.win_fld(_wsel,,'NAZ',,,40);
   KH.win_fld(_wsel,,'MIASTO',,,15);
   KH.win_fld(_wsel,,'S_VAT');
   KH.win_fld(_wsel,,'S_VAT_D');
   KH.win_fml(_wsel,,'S_VAT',,'ICON_BEFORE',"exec('icona_svat','blp')");
   KH.win_act(_wsel,,'Szukaj');
   KH.win_act(_wsel,,'Kolejność');
   KH.win_dict(_wsel);
   {? NIPY.select(,1) || _n:=exec('nip_ue','kontrahent') ?};
   {? var_pres('ref_nip')>0 || &ref_nip ?};
   {? var_pres('wyp_kh')>0 || &wyp_kh ?};
   NIPY.win_edit('RED');
   _n
|? _a=6 & 1+POZDOK.RVAT().RVAT().KVAT().SYM='_'
|| _n:=0;
   {? KVAT.SYM+1='w'
   || ref_nip:=null;
      NIPY.win_sel(exec('wsel','kontrahent'));
      NIPY.index('SNIP_F');
      NIPY.prefix(REF.S_FIRMA);
      fld(~-POZDOK.NIP);
      {? ~NIPY.find_key((2+POZDOK.NIP)+exec('niptostr','#string',form(2-POZDOK.NIP))) || NIPY.first() ?}
   || NIPY.win_edit('RED2');
      NIPY.win_sel('WER2');
      wyp_kh:=1;
      {? POZDOK.KH<>'' & POZDOK.NIP=''
      || KH.index('SKR'); KH.prefix(2);
         {? KH.find_key(POZDOK.KH)
         || NIPY.index('SNIP');  NIPY.prefix();
            NIPY.find_key(KH.ref())
         ?}
      || NIPY.index('SNIP2');
         NIPY.prefix();
         fld(~-POZDOK.NIP);
         {? ~NIPY.find_key((2+POZDOK.NIP)+exec('niptostr','#string',form(2-POZDOK.NIP))) || NIPY.first() ?}
      ?}
   ?};
   _wsel:=KH.mk_sel('Kontrahenci'@,'P',0,'kh_wer4',,,,,'U');
   KH.win_fld(_wsel,,'SKR');
   KH.win_fld(_wsel,,'KOD');
   KH.win_fld(_wsel,,'NAZ',,,40);
   KH.win_fld(_wsel,,'MIASTO',,,15);
   KH.win_fld(_wsel,,'S_VAT');
   KH.win_fld(_wsel,,'S_VAT_D');
   KH.win_fml(_wsel,,'S_VAT',,'ICON_BEFORE',"exec('icona_svat','blp')");
   KH.win_act(_wsel,,'Szukaj');
   KH.win_act(_wsel,,'Kolejność');
   KH.win_dict(_wsel);
   {? NIPY.select(,1) || _n:=exec('nip_ue','kontrahent') ?};
   {? var_pres('ref_nip')>0 || &ref_nip ?};
   {? var_pres('wyp_kh')>0 || &wyp_kh ?};
   NIPY.win_edit('RED');
   _n
|? _a=7
|| _n:=0;
   ref_nip:=($_b)();
   NIPY.win_sel(exec('wsel1','kontrahent'));
   NIPY.win_edit('RED');
   {? #($_b)()
   || NIPY.index('SNIP');
      NIPY.prefix(($_b)())
   || {? _c
      || NIPY.index('SNIP_F');
         NIPY.prefix(null)
      || NIPY.win_edit('RED2');
         NIPY.index('SNIP2');
         NIPY.prefix()
      ?}
   ?};
   {? ~NIPY.find_key((2+($_d)())+exec('niptostr','#string',form(2-($_d)())))
   || NIPY.first()
   ?};
   {? NIPY.select(,1)
   || _n:=NIPY.SNIP;
::    [rr] jesli brak podanego kontrahenta to przypisuje go z tabeli NIPY
      {? ~(#($_b)()) || ($_b)():=NIPY.KH ?}
   || _n:=~~
   ?};
   {? var_pres('ref_nip')>0 || &ref_nip ?};
   NIPY.win_edit('RED');
   _n
|| wsel:=KH.mk_sel('Kontrahenci'@,'P',0,'kh_wer5',,,,,'U');
   {? _a=1 | _a=3 | _a=5
   || KH.win_fld(wsel,,'SKR');
      KH.win_fld(wsel,,'KOD');
      KH.win_fld(wsel,,'NAZ',,,24);
      KH.win_fld(wsel,,'MIASTO',,,15);
      KH.win_fld(wsel,,'NIP',,,15);
      KH.win_fld(wsel,,'S_VAT');
      KH.win_fld(wsel,,'S_VAT_D');
      KH.win_fml(wsel,,'S_VAT',,'ICON_BEFORE',"exec('icona_svat','blp')");
      KH.index('SKR')
   |? _a=2 | _a=4 | _a=6
   || KH.win_fld(wsel,,'NIP');
      KH.win_fld(wsel,,'SKR');
      KH.win_fld(wsel,,'NAZ',,,25);
      KH.win_fld(wsel,,'MIASTO',,,23);
      KH.win_fld(wsel,,'S_VAT');
      KH.win_fld(wsel,,'S_VAT_D');
      KH.win_fml(wsel,,'S_VAT',,'ICON_BEFORE',"exec('icona_svat','blp')");
      {? +fld()>3 & (fld()*'-')=4
      || _ind:=KH.ndx_tmp('NIP',0,'P',,,'NIP',,);
         KH.index(_ind)
      || KH.index('SNIP')
      ?}
   ?};
   KH.win_act(wsel,,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
   {? _a<>5 & _a<>6
   || {? exec('ps_65','rachunki')='T'
      || KH.win_act(wsel,,'Menu','Ra&chunki bankowe'@@,,,,,,,,,'C');
         KH.win_act(wsel,,'Formuła','Kontrahenta'@@,'#C',,,
            "exec('m_rb_kh','rachunki')",,,,,'K');
         KH.win_act(wsel,,'Formuła','Subkonta'@@,'#C',,,
            "exec('m_rb_skh','rachunki')",,,,,'S')
      || KH.win_act(wsel,,'Formuła','Ra&chunki bankowe'@@,,,,
            "exec('m_rb_kh','rachunki')",,,,,'C')
      ?}
   ?};
   {? (_a=1 & 1+DOK.RVAT().RVAT().KVAT().SYM='_') |
      (_a=5 & 1+POZDOK.RVAT().RVAT().KVAT().SYM='_')
   || _ue:=1;
      KH.win_act(wsel,,'Formuła','Sy&mbole NIP w UE'@@,,,,
         "exec('nipy','nipyue','KH')",,,,,'M');
       KH.win_act(wsel,,'Rekord',,,,"{? KH.TYP='U' || exec('findtmp','#color') ?}")
   || _ue:=0
   ?};
   KH.win_act(wsel,,'Formuła','Sp&rawdź podatnika VAT'@@,,,,
      "exec('chk_kh_in_vat','fks_vat')",,1,
      "exec('bg_kh_in_vat','fks_vat')",
      "exec('ag_kh_in_vat','fks_vat')",'R'
   );
   KH.win_act(wsel,,'Formuła','&Historia kontroli'@@,,,,"exec('hist_chk_nip','kontrahent')",,,,,'H');
   KH.win_act(wsel,,'Szukaj');
   KH.win_act(wsel,,'Formuła','Szukaj po r&achunku bankowym'@@,,,,"exec('szukkhrb','kontrahent')",,,,,'A');
   KH.win_act(wsel,,'Kolejność');
   KH.win_act(wsel,,'Wyświetl',,,,"__KH_MOD:=1; exec('kh_dod_ini','kontrahent'); KH.display(); &__KH_MOD");
   KH.win_edit('RED');
   KH.win_sel(wsel);
   KH.prefix(2,fld());
   _v_kod:={? _a<3 & DOK.WYS<>null
           || DOK.WYS().KOD
           |? _a>4 & DOKUMENT.DLA<>null
           || DOKUMENT.DLA().KOD
           || ''
           ?};
   _v:=0;
   {? KH.first()
   || {!|? {? KH.KOD=_v_kod || _v:=1; 0 || KH.next() ?} !};
      {? _v=0 || KH.first(); _v:=1  ?}
   ?};
   _vv:=1;
   KH.prefix(2);
   {? KH.select(,_v)
   || {? _a=1 | _a=3 | _a=5 || _vv:=KH.SKR
      |? _a=2 | _a=4 | _a=6 || {? (KH.TYP='R' | KH.TYP='I') & KH.NIP='' || _vv:=KH.PESEL || _vv:=KH.NIP ?}
      ?};
      {? _a=1
      || {? DOK.NIP='' & _ue=0 || DOK.NIP:=KH.NIP ?}
      |? _a=2
      || {? DOK.KH=''
         || DOK.KH:=KH.SKR;
            DOK.KH_FULL:=KH.NAZ_P;
            DOK.KH_KRAJ:=KH.KRAJ; DOK.KH_KRISO:=KH.KRAJISO;
            DOK.UL:=KH.UL;
            DOK.MIASTO:=KH.MIASTO;
            DOK.DOM:=KH.DOM;
            DOK.LOKAL:=KH.LOKAL;
            DOK.POCZ:=KH.POCZ;
            DOK.KPOCZ:=KH.KPOCZ
         ?}
      |? _a=5
      || {? POZDOK.NIP='' & _ue=0 || POZDOK.NIP:=KH.NIP ?}
      |? _a=6
      || {? POZDOK.KH='' || POZDOK.KH:=KH.SKR ?}
      ?};
      {? _a<3 & cur_tab(1,1)=DOK
      || {? DOK.HAN=null & __War_f('KH_DOD','HAN',KH.ref) || DOK.HAN:=__War_f('KH_DOD','HAN',KH.ref) ?};
         exec('fdokwys','dok_fks')
      ?}
   ?};
   {? var_pres('_ind')>=0 || KH.ndx_drop(_ind) ?};
   &wsel;
   _vv
?}


\wsel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BL  [8.40]
:: OPIS: Formula tworzy dynamiczne okienko tabeli NIPY
::----------------------------------------------------------------------------------------------------------------------
_wsel:=NIPY.mk_sel('Symbole NIP w UE'@,'P',,'nipy_wer');
NIPY.win_fld(_wsel,,'KRAJ','KOD','SL',,,,'Kraj'@);
NIPY.win_fld(_wsel,,'NIP');
NIPY.win_act(_wsel,,'Rekord',,,,,"exec('chk_nipy','nipyue')");
NIPY.win_act(_wsel,1,'Rekord',,,,,"exec('chk_nipy','nipyue')");
NIPY.win_act(_wsel,,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
NIPY.win_act(_wsel,,'Formuła','Historia kontroli'@@,,,,"exec('hist_chk_nip','kontrahent')",,,,,'H');
NIPY.win_act(_wsel,,'Szukaj');
NIPY.win_act(_wsel,,'Dołącz');
NIPY.win_act(_wsel,1,'Dołącz',,,,,,1);
NIPY.win_act(_wsel,,'Usuń');
NIPY.win_act(_wsel,,'Popraw');
_wsel


\wsel1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BL  [8.40]
:: OPIS: Formula tworzy dynamiczne okienko tabeli NIPY
::  OLD: \wsel1/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
_wsel:=NIPY.mk_sel('Symbole NIP w UE'@,'P',,'nipy_wer1',,,,,'U',);
NIPY.win_fld(_wsel,,'SNIP');
NIPY.win_fld(_wsel,,'KRAJ','KOD','SL',,,,'Kraj'@);
NIPY.win_fld(_wsel,,'NIP');
NIPY.win_fld(_wsel,,'KH','NAZ','NAZ',20,,,'Kontrahent'@);
NIPY.win_act(_wsel,,'Rekord',,,,,"exec('chk_nipy','nipyue')");
NIPY.win_act(_wsel,1,'Rekord',,,,,"exec('chk_nipy','nipyue')");
NIPY.win_act(_wsel,,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
NIPY.win_act(_wsel,,'Dołącz',,,,,"exec('nip_dprz','kontrahent')");
task_attach('ZWS_PAR_KKHR');
NIPY.win_act(_wsel,1,'Dołącz',,,,,"exec('nip_dprz','kontrahent')",1);
task_attach('ZWS_PAR_KKHR');
NIPY.win_act(_wsel,,'Popraw',,,,"exec('nipy_mod_b','nipyue')");
task_attach('ZWS_PAR_KKHR');
NIPY.win_act(_wsel,,'Usuń',,,,"exec('nipy_del_b','nipyue')");
task_attach('ZWS_PAR_KKHR');
NIPY.win_act(_wsel,,'Formuła','Sp&rawdź NIP UE'@@,,,,"exec('chk_nipue','nipyue',NIPY.SNIP)",,,,,'R');
NIPY.win_act(_wsel,,'Szukaj');
NIPY.win_act(_wsel,,'Kolejność');
_wsel


\nip_dprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula dla przed akcja Dolacz w okienku WER2 tabeli NIPY
::  OLD: \nip_dprz/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? _ & _a<>''
|| KH.index('SKR'); KH.prefix(2,{? cur_tab(1,1)=POZDOK || POZDOK.KH || DOK.KH ?});
   KH.first()
?};
1


\szukkhrb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Szukanie kontrahenta po rachunku bankowym
::----------------------------------------------------------------------------------------------------------------------
undefine();
define('RB','','','Prefiks numeru rachunku bankowego'@,50,50);
def_btn('text=%1'['Zapisz'@],'key:F2');
def_btn('text=%1'['Anuluj'@],'key:Esc');
{? def_edit("{? DEFINE.RB='' || FUN.info('Niewypełnione pole.'@); 0 || 1 ?}",
            'Numer rachunku bankowego'@)
|| _rb:=DEFINE.RB; DEFINE.RB:='';
   {! _i:=1..(+_rb) |! {? (1+_rb)<>' ' || DEFINE.RB+=(1+_rb) ?}; _rb:=1-_rb !};
   SKID_RBK.cntx_psh();
   SKID_RBK.index('WEKTOR'); SKID_RBK.prefix('KH',DEFINE.RB);
   {? SKID_RBK.first()
   || KH.cntx_psh();
      KH_RBK:=tab_tmp(1,'KOD','STRING[8]','Kod',
                        'SKR','STRING[10]','Skrót',
                        'N','STRING[50]','Numer rachunku bankowego'@,
                        'NAZ_P','STRING[150]','Nazwa pełna'@,
                        'REF_KH','INTEGER',''
                      );
      {! |?
         {? KH.seek(SKID_RBK.REF,KH.name())
         || KH_RBK.KOD:=KH.KOD;
            KH_RBK.SKR:=KH.SKR;
            KH_RBK.N:=SKID_RBK.N;
            KH_RBK.NAZ_P:=KH.NAZ_P;
            KH_RBK.REF_KH:=#KH.ref();
            KH_RBK.add()
         ?};
         SKID_RBK.next()
      !};
      _wer:=KH_RBK.mk_sel('Kontrahenci z rachunkiem bankowym rozpoczynającym się od znaków "%1"'@[DEFINE.RB],'P',,'wer_kh_rbk',,,
                          {? KH_RBK.size()>25 || 25 || KH_RBK.size() ?});
      KH_RBK.win_fld(_wer,,'KOD');
      KH_RBK.win_fld(_wer,,'SKR');
      KH_RBK.win_fld(_wer,,'NAZ_P',,,50);
      KH_RBK.win_fld(_wer,,'N');
      KH_RBK.win_act(_wer,0,'Formuła','Wczytaj'@@,,'Wczytanie zaznaczonego kontrahenta'@,"sel_exit()",,1,,,,'W');
      KH_RBK.win_act(_wer,0,'Wyświetl',,,'Dane kontrahenta'@,"KH.cntx_psh();
                                                             {? KH.seek(KH_RBK.REF_KH,KH.name())
                                                             || exec('kh_dod_ini','kontrahent');
                                                                KH.win_edit('RED');
                                                                KH.display()
                                                             ?};
                                                             KH.cntx_pop()");
      KH_RBK.win_act(_wer,0,'Kolejność');
      KH_RBK.win_sel(_wer);
      KH.cntx_pop();
      {? KH_RBK.size()=1 | (KH.size()>1 & KH_RBK.select())
      || KH.seek(KH_RBK.REF_KH,KH.name())
      ?};
      VAR_DEL.delete('KH_RBK')
   || FUN.info('Nie znaleziono kontrahenta, który ma zdefiniowany rachunek bankowy\n'
               'rozpoczynający się od znaków: \n%1'@[DEFINE.RB])
   ?};
   SKID_RBK.cntx_pop()
?};
undefine()


\ustaw_okna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Konfiguracja okna słownika kontrahentów
::----------------------------------------------------------------------------------------------------------------------
KH.win_dict('WER');
KH.btn_sopt('WER','aa4100589000000','default=0');
KH.actions('WER','WM:M');
~~


\be_splkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: przed redakcja sposobu platnosci dokumentu ksiegowego i kontrahenta
::   WE: [_a] - [0]-kontrahenta 1-dokumentu
::   WY: czy mozna redagowac
::  OLD: \be_splkh/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
_wyn:=0;
{? XINFO.SLP<>null
|| SLO.win_edit('RED'); XINFO.SLP();
   _wyn:=1
|| FUN.info('W systemie brak zdefiniowanego słownika sposobów płatności.'@)
?};
_wyn


\nip2tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Przepisanie zawartości tabeli NIPY (dla KH) do tabeli TYM_NIP
::       lub wyszukanie nipue _d kontrahenta _c w tabeli NIPY i dodanie do tabeli TMP_NIP
::   WE: [_a - czy przepisać do tabeli TYM_NIP ]
::       [_b - ustawić bufor KH na podstwie SLO]
::       [_c - KH.ref]
::       [_d - snip]
::  OLD: \nip2tmp/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TYM_NIP')<100
|| TYM_NIP:=tab_tmp(2,
      'KRAJ','STRING[2]','Kraj',
      'NIP','STRING[15]','Numer identyfikacji',
      'DEFAULT','STRING[1]','Domyślny',
      'REFKH','INTEGER','Ref kontrahenta')
|| TYM_NIP.erase()
?};
{? _>0
|| {? _=4
   || NIPY.cntx_psh();
      NIPY.index('SNIP');
      NIPY.prefix(_c,_d,);
      {? NIPY.first()
      ||
         TYM_NIP.KRAJ:=NIPY.KRAJ().KOD;
         TYM_NIP.NIP:=NIPY.NIP;
         TYM_NIP.DEFAULT:=NIPY.DEFAULT;
         TYM_NIP.add()
      ?};
      NIPY.cntx_pop()
   || {? _=2
      || KH.index('KOD'); KH.prefix(2);
         KH.find_key(SLO.KOD)
      ?};
      NIPY.index('SNIP');
      NIPY.prefix(KH.ref());
      {? NIPY.first()
      || SLO.cntx_psh();
         SLUAPPL.cntx_psh();
         {!|? TYM_NIP.blank();
              TYM_NIP.KRAJ:=NIPY.KRAJ().KOD;
              TYM_NIP.NIP:=NIPY.NIP;
              TYM_NIP.REFKH:=#NIPY.KH;
              TYM_NIP.DEFAULT:=NIPY.DEFAULT;
              TYM_NIP.add();
              NIPY.next()
         !};
         SLO.cntx_pop();
         SLUAPPL.cntx_pop()
      ?}
   ?}
?}


\ae_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: sprawdzenie po redakcji kontrahenta czy nie jest zablokowany na podstawie parametru w systemie KSTE.B
::   WE: [_a] - 1-komunikowac i nie blokowac, 0-blokowac (domyslnie)
::       [_b] - fld() - KH.ref
::       [_c] - 0/1 - clear
::   WY: 1/0
::  OLD: \ae_kh/firma.fml
::       \porez_kh/rezerw.fml
::       \po_kontr/zk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=0 ?}  || _a:=0  ?};
{? _>=2  || {? type_of(_b)<>7 || _b:=fld() ?}  || _b:=fld()  ?};
_clear:={? var_pres('_c')=type_of(0) || _c || 1 ?};
_wyn:=_a;
{? _b<>null
||
   _z_zk:=0;
   {? ~type_of(cur_tab())
   || 0
   |? 5+cur_tab.name()=5+ND.name(1)
   || exec('list_zam','magdok_wspolne',ND.ref,0); _z_zk:=__list_zk.first()
   |? 5+cur_tab.name()=5+FAKS.name(1)
   || exec('dok_maga','powdok',0); _z_zk:=__list_zk.first();
      {? _z_zk=0
      ||
         FAPOW.cntx_psh();
         FAPOW.index('FAKS');
         FAPOW.prefix($FAKS.ref());
         _loop:=FAPOW.first();
         {!
         |? _loop
         |!
            _zk_n:=ref_tab(FAPOW.ZK_N);
            {? type_of(_zk_n)=type_of(ZK_N) & _zk_n=ZK_N || _z_zk:=2 ?};
            _loop:=_z_zk=0 & FAPOW.next()
         !};
         FAPOW.cntx_pop()
      ?}
   |? 5+cur_tab.name()=5+UM.name(1)
   || BEER.KH:=UM.KH
   ?};
   _kh_dod_b:=exec('kh_dod_b','kontrahent','ae_kh',_b,_z_zk);
   {? _kh_dod_b='B' | _kh_dod_b='W'
   ||
      {? (5+cur_tab.name()='nagdo' & ND.TYP().P='N')
         | (5+cur_tab.name()='faktu' & FAKS.SZ='S')
         | (5+cur_tab.name()<>'nagdo' & 5+cur_tab.name()<>'faktu')
      ||
         ZDARZ.cntx_psh;
         ZDARZ.index('ZDTKH'); ZDARZ.prefix('B',_b);
         {? ZDARZ.first
         || _blk:={? _kh_dod_b='W' || 'warunkowo'@
                  |? _kh_dod_b='B' || 'bezwarunkowo'@
                  || ''
                  ?};
            _kom:='Kontrahent zablokowany %1.\n\nData i czas: %2, %3.\n\n'
                  'Powód: %4.\n\nOperator: %5.'@[_blk,form(ZDARZ.DATA),form(ZDARZ.CZAS),ZDARZ.KR_OP,ZDARZ.OPER];
            _pyt:='Pokazać szczegóły?'@;
            {? {? ~do_state()
               || FUN.ask(_kom+'.\n\n'+_pyt)
               || msg(_kom);
                  0
               ?}
            ||
               exec('gen_tmp2','rozrach');
               exec('add_tmp2','kontrahent',0);
               TAB_MEM2.win_sel(sel_mem2);
               TAB_MEM2.select;
               exec('del_tmp','rozrach')
            ?};
            {? _kh_dod_b='W'
            || _wyn:=1
            ?}
         ?};
         ZDARZ.cntx_pop
      ||
         _wyn:=1
      ?}
   ||
      _wyn:=1
   ?}
||
::   FUN.info('Niewypełnione pole.'@);
   _wyn:=1
?};
{? _clear
||
   exec('clr_nip','kontrahent');
   exec('clr_odb','kontrahent');
   exec('clr_msc','kontrahent')
?};
_wyn


\clr_nip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: zeruje pole NIP_UE jesli nastapila zmiana kontrahenta w polu
::       wymagany akronim pola KONTRAHENT -> KH
::  OLD: \clr_nip/firma.fml
::----------------------------------------------------------------------------------------------------------------------
_nip_ue:='';
{? type_of(cur_tab) & 5+cur_tab.name()='zknag' || _nip_ue:='NIP_UE' ?};
{? _nip_ue<>''
||
   _snip:=STR.gsub(($('cur_tab.'+_nip_ue))(),' ','');
   NIPY.cntx_psh();
   NIPY.index('SNIP');
   NIPY.prefix(cur_tab.KH,_snip);
   {? ~NIPY.first()
   || INTRAST.NIP:=($('cur_tab.'+_nip_ue))():=''
   ?};
   NIPY.cntx_pop()
?}


\clr_odb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: zeruje pole ODBIORCA jesli nastapila zmiana kontrahenta w polu
::       wymagany akronim pola KONTRAHENT -> KH
::  OLD: \clr_odb/firma.fml
::----------------------------------------------------------------------------------------------------------------------
_kh_odb:='';
{? ~type_of(cur_tab)        || _kh_odb:=''
|? 5+cur_tab.name()='zknag' || _kh_odb:='ODB'
|? 5+cur_tab.name()='faktu' || _kh_odb:='KH_ODB'
|? 5+cur_tab.name()='nagdo' || _kh_odb:='KH_ODB'
|? 5+cur_tab.name()='ofert' || _kh_odb:='ODB'
|? 5+cur_tab.name()='umowa' || _kh_odb:='KH_ODB'
?};
{? _kh_odb<>'' & cur_tab.KH<>($('cur_tab.'+_kh_odb+'().KH'))()
|| ($('cur_tab.'+_kh_odb))():=null
?}


\clr_msc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: zeruje pole miejsce dostawy jesli nastapila zmiana kontrahenta w polu
::       wymagany akronim pola KONTRAHENT -> KH
::       UWAGA - pomijam tylko dla tab. FAKS
::  OLD: \clr_msc/firma.fml
::----------------------------------------------------------------------------------------------------------------------
_kh_msc:='';
{? ~type_of(cur_tab)        || _kh_msc:=''
|? 5+cur_tab.name()='zknag' || _kh_msc:='KH_MSC'
|? 5+cur_tab.name()='zdnag' || _kh_msc:='KH_MSC'
|? 5+cur_tab.name()='nagdo' || _kh_msc:='KH_MSC'
?};
{? _kh_msc<>''
 & cur_tab<>ZD_NAG
 & {? cur_tab=ZK_N || ZK_N.TR_ZEWN=null() | ~ZK_N.TR_ZEWN().WYB_MSC || 1 ?}
 & cur_tab.KH<>($('cur_tab.'+_kh_msc+'().KH'))()
|| ($('cur_tab.'+_kh_msc))():=null
?}


\pw_uenip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem pola INTRAST.NIP
::  OLD: \pw_uenip/ist02.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' | -(1+cur_tab.name)='f'
||
   {? FAKS.WHERE<>'N' & FAKS.T().UE<>'T' & FAKS.NIP_UE=''
   ||
      INTRAST.NIP:=''
   ||
      INTRAST.NIP:=FAKS.NIP_UE
   ?}

|? -(1+cur_tab.name)='n'
||
   {? ND.TYP().UE<>'T' & ND.NIP_UE=''
   ||
      INTRAST.NIP:=''
   ||
      INTRAST.NIP:=ND.NIP_UE
   ?}
|? -(2+cur_tab.name)='zk'
||
   {? ZK_N.NIP_UE='' & (ZK_N.TR=null() | ZK_N.TR().UE<>'T') &
      (ZK_N.T().TYPYDOK=null() | ZK_N.T().TYPYDOK().UE<>'T')
   ||
      INTRAST.NIP:=''
   ||
      INTRAST.NIP:=ZK_N.NIP_UE
   ?}
|? -(5+cur_tab.name)='zdnag'
||
   {? ZD_NAG.NIP_UE='' & (ZD_NAG.T().TYPYDOK=null() | ZD_NAG.T().TYPYDOK().UE<>'T')
   ||
      INTRAST.NIP:=''
   ||
      INTRAST.NIP:=ZD_NAG.NIP_UE
   ?}
|? -(5+cur_tab.name)='zdptn'
||
   {? ZDP_NAG.NIP_UE=''
   ||
      INTRAST.NIP:=''
   ||
      INTRAST.NIP:=ZDP_NAG.NIP_UE
   ?}
?};
''


\be_uenip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja INTRAST.NIP - stara wersja
::   WY: 1-dozwolona redakcja, 0-wpp
::  OLD: \be_uenip/ist02.fml
::----------------------------------------------------------------------------------------------------------------------
INTRAST.NIPBE:=INTRAST.NIP;
{? cur_tab()=FAKS
:: korekta zbiorcza z wystawionymi korektami cząstkowymi
|| {? FAKS.WHERE='N' | (FAKS.SZ='S' & FAKS.T().KOR='T' & FAKS.T().HIS='N') |
      (FAKS.T().UE<>'T' & FAKS.KH().TYP<>'U')
   || 0
   || exec('faks_fld_czy_ed','faktury_nag')
   ?}
|? cur_tab()=ND
|| {? ND.TYP().UE<>'T' & ND.KH().TYP<>'U'
   || 0
   || 1
   ?}
|? cur_tab()=ZD_NAG
|| {? (ZD_NAG.T().TYPYDOK=null() | ZD_NAG.T().TYPYDOK().UE<>'T') & ZD_NAG.KH().TYP<>'U'
   || 0
   || 1
   ?}
|? cur_tab()=ZK_N
|| {? (ZK_N.TR=null() | ZK_N.TR().UE<>'T') & (ZK_N.T().TYPYDOK=null() | ZK_N.T().TYPYDOK().UE<>'T') &
      ZK_N.KH().TYP<>'U'
   || 0
   || 1
   ?}
|| 1
?}


\ae_uenip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: formula po wypełnieniu pola nip ue na fakturze i na dokumencie sprzedazy
::   WY: zwraca czy opuscic redakcje pola czy nie
::  OLD: \ae_uenip/ist02.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_red_sym:=1;
{? -(1+cur_tab.name)='f'
||
   {? (_wyn:=exec('po_nipUE','kontrahent'))
   ||
      FAKS.NIP_UE:=KODSLU.NIP_UE:=INTRAST.NIP:={? INTRAST.NIP='' || '' || exec('nip_ue','kontrahent') ?};
::    intrastat
      _kraj:=2+FAKS.NIP_UE;
      {? _kraj='PL' || _kraj:='' ?};
      {? _kraj<>'' & exec('find_sl','intrastat','049',_kraj)<>0  & INTRAST.NIPBE<>FAKS.NIP_UE
      || {? FAKS.IST_TYP<>'' || FAKS.KPW:=_kraj ?}
      ?};
      _wyn:=params_exec('faks_fld_fill','faktury_nag1','NIP_UE');
      {? _wyn
      ||
         exec('faks_win_edit_btn_opt','faktury_nag');
         exec('set_efld_opt','faktury_nag')
      ?}
   ?};
   {? _wyn
   ||
::    opcje przycisków
      exec('faks_win_edit_btn_opt','faktury_nag')
   ?}

|? -(1+cur_tab.name)='n'
||
   {? (_wyn:=exec('po_nipUE','kontrahent'))
   ||
      ND.NIP_UE:={? INTRAST.NIP='' || '' || exec('nip_ue','kontrahent') ?};
::    intrastat
      _kraj:=2+ND.NIP_UE;
      {? _kraj='PL' || _kraj:='' ?};
      {? _kraj<>'' & exec('find_sl','intrastat','049',_kraj)<>0  & INTRAST.NIPBE<>ND.NIP_UE
      || {? ND.IST_TYP<>'' || ND.KPW:=_kraj ?}
      ?}
   ?}
|? -(1+cur_tab.name)='z'
||
   {? (_wyn:=exec('po_nipUE','kontrahent'))
   ||
      {? -(2+cur_tab.name)='zk'
      || ZK_N.NIP_UE:={? INTRAST.NIP='' || '' || exec('nip_ue','kontrahent') ?};
::       opcje przycisków
         exec('zknag_win_edit_btn_opt','zamsiw_nag')
      |? -(5+cur_tab.name)='zdnag'
      || ZD_NAG.NIP_UE:={? INTRAST.NIP='' || '' || exec('nip_ue','kontrahent') ?}
      |? -(5+cur_tab.name)='zdptn'
      || ZDP_NAG.NIP_UE:={? INTRAST.NIP='' || '' || exec('nip_ue','kontrahent') ?}
      ?}
   ?}
?};
_wyn


\f3_khnip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: wybor NIP UE dla tabel FAKS, ND, ZK_N, ZD_NAG
::  OLD: \f3_khnip/ist02.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=~~;

NIPY.win_edit('RED');

{? 1+cur_tab.name='f'
||
   {? FAKS.KH<>null
   || {? FAKS.T().PAR='T'
      || FUN.info('Paragon nie ma ustawionych podpowiedzi dla pola NIP / NIP UE.'@)
      || _return:=exec('f3_kontr','kontrahent',7,'FAKS.KH',null,'INTRAST.NIP')
      ?}
   || FUN.info('Należy podać kontrahenta.'@)
   ?}
|? 1+cur_tab.name='n'
||
   {? ND.KH<>null
   || _return:=exec('f3_kontr','kontrahent',7,'ND.KH',null,'INTRAST.NIP')
   || FUN.info('Należy podać kontrahenta.'@)
   ?}
|? 2+cur_tab.name='zk'
||
   {? ZK_N.KH<>null
   || _return:=exec('f3_kontr','kontrahent',7,'ZK_N.KH',null,'INTRAST.NIP')
   || FUN.info('Należy podać kontrahenta.'@)
   ?}
|? 5+cur_tab.name='zdnag'
||
   {? ZD_NAG.KH<>null
   || _return:=exec('f3_kontr','kontrahent',7,'ZD_NAG.KH',null,'INTRAST.NIP')
   || FUN.info('Należy podać kontrahenta.'@)
   ?}
|? 5+cur_tab.name='zdptn'
||
   {? ZDP_NAG.KH<>null
   || _return:=exec('f3_kontr','kontrahent',7,'ZDP_NAG.KH',null,'INTRAST.NIP')
   || FUN.info('Należy podać kontrahenta.'@)
   ?}
|? 4+cur_tab.name='doku'
||
   {? DOK.WYS<>null
   || _return:=exec('f3_kontr','kontrahent',7,
      'exec(\'FindInSet\',\'#table\',\'KH\',\'KOD1\',DOK.WYS().KOD)',null,'INTRAST.NIP')
   || FUN.info('Należy podać kontrahenta.'@)
   ?}
?};

_return


\po_nipUE
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BL [8.40]
:: OPIS: po redakcji pola stringowego zawierajcego NIP UE
::  OLD: \po_nipUE/ist02.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=0;

{? -(1+cur_tab.name)='f'
||
   _nip_ue:='FAKS.NIP_UE';
   _kh:='FAKS.KH';
   _spr:=FAKS.T().UE='T'
|? -(1+cur_tab.name)='n'
||
   _nip_ue:='ND.NIP_UE';
   _kh:='ND.KH';
   _spr:=ND.TYP().UE='T'
|? -(2+cur_tab.name)='zk'
||
   _nip_ue:='ZK_N.NIP_UE';
   _kh:='ZK_N.KH';
   _spr:=0
|? -(5+cur_tab.name)='zdnag'
||
   _nip_ue:='ZD_NAG.NIP_UE';
   _kh:='ZD_NAG.KH';
   _spr:=0
|? -(5+cur_tab.name)='zdptn'
|| _nip_ue:='ZDP_NAG.NIP_UE';
   _kh:='ZDP_NAG.KH';
   _spr:=0
||
   _nip_ue:='ND.NIP_UE';
   _kh:='ND.KH';
   _spr:=0
?};

{? fld='' & _spr
||
   ($_nip_ue)():='';
   {? ($_kh)()<>null
   ||
      NIPY.index('SNIP');
      NIPY.prefix(($_kh)());
      {? NIPY.first()
      ||
         {? NIPY.next()
         || {? exec('f3_khnip','kontrahent')<>~~ || fld(exec('nip_ue','kontrahent')) ?}
         || {? FUN.ask('Podpowiedzieć NIP UE?'@) || fld(NIPY.SNIP) ?}
         ?};
         _return:=1
      ||
         _return:=1
      ?}
   || _return:=1
   ?}
|? fld<>''
||
   {? ($_kh)()=null
   ||
      FUN.info('Na dokumencie brak kontrahenta\n'
       'Przed wybraniem NIP-u należy podać kod kontrahenta.'@);
      INTRAST.NIP:='';
      _return:=1
   ||
      _snip:={? (1+(2-fld))=' ' || (2+fld)+exec('niptostr','#string',(3-fld)) || fld ?};
      NIPY.index('SNIP');
      NIPY.prefix(($_kh)(),_snip);
      {? NIPY.first()
      ||
         {? NIPY.next
         || {? exec('f3_khnip','kontrahent')<>~~ || fld(exec('nip_ue','kontrahent')) ?}
         || fld(NIPY.SNIP)
         ?};
         {? fld<>'' || _return:=1 ?}
      ||
         FUN.info('Niezgodność symbolu NIP z danymi kontrahenta.\n'
          'Można skorzystać ze słownika (klawisz F3).'@)
      ?}
   ?}
|| _return:=1
?};

_return


\kh_o_kop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: kopiowanie kontrahenta do odbiorcy/kopiowanie kontrahenta do grupy
::   WE: [_a]- 0(domyslnie) odbiorca 1-grupa
::       [_b]- 0(domyślnie) bez powiązania do KH 1-z powiązaniem do KH
::  OLD: \kh_o_kop/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_czy:=1;
{? ~_a
|| {? _b
   || _czy:=FUN.choice('Czy utworzyć odbiorcę (odbiorców) powiązanych z kartoteką kontrahentów?'@,1,
            'Z odbiorem dok. elektron.'@,'Bez odbioru dok. elektron.'@)
   || _czy:=FUN.ask('Czy utworzyć odbiorcę (odbiorców) na podstawie danych z kartoteki kontrahentów?'@)
   ?}
?};
{? _czy
||
   KH.cntx_psh();
   VAR_DEL.delete('ref_kh');
   ref_kh:={? _a || GRKH.ref() || BEER.KH ?};
   _win_sel:=KH.mk_sel('Kartoteka kontrahentów'@,'P',,'kh_sel_grp'+$_a,,,,,'U');
   KH.win_fld(_win_sel,,'KOD',,,8,,1,'Kod'@);
   KH.win_fld(_win_sel,,'SKR',,,10,,1,'Skrót'@);
   KH.win_fld(_win_sel,,'NAZ',,,60,,1,'Nazwa'@);
   {? ~_a
   || {? _b
      || {? _czy=2
         || _fb:="exec('akckhkop','kontrahent',1,0)"
         || _fb:="exec('akckhkop','kontrahent',1,1)"
         ?}
      || _fb:="exec('akckhkop','kontrahent')"
      ?};
      KH.win_act(_win_sel,0,'Formuła','Wybierz'@@,,,_fb,,1,1,_fb,,'A')
   || _fb:="exec('akckhkop','kontrahent')";
      KH.win_act(_win_sel,0,'Formuła','Wybierz'@@,,,_fb,,1,1,_fb,,'A');
      KH.win_act(_win_sel,0,'Rekord',,,,"KH.GRKH=ref_kh")
   ?};
   KH.win_act(_win_sel,0,'Szukaj');
   KH.win_act(_win_sel,0,'Kolejność');
   KH.win_sel(_win_sel);
   KH.index('KOD');
   KH.prefix(2);
   {? ~_a || KH.seek(ref_kh) ?};
   KH.select(,1);
   VAR_DEL.delete('ref_kh');
   KH.cntx_pop()
?};
1


\akckhkop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: akceptacja wyboru zaznaczenia
::   WE: [_a] - 0(domyślnie) bez powiązania do KH 1-z powiązaniem do KH
::       [_b] - tylko dla _a=1: bez odbioru mailem dokumentów sprzedaży (domyślnie) 1 - z odbiorem
::  OLD: \akckhkop/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

{? ~_a
|| _b:=0
?};

_ref:=KH_ODB.ref();
KH_ODB.cntx_psh();
KH_ODB.index('KH_ODB');
KH_ODB.prefix();

_tab:=KH.sel_aget(); KH.sel_adel();
{? _tab.size()
||
:: zaznaczone rekordy z tabeli KH
   {? _tab.first()
   || {!
      |? {? (KH.clear(); KH.seek(_tab.REF,))
         ||
            _kh_lnk_gv:=exec('kh_grvat_szuk','kontrahent',KH.ref(),1);
            _put:=KH_ODB.find_key(BEER.KH,KH.KOD,);
            KH_ODB.blank();
            KH_ODB.SKR:=KH.SKR;
            KH_ODB.NAZ:=KH.NAZ_P;
            KH_ODB.KRAJ:=KH.KRAJ;
            KH_ODB.KRAJISO:=KH.KRAJISO;
            KH_ODB.MIASTO:=KH.MIASTO;
            KH_ODB.UL:=KH.UL;
            KH_ODB.DOM:=KH.DOM;
            KH_ODB.LOKAL:=KH.LOKAL;
            KH_ODB.POCZ:=KH.POCZ;
            KH_ODB.KPOCZ:=KH.KPOCZ;
            KH_ODB.NRD:=KH.SN_DT;
            KH_ODB.U:=KH.U;
            KH_ODB.GLN:=KH.GLN;
            KH_ODB.EM:=KH.EM;
            {? _b & KH_ODB.EM<>''
            || KH_ODB.FV_EM:='T'
            || KH_ODB.FV_EM:='N'
            ?};
            KH_ODB.KH:=ref_kh;
            KH_ODB.OBS:=KH.OBS;
            KH_ODB.NIP:=KH.NIP;
            KH_ODB.SNIP:=KH.SNIP;
            KH_ODB.NRD:=KH.SN_DT;
            {? _a
            || KH_ODB.KH_LNK:=KH.ref();
               {? exec('upgrade2325_jst01','zbl')
               || KH_ODB.ID_WEW:=KH.ID_WEW
               ?};
               {? KH.GRVAT='T' | (_kh_lnk_gv<>null() & _kh_lnk_gv<>ref_kh)
               || KH_ODB.JST:='N'
               || KH_ODB.JST:=exec('jst_blank','kontrahent')
               ?}
            || KH_ODB.KH_LNK:=null()
            ?};
            {? _put=0 & ~KH_ODB.add(1)
            || FUN.info('Aby dodać nowego odbiorcę poprzedni musi\nmieć wypełniony kod.'@)
            || KH_ODB.KOD:=
                  {? _a
                  || KH.KOD
                  || _kod:=Plugin.run('KONTRAH_T_ODB_001');
                     {? type_of(_kod)=type_of('') & _kod<>''
                      & exec('FindInSet','#table','KH_ODB','KH_ODB',_kod,BEER.KH,,1,,null())=null()
                     || KH_ODB.KOD:=_kod
                     || exec('khodbkod','kontrahent',ref_kh)
                     ?}
                  ?};
               {? KH_ODB.put(1)
               || _ref:=KH_ODB.ref()
               ?}
            ?}
         ?};
         _tab.next()
      !}
   ?}
||
:: dany rekord z tabeli KH
   _kh_lnk_gv:=exec('kh_grvat_szuk','kontrahent',KH.ref(),1);
   _put:=KH_ODB.find_key(BEER.KH,KH.KOD,);
   KH_ODB.blank();
   KH_ODB.SKR:=KH.SKR;
   KH_ODB.NAZ:=KH.NAZ_P;
   KH_ODB.KRAJ:=KH.KRAJ;
   KH_ODB.KRAJISO:=KH.KRAJISO;
   KH_ODB.MIASTO:=KH.MIASTO;
   KH_ODB.UL:=KH.UL;
   KH_ODB.DOM:=KH.DOM;
   KH_ODB.LOKAL:=KH.LOKAL;
   KH_ODB.POCZ:=KH.POCZ;
   KH_ODB.KPOCZ:=KH.KPOCZ;
   KH_ODB.NRD:=KH.SN_DT;
   KH_ODB.U:=KH.U;
   KH_ODB.GLN:=KH.GLN;
   KH_ODB.EM:=KH.EM;
   {? _b & KH_ODB.EM<>''
   || KH_ODB.FV_EM:='T'
   || KH_ODB.FV_EM:='N'
   ?};
   KH_ODB.KH:=ref_kh;
   KH_ODB.OBS:=KH.OBS;
   KH_ODB.NIP:=KH.NIP;
   KH_ODB.SNIP:=KH.SNIP;
   KH_ODB.NRD:=KH.SN_DT;
   {? _a
   || KH_ODB.KH_LNK:=KH.ref();
      {? exec('upgrade2325_jst01','zbl')
      || KH_ODB.ID_WEW:=KH.ID_WEW
      ?};
      {? KH.GRVAT='T' | (_kh_lnk_gv<>null() & _kh_lnk_gv<>ref_kh)
      || KH_ODB.JST:='N'
      || KH_ODB.JST:=exec('jst_blank','kontrahent')
      ?}
   || KH_ODB.KH_LNK:=null()
   ?};
   {? _put=0 & ~KH_ODB.add(1)
   || FUN.info('Aby dodać nowego odbiorcę poprzedni musi\nmieć wypełniony kod.'@)
   |? _put=1 & ~FUN.ask('Odbiorca o kodzie %1 już istnieje.\nJego dane zostaną zaktualizowane.\nCzy kontynuować?'@[
         KH.KOD])
   || ~~
   || KH_ODB.KOD:=
         {? _a
         || KH.KOD
         || _kod:=Plugin.run('KONTRAH_T_ODB_001');
            {? type_of(_kod)=type_of('') & _kod<>''
             & exec('FindInSet','#table','KH_ODB','KH_ODB',_kod,BEER.KH,,1,,null())=null()
            || KH_ODB.KOD:=_kod
            || exec('khodbkod','kontrahent',ref_kh)
            ?}
         ?};
      {? KH_ODB.put(1)
      || _ref:=KH_ODB.ref()
      ?}
   ?}
?};
KH_ODB.cntx_pop();
{? KH_ODB.f_active() || KH_ODB.f_rfresh(); KH_ODB.f_seek(_ref) || KH_ODB.seek(_ref) ?};
sel_exit()


\akckhkog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: akceptacja wyboru zaznaczenia
::  OLD: \akckhkog/firma.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=KH.sel_aget(); KH.sel_adel();
{? _tab.size()
||
:: zaznaczone rekordy z tabeli KH
   {? _tab.first()
   || {!
      |? {? (KH.clear(); KH.seek(_tab.REF,))
         || KH.GRKH:=ref_kh;
            exec('kh_mod','kontrahent');
            KH.put
         ?};
         _tab.next()
      !}
   ?}
||
:: dany rekord z tabeli KH
   KH.GRKH:=ref_kh;
   exec('kh_mod','kontrahent');
   KH.put
?};
sel_exit()


\khodbkod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdza istnienie kodu w tabeli KH_ODB
::   WE: _a - ref kontrahenta
::   WY: zwraca unikalny kod KH_ODB - kolejny w ramach kontrahenta
::  OLD: \khodbkod/firma.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
KH_ODB.cntx_psh();
KH_ODB.index('KH_ODB');
_i:=0;
{!
|? _i+=1;
   KH_ODB.prefix(_a);
   {? ~KH_ODB.find_key(form(_i,-8,,'99'),form(_i,-8,,'99')) || _wyn:=form(_i,-8,,'99'); 0 || _i<10000000 ?}
!};
KH_ODB.cntx_pop();
_wyn


\kh_osob_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: zwraca imie+' '+nazwisko domyslnej osoby kontaktowej kontrahenta _a
::   WE: _a-KH.ref
::  OLD: \kh_osob_default/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
KH_OSOB.cntx_psh;
KH_OSOB.index('KH'); KH_OSOB.prefix(_a);
{? KH_OSOB.find_tab(0,'D',,'=','T')
||
   _wyn:=KH_OSOB.IMIE+' '+KH_OSOB.NAZWISKO
?};
KH_OSOB.cntx_pop;
_wyn


\filtr_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2008]
:: OPIS: przygotowuje liste kontrahentow
::   WE: _a =T - wybor z listy, =N - cala kartoteka
::       _b (istotny jesli _a=T)=T - przygotowanie listy z uwzglednieniem grup kontrahentow, =N - lista bez grup
::       _c -uwzgledniany jesli _a=T wtedy =K - lista kontrahentow, =G - lista grup kontrahentow
::   WY: 0 - przygotowano liste kontrahentow, 1 - zrezygnowano z przygotowania listy
::  OLD: \filtr_kh/wydruki.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='T' & _<3 || _c:='K' ?};

_wyn:=0;
ZAKR.ACCESS:='N';
VAR_DEL.delete('X_Xb');
{? _a='T'
||
   {? _c='K'
   ||
      _acr_sel:=KH.mk_sel('Kontrahenci'@,'P',0,'filtr_kh',,,,,'U');
      KH.win_fld(_acr_sel,ZAKR,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
      KH.win_fld(_acr_sel,,'KOD',,,8,,0,'Kod'@);
      KH.win_fld(_acr_sel,,'NAZ',,,60,,0,'Nazwa'@);
      KH.win_fld(_acr_sel,,'GRKH','KOD',,20,,0,'Grupa kod'@);
      KH.win_fld(_acr_sel,,'GRKH','NAZ',,30,,0,'Nazwa'@);
      KH.win_act(_acr_sel,0,'Formuła','Wybierz'@@,,'Wybór pozycji'@,
         "
         {? var_pres('X_Xb')=-1
         || X_Xb:=tab_tmp(2
               ,'GRKH'     ,'STRING[16]',
               ,'REF'      ,'STRING[16]',
               ,'GRKHKOD'  ,'STRING[8]',
               ,'REFI'     ,'INTEGER',
               ,'KOD'      ,'STRING[8]',)
         ?};
         X_Xb.prefix();
         {? ~X_Xb.find_key($KH.GRKH,$KH.ref())
         ||
            X_Xb.blank();
            X_Xb.GRKH:=$KH.GRKH;
            X_Xb.GRKHKOD:=KH.GRKH().KOD;
            X_Xb.REF:=$KH.ref();
            X_Xb.REFI:=#KH.ref;
            X_Xb.KOD:=KH.KOD;
            X_Xb.add(1)
         ?}
         ",,1,1,,,'W');
      KH.win_act(_acr_sel,0,'Formuła','Zrezygnuj'@@,,'Rezygnacja z wyboru pozycji'@,
         "
         {? var_pres('X_Xb')=-1
         || X_Xb:=tab_tmp(2
               ,'GRKH'     ,'STRING[16]',
               ,'REF'      ,'STRING[16]',
               ,'GRKHKOD'  ,'STRING[8]',
               ,'REFI'     ,'INTEGER',
               ,'KOD'      ,'STRING[8]',)
         ?};
         X_Xb.clear();
         X_Xb.prefix($KH.GRKH,$KH.ref(),);
         {? X_Xb.first() || X_Xb.del() ?}
         ",,,1,,,'Z');
      KH.win_act(_acr_sel,0,'Formuła','Akceptuj'@@,,'Akceptacja wyboru pozycji'@,"sel_exit");
      KH.win_act(_acr_sel,0,'Kolejność');
      KH.win_act(_acr_sel,0,'Rekord',,,,"{? ~(var_pres('X_Xb')=-1)
                                         || exec('access','kontrahent',$KH.ref(),X_Xb,'REF')
                                         ?};
                                         exec('actions','kontrahent');
                                         ~~");
      KH.win_sel(_acr_sel);
      KH.index('KOD'); KH.prefix(2);
      _wyn:=KH.select()=0 |
            {? var_pres('X_Xb')=-1
            ||  FUN.info('Nic nie zostało wybrane.\nZestawienie niemożliwe.'@); 1
            || {? (X_Xb.clear(); ~X_Xb.size)
               || FUN.info('Nic nie zostało wybrane.\nZestawienie niemożliwe.'@); 1
               || 0
               ?}
            ?}
   |? _c='G'
   ||
      _acr_sel:=GRKH.mk_sel('Grupy kontrahentów'@,'P',0,'filtr_grkh',,,,,'U');
      KH.cntx_psh(); KH.index('GRKH');
      GRKH.win_fld(_acr_sel,ZAKR,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
      GRKH.win_fld(_acr_sel,,'KOD',,,20,,0,'Kod'@);
      GRKH.win_fld(_acr_sel,,'NAZ',,,40,,0,'Nazwa'@);
      GRKH.win_act(_acr_sel,0,'Formuła','Wybierz'@@,,'Wybór pozycji'@,
         "
         {? var_pres('X_Xb')=-1
         || X_Xb:=tab_tmp(2
               ,'GRKH'     ,'STRING[16]',
               ,'REF'      ,'STRING[16]',
               ,'GRKHKOD'  ,'STRING[8]',
               ,'REFI'     ,'INTEGER',
               ,'KOD'      ,'STRING[8]',)
         ?};
         KH.prefix(2,GRKH.ref());
         {? KH.first()
         ||
            {!
            |? X_Xb.prefix();
               X_Xb.blank();
               X_Xb.GRKH:=$GRKH.ref();
               X_Xb.GRKHKOD:=GRKH.KOD;
               X_Xb.REF:=$KH.ref();
               X_Xb.REFI:=#KH.ref;
               X_Xb.KOD:=KH.KOD;
               X_Xb.add(1);
               KH.next()
            !}
         || X_Xb.prefix();
            X_Xb.blank();
            X_Xb.GRKH:=$GRKH.ref();
            X_Xb.GRKHKOD:=GRKH.KOD;
            X_Xb.REF:='';
            X_Xb.REFI:=0;
            X_Xb.KOD:='';
            X_Xb.add(1)
         ?}
         ",,1,1);
      GRKH.win_act(_acr_sel,0,'Formuła','Zrezygnuj'@@,,'Rezygnacja z wybór pozycji'@,
         "
         {? var_pres('X_Xb')=-1
         || X_Xb:=tab_tmp(2
               ,'GRKH'     ,'STRING[16]',
               ,'REF'      ,'STRING[16]',
               ,'GRKHKOD'  ,'STRING[8]',
               ,'REFI'     ,'INTEGER',
               ,'KOD'      ,'STRING[8]',)
         ?};
         X_Xb.clear();
         X_Xb.prefix($GRKH.ref(),);
         {? X_Xb.first() || {! |? X_Xb.del() !} ?}
         ",,,1,,,'Z');
      GRKH.win_act(_acr_sel,0,'Formuła','Akceptuj'@@,,'Akceptacja wybóru pozycji'@,"sel_exit");
      GRKH.win_act(_acr_sel,0,'Kolejność');
      GRKH.win_act(_acr_sel,0,'Rekord',,,,"{? ~(var_pres('X_Xb')=-1)
                                           || exec('access','kontrahent',$GRKH.ref(),X_Xb,'GRKH')
                                           ?};
                                           exec('actions','kontrahent');
                                           ~~");
      GRKH.win_sel(_acr_sel);
      GRKH.index('KOD'); GRKH.prefix();
      _wyn:=GRKH.select()=0 |
            {? var_pres('X_Xb')=-1
            || FUN.info('Nic nie zostało wybrane.\nZestawienie niemożliwe.'@); 1
            || {? (X_Xb.clear(); ~X_Xb.size)
               || FUN.info('Nic nie zostało wybrane.\nZestawienie niemożliwe.'@); 1
               || 0
               ?}
            ?};
      KH.cntx_pop()
   |? _c='O'
   ||
      _acr_sel:=OBS.mk_sel('Obszary sprzedaży'@,'P',0,'filtr_grkh',,,,,'U');
      KH.cntx_psh(); KH.index('OBS');
      OBS.win_fld(_acr_sel,ZAKR,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
      OBS.win_fld(_acr_sel,,'KOD',,,20,,0,'Kod'@);
      OBS.win_fld(_acr_sel,,'NAZ',,,40,,0,'Nazwa'@);
      OBS.win_act(_acr_sel,0,'Formuła','Wybierz'@@,,'Wybór pozycji'@,
         "
         {? var_pres('X_Xb')=-1
         || X_Xb:=tab_tmp(3
               ,'OBS'      ,'STRING[16]',
               ,'GRKH'     ,'STRING[16]',
               ,'REF'      ,'STRING[16]',
               ,'GRKHKOD'  ,'STRING[8]',
               ,'REFI'     ,'INTEGER',
               ,'KOD'      ,'STRING[8]',)
         ?};
         KH.prefix(2,OBS.ref());
         {? KH.first()
         ||
            {!
            |? X_Xb.blank();
               X_Xb.prefix();
               X_Xb.OBS:=$OBS.ref();
               X_Xb.GRKH:=$GRKH.ref();
               X_Xb.GRKHKOD:=GRKH.KOD;
               X_Xb.REF:=$KH.ref();
               X_Xb.REFI:=#KH.ref;
               X_Xb.KOD:=KH.KOD;
               X_Xb.add();
               KH.next()
            !}
         || X_Xb.blank();
            X_Xb.prefix();
            X_Xb.OBS:=$OBS.ref();
            X_Xb.GRKH:='';
            X_Xb.GRKHKOD:='';
            X_Xb.REF:='';
            X_Xb.REFI:=0;
            X_Xb.KOD:='';
            X_Xb.add()
         ?}
         ",,1,1,,,'W');
      OBS.win_act(_acr_sel,0,'Formuła','Zrezygnuj'@@,,'Rezygnacja z wybór pozycji'@,
         "
         {? var_pres('X_Xb')=-1
         || X_Xb:=tab_tmp(3
               ,'OBS'      ,'STRING[16]',
               ,'GRKH'     ,'STRING[16]',
               ,'REF'      ,'STRING[16]',
               ,'GRKHKOD'  ,'STRING[8]',
               ,'REFI'     ,'INTEGER',
               ,'KOD'      ,'STRING[8]',)
         ?};
         X_Xb.clear();
         X_Xb.prefix($OBS.ref(),);
         {? X_Xb.first() || {! |? X_Xb.del() !} ?}
         ",,,1,,,'Z');
      OBS.win_act(_acr_sel,0,'Formuła','Akceptuj'@@,,'Akceptacja wybóru pozycji'@,"sel_exit");
      OBS.win_act(_acr_sel,0,'Kolejność');
      OBS.win_act(_acr_sel,0,'Rekord',,,,"{? ~(var_pres('X_Xb')=-1)
                                          || exec('access','kontrahent',$OBS.ref(),X_Xb,'OBS')
                                          ?};
                                          exec('actions','kontrahent');
                                          ~~");
      OBS.win_sel(_acr_sel);
      OBS.index('KOD'); OBS.prefix();
      _wyn:=OBS.select()=0 |
            {? var_pres('X_Xb')=-1
            || FUN.info('Nic nie zostało wybrane.\nZestawienie niemożliwe.'@); 1
            || {? (X_Xb.clear(); ~X_Xb.size)
               || FUN.info('Nic nie zostało wybrane.\nZestawienie niemożliwe.'@); 1
               || 0
               ?}
            ?};
      KH.cntx_pop()
   ||
      FUN.info('Nie sporządzono listy kontrahentów.'@); _wyn:=1
   ?}
||
   KH.cntx_psh;
   {? _b='T'
   ||
      {? var_pres('X_Xb')=-1
      || X_Xb:=tab_tmp(1
            ,'GRKH'     ,'STRING[16]',
            ,'GRKHKOD'  ,'STRING[8]',
            ,'REF'      ,'STRING[16]',
            ,'REFI'     ,'INTEGER',
            ,'KOD'      ,'STRING[8]',);
         X_Xb.index(X_Xb.ndx_tmp(,,'GRKHKOD',,,'KOD',,))
      ?};
      KH.prefix(2);
      {? KH.first()
      ||
         {!
         |? X_Xb.GRKH:=BB.refsql(GRKH.ref());
            X_Xb.GRKHKOD:=GRKH.KOD;
            X_Xb.REF:=BB.refsql(KH.ref());
            X_Xb.REFI:=#KH.ref;
            X_Xb.KOD:=KH.KOD;
            X_Xb.add();
            KH.next()
         !}
      ?}
   ||
      {? var_pres('X_Xb')=-1
      ||
         X_Xb:=tab_tmp(1
            ,'KOD'      ,'STRING[8]',
            ,'REF'      ,'STRING[16]',
            ,'REFI'     ,'INTEGER',)
      ?};
      KH.index('KOD'); KH.prefix(2);
      {? KH.first()
      ||
         {!
         |?
            X_Xb.KOD:=KH.KOD;
            X_Xb.REF:=BB.refsql(KH.ref());
            X_Xb.REFI:=#KH.ref;
            X_Xb.add();
            KH.next()
         !}
      ?}
   ?};
   KH.cntx_pop
?};
_wyn


\pokh_od
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: po redakcji kontrahenta
::  OLD: \pokh_od/wydruki.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld<>null
|| {? WYDRUKIL.KH_DO=null
   || WYDRUKIL.KH_DO:=WYDRUKIL.KH_OD; 1
   || 1
   ?}
|| 1
?}


\zakr_kh_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: przed redakcja ZAKR.KH
::  OLD: \zakr_kh_be/khv.fml
::----------------------------------------------------------------------------------------------------------------------
KHVZ.WIDOKI=0


\pwdlakh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem pola DLAKH
::  OLD: \pwdlakh/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('tabdlakh','kontrahent',cur_tab()=ND);
_wyn:=_tab.size();
obj_del(_tab);
_cos:=cur_tab()=ND & ND.MD<>null() & ND.MD().COS='T';
{? _wyn | _cos
|| 1
|| exec('findfnv','#color')
?}


\prdlakh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola DLAKH
::   WY: 1/0
::  OLD: \prdlakh/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('tabdlakh','kontrahent',cur_tab()=ND);
_wyn:=_tab.size();
obj_del(_tab);
{? ~_wyn & ND.MD<>null() & ND.MD().COS='T' || _wyn:=1 ?};
_wyn


\f3dlakh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: klawisz F3 pola DLAKH
::  OLD: \f3dlakh/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('tabdlakh','kontrahent',cur_tab()=ND);
_cos:=cur_tab()=ND & ND.MD<>null() & ND.MD().COS='T';
_only:={? cur_tab()=ND & ND.MD().DLAKH<>null() || ND.MD().DLAKH().KOD || '' ?};
{? _tab.size()
|| _win_sel:=_tab.mk_sel('Kontrahenci wg stref magazynowania'@,'P',,'#kh_mggrsel',,,,,'U');

   _tab.win_fld(_win_sel,,'KOD',,,10,,1,'Kod'@);
   _tab.win_fld(_win_sel,,'NAZ',,,50,,1,'Nazwa'@);
   _tab.win_act(_win_sel,0,'Formuła','Wybierz'@@,,,"sel_exit",,1,,,,'W');
   _tab.win_act(_win_sel,0,'Szukaj');
   _tab.win_act(_win_sel,0,'Kolejność');
   _tab.win_sel(_win_sel);
   {? _tab.select()
   || {? cur_tab()=ND
      || ND.DLAKH:=_tab.KOD
      || ZK_N.DLAKH:=_tab.KOD
      ?}
   ?}
|? _cos
|| _sel:=KH.win_sel('SEL');
   KH.index('COS');
   {? _only=''
   || KH.prefix(2,1);
      KH.find_key(ND.DLAKH)
   || KH.prefix(2,1,_only,)
   ?};
   {? KH.select(,1) || ND.DLAKH:=KH.KOD; ND.KH:=KH.ref() ?};
   KH.win_sel(_sel)
?};
~~


\tabdlakh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: tworzy tabele dla pola DLAKH
::   WE: _a - 1-tabela ND 0-tabela ZK_N
::       [_b] - 1-kontrhenci z magazynami konsygnacyjnymi 0(domyślnie)-nie
::   WY: tabela kodow kontrahenta
::  OLD: \tabdlakh/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_cos:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_wyn:={? ~_cos
      || sql('select distinct KH.KOD, KH.NAZ from MG_GR join KH order by 1 ')
      || sql('select distinct KH.KOD, KH.NAZ from KH where KH.COS=1 order by 1 ')
      ?};
_ok:=_wyn.size();
{? _ok & ~_cos
|| {? _a
   || _ok:=ND.MAG().MWS='T'
   || {? ZK_N.MG<>null
      || _ok:=ZK_N.MG().MWS='T'
      || _ok:=0;
         USERS_UP.index('MG');
         USERS_UP.prefix(OPERATOR.USER,'ZA'+{? ZK_N.T().R='Z' || 'M' || 'W' ?},ST.ODDZ_KOD);
         {? USERS_UP.first()
         || {!
            |? _ok:=USERS_UP.MG().MWS='T';
               ~_ok & USERS_UP.next()
            !}
         ||
::          parametry globalne
            USERS_UP.index('MG');
            USERS_UP.prefix(null,'ZA'+{? ZK_N.T().R='Z' || 'M' || 'W' ?},ST.ODDZ_KOD);
            {? USERS_UP.first()
            || {!
               |? _ok:=USERS_UP.MG().MWS='T';
                  ~_ok & USERS_UP.next()
               !}
            ?}
         ?}

      ?}
   ?}
?};
{? ~_ok || _wyn.erase() ?};
_wyn


\podlakh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola DLAKH
::  OLD: \podlakh/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_czy_nd:={? app_info('web_sesid')<>'' & _ & _a=ZK_N
         || 0
         || cur_tab()=ND
         ?};
_cos:=_czy_nd & ND.MD<>null() & ND.MD().COS='T';
_only:={? _cos & ND.MD().DLAKH<>null() || ND.MD().DLAKH().KOD || '' ?};
{? _only<>''
|| ND.DLAKH:=_only;
   ND.KH:=exec('FindInSet','#table','KH','COS',_only,2,,,1,null())
|| _tab:=exec('tabdlakh','kontrahent',_czy_nd,_cos);
   {? _tab.size() & _tab.find_key({? _czy_nd || ND.DLAKH || ZK_N.DLAKH ?},)
   || {? _czy_nd
      || ND.DLAKH:=_tab.KOD;
         {? _cos & ND.DLAKH<>''
         || ND.KH:=exec('FindInSet','#table','KH','COS',ND.DLAKH,2,,,1,null());
            ND.DLAKH:=ND.KH().KOD
         ?}
      || ZK_N.DLAKH:=_tab.KOD
      ?}
   || {? _czy_nd
      || ND.DLAKH:='';
         ND.KH:=null()
      || ZK_N.DLAKH:=''
      ?}
   ?}
?};
''


\khvz_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: ustawia zmienna KHVZ.KH
::  OLD: \khvz_kh/khv.fml
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh;
_chk:=KH.f_active & KH.f_size() | KH.f_active=0 & KH.first;
KH.cntx_pop;
KHVZ.KH:={? _chk || KH.ref || null ?};
{? KH.f_active || KH.f_seek(KHVZ.KH) ?}


\msc_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: opis miejsca dostawy dla wydrukow
::   WE: akronim tabeli
::  OLD: \msc_dost/firma.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_tab:=($_a)();
_wyn:=exec('tr','tlumaczenia','6000103')+' '+_tab.KH_MSC().NAZ;
{? _tab.KH_MSC().KRAJ<>'' || _wyn+=', '+_tab.KH_MSC().KRAJ ?};
{? _tab.KH_MSC().MIASTO<>'' || _wyn+=', '+_tab.KH_MSC().MIASTO ?};
{? _tab.KH_MSC().UL<>''
|| _wyn+=', '+_tab.KH_MSC().UL;
   {? _tab.KH_MSC().DOM<>''
   || _wyn+=' '+_tab.KH_MSC().DOM;
      {? _tab.KH_MSC().LOKAL<>''
      || _wyn+='/'+_tab.KH_MSC().LOKAL
      ?}
   ?}
?};
{? _tab.KH_MSC().POCZ<>'' || _wyn+=', '+_tab.KH_MSC().POCZ ?};
{? _tab.KH_MSC().TEL<>'' || _wyn+=', '+exec('tr','tlumaczenia','1000106')+' '+_tab.KH_MSC().TEL ?};
_wyn


\sp_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: zwaca sposób płatności lub rabat dla kontrahenta (dla bieżącej daty)
::   WE:  _a  - kontrahent KH.ref
::       [_b] - czy szukać sposobu płatności (0) / czy rabatu (1) [domyślnie (0) sposób płatności]
::   WY: ref sposobu płatności lub rabat
::  OLD: \sp_plat/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
{?_>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_wyn:=0;

exec('taz_sd_set','ceny');

GRKH.cntx_psh();
KH.cntx_psh();
KH.prefix();

_kh:=_grkh:=null;
{? KH.seek(_a)
|| _kh:=KH.ref();
   _grkh:=KH.GRKH
?};

:: sprawdzanie informacji kontrahenta
{? _kh<>null
||
   {? _b=0
   || _wyn:=KH.PLATNOSC
   || _wyn:=__War_f('KH_DOD','RAB',KH.ref)
   ?}
?};

_wyn1:=null;

:: sprawdzanie informacji w cennikach dla kontrahenta
{? _kh<>null
|| TAR.index('KH');
   TAR.prefix(ST.ODDZ,TAZ.SD,_kh);
   {? TAR.first()
   || _wyn1:=null;
      {!
      |?
         {? TAR.OD<=date() & (TAR.DO>=date() | TAR.DO=date(0,0,0)) & {? ~_b || TAR.PL<>null || TAR.PRC>0 ?}
         ||
            {? _b=0
            || _wyn1:=TAR.PL
            || _wyn1:=TAR.PRC
            ?}
         ?};
         TAR.next() & _wyn1=null
      !}
   ?}
?};

:: sprawdzanie informacji w cennikach dla grup kontrahentów
{? _grkh<>null & _wyn1=null
|| TAR.index('GRKH');
   TAR.prefix(ST.ODDZ,TAZ.SD,_grkh);
   {? TAR.first()
   || _wyn1:=null;
      {!
      |?
         {? TAR.OD<=date() & (TAR.DO>=date() | TAR.DO=date(0,0,0)) & {? ~_b || TAR.PL<>null || TAR.PRC>0 ?}
         ||
            {? _b=0
            || _wyn1:=TAR.PL
            || _wyn1:=TAR.PRC
            ?}
         ?};
         TAR.next() & _wyn1=null
      !}
   ?}
?};

{? _wyn1<>null || _wyn:=_wyn1 ?};

KH.cntx_pop();
GRKH.cntx_pop();
_wyn


\pomoc_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: POMOC.KH
::  OLD: \pomoc_kh/defin.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.KH


\filtr_zkon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2008]
:: OPIS: przygotowuje liste kontraktow
::   WE: _a =T - wybor z listy, =N - cala kartoteka
::   WY: 0 - przygotowano liste kontraktow, 1 - zrezygnowano z przygotowania listy
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
VAR_DEL.delete('X_Xf1');
{? _a='T'
||
   ZKON.cntx_psh();
   _acr_sel:=ZKON.mk_sel('Kontrakty'@,'P',0,'filtr_m',,,,,'U');
   ZKON.win_fld(_acr_sel,,'SYM',,,20,,0,'Symbol'@);
   ZKON.win_fld(_acr_sel,,'KH','KOD',,8,,0,'Kontrahent'@);
   ZKON.win_fld(_acr_sel,,'HAN','KOD',,5,,0,'Handlowiec'@);
   ZKON.win_fld(_acr_sel,,'O',,,30,,0,'Opis'@);
   ZKON.win_act(_acr_sel,0,'Formuła','Wybierz'@@,,'Zatwierdzenie wybranych pozycji'@,
      "
      sel_exit();
      {? var_pres('X_Xf1')=-1
      || X_Xf1:=tab_tmp(1,'REF','STRING[16]',,'SYM','STRING[20]',)
      ?};
      X_Xf1.REF:=BB.refsql(ZKON.ref());
      X_Xf1.SYM:=ZKON.SYM;
      X_Xf1.add()
      ",,1,1,,,'W');
   ZKON.win_act(_acr_sel,0,'Kolejność');
   ZKON.win_sel(_acr_sel);
   ZKON.index('SYM');
   ZKON.prefix();
   _wyn:=ZKON.select()=0;
   ZKON.cntx_pop()
||
   X_Xf1:=sql('select ZKON.REFERENCE REF, ZKON.SYM SYM from ZKON')
?};
_wyn


\kont_sz_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: aktualizacja szczegolow kontaktu
::  OLD: \kont_sz_akt/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
POLA.REFSQL:=$KH.ref();
_act:=':';
{? DOKUM.DOKUM   || _act:=''+_act || _act:='OEZW'+_act ?};
{? DOKUM.TYP='D' || _act:='puPU'+_act ?};
{?~( KH.f_active & KH.f_get | KH.f_active=0 & KH.get)
|| _act:=_act+'DdLl'
?};
{? ~REF.WFIRM || _act:='F'+_act+'F' ?};
DOKUM.actions('WERK',_act,,1)


\add_tmp2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Dodawanie rekordow do tabelki tymczasowej (opis) - blokady
::   WE: _a =1-wywolac grp_disp, =0-wpp
::  OLD: \add_tmp2/kh_ser.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=1 ?};

{? var_pres('ML',@)<=0 || ML:=obj_new(@.CLASS.MEMO) ?};
TAB_MEM2.cntx_psh();
TAB_MEM2.erase();
{? ZDARZ.get()
|| _txt:=ZDARZ.memo_txt(0,1,'OP');
   {? _txt<>''
   || exec('mem_copy','kontrahent',_txt,160,'TAB_MEM2');
      TAB_MEM2.first()
   ?}
?};
TAB_MEM2.cntx_pop();
1


\mem_copy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2008]
:: OPIS: Kopiowanie notatki do okienka wertowania
::   WE: _a - tresc notatki, _b - dlugosc pola z opisem,
::       _c - akronim tabeli tymczasowej dla memo
::  OLD: \mem_copy/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
akr_memo:=_c; _del_num:=0; dl_pol:=_b;
{? var_pres('numer')<=0
|| numer:=0; _del_num:=1; ($(akr_memo+'.erase()'))()
?};
STR.split(_a);
{! |?
   numer+=1;
   ($(akr_memo+'.N:=numer'))();
   ($(akr_memo+'.T:=STR.gsub(STR.line(dl_pol),%10,\'\')'))();
   ($(akr_memo+'.T:=STR.gsub('+akr_memo+'.T,%13,\'\')'))();
   ($(akr_memo+'.add()'))();
   STR.next()
!};
&akr_memo; &dl_pol;
{? _del_num || &numer ?}


\zd_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2010]
:: OPIS: Formula na wartosc poczatkowa pola ZDARZ.T
::  OLD: \zd_kh/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.R


\blok_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Formuła na rekord przed dla tabeli KH
::  OLD: \blok_kh/kh_ser.fml
::----------------------------------------------------------------------------------------------------------------------
{? INFO.NAROD=null || exec('czytaj','#stalesys',,INFO,'NAROD') ?};
DISP.WALNKLIM:=INFO.NAROD;
DISP.GRKHKLIM:=KH.GRKH;
SKID.GR_LIM:=KH.GRKH().KLIM;
{? var_pres('__War_f')=-1 || __War_f:="exec('FindInSet','#table',_a,_a,_c,REF.FIRMA,$(_a+'.'+_b))" ?};
_kh_b:=__War_f('KH_DOD','B',KH.ref);
{? _kh_b='W'
|| 'KH#01#01'
|? _kh_b='B'
|| 'KH#01#02'
|? KH.ARCH='T'
|| 'KH#01#03'
|| ''
?}


\aekhfiz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK[8.70]
:: OPIS: Formuła po redakcji pola KH.FIZYCZNY
::  OLD: \aekhfiz/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
{? (-(6+menu_txt))<>'szukaj'
|| {? KH.FIZYCZNY=0 || KH.FIZYCZNY:=2 ?};
   {? KH.FIZYCZNY=2
   || KH.REJ_INFO:='';
      KH.FIZ_NAZW:=KH.FIZ_IM:='';
      KH.efld_opt('RED','editable=1',KH_DOD,'KSEFKHOD');
      KH.efld_opt('RED','editable=1',KH_DOD,'KSEFLIOD')
   |? KH.FIZYCZNY=1
   || KH.efld_opt('RED','editable=grayed',KH_DOD,'KSEFKHOD');
      KH.efld_opt('RED','editable=grayed',KH_DOD,'KSEFLIOD');
      {? KH_DOD.KSEFKHOD<>date(0,0,0) | KH_DOD.KSEFLIOD<>date(0,0,0)
      || FUN.info('Dane w sekcji "Dokumenty KSeF" zostaną usunięte.'@);
         KH_DOD.KSEFKHOD:=date(0,0,0);
         KH_DOD.KSEFLIOD:=date(0,0,0)
      ?};
      {? |KH.REJ_INFO=''
      || KH.REJ_INFO:=exec('blsource','kontrahent')
      ?}
   ?}
?};
1


\bekhfiz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK[21.37_14]
:: OPIS: Formuła przed redakcją pól uzależnionych od KH.FIZYCZNY
::----------------------------------------------------------------------------------------------------------------------
{? KH.FIZYCZNY=1
|| {? KH.UR_DATA=date(0,0,0)
   || KH.UR_DATA:=exec('pesel_dt','#id',KH.PESEL); win_disp()
   ?};
   1
|| 0
?}


\blsource
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK[8.70]
:: OPIS: Formuła na blank dla pola OSOBA.REJ_INFO
::  OLD: \blsource/skid_gio.fml
::----------------------------------------------------------------------------------------------------------------------
'od osoby, której dotyczą'


\tabkhini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Stworzenie tabelki ze slownikami kontrahentow
::  OLD: \tabkhini/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TABDOBSL')<=0
|| TABDOBSL:=tab_tmp(1,'NAZ','STRING[20]','Nazwa',
                       'OPIS','STRING[60]','Opis');
   {? app_info('web_sesid')=''
   || _sel:=TABDOBSL.mk_sel('Słowniki kontrahentów'@,,1,'tab_dob_slu_wer',,,,,'U');
      TABDOBSL.win_act(_sel,,'Formuła','Wybierz'@@,,'Wybór słownika kontrahentów'@,,"sel_exit()",1,,,,'W');
      TABDOBSL.win_sel(_sel)
   ?}
|| TABDOBSL.erase()
?};
SLUAPPL.cntx_psh();
RS.index('RS'); RS.prefix();
SLUAPPL.index('NAZ'); SLUAPPL.prefix('F');
{? SLUAPPL.first()
|| {! |?
      {? RS.find_key(SLUAPPL.SLU().WZ) & RS.TAB='KH'
      || TABDOBSL.NAZ:=SLU.NAZ; TABDOBSL.OPIS:=SLU.OP; TABDOBSL.add(1)
      ?};
      SLUAPPL.next()
   !}
?};
SLUAPPL.cntx_pop();
{? app_info('web_sesid')<>''
|| _tcid:=app_info('web_tcid');
   _mbid:=app_info('web_mbid');
   _sesid:=app_info('web_sesid');
   _tabid:=app_info('web_tabid');
   TAB_WT.index('INDEX04'); TAB_WT.prefix(_tcid,_tabid,3);
   do();
   {? TAB_WT.first()
   || {! |?
         _delr:=TAB_WT.del(,1);
         {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
      !}
   ?};
   {? TABDOBSL.first()
   || {! |?
         TAB_WT.blank(1);
         TAB_WT.SESID:=_sesid;
         TAB_WT.MBID:=_mbid;
         TAB_WT.TCID:=_tcid;
         TAB_WT.TABID:=_tabid;
         TAB_WT.TYP:=3;
         TAB_WT.NAZ:=TABDOBSL.NAZ;
         TAB_WT.OPIS:=TABDOBSL.NAZ;
         TAB_WT.add();
         TABDOBSL.next()
      !}
   ?};
   end()
?}


\tabkhdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Skasowanie tabelki ze slownikami kontrahentow
::  OLD: \tabkhdel/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TABDOBSL')


\access
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Czy wybrano T/N ustawia zmienną ZAKR.ACCESS
::   WE: _a - ref do sprawdzenia w postaci SQL
::       _b - tabela danych
::       _c - pole do sprawdzenia
::----------------------------------------------------------------------------------------------------------------------
ZAKR.ACCESS:='N';
{? var_pres('_b')>117
|| {| _b
   |! cntx_psh();
      _ndx:=ndx_tmp(,,_c,,0);
      index(_ndx);
      prefix(_a,);
      {? first() || ZAKR.ACCESS:='T' ?};
      ndx_drop(_ndx);
      cntx_pop()
   |}
?};
~~


\actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Włącza/wyłącza akcje wyboru
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab();
{? ZAKR.ACCESS='N' | _tab.sel_size()
|| _tab.actions(_tab.win_sel('?'),,'W',1)
|| _tab.actions(_tab.win_sel('?'),,'Z',1)
?}


\email_os_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca e-mail osoby kontaktowej kontrahenta
::   WE: _a - wskazanie na kontrahenta
::       _b - typ osoby kontaktowej
::   WY: e-mail osoby kontaktowej lub ''
::----------------------------------------------------------------------------------------------------------------------
_email:='';
KH_OSTYP.index('NAME');
KH_OSTYP.prefix(_b,);
{? KH_OSTYP.first()
|| KH_OSKON.index('TYP');
   KH_OSKON.prefix(_a,KH_OSTYP.ref());

   {? KH_OSKON.first()
   || {!
      |? _osob_mail:=KH_OSKON.KH_OSOB().EMAIL;
         {? _osob_mail<>''
         || {? _email<>'' || _email+=';' ?};
            _email+=_osob_mail
         ?};
         KH_OSKON.next()
      !}
   ?}
?};
_email


\kh_o_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wyswietlenie odbiorcow dla kontrahenta
::   WE: [_a] - 0 bez okienka 1 (domyslnie) z okienkiem
::       [_b] - KH_ODB.uidref(), na którym ma stanąć selektor (tylko dla _a=1)
::  OLD: \kh_o_sel/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1)
|| _a:=1
?};
{? var_pres('_b')<>type_of('')
|| _b:=''
?};

exec('khvz_kh','kontrahent');
BEER.KH:=KHVZ.KH;
KH_ODB.index('KH_ODB');
KH_ODB.prefix();
KH_ODB.f_set('KOD',,'KH_ODB.KH=:_a',BEER.KH);
KH_ODB.win_sel('WER');
KH_ODB.win_edit('RED');
KH.cntx_psh();
{? _a=1
|| {? _b<>'' & KH_ODB.seek(_b)
   || KH_ODB.select(,1,5,,,,1)
   || KH_ODB.select()
   ?}
?};
KH_ODB.f_clear();
KH.cntx_pop();
''


\mailkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Wypelnianie pola KH.EM
::  OLD: \mailkh/mail_fk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('mail_def','rozrach',KH.EM)


\kh_msc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [2012]
:: OPIS: miejsca dostaw
::   WE: [_a] - 0 bez okienka 1 (domyslnie) z okienkiem
::  OLD: \kh_msc/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=1 ?};

exec('khvz_kh','kontrahent');
KH_MSC_Z.KH:=KHVZ.KH;
KH_MSC.f_clear();
KH_MSC.index('KH_NAZ');
KH_MSC.prefix(KHVZ.KH);
{? _a=1 || KH_MSC.select() ?}


\kh_www
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: uruchamia strone www kontrahenta
::  OLD: \kh_www/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? KH.WWW=''
||
   FUN.info('Nie wypełniono adresu www kontrahenta.'@)
|| exec('browser_launch','#help',KH.WWW);
   ~~
?}


\kh_crm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: uruchamia widok kontrahenta w CRM
::  OLD: \kh_crm/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.PTH_LUID=''
||
   FUN.info('Nie podano ścieżki do widoku kontrahentów na platformie Lotus Notes Domino.'@)
|? KH.LOTUSUID=''
||
   FUN.info('Kontrahent jest niezsynchronizowany z aplikacjami na platformie Lotus Notes Domino.'@)
|| exec('browser_launch','#help',XINFO.PTH_LUID+KH.LOTUSUID);
   ~~
?}


\kh_wydr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wydruki i zestawienia
::  OLD: \kh_wydr/firma.fml
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
wydr_edi:='FIRA02';
_wsel:=KH.win_sel('?');
KH.win_sel('WERHOME2');
exec('rep_exec','#b_report','','wsp_kh_*');
KH.win_sel(_wsel);
KH.cntx_pop();
~~


\skid_hkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?
:: OPIS: wywolanie historii blokad danego kontrahenta
::  OLD: \skid_hkh/kh_ser.fml
::----------------------------------------------------------------------------------------------------------------------
_opis:='  kontrahenta: %1 - %2'@[KH.SKR,KH.NAZ];
exec('histor','kontrahent','B','ZDTKH','ZDBKH','ZDKBLO',_opis);
0


\histor
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: formula do wywolania funkcji z pozycji tabeli kontrahentow
::   WE: _a - typ kontaktu z klientem (R,H)
::       _b - index
::       _c - nazwa okienka wertowania
::       _d - nazwa okienka edycyjnero
::       _e - tekst doklejony do nazwy okienka wertowania
::  OLD: \histor/kh_ser.fml
::----------------------------------------------------------------------------------------------------------------------
exec('gen_tmp1','kontrahent');
exec('gen_tmp2','rozrach');
_grp_sel:=ZDARZ.grp_make({? _c='ZDBKH' || 'Historia blokad' || 'Kontakty' ?},,'#zdarz_wer');
{? _c='ZDBKH'
|| ZDARZ.grp_sel(_grp_sel,ZDARZ,_c,'',"exec('add_tmp2','kontrahent')",,,10,,,,,'maximized_with_title')
|| ZDARZ.grp_sel(_grp_sel,ZDARZ,_c,'',"exec('add_tmp1','kontrahent')",,,10)
?};
ZDARZ.win_sel(_grp_sel);
ZDARZ.hdr_sel(); ZDARZ.hdr_sel(_e);
ROZNE.R:=_a;
ZDARZ.index(_b); ZDARZ.prefix(_a,KH.ref());
ZDARZ.win_edit(_d); ZDARZ.select();
exec('del_tmp','rozrach');
ZDARZ.hdr_sel();
0


\gen_tmp1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Stworzenie tabelki tymczasowej i okienka - kontakty
::  OLD: \gen_tmp1/kh_ser.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_MEM1:=tab_tmp(1,'N','INTEGER','',
                    'T','STRING[121]','Treść');
sel_mem1:=TAB_MEM1.mk_sel('Notatki'@,,0,'tab_mem1_wer');
TAB_MEM1.win_fld(sel_mem1,,'T');
TAB_MEM1.win_sel(sel_mem1)


\add_tmp1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Dodawanie rekordow do tabelki tymczasowej (opis) - kontakty
::  OLD: \add_tmp1/kh_ser.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ML',@)<=0 || ML:=obj_new(@.CLASS.MEMO) ?};
TAB_MEM1.cntx_psh();
TAB_MEM1.erase();
{? ZDARZ.get()
|| _txt:=ZDARZ.memo_get(0,1,'OP');
   {? _txt<>''
   || exec('mem_copy','kontrahent',_txt,121,'TAB_MEM1');
      TAB_MEM1.first()
   ?}
?};
TAB_MEM1.cntx_pop();
grp_disp(TAB_MEM1,sel_mem1);
1


\kh_ablok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.62]
:: OPIS: Automatyczne blokowanie i odblokowanie kontrahentow z okna HISTKH
::       tabeli KH
::  OLD: \kh_ablok/kh_ser.fml
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
SER_KOR.win_edit('SER_ZAKD');
ROZNE.R:='B';
SER_KOR.DATA:=SSTALE.AO().KON;
{? SER_KOR.edit()
|| exec('kh_b_sel','kontrahent');
   KH.index('KOD');
   KH.prefix(2);
   {? KH.first()
   || {!|? _kh_b:=__War_f('KH_DOD','B',KH.ref);  {? _kh_b='' || _kh_b:='N' ?};
         echo('Kontrahent: %1'@[KH.KOD]);
           exec('jakisch','rozrach');
           {? SER_KOR.SER_SCH<>null
           || SER_KOR.SER_SCH();
              _blokada:=0;
              {? _kh_b='N'
              || {? SER_SCH.FOR_BWR<>null
                 || {? ($(SER_SCH.FOR_BWR().FORMULA))()
                    || exec('kh_b_add','kontrahent', _kh_b, 'B');
                      _blokada:=1
                    ?}
                 ?};
                 {? ~_blokada & SER_SCH.FOR_WAR<>null
                 || {? ($(SER_SCH.FOR_WAR().FORMULA))()
                    || exec('kh_b_add','kontrahent', _kh_b, 'W')
                    ?}
                 ?}
              |? _kh_b='W'
              || {? SER_SCH.FOR_BWR<>null
                 || {? ($(SER_SCH.FOR_BWR().FORMULA))()
                    || exec('kh_b_add','kontrahent', _kh_b, 'B');
                       _blokada:=1
                    ?}
                 ?};
                 {? ~_blokada & SER_SCH.FOR_WAR<>null
                 || {? ~(($(SER_SCH.FOR_WAR().FORMULA))())
                    || exec('kh_b_add','kontrahent', _kh_b, 'N')
                    ?}
                 ?}
              |? _kh_b='B'
              || {? SER_SCH.FOR_BWR<>null
                 || {? ($(SER_SCH.FOR_BWR().FORMULA))()
                    || _blokada:=1
                    ?}
                 ?};
                 {? ~_blokada & SER_SCH.FOR_WAR<>null
                 || {? ($(SER_SCH.FOR_WAR().FORMULA))()
                    || exec('kh_b_add','kontrahent', _kh_b, 'W')
                    || exec('kh_b_add','kontrahent', _kh_b, 'N')
                    ?}
                 ?}
              ?}
           ?};
           KH.next()
      !}
   ?};
:[isz] przeniesienie wypelnienia blokady do akcji okienka tabeli tymczasowej
   KHWER.prefix();
   {? KHWER.first()
   || KHWER.select()
   || FUN.emsg('Brak zmian znaczników blokad.'@)
   ?};
   obj_del(KHWER); &tmpind
?};
echo();
KH.cntx_pop();
SER_KOR.hdr_edit()


\kh_b_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [ISZ] [8.40]
:: OPIS: Zdefiniowanie tymczasowej tabeli KHWER do obslugi
::       automatycznej zmiany blokad dla kontrahentow
::  OLD: \kh_b_sel/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
KHWER:=tab_tmp(1,'KOD','STRING[8]','Kod',
                 'SKRÓT','STRING[10]','Skrót',
                 'NAZWA','STRING[60]','Nazwa kontrahenta',
                 'ZN','STRING[1]','Wybrany?',
                 'AKTUALNA','STRING[15]','Aktualna blokada',
                 'NOWA','STRING[15]','Proponowana',
                 'B','STRING[1]','Typ blokady');
tmpind:=KHWER.index('?');
KHWER.index(tmpind); KHWER.prefix();
_wer:=KHWER.mk_sel('Wybór kontrahentów, dla których zostanie uruchomiona funkcja automatycznej blokady'@,'P',,'khwer_wer');
KHWER.win_fld(_wer,,'ZN',,,-3,,,'Zaznaczone?'@);
KHWER.win_fld(_wer,,'KOD',,,8,,,'Kod'@);
KHWER.win_fld(_wer,,'NAZWA',,,33,,,'Nazwa'@);
KHWER.win_fld(_wer,,'AKTUALNA',,,13,,,'Aktualna blokada?'@);
KHWER.win_fld(_wer,,'NOWA',,,12,,,'Proponowana'@);
KHWER.win_act(_wer,0,'Wyświetl',,,,"{? KH.find_key(KHWER.KOD) || exec('kh_wys1','kontrahent') ?}");
KHWER.win_act(_wer,0,'Rekord',,,,"{? +KHWER.ZN || exec('findtmp','#color') ?}");
KHWER.win_act(_wer,0,'Szukaj');
KHWER.win_act(_wer,0,'Formuła','Zmień zaznaczenie'@@,,,,"exec('kh_b_wyb','kontrahent')",1,,,,'Z');
KHWER.win_act(_wer,0,'Formuła','Z&mień proponowaną'@@,,,,"exec('kh_b_mod','kontrahent')",0,,,,'M');
KHWER.win_act(_wer,0,'Formuła','Wykonaj zmiany'@@,,,,"exec('gen_blok','kontrahent')",,,,,'W');
KHWER.win_act(_wer,0,'Formuła','Druku&j'@@,,,,"exec('kh_b_dr','kontrahent')",,,,,'J');
KHWER.win_act(_wer,0,'Formuła','Sa&ldo'@@,,,,"{? KH.find_key(KHWER.KOD) || exec('rozrach_kontr','kontrahent') ?}",,,,,'L');
KHWER.win_act(_wer,0,'Formuła','Ko&respondencja'@@,,,,"{? KH.find_key(KHWER.KOD) || exec('skid_rkh','kontrahent') ?}",,,,,'R');
KHWER.win_act(_wer,0,'Kolejność');
KHWER.win_sel(_wer)


\kh_wys1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: wyświetlenie danych ogólnych kontrahenta
::  OLD: \kh_wys1/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1)=SLO
|| KH.index('KOD'); KH.prefix(2); KH.find_key(SLO.KOD)
?};
KH.cntx_psh(); KH_OSOB.cntx_psh();
VAR_DEL.delete('dspadkor','__KH_MOD');
dspadkor:=__KH_MOD:=1;
KH.win_edit('RED');
SLO.cntx_psh();
KH.memo_get(,'OPIS');
KH.memo_get(,'POWIAD');
exec('kh_dod_ini','kontrahent',,0);
exec('kh_dod_ety_kol','kontrahent');
exec('set_disabled_fields','kontrahent');
KH.display();
SLO.cntx_pop();
VAR_DEL.delete('dspadkor','__KH_MOD');
KH.cntx_pop(); KH_OSOB.cntx_pop();
~~


\kh_b_wyb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [ISZ] [8.40]
:: OPIS: Wybor kontrahentow
::  OLD: \kh_b_wyb/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
{? +KHWER.ZN
|| KHWER.ZN:=''; KHWER.NOWA:=''
|| KHWER.ZN:='T';KHWER.NOWA:=exec('kh_a_ops','kontrahent', KHWER.B)
?};
KHWER.put()


\kh_b_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [ISZ] [8.40]
:: OPIS: Zmiana typu blokady
::  OLD: \kh_b_mod/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
{? KHWER.AKTUALNA=''
|| KHWER.NOWA:={? KHWER.NOWA='WARUNKOWA' || 'BEZWARUNKOWA' || 'WARUNKOWA' ?}
|? KHWER.AKTUALNA='WARUNKOWA'
|| KHWER.NOWA:={? KHWER.NOWA='BEZWARUNKOWA' || '' || 'BEZWARUNKOWA' ?}
|? KHWER.AKTUALNA='BEZWARUNKOWA'
|| KHWER.NOWA:={? KHWER.NOWA='WARUNKOWA' || '' || 'WARUNKOWA' ?}
?};
KHWER.put()


\gen_blok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [ISZ] [8.40]
:: OPIS: generowanie blokad dla wybranych kontrahentow
::  OLD: \gen_blok/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy na pewno dokonać zmian blokad\ndla zaznaczonych kontrahentów?'@)
|| _lb:=_lw:=_od:=0;
   {? KHWER.first()
   || {!|?
        {? +KHWER.ZN & KH.find_key(KHWER.KOD)
        || ZDARZ.blank();
           {? 1+KHWER.NOWA='B'
           || _lb+=exec('szukaj','rozrach_kor','T','BL_BEZWARUNKOWE','B',0)
           |? 1+KHWER.NOWA='W'
           || _lw+=exec('szukaj','rozrach_kor','T','BL_WARUNKOWE','W',0)
           || _od+=exec('szukaj','rozrach_kor','T','ODBLOKOWANIE','N',0)
           ?}
        ?};
        KHWER.next()
      !}
   ?};
   {? _lb+_lw+_od>0
   || FUN.info('Liczba kontrahentów ze zmianą znacznika\n'+
       {? _lw>0 || 'dla blokady warunkowej: '+$_lw+'\n'||''?}+
       {? _lb>0 || 'dla blokady bezwarunkowej: '+$_lb+'\n'||''?}+
       {? _od>0 || 'odblokowanych: '+$_od||''?}
       )
   || FUN.emsg('Brak zmian znaczników blokad.'@)
   ?};
   sel_exit()
?}


\kh_a_ops
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [ISZ] [8.40]
:: OPIS: funkcja zwracająca opis blokady
::   WE: _a - STRING - wartoŁć 'B' lub 'W' lub 'N'
::  OLD: \kh_a_ops/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='B' || 'BEZWARUNKOWA' |? _a='W' || 'WARUNKOWA' || '' ?}


\kh_b_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [ISZ] [8.40]
:: OPIS: dodanie rekordu do tabeli tymczasowej
::  OLD: \kh_b_add/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
KHWER.KOD:=KH.KOD; KHWER.SKRÓT:=KH.SKR; KHWER.NAZWA:=KH.NAZ;
KHWER.ZN:='T'; KHWER.AKTUALNA:=exec('kh_a_ops','kontrahent', _a);
KHWER.NOWA:=exec('kh_a_ops','kontrahent', _b); KHWER.B:=_b; KHWER.add()


\kh_b_dr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [ISZ] [8.40]
:: OPIS: Wydruk pozycji z tabeli tymczasowej
::  OLD: \kh_b_dr/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
g_tt_w:=obj_new(KHWER.fld_num());
g_tt_w[1]:=8; g_tt_w[2]:=10; g_tt_w[3]:=45; g_tt_w[4]:=3; g_tt_w[5]:=15;
g_tt_w[6]:=15; g_tt_w[7]:=1;
g_tt_p:=obj_new(KHWER.fld_num());
g_tt_p[1]:=g_tt_p[2]:=g_tt_p[3]:=g_tt_p[4]:=g_tt_p[5]:=g_tt_p[6]:=g_tt_p[7]:=0;
g_tt_e:=obj_new(KHWER.fld_num());
{! _i:=1..KHWER.fld_num() |! g_tt_e[_i]:=1 !}; g_tt_e[7]:=0;
PAR_WYDR.TTMPAKR:='KHWER'; PAR_WYDR.TITLE:='Kontrahanci do zablokowania / odblokowania'@;
rep_exec('wsp_tt');
obj_del(g_tt_w); obj_del(g_tt_e); obj_del(g_tt_p)


\skid_rkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?
:: OPIS: Wyświetlenie korespondencji seryjnej dla kontrahenta
::  OLD: \skid_rkh/kh_ser.fml
::----------------------------------------------------------------------------------------------------------------------
SER_NAGS.index('NAG_KODK'); SER_NAGS.prefix(REF.FIRMA,OPERATOR.DEPT().OD,KH.KOD,KH.KOD);
SER_NAGS.win_sel('SER_NAGK');
SER_NAGS.hdr_sel();
SER_NAGS.hdr_sel('Korespondencja kontrahenta: %1'@[KH.SKR]);
SER_NAGS.select();
SER_NAGS.hdr_sel();
1


\kh_fak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: faktury kontrahenta
::   WE:  _a - ' ' - wszystkie
::        'm' - biezacy miesiac
::       [_b] - 0-sprzedaz(domyslnie) 1-zakupy
::       [_c] -  0 bez okienka 1 (domyslnie) z okienkiem
::  OLD: \kh_fak/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<1 || _a:=''; _b:=0 |? _=1 || _b:=0 ?};
{? var_pres('_c')<>type_of(1) || _c:=1 ?};

{? _c>0
||
   {? __PARSES.setEnv('LSP_FAK')=0
   || return()
   ?};
   exec('upr_set','ceny')
?};

BEER.SZ:={? _b || 'Z' || 'S' ?};
BEER.ZAK:={? _b || 'T' || 'N' ?};
FAKS.ndx_drop();
FAKS.win_sel('WER2');
{? BEER.SZ='S'
|| FAKS.win_patt('SZUK');
   FZ.DEFA:=1
|| FAKS.win_patt('SZUKZ');
   FZ.DEFA:=2
?};
FAKS.hdr_sel();
{? _a='m'
|| FAKS.hdr_sel(' dla kontrahenta %1 z miesiąca %2'@[KH.KOD,date(ST.AR,ST.AM,1)$8]);
   _ndx:=FAKS.ndx_tmp('',,'HIDDEN',,,'SZ',,,'KH',,,'AM',,,'SYM',,)
|| FAKS.hdr_sel(' dla kontrahenta %1 z roku %2'@[KH.KOD,$ST.AR]);
   _ndx:=FAKS.ndx_tmp('',,'HIDDEN',,,'SZ',,,'KH',,,'SYM',,)
?};
FAKS.index(_ndx);

_get:={? KH.f_active & KH.sel_size()=0 || KH.f_get() || KH.get() ?};

{? _a='m'
|| FAKS.prefix('N',BEER.SZ,{? _get || KH.ref || null ?},ST.AM)
|| FAKS.prefix('N',BEER.SZ,{? _get || KH.ref || null ?})
?};
{? _c
||
   FAKS.select();
   FAKS.hdr_sel('');
   FAKS.ndx_drop(_ndx)
?}


\kh_i_fa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wyswietlanie faktur dla biezacego kontrahenta
::   WE: [_a] - 0-sprzedaz(domyslnie) 1-zakupy
::  OLD: \kh_i_fa/kontr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1  || {? type_of(_a)<>1 || _a:=0 ?}  || _a:=0  ?};

{? __PARSES.setEnv('LSP_FAK')=0
|| return()
?};
exec('upr_set','ceny');

VAR_DEL.delete('bier_r');
exec('fak_psh','open_tab');
BEER.SZ:={? _a || 'Z' || 'S' ?};
_uiddok:=BEER.UIDDOK;
_act:={? _a=0 || FAKS.actions('WER2','WIO') || FAKS.actions('WER1','WIO') ?};

{? var_pres('X_Xa')>100 || obj_del(X_Xa) ?};
X_Xa:=sql('
   select
      FAKS.WHERE S, FAKS.NR Nr, FAKS.SYM sym, FAKS.D d,
      FAKS.NETTO netto, FAKS.BRUTTO brutto,
      FAKS.NETW netw, FAKS.BRTW brtw, SLO.KOD wal,
      FAKS.AKC AKC,FAKS.ZAK Z, FAKS.REFERENCE ref, FAKS.SYS system
   from
      @FAKS
   join SLO using(FAKS.WAL,SLO.REFERENCE)
   where
      FAKS.HIDDEN=\'N\' and FAKS.ODDZ=\':_a\' and FAKS.KH=:_b and FAKS.SZ=\':_c\' and substr(FAKS.REFERENCE,7,2)<>\'hs\'
   order by
      4 desc,3',ST.ODDZ,KH.ref,BEER.SZ);
{? _a
|| exec('war_hidz','ceny',X_Xa,'NETTO','BRUTTO','NETW','BRTW')
|| exec('war_hids','ceny',X_Xa,'NETTO','BRUTTO','NETW','BRTW')
?};
_acr:=X_Xa.mk_sel('Dokumenty %1 kontrahenta: %2 (Wszystkie)'@[{? _a=0 || 'sprzedaży' || 'zakupu' ?},KH.KOD]
         ,,0,'#kh_i_fax_xa',,,,,'U');
X_Xa.win_fld(_acr,,'NR',,,6,,,'Numer'@);
X_Xa.win_fld(_acr,,'SYM',,,20,,,'Symbol dokumentu'@);
X_Xa.win_fld(_acr,,'D',,,,,,'Data'@);
X_Xa.win_fld(_acr,,'NETTO',,,15,2,,'Netto'@);
X_Xa.win_fld(_acr,,'BRUTTO',,,15,2,,'Brutto'@);
X_Xa.win_fld(_acr,INFO,'NAROD','KOD',,3,,,'Waluta'@);
X_Xa.win_fld(_acr,,'NETW',,,15,2,,'Netto'@);
X_Xa.win_fld(_acr,,'BRTW',,,15,2,,'Brutto'@);
X_Xa.win_fld(_acr,,'WAL',,,3,,,'Waluta'@);
X_Xa.win_fld(_acr,,'AKC',,,-5,,,'Zaakceptowana?'@,,,2,,"'T'","'N'");
X_Xa.win_fld(_acr,,'Z',,,-5,,,'Zaksięgowana?'@,,,2,,"'T'","'N'");
X_Xa.win_act(_acr,,'Formuła','Pozycje'@@,,'Wyświetlanie pozycji dokumentu',,"
   FAKS.cntx_psh;
   exec('czytaj','#stalesys',,FINFO,'NAROD');
   FAKS.use(8+cur_tab.REF);
   FAKS.prefix;
   {? FAKS.seek(cur_tab.REF)
   ||
      DOK.ZAR:='LSP:';
      DOK.DOKZRODL:=exec('maska','dok_fks_aut_dok','F');
      exec('dok_zrd','dok_fks',cur_tab.REF,0)
   ?};
   FAKS.cntx_pop
",1);
X_Xa.win_act(_acr,,'Rekord',,,,"BEER.UIDDOK:=X_Xa.REF;''");
X_Xa.win_act(_acr,,'Wyświetl',,,,,"exec('faks_disp','kontrahent')");
X_Xa.win_act(_acr,,'Kolejność');
X_Xa.win_link(_acr,"
     _faks_ref:=cur_tab().REF;
     _a:=obj_new('LINK');
     FAKS.cntx_psh();
     FAKS.use(form(8+_faks_ref));
     FAKS.prefix();
     {? FAKS.seek(_faks_ref,form(8+_faks_ref))
     || _a.LINK:=FAKS.uidref()
     ?};
     FAKS.cntx_pop();
     _a
     ");
X_Xa.fld_fml('NETW','DISPLAY_FORMAT',"{? INFO.NAROD().KOD=X_Xa.WAL || 'empty=1' || 'empty=0' ?}");
X_Xa.fld_fml('BRTW','DISPLAY_FORMAT',"{? INFO.NAROD().KOD=X_Xa.WAL || 'empty=1' || 'empty=0' ?}");
X_Xa.fld_fml('WAL','DISPLAY_FORMAT',"{? INFO.NAROD().KOD=X_Xa.WAL || 'empty=1' || 'empty=0' ?}");

_msk:=sql('select distinct substr(REF,1,8) NAME from :_a order by 1',X_Xa);


_grp:=X_Xa.grp_make('Dokumenty %1 kontrahenta: %2'@[{? _a=0 || 'sprzedaży' || 'zakupu' ?},KH.KOD],,'#kh_i_grp');
_far:="";
_form:="{? BEER.UIDDOK<>'' & BEER.UIDDOK<>X_Xa.REF
        || _ref:=null();
           X_Xa.cntx_psh();
           X_Xa.prefix();
           {? X_Xa.first()
           || {!
              |? {? X_Xa.REF=BEER.UIDDOK || _ref:=X_Xa.ref() ?};
                 _ref=null() & X_Xa.next()
              !}
           ?};
           X_Xa.cntx_pop();
           {? _ref<>null() || X_Xa.seek(_ref) ?}
        ?}";
X_Xa.grp_sel(_grp,X_Xa,_acr,'Wszystkie'@,_far,,,,_form,,,,'maximized');
_msk.prefix();
{? _msk.last()
|| {!
   |? _far:="{? FAKS.T().KOR='Z'
             || FAP.index('KZ');
                FAP.prefix($FAKS.ref())
             || FAP.index('FAP');
                FAP.prefix(FAKS.ref())
             ?};
             grp_disp(FAP,'WER_DOK')";
      _rok:=2000+(#(_msk.NAME+2));
      _form:=$('bie_r:='+$_rok+';exec(\'fak_open\',\'open_tab\',ST.ODDZ,($bie_r+2));
            FAKS.f_clear();
            FAKS.index(\'FAK_KHA\');
            FAKS.prefix(ST.ODDZ,BEER.SZ,\'N\',KH.ref());
            {? BEER.UIDDOK<>\'\' & form(8+BEER.UIDDOK)=FAKS.name() || FAKS.seek(BEER.UIDDOK) ?}');
      _farm:="BEER.UIDDOK:=$FAKS.ref()";
      X_Xa.grp_sel(_grp,FAKS,{? _a=0 || 'WER2' || 'WER1' ?},$_rok,_far,,,15,_form,_farm,,,'maximized');
      X_Xa.tab_splt(_grp,,'horizontal','pozycje');
      _far:="";
      _form:="FAKS.cntx_psh();
             {? FAKS.T().KOR='Z'
             || FAP.index('KZ');
                FAP.prefix($FAKS.ref())
             || FAP.index('FAP');
                FAP.prefix(FAKS.ref())
             ?}";
      _farm:="FAKS.cntx_pop()";
      X_Xa.grp_sel(_grp,FAP,'WER_DOK',,_far,,,15,_form,_farm,,,'maximized');
      _msk.prev()
   !}
?};
X_Xa.win_sel(_grp);
BEER.UIDDOK:=X_Xa.REF;
X_Xa.select();
VAR_DEL.delete('X_Xa');
exec('fak_pop','open_tab');
{? _a=0 || FAKS.actions('WER2',_act) || FAKS.actions('WER1',_act) ?};
VAR_DEL.delete('bier_r');
BEER.UIDDOK:=_uiddok;
''


\faks_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: display() dla faktury
::  OLD: \faks_disp/kontr.fml
::----------------------------------------------------------------------------------------------------------------------
FAKSPL.cntx_psh();
FAKS.cntx_psh();
FAKSPL.use('fakpl'+((8+cur_tab.REF)+3));
FAKS.use(form(8+cur_tab.REF));
FAKS.prefix();
_ref:=cur_tab.REF;
{? FAKS.seek(_ref,form((8+cur_tab.REF)))
|| exec('fall_rek','faktury_nag')
?};
FAKS.cntx_pop();
FAKSPL.cntx_pop();
''


\kh_i_fa2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wyswietlanie faktur dla biezacego kontrahenta (faktur z wartosciami skorygowanymi)
::   WE: [_a] - 0-sprzedaz(domyslnie) 1-zakupy
::  OLD: \kh_i_fa2/kontr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<1 || _a:=0 ?};
BEER.SZ:={? _a || 'Z' || 'S' ?};

{? __PARSES.setEnv('LSP_FAK')=0
|| return()
?};
exec('upr_set','ceny');

{? var_pres('X_Xc')>100 || obj_del(X_Xc) ?};
X_Xc:=sql('select  FAKS.WHERE S, FAKS.NR Nr, FAKS.SYM sym, FAKS.D d, FAKS.BRUTTO brutto,
                   FAKS.ZAK Z, FAKS.KORYG koryg, FAKS.REFERENCE ref, FAKS.SYS system
           from @FAKS join TYPYSP using (FAKS.T, TYPYSP.REFERENCE)
           where FAKS.ODDZ = \':_a\' and FAKS.KH=:_b and TYPYSP.KOR=\'N\' and FAKS.SZ=\':_c\'
           order by 4 desc,3',ST.ODDZ,KH.ref,BEER.SZ);
{? _a || exec('war_hidz','ceny',X_Xc,'BRUTTO') || exec('war_hids','ceny',X_Xc,'BRUTTO') ?};

_acr:=X_Xc.mk_sel('Faktury kontrahenta: %1 (Wartości po korektach)'@[KH.KOD],,0,'#kh_i_fa2x_xc',,,,,'U');
X_Xc.win_fld(_acr,,'NR',,,'6, 9, 9',,,'Numer'@);
X_Xc.win_fld(_acr,,'SYM',,,'20, 20, 0',,,'Symbol dokumentu'@);
X_Xc.win_fld(_acr,,'D',,,,,,'Data'@);
X_Xc.win_fld(_acr,,'KORYG',,,-5,,,'Korygowana?'@);
X_Xc.win_fld(_acr,,'BRUTTO',,,15,2,,'Brutto'@);
X_Xc.win_fld(_acr,,'Z',,,3,,,'Zaksięgowana?'@,,,2,,"'T'","'N'");
X_Xc.win_act(_acr,,'Formuła','Pozycje'@@,,'Wyświetlanie pozycji faktury'@,,"exec('kh_i_fp','kontrahent',X_Xc.REF,1)",1);
X_Xc.win_act(_acr,,'Wyświetl',,,,,"exec('faks_disp','kontrahent')");
X_Xc.win_act(_acr,,'Kolejność');
X_Xc.win_sel(_acr);
{? X_Xc.size()>0
|| X_Xc.first();
   {!
   |?
      {? X_Xc.KORYG='T'
      || {? exec('szuk_kor','faktury_nag',X_Xc.REF,X_Xc.D)
         || {? X_Xa.first()
            || _br:=0;
               {!|?
                  _br+=X_Xa.BRUTTO;
                  X_Xa.next()
               !};
               X_Xc.BRUTTO+=_br;
               X_Xc.put()
            ?}
         ?}
      ?};
      X_Xc.next()
   !}
?};
X_Xc.select();
VAR_DEL.delete('X_Xc');
''


\kh_i_fp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wyswietlanie pozycji faktury
::   WE:   _a - ref i name faktury  (ref z zapytania sql)
::         _b - 0 - bez war skoryg - 1 z wart skoryg.
::  OLD: \kh_i_fp/kontr.fml
::----------------------------------------------------------------------------------------------------------------------
_title:=PARAM_W.TAB_TYT;
FAKS.cntx_psh();
FAKS.prefix();
_ref:=_a;
{? FAKS.seek(_ref,form((8+_a)))
||
   {? var_pres('X_Xb')>100 || obj_del(X_Xb) ?};

   X_Xb:=sql('select FAP.POZ POZ, M.KTM ktm, M.N naz, FAP.IL il, FAP.WWAL_P netto, FAP.VWAL_P vat,
                     FAP.BWAL_P brutto, FAP.REFERENCE ref
              from @FAP join M
              where FAP.FAKS = :_a
              order by 1',FAKS.ref);
   {? FAKS.SZ='Z'
   || exec('war_hidz','ceny',X_Xb,'NETTO','VAT','BRUTTO')
   || exec('war_hids','ceny',X_Xb,'NETTO','VAT','BRUTTO')
   ?};

   _acr:=X_Xb.mk_sel('Pozycje faktury: %1 (Wartości po korektach)'@[FAKS.SYM],,0,'#kh_i_fpx_xb',,,,,'U');
   X_Xb.win_fld(_acr,,'POZ',,,3,,,'Pozycja'@);
   X_Xb.win_fld(_acr,,'KTM',,,10,,,'Indeks'@);
   X_Xb.win_fld(_acr,,'NAZ',,,20,,,'Nazwa'@);
   X_Xb.win_fld(_acr,,'IL',,,7,3,,'Ilość'@);
   X_Xb.win_fld(_acr,,'NETTO',,,10,2,,'Wartość netto'@);
   X_Xb.win_fld(_acr,,'VAT',,,10,2,,'Stawka VAT'@);
   X_Xb.win_fld(_acr,,'BRUTTO',,,10,2,,'Wartość brutto'@);
   X_Xb.win_act(_acr,,'Wyświetl');
   X_Xb.win_sel(_acr);

   {? X_Xb.size()>0 & X_Xb.first() & X_Xc.KORYG='T'
   ||
      {!
      |?
         {? exec('szuk_kor','faktury_nag',X_Xc.REF,X_Xc.D,,X_Xb.POZ)
         || {? X_Xa.first()
            || _ne:=_va:=_br:=0;
               {!
               |?
                  _ne+=X_Xa.NETTO;
                  _va+=X_Xa.VAT;
                  _br+=X_Xa.BRUTTO;
                  X_Xa.next()
               !};
               X_Xb.NETTO+=_ne;
               X_Xb.VAT+=_va;
               X_Xb.BRUTTO+=_br;
               X_Xb.put()
            ?}
         ?};
         X_Xb.next()
      !}
   ?};

   X_Xb.select()
?};
FAKS.cntx_pop();
VAR_DEL.delete('X_Xb');
''


\fap_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: spacja na pozycjach faktury w tabeli tymczasowej
::  OLD: \fap_disp/kontr.fml
::----------------------------------------------------------------------------------------------------------------------
FAKS.cntx_psh();
FAP.cntx_psh();
FAKS.use('faktu'+(form(8+X_Xb.REF)+3));
FAP.use(form(8+X_Xb.REF));
FAP.prefix();
_ref:=X_Xb.REF;
{? FAP.seek(_ref,form((8+X_Xb.REF))) || params_exec('disp_fap','faktury_poz') ?};
FAKS.cntx_pop();
FAP.cntx_pop()


\kh_fpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wyswietlanie pozycji dokumentow sprzedazy dla kontrahenta
::   WE: [_a] - 0-sprzedaz(domyslnie) 1-zakupy
::  OLD: \kh_fpoz/kontr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<1 || _a:=0 ?};
BEER.SZ:={? _a || 'Z' || 'S' ?};

{? __PARSES.setEnv('LSP_FAK')=0
|| return()
?};
exec('upr_set','ceny');

{? var_pres('X_Xb')>100 || obj_del(X_Xb) ?};

undefine();
define('KTM','','Indeks'@,'Możliwe podanie części kodu'@,20);
define('Nazwa','','Nazwa'@,'Możliwe podanie części nazwy'@,60);
define('od',date(ST.AR,ST.AM,1),'[Od daty]','[] - możliwe pominięcie pola',10);
define('do',date(ST.AR,ST.AM,0),'[Do daty]','[] - możliwe pominięcie pola',10);
def_btn('text=%1'['Zapisz'@],'key:F2');
def_btn('text=%1'['Anuluj'@],'key:Esc');
{? def_edit("{? DEFINE.od<=DEFINE.do || 1 || FUN.emsg('Nieprawidłowy zakres dat.'@);0 ?}",FUN.TYT)
||
   X_Xb:=sql('select M.KTM ktm, FAP.POZ poz,M.N nazwa, FAKS.D data, FAP.IL il,
                     case when FAKS.KOR=\'\' then FAP.CN else 0 end cena, FAP.WWAL_P netto,
                     FAP.VWAL_P vat, FAP.BWAL_P brutto, FAKS.SYM sym, FAP.REFERENCE ref, FAKS.SYS system
              from @FAP join M join @FAKS
              where  FAKS.KH=:_e
              and (M.KTM like upper(\':_a%\') or \':_a\' = \'\')
              and (upper(M.N) like upper(\'%:_b%\') or \':_b\' = \'\')
              and (FAKS.D >= to_date(:_c) or to_date(:_c) is null)
              and (FAKS.D <= to_date(:_d) or to_date(:_d) is null)
              and FAKS.SZ=\':_f\'
              order by 1,3',DEFINE.KTM,DEFINE.Nazwa,DEFINE.od,DEFINE.do,KH.ref,BEER.SZ);
   {? BEER.SZ='Z'
   || exec('war_hidz','ceny',X_Xb,'CENA','NETTO','VAT','BRUTTO')
   || exec('war_hids','ceny',X_Xb,'CENA','NETTO','VAT','BRUTTO')
   ?};

   _acr:=X_Xb.mk_sel('Pozycje dokumentów %1 kontrahenta: %2'@[{? BEER.SZ='S' || 'sprzedaży' || 'zakupu' ?},KH.KOD]
          ,,0,'#kh_fpozx_xb',,,,,'U');
   X_Xb.win_fld(_acr,,'SYM',,,15,,,'Symbol dokumentu'@);
   X_Xb.win_fld(_acr,,'POZ',,,-4,,,'Pozycja'@);
   X_Xb.win_fld(_acr,,'KTM',,,15,,,'Materiał'@);
   X_Xb.win_fld(_acr,,'NAZWA',,,15,,,'Nazwa'@);
   X_Xb.win_fld(_acr,,'DATA',,,10,,,'Data'@);
   X_Xb.win_fld(_acr,,'IL',,,9,3,,'Ilość'@);
   X_Xb.win_fld(_acr,,'CENA',,,9,2,,'Cena'@);
   X_Xb.win_fld(_acr,,'NETTO',,,11,2,,'Netto'@);
   X_Xb.win_fld(_acr,,'VAT',,,11,2,,'VAT'@);
   X_Xb.win_fld(_acr,,'BRUTTO',,,11,2,,'Brutto'@);
   X_Xb.win_act(_acr,,'Wyświetl',,,,,"exec('fap_disp','kontrahent')");
   X_Xb.win_act(_acr,,'Kolejność');
   X_Xb.win_link(_acr,"
       _fap_ref:=cur_tab().REF;
       _a:=obj_new('LINK');
       FAP.cntx_psh();
       FAP.use(form(8+_fap_ref));
       FAP.prefix();
       {? FAP.seek(_fap_ref,form(8+_fap_ref))
       || _a.LINK:=FAP.uidref()
       ?};
       FAP.cntx_pop();
       _a
       ");
   X_Xb.win_sel(_acr);
   X_Xb.select()
?};
undefine();
VAR_DEL.delete('X_Xb');
''


\kh_fzal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wyswietlanie zaliczek dla KH
::  OLD: \kh_fzal/zalicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('X_ZKH')>=100 || obj_del(X_ZKH) ?};
_qq:="
select
   FAPOW.WAL as Waluta
from
   FAPOW
   join KH using (FAPOW.KH,KH.REFERENCE)
where
   KH.REFERENCE=:_a
group by
   FAPOW.WAL
";
X_ZKH:=sql($_qq,KH.ref());
_wal:={? X_ZKH.first()
      ||
         _acr:=X_ZKH.mk_sel('Wybór waluty'@,'T',0,'kh_fzalx_zkh');
         X_ZKH.win_fld(_acr,,'WALUTA',,,8);
         X_ZKH.win_act(_acr,,'Formuła','Wybierz'@@,,'Wybór bieżącego zapisu'@,,"sel_exit()",1);
         X_ZKH.win_sel(_acr);
         {? X_ZKH.size()>1 || X_ZKH.select() || X_ZKH.first() ?} ;
         X_ZKH.WALUTA
      || ''
      ?};
_ndx:=FAPOW.ndx_tmp('',,'KH',,,'WAL',,,'KOREKTA',,,'FAKS_SYM',,);

FAPOW.index(_ndx);
FAPOW.prefix(KH.ref(),_wal,'N');
{? FAPOW.first()
||
   exec('zal_sum','faktury_zalicz');
   FAPOW.win_sel('WER_ZAL');
   DISP.HEAD:='Kwota'@;
   FAPOW.select(,,,'RP')
||
   FUN.info('Brak faktur zaliczkowych dla kontrahenta: %1.'@[KH.SKR])
?};
FAPOW.ndx_drop(_ndx);
VAR_DEL.delete('X_ZKH')


\inf_mdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wyswietlanie dokumentow magazynowych dla oddzialu i kontrahenta/projektu
::   WE: _a - przych ('T'), rozch ('N'), wszystkie ('')
::       [_b] - INTEGER - 0/1 - tryb wyświetlania: 0 - dla kontrahenta
::                                                 1 - dla projektu
::  OLD: \inf_mdok/firma.fml
::----------------------------------------------------------------------------------------------------------------------
_mode:=0;
{? var_pres('_b')=type_of(0)
|| _mode:=_b
?};

{? __PARSES.setEnv('LMG_MAG')=0
|| return()
?};
exec('upr_set','ceny');

FAKS.cntx_psh();
{? var_pres('X_Xa')>100 || obj_del(X_Xa) ?};
undefine();
define('h0',~~,'Dla zakresu dat       ');
define('h1',~~,'wystawienia dokumentów');
define('od',date(ST.AR,ST.AM,1),'Od daty      ');
define('do',date(ST.AR,ST.AM,0),'Do daty      ');
def_btn('text=%1'['Zapisz'@],'key:F2');
def_btn('text=%1'['Anuluj'@],'key:Esc');
{? def_edit("{? DEFINE.do>=DEFINE.od || '' || FUN.info('Błędny zakres dat.'@);'do' ?}",FUN.TYT)
||
   {? _mode=0
   ||
      X_Xa:=sql('
         select MG.SYM magazyn, TYPYDOK.T typ, ND.NR nr, ND.SYM sym, ND.D data, DK.P poz, M.KTM ktm, DK.IL ilosc,
            DK.C cena, DK.WAR wartosc, ND.REFERENCE ND_REF, ND.AR AR, DK.REFERENCE DK_REF
         from @DK join @ND using (DK.N, ND.REFERENCE) join MG using (ND.MAG, MG.REFERENCE)
            join TYPYDOK using (ND.TYP, TYPYDOK.REFERENCE) join M using (DK.M, M.REFERENCE)
         where MG.ODDZ = \':_a\' and ND.KH = :_b and ND.Z = \'T\'
            and (ND.D >= to_date(:_c) or to_date(:_c) is null) and (ND.D <= to_date(:_d) or to_date(:_d) is null)
            and (TYPYDOK.P= \':_e\' or \':_e\'=\'\' )
         order by 4, 1, 2, 3',ST.ODDZ,KH.ref(),DEFINE.od,DEFINE.do,_a)
   |? _mode=1
   ||
      X_Xa:=sql('
         select MG.SYM magazyn, TYPYDOK.T typ, ND.NR nr, ND.SYM sym, ND.D data, DK.P poz, M.KTM ktm, DK.IL ilosc,
            DK.C cena, DK.WAR wartosc, ND.REFERENCE ND_REF, ND.AR AR, DK.REFERENCE DK_REF
         from @DK join @ND using (DK.N, ND.REFERENCE) join MG using (ND.MAG, MG.REFERENCE)
            join TYPYDOK using (ND.TYP, TYPYDOK.REFERENCE) join M using (DK.M, M.REFERENCE)
         where MG.ODDZ = \':_a\' and DK.PROJEKTY=:_b and ND.Z = \'T\'
            and (ND.D >= to_date(:_c) or to_date(:_c) is null) and (ND.D <= to_date(:_d) or to_date(:_d) is null)
            and (TYPYDOK.P= \':_e\' or \':_e\'=\'\' )
         order by 4, 1, 2, 3',ST.ODDZ,PROJEKTY.ref(),DEFINE.od,DEFINE.do,_a)
   ?};
   exec('war_hid','ceny',X_Xa,'CENA','WARTOSC');
   {? _mode=0
   ||
      {? _a='T'
      || _title:='Przychodowe dokumenty dla kontrahenta: %1'@[KH.KOD]
      |? _a='N'
      || _title:='Rozchodowe dokumenty dla kontrahenta: %1'@[KH.KOD]
      || _title:='Wszystkie dokumenty dla kontrahenta: %1'@[KH.KOD]
      ?}
   |? _mode=1
   ||
      {? _a='T'
      || _title:='Przychodowe dokumenty do projektu: %1'@[PROJEKTY.SYM]
      |? _a='N'
      || _title:='Rozchodowe dokumenty do projektu: %1'@[PROJEKTY.SYM]
      || _title:='Wszystkie dokumenty do projektu: %1'@[PROJEKTY.SYM]
      ?}
   ?};

   _acr:=X_Xa.mk_sel(_title,,0,'#inf_mdokx_xa',,,,,'U');
   X_Xa.win_fld(_acr,,'MAGAZYN',,,3,,,'Magazyn'@);
   X_Xa.win_fld(_acr,,'TYP',,,4,,,'Typ'@);
   X_Xa.win_fld(_acr,,'NR',,,4,,,'Numer'@);
   X_Xa.win_fld(_acr,,'SYM',,,20,,,'Symbol'@);
   X_Xa.win_fld(_acr,,'DATA',,,,,,'Data'@);
   X_Xa.win_fld(_acr,,'POZ',,,-3,,,'Pozycja'@);
   X_Xa.win_fld(_acr,,'KTM',,,15,,,'Materiał'@);
   X_Xa.win_fld(_acr,,'ILOSC',,,8,3,,'Ilość'@);
   X_Xa.win_fld(_acr,,'CENA',,,8,,,'Cena'@);
   X_Xa.win_fld(_acr,,'WARTOSC',,,8,,,'Wartość'@);
   X_Xa.win_act(_acr,,'Formuła','pOzycje'@@,,'Wyświetlanie pozycji dokumentu'@,
      "
         _st_ar:=ST.AR;
         ST.AR:=X_Xa.AR;
         ND.cntx_psh();
         DK.cntx_psh();
         DK_L.cntx_psh();
         DK.use(8+X_Xa.DK_REF);
         ND.use(8+X_Xa.ND_REF);
         DK_L.use('doklk'+((8+X_Xa.DK_REF)+3));
         DK.index('DOKMAG');
         DK.prefix(exec('FindAndGet','#table',ND,X_Xa.ND_REF,,,null()));
         {? DK.first()
         ||
            SUM.WAR:=0;
            {!
            |?
               SUM.WAR+=DK.WAR;
               DK.next()
            !};
            DK.first()
         ?};
         DK.win_sel('WER_DOK');
         exec('dk_p_ib','magdok_poz','WER_DOK');
         {? DK.seek(X_Xa.DK_REF,(8+X_Xa.DK_REF))
         ||
            DK.N().SYM;
            DISP.FAKS:=exec('zwr_symbol_fak','magdok_wspolne');
            DK.select(,DK.seek(X_Xa.DK_REF,(8+X_Xa.DK_REF)),20)
         ||
            FUN.info('Nie znaleziono dokumentu magazynowego.'@)
         ?};
         ND.cntx_pop();
         DK.cntx_pop();
         DK_L.cntx_pop();
         ST.AR:=_st_ar
      "
      ,,1);
   X_Xa.win_act(_acr,,'Kolejność');
   X_Xa.fld_attr('ND_REF',2);
   X_Xa.fld_attr('AR',2);
   X_Xa.win_link(_acr,"
        _dk_ref:=cur_tab().DK_REF;
        _a:=obj_new('LINK');
        DK.cntx_psh();
        DK.use(form(8+_dk_ref));
        DK.prefix();
        {? DK.seek(_dk_ref,form(8+_dk_ref))
        || _a.LINK:=DK.uidref()
        ?};
        DK.cntx_pop();
        _a
        ");
   X_Xa.win_sel(_acr);
   X_Xa.select()
?};
VAR_DEL.delete('X_Xa');
undefine();
FAKS.cntx_pop();
''


\wysofert
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wyswietla oferty z poziomu kontrahentow
::  OLD: \wysofert/oferty.fml
::----------------------------------------------------------------------------------------------------------------------
{? __PARSES.setEnv('LSP_OFE')=0
|| return()
?};

OFE.cntx_psh();
OFE.win_sel('WER');

:: ustawienie zakresu
ZAKR.KH:=KH.ref();
ZAKR.HAN:=null;
ZAKR.US:=null;
ZAKR.T:='W';
ZAKR.AKT:='W';
exec('zakr_all','lsp');

OFE.select(,,,'DUPYOMTAZI:DZ');
OFE.cntx_pop();
''


\arch_zkd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wyswietlanie zamowien archiwalnych z wybranego roku
::   WE: [_a] - 1-wołane dla kontrahenta, 0-domyślnie nie
::             UWAGA:
::             Wywołanie:
::             - _a=0 niewykorzystywane
::             - _a=2 niewykorzystywane (użyte w oknie WER2 tabeli ZD_NAG ale WER2 niewykorzystywane)
::  OLD: \arch_zkd/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_cntx:={? var_pres('_a')=type_of(0) || _a || 0 ?};
:: ustawienie zmiennych
exec('openzd_psh','open_tab');
:: parametry pracy
{? __PARSES.setEnv('LZK_ZDS')=0
||
   exec('openzd_pop','open_tab');
   return()
?};
VAR_DEL.delete('bie_r','czy_dsp');
_il:=0;
czy_dsp:=0;
_ZAKR:=obj_new('KH','MAG','US','T','ARCH_ROK');
_ZAKR.KH:=ZAKR.KH;
_ZAKR.MAG:=ZAKR.MAG;
_ZAKR.US:=ZAKR.US;
_ZAKR.T:=ZAKR.T;
_ZAKR.ARCH_ROK:=ZAKR.ARCH_ROK;
ZAKR.T:='W';
:: DRO_TODO_AWI: ZAKR.WG - zmienna do usunięcia
::ZAKR.WG:='O';
:: okno archiwum
_sel:=ZD_NAG.grp_make('Archiwalne zamówienia dostaw w podziale na lata'@,,'lesoiazowesawee');
_Tab:=ZD_NAG.names();
{? _Tab.last()
||
   {!
   |?
      {? (_Tab.NAME+2)<>'__' & ((_Tab.NAME-2)+1)=ST.ODDZ
      ||
         ZD_NAG.use(_Tab.NAME);
         ZD_NAG.index('KH');
         ZD_NAG.prefix(ZAKR.KH);
         {? ZD_NAG.first()
         ||
            _il+=1;
            _form:=$(
               'czy_dsp:=1;'
               'bie_r:='''+_Tab.NAME+''';'
               'ZAKR.ARCH_ROK:=bie_r+2;'
               'exec(\'openzd\',\'open_tab\',ST.ODDZ+(bie_r+2));'
               'exec(\'zakr_ind\',\'zamdst_nag\',0);'
               'ZD_NAG.first()'
            );
            _far:="
               {? czy_dsp=1 || grp_disp(ZD_NAG,'WER1_ARC',0,1) ?};
               czy_dsp:=0
            ";
            ZD_NAG.grp_sel(_sel,ZD_NAG,'WER1_ARC',$(2000+#(_Tab.NAME+2)),_far,,,,_form)
         ?}
      ?};
      _Tab.prev() & _il<64
   !}
?};
:: wyświetlenie archiwum
{? _il=0
||
   FUN.info('Brak zamówień w archiwum.'@)
||
   _zd_poz:=ZD_POZ.actions_grayed('WER','Z:Z');
   ZD_NAG.win_sel(_sel);
   ZD_NAG.select();
   ZD_POZ.actions_grayed('WER',_zd_poz)
?};
:: sprzątanie
exec('openzd_pop','open_tab');
VAR_DEL.delete('bie_r','czy_dsp');
_ZAKR.KH==ZAKR.KH;
_ZAKR.MAG==ZAKR.MAG;
_ZAKR.US==ZAKR.US;
_ZAKR.T==ZAKR.T;
_ZAKR.ARCH_ROK==ZAKR.ARCH_ROK;
exec('zakr_ind','zamdst_nag',0);
''


\kh_zamk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: zamowienia sprzedazy biezacego kontrahenta
::  OLD: \kh_zamk/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? __PARSES.setEnv('LSP_ZKN')=0
|| return()
?};

ZK_N.cntx_psh();
BEER.MW:='Z';
exec('ustaw_ww','eurusd','Z');

_rodz_zam:=ZAKR.RODZ_ZAM;
_zakr:=ZAKR.T;
_wg:=ZAKR.WG;
_kh:=ZAKR.KH;

_typ:=BEER.TYPYZAM;
_nawig:=BEER.NAWIG;

BEER.TYPYZAM:=null;
BEER.NAWIG:='ZK';

ZAKR.RODZ_ZAM:='S';
ZAKR.T:='A';
ZAKR.WG:='K';
ZAKR.KH:=KH.ref();
HELP.WHERE:='M';
BPMN.DISPLAY:=1;

ZK_N.win_edit('RED');
ZK_N.win_sel('WERZ');
exec('zakr_ind','zamowienia');

_prod:=exec('tte_lic','tte');
ZK_N.select(,,,{? _prod='N' || 'N(AEX)' || '' ?}+'DUPZWLAORNFC:DZ');
ZK_N.cntx_pop();

ZAKR.RODZ_ZAM:=_rodz_zam;
ZAKR.T:=_zakr;
ZAKR.WG:=_wg;
ZAKR.KH:=_kh;

BEER.TYPYZAM:=_typ;
BEER.NAWIG:=_nawig;
BPMN.DISPLAY:=0;
''


\arch_zkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wyswietlanie zamowien archiwalnych z wybranego roku
::       UWAGA:
::       Obsługa zamówień wewnętrznych jest nieskończona i niewykorzystywana.
::   WE: [_a] =1-wolane dla kontrahenta;2-wolane dla projektu =0-wpp (domyslnie)
::             UWAGA:
::             Po analizie kodu stwierdzam, że wywołanie:
::             - _a=0 niewykorzystywane
::             - _a=2 niewykorzystywane (użyte w oknie WER2 tabeli ZK_N ale WER2 niewykorzystywane)
::       [_b] - 'W'-wewnetrzne 'Z'-sprzedazy (domyslnie)
::             UWAGA:
::             Po analizie kodu stwierdzam, że wywołanie:
::             - _b niewykorzystywane dlatego zawsze przyjmowana jest domyślna wartość 'Z'
::  OLD: \arch_zkn/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_cntx:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_rodz:={? var_pres('_b')=type_of('') || _b || 'Z' ?};
:: ustawienie zmiennych
exec('openz_psh','open_tab');
:: parametry pracy
{? __PARSES.setEnv('LSP_ZKN')=0
||
   exec('openz_pop','open_tab');
   return()
?};
VAR_DEL.delete('bie_r');
{? _rodz='Z'
||
   _ZAKR:=obj_new('KH','HAN','US','ARCH_ROK');
   _ZAKR.KH:=ZAKR.KH;
   _ZAKR.HAN:=ZAKR.HAN;
   _ZAKR.US:=ZAKR.US;
   _ZAKR.ARCH_ROK:=ZAKR.ARCH_ROK;
   exec('init_zkn','lsp')
||
   _ZAKR:=obj_new('WYD','US','ZLSYM','ARCH_ROK');
   _ZAKR.WYD:=ZAKR.WYD;
   _ZAKR.US:=ZAKR.US;
   _ZAKR.ZLSYM:=ZAKR.ZLSYM;
   _ZAKR.ARCH_ROK:=ZAKR.ARCH_ROK;
   exec('init','lmg')
?};
_il:=0;
:: okno archiwum
_sel:=ZK_N.grp_make('Archiwalne zamówienia %1 w podziale na lata'@[{? _rodz='Z' || 'sprzedaży'@ || 'wewnętrzne'@ ?}],
   ,'lpdyynsiwyaaksi');
_Tab:=ZK_N.names();
{? _Tab.last()
||
   {!
   |?
      {? (_Tab.NAME+2)<>'__' & ((_Tab.NAME-2)+1)=ST.ODDZ
      ||
         ZK_N.use(_Tab.NAME);
         {? _cntx=1
         || ZK_N.index('ZAM_KL'); ZK_N.prefix(_rodz,KH.ref)
         |? _cntx=2
         || ZK_N.index('PROJEKTY'); ZK_N.prefix(_rodz,PROJEKTY.ref)
         || ZK_N.index('ZAM_KL'); ZK_N.prefix(_rodz)
         ?};
         {? ZK_N.first()
         ||
            _il+=1;
            _form:=$(
                  'bie_r:='''+_Tab.NAME+''';'
                  'ZAKR.ARCH_ROK:=bie_r+2;'
                  '{? _a || exec(\'openz\',\'open_tab\',ST.ODDZ+(bie_r+2));'+
               {? _cntx=1
               || 'ZK_N.index(\'ZAM_KL\');'
                  'ZK_N.prefix(\''+_rodz+'\',KH.ref);'
                  'exec(\'zakr_ind\',\'zamsiw_nag\',,0);'
               |? _cntx=2
               || 'ZK_N.index(\'PROJEKTY\');'
                  'ZK_N.prefix(\''+_rodz+'\',PROJEKTY.ref);'
                  'exec(\'zakr_ind\',\'zamsiw_nag\',,0);'
               || 'ZK_N.index(\'ZAM_KL\');'
                  'ZK_N.prefix(\''+_rodz+'\');'
                  'exec(\'zakr_ind\',\'zamsiw_nag\',,0);'
               ?}+
                  'ZK_N.first() ?}');
            ZK_N.grp_sel(_sel,ZK_N,'WER1_ARC',$(2000+#(_Tab.NAME+2)),,,,,_form)
         ?}
      ?};
      _Tab.prev() & _il<64
   !}
?};

{? _il=0
||
:: puste archiwum
   FUN.info('Brak zamówień sprzedaży w archiwum.'@)
||
:: wyświetlenie archiwum
   {? _rodz='Z'
   || ZK_N.win_edit('RED')
   || ZK_N.win_edit('REDW')
   ?};
   ZK_N.win_sel(_sel);
   ZK_N.select()
?};
:: sprzątanie
exec('openz_pop','open_tab');
VAR_DEL.delete('bie_r');
{? _rodz='Z'
||
   _ZAKR.KH==ZAKR.KH;
   _ZAKR.HAN==ZAKR.HAN;
   _ZAKR.US==ZAKR.US;
   _ZAKR.ARCH_ROK==ZAKR.ARCH_ROK
||
   _ZAKR.WYD==ZAKR.WYD;
   _ZAKR.US==ZAKR.US;
   _ZAKR.ZLSYM==ZAKR.ZLSYM;
   _ZAKR.ARCH_ROK==ZAKR.ARCH_ROK
?};
:: odświeżenie obszaru
{? _cntx=1
||
:: obszar kontrahenta
   {? _rodz='Z'
   ||
      exec('zakr_ind','zamsiw_nag',,0)
   ||
      exec('zakr_ind_wew','zamsiw_nag',,0)
   ?}

|? _cntx=2
||
:: ???
   exec('zakr_ind','zamsiw_nag',2);
   grp_disp(ZK_N,'WER2')
||
:: ???
   exec('zakr_ind','zamsiw_nag',2);
   grp_disp(ZK_N,'WER1')
?};
''


\kh_zamd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: zamowienia dostaw biezacego kontrahenta
::  OLD: \kh_zamd/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? __PARSES.setEnv('LZK_ZDS')=0
|| return()
?};
exec('upr_set','ceny');

ZD_NAG.cntx_psh();
BEER.ZAKR:='';
ZAKR.ARCH_ROK:='';
ZAKR.KH:=KH.ref();
ZAKR.T:='W';
exec('zakr_ind','zamdst_nag')
;
ZD_NAG.win_sel('WER');
ZD_POZ.win_sel('WER');
_zd_poz:=ZD_POZ.actions('WER','DZPUE:DZPUE');
_zd_rn:=ZD_RN.actions('WER','DUM:D');
ZD_NAG.select(,,,'DUpWPENMAZR:DZE');
ZD_POZ.actions('WER',,_zd_poz);
ZD_RN.actions('WER',,_zd_rn);
ZD_NAG.cntx_pop();
''


\firm_zbm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: faktury kontrahenta z biezacego miesiaca - widok kontrahentów
::  OLD: \firm_zbm/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
exec('kh_fak','kontrahent','m',1)


\firm_zbr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: faktury kontrahenta z biezacego roku - widok kontrahentów
::  OLD: \firm_zbr/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
exec('kh_fak','kontrahent','r',1)


\firm_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: faktury kontrahenta wszystkie - widok kontrahentów
::  OLD: \firm_all/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
exec('kh_i_fa','kontrahent',1)


\firm_alk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: faktury kontrahenta wszystkie z uwzglednieniem korekt - widok kontrahentów
::  OLD: \firm_alk/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
exec('kh_i_fa2','kontrahent',1)


\firm_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: pozycje faktur kontrahenta - widok kontrahentów
::  OLD: \firm_poz/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
exec('kh_fpoz','kontrahent',1)


\kh_rezer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: aktualne rezerwacje w systemie dla kontrahenta
::  OLD: \kh_rezer/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? ST.ODDZ='' || FUN.info('Funkcja niedostępna. Brak uprawnień do oddziału.'@); return('') ?};

{? __PARSES.setEnv('LMG_DSM')=0
|| return()
?};

exec('openz','open_tab',ST.ODDZ+'__');

exec('sm_rezer','rezerwacje',1)


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Ustawienie parametrów sesji w obszarze roboczym kontrahentów
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_size:=0;
_tab:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'B_DOMAIN','STRING[8]','Obszar'
);
{! _it:=1..obj_len(_env.tabs)
|! {? var_pres('_cfg')>100
   || obj_del(_cfg)
   ?};
   _cfg:=_env.tabs[_it];
   {? _cfg.B_DOMAIN<>''
   ||
      _tab.prefix(_cfg.B_DOMAIN);
      {? _tab.size()=0
      || _tab.blank();
         _tab.B_DOMAIN:=_cfg.B_DOMAIN;
         _tab.add()
      ?}
   ?};
   ~~
!};

_tab.clear();
_size:=_tab.size();
{? _size>0
||
   _domains:=obj_new(_size);

   _it:=1;
   {? _tab.first()
   || {!
      |? _domains[_it]:=_tab.B_DOMAIN;
         _it+=1;
         _tab.next()
      !}
   ?};
   __PARSES.editDom(_domains);
   AreaTitle.setTitle()
|| FUN.emsg('Brak uprawnień do redagowania parametrów pracy.'@)
?};
{? _env.CUR_WIN='kh_active'
|| grp_disp(KH,_env.WER,1)
|? _env.CUR_WIN='kh_all'
|| grp_disp(KH,_env.WER_KHW,1)
|? _env.CUR_WIN='kh_dod'
|| grp_disp(KH_DOD,_env.WER_KH_DOD,1)
?};
~~


\kh_cre
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Kto i kiedy utworzył kontrahenta
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KH.CRE_USER:=OPERATOR.USER().DANE;
KH.CRE_DATE:=date;
KH.CRE_TIME:=time();
exec('kh_mod','kontrahent')


\kh_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Kto i kiedy zmodyfikował kontrahenta
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KH.MOD_USER:=OPERATOR.USER().DANE;
KH.MOD_DATE:=date;
KH.MOD_TIME:=time()


\allkhnrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wypelnia pole NRS dla wszystkich kontrahentow i generuje numery subkont
::  OLD: \allkhnrs/kontr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('subkonta','rachunki',0,null())


\sprczynr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy wszystkie kody kontrahentow sa numeryczne
::       i numer do subkonta nie był nadawany a jeśli był to czy jest zgodny z kodem kontrahenta
::   WY: 1-tak 0-nie
::  OLD: \sprczynr/kontr.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
KH.cntx_psh();
KH.index('KOD');
KH.prefix(2);
{? KH.first()
|| {!
   |? _wyn:=form(#KH.KOD,-(+KH.KOD),0,'99')=KH.KOD & (KH.NRS<0 | KH.NRS=#KH.KOD);
      _wyn & KH.next()
   !}
?};
KH.cntx_pop();
_wyn


\kh_dod_ety_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: zmiana kolorow etykiet danych z KH_DOD
::  OLD: \kh_dod_ety_kol/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
_kol:=exec('fir_ety_kol','color');

KH.efld_opt('RED','label_color='+_kol,KH_DOD,'DTKL');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'LK');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'KLIM','NAZ');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'HAN','KOD');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'HAN','NAZ');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'HAN','ADR');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'HAN','TEL');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'HAN','EMAIL');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'HAN','UW');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'B');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'RAB');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'STATUS');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'EFAKTURA');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'NASZ_KOD');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'SP');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'BL_INCL');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'WSTYP');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'BL_STAT');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'BL_DATE');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'TP');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'FAKTOR');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'KSEFKHOD');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'KSEFLIOD');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'WAL','KOD');
KH.efld_opt('RED','label_color='+_kol,KH_DOD,'BL_INV_D');
~~


\hist_chk_nip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Historia kontroli aktywności podatnika w VAT
::   WE: [_a] - kontrahent
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? var_press('_a')>0
|| KH.prefix();
   {? type_of(_a)=type_of(1)
   || KH.seek(_a,)
   || KH.seek(_a)
   ?}
|? cur_tab()=SLO
|| KH.index('KOD'); KH.prefix(2,SLO.KOD);
   _ok:=KH.first()
|? cur_tab()=NIPY
|| NIPY.KH()
|? cur_tab(1,1)=VAT_PS
|| _snip:=exec('niptostr','#string',VAT_PS.NIP);
   KH.index('SNIP'); KH.prefix(2,_snip,);
   _ok:=KH.first()
?};
_gr_vat:=exec('kh_grvat_szuk','kontrahent',KH.ref(),1);
{? _gr_vat<>null()
|| KH.cntx_psh();
   KH.seek(_gr_vat);
   _title_tab:='NIP - grupa VAT'@;
   _title_win:=' dla grupy VAT '@
|| _title_tab:='NIP'@;
   _title_win:=' dla kontrahenta '@
?};
{? _ok
|| VAR_DEL.delete('KHchkTYP');
   KHchkTYP:='K';
   _grp:=KHCHKNIP.grp_make('Historia kontroli',,'#khchknipsel');
   KHCHKNIP.grp_sel(_grp,,'WER_K',_title_tab,,,,,"exec('be_hist_chk_nip','kontrahent','K')",,,,,);
   KHCHKNIP.grp_sel(_grp,,'WER_U','NIP-UE',,,,,"exec('be_hist_chk_nip','kontrahent','U')");
   KHCHKNIP.win_sel(_grp);
   KHCHKNIP.hdr_sel();
   KHCHKNIP.hdr_sel(_title_win+KH.SKR);
   KHCHKNIP.select();
   VAR_DEL.delete('KHchkTYP')
?};
{? _gr_vat<>null()
|| KH.cntx_pop
?}


\be_hist_chk_nip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Historia kontroli aktywności podatnika w VAT - przed obsługą okna
::   WE: _a - typ rachunku: K-krajowy U-unijny
::----------------------------------------------------------------------------------------------------------------------
khChkNip:=_a;
{? _a='K' & var_pres('RBK',KHCHKNIP)>0
|| KHCHKNIP.index('D_ACTIVE');
   KHCHKNIP.prefix(KH.ref(),_a)
|| KHCHKNIP.index('KH');
   KHCHKNIP.prefix(KH.ref(),_a)
?};
KHCHKNIP.win_edit({? _a='K' || 'RED'+{? PAR_SKID.get(20)='T' || 'S' || '' ?} || '' ?});
KHCHKNIP.win_sel('WER_'+_a);
KHCHKNIP.hdr_sel();
KHCHKNIP.hdr_sel(' — '+{? _a='K' || 'NIP' || 'NIP UE' ?});
1


\hist_chk_nipue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Historia kontroli aktywności podatnika w VAT-UE
::----------------------------------------------------------------------------------------------------------------------
_nip:=NIPY.KRAJ().KOD+NIPY.NIP;
KHCHKNIP.index('NIP');
KHCHKNIP.prefix(NIPY.KH,_nip);
KHCHKNIP.win_edit('RED'+{? PAR_SKID.get(20)='T' || 'S' || '' ?});
KHCHKNIP.win_sel('WER_U');
KHCHKNIP.hdr_sel();
KHCHKNIP.hdr_sel(' — '+'NIP UE: %1'@[_nip]);
KHCHKNIP.select()


\add_chk_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Dodaje informacje o sprawdzeniu aktywności podatnika w VAT
::   WE:  _a  - NIP, REGON
::        _b  - typ NIP-u: 'K'rajowy, 'U'nijny
::        _c  - kontrahent
::        _d  - podatnik aktywny w VAT: 1-tak 0-nie
::        _e - obiekt z wynikiem sprawdzania aktywaności
::----------------------------------------------------------------------------------------------------------------------
{? _a<>''
|| _user:=OPERATOR.USER().KOD;
   KHCHKNIP.index('KH');
   KHCHKNIP.prefix();
   KHCHKNIP.blank();
   KHCHKNIP.NIP:=_a;
   KHCHKNIP.TYPE:=_b;
   {? var_pres('BAZA',KHCHKNIP)>0 || KHCHKNIP.BAZA:={? KHCHKNIP.TYPE='U' || 'U' || 'K' ?} ?};
   KHCHKNIP.KH:=_c;
   KHCHKNIP.ACTIVE:={? _d || 'T' || 'N' ?};
   KHCHKNIP.USER:=_user;
   _rb:='';
   {? _b='K' & var_pres('_e')>0 & var_pres('D_ACTIVE',KHCHKNIP)>0
   || KHCHKNIP.D_ACTIVE:=_e.DATA;
      KHCHKNIP.STATUS:=_e.STATUS;
      KHCHKNIP.NAZ:=_e.NAZ;
      KHCHKNIP.ADRES:=_e.ADRES;
      KHCHKNIP.D_REG:=_e.D_REJ;
      KHCHKNIP.D_REMOVE:=_e.D_USU;
      KHCHKNIP.D_REST:=_e.D_RET;
      KHCHKNIP.ID_REQ:=_e.ID_REQ;
      KHCHKNIP.C_ACTIVE:=_e.ACTIVE;
      {? var_pres('KRS',KHCHKNIP)>0
      || KHCHKNIP.KRS:=_e.KRS;
         KHCHKNIP.REGON:=_e.REGON;
         KHCHKNIP.PESEL:=_e.PESEL;
         KHCHKNIP.P_REMOVE:=_e.P_USU;
         KHCHKNIP.P_REST:=_e.P_RET
      ?};
      {? var_pres('RBS',_e)>0
      || {! _i:=1..obj_len(_e.RBS)
         |! _rb+=_e.RBS[_i]+', '
         !}
      ?}
   ?};
   {? _b='B' & var_pres('RBK',KHCHKNIP)>0 & var_pres('_e')>0
   || KHCHKNIP.D_ACTIVE:=_e.DATA;
      KHCHKNIP.C_ACTIVE:=_e.ACTIVE;
      KHCHKNIP.STATUS:=_e.STATUS;
      KHCHKNIP.ID_REQ:=_e.ID_REQ;
      KHCHKNIP.RBK:=_e.RBK
   ?};
   {? var_pres('_e')>0 & var_pres('D',_e)>0
   || KHCHKNIP.DATE:=_e.D;
      KHCHKNIP.TIME:=_e.T
   ?};
   {? KHCHKNIP.add()
   || {? var_pres('_e')>0
      || _e.REF:=#KHCHKNIP.ref()
      ?};
      _put:=0;
      {? var_pres('OSOBY',KHCHKNIP)>0 & var_pres('_e')>0 & _e.OSOBY<>''
      || KHCHKNIP.memo_set(_e.OSOBY,'OSOBY');
         KHCHKNIP.memo_put(,'OSOBY');
         _put:=1
      ?};
      {? _rb<>''
      || KHCHKNIP.memo_set(_rb-2,'RB');
         KHCHKNIP.memo_put(,'RB');
         _put:=1
      ?};
      {? _put || KHCHKNIP.put() ?}
   ?}
?}


\kh_dod_validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.28]
:: OPIS: Walidacja pól kartoteki danych dodatkowych kontrahenta KH_DOD
::   WE: [_a] - [0]/1 - przechowuj komunikaty w envie web serwisu
::   WY: '' albo akronim pola
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _env:=_a || _env:=0 ?};
{? _env || _wsenv:=exec('wsenv','#mwapi') ?};

_wyn:='';
{? _wyn='' & KH_DOD.RAB<0 | KH_DOD.RAB>99.99
|| _txt:='Możliwe wprowadzenie maksymalnego rabatu o wartości: 99.99 %%'@;
   {? _env
   || _wsenv.add_error(_txt)
   || FUN.info(_txt)
   ?};
   _wyn:='RAB'
|? _wyn='' & KH_DOD.LK<0
|| _txt:='Wartość limitu nie może być mniejsza od zera.'@;
   {? _env
   || _wsenv.add_error(_txt)
   || FUN.info(_txt)
   ?};
   KH_DOD.LK:=0;
   _wyn:='LK'
|? _wyn='' & KH_DOD.LK>0 & KH_DOD.KLIM=null()
& (KH.cntx_psh();GRKH.cntx_psh();
   _klim:=KH_DOD.KH().GRKH().KLIM;
   KH.cntx_pop();GRKH.cntx_pop();
   _klim=null())
|| _txt:='Podano wartość limitu - wymagane określenie sposobu kontroli limitu dla kontrahenta lub grupy.'@;
   {? _env
   || _wsenv.add_error(_txt)
   || FUN.info(_txt)
   ?};
   _wyn:='KLIM'
?};
_wyn


\kh_pow_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Dołączanie powiązanych firm
::----------------------------------------------------------------------------------------------------------------------
KH_POW.cntx_psh(); KH_POW.blank(1);
_ref:=null;
KH_POW.index('DISP');
KH_POW.prefix();
KH_POW.DATAOD:=date();
KH_POW.FIRMA:=REF.FIRMA;
{? KH_POW.edit("exec('spr_kh_pow','kontrahent')") & KH_POW.add()
|| _ref:=KH_POW.ref()
?};
KH_POW.cntx_pop();
{? _ref || KH_POW.seek(_ref) ?}


\kh_pow_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Poprawianie powiązanych firm
::----------------------------------------------------------------------------------------------------------------------
{? KH_POW.get()
|| {? KH_POW.r_lock(1,1,1)
   || KH_POW.win_edit('RED');
      {? KH_POW.edit("exec('spr_kh_pow','kontrahent')") || KH_POW.put() ?}
   || FUN.info('Powiązanie z firmą wykorzystywane przez innego użytkownika.'@)
   ?};
   unlock_r()
|| FUN.info('Nie znaleziono powiązania z firmą.'@)
?}


\kh_pow_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Usuwanie powiązania kontrahenta z firmą
::----------------------------------------------------------------------------------------------------------------------
{? KH_POW.get()
|| {? FUN.ask('Usunąć powiązanie z firmą?'@) || KH_POW.del(,1) ?}
|| FUN.info('Nie znaleziono powiązania z firmą.'@)
?}


\spr_kh_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Sprawdzenie powiązania kontrahenta z firmą
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
_ref:={? -menu_txt()='popraw' || KH_POW.ref() || null ?};
_od:=KH_POW.DATAOD; _do:=KH_POW.DATADO;
{? KH_POW.DATAOD=date(0,0,0)
|| FUN.info('Nie wprowadzono daty początkowej powiązania kontrahenta z firmą.'@); _zwrot:='DATAOD'
?};
{? _zwrot='' & ~exec('chk_unq_rec','kontrahent')
|| FUN.info('Rekord nie jest unikalny.'@); _zwrot:='KH'
?};
{? _zwrot='' & KH_POW.DATAOD<>date(0,0,0) & KH_POW.DATADO<>date(0,0,0) & KH_POW.DATADO<KH_POW.DATAOD
|| FUN.info('Nieprawidłowa kolejność dat.'@); _zwrot:='DATAOD'
?};
{? _zwrot=''
|| KH_POW.cntx_psh(); KH_POW.index('RODZAJ'); KH_POW.prefix(KH_POW.RODZAJ,KH_POW.FIRMA,KH.ref());
   {? KH_POW.find_le(_od) &
   _od>KH_POW.DATAOD &
   (_od<=KH_POW.DATADO | KH_POW.DATADO=date(0,0,0)) &
   _ref <> KH_POW.ref()
   || FUN.info('Istnieje zapis z pokrywającą się datą'@); _zwrot:='DATAOD'
   ?};
   KH_POW.cntx_pop()
?};
{? _zwrot=''
|| KH_POW.cntx_psh(); KH_POW.index('RODZAJ'); KH_POW.prefix(KH_POW.RODZAJ,KH_POW.FIRMA,KH.ref());
   {? KH_POW.find_ge(_od)
   || {? _ref=KH_POW.ref() || KH_POW.find_ge(KH_POW.DATAOD+1) ?};
      {?_od <= KH_POW.DATAOD &
      (_do>=KH_POW.DATAOD | _do=date(0,0,0))
      || FUN.info('Istnieje zapis z pokrywającą się datą'@); _zwrot:='DATAOD'
      ?}
   ?};
   KH_POW.cntx_pop()
?};
{? _zwrot=''
|| KH_POW.cntx_psh(); KH_POW.index('RODZAJ'); KH_POW.prefix(KH_POW.RODZAJ,KH_POW.FIRMA,KH.ref(),KH_POW.DATAOD);
   {? KH_POW.first()
   || {?_ref <> KH_POW.ref()
      || FUN.info('Istnieje zapis z pokrywającą się datą'@); _zwrot:='DATAOD'
      ?};
      KH_POW.next()
   ?};
   KH_POW.cntx_pop()
?};
{? _zwrot='' & ~KH_POW.FIRMA
|| FUN.info('Nie wybrano firmy.'@); _zwrot:='FIRMA'
?};
{? _zwrot='' & ~KH_POW.KH
|| FUN.info('Nie wybrano kontrahenta.'@); _zwrot:='KH'
?};
{? _zwrot='' & ~KH_POW.RODZAJ
|| FUN.info('Nie wybrano powiązania.'@); _zwrot:='RODZAJ'
?};
_zwrot


\zam_poprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Zamknięcie daty poprzedniego zapisu
::----------------------------------------------------------------------------------------------------------------------
KH_POW.cntx_psh(); KH_POW.index('DISP'); KH_POW.prefix(KH.ref());
{? KH_POW.first()
|| {! |?
      KH_POW.cntx_psh();
      _od:={? KH_POW.next() || KH_POW.DATAOD-1 || date(0,0,0) ?};
      KH_POW.cntx_pop();
      {? _od<>date(0,0,0) & (KH_POW.DATADO=date(0,0,0) | KH_POW.DATADO>_od)
      || KH_POW.DATADO:=_od;
         KH_POW.put()
      ?};
      KH_POW.next()
   !}
?};
KH_POW.cntx_pop()


\kh_pow_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Powiązania kontrahenta z firmą
::----------------------------------------------------------------------------------------------------------------------
KH_POW.cntx_psh(); KH_POWR.cntx_psh();KH.cntx_psh();
KH_POW.win_sel('WER'); KH_POW.win_edit('RED');
KH_POWR.win_sel('WER'); KH_POWR.win_edit('RED');
KH_POW.index('FIRMA'); KH_POWR.index('KOD');
KH_POW.select();
KH_POW.cntx_pop(); KH_POWR.cntx_pop();KH.cntx_pop()


\kh_pow_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Triggery dla tabeli KH_POW - dołącz po i popraw po
::----------------------------------------------------------------------------------------------------------------------
{? KH_POW.KH
|| KH.cntx_psh(); KH.prefix(); KH_POW.KH();
   KH_DOD.cntx_psh(); KH_DOD.index('KH_DOD'); KH_DOD.prefix(REF.FIRMA,KH.ref());
   {? KH_DOD.first()
   || KH_DOD.STATUS:='P'; KH_DOD.put()
   ?};
   KH_DOD.cntx_pop();
   KH.cntx_pop()
?};
~~


\kh_pow_trig_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Trigger dla tabeli KH_POW - usuń po
::----------------------------------------------------------------------------------------------------------------------
KH_POW.cntx_psh(); KH_POW.index('DISP'); KH_POW.prefix(KH.ref());
{? ~KH_POW.first()
|| KH_DOD.cntx_psh(); KH_DOD.index('KH_DOD'); KH_DOD.prefix(REF.FIRMA,KH.ref());
   {? KH_DOD.first()
   || KH_DOD.STATUS:='N'; KH_DOD.put()
   ?};
   KH_DOD.cntx_pop()
?};
KH_POW.cntx_pop();
~~


\be_kh_dod_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Przed redakcją pola KH_DOD.STATUS
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? -menu_txt()<>'dołącz'
|| KH.cntx_psh(); KH.prefix();
   KH_DOD.KH();
   KH_POW.cntx_psh(); KH_POW.index('DISP'); KH_POW.prefix(KH.ref());
   _zwrot:=~KH_POW.first();
   KH_POW.cntx_pop(); KH.cntx_pop()
?};
_zwrot


\konto_firma_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.42]
:: OPIS: Dla podanego konta i daty zwraca, czy kontrahent zawarty w koncie ma powiązanie z firmą
::   WE:  _a  - symbol konta
::       [_b] - data (jeśli nie przekazana to początek okresu raportowania)
::   WY: FIRMA.ref() lub null
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=null;
{? SIK.NR_SL=null

|| {? _=1
   || _b:=OKRESY.OKR_RAP().OKRES_OD().POCZ;
      {? _b=date(0,0,0)
      || OKRO_F.cntx_psh();
         OKRO_F.index('FIRMA_NR');
         OKRO_F.prefix();
         OKRESY.OKR_RAP().OKRES_OD();
         {? OKRO_F.NR=0 & OKRO_F.next() | OKRO_F.NR<>0 & OKRO_F.prev() || _b:=OKRO_F.POCZ ?};
         OKRO_F.cntx_pop()
      ?}
   ?};
   {? type_of(_a)=type_of('') & type_of(_b)=type_of(date()) & _a<>'' & _b<>date(0,0,0)
   || ROZNE.UT_OKROD:=null;
      exec('szuk_okr','okresy',_b);
      {? ROZNE.UT_OKROD
      || ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix();
         OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix();
         ROZNE.UT_OKROD().ROK();
         KS.cntx_psh(); KS.index('SYM'); KS.prefix(ROK_F.ref(),ROK_F.SYNT+_a);
         {? KS.first()
         || _sep:={? ROK_F.SEP=',' || 0 || 1 ?};
            _a:=(ROK_F.SYNT+_sep)-_a;
            RS.cntx_psh(); RS.index('RS'); RS.prefix();
            SLUAPPL.cntx_psh(); SLUAPPL.prefix();
            SLU.cntx_psh(); SLU.prefix();
            BUD.cntx_psh(); BUD.index('KS'); BUD.prefix(KS.ref());
            KH.cntx_psh(); KH.index('KOD'); KH.prefix();
            KH_POW.cntx_psh(); KH_POW.index('DISP');
            {? BUD.first()
            || {! |?
                  BUD.SLU().SLU();
                  {? RS.find_key(SLU.WZ,) & RS.TAB='KH'
                  || {? KH.find_key(2,SLU.DL+_a,)
                     || KH_POW.prefix(KH.ref());
                        {? KH_POW.first()
                        || {! |?
                              {? _b>=KH_POW.DATAOD &
                                 (KH_POW.DATADO=date(0,0,0) | (KH_POW.DATADO<>date(0,0,0) & _b<=KH_POW.DATADO))
                              || _zwrot:=KH_POW.FIRMA
                              ?};
                              ~_zwrot & KH_POW.next()
                           !}
                        ?}
                     ?}
                  || _a:=(SLU.DL+_sep)-_a
                  ?};
                  ~_zwrot & BUD.next()
               !}
            ?};
            BUD.cntx_pop(); SLUAPPL.cntx_pop(); SLU.cntx_pop(); RS.cntx_pop(); KH.cntx_pop(); KH_POW.cntx_pop()
         ?};
         KS.cntx_pop(); ROK_F.cntx_pop(); OKRO_F.cntx_pop()
      ?}
   ?}
?};
_zwrot


\wyr_firma_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Dla podanego konta i daty zwraca, czy kontrahent zawarty w wyróżnikach ma powiązanie z firmą
::   WY: FIRMA.ref() lub null
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=null;
{? SIK.NR_SL<>null

|| _data:=OKRESY.OKR_RAP().OKRES_OD().POCZ;
   {? _data=date(0,0,0)
   || OKRO_F.cntx_psh();
      OKRO_F.index('FIRMA_NR');
      OKRO_F.prefix();
      OKRESY.OKR_RAP().OKRES_OD();
      {? OKRO_F.NR=0 & OKRO_F.next() | OKRO_F.NR<>0 & OKRO_F.prev() || _data:=OKRO_F.POCZ ?};
      OKRO_F.cntx_pop()
   ?};
   RS.index('RS');
   RS.prefix();
   {? RS.find_key(POW.SLU().SLU().WZ,) & RS.TAB='KH'
   || KH.cntx_psh();
      KH.index('KOD'); KH.prefix();
      KH_POW.cntx_psh();
      KH_POW.index('DISP');
      {? KH.find_key(2,POW.SLO().KOD)
      || KH_POW.prefix(KH.ref());
         {? KH_POW.first()
         || {!
            |? {? _data>=KH_POW.DATAOD &
                  (KH_POW.DATADO=date(0,0,0) | (KH_POW.DATADO<>date(0,0,0) & _data<=KH_POW.DATADO))
               || _zwrot:=KH_POW.FIRMA
               ?};
               ~_zwrot & KH_POW.next()
            !}
         ?}
      ?};
      KH_POW.cntx_pop();
      KH.cntx_pop()
   ?}
?};
_zwrot


\set_disabled_fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Zaznacza wyłączone pola w kartotece kontrahenta i danych dodatkowych kontrahenta
::----------------------------------------------------------------------------------------------------------------------
_typ:=KH.TYP;
_win_red:=KH.win_edit('?');

{? exec('is_active','businesslink3') & KH_DOD.EFAKTURA='B'
|| KH.efld_opt(_win_red,'enable=1',KH_DOD,'BL_INCL');
   KH.efld_opt(_win_red,'enable=1',KH_DOD,'BL_DATE')
|| KH.efld_opt(_win_red,'enable=0',KH_DOD,'BL_INCL');
   KH.efld_opt(_win_red,'enable=0',KH_DOD,'BL_DATE')
?};
{? _win_red='RED'
|| {? KH.FIZYCZNY=1
   || KH.efld_opt('RED','editable=grayed',KH_DOD,'KSEFKHOD');
      KH.efld_opt('RED','editable=grayed',KH_DOD,'KSEFLIOD')
   || KH.efld_opt('RED','editable=1',KH_DOD,'KSEFKHOD');
      KH.efld_opt('RED','editable=1',KH_DOD,'KSEFLIOD')
   ?};
   {? XINFO.TER_AKT<>'T'
   || KH.btn_eopt(_win_red,'MIASTO','state=grayed');
      KH.btn_eopt(_win_red,'UL','state=grayed')
   || KH.btn_eopt(_win_red,'MIASTO','state=normal');
      KH.btn_eopt(_win_red,'UL','state=normal')
   ?};
   KH.efld_opt(_win_red,'enable='+$(KH.ARCH='T'),KH,'ARCH_DT');
   KH.efld_opt(_win_red,'enable='+$(KH.ARCH='T'),KH,'ARCH_POW');
   {? (exec('param_get','abs_conf', 800131, 2)='N' | KH.ABSTORE='' )
   || KH.efld_opt(_win_red,'editable=0',KH,'STR_OFE')
   |? var_pres('STR_OFE',KH)>0 & exec('param_get','abs_conf', 800131, 2)='T'
   || KH.efld_opt(_win_red,'editable=1',KH,'STR_OFE')
   ?};
   {? (exec('param_get','abs_conf', 800132, 2)='N' | KH.ABSTORE='' )
   || KH.efld_opt(_win_red,'editable=0',KH,'STR_LIM');
      KH.efld_opt(_win_red,'editable=0',KH,'DAYS_LIM')
   |? exec('param_get','abs_conf', 800132, 2)='T'
   || KH.efld_opt(_win_red,'editable=1',KH,'STR_LIM');
      KH.efld_opt(_win_red,'editable=1',KH,'DAYS_LIM')
   ?};
   {? BEER.KH_GV=null()
   || KH.efld_opt(_win_red,'enable=1',KH,'GRVAT')
   || KH.efld_opt(_win_red,'enable=0',KH,'GRVAT')
   ?};
   {? KH.GRVAT='T'
   || KH.efld_opt(_win_red,'enable=1',KH,'GV_OD');
      KH.efld_opt(_win_red,'enable=1',KH,'GV_DO')
   || KH.efld_opt(_win_red,'enable=0',KH,'GV_OD');
      KH.efld_opt(_win_red,'enable=0',KH,'GV_DO')
   ?}
?};
~~


\chk_nipue_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Sprawdzenie czy NIP UE jest poprawny w usłudze VIES
::   WE: [_a] - 0-nie wymusza zapisu historii, 1-wymusza zapis w historii
::  OLD: \chk_nipue_kh/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
_add_chk_vat:={? var_pres('_a')=type_of(0) || _a || 0 ?};
VAR_DEL.delete('TMP_NUE');
TMP_NUE:=tab_tmp(3,
   'KRAJ','STRING[2]','Kraj'@,
   'NIP','STRING[15]','NIP'@,
   'OK','INTEGER',
);
_ponow:=-1;
TYM_NIP.prefix();
{? TYM_NIP.first()
|| {!
   |? TMP_NUE.blank();
      TMP_NUE.KRAJ:=TYM_NIP.KRAJ;
      TMP_NUE.NIP:=exec('niptostr','#string',TYM_NIP.NIP);
      {!
      |? _ponow:=-1;
         _res:=exec('chk_nipue0','nipyue',TMP_NUE.KRAJ+TMP_NUE.NIP);
         {? _res.ERR=2
         || _ponow:=FUN.ask('Powstał błąd podczas połączenia z serwerem PROXY.\nCzy kontynuować?'@)
         ?};
         {? _ponow=1
         || &_res ;
            1
         ?}
      !};
      {? _res.ERR=-1
      || _ponow:=0
      ?};
      {? _ponow=-1
      || TMP_NUE.OK:={? _res.ERR || -1 || _res.VALID ?};
         TMP_NUE.add();
         {? ~_res.ERR & (_add_chk_vat | -menu_txt()<>'dołącz')
         || exec('add_chk_vat','kontrahent',TMP_NUE.KRAJ+TMP_NUE.NIP,'U',KH.ref,_res.VALID)
         ?};
         &_res;
         TYM_NIP.next()
      ?}
   !}
?};
{? _ponow=-1
|| _o:=TMP_NUE.mk_sel('Wynik sprawdzenia NIP UE'@,'P',,,,,,,'U');
   TMP_NUE.win_fld(_o,,'KRAJ',,,2);
   TMP_NUE.win_fld(_o,,'NIP',,,20);
   TMP_NUE.win_fld(_o,,'OK',,,,,,'OK'@,,,2,,"1","0","-1");
   TMP_NUE.win_sel(_o);
   TMP_NUE.select();
   VAR_DEL.delete('TMP_NUE')
?};
''


\kh_split_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.22]
:: OPIS: Grupowa zmiana znacznika split payment
::----------------------------------------------------------------------------------------------------------------------
_ref:=KH.ref();
KH.cntx_psh();
KH_DOD.cntx_psh();
KH_DOD.index('KH_DOD_P');
KH_DOD.prefix(REF.FIRMA,2);
_win:=KH_DOD.mk_sel('Znacznik Split payment'@,'P',0,'_kh_split_pay',10,5,15,,'U',,,,,'normal');
KH_DOD.win_fld(_win,KH_DOD,'KH','KOD',,8,,1,'Kod'@,,'Kod kontrahenta'@,,,,,,'mobile_header=1,mobile_visible=1');
KH_DOD.win_fld(_win,KH_DOD,'KH','SKR',,11,,1,'Skrót'@,,'Skrót kontrahenta'@,,,,,,'mobile_visible=1');
KH_DOD.win_fld(_win,KH_DOD,'KH','NAZ_P',,40,,1,'Nazwa'@,,'Nazwa kontrahenta'@,,,,,,'mobile_visible=1');
KH_DOD.win_fld(_win,KH_DOD,'KH','MIASTO',,20,,1,'Miasto'@,,'Miasto'@,,,,,,'mobile_visible=1');
KH_DOD.win_fld(_win,KH_DOD,'SP',,,3,,0,'SP'@,,'Płatności split payment?'@,2,,"'T'","'N'",,'mobile_visible=1');
KH_DOD.win_act(_win,,'Formuła','Ustaw Split payment'@,,'Zaznacza pole Split payment'@,,
               "KH_DOD.SP:='T'; KH_DOD.put()",,1,
               "{? FUN.ask('Ustawić domyślną obsługę płatności Split payment dla zaznaczonych kontrahentów?'@) || 1 || 0 ?}",,'U');
KH_DOD.win_act(_win,,'Formuła','Usuń Spli&t payment'@,,'Odznacza pole Split payment'@,,
               "KH_DOD.SP:='N'; KH_DOD.put()",,1,
               "{? FUN.ask('Usunąć domyślną obsługę Split payment dla zaznaczonych kontrahentów?'@) || 1 || 0 ?}",,'T');
KH_DOD.win_btn(_win,'text=%1'['Ustaw Split payment'@@],'menu:U');
KH_DOD.win_btn(_win,'text=%1'['Usuń Spli&t payment'@@],'menu:T');
KH_DOD.win_sel(_win);
KH_DOD.select();
KH_DOD.cntx_pop();
KH.cntx_pop();
KH.seek(_ref)


\kh_fiz_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Grupowa zmiana znacznika Osoba fizyczna
::----------------------------------------------------------------------------------------------------------------------
_ref:=KH.ref();
KH.cntx_psh();
_win:=KH.mk_sel('Kontrahenci'@,'P',0,'_kh_split_pay',10,5,15,,'U',,,,,'normal');
KH.win_fld(_win,,'KOD',,,8,,1,'Kod'@,,'Kod kontrahenta'@,,,,,,'mobile_header=1,mobile_visible=1');
KH.win_fld(_win,,'SKR',,,11,,1,'Skrót'@,,'Skrót kontrahenta'@,,,,,,'mobile_visible=1');
KH.win_fld(_win,,'NAZ_P',,,40,,1,'Nazwa'@,,'Nazwa kontrahenta'@,,,,,,'mobile_visible=1');
KH.win_fld(_win,,'MIASTO',,,20,,1,'Miasto'@,,'Miasto'@,,,,,,'mobile_visible=1');
KH.win_fld(_win,,'FIZYCZNY',,,3,,0,'Osoba fizyczna'@,,'Czy kontrahent jest osobą fizyczną?'@,2,,"1","2",,'mobile_visible=1');
_after_group:="KH.cntx_psh;
               _tab:=KH.sel_aget;
               _ksef_fld:=0;
               {? _tab.first
               || {!|?
                     KH.seek(_tab.REF,);
                     exec('kh_dod_ini','kontrahent',KH.ref,1);
                     {? KH.FIZYCZNY=2 & (KH_DOD.KSEFKHOD<>date(0,0,0) | KH_DOD.KSEFLIOD<>date(0,0,0))
                     || _ksef_fld:=1
                     ?};
                     ~_ksef_fld  & _tab.next
                  !}
               || KH.cntx_pop;
                  return(0)
               ?};
               {? _ksef_fld
               || _ask_msg:='Wśród zaznaczonych rekordów są rekordy z wypełnionymi polami w sekcji \"Dokumenty KSeF\".\n'@ +
                            'Dane w tej sekcji zostanął usunięte.\n'@ +
                            'Czy ustawić znacznik \"Osoba fizyczna\" dla zaznaczonych kontrahentów?'@
               || _ask_msg:='Ustawić znacznik \"Osoba fizyczna\" dla zaznaczonych kontrahentów?'@
               ?};
               _res:=~FUN.ask(_ask_msg);
               KH.cntx_pop;
               ~_res";
_after:="_con:=1;
         {? KH.sel_size=0
         || exec('kh_dod_ini','kontrahent',KH.ref,1);
            {? KH_DOD.KSEFKHOD<>date(0,0,0) | KH_DOD.KSEFLIOD<>date(0,0,0)
            || _con:=FUN.ask('Dane w sekcji \"Dokumenty KSeF\" zostaną usunięte.\n'
                        +'Ustawić znacznik \"Osoba fizyczna\" dla zaznaczonego kontrahenta?'@)
            ?}
         ?};
         {? _con
         || KH_DOD.KSEFKHOD:=date(0,0,0);
            KH_DOD.KSEFLIOD:=date(0,0,0);
            KH_DOD.put;
            KH.FIZYCZNY:=1;
            KH.put()
         ?}";
KH.win_act(_win,,'Formuła','Ustaw znacznik \"Osoba fizyczna\"'@,,'Zaznacza pole \"Osoba fizyczna\"'@,,
               _after,,1,_after_group,,'U');
KH.win_act(_win,,'Formuła','Usuń znacznik \"Osoba fizyczna\"'@,,'Odznacza pole \"Osoba fizyczna\"'@,,
               "KH.FIZYCZNY:=2; KH.put()",,1,
               "FUN.ask('Usunąć znacznik \"Osoba fizyczna\" dla zaznaczonych kontrahentów?'@)",,'T');
KH.win_btn(_win,'text=%1'['Ustaw znacznik \"Osoba fizyczna\"'@@],'menu:U');
KH.win_btn(_win,'text=%1'['Usuń znacznik \"Osoba fizyczna\"'@@],'menu:T');
KH.win_sel(_win);
KH.select();
KH.cntx_pop();
KH.seek(_ref)


\rozrach_kontr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Akcja Rozrachunki w okienku WER tabeli WIND_KH
::  OLD: \windp_op/windyk.fml
::       \rozrach_kontr/!fks_roz_zark.fml
::----------------------------------------------------------------------------------------------------------------------
{? SSTALE.WAL=null
|| SLO.cntx_psh(); SLO.index('SL'); SLO.prefix(XINFO.SLWAL,'PLN');
   {? SLO.first()
   || SSTALE.WAL:=SLO.ref()
   || FUN.info('Nie znaleziono waluty narodowej PLN w słowniku walut.'@)
   ?};
   SLO.cntx_pop()
?};
{? SSTALE.WAL
|| OP.cntx_psh(); ZAP_OP.cntx_psh(); ROZNE.cntx_psh(); POMOC.cntx_psh();
    _fp:={? OP.f_active=1 || OP.f_clear();1 || 0 ?};
   exec('psh_cntx','powdok');
   exec('set_rbop','rozrach_przel');
   POMOC.STAN:='';
   KONTO.K1:=ROZRACH.ZN:='';
   ROZRACH.KONTR:=_kh_ref:=KH.ref();
   exec('initree1','rozrach');
   exec('nier_op','rozrach');
   exec('sel_rozr','rozrach');
   exec('okn_grup','rozrach');
   _kod:=ROZRACH.KONTR().KOD; _ref:=null;
   {? ROZRACH.KONTR<>null & _kh_ref<>ROZRACH.KONTR
   || KH.cntx_psh(); KH.index('KOD'); KH.prefix(2,_kod);
      {? KH.first() || _ref:=KH.ref() ?};
      KH.cntx_pop();
      {? _ref<>null || KH.seek(_ref) ?}
   ?};
   {? var_pres('tabr')<=0 | ~tabr || exec('deltree1','rozrach') ?};
   OP.cntx_pop(); ZAP_OP.cntx_pop(); ROZNE.cntx_pop(); POMOC.cntx_pop();
   exec('pop_cntx','powdok');
   {? var_press('zakladka')>0 & zakladka=2 || OP.hdr_sel() ?};
   {? _fp || exec('op_przeglad1','rozrach') ?};
   VAR_DEL.delete('synt','an','se_p','kol')
?};
1


\obroty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Funkcja liczy stan naleznosci na dzien SER_KOR.DATA
::   WE: _a - graniczna kwota obrotow naleznosci niezaplaconych
::   WY: 1 - jesli obroty po term . Wn - Ma sa wieksze niz _a (w p.p. 1)
::  OLD: \obroty/blok_kh.fml
::----------------------------------------------------------------------------------------------------------------------
_w:=_m:=0;
OP.index('KH2');
OP.prefix(SSTALE.WAL,KH.ref(),'N');
{? OP.first()
|| ZAP_OP.index('OP');
   {!|? {? OP.DO<=SER_KOR.DATA & OP.TZ<SER_KOR.DATA
        || ZAP_OP.prefix(OP.ref());
           {? ZAP_OP.first()
           || {!|? {? ZAP_OP.DATA<=SER_KOR.DATA
                   || _w+=ZAP_OP.WN; _m+=ZAP_OP.MA;
                      ZAP_OP.next()
                   || 0
                   ?}
              !}
           ?}
        ?};
        OP.next()
   !}
?};
_w$2-_m$2>_a$2


\kh_popis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: opis na podstawie wartości KH.P
::   WE: _a - KH.P
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || return('') ?};
{? _a=2 || exec('kh_popis_2','kontrahent')
|? _a=1 || exec('kh_popis_1','kontrahent')
|| ''
?}


\kh_popis_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: wartość opisowa dla KH.P=1
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'potencjalny'


\kh_popis_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: wartość opisowa dla KH.P=2
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'finansowy'


\kh_popis_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: wartość początkowa KH.POPIS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('kh_popis_2','kontrahent')


\kh_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Kotrahent - posesje
::----------------------------------------------------------------------------------------------------------------------
_edit:=exec('chk_role','#b__box',OPERATOR.USER,'ZWS_PAR_KKHR');
_pos_kh_blank:=POS.fld_fml('KH','BLANK',"*");
_pos_kh_be:=POS.fld_fml('KH','BEFORE_EDIT',"*");
POS.fld_fml('KH','BLANK',"KH.ref()");
POS.fld_fml('KH','BEFORE_EDIT',"0");
exec('kh_pos','umowy',~_edit,0);
POS.fld_fml('KH','BLANK',_pos_kh_blank);
POS.fld_fml('KH','BEFORE_EDIT',_pos_kh_be)


\kh_zagr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Sprawdzenie, czy kontrahent jest zagraniczny
::   WE:
::   WY: 1 - tak, 0 - nie
::----------------------------------------------------------------------------------------------------------------------
_zagr:=0;
{? KH.KRAJ<>'' & -KH.KRAJ<>'polska' & -KH.KRAJ<>'pl'
|| _zagr:=1
?};
{? ~_zagr
|| {? KH.KRAJISO<>null() & KH.KRAJISO().KODISO<>'PL'
   || _zagr:=1
   ?}
?};
_zagr


\kh_odb_zagr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Sprawdzenie, czy odbiorca kontrahenta jest zagraniczny
::   WE:
::   WY: 1 - tak, 0 - nie
::----------------------------------------------------------------------------------------------------------------------
_zagr:=0;
{? KH_ODB.KRAJ<>'' & -KH_ODB.KRAJ<>'polska' & -KH_ODB.KRAJ<>'pl'
|| _zagr:=1
?};
_zagr


\kh_msc_zagr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Sprawdzenie, czy miejsce dostawy kontrahenta jest zagraniczne
::   WE:
::   WY: 1 - tak, 0 - nie
::----------------------------------------------------------------------------------------------------------------------
_zagr:=0;
{? KH_MSC.KRAJ<>'' & -KH_MSC.KRAJ<>'polska' & -KH_MSC.KRAJ<>'pl'
|| _zagr:=1
?};
_zagr


\kh_powiad_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: tymczasowa tabela zawierająca użytkowników powiadamianych mailem o kontakcie z kontrahentem
::       (czyli o dopisaniu rekordu do DOKUM) - obsługa pola KH.POWIAD
::   WE: [_a] - napis zawierający listę użytkowników w ustalonym formacie
::----------------------------------------------------------------------------------------------------------------------
_napis:='';
{? var_pres('_a')=type_of('')
|| _napis:=_a
?};
_tab:=tab_tmp(1,
             'USER','STRING[10]','Użytkownik');
_tnap1:=spli_str(_napis,',');
{! _jj:=1..obj_len(_tnap1)
|! _nap1:=|_tnap1[_jj];
   _kk:=_nap1*' (';
   {? _kk>0
   || _kk-=1;
      _nap1:=_kk+_nap1
   ?};
   {? _nap1<>''
   || _tab.USER:=_nap1;
      _tab.add()
   ?}
!};
obj_del(_tnap1);
_tab


\kh_powiad_okno
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: okno edycji użytkowników powiadamianych mailem o kontakcie z kontrahentem
::       (czyli o dopisaniu rekordu do DOKUM) - obsługa pola KH.POWIAD
::   WE: [_a] - napis zawierający listę użytkowników w ustalonym formacie
::       [_b] - 0/1 czy pokazywać adres email
::   WY: napis zawierający listę użytkowników w ustalonym formacie
::----------------------------------------------------------------------------------------------------------------------
_powiad0:='';
{? var_pres('_a')=type_of('')
|| _powiad0:=_a
?};
_powiad:=_powiad0;
_email:=1;
{? var_pres('_b')=type_of(1)
|| _email:=_b
?};
_t_powiad0:=exec('kh_powiad_tab','kontrahent',_powiad0);

_tab:=tab_tmp(1,
              'USER','STRING[10]','Użytkownik'@,
              'DANE','STRING[50]','Dane użytkownika',
              'EMAIL','STRING[100]','E-mail',
              'ACCESS','STRING[1]','Powiadomienie'@);

USERS.cntx_psh();
USERS.index('USR_AKOD');
USERS.prefix('T');
{? USERS.first()
|| {!
   |? _naz:=USERS.KOD;
      _zazn:='N';
      {? _t_powiad0.find_key(_naz,)
      || _zazn:='T'
      ?};
      _tab.USER:=_naz;
      _tab.DANE:=USERS.DANE;
      _tab.EMAIL:=USERS.EMAIL;
      _tab.ACCESS:=_zazn;
      _tab.add();
      USERS.next()
   !}
?};
USERS.cntx_pop();

_okn:=_tab.mk_sel('Użytkownicy'@,'P',,'user',,,,,'U');
_tab.win_fld(_okn,,'USER',,,10,,1);
_tab.win_fld(_okn,,'DANE',,,24,,1);
{? _email || _tab.win_fld(_okn,,'EMAIL',,,24,,1) ?};
_tab.win_fld(_okn,,'ACCESS',,,,,0,,,'Czy powiadamiać o kontaktach [T/N]?'@,2,,"'T'","'N'");
_fml:="_tab:=cur_tab(1);_tab.ACCESS:='T';_tab.put()";
_tab.win_act(_okn,,'Formuła','&Zaznacz'@@,,,_fml,,1,1,,,'Z');
_fml:="_tab:=cur_tab(1);_tab.ACCESS:='N';_tab.put()";
_tab.win_act(_okn,,'Formuła','&Odznacz'@@,,,_fml,,,1,,,'O');
_tab.win_act(_okn,,'Formuła','&Akceptuj'@@,,,"sel_exit()",,,,,,'A');
_fb:="
   _lastdraw:=1;
   {? var_pres('_a')=type_of(0)
   || _lastdraw:=_a
   ?};
   _grayed:='';
   _tab:=cur_tab();
   _sel:=cur_win();
   {? _lastdraw>0
   || {? _tab.sel_size()=0
::       Pojedyncze zaznaczenie
      || {? _tab.ACCESS='T'
         || _tab.actions(_sel,,'O',1);
            _grayed+='Z'
         |? _tab.ACCESS='N' | _tab.ACCESS=''
         || _tab.actions(_sel,,'Z',1);
            _grayed+='O'
         ?}
::       Zaznaczenie grupowe
      || _tab.actions(_sel,,'Z',1)
      ?};
      _tab.actions_grayed(_sel,_grayed)
   ?}
";
_tab.win_act(_okn,,'Rekord',,,,_fb);

_tab.win_sel(_okn);

{? _tab.select()
|| _powiad:='';
   {? _tab.first()
   || {!
      |? {? _tab.ACCESS='T'
         || {? _powiad<>''
            || _powiad+=', '
            ?};
            _powiad+=_tab.USER+' ('+_tab.DANE+')'
         ?};
         _tab.next()
      !}
   ?}
?};

_powiad


\kh_powiad_ustaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: edycja użytkowników powiadamianych mailem o kontakcie z kontrahentem
::       (czyli o dopisaniu rekordu do DOKUM) - obsługa pola KH.POWIAD
::       [PD] edycja zespołów w MS TEAMS
::----------------------------------------------------------------------------------------------------------------------
{? _wyn:=FUN.choice('Wybierz zakres powiadomień'@,,'Email'@,'W aplikacji'@,'MS Teams'@)
||
   {? _wyn=1
   ||
      _powiad0:=KH.memo_txt(,,'POWIAD');
      _powiad:=exec('kh_powiad_okno','kontrahent',_powiad0);
      {? _powiad<>_powiad0
      || KH.memo_set(_powiad,'POWIAD')
      ?}
   |? _wyn=2
   ||
      _powiad0:=KH.memo_txt(,,'POWNTC');
      _powiad:=exec('kh_powiad_okno','kontrahent',_powiad0,0);
      {? _powiad<>_powiad0
      || KH.memo_set(_powiad,'POWNTC')
      ?}
   |? _wyn=3
   ||
      _powiad0:=KH.memo_txt(,,'POWTEAMS');
      _powiad:=exec('kh_powiad_okno','webhook',_powiad0);
      {? _powiad<>_powiad0
      || KH.memo_set(_powiad,'POWTEAMS')
      ?}
   ?}
?};
''


\kh_dod_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Zwraca wartość KH_DOD.B
::       !!!UWAGA!!!
::       Status T - używany w formule wapromobile.fml - wygląda, że używane do blokowania realizacji zamówień
::       i wystawiania faktur zaliczkowych z zamówień
::   WE: _a - miejsce wywołania
::       _b - KH.ref()
::       _c - 0/1/2 - sprawdzamy dla zamówienia sprzedaży lub dokumentu potomnego
::   WY: N/W/B/T
::----------------------------------------------------------------------------------------------------------------------
_where:=_a;
_kh:=_b;
_z_zk:=_c;
_wyn:='';
:: obecny status blokady kontrahenta
_kh_dod_b:=__War_f('KH_DOD','B',_kh);
{? _kh_dod_b='N'
||
:: jeśli kontrahent nie jest blokowany to nie uruchamimy wtyczki
   return('N')
?};
:: weryfikacja kontrahenta
{? _z_zk=1
||
   _z_zk:=0;
   _loop:=__list_zk.first();
   {!
   |? _loop
   |!
      _z_zk:=_kh=exec('FindAndGet','#table',ZK_N,__list_zk.REF,,"ZK_N.KH",null());
      _loop:=_z_zk=0 & __list_zk.next()
   !}
?};
:: wtyczka wdrożeniowa - Status blokady kontrahenta
{? _where<>'faks_kopiuj' & _z_zk
||
   _wyn:=Plugin.run('KH_DOD_B_001',_where)
?};
{? _wyn='' | ('NWB'*_wyn)=0
||
   _wyn:=__War_f('KH_DOD','B',_kh)
?};
_wyn


\upd_chknip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Aktualizuje aktywności VAT nowo dodanego kontrahenta
::----------------------------------------------------------------------------------------------------------------------
KHCHKNIP.cntx_psh();
KHCHKNIP.index('NIP'); KHCHKNIP.prefix(null,KH.SNIP,);
{!
|? {? KHCHKNIP.first()
   || KHCHKNIP.cntx_psh();
      KHCHKNIP.prefix();
      KHCHKNIP.KH:=KH.ref();
      KHCHKNIP.put();
      KHCHKNIP.cntx_pop();
      KH.get();
      1
   ?}
!};
KHCHKNIP.cntx_pop()


\blank_kh_kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Formuła na wartość początkową pola KOD tabeli KH
::   WY: KH.KOD
::  OLD: \blank_kh/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
_kod:=Plugin.run('KONTRAH_T_KH_001');
{? _kod=''
|| _kod:=exec('blank_kh_default','kontrahent')
?};
_kod


\blank_kh_default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Formuła na domyślną wartość początkową pola KOD tabeli KH wykonywana, gdy nie ma zdefiniowanego
::       w słowniku systemowym pola "Formuła na kod kontrahenta"
::   WY: KH.KOD
::----------------------------------------------------------------------------------------------------------------------
_nr:='';
_number:=0;
_dl:=5;
{? PAR_SKID.get(10)='T'
|| KH.cntx_psh(); KH.index('KOD1'); KH.prefix();
   _nr:={? KH.last()
        || {!
           |? {? #KH.KOD=0 | +KH.KOD<>5
              || _step:=KH.prev()
              || _dl:=+KH.KOD;
                 _number:=#KH.KOD;
                 _step:=0
             ?};
              _step
           !};
           {? +$(_number+1)>_dl
           || ''
           || form(((_number)+1),-_dl,0,'9.')
           ?}
        || '00001'
        ?};
   KH.cntx_pop()
?};
_nr


\bl_coskh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Wartość początkowa pola KH.COS
::----------------------------------------------------------------------------------------------------------------------
BEER.COS


\bl_kh_wlk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Wartość początkowa pola KH.WIELKOSC
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PAR_SKID.get(125)


\bl_kh_kraj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [WHAN] [23.25]
:: OPIS: Wartość początkowa pola KH.KRAJ
::----------------------------------------------------------------------------------------------------------------------
'Polska'


\be_coskh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed redakcją pola KH.COS - sprawdzenie czy nie przypisano go do magazynu konsygnacyjnego
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? var_pres('__KH_MOD')>0 & __KH_MOD
|| MG.cntx_psh();
   MG.index('MAGAZYNY');
   MG.prefix();
   _res:={? MG.first() & MG.find_tab('first','DLAKH',,'=',KH.ref()) || 0 || 1 ?};
   MG.cntx_pop()
?};
_res


\copy_kh_msc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Kopia danych adresowych z kontrahenta lub odbiorcy kontrahenta
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
KH_ODB.cntx_psh();
KH_MSC.cntx_psh();
{? FUN.ask('Czy utworzyć miejsce dostaw na podstawie danych z kartoteki kontrahentów i ich odbiorców?'@)
|| VAR_DEL.delete('ref_kh','__tzazn');
   ref_kh:=KH_MSC_Z.KH;
   __tzazn:=tab_tmp(1,'SQL','STRING[16]','');

   _win_sel:=KH.mk_sel('Kartoteka kontrahentów'@,'P',,'kh_grpmsc',,,,,'U');
   KH.win_fld(_win_sel,BPMN,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
   KH.win_fld(_win_sel,,'KOD',,,8,,1,'Kod'@);
   KH.win_fld(_win_sel,,'NAZ',,,40,,1,'Nazwa'@);
   KH.win_fld(_win_sel,,'KRAJ',,,10,,1,'Kraj'@);
   KH.win_fld(_win_sel,,'MIASTO',,,20,,1,'Miasto'@);
   KH.win_fld(_win_sel,,'UL',,,30,,1,'Ulica'@);
   KH.win_act(_win_sel,0,'Formuła','Wybierz'@@,,,"exec('wyb_zre','kontrahent',1,KH)",,1,1
            ,"exec('wyb_zre','kontrahent',1,KH)",,'T');
   KH.win_act(_win_sel,0,'Formuła','Zrezygnuj'@@,,,"exec('wyb_zre','kontrahent',0,KH)",,0,1
            ,"exec('wyb_zre','kontrahent',0,KH)",,'N');
   KH.win_act(_win_sel,0,'Formuła','Akceptuj'@@,,,"exec('akc_mdst','kontrahent')",,,,,,'A');
   KH.win_btn(_win_sel,'text='+'&Akceptuj'@+',panel=right,align=begin','menu:A',,,,,,'noempty');
   KH.win_act(_win_sel,0,'Rekord',,,,"BPMN.ACCESS:=exec('accessMSC','kontrahent',$KH.ref());KH.ref()=ref_kh");
   KH.win_act(_win_sel,0,'Szukaj');
   KH.win_act(_win_sel,0,'Kolejność');
   _win_seo:=KH_ODB.mk_sel('Kartoteka odbiorców'@,'P',,'khogrpmsc',,,,,'U');
   KH_ODB.win_fld(_win_seo,BPMN,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
   KH_ODB.win_fld(_win_seo,,'KOD',,,8,,1,'Kod'@);
   KH_ODB.win_fld(_win_seo,,'NAZ',,,40,,1,'Skrót'@);
   KH_ODB.win_fld(_win_seo,,'KRAJ',,,10,,1,'Kraj'@);
   KH_ODB.win_fld(_win_seo,,'MIASTO',,,20,,1,'Miasto'@);
   KH_ODB.win_fld(_win_seo,,'UL',,,30,,1,'Ulica'@);
   KH_ODB.win_act(_win_seo,0,'Formuła','Wybierz'@@,,,"exec('wyb_zre','kontrahent',1,KH_ODB)",,1,1
            ,"exec('wyb_zre','kontrahent',1,KH_ODB)",,'W');
   KH_ODB.win_act(_win_seo,0,'Formuła','Zrezygnuj'@@,,,"exec('wyb_zre','kontrahent',0,KH_ODB)",,0,1
            ,"exec('wyb_zre','kontrahent',0,KH_ODB)",,'Z');
   KH_ODB.win_act(_win_seo,0,'Rekord',,,,"BPMN.ACCESS:=exec('accessMSC','kontrahent',$KH_ODB.ref());KH_ODB.KH=ref_kh");
   KH_ODB.win_act(_win_seo,0,'Szukaj');
   KH_ODB.win_act(_win_seo,0,'Kolejność');
   KH_ODB.win_sel(_win_seo);

   _fr:="";
   _win_grp:=KH.grp_make('Utwórz miejsca dostaw'@,_fr,'kh_msc_grp');
   _fr:="KH_ODB.index('KH_ODB');
         KH_ODB.prefix(KH.ref());
         grp_disp(KH_ODB,KH_ODB.win_sel('?'))
        ";
   _fb:=""; _fa:="";
   KH.grp_sel(_win_grp,KH,_win_sel,,_fr,,,20,_fb,_fa,,,'maximized_with_title');
   KH.grp_splt(_win_grp,,'horizontal','odbiorcy');
   _fr:=""; _fb:=""; _fa:="";
   KH.grp_sel(_win_grp,KH_ODB,_win_seo,,_fr,,,10,_fb,_fa,,,'maximized_with_title');

   KH.win_sel(_win_grp);
   KH.index('KOD');
   KH.prefix(2);
   KH.seek(ref_kh);
   {? KH.select(,1)
   || __tzazn.clear();
      {? __tzazn.first()
      || {!
         |? {? form(8+__tzazn.SQL)='kontr' & (KH.prefix();KH.seek(__tzazn.SQL,))
            || KH_MSC.prefix();
               KH_MSC.blank();
               KH_MSC.KH:=ref_kh;
               KH_MSC.NAZ:=KH.NAZ;
               KH_MSC.KRAJ:=KH.KRAJ;
               KH_MSC.MIASTO:=KH.MIASTO;
               KH_MSC.UL:=KH.UL;
               KH_MSC.DOM:=KH.DOM;
               KH_MSC.LOKAL:=KH.LOKAL;
               KH_MSC.POCZ:=KH.POCZ;
               KH_MSC.TEL:=KH.TEL;
               KH_MSC.EMAIL:=KH.EM;
               KH_MSC.OS:={? KH.OSOBA<>null()
                          || KH.OSOBA().PIERWSZE+' '+KH.OSOBA().NAZWISKO
                          || exec('FindInSet','#table','KH_OSOB','KH',KH.ref(),
                              ,"KH_OSOB.IMIE+' '+KH_OSOB.NAZWISKO",,,'')
                          ?};
               KH_MSC.OBS:=KH.OBS;
               KH_MSC.KPOCZ:=KH.KPOCZ;
               KH_MSC.UWAGI:=KH.U;
               KH_MSC.GLN:=KH.GLN;
               KH_MSC.add(1)
            |? form(8+__tzazn.SQL)='kontrodb' & (KH_ODB.prefix();KH_ODB.seek(__tzazn.SQL,))
            || KH_MSC.prefix();
               KH_MSC.blank();
               KH_MSC.KH:=ref_kh;
               KH_MSC.NAZ:=KH_ODB.NAZ;
               KH_MSC.KRAJ:=KH_ODB.KRAJ;
               KH_MSC.MIASTO:=KH_ODB.MIASTO;
               KH_MSC.UL:=KH_ODB.UL;
               KH_MSC.DOM:=KH_ODB.DOM;
               KH_MSC.LOKAL:=KH_ODB.LOKAL;
               KH_MSC.POCZ:=KH_ODB.POCZ;
               KH_MSC.TEL:=KH_ODB.KH().TEL;
               KH_MSC.EMAIL:=KH_ODB.EM;
               KH_MSC.OS:={? KH_MSC.KH().OSOBA<>null()
                          || KH_MSC.KH().OSOBA().PIERWSZE+' '+KH_MSC.KH().OSOBA().NAZWISKO
                          || exec('FindInSet','#table','KH_OSOBO','KH_ODB',KH_ODB.ref(),
                               ,"KH_OSOBO.OSOBA().IMIE+' '+KH_OSOBO.OSOBA().NAZWISKO",,,'')
                          ?};
               KH_MSC.OBS:=KH_ODB.OBS;
               KH_MSC.KPOCZ:=KH_ODB.KPOCZ;
               KH_MSC.UWAGI:=KH_ODB.U;
               KH_MSC.GLN:=KH_ODB.GLN;
               KH_MSC.add(1)
            ?};
            __tzazn.next()
         !}
      ?}
   ?};
   VAR_DEL.delete('ref_kh','__tzazn')
?};
KH.cntx_pop();
KH_ODB.cntx_pop();
KH_MSC.cntx_pop();
{? KH_MSC.f_active() || KH_MSC.f_rfresh() ?};
''


\wyb_zre
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Zaznaczenie lub rezygnacja z zaznaczenia
::   WE: _a - 1-wybierz (domyślnie) 0-zrezygnuj
::       _b - tabela
::----------------------------------------------------------------------------------------------------------------------
_wyb:={? var_pres('_a')=type_of(0) || _a || 1 ?};
_tab:={? var_pres('_b')=type_of(SYSLOG) || _b || cur_tab(1,1) ?};

_tab.cntx_psh();
_zaz:=_tab.sel_aget();
_tab.sel_adel();
_zaz.clear();
{? _zaz.first()
|| {!
   |? {? (_tab.prefix(); _tab.seek(_zaz.REF,))
       & (__tzazn.clear(); __tzazn.prefix($_tab.ref(),); {? _wyb || ~__tzazn.first() || __tzazn.first() ?})
      || {? _wyb
         || __tzazn.blank();
            __tzazn.SQL:=$_tab.ref();
            __tzazn.add(1)
         || __tzazn.del()
         ?}
      ?};
      _zaz.next()
   !}
|? (__tzazn.clear(); __tzazn.prefix($_tab.ref(),); {? _wyb || ~__tzazn.first() || __tzazn.first() ?})
|| {? _wyb
   || __tzazn.blank();
      __tzazn.SQL:=$_tab.ref();
      __tzazn.add(1)
   || __tzazn.del()
   ?}
?};
obj_del(_zaz);
_tab.cntx_pop();
~~


\accessMSC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Sprawdza czy zaznaczono rekord
::   WE: _a - ref SQL;
::   WY: 'T'-tak 'N'-nie
::----------------------------------------------------------------------------------------------------------------------
_res:='N';
{? _a<>''
|| __tzazn.clear();
   __tzazn.prefix(_a,);
   {? __tzazn.first() || _res:='T' ?}
?};
_res


\akc_mdst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Akceptacja wyboru
::----------------------------------------------------------------------------------------------------------------------
_exit:=0;
__tzazn.clear();
{? __tzazn.first()
|| _exit:={? FUN.ask('Czy utworzyć miejsca dostaw na podstawie zaznaczonych kontrahentów lub odbiorców?'@) || 1 || -1 ?}
|| _exit:={? FUN.ask('Niczego nie zaznaczono. Czy chesz ponownie wybrać?'@) || 0 || 1 ?}
?};
{? _exit<>0
|| {? _exit<0 || __tzazn.erase() ?};
   sel_exit()
|| 0
?}


\trig_kh_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: Wyzwalacz dla tabeli KH (po add)
::----------------------------------------------------------------------------------------------------------------------
{? Plugin.runnable('KH_F_ADD_001')
|| Plugin.run('KH_F_ADD_001')
?};
~~


\email_os_kon_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [21.37]
:: OPIS: Zwraca tabelę z e-mailami osób kontaktowych kontrahenta
::   WE: _a - wskazanie na kontrahenta
::       _b - typ osoby kontaktowej
::   WY: tabela z e-mailami osób kontaktowych lub ''
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,'EMAIL','STRING[100]','e-mail','TYP','STRING[1]','typ');
KH_OSTYP.index('NAME');
KH_OSTYP.prefix(_b,);
{? KH_OSTYP.first()
|| KH_OSKON.index('TYP');
   KH_OSKON.prefix(_a,KH_OSTYP.ref());
   _email:='';
   {? KH_OSKON.first()
   || {!
      |? _email:=KH_OSKON.KH_OSOB().EMAIL;
         {? _email<>''
         || _tab.EMAIL:=_email;
            _tab.TYP:='T';
            _tab.add()
         ?};
         KH_OSKON.next()
      !}
   ?};
   _email
|| ''
?};
_tab


\kh_odb_f_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Ustawia filtr tabeli KH_ODB
::   WE: _a (STRING)- akronim pola po którym ma być ustawione sortowanie
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_sortFldAcr:='KOD';
{? var_press('_a')>0 || _sortFldAcr:=_a ?};
KH_ODB.prefix();
{? (-menu_txt())*'szukaj' & BEER.KH=null()
|| KH_ODB.f_set(_sortFldAcr)
||
   {? (exec('get','#params',300231,2)='T' & AreaTitle.area<>'ZWS_KHR' & AreaTitle.area<>'LZK_ZAK')
   || KH_ODB.f_set(_sortFldAcr,,'KH_ODB.KH=:_a and KH_ODB.KH_LNK is not null',BEER.KH)
   || KH_ODB.f_set(_sortFldAcr,,'KH_ODB.KH=:_a',BEER.KH)
   ?}
?}


\kh_odb_in_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Sprawdza czy odbiorca jest na liście odbiorców kontrahenta, która to lista ustalana jest wg parametryzacji
::       systemu
::   WE: _a - KH.ref()
::       _b - KH_ODB.ref()
::   WY: null lub KH_ODB.ref()
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
{? _a=null() | _b=null() || return(_result) ?};
BEER.KH:=_a;
exec('kh_odb_f_set','kontrahent');
{? KH_ODB.f_seek(_b) || _result:=KH_ODB.ref() ?};
{? _result=null()
||
   FUN.info('Odbiorca nie znajduje się na aktualnej liście odbiorców kontrahenta %1.'@[
      exec('FindAndGet','#table',KH,_a,,"KH.SKR",'')])
?};
_result


\trig_khdod_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Wyzwalacze 'przed' dla tabeli KH_DOD
::   WE: _a - typ trigera: 'add', 'put'
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? KH_DOD.BL_STAT=''
|| KH_DOD.BL_VIEW:='N'
|| KH_DOD.BL_VIEW:='T'
?};
1


\set_bl_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
::   WE: _a - dla typu dokumentu Businesslink: INV (domyślnie), ORD
:: OPIS: Ustawia domyślną obsługę dokumentów Businesslink dla KH_DOD
::----------------------------------------------------------------------------------------------------------------------
_bltyp:={? var_pres('_a')=type_of('') || _a || 'INV' ?};
KH_DOD.cntx_psh();
{? KH.sel_size()=0
|| {? KH.P=1
   || {? _bltyp='ORD'
      || _msg:='Kontrahent potencjalny — nie można ustawić domyślnej obsługi zamówień Businesslink.'@
      || _msg:='Kontrahent potencjalny — nie można ustawić domyślnej obsługi dokumentów Businesslink.'@
      ?};
      FUN.info(_msg)
   || {? exec('kh_dod_ini','kontrahent',KH.ref(),1)
      || {? _bltyp='ORD'
         || _act:=exec('bl_act_slo','zbl_dok',KH_DOD.BL_ACT1,_bltyp)
         || _act:=exec('bl_act_slo','zbl_dok',KH_DOD.BL_ACT,_bltyp)
         ?};
         {? type_of(_act)=type_of('')
         || {? _bltyp='ORD'
            || KH_DOD.BL_ACT1:=_act
            || KH_DOD.BL_ACT:=_act
            ?};
            KH_DOD.put()
         ?}
      ?}
   ?}
?};
KH_DOD.cntx_pop();
~~


\set_bl_act_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
::   WE: _a - dla typu dokumentu Businesslink: INV (domyślnie), ORD
:: OPIS: Ustawia domyślną obsługę dokumentów Businesslink dla KH_DOD - przed grupą rekordów
::----------------------------------------------------------------------------------------------------------------------
_bltyp:={? var_pres('_a')=type_of('') || _a || 'INV' ?};
{? cur_tab(1,1)=KH_DOD || _sel:=KH_DOD.sel_aget();KH_DOD.sel_adel() || _sel:=KH.sel_aget() ?};
_can_continue:=1;
{? cur_win(1,1)='WER_ALL'
|| {? _sel.first()
   || {!
      |? _potencjalny:=exec('FindAndGet','#table',KH,_sel.REF,,"@.KH.P=1",0);
         {? _potencjalny || _can_continue:=0 ?};
         _can_continue>0 & _sel.next()
      !}
   ?}
|? cur_win(1,1)='WER' & cur_tab(1,1)=KH_DOD
|| {? _sel.first()
   || {!
      |? _potencjalny:=exec('FindAndGet','#table',KH_ODB,_sel.REF,,"KH_ODB.KH().P=1",0);
         {? _potencjalny || _can_continue:=0 ?};
         _can_continue>0 & _sel.next()
      !}
   ?}
?};

{? _can_continue=0
|| FUN.info('Ustawianie domyślnej obsługi dokumentów Businesslink dostępne jest tylko dla kontrahentów o statusie \'%1\'.'
            '\n\n'
            'Należy usunąć z zaznaczenia kontrahentów o statusie \'%2\'.'@[exec('kh_popis_2','kontrahent'),exec('kh_popis_1','kontrahent')]
   );
   0
|| _act:=exec('bl_act_slo','zbl_dok','',_bltyp);
   {? type_of(_act)=type_of('')
   || {? _act=''
      || {? _bltyp='ORD'
         || _ask:='Czy usunąć domyślną obsługę zamówień Businesslink dla zaznaczonych kontrahentów?'@
         || _ask:='Czy usunąć domyślną obsługę dokumentów Businesslink dla zaznaczonych kontrahentów?'@
         ?}
      || {? _bltyp='ORD'
         ||  _ask:='Czy ustawić domyślną obsługę zamówień Businesslink dla zaznaczonych kontrahentów\n'
                 'na wartość: %1?'@[_act]
         ||  _ask:='Czy ustawić domyślną obsługę dokumentów Businesslink dla zaznaczonych kontrahentów\n'
                 'na wartość: %1?'@[_act]
         ?}
      ?};
      {? FUN.ask(_ask)
      || {? _sel.first() & cur_tab(1,1)=KH_DOD
         || {!
            |? {? KH_DOD.seek(_sel.REF)
               || {? _bltyp='ORD'
                  || KH_DOD.BL_ACT1:=_act
                  || KH_DOD.BL_ACT:=_act
                  ?};
                  KH_DOD.put()
               ?};
               _sel.next()
            !}
         |? _sel.first()
         || {!
            |? {? exec('kh_dod_ini','kontrahent',exec('FindAndGet','#table',KH,_sel.REF,,"ref()",null()),1)
               || {? _bltyp='ORD'
                  || KH_DOD.BL_ACT1:=_act
                  || KH_DOD.BL_ACT:=_act
                  ?};
                  KH_DOD.put()
               ?};
               _sel.next()
            !}
         ?};
         1
      || 0
      ?}
   || 0
   ?}
?}


\set_bl_act_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.37]
:: OPIS: Ustawia domyślną obsługę dokumentów Businesslink dla KH_DOD - po grupie rekordów
::----------------------------------------------------------------------------------------------------------------------
~~


\email_bl_simple
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Lista adresów e-mail (oddzielone średnikami), na które wysyłane są uproszczone dokumenty Businesslink
::   WE: _a - KH.ref()
::       [_b] - KH.ref() - drugi kontrahent, np. odbiorca
::----------------------------------------------------------------------------------------------------------------------
_kh:=_a;
_kh_odb:={? var_pres('_b')=type_of(null()) || _b || null() ?};

_res:='';
KH.cntx_psh(); KH_OSOB.cntx_psh(); KH_DOD.cntx_psh();
KH.prefix();
{? KH.seek(_kh)
|| KH_OSOB.index('BL');
   KH_OSOB.prefix(_kh,'T');
   {? KH_OSOB.first()
   || {!
      |? {? _res*(KH_OSOB.EMAIL+';')=0
         || _res+=KH_OSOB.EMAIL+';'
         ?};
         KH_OSOB.next()
      !}
   ?}
?};
{? _kh_odb<>null() & KH.seek(_kh_odb)
|| exec('kh_dod_ini','kontrahent',_kh,1);
   {? KH_DOD.EFAKTURA='U'
   || KH_OSOB.index('BL');
      KH_OSOB.prefix(_kh_odb,'T');
      {? KH_OSOB.first()
      || {!
         |? {? _res*(KH_OSOB.EMAIL+';')=0
            || _res+=KH_OSOB.EMAIL+';'
            ?};
            KH_OSOB.next()
         !}
      ?}
   ?}
?};
KH.cntx_pop(); KH_OSOB.cntx_pop(); KH_DOD.cntx_pop();
_res


\kh_osob_f_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Ustawia filtr tabeli KH_OSOB
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
KH_OSOB.f_set('NAZWISKO',,'KH_OSOB.KH=:_a',BEER.KH)


\bl_dt_ed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Edycja początkowej datę obsługi dokumentów Businesslink dla KH_DOD
::   WE: _a - data
::       _b - 0 - KH_DOD.KSEFKHOD (dla kontrahenta, domyślne) 1 - KH_DOD.KSEFLIOD (od kontrahenta)
::   WY: data
::----------------------------------------------------------------------------------------------------------------------
_dt:=date(0,0,0);
{? var_pres('_a')=type_of(date(0,0,0))
|| _dt:=_a
?};
_od_kh:=0;
{? var_pres('_b')=type_of(0)
|| _od_kh:=_b
?};
{? _od_kh
|| _tyt:='Dokumenty KSeF od kontrahenta od dnia'@
|| _tyt:='Dokumenty KSeF dla kontrahenta od dnia'@
?};
undefine();
define('D',date(),_tyt,_tyt);
def_btn('text=%1'['Zapisz'@],'key:F2');
def_btn('text=%1'['Anuluj'@],'key:Esc');
DEFINE.D:=_dt;
{? def_edit("{? DEFINE.D=date(0,0,0)
             || FUN.info('Nie podano daty.'@);
                0
             || 1
             ?}",
            _tyt)
|| _dt:=DEFINE.D
?};
undefine();
_dt


\set_bl_dt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Ustawia początkową datę obsługi dokumentów Businesslink dla KH_DOD
::   WE: _a - 0 - KH_DOD.KSEFKHOD (dla kontrahenta, domyślne) 1 - KH_DOD.KSEFLIOD (od kontrahenta)
::----------------------------------------------------------------------------------------------------------------------
KH_DOD.cntx_psh();
_od_kh:=0;
{? var_pres('_a')=type_of(0)
|| _od_kh:=_a
?};
{? KH.sel_size()=0
|| {? KH.P=1
   || FUN.info('Kontrahent potencjalny — nie można ustawić początkowej daty obsługi dokumentów Businesslink.'@)
   || {? exec('kh_dod_ini','kontrahent',KH.ref(),1)
      || _dt:=exec('bl_dt_ed','kontrahent',{? _od_kh || KH_DOD.KSEFLIOD || KH_DOD.KSEFKHOD ?},_od_kh);
         {? _dt<>date(0,0,0)
         || {? _od_kh
            || KH_DOD.KSEFLIOD:=_dt;
               KH_DOD.KSEFLI:='T'
            || KH_DOD.KSEFKHOD:=_dt;
               KH_DOD.KSEFKH:='T'
            ?};
            KH_DOD.put()
         ?}
      ?}
   ?}
?};
KH_DOD.cntx_pop();
~~


\set_bl_dt_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Ustawia początkową datę obsługi dokumentów Businesslink dla KH_DOD - przed grupą rekordów
::   WE: _a - 0 - KH_DOD.KSEFKHOD (dla kontrahenta, domyślne) 1 - KH_DOD.KSEFLIOD (od kontrahenta)
::----------------------------------------------------------------------------------------------------------------------
_od_kh:=0;
{? var_pres('_a')=type_of(0)
|| _od_kh:=_a
?};
{? cur_tab(1,1)=KH_DOD || _sel:=KH_DOD.sel_aget();KH_DOD.sel_adel() || _sel:=KH.sel_aget() ?};
_can_continue:=1;
{? cur_win(1,1)='WER_ALL'
|| {? _sel.first()
   || {!
      |? _potencjalny:=exec('FindAndGet','#table',KH,_sel.REF,,"@.KH.P=1",0);
         {? _potencjalny || _can_continue:=0 ?};
         _can_continue>0 & _sel.next()
      !}
   ?}
|? cur_win(1,1)='WER' & cur_tab(1,1)=KH_DOD
|| {? _sel.first()
   || {!
      |? _potencjalny:=exec('FindAndGet','#table',KH_ODB,_sel.REF,,"KH_ODB.KH().P=1",0);
         {? _potencjalny || _can_continue:=0 ?};
         _can_continue>0 & _sel.next()
      !}
   ?}
?};

{? _can_continue=0
|| FUN.info(
      'Ustawianie początkowej daty obsługi dokumentów Businesslink dostępne jest tylko dla kontrahentów o statusie \'%1\'.'
      '\n\n'
      'Należy usunąć z zaznaczenia kontrahentów o statusie \'%2\'.'@
      [exec('kh_popis_2','kontrahent'),exec('kh_popis_1','kontrahent')]
   );
   0
|| _dt:=exec('bl_dt_ed','kontrahent',date(0,0,0),_od_kh);
   {? _dt<>date(0,0,0)
   || {? _od_kh
      || _ask:='Czy ustawić początkową datę obsługi dokumentów Businesslink od zaznaczonych kontrahentów\n'
               'na wartość: %1?'@[$_dt]
      || _ask:='Czy ustawić początkową datę obsługi dokumentów Businesslink dla zaznaczonych kontrahentów\n'
               'na wartość: %1?'@[$_dt]
      ?};
      {? FUN.ask(_ask)
      || {? _sel.first() & cur_tab(1,1)=KH_DOD
         || {!
            |? {? KH_DOD.seek(_sel.REF)
               || {? _od_kh
                  || KH_DOD.KSEFLIOD:=_dt;
                     KH_DOD.KSEFLI:='T'
                  || KH_DOD.KSEFKHOD:=_dt;
                     KH_DOD.KSEFKH:='T'
                  ?};
                  KH_DOD.put()
               ?};
               _sel.next()
            !}
         |? _sel.first()
         || {!
            |? {? exec('kh_dod_ini','kontrahent',exec('FindAndGet','#table',KH,_sel.REF,,"ref()",null()),1)
               || {? _od_kh
                  || KH_DOD.KSEFLIOD:=_dt;
                     KH_DOD.KSEFLI:='T'
                  || KH_DOD.KSEFKHOD:=_dt;
                     KH_DOD.KSEFKH:='T'
                  ?};
                  KH_DOD.put()
               ?};
               _sel.next()
            !}
         ?};
         1
      || 0
      ?}
   || 0
   ?}
?}


\set_bl_dt_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Ustawia początkową datę obsługi dokumentów Businesslink dla KH_DOD - po grupie rekordów
::----------------------------------------------------------------------------------------------------------------------
~~


\bg_gus_daneadr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [22.26]
:: OPIS: Uaktualnienie danych GUS dla kontrahentów - grupa przed
::----------------------------------------------------------------------------------------------------------------------
_gus_pyt:=tab_tmp(,'POKAZ','STRING[1]','Pokazać róźnice pomiędzy danymi w bazie a danymi w GUS?'
                  ,'SKR','STRING[1]','Aktualizować dane adresowe kontrahentów skreślonych?');
_edit:=_gus_pyt.mk_edit('Aktualizacja danych adresowych kontrahentów na podstawie bazy GUS',0);
_gus_pyt.win_efld(_edit,,'POKAZ',,,10,,,,,,'check-box',,"'T'","'N'");
_gus_pyt.win_efld(_edit,,'SKR',,,10,,,,,,'check-box',,"'T'","'N'");
_gus_pyt.win_edit(_edit);
{? _gus_pyt.edit()
|| gus_pok:=_gus_pyt.POKAZ; gus_skr:=_gus_pyt.SKR; ile_akt:=ile_nakt:=ile_pom:=ile_nzn:=0;
   nakt_kh:=tab_tmp(,'NIP','STRING[15]','NIP','NAZ','STRING[60]','Nazwa'
                    ,'MIASTO','STRING[30]','Miasto','UL','STRING[30]','Ulica'
                    ,'PRZYCZ','STRING[70]','Przyczyna'
                   );
   _wer:=nakt_kh.mk_sel('Kontrahenci','P',,'nakt_kh_wer',,,,,'U');
   nakt_kh.win_fld(_wer,,'NIP');
   nakt_kh.win_fld(_wer,,'NAZ',,,30);
   nakt_kh.win_fld(_wer,,'MIASTO',,,15);
   nakt_kh.win_fld(_wer,,'UL',,,15);
   nakt_kh.win_fld(_wer,,'PRZYCZ',,,60);
   nakt_kh.win_act(_wer,,'Kolejność');
   nakt_kh.win_sel(_wer);
   1
|| 0
?}


\ag_gus_daneadr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [22.26]
:: OPIS: Uaktualnienie danych GUS dla kontrahentów - grupa po
::----------------------------------------------------------------------------------------------------------------------
{? ~nakt_kh.size()
|| FUN.info('Liczba kontrahentów, u których zaktualizowano dane adresowe: %1\n'@[$ile_akt])
|| {? FUN.choice('Liczba kontrahentów, u których zaktualizowano dane adresowe: %1\n'
                 'Liczba kontrahentów ze zdublowanym zestawem danych - nazwa, miasto, ulica: %2\n'
                 'Liczba kontrahentów dla których pominięto aktualizację z bazy GUS: %3\n'
                 'Liczba kontrahentów, których nie znaleziono w bazie GUS: %4\n'@[$ile_akt,$ile_nakt,$ile_pom,$ile_nzn],
                 0,'Pokazać szczegóły?'@)
   || nakt_kh.select()
   ?}
?};
VAR_DEL.delete('gus_pok','ile_akt','ile_nakt','gus_skr','nakt_kh','ile_nzn','ile_pom')


\gus_daneadr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [22.26]
:: OPIS: Uaktualnienie danych GUS dla kontrahentów
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__dane');
exec('gus_reader_decl','nipyue');
{? var_press('gusReaderSID')>0 || GusReader.setSID(gusReaderSID) ?};
ROZNE.NRNLR:={? KH.SNIP<>'' || KH.SNIP || KH.REG ?};
akt_kraj:=0;
{? KH.KHCHKGUS
|| {? KH.sel_size()
   || exec('nakt_kh','kontrahent','Aktualizacja danych adresowych kontrahenta z bazy GUS jest wyłączona.');
      ile_pom+=1
   || FUN.info('Aktualizacja danych adresowych kontrahenta z bazy GUS jest wyłączona.'@)
   ?}
|? ROZNE.NRNLR<>''
|| _kh:=exec('danePobierzPelnyRaport','gus_ws');
   {? var_press('nazwa') & fexists(nazwa,1)
   || ferase(nazwa,1); &nazwa
   ?};
   {? _kh='' | _kh=~~
   || {? KH.sel_size()
      || exec('nakt_kh','kontrahent','Kontrahent nie znaleziony w bazie GUS lub brak łączności z bazą GUS');
         ile_nzn+=1
      || FUN.info('Nie znaleziono kontrahenta w bazie GUS lub brak łączności z bazą GUS.'@)
      ?}
   |? 3+_kh<>'ESC'
   || _sid:=GusReader.getSID();
      {? _sid<>'' || gusReaderSID:=_sid ?};
      _lista:=spli_str(_kh,'\n');
      _ok:=obj_len(_lista)=1;
      {? _ok
      || {? obj_len(__dane)>=12 & __dane[12]<>''
         || _ok:={? KH.sel_size()
                 || (gus_skr='T')
                 || exec('gus_kh_del','kontrahent',__dane[12])
                 ?}
         ?};
         {? _ok & obj_len(__dane)>1 || _ok:=exec('gus_red','kontrahent') ?};
         {? _ok & obj_len(__dane)>1 || exec('gus_daneadr1','kontrahent') ?}
      ?}
   ?}
|| {? KH.sel_size()
   || exec('nakt_kh','kontrahent','Kontrahent nie znaleziony w bazie GUS lub brak łączności z bazą GUS');
      ile_nzn+=1
   || FUN.info('Nie znaleziono kontrahenta w bazie GUS lub brak łączności z bazą GUS.'@)
   ?}
?};
VAR_DEL.delete('akt_kraj');
''


\gus_kh_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Pytanie z komunikat o wykresleniu kontrahenta z bazy REGON GUS-u
::   WE: _a - data wykreslenia (napis)
::----------------------------------------------------------------------------------------------------------------------
FUN.ask(
   'Kontrahent został wykreślony\nz rejestru REGON dnia '+_a+'.\n'+
   'Czy uzupełnić dane z bazy GUS?'@
)


\gus_daneadr1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [22.26]
:: OPIS: Uaktualnienie danych GUS dla kontrahentów - wewnętrzna
::----------------------------------------------------------------------------------------------------------------------
KH.UL:={? __dane[4]='' & __dane[7]<>'' || __dane[7]
       |? -(3+__dane[4])='ul.' || |(3-__dane[4])
       || __dane[4]
       ?};
KH.DOM:=__dane[5];
KH.LOKAL:=__dane[6];
KH.MIASTO:=__dane[7];
KH.KPOCZ:={? __dane[8]='' || '' || 2+__dane[8]+'-'+(__dane[8]+3) ?};
KH.POCZ:=__dane[9];
{? czy_zazn
|| KH.REJ_INFO:='GUS-%1-%2'[$date(),$time()]
?};
VAR_DEL.delete('czy_zazn');
{? __dane[13]<>''
|| KRAJE.cntx_psh();
   KRAJE.index('KODISO'); KRAJE.prefix(__dane[13],);
   {? KRAJE.first() || KH.KRAJISO:=KRAJE.ref() ?};
   KRAJE.cntx_pop()
?};
KH.KRAJ:=__dane[14];
::{? _akt_kraj
::|| {? KH.KRAJ='' || KH.KRAJ:='Polska' ?};
::   {? ~KH.KRAJISO
::   || KRAJE.cntx_psh();
::      KRAJE.index('KODISO'); KRAJE.prefix('PL',);
::      {? KRAJE.first() || KH.KRAJISO:=KRAJE.ref() ?};
::      KRAJE.cntx_pop()
::   ?}
::?};
exec('kh_mod','kontrahent');
{? KH.put(1)
|| {? var_pres('ile_akt')>0 || ile_akt+=1 ?}
|| {? var_pres('ile_nakt')>0 || ile_nakt+=1 ?};
   {? ~KH.sel_size()
   || FUN.info('Nie udało się zaktualizować danych adresowych.\n'
               'Istnieje inny kontrahent z taką samą nazwą, miastem i ulicą.'@)
   || exec('nakt_kh','kontrahent','Kontrahent ze zdublowanym zestawem danych - nazwa, miasto, ulica')
   ?}
?}


\gus_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS:
::----------------------------------------------------------------------------------------------------------------------
_gus_tmp:=tab_tmp(,'MIASTO','STRING[30]','Miasto','UL','STRING[150]','Ulica'
                  ,'DOM','STRING[8]','Dom','LOKAL','STRING[8]','Lokal'
                  ,'KPOCZ','STRING[6]','Kod pocztowy','POCZ','STRING[30]','Poczta'
                  ,'SYM_K','STRING[2]','Kraj wg ISO','NAZ_K','STRING[40]','Kraj'
                 );
_czy_tmp:=tab_tmp(,'MIASTO','STRING[1]','Zaktualizować?','UL','STRING[1]','Zaktualizować?'
                  ,'DOM','STRING[8]','Zaktualizować?','LOKAL','STRING[8]','Zaktualizować?'
                  ,'KPOCZ','STRING[1]','Zaktualizować?','POCZ','STRING[1]','Zaktualizować?'
::                  ,'KRAJ','STRING[1]','Zaktualizować kraj na Polska?'
                  ,'NAZ_K','STRING[1]','Zaktualizować?','SYM_K','STRING[1]','Zaktualizować?'
                 );
_gus_tmp.UL:=__dane[4];
{? _gus_tmp.UL*'ul.'>0 || _gus_tmp.UL:=4-_gus_tmp.UL ?};
_gus_tmp.DOM:=__dane[5];
_gus_tmp.LOKAL:=__dane[6];
_gus_tmp.MIASTO:=__dane[7];
_gus_tmp.KPOCZ:={? __dane[8]<>'' || (2+__dane[8])+'-'+(__dane[8]+3) || '' ?};
_gus_tmp.POCZ:=__dane[9];
_gus_tmp.SYM_K:=__dane[13];
_gus_tmp.NAZ_K:=(1+__dane[14])+(1-(-__dane[14]));
_gus_tmp.add();
_edit:=_gus_tmp.mk_edit('Dane kontrahenta %1 - %2'@[KH.NIP,KH.NAZ],0);
_gus_tmp.win_esep(_edit,'Dane kontrahenta'@);
_gus_tmp.win_efld(_edit,KH,'KRAJISO','SYM',,37,,1,'Kraj wg ISO');
_gus_tmp.win_efld(_edit,KH,'KRAJ',,,40,,1,'Kraj');
_gus_tmp.win_efld(_edit,KH,'MIASTO',,,40,,1);
_gus_tmp.win_efld(_edit,KH,'UL',,,40,,1);
_gus_tmp.win_efld(_edit,KH,'DOM',,,40,,1);
_gus_tmp.win_efld(_edit,KH,'LOKAL',,,40,,1);
_gus_tmp.win_efld(_edit,KH,'KPOCZ',,,40,,1);
_gus_tmp.win_efld(_edit,KH,'POCZ',,,40,,1);
_gus_tmp.win_ecol(_edit);
_gus_tmp.win_esep(_edit,'Zaktualizować pole?'@);
_gus_tmp.win_efld(_edit,_czy_tmp,'SYM_K',,,10,,,,,,'check-box',,"'T'","'N'");
_gus_tmp.win_efld(_edit,_czy_tmp,'NAZ_K',,,10,,,,,,'check-box',,"'T'","'N'");
_gus_tmp.win_efld(_edit,_czy_tmp,'MIASTO',,,10,,,,,,'check-box',,"'T'","'N'");
_gus_tmp.win_efld(_edit,_czy_tmp,'UL',,,10,,,,,,'check-box',,"'T'","'N'");
_gus_tmp.win_efld(_edit,_czy_tmp,'DOM',,,10,,,,,,'check-box',,"'T'","'N'");
_gus_tmp.win_efld(_edit,_czy_tmp,'LOKAL',,,10,,,,,,'check-box',,"'T'","'N'");
_gus_tmp.win_efld(_edit,_czy_tmp,'KPOCZ',,,10,,,,,,'check-box',,"'T'","'N'");
_gus_tmp.win_efld(_edit,_czy_tmp,'POCZ',,,10,,,,,,'check-box',,"'T'","'N'");
::_gus_tmp.win_efld(_edit,_czy_tmp,'KRAJ',,,10,,,,,,'check-box',,"'T'","'N'");
_gus_tmp.win_ecol(_edit);
_gus_tmp.win_esep(_edit,'Dane pobrane z GUS');
_gus_tmp.win_efld(_edit,,'SYM_K',,,40);
_gus_tmp.win_efld(_edit,,'NAZ_K',,,40);
_gus_tmp.win_efld(_edit,,'MIASTO',,,40);
_gus_tmp.win_efld(_edit,,'UL',,,40);
_gus_tmp.win_efld(_edit,,'DOM',,,40);
_gus_tmp.win_efld(_edit,,'LOKAL',,,40);
_gus_tmp.win_efld(_edit,,'KPOCZ',,,40);
_gus_tmp.win_efld(_edit,,'POCZ',,,40);
_czy_tmp.NAZ_K:={? KH.KRAJ<>_gus_tmp.NAZ_K || 'T' || 'N' ?};
_czy_tmp.SYM_K:={? KH.KRAJISO().SYM<>_gus_tmp.SYM_K || 'T' || 'N' ?};
_czy_tmp.MIASTO:={? KH.MIASTO<>_gus_tmp.MIASTO || 'T' || 'N' ?};
_czy_tmp.UL:={? KH.UL<>_gus_tmp.UL || 'T' || 'N' ?};
_czy_tmp.DOM:={? KH.DOM<>_gus_tmp.DOM || 'T' || 'N' ?};
_czy_tmp.LOKAL:={? KH.LOKAL<>_gus_tmp.LOKAL || 'T' || 'N' ?};
_czy_tmp.KPOCZ:={? KH.KPOCZ<>_gus_tmp.KPOCZ || 'T' || 'N' ?};
_czy_tmp.POCZ:={? KH.POCZ<>_gus_tmp.POCZ || 'T' || 'N' ?};
::_czy_tmp.KRAJ:={? ~KH.KRAJISO | KH.KRAJ='' || 'T' || 'N' ?};
_zapisz:=_gus_tmp.win_ebtn(_edit,'text=%1'['Zapisz'@],'key:F2');
_anuluj:=_gus_tmp.win_ebtn(_edit,'text=%1'['Anuluj'@],'key:Esc');
_gus_tmp.btn_eopt(_edit,_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
_gus_tmp.btn_eopt(_edit,_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
_gus_tmp.win_edit(_edit);
_edit:=0;
{? _czy_tmp.NAZ_K='T' | _czy_tmp.SYM_K='T' | _czy_tmp.UL='T' | _czy_tmp.MIASTO='T' | _czy_tmp.DOM='T' | _czy_tmp.LOKAL='T' |
   _czy_tmp.KPOCZ='T' | _czy_tmp.POCZ='T'
::    |  _czy_tmp.KRAJ='T'
|| _edit:={? ~KH.sel_size() | (var_pres('gus_pok')>0 & gus_pok='T')
          || _gus_tmp.edit()
          || 1
          ?}
|? ~KH.sel_size()
|| FUN.info('Dane adresowe są aktualne - nie ma potrzeby aktualizacji.'@)
?};
VAR_DEL.delete('czy_zazn');
{? _czy_tmp.UL='T' | _czy_tmp.MIASTO='T' | _czy_tmp.DOM='T' | _czy_tmp.LOKAL='T' |
   _czy_tmp.KPOCZ='T' | _czy_tmp.POCZ='T'
::    |  _czy_tmp.KRAJ='T'
|| czy_zazn:=1
|| czy_zazn:=0
?};
{? _edit
|| __dane[4]:={? _czy_tmp.UL='T' || _gus_tmp.UL || KH.UL ?};
   __dane[7]:={? _czy_tmp.MIASTO='T' || _gus_tmp.MIASTO || KH.MIASTO ?};
   __dane[5]:={? _czy_tmp.DOM='T' || _gus_tmp.DOM || KH.DOM ?};
   __dane[6]:={? _czy_tmp.LOKAL='T' || _gus_tmp.LOKAL || KH.LOKAL ?};
   __dane[8]:={? _czy_tmp.KPOCZ='T' || (2+_gus_tmp.KPOCZ)+(_gus_tmp.KPOCZ+3) || KH.KPOCZ ?};
   __dane[9]:={? _czy_tmp.POCZ='T' || _gus_tmp.POCZ || KH.POCZ ?};
   {? _czy_tmp.SYM_K='T'
   || __dane[13]:=_gus_tmp.SYM_K
   || __dane[13]:=KH.KRAJISO().SYM
   ?};
   {? _czy_tmp.NAZ_K='T'
   || __dane[14]:=_gus_tmp.NAZ_K
   || __dane[14]:=KH.KRAJ
   ?};
::   akt_kraj:=(_czy_tmp.KRAJ='T');
   return(1)
|| return(0)
?}


\kh_dod_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Akcja Wyświetl tabeli KH_DOD
::----------------------------------------------------------------------------------------------------------------------
KH_DOD.cntx_psh();
exec('kh_wys1','kontrahent');
KH_DOD.cntx_pop();
~~


\chk_unq_rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [22.26]
:: OPIS: Funkcja sprawdza czy rekord z zadanych parametrach jest unikalny
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_ref:={? -menu_txt()='popraw' || KH_POW.ref() || null ?};
_kh:=KH_POW.KH;
_rodzaj:=KH_POW.RODZAJ;
_firma:=KH_POW.FIRMA;
_dataod:=KH_POW.DATAOD;
KH_POW.cntx_psh();
KH_POW.index('RODZAJ');
KH_POW.prefix(KH_POW.RODZAJ,KH_POW.FIRMA,KH_POW.KH,KH_POW.DATAOD);
_unique:=1;
{? KH_POW.first() & _ref=null
|| _unique:=0
?};
KH_POW.cntx_pop();
_unique


\kh_powr_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [22.26]
:: OPIS: Funkcja blokuje edytowanie rekordów systemowych
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? KH_POWR.SYSTEM='T'
|| FUN.info('Rekord systemowy, modyfikacje niedozwolone.'@);
   0
|| 1
?}


\kh_powr_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [22.26]
:: OPIS: Funkcja sprawdza poprawność danych podczas dodawania rekordu tabeli KH_POWR
::   WY: Akronim pola[STRING]/1
::----------------------------------------------------------------------------------------------------------------------
{? KH_POWR.KOD=''
|| FUN.info('Nie podano kodu powiązania'@);
    'KOD'
|| 1
?}


\kh_odb_mark
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: znaczniki pól obowiązkowych dla odbiorcy kontrahenta
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || KH_ODB.win_edit('?') ?};

{? KH_ODB.ABSTORE<>''
|| _mark:='mark=1'
|| _mark:='mark=0'
?};
KH_ODB.efld_opt(_win_red,_mark,KH_ODB,'EM');
KH_ODB.efld_opt(_win_red,_mark,KH_ODB,'KRAJ');
KH_ODB.efld_opt(_win_red,_mark,KH_ODB,'POCZ');
KH_ODB.efld_opt(_win_red,_mark,KH_ODB,'KPOCZ');
KH_ODB.efld_opt(_win_red,_mark,KH_ODB,'UL');
KH_ODB.efld_opt(_win_red,_mark,KH_ODB,'MIASTO');
~~


\nakt_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [22.26]
:: OPIS: Dodaje informacje o niezaktualizowanym kontrahencie
::   WE: _a - [STRING] - przyczyna
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('nakt_kh')>0
|| _przycz:={? var_pres('_a') || _a || '' ?};
   nakt_kh.NAZ:=KH.NAZ;
   nakt_kh.NIP:=KH.NIP;
   nakt_kh.MIASTO:=KH.MIASTO;
   nakt_kh.UL:=KH.UL;
   nakt_kh.PRZYCZ:=_przycz;
   nakt_kh.add()
?}


\po_lkkh_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Po wprowadzeniu wysokości limitu kredytowego
::----------------------------------------------------------------------------------------------------------------------
KH.efld_opt('RED',{? KH_DOD.LK>0 & (KH.GRKH=null() | KH.GRKH().KLIM=null()) || 'mark=1' || 'mark=0' ?}
 ,KH_DOD,'KLIM');
1


\kh_grvat_szuk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Dla kontrahenta - znalezienie kontrahenta będącego jego grupą VAT
::   WE: [_a] - KH.ref()
::       [_b] - nie wypełniać BEER.KH_GV [0]/1
::   WY: kontrahent będący grupą VAT
::----------------------------------------------------------------------------------------------------------------------
_kh:={? var_pres('_a')>0 || _a || null() ?};
_nbeer:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_kh_gv:=null();
{? _kh=null()
|| {? KH.GRVAT<>'T'
   || KH_ODB.cntx_psh();
      KH_ODB.index('KH_CGV');
      KH_ODB.prefix(KH.ref(),'T');
      {? KH_ODB.first()
      || _kh_gv:=KH_ODB.KH
      ?};
      KH_ODB.cntx_pop()
   ?}
|| KH_ODB.cntx_psh();
   KH_ODB.index('KH_CGV');
   KH_ODB.prefix(_kh,'T');
   {? KH_ODB.first()
   || _kh_gv:=KH_ODB.KH
   ?};
   KH_ODB.cntx_pop()
?};
{? ~_nbeer
|| BEER.KH_GV:=_kh_gv
?};
_kh_gv


\kh_grvat_lic
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Grupa VAT licencjobiorcy
::   WE: [_a] - [DATA] data na kiedy zwrócić
::   WY: KH.ref będący grupą VAT licencjobiorcy
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(date())
|| _data:=_a
|| _data:=date()
?};
KST.cntx_psh();
exec('czytaj','#stalesys',_data,KST,'GRVAT');
KH.cntx_psh();
{? KST.GRVAT().GV_OD<=_data & (KST.GRVAT().GV_DO=date(0,0,0) | KST.GRVAT().GV_DO>=_data)
|| _res:=KST.GRVAT
|| _res:=null
?};
KH.cntx_pop();
KST.cntx_pop();
_res


\kh_grvat_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Przed redakcją pola KH.GRVAT
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? -menu_txt()<>'dołącz'
|| KH_ODB.cntx_psh();
   _kh:=KH.ref();
   {? KH.GRVAT='T'
   || KH_ODB.index('KH_ODB');
      KH_ODB.prefix(_kh);
      {? KH_ODB.first()
      || {!
         |? {? KH_ODB.CGVAT='T'
            || _wyn:=0
            ?};
            _wyn & KH_ODB.next()
         !}
      ?}
:: nie można odznaczyć KH.GRVAT, gdy kontrahent ma odbiorcę - członka grupy VAT
   || {? BEER.KH_GV<>null()
      || _wyn:=0
      ?}
:: nie można zaznaczyć KH.GRVAT, gdy kontrahent jest odbiorcą - członkiem grupy VAT
   ?};
   KH_ODB.cntx_pop()
?};
_wyn


\kh_grvat_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Po redakcji pola KH.GRVAT
::----------------------------------------------------------------------------------------------------------------------
exec('set_disabled_fields','kontrahent');
exec('set_required_fields','!zws_par_kkhr');
~~


\kh_gvd_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Przed redakcją pola KH.GV_OD, KH_GV_DO
::----------------------------------------------------------------------------------------------------------------------
_wyn:={? KH.GRVAT='T' || 1 || 0 ?};
_wyn


\khodb_cgvat_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Przed redakcją pola KH_ODB.CGVAT
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? KH_ODB.KH_LNK=null() | KH_ODB.KH().GRVAT<>'T' | KH_ODB.JST='T' | KH_ODB.KH_LNK().GRVAT='T'
|| _wyn:=0
?};
_wyn


\khodb_cgvat_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Po redakcji pola KH_ODB.CGVAT
::----------------------------------------------------------------------------------------------------------------------
exec('khodb_set_editable','kontrahent')


\khodb_jst_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Przed redakcją pola KH_ODB.JST
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? KH_ODB.KH_LNK=null() | KH_ODB.CGVAT='T' | KH_ODB.KH_LNK().GRVAT='T'
|| _wyn:=0
?};
_wyn


\khodb_jst_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Po redakcji pola KH_ODB.JST
::----------------------------------------------------------------------------------------------------------------------
exec('khodb_set_editable','kontrahent')


\khodb_set_editable
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Zaznacza pola edytowalne lub nie w oknie redagowania KH_ODB
::   WE: [_a] - okno redagowania
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & _a<>''
|| _red:=_a
|| _red:=KH_ODB.win_edit('?')
?};
{? exec('khodb_jst_be','kontrahent')
|| KH_ODB.efld_opt(_red,'editable=1',,'JST')
|| KH_ODB.efld_opt(_red,'editable=grayed',,'JST')
?};
{? KH_ODB.efld_opt(_red,'enable',,'CGVAT')='1'
|| {? exec('khodb_cgvat_be','kontrahent')
   || KH_ODB.efld_opt(_red,'editable=1',,'CGVAT')
   || KH_ODB.efld_opt(_red,'editable=grayed',,'CGVAT')
   ?}
?};
~~


\grvat_typ_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: czy kontrahent jest członkiem GRVAT [CW] wewnętrznym, [CZ]Zewnętrznym,
::                           Grupą VAT [GW] wewnętrzną, [GZ] zewnętrzną, [N]ie jest grupą i członkiem GRVAT
::   WE: _a - KH.ref
::      [_b]- [DATA] data na kiedy sprawdzić, domyślnie dzisiaj
::   WY: CW/CZ/GW/GZ/N
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null)
|| _kh:=_a
|| return('')
?};
{? var_pres('_b')=type_of(date())
|| _data:=_b
|| _data:=date()
?};
_ret:='N';
VAR_DEL.delete('__KH_GZV');
VAR_DEL.delete('__KHODB_CZV');
__KH_GZV:=null();
__KHODB_CZV:=null();
KST.cntx_psh(); exec('czytaj','#stalesys',_data,KST,'GRVAT'); _GrVLic:=KST.GRVAT; KST.cntx_pop();
KH.cntx_psh();
KH.prefix();
{? KH.seek(_kh)
||
:: sprawdzenie, czy kontrahent jest grupą VAT na datę wystawienia dokumentu
   {? KH.GRVAT='T' & KH.GV_OD<=_data & (KH.GV_DO=date(0,0,0) | KH.GV_DO>=_data)
   ||
::    sprawdzenie, czy kontrahent jest grupą VAT licencjobiorcy na dzień wystawienia dokumentu
      {?_GrVLic=_kh
      || _ret:='GW'
      || _ret:='GZ'
      ?}
   ?};
:: jeśli kontrahent nie jest grupą VAT, sprawdzamy czy jest członkiem grupy licencjobiorcy
   {? _ret='N'
   || KH_ODB.cntx_psh();
      KH_ODB.index('KH_ODB');
      KH_ODB.prefix(_GrVLic);
      {? KH_ODB.first()
      || {!
         |? {? KH_ODB.KH_LNK=_kh & KH_ODB.CGVAT='T'
            ||  _ret:='CW'
            ?};
            _ret='N' & KH_ODB.next()
         !}
      ?};
      KH_ODB.cntx_pop()
   ?};
:: jeśli kontrahent nie jest członkiem grupy VAT licencjobiorcy, to sprawdzamy czy jest członkiem innej grupy VAT
:: na dzień wystawienia dokumentu
   {? _ret='N'
   || KH_ODB.cntx_psh();
      KH_ODB.index('KH_LNK');
      KH_ODB.prefix(_kh);
      {? KH_ODB.first()
      || {!
         |? {? KH_ODB.CGVAT='T' & KH_ODB.KH().GV_OD<=_data & (KH_ODB.KH().GV_DO=date(0,0,0) | KH_ODB.KH().GV_DO>=_data)
            || __KHODB_CZV:=KH_ODB.ref();
               __KH_GZV:=KH_ODB.KH;
               _ret:='CZ'
            ?};
            _ret='N' & KH_ODB.next()
         !}
      ?};
      KH_ODB.cntx_pop()
   ?}
?};
KH.cntx_pop();
_ret


\kh_vat_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [23.25]
:: OPIS: Indywidualne prewspółczynniki VAT kontrahenta
::----------------------------------------------------------------------------------------------------------------------
KH_VAT.prefix(REF.FIRMA,KH.ref);
KH_VAT.select


\kh_vat_badd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [23.25]
:: OPIS: Przed Dołącz w tabeli KH_VAT
::----------------------------------------------------------------------------------------------------------------------
BEER.KH:=KH.ref()


\chk_kh_grvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: sprawdza wypelnienie wymaganych pól dla KH.GRVAT='T'
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? KH.GRVAT='T'
|| _wyn:=__CHK.record(KH,,'GV_OD');
   {? _wyn=''
   || {? KH.GV_DO<>date(0,0,0) & KH.GV_DO<KH.GV_OD
      || FUN.info('Nieprawidłowa data dla grupy VAT.'@);
         _wyn:='GV_DO'
      ?}

   ?}
?};
_wyn


\kh_cw_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [23.25]
:: OPIS: wyswietlenie członków grupy VAT licencjobiorcy podczas edycji nagłówka dokumentu wewnętrznego
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1)
|| _a:=1
?};
_ret:=fld();
_GrVatLic:=exec('kh_grvat_lic','kontrahent',DOK.DTO);
KH_ODB.index('KH_ODB');
KH_ODB.prefix();
KH_ODB.f_set('KOD',,'KH_ODB.KH=:_a',_GrVatLic);
KH_ODB.win_sel('SEL');
KH.cntx_psh();
{? _a=1
|| KH_ODB.blank(1);
   KH_ODB.SKR:=DOK.KH;
   {? KH_ODB.f_find_rec()
   || {? KH_ODB.select(,1,1,,,,1) || _ret:=KH_ODB.SKR ?}
   || {? KH_ODB.select() || _ret:=KH_ODB.SKR ?}
   ?}
?};
KH_ODB.f_clear();
KH.cntx_pop();
_ret


\kh_nad_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Wyswietlenie kontrahentów nadrzędnych, czyli tych dla których dany kontrahent jest odbiorcą
::----------------------------------------------------------------------------------------------------------------------
_wsel:=KH_ODB.win_sel('?');
_wed:=KH_ODB.win_edit('?');
KH_ODB.win_sel('SEL_NAD');
KH_ODB.win_edit('RED_NAD');
KH.cntx_psh();
KH_ODB.cntx_psh();
KH_ODB.index('KH_LNK');
KH_ODB.prefix(KH.ref());
KH_ODB.first();
KH_ODB.select();
KH_ODB.cntx_pop();
KH.cntx_pop();
KH_ODB.win_sel(_wsel);
KH_ODB.win_edit(_wed);
~~


\kh_ksefkhod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [RR.xx]
:: OPIS: Data początku wysyłania dokumentów KSeF dla danego kontrahenta (KH_DOD.KSEFKHOD)
::   WE: _a - KH.ref
::   WY: data
::----------------------------------------------------------------------------------------------------------------------
_ksefkhod:=date(0,0,0);
{? exec('kh_dod_ini','kontrahent',_a)
|| {? KH_DOD.KSEFKH='T'
   || _ksefkhod:=KH_DOD.KSEFKHOD
   ?}
?};
_ksefkhod


\jst_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [RR.xx]
:: OPIS: Domyślna wartość KH_ODB.JST dla KH_ODB.LNK=KH.ref()
::----------------------------------------------------------------------------------------------------------------------
_jst:=Plugin.run('KH_ODB_LNK_JST_BLANK',BEER.KH,KH.ref());
{? _jst='' | (_jst<>'N' & _jst<>'T')
|| _jst:={? exec('get','#params',300231,2)='T' || 'N' || 'T' ?}
?};
_jst

:Sign Version 2.0 jowisz:1045 2024/02/06 10:55:42 a4eaf0c1ca5cdf6784eceb6a8e3c2a6325d23c7489b89ea1ee2311583b0066cde9cfa1ed4d923ea569c1a344827278be7f5fda6d56bd428c74e445371f08660f4aa024f1d950c4744e36f85ef44717443f59bcf9a754439b913dec4d1d651568f4e7c5026567ad57798061fbe63940413449665f4658d42d6d6fc52826f4bbe5
