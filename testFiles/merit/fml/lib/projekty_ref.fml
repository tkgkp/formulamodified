:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: projekty_ref.fml
:: Utworzony: 17.05.2017
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły do obsługi danych powiązanych z projektami
::======================================================================================================================


\trig_skidxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Triger po add i put oraz przed del dla tabeli SKIDXD
::   WE: _a - 1-po add, 2-po put, 0-przed del
::       _b - czy operacja usana
::----------------------------------------------------------------------------------------------------------------------
{? _b=1
|| PROJ_REF.index('IDTIME'); PROJ_REF.prefix(SKIDXD.IDADD,'P');
   {? PROJ_REF.first() || {! |? PROJ_REF.del !} ?}
?};
{? _a=1 | _a=2
|| {? _b=1
   || _proj:=exec('skidxd_proj','projekty_ref');
      {! _i:=1..obj_len(_proj)
      |! {? _proj[_i]<>null
         || PROJ_REF.IDTIME:=SKIDXD.IDADD;
            PROJ_REF.TYPE:='P';
            PROJ_REF.PROJEKT:=_proj[_i];
            PROJ_REF.add()
         ?}
      !}
   ?};
   ~~
|| 1
?}


\skidxd_proj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Poszukuje projektów związanych ze podziałami controllingowymi
::----------------------------------------------------------------------------------------------------------------------
_proj:=obj_new(5);
{! _i:=1..obj_len(_proj) |! _proj[_i]:=null !};
SKID_MBP.cntx_psh();
SKID_MBP.index('LP');
SKID_MBP.prefix(SKIDXD.SKID_MB);
{? SKID_MBP.first()
|| {!
   |? {? SKID_MBP.UD_SCH().UD_TYP().SYMBOL='PROJ_REM'
      || _ud_skl:={? SKID_MBP.LP=1 || SKIDXD.PBUD
                  |? SKID_MBP.LP=2 || SKIDXD.JORG
                  |? SKID_MBP.LP=3 || SKIDXD.OKOSZ
                  |? SKID_MBP.LP=4 || SKIDXD.WYM4
                  |? SKID_MBP.LP=5 || SKIDXD.WYM5
                  || null
                  ?};
         _proj[SKID_MBP.LP]:=exec('get_ud_skl_proj','projekty_ref',_ud_skl)
      ?};
      SKID_MBP.next()
   !}
?};
SKID_MBP.cntx_pop();
_proj


\get_ud_skl_proj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Zwraca projekt na podstawie UD_SKL
::   WE: _a - wskaznie na elemen drzewa - UD_SKL.ref
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
UD_POW.cntx_psh();
UD_POW.index('SKL'); UD_POW.prefix(_a,'R');
{? UD_POW.first()
|| PROJEKTY.cntx_psh();
   PROJEKTY.index('IDADD');
   PROJEKTY.prefix();
   {? PROJEKTY.find_key(UD_POW.IDTIME) || _ref:=PROJEKTY.ref() ?};
   PROJEKTY.cntx_pop()
?};
UD_POW.cntx_pop();
_ref


\bv_proj_skidxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Przed wyświetl okna PODZIAŁY tabeli PROJ_REF
::----------------------------------------------------------------------------------------------------------------------
SKIDXD.win_edit('RED');
SKIDXD.display()


\all_skidxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Akcja wszystkie okna PODZIAŁY tabeli PROJ_REF
::----------------------------------------------------------------------------------------------------------------------
_tab:=sql(
   'select '
   'ODD.OD as ODD, REJ.KOD as REJ, DOK.NR, DOK.DTW, SKID_MBN.KOD, '
   'UD1.SYMBOL as UD1SYM, UD2.SYMBOL as UD2SYM, UD3.SYMBOL as UD3SYM, UD4.SYMBOL as UD4SYM, UD5.SYMBOL as UD5SYM, '
   'SKIDXD.WART, SLO.KOD as WAL, SKIDXD.WARTW, SKIDXD.AN, SKIDXD.REFERENCE as REF '
   'from @PROJ_REF '
   'join @SKIDXD using(PROJ_REF.IDTIME,SKIDXD.IDADD) '
   'join @DOK using(DOK.REFERENCE,SKIDXD.DOK) '
   'join ODD using(ODD.REFERENCE,SKIDXD.ODD) '
   'join REJ using(REJ.REFERENCE,SKIDXD.DOK_REJ) '
   'join SKID_MBN using(SKIDXD.SKID_MB,SKID_MBN.REFERENCE) '
   'left join UD_SKL as UD1 using(UD1.REFERENCE,SKIDXD.PBUD) '
   'left join UD_SKL as UD2 using(UD2.REFERENCE,SKIDXD.JORG) '
   'left join UD_SKL as UD3 using(UD3.REFERENCE,SKIDXD.OKOSZ) '
   'left join UD_SKL as UD4 using(UD4.REFERENCE,SKIDXD.WYM4) '
   'left join UD_SKL as UD5 using(UD5.REFERENCE,SKIDXD.WYM5) '
   'left join SLO using(SKIDXD.WAL,SLO.REFERENCE) '
   'where PROJ_REF.PROJEKT=\':_a\' '
   'order by 1,2,3',
   $PROJEKTY.ref()
);
_o:=_tab.mk_sel(,'P',,,,,,,'U');
_tab.win_fld(_o,,'ODD',,,,,,'Jednostka'@);
_tab.win_fld(_o,,'REJ',,,,,,'Rejestr'@);
_tab.win_fld(_o,,'NR',,,,,,'Nr'@);
_tab.win_fld(_o,,'DTW',,,,,,'Data zapisu'@);
_tab.win_fld(_o,,'KOD',,,,,,'Model'@);
_tab.win_fld(_o,,'UD1SYM',,,10,,,'Wymiar 1'@);
_tab.win_fld(_o,,'UD2SYM',,,10,,,'Wymiar 2'@);
_tab.win_fld(_o,,'UD3SYM',,,10,,,'Wymiar 3'@);
_tab.win_fld(_o,,'UD4SYM',,,10,,,'Wymiar 4'@);
_tab.win_fld(_o,,'UD5SYM',,,10,,,'Wymiar 5'@);
_tab.win_fld(_o,,'WART',,,18,6,,'Wartość'@);
_tab.win_fld(_o,,'WAL',,,,,,'Waluta'@);
_tab.win_fld(_o,,'WARTW',,,17,2,,'Wartość w walucie'@);
_tab.win_fld(_o,,'AN',,,20,,,'Konto'@);
_tab.win_act(_o,,'Wyświetl',,,,"
   _tab:=cur_tab();
   SKIDXD.cntx_psh();
   SKIDXD.use(8+_tab.REF);
   SKIDXD.prefix();
   {? SKIDXD.seek(BIT.sqlint(_tab.REF),)
   || SKIDXD.win_edit('RED');
      SKIDXD.display()
   ?};
   SKIDXD.cntx_pop()
");
_tab.win_sel(_o);
_tab.hdr_sel();
_tab.hdr_sel('Wszystkie podziały controllingowe związane z projektem: %1'@[PROJEKTY.SYM]);
_tab.select()


\trig_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Triger po add, put i przed del dla tabeli POZ
::   WE: _a - 1-po add, 2-po put, 0-przed del
::       _b - czy operacja udana
::----------------------------------------------------------------------------------------------------------------------
{? Plugin.runnable('PROJ_POZ')
|| {? b=1 & (_a=1 | (_a=2 & bfld('KON')<>POZ.KON))
   || opis_poz:=''; odd_ksn:=0;
      exec('op_konta','konto',POZ.KON,null,2);
      exec('ka_opis','konto',0);
      POZ.trig_off('*','*');
      POZ.KON_OPIS:=opis_poz;
      POZ.put();
      POZ.trig_on('*','*');
      &opis_poz; &odd_ksn
   ?};
   {? b=1
   || {? (_a=1 | (_a=2 & (bfld('SUM')<>POZ.SUM | bfld('STR')<>POZ.STR | bfld('KON')<>POZ.KON)))
      || exec('dok_sum_add','dok_fks1',_a)
      |? _a=0
      || exec('dok_sum_add','dok_fks1',_a)
      ?}
   ?};
   Plugin.run('PROJ_POZ')
|| {? _b=1 & (_a=0 | _a=1 | bfld('KON')<>POZ.KON)
   || PROJ_REF.index('IDTIME'); PROJ_REF.prefix(POZ.IDADD,'Z');
      {? PROJ_REF.first() || {! |? PROJ_REF.del !} ?}
   ?};
   {? _a=1 | _a=2
   || {? _b=1 & (_a=1 | bfld('KON')<>POZ.KON)
      || opis_poz:=''; odd_ksn:=0;
         exec('op_konta','konto',POZ.KON,null,2);
         exec('ka_opis','konto',0);
         POZ.trig_off('*','*');
         POZ.KON_OPIS:=opis_poz;
         POZ.put();
         POZ.trig_on('*','*');
         &opis_poz; &odd_ksn;
         DOK.cntx_psh();
         ODD.cntx_psh();
         _proj:=exec('kon_proj','projekty_ref',POZ.KON,POZ.DOK().ODD().FIRMA);
         ODD.cntx_pop();
         DOK.cntx_pop();
         {? var_press('_proj')>0
         || {! _i:=1..obj_len(_proj)
            |! {? _proj[_i]<>null
               || PROJ_REF.IDTIME:=POZ.IDADD;
                  PROJ_REF.TYPE:='Z';
                  PROJ_REF.PROJEKT:=_proj[_i];
                  DOK.cntx_psh();
                  PROJ_REF.ODD:=POZ.DOK().ODD;
                  DOK.cntx_pop();
                  PROJ_REF.add()
               ?}
            !}
         ?}
      ?};
      {? _b=1
      || {? (_a=1 | (bfld('SUM')<>POZ.SUM | bfld('STR')<>POZ.STR |  bfld('KON')<>POZ.KON)) & POZ.KON<>''
         || exec('dok_sum_add','dok_fks1',_a)
         ?}
      ?};
      ~~
   |? _b=1 & _a=0
   || exec('dok_sum_add','dok_fks1',_a);
      1
   || 1
   ?}
?}


\kon_proj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Funkcja do pobierania informacji o projektach konta księgowym
::   WE: _a - symbol konta analitycznego
::       _b - ref jednostki księgowej
::   WY: gdy podano symbol konta - zwraca tablice tab[][] z
::           tab[1][1] - symbol konta syntetycznego
::----------------------------------------------------------------------------------------------------------------------
_tab:=~~;
KS.cntx_psh(); BUD.cntx_psh(); SLU.cntx_psh(); SLO.cntx_psh(); PROJEKTY.cntx_psh();
KS.index('SYM'); KS.prefix(ROK_F.ref(),SSTALE.AR().SYNT+_a);
{? KS.first()
|| BUD.index('KS'); BUD.prefix(KS.ref());
   {? BUD.first()
   || _ile:=BUD.size();
      _tab:=obj_new(_ile);
      SLO.index('SL'); SLO.prefix();
      _a:=ROK_F.SYNT-_a;
      {!
      |? {? ROK_F.SEP<>',' || _a:=1-_a ?};
         {? BUD.SLU().SLU().WZ='Projekty_id' | SLU.WZ='Projekty_symbol'
         || _kod:=BUD.SLU().SLU().DL+_a;
            {? SLU.WZ='Projekty_id'
            || PROJEKTY.index('ID_KSG'); PROJEKTY.prefix(#_kod);
               _tab[BUD.POZ]:=null;
               {? PROJEKTY.first()
               || {! |?
                     {? _=1 | (_=2 & PROJEKTY.FIRMA=_b)
                     || _tab[BUD.POZ]:=PROJEKTY.ref()
                     ?};
                     _tab[BUD.POZ]=null & PROJEKTY.next()
                  !}
               ?}
            || PROJEKTY.index('SYM'); PROJEKTY.prefix(_kod,);
               _tab[BUD.POZ]:=null;
               {? PROJEKTY.first()
               || {! |?
                     {? _=1 | (_=2 & PROJEKTY.FIRMA=_b)
                     || _tab[BUD.POZ]:=PROJEKTY.ref()
                     ?};
                     _tab[BUD.POZ]=null & PROJEKTY.next()
                  !}
               ?}
            ?}
         || _tab[BUD.POZ]:=null
         ?};
         _a:=SLU.DL-_a;
         BUD.next()
      !}
   ?}
?};
KS.cntx_pop(); BUD.cntx_pop(); SLU.cntx_pop(); SLO.cntx_pop(); PROJEKTY.cntx_pop();
_tab


\br_proj_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Rekord przed okna ZAPISY tabeli PROJ_REF
::----------------------------------------------------------------------------------------------------------------------
POZ.index('IDADD'); POZ.prefix(PROJ_REF.IDTIME); POZ.first();
exec('rekprzed','color','POZ#01');
~~


\poz_proj_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Akcje okna pozycji dokumentu
::  OLD: \poz_proj_akc/projekty_view.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='D'
|| POZ.f_get();
   _ref:=POZ.ref();
   POZ.f_clear();
   POZ.DOK();
   exec('zap_kont','dok_fks');
   exec('poz_refresh','projekty_view');
   POZ.f_seek(_ref)
|? _a='G'
|| exec('RB','object');
   exec('dok_poz','dok_fks')
?}


\all_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Akcja wszystkie okna PODZIAŁY tabeli POZ
::----------------------------------------------------------------------------------------------------------------------
_tab:=sql(
   'select ODD.OD, REJ.KOD as REJ, DOK.NR, POZ.POZ, DOK.DTW, POZ.KON, POZ.OP, POZ.WN, POZ.MA, POZ.REFERENCE as REF '
   'from @PROJ_REF '
   'join @POZ using(PROJ_REF.IDTIME,POZ.IDADD) '
   'join @DOK using(DOK.REFERENCE,POZ.DOK) '
   'join ODD using(ODD.REFERENCE,DOK.ODD) '
   'join REJ using(REJ.REFERENCE,DOK.REJ) '
   'where PROJ_REF.PROJEKT=\':_a\' '
   'ORDER BY 1,2,3',
   $PROJEKTY.ref()
);
_o:=_tab.mk_sel(,'P',,,,,,,'U');
_tab.win_fld(_o,,'OD',,,,,,'Jednostka księgowa'@);
_tab.win_fld(_o,,'REJ',,,,,,'Rejestr'@);
_tab.win_fld(_o,,'NR',,,,,,'Nr'@);
_tab.win_fld(_o,,'POZ',,,,,,'Pozycja'@);
_tab.win_fld(_o,,'DTW',,,,,,'Data zapisu'@);
_tab.win_fld(_o,,'KON',,,,,,'Konto'@);
_tab.win_fld(_o,,'OP',,,38,,,'Opis'@);
_tab.win_fld(_o,,'WN',,,16,2,,'Wn'@);
_tab.win_fld(_o,,'MA',,,16,2,,'Ma'@);
_tab.win_act(_o,,'Wyświetl',,,,"
   _tab:=cur_tab();
   POZ.cntx_psh();
   POZ.use(8+_tab.REF);
   POZ.prefix();
   {? POZ.seek(BIT.sqlint(_tab.REF),)
   || DOK.cntx_psh();
      DOK.use('doku'+(8+_tab.REF+4));
      DOK.prefix();
      POZ.win_edit('C_WYS');
      POZ.display();
      DOK.cntx_pop()
   ?};
   POZ.cntx_pop()
");
_tab.win_act(_o,,'Kolejność');
_tab.win_sel(_o);
_tab.hdr_sel();
_tab.hdr_sel('Wszystkie zapisy dokumentów związane z projektem: %1'@[PROJEKTY.SYM]);
_tab.select()


\all_op_proj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Akcja wszystkie okna PROJEKTY tabeli OP_PROJ
::----------------------------------------------------------------------------------------------------------------------
_tab:=sql(
   'select ODD.OD, OP.AN, OP.SYM, OP_PROJ.WN, OP_PROJ.MA, OP.DO, OP.TZ, KH.SKR as KH, OP.TYP, OP.REFERENCE as REF '
   'from @OP_PROJ '
   'join @OP using(OP.REFERENCE,OP_PROJ.OP) '
   'join ODD using(ODD.REFERENCE,OP.ODD) '
   'join KH using(KH.REFERENCE,OP.KH) '
   'where OP_PROJ.PROJEKTY=\':_a\' '
   'ORDER BY 1',
   $PROJEKTY.ref()
);
_o:=_tab.mk_sel(,'P',,,,,,,'U');
_tab.win_fld(_o,,'OD',,,,,,'Jednostka księgowa'@);
_tab.win_fld(_o,,'AN',,,20,,,'Konto'@);
_tab.win_fld(_o,,'SYM',,,,,,'Symbol rozrachunku'@);
_tab.win_fld(_o,,'WN',,,16,2,,'Winien'@);
_tab.win_fld(_o,,'MA',,,16,2,,'Ma'@);
_tab.win_fld(_o,,'DO',,,,,,'Data otwarcia'@);
_tab.win_fld(_o,,'TZ',,,,,,'Termin płatności'@);
_tab.win_fld(_o,,'KH',,,,,,'Kontrahent'@);
_tab.win_fld(_o,,'TYP',,,,,,'Typ'@);

_tab.win_act(_o,,'Wyświetl',,,,"
   _tab:=cur_tab();
   OP.cntx_psh();
   OP.use(8+_tab.REF);
   OP.prefix();
   {? OP.seek(BIT.sqlint(_tab.REF),)
   || OP.win_edit('RED');
      OP.display()
   ?};
   OP.cntx_pop()
");
_tab.win_act(_o,,'Kolejność');
_tab.win_sel(_o);
_tab.hdr_sel();
_tab.hdr_sel('Wszystkie rozrachunki związane z projektem: %1'@[PROJEKTY.SYM]);
_tab.select()


\all_edokumpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Akcja wszystkie okna PROJEKTY tabeli EDOKUMPR
::----------------------------------------------------------------------------------------------------------------------
_tab:=sql(
   'select '
   'ETYPY.NAZWA as ETYPY, EDOKUM.SYM, EDOKUM.ID, EDOKUM.DATAW, UD_SKL.SYMBOL as R_SYM, UD_SKL.OPIS as R_OPIS, '
   'EDOKUMPR.WART, SLO.KOD as WAL, JM.KOD as JM,  EDOKUMPR.REFERENCE as REF '
   'from @EDOKUMPR '
   'join ETYPY using(ETYPY.REFERENCE,EDOKUMPR.ETYPY) '
   'join @EDOKUM using(EDOKUM.REFERENCE,EDOKUMPR.EDOKUM) '
   'join UD_SKL using(UD_SKL.REFERENCE,EDOKUMPR.RODZWART) '
   'left join SLO using(SLO.REFERENCE,EDOKUMPR.WAL) '
   'left join JM using(JM.REFERENCE,EDOKUMPR.JM) '
   'where EDOKUMPR.PROJEKT=\':_a\' '
   'ORDER BY DATAW',
   $PROJEKTY.ref()
);
_o:=_tab.mk_sel(,'P',,,,,,,'U');
_tab.win_fld(_o,,'ETYPY',,,20,,,'Typ'@);
_tab.win_fld(_o,,'SYM',,,20,,,'Symbol'@);
_tab.win_fld(_o,,'ID',,,20,,,'Identyfikator'@);
_tab.win_fld(_o,,'DATAW',,,,,,'Data wprowadzenia'@);
_tab.win_fld(_o,,'R_SYM',,,16,,,'Rodzaj wartości'@);
_tab.win_fld(_o,,'R_OPIS',,,28,,,,1);
_tab.win_fld(_o,,'WART',,,20,2,,'Wartość'@);
_tab.win_fld(_o,,'WAL',,,6,,,'Waluta'@);
_tab.win_fld(_o,,'JM',,,10,,,'Jednostka'@);

_tab.win_act(_o,,'Wyświetl',,,,"
   _tab:=cur_tab();
   EDOKUMPR.cntx_psh();
   EDOKUMPR.use(8+_tab.REF);
   EDOKUMPR.prefix();
   {? EDOKUMPR.seek(BIT.sqlint(_tab.REF),)
   || EDOKUM.cntx_psh();
      EDOKUM.use('skid_v'+(8+_tab.REF+2));
      EDOKUMPR.win_edit('RED');
      EDOKUMPR.display();
      EDOKUM.cntx_pop()
   ?};
   EDOKUMPR.cntx_pop()
");
_tab.win_act(_o,,'Kolejność');
_tab.win_sel(_o);
_tab.hdr_sel();
_tab.hdr_sel('Wszystkie dokumenty w obiegu związane z projektem: %1'@[PROJEKTY.SYM]);
_tab.select()


\trig_proj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Triger po add, put i przed del dla tabeli PROJEKTY
::   WE: _a - 1-po add, 2-po put, 0-przed del
::       _b - czy operacja udana
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 | _a=2
|| {? _b=1
   || UD_POW.index('IDTIME');
      UD_POW.prefix(PROJEKTY.IDADD);
      {? ~UD_POW.first() & PROJEKTY.SYM<>''
      || UD_TYP.index('SYMBOL'); UD_TYP.prefix('PROJ_REM');
         {? UD_TYP.first()
         || UD_SKL.index('SYMBOL'); UD_SKL.prefix(UD_TYP.ref());
            _sym:=((16*'0')+$PROJEKTY.ID_KSG)+16;
            {? ~UD_SKL.find_key(_sym,)
            || UD_SKL.blank(1);
               UD_SKL.UD_TYP:=UD_TYP.ref();
               UD_SKL.SYMBOL:=_sym;
               UD_SKL.OPIS:=PROJEKTY.NAZWA;
               UD_SKL.LISTA:='T';
               UD_SKL.AKTYWNY:='T';
               UD_SKL.add()
            ?};
            UD_POW.blank(1);
            UD_POW.IDTIME:=PROJEKTY.IDADD;
            UD_POW.R:='R';
            UD_POW.UD_TYP:=UD_TYP.ref();
            UD_POW.UD_SKL:=UD_SKL.ref();
            UD_POW.TAB:='PROJEKTY';
            UD_POW.REF_SQL:=$PROJEKTY.ref();
            UD_POW.REF_INT:=#PROJEKTY.ref();
            UD_POW.add()
         ?}
      |? _a=2 & (bfld('ID_KSG')<>PROJEKTY.ID_KSG | bfld('NAZWA')<>PROJEKTY.NAZWA)
      || UD_SKL.prefix();
         {? UD_SKL.seek(UD_POW.UD_SKL)
         || {? UD_SKL.SYMBOL=((16*'0')+$bfld('ID_KSG'))+16
            || UD_SKL.SYMBOL:=((16*'0')+$PROJEKTY.ID_KSG)+16
            ?};
            UD_SKL.OPIS:=PROJEKTY.NAZWA;
            UD_SKL.put()
         ?}
      ?}
   ?};
   ~~
|| UD_POW.index('IDTIME');
   UD_POW.prefix(PROJEKTY.IDADD);
   {? UD_POW.first()
   || _ref:=UD_POW.UD_SKL;
      {? UD_POW.del(,1)
      || {? _ref
         || {? UD_SKL.seek(_ref)
            || UD_SKL.del(,1)
            ?}
         ?}
      ?}
   || 1
   ?}
?}


\projgd_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Obsługa akcji "Rekord - po" w oknach wertowania tabeli PROJGD.
::   WE: [_a] [NUMBER] - Tryb wsadowy (bez komunikatów):
::             0 - Nie [domyślnie];
::             1 - Tak.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;

{? _batch
|| _fret1:="__CHK.empty_msg(MS.name(PROJGD,_a))";
   _fret2:="_b";
   _fret3:="MS.name(PROJGD,_a)+' - '+_b";
   _silent:=1
|| _fret1:="_a";
   _fret2:="FUN.emsg(_b); _a";
   _fret3:="__CHK.err_fld(PROJGD,_a,1,_b)";
   _silent:=~~
?};

{? (_chk:=__CHK.record(PROJGD,_silent,'FIRMA','DATA'))<>''
|| return(_fret1(_chk))
?};

_rok:=#(PROJGD.name()+4);
{? _rok<>PROJGD.DATA~1
|| return(_fret3('DATA','Dozwolone wartości z przedziału %1-%2.'@ [$date(_rok,1,1),$date(_rok,12,31)]))
?};

{? PROJGD.OSOBA=null() & PROJGD.P=null()
|| return(_fret2('PROJEKTY',
      'Co najmniej jedno z pól (%1,%2) musi być uzupełnione.'@ [MS.name(PROJGD,'OSOBA'),MS.name(PROJGD,'P')])
   )
?};

P.cntx_psh();
_war:=PROJGD.P<>null() & PROJGD.P().OSOBA<>PROJGD.OSOBA;
P.cntx_pop();
{? _war
|| return(_fret1('Pracownik nie odpowiada wskazanej osobie.'@,'P'))
?};

{? PROJGD.PROJEKTY=null() & PROJGD.KH=null()
|| return(_fret2('PROJEKTY',
      'Co najmniej jedno z pól (%1,%2) musi być uzupełnione.'@ [MS.name(PROJGD,'PROJEKTY'),MS.name(PROJGD,'KH')])
   )
?};

:: Zgodnie z założeniemi NIE sprawdzamy, czy podany kontrahent / handlowiec jest zgodny z tym na projekcie.
:: W żaden sposób nie weryfikujemy również liczby godzin.

:: Testy poniżej są nadmiarowe przy pracy przez jTerm-a (są "wykonywane" przez interfejs). Zostały tutaj umieszczone
:: w związku z obsługą webservice-ów.
_err:='';
_acr:='';
SLO_TYP.cntx_psh();
SLO_TYP.prefix();
SLO_NAZ.cntx_psh();
SLO_NAZ.prefix();
{! _lp:=1 .. 6
|? _err=''
|! PROJGD.fld_fml('WSK'+$_lp,'*PATTERN')();
   _acr:='WSK'+$_lp;
   {? ($('PROJGD.'+_acr))()<>null() & ($('PROJGD.'+_acr+'().SLO_TYP().SYMBOL'))()<>EDIT_VAR.SLO_TYP
   || _err:='Wartość przypisana do pola %1 nie należy do słownika %2.'@ [_acr,EDIT_VAR.SLO_TYP]
   ?}
!};
SLO_NAZ.cntx_pop();
SLO_TYP.cntx_pop();
{? _err<>''
|| return(_fret2(_acr,_err))
?};

UD_SKL.cntx_psh();
UD_SKL.prefix();
UD_TYP.cntx_psh();
UD_TYP.prefix();
{? PROJGD.JO_ZLEC<>null() & PROJGD.JO_ZLEC().UD_TYP().SYMBOL<>'PODZORG'
|| _acr:='JO_ZLEC';
   _err:='Wartość przypisana do pola %1 nie jest elementem typu %2.'@ ['JO_ZLEC','PODZORG']
|? PROJGD.JO_SWIAD<>null() & PROJGD.JO_SWIAD().UD_TYP().SYMBOL<>'PODZORG'
|| _acr:='JO_SWIAD';
   _err:='Wartość przypisana do pola %1 nie jest elementem typu %2.'@ ['JO_SWIAD','PODZORG']
?};
UD_TYP.cntx_pop();
UD_SKL.cntx_pop();
{? _err<>''
|| return(_fret2(_acr,_err))
?};

''

:Sign Version 2.0 jowisz:1045 2023/12/22 14:10:25 1c1f7f3dbca0f282020eccddff82277acb5fedbaaee175e123685afe939e217fe58b15b62532f58f600d7737859168eb3a7bd6adf954709628c6b8f038adef5eacba649e4dd6c77a142306c62d000bd4e372167179babfc57aa41f1c5e894a589cbb43bd05f5ed71aa73a19826ffb9ae5524f882e982be18f78bbad6933f99e1
