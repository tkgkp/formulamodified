:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zamdst_ptw.fml
:: Utworzony: 09.09.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Zamówienia dostaw - potwierdzenia
::======================================================================================================================


\czy_ptw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: kontroluje czy pozycje byly potwierdzane
::  OLD: \czy_ptw/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
ZD_POZ.index('POZ');
ZD_POZ.prefix(ZD_NAG.ref());
{? ZD_POZ.first()
||
   {!
   |? {? ZD_POZ.D_POTW<>date(0,0,0) || _wyn:=0 ?};
      _wyn=1 & ZD_POZ.next()
   !}
?};
_wyn


\obl_ptw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: oblicza ilosc potwierdzona dla pozycji zam. ZD_POZ
::   WE: _a  - ZD_POZ.refsql()
::      [_b] - 0/1 czy obliczac sume realizacji dla pozycji potw. - optymalizacja (pominiecie zbednych obliczen)
::      [_c] - 1(domyślnie) - tak, 0-czy poprawiać datę potwierdzenia
::  OLD: \obl_ptw/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};
:: zrezygnowano z poprawiania daty
_c:=0;

{? var_pres('__zdp_sum')<100
||
   __zdp_sum:=tab_tmp(1
      ,'IL_PTW','REAL','Il. potwierdzona'
      ,'IL_REA','REAL','Il. zreal. dla potw.'
   )
?};
VAR_DEL.delete('__dpotw');
__dpotw:=date(0,0,0);

__zdp_sum.IL_PTW:=__zdp_sum.IL_REA:=0;

_obl:="
   ZDP_POZ.index('ZD_POZ');
   ZDP_POZ.prefix(_a,_a);
   {? ZDP_POZ.first()
   ||
      {!
      |? _jnz:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,\"$ZD_NAG\",'');
         {? _jnz<>''
         || _jmz:=exec('FindAndGet','#table',ZD_NAG,_jnz,,\"JMZ\",0)
                   & exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,\"WS2<>1\",0)
         || _jmz:=0
         ?};
         __zdp_sum.IL_PTW+=ZDP_POZ.IL;
         {? _b=1
         || _ilrea:=exec('obl_rea','zamdst_rea',$ZDP_POZ.ref());
            {? _jmz
            || _ws2:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,\"WS2\",1);
               _ilrea:=(_ilrea*_ws2 $ ZDP_POZ.M().DOKL)
            ?};
            __zdp_sum.IL_REA+=_ilrea
         ?};
         {? __dpotw=date(0,0,0) | ZDP_POZ.ZDP_NAG().D_WYS<__dpotw
         || __dpotw:=ZDP_POZ.ZDP_NAG().D_WYS
         ?};
         ZDP_POZ.next()
      !}
   ?}
";
ZDP_NAG.cntx_psh();
ZDP_POZ.cntx_psh();
:: w biezacej masce
ZDP_NAG.use('zdptn'+ST.ODDZ+'__');
ZDP_POZ.use('zdptp'+ST.ODDZ+'__');
_obl(_a,_b);
:: w archiwum
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first()
||
   {!
   |?
      ZDP_NAG.use('zdptn'+ST.ODDZ+($OKR.ROK+2));
      ZDP_POZ.use('zdptp'+ST.ODDZ+($OKR.ROK+2));
      _obl(_a,_b);
      OKR.next()
   !}
?};
OKR.cntx_pop();
ZDP_POZ.cntx_pop();
ZDP_NAG.cntx_pop();
{? _c & __zdp_sum.IL_PTW>0 & __zdp_sum.IL_PTW>__zdp_sum.IL_REA & __dpotw<>date(0,0,0)
|| exec('FindAndGet','#table',ZD_POZ,_a,,"{? D_POTW<>__dpotw || D_POTW:=__dpotw; put(1) ?}",0)
?};
VAR_DEL.delete('__dpotw');
''


\ptw_stat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: ustawia status potwierdzenia
::   WE: [_a] - ZD_POZ.refsq (gdy puste akcja dotyczy ZD_NAG z bufora)
::       [_b] - wywołane dla usunięcia pozycji 1-tak 0-nie (domyślnie) 2-bez zapisów
::  OLD: \ptw_stat/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
_del:={? var_pres('_b')<>type_of(0) || 0 || _b ?};

_zd_nag:=null;
ZD_NAG.cntx_psh();
ZD_POZ.cntx_psh();
{? _a<>''
||
   ZD_POZ.prefix();
   {? form(8+_a)=ZD_POZ.name() & ZD_POZ.seek(_a)
   ||
::    ZD_NAG do bufora - potrzebne w \obl_ptw
      echo(ZD_POZ.ZD_NAG().SYM);
      _zd_nag:=ZD_POZ.ZD_NAG
   ?}
||
   ZD_NAG.get();
   _zd_nag:=ZD_NAG.ref()
?};
{? _zd_nag<>null
||
   _ilz:=_ilp:=0;
   ZD_POZ.index('POZ');
   ZD_POZ.prefix(_zd_nag);
   {? ZD_POZ.first()
   ||
      {!
      |?
         _ilz+=ZD_POZ.IL;
         exec('obl_ptw','zamdst_ptw',$ZD_POZ.ref(),0);
         _ilp+=__zdp_sum.IL_PTW;
::         {? _del=1 & __zdp_sum.IL_PTW<=0 || ZD_POZ.D_POTW:=ZD_POZ.ZD_NAG().D_POTW; ZD_POZ.put(1) ?};
         ZD_POZ.next()
      !}
   ?};
   ZD_NAG.prefix();
   {? _ilp>0 & _ilp<_ilz
   || ZD_NAG.POTW:='C'
   |? _ilp>0 & _ilp>=_ilz
   || ZD_NAG.POTW:='T'
   |? _ilp=0
   || ZD_NAG.POTW:='N'
   ?};
   {? _del<>2 & ZD_NAG.r_lock(1,1,1) || ZD_NAG.put(); ZD_NAG.r_unlock() ?}
?};
echo();
ZD_NAG.cntx_pop();
ZD_POZ.cntx_pop();
''


\potw_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: ustawia date dostawy - potwierdzenie dla zaznaczonych pozycji
::----------------------------------------------------------------------------------------------------------------------
_tab:=ZD_POZ.sel_aget();
_zaz:=_tab.size()<>0;
_ptw:=0;
ZD_POZ.sel_adel();
_edit:=ZD_POZ.win_edit('?');
{? ~_zaz & ZD_POZ.IL_POZ<=0
|| FUN.info('Pozycja w całości zrealizowana zmiana daty dostawy niemożliwa.'@)
|| ZD_POZ.cntx_psh();
   ZD_POZ.win_edit('POTW');
   {? ZD_POZ.edit("{? ZD_POZ.D_POTW=date(0,0,0)
                   || FUN.info('Należy podać potwierdzoną datę dostawy.'@);
                      'D_POTW'
                   |? ZD_POZ.D_POTW<ZD_POZ.ZD_NAG().DATA
                   || FUN.info('Potwiedzona data dostawy '
                               'nie może być mniejsza od daty zamówienia %1.'@[$ZD_POZ.ZD_NAG().DATA]);
                      'D_POTW'
                   || ''
                   ?}")
   || _d_potw:=ZD_POZ.D_POTW;
      {? _tab.size() & _tab.first()
      || {!
         |? {? (ZD_POZ.prefix(); ZD_POZ.seek(_tab.REF,))
            || exec('obl_ptw','zamdst_ptw',$ZD_POZ.ref(),1);
               {? __zdp_sum.IL_PTW>0
               || _ptw+=1
               || {? ZD_POZ.IL_POZ>0 & ~ZD_POZ.END || ZD_POZ.D_POTW:=_d_potw; ZD_POZ.put(1) ?}
               ?}
            ?};
            _tab.next()
         !}
      || {? ZD_POZ.IL_POZ>0 & ~ZD_POZ.END || ZD_POZ.D_POTW:=_d_potw; ZD_POZ.put(1) ?}
      ?}
   ?};
   ZD_POZ.cntx_pop()
?};
ZD_POZ.win_edit(_edit);
obj_del(_tab);
{? _ptw>0
|| FUN.info('Przy przypisaniu Potwierdzonej daty dostawy pominięto %1 pozycji.\n'
            'Zostały do nich wystawione potwierdzenia zamówień dostaw.'@[$_ptw])
?};
~~


\zdptw_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Zwraca okno redakcji tabeli ZDP_NAG
::   WE: [_a] - akronim okna
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || _a:='' ?};

_win_akr:='RED';

{? _win_akr='RED'
:: Tymczasowe okno redakcji
|| _win_red:=ZDP_NAG.mk_edit('Potwierdzenie zamówień dostaw'@,,'#zdpnag_edit');
   ZDP_NAG.win_ewin(_win_red,,_win_akr);
   _win_red
:: Okno redkacji
|| _win_akr
?}


\zdptw_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Ustawia okno redakcji tabeli ZDP_NAG, wymagane pola, okna słowników
::   WE: [_a] - 1-tryb Display 0-(domyślnie) nie
::----------------------------------------------------------------------------------------------------------------------
_disp:={? var_pres('_a')=type_of(0) || _a || 0 ?};

BPMN.END:=0;
_win_red:=exec('zdptw_win_edit','zamdst_ptw',{? _disp || 'RED' || '' ?});
{? ~_disp
|| {? ZDP_NAG.STAT_REJ='N'
   || _ff:="params_exec('zdptw_pozycje_red','zamdst_ptw')";
      _btn:=ZDP_NAG.win_ebtn(_win_red,'text='+'Poz&ycje'@+',btn_label_align=center,panel=bottom,align=begin',_ff);
      ZDP_NAG.btn_opt(_btn,'tooltip='+'Pozycje potwierdzenia'@);

      _ff:="params_exec('priority_action_red','#b__box')";
      ZDP_NAG.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Pr&iorytet'@],_ff);

      {? ZDP_NAG.STAT_REJ='N'
      || _ff:="params_exec('zdptw_zakoncz_red','zamdst_ptw')";
         exec('zakoncz','#window',ZDP_NAG,_win_red,1,_ff,0,exec('help_red_zakoncz','#window','P'),
         exec('text_red_zakoncz','#window','P'))
      ?}
   ?};
   exec('ok_esc','#window',ZDP_NAG,_win_red,1,,,,,exec('help_red_ok','#window','Z'),exec('text_red_ok','#window')
   ,exec('help_red_esc','#window','A'))
?};
ZDP_NAG.win_edit(_win_red);
exec('set_efld_opt','zamdst_ptw',_win_red);
exec('sel_win_kh','ustawienia')


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Zaznacza wymagalne pola w nagłówku zamówienia dostawy
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || ZD_NAG.win_edit('?') ?};
''


\bl_zdpkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: wartosc poczatkowa ZDP_NAG.KH
::  OLd: \bl_zdpkh/zd.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.KH


\be_zdpkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: przed redakcja dostawcy - ZDP_NAG.KH
::   WY: 0/1 czy mozna edytowac pole dostawca
::  OLD: \be_zdpkh/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? POMOC.LOCK='' | POMOC.LOCK='I' || _wyn:=exec('FindInSet','#table','ZDP_POZ','ZDP_NAG',ZDP_NAG.ref())=null() ?};
_wyn


\bl_zdp_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: ZDP_NAG.ref
::  OLD: \bl_zdp_n/zd.fml
::----------------------------------------------------------------------------------------------------------------------
ZDP_NAG.ref()


\bdzdppil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: przed wyswietleniem ZDP_POZ.IL
::  OLD: \bdzdppil/zd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('findtmp','#color')



\sel_zdpn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: potwierdzenia dostawcy - akcja dla zakladki
::  OLd: \sel_zdpn/zd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('openzd','open_tab',ST.ODDZ+POMOC.TAB);
ZDP_NAG.index('KH');
ZDP_NAG.prefix(POMOC.KH);
ZDP_NAG.first();
exec('zdpn_rek','zamdst_ptw');
''


\zdpn_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: akcja rekord przed dla ZDP_NAG
::  OLD: \zdpn_rek/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_act:='';
_act:={? (8+ZDP_NAG.name())+2<>'__' || 'DUPRZAN(C)H:D' || 'N(H)' ?};
ZDP_NAG.actions('WER',_act,'Y:D',1);
{? ZDP_NAG.size()>0 || POMOC.KH:=ZDP_NAG.KH ?};
''


\zdp_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: potwierdzenia zamowien dostaw - menu glowne
::  OLD: \zdp_nag/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_menupth:=BEER.MENU_PTH;
BEER.MENU_PTH:='ZO';
VAR_DEL.delete('__ptw_mark','__zdp_sum');
__ptw_mark:=tab_tmp(1,'ZD_P_REF','STRING[16]','ZD_P_REF');
POMOC.LOCK:='';
POMOC.KH:=null;
exec('zakr_ind','zamdst_ptw',0);
ZDP_NAG.win_sel('WER');
exec('zdptw_win_edit_set','zamdst_ptw');
exec('zdpn_rek','zamdst_ptw');
:: ZDP_NAG.select();
ZDP_NAG.actions('WER','');
BEER.MENU_PTH:=_menupth;
''


\zakr_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Ustawienie zakresu zamówień dostaw
::   WE: [_a] - 1-(domyślnie) zmiana wyłącznie prefiksu, 0- nie
::----------------------------------------------------------------------------------------------------------------------
_prf:={? var_pres('_a')=type_of(0) || _a || 1 ?};

exec('zakr_ind','zamdst_nag',_prf)


\zakr_ind
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: ustawia zakres na zamowieniach dostaw
::   WE: [_a] - 1-(domyślnie) zmiana wyłącznie prefiksu, 0- nie
::  OLD: \zakr_set/zd.fml
::  OLD: \zakr_ind/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_only:={? var_pres('_a')=type_of(0) || _a || 1 ?};
BEER.ZAKR:={? ZAKR.ARCH_ROK<>''
           || 'ARCHIWALNE Z '+ZAKR.ARCH_ROK+' ROKU '
           || 'POTWIERDZENIA  '
           ?};
_maska:={? ZAKR.ARCH_ROK='' || '__' || ZAKR.ARCH_ROK+2 ?};
_zm_maski:=(ZD_NAG.name+2)<>_maska;
{? _zm_maski || exec('openzd','open_tab',ST.ODDZ+_maska) ?};
POMOC.KH:=null();
POMOC.LOCK:='';

ZDP_NAG.index('SYM');
''


\zdp_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: pozycje potwierdzen
::----------------------------------------------------------------------------------------------------------------------
POMOC.KH:=ZDP_NAG.KH;
POMOC.MG:=null;
POMOC.M:=null;
ZDP_NAG.cntx_psh();
{? ZDP_NAG.r_lock(1,1,1)
||
   ZDP_POZ.index('ZDP_NAG');
   ZDP_POZ.prefix(ZDP_NAG.ref());
   ZDP_POZ.win_sel('WER');
   _act:='';
   {? ZDP_NAG.name()+2<>'__'     || _act:='DUP:D'
   |? (';ZT'*ZDP_NAG.STAT_REJ)>1 || _act:='DU:D'
   ?};
   ZDP_POZ.actions_grayed('WER',{? _act<>'' || 'Z' || '' ?});
   ZDP_POZ.select(,,,_act)
||
   {? FUN.ask('Potwierdzenie zamówień dostaw %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@[ZDP_NAG.SYM])
   || ZDP_NAG.r_lock(1,,1)
   ?}
?};
ZDP_NAG.r_unlock();
ZDP_NAG.cntx_pop();
''


\zdpn_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: po rekord dla naglowka potwierdzenia
::   WY: akronim pola do uzupelnienia
::  OLD: \zdpn_chk/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_var_zdptwpop:=params_get().var_zdptwpop;
_po_first:=_var_zdptwpop.PO_FIRST;

{? _po_first=1
|| ''
?};

{? ZDP_NAG.KH=null
|| FUN.info('Należy podać dostawcę.'@);
   _wyn:='KH'
|? ZDP_NAG.D_WYS=date(0,0,0)
|| FUN.info('Należy podać potwierdzoną datę wysyłki.'@);
   _wyn:='D_WYS'
?};
{? _wyn='' & ZDP_NAG.NR=0 & ZDP_NAG.SYM=''
:: Wyznaczenie numeru jeśli nie określony w trakcie redakcji nagłówka
:: !!! Wyznaczenie numeru ma być na końcu tej funkcji !!!
|| {? exec('wol_nr','numery','ZDP_NAG',,1)
   || _wyn:='NR'
   ?}
?};
{? _wyn=''
|| ZDP_NAG.R:=ZDP_NAG.D_WYS~1;
   ZDP_NAG.M:=ZDP_NAG.D_WYS~2
?};
{? _wyn='' & _var_zdptwpop.D_WYS<>ZDP_NAG.D_WYS || ZDP_NAG.put(1) ?};
_wyn


\zdptw_pozycje_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Potwierdzenia zamówień dostaw - Pozycje - okno redagowania
::   WE: params_get()   - ustawiane w exec('zdptw_pop','zamdst_ptw')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_btnRuleResult:='';

_fld:=params_exec('zdptw_edit_finisher','zamdst_ptw',ZDP_NAG.ref());

{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| BPMN.END:=1;
   exec('zdp_poz','zamdst_ptw');
   {? BPMN.END=2 || _btnRuleResult:=params_exec('zdptw_zakoncz_red','zamdst_ptw') ?}
?};

_btnRuleResult


\zdptw_zakoncz_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Potwierdzenie zamówień dostaw - Zakończ - okno redagowania
::   WE: params_get()   - ustawiane w exec('zdptw_pop','zamdst_ptw')
::                      - ustawiane w exec('zddol','zamdst_nag')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().context.mp;

_btnRuleResult:='';

_fld:=params_exec('zdptw_edit_finisher','zamdst_ptw',ZDP_NAG.ref());
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| {? exec('zakoncz','zamdst_ptw')
   || _btnRuleResult:='key:F2';
      _mp.done()
   ?}
?};

_btnRuleResult


\zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Potwierdzenie zamówień dostaw - Zakończenie rejestracji
::   WE: params_get()   - ustawiane w main
::----------------------------------------------------------------------------------------------------------------------
_result:=0;

_no_pos:=exec('FindInSet','#table','ZDP_POZ','ZDP_NAG',ZDP_NAG.ref())=null();

ZDP_NAG.cntx_psh();
{? ZDP_NAG.STAT_REJ='T'
|| FUN.info('Potwierdzenie zamówień dostaw zostało już zaakceptowane.'@);
   _result:=1
|? ZDP_NAG.STAT_REJ='Z'
|| _txt:='Zakończono już rejestrację potwierdzenia zamówień dostaw.'@;
   FUN.info(_txt);
   _result:=1
|| _ok:=1;
   {? ZDP_NAG.KH=null()
   || FUN.info('Należy uzupełnić dostawcę w nagłówku potwierdzenia zamówień dostaw.'@);
      _ok:=0
   |? _no_pos
   || FUN.info('Brak pozycji na potwierdzeniu zamówień dostaw.\nOperacja niemożliwa.'@);
      _ok:=0
   ?};

   {? _ok & (BPMN.END=2 | FUN.ask('Zakończyć rejestrację potwierdzenia zamówień dostaw %1?'@[ZDP_NAG.SYM]))
   || ZDP_NAG.STAT_REJ:='Z';
      {? ZDP_NAG.put() || _result:=1 ?}
   ?}
?};
ZDP_NAG.cntx_pop();
{? ~_no_pos & _result || ZDP_NAG.get() ?};

_result


\var_zdptwpop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Zmienna - Poprawa nagłowka
::   WY: uchwyt do zmiennej
::----------------------------------------------------------------------------------------------------------------------
_wyn:=obj_new('PO_FIRST','SYM_DST','KH','TRANSP','LIST_PRZ','FAKTURA','D_WYS','D_REA');
_wyn


\zdptw_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Formuła określająca ikony
::----------------------------------------------------------------------------------------------------------------------
"
   {? ZDP_NAG.STAT_REJ='T' || exec('zaakceptowany','icon')
   |? ZDP_NAG.STAT_REJ='Z' || exec('zarejestrowany','icon')
   |? ZDP_NAG.STAT_REJ='N' || exec('pusta','#icon')
   |? ZDP_NAG.STAT_REJ='A' || exec('anulowany','icon')
   || exec('pusta','#icon')
   ?}
"


\roz_ptw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: oblicza ilosc potwierdzona dla pozycji zam. ZD_POZ
::   WE: _a - ZD_POZ.refsql()
::       _b - ref sql __rea_tab
::  OLD: \obl_ptw/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__zdp_roz')<100
||
   __zdp_roz:=tab_tmp(2
      ,'ZD_P_NAG','STRING[16]','Nagłówek potwierdzenia'
      ,'ZD_P_POZ','STRING[16]','Pozycja potwierdzenia'
      ,'OPIS','STRING[30]','Opis'
      ,'IL_PTW','REAL','Il. potwierdzona'
      ,'IL_REA','REAL','Il. zreal. dla potw.'
      ,'REA_TAB','STRING[16]','Ref SQL __rea_tab'
      ,'CENA','REAL','Cena'
      ,'CWAL','REAL','Cena w walucie'
      ,'KONTRAKT','STRING[20]','Kontrakt'
   )
?};
{? var_pres('__zdp_sum')<100
||
   __zdp_sum:=tab_tmp(1
      ,'IL_PTW','REAL','Il. potwierdzona'
      ,'IL_REA','REAL','Il. zreal. dla potw.'
   )
?};

__zdp_sum.IL_PTW:=__zdp_sum.IL_REA:=0;

_obl:="
   ZDP_POZ.index('ZD_POZ');
   ZDP_POZ.prefix(_a,_a);
   {? ZDP_POZ.first()
   || {!
      |? _il_rea:=0;
         _il_ptw:=ZDP_POZ.IL;
         _il_rea:=exec('obl_rea','zamdst_rea',$ZDP_POZ.ref());

         __zdp_sum.IL_PTW+=_il_ptw;
         __zdp_sum.IL_REA+=_il_rea;
         {? _b & ZDP_POZ.ZDP_NAG().STAT_REJ='T' & _il_ptw>_il_rea
         || __zdp_roz.prefix();
            __zdp_roz.blank();
            __zdp_roz.ZD_P_NAG:=$ZDP_POZ.ZDP_NAG;
            __zdp_roz.ZD_P_POZ:=$ZDP_POZ.ref();
            __zdp_roz.OPIS:='%1 z dnia %2'@[ZDP_POZ.ZDP_NAG().SYM,$ZDP_POZ.ZDP_NAG().D_WYS];
            __zdp_roz.IL_PTW:=_il_ptw;
            __zdp_roz.IL_REA:=_il_rea;
            __zdp_roz.REA_TAB:=_c;
            __zdp_roz.CENA:=ZDP_POZ.CENA;
            __zdp_roz.CWAL:=ZDP_POZ.CWAL;
            __zdp_roz.KONTRAKT:=ZDP_POZ.ZKON().SYM;
            __zdp_roz.add(1)
         ?};
         ZDP_POZ.next()
      !}
   ?}
";
ZDP_NAG.cntx_psh();
ZDP_POZ.cntx_psh();
:: w biezacej masce
ZDP_NAG.use('zdptn'+ST.ODDZ+'__');
ZDP_POZ.use('zdptp'+ST.ODDZ+'__');
_obl(_a,1,_b);
:: w archiwum
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first()
||
   {!
   |?
      ZDP_NAG.use('zdptn'+ST.ODDZ+($OKR.ROK+2));
      ZDP_POZ.use('zdptp'+ST.ODDZ+($OKR.ROK+2));
      _obl(_a,0,_b);
      OKR.next()
   !}
?};
OKR.cntx_pop();
ZDP_POZ.cntx_pop();
ZDP_NAG.cntx_pop();
''


\zdptw_rea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: realizacje wg danego potwierdzenia
::----------------------------------------------------------------------------------------------------------------------
exec('zdna_rea','zamdst_rea',$ZDP_NAG.ref());
~~


\ptw_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: lock naglowka potwierdzeń zamowień dostaw
::   WE: [_a] - czy pytac o wyswietlenie osoby blokujacej lub dodanie do komunikatu (0- tak, 1 -nie)
::   WY: _wyn - 0-zablokowany 1-bez blokady
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_wyn:=ZDP_NAG.r_lock(1,1,1);
{? _a=0 & _wyn=0
||
   _txt:='Potwierdzenie zamówień dostaw %1 obsługuje inny użytkownik.'@[ZDP_NAG.SYM];
   {?
      _wyn=0
         &
      {? var_pres('__kom')>100
      || exec('add_kom','#message',_txt,4);0
      || FUN.ask(_txt+'\n'+'Czy chcesz zobaczyć kto?'@)
      ?}
   ||
      ZDP_NAG.r_lock(1,,1)
   ?}
?};
ZDP_NAG.r_unlock();
_wyn


\zdptw_edit_finisher
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Kod wykańczający po ZD_NAG.edit() w różnych kontekstach
::   WE: _a - ZDP_NAG.ref()
::   WE: params_get()
::----------------------------------------------------------------------------------------------------------------------
:: Sprawdzenie poprawności wypełnienia pól nagłówka dokumentu sprzedaży
_fld:=params_exec('zdpn_chk','zamdst_ptw');
{? _fld<>''
|| _fld
|| _out:=params_get().context.out;
   _mp:=params_get().context.mp;
   _akcja:=params_get().context.akcja;
   _var_zdptwpop:=params_get().var_zdptwpop;

   {? _akcja='Dołącz' | _akcja='START_TODO' | _mp.pathProc()
   || params_set('var_zdptwpop',_var_zdptwpop);
      exec('zdptw_pop_po','zamdst_ptw');
      _var_zdptwpop.PO_FIRST:=2
   |? _akcja='Popraw' | _mp.pathTodo()
   || params_set('var_zdptwpop',_var_zdptwpop);
      exec('zdptw_pop_po','zamdst_ptw')
   ?};
   ''
?}


\zdptw_pop_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Obsługa popraw po zakończeniu edycji (ZDP_NAG.edit)
::----------------------------------------------------------------------------------------------------------------------
_var_zdptwpop:=params_get().var_zdptwpop;

_sym_dst:=_var_zdptwpop.SYM_DST;
_kh:=_var_zdptwpop.KH;
_transp:=_var_zdptwpop.TRANSP;
_list_prz:=_var_zdptwpop.LIST_PRZ;
_faktura:=_var_zdptwpop.FAKTURA;
_d_wys:=_var_zdptwpop.D_WYS;
_d_rea:=_var_zdptwpop.D_REA;
_po_first:=_var_zdptwpop.PO_FIRST;

{? _po_first=1
:: Dotyczy wywołania dla Dołącz - wtedy jako wartości przd ustawia zmienne z nagłówka
|| _sym_dst:=ZDP_NAG.SYM_DST;
   _kh:=ZDP_NAG.KH;
   _transp:=ZDP_NAG.TRANSP;
   _list_prz:=ZDP_NAG.LIST_PRZ;
   _faktura:=ZDP_NAG.FAKTURA
?};
ZDP_NAG.put();
''


\ctrlREA
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Sprawdza czy dane potwierdzenie podlega realizacji
::   WE: [_a] - 1-sprawdzenie wszystkich pozycji 0(domyślnie)-nie
::   WY: 1-tak 0-nie 2-częściowo zrealizowane
::----------------------------------------------------------------------------------------------------------------------
_ctrl:={? var_pres('_a')<>type_of(0) || 0 || _a ?};
_res:=0;
_part:=0;
_ilptw:=0;
ZDP_NAG.cntx_psh();
ZDP_POZ.cntx_psh();
{? ZDP_NAG.STAT_REJ<>'T'
|| _res:=0
|| ZDP_POZ.index('ZDP_NAG');
   ZDP_POZ.prefix(ZDP_NAG.ref());
   {? ZDP_POZ.first()
   || {!
      |? {? ~ZDP_POZ.END & ZDP_POZ.ZD_POZ<>'' & ~exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"END",0)
         || _rea:=exec('obl_rea','zamdst_rea',$ZDP_POZ.ref());
            _jmz:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,
                   "exec('FindAndGet','#table','ZD_NAG',$ZD_NAG,,\"JMZ\",0) & WS2<>1",0);
            {? _jmz
            || _ws2:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"WS2",1);
               _rea:=(_rea*_ws2 $ ZDP_POZ.M().DOKL)
            ?};
            _buf:=(ZDP_POZ.IL-_rea)>0;
            _ilptw+=ZDP_POZ.IL;
            {? ~_res || _res:=_buf ?};
            {? _ctrl || _part+={? _rea>ZDP_POZ.IL || ZDP_POZ.IL || _rea ?} ?}
         ?};
         (_ctrl | ~_res) & ZDP_POZ.next()
      !}
   ?}
?};
ZDP_NAG.cntx_pop();
ZDP_POZ.cntx_pop();
{? _part>0 & _part<>_ilptw & _res || _res:=2 ?};
_res


\zdptw_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: rekord przed dla naglowka potwierdzenia zamowień
::----------------------------------------------------------------------------------------------------------------------
:: wstawia opisowy status
_stan:='';
_lock:=0;
POM.STANP:={? ZDP_NAG.STAT_REJ='N' || _stan:='N'; 'Nowe w edycji'
           |? ZDP_NAG.STAT_REJ='Z' || _stan:='A'; 'Oczekuje na akceptację'
           || _ctrl:=exec('ctrlREA','zamdst_ptw',1);
              {? _ctrl=0           || _stan:='Z'; 'Zrealizowane'
              |? _ctrl=1           || _stan:='R'; 'Do realizacji'
              |? _ctrl=2           || _stan:='C'; 'Częściowo zrealizowane'
              || _stan:='T'; 'Zaakceptowane'
              ?}
           ?};
{? _stan<>'' & (_lock:=ZDP_NAG.r_lock(1,1,1);_lock) & (ZDP_NAG.STAN<>_stan | ZDP_NAG.STATUS<>POM.STANP)
|| ZDP_NAG.STAN:=_stan;
   ZDP_NAG.STATUS:=POM.STANP;
   ZDP_NAG.put(1)
?};
{? _lock || ZDP_NAG.r_unlock() ?};
exec('rekprzed','color','PTW#01')


\ptw_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: rekord przed dla naglowka potwierdzenia zamowień
::   WY: ''
::----------------------------------------------------------------------------------------------------------------------
{? (2+POM.STANP)='Cz'         || 'PTW#01#03'
|? (2+POM.STANP)='Zr'         || 'PTW#01#04'
|? (';Do;Za'*(2+POM.STANP))>1 || 'PTW#01#02'
|? (';No;Oc'*(2+POM.STANP))>1 || 'PTW#01#01'
|| ''
?}


\zdptw_win_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Zwraca okno szczegółów tabeli ZDP_NAG
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
'INFO'


\zakr_ptw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Edycja i ustawienie zakresu zamówień dostaw/potwierdzeń zamówień dostaw
::       formula przed akcji Zakres okna ZDP_NAG.WER
::  OLD: \zakr_zd/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().lzkzds_env;
_win_red:=exec('zptw_win_zamd','zamdst_nag');
exec('ok_esc','#window',ZAKR,_win_red);
ZAKR.win_edit(_win_red);
MG.f_clear();
{? ZAKR.edit()
|| exec('zakr_set','zamdst_nag',0);
   exec('zdpn_rek','zamdst_ptw')
?};
''


\zdptw_tra_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Formuła określiająca ikony
::----------------------------------------------------------------------------------------------------------------------
"  _tra:=exec('czyTRANSPORT','transport_wspolne',ZDP_NAG.uidref());
   {? _tra || exec('transpZ','icon')
   || exec('pusta','#icon')
   ?}
"


\zdpp_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: przed rekord dla pozycji potwierdzenia - szuka w ZD_POZ
::  OLD: \zdpp_rek/zd.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.MG:=null;
POMOC.M:=null;
POMOC.IL_ZAM:=0;
{? ZDP_POZ.ZD_POZ<>''
||
   ZD_POZ.cntx_psh();
   ZD_POZ.use(8+ZDP_POZ.ZD_POZ);
   ZD_POZ.clear();
   {? ZD_POZ.seek(ZDP_POZ.ZD_POZ,8+ZDP_POZ.ZD_POZ)
   ||
      POMOC.MG:=ZD_POZ.MG;
      POMOC.M:=ZD_POZ.M;
      POMOC.IL_ZAM:=ZD_POZ.IL;
      POMOC.IL_ZRE:=ZD_POZ.IL_ZRE;
      {? ZD_POZ.POZ<>ZDP_POZ.ZD_P_POZ
      || ZDP_POZ.ZD_P_POZ:=ZD_POZ.POZ;
         ZDP_POZ.put()
      ?}
   ?};
   ZD_POZ.cntx_pop()
?};
exec('obl_ptw','zamdst_ptw',ZDP_POZ.ZD_POZ,1);
POMOC.IL_PTW:=__zdp_sum.IL_PTW;
POMOC.IL_REA:=__zdp_sum.IL_REA;

POMOC.IL:=ZDP_POZ.IL;
_ilrea:=exec('obl_rea','zamdst_rea',$ZDP_POZ.ref());
_jmz:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,
       "exec('FindAndGet','#table','ZD_NAG',$ZD_NAG,,\"JMZ\",0) & WS2<>1",0);
{? _jmz
|| _ws2:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"WS2",1);
   _ilrea:=(_ilrea*_ws2 $ ZDP_POZ.M().DOKL)
?};
POMOC.REA:=_ilrea;
_end:={? ZDP_POZ.END || 1
      |? ZDP_POZ.ZD_POZ<>'' & exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"END",0) || 2
      || 0
      ?};
_grp:=ZDP_POZ.sel_size();
ZDP_POZ.actions_grayed('WER',{? _grp || '' |? ~_end || 'Ź' |? _end=1 || 'PUŻ' |? _end=2 || 'PUŻŹ' ?});
exec('rekprzed','color','PTP#01')


\pr_cena_zdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: przed redakcją pól CWAL, CENA, KRS
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_res:=ZD_Z.RCEN & {? ZDP_POZ.WAL<>INFO.NAROD || (';CWAL;KRS;'*_afld)>1 || _afld='CENA' ?};
_res


\po_cena_zdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: po redakcji pól CWAL, CENA, KRS
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
{? ZDP_POZ.WAL<>INFO.NAROD
|| ZDP_POZ.CENA:=ZDP_POZ.CWAL*ZDP_POZ.KRS $ZDP_POZ.M().DOKL_Z
|| ZDP_POZ.CWAL:=ZDP_POZ.CENA;
   ZDP_POZ.KRS:=1
?};
1


\ptp_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: rekord przed dla pozycji potwierdzenia zamowień dostaw
::   WY: ''
::----------------------------------------------------------------------------------------------------------------------
{? ZDP_POZ.END
|| 'PTP#01#02'
|? ZDP_POZ.ZD_POZ<>'' & exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"END",0)
|| 'PTP#01#01'
|| ''
?}


\ptp_kol_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: rekord przed dla pozycji potwierdzenia zamowień dostaw
::   WY: ''
::----------------------------------------------------------------------------------------------------------------------
__rea_tab.cntx_psh();
__rea_tab.prefix();
_is:=__rea_tab.first() & __rea_tab.find_tab('first','ZDPP_REF',,'=',$ZDP_POZ.ref());
__rea_tab.cntx_pop();

{? _is || 'PTP#02#01' || '' ?}


\zdpp_rek_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: przed rekord dla pozycji potwierdzenia - szuka w ZDP_POZ
::----------------------------------------------------------------------------------------------------------------------
exec('zdpp_rek','zamdst_ptw');
exec('rekprzed','color','PTP#02')


\ae_zdpkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: po redakcjii dostawcy - ZDP_NAG.KH
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
:: NIP
{? ZDP_NAG.KH
|| {? ZDP_NAG.KH().SNIP=ZDP_NAG.KH().PESEL
   || INTRAST.F_NIP:=''
   || INTRAST.F_NIP:=ZDP_NAG.KH().SNIP
   ?}
|| INTRAST.F_NIP:=''
?};
1


\bl_d_wys_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: wartość domyślna dla pola D_WYS
::----------------------------------------------------------------------------------------------------------------------
_data:=ZDP_POZ.ZDP_NAG().D_WYS;
ZDP_POZ.RR:=_data~1;
ZDP_POZ.MM:=_data~2;
_data


\pr_d_wys_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: przed redakcją pola D_WYS
::----------------------------------------------------------------------------------------------------------------------
1


\po_d_wys_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: po redakcji pola D_WYS
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? ZDP_POZ.D_WYS=date(0,0,0) || FUN.info('Należy podać datę wysyłki.'@); _res:=0 ?};
{? _res
|| ZDP_POZ.RR:=ZDP_POZ.D_WYS~1;
   ZDP_POZ.MM:=ZDP_POZ.D_WYS~2
?};
_res

:Sign Version 2.0 jowisz:1045 2023/10/18 13:16:54 dd674efdbe24436430e93af427efd23e941dbbc6fd166a39450f244c7ae3ada01c9a3777f51b0569a22b9e091a2911c9db8a7037bcd04d38845ce874700a82da344a0f2784807075d40c737d4c4a9e6de045664362b635498de229e008f31470c6c2c35ba411471aaecfc67ff6e81ef32c8333dd17c2aad9756874f2c27fbc0a
