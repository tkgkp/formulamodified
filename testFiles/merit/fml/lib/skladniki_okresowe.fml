:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: skladniki_okresowe.fml
:: Utworzony: 18.01.2016
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Plik zawiera formuły wspólne do obsługi składników okresowych.
::======================================================================================================================


\koniec_okresu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.10]
:: OPIS: Formuła ustala datę końca okresu, na podstawie daty początku i typu okresu.
::   WE: _a [DATE]   - Data początku okresu.
::       _b [STRING] - Typ okresu:
::          M - miesiąc;
::          K - kwartał;
::          P - półrocze;
::          R - rok.
::   WY: Data końca okresu lub 0/0/0 w przypadku błędów parametrów wejściowych
::  OLD: \o_do/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_d0:=date(0,0,0);
{? var_pres('_a')=type_of(_d0) & _a<>_d0 || _od:=_a || return(_d0) ?};
{? var_pres('_b')=type_of('') & +_b=1 & 'MKPR'*_b || _typ:=_b || return(_d0) ?};

_rok:=_od~1;
_mc:=_od~2+
   {? _typ='M' || 0
   |? _typ='K' || 2
   |? _typ='P' || 5
   |? _typ='R' || 11
   ?};
{? _mc>12 || _mc-=12; _rok+=1 ?};
date(_rok,_mc,0)


\prem_okr_o_od_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
:: OPIS: Po redagowaniu pola PREM_OKR.O_OD - początek okresu.
::       Formuła wykonywana również podczas grupowego wprowadzania składników.
::   WE: [_a] [TABLE]   - Tabela, której dotyczy sprawdzenie [domyślnie: PREM_OKR].
::   WY: 1
::  OLD: \po_r_ood/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_TAB:={? var_pres('_a')=type_of(PREM_OKR) || _a || PREM_OKR ?};
_d0:=date(0,0,0);
{? _TAB.O_OD<>_d0 & _TAB.O_DO=_d0 & _TAB.RP<>''
|| _TAB.O_DO:=exec('koniec_okresu','skladniki_okresowe',_TAB.O_OD,_TAB.RP)
?};
1


\prem_okr_kw_i_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
:: OPIS: Po redagowaniu pola PREM_OKR.KW_I - kwota wejściowa.
::       Formuła wykonywana również podczas grupowego wprowadzania składników.
::   WE: [_a] [TABLE]   - Tabela, której dotyczy sprawdzenie [domyślnie: PREM_OKR].
::   WY:
::  OLD: \to_kw_nom/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_TAB:={? var_pres('_a')=type_of(PREM_OKR) || _a || PREM_OKR ?};
{? fld() & _TAB.KW_N=0
|| _TAB.KW_N:=fld()
|| 1
?}


\prem_okr_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
:: OPIS: Obsługa akcji "Rekord - po" w oknach wertowania tabeli PREM_OKR. Formuła wykorzystywana również do sprawdzenia
::       poprawności pól (rekordu) podczas importu składników i ich grupowego wprowadzania.
::
::       Uwaga. Zmiany w bieżącej formule powinny być również uwzględnione w formułach obsługujących czynność grupowego
::              wprowadzania okresu obowiązywania składnika okresowego.
::
::   WE: [_a] [INTEGER] - Tryb wsadowy (bez komunikatów):
::                        0 - Nie [domyślnie]
::                        1 - Tak.
::   WY: '' lub akronim pola wymagającego uzupełnienia lub komunikat o błędzie.
::  OLD: \chk_prk/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;

{? _batch
|| _silent:=1;
   _fret1:="__CHK.empty_msg(MS.name(PREM_OKR,_a))";
   _fret2:="_b";
   _fret3:="MS.name(PREM_OKR,_a)+' - '+_b";
   ~~
|| _silent:=~~;
   _fret1:="_a";
   _fret2:="FUN.emsg(_b); _a";
   _fret3:="__CHK.err_fld(PREM_OKR,_a,1,_b)";
   ~~
?};

_popraw:=-menu_txt()='popraw';

_chk:=__CHK.table(PREM_OKR,_popraw,_silent,'SKP','RP','O_OD','O_DO');
{? type_of(_chk)=type_of('') & _chk<>''
|| return(_fret1(_chk))
|? type_of(_chk)=type_of(0) & ~_chk
|| {? _batch
   || return('Konflikt okresów.'@)
   || return('O_OD')
   ?}
?};

{? PREM_OKR.RP<>'I' & PREM_OKR.O_OD~3<>1
|| return(_fret3('O_OD','Wymagany pierwszy dzień miesiąca.'@))
|? PREM_OKR.RP<>'I' & (PREM_OKR.O_DO+1)~3<>1
|| return(_fret3('O_DO','Wymagany ostatni dzień miesiąca.'@))
|? PREM_OKR.O_DO<PREM_OKR.O_OD
|| return(
      _fret2('O_DO','"%1" nie może być wcześniejsza niż "%2".'@ [MS.name(PREM_OKR,'O_DO'),MS.name(PREM_OKR,'O_OD')])
   )
|? PREM_OKR.RP<>'I' & PREM_OKR.O_DO<>exec('koniec_okresu','skladniki_okresowe',PREM_OKR.O_OD,PREM_OKR.RP)
|| return(_fret2('O_DO','Podany okres jest różny od zadeklarowanego.'@))
?};
_txt:=exec('check','overlap',
   {? _popraw || PREM_OKR.ref() || null() ?},PREM_OKR,'O_OD','O_DO',2,,,'PSODDO',PREM_OKR.P,PREM_OKR.SKP
);
{? _txt<>''
|| return(_fret2('O_OD',_txt))
?};

{? PREM_OKR.KW_I<0
|| return(_fret3('KW_I','Wartość nie może być ujemna.'@))
|? PREM_OKR.KW_N<0
|| return(_fret3('KW_N','Wartość nie może być ujemna.'@))
|? PREM_OKR.KW_W<0
|| return(_fret3('KW_W','Wartość nie może być ujemna.'@))
?};

{? (PREM_OKR.B_WYP='N' & ((PREM_OKR.SKP().RZ='T' & PREM_OKR.SKP().KZ='N') | PREM_OKR.SKP().R_N<>null())) &
:: Jeżeli (jest "rozliczaj w zasiłkach" + "kwotę nominalną") lub "wykazuj kwotę nominalną"
:: to sprawdźmy, czy jest "kwota nominalna".
   (_chk:=__CHK.record(PREM_OKR,_silent,'KW_N'))<>''
|| return(_fret1(_chk))
?};

{? (PREM_OKR.B_WYP='N' & (PREM_OKR.SKP().RZ='N' | PREM_OKR.SKP().KZ='W') & PREM_OKR.SKP().CZY_FM='N') &
::    Jeżeli ("Nie rozliczaj w zasiłkach" lub "Rozliczaj kwotę wypłaconą") & kwota nie jest na podstawie "formuły"
::    to sprawdźmy, czy jest "kwota wypłacana".
   (_chk:=__CHK.record(PREM_OKR,_silent,'KW_W'))<>''
|| return(_fret1(_chk))
?};

''


\prem_exc_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [12.41]
:: OPIS: Obsługa akcji "Rekord - po" tabeli PREM_EXC (okresów obowiązywania składników okresowych). Formuła
::       wykorzystywana również do sprawdzenia poprawności pól (rekordu) podczas grupowego wprowadzania.
::
::       Uwaga. Zmiany w bieżącej formule powinny być również uwzględnione w formułach obsługujących czynność grupowego
::              wprowadzania okresu obowiązywania składnika okresowego.
::
::   WE: [_a] [INTEGER] - Tryb wsadowy (bez komunikatów):
::                        0 - Nie [domyślnie]
::                        1 - Tak.
::   WY: '' lub akronim pola wymagającego uzupełnienia lub komunikat o błędzie.
::  OLD: \p_exc_od/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;

{? _batch
|| _silent:=1;
   _fret1:="__CHK.empty_msg(MS.name(PREM_EXC,_a))";
   _fret2:="_b";
::   _fret3:="MS.name(PREM_EXC,_a)+' - '+_b";
   ~~
|| _silent:=~~;
   _fret1:="_a";
   _fret2:="FUN.emsg(_b); _a";
::   _fret3:="__CHK.err_fld(PREM_EXC,_a,1,_b)";
   ~~
?};

{? (_chk:=__CHK.record(PREM_EXC,_silent,'SKP','OD'))<>''
|| return(_fret1(_chk))
?};

_d0:=date(0,0,0);

_eod:=MS.name(PREM_EXC,'OD');
_edo:=MS.name(PREM_EXC,'DO');

{? PREM_EXC.DO<>_d0 & PREM_EXC.DO<PREM_EXC.OD
|| return(_fret2('DO','"%1" nie może być wcześniejsza niż "%2".'@ [_edo,_eod]))
?};

_pod:=MS.name(PAR_POKR,'WZ_OD');
_pdo:=MS.name(PAR_POKR,'WZ_DO');

_ok:=1;
_od:=PREM_EXC.OD;
_do:=PREM_EXC.DO;

{? PAR_POKR.WZ_OD<>_d0
|| {? _od<PAR_POKR.WZ_OD
   || return(
         _fret2('OD','"%1" nie może być wcześniejsza niż "%2" (%3) wliczania do zasiłków w parametrach globalnych.'@
            [_eod,_pod,$PAR_POKR.WZ_OD]
         )
      )
   |? _do<>_d0 & _do<PAR_POKR.WZ_OD
   || return(
         _fret2('DO','"%1" nie może być wcześniejsza niż "%2" (%3) wliczania do zasiłków w parametrach globalnych.'@
            [_edo,_pod,$PAR_POKR.WZ_OD]
          )
       )
   ?}
?};

{? PAR_POKR.WZ_DO<>_d0
|| {? PAR_POKR.WZ_DO<_od
   || return(
         _fret2('OD','"%1" nie może być późniejsza niż "%2" (%3) wliczania do zasiłków w parametrach globalnych.'@
            [_eod,_pdo,$PAR_POKR.WZ_DO]
         )
      )
   |? _do<>_d0 & PAR_POKR.WZ_DO<_do
   || return(
         _fret2('DO','"%1" nie może być późniejsza niż "%2" (%3) wliczania do zasiłków w parametrach globalnych.'@
            [_edo,_pod,$PAR_POKR.WZ_DO]
         )
      )
   ?}
?};

{? _od<P.DZA
|| PREM_EXC.OD:=P.DZA;
   return(_fret2('OD','"%1" nie może wcześniejsza niż "%2" (%3).'@ [_eod,MS.name(P,'DZA'),$P.DZA]))
?};

_ret:=exec('check','overlap',
   {? -menu_txt()='popraw' || PREM_EXC.ref() || null() ?},PREM_EXC,,,_batch,,,'PREM_EXC',PREM_EXC.P,PREM_EXC.SKP);
{? _batch & _ret<>''
|| 'Konflikt okresów'@
|| _ret
?}


\sk_cho_zapisz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
::       RWR [12.30]
:: OPIS: Zapisanie składników płacowych do tabeli rozliczenia podstaw zasiłków.
::   WE: [_a] [REFERENCE] - Nieobecność, z której zapisujemy podstawę.
::       [_b] [INTEGER]   - Czy kopiować rekordy SK_CHO.O='Z' (parametr ma znaczenie tylko dla wywołania
::             z parametrem _a). Przepisywanie zapisów pochodzących z umów-zleceń nie powinno mieć miejsca - "nowa"
::             nieobecność może wykraczać poza daty umów-zleceń wziętych do nieobecności źródłowej. Jednak przy akcji
::             grupowej kopiowania rekordów tabeli TZ - kopiowane powinny być wszystkie składniki.
::          0 - nie [domyślnie]
::          1 - tak
::  OLD: \zap_skch/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null)
|| _czyZ:={? var_pres('_b')=type_of(0) || _b ?};
   _ref:=N.ref();
   _mask1:='s_ch'+$(N.OD~1);
   N.cntx_psh();
   N.prefix('N',P.ref());
   {? N.seek(_a) & (_mask2:='s_ch'+$(N.OD~1); SK_CHO.use(_mask2))
   || SK_CHO.prefix(N.ref());
      {? SK_CHO.first()
      || {!
         |? {? SK_CHO.O<>'Z' | _czyZ
            || SK_CHO.NB:=_ref;
               {? _mask1<>_mask2
               || SK_CHO.use(_mask1);
                  SK_CHO.prefix(_ref);
                  SK_CHO.add(1);
                  SK_CHO.use(_mask2)
               || SK_CHO.cntx_psh();
                  SK_CHO.prefix(_ref);
                  SK_CHO.add(1);
                  SK_CHO.cntx_pop()
               ?}
            ?};
            SK_CHO.next()
         !}
      ?}
   ?};
   N.cntx_pop()
|| __SK_CHO.prefix();
   {? var_pres('__KORZ')>0 & __KORZ || return(1) ?};
   {? __SK_CHO.first & SK_CHO.use('s_ch'+$(N.OD~1))
   || SK_CHO.prefix();
      {!
      |? SK_CHO.blank();
         SK_CHO.NB:=N.ref();
         SK_CHO.R:=__SK_CHO.R;
         SK_CHO.O:=__SK_CHO.O;
         SK_CHO.SKLADNIK:=__SK_CHO.SKL;
         SK_CHO.SK_NR:=__SK_CHO.SKL_NR;
         SK_CHO.MC:=__SK_CHO.MC;
         SK_CHO.LT:=__SK_CHO.LT;
         SK_CHO.OPIS:=__SK_CHO.OPIS;
         _add:=1;
         SK_CHO.cntx_psh();
         {? SK_CHO.find_rec()
         || SK_CHO.KW+=__SK_CHO.K_B;
            SK_CHO.KW_N+=__SK_CHO.K_N;
            _add-=(SK_CHO.put())
         ?};
         SK_CHO.cntx_pop();
         SK_CHO.KW:=__SK_CHO.K_B;
         SK_CHO.KW_N:=__SK_CHO.K_N;
         SK_CHO.OD:=__SK_CHO.OD;
         SK_CHO.DO:=__SK_CHO.DO;
         SK_CHO.PRC:=__SK_CHO.PRC;
         {? _add
         || SK_CHO.add(1)
         ?};
         __SK_CHO.next()
      !}
   ?}
?}


\sk_cho_aktualizuj_po_korekcie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Procedura odpowiedzialna za aktualizację rekordów tabeli SK_CHO związanych z korektą operatora.
::       Zakłada się, że odpowiednia maska tabeli SK_CHO jest już otwarta.
::   WE: _a [REFERENCE] - Wskazanie na nieobecność.
::       _b [DATE]      - Miesiąc (w postaci daty), którego dotyczy korekta.
::       _c [INTEGER]   - Numer składnika typu korekta.
::       _d [STRING]    - "Okres" (E-etat,Z-zlecenie).
::       _e [INTEGER]   - Kwota korekty.
::       _f [STRING]    - Opis.
::   WY:
::  OLD: \kor_update/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) || _nref:=_a || return(0) ?};
{? var_pres('_b')=type_of(date()) || _mc:=_b || return(0) ?};
{? var_pres('_c')=type_of(0) || _kor:=_c || return(0) ?};
{? var_pres('_d')=type_of('') & (_d='E' | _d='Z') || _okres:=_d || return(0) ?};
{? var_pres('_e')=type_of(0) || _kw:=_e || return(0) ?};
{? var_pres('_f')=type_of('') || _opis:=_f || return(0) ?};
_typ:=exec('n_rozliczalna','nieobecnosc',2);
_odp:=0;
SK_CHO.cntx_psh();
SK_CHO.index('SK_CHP');
SK_CHO.prefix(_nref,'M',_mc,_kor);
{? SK_CHO.find_key(_okres)
|| _odp:=
      {? _kw<>0
      || SK_CHO.KW_N:=_kw;
         {? _typ='U' || SK_CHO.KW:=_kw ?};
         SK_CHO.OPIS:=_opis;
         SK_CHO.put()
      || SK_CHO.del(,1)
      ?}

|? _kw<>0
|| SK_CHO.blank();
   SK_CHO.NB:=_nref;
   SK_CHO.R:='M';
   SK_CHO.O:=_okres;
   SK_CHO.SK_NR:=_kor;
   SK_CHO.SKLADNIK:='Korekta operatora';
   SK_CHO.MC:=_mc;
   SK_CHO.OD:=date(SK_CHO.MC~1,SK_CHO.MC~2,1);
   SK_CHO.DO:=date(SK_CHO.MC~1,SK_CHO.MC~2,0);
   SK_CHO.LT:={? SK_CHO.O = 'E' || 'ETAT' |? SK_CHO.O='Z' || 'ZLECENIA' || '' ?};
   SK_CHO.KW_N:=_kw;
   {? _typ='U'
   || SK_CHO.KW:=_kw
   ?};
   SK_CHO.OPIS:=_opis;
   _odp:=SK_CHO.add()

|| _odp:=1
?};
SK_CHO.cntx_pop();
_odp


\sk_m_wypelnij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Formuła wypełnia tymczasową tabelę __sk_m.TAB danymi o rozliczeniu podstawy bieżącej nieobecności. Zakłada się
::       wcześniejsze otwarcie odpowiednich masek tabeli SK_CHO oraz TZ. Dane prezentowane są w podziale na sekcje:
::          S10 - Ogólne dane informacyjne
::             S12 - Norma/Praca
::          S20 - Składniki z bieżącej listy (dla chorób - do odbruttowienia)
::             S22 - Dane informacyjne (wsp. odbruttowienia)
::             S24 - Składniki
::             S28 - Suma
::          S30 - Składniki okresowe (odbruttowione)
::             S34 - Składniki
::             S38 - Suma
::          S40 - Podsumowanie składników z umów o pracę
::          S50 - Korekta operatora składników z umów o pracę
::             S54 - Korekta
::             S58 - Po korekcie
::          S60 - Umowy-zlecenia
::             S64 - Składniki
::             S68 - Suma
::          S70 - Korekta operatora umów-zleceń
::             S74 - Korekta
::             S78 - Po korekcie
::          S80 - Ogółem (do podstawy)
::       Uwaga: Procedura wykorzystywana również w wydruku "rozliczenie nieobecności".
::   WE:  _a  [DATE]    - Data wskazując rok i miesiąc.
::       [_b] [INTEGER] - Czy usuwać poprzednią zawartość tabeli __sk_m.TAB?
::                0 - Nie.
::                1 - Tak [domyślnie].
::   WY:
::  OLD: \uzup_sk_m/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(date())
|| _mc:=_a
|| return(0)
?};
_del:={? var_pres('_b')=type_of(0) || _b || 1 ?};

{? _del
|| {? do_state()>0
   || {? __sk_m.TAB.first()
      || {! |? __sk_m.TAB.del() !}
      ?}
   || __sk_m.TAB.erase()
   ?}
?};

__sk_m.MC:=_mc;

{? var_pres('SUMY',__sk_m)>100
|| obj_del(__sk_m.SUMY)
?};
__sk_m.SUMY:=obj_new('S2','S3','S4','S54','S58','S6','S74','S78','S8');
{! _i:=1 .. obj_len(__sk_m.SUMY)
|! __sk_m.SUMY[_i]:=obj_new('KW','KW_N','IR');
   {! _j:=1 .. obj_len(__sk_m.SUMY[_i])
   |! __sk_m.SUMY[_i][_j]:=0
   !}
!};

_add:="
   __sk_m.TAB.blank();
   __sk_m.TAB.S:={? var_pres('_a')=type_of('') || _a || '' ?};
   __sk_m.TAB.TR:={? var_pres('_b')=type_of('') || {? _b<>'' & _b<>'K' || SK_CHO.blank() ?}; _b || '' ?};
   __sk_m.TAB.R:={? var_pres('_c')=type_of('') || _c || SK_CHO.R ?};
   __sk_m.TAB.O:={? var_pres('_d')=type_of('') || _d || SK_CHO.O ?};
   __sk_m.TAB.SK_NR:={? var_pres('_e')=type_of(0) || _e || SK_CHO.SK_NR ?};
   __sk_m.TAB.SKLADNIK:={? var_pres('_f')=type_of('') || _f || SK_CHO.SKLADNIK ?};
   __sk_m.TAB.MC:={? var_pres('_g')=type_of(date()) || _g || SK_CHO.MC ?};
   __sk_m.TAB.LT:={? var_pres('_h')=type_of('') || _h || SK_CHO.LT ?};
   __sk_m.TAB.KW:={? var_pres('_i')=type_of(0) || _i || SK_CHO.KW ?};
   __sk_m.TAB.KW_N:={? var_pres('_j')=type_of(0) || _j || SK_CHO.KW_N ?};
   __sk_m.TAB.PRC:={? var_pres('_k')=type_of(0) || _k || SK_CHO.PRC ?};
   __sk_m.TAB.OPIS:={? var_pres('_l')=type_of('') || _l || SK_CHO.OPIS ?};
   __sk_m.TAB.add()
";

TZ.cntx_psh();
TZ.index('PNMR');
TZ.prefix(N.ref(),_mc);
{? TZ.first()
|| _add('S12','I','M','',0,'Norma',_mc,,TZ.NO);
   _add('S12','I','M','',0,'Praca',_mc,,TZ.PR)
?};
: Zapamiętajmy wartości crc rekordów źródłowych, przydadzą się przy akcji koRyguj, do rozpoznawania aktualności
: naszych danych.
__sk_m.CRCE:={? TZ.find_key('E') || TZ.crc() || ~~ ?};
__sk_m.CRCZ:={? TZ.find_key('Z') || TZ.crc() || ~~ ?};
TZ.cntx_pop();

SK_CHO.cntx_psh();
SK_CHO.index('SK_CHO');
SK_CHO.prefix(N.ref(),_mc,'M','W');
{? SK_CHO.first()
|| _add('S13')
?};
SK_CHO.prefix(N.ref(),_mc,'M','E');
_twsp:=tab_tmp(1,
   'WSP','REAL','Współczynnik',
   'KW','REAL','Kwota'
);
{? SK_CHO.first()
|| {!
   |? {? SK_CHO.SK_NR=__sk_m.KOR
      || _add('S54','K');
         __sk_m.SUMY.S54.KW_N+=SK_CHO.KW_N;
         __sk_m.SUMY.S54.IR+=1
      || _add('S24');
         __sk_m.SUMY.S2.KW+=SK_CHO.KW;
         __sk_m.SUMY.S2.IR+=1;
         {? SK_CHO.PRC>0
         || {? _twsp.find_key(SK_CHO.PRC)
            || _nowy:=0
            || _nowy:=1;
               _twsp.blank();
               _twsp.WSP:=SK_CHO.PRC
            ?};
            _twsp.KW+=SK_CHO.KW;
            {? _nowy
            || _twsp.add();
               _add('S22','I','M','E',0,'Wsp.odbrut.',_mc,,SK_CHO.PRC)
            || _twsp.put()
            ?}
         ?}
      ?};
      SK_CHO.next()
   !};

   {? __sk_m.TYPN='C'
   || __sk_m.SUMY.S2.KW_N:=0;
      _dn:=_twsp.first();
      {!
      |? _dn
      |! __sk_m.SUMY.S2.KW_N+=(_twsp.KW-_twsp.KW*_twsp.WSP/100)$2;
         _dn:=_twsp.next()
      !}
   ?};
   {? __sk_m.SUMY.S2.IR
   || {? __sk_m.TYPN='C'
      || _add('S28','S','M','E',,'Bieżące',_mc,,__sk_m.SUMY.S2.KW,__sk_m.SUMY.S2.KW_N)
      |? __sk_m.TYPN='U'
      || _add('S28','S','M','#',,'Suma składników',_mc,,__sk_m.SUMY.S2.KW)
      ?}
   ?}
?};
obj_del(_twsp); &_twsp;

{? __sk_m.TYPN='C'
|| SK_CHO.prefix(N.ref(),_mc,'M');
   _dn:=SK_CHO.first();
   {!
   |? _dn
   |! {? SK_CHO.O<>'E' & SK_CHO.O<>'Z'
      || _add('S34');
         __sk_m.SUMY.S3.KW+=SK_CHO.KW;
         __sk_m.SUMY.S3.KW_N+=SK_CHO.KW_N;
         __sk_m.SUMY.S3.IR+=1
      ?};
      _dn:=SK_CHO.next()
   !};
   {? __sk_m.SUMY.S3.IR
   || _add('S38','S','M','E',,'Pozostałe',_mc,,__sk_m.SUMY.S3.KW,__sk_m.SUMY.S3.KW_N)
   ?}
   &_dn;
   SK_CHO.clear()
?};

{? __sk_m.TYPN='C'
|| SK_CHO.prefix(N.ref(),_mc,'M','Z');
   {? SK_CHO.first()
   || {!
      |? {? SK_CHO.SK_NR=__sk_m.KOR
         || _add('S74','K');
            __sk_m.SUMY.S74.KW_N+=SK_CHO.KW_N;
            __sk_m.SUMY.S74.IR+=1
         || _add('S64');
            __sk_m.SUMY.S6.KW_N+=SK_CHO.KW;
            __sk_m.SUMY.S6.IR+=1
         ?};
         _dn:=SK_CHO.next()
      !};
      {? __sk_m.SUMY.S6.IR
      || _add('S68','S','M','Z',,'Umowy-zlecenia',_mc,,,__sk_m.SUMY.S6.KW_N)
      ?}
   ?};
   SK_CHO.clear()
?};

{? __sk_m.TYPN='C'
||
:  "Razem etat" pokazujemy jeżeli są obie sekcje z list płac i coś z umów zleceń.
   __sk_m.SUMY.S4.KW_N:=__sk_m.SUMY.S2.KW_N+__sk_m.SUMY.S3.KW_N;
   __sk_m.SUMY.S4.IR:=__sk_m.SUMY.S2.IR & __sk_m.SUMY.S3.IR & (__sk_m.SUMY.S6.IR | __sk_m.SUMY.S74.IR);
   {? __sk_m.SUMY.S4.IR
   || _add('S40','S','M','E',,'RAZEM',_mc,,,__sk_m.SUMY.S4.KW_N)
   ?};

:  "Po korekcie (etat)" - jeżeli jest korekta i coś przed nią.
   __sk_m.SUMY.S58.KW_N:=__sk_m.SUMY.S4.KW_N+__sk_m.SUMY.S54.KW_N;
   __sk_m.SUMY.S58.IR:=(__sk_m.SUMY.S2.IR | __sk_m.SUMY.S3.IR) & __sk_m.SUMY.S54.IR;
   {? __sk_m.SUMY.S58.IR
   || _add('S58','S','M','E',,'Razem po korekcie',_mc,'ETAT',,__sk_m.SUMY.S58.KW_N)
   ?};

:  "Po korekcie (zlecenia)" - jeżeli jest korekta i coś przed nią.
   __sk_m.SUMY.S78.KW_N:=__sk_m.SUMY.S6.KW_N+__sk_m.SUMY.S74.KW_N;
   __sk_m.SUMY.S78.IR:=__sk_m.SUMY.S6.IR & __sk_m.SUMY.S74.IR;
   {? __sk_m.SUMY.S78.IR
   || _add('S78','S','M','Z',,'Razem po korekcie',_mc,'ZLECENIA',,__sk_m.SUMY.S78.KW_N)
   ?};

   __sk_m.SUMY.S8.KW_N:=__sk_m.SUMY.S58.KW_N+__sk_m.SUMY.S78.KW_N;
   __sk_m.SUMY.S8.IR:=
      (__sk_m.SUMY.S2.IR & __sk_m.SUMY.S2.KW_N<>__sk_m.SUMY.S8.KW_N) |
      (__sk_m.SUMY.S3.IR & __sk_m.SUMY.S3.KW_N<>__sk_m.SUMY.S8.KW_N) |
      (__sk_m.SUMY.S4.IR & __sk_m.SUMY.S4.KW_N<>__sk_m.SUMY.S8.KW_N) |
      (__sk_m.SUMY.S54.IR & __sk_m.SUMY.S54.KW_N<>__sk_m.SUMY.S8.KW_N) |
      (__sk_m.SUMY.S58.IR & __sk_m.SUMY.S58.KW_N<>__sk_m.SUMY.S8.KW_N) |
      (__sk_m.SUMY.S6.IR & __sk_m.SUMY.S6.KW_N<>__sk_m.SUMY.S8.KW_N) |
      (__sk_m.SUMY.S74.IR & __sk_m.SUMY.S74.KW_N<>__sk_m.SUMY.S8.KW_N) |
      (__sk_m.SUMY.S78.IR & __sk_m.SUMY.S78.KW_N<>__sk_m.SUMY.S8.KW_N);
   {? __sk_m.SUMY.S8.IR
   || _add('S80','O','M','#',,'RAZEM',_mc,,,__sk_m.SUMY.S8.KW_N)
   ?}
|? __sk_m.TYPN='U'
|| __sk_m.SUMY.S58.KW_N:=__sk_m.SUMY.S2.KW+__sk_m.SUMY.S54.KW_N;
   __sk_m.SUMY.S58.IR:=__sk_m.SUMY.S2.IR & __sk_m.SUMY.S54.IR;
   {? __sk_m.SUMY.S58.IR || _add('S58','S','M','E',,'Razem po korekcie',_mc,'',__sk_m.SUMY.S58.KW_N) ?};
   __sk_m.SUMY.S8.KW_N:=__sk_m.SUMY.S58.KW_N;
   __sk_m.SUMY.S8.IR:=(__sk_m.SUMY.S2.IR & __sk_m.SUMY.S2.KW<>__sk_m.SUMY.S8.KW_N);
   {? __sk_m.SUMY.S8.IR || _add('S80','O','M','#',,'RAZEM',_mc,,__sk_m.SUMY.S8.KW_N) ?}
?};

SK_CHO.cntx_pop();

__sk_m.TAB.first();
~~


\sk_m_koryguj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Obsługa akcji "Koryguj" tabeli __sk_m.TAB.
::       Zakłada się, że odpowiednie maski tabel SK_CHO i TZ są już otwarte.
::   WE:
::   WY:
::  OLD: \kor_sk_m/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
__sk_m.TAB.cntx_psh();

_tab:=tab_tmp(1,
   'EK','REAL','Kwota'@,
   'EO','STRING[60]','Opis'@,
   'ZK','REAL','Kwota'@,
   'ZO','STRING[60]','Opis'@
);

_tab.fld_fml('EK','AFTER_EDIT',"_tab:=cur_tab(); {? _tab.EK=0 || _tab.EO:='' ?}; 1");
_tab.fld_fml('EO','BEFORE_EDIT',"cur_tab().EK<>0");
_tab.fld_fml('ZK','AFTER_EDIT',"_tab:=cur_tab(); {? _tab.ZK=0 || _tab.ZO:='' ?}; 1");
_tab.fld_fml('ZO','BEFORE_EDIT',"cur_tab().ZK<>0");

_we:=_tab.mk_edit('Korekta operatora'@,,'skmredkor');
_tab.win_esep(_we,'Umowy o pracę'@);
_tab.win_efld(_we,,'EK',,,10,2,,,,'Kwota korekty wynagrodzenia z tytułu umów o pracę'@);
_tab.win_efld(_we,,'EO',,,,,,,,'Dodatkowe informacje'@);
_tab.win_esep(_we,'Umowy cywilnoprawne'@);
_tab.win_efld(_we,,'ZK',,,10,2,,,,'Kwota korekty wynagrodzenia z tytułu umów cywilnoprawnych'@);
_tab.win_efld(_we,,'ZO',,,,,,,,'Dodatkowe informacje'@);
exec('ok_esc','#window',_tab,_we,,,,,,,exec('text_red_ok','#window'));
_tab.win_edit(_we);

_przed:=obj_new('E','Z');
{! _i:=1 .. obj_len(_przed)
|! _przed[_i]:=obj_new('K','O');
   _przed[_i].K:=0;
   _przed[_i].O:=''
!};

:Wyszukanie odpowiednich rekordów w __sk_m.TAB i nadanie wartości początkowych polom tabeli _tab.
{? __sk_m.TAB.find_key(__sk_m.MC,'S54')
|| _tab.EK:=_przed.E.K:=__sk_m.TAB.KW_N;
   _tab.EO:=_przed.E.O:=__sk_m.TAB.OPIS
?};
{? __sk_m.TAB.find_key(__sk_m.MC,'S74')
|| _tab.ZK:=_przed.Z.K:=__sk_m.TAB.KW_N;
   _tab.ZO:=_przed.Z.O:=__sk_m.TAB.OPIS
?};

_valid:="
   _tab:=cur_tab();
   {? exec('n_rozliczalna','nieobecnosc',2)='U'
   || {? _tab.EK+__sk_m.SUMY.S2.KW<0
      || FUN.emsg('Kwota korekty etatu nie może być niższa niż %1.'@ [form(-__sk_m.SUMY.S2.KW,,2,' .')]);
         return('EK')
      ?};
      {? _tab.ZK
      || FUN.emsg('Korekta zlecenia dla urlopu jest nieobsługiwana.\nWartość została wyzerowana.'@);
         _tab.ZK:=0;
         return('ZK')
      ?}
   || {? _tab.EK+__sk_m.SUMY.S4.KW_N<0
      || FUN.emsg('Kwota korekty etatu nie może być niższa niż %1.'@ [form(-__sk_m.SUMY.S4.KW_N,,2,' .')]);
         return('EK')
      ?};
      {? _tab.ZK+__sk_m.SUMY.S6.KW_N<0
      || FUN.emsg('Kwota korekty zlecenia nie może być niższa niż %1.'@ [form(-__sk_m.SUMY.S6.KW_N,,2,' .')]);
         return('ZK')
      ?}
   ?};
   1
";

{? _tab.edit(_valid)
|| _zmk:=_przed.E.K<>_tab.EK | _przed.Z.K<>_tab.ZK;
   _zmo:=_przed.E.O<>_tab.EO | _przed.Z.O<>_tab.ZO;

   _refresh:=0;

   do();

:  Jeżeli zmieniła się kwota lub opis - aktualizacja SK_CHO i odbudowanie __sk_m.TAB.
   {? _zmk | _zmo
   || {? exec('sk_cho_aktualizuj_po_korekcie','skladniki_okresowe',N.ref(),__sk_m.MC,__sk_m.KOR,'E',_tab.EK,_tab.EO)=0
      || undo()
      ?};
      {? exec('sk_cho_aktualizuj_po_korekcie','skladniki_okresowe',N.ref(),__sk_m.MC,__sk_m.KOR,'Z',_tab.ZK,_tab.ZO)=0
      || undo()
      ?};
      _crcE:=__sk_m.CRCE;
      _crcZ:=__sk_m.CRCZ;
      exec('sk_m_wypelnij','skladniki_okresowe',__sk_m.MC);
:     TZ jeszcze nie modyfikowaliśmy, a crc się zmieniło - korekta została już wykonana
      {? _crcE<>__sk_m.CRCE | _crcZ<>__sk_m.CRCZ
      || undo();
         _refresh:=1
      ?};
      &_crcZ;
      &_crcE
   ?};

:  Jeżeli zmieniła się kwota - synchronizacja z TZ.
   {? _zmk
   || _zm:=0;
      TZ.cntx_psh();
      TZ.index('PNMR');
      TZ.prefix(N.ref(),__sk_m.MC);
:     Rekord typu E jest wyświetlany - istnieje.
      {? TZ.find_key('E') & TZ.KW<>__sk_m.SUMY.S58.KW_N
      || TZ.KW:=__sk_m.SUMY.S58.KW_N;
:        Jeżeli status był małą literką (po korekcie), to nadal będzie małą.
         _status:={? _tab.EK=0 || 'A' || 'P' ?};
         TZ.STATUS:={? -TZ.STATUS=TZ.STATUS || -_status || _status ?};
         TZ.put();
         __sk_m.CRCE:=TZ.crc();
         _zm+=1
      ?};
:     Rekordu typu Z mogło nie być wcześniej - trzeba go utworzyć, będą potrzebne pewne informacje
:     z rekordu typu E, na którym stoimy.
      _no:=TZ.NO;
      _pr:=TZ.PR;
      _kwal:=TZ.W;
      {? ~TZ.find_key('Z') & __sk_m.SUMY.S78.KW_N
      || TZ.blank();
         TZ.R:='Z';
         TZ.N:=N.ref();
         TZ.OS_N:=null();
         TZ.KW:=__sk_m.SUMY.S78.KW_N;
         TZ.M:=__sk_m.MC;
         TZ.NO:=_no;
         TZ.PR:=_pr;
         TZ.W:=_kwal;
         TZ.STATUS:='P';
         TZ.add();
         __sk_m.CRCZ:=TZ.crc();
         _zm+=1

      |? TZ.find_key('Z') & TZ.KW<>__sk_m.SUMY.S78.KW_N
      || {? __sk_m.SUMY.S78.KW_N<>0
         || TZ.KW:=__sk_m.SUMY.S78.KW_N;
:           Jeżeli status był małą literką (po korekcie), to nadal będzie małą.
            _status:={? _tab.ZK=0 || 'A' || 'P' ?};
            TZ.STATUS:={? -TZ.STATUS=TZ.STATUS || -_status || _status ?};
            TZ.put();
            __sk_m.CRCZ:=TZ.crc()

:           W ramach sprzątania usuwamy rekord z zerową kwotą.
         || TZ.del();
            __sk_m.CRCZ:=0
         ?};
         _zm+=1
      ?};
      &_kwal;
      &_pr;
      &_no;
      {? _zm
      || exec('n_aktualizuj_podstawy','nieobecnosc',0,1)
      ?};
      TZ.cntx_pop();
      &_zm
   ?};

   {? ~end()
   || FUN.error('Aktualizacja wartości korekty nie powiodła się.\nWszystkie zmiany wycofane.'@)
   ?};

   {? _refresh
   || exec('sk_m_wypelnij','skladniki_okresowe',__sk_m.MC)
   ?};

   &_refresh

?};

__sk_m.TAB.cntx_pop();

~~


\sk_m_tworz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Formuła tworząca tabelę tymczasową i okienko wertowania do prezentacji rozliczenia podstawy bieżącej
::       nieobecności. Formuła tworzy zmienną globalną __sk_m.
::       Uwaga: Poprawność parametrów wejściowych NIE jest weryfikowana.
::       Uwaga: Procedura wykorzystywana również w wydruku "rozliczenie nieobecności".
::   WE: [_a] [STRING]  - Typ nieobecności:
::                   C - Choroba [domyślnie].
::                   U - Urlop.
::       [_b] [INTEGER] - Tworzyć okna?
::                   0 - Nie.
::                   1 - Tak [domyślnie].
::   WY: ~~
::  OLD: \mk_sk_m/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_typn:={? var_pres('_a')=type_of('') & (_a='C' | _a='U') || _a || 'C' ?};
_okna:={? var_pres('_b')=type_of(0) || _b || 1 ?};

{? var_pres('__sk_m')>100
|| obj_del(__sk_m)
?};
__sk_m:=obj_new('TYPN','KOR','SUMY','MC','TAB','NDX','WER','RED','CRCE','CRCZ');

:Tabela tymczasowa wykorzystywana do prezentacji rozliczenia podstaw nieobecności.
__sk_m.TAB:=tab_tmp(1,
   'S','STRING[3]','Sekcja',
:  TR - pole determinujące sposób kolorowania rekordu
   'TR','STRING[1]','Typ rekordu',
:  Powyżej - pola techniczne; poniżej - wybrane pola z tabeli SK_CHO
   'R','STRING[1]',MS.name(SK_CHO,'R'),
   'O','STRING[1]',MS.name(SK_CHO,'O'),
   'SK_NR','INTEGER',MS.name(SK_CHO,'SK_NR'),
   'SKLADNIK','STRING['+$MS.fld_len(SK_CHO,'SKLADNIK')+']',MS.name(SK_CHO,'SKLADNIK'),
   'MC','DATE',MS.name(SK_CHO,'MC'),
   'LT','STRING[8]',MS.name(SK_CHO,'LT'),
   'KW','REAL','Na liście'@,
   'KW_N','REAL','Do podstawy'@,
   'PRC','REAL','Współczynnik odbruttowienia'@,
   'OPIS','STRING[150]','Opis'@
);

_ndx1:=__sk_m.TAB.index('?');
_ndx2:=__sk_m.TAB.ndx_tmp(,,'MC',,,'S',,,'SK_NR',,);
__sk_m.TAB.index(_ndx2);
__sk_m.TAB.ndx_drop(_ndx1);
&_ndx2;
&_ndx1;

__sk_m.TYPN:=_typn;

:Numer rubryki dla składnika typu KOREKTA
__sk_m.KOR:=10000;
__sk_m.CRCE:=__sk_m.CRCZ:=0;

{? ~_okna
|| return()
?};

__sk_m.TAB.fld_fml('SK_NR','DISPLAY_FORMAT',"'empty='+$(__sk_m.TAB.SK_NR=0|__sk_m.TAB.SK_NR=__sk_m.KOR)");
_f0:="'empty='+$(fld()=0 & __sk_m.TAB.TR<>'S' & __sk_m.TAB.TR<>'O')";
{? __sk_m.TYPN='C'
|| __sk_m.TAB.fld_fml('KW','DISPLAY_FORMAT',"'empty='+$(fld()=0)");
   __sk_m.TAB.fld_fml('KW_N','DISPLAY_FORMAT',_f0)
|? __sk_m.TYPN='U'
|| __sk_m.TAB.fld_fml('KW','DISPLAY_FORMAT',_f0)
?};
&_f0;

_ws:=__sk_m.TAB.mk_sel('Składniki miesięczne'@,,,'#sk_chom'+(-__sk_m.TYPN),,,,,,,,,1);
__sk_m.TAB.win_fld(_ws,,'SK_NR',,,-5,,,,,MS.comment(SK_CHO,'SK_NR'));
_dl:={? __sk_m.TYPN='C' || 20 || 31 ?};
__sk_m.TAB.win_fld(_ws,,'SKLADNIK',,,-_dl,,,,,MS.comment(SK_CHO,'SKLADNIK'));
__sk_m.TAB.win_fld(_ws,,'O',,,-2,,,,,MS.comment(SK_CHO,'O'));
{? __sk_m.TYPN='C'
|| __sk_m.TAB.win_fld(_ws,,'KW',,,-10,2,,,,'Kwota z listy płac'@);
   __sk_m.TAB.win_fld(_ws,,'KW_N',,,-10,2,,,,'Kwota wzięta do podstawy'@)
|? __sk_m.TYPN='U'
|| __sk_m.TAB.win_fld(_ws,,'KW',,,-10,2,,'Do podstawy'@,,'Kwota wzięta do podstawy'@)
?};
__sk_m.TAB.win_fld(_ws,,'LT',,,-8,,,,,MS.comment(SK_CHO,'LT'));

__sk_m.TAB.win_act(_ws,,'Rekord',,,,"exec('rekprzed','color','__sk_m#C')");
:Akcja "Wyświetl" ma sens wyłącznie dla rzeczywistych zapisów (a nie wirtualnych), a więc dla tych związanych z rubryką.
__sk_m.TAB.win_act(_ws,,'Wyświetl',,,,"
   {? __sk_m.TAB.SK_NR
   || __sk_m.TAB.win_edit(__sk_m.RED[1+(__sk_m.TAB.PRC>0)]);
      __sk_m.TAB.hdr_edit();
      __sk_m.TAB.hdr_edit(__sk_m.TAB.SKLADNIK);
      __sk_m.TAB.display()
   ?}");
{? (__sk_m.TYPN='C' | __sk_m.TYPN='U') & ~exec('n_zablokowana','nieobecnosc')
|| __sk_m.TAB.win_act(_ws,,'Formuła','Ko&ryguj'@@,,'Wprowadzenie kwot korygujących podstawę'@,
      "exec('sk_m_koryguj_b','skladniki_okresowe')",,,,,,'R');
   __sk_m.TAB.win_btn(_ws,'text='+'Ko&ryguj'@+',panel=bottom,align=begin','menu:R')
?};
__sk_m.TAB.win_act(_ws,,'Formuła','Legenda'@@,,,"exec('legenda','color','__sk_m#C')",,,,,,'L',,'target=window');

__sk_m.TAB.win_sel(_ws);
__sk_m.WER:=_ws;

__sk_m.RED:=obj_new(2);
_we:=__sk_m.TAB.mk_edit(,,'skmred1');
__sk_m.TAB.win_esep(_we,'Dane podstawowe'@);
__sk_m.TAB.win_efld(_we,,'OPIS',,,80,,,,,'Informacje dodatkowe o pozycji'@);
__sk_m.RED[1]:=_we;

_we:=__sk_m.TAB.mk_edit(,,'skmred2');
__sk_m.TAB.win_efld(_we,,'PRC',,,,,,,,'Wartość zastosowanego współczynnika odbruttowienia'@);
__sk_m.TAB.win_efld(_we,,'OPIS',,,80,,,,,'Informacje dodatkowe o pozycji'@);
__sk_m.RED[2]:=_we;

~~


\sk_cho_aktualizuj_np_tz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Usuwanie składników rozliczenia na podstawie zapisów w tabeli TZ.
::       Zakłada się, że bufor tabeli N został ustawiony przed wywołaniem formuły.
::   WE:
::   WY:
::  OLD: \akt_skch/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
TZ.cntx_psh();
TZ.use('tabz'+form(N.OD~1,-4,0,'9.'));
TZ.index('ZASTAB');

SK_CHO.cntx_psh();
_nsk:='s_ch'+$(N.OD~1);
{? SK_CHO.name<>_nsk
|| SK_CHO.use(_nsk)
?};

_czy_tz:="TZ.prefix('E',_b,_a); TZ.first()";
_jest_tz:=(TZ.prefix('E',N.ref()); TZ.first())+(TZ.prefix('Z',N.ref());TZ.first());
SK_CHO.index('SK_CHO');
SK_CHO.prefix(N.ref());
{? SK_CHO.first
|| {!
   |? {? {? _jest_tz || 'MLGIUEZW%'*SK_CHO.O || 1 ?} & (_czy_tz(date(SK_CHO.MC~1,SK_CHO.MC~2,1),N.ref)=0)
      || SK_CHO.del()
      || SK_CHO.next()
      ?}
   !}
?};
SK_CHO.cntx_pop();
TZ.cntx_pop();
1


\sk_m_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Wertowanie składników miesięcznych podstawy dla bieżącego rekordu TZ.
::   WE:
::   WY: ~~
::  OLD: \wer_sk_m/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
N.cntx_psh();
NW.CHW();

_typn:=exec('n_rozliczalna','nieobecnosc',2);
{? _typn=''
|| FUN.error('Nierozpoznany typ nieobecności.'@)

|| exec('sk_m_tworz','skladniki_okresowe',_typn);
   exec('sk_m_wypelnij','skladniki_okresowe',TZ.M);

   __sk_m.TAB.select();

:  Odświeżenie okienka - może coś korygowaliśmy.
   win_disp();

   {? var_pres('__sk_m')>100
   || obj_del(__sk_m)
   ?}

?};

N.cntx_pop();
~~


\sk_m_kolor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Formuła odpowiedzialna za wybór sposobu kolorowania rekordu tabeli __sk_m.
::   WE:
::   WY: l_kw
::  OLD: \kol_sk_m/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
'__sk_m#C#'+__sk_m.TAB.TR


\sk_cho_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [2011]
::       RWR [12.30]
:: OPIS: Wyświetlanie okienka rozliczenia podstawy zasiłku chorobowego - prezentacja składników.
::  OLD: \sel_skch/skl_okr.fml
::  OLD: \sk_cho2/skl_okr.fml
::  OLD: \sk_cho3/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
N.cntx_psh();
NW.CHW();

TZ.cntx_psh();
TZ.use('tabz'+$(N.OD~1));
TZ.index('ZASTAB');
TZ.prefix('E',N.ref());
{? ~TZ.first()
|| FUN.emsg('Brak rozliczenia nieobecności.'@)

|? (_typn:=exec('n_rozliczalna','nieobecnosc',2))=''
|| FUN.emsg('Nierozpoznany typ nieobecności.'@)

|| SK_CHO.cntx_psh();
   SK_CHO.use('s_ch'+$(N.OD~1));
   SK_CHO.clear();

   _OKRES:=tab_tmp(1,
      'M','DATE',MS.name(TZ,'M'),
      'W','STRING[1]',MS.name(TZ,'W')
   );

   _ws:=_OKRES.mk_sel('Miesiące'@,,,'disp_mk3');
   _OKRES.win_fld(_ws,,'M',,,-10,,,,,MS.comment(TZ,'M'));
   _OKRES.win_fld(_ws,,'W',,,-15,,,,,MS.comment(TZ,'W'),2,,"'T'","'N'","'P'");

   {!
   |? _OKRES.blank();
      _OKRES.M:=TZ.M;
      _OKRES.W:=TZ.W;
      _OKRES.add();
      TZ.next()
   !};

   exec('sk_m_tworz','skladniki_okresowe',_typn);

   _mode:='maximized_with_title';
:  Budowa okna grupowego.
   _grp:=_OKRES.grp_make('%1 - %2: rozliczenie składników do podstawy'@ [$N.NB().RN,R.RT],,'sk_1',,,,,'html_maximized');
:  Okno z okresami.
   _OKRES.grp_sel(_grp,,_ws,'Składniki miesięczne'@,
      "  grp_disp(__sk_m.TAB,__sk_m.WER);
         grp_disp(SK_CHO,'SK_CHO2');
         grp_disp(SK_CHO,'SK_CHO3')
      ",,,,,,,,_mode
   );
:   Składniki miesięczne.
   _OKRES.tab_splt(_grp,,'vertical','skm',',30%');
   _OKRES.grp_sel(_grp,__sk_m.TAB,__sk_m.WER,,,,,,"exec('sk_m_wypelnij','skladniki_okresowe',cur_tab(0,0).M)",,,,_mode);
:  Przeliczone składniki okresowe.
   _OKRES.grp_sel(_grp,SK_CHO,'SK_CHO3','Składniki okresowe'@,,,,8,"SK_CHO.index('SK_CHL'); SK_CHO.prefix(N.ref(),'X')",,,,_mode);
:  Składniki okresowe.
   _OKRES.tab_splt(_grp,,'horizontal','pso');
   _OKRES.grp_sel(_grp,SK_CHO,'SK_CHO2',,,,,,"SK_CHO.index('SK_CHL'); SK_CHO.prefix(N.ref(),'P')",,,,_mode);

   _OKRES.win_sel(_grp);

   _OKRES.select();

   {? var_pres('__sk_m')>100
   || obj_del(__sk_m);
      &__sk_m
   ?};

   SK_CHO.cntx_pop()
?};

TZ.cntx_pop();
N.cntx_pop();

~~


\wpr_prem_sredt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.41]
:: OPIS: Wprowadzenie zapisu premii dla przekroczen sredniotygodniowych
::   WE:
::   WY:
::  OLD: \wpr_prem_sredt/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a.first
|| _tab:=sql('select R, DP, OD, DO, sum(KWN) KWN, sum(KWB) KWB, sum(KWI) KWI from :_a group by R, DP, OD, DO',_a);

   PAR_POKR.index('PAR_POKR');
   PAR_POKR.prefix(exec('ref_firma','ustawienia'));
   {? _tab.first
   || {!
      |? {? PAR_POKR.find_key(_tab.R)
         || PREM_OKR.index('PREM_LST');
            PREM_OKR.prefix(P.ref,VAR.NAZWALIS,PAR_POKR.ref());
            {? PREM_OKR.first() || {! |? PREM_OKR.del !} ?};
            PREM_OKR.blank();
            PREM_OKR.P:=P.ref();
            PREM_OKR.SKP:=PAR_POKR.ref;
            PREM_OKR.DP:=_tab.DP;
            PREM_OKR.O_OD:=_tab.OD;
            PREM_OKR.O_DO:=_tab.DO;
            PREM_OKR.KW_N:=_tab.KWN;
            PREM_OKR.KW_W:=_tab.KWB;
            PREM_OKR.KW_I:=_tab.KWI;
            PREM_OKR.LT:=VAR.NAZWALIS;
            PREM_OKR.TT:='A';
            PREM_OKR.RP:='S';
            PREM_OKR.add(1)
         ?};
         _tab.next
      !}
   ?}
?};
PREM_OKR.index('PREM_LST');
PREM_OKR.prefix(P.ref,VAR.NAZWALIS);
{? __RUB.ref(7210)
|| FUNKCJE.LK(7210,,PREM_OKR.size())
?};
1


\usu_prem_auto_godz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.51]
:: OPIS: Usuniecie premii okresowych zakładanych automatycznie dla przekroczeń średniotygodniowych.
::  OLD: \usu_prem_auto_godz/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
PREM_OKR.cntx_psh;
PREM_OKR.index('PREM_LST');
PREM_OKR.prefix(P.ref,VAR.NAZWALIS);
{? PREM_OKR.first()
|| {!
   |? {? PREM_OKR.RP='S'
      || PREM_OKR.del(,1)=2
      || PREM_OKR.next()
      ?}
   !}
?};
PREM_OKR.cntx_pop;
1


\del__SK_CHO
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.51]
:: OPIS: Usunięcie zapisów __SK_CHO dla danego miesiąca.
::   WE: _a [INT]    - ref nieobecności jako int
::       _b [DATE]   - usuwany miesiąc z zapisów
::      [_c][STRING] - typ usuwanego zapisu (G - dla godzin, P - dla premii okresowych)
::   WY: 0/1 [INT] - powodzenie operacji
::  OLD: \del__SK_CHO/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _N_ref:=_a || return(0) ?};
{? var_pres('_b')=type_of(date()) || _mc:=_b || return(0) ?};
_typ:={? var_pres('_c')=type_of('') || _c || '' ?};
_ret:=1;

__SK_CHO.cntx_psh();
__SK_CHO.index(__SK_ND2);
__SK_CHO.prefix(_N_ref,_mc,_typ);
{? __SK_CHO.first()
|| {!
   |? __SK_CHO.del()
   !}
?};
__SK_CHO.cntx_pop();
_ret

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 749f135fc68a9958fd8c4bb3255a90e80d8f2fc9849c9f15582d720416a27400aac4b000c73a463f454aee8d91c78f64cfaca65f4b0a5a89c0cc9095018ef80d20260f65ed4e7fe5b04235cb0710762c08101cda8415d660cdf2e9b2c2eb4469e5c8354b430b3679f46ad5a498d08d619ac783dcd1f6df88fb771478f01ca305
