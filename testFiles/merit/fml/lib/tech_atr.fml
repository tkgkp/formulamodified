:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: tech_atr.fml
:: Utworzony: 27.03.2015
:: Autor: TS
::======================================================================================================================
:: Zawartość: Obsługa atrybutów w kartach technologicznych, wzorcach, zleceniach
::            Plik biblioteczny - wspólna obsługa dla TTE_TEC, TTE_WTE, TTE_PZL
::======================================================================================================================


\env_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Zwraca zmienną środowiskową do obsługi atrybutów
::----------------------------------------------------------------------------------------------------------------------
_env:=obj_new('result','fields','TKTL','ZL');
_env.result:=0;
_env.fields:=obj_new('SWAR','RSWAR','MSWAR');
_env.fields.SWAR:='';
_env.fields.RSWAR:=0;
_env.fields.MSWAR:='';
_env.TKTL:=null();
_env.ZL:=null();
_env


\show_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JM [7.60]
:: OPIS: Pokazuje tebelę atrybutów
::   WE: [_a] - redakcja (1), podgląd (0)
::       [_b] - nie wyświetla tabelki (1), tylko zwraca wynik czy są atrybuty
::       [_c] - opis doklejony do tytułu okna
::       [_d] - wyświetlanie napisu 'ZATWIERDZONE' - 2, 'PODGLĄD' 1/0 - domyślnie 0
::       [_e] - dotyczy zlecenia: ZL.ref(), dotyczy karty technologicznej: TKTL.ref()
::   WY: 0 / 1 - czy są atrybuty
::  OLD: \show_atr/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
_edit:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_win:={? _edit || 'WER' || 'SLO' ?};
_no_display:={? var_pres('_b')=type_of(0) || _b || 0 ?};
_tail:={? var_pres('_c')=type_of('') || _c || '' ?};
_view:={? var_pres('_d')=type_of(0) || _d || 0 ?};
_zl:={? var_pres('_e')=type_of(null()) & ref_tab(_e)=ZL || _e || null() ?};
_tktl:={? var_pres('_e')=type_of(null()) & ref_tab(_e)=TKTL || _e || null() ?};

{? var_pres('tpar',@)>0 || _tpar:=tpar ?};

UAT.fld_attr(,2);
UAT.index('TR');
UAT.prefix(ATR.TACR+'*',ATR.TREF,ATR.TMSK+'*');
UAT.win_sel(_win);
UAT.actions(_win);
UAT.win_edit('');
{? ~_no_display
|| UAT.hdr_sel();
   UAT.hdr_sel(_tail+{? _view=2
                     || ' — '+'ZATWIERDZONE'@
                     |? _view=1
                     || ' — '+'PODGLĄD'@
                     || ''
                     ?});

   _env_atr:=exec('env_atr','tech_atr');
   _env_atr.ZL:=_zl;
   _env_atr.TKTL:=_tktl;
   params_set('env_atr',_env_atr);
   {? TKTL.STAT_P='N'
   || UAT.actions('WER','RZ')
   || UAT.actions('WER','')
   ?};
   POMOC.TAT_M:='U';
   UAT.select();
:: przeliczenie norm na karcie po ewentualnej zmianie wartości atrybutów
   {? _tktl<>null()
   ||
      TKTL.cntx_psh();
      TKTL.use(ref_name(_tktl));
      TKTL.clear();
      {? TKTL.seek(_tktl)
      ||
         {? TKTL.TYP().PAR='T'
         ||
            {? var_pres('tpar',@)>0 || obj_del(tpar) ?};
            tpar:=obj_new(@.CLASS.TPAr);
            tpar.TABLE:=TPAR;
            tpar.INDEX:='NN';
            tpar.PREFIX:=TKTL.ref();
            tpar.loadp();
            exec('recalculate','tech_param',TKTL.ref());
            exec('stop_tpar','tech_param')
         ?}
      ?};
      TKTL.cntx_pop()
   ?}
?};
_res:=UAT.first();
UAT.clear();
UAT.fld_attr(,1);

{? var_pres('_tpar')>0
|| {? var_pres('tpar',@)>0 || obj_del(tpar) ?};
   tpar:=_tpar
?};

_res


\atr_tacr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [2010]
:: OPIS: Formuła na wartość początkową pola TAB tabeli UAT
::  OLD: \atr_tacr/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
ATR.TACR+'*'


\atr_tref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [2010]
:: OPIS: Formuła na wartość początkową pola REF tabeli UAT
::  OLD: \atr_tref/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
ATR.TREF


\atr_tmsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [2010]
:: OPIS: Formuła na wartość początkową pola MASK tabeli UAT
::  OLD: \atr_tmsk/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
ATR.TMSK+'*'


\uat_lp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.62]
:: OPIS: Wyznacza 'LP'
::   WY: numer pozycji
::  OLD: \uat_lp/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
UAT.cntx_psh();
{? UAT.last()
|| _wyn:=UAT.LP+1
|| _wyn:=1
?};
UAT.cntx_pop();
_wyn


\uat_lp_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.62]
:: OPIS: Czy redagować 'LP'
::   WY: 0 / 1
::  OLD: \uat_lp_be/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
0


\przed_rekord
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JM [7.60]
:: OPIS: Akcja na wyświetlanie rekordu
::  OLD: \przed_rekord/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
UAT.win_edit('RED_'+UAT.TYP().TYP);
exec('decode','tech_atr');
_win:=cur_win(1,1);
{? UAT.ACT='N'
|| UAT.actions_grayed(_win,'PU');
   Color.rekprzed('UAT#01#01')
|| UAT.actions_grayed(_win,'R');
   ~~
?}


\code
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JM [7.60]
:: OPIS: Konwersja dowolnego czegoś na string
::  OLD: \code/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
_atr:=UAT.TYP().TYP;
{? _atr='L' || UAT.WAR:=form(ATR.LWAR,,,'9.')
|? _atr='D' || UAT.WAR:=form(#ATR.DWAR,,,'9.')
|? _atr='C' || UAT.WAR:=form(*ATR.CWAR,,,'9.')
|? _atr='T' || UAT.WAR:=form(ATR.TWAR)
|? _atr='S' || UAT.WAR:=ATR.MSWAR+'.'+form(ATR.RSWAR,,,'9.')
?};
~~


\decode
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JM [7.60]
:: OPIS: Konwersja string'a na cokolwiek
::  OLD: \decode/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
_atr:=UAT.TYP().TYP;
{? _atr='L'
||
   ATR.LWAR:=#UAT.WAR; ATR.TWAR:=form(ATR.LWAR,,,'9.')
|? _atr='D'
||
   ATR.DWAR:=#(#UAT.WAR); ATR.TWAR:=form(ATR.DWAR)
|? _atr='C'
||
   ATR.CWAR:=*(#UAT.WAR); ATR.TWAR:=form(ATR.CWAR)
|? _atr='T'
||
   ATR.TWAR:=UAT.WAR; ATR.TWAR:=form(ATR.TWAR)
|? _atr='S'
|| _pos:=UAT.WAR*'.';
   ATR.MSWAR:=(_pos-1)+UAT.WAR;
   ATR.RSWAR:=#((_pos)-UAT.WAR);
   SLO.cntx_psh();
   SLO.clear();
   {? SLO.seek(ATR.RSWAR,ATR.MSWAR)
   || ATR.TWAR:=SLO.KOD; ATR.SWAR:=SLO.KOD
   || ATR.TWAR:=''; ATR.SWAR:=''
   ?};
   SLO.cntx_pop()
?};
~~


\dodaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JM [7.60]
:: OPIS: Akcja na dołącz
::  OLD: \dodaj/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_tktl:=params_get().env_atr.TKTL;
_zl:=params_get().env_atr.ZL;

TAT.cntx_psh();
:: Zakładam filtr na tabelę TAT - nie pokazuję typu 'Partia' ponieważ jego wybranie jest niedozwolone
exec('tat_nopart','tech_atr');

UAT.blank();
exec('clr_atr','tech_atr');

_first_win:=UAT.mk_edit(,,'first_win');
_formula:="'key:F2'";
UAT.win_ebtn(_first_win,'text='+'OK'@,_formula);
_title:={? _tktl<>null() & exec('FindAndGet','#table',TKTL,_tktl,,"STAT_P='T'",0) & exec('can_modify','tech_common')
        || 'Atrybuty technologii'@+' — '+'MODYFIKACJA ZATWIERDZONEJ TECHNOLOGII'@
        |? _zl<>null() & exec('FindAndGet','#table',ZL,_zl,,"STAN<>'N'",0)
        || 'Atrybuty technologii'@+' — '+'MODYFIKACJA ZATWIERDZONEGO ZLECENIA'@
        || 'Atrybuty technologii'@
        ?};
_grp:=UAT.grp_make(_title,"tab_hide(); tab_show(2); tab_hide(1)",'uatgrupowe',50,10,,,'normal');
_tab_name:='Dane atrybutu'@;
UAT.grp_edit(_grp,,_first_win,'niewidoczna');
UAT.grp_edit(_grp,,'RED','Wybór typu'@,,,,,'maximized');
UAT.grp_edit(_grp,,'RED_C','Edycja atrybutu: czas'@,,,,,'maximized');
UAT.grp_edit(_grp,,'RED_D','Edycja atrybutu: data'@,,,,,'maximized');
UAT.grp_edit(_grp,,'RED_L','Edycja atrybutu: liczba'@,,,,,'maximized');
UAT.grp_edit(_grp,,'RED_S','Edycja atrybutu: słownik'@,,,,,'maximized');
UAT.grp_edit(_grp,,'RED_T','Edycja atrybutu: tekst'@,,,,,'maximized');
UAT.win_sel(_grp);

params_get().env_atr.result:=0;
POMOC.TAT_M:='U';
{? UAT.select()
|| {? params_get().env_atr.result
   || exec('code','tech_atr');
      UAT.add()
   ?}
?};

TAT.cntx_pop();
TAT.f_clear();
~~


\uat_ewindow_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: 'Okienko przed' dla okien redakcyjnych tabeli UAT
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_fld_start:={? cur_win(1,1)='RED' || 'TYP' || UAT.TYP().TYP+'WAR' ?};

{? edit_start(,_fld_start)
|| {? cur_win(1,1)='RED'
   || _chk:=__CHK.record(UAT,,'TYP');
      {? _chk=''
      || {? UAT.TYP().TYP='C'
         || _numer:=3
         |? UAT.TYP().TYP='D'
         || _numer:=4
         |? UAT.TYP().TYP='L'
         || _numer:=5
         |? UAT.TYP().TYP='S'
         || _numer:=6
         |? UAT.TYP().TYP='T'
         || _numer:=7
         || FUN.info('Niedozwolony typ atrybutu — należy wybrać inny.'@);
            _numer:=2
         ?}
      || _numer:=2
      ?};
      tab_sel(1);
      tab_hide();
      tab_show(_numer);
      tab_hide(1)
   || params_get().env_atr.result:=1;
      sel_exit()
   ?}
|| sel_exit()
?}


\popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JM [7.60]
:: OPIS: Akcja na popraw
::  OLD: \popraw/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

exec('decode','tech_atr');
{? {? 'CDLST'*UAT.TYP().TYP<>0
   ||
      {? TKTL.STAT_P='T' & exec('can_modify','tech_common')
      || UAT.hdr_edit(' — ' + 'MODYFIKACJA ZATWIERDZONEJ TECHNOLOGII'@)
      ?};
      UAT.edit("chk_rec('LP')")
   || 0
   ?}
|| exec('code','tech_atr');
   UAT.put()
?};
~~


\usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Akcja na usuń UAT
::  OLD: \usun/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
{? TKTL.STAT_P='T'
|| {? exec('atr_chk_del','tech_atr',UAT.ref()) & (UAT.sel_size()>0 | FUN.ask('Czy dezaktywować bieżący wiersz?'@)) || UAT.ACT:='N'; UAT.put() ?}
|| {? exec('atr_chk_del','tech_atr',UAT.ref()) & (UAT.sel_size()>0 |  FUN.ask('Czy usunąć bieżący wiersz?'@)) || UAT.del() ?}
?};
~~


\usun_gp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Akcja na usuń UAT - przed grupą rekordów
::----------------------------------------------------------------------------------------------------------------------
KOMM.init(,,{? TKTL.STAT_P='T' || 'Dezaktywacja atrybutów technologii'@ || 'Usuwanie atrybutów technologii'@ ?},'');
{? TKTL.STAT_P='T'
|| FUN.ask('Czy dezaktywować zaznaczone wiersze?'@)
|| FUN.ask('Czy usunąć zaznaczone wiersze?'@)
?}


\usun_ga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Akcja na usuń UAT - po grupie rekordów
::----------------------------------------------------------------------------------------------------------------------
KOMM.select()


\przywroc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.22]
:: OPIS: Akcja na Przywróć UAT
::----------------------------------------------------------------------------------------------------------------------
{? UAT.sel_size()>0 | FUN.ask('Czy przywrócić bieżący wiersz do aktywnych?'@) || UAT.ACT:='T'; UAT.put() ?};
~~


\legenda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.22]
:: OPIS: Akcja Legenda UAT
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','UAT#01#')


\clr_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JM [7.60]
:: OPIS: Czyści pola zmiennej ATR
::  OLD: \clr_atr/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
ATR.LWAR:=0;
ATR.DWAR:=date(0,0,0);
ATR.CWAR:=time(0,0,0);
ATR.TWAR:='';
ATR.SWAR:='';
ATR.RSWAR:=0;
~~


\tat_nopart
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [12.30]
:: OPIS: Zakłada filtr na TAT, w taki sposób aby nie było widać typu 'Partia'
::   WY: 0 / 1 - czy filtr założony
::  OLD: \tat_nopart/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
TAT.clear();
TAT.index('NA');
TAT.f_set('NA',,'TAT.TYP <> \'P\' and TAT.MIEJSCE=\'U\'')


\atr_f3_service
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JM [7.60]
:: OPIS: Obsługa na F3 słownika
::   WY: tekst wybrany ze słownika
::  OLD: \atr_f3_service/atrybuty.fml
::----------------------------------------------------------------------------------------------------------------------
_slu:=UAT.TYP().SLU;
_ref:=ATR.RSWAR;

_res:='';
{? _slu<>null()
|| SLO.win_sel('ONE_SEL');
   SLO.index('SL');
   SLO.prefix(_slu);
   {? _ref<>0
   || SLO.seek(_ref,)
   ?};
   {? SLO.select(,1,10)
   || _res:=SLO.KOD
   ?}
?};
_res


\atr_slo_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Przed redakcją pola ATR.SWAR
::----------------------------------------------------------------------------------------------------------------------
_fields:=params_get().env_atr.fields;
_fields.SWAR:=ATR.SWAR;
_fields.RSWAR:=ATR.RSWAR;
_fields.MSWAR:=ATR.MSWAR;
1


\atr_slo_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Po redakcji pola ATR.SWAR
::----------------------------------------------------------------------------------------------------------------------
_slu:=UAT.TYP().SLU;
_fields:=params_get().env_atr.fields;

_res:=0;
{? _slu<>null()
|| {? fld()=''
   || ATR.SWAR:='';
      ATR.RSWAR:=0;
      ATR.MSWAR:='';
      _res:=1
   || SLO.index('SL');
      SLO.prefix(_slu,fld());
      {? SLO.first()
      || ATR.SWAR:=SLO.KOD;
         ATR.RSWAR:=#SLO.ref();
         ATR.MSWAR:=ref_name(SLO.ref());
         _res:=1
      || _wyb:=FUN.choice('Brak pozycji w słowniku.'@,1,'Powtórz'@,'Wyświetl &słownik'@);
         {? _wyb=0
         || ATR.SWAR:=_fields.SWAR;
            ATR.RSWAR:=_fields.RSWAR;
            ATR.MSWAR:=_fields.MSWAR;
            return(0)
         |? _wyb=2
         || {? exec('atr_f3_service','tech_atr')<>''
            || ATR.SWAR:=SLO.KOD;
               ATR.RSWAR:=#SLO.ref();
               ATR.MSWAR:=ref_name(SLO.ref());
               _res:=1
            ?}
         ?}
      ?}
   ?}
?};
_res


\UAT_kasuj
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: kasuje wszystkie atrybuty przypisane do rekordu wskazanej tabeli
::   WE: _a - akronim tabeli
::       _b - .ref() rekordu tabeli
::  OLD: \UAT/tkasuj.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a+'*';
_ref:=#_b;
_rnm:=ref_name(_b)+'*';
UAT.index('TR');
UAT.prefix(_tab,_ref,_rnm);
{? UAT.first() || {! |? UAT.del() !} ?};
1


\exist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Sprawdza, czy są atrybuty przypisane do rekordu wskazanej tabeli
::   WE: _a - akronim tabeli
::       _b .ref() rekordu tabeli
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a+'*';
_ref:=#_b;
_rnm:=ref_name(_b)+'*';
UAT.cntx_psh();
UAT.index('TR');
UAT.prefix(_tab,_ref,_rnm);
_result:=UAT.first();
UAT.cntx_pop();
_result


\TKTL
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: atrybuty karty technologicznej/wzorca
::   WE: _a - TKTL.ref()
::       [_b] - karta/wzorzec używana na wyższym poziomie wywołania
::  OLD: \atrybuty/tech.fml
::----------------------------------------------------------------------------------------------------------------------
_tktl:=_a;
_used:={? var_pres('_b')=type_of(0) || _b || 0 ?};

TKTL.cntx_psh();
TKTL.prefix();
{? TKTL.seek(_tktl)
|| _locked:=exec('tktl_lock','tech_common',,'P');
   _used:=_used | ~_locked;

   VAR.A_KTL:=TKTL.ref();
   ATR.TACR:='TKTL';
   ATR.TREF:=#VAR.A_KTL;
   ATR.TMSK:=ref_name(VAR.A_KTL);
   _tail:={? VAR.A_KTL().TORW='W' || ' '+'wzorca: %1'@[VAR.A_KTL().NRK] || ' '+'karty: %1'@[VAR.A_KTL().NRK] ?}+
          ' '+'wersja: %1'@[TKTL.WER];
   _noedit:=_used | TKTL.STAT_N='N' & TKTL.TORW<>'Z'  | (TKTL.STAT_P='T' & ~exec('can_modify','tech_common')) | VAR.ARCH='T' |
            ~(exec('chk_role','#b__box',OPERATOR.USER,'TTE_TEC_DRDP') & TKTL.TORW='T' |
              exec('chk_role','#b__box',OPERATOR.USER,'TTE_WTE_DRDP') & TKTL.TORW='W' |
              exec('chk_role','#b__box',OPERATOR.USER,'TTE_PZL_DTEC') & TKTL.TORW='Z');
::   _view:=_used | TKTL.STAT_N='N' & TKTL.TORW<>'Z' | TKTL.STAT_P='T' | VAR.ARCH='T';
   {?  TKTL.STAT_P='T' & exec('can_modify','tech_common')
   || _view:=2
   |? _used | TKTL.STAT_N='N' & TKTL.TORW<>'Z' | TKTL.STAT_P='T' | VAR.ARCH='T'
   || _view:=1
   || _view:=0
   ?};
   exec('show_atr','tech_atr',~_noedit,0,_tail,_view,TKTL.ref());
   {? _locked || exec('tktl_unlock','tech_common',,'P') ?}
?};
TKTL.cntx_pop();
''


\TOPER
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.60]
:: OPIS: atrybuty operacji technologicznej
::  OLD: \atrybuty/tex_oper.fml
::----------------------------------------------------------------------------------------------------------------------
ATR.TACR:='TOPER';
ATR.TREF:=#VAR.A_OP;
ATR.TMSK:=ref_name(VAR.A_OP);
_tail:=' '+'operacji: %1'@[exec('get_oper_nr','tech_oper',VAR.A_OP().UNROP)];
_noedit:=params_get().env_oper.used | TKTL.STAT_N='N' & TKTL.TORW<>'Z' | TKTL.STAT_O='T' & TKTL.STAN<>'T' |
           TKTL.STAN='T' & exec('can_modify','tech_common')=0 | TKTL.ARCH='T' | TOPER.ACT<>'T' |
         ~(exec('chk_role','#b__box',OPERATOR.USER,'TTE_TEC_DRTO') & TKTL.TORW='T' |
           exec('chk_role','#b__box',OPERATOR.USER,'TTE_WTE_DRTO') & TKTL.TORW='W' |
           exec('chk_role','#b__box',OPERATOR.USER,'TTE_PZL_DTEC') & TKTL.TORW='Z');
::_view:=params_get().env_oper.used | TKTL.STAT_N='N' & TKTL.TORW<>'Z' | TKTL.STAT_O='T' & TKTL.STAN<>'T' |
::        TKTL.STAN='T' & exec('can_modify','tech_common')=0 | TKTL.ARCH='T' | TOPER.ACT<>'T';
{? TKTL.STAN='T' & exec('can_modify','tech_common')
|| _view:=2
|? params_get().env_oper.used | TKTL.STAT_N='N' & TKTL.TORW<>'Z' | TKTL.STAT_O='T' & TKTL.STAN<>'T' | TKTL.STAN='T'
   | TKTL.ARCH='T' | TOPER.ACT<>'T'
|| _view:=1
|| _view:=0
?};
exec('show_atr','tech_atr',~_noedit,0,_tail,_view,TKTL.ref());
~~


\ZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.60]
:: OPIS: atrybuty zlecenia
::   WE: _a - ZL.ref()
::       [_b] - zlecenie używane na wyższym poziomie wywołania
::  OLD: \atrybuty/zlec1.fml
::----------------------------------------------------------------------------------------------------------------------
_zl:=_a;
_used:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_locked:=exec('zl_lock','zl_common',_zl,'I',1);
_used:=_used | ~_locked;
params_set('used',_used);
exec('FindAndGet','#table',ZL,_zl,,
   "ATR.TACR:='ZL';
    ATR.TREF:=#ZL.ref();
    ATR.TMSK:=ref_name(ZL.ref());
    _noedit:=_c.used | ZL.STAT_N='N' | ZL.STAN='Z';
    _view:=_c.used | ZL.STAT_N='N' | ZL.STAN='Z';
    _tail:='';
    exec('show_atr','tech_atr',~_noedit,0,_tail,_view,ZL.ref())
   "
);
{? _locked || exec('zl_unlock','zl_common',_zl,'I') ?};
~~


\action_attrib_button
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Podgląd atrybutów wzorca technologii - obsługa przycisku w oknie redagowania TKTL w czynnościach
::----------------------------------------------------------------------------------------------------------------------
exec('TKTL','tech_atr',TKTL.ref(),1);
''


\uatkrb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.22]
:: OPIS: kolorowanie UAT
::       wyróżnienie pozycji nieaktywnych
::----------------------------------------------------------------------------------------------------------------------
{? UAT.ACT='T'
|| ''
|| 'UAT#01#01'
?}


\get_value
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Funkcja zwraca wartość atrybutu zlecenia lub technologii.
::   WE: _a - Ref do rekordu tabeli (TKTL.ref()/ZL.ref())
::       _b - [STRING] - nazwa atrybutu
::   WY: ~~ lub wartość atrybutu
::----------------------------------------------------------------------------------------------------------------------
_ref:={? var_press('_a')=type_of(null()) || _a || return(~~) ?};
_nazwa:={? var_press('_b')=type_of('') || _b || return(~~) ?};
_value:=~~;
:: Wyszukanie typu atrybutu na podstawie nazwy
_tat:=exec('exist','tat',_nazwa);
{? _tat<>null()
||
::  TKTL/ZL
   _tab:=ref_tab(_ref);
   {? _tab=TKTL | _tab=ZL
   || _acr:= {? _tab=TKTL
             || 'TKTL'
             || 'ZL'
             ?};
      _msk:=ref_name(_ref);
      UAT.cntx_psh();
      UAT.index('TYPREF');
      UAT.prefix(_acr+'*',#_ref,_msk,_tat,'T');
      {? UAT.first()
      || exec('decode','tech_atr');
         _atr:=UAT.TYP().TYP;
         _value:= {? _atr='L'
                  || ATR.LWAR
                  |? _atr='D'
                  || ATR.DWAR
                  |? _atr='C'
                  || ATR.CWAR
                  |? _atr='T'
                  ||  ATR.TWAR
                  |? _atr='S'
                  ||  ATR.SWAR
                  ?}
::         _value:=UAT.WAR
      ?};
      UAT.cntx_pop()
   ?}
?};
_value


\atr_chk_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Sprawdza czy można usunąć dany atrybut karty technologicznej
::       Tutaj należy zamieścić wszystkie przypadki gdzie dany aytrybut może być używany
::   WE: _a - UAT.ref() - ref atrybutu
::----------------------------------------------------------------------------------------------------------------------
{? UAT.sel_size()=0
|| KOMM.init(,,'Usuwanie atrybutów'@,'')
?};
_ref:={? var_press('_a')=type_of(null()) || _a || null() ?};
:: parametr może być usunięty
_ok:=1;

UAT.cntx_psh();
UAT.clear();
{? _ref<>null() & UAT.seek(_ref)
||
   {? UAT.TAB='TKTL*'
   || _nrk:=exec('FindAndGet','#table',TKTL,UAT.REF,UAT.MSK,"TKTL.ref()",null());
      _naz:=exec('FindAndGet','#table',TAT,UAT.TYP,,"TAT.NA",'');
      _pstr:='a(\''+$_naz+'\')';

      _main:={?  TKTL.STAT_P='T'
             || 'Atrybut "%1" jest używany w karcie technologicznej — dezaktywacja nie jest możliwa.'@[_naz]
             || 'Atrybut "%1" jest używany w karcie technologicznej — usunięcie nie jest możliwe.'@[_naz]
             ?};
      KOMM.sect_beg(_main,3);

::    dla tabeli TMAT
      _created:=0;
      TMAT.cntx_psh();
      TMAT.index('NL');
      TMAT.prefix(_nrk);
      {? TMAT.first()
      || {!
         |? _str:=(TMAT.FORMN+'#'+TMAT.FORMB+'#'+TMAT.EXIST+'#'+TMAT.DFORMN+'#'+TMAT.DFORMB);
            _ok1:=(_str*_pstr=0);
            {? _ok1=0
            || {? _created=0
               ||  KOMM.sect_beg('Surowce:'@,71);
                   _created:=1
               ?};
               KOMM.add(exec('get_src_way','tech_mater',TMAT.ref()),76)
            ?};
            _ok:=_ok*_ok1;
            TMAT.next()
         !}
      ?};
      TMAT.cntx_pop();

::    dla tabeli TCHMAT
      TCHMAT.cntx_psh();
      TCHMAT.index('NSL');
      TCHMAT.prefix(_nrk);
      {? TCHMAT.first()
      || {!
         |? _str:=(TCHMAT.FORMN+'#'+TCHMAT.FORMB+'#'+TCHMAT.EXIST+'#'+TCHMAT.DFORMN+'#'+TCHMAT.DFORMB);
            _ok1:=(_str*_pstr=0);
            {? _ok1=0
            || {? _created=0
               || KOMM.sect_beg('Surowce:'@,71);
                  _created:=1
               ?};
               KOMM.add(exec('get_chm_way','tech_mater',TCHMAT.ref()),76)
            ?};
            _ok:=_ok*_ok1;
            TCHMAT.next()
         !}
      ?};
      TCHMAT.cntx_pop();
      {? _created>0 || KOMM.sect_end() ?};

::    dla tabeli TOPER
      _created:=0;
      _toper:='Operacje:'@;
      TECHZAMS.cntx_psh(); TOPER.cntx_psh();
      TOPER.index('NNN');
      TOPER.prefix(_nrk);
      {? TOPER.first()
      || {!
         |? _str:=(TOPER.FNTIME+'#'+TOPER.FCOEF+'#'+TOPER.EXIST+'#'+TOPER.FCENA+'#'+TOPER.FMTIME);
            _ok1:=(_str*_pstr=0);
            {? _ok1=0
            || {? _created=0
               || KOMM.sect_beg(_toper,33);
                  _created:=1
               ?};
                KOMM.add('Operacja: %1 %2'@[exec('get_oper_nr','tech_oper',TOPER.UNROP),TOPER.OPER().NA],76)
            ?};
            _ok:=_ok*_ok1;
            TOPER.next()
         !}
      ?};

::    dla tabeli TECHZAMS
      TECHZAMS.index('TTL');
      TECHZAMS.prefix(_nrk);
      {? TECHZAMS.first()
      || {!
         |? _str:=(TECHZAMS.FCOEF+'#'+TECHZAMS.FMTIME+'#'+TECHZAMS.FNKO+'#'+TECHZAMS.FNTIME+'#'+TECHZAMS.FTTM);
            _ok1:=(_str*_pstr=0);
            {? _ok1=0
            || {? _created=0
               || KOMM.sect_beg(_toper,33);
                  _created:=1
               ?};
               KOMM.add('Zamiennik stanowiska operacji: %1 %2'@[exec('get_oper_nr','tech_oper',TECHZAMS.TOPER().UNROP),TECHZAMS.TOPER().OPER().NA],76)
            ?};
            _ok:=_ok*_ok1;
            TECHZAMS.next()
         !}
      ?};
      TECHZAMS.cntx_pop(); TOPER.cntx_pop();
      {? _created>0 || KOMM.sect_end() ?};

::    dla tabeli TACTTLS
      _created:=0;
      _tactt:='N-P-U:'@;
      TACTTLS.cntx_psh();
      TACTTLS.index('KNROP');
      TACTTLS.prefix(_nrk);
      {? TACTTLS.first()
      || {!
         |? _str:=(TACTTLS.FILE+'#'+TACTTLS.FZXJM+'#'+TACTTLS.FZH+'#'+TACTTLS.EXIST);
            _ok1:=(_str*_pstr=0);
            {? _ok1=0
            || {? _created=0
               || KOMM.sect_beg(_tactt,42);
                  _created:=1
               ?};
               KOMM.add(exec('get_util_way','tech_tool',TACTTLS.ref()),76)
            ?};
            _ok:=_ok*_ok1;
            TACTTLS.next()
         !}
      ?};
      TACTTLS.cntx_pop();
      {? _created>0 || KOMM.sect_end() ?};
      KOMM.sect_end();
      {? _ok || KOMM.del(_main) ?};

      {? UAT.sel_size()=0
      || {? ~_ok
         || KOMM.select(,,,,,,0)
         ?}
      ?}
   ?}
?};
UAT.cntx_pop();
_ok

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 42530391e01d222e1b0900a729ae6af2f204a80b08c483c57da17cd50323104de9719b3efc267a0559966cfef76934ba8358420944b619f459bcf4ad22638f2c4c43e132f9d6728f879b41972b8ae99e87ce39e53797ca953d7faa8ff9784e57044177776888594d4e183543bec08b92e39afcdc59a42de20f3d99e8241ec032
