:!UTF-8
::(c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
::Nazwa pliku: banki.fml
::Utworzony: 2003/03/06
::Autor: GS
::Systemy: Merit
::======================================================================================================================
::Zawartosc: Funkcje wykorzystywane do obslugi rachunkow bankowych
::======================================================================================================================

\czyOsobaMaRach
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.50]
:: OPIS: Funkcja sprawdza czy wskazana osoba ma już zarejestrowany rachunek ze wskazanym numerem
::   WE: _a - [REFERENCE] - wskazanie na osobe
::       _b - [STRING]    - numer rachunku
::       _c - [INTEGER]   - czy wyświetlać komunikaty
::   WY: 0 - w przypadku gdy nie istnieje
::       R.RN - nr rubryki w przypadku gdy istnieje
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_osoba:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};
_numer:={? var_pres('_b')=type_of('')   || _b || return(_result) ?};
  _msg:={? var_pres('_c')=type_of(0)    || _c || 0               ?};

R.cntx_psh();
PKO.cntx_psh();
PKO.index('_PKO');
PKO.prefix(_osoba);
_loop:=PKO.first();
{!
|? _loop
|! {? _numer=PKO.N
   || _result:=PKO.R().RN;
      _loop:=0
   ?};
   _loop & (_loop:=PKO.next())
!};
PKO.cntx_pop();
R.cntx_pop();

{? _result & _msg
|| FUN.emsg('Konto o podanym numerze już występuje w kartotece.'@)
?};
_result


\update_rbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2009]
:: OPIS: Weryfikacja danych powiązanych między tabelami PKO i SKID_RBK.
::       Słabe strony - scenariusze:
::          I
::             1. Dodaję konta do tabeli OS_ROR. Konto jest również dodawane do tabeli SKID_RBK.
::             2. Dodaję konto do tabeli PKO. Konto nie zostanie ponownie dodane do tabeli SKID_RBK.
::             3. Usuwam konto z tabeli PKO. Konto jest również usuwane z tabeli SKID_RBK mimo, że nadal występuje w
::                SKID_RBK.
::          II
::             1. Konto jest zapisane we wszystkich trzech tabelach: PKO, OS_ROR, SKID_RBK.
::             2. Poprawiam numer konta w tabeli PKO. Poniższy mechanizm synchronizacji zmienia również konto w
::                SKID_RBK. Zatem konto w OS_ROR nie ma już swojego odpowiednika w SKID_RBK.
::   WE: _a - Rodzaj akcji:
::          D - Dołącz;
::          P - Popraw;
::          U - Usuń;
::       _b - Wskazanie na tabelę - domyślnie cur_tab()
::       _c - Poprzednia wartość numeru konta bankowego. Parametr istotny dla akcji Popraw.
::----------------------------------------------------------------------------------------------------------------------
 _akcja:={? var_pres('_a')=type_of('')     || _a || ''           ?};
   _tab:={? var_pres('_b')=type_of(SYSLOG) || _b || cur_tab(1,1) ?};
   _nrk:={? var_pres('_c')=type_of('')     || _c || _tab.N       ?};

_id:=REF.FIRMA().SYMBOL+'OSOBA';
exec('RB','object');
{? app_info('web_sesid')<>''
|| exec('czytaj','#stalesys',,KST_PAR,'NAROD')
?};

SKID_RBK.cntx_psh();
SKID_RBK.index('TAB');
SKID_RBK.prefix(null,_id,_id,#_tab.OSOBA,null());

{? _akcja='U'
|| {? SKID_RBK.find_key(_nrk,_nrk) || SKID_RBK.del() ?}

|? _akcja='P' & SKID_RBK.find_key(_nrk,_nrk)
|| SKID_RBK.N:=gsub(_tab.N,' ','');
   SKID_RBK.BANK:=_tab.BA;
   SKID_RBK.KRAJ:=RB.getrkraj(2,'KST');
   SKID_RBK.WAL:=KST_PAR.NAROD;
   SKID_RBK.put()

|? ~SKID_RBK.find_key(_nrk,_nrk)
|| SKID_RBK.blank(1);
   SKID_RBK.TAB:=_id;
   SKID_RBK.REF:=#_tab.OSOBA;
   SKID_RBK.N:=gsub(_tab.N,' ','');
   SKID_RBK.KOD:='';
   SKID_RBK.BANK:=_tab.BA;
   SKID_RBK.RD:='N';
   SKID_RBK.KRAJ:=RB.getrkraj(2,'KST');
   SKID_RBK.WAL:=KST_PAR.NAROD;
   SKID_RBK.INNWAL:='N';
   SKID_RBK.AKTYWNY:='T';
   SKID_RBK.FIRMA:=null;
   SKID_RBK.add()
?};

SKID_RBK.cntx_pop();
~~

:Sign Version 2.0 jowisz:1048 2021/04/09 15:26:25 c663158c54cc74e38c1ebf211c18267de3d68559998b0e197ffbc47e49cad7859c59bb0c5428685ac51184b1639fd24af084e6cc288f2f897b64542b3d368c979d21b54e20fceac81c2787ea508a5b31f01460a4cdd0a84e1da110c7a0ebd649b6d5b5e7f221fbc724bd32ad1d92d3d80d865fe27e9cc06e3a125de7f51e489e
