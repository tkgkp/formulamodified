:!UTF-8
:: (c) Asseco Business Solutions S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xfilter.fml [21.14]
:: Utworzony: 26.01.2021
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły obsługujące rozszerzone filtry.
::======================================================================================================================


\_def_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem lub poprawieniem wiersza tabeli XFL_DEF.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
:: ewentualne uzupełnienie wartościami domyślnymi
{? XFL_DEF.SYSTEM='' || XFL_DEF.SYSTEM:='N' ?};

:: ustal kod dla aktualizacji danych
exec('mod_uid','#symsys',XFL_DEF,'SYSTEM','KOD');

1


\_def_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(XFL_DEF,
:: sprawdź wymagane dane i unikalność indeksów
   $("_a.table(_b,"+$_mode+",,'SYSTEM','KOD','TABELA','NAZWA','SYMBOL')"),
:: zweryfikuj dozwolone wartości
   "_a.in_set(_b,'SYSTEM',,'T','N')",
:: sprawdź, czy istnienije tabela o podanym akronimie
   "exec('def_tabela_ae','xfilter')"
)


\_def_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli XFL_DEF.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_def_modb','xfilter') & exec('_def_chk','xfilter',0)


\_def_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli XFL_DEF.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_def_modb','xfilter') & exec('_def_chk','xfilter',1)


\_def_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli XFL_DEF.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',XFL_PAR,'NUMER',XFL_DEF.ref()) &
exec('del_ndx','#table',XFL_ACT,'UNIQUE',XFL_DEF.ref()) &
exec('del_ndx','#table',XFL_USR,'XFL_DEF',XFL_DEF.ref())


\_act_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem lub poprawieniem wiersza tabeli XFL_ACT.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
:: ewentualne uzupełnienie wartościami domyślnymi
{? XFL_ACT.SYSTEM='' || XFL_ACT.SYSTEM:='N' ?};

:: ustal kod dla aktualizacji danych
exec('mod_uid','#symsys',XFL_ACT,'SYSTEM','KOD');

1


\_act_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(XFL_ACT,
:: sprawdź wymagane dane i unikalność indeksów
   $("_a.table(_b,"+$_mode+",'SYSTEM','KOD','XFL_DEF','B_ACTION')"),
:: zweryfikuj dozwolone wartości
   "_a.in_set(_b,'SYSTEM',,'T','N')"
)


\_act_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli XFL_ACT.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_act_modb','xfilter') & exec('_act_chk','xfilter',0)


\_act_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli XFL_ACT.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_act_modb','xfilter') & exec('_act_chk','xfilter',1)


\_act_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli XFL_ACT.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
1


\_par_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem lub poprawieniem wiersza tabeli XFL_PAR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
{? XFL_PAR.TYP=exec('type_reference','#field')
|| XFL_PAR.DLUGOSC:=16;
   XFL_PAR.PRECYZJA:=0

|? XFL_PAR.TYP=exec('type_integer','#field') |
   XFL_PAR.TYP=exec('type_date','#field') |
   XFL_PAR.TYP=exec('type_time','#field')
|| XFL_PAR.PRECYZJA:=0
?};

XFL_PAR.KOD:=form(XFL_PAR.KOD);
XFL_PAR.SYMBOL:=form(XFL_PAR.SYMBOL);
XFL_PAR.KOL_ZAS:=+XFL_PAR.SYMBOL;

1


\_par_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(XFL_PAR,
:: sprawdź wypełnienie pól i unikalność indeksów
   $("_a.table(_b,"+$_mode+",,'KOD','NAZWA','SYMBOL')"),
:: dla typu liczby rzeczywistej wymagana jest precyzja
   "  {? _b.TYP<>exec('type_real','#field') || return(1) ?};
      _a.record(_b,,'PRECYZJA')
   ",
:: sprawdź dozwolony zakres dla długości
   "  {? _b.DLUGOSC<0 | _b.DLUGOSC>100
      || _a.err_fld(_b,'DLUGOSC',1);
         return(0)
      ?};
      1
   ",
:: sprawdź dozwolony zakres dla precyzji
   "  {? _b.PRECYZJA<0 | _b.PRECYZJA>10
      || _a.err_fld(_b,'PRECYZJA',1);
         return(0)
      ?};
      1
   ",
:: porównaj precyzję i długość
   "  {? _b.PRECYZJA<>0 & (_b.DLUGOSC-1)<=_b.PRECYZJA
      || _a.err_fld(_b,'PRECYZJA',1);
         return(0)
      ?};
      1
   "
)


\_par_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli XFL_PAR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_par_modb','xfilter') & exec('_par_chk','xfilter',0)


\_par_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz po dołączeniu wiersza tabeli XFL_PAR.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: zgodny ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
:: podstawowy warunek dalszego działania
{? ~_a | do_state()<>1 || return() ?};

_ref:=XFL_PAR.ref();
_lim:=XFL_PAR.NUMER;
XFL_PAR.cntx_psh();
XFL_PAR.index('NUMER');
XFL_PAR.prefix(XFL_PAR.XFL_DEF);
_loop:=XFL_PAR.last();
{!
|? _loop & _lim<=XFL_PAR.NUMER
|! {? XFL_PAR.ref()<>_ref
   || XFL_PAR.NUMER+=1;
      XFL_PAR.put()
   ?};
   _loop:=XFL_PAR.prev()
!};
XFL_PAR.cntx_pop();
~~


\_par_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli XFL_PAR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_par_modb','xfilter') & exec('_par_chk','xfilter',1)


\_par_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli XFL_PAR.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',XFL_FML,'UNIQUE',XFL_PAR.ref()) &
exec('del_ndx','#table',XFL_VAL,'XFL_PAR',XFL_PAR.ref())


\_par_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz po usunięciu wiersza tabeli XFL_PAR.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: zgodny ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
:: podstawowy warunek dalszego działania
{? ~_a | do_state()<>1 || return() ?};

XFL_PAR.cntx_psh();
XFL_PAR.index('NUMER');
XFL_PAR.prefix(bfld('XFL_DEF'));
_loop:=XFL_PAR.first();
{! _numer:=1
|? _loop
|! {? XFL_PAR.NUMER<>_numer
   || XFL_PAR.NUMER:=_numer;
      XFL_PAR.put()
   ?};
   _loop:=XFL_PAR.next()
!};
XFL_PAR.cntx_pop();
~~


\_fml_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem lub poprawieniem wiersza tabeli XFL_FML.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
1


\_fml_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(XFL_FML,
:: sprawdź wypełnienie pól i unikalność indeksów
   $("_a.table(_b,"+$_mode+",,'KOD','XFL_PAR','SLO_KOD')")
)


\_fml_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli XFL_FML.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_fml_modb','xfilter') & exec('_fml_chk','xfilter',0)


\_fml_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli XFL_PAR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_fml_modb','xfilter') & exec('_fml_chk','xfilter',1)


\_usr_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem lub poprawieniem wiersza tabeli XFL_USR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
{? XFL_USR.DOSTEPNY='N'
|| XFL_USR.ULUBIONY:='N'
?};
1


\_usr_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(XFL_USR,
:: sprawdź wymagane dane i unikalność indeksów
   $("_a.table(_b,"+$_mode+",'USERS','FIRMA','XFL_DEF','DOSTEPNY','ULUBIONY')"),
:: zweryfikuj dozwolone wartości
   "_a.in_set(_b,'DOSTEPNY',,'T','N')",
   "_a.in_set(_b,'ULUBIONY',,'T','N')"
)


\_usr_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli XFL_USR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_usr_modb','xfilter') & exec('_usr_chk','xfilter',0)


\_usr_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli XFL_USR.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_usr_modb','xfilter') & exec('_usr_chk','xfilter',1)


\_usr_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli XFL_USR.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',XFL_SES,'UNIQUE',XFL_USR.ref())


\_ses_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli XFL_SES.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',XFL_VAL,'UNIQUE',XFL_SES.ref())


\adm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Udostępnia konfigurację rozszerzonych filtrów.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_mode:='maximized_with_title';
:: utwórz panel zarządzania konfiguracją
_grp:=XFL_DEF.grp_make('Rozszerzone filtry'@,
:: przed otwarciem
   "params_exec('adm__bo','xfilter')",
:: identyfikator, położenie
   '#zws_par_xfl',,,
:: podczas zamykania
   "params_exec('adm__oc','xfilter')"
);
:: definicje parametrów
XFL_DEF.grp_sel(_grp,XFL_DEF,'WER',,
:: po odświeżeniu
   "params_exec('adm_def_ar','xfilter')",,,,,,,,
:: tryb
   _mode
);
:: parametry filtrów
XFL_DEF.grp_splt(_grp,,'vertical','right','0, 60%');
XFL_DEF.grp_sel(_grp,XFL_PAR,'WER','Parametry'@,
:: po odświeżeniu
   "params_exec('adm_par_ar','xfilter')",,,15,
:: przed obsługą
   "params_exec('adm_par_bs','xfilter',_a)",,,,
:: tryb
   _mode
);
:: formuły parametrów
XFL_DEF.tab_splt(_grp,,'horizontal','bottom');
XFL_DEF.grp_sel(_grp,XFL_FML,'WER',,
:: po odświeżeniu
   "params_exec('fml_rekord_b','xfilter',1)",,,,
:: przed obsługą
   "params_exec('adm_fml_bs','xfilter',_a)",,,,
:: tryb
   _mode
);
:: czynności dla filtrów
XFL_DEF.grp_sel(_grp,XFL_ACT,'WER','Uprawnienia'@,,,,,
:: przed obsługą
   "params_exec('adm_act_bs','xfilter',_a)",,,,
:: tryb
   _mode
);

XFL_DEF.cntx_psh();
XFL_DEF.win_sel(_grp);
XFL_DEF.win_patt('WZO');
XFL_DEF.select();
XFL_DEF.cntx_pop();
XFL_DEF.win_del(_grp);
~~


\adm__bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed obsługą panelu rozszerzonych filtrów.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
XFL_DEF.index('NAZWA');
XFL_DEF.prefix();

XFL_PAR.cntx_psh();
XFL_PAR.index('NUMER');

XFL_FML.cntx_psh();
XFL_FML.index('NAZWA');

XFL_ACT.cntx_psh();
XFL_ACT.index('UID');

B_ACTION.cntx_psh();

XFL_DEF.win_edit(exec('def_mk_edit','xfilter'));
XFL_DEF.win_patt('WZO');

XFL_FML.win_edit(exec('fml_mk_edit','xfilter'));
XFL_FML.win_patt('RED');

XFL_ACT.win_edit(exec('act_mk_edit','xfilter'));
XFL_ACT.win_patt('WZO');

exec('init_fld_fml','ext_slo');
1


\adm__oc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Podczas zamykania panelu rozszerzonych filtrów.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
B_ACTION.cntx_pop();
XFL_ACT.cntx_pop();
XFL_FML.cntx_pop();
XFL_PAR.cntx_pop();

_release_wnd:="
   _wnd:=_a.win_edit('?');
   {? _wnd<>''
   || _a.win_edit('');
      _a.win_edel(_wnd)
   ?};
   _a.win_patt('')
";

_release_wnd(XFL_DEF);
_release_wnd(XFL_FML);
_release_wnd(XFL_ACT);

1


\adm_def_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po zmianie wiersza w okienku WER tabeli XFL_DEF w panelu definicji filtrów.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
grp_disp(XFL_PAR,'WER',1);
grp_disp(XFL_ACT,'WER',1);
~~


\adm_par_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po zmianie wiersza w okienku WER tabeli XFL_PAR w panelu definicji filtrów.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
params_exec('par_rekord_b','xfilter',1);
grp_disp(XFL_FML,'WER',1);
~~


\adm_par_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed obsługą okienka WER tabeli XFL_PAR w panelu definicji filtrów.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(XFL_DEF,'WER')
|| return('#disable')
?};

XFL_PAR.prefix(XFL_DEF.ref());
~~


\adm_fml_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed obsługą okienka WER tabeli XFL_FML w panelu definicji filtrów.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(XFL_PAR,'WER')
|| return('#disable')
?};

XFL_FML.prefix(XFL_PAR.ref());
~~


\adm_act_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed obsługą okienka WER tabeli XFL_ACT w panelu definicji filtrów.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(XFL_DEF,'WER')
|| return('#disable')
?};

XFL_ACT.prefix(XFL_DEF.ref());
~~


\def_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zwraca wskazanie bieżącego wiersza w tabeli XFL_DEF.
::   WE:
::   WY: wskazanie wiersza tabeli XFL_DEF
::----------------------------------------------------------------------------------------------------------------------
XFL_DEF.ref()


\def_system_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza, czy wiersz tabeli XFL_DEF nie jest zapisem systemowym.
::   WE:
::   WY: 0/1 - zapis nie może być modyfikowany/można zmieniać dane
::----------------------------------------------------------------------------------------------------------------------
exec('isEqual','#field',XFL_DEF,'SYSTEM','N')


\def_system_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed edycją pola SYSTEM w wierszu tabeli XFL_DEF.
::   WE:
::   WY: 0/1 - edycja zablokowana/możliwa
::----------------------------------------------------------------------------------------------------------------------
exec('runtime_dro','#system')


\def_system_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po edycji pola SYSTEM tabeli XFL_DEF.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('mod_uid','#symsys',XFL_DEF,'SYSTEM','KOD');

{? exec('def_system_n','xfilter')
|| {? XFL_DEF.SYMBOL<>'' & 1+XFL_DEF.SYMBOL<>'Q'
   || XFL_DEF.SYMBOL:='Q'+XFL_DEF.SYMBOL
   ?}
|| {? XFL_DEF.SYMBOL<>'' & 1+XFL_DEF.SYMBOL='Q'
   || XFL_DEF.SYMBOL:=1-XFL_DEF.SYMBOL;
      exec('def_symbol_ae','xfilter')
   ?}
?};

exec('def_fld_opt','xfilter');
1


\def_kod_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po edycji pola KOD tabeli XFL_DEF.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('def_system_n','xfilter') & XFL_DEF.KOD<>'' & XFL_DEF.SYMBOL=''
|| {? XFL_DEF.TABELA=''
   || _acr:=spli_str(XFL_DEF.KOD,'_');
      {? var_pres(_acr[1])=type_of(SYSLOG)
      || XFL_DEF.TABELA:=_acr[1]
      ?}
   ?};
   XFL_DEF.SYMBOL:=XFL_DEF.KOD
?};
1


\def_symbol_pt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wzorzec edycji pola SYMBOL tabeli XFL_DEF. Dla definicji użytkownika symbol musi zaczynać się do litery 'Q'.
::       Działanie zgodne z funkcjonalnością MacroBuidera.
::   WE:
::   WY: ciąg znaków określający wzorzec edycji pola
::----------------------------------------------------------------------------------------------------------------------
{? exec('def_system_n','xfilter')
|| '\\QUu!'
|| ''
?}


\def_symbol_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po edycji pola SYMBOL tabeli XFL_DEF
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('def_system_n','xfilter') & XFL_DEF.SYMBOL<>'' & XFL_DEF.KOD=''
|| XFL_DEF.KOD:=XFL_DEF.SYMBOL
?};
1


\def_tabela_pt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wzorzec pola TABELA w wierszu tabeli XFL_DEF. Dostępne tylko wielkie litery, cyfry i znaki.
::   WE:
::   WY: wzorzec edycji pola
::----------------------------------------------------------------------------------------------------------------------
'Uu!'


\def_tabela_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po edycji pola TABELA wiersza tabeli XFL_DEF.
::   WE:
::   WY: 1 w przypadku, gdy wartość pola jest pusta lub jest akronimem tabeli, wpp 0
::----------------------------------------------------------------------------------------------------------------------
{? XFL_DEF.TABELA=''
|| return(1)
?};

{? (_chk:=exec('def_tabela_chk','xfilter'))<>''
:: tabela nie istnieje
|| __CHK.err_msg(_chk);
   return(0)
?};

1


\def_tabela_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza, czy wartość XFL_DEF.TABELA jest akronimem tabeli.
::   WE:
::   WY: treść komunikatu w przypadku błędu, wpp tekst pusty
::----------------------------------------------------------------------------------------------------------------------
{? var_pres(XFL_DEF.TABELA)<>type_of(SYSLOG) | ($('%1.name(1)'[XFL_DEF.TABELA]))()=''
|| return('"%1" nie jest akronimem tabeli.'@[XFL_DEF.TABELA])
?};

''


\def_tabela_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Obsługa przycisku pola TABELA w wierszu tabeli XFL_DEF. Pozwala na wybór zdefiniowanej tabeli.
::   WE:
::   WY: akronim wybranej tabeli lub ~~ w przypadku rezygnacji
::----------------------------------------------------------------------------------------------------------------------
:: lista tabel dostępnych do wyboru
_BUF:=exec('def_tabela','xfilter');

: wybór tabeli
_BUF.find_key(XFL_DEF.TABELA);
{? _BUF.select(,1)
|| _BUF.SYMBOL
|| ~~
?}


\def_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zwraca listę tabel dostępnych do wykorzystania.
::   WE:
::   WY: alias tabeli tymczasowej
::----------------------------------------------------------------------------------------------------------------------
: tabela tymczasowa umożliwiająca wybór
_BUF:=exec('wyb_symbol_tab','#stalesys');
_BUF.hdr_sel('Dostępne tabele'@);

: lista tabel stałych
{! _num:=1..tab_num()
|! {? tab_real(_num)
   || _acr:=tab_acr(_num);
      _pfx:=($('1+%1.name(1)'[_acr]))();
      {? ~('0'<=_pfx & _pfx<='9')
      || _BUF.blank();
         _BUF.SYMBOL:=_acr;
         _BUF.OPIS:=($_acr)().comment();
         _BUF.add()
      ?}
   ?}
!};

_BUF


\def_fld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Ustawia opcje pól w okienku edycji tabeli XFL_DEF.
::   WE: _a [INTEGER] - wymuszona dostępność pól w okienku
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_sys:=
   {? var_pres('_a')<>type_of(0)
   || ~exec('def_system_n','xfilter')
   || _a=0
   ?};
_dro:=
   {? var_pres('_a')<>type_of(0)
   || exec('runtime_dro','#system')
   || _a<>0
   ?};

:: bieżące okienko edycji
_wnd:=XFL_DEF.win_edit('?');

_state:='editable=%1'[$(_sys & _dro)];
XFL_DEF.efld_opt(_wnd,_state,,'KOD');

_state:='editable=%1'[$(~_sys | _dro)];
XFL_DEF.efld_opt(_wnd,_state,,'SYMBOL');
XFL_DEF.efld_opt(_wnd,_state,,'NAZWA');
XFL_DEF.efld_opt(_wnd,_state,,'OPIS');
XFL_DEF.efld_opt(_wnd,_state,,'TABELA');
XFL_DEF.efld_opt(_wnd,_state,,'FL_JOIN');
XFL_DEF.efld_opt(_wnd,_state,,'FL_WHERE');
~~


\def_mk_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Tworzy okienko z ewentualną edycją danych wzorcowych.
::   WE:
::   WY: akronim okienka
::----------------------------------------------------------------------------------------------------------------------
:: utwórz okienko z opcjonalną częścią dla danych wzorcowych
_wnd:=XFL_DEF.mk_edit('Definicja filtra'@,,'#red',,,'html_maximized');
{? exec('runtime_dro','#system')
|| XFL_DEF.win_ewin(_wnd,,'DRO')
?};
XFL_DEF.win_ewin(_wnd,,'RED');

:: dodaj przyciski Wskazówki, OK i Anuluj
XFL_DEF.win_ebtn(_wnd,'text=%1,align=begin,display=1'['&Wskazówki'@],"exec('x_wskazowki_a','xfilter')");
_btn:=XFL_DEF.win_ebtn(_wnd,'text=%1'[exec('text_red_ok','#window')],"'key:F2'");
XFL_DEF.btn_eopt(_wnd,_btn,'tooltip=%1'[exec('help_red_ok','#window')]);
_btn:=XFL_DEF.win_ebtn(_wnd,'text=%1'['&Anuluj'@],"'key:Esc'");
XFL_DEF.btn_eopt(_wnd,_btn,'tooltip=%1'[exec('help_red_esc','#window')]);

_wnd


\def_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem wiersza w okienkach tabeli XFL_DEF.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
1


\def_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Dołączenie wiersza w okienkach tabeli XFL_DEF.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
XFL_DEF.blank();
XFL_DEF.memo_set('','OPIS');
XFL_DEF.memo_set('','FL_SORT');
XFL_DEF.memo_set('','FL_JOIN');
XFL_DEF.memo_set('','FL_WHERE');
exec('def_fld_opt','xfilter');

{? XFL_DEF.edit("
      {? exec('_def_modb','xfilter')
      || exec('_def_chk','xfilter',0)
      ?}
   ")
:: wprowadzono poprawne informacje, dołącz wiersz do tabeli
|| XFL_DEF.add() &
   XFL_DEF.memo_put(,'OPIS') &
   XFL_DEF.memo_put(,'FL_SORT') &
   XFL_DEF.memo_put(,'FL_JOIN') &
   XFL_DEF.memo_put(,'FL_WHERE')
?};

exec('def_fld_opt','xfilter',1);
~~


\def_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed poprawieniem wiersza w okienkach tabeli XFL_DEF.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('def_system_n','xfilter') | exec('runtime_dro','#system')


\def_popraw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Poprawienie wiersza w okienkach tabeli XFL_DEF.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
XFL_DEF.get();
XFL_DEF.memo_get(,'OPIS');
XFL_DEF.memo_get(,'FL_SORT');
XFL_DEF.memo_get(,'FL_JOIN');
XFL_DEF.memo_get(,'FL_WHERE');
exec('def_fld_opt','xfilter');

{? XFL_DEF.edit("
      {? exec('_def_modb','xfilter')
      || exec('_def_chk','xfilter',1)
      ?}
   ")
:: wprowadzono poprawne informacje, modyfikuj wiersz w tabeli
|| XFL_DEF.put() &
   XFL_DEF.memo_put(,'OPIS') &
   XFL_DEF.memo_put(,'FL_SORT') &
   XFL_DEF.memo_put(,'FL_JOIN') &
   XFL_DEF.memo_put(,'FL_WHERE')
?};

exec('def_fld_opt','xfilter',1);
~~


\def_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed usunięciem wiersza w okienkach tabeli XFL_DEF.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('def_system_n','xfilter') | exec('runtime_dro','#system')


\def_rekord_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Rekord przed okienek tabeli XFL_DEF.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 || return() ?};

_aid:='';
{? ~exec('def_dolacz_b','xfilter')
|| _aid:='D:D'
?};
{? ~exec('def_popraw_b','xfilter')
|| _aid:='P'+_aid
?};
{? XFL_DEF.sel_size()=0 & ~exec('def_usun_b','xfilter')
|| _aid:='U'+_aid
?};

XFL_DEF.actions_grayed(cur_win(1,1),_aid);
~~


\def_has_access
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza, czy dla użytkownika filtr może być dostępny.
::   WE: _a [_USERS] - wskazanie użytkownika, jeśli pominięte, to przyjęte będzie wskazanie bieżącego użytkownika
::       _b [_FIRMA] - wskazanie firmy, jeśli pominięty, to przyjęte będzie wskazanie bieżącej firmy
::       _c [_XFL_DEF] - wskazanie definicji filtra, jeśli pominięte, to przyjęte będzie wskazanie bieżącego
::   WY: wynik testu: 0/1 - filtr dostępny/brak dostępu
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_usr:=
   {? var_pres('_a')<>type_of(null) | _a=null | ref_tab(_a)<>USERS
   || OPERATOR.USER
   || _a
   ?};
_fir:=
   {? var_pres('_b')<>type_of(null) | _b=null | ref_tab(_b)<>FIRMA
   || exec('ref_firma','ustawienia')
   || _b
   ?};
_def:=
   {? var_pres('_c')<>type_of(null) | _c=null | ref_tab(_c)<>XFL_DEF
   || XFL_DEF.ref()
   || _c
   ?};

_test:=0;
XFL_DEF.cntx_psh();
XFL_DEF.prefix();
{? XFL_DEF.seek(_def) & XFL_DEF.DOSTEPNY='T'
|| _test:=exec('act_has_access','xfilter',_usr,_fir,_def)
?};
XFL_DEF.cntx_pop();

_test


\act_system_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza, czy wiersz tabeli XFL_ACT nie jest zapisem systemowym.
::   WE:
::   WY: 0/1 - zapis nie może być modyfikowany/można zmieniać dane
::----------------------------------------------------------------------------------------------------------------------
exec('isEqual','#field',XFL_ACT,'SYSTEM','N')


\act_system_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed edycją pola SYSTEM w wierszu tabeli XFL_ACT.
::   WE:
::   WY: 0/1 - edycja zablokowana/możliwa
::----------------------------------------------------------------------------------------------------------------------
exec('runtime_dro','#system')


\act_system_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po edycji pola SYSTEM tabeli XFL_ACT.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('mod_uid','#symsys',XFL_ACT,'SYSTEM','KOD');
{? XFL_ACT.KOD=''
|| exec('act_kod_f3','xfilter')
?};
1


\act_kod_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wartość początkowa pola KOD tabeli XFL_ACT.
::   WE:
::   WY: numer parametru
::----------------------------------------------------------------------------------------------------------------------
$XFL_ACT.tm_stamp()


\act_kod_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed edycją pola KOD w wierszu tabeli XFL_FML.
::   WE:
::   WY: numer parametru
::----------------------------------------------------------------------------------------------------------------------
~exec('act_system_n','xfilter')


\act_kod_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed edycją pola KOD w wierszu tabeli XFL_FML.
::   WE:
::   WY: numer parametru
::----------------------------------------------------------------------------------------------------------------------
_kod:=XFL_ACT.XFL_DEF().KOD;
_sfx:='_ACT_';
{? _kod++_sfx<>_sfx
|| _kod+=_sfx
?};
XFL_ACT.KOD:=_kod;
0


\act_mk_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Tworzy okienko z ewentualną edycją danych wzorcowych.
::   WE:
::   WY: akronim okienka
::----------------------------------------------------------------------------------------------------------------------
:: utwórz okienko z opcjonalną częścią dla danych wzorcowych
_wnd:=XFL_ACT.mk_edit('Czynność dla filtra'@,,'#xfl_act_red');
{? exec('runtime_dro','#system')
|| XFL_ACT.win_ewin(_wnd,,'DRO')
?};
XFL_ACT.win_ewin(_wnd,,'RED');

:: dodaj przyciski OK i Anuluj
_btn:=XFL_ACT.win_ebtn(_wnd,'text=%1'[exec('text_red_ok','#window')],"'key:F2'");
XFL_ACT.btn_eopt(_wnd,_btn,'tooltip=%1'[exec('help_red_ok','#window')]);
_btn:=XFL_ACT.win_ebtn(_wnd,'text=%1'['&Anuluj'@],"'key:Esc'");
XFL_ACT.btn_eopt(_wnd,_btn,'tooltip=%1'[exec('help_red_esc','#window')]);

_wnd


\act_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem wiersza w okienkach tabeli XFL_ACT.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
1


\act_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed poprawieniem wiersza w okienkach tabeli XFL_ACT.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('act_system_n','xfilter') | exec('runtime_dro','#system')


\act_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed usunięciem wiersza w okienkach tabeli XFL_ACT.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('act_system_n','xfilter') | exec('runtime_dro','#system')


\act_rekord_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Rekord przed okienek tabeli XFL_ACT.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 || return() ?};

_aid:='';
{? ~exec('act_dolacz_b','xfilter')
|| _aid:='D:D'
?};
{? ~exec('act_popraw_b','xfilter')
|| _aid:='P'+_aid
?};
{? XFL_ACT.sel_size()=0 & ~exec('act_usun_b','xfilter')
|| _aid:='U'+_aid
?};

XFL_ACT.actions_grayed(cur_win(1,1),_aid);
~~


\act_rekord_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Rekord po okienek tabeli XFL_ACT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('_act_chk','xfilter',-menu_txt()='popraw')


\act_has_access
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza, czy dla użytkownika filtr może być dostępny.
::   WE: _a [_USERS] - wskazanie użytkownika, jeśli pominięte, to przyjęte będzie wskazanie bieżącego użytkownika
::       _b [_FIRMA] - wskazanie firmy, jeśli pominięty, to przyjęte będzie wskazanie bieżącej firmy
::       _c [_XFL_DEF] - wskazanie definicji filtra, jeśli pominięte, to przyjęte będzie wskazanie bieżącego
::   WY: wynik testu: 0/1 - filtr dostępny/brak dostępu
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_usr:=
   {? var_pres('_a')<>type_of(null) | _a=null | ref_tab(_a)<>USERS
   || OPERATOR.USER
   || _a
   ?};
_fir:=
   {? var_pres('_b')<>type_of(null) | _b=null | ref_tab(_b)<>FIRMA
   || exec('ref_firma','ustawienia')
   || _b
   ?};
_def:=
   {? var_pres('_c')<>type_of(null) | _c=null | ref_tab(_c)<>XFL_DEF
   || XFL_DEF.ref()
   || _c
   ?};

_test:=1;
XFL_ACT.cntx_psh();
XFL_ACT.index('UNIQUE');
XFL_ACT.prefix(_def);
{? XFL_ACT.first()
|| _test:=0;
   _loop:=1;
   {!
   |? _loop & ~_test
   |! _test:=exec('chk_role','#b__box',_usr,XFL_ACT.B_ACTION().UID,_fir);
      _loop:=(~_test & XFL_ACT.next())
   !}
?};
XFL_ACT.cntx_pop();

_test


\par_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zwraca wskazanie bieżącego wiersza w tabeli XFL_PAR.
::   WE:
::   WY: wskazanie wiersza tabeli XFL_PAR
::----------------------------------------------------------------------------------------------------------------------
XFL_PAR.ref()


\par_kod_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wartość początkowa pola KOD tabeli XFL_PAR.
::   WE:
::   WY: numer parametru
::----------------------------------------------------------------------------------------------------------------------
{? exec('def_system_n','xfilter')
|| $XFL_PAR.tm_stamp()
|| XFL_DEF.KOD+'_'
?}


\par_kod_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed edycją pola KOD w wierszu tabeli XFL_PAR.
::   WE:
::   WY: numer parametru
::----------------------------------------------------------------------------------------------------------------------
~exec('def_system_n','xfilter')


\par_kod_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Obsługa klawisza F3 w polu KOD wiersza tabeli XFL_PAR.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
XFL_PAR.KOD:=XFL_DEF.KOD+'_'+XFL_PAR.SYMBOL;
~~


\par_kod_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po edycji pola KOD tabeli XFL_PAR.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('def_system_n','xfilter') & XFL_PAR.KOD<>'' & XFL_PAR.SYMBOL='' &
   XFL_PAR.KOD<>XFL_DEF.KOD & XFL_PAR.KOD*XFL_DEF.KOD=1
|| _symbol:=+XFL_DEF.KOD-XFL_PAR.KOD;
   {!
   |? 1+_symbol='_'
   |! _symbol:=1-_symbol
   !};
   XFL_PAR.SYMBOL:=_symbol
?};
1


\par_numer_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wartość początkowa pola NUMER tabeli XFL_PAR.
::   WE:
::   WY: numer parametru
::----------------------------------------------------------------------------------------------------------------------
_numer:=1;
XFL_PAR.cntx_psh();
XFL_PAR.get();
{? XFL_PAR.XFL_DEF=XFL_DEF.ref()
|| _numer+=XFL_PAR.NUMER
?};
XFL_PAR.cntx_pop();
_numer


\par_symbol_pt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wzorzec edycji pola SYMBOL tabeli XFL_PAR. Dla definicji użytkownika symbol musi zaczynać się do litery 'Q'.
::       Działanie zgodne z funkcjonalnością MacroBuidera.
::   WE:
::   WY: ciąg znaków określający wzorzec edycji pola
::----------------------------------------------------------------------------------------------------------------------
{? exec('def_system_n','xfilter')
|| '\\QUu!'
|| ''
?}


\par_symbol_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po edycji pola SYMBOL tabeli XFL_PAR.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('def_system_n','xfilter') & XFL_PAR.SYMBOL<>'' & (XFL_PAR.KOD=XFL_DEF.KOD | XFL_PAR.KOD=XFL_DEF.KOD+'_')
|| XFL_PAR.KOD:='%1%2%3'[XFL_DEF.SYMBOL,{? XFL_DEF.KOD+1<>'_' || '_' || '' ?},XFL_PAR.SYMBOL]
?};
1


\par_typ_xa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed wyświetleniem i po edycji pola TYP wiersza tabel XFL_PAR.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_ustaw:="XFL_PAR.efld_opt(XFL_PAR.win_edit('?'),'enable=%1,mark=%1'[$_b],,_a)";

_ustaw('DLUGOSC',1);
_ustaw('PRECYZJA',0);

{? XFL_PAR.TYP=exec('type_real','#field')
|| _ustaw('PRECYZJA',1)

|? XFL_PAR.TYP=exec('type_reference','#field')
|| _ustaw('DLUGOSC',0)
?};

{? XFL_PAR.DLUGOSC=0
|| XFL_PAR.DLUGOSC:=exec('type_length','#field',XFL_PAR.TYP)
?};
1


\par_dlugosc_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Obsługa klawisza F3 w polu DLUGOSC wiersza tabeli XFL_PAR.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
XFL_PAR.DLUGOSC:=exec('type_length','#field',XFL_PAR.TYP);
~~


\fml_mk_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Tworzy okienko z ewentualną edycją danych wzorcowych.
::   WE:
::   WY: akronim okienka
::----------------------------------------------------------------------------------------------------------------------
:: utwórz okienko z opcjonalną częścią dla danych wzorcowych
_wnd:=XFL_FML.mk_edit('Formuła parametru'@,,'#red');
{? exec('runtime_dro','#system')
|| XFL_FML.win_ewin(_wnd,,'DRO')
?};
XFL_FML.win_ewin(_wnd,,'RED');

:: dodaj przyciski Wskazówki, OK i Anuluj
XFL_FML.win_ebtn(_wnd,'text=%1,align=begin,display=1'['&Wskazówki'@],"exec('x_wskazowki_a','xfilter')");
_btn:=XFL_FML.win_ebtn(_wnd,'text=%1'[exec('text_red_ok','#window')],"'key:F2'");
XFL_FML.btn_eopt(_wnd,_btn,'tooltip=%1'[exec('help_red_ok','#window')]);
_btn:=XFL_FML.win_ebtn(_wnd,'text=%1'['&Anuluj'@],"'key:Esc'");
XFL_FML.btn_eopt(_wnd,_btn,'tooltip=%1'[exec('help_red_esc','#window')]);

_wnd


\par_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem wiersza w okienkach tabeli XFL_PAR.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('def_system_n','xfilter') | exec('runtime_dro','#system')


\par_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed poprawieniem wiersza w okienkach tabeli XFL_PAR.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('def_system_n','xfilter') | exec('runtime_dro','#system')


\par_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed usunięciem wiersza w okienkach tabeli XFL_PAR.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('def_system_n','xfilter') | exec('runtime_dro','#system')


\par_wgore_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed przesunięciem w górę wiersza w okienkach tabeli XFL_PAR.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
{? exec('def_system_n','xfilter') | exec('runtime_dro','#system')
|| {? XFL_PAR.size()>1
   || XFL_PAR.NUMER<>1
   ?}
?}


\par_wgore_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przesunięcie w górę wiersza w okienkach tabeli XFL_PAR.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
XFL_PAR.cntx_psh();
XFL_PAR.index('NUMER');
XFL_PAR.prefix(XFL_PAR.XFL_DEF);
{? XFL_PAR.prev()
|| XFL_PAR.NUMER+=1;
   XFL_PAR.put()
?};
XFL_PAR.cntx_pop();
XFL_PAR.NUMER-=1;
XFL_PAR.put();
~~


\par_wdol_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed przesunięciem w dól wiersza w okienkach tabeli XFL_PAR.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
{? exec('def_system_n','xfilter') | exec('runtime_dro','#system')
|| {? XFL_PAR.size()>1
   || XFL_PAR.NUMER<>XFL_PAR.size()
   ?}
?}


\par_wdol_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przesunięcie w dół wiersza w okienkach tabeli XFL_PAR.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
XFL_PAR.cntx_psh();
XFL_PAR.index('NUMER');
XFL_PAR.prefix(XFL_PAR.XFL_DEF);
{? XFL_PAR.next()
|| XFL_PAR.NUMER-=1;
   XFL_PAR.put()
?};
XFL_PAR.cntx_pop();
XFL_PAR.NUMER+=1;
XFL_PAR.put();
~~


\par_rekord_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Rekord przed okienek tabeli XFL_PAR.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 || return() ?};

_aid:='';
{? ~exec('par_dolacz_b','xfilter')
|| _aid:='D:D'
?};
{? ~exec('par_popraw_b','xfilter')
|| _aid:='P'+_aid
?};
{? ~exec('par_usun_b','xfilter')
|| _aid:='U'+_aid
?};
{? ~exec('par_wgore_b','xfilter')
|| _aid:='R(G)'+_aid
?};
{? ~exec('par_wdol_b','xfilter')
|| _aid:='R(D)'+_aid
?};

XFL_PAR.actions_grayed(cur_win(1,1),_aid);
~~


\par_rekord_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Rekord po okienek tabeli XFL_PAR.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('_par_chk','xfilter',-menu_txt()='popraw')


\par_okienko_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed wyświetleniem okienka wertowania tabeli XFL_PAR.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
XFL_PAR.win_edit({? exec('runtime_dro','#system') || 'DRO' || 'RED' ?});
XFL_PAR.win_patt('WZO');
1


\par_edytuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Udostępnia do edycji parametry filtra.
::   WE: _a _XFL_DEF - wskazanie definicji filtra
::   WY: alias tabeli tymczasowej lub ~~ jeśli filtr nie ma parametrów
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_def:=_a;

_BUF:=exec('par_mk_buf','xfilter',_def);

{? type_of(_BUF)<>type_of(SYSLOG)
:: filtr nie ma parametrów
|| return(~~)
?};

_BUF.blank();

{? (_wnd:=exec('par_mk_wnd','xfilter',_def,_BUF))<>''
|| _chk:="exec('par_sprawdz','xfilter',params_get().def,cur_tab())";
   params_set('def',_def);
   _BUF.win_edit(_wnd);
   {? _BUF.edit(_chk)
::    zapisz wartości
   || _BUF.add()
   ?}
|| _BUF.add()
?};

_BUF


\par_sprawdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Sprawdza poprawność parametrów filtra.
::   WE: _a _XFL_DEF - wskazanie definicji filtra
::       _b TABLE - alias tabeli tymczasowej
::   WY: zgodny ze specyfikacją narzędzi dla metody edit klasy TABLE
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_def:=_a;
_BUF:=_b;

_err:=~~;
XFL_PAR.cntx_psh();
XFL_PAR.index('NUMER');
XFL_PAR.prefix(_def);
_loop:=XFL_PAR.first();
{!
|? _loop & type_of(_err)=type_of(~~)
|! {? XFL_PAR.WYMAGANY='T'
   || _fld:=XFL_PAR.SYMBOL;
      {? XFL_PAR.WIDOCZNY='T'
      || {? (_chk:=__CHK.record(_BUF,,_fld))<>''
         || _err:=_chk
         ?}
      || {? (_chk:=__CHK.record(_BUF,1,_fld))<>''
         || _err:=0;
            __CHK.err_fld(_BUF,_fld,1,
               '\nParametr jest zdefiniowany jako ukryty.'
               '\nWartość parametru nie została ustalona.'@
            )
         ?}
      ?}
   ?};
   _loop:=XFL_PAR.next()
!};
XFL_PAR.cntx_pop();

{? type_of(_err)<>type_of(~~)
|| _err
|| 1
?}


\par_mk_buf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Tworzy tabelę zawierającą wartości parametrów.
::   WE: _a _XFL_DEF - wskazanie definicji filtra
::   WY: alias tabeli tymczasowej lub ~~ jeśli filtr nie ma parametrów
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_def:=_a;

_create:='tab_tmp(1';
_update:='~~';
XFL_FML.cntx_psh();
XFL_FML.index('SYMBOL');
XFL_PAR.cntx_psh();
XFL_PAR.index('KOL_ZAS');
XFL_PAR.prefix(_def);
_loop:=_make:=XFL_PAR.first();
{!
|? _loop
|! _create+=',\'%1\',\'%2\',\'%3\''[
      XFL_PAR.SYMBOL,
      {? XFL_PAR.TYP=exec('type_string','#field')
      || 'STRING[%1]'[$XFL_PAR.DLUGOSC]
      |? XFL_PAR.TYP=exec('type_reference','#field')
      || 'STRING[16]'
      || XFL_PAR.TYP
      ?},
      XFL_PAR.NAZWA
   ];
   XFL_FML.prefix(XFL_PAR.ref());
   _loop:=XFL_FML.first();
   {!
   |? _loop
   |! _kod:=XFL_FML.SLO_KOD().KOD;
      _typ:=
         {? _kod='PT' || 'PATTERN'
         |? _kod='BL' || 'BLANK'
         |? _kod='BD' || 'BEFORE_DISPLAY'
         |? _kod='BE' || 'BEFORE_EDIT'
         |? _kod='F3' || 'F3'
         |? _kod='AE' || 'AFTER_EDIT'
         || ''
         ?};
      {? _typ<>''
      || _update+=';\n_a.fld_fml(\'%1\',\'%2\',"%3")'[
            XFL_PAR.SYMBOL,
            _typ,
            'XFL_PAR.prefix();'
            'XFL_PAR.seek(\'%1\');'
            'XFL_FML.prefix();'
            'XFL_FML.seek(\'%2\');'
            'exec(\'par_fml_exec\',\'xfilter\',%3)'[
               $XFL_PAR.ref(),
               $XFL_FML.ref(),
               {? _kod='BL'
               || '~~,~~,~~'
               || 'cur_tab(),cur_win(),cur_afld()'
               ?}
         ]]
      ?};
      _loop:=XFL_FML.next()
   !};
   _loop:=XFL_PAR.next()
!};
XFL_PAR.cntx_pop();
XFL_FML.cntx_pop();

{? _make<>0
|| _BUF:=($(_create+')'))();
   ($_update)(_BUF);
   _BUF
|| ~~
?}


\par_mk_wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Tworzy okienko edycji parametrów.
::   WE: _a _XFL_DEF - wskazanie definicji filtra
::       _b TABLE - alias tabeli tymczasowej
::   WY: akronim okienka edycji
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_def:=_a;
_BUF:=_b;
_wnd:='';

{? type_of(_BUF)<>type_of(SYSLOG)
:: filtr bez dialogu
|| return(_wnd)
?};

XFL_PAR.cntx_psh();
XFL_PAR.clear();
XFL_PAR.f_set('NUMER',,'XFL_DEF=:_a and WIDOCZNY=\'T\'',_def);
{? XFL_PAR.f_first()
|| _wnd:=_BUF.mk_edit('Parametry filtra',0,'#xfl_par_edit');
   _BUF.win_esep(_wnd,'Dane podstawowe'@);
   {!
   |? {? (_fml:=XFL_PAR.memo_txt(,1,'OKIENKO'))=''
      || _BUF.win_efld(_wnd,,XFL_PAR.SYMBOL,,,XFL_PAR.DLUGOSC,XFL_PAR.PRECYZJA,,XFL_PAR.NAZWA)
      || ($_fml)(_BUF,_wnd,XFL_PAR.SYMBOL)
      ?};
      {? XFL_PAR.WYMAGANY='T'
      || _BUF.efld_opt(_wnd,'mark=1',,XFL_PAR.SYMBOL)
      ?};
      XFL_PAR.f_next()
   !};
   exec('ok_esc','#window',_BUF,_wnd)
?};

XFL_PAR.f_clear();
XFL_PAR.cntx_pop();

_wnd


\par_fml_exec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.37]
:: OPIS: Wczytuje i wykonuje formułę parametru. Formuła na wartość początkową wywoływana jest z argumentami ~~.
::   WE: _a [TABLE] - alias bufora edycji parametrów
::       _b [STRING] - akronim okienka edycji parametrów
::       _c [STRING] - akronim aktualnie edytowanego parametru
::   WY: wynik wykonanej formuły
::----------------------------------------------------------------------------------------------------------------------
($XFL_FML.memo_txt(,1,'TRESC'))(
   {? var_pres('_a')=type_of(SYSLOG) || _a || ~~ ?},
   {? var_pres('_b')=type_of('') || _b || ~~ ?},
   {? var_pres('_c')=type_of('') || _c || ~~ ?}
)


\fml_kod_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wartość początkowa pola KOD tabeli XFL_FML.
::   WE:
::   WY: numer parametru
::----------------------------------------------------------------------------------------------------------------------
{? exec('def_system_n','xfilter')
|| $XFL_FML.tm_stamp()
|| XFL_PAR.KOD+'_'
?}


\fml_kod_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed edycją pola KOD w wierszu tabeli XFL_FML.
::   WE:
::   WY: numer parametru
::----------------------------------------------------------------------------------------------------------------------
~exec('def_system_n','xfilter')


\fml_kod_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Obsługa klawisza F3 w polu KOD wiersza tabeli XFL_FML.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
XFL_FML.KOD:=XFL_PAR.KOD+'_'+XFL_FML.SLO_KOD().KOD;
~~


\fml_kod_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po edycji pola KOD tabeli XFL_FML.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? XFL_FML.KOD<>'' & XFL_FML.SLO_KOD=null
|| _str:=spli_str(XFL_FML.KOD,'_');
   _kod:=_str[obj_len(_str)];
   XFL_FML.SLO_KOD:=exec('kod','ext_slo','FLD_FML',_kod)
?};
1


\fml_slo_kod_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po edycji pola SLO_KOD tabeli XFL_FML.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('def_system_n','xfilter') & XFL_FML.SLO_KOD<>null & (XFL_FML.KOD=XFL_PAR.KOD | XFL_FML.KOD=XFL_PAR.KOD+'_')
|| XFL_FML.KOD:='%1%2%3'[XFL_PAR.KOD,{? XFL_PAR.KOD+1<>'_' || '_' || '' ?},XFL_FML.SLO_KOD().KOD]
?};
1


\fml_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem wiersza w okienkach tabeli XFL_FML.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('def_system_n','xfilter') | exec('runtime_dro','#system')


\fml_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed poprawieniem wiersza w okienkach tabeli XFL_FML.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('def_system_n','xfilter') | exec('runtime_dro','#system')


\fml_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed usunięciem wiersza w okienkach tabeli XFL_FML.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('def_system_n','xfilter') | exec('runtime_dro','#system')


\fml_rekord_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Rekord przed okienek tabeli XFL_FML.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 || return() ?};

_aid:='';
{? ~exec('fml_dolacz_b','xfilter')
|| _aid:='D:D'
?};
{? ~exec('fml_popraw_b','xfilter')
|| _aid:='P'+_aid
?};
{? ~exec('fml_usun_b','xfilter')
|| _aid:='U'+_aid
?};

XFL_FML.actions_grayed(cur_win(1,1),_aid);
~~


\fml_rekord_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Rekord po okienek tabeli XFL_FML.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('_fml_chk','xfilter',-menu_txt()='popraw')


\usr_zastosuj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed wyborem bieżącego filtra.
::   WE:
::   WY: 0/1 - zasadnicza akcja będzie pominięta/wykonana
::----------------------------------------------------------------------------------------------------------------------
_BUF:=exec('par_edytuj','xfilter',XFL_USR.XFL_DEF);

{? type_of(_BUF)=type_of(SYSLOG)
|| {? ~_BUF.first()
   || return(0)
   ?};
   _ses:=exec('ses_create','xfilter',XFL_USR.ref());
   XFL_PAR.cntx_psh();
   XFL_PAR.index('SYMBOL');
   XFL_PAR.prefix(XFL_USR.XFL_DEF);
   {! _ii:=1.._BUF.fld_num()
   |! _acr:=_BUF.fld_acr(_ii);
      {? XFL_PAR.find_key(_acr,)
      || _val:=_BUF[_ii];
         XFL_VAL.blank(1);
         XFL_VAL.XFL_SES:=_ses;
         XFL_VAL.XFL_PAR:=XFL_PAR.ref();
         XFL_VAL.TXT:=
            {? XFL_PAR.TYP=exec('type_real','#field')
            || form(_val,,2,'9.')

            |? XFL_PAR.TYP=exec('type_integer','#field')
            || form(_val,,0,'99')

            |? XFL_PAR.TYP=exec('type_string','#field')
            || gsub(_val,'\'','\\\'');_val

            |? XFL_PAR.TYP=exec('type_date','#field')
            || 'to_date(\'%1\')'[$_val]

            |? XFL_PAR.TYP=exec('type_time','#field')
            || 'to_time(\'%1:%2:%3\')'[$(_val~1),$(_val~2),$(_val~3)]

            |? XFL_PAR.TYP=exec('type_reference','#field')
            || '\'%1\''[_val]

            || ''
            ?};
         XFL_VAL.add()
      ?}
   !};
   XFL_PAR.cntx_pop()
|| exec('ses_create','xfilter',XFL_USR.ref())
?};

1


\usr_dodaj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dodaniem filtra do listy ulubionych.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
XFL_USR.ULUBIONY='N'


\usr_dodaj_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Dodanie filtra do listy ulubionych.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('usr_zmien_a','xfilter');
~~


\usr_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed usunięciem filtra z listy ulubionych.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
XFL_USR.ULUBIONY='T'


\usr_usun_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Usunięcie filtra z listy ulubionych.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('usr_zmien_a','xfilter');
~~


\usr_zmien_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zmiana znacznika "Ulubiony" przez akcje okienek tabeli XFL_USR.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
XFL_USR.ULUBIONY:={? XFL_USR.ULUBIONY='T' || 'N' || 'T' ?};
XFL_USR.cntx_psh();
XFL_USR.clear();
XFL_USR.put();
XFL_USR.cntx_pop();
~~


\usr_rekord_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Rekord przed okienek tabeli XFL_USR.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 || return() ?};

XFL_USR.XFL_DEF();
XFL_DEF.memo_get(,'OPIS',0);

_aid:='';
{? XFL_USR.sel_size()=0
|| {? ~exec('usr_dodaj_b','xfilter')
   || _aid+='D'
   ?};
   {? ~exec('usr_usun_b','xfilter')
   || _aid+='U'
   ?}
?};

XFL_USR.actions_grayed(cur_win(1,1),_aid);
~~


\synchronize
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Uzupełnia listę filtrów użytkownika.
::   WE: _a [_USERS] - wskazanie użytkownika, jeśli pominięty, to przyjęte będzie wskazanie bieżącego użytkownika
::       _b [_FIRMA] - wskazanie firmy, jeśli pominięty, to przyjęte będzie wskazanie bieżącej firmy
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_usr:=
   {? var_pres('_a')<>type_of(null) | _a=null | ref_tab(_a)<>USERS
   || OPERATOR.USER
   || _a
   ?};
_fir:=
   {? var_pres('_b')<>type_of(null) | _b=null | ref_tab(_b)<>FIRMA
   || exec('ref_firma','ustawienia')
   || _b
   ?};

XFL_USR.cntx_psh();
XFL_USR.index('UNIQUE');
XFL_USR.prefix(_usr,_fir);
XFL_DEF.cntx_psh();
XFL_DEF.index('SYMBOL');
XFL_DEF.prefix();
_loop:=XFL_DEF.first();
{!
|? _loop
|! _def:=XFL_DEF.ref();
   _tab:=XFL_DEF.TABELA;
   _acc:='T';
   {? ~exec('def_has_access','xfilter',_usr,_fir,_def)
::    brak dostępu wynikający z uprawnień do czynności
   || _acc:='N'
   ?};
   {? XFL_USR.find_key(_def)
   || {? XFL_USR.DOSTEPNY<>_acc
::       zmieniono uprawnienia
      || XFL_USR.DOSTEPNY:=_acc;
         XFL_USR.put()
      ?}
   || XFL_USR.blank();
      XFL_USR.USERS:=_usr;
      XFL_USR.FIRMA:=_fir;
      XFL_USR.XFL_DEF:=_def;
      XFL_USR.DOSTEPNY:=_acc;
      XFL_USR.add()
   ?};
   _loop:=XFL_DEF.next()
!};
XFL_DEF.cntx_pop();
XFL_USR.cntx_pop();
~~


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Formuła ogólna do obsługi akcji "Rozszerzony filtr".
::   WE: _a [_USERS] - wskazanie użytkownika, jeśli pominięty, to przyjęte będzie wskazanie bieżącego użytkownika
::       _b [_FIRMA] - wskazanie firmy, jeśli pominięty, to przyjęte będzie wskazanie bieżącej firmy
::       _c [STRING] - akronim tabeli, jeśli pominięty, to przyjęty będzie akronim aktualnie przeglądanej
::       _d [STRING] - oznaczenie kontekstu, jeśli pominięty, to przyjęty będzie 'BRAK_KONTEKSTU'
::   WY: wskazanie wybranego filtra użytkownika lub null
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_usr:=
   {? var_pres('_a')<>type_of(null) | _a=null | ref_tab(_a)<>USERS
   || OPERATOR.USER
   || _a
   ?};
_fir:=
   {? var_pres('_b')<>type_of(null) | _b=null | ref_tab(_b)<>FIRMA
   || exec('ref_firma','ustawienia')
   || _b
   ?};
_tab:=
   {? var_pres('_c')<>type_of('') | _c=''
   || 2-!cur_tab(1,1)
   || _c
   ?};
_ctx:=
   {? var_pres('_d')<>type_of('') | _d=''
   || 'BRAK_KONTEKSTU'
   || _d
   ?};

exec('synchronize','xfilter',_usr,_fir);
{? exec('choose','xfilter',_usr,_fir,_tab)<>null
|| exec('ses_handle','xfilter',_ctx)
?};
~~


\choose
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Udostępnia do wyboru rozszerzone filtry.
::   WE: _a [_USERS] - wskazanie użytkownika, jeśli pominięty, to przyjęte będzie wskazanie bieżącego użytkownika
::       _b [_FIRMA] - wskazanie firmy, jeśli pominięty, to przyjęte będzie wskazanie bieżącej firmy
::       _c [STRING] - akronim tabeli, jeśli pominięty, to przyjęty będzie akronim aktualnie przeglądanej
::   WY: wskazanie wybranego filtra użytkownika lub null
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_usr:=
   {? var_pres('_a')<>type_of(null) | _a=null | ref_tab(_a)<>USERS
   || OPERATOR.USER
   || _a
   ?};
_fir:=
   {? var_pres('_b')<>type_of(null) | _b=null | ref_tab(_b)<>FIRMA
   || exec('ref_firma','ustawienia')
   || _b
   ?};
_tab:=
   {? var_pres('_c')<>type_of('') | _c=''
   || 2-!cur_tab(1,1)
   || _c
   ?};

_mode:='maximized';
:: utwórz panel zarządzania konfiguracją
_grp:=XFL_USR.grp_make('Rozszerzone filtry'@,
:: przed obsługą
   "params_exec('choose__bo','xfilter')",
:: identyfikator, położenie
   '#xfl_usr_choose',,,
:: podczas zamykania
   "params_exec('choose__oc','xfilter')",,
:: tryb
   'normal'
);
:: lista ulubionych
XFL_USR.grp_sel(_grp,,'FAW','Ulubione'@,
:: po odświeżeniu
   "params_exec('choose_xxx_ar','xfilter')",,,,
:: przed obsługą
   "params_exec('choose_xxx_bs','xfilter','fav','NAZWA_U','SYMBOL_U')",
:: po obsłudze
   "params_exec('choose_xxx_as','xfilter','fav')",,,
:: tryb
   _mode
);
:: lista dostępnych
XFL_USR.grp_sel(_grp,,'WER','Dostępne'@,
:: po odświeżeniu
   "params_exec('choose_xxx_ar','xfilter')",,,,
:: przed obsługą
   "params_exec('choose_xxx_bs','xfilter','acc','NAZWA','SYMBOL')",
:: po obsłudze
   "params_exec('choose_xxx_as','xfilter','acc')",,,
:: tryb
   _mode
);

_obj:="
   _obj:=obj_new('key','pos');
   _obj.key:=_a;
   _obj.pos:=null;
   _obj
";
_ctx:=obj_new('usr','fir','tab','fav','acc');
_ctx.usr:=_usr;
_ctx.fir:=_fir;
_ctx.tab:=_tab;
_ctx.fav:=_obj('NAZWA_U');
_ctx.acc:=_obj('NAZWA');
params_set('ctx',_ctx);

_ref:=null;
XFL_USR.cntx_psh();
XFL_USR.win_sel(_grp);
{? XFL_USR.select()
|| _ref:=XFL_USR.ref()
?};
XFL_USR.cntx_pop();
XFL_USR.win_del(_grp);
_ref


\choose__bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed wyświetleniem panelu filtrów użytkownika.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
XFL_DEF.cntx_psh();
XFL_DEF.win_dict('DIC');
XFL_DEF.win_edit('RED');
XFL_DEF.win_patt('WZO');

XFL_USR.win_edit('RED');

exec('ses_cleanup','xfilter');
1


\choose__oc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Podczas zamykanie panelu filtrów użytkownika.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
XFL_DEF.cntx_pop();
1


\choose_xxx_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po odświeżeniu listy filtrów.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_ctx:=params_get().ctx;

_fav:=0;
XFL_USR.cntx_psh();
XFL_USR.index('SYMBOL_U');
XFL_USR.prefix(_ctx.usr,_ctx.fir,_ctx.tab,'T');
{? XFL_USR.size()=0
|| tab_hide(1,1)
|| tab_show(1)
?};
XFL_USR.cntx_pop();
~~


\choose_xxx_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed obsługą listy filtrów.
::   WE: _a STRING - nazwa tablicy właściwej dla okna
::       _b [STRING] - akronim indeksu
::       ...
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_ctx:=params_get().ctx;
_obj:=($'_a.%1'[_a])(_ctx);

{! _ii:=2.._
|! {? _[_ii]<>_obj.key
   || XFL_USR.index(_[_ii]);
      XFL_USR.prefix(_ctx.usr,_ctx.fir,_ctx.tab,'T')
   ?}
!};

XFL_USR.index(_obj.key);
XFL_USR.prefix(_ctx.usr,_ctx.fir,_ctx.tab,'T');

{? _obj.pos=null
|| XFL_USR.first()
|| XFL_USR.seek(_obj.pos)
?};
~~


\choose_xxx_as
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po obsłudze listy filtrów.
::   WE: _a STRING - nazwa tablicy właściwej dla okna
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_ctx:=params_get().ctx;
_obj:=($'_a.%1'[_a])(_ctx);

_obj.key:=XFL_USR.index('?');
_obj.pos:=XFL_USR.ref();
~~


\ses_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zwraca informacje potrzebne do rozszerzenia filtra o filtr użytkownika.
::   WE: _a STRING - kontekst wykorzystania
::   WY: wskazanie tablicy nazwanej o strukturze:
::          XFL_SES - wskazanie sesji filtra
::          JOIN - dodatkowa fraza JOIN filtra
::          WHERE - dodatkowa fraza WHERE filtra
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_ctx:=_a;

_sid:=XFL_DEF.ses_id(1);

_ret:=obj_new('SES','JOIN','WHERE');
_ret.SES:=null;
_ret.JOIN:='';
_ret.WHERE:='';

XFL_SES.cntx_psh();
XFL_SES.index('SES_ID');
XFL_SES.prefix(_sid,_ctx,);
{? XFL_SES.first()
|| XFL_USR.cntx_psh();
   XFL_PAR.cntx_psh();
   XFL_DEF.cntx_psh();
   XFL_DEF.prefix();

   XFL_SES.XFL_USR().XFL_DEF();
   _ret.SES:=XFL_SES.ref();
   _ret.JOIN:=XFL_DEF.memo_txt(,1,'FL_JOIN');
   _ret.WHERE:=XFL_DEF.memo_txt(,1,'FL_WHERE');

   XFL_VAL.cntx_psh();
   XFL_VAL.index('KOL_ZAS');
   XFL_VAL.prefix(XFL_SES.ref());
   _loop:=XFL_VAL.first();
   {!
   |? _loop
   |! _par:=':'+XFL_VAL.XFL_PAR().SYMBOL;
      _ret.WHERE:=gsub(_ret.WHERE,_par,XFL_VAL.TXT);
      _loop:=XFL_VAL.next()
   !};

   XFL_VAL.cntx_pop();
   XFL_DEF.cntx_pop();
   XFL_PAR.cntx_pop();
   XFL_USR.cntx_pop()
?};
XFL_SES.cntx_pop();

_ret


\ses_create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Tworzy sesję wskazanego filtra użytkownika.
::   WE: _a _XFL_USR - wskazanie filtra użytkownika
::   WY: wskazanie wiersza tabeli XFL_SES
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_usr:=_a;

_sid:=XFL_DEF.ses_id(1);
_ref:=null;

XFL_SES.cntx_psh();
XFL_SES.index('SES_ID');
XFL_SES.prefix(_sid,_sid,);
{? {? ~XFL_SES.first()
   || XFL_SES.blank(1);
      XFL_SES.XFL_USR:=_usr;
      XFL_SES.SES_ID:=_sid;
      XFL_SES.CONTEXT:=_sid;
      XFL_SES.add()
   || exec('del_ndx','#table',XFL_VAL,'UNIQUE',XFL_SES.ref())
   ?}
|| _ref:=XFL_SES.ref()
?};
XFL_SES.cntx_pop();

_ref


\ses_handle
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Kojarzy sesję filtra z kontekstem wykorzystania.
::   WE: _a STRING - kontekst wykorzystania
::   WY: 0/1 - porażka/sukces
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_ctx:=_a;

_sid:=XFL_DEF.ses_id(1);

_ret:=0;
XFL_SES.cntx_psh();
XFL_SES.index('SES_ID');
XFL_SES.prefix(_sid,);

{? XFL_SES.find_key(_ctx,)
|| XFL_SES.del()
?};
{? XFL_SES.find_key(_sid,)
|| XFL_SES.CONTEXT:=_ctx;
   _ret:=XFL_SES.put()
?};

XFL_SES.cntx_pop();
_ret


\ses_delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Usuwa sesję filtra.
::   WE: _a STRING - kontekst wykorzystania
::   WY: 0/1 - porażka/sukces
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_ctx:=_a;

_sid:=XFL_DEF.ses_id(1);

_ret:=0;
XFL_SES.cntx_psh();
XFL_SES.index('SES_ID');
XFL_SES.prefix(_sid,_ctx,);
{? XFL_SES.first()
|| _ret:=XFL_SES.del(1,1)
?};
XFL_SES.cntx_pop();
_ret


\ses_cleanup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Usuwa nieaktywne sesje filtrów.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
XFL_SES.cntx_psh();
XFL_SES.index('SES_ID');
XFL_SES.prefix();
{? XFL_SES.first()
|| {!
   |? {? XFL_DEF.ses_info(XFL_SES.SES_ID,'exist')
      || XFL_SES.next()
      || XFL_SES.del()
      ?}
   !}
?};
XFL_SES.cntx_pop();
~~


\x_wskazowki_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyświetla wskazówki programistyczne.
::   WE:
::   WY: ''
::----------------------------------------------------------------------------------------------------------------------
_TAB:=cur_tab(1,1);

_txt:=
   {? _TAB=XFL_DEF
   || '"Kolejność", "Złączenie" i "Warunek" to odpowiednio argumenty _a, _b i _c (lub ich rozszerzenie) '
      'metody f_set podanej tabeli.\n'
      '\n'
      'Należy pamiętać, że rozszerzony filtr może być uzupełnieniem już nałożonych filtrów i "Kolejność" '
      'nie będzie uwzględniona.'

   |? _TAB=XFL_PAR
   || 'Formuła "Okienko" pozwala na zmianę domyślnie stosowanego pola edycji parametru.\n'
      '\n'
      'Do formuły przekazywane są argumenty:\n'
      '\t_a - alias tabeli wykorzystywanej jako bufor edycji,\n'
      '\t_b - akronim tymczasowego okienka redakcji parametrów,\n'
      '\t_c - akronim pola w buforze edycji odpowiadający parametrowi.\n'
      '\n'
      'Ponadto można odwoływać się do bieżącej definicji parametru (wiersz tabeli XFL_PAR), w którym:\n'
      '\tSYMBOL - symbol parametru,\n'
      '\tNAZWA - nazwa parametru,\n'
      '\tOPIS - opis parametru (pole notatnikowe),\n'
      '\tWYMAGANY - znacznik określający, czy wartość parametru musi być określona [T/N],\n'
      '\tTYP - nazwa typu pola (INTEGER, REAL, STRING, DATE, TIME, REFERENCE),\n'
      '\tDLUGOSC - długość pola w oknie edycji,\n'
      '\tPRECYZJA - precyzja wartości.\n'
      'Nie należy zmieniać pozycji kursora w tabeli XFL_PAR.\n'
      '\n'
      'Przykład:\n'
      '- Zdefiniowany został parametr określający płeć osoby.\n'
      '- Pole tekstowe można zastąpić kontrolką wyboru opcji Kobieta/Mężczyzna formułą:\n'
      '\t_a.win_efld(_b,,_c,,,,,,,,XFL_PAR.memo_txt(,1,\'OPIS\'),\'radio-buttons\',,\n'
      '\t\t\'Kobieta\',"\'K\'",\n'
      '\t\t\'Mężczyzna\',"\'M\'"\n'
      '\t)'

   |? _TAB=XFL_FML
   || 'Do formuły (z wyjątkiem "Wartość początkowa") przekazywane są argumenty:\n'
      '\t_a - alias tabeli wykorzystywanej jako bufor edycji,\n'
      '\t_b - akronim tymczasowego okienka redakcji parametrów,\n'
      '\t_c - akronim pola w buforze edycji odpowiadający parametrowi.\n'
      '\n'
      'Ponadto można odwoływać się do bieżącej definicji parametru (wiersz tabeli XFL_PAR), w którym:\n'
      '\tSYMBOL - symbol parametru,\n'
      '\tNAZWA - nazwa parametru,\n'
      '\tOPIS - opis parametru (pole notatnikowe),\n'
      '\tWYMAGANY - znacznik określający, czy wartość parametru musi być określona [T/N],\n'
      '\tTYP - nazwa typu pola (INTEGER, REAL, STRING, DATE, TIME, REFERENCE),\n'
      '\tDLUGOSC - długość pola w oknie edycji,\n'
      '\tPRECYZJA - precyzja wartości.\n'
   ?};

exec('show_tips','#edit',_txt,_TAB.comment());
''


\x_wnd_ustaw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Ogólna obsługa akcji "Rozszerzony filtr" w oknie grupowym.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('select','xfilter',OPERATOR.USER,exec('ref_firma','ustawienia'),2-!cur_tab(1,1),cur_win(1,1));
~~


\x_wnd_wyczysc_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Ogólna formuła przed akcją "Wyczyść filtr".
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('ses_get','xfilter',cur_win(1,1)).SES<>null


\x_wnd_wyczysc_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Ogólna formuła akcji "Wyczyść filtr".
::   WE:
::   WY: ~l
::----------------------------------------------------------------------------------------------------------------------
exec('ses_delete','xfilter',cur_win(1,1));
~~


\x_grp_ustaw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Ogólna obsługa akcji "Rozszerzony filtr" w oknie grupowym.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('x_wnd_ustaw_a','xfilter');

params_set(params_get());
grp_disp(cur_tab(1,1),cur_win(1,1),1);
~~


\x_grp_wyczysc_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Ogólna formuła przed akcją "Wyczyść filtr" w oknie grupowym.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('x_wnd_wyczysc_b','xfilter')


\x_grp_wyczysc_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Ogólna formuła akcji "Wyczyść filtr" w oknie grupowym.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('x_wnd_wyczysc_a','xfilter');

params_set(params_get());
grp_disp(cur_tab(1,1),cur_win(1,1),1);
~~

:Sign Version 2.0 jowisz:1045 2023/07/21 13:25:28 b216a70d0ffc35fe07fefab0b9e24b3ed479d22d15a2c46043fdee4d375f871f45f5c1985d247320b321e875459b17564155aa355fa10cb8c73ceafdae0e4f04842836505f88d700456580de1f0150ac988d0b512c36be0d064b6d4dfee2088898b0c6ade02e2b682ecd7acc0821c26bb526fda93249ee1ea1d4408bbae6d06f
