:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: firm_kur.fml
:: Utworzony: 12.05.2020
:: Autor: PD
:: Systemy:
::======================================================================================================================
:: Zawartość: Komunikacja z BaseLinker
::======================================================================================================================

\act_createPackage
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  utworzenie przesyłki
::----------------------------------------------------------------------------------------------------------------------
{? ~TR_NZL.r_lock(1,1) || FUN.info('Dyspozycję obsługuje inny użytkownik.'@); return(0) ?};
{? ~FUN.ask('Czy chcesz nadać paczkę?'@)|| TR_NZL.r_unlock(); return(0) ?};
{? exec('get','#params',700808,2)=''
|| FUN.info('Niewypełniony parametr 700808(Token BaseLinker).'@); TR_NZL.r_unlock();return(0)
?};
{? exec('get','#params',700810,2)=''
|| FUN.info('Niewypełniony parametr 700810(Status zamówienia BaseLinker).'@); TR_NZL.r_unlock();return(0)
?};

TR_ZEWN.cntx_psh();
_courier_code:=TR_PACK.TR_ZEWN().COURIER;
TR_ZEWN.cntx_pop();

:: tworzymy zamówienie
{? TR_NZL.ORDER='' | TR_NZL.ORDER=exec('code_order','transport_paczki',TR_NZL.IDADD,TR_NZL.ref(),TR_NZL.ODDZ)
|| {? (_order_id:=exec('addOrder','firm_kur',_courier_code))=''
   || FUN.info('Nie udało się utworzyć zamówienia w BaseLinker.'@); TR_NZL.r_unlock(); return(0)
   || TR_NZL.ORDER:=_order_id;
      TR_NZL.put()
   ?}
?};

:: pobieramy dostępnych kurierów
{? (_account_id:=exec('getCourierAccounts','firm_kur',_courier_code))='error'
|| FUN.info('Nie udało się wybrać dostępnych kurierów.'@); TR_NZL.r_unlock(); return(0)
?};

:: tworzymy paczkę
TR_ZEWN.cntx_psh();
_multi:=TR_PACK.TR_ZEWN().MULTI;
_spr:=exec('ctrl_tr_nzl','transport_paczki',TR_PACK.TR_NZL);
_dys:=2;
::Dodatkowe sprawdzenie czy jakaś paczka została już wysłana
{? _multi
||
   TR_PACK.cntx_psh();
   TR_PACK.index('TR_NZL2');
   TR_PACK.prefix(TR_NZL.ref());
   {? TR_PACK.first()
   ||
      {!|?
         {? TR_PACK.NR<>'' || _multi:=0 ?};
            TR_PACK.next()
      !}
   ?};
   TR_PACK.cntx_pop()
?};

{? _spr<=0 & _multi
|| _dys:=FUN.choice
   ('Dyspozycja nie została rozpisana lub została rospisana częściowo.'@,,'Wyślij wybraną paczkę'@,'Wyślij wszystko'@)
|? _spr<=0 & (~_multi)
|| _dys:=FUN.choice('Dyspozycja nie została rozpisana lub została rospisana częściowo.'@,,'Wyślij wybraną paczkę'@)
?};
{? _dys=0 || FUN.info('Nie udało się utworzyć przesyłki.'@); TR_NZL.r_unlock(); TR_ZEWN.cntx_pop(); return(0) ?};
{? _multi & _dys=1 || _multi:=0 ?};
TR_ZEWN.cntx_pop();

{? (_package_number:=exec('createPackage','firm_kur',TR_NZL.ORDER,_courier_code,_account_id,_multi))=''
|| FUN.info('Nie udało się utworzyć przesyłki.'@); TR_NZL.r_unlock(); return(0)
?};

{? _multi
||
   TR_PACK.cntx_psh();
   TR_PACK.index('TR_NZL2');
   TR_PACK.prefix(TR_NZL.ref());
   {? TR_PACK.first()
   ||
      {!|?
         TR_PACK.NR:=_package_number;
         TR_PACK.put();
         exec('setSTAN_pack','transport_paczki',TR_PACK.ref());
         TR_PACK.next()
      !}
   ?};
   TR_PACK.cntx_pop();
   TR_PACK.get()
||
   TR_PACK.NR:=_package_number;
   TR_PACK.put();
   exec('setSTAN_pack','transport_paczki',TR_PACK.ref())
?};

:: pobieramy etykietę
{? ~(_label:=exec('getLabel','firm_kur',_courier_code,_package_number,_multi))
|| FUN.info('Nie udało się pobrać etykiety.'@); TR_NZL.r_unlock(); return(0)
?};

:: pobieramy id paczki
{? (_package_id:=exec('getOrderPackages','firm_kur',TR_NZL.ORDER))=''
|| FUN.info('Nie udało się pobrać id paczki.'@); TR_NZL.r_unlock(); return(0)
?};

{? _multi
||
   TR_PACK.cntx_psh();
   TR_PACK.index('TR_NZL2');
   TR_PACK.prefix(TR_NZL.ref());
   {? TR_PACK.first()
   ||
      {!|?
         TR_PACK.ORDER:=_package_id;
         TR_PACK.put();
         TR_PACK.next()
      !}
   ?};
   TR_PACK.cntx_pop();
   TR_PACK.get()
||
   TR_PACK.ORDER:=_package_id;
   TR_PACK.put()
?};
:: pobieramy historię paczki
{? _multi
||
   TR_PACK.cntx_psh();
   TR_PACK.index('TR_NZL2');
   TR_PACK.prefix(TR_NZL.ref());
   {? TR_PACK.first()
   ||
      {!|?
         {? ~(exec('getCourierPackagesStatusHistory','firm_kur',_package_id,))
         || FUN.info('Nie udało się pobrać histori paczki.'@); TR_NZL.r_unlock(); TR_PACK.cntx_pop(); return(0)
         ?};
         TR_PACK.next()
      !}
   ?};
   TR_PACK.cntx_pop();
   TR_PACK.get()
||
   {? ~(exec('getCourierPackagesStatusHistory','firm_kur',_package_id,))
   || FUN.info('Nie udało się pobrać histori paczki.'@); TR_NZL.r_unlock(); return(0)
   ?}
?};

FUN.info('Paczka została nadana.'@);
TR_NZL.r_unlock();
1


\act_getCourierPackagesSH
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  pobranie histori paczki
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',700808,2)='' || FUN.info('Niewypełniony parametr 700808(Token BaseLinker)'@); return(0) ?};
{? ~(exec('getCourierPackagesStatusHistory','firm_kur',TR_PACK.ORDER))
|| FUN.info('Nie udało się pobrać histori paczki.'@)
?}


\act_getCourierFields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  pobranie słowników
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',700808,2)='' || FUN.info('Niewypełniony parametr 700808(Token BaseLinker)'@); return(0) ?};
{? exec('getCourierFields','firm_kur',TR_ZEWN.COURIER)=''
|| FUN.info('Zaktualizowano słowniki.'@)
|| FUN.info('Nie udało się zaktualizować słowników.'@)
?}

\act_getLabel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  pobranie etykiety
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',700808,2)='' || FUN.info('Niewypełniony parametr 700808(Token BaseLinker)'@); return(0) ?};
TR_ZEWN.cntx_psh();
_courier_code:=TR_PACK.TR_ZEWN().COURIER;
TR_ZEWN.cntx_pop();
_package_number:=TR_PACK.NR;
_order_id:=TR_NZL.ORDER;
{? _courier_code='' | _package_number='' | _order_id=''
||  FUN.info('Nie można pobrać etykiety'@); return(0) ?};

TR_ZEWN.cntx_psh();
_multi:=TR_PACK.TR_ZEWN().MULTI;
{? _multi
||
   TR_PACK.cntx_psh();
   TR_PACK.index('TR_NZL2');
   TR_PACK.prefix(TR_NZL.ref());
   {? TR_PACK.first()
   ||
      {!|?
         {? TR_PACK.NR<>_package_number || _multi:=0 ?};
         TR_PACK.next()
      !}
   ?};
   TR_PACK.cntx_pop()
?};
TR_ZEWN.cntx_pop();


{? ~(_label:=exec('getLabel','firm_kur',_courier_code,_package_number,_multi))
|| FUN.info('Nie udało się pobrać etykiety.'@); return(0)
?};

:: pobieramy id paczki
{? (_package_id:=exec('getOrderPackages','firm_kur',_order_id))=''
|| FUN.info('Nie udało się pobrać id paczki.'@); return(0)
?};

{? _multi
||
   TR_PACK.cntx_psh();
   TR_PACK.index('TR_NZL2');
   TR_PACK.prefix(TR_NZL.ref());
   {? TR_PACK.first()
   ||
      {!|?
         TR_PACK.ORDER:=_package_id;
         TR_PACK.put();
         TR_PACK.next()
      !}
   ?};
   TR_PACK.cntx_pop();
   TR_PACK.get()
||
   TR_PACK.ORDER:=_package_id;
   TR_PACK.put()
?};
:: pobieramy historię paczki
{? _multi
||
   TR_PACK.cntx_psh();
   TR_PACK.index('TR_NZL2');
   TR_PACK.prefix(TR_NZL.ref());
   {? TR_PACK.first()
   ||
      {!|?
         {? ~(exec('getCourierPackagesStatusHistory','firm_kur',_package_id,))
         || FUN.info('Nie udało się pobrać histori paczki.'@); TR_PACK.cntx_pop(); return(0)
         ?};
         TR_PACK.next()
      !}
   ?};
   TR_PACK.cntx_pop();
   TR_PACK.get()
||
   {? ~(exec('getCourierPackagesStatusHistory','firm_kur',_package_id,))
   || FUN.info('Nie udało się pobrać histori paczki.'@); return(0)
   ?}
?};

FUN.info('Pobrano etykietę i zaktualizowano historię paczki.'@);
1


\act_getOrderStatusList
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS:  pobranie statusów zamówienia
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',700808,2)='' || FUN.info('Niewypełniony parametr 700808(Token BaseLinker)'@); return('') ?};
exec('getOrderStatusList','firm_kur')


\http_send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: wysyła plik lub stringa postem i zapisuje w logu (jeśli podane parametry _b / _c)
::   WE: _a - plik lub string do wysłania (lub '' bez zapisu pliku w blobie)
::       _b - opis do logu
::       _c - czy zapisywać plik w logu - domyślnie 1
::       _d - 0-get status, 1-get bytes
::       _e - JSON do zapisu
::       _f - token
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_url:='https://api.baselinker.com/connector.php';
{? _<3 || _c:=1 ?};
{? _<4 || _d:=0 ?};

:: Tryb cichy poza transakcją
{? do_state()=0 || _do:=0; _no_msg:=no_msg(1) || _do:=1 ?};
_http:=inet_get(_url);
{? _do=0 || no_msg(_no_msg) ?};

{? type_of(_http)<100
||
   exec('log_write','firm_kur','','Błąd wywołania funkcji %1.'['inet_get()'],0);
   return(-1)
?};

_http.append_header('Content-Type: application/x-www-form-urlencoded');
_http.append_header('charset: UTF-8');
_http.append_header('X-BLToken: %1'[_f]);

_utc_start:=utc_get();
_http.http_post(,_a);
_utc_stop:=utc_get();
_res:=_http.get_status();
_ans:=_http.get_data();
_ref:=exec('log_write_new','firm_kur', {? _c=1 || _e || '' ?} , _b, $_res, _http, _utc_start, _utc_stop,
   {? _c=1 || _ans || '' ?}, _url);
{? var_pres('error_message', json_parse(_ans))=2
||
   {? json_parse(_ans).error_message<>''
   ||
      _wyn:=json_parse(_ans).error_message;
      _wyn:=gsub(_wyn,'&nbsp;',' ');
      _wyn:=gsub(_wyn,'<br />','\n');
      _wyn:=gsub(_wyn,'<br/>','\n');
      _wyn:=gsub(_wyn,'<strong>','');
      _wyn:=gsub(_wyn,'</strong>','');
      {? _ref<>''
      || exec('mwac_log_app','#mwac',_ref,'R:0|',_wyn,0)
      ?};
      FUN.info(_wyn)
   |? json_parse(_ans).error_code<>''
   ||
      {? _ref<>''
      || exec('mwac_log_app','#mwac',_ref,'R:0|',json_parse(_ans).error_code,0)
      ?};
      FUN.info(json_parse(_ans).error_code)
   ||
      {? _ref<>''
      || exec('mwac_log_app','#mwac',_ref,'R:0|','Nierozpoznany błąd.'@,0)
      ?};
      FUN.info('Nierozpoznany błąd.'@)
   ?}
|? var_pres('TYPE', json_parse(_ans))=2 & json_parse(_ans).TYPE='ERROR' & var_pres('MESSAGE', json_parse(_ans))=2
||
   {? json_parse(_ans).MESSAGE<>''
   ||
      _wyn:=json_parse(_ans).MESSAGE;
      _wyn:=gsub(_wyn,'&nbsp;',' ');
      _wyn:=gsub(_wyn,'<br />','\n');
      _wyn:=gsub(_wyn,'<br/>','\n');
      _wyn:=gsub(_wyn,'<strong>','');
      _wyn:=gsub(_wyn,'</strong>','');
      {? _ref<>''
      || exec('mwac_log_app','#mwac',_ref,'R:0|',_wyn,0)
      ?};
      FUN.info(_wyn)
   ||
      {? _ref<>''
      || exec('mwac_log_app','#mwac',_ref,'R:0|','Nierozpoznany błąd.'@,0)
      ?};
      FUN.info('Nierozpoznany błąd.'@)
   ?}
||
   exec('mwac_log_app','#mwac',_ref,'R:1|','',0)
?};
_wyn_obj:=obj_new('REF','WYN');

_wyn_obj.WYN:={? _d || _ans || _res ?};
_wyn_obj.REF:=_ref;
_wyn_obj


\log_write
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  zapis pliku / zawartości zmiennej w logu
::   WE: _a - plik (obiekt) / string ( może być '' )
::       _b - opis do logu
::       _c - status
::   WY:
::----------------------------------------------------------------------------------------------------------------------
WSLOG.blank();
WSLOG.DATA:=date();
WSLOG.CZAS:=time();
WSLOG.OPIS:=_b;
WSLOG.STATUS:={? type_of(_c)=2 || _c || $_c ?};
WSLOG.KONFIG:='BaseLinker';
{? type_of(_a)=type_of('')
||
   {? _a<>''
   ||
:: zapis stringa do pliku
      _plik:='request.xml';
      _file:=fopen(_plik,'Uw',1,,1);
      {? ~_file.is_open || exec('log_write','firm_kur','', 'błąd otwarcia pliku',-1); return ?};
      _a:=json_tparse(_a).json_tconvert(,,,,'result',,,'noheader=0,nodata=1,indentation=1');
      fwrite(_file,_a)
   ?}
||
   _file:=_a
?};
WSLOG.add;
{? var_press('_file')>0 || WSLOG.bl_put('LOG',_file,,,'request.xml') ?};
~~


\log_write_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS:  zapis pliku / zawartości zmiennej w logu
::   WE: _a - plik (obiekt) / string ( może być '' )
::       _b - opis do logu
::       _c - status
::       _d - obiekt INET
::       _e - _utc_start
::       _f - _utc_stop
::       _g - odpowiedź
::       _h - url
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_mwac_log_ref:=exec('mwac_log','#mwac',
   _b,
   _h,
   'REST',
   _d.get_status(),
   _e,
   _f,
   _a,
   _g,
   ':::Rzeczywisty nagłówek:::\n'+_d.get_header(1)+':::Rzeczywisty nagłówek:::\n'+'Content-Type: application/json; charset:UTF-8',
   _d.get_header(0)
);

{? _mwac_log_ref<>''
|| exec('mwac_log_app','#mwac',_mwac_log_ref,'|%1|'['BaseLinker'],'')
?};
_mwac_log_ref


\addOrder
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  utworzenie zamówienia
::   WE:_a- _courier_code
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='addOrder';
_par:=gsub(exec('json_addOrder','firm_kur',_a),'&','%26');
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_pres('order_id', json_parse(_wyn_obj.WYN))=1 || $json_parse(_wyn_obj.WYN).order_id || ''  ?}


\json_addOrder
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: komunikat utworzenia zamówienia
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
      "order_status_id": "%1",
      "date_add": "%2",
      "user_comments": "",
      "admin_comments": "",
      "phone": "%3",
      "email": "%4",
      "user_login": "",
      "currency": "PLN",
      "payment_method": "",
      "payment_method_cod": "0",
      "paid": "1",
      "delivery_method": "%5",
      "delivery_price": "0",
      "delivery_fullname": %6,
      "delivery_company": %7,
      "delivery_address": "%8",
      "delivery_city": "%9",
      "delivery_postcode": "%10",
      "delivery_country_code": "PL",
      "delivery_point_id": "%11",
      "delivery_point_name": "%12",
      "delivery_point_address": "%13",
      "delivery_point_postcode": "%14",
      "delivery_point_city": "%15",
      "invoice_fullname": "",
      "invoice_company": "",
      "invoice_nip": "",
      "invoice_address": "",
      "invoice_city": "",
      "invoice_postcode": "",
      "invoice_country_code": "",
      "want_invoice": "0",
      "extra_field_1": "",
      "extra_field_2": "",
      "products": [
        {
        }
      ]
}'[
::order_status_id
exec('get','#params',700810,2),
::date_add
10+$tm_stamp(date~1,date~2,date~3,time~1,time~2,time~3),
::phone
TR_PACK.TEL,
::email
TR_PACK.MAIL,
::delivery_method
_a,
::delivery_fullname
KH.cntx_psh();
_wyn:={? TR_NZL.KH<>null()
|| exec('val_ord','firm_kur',_a,'TR_NZL.KH().NAZ',TR_NZL.KH().NAZ)
|| ''
?};
KH.cntx_pop();
json_value(_wyn),
::delivery_company
KH.cntx_psh();
_wyn:={? TR_NZL.KH<>null()
|| exec('val_ord','firm_kur',_a,'TR_NZL.KH().NAZ',TR_NZL.KH().NAZ)
|| ''
?};
KH.cntx_pop();
json_value(_wyn),
::delivery_address
exec('val_ord','firm_kur',_a,'TR_NZL.UL',TR_NZL.UL)
+
(
_numer:={? TR_NZL.NUMER<>'' & TR_NZL.LOKAL<>''  || TR_NZL.NUMER+'/'+TR_NZL.LOKAL
        |? TR_NZL.NUMER<>''                     || TR_NZL.NUMER
        |? TR_NZL.LOKAL<>''                     || TR_NZL.LOKAL
        ||''
        ?};
{? #(exec('val_ord','firm_kur',_a,'TR_NZL.UL',TR_NZL.UL)+1)=0 | _numer=''
|| ''
|| '/'
?}
+
{?_numer<>'' || exec('val_ord','firm_kur',_a,'TR_NZL.NUMER',_numer) || ''?}
),
::delivery_city
exec('val_ord','firm_kur',_a,'TR_NZL.MIASTO',TR_NZL.MIASTO),
::delivery_postcode
TR_NZL.KPOCZ,
::delivery_point_id
KH_MSC.cntx_psh();
_wyn:=
{? TR_NZL.KH_MSC<>null
|| TR_NZL.KH_MSC().KOD
|| ''
?};
KH_MSC.cntx_pop();
_wyn,
::delivery_point_name
KH_MSC.cntx_psh();
_wyn:=
{? TR_NZL.KH_MSC<>null & TR_NZL.KH_MSC().KOD<>''
|| exec('val_ord','firm_kur',_a,'TR_NZL.KH_MSC().NAZ',TR_NZL.KH_MSC().NAZ)
|| ''
?};
KH_MSC.cntx_pop();
_wyn,
::delivery_point_address
KH_MSC.cntx_psh();
_wyn:=
{? TR_NZL.KH_MSC<>null & TR_NZL.KH_MSC().KOD<>''
|| exec('val_ord','firm_kur',_a,'TR_NZL.KH_MSC().UL',TR_NZL.KH_MSC().UL)
|| ''
?};
KH_MSC.cntx_pop();
_wyn,
::delivery_point_postcode
KH_MSC.cntx_psh();
_wyn:=
{? TR_NZL.KH_MSC<>null & TR_NZL.KH_MSC().KOD<>''
|| TR_NZL.KH_MSC().KPOCZ
|| ''
?};
KH_MSC.cntx_pop();
_wyn,
::delivery_point_city
KH_MSC.cntx_psh();
_wyn:=
{? TR_NZL.KH_MSC<>null & TR_NZL.KH_MSC().KOD<>''
|| exec('val_ord','firm_kur',_a,'TR_NZL.KH_MSC().MIASTO',TR_NZL.KH_MSC().MIASTO)
|| ''
?};
KH_MSC.cntx_pop();
_wyn
];
_json


\getCourierAccounts
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  pobranie kont kurierów
::   WE: _a- courier_code
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='getCourierAccounts';
_par:=exec('json_getCourierAccounts','firm_kur',_a);
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_tab_wyn:=json_parse(_wyn_obj.WYN);

{? type_of(_tab_wyn)=117
& var_pres('accounts', _tab_wyn)>0
& (_size:=obj_len(_tab_wyn.accounts))>0
||
   {? _size=1 || return($_tab_wyn.accounts[1].id) ?};

   _int:=1;
   _Kk:=tab_tmp(1,'ID','INTEGER','Identyfikator','NAME','STRING[70]','Nazwa');

   {!|?
      {? (var_pres('id', _tab_wyn.accounts[_int])=1) & (var_pres('name', _tab_wyn.accounts[_int])=2)
      || _Kk.ID:=_tab_wyn.accounts[_int].id;
         _Kk.NAME:=_tab_wyn.accounts[_int].name;
         _Kk.add()
      ?};
      _int+=1;
      _int<=_size
   !};

   _wer:=_Kk.mk_sel('Konta kurierskie'@);
   _Kk.win_fld(_wer,,'ID',,,,,,'Identyfikator'@);
   _Kk.win_fld(_wer,,'NAME',,,50,,,'Nazwa'@);
   __choice:=0;

   _fb:="
      _Tab:=cur_tab();
      __choice:=_Tab.ID;
      sel_exit();
      0
   ";
   _Kk.win_act(_wer,,'Formuła','&Wybierz'@@,,,_fb,,1,0,,,'W');
   _Kk.win_sel(_wer);
   _Kk.select();
   _wyn:=$__choice;
   {? _wyn='0' || _wyn:='error' ?};
   VAR_DEL.delete('__choice')
||
   _wyn:='error'
?};
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_wyn


\json_getCourierAccounts
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: komunikat pobrania kont kurierów
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
      "courier_code": "%1"
}'[
::courier_code
_a
];
_json


\createPackage
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  utworzenie przesyłki
::   WE: _a- _order_id
::       _b- courier_code
::       _c- account_id
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='createPackage';
_par:=exec('json_createPackage','firm_kur',_a, _b, _c, _d);

_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_pres('package_number', json_parse(_wyn_obj.WYN))=2 || json_parse(_wyn_obj.WYN).package_number || ''  ?}


\json_createPackage
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  komunikat utworzenia przesyłki
::   WE: _a- _order_id
::       _b- _courier_code
::       _c- account_id
::       _d- _multi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
    "order_id": %1,
    "courier_code": "%2",
    "account_id": %3,
    "fields": [
       %4
    ],
    "packages":[
         %5
    ]
}'[
::order_id
_a,
::courier_code
_b,
::account_id
_c,
::fields
{? _b='dhl'|| exec('json_fields_dhl','firm_kur',_a,_b,_c,_d)
|? _b='paczkomaty'|| exec('json_fields_paczkomaty','firm_kur',_a,_b,_c,_d)
|? _b='inpostkurier'|| exec('json_fields_inpostkurier','firm_kur',_a,_b,_c,_d)
|? _b='dpd'|| exec('json_fields_dpd','firm_kur',_a,_b,_c,_d)
|? _b='dbschenker'|| exec('json_fields_dbschenker','firm_kur',_a,_b,_c,_d)
|? _b='ups'|| exec('json_fields_ups','firm_kur',_a,_b,_c,_d)
|| ''
?},
::packages
{? _d
||
   TR_PACK.cntx_psh();
   TR_PACK.index('TR_NZL2');
   TR_PACK.prefix(TR_NZL.ref());
   _wyn:='';
   {? TR_PACK.first()
   ||
      {!|?
         _wyn+='{"length":%1, "height":%2, "width":%3, "weight":%4 %5},'
         [gsub($TR_PACK.DLUG,',','.'),
         gsub($TR_PACK.WYS,',','.'),
         gsub($TR_PACK.SZER,',','.'),
         gsub($TR_PACK.WAGA,',','.'),
         TR_SPACK.cntx_psh();
         TR_SPACK.index('TR_PACK');
         TR_SPACK.prefix(TR_PACK.ref(), 'UC');
         _custom:='';
         {? TR_SPACK.first()
         ||
            {!|?
               {? TR_SPACK.KOD='1'
               ||
                  _custom+=',"size_custom": "%1"'[TR_SPACK.KOD]
               ?};
               TR_SPACK.next()
            !}
         ?};
         TR_SPACK.cntx_pop();
         _custom
         ];
         TR_PACK.next()
      !}
   ?};
   TR_PACK.cntx_pop();
   _wyn-1
||
   '{"length":%1, "height":%2, "width":%3, "weight":%4 %5}'
   [gsub($TR_PACK.DLUG,',','.'),
   gsub($TR_PACK.WYS,',','.'),
   gsub($TR_PACK.SZER,',','.'),
   gsub($TR_PACK.WAGA,',','.'),
   TR_SPACK.cntx_psh();
   TR_SPACK.index('TR_PACK');
   TR_SPACK.prefix(TR_PACK.ref(), 'UC');
   _custom:='';
   {? TR_SPACK.first()
   ||
      {!|?
         {? TR_SPACK.KOD='1'
         ||
            _custom+=',"size_custom": "%1"'[TR_SPACK.KOD]
         ?};
         TR_SPACK.next()
      !}
   ?};
   TR_SPACK.cntx_pop();
   _custom
   ]
?}
];
_json


\json_fields_dhl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  komunikat utworzenia przesyłki - fields
::   WE: _a- _order_id
::       _b- _courier_code
::       _c- account_id
::       _d- _multi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_json:='
{
         "id": "pickup_date",
         "value": %1
       },
       {
         "id": "package_type",
         "value": "%2"
       },
       {
         "id": "before_delivery_notification",
         "value": "%3"
       },
       {
         "id": "cod",
         "value": "%4"
       },
       {
         "id": "insurance",
         "value": "%5"
       },
       %6
       {
         "id": "package_description",
         "value": "%7"
       },
       {
         "id": "content",
         "value": "%8"
       }
       '[
::pickup_date
10+$tm_stamp(TR_PACK.DN~1,TR_PACK.DN~2,TR_PACK.DN~3,time~1,time~2,time~3),
::package_type
exec('FindInSet','#table','TR_SL','COURIER',TR_PACK.R_PCK,_b,"TR_SL.KOD",1,'RS'),
::before_delivery_notification
$TR_PACK.POW,
::cod
{? TR_PACK.POB='T' || $TR_PACK.KW_POB || $0 ?},
::insurance
{? TR_PACK.UB='T' || $TR_PACK.KW_UB || $0 ?},
::services
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'UC');
_wyn:='';
{? TR_SPACK.first()
||
   {!|?
      {? TR_SPACK.KOD<>'1'
      ||
         _wyn+='{ "id": "services", "value": "%1"},'[TR_SPACK.KOD]
      ?};
      TR_SPACK.next()
   !}
?};
TR_SPACK.prefix(TR_PACK.ref(), 'UR');
{? TR_SPACK.first()
||
   {!|?
      _wyn+='{ "id": "services", "value": "%1"},'[TR_SPACK.KOD];
      TR_SPACK.next()
   !}
?};
TR_SPACK.prefix(TR_PACK.ref(), 'U1');
{? TR_SPACK.first()
||
   {!|?
      _wyn+='{ "id": "service", "value": "%1"},'[TR_SPACK.KOD];
      TR_SPACK.next()
   !}
?};
TR_SPACK.cntx_pop();
_wyn
,
::package_description
TR_PACK.OPIS,
::conent
30+TR_PACK.OPIS
];
_json


\json_fields_ups
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  komunikat utworzenia przesyłki - fields
::   WE: _a- _order_id
::       _b- _courier_code
::       _c- account_id
::       _d- _multi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_json:='
{
         "id": "package_type",
         "value": "%1"
       },
       {
         "id": "service",
         "value": "%2"
       },
       {
         "id": "cod",
         "value": "%3"
       },
       %4
       %5
       {
         "id": "package_description",
         "value": "%6"
       }
       %7
       %8
       '[
::package_type
exec('FindInSet','#table','TR_SL','COURIER',TR_PACK.R_PCK,_b,"TR_SL.KOD",1,'RS'),
::service
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'UR');
_wyn:='';
{? TR_SPACK.first() || _wyn:=TR_SPACK.KOD ?};
TR_SPACK.cntx_pop();
_wyn,
::cod
{? TR_PACK.POB='T' || $TR_PACK.KW_POB || $0 ?},
::services_additional
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'UC');
_wyn:='';
{? TR_SPACK.first()
||
   {!|?
      {? TR_SPACK.KOD<>'returnlabel'
      || _wyn+='{ "id": "services_additional", "value": "%1"},'[TR_SPACK.KOD]
      ?};
      TR_SPACK.next()
   !}
?};
TR_SPACK.cntx_pop();
_wyn,
::value_price
{? TR_PACK.WAP<>0 || '{ "id": "value_price", "value": "%1"},'[$TR_PACK.WAP] || '' ?},
::package_description
TR_PACK.OPIS,
::returnlabel
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'UC');
_wyn:='';
{? TR_SPACK.first()
||
   {!|?
      {? TR_SPACK.KOD='returnlabel'
      || _wyn+=',{ "id": "returnlabel", "value": "%1"}'[TR_SPACK.KOD]
      ?};
      TR_SPACK.next() & _wyn=''
   !}
?};
TR_SPACK.cntx_pop();
_wyn,
::invoice_date
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'UC');
_wyn:='';
{? TR_SPACK.first()
||
   {!|?
      {? TR_SPACK.KOD='commercial_invoice'
      || _wyn+=',{ "id": "invoice_date", "value": "%1"}'
         [10+$tm_stamp(TR_PACK.DN~1,TR_PACK.DN~2,TR_PACK.DN~3,time~1,time~2,time~3)]
      ?};
      TR_SPACK.next() & _wyn=''
   !}
?};
TR_SPACK.cntx_pop();
_wyn
];
_json


\json_fields_paczkomaty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  komunikat utworzenia przesyłki - fields
::   WE: _a- _order_id
::       _b- _courier_code
::       _c- account_id
::       _d- _multi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_json:='
    %1
    {
      "id": "size_type",
      "value": "%2"
    },
    {
      "id": "cod",
      "value": "%3"
    },
    {
      "id": "insurance",
      "value": "%4"
    },
    {
      "id": "package_description",
      "value": "%5"
    }
    %6
'[
::service
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'UR');
_wyn:='';
{? TR_SPACK.first()
||
   {!|?
      _wyn+='{ "id": "service", "value": "%1"},'[TR_SPACK.KOD];
      TR_SPACK.next()
   !}
?};
TR_SPACK.cntx_pop();
_wyn
,
::size_type
exec('FindInSet','#table','TR_SL','COURIER',TR_PACK.R_PCK,_b,"TR_SL.KOD",1,'RS'),
::cod
{? TR_PACK.POB='T' || $TR_PACK.KW_POB || $0 ?},
::insurance
{? TR_PACK.UB='T' || $TR_PACK.KW_UB || $0 ?},
::package_description
TR_PACK.OPIS,
::services_additional
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'UC');
_wyn:='';
{? TR_SPACK.first()
||
   {!|?
      _wyn+=',{ "id": "services_additional", "value": "%1"}'[TR_SPACK.KOD];
      TR_SPACK.next()
   !}
?};
TR_SPACK.cntx_pop();
_wyn
];
_json


\json_fields_inpostkurier
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  komunikat utworzenia przesyłki - fields
::   WE: _a- _order_id
::       _b- _courier_code
::       _c- account_id
::       _d- _multi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_json:='
    %1
    {
      "id": "cod",
      "value": "%2"
    },
    {
      "id": "insurance",
      "value": "%3"
    },
    %4
    {
      "id": "package_description",
      "value": "%5"
    }
'[
::service
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'UR');
_wyn:='';
{? TR_SPACK.first()
||
   {!|?
      _wyn+='{ "id": "service", "value": "%1"},'[TR_SPACK.KOD];
      TR_SPACK.next()
   !}
?};
TR_SPACK.cntx_pop();
_wyn
,
::cod
{? TR_PACK.POB='T' || $TR_PACK.KW_POB || $0 ?},
::insurance
{? TR_PACK.UB='T' || $TR_PACK.KW_UB || $0 ?},
::services_additional
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'UC');
_wyn:='';
{? TR_SPACK.first()
||
   {!|?
      _wyn+='{ "id": "services_additional", "value": "%1"},'[TR_SPACK.KOD];
      TR_SPACK.next()
   !}
?};
TR_SPACK.cntx_pop();
_wyn,
::package_description
TR_PACK.OPIS
];
_json


\json_fields_dpd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  komunikat utworzenia przesyłki - fields
::   WE: _a- _order_id
::       _b- _courier_code
::       _c- account_id
::       _d- _multi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_json:='
{
      "id": "cod",
      "value": "%1"
   },
   {
      "id": "insurance",
      "value": "%2"
   },
   {
      "id": "package_description",
      "value": "%3"
   }
   %4
'[
::cod
{? TR_PACK.POB='T' || $TR_PACK.KW_POB || $0 ?},
::insurance
{? TR_PACK.UB='T' || $TR_PACK.KW_UB || $0 ?},
::package_description
TR_PACK.OPIS,
::services
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'UC');
_wyn:='';
{? TR_SPACK.first()
||
   {!|?
      _wyn+=',{ "id": "services", "value": "%1"}'[TR_SPACK.KOD];
      TR_SPACK.next()
   !}
?};
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'UR');
{? TR_SPACK.first()
||
   {!|?
      _wyn+=',{ "id": "services", "value": "%1"}'[TR_SPACK.KOD];
      TR_SPACK.next()
   !}
?};
TR_SPACK.cntx_pop();
_wyn
];
_json


\json_fields_dbschenker
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS:  komunikat utworzenia przesyłki - fields
::   WE: _a- _order_id
::       _b- _courier_code
::       _c- account_id
::       _d- _multi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_json:='
{
         "id": "pickup_date",
         "value": %1
       },
       {
         "id": "dropoff_date",
         "value": "%2"
       },
       {
         "id": "package_type",
         "value": "%3"
       },
       {
         "id": "cod",
         "value": "%4"
       },
       %5
       {
         "id": "package_description",
         "value": "%6"
       },
       {
         "id": "dropoff_instructions",
         "value": "%7"
       }
       %8
       %9
       %10
       '[
::pickup_date
10+$tm_stamp(TR_PACK.DN~1,TR_PACK.DN~2,TR_PACK.DN~3,time~1,time~2,time~3),
::dropoff_date
10+$tm_stamp(TR_PACK.DO~1,TR_PACK.DO~2,TR_PACK.DO~3,time~1,time~2,time~3),
::package_type
exec('FindInSet','#table','TR_SL','COURIER',TR_PACK.R_PCK,_b,"TR_SL.KOD",1,'RS'),
::cod
{? TR_PACK.POB='T' || $TR_PACK.KW_POB || $0 ?},
::services_additional
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'UC');
_wyn:='';
{? TR_SPACK.first()
||
   {!|?
      _wyn+='{ "id": "services_additional", "value": "%1"},'[TR_SPACK.KOD];
      TR_SPACK.next()
   !}
?};
TR_SPACK.cntx_pop();
_wyn
,
::package_description
TR_PACK.OPIS,
::dropoff_instructions
TR_PACK.OPIS,
::palette_type
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'UR');
_wyn:='';
{? TR_SPACK.first()
||
   _wyn+=',{ "id": "palette_type", "value": "%1"}'[TR_SPACK.KOD]
?};
TR_SPACK.cntx_pop();
_wyn,
::time_window_from
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'U1');
_wyn:='';
{? TR_SPACK.first()
||
   _wyn+=',{ "id": "time_window_from", "value": "%1"}'[TR_SPACK.KOD]
?};
TR_SPACK.cntx_pop();
_wyn
,
::time_window_to
TR_SPACK.cntx_psh();
TR_SPACK.index('TR_PACK');
TR_SPACK.prefix(TR_PACK.ref(), 'U2');
_wyn:='';
{? TR_SPACK.first()
||
   _wyn+=',{ "id": "time_window_to", "value": "%1"}'[TR_SPACK.KOD]
?};
TR_SPACK.cntx_pop();
_wyn
];
_json


\getLabel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  pobranie etykiety przesyłki
::   WE: _a- courier_code
::       _b- package_number
::       _c- _multi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='getLabel';
_choice:=1;
{? _a='dbschenker' & TR_PACK.R_PCK*'System' || _choice:=FUN.choice('Co należy pobrać?'@,1,'Etykieta'@,'List przewozowy'@) ?};
{? _choice=0 || return(0) ?};
_par:=exec('json_getLabel','firm_kur', _a, _b, _choice);
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_pres('extension', json_parse(_wyn_obj.WYN))=2
|| _nazwa:='etykieta.'+ json_parse(_wyn_obj.WYN).extension
|| return(0)
?};
{? var_pres('label', json_parse(_wyn_obj.WYN))=2
|| _data:=json_parse(_wyn_obj.WYN).label
|| return(0)
?};
::czyszczenie pola
{? _c
||
   TR_PACK.cntx_psh();
   TR_PACK.index('TR_NZL2');
   TR_PACK.prefix(TR_NZL.ref());
   {? TR_PACK.first()
   ||
      {!|?
         TR_PACK.ETYK:=null();
         TR_PACK.put();
         TR_PACK.next()
      !}
   ?};
   TR_PACK.cntx_pop();
   TR_PACK.get()
||
   TR_PACK.ETYK:=null();
   TR_PACK.put()
?};

_file:=fopen(_nazwa,'bw',,,1);
{? ~((type_of(_file)=119)& base64('decode',_data,_file))

||
   {? (type_of(_file)=119) || _file.fclose() ?}; return(0)
||
   {? _c
   ||
      TR_PACK.cntx_psh();
      TR_PACK.index('TR_NZL2');
      TR_PACK.prefix(TR_NZL.ref());
      _int:=1;
      {? TR_PACK.first()
      ||
         {!|?
            {? ~TR_PACK.bl_put('ETYK',_nazwa)
            || {? (type_of(_file)=119) || _file.fclose() ?}; TR_PACK.cntx_pop(); return(0)
            ?};
            TR_PACK.LPETYK:=_int;
            TR_PACK.put();
            _int+=1;
            TR_PACK.next()
         !}
      ?};
      TR_PACK.cntx_pop();
      TR_PACK.get()
   ||
      TR_PACK.bl_put('ETYK',_nazwa)
   ?}
?};
_file.fclose();
1


\json_getLabel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  komunikat pobrania etykiety przesyłki
::   WE: _a- courier_code
::       _b- package_number
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
    "courier_code": "%1",
    "package_number": "%2"
    %3
}'[
_a,
_b,
{? _c=2 || ',"printout_type": "LP"'
|| ''
?}
];
_json


\getOrderPackages
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  pobranie id przesyłki
::   WE: _a- order_id
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='getOrderPackages';
_par:=exec('json_getOrderPackages','firm_kur', _a);
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? type_of(json_parse(_wyn_obj.WYN))=117
& var_pres('packages', json_parse(_wyn_obj.WYN))>0
& obj_len(json_parse(_wyn_obj.WYN).packages)>0
& var_pres('package_id', json_parse(_wyn_obj.WYN).packages[1])=2
|| json_parse(_wyn_obj.WYN).packages[1].package_id
|| ''
?}


\json_getOrderPackages
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  komunikat pobranina id przesyłki
::   WE: _a- order_id
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
    "order_id": "%1"
}'[
_a
];
_json


\getCourierPackagesStatusHistory
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  pobranie histori przesyłki
::   WE: _a- package_id
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a='' || return(0) ?};
_token:=exec('get','#params',700808,2);
_method:='getCourierPackagesStatusHistory';
_par:=exec('json_getCourierPackagesSH','firm_kur', _a);
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_tab_wyn:=json_parse(_wyn_obj.WYN);
{? type_of(_tab_wyn)=117
& var_pres('packages_history', _tab_wyn)>0
& obj_len(_tab_wyn.packages_history)>0
& (_size:=obj_len(_tab_wyn.packages_history[1]))>0
||
::wykonujemy pętle po wszytskich zapisach i sprawdzamy czy są odłożone w tabeli
   _int:=1;

   {!|?
      {? var_pres( 'tracking_status_date', _tab_wyn.packages_history[1][_int])=2
      ||
         _tracking_status_date:=_tab_wyn.packages_history[1][_int].tracking_status_date;
         _str:=tm_form(#(16+($_tracking_status_date+(16*'0'))));
         _date:=exec('str2date','#convert',10+_str);
         _time:=exec('str2time','#convert',8+(11-_str));

         TR_HPACK.cntx_psh();
         TR_HPACK.use('trph'+(TR_PACK.name()+4));
         TR_HPACK.index('TR_PACK');
         TR_HPACK.prefix(TR_PACK.ref(),_date, _time);
         {? ~TR_HPACK.first()
         ||
            TR_HPACK.blank();
            TR_HPACK.TR_PACK:=TR_PACK.ref();
            TR_HPACK.DT:=_date;
            TR_HPACK.TM:=_time;
            TR_HPACK.STAN:=
            {? var_pres( 'tracking_status', _tab_wyn.packages_history[1][_int])=2
            || _tracking_status:=_tab_wyn.packages_history[1][_int].tracking_status;
               {? _tracking_status='0' || 'Nieznany'
               |? _tracking_status='1' || 'Zarejestrowana u kuriera'
               |? _tracking_status='2' || 'Przekazane kurierowi'
               |? _tracking_status='3' || 'Nie dostarczono'
               |? _tracking_status='4' || 'Wydano do doręczenia'
               |? _tracking_status='5' || 'Dostarczono'
               |? _tracking_status='6' || 'Zwrot'
               |? _tracking_status='7' || 'Awizo'
               |? _tracking_status='8' || 'Oczekuje w punkcie'
               |? _tracking_status='9' || 'Zagubiona'
               |? _tracking_status='10' || 'Anulowana'
               |? _tracking_status='11' || 'W drodze'
               || ''
               ?}
            || ''
            ?};
            TR_HPACK.MJS:=
            {? var_pres( 'courier_status_code', _tab_wyn.packages_history[1][_int])=2
            || _tab_wyn.packages_history[1][_int].courier_status_code
            || ''
            ?};
            TR_HPACK.prefix();
            TR_HPACK.add()
         ?};
         TR_HPACK.cntx_pop();
         _int+=1;
         _int<=_size
      ?}
   !}
?};
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
::aktualizacja statusu
exec('setSTAN_pack','transport_paczki',TR_PACK.ref());
1


\json_getCourierPackagesSH
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  komunikat pobrania histori przesyłki
::   WE: _a- package_id
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
    "package_ids": [
        %1
    ]
}'[
_a
];
_json


\getCourierFields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  pobranie pól słownika
::   WE: _a- courier_code
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='getCourierFields';
_par:=exec('json_getCourierFields','firm_kur', _a);
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);

:: wyjątki spowodowane numerami w nazwach pola
_wyn:=gsub(_wyn_obj.WYN,'&nbsp;',' ');
_int:=0;
{!|?
   _wyn:=gsub(_wyn,'"%1'[$_int],'"ttt%1'[$_int]);
   _int+=1;
   _int<=9
!};

_godz:=7;
{!|?
   _godz_s:=(('0'+$_godz)+2)+':00"';
   _wyn:=gsub(_wyn,'"'+_godz_s,'"t'+_godz_s);
   _godz+=1;
   _godz<23
!};

{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_tab_wyn:=json_parse(_wyn);

{? type_of(_tab_wyn)=117
& var_pres('fields', _tab_wyn)>0
& (_size:=obj_len(_tab_wyn.fields))>0

||

   _int:=1;
   _Slo:=tab_tmp(1,'ID','STRING[30]','Identyfikator','NAME','STRING[70]','Nazwa');

   {!|?
      {? (var_pres('id', _tab_wyn.fields[_int])=2)
      & (var_pres('name', _tab_wyn.fields[_int])=2)
      & (_tab_wyn.fields[_int].id = 'services'
      | _tab_wyn.fields[_int].id = 'package_type'
      | _tab_wyn.fields[_int].id = 'service'
      | _tab_wyn.fields[_int].id = 'size_type'
      | _tab_wyn.fields[_int].id = 'services_additional'
      | _tab_wyn.fields[_int].id = 'time_window_from'
      | _tab_wyn.fields[_int].id = 'time_window_to'
      | _tab_wyn.fields[_int].id = 'palette_type'
      | _tab_wyn.fields[_int].id = 'returnlabel')
      & (var_pres('options', _tab_wyn.fields[_int])>0)
      & ((_size_sl:=obj_len(_tab_wyn.fields[_int].options))>0)
      ||
         {? _tab_wyn.fields[_int].id='services' || _rodz:='UC'
         |? _tab_wyn.fields[_int].id='package_type' || _rodz:='RS'
         |? _tab_wyn.fields[_int].id='service' & _a<>'dhl' || _rodz:='UR'
         |? _tab_wyn.fields[_int].id='service' & _a='dhl' || _rodz:='U1'
         |? _tab_wyn.fields[_int].id='size_type' || _rodz:='RS'
         |? _tab_wyn.fields[_int].id='services_additional' || _rodz:='UC'
         |? _tab_wyn.fields[_int].id='time_window_from' || _rodz:='U1'
         |? _tab_wyn.fields[_int].id='time_window_to' || _rodz:='U2'
         |? _tab_wyn.fields[_int].id='palette_type' || _rodz:='UR'
         |? _tab_wyn.fields[_int].id='returnlabel' || _rodz:='UC'
         ?};
         {? var_press('_tab_opt')>0 || obj_del(_tab_opt) ?};
         _tab_opt:=obj_ntab_names(_tab_wyn.fields[_int].options);
         _int_sl:=1;
         {!|?
            TR_SL.cntx_psh();
            TR_SL.index('KOD');
            _kod:= _tab_opt[_int_sl];
:: wyjątki spowodowane numerami w nazwach pola
            {? 3+_kod='ttt' || _kod:=3-_kod ?};

            _godz:=7;

            {!|?
               _godz_s:=(('0'+$_godz)+2);
               {? _kod=('t'+_godz_s) || _kod:=(_godz_s + ':00') ?};
               _godz+=1;
               _godz<23
            !};

            TR_SL.prefix(_a,_rodz,_kod,);
            {? ~TR_SL.first() & _kod<>'INVALID_FIELD_NAME__00000001'
            ||
               TR_SL.blank();
               TR_SL.RODZ:=_rodz;
               TR_SL.COURIER:=_a;
               TR_SL.KOD:=_kod;
               TR_SL.OPIS:=_tab_wyn.fields[_int].options[_int_sl];
               {? (8+ TR_SL.OPIS)='Usługa \'' & _a<>'dpd' & _a<>'dbschenker' & _a<>'ups'
               || TR_SL.OPIS:=(8-TR_SL.OPIS-1);
                  TR_SL.RODZ:='UR'
               |? (8+ TR_SL.OPIS)='Usługa \''
               || TR_SL.OPIS:=(8-TR_SL.OPIS);
                  TR_SL.OPIS:=gsub(TR_SL.OPIS,'\'','')
               ?};
:: wyjątki dpd
               {? TR_SL.KOD='time0930'
               | TR_SL.KOD='time1200'
               | TR_SL.KOD='dpdnextday'
               | TR_SL.KOD='saturday'
               | TR_SL.KOD='tires'
               || TR_SL.RODZ:='UR'
               ?};
               TR_SL.OPIS:=gsub(TR_SL.OPIS,'&rsaquo;','>');
               TR_SL.OPIS:=gsub(TR_SL.OPIS,'\'','"');
               TR_SL.prefix(TR_SL.COURIER,TR_SL.RODZ,TR_SL.KOD,);
               {? ~TR_SL.first() || TR_SL.prefix();TR_SL.add() ?}
            ?};
            TR_SL.cntx_pop();
            _int_sl+=1;
            _int_sl<=_size_sl

         !}
      ?};
      {? var_press('_tab_opt')>0 || obj_del(_tab_opt) ?};
      _int+=1;
      _int<=_size
   !};
:: dodanie znacznika z nietypowym kształtem
   {? var_pres('package_fields', _tab_wyn)>0
   & (_size_pf:=obj_len(_tab_wyn.package_fields))>0
   ||
      _int:=1;
      {!|?
         {? _tab_wyn.package_fields[_int].id='size_custom'
            & (var_pres('options', _tab_wyn.package_fields[_int])>0)
            & ((_size_sl:=obj_len(_tab_wyn.package_fields[_int].options))>0)
         ||
            {? var_press('_tab_opt')>0 || obj_del(_tab_opt) ?};
            _tab_opt:=obj_ntab_names(_tab_wyn.package_fields[_int].options);
            _int_sl:=1;
            _rodz:='UC';
            {!|?
               TR_SL.cntx_psh();
               TR_SL.index('SLO');
               _kod:= _tab_opt[_int_sl];
:: wyjątki spowodowane numerami w nazwach pola
               {? 3+_kod='ttt' || _kod:=3-_kod ?};

               TR_SL.prefix(_a,_kod,);
               {? ~TR_SL.first()
               ||
                  TR_SL.blank();
                  TR_SL.RODZ:=_rodz;
                  TR_SL.COURIER:=_a;
                  TR_SL.KOD:=_kod;
                  TR_SL.OPIS:=_tab_wyn.package_fields[_int].options[_int_sl];
                  TR_SL.prefix();
                  TR_SL.add()
               ?};
               TR_SL.cntx_pop();
               _int_sl+=1;
               _int_sl<=_size_sl
            !}
         ?};
         {? var_press('_tab_opt')>0 || obj_del(_tab_opt) ?};
         _int+=1;
         _int<=_size_pf
      !}
   ?};

:: dodawanie sztucznego typu paczki
   TR_SL.cntx_psh();
   TR_SL.index('KOD');
   TR_SL.prefix(_a, 'RS');
   {? ~TR_SL.first()
   ||
      TR_SL.RODZ:='RS';
      TR_SL.COURIER:=_a;
      TR_SL.KOD:='ND';
      TR_SL.OPIS:='Nie dotyczy'@;
      TR_SL.WYB:=1;
      TR_SL.add()
   ?};
   TR_SL.cntx_pop();
:: zmiana znacznika wielu paczek
   {? var_pres('multi_packages', _tab_wyn)=1
   ||
      {? _tab_wyn.multi_packages & _a<>'ups'
      ||
         _multi:=1;
         {? _multi<> TR_ZEWN.MULTI & FUN.ask('Kurier obsługuje wiele paczek. Czy zmienić znacznik?'@)
         ||
            TR_ZEWN.MULTI:=_multi;
            TR_ZEWN.put()
         ?}
      ||
         _multi:=0;
         {? _multi<> TR_ZEWN.MULTI & FUN.ask('Kurier nie obsługuje wiele paczek. Czy zmienić znacznik?'@)
         ||
            TR_ZEWN.MULTI:=_multi;
            TR_ZEWN.put()
         ?}
      ?}
   ?};
   _wyn:=''
||
   _wyn:='error'
?};
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_wyn


\json_getCourierFields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS:  komunikat pobrania pól słownika
::   WE: _a- courier_code
::       _b- package_number
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
    "courier_code": "%1"
}'[
_a
];
_json


\maps_panel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Wyświetlanie mapki dhl
::----------------------------------------------------------------------------------------------------------------------
__courier:=_a;

menu_act('PULPIT_J','P');
dsk_menu('PULPIT_J','Czy zamknąć bieżącą zakłądkę?'@,"exec('maps_ctr','firm_kur',__courier)",
"exec('ctr_callback','firm_kur',__courier)");

&__courier


\act_maps
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Wyświetlanie zakładki z mapką dhl
:: ~OST: INFORK
::----------------------------------------------------------------------------------------------------------------------
KH_MSC.cntx_psh();
{? var_press('__tr_zewn')>0
|| FUN.info('Wybór z mapy został już uruchomiomiony na innej zakładce.'@)
|| {? TR_ZEWN.COURIER='dhl' | TR_ZEWN.COURIER='paczkomaty'
   ||
      __tr_zewn:=TR_ZEWN.ref();
      {? exec('interm','#system')>0
      || FUN.info(exec('interm_nacc_msg','#system'))
      || fork_hid(,'maps_panel','firm_kur',TR_ZEWN.COURIER)
      ?};
      VAR_DEL.delete('__tr_zewn')
   ||
      FUN.info('Mapa nie obsługiwana dla tego kodu kuriera.'@)
   ?}
?};
{? KH_MSC.f_active > 0 || KH_MSC.f_rfresh ?};
KH_MSC.cntx_pop()


\maps_ctr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Inicjacja webbrowser z mapką
:: ~OST: INWEBBROWSER
::----------------------------------------------------------------------------------------------------------------------
{? exec('interm','#system')>0
|| FUN.emsg(exec('interm_nacc_msg','#system'));
   return()
?};

inst_dsk('@webbrowser2>desktop',1);

: ukrywa przyciski przeglądarkowe typu odśwież, adres
ctr_set('!desktop',,'setButtonBarVisible','false');
ctr_set('!desktop',,'setLocationBarVisible','false');

: jaki typ wyszukiwania był wybrany
_stype:='%'+_a;

: tytuł zakładki wyszukiwania
{? _a='dhl' || title('DHL Parcelshop',,1)
|? _a='paczkomaty' || title('Paczkomaty',,1)
?};

: załadowanie strony
ctr_call('!desktop',,'loadBrowserControl',_stype);
~~


\ctr_callback
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Callback controlki
::----------------------------------------------------------------------------------------------------------------------
TR_ZEWN.cntx_psh();
KH_MSC.cntx_psh();
TR_ZEWN.index('API');
TR_ZEWN.prefix('T', _a);
TR_ZEWN.first();

KH_MSC.index('TR_ZEWN');
KH_MSC.prefix(TR_ZEWN.ref(), ctr_info('sap'));
{? KH_MSC.first()
|| msg('Punkt osbioru '@ + KH_MSC.NAZ + ' jest już w bazie.'@, 'Merit ERP')
||
   KH_MSC.prefix();
   KH_MSC.blank();
   KH_MSC.KOD:=ctr_info('sap');
   KH_MSC.NAZ:=ctr_info('name');
   KH_MSC.KPOCZ:=ctr_info('zip');
   KH_MSC.POCZ:=ctr_info('city');
   KH_MSC.MIASTO:=ctr_info('city');
   KH_MSC.UL:=ctr_info('street');
   KH_MSC.UL+=' '+ctr_info('streetNo');
   {? ctr_info('houseNo')<>'' || KH_MSC.UL+='/'+ctr_info('houseNo') ?};
   KH_MSC.TR_ZEWN:=TR_ZEWN.ref();
   {? KH_MSC.add()
   || msg('Dodono punkt osbioru: '@ + KH_MSC.NAZ +'.', 'Merit ERP');
      TR_ZEWN.cntx_pop();
      KH_MSC.cntx_pop();
      break()
   || msg('Nie udało się dodać punktu odbioru.'@, 'Merit ERP')
   ?}
?};
TR_ZEWN.cntx_pop();
KH_MSC.cntx_pop()


\val_ord
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Walidacja zamówienia
::   WE: _a- courier_code
::       _b- źródło danych
::       _c- dane do walidacji
::----------------------------------------------------------------------------------------------------------------------
_numer:={? TR_NZL.NUMER<>'' & TR_NZL.LOKAL<>''  || TR_NZL.NUMER+'/'+TR_NZL.LOKAL
        |? TR_NZL.NUMER<>''                     || TR_NZL.NUMER
        |? TR_NZL.LOKAL<>''                     || TR_NZL.LOKAL
        ||''
        ?};

{? _a='dhl'
||
   {? _b='TR_NZL.KH().NAZ'|| 50+_c
   |? _b='TR_NZL.UL' || {? _numer=''
                        || {? (#((35+_c)+1)|(((35+_c)+1)='0'))
                            | (#((34+_c)+1)|(((34+_c)+1)='0'))
                            | (#((33+_c)+1)|(((33+_c)+1)='0'))
                           || 35+_c
                           || (33 + _c) +' 1'
                           ?}
                        || (35-(+(15+_numer)))+_c
                        ?}
   |? _b='TR_NZL.NUMER' || 15+_c
   |? _b='TR_NZL.MIASTO' || 17+_c
   |? _b='TR_NZL.KH_MSC().NAZ'|| 50+_c
   |? _b='TR_NZL.KH_MSC().UL'|| 35+_c
   |? _b='TR_NZL.KH_MSC().MIASTO' || 17+_c
   || _c
   ?}
|? _a='dpd'
||
   {? _b='TR_NZL.KH().NAZ'|| 57+_c
   |? _b='TR_NZL.UL' || {? _numer=''
                        || (28 + _c)
                        || (30-(+_numer))+_c
                        ?}
   |? _b='TR_NZL.NUMER' || _c
   |? _b='TR_NZL.MIASTO' || 37+_c
   |? _b='TR_NZL.KH_MSC().NAZ'|| 57+_c
   |? _b='TR_NZL.KH_MSC().UL'|| 30+_c
   |? _b='TR_NZL.KH_MSC().MIASTO' || 37+_c
   || _c
   ?}
||
   _c
?}


\http_pickup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Pobiera miejsca dostaw dla DPD PICKUP
::   WE: _a - kod kuriera
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',700809,2)=''
|| FUN.info('Niewypełniony parametr 700809 (Klucz DPD PICKUP).'@);return(0)
?};
_key:=exec('get','#params',700809,2);
_courier:= TR_ZEWN.COURIER;
{? var_press('TAB_E_PU')>0 || obj_del(TAB_E_PU) ?};
TAB_E_PU:=_tab:= tab_tmp(,
   'ZIPCODE', 'STRING[6]', 'Kod pocztowy',
   'CITY', 'STRING[50]', 'Miejscowość'
);
_win_acr:= _tab.mk_edit('Dołącz z listy'@,1);
_tab.efld_opt(_win_acr,'mark=1',_tab,'ZIPCODE');
_tab.efld_opt(_win_acr,'mark=1',_tab,'CITY');
_tab.win_edit( _win_acr);
{? _tab.edit(
" _zipcode:=gsub(TAB_E_PU.ZIPCODE,'-','');
  {? (#_zipcode)=0 || FUN.info('Należy podać prawidłowy kod pocztowy.'@); return('ZIPCODE') ?};
  {? TAB_E_PU.CITY='' || FUN.info('Należy podać nazwę miejscowości.'@); return('CITY') ?};
  1
"
)
||
   _zipcode:=gsub(_tab.ZIPCODE,'-','');
   _city:=_tab.CITY
||
   return(0)
?};

_url:='https://mypudo.dpd.com.pl/api/pudo/list/byaddress';

:: Tryb cichy poza transakcją
{? do_state()=0 || _do:=0; _no_msg:=no_msg(1) || _do:=1 ?};
_http:=inet_get(_url);
{? _do=0 || no_msg(_no_msg) ?};

{? type_of(_http)<100
||
   exec('log_write','firm_kur','','Błąd wywołania funkcji %1.'['inet_get()'],0);
   return(-1)
?};
_http.append_header('User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:60.0) Gecko/20100101 Firefox/60.0');

_http.url_add_param('countryCode','POL');
_http.url_add_param('zipCode',_zipcode);
_http.url_add_param('city',_city);
_http.url_add_param('Key',_key);
_http.url_add_param('requestID','1');
_http.http_get();
{? _http.get_status()=200
||
   _wyn:=_http.get_data();
   _wyn:=xml_tparse(_wyn).xml_tconvert();
   {? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
   _tab_wyn:=json_parse(_wyn);
   {? var_pres('PUDO_ITEMS', _tab_wyn)>100
   & var_pres('PUDO_ITEM', _tab_wyn.PUDO_ITEMS)>100
   ||
      {? var_press('PUDO_ID', _tab_wyn.PUDO_ITEMS.PUDO_ITEM)=2
      ||
         exec('select_pickup','firm_kur',1,_tab_wyn,_courier)
      ||
         exec('select_pickup','firm_kur',obj_len(_tab_wyn.PUDO_ITEMS.PUDO_ITEM),_tab_wyn,_courier)
      ?}
   ||
      {? var_pres('PUDO_ITEMS', _tab_wyn)=2
      ||
         FUN.info('Brak dostępnych punktów odbioru.'@)
      ?}
   ?}
||
   FUN.info('Nie udało się nawiązać połączenia'@)
?};
{? var_press('TAB_E_PU')>0 || obj_del(TAB_E_PU) ?};
{? KH_MSC.f_active > 0 || KH_MSC.f_rfresh ?};
~~


\select_pickup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: wysyła plik lub stringa postem i zapisuje w logu (jeśli podane parametry _b / _c)
::   WE: _a - ilość miejsc dostaw w komunikacie
::       _b - objekt komunikatu
::       _c - _courier
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__courier:=_c;
{? var_press('TAB_PU')>0 || obj_del(TAB_PU) ?};
TAB_PU:=_tab:=tab_tmp(1,
              'ID','STRING[50]','ID'@,
              'NAZ','STRING[50]','Nazwa'@,
              'ADRES','STRING[50]','Adres'@,
              'MIEJ','STRING[50]','Miejscowość'@,
              'KOD','STRING[5]','KOD'@);

_int:=1;
{? _a>1
||
   {!|?
   _tab.ID:=_b.PUDO_ITEMS.PUDO_ITEM[_int].PUDO_ID;
   _tab.NAZ:=_b.PUDO_ITEMS.PUDO_ITEM[_int].LOCATION_HINT;
   _tab.ADRES:=_b.PUDO_ITEMS.PUDO_ITEM[_int].ADDRESS1;
   _tab.MIEJ:=_b.PUDO_ITEMS.PUDO_ITEM[_int].CITY;
   _tab.KOD:=_b.PUDO_ITEMS.PUDO_ITEM[_int].ZIPCODE;
   _tab.add();
   _int+=1;
   _int<=_a
   !}
||
   _tab.ID:=_b.PUDO_ITEMS.PUDO_ITEM.PUDO_ID;
   _tab.NAZ:=_b.PUDO_ITEMS.PUDO_ITEM.LOCATION_HINT;
   _tab.ADRES:=_b.PUDO_ITEMS.PUDO_ITEM.ADDRESS1;
   _tab.MIEJ:=_b.PUDO_ITEMS.PUDO_ITEM.CITY;
   _tab.KOD:=_b.PUDO_ITEMS.PUDO_ITEM.ZIPCODE;
   _tab.add()
?};

_okn:=_tab.mk_sel('Punkty PICKUP DPD'@,'P',,,,,,,'U');
_tab.win_fld(_okn,,'ID',,,20,,1);
_tab.win_fld(_okn,,'NAZ',,,20,,1);
_tab.win_fld(_okn,,'ADRES',,,20,,1);
_tab.win_fld(_okn,,'MIEJ',,,20,,1);
_tab.win_fld(_okn,,'KOD',,,20,,1);
_fb:="
TR_ZEWN.cntx_psh();
KH_MSC.cntx_psh();
TR_ZEWN.index('API');
TR_ZEWN.prefix('T', __courier);
TR_ZEWN.first();

KH_MSC.index('TR_ZEWN');
KH_MSC.prefix(TR_ZEWN.ref(), TAB_PU.ID);
{? KH_MSC.first()
|| FUN.info('Punkt osbioru '@ + KH_MSC.NAZ + ' jest już w bazie.'@)
||
   KH_MSC.prefix();
   KH_MSC.blank();
   KH_MSC.KOD:=TAB_PU.ID;
   KH_MSC.NAZ:=TAB_PU.NAZ;
   KH_MSC.KPOCZ:=TAB_PU.KOD;
   KH_MSC.POCZ:=TAB_PU.MIEJ;
   KH_MSC.MIASTO:=TAB_PU.MIEJ;
   KH_MSC.UL:=TAB_PU.ADRES;
   KH_MSC.TR_ZEWN:=TR_ZEWN.ref();
   {? KH_MSC.add()
   || FUN.info('Dodono punkt odbioru: '@ + KH_MSC.NAZ +'.');
      TR_ZEWN.cntx_pop();
      KH_MSC.cntx_pop();
      &__courier;
      {? var_press('TAB_PU')>0 || obj_del(TAB_PU) ?};
      sel_exit();
      return(0)
   || FUN.info('Nie udało się dodać punktu odbioru.'@)
   ?}
?};
TR_ZEWN.cntx_pop();
KH_MSC.cntx_pop()
";
_tab.win_act(_okn,,'Formuła','&Akceptuj'@@,,,_fb,,1,,,,'A');

_tab.win_sel(_okn);

_tab.select();
{? var_press('__courier')>0 || &__courier ?};
{? var_press('TAB_PU')>0 || obj_del(TAB_PU) ?};
~~


\getOrderStatusList
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS:  pobranie statusów zamówienia
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='getOrderStatusList';
_par:='[]';
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_tab_wyn:=json_parse(_wyn_obj.WYN);

{? type_of(_tab_wyn)=117
& var_pres('statuses', _tab_wyn)>0
& (_size:=obj_len(_tab_wyn.statuses))>0
||
   _int:=1;
   _St:=tab_tmp(1,'ID','INTEGER','Identyfikator','NAME','STRING[40]','Nazwa');

   {!|?
      {? (var_pres('id', _tab_wyn.statuses[_int])=1) & (var_pres('name', _tab_wyn.statuses[_int])=2)
      || _St.ID:=_tab_wyn.statuses[_int].id;
         _St.NAME:=_tab_wyn.statuses[_int].name;
         _St.add()
      ?};
      _int+=1;
      _int<=_size
   !};

   _wer:=_St.mk_sel('Statusy zamówienia'@);
   _St.win_fld(_wer,,'ID',,,,,,'Identyfikator'@);
   _St.win_fld(_wer,,'NAME',,,40,,,'Nazwa'@);
   __choice:=0;

   _fb:="
      _Tab:=cur_tab();
      __choice:=_Tab.ID;
      sel_exit();
      0
   ";
   _St.win_act(_wer,,'Formuła','&Wybierz'@@,,,_fb,,1,0,,,'W');
   _St.win_sel(_wer);
   _St.select();
   _wyn:=$__choice;
   {? _wyn='0' || _wyn:='' ?};
   VAR_DEL.delete('__choice')
||
   _wyn:=''
?};
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_wyn


\addOrderPackages
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS:  Pobranie istniejących paczek
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='getOrderPackages';
_par:=exec('json_getOrderPackages','firm_kur',TR_NZL.ORDER);
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_tab_wyn:=json_parse(_wyn_obj.WYN);
_wyn:=1;
{? type_of(_tab_wyn)=117
& var_pres('packages', _tab_wyn)>0
& (_size:=obj_len(_tab_wyn.packages))>0
||
   _int:=1;
   TR_PACK.cntx_psh();
   TR_PACK.prefix();
   {!|?
      TR_PACK.blank();
      TR_PACK.TR_NZL:=TR_NZL.ref();
      TR_PACK.TR_ZEWN:=TR_NZL.TR_ZEWN;
      TR_PACK.ORDER:=_tab_wyn.packages[_int].package_id;
      TR_PACK.NR:=_tab_wyn.packages[_int].courier_package_nr;
      TR_PACK.MAIL:=TR_NZL.EM;
      TR_PACK.TEL:=TR_NZL.TEL;
      TR_PACK.OPIS:=exec('tr_pack_opis','transport_paczki',TR_NZL.ref());
      _wyn:=TR_PACK.add(1);
      _int+=1;
      _int<=_size & _wyn
   !};
   TR_PACK.cntx_pop()
?};
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_wyn

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:39 5013feb5065241942767a8f48bb38a385e992517089cece7e5c63791a394f5e80aee4e846a28c4d06b30ef6ea92b6fb387294237a3f08f57dc10c5c39592c4c60e6850eff03eb83253483031a946f0810441a9baf041e2acbd2b60e3b863075848e6b0d6a9c385605ccb121ca27bd1d8cb9a0397d2c3e07cfcaafc29fd0a97f3
