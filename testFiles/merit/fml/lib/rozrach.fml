:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: rozrach.fml
::======================================================================================================================
:: Zawartosc:  Procedury do obsługi rozrachunków
::======================================================================================================================


\op_unik_sym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2009+]
:: OPIS: Formula ustala symbol rozrachunku
::   WE: _a  - krotki symbol rozrachunku (50 znakow)
::       _b  - data otwarcia rozrachunku
::      [_c] -rok otwarcia rozrachunku - string 4 znaki
::  OLD: \op_unik_sym/skid_op.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')>0 & type_of(_c)=2
|| {? _a<>''
   || form(_a,50)+'-'+_c
   || ''
   ?}
|| {? _a<>'' & _b<>date(0,0,0)
   || form(_a,50)+'-'+$(_b~1)
   || ''
   ?}
?}


\wyp_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.53]
:: OPIS: Formula szuka jednostki ksiegowej dla rozrachunku
::----------------------------------------------------------------------------------------------------------------------
_wal:={? POZ.WAL<>null || POZ.WAL || FINFO.NAROD ?};
_ref_odd:=POZ.DOK().ODD; _znal:=0;
OP.cntx_psh(); OP.index('KON_O');  OP.prefix(_wal,POZ.DOK().ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK);
{? OP.first() || _znal:=1 ?};
{? ~_znal
|| OP.index('KON'); OP.prefix(_wal,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK);
   {? OP.first() || _ref_odd:=OP.ODD ?}
?};
OP.cntx_pop();
_ref_odd


\e_opdrb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Sprawdza, czy dla rozrachunku istnieje juz lista platnosci
::       na podstawie biezacego POZ.
::   WE: _a: tryb pracy: 0 - bez komunikatu, 1 - z komunikatem
::   WY: 0 - nie istnieje, 1 - istnieje
::  OLD: \e_opdrb/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=0; {? ~_ || _a:=0 ?};
{? +POZ.ID
|| _vwalp:={? POZ.WAL || POZ.WAL || FINFO.NAROD ?};
   _vstr:=POZ.STR; _vwal:=POZ.WAL;
   OP.index('KON_O'); OP.prefix(_vwalp,POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK);
   D_RB.index('OP');
   {? OP.first()
   || {? D_RB.prefix(OP.ref()); D_RB.first()
      || POZ.cntx_psh();
         POZ.use('pozy'+D_RB.OKRO_F().ROK().KOD+form(OKRO_F.NR,-2));
         POZ.clear();
         {? POZ.seek(D_RB.POZ) & (POZ.STR<>_vstr | POZ.WAL<>_vwal)
         || _ret:=1
         ?};
         POZ.cntx_pop();
         {? _a & _ret
         || FUN.info('Dla rozrachunku zdefiniowano już listę płatności.'@)
         ?}
      ?}
   ?}
?};
_ret


\tid_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Formula na F3 dla typu identyfikatora
::  OLD: \tid_f3/skid_op.fml
::----------------------------------------------------------------------------------------------------------------------
WSK.cntx_psh(); WSK.index('RODZ'); WSK.prefix('I');
WSK.win_sel('WER1');
WSK.hdr_sel(); WSK.hdr_sel('Typy rozrachunków'@);
{? ~(fld<>'' & WSK.find_key(fld)) || WSK.first() ?};
_zwrot:={? WSK.select(,1) || fld(WSK.WART) || {? WSK.find_key(fld) || fld() || '' ?} ?};
WSK.hdr_sel();
WSK.cntx_pop();
{? |_zwrot='' || _zwrot:=0 ?};
_zwrot


\poz_nz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Formula po redakcji typu identyfikatora
::   WE: _a - R (przy dekretowaniu), O - OPTMP, P - OP (rozrachunki)
::            K (w definicji konta)
::  OLD: \poz_nz/skid_op.fml
::----------------------------------------------------------------------------------------------------------------------
fld(~-fld);
{? fld()<>'NAL' & fld()<>'ZOB' & fld()<>'INN' & fld()<>'NOD' & fld()<>'ZOD' &
   {? _a='O' || 1 || fld()<>'RMK' & fld()<>'RMP' ?}
|| {? _=1 & _a='K' & fld()=''
   || _zwrot:=1; KS.OBTYPROZ:=0; win_disp()
   || _fld:=(|fld());
      WSK.cntx_psh();
      WSK.index('RODZ'); WSK.prefix('I',_fld);
      {? _fld<>'' &
         {? _a='O' || _fld<>'RMK' & _fld<>'RM' & _fld<>'R' || 1 ?} & WSK.first()
      || {? var_pres('prefroz')<=0 | (var_pres('prefroz')>0 & _fld<>'Z' & _fld<>'N')
         || fld(WSK.WART)
         ?};
         _zwrot:=1
      || FUN.info('Dopuszczalne wartości: '+
                  '\n NAL - należność                         '+
                  '\n ZOB - zobowiązanie                      '+
                  {? _a<>'O' || '\n RMK - rozliczenie międzyokresowe kosztów' || '' ?}+
                  {? _a<>'O' || '\n RMP - rozliczenie międzyokresowe przychodów' || '' ?}+
                  '\n NOD - odsetki od należności             '+
                  '\n ZOD - odsetki od zobowiązań             '+
                  '\n INN - rozrachunek techniczny            '+
                  {? var_pres('prefroz')>0
                  || '\n N  - wszystkie należności             '+
                     '\n Z  - wszystkie zobowiązania           '
                  || ''
                  ?});
         _zwrot:=0
      ?};
      WSK.cntx_pop()
   ?}
|| _zwrot:=1
?};
{? _zwrot & _=1 & _a='R' & (fld()='ZOB' & -(1+POZ.STR)='w' | fld()='NAL' & -(1+POZ.STR)='m')
|| POZ.SLO_PROJ:=null
?};
{? _zwrot & _=1 & _a='R'
|| {? POZ.TID<>'NAL' & POZ.TID<>'ZOB' || POZ.RK:='N' ?};
   _opcja:={? POZ.KOM & POZ.KOM().KS & POZ.KOM().KS().ROZR<>'Z' & DOK.DOK_REJ().RK='T'
              & (POZ.TID='NAL' | POZ.TID='ZOB')
           || 'enable=1'
           || 'enable=0'
           ?};
   POZ.efld_opt(POZ.win_edit('?'),_opcja,,'RK');
   _rk:=POZ.RK;
   win_disp();
   {? _rk='W' || POZ.RK:=_rk ?}
?};
{? _zwrot
|| exec('ust_roz','dok_fks');
   exec('bv_poz_spv','fks_sp')
?};
{? _zwrot & _a='R' & fld()<>'RMK' & fld()<>'RMP'
|| OP.cntx_psh();
   OP.index('KON_O'); OP.prefix(FINFO.NAROD,POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK);
   _op:=OP.first() & (-OP.TYP='rmk' | -OP.TYP='rmp');
   OP.cntx_pop();
   {? ~_op & var_pres('RmRef')>0 & RMK.seek(RmRef)
   ||
      exec('kasujrrmk','rmk',RmRef);
      RMK.del();
      _zwrot:=~RMK.seek(RmRef)
   ?}
?};
{? _=1 & _a='R' || exec('bed_poz_sloproj','dok_fks1') ?};
_zwrot


\oper_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [??]
:: OPIS:
::  OLD: \oper_wal/oper.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('QRT')<=0
|| ROZRACH.W:=null;
   ROZRACH.WN:=ROZRACH.MA:=ROZRACH.SWWN:=ROZRACH.SWMA:=0;
:: TODO - zweryfikować usunięcie PATH.menu_pth z tego miejsca!
   _wal:=SSTALE.WAL;
   SSTALE.WAL:={? POZ.WAL=null || FINFO.NAROD || POZ.WAL ?};
   QRT:=exec('oper_mas','rozrach', 5);
   SSTALE.WAL:=_wal;
   {? QRT[1]
   || ROZRACH.W:=QRT[1]; ROZRACH.WN:=QRT[2];  ROZRACH.MA:=QRT[3];
      {? ROZRACH.WN>=ROZRACH.MA
      || ROZRACH.SWWN:=ROZRACH.WN-ROZRACH.MA
      || ROZRACH.SWMA:=ROZRACH.MA-ROZRACH.WN
      ?}
   ?}
?};
QRT[4]+=1;
_w:=QRT[1];
{? QRT[4]>QRT[5] || obj_del(QRT) ?};
_w


\oper_mas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [??]
:: OPIS:
::  OLD: \oper_mas/oper.fml
::----------------------------------------------------------------------------------------------------------------------
_kont:=1;  _tab:=obj_new(6); _tab[1]:=0; _tab[4]:=1; _tab[5]:=_a;
OP.cntx_psh(); OP.index('KON_O');  OP.prefix(); _wal:=OP.WAL;
_odd:=OP.ODD;  _konto:=OP.AN; _sym:=OP.SYM; _usym:=OP.SYM_ROK;
_slwal:=FINFO.SLWAL().SLU;
{? _slwal<>null
|| SLO.cntx_psh(); SLO.index('SL'); SLO.prefix(_slwal);
   {? SLO.first()
   || {! |?
         {? SLO.ref()<>_wal
         || {? OP.find_key(SLO.ref(),_odd,_konto,_sym,_sym,_usym)
            || _tab[1]:=SLO.ref(); _tab[2]:=OP.WN; _tab[3]:=OP.MA;
               _tab[6]:=OP.ref(); _kont:=0
            ?}
         ?};
         SLO.next() & _kont
      !}
   ?};
   SLO.cntx_pop()
?};
OP.cntx_pop();
_tab


\roz_op_proj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Czy z rozrachunkiem sa zwiazane rozliczenia
::  OLD: \roz_op_proj/skid_prj.fml
::----------------------------------------------------------------------------------------------------------------------
OP.cntx_psh(); ZAP_OP.cntx_psh();
ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref());
PAR_NAG.index('ZAP_OP'); PAR_NAG.prefix();
_ok:=0;
{? ZAP_OP.first()
|| {!
   |? _ok:=PAR_NAG.find_key(ZAP_OP.ref());
      _ok=0 & ZAP_OP.next()
   !}
?};
OP.cntx_pop(); ZAP_OP.cntx_pop();
_ok


\akc_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Formula akceptacji wycofanych parowan zwiazanych z pozycjami dokumentu
::  OLD: \akc_par/parow.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.index('ROZR2');
POZ.prefix(DOK.ref());
PAR_NAG.index('REJ');
PAR_NAG.prefix(FINFO.NAROD,'P','W',DOK.REJ,DOK.NR);
{? PAR_NAG.first()
|| {! |?
      PAR_NAG.cntx_psh();
      _next:={? PAR_NAG.next() || PAR_NAG.ref() || null ?};
      PAR_NAG.cntx_pop();
      {? POZ.find_key(PAR_NAG.ODD,PAR_NAG.KONTO,PAR_NAG.OP,PAR_NAG.OP,PAR_NAG.SYM_ROK)
      || {? PAR_NAG.STR=POZ.STR
         || ZAP_OP.index('ZAP');
            ZAP_OP.prefix(POZ.ref(),FINFO.NAROD,SSTALE.AO,POZ.ODD);
            {? ZAP_OP.first() || exec('par_akc','rozrach') ?}
         ?}
      ?};
      {? _next<>null || PAR_NAG.seek(_next) || 0 ?}
   !}
?};
PAR_POZ.index('PAR_OP'); PAR_POZ.prefix();
{? POZ.last()
|| {! |?
      {? +|POZ.ID
      || PAR_POZ.prefix(POZ.ID,POZ.KON);
         {? PAR_POZ.first()
         || {! |?
               PAR_POZ.PAR_NAG();
               {? PAR_NAG.ZN='W' & PAR_NAG.ODD=POZ.ODD & POZ.STR<>PAR_NAG.STR
               || OP.index('KON_O');
                  OP.prefix(PAR_NAG.WAL,PAR_NAG.ODD,PAR_NAG.KONTO,PAR_NAG.OP,PAR_NAG.OP,PAR_NAG.SYM_ROK);
                  {? OP.first()
                  || ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref());
                     exec('cntx_psh','rozrach');
                     _ok:=0;
                     {? ZAP_OP.first()
                     || {! |?
                           exec('zapopuse','rozrach',1); ZAP_OP.POZDOK().DOK();
                           {? DOK.REJ=PAR_NAG.REJ & DOK.NR=PAR_NAG.NREJ
                           || _ok:=1; 0
                           || ZAP_OP.next()
                           ?}
                        !}
                     ?};
                     {? _ok || exec('par_akc','rozrach') ?};
                     exec('zapopuse','rozrach',0);
                     exec('cntx_pop','rozrach')
                  ?}
               ?};
               PAR_POZ.next()
            !}
         ?}
      ?};
      POZ.prev & POZ.ODD<>null
   !}
?}


\par_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Akceptacja rozliczenia rozrachunkow
::   WE: _a=-1 - akceptacja podczas przenoszenia rozrachunkow
::           0  - zwykla akceptacja
::          niezadeklarowane - akceptacja wycofanych parowan
::  OLD: \par_akc/parow.fml
::----------------------------------------------------------------------------------------------------------------------
_selsize:=PAR_NAG.sel_size();
{? PAR_NAG.ZN='T'
|| {? _=1 & _a<>-1 & _selsize=0 || FUN.info('Rozliczenie jest już zaakceptowane.'@)?} ;1
|| {? exec('zablok','rozrach',1,_>0 & _a<>-1)
   || _t:='';
      {? PAR_NAG.get() & PAR_NAG.ZN<>'T'
      || {? _t='' & PAR_SKID.get(76)='B'
         || ROK_F.cntx_psh();
            _obj:=exec('obj_op','dok_fks_ks');
            {? ~exec('sp_poz_next','rozrach',_obj,PAR_NAG.KONTO)
            || _t:='Rozliczenie nie może być zaakceptowane.\n'
                   'Nie można ustalić symbolu konta %1 w roku %2.'@[PAR_NAG.KONTO,ROK_F.NAZ]
            ?};
            ROK_F.cntx_pop()
         ?};
         {? _t=''
         || _t:={? _=0 || PAR_NAG.ZAP_OP:=ZAP_OP.ref();'' || exec('jest_zap','rozrach') ?}
         ?};
         {? do_state()=0
         || do(); _tran:=0
         || _tran:=1
         ?};
         {? _t='' &  PAR_NAG.ZAP_OP<>null
         || {? PAR_NAG.WAL2<>null || exec('initmpak','rozrach') ?};
            {? (_t:=exec('par_akc2','rozrach',PAR_NAG.WAL2=null | PAR_NAG.WAL<>FINFO.NAROD))=''
            || {? PAR_NAG.WAL2<>null
               || _zap_op:=PAR_NAG.ZAP_OP;
                  PAR_NAG.cntx_psh();
                  PAR_NAG.index('UNIK'); PAR_NAG.prefix(PAR_NAG.WAL2,'P',PAR_NAG.UNIK);
                  {? PAR_NAG.first()
                  || {? PAR_NAG.ZAP_OP=null
                     || PAR_NAG.ZAP_OP:=exec('zap_wal','rozrach',_zap_op,PAR_NAG.WAL); PAR_NAG.put
                     ?};
                     _t:=exec('par_akc2','rozrach',PAR_NAG.WAL<>FINFO.NAROD)
                  ?};
                  PAR_NAG.cntx_pop()
               ?}
            ?};
            {? PAR_NAG.WAL2<>null
            || {? AKCPAROW.first()
               || OP.cntx_psh(); ZAP_OP.cntx_psh(); POZ.cntx_psh(); SLO.cntx_psh();
                  ODD.cntx_psh(); PAR_POZ.cntx_psh(); PAR_NAG.cntx_psh(); OKRO_F.cntx_psh();
                  OP.index('KON_O'); OP.prefix();
                  ZAP_OP.index('ZAP'); ZAP_OP.prefix();
                  PAR_NAG.index('UNIK'); PAR_NAG.prefix();
                  PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix();
                  SLO.prefix(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA); POZ.prefix(); OKRO_F.prefix();
                  {! |?
                     {? SLO.seek(AKCPAROW.WALREF,AKCPAROW.WALNAZ) & ODD.seek(AKCPAROW.ODDREF,AKCPAROW.ODDNAZ) &
                        POZ.seek(AKCPAROW.POZREF,AKCPAROW.POZNAZ) & OKRO_F.seek(AKCPAROW.OKRREF,AKCPAROW.OKRNAZ) &
                        OP.find_key(SLO.ref(),ODD.ref(),AKCPAROW.AN,AKCPAROW.SYM,AKCPAROW.SYM,AKCPAROW.SYM_ROK) &
                        PAR_NAG.find_key(SLO.ref(),'P',AKCPAROW.PARUNIK) &
                        PAR_POZ.find_key(PAR_NAG.ref(),AKCPAROW.TZ,AKCPAROW.SYM_ROZL,AKCPAROW.SYMROZLU) &
                        (ZAP_OP.prefix(POZ.ref(),SLO.ref(),OKRO_F.ref(),ODD.ref(),PAR_POZ.ref()); ZAP_OP.first())
                     || _znalzap:=0;
                        {! |?
                           {? ZAP_OP.OP=OP.ref()
                           || ZAP_OP.WN2:=AKCPAROW.WN2; ZAP_OP.MA2:=AKCPAROW.MA2; ZAP_OP.put();
                              _znalzap:=1
                           ?};
                           ~_znalzap & ZAP_OP.next()
                        !}
                     ?};
                     AKCPAROW.next()
                  !};
                  OP.cntx_pop(); ZAP_OP.cntx_pop(); POZ.cntx_pop(); SLO.cntx_pop(); OKRO_F.cntx_pop();
                  ODD.cntx_pop(); PAR_POZ.cntx_pop(); PAR_NAG.cntx_pop()
               ?};
               exec('deltmpak','rozrach')
            ?}
         ?};
         {? _t<>''
         || undo(); {? _=1 & _a<>-1 & _selsize=0 || FUN.info(_t) ?}
         || {? var_pres('licz_gr')>0 || licz_gr+=1 ?}
         ?};
         {? ~_tran || end() ?}
      || {? _=1 & _a<>-1 & _selsize=0 || FUN.info('Rozliczenie jest już zaakceptowane.'@) || 1 ?}
      ?};
      exec('odblok','rozrach');
      _t=''
   ?}
?}


\cntx_psh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Zapamietywanie kontekstow tabel przed \zapopuse
::  OLD: \cntx_psh/oper.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh(); POZ.cntx_psh(); POW.cntx_psh(); PAR_NAG.cntx_psh();
PAR_POZ.cntx_psh(); AN.cntx_psh(); AN_SLU.cntx_psh()


\cntx_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Przywracanie kontekstow tabel przed \zapopuse
::  OLD: \cntx_pop/oper.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_pop(); POZ.cntx_pop(); POW.cntx_pop(); PAR_NAG.cntx_pop();
PAR_POZ.cntx_pop(); AN.cntx_pop(); AN_SLU.cntx_pop()


\zapopuse
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Przed wyswietleniem danych dotyczacych zapisu na rozrachunku
::  OLD: \zapopuse/oper.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _us:=ZAP_OP.OKRO().ROK().KOD+form(OKRO_F.NR,-2);
   _us1:={? ZAP_OP.ROK_ROZL=null
         || ZAP_OP.OKRO().ROK().KOD
         || ZAP_OP.ROK_ROZL().KOD
         ?}
|| _us:=SSTALE.AO().ROK().KOD+form(OKRO_F.NR,-2);
   _us1:=SSTALE.AO().ROK().KOD
?};
POMOC.USE:=_us;
DOK.use('doku'+_us);
POZ.use('pozy'+_us);
POW.use('pow_'+_us);
AN.use('koan__'+ROK_F.KOD);
AN_SLU.use('koansl'+ROK_F.KOD);
PAR_NAG.use('parnag'+_us1);
PAR_POZ.use('parpoz'+_us1);
DOK.prefix();
POZ.prefix();
POW.prefix();
AN.prefix();
PAR_NAG.prefix();
PAR_POZ.prefix();
1


\zablok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.53]
:: OPIS: Blokowanie rozliczenia (lub dwoch rozliczen gdy istnieja dla waluty narodowej i obcej)
::  OLD: \zablok/parow.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=PAR_NAG.r_lock(_a,1);
{? _ok & PAR_NAG.WAL2<>null
|| PAR_NAG.cntx_psh();
   PAR_NAG.index('UNIK');
   PAR_NAG.prefix(PAR_NAG.WAL2,'P',PAR_NAG.UNIK);
   {? PAR_NAG.first() || {? PAR_NAG.r_lock(_a,1) || _ok:=2 ?} ?};
   PAR_NAG.cntx_pop();
   _ok:={? _ok=1 || PAR_NAG.r_unlock(); 0 || 1 ?}
?};
{? ~_ok  & (_=1 | _b ) & PAR_NAG.sel_size()=0 || FUN.info('Rozliczenie obsługuje inny operator.\nZabroniony dostęp.'@) ?};
_ok


\odblok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.53]
:: OPIS: Odblokowanie rozliczenia (lub dwoch rozliczen gdy istnieja dla waluty narodowej i obcej)
::  OLD: \odblok/parow.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_NAG.r_unlock();
{? PAR_NAG.WAL2<>null
|| PAR_NAG.cntx_psh();
   PAR_NAG.index('UNIK');
   PAR_NAG.prefix(PAR_NAG.WAL2,'P',PAR_NAG.UNIK);
   {? PAR_NAG.first() || PAR_NAG.r_unlock() ?};
   PAR_NAG.cntx_pop()
?}


\initmpak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula inicjuje tabele tymczasowa do przechowywania wartosci
::       dla 2 zapisu (ZAP_OP) przy akceptacji
::  OLD: \initmpak/parow.fml
::----------------------------------------------------------------------------------------------------------------------
AKCPAROW:=tab_tmp(1,'WALREF','INTEGER','Waluta',
                    'WALNAZ','STRING[8]','Tabela',
                    'ODDREF','INTEGER','Jedn. ks.',
                    'ODDNAZ','STRING[8]','Tabela',
                    'PARUNIK','STRING[29]','ID',
                    'WN2','REAL','Winien 2',
                    'MA2','REAL','Ma 2',
                    'AN','STRING[35]','Konto',
                    'SYM','STRING[50]','Symbol rozrachunku',
                    'SYM_ROK','STRING[55]','Unikalny symbol',
                    'SYM_ROZL','STRING[50]','Symbol rozliczanego',
                    'SYMROZLU','STRING[55]','Unikalny symbol rozl.',
                    'POZREF','INTEGER','Pozycja',
                    'POZNAZ','STRING[8]','Tabela',
                    'OKRREF','INTEGER','Okres',
                    'OKRNAZ','STRING[8]','Tabela',
                    'TZ','DATE','Termin'
                 )


\deltmpak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula kasuje tabele tymczasowa do przechowywania wartosci
::       dla 2 zapisu (ZAP_OP) przy akceptacji
::  OLD: \deltmpak/parow.fml
::----------------------------------------------------------------------------------------------------------------------
obj_del(AKCPAROW)


\addtmpak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula dodaje rekordy do tabeli tymczasowej do przechowywania wartosci
::       dla 2 zapisu (ZAP_OP) przy akceptacji
::  OLD: \addtmpak/parow.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_NAG.WAL2();
PAR_NAG.ODD();
ZAP_OP.OKRO();
AKCPAROW.WALREF:=#SLO.ref();
AKCPAROW.WALNAZ:=SLO.name();
AKCPAROW.ODDREF:=#ODD.ref();
AKCPAROW.ODDNAZ:=ODD.name();
AKCPAROW.AN:=OP.AN;
AKCPAROW.SYM:=OP.SYM;
AKCPAROW.SYM_ROK:=OP.SYM_ROK;
AKCPAROW.POZREF:=#ZAP_OP.POZDOK;
AKCPAROW.POZNAZ:=ref_name(ZAP_OP.POZDOK);
AKCPAROW.OKRREF:=#OKRO_F.ref();
AKCPAROW.OKRNAZ:=OKRO_F.name();
AKCPAROW.PARUNIK:=PAR_NAG.UNIK;
AKCPAROW.WN2:=ZAP_OP.WN;
AKCPAROW.MA2:=ZAP_OP.MA;
AKCPAROW.TZ:=ZAP_OP.PAR_POZ().TZ;
AKCPAROW.add()


\jest_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.53]
:: OPIS: Sprawdza zasadność parowania
::   WY: STRING - komunikat o błędzie
::  OLD: \jest_zap/parow.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? ~(PAR_NAG.ZAP_OP<>null & ZAP_OP.seek(PAR_NAG.ZAP_OP))
|| OP.cntx_psh();
   OP.index('KON_O');
   {? PAR_NAG.SYM_ROK=''
   || OP.prefix(PAR_NAG.WAL,PAR_NAG.ODD,PAR_NAG.KONTO,PAR_NAG.OP,PAR_NAG.OP)
   || OP.prefix(PAR_NAG.WAL,PAR_NAG.ODD,PAR_NAG.KONTO,PAR_NAG.OP,PAR_NAG.OP,PAR_NAG.SYM_ROK)
   ?};
   {? ~OP.first()
   || _zwrot:='Brak rozrachunku głównego o symbolu '+PAR_NAG.OP+
              {? PAR_NAG.SYM_ROK=''
              || '.'
              || ' otwartego w roku '+(PAR_NAG.SYM_ROK+4)+'.'
              ?}
   || {? var_pres('kom_par')<=0 || kom_par:='' ?};
      PAR_NAG.ZAP_OP:=exec('wyb_zap','rozrach');
      {? PAR_NAG.ZAP_OP=null & kom_par='' || _zwrot:='Nie wybrano zapisu do rozliczenia.' ?};
      kom_par:=''
   ?}; OP.cntx_pop()
?};
_zwrot


\wyb_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.53]
:: OPIS: Uaktywnia okienko do wybor zapisu do rozliczenia w przypadku,
::       gdy rozrachunek ma wiecej niz jedna pozycje
::   WY: ZAP_OP.ref
::  OLD: \wyb_zap/parow.fml
::----------------------------------------------------------------------------------------------------------------------
ZAP_OP.cntx_psh();
ZAP_OP.index('PAR'); ZAP_OP.prefix(null,OP.ref());
_ref:=null;
{? ZAP_OP.first()
|| {? ZAP_OP.size()=1
   || {? var_pres('pop_nag')>0 | exec('wyb_zapp','rozrach',0) || _ref:=ZAP_OP.ref ?}
   || {? var_pres('rozr_akt')<=0 & PAR_NAG.sel_size()=0
      || ZAP_OP.win_sel('PAR');
         {? ZAP_OP.select() || _ref:=ZAP_OP.ref() ?}; 0
      || _zn_zap:=0;
         {! |?
            {? (-PAR_NAG.STR='wn' & ZAP_OP.WN=PAR_NAG.KW_ROZ) |
               (-PAR_NAG.STR='ma' & ZAP_OP.MA=PAR_NAG.KW_ROZ) & ZAP_OP.ODD=PAR_NAG.ODD
            || _ref:=ZAP_OP.ref(); _zn_zap:=1
            ?};
            ~_zn_zap & ZAP_OP.next()
         !}
      ?}
   ?}
?};
ZAP_OP.cntx_pop();
_ref


\wyb_zapp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [7.53]
:: OPIS: Wybor zapisu do rozliczenia (cd)
::   WE: _a - 0-jeden zapis w tabeli ZAP_OP, 1-wiecej
::   WY: 1/0 znaleziono badz nie zapis
::  OLD: \wyb_zapp/parow.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? ~(((ZAP_OP.WN$2>0 | ZAP_OP.MA$2<0) & PAR_NAG.STR='Wn') | ((ZAP_OP.MA$2>0 | ZAP_OP.WN$2<0)& PAR_NAG.STR='Ma'))
|| {? _a
   || kom_par:='Wybrany zapis wykazuje saldo w '+PAR_NAG.WAL().KOD+'\n'+
               'po stronie przeciwnej niż w rozliczeniu.\n'
   || kom_par:='Wybrany rozrachunek wykazuje saldo w '+PAR_NAG.WAL().KOD+'\n'+
               'po stronie przeciwnej niż w rozliczeniu.\n'
   ?}; _zwrot:=0
?};
{? _zwrot
|| PAR_POZ.cntx_psh(); _sum:=0;
   PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix(PAR_NAG.ref);
   {? PAR_POZ.first || {! |? _sum+=PAR_POZ.KWOTA; PAR_POZ.next !} ?};
   PAR_POZ.cntx_pop();
   _sum1:=|(ZAP_OP.WN-ZAP_OP.MA);
   {? _sum$2>_sum1$2
   || kom_par:='Suma pozycji wybranego rozliczenia jest\n'+
               'większa od salda rozrachunku.'; _zwrot:=0
   ?}
?};
{? _zwrot
|| PAR_NAG.KW_ROZ:=_sum1; PAR_NAG.put; {? _a || sel_exit() ?}
?};
{? PAR_NAG.sel_size()=0 & kom_par<>'' & {? var_pres('opcja')>0 || opcja=1 || 0 ?} || FUN.info(kom_par) ?};
_zwrot


\par_akc2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Akceptacja rozliczenia rozrachunkow (pozycje)
::   WE: _a - 1-rozliczenie w walucie obcej,
::            0-w narodowej
::  OLD: \par_akc2/parow.fml
::----------------------------------------------------------------------------------------------------------------------
OP.cntx_psh();
ZAP_OP.cntx_psh(); ZAP_OP.prefix();
PAR_POZ.cntx_psh(); PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix(PAR_NAG.ref());
_t:='';
{? PAR_POZ.first()
|| {! |?
      OP.index('KON_O');
      {? PAR_POZ.SYM_ROK=''
      || OP.prefix(PAR_NAG.WAL,PAR_NAG.ODD,PAR_NAG.KONTO,PAR_POZ.OP,PAR_POZ.OP)
      || OP.prefix(PAR_NAG.WAL,PAR_NAG.ODD,PAR_NAG.KONTO,PAR_POZ.OP,PAR_POZ.OP,PAR_POZ.SYM_ROK)
      ?};
      {? OP.first()
      || {? ~_a |
            (1+PAR_NAG.STR='M' & OP.WN$2>OP.MA$2 & F.SWn(OP.WN+PAR_POZ.KWOTA,OP.MA)$2>=0) |
            (1+PAR_NAG.STR='W' & OP.MA$2>OP.WN$2 & F.SMa(OP.WN,OP.MA+PAR_POZ.KWOTA)$2>=0)
         || {? PAR_NAG.STR='Ma'
            || ZAP_OP.MA:=PAR_POZ.KWOTA; ZAP_OP.WN:=0
            || ZAP_OP.WN:=PAR_POZ.KWOTA; ZAP_OP.MA:=0
            ?};
            _t:=exec('aktualop','rozrach',OP.ref,ZAP_OP.WN,ZAP_OP.MA)
         || _t:='Rozrachunek '+PAR_POZ.OP+' wykazuje saldo w '+PAR_NAG.WAL().KOD+'\n'+
                'po stronie przeciwnej niż w rozliczeniu.\n'
         ?}
      || _t:='Brak rozrachunku o symbolu: '+PAR_POZ.OP+'.'
      ?};
      _t='' & PAR_POZ.next()
   !}
?};
{? _t='' || _t:=exec('akc_nag','rozrach') ?};
PAR_POZ.cntx_pop(); ZAP_OP.cntx_pop(); OP.cntx_pop();
_t


\aktualop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.53]
:: OPIS: Aktualizacja rozrachunku przy akceptacji rozliczenia
::   WE: _a - ref rozrachunku,
::       _b - kwoty wn
::       _c - kwoty ma
::  OLD: \aktualop/parow.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_NAG.ZAP_OP();
ZAP_OP.PAR_POZ:=PAR_POZ.ref();
{? PAR_POZ.name()+2<>SSTALE.AR().KOD
|| ROK_F.cntx_psh();
   ROK_F.index('KODG');
   ROK_F.prefix(PAR_POZ.name()+2);
   {? ROK_F.first()
   || SSTALE.AR:=ZAP_OP.ROK_ROZL:=ROK_F.ref()
   ?};
   ROK_F.cntx_pop()
|| ZAP_OP.ROK_ROZL:=SSTALE.AR
?};
{? PAR_NAG.STR='Wn'
|| ZAP_OP.WN:=-_b; ZAP_OP.MA:=0
|| ZAP_OP.MA:=-_c; ZAP_OP.WN:=0
?};
ZAP_OP.WN2:=ZAP_OP.MA2:=0;
ZAP_OP.SP_V:=0; ZAP_OP.SP_TYP:='TN';
DOK.cntx_psh(); POZ.cntx_psh();
_refname:=ref_name(ZAP_OP.POZDOK);
{? _refname<>POZ.name()
|| _maska:=_refname+4;
   DOK.use('doku'+_maska); DOK.prefix();
   POZ.use('pozy'+_maska); POZ.prefix()
?};
ZAP_OP.POZDOK().DOK();
_rej:=ZAP_OP.REJ:=DOK.REJ;
_nr:=ZAP_OP.NR:=DOK.NR;
_dks:=ZAP_OP.DKS:=DOK.DKS;
_nk:=ZAP_OP.NK:=DOK.NK;
_poz:=ZAP_OP.POZ:=POZ.POZ;
_kurs:=ZAP_OP.KURS:=POZ.KURS;
{? ZAP_OP.DATA<PAR_NAG.DATA || ZAP_OP.DATA:=PAR_NAG.DATA ?};
OP.cntx_psh();
ZAP_OP.OP();
_wal2:=ZAP_OP.WAL2:={? OP.WAL=FINFO.NAROD || POZ.WAL || FINFO.NAROD ?};
OP.cntx_pop();
DOK.cntx_pop(); POZ.cntx_pop();
_ok:=ZAP_OP.add();
{? _ok || exec('zap_op2rok','rozrach') ?};
ZAP_OP.OP();
OP.cntx_psh();
{? PAR_NAG.WAL2<>null & OP.seek(_a)
|| AKCPAROW.SYM_ROZL:=OP.SYM; AKCPAROW.SYMROZLU:=OP.SYM_ROK; ZAP_OP.OP();
   exec('addtmpak','rozrach')
?};
OP.cntx_pop();
{? _ok || _ok:=exec('akt_obr','rozrach',ZAP_OP.WN,ZAP_OP.MA,ZAP_OP.OP,0) ?};
{? _ok
|| ZAP_OP.ROK_ROZL:=SSTALE.AR;
   ZAP_OP.WN:=_b;
   ZAP_OP.MA:=_c;
   ZAP_OP.OP:=_a;
   ZAP_OP.WN2:=ZAP_OP.MA2:=0;
   ZAP_OP.SP_V:=0; ZAP_OP.SP_TYP:='TN';
   ZAP_OP.REJ:=_rej;
   ZAP_OP.NR:=_nr;
   ZAP_OP.DKS:=_dks;
   ZAP_OP.NK:=_nk;
   ZAP_OP.POZ:=_poz;
   ZAP_OP.KURS:=_kurs;
   ZAP_OP.WAL2:=_wal2;
   _ok:=ZAP_OP.add();
   {? _ok || exec('zap_op2rok','rozrach') ?};
   ZAP_OP.OP();
   POZ.cntx_psh();
   _ref_name:=ref_name(ZAP_OP.POZDOK);
   {? POZ.name()<>_ref_name || POZ.use(_ref_name) ?};
   ZAP_OP.POZDOK();
   _pr:=PAR_POZ.KWOTA/POZ.SUM;
   POZ.SUM:=PAR_POZ.KWOTA;
   POZ.SUMW:=(_pr*POZ.SUMW)$2;
   ZAP_OP.OP();
   exec('op_proj','dok_proj',1,1,PAR_POZ.ref());
   POZ.cntx_pop();
   {? PAR_NAG.WAL2<>null
   || AKCPAROW.SYM_ROZL:=OP.SYM; AKCPAROW.SYMROZLU:=OP.SYM_ROK;
      exec('addtmpak','rozrach')
   ?}
?};
{? _ok || _ok:=exec('akt_obr','rozrach',ZAP_OP.WN,ZAP_OP.MA,ZAP_OP.OP,0) ?};
{? ~_ok || 'Akceptacja rozliczenia nie powiodła się.' || '' ?}


\zap_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.53]
:: OPIS: Przy tworzeniu rozliczen dla waluty obcej szuka pozycji rozrachunku
::       powiazanego w walucie narodowej
::       Przy poprawianiu rozliczen szuka pozycji rozrachunku
::       powiazanego w drugiej walucie
::   WE: _a - ZAP_OP.ref
::       _b - waluta
::  OLD: \zap_wal/parow.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
{? _=0 || PAR_NAG.ZAP_OP() || ZAP_OP.seek(_a) ?};
_okr:=ZAP_OP.OKRO;
exec('zap_mask','rozrach',ZAP_OP.OKRO().ROK().KOD+form(ZAP_OP.OKRO().NR,-2));
SLO.cntx_psh(); WAL.cntx_psh();
{? _=0 || PAR_NAG.ZAP_OP().POZDOK().WAL() ||  ZAP_OP.POZDOK() ?};
kurs:=POZ.KURS;
WAL.index('WAL_SYM'); WAL.prefix(SLO.KOD);
{? WAL.first || kurs:=kurs/WAL.J ?};
SLO.cntx_pop(); WAL.cntx_pop();
POZ.cntx_psh(); DOK.cntx_psh();
_zap:=null;
_rejestr:=POZ.DOK().REJ; _numer:=POZ.DOK().NR; _pozycja:=POZ.POZ; _data:=POZ.DOK().DTW;
{? _=0 |  _b=FINFO.NAROD
|| _zap:=POZ.ref
|| POZ.index('OKWAL_O'); POZ.prefix('T','T',_b,PAR_NAG.ODD);
   {? POZ.first()
   || {! |?
         {? POZ.DOK().REJ=_rejestr & _numer=POZ.DOK().NR & POZ.POZ=_pozycja & _data=POZ.DOK().DTW
         || _zap:=POZ.ref
         ?};
         _zap=null & POZ.next()
      !}
   ?}
?};
POZ.cntx_pop(); DOK.cntx_pop();
exec('zap_mask','rozrach',SSTALE.AO().ROK().KOD+form(SSTALE.AO().NR,-2));
{? _zap<>null
|| ZAP_OP.cntx_psh(); ZAP_OP.index('ZAP');
   {? _=0
   || ZAP_OP.prefix(_zap,FINFO.NAROD,_okr,PAR_NAG.ODD)
   || ZAP_OP.prefix(_zap,_b,_okr,PAR_NAG.ODD)
   ?};
   _ref:={? ZAP_OP.first() || ZAP_OP.ref() || null ?};
   ZAP_OP.cntx_pop()
?};
_ref


\akc_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Aktualizuje naglowek rozliczenia przy akceptacji
::  OLD: \akc_nag/parow.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_NAG.cntx_psh();
PAR_NAG.prefix();
PAR_NAG.ZN:='T';
{? var_pres('ile_zak')>0 || ile_zak+=1 ?};
PAR_NAG.USER:=exec('usr_zar','dok_fks');
PAR_NAG.DATA_AKC:=date();
PAR_NAG.OP:=PAR_NAG.ZAP_OP().OP().SYM;
PAR_NAG.SYM_ZEW:=OP.SYM_ZEW;
PAR_NAG.SYM_ROK:=OP.SYM_ROK;
exec('cntx_psh','rozrach');
PAR_NAG.ZAP_OP();
exec('zapopuse','rozrach',1);
ZAP_OP.POZDOK().DOK();
PAR_NAG.REJ:=DOK.REJ;
PAR_NAG.NREJ:=DOK.NR;
PAR_NAG.KW_ROZ:=ZAP_OP.WN+ZAP_OP.MA;
exec('zapopuse','rozrach',0);
_ok:={? PAR_NAG.put() || '' || 'Nieudana aktualizacja nagłówka rozliczenia.' ?};
exec('cntx_pop','rozrach');
PAR_NAG.cntx_pop();
_ok


\akt_obr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.53]
:: OPIS: Aktualizacja obrotow rozrachunku
::   WE: _a - kwoty wn
::       _b - kwoty ma
::       _c - ref rozrachunku
::  OLD: \akt_obr/parow.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
OP.prefix();
{? OP.seek(_c)
|| STANY.cntx_psh(); STANY.index('STAN'); STANY.prefix(_c,ZAP_OP.OKRO);
   {? STANY.first
   || {? _d
      || STANY.WN-=_a; STANY.MA-=_b; OP.WN-=_a; OP.MA-=_b
      || STANY.WN+=_a; STANY.MA+=_b; OP.WN+=_a; OP.MA+=_b
      ?};
      _ok:=STANY.put
   || {? _=4
      || STANY.blank(1);
         STANY.OP:=_c;
         STANY.OKRO:=ZAP_OP.OKRO;
         {? _d || OP.WN-=_a; OP.MA-=_b || OP.WN+=_a; OP.MA+=_b ?};
         STANY.WN:=_a; STANY.MA:=_b;
         _ok:=STANY.add()
      ?}
   ?};
   STANY.cntx_pop();
   {? _ok
   || {? var_press('nex')>0 & var_press('aindx')>0 & var_press('aprfx')>0
      || {? nex=#OP.ref()
         || OP.cntx_psh(); OP.index(aindx); ($('OP.prefix('+aprfx+')'))();
            {? OP.seek(OP.ref()) & (OP.next() | OP.prev()) || nex:=#OP.ref() ?};
            OP.cntx_pop()
         ?}
      ?};
      {? (OP.WN$2 = OP.MA$2) || OP.STAN:='R' || OP.STAN:='N' ?};
      OP.put()
   ?}
?};
_ok


\zap_mask
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [????]
:: OPIS: Otwiera tablice maskowane dla okresu z ZAP_OP
::  OLD: \zap_mask/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0  ||  _a:=ZAP_OP.OKRO().ROK().KOD+form(ZAP_OP.OKRO().NR,-2) ?};
DOK.use('doku'+_a);
POZ.use('pozy'+_a);
POW.use('pow_'+_a);
::Poczatek modyfikacji dla Maclex Fiks 12-10-2009 AK [1120]
ML_POZB.use('pozb'+_a);
::Koniec modyfikacji dla Maclex
AN.use('koan__'+ROK_F.KOD);
AN_SLU.use('koansl'+ROK_F.KOD)


\wyc_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [????]
:: OPIS: Wycofanie zapisów na rozrachunkach dla bieżącego zapisu na koncie
::   WE: _a - 0 waluta narodowa, 1  - obca
::       _b - 0 biezacy rok, 1 - kolejne
::  OLD: \wyc_op/dok_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_nast_r:=1; _i:=0;
{? _b
|| ROK_F.cntx_psh(); OP.cntx_psh(); ZAP_OP.cntx_psh(); STANY.cntx_psh();
   PAR_NAG.cntx_psh(); PAR_POZ.cntx_psh();
   OP_PROJ.cntx_psh(); ZAP_PROJ.cntx_psh(); D_RB.cntx_psh(); BILANSP.cntx_psh();
   BILANSP.PROK:=SSTALE.AR;
   ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); SSTALE.AR();
   _nast_r:=ROK_F.next()
?};
{!
|? {? _b & _nast_r
   || OP.use('operac' + ROK_F.KOD); OP.index('KON_O'); OP.prefix();
      ZAP_OP.use('rozzap'+ ROK_F.KOD); ZAP_OP.index('ZAP');
      STANY.use('stany_'+ ROK_F.KOD);
      PAR_NAG.use('parnag'+ROK_F.KOD);
      PAR_POZ.use('parpoz'+ROK_F.KOD);
      OP_PROJ.use('rozpro'+ROK_F.KOD);
      ZAP_PROJ.use('rozprz'+ROK_F.KOD);
      D_RB.use('dr__fk'+ROK_F.KOD);
      BILANSP.NROK:=ROK_F.ref()
   ?};
   {? _nast_r
   || _opdel:=0;
      {? _a=0
      || ZAP_OP.prefix(POZ.ref,FINFO.NAROD,SSTALE.AO)
      || ZAP_OP.prefix(POZ.ref,POZ.WAL,SSTALE.AO)
      ?};
      _dalej:={? _b & var_pres('AKT_ROZ',ROK_F)>0 || PAR_SKID.get(76)<>'N' || 0 ?};
      {? _dalej & ~ZAP_OP.first()
      || OP.cntx_psh(); ZAP_OP.cntx_psh(); STANY.cntx_psh();
         exec('tr_op','rozrach');
         OP.cntx_pop(); ZAP_OP.cntx_pop(); STANY.cntx_pop()
      ?};
      {? ZAP_OP.first
      || {! |? {? ZAP_OP.PAR_POZ=null || 0 || ZAP_OP.next() ?} !};
         {? ~exec('wycofaj','rozrach') || undo() ?};
         {? OP.seek(ZAP_OP.OP)=0
         || {? KOMT='' || KOMT:='\nNie znaleziono rozrachunku lub jest on zablokowany przez innego użytkownika.' ?};
             undo
         ?};
         ZAP_OP.cntx_psh;
         ZAP_OP.index('OP');
         ZAP_OP.prefix(OP.ref);
         _jeden:=ZAP_OP.size()=1;
         ZAP_OP.cntx_pop;
         {? _jeden
         || STANY.index('STAN'); STANY.prefix(OP.ref());
            {? STANY.first()
            || {! |?
                  _delr:=STANY.del(,1);
                  {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
               !}
            ?};
            _opdel:=1;
            STANY.prefix()
         || STANY.index('STAN');
            STANY.prefix;
            {? STANY.find_key(OP.ref, SSTALE.AO)
            || STANY.WN-=ZAP_OP.WN;
               STANY.MA-=ZAP_OP.MA;
               STANY.put
            || {? KOMT=''|| KOMT:='\nNie znaleziono rekordu stanów operacji' ?};
               undo
            ?};
            OP.WN-=ZAP_OP.WN;
            OP.MA-=ZAP_OP.MA;
            OP.STAN:={? OP.WN$2 = OP.MA$2 || 'R' || 'N' ?};
            OP.put
         ?};
         _i:=ZAP_OP.del;
         D_RB.index(exec('ndxD_RB','raty',OP)); D_RB.prefix(OP.ref());
         {? D_RB.first() || exec('updt_drb','raty','OP',null,'POZ',POZ.ref()) ?};
         exec('op_proj','dok_proj',0,~_a);
         {? _opdel=1
         || OP.del()
         || exec('pop_optz','rozrach')
         ?}
      ?};
      _b & (_nast_r:=ROK_F.next())
   ?}
!};
{? _b
|| ROK_F.cntx_pop(); OP.cntx_pop(); ZAP_OP.cntx_pop(); STANY.cntx_pop();
   PAR_NAG.cntx_pop(); PAR_POZ.cntx_pop();
   OP_PROJ.cntx_pop(); ZAP_PROJ.cntx_pop(); D_RB.cntx_pop(); BILANSP.cntx_pop()
?};
_i


\wycofaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Wycofanie akceptacji rozliczenia - dla zapisu z ZAP_OP
::  OLD: \wycofaj/parow.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
PAR_NAG.cntx_psh();
PAR_NAG.index('ZAP_OP'); PAR_NAG.prefix(ZAP_OP.ref());
{? PAR_NAG.first()
|| {! |?
      {? var_pres('REF_PARN')>0
      || REF_PARN.REF:=#PAR_NAG.ref(); REF_PARN.MASKA:=PAR_NAG.name(); REF_PARN.ZN:=PAR_NAG.ZN; REF_PARN.add()
      ?};
      PAR_NAG.ZAP_OP:=null;
      PAR_NAG.cntx_psh();
      _seek:=null;
      {? PAR_NAG.next || _seek:=PAR_NAG.ref ?};
      PAR_NAG.cntx_pop();
      {? ~exec('wyc_p_roz','rozrach','W')
      || _ok:=0; {? var_pres('sys_util')<=0 || FUN.info('Wycofanie rozliczenia nie powiodło się.'@) ?}
      ?};
      _ok & {? _seek<>null || PAR_NAG.seek(_seek) || 0 ?}
   !}
?};
PAR_NAG.cntx_pop();
_ok


\pop_optz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Poprawia pole OP.DO przy usuwaniu rekordu w tabeli ZAP_OP
::       bazuje na biezacym rekordzie tabeli OP
::  OLD: \pop_optz/dok_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_do:=exec('ustal_do','rozrach');
{? _do<>OP.DO & _do<>date(0,0,0)
|| OP.cntx_psh(); OP.prefix(); OP.DO:=_do;
   {? OP.put() || exec('pop_all','rozrach',0) ?};
   OP.cntx_pop()
?}


\wyc_p_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Wycofanie akceptacji rozliczenia rozrachunkow (pozycje)
::  OLD: \wyc_p_roz/parow.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_POZ.cntx_psh();
PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix(PAR_NAG.ref);
_ok:=1;
{? PAR_NAG.ZN='T' & PAR_POZ.first()
|| {! |?
      {? PAR_NAG.STR='Ma' || _w:=0; _m:=PAR_POZ.KWOTA || _m:=0; _w:=PAR_POZ.KWOTA ?};
      _ok:=exec('usu_zap','rozrach',_w,_m,PAR_POZ.OP,PAR_NAG.WAL,PAR_NAG.ODD,PAR_NAG.KONTO,PAR_POZ.ref(),1,PAR_POZ.SYM_ROK);
      {? _ok || _ok:=exec('usu_zap','rozrach',-_w,-_m,PAR_NAG.OP,PAR_NAG.WAL,PAR_NAG.ODD,PAR_NAG.KONTO,PAR_POZ.ref(),1,PAR_NAG.SYM_ROK) ?};
      _kod_r:=OP.name()+2;
      {? _ok
      || ROK_F.cntx_psh();
         ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
         {!
         |? {? ROK_F.next() & ROK_F.KOD<>_kod_r
            || OKRO_F.cntx_psh(); PAR_NAG.cntx_psh(); PAR_POZ.cntx_psh();
               OP.cntx_psh(); ZAP_OP.cntx_psh(); STANY.cntx_psh();
               OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref);
               {? OKRO_F.first
               || OP.use('operac' + ROK_F.KOD); ZAP_OP.use('rozzap'+ ROK_F.KOD);
                  STANY.use('stany_'+ ROK_F.KOD);
                  _ok:=exec('usu_zap','rozrach',_w,_m,PAR_POZ.OP,PAR_NAG.WAL,PAR_NAG.ODD,PAR_NAG.KONTO,PAR_POZ.ref(),0,PAR_POZ.SYM_ROK);
                  {? _ok || _ok:=exec('usu_zap','rozrach',-_w,-_m,PAR_NAG.OP,PAR_NAG.WAL,PAR_NAG.ODD,PAR_NAG.KONTO,PAR_POZ.ref(),0,PAR_NAG.SYM_ROK) ?}
               ?};
               OKRO_F.cntx_pop(); PAR_NAG.cntx_pop(); PAR_POZ.cntx_pop();
               OP.cntx_pop(); ZAP_OP.cntx_pop(); STANY.cntx_pop();
               1
            ?}
         !};
         ROK_F.cntx_pop()
      ?};
      _ok & PAR_POZ.next()
   !}
?};
{? _ok
|| PAR_NAG.cntx_psh();
   PAR_NAG.prefix();
   PAR_NAG.ZN:=_a;
   PAR_NAG.DATA_AKC:=date(0,0,0);
   PAR_NAG.USER:='';
   PAR_NAG.put();
   PAR_NAG.cntx_pop()
|| undo()
?};
PAR_POZ.cntx_pop();
_ok


\usu_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.53]
:: OPIS: Usuwanie rozliczenia rozrachunkow - modyfikacje w kartotece rozrachunkow
::   WE: _a - kwota wn
::       _b - kwota ma
::       _c - rozrachunek
::       _d - waluta
::       _e - jednostka ksiegowa
::       _f - konto
::       _g - ref PAR_POZ
::       _h - 0/1 - jesli nie znalazl rozrachunku to nie ma bledu/jest blad
::       _i - unikalny symbol rozrachunku
::   WY: 0/1 - operacja sie udala (nie udala)
::  OLD: \usu_zap/parow.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1; _get:=null;
OP.cntx_psh(); ZAP_OP.cntx_psh();
OP.index('KON_O'); OP.prefix(_d,_e,_f,_c,_c,_i);
{? OP.first()
|| ZAP_OP.index('PAR'); ZAP_OP.prefix(_g,OP.ref());
   {? ZAP_OP.first()
   || _poz:=ZAP_OP.POZDOK;
      {? ZAP_OP.del(,1)
      || POZ.cntx_psh(); POZ.use(ref_name(_poz)); POZ.prefix();
         POZ.seek(_poz);
         exec('op_proj','dok_proj',0,,_g);
         POZ.cntx_pop()
      ?}
   || {? _h=1 || _ok:=0 ?}
   ?};
   ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref());
   {? ZAP_OP.size()=0
   || STANY.cntx_psh();
      STANY.index('STAN'); STANY.prefix(OP.ref);
      {? STANY.first() || {! |? STANY.del() !} ?};
      STANY.cntx_pop();
      OP.del()
   || exec('pop_optz','rozrach'); exec('mod_op','sys_odtw',1);
      {? _ok || _get:=OP.ref() ?}
      ?}
|| {? _h=1 || _ok:=0 ?}
?};
{? _ok & _get<>null || _ok:=OP.seek(_get) ?};
OP.cntx_pop(); ZAP_OP.cntx_pop();
_ok


\ustal_do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Ustala date otwarcia rozrachunku
::  OLD: \ustal_do/dok_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_data:=date(0,0,0);
ZAP_OP.cntx_psh(); ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref());
{? ZAP_OP.first()
|| POZ.cntx_psh();
   {! |?
      {? ZAP_OP.POZDOK<>null & ZAP_OP.PAR_POZ=null
      || _name:=ref_name(ZAP_OP.POZDOK);
         {? _name<>POZ.name() || POZ.use(_name) ?};
         POZ.prefix(); ZAP_OP.POZDOK();
         {? _data=date(0,0,0) | POZ.DO<_data || _data:=POZ.DO ?}
      ?};
      ZAP_OP.next()
   !};
   POZ.cntx_pop()
?};
{? _data=date(0,0,0) & ZAP_OP.first()
||  {? ZAP_OP.PAR_POZ=null || _data:=ZAP_OP.DATA ?};
    _data=date(0,0,0) & ZAP_OP.next()
?};
{? _data=date(0,0,0) || _data:=OP.DO ?};
ZAP_OP.cntx_pop();
_data


\czy_rozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.53]
:: OPIS: Sprawdza, czy pozycja dokumentu nie jest w naglowku rozliczenia rozrachunkow
::   WE: _a - 0 - bez komunikatow (wycofanie kilku)
::            1 - z komunikatami (wycofanie jednego wybranego)
::  OLD: \czy_rozl/akcept.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); SSTALE.AR();
ZAP_OP.index('ZAP');
POZ.index('ROZR2'); POZ.prefix(DOK.ref());
_zwrot:=_ok:=1; _OpRef:=null();
{? POZ.last() & ROK_F.next()
|| {! |?
      {? POZ.ODD<>null & |POZ.ID<>''
      || ZAP_OP.prefix(POZ.ref(),FINFO.NAROD,SSTALE.AO,POZ.ODD);
         {? ZAP_OP.last()
         || {! |?
               {? ZAP_OP.PAR_POZ<>null
               || {? |ZAP_OP.OP().SYM=|POZ.ID & OP.SYM_ROK=POZ.SYM_ROK
                  || _ok:=_zwrot:=0
                  || ZAP_OP.prev()
                  ?}
               || _OpRef:=OP.ref();0
               ?}
            !}
         ?}
      || _ok:=0
      ?};
      {? _ok & POZ.ODD<>null & |POZ.ID<>''
      || ZAP_OP.cntx_psh(); ZAP_OP.index('OP'); ZAP_OP.prefix(_OpRef);
         {? ZAP_OP.last()
         || {! |?
               {? ZAP_OP.PAR_POZ<>null
               || {? |ZAP_OP.OP().SYM=|POZ.ID & OP.SYM_ROK=POZ.SYM_ROK
                  || _ok:=_zwrot:=0
                  || ZAP_OP.prev()
                  ?}
               ?}
            !}
         ?};
         ZAP_OP.cntx_pop()
      || _ok:=0
      ?};
      {!
      |? {? _zwrot & _ok
         || ZAP_OP.cntx_psh(); OP.cntx_psh();
            ZAP_OP.use('rozzap'+ ROK_F.KOD); ZAP_OP.index('ZAP');
            OP.use('operac' + ROK_F.KOD); OP.index('KON_O'); OP.prefix();
            {? POZ.ODD<>null & |POZ.ID<>''
            || ZAP_OP.prefix(POZ.ref(),FINFO.NAROD,SSTALE.AO,POZ.ODD);
               {? ZAP_OP.last()
               || {! |?
                     {? ZAP_OP.PAR_POZ<>null
                     || {? |ZAP_OP.OP().SYM=|POZ.ID & OP.SYM_ROK=POZ.SYM_ROK
                        || _ok:=_zwrot:=0
                        || ZAP_OP.prev()
                        ?}
                     || _OpRef:=OP.ref();0
                     ?}
                  !}
               ?}
            || _ok:=0
            ?};
            {? _ok & POZ.ODD<>null & |POZ.ID<>''
            || ZAP_OP.cntx_psh(); ZAP_OP.index('OP'); ZAP_OP.prefix(_OpRef);
               {? ZAP_OP.last()
               || {! |?
                     {? ZAP_OP.PAR_POZ<>null
                     || {? |ZAP_OP.OP().SYM=|POZ.ID & OP.SYM_ROK=POZ.SYM_ROK
                        || _ok:=_zwrot:=0
                        || ZAP_OP.prev()
                        ?}
                     ?}
                  !}
              ?};
              ZAP_OP.cntx_pop()
            || _ok:=0
            ?};
            ZAP_OP.cntx_pop(); OP.cntx_pop();
            _zwrot & _ok & ROK_F.next()
         ?}
      !};
      _ok & POZ.prev()
   !}
?};
ROK_F.cntx_pop();
{? ~_zwrot & _a
|| _pyt:=FUN.choice('W dokumencie istnieje pozycja lub pozycje związane z rozliczeniami rozrachunków.'
                           '\nWycofać akceptację dokumentu?'@,,'Tak'@,'Pokaż szczegóły'@);
   _zwrot:=_pyt<>0;
   {? _pyt=2
   || zwrot:=0;
      VAR_DEL.delete('ROZLICZR');
      ROZLICZR:=tab_tmp(3,'POZ','STRING[7]','Pozycja',
                         'ROZR','STRING[50]','Rozrachunek',
                         'KONTO','STRING[35]','Konto',
                         'ROK_ROZL','STRING[20]','Rok rozliczenia',
                         'A','STRING[1]','A',
                         'UTW','STRING[19]','Utworzono'@,
                         'UNIK','STRING[29]','ID');
      _wer:=ROZLICZR.mk_sel('Pozycje dotyczące rozliczeń rozrachunków'@,,,'rozlicz_wer');
      ROZLICZR.win_fld(_wer,,'POZ');
      ROZLICZR.win_fld(_wer,,'ROZR');
      ROZLICZR.win_fld(_wer,,'KONTO',,,20);
      ROZLICZR.win_fld(_wer,,'ROK_ROZL');
      ROZLICZR.win_fld(_wer,,'UTW');
      ROZLICZR.win_fld(_wer,,'A');
      ROZLICZR.win_act(_wer,,'Formuła','Przerwij wycofywanie'@@,,,,"zwrot:=0; sel_exit; 1",1,,,,'P');
      ROZLICZR.win_act(_wer,,'Formuła','Kontynuuj'@@,,,,"zwrot:=1; sel_exit; 1",,,,,'K');
      ROZLICZR.win_sel(_wer);
      _zwrot:=1;
      ind_tym:=ROZLICZR.index('?');
      ind_tym1:=ROZLICZR.ndx_tmp('',1,'UNIK',,0,'UNIK',,0);
      ROZLICZR.index(ind_tym);
      {? POZ.last()
      || {!
         |? {? POZ.ODD<>null & |POZ.ID<>''
            || exec('add_tmpr','rozrach');
               ROK_F.cntx_psh(); ZAP_OP.cntx_psh(); PAR_NAG.cntx_psh(); PAR_POZ.cntx_psh(); OP.cntx_psh();
               ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); SSTALE.AR();
               {!
               |? {? ROK_F.next()
                  || ZAP_OP.use('rozzap'+ ROK_F.KOD); ZAP_OP.index('ZAP');
                     PAR_NAG.use('parnag'+ROK_F.KOD); PAR_NAG.index('UNIK'); PAR_NAG.prefix();
                     PAR_POZ.use('parpoz'+ROK_F.KOD); PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix();
                     OP.use('operac' + ROK_F.KOD);    OP.index('KON_O'); OP.prefix();
                     exec('add_tmpr','rozrach');
                     1
                  ?}
               !};
               PAR_NAG.cntx_pop(); ZAP_OP.cntx_pop(); PAR_POZ.cntx_pop(); ROK_F.cntx_pop(); OP.cntx_pop();
               POZ.prev()
            ?}
         !}
      ?};
      ROZLICZR.select;
      _zwrot:=zwrot; &zwrot; &ind_tym1; &ind_tym;
      VAR_DEL.delete('ROZLICZR')
   ?}
|? ~_zwrot & ~_a
|| {? wyc=1
   ||  spr_rozl:=FUN.ask('Istnieje jeden lub więcej dokumentów,'
                         '\nktóre mają pozycje związane z'
                         '\n rozliczeniami rozrachunków.'
                         '\nWycofać akceptację tych dokumentów?'@);
       wyc:=0
   ?};
   _zwrot:=spr_rozl
?};
_zwrot


\add_tmpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.60]
:: OPIS: Dodawanie rekordow do tabeli tymczasowej - rozliczenia dla pozycji (POZ)
::  OLD: \add_tmpr/akcept.fml
::----------------------------------------------------------------------------------------------------------------------
ZAP_OP.prefix(POZ.ref,FINFO.NAROD,SSTALE.AO,POZ.ODD);
{? ZAP_OP.last()
|| {!|? {? ZAP_OP.PAR_POZ<>null
        || {? |ZAP_OP.OP().SYM=|POZ.ID & ref_name(ZAP_OP.PAR_POZ)=PAR_POZ.name()
           || ZAP_OP.PAR_POZ().PAR_NAG();
              ROZLICZR.cntx_psh();
              ROZLICZR.index(ind_tym1); ROZLICZR.prefix(PAR_NAG.UNIK,PAR_NAG.UNIK);
              _ok:=~ROZLICZR.first();
              ROZLICZR.cntx_pop();
              {? _ok
              || ROZLICZR.POZ:=$POZ.POZ;
                 ROZLICZR.ROZR:=POZ.ID;
                 ROZLICZR.KONTO:=POZ.KON;
                 ROZLICZR.ROK_ROZL:=ROK_F.NAZ;
                 ROZLICZR.A:=PAR_NAG.ZN;
                 ROZLICZR.UNIK:=ROZLICZR.UTW:=PAR_NAG.UNIK;
                 ROZLICZR.add()
              ?}
           ?};
           ZAP_OP.prev()
        ?}
   !}
?}


\br_op_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Rekord przed okna SLO tabeli WER
::  OLD: \br_op_slo/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('op_wnma','rozrach');
Color.rekprzed('OP#04#')


\op_wnma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [8.50]
:: OPIS: Funkcja oblicza obroty wn i ma dla rozrachunkow
::       z uwzglednieniem  dekretow redagowanego dokumentu
::  OLD: \op_wnma/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
OP.get; _ref_poz:=POZ.ref();
_wal:=POZ.WAL;
POZ.cntx_psh();
ROZRACH.WN1:=OP.WN; ROZRACH.MA1:=OP.MA;
POZ.index('ROZR'); POZ.prefix(OP.ODD,'N',OP.AN,OP.SYM,OP.SYM,DOK.ref(),OP.SYM_ROK);
{? POZ.first
|| {!
   |? {? (_wal=null | (_wal<>null & _wal=POZ.WAL)) &
         (var_pres('__POZNPOP')>0 & (__POZNPOP | (~__POZNPOP & POZ.ref()<>_ref_poz)) |
         var_pres('__POZNPOP')<=0 & (-menu_txt(,)<>'popraw' | (-menu_txt(,)='popraw' & POZ.ref()<>_ref_poz)))
        || {? _wal
           || {? 1+POZ.STR='W' || ROZRACH.WN1+=POZ.SUMW || ROZRACH.MA1+=POZ.SUMW ?}
           || {? 1+POZ.STR='W' || ROZRACH.WN1+=POZ.SUM || ROZRACH.MA1+=POZ.SUM ?}
           ?}
        ?};
      POZ.next()
   !}
?};
POZ.cntx_pop();
1


\op_przed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.53]
:: OPIS: Rekord przed tabeli OP okienko SLO
::       zaznacza w okienku rozrachunki, ktore byly juz uzyte w biezacym dokumencie
::  OLD: \op_przed/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.cntx_psh();
POZ.index('ROZR'); POZ.prefix(OP.ODD,'N',OP.AN,OP.SYM,OP.SYM,DOK.ref(),OP.SYM_ROK);
_zwrot:=POZ.first();
POZ.cntx_pop();
{? _zwrot || 'OP#04#01' || '' ?}


\op_zakr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [&.53]
:: OPIS: Zakres wyświetlanych rozrachunków
::   WE: _a = 0 - nierozliczone
::            1 - rozliczone
::            2 - wszystkie
::  OLD: \op_zakr/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
OP.hdr_sel();
hdr_zakr:={? _a=0 || 'nierozliczone' |?_a=1 || 'rozliczone' || 'wszystkie' ?};
zakr:={? _a=0 || 'N' |? _a=1 || 'R' || '' ?};
_tmp_kon:={? (_tmp:=symb_kon*'?')=0 ||symb_kon || (_tmp-1)+symb_kon ?};
_wal_nar:=FINFO.NAROD;
_wal:={? SSTALE.WAL<>FINFO.NAROD || SSTALE.WAL || _wal_nar ?};
{? var_pres('g_impwb')>0 & g_impwb=1
|| {? var_pres('g_impwbk')>0 & g_impwbk<>null & KONTO.K1=''
   || OP.index('KH'); OP.prefix(_wal,g_impwbk,zakr)
   ||  {? zakr<>''
       || OP.index('STAN'); OP.prefix(_wal,zakr,KONTO.K1)
       || OP.index('PRZEG'); OP.prefix(_wal,KONTO.K1)
       ?}
   ?};
   OP.hdr_sel(' %1'@[hdr_zakr])
|| {? -wszy_odd='t'
   || {? zakr=''
      || OP.index('PRZEG'); OP.prefix(wal,_tmp_kon)
      || OP.index('STAN'); OP.prefix(wal,zakr,_tmp_kon)
      ?}
   || {? zakr=''
      || OP.index('PRZEG_O'); OP.prefix(wal,odd_p,_tmp_kon)
      || OP.index('STAN_O'); OP.prefix(wal,odd_p,zakr,_tmp_kon)
      ?}
   ?};
   {? var_pres('rok_hed')>0
   || OP.hdr_sel(' %5 %1: %2, Jednostka księgowa: %3, Zakres: %4'@[hdr_wal,_tmp_kon,hdr_odd,hdr_zakr,rok_hed])
   || OP.hdr_sel(' %1: %2, Jednostka księgowa: %3, Zakres: %4'@[hdr_wal,_tmp_kon,hdr_odd,hdr_zakr])
   ?}
?};
1


\wszy_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.53]
:: OPIS: Wyświetlenie rozrachunków dla wszystkich jednostek księgowych
::  OLD: \wszy_odd/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('spr_odd','rozrach')
||  OP.hdr_sel();
   {? {? odd_p || ODD.seek(odd_p) || ODD.seek(odd_d) ?};
      _v:=ODD.OD;
      hdr_odd=_v
   || hdr_odd:='wszystkie jednostki księgowe'; wszy_odd:='T';
      {? zakr=''
      ||  OP.index('PRZEG'); OP.prefix(wal,symb_kon)
      ||  OP.index('STAN'); OP.prefix(wal,zakr,symb_kon)
      ?}
   || wszy_odd:='N';
      {? zakr=''
      ||  OP.index('PRZEG_O');
          {? odd_p
          || ODD.seek(odd_p); OP.prefix(wal,odd_p,symb_kon)
          || ODD.seek(odd_d); OP.prefix(wal,odd_d,symb_kon)
          ?}
      ||  OP.index('STAN_O');
          {? odd_p
          || ODD.seek(odd_p); OP.prefix(wal,odd_p,zakr,symb_kon)
          || ODD.seek(odd_d); OP.prefix(wal,odd_d,zakr,symb_kon)
          ?}
      ?}; hdr_odd:=ODD.OD
   ?};
   {? var_pres('rok_hed')>0
   || OP.hdr_sel(' %5 %1: %2, Jednostka księgowa: %3, Zakres: %4'@[hdr_wal,symb_kon,hdr_odd,hdr_zakr,rok_hed])
   || OP.hdr_sel(' %1: %2, Jednostka księgowa: %3, Zakres: %4'@[hdr_wal,symb_kon,hdr_odd,hdr_zakr])
   ?}
|| FUN.info('W wybranym rodzaju dokumentu nie ma możliwości przeglądania'
            '\nrozrachunków ze wszystkich oddziałów.'@)
?};
1


\spr_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.53]
:: OPIS: Sprawdza, czy można redagować pole POZ.ODD
::   WY: 1/0
::  OLD: \spr_odd/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
-DOK.DOK_REJ().ODD_ROZR='t'


\his_ks1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Formula wswietla zapisy. Formula wolana jest z okienek wertowania 'PBR' tab. OPTMP
::       oraz 'SLO' i 'SLO_WB' tab. OP
::  OLD: \his_ks1/oper.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh(); POZ.cntx_psh();
ZAP_OP.cntx_psh(); ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref());
ZAP_OP.win_sel('ROZL');
ZAP_OP.hdr_sel(); ZAP_OP.hdr_sel(' %1'@[OP.SYM]);
SUM.SUMRWN:=SUM.SUMRMA:=SUM.TSUMWN:=SUM.TSUMMA:=0;
{? ZAP_OP.first
|| {! |?
      SUM.SUMRWN+=ZAP_OP.WN;
      SUM.SUMRMA+=ZAP_OP.MA;
      {? ~exec('czy_nar','waluty',ZAP_OP.WAL2().KOD,0)
      || SUM.TSUMWN+=ZAP_OP.WN2; SUM.TSUMMA+=ZAP_OP.MA2
      ?};
      ZAP_OP.next()
   !}
?};
SUM.SALRWN:=F.SWn(SUM.SUMRWN,SUM.SUMRMA);
SUM.SALRMA:=F.SMa(SUM.SUMRWN,SUM.SUMRMA);
SUM.TSALWN:=F.SWn(SUM.TSUMWN,SUM.TSUMMA);
SUM.TSALMA:=F.SMa(SUM.TSUMWN,SUM.TSUMMA);
ZAP_OP.select;
_a:=SSTALE.AR().KOD+form(SSTALE.AO().NR,-2); POMOC.USE:=_a;
exec('open','rozrach',_a);
ZAP_OP.cntx_pop;
DOK.cntx_pop(); POZ.cntx_pop()


\open
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.41]
:: OPIS: Otwiera bazy: DOK,POZ,POW,AN
::   WE: _a - maska otwieranych tabel
::  OLD: \open/oper.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.use('doku'+_a);
POZ.use('pozy'+_a);
POW.use('pow_'+_a);
AN.use('koan__'+(2+_a)); AN_SLU.use('koansl'+(2+_a));
ML_POZB.use('pozb'+_a);
1


\op_wysw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Obliczenie salda rozrachunku
::  OLD: \op_wysw/okna.fml
::----------------------------------------------------------------------------------------------------------------------
{? OP.WAL=FINFO.NAROD
|| SALDO.PLN:=OP.WN-OP.MA;
   SALDO.WAL:=0
|| SALDO.WAL:=OP.WN-OP.MA;
   OP.cntx_psh(); OP.index('KON_O'); OP.prefix();
   _oddzial:=OP.ODD;
   _symbol:=OP.SYM;
   _usym:=OP.SYM_ROK;
   _konto:=OP.AN;
   SALDO.PLN:={? OP.find_key(KINFO.NAROD,_oddzial,_konto,_symbol,_symbol,_usym) || OP.WN-OP.MA || 0 ?};
   OP.cntx_pop()
?}; ''


\ae_tzroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.20]
:: OPIS: Formuła po redakcji pola TZ tabeli OP. Sprawdza poprawność wypełnienia pola.
::  OLD: \ae_tzroz/oper.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
{? OP.TZ<>date(0,0,0)
|| {? OP.TZ<OP.DO & PAR_SKID.get(38)='N'
   || FUN.info('Termin płatności nie może być wcześniejszy\n niż data otwarcia rozrachunku.'@);
      {? exec('czyLista','raty',OP)
      || OP.TZ:=exec('drb_tpfp','raty','OP',1)
      ?}; _ret:=0
   ?};
   {? _ret & exec('czyLista','raty',OP)
   || OP.TZ:=exec('drb_tpfp','raty','OP',1)
   ?}
|| FUN.info('Niewypełniony termin płatności.'@);
   _ret:=0
?}; _ret


\op_nz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Formula po redakcji pola OP.TYP
::  OLD: \op_nz/skid_op.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=exec('poz_nz','rozrach','P');
{? _zwrot & (OP.TYP='RMK' | OP.TYP='RMP')
|| FUN.info('Niedozwolona zmiana typu na %1.'@[OP.TYP]);
   {? var_press('OpTyp')>0 || OP.TYP:=OpTyp ?};
   _zwrot:=0
?};
{? _zwrot
|| {? ~(OP.TYP='NAL' | OP.TYP='ZOB') || OP.CZY_ODS:='N' ?};
   {? ~((1+OP.TYP)='N' | (1+OP.TYP)='Z') || OP.CZY_MON:='N' ?};
   exec('op_enable','rozrach')
?};
_zwrot


\pr_o_tp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Przed redakcja pola: OP.CZY_MON
::  OLD: \pr_o_tp/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
(1+OP.TYP)='N' | (1+OP.TYP)='Z'


\pr_o_tp1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Przed redakcją pola: OP.CZY_ODS
::  OLD: \pr_o_tp1/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
OP.TYP='NAL' | OP.TYP='ZOB'


\poz_ope2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [8.50]
:: OPIS: Funkcja wylicza i prezentuje na ekranie saldo rozrachunku
::  OLD: \poz_ope2/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.KWOTA1:=fabs(ROZRACH.WN1-ROZRACH.MA1);
1


\pw_rozwn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed wyswielteniem pola ROZWN saldo WN rozrachunku
::  OLD: \pw_rozwn/oper.fml
::----------------------------------------------------------------------------------------------------------------------
_i:=OP.WN-OP.MA;
SUM.ROZWN:={? _i>0 || _i$2 || 0 ?};
SUM.ROZMA:={? _i>0 || 0    || -_i$2 ?};
1


\kontrol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: kontrola daty przy wydrukach rozrachunkow
::       sciezka:  "rekord po" dla pola DATA zmiennej WYDRUKIN
::  OLD: \kontrol/rozrach.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~__CHK.field(WYDRUKIN,'DATA')
|| FUN.info('W polu musi być podana data w poprawnym formacie.'@);
   WYDRUKIN.DATA:=date(); 0
|| 1
?}


\aerprzek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Po redakcji pola WYDRUKIN.REJPRZEK
::  OLD: \aerprzek/skid_prj.fml
::----------------------------------------------------------------------------------------------------------------------
WYDRUKIN.DATPRZEK:={? ~WYDRUKIN.REJPRZEK || date(0,0,0) || date() ?};
{? WYDRUKIN.REJPRZEK
|| WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'mark=1',,'DATPRZEK')
|| WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'mark=0',,'DATPRZEK')
?};
1


\optmp_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Trigger dla tabeli OPTMP - add przed i put przed
::  OLD: \optmp_trig/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.SYM_ZEW='' || OPTMP.SYM_ZEW:=OPTMP.SYM ?};
1


\pw_zo_rk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [????]
:: OPIS: Rekord przed wyświetleniem danych dotyczacych zapisu na rozrachunku
::  OLD: \pw_zo_rk/rejoper.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_NAG.cntx_psh(); PAR_POZ.cntx_psh();
_us1:={? ZAP_OP.ROK_ROZL=null
      || ZAP_OP.OKRO().ROK().KOD
      || ZAP_OP.ROK_ROZL().KOD
      ?};
PAR_NAG.use('parnag'+_us1); PAR_NAG.prefix();
PAR_POZ.use('parpoz'+_us1); PAR_POZ.prefix();
{? ZAP_OP.PAR_POZ<>null
|| {? ref_name(ZAP_OP.PAR_POZ)<>PAR_POZ.name()
   || _us2:=ref_name(ZAP_OP.PAR_POZ)+2;
      PAR_NAG.use('parnag'+_us2); PAR_NAG.prefix();
      PAR_POZ.use('parpoz'+_us2); PAR_POZ.prefix();
      {? ZAP_OP.PAR_POZ().PAR_NAG().OP<>OP.SYM
      || ROZRACH.SYMR:=ZAP_OP.PAR_POZ().PAR_NAG().OP
      || ROZRACH.SYMR:=ZAP_OP.PAR_POZ().OP
      ?}
   ?};
   ROZRACH.DATA:=ZAP_OP.PAR_POZ().PAR_NAG().DATA_AKC;
   ROZRACH.USER:=ZAP_OP.PAR_POZ().PAR_NAG().USER
|| ROZRACH.SYMR:='';
   ROZRACH.DATA:=date(0,0,0);
   ROZRACH.USER:=''
?};
PAR_NAG.cntx_pop(); PAR_POZ.cntx_pop();
_hid_d:='';_hid:='';
_maska:=(ref_name(ZAP_OP.POZDOK)+4);
_ref:=#ZAP_OP.POZDOK;
DOK.cntx_psh(); POZ.cntx_psh();
_maska2:={? (DOK.name()+2)='__' || (DOK.name()+4) || SSTALE.AR().KOD+form(SSTALE.AO().NR,-2) ?};
{? _maska=_maska2
|| _ok:=1
|| _ok:=0;
    POZ.use('pozy'+_maska);
     DOK.use('doku'+_maska)
?};
POZ.prefix();
 {? _ref<>0 & POZ.seek(_ref,)
 ||   {? _ref<>0 & DOK.seek(POZ.DOK)
       ||
         {? PAR_SKID.get(82)='N'
         ||     DOKUM.index('DOKUM');
                  DOKUM.prefix(REF.FIRMA,$DOK.ref);
                  {? DOKUM.first()
                  ||  ''
                  || _hid_d+='Z'
                  ?}
         ?};'załącznik';
         {? DOK.DOKZRODL='' || _hid_d+='D' ?};'dokument źródłowy';
         {? ~DOK.E_DOC || _hid_d+='E' ?};'skan ';
         {? _hid_d<>'' || _hid+='D('+_hid_d+')' ?}
      ?}
 ?};
POZ.cntx_pop(); DOK.cntx_pop()
;
_okno:={? ZAP_OP.win_sel('?')='' ||  'ROZL1' ||  ZAP_OP.win_sel('?') ?};
ZAP_OP.actions_grayed(_okno,_hid);
PAR_WYDR.SLPAR1:={? ZAP_OP.TYP='Z' || 'Zapłata' || '' ?};
0


\dsppozopproj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Wyswietlenie zapisow dokumentu zrodlowego dla zapisu na rozrachunku projektu
::----------------------------------------------------------------------------------------------------------------------
OP.cntx_psh(); ROK_F.cntx_psh();
_maska:=(ref_name(ZAP_PROJ.POZ)+4); _ref:=#ZAP_PROJ.POZ;
exec('zapisy','dok_fks',_maska,_ref,SSTALE.WAL<>FINFO.NAROD);
OP.cntx_pop(); ROK_F.cntx_pop()


\dsppozop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Wyswietlenie zapisow dokumentu zrodlowego dla zapisu na rozrachunku
::----------------------------------------------------------------------------------------------------------------------
OP.cntx_psh(); ROK_F.cntx_psh();
_maska:=(ref_name(ZAP_OP.POZDOK)+4); _ref:=#ZAP_OP.POZDOK;
exec('zapisy','dok_fks',_maska,_ref,SSTALE.WAL<>FINFO.NAROD);
OP.cntx_pop();
ROK_F.cntx_pop()


\roz_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [????]
:: OPIS: Funkcja wyświetla nagłówek rozrachunku przy przeglądaniu rozrachunków
::----------------------------------------------------------------------------------------------------------------------
OP.win_edit('RED');
OP.display();
0


\roz_old
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Rekord przed dla okienek pozycji rozrachunkow - wyroznia pozycje zwiazane z rozliczeniami rozrachunkow
::  OLD: \roz_old/parow.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAP_OP.PAR_POZ<>null
|| 'ZAP_OP#01#01'
|? ZAP_OP.RK='T' & (ZAP_OP.WN<0 | ZAP_OP.MA<0)
|| 'ZAP_OP#01#02'
''
?}


\poz_dis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Akcja Wyswietl w okienku ROZL tabeli ZAP_OP
::  OLD: \poz_dis/oper.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAP_OP.PAR_POZ=null |
  (ZAP_OP.PAR_POZ<>null & FUN.ask('Zapis pochodzący z operacji\nrozliczenia rozrachunków.\n'
                                  'Pokazać pozycję dokumentu źódłowego\nz zapisu rozliczającego?'@))
|| {? ZAP_OP.OKRO<>SSTALE.AO
   || _okres:=SSTALE.AO;
      SSTALE.AO:=ZAP_OP.OKRO;
      SSTALE.AO();
      exec('open','rozrach',OKRO_F.ROK().KOD+form(OKRO_F.NR,-2));
      OBR.use('obroty'+OKRO_F.ROK().KOD)
   || _okres:=ZAP_OP.OKRO
   ?};
   ZAP_OP.POZDOK();
   {? PAR_SKID.get(36)='T' & PAR_SKID.get(35)='T'
   || POZ.win_edit('POZ_PR'+{? MLEX.FIKSB || 'B' || 'R' ?}+'2'); exec('ustal_ka','dok_fks')
   || POZ.win_edit('POZ_PR'+{? MLEX.FIKSB || 'B' || 'R' ?})
   ?};
   _vrt:=ROZRACH.TABELA; ROZRACH.TABELA:='POZ';
   exec('bd_wprat','dok_fks');
   exec('bv_poz_spv','fks_sp',2);
   POZ.display();
   ROZRACH.TABELA:=_vrt;
   {? ZAP_OP.OKRO<>_okres
   || SSTALE.AO:=_okres;
      SSTALE.AO();
      exec('open','rozrach',OKRO_F.ROK().KOD+form(OKRO_F.NR,-2));
      OBR.use('obroty'+OKRO_F.ROK().KOD)
   ?}
?};
1


\zap_opod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PB] [8.70]
:: OPIS: formula po odswiezeniu okienka wertowania tabeli ZAP_OP
::       w oknach grupowych WER2G i WER2GSIK tabeli OP
::  OLD: \zap_opod/oper.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAP_OP.f_active()
|| ZAP_OP.f_clear()
?};
ZAP_OP.index('OP');
{? (OP.f_active=0 | (OP.f_active<>0 & (OP.sel_size()<>0 | OP.f_size<>0))) & OP.get
|| ZAP_OP.prefix(OP.ref)
|| ZAP_OP.prefix(0)
?};
{? ZAP_OP.OP<>OP.ref || ZAP_OP.first || ZAP_OP.get ?};
ZAP_OP.cntx_psh;
ZAP_OP.win_sel('ROZL1');
ZAP_OP.hdr_sel();
ZAP_OP.hdr_sel('Zapisy rozrachunku: %1'@[OP.SYM]);
exec('zap_op_sum','rozrach');
POMOC.USE:=SSTALE.AR().KOD+form(SSTALE.AO().NR,-2);
ZAP_OP.cntx_pop;
grp_disp(ZAP_OP,{? exec('interm','#system') || 'ROZL3' || 'ROZL1' ?});
{? exec('interm','#system') || grp_edisp(ZAP_OP,'POSUM') ?}


\zap_op_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Oblicza podsumowanie kwot dla pozycji rozrachunku
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1)=ZAP_PROJ & cur_win(1,1)='WER'
|| SUM.SUMRWN:=SUM.SUMRMA:=SUM.TSUMWN:=SUM.TSUMMA:=0;
   SUM.VSUMWN:=SUM.VSUMMA:=0;
   ZAP_PROJ.cntx_psh();
   _filtr:=ZAP_PROJ.f_active();
   {? _filtr & ZAP_PROJ.f_first() | ~_filtr & ZAP_PROJ.first
   || {!
      |? SUM.SUMRWN+=ZAP_PROJ.WN;
         SUM.SUMRMA+=ZAP_PROJ.MA;
         SUM.VSUMWN+=ZAP_PROJ.SP_V_WN;
         SUM.VSUMMA+=ZAP_PROJ.SP_V_MA;
         {? ~exec('czy_nar','waluty',ZAP_PROJ.WAL2().KOD,0)
         || SUM.TSUMWN+=ZAP_PROJ.WN2; SUM.TSUMMA+=ZAP_PROJ.MA2
         ?};
         _filtr & ZAP_PROJ.f_next() | ~_filtr & ZAP_PROJ.next()
      !}
   ?};
   ZAP_PROJ.cntx_pop();
   SUM.SALRWN:=F.SWn(SUM.SUMRWN,SUM.SUMRMA);
   SUM.SALRMA:=F.SMa(SUM.SUMRWN,SUM.SUMRMA);
   SUM.TSALWN:=F.SWn(SUM.TSUMWN,SUM.TSUMMA);
   SUM.TSALMA:=F.SMa(SUM.TSUMWN,SUM.TSUMMA);
   SUM.VSALWN:=F.SWn(SUM.VSUMWN,SUM.VSUMMA);
   SUM.VSALMA:=F.SMa(SUM.VSUMWN,SUM.VSUMMA);
   1
|| {? cur_tab(1,1)=OP & cur_win(1,1)='WER22'
   || PAR_WYDR.RPAR1:=PAR_WYDR.RPAR2:=0;
      OP.cntx_psh();
      _ref:=OP.ref;
      {? {? OP.f_active || OP.f_first || OP.first() ?}
      || {! |?
            PAR_WYDR.RPAR1+=OP.WN$2;
            PAR_WYDR.RPAR2+=OP.MA$2;
            {? OP.f_active || OP.f_next || OP.next() ?}
         !}
      ?};
      {? OP.f_active || OP.f_seek(_ref) ?};
      OP.cntx_pop();
      PAR_WYDR.RPAR3:=F.SWn(PAR_WYDR.RPAR1,PAR_WYDR.RPAR2);
      PAR_WYDR.RPAR4:=F.SMa(PAR_WYDR.RPAR1,PAR_WYDR.RPAR2);
      1
   ?};
   SUM.SUMRWN:=SUM.SUMRMA:=SUM.TSUMWN:=SUM.TSUMMA:=0;
   SUM.VSUMWN:=SUM.VSUMMA:=0;
   ZAP_OP.cntx_psh();
   {? {? ZAP_OP.f_active() || ZAP_OP.f_first() || ZAP_OP.first() ?}
   || {!
      |? SUM.SUMRWN+=ZAP_OP.WN;
         SUM.SUMRMA+=ZAP_OP.MA;
         SUM.VSUMWN+=ZAP_OP.SP_V_WN;
         SUM.VSUMMA+=ZAP_OP.SP_V_MA;
         {? ~exec('czy_nar','waluty',ZAP_OP.WAL2().KOD,0)
         || SUM.TSUMWN+=ZAP_OP.WN2; SUM.TSUMMA+=ZAP_OP.MA2
         ?};
         {? ZAP_OP.f_active() || ZAP_OP.f_next() || ZAP_OP.next() ?}
      !}
   ?};
   ZAP_OP.cntx_pop();
   SUM.SALRWN:=F.SWn(SUM.SUMRWN,SUM.SUMRMA);
   SUM.SALRMA:=F.SMa(SUM.SUMRWN,SUM.SUMRMA);
   SUM.TSALWN:=F.SWn(SUM.TSUMWN,SUM.TSUMMA);
   SUM.TSALMA:=F.SMa(SUM.TSUMWN,SUM.TSUMMA);
   SUM.VSALWN:=F.SWn(SUM.VSUMWN,SUM.VSUMMA);
   SUM.VSALMA:=F.SMa(SUM.VSUMWN,SUM.VSUMMA);
   1
?}


\wszy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [????]
:: OPIS: Rozrachunki wsyztskie
::  OLD: \wszy/oper.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.STAN:='';
exec('zakr_op','rozrach')


\nier
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [????]
:: OPIS: Rozrachunki nierozliczone
::  OLD: \nier/oper.fml
::----------------------------------------------------------------------------------------------------------------------\
POMOC.STAN:='N';
exec('zakr_op','rozrach')


\rozl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [????]
:: OPIS: Rozrachunki rozliczone
::  OLD: \rozl/oper.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.STAN:='R';
exec('zakr_op','rozrach')


\zakr_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [????]
:: OPIS: ustawienie zakresu operacji
::  OLD: \zakr_op/oper.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.STAN='W' | POMOC.STAN=''
|| {? OPERATOR.DEPT
   || OP.index('PRZEG_O'); OP.prefix(SSTALE.WAL,OPERATOR.DEPT,ROZNE.PREFIX)
   || OP.index('PRZEG'); OP.prefix(SSTALE.WAL,ROZNE.PREFIX)
   ?}
|| {? OPERATOR.DEPT
   || OP.index('STAN_O'); OP.prefix(SSTALE.WAL,OPERATOR.DEPT,POMOC.STAN,ROZNE.PREFIX)
   || OP.index('STAN'); OP.prefix(SSTALE.WAL,POMOC.STAN,ROZNE.PREFIX)
   ?}
?};
{? var_pres('tyt_op')>0 || tyt_op:='' ?};
exec('nagl','rozrach');
{? ROZNE.PREFIX<>''
|| _hdr:=' - konta '+ROZNE.PREFIX;
   OP.hdr_sel(_hdr);
   {? var_pres('tyt_op')>0 || tyt_op+=_hdr ?}
?};
1


\nagl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: naglowek tabeli operacje
::   WE: _a: wywolywany dla 'SALDO (dla kontrahenta)'
::  OLD: \nagl/oper.fml
::----------------------------------------------------------------------------------------------------------------------
_string:={? _ || ' ['+KH.SKR+'] - rozrachunki' || '' ?};
{? POMOC.STAN='N'
|| _string+=' nierozliczone'
|? POMOC.STAN='R'
|| _string+=' rozliczone'
|| _string+=' wszystkie'
?};
_string+=' (' + SSTALE.WAL().KOD + ')';
{? SSTALE.AR || _string+=' rok '+SSTALE.AR().NAZ ?};
OP.hdr_sel;
OP.hdr_sel(_string);
{? var_pres('tyt_op')>0 || tyt_op+=_string ?}


\rp_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Rekord przed przy wyswietlaniu rozrachunkow
::       Wykonanie formuly bedzie powodowac wyroznienie rozrachunkow przeterminowanych
::   WE: _a, _b - wartosci graniczne przedzialow przeterminowania rozrachunkow np. 90, 180
::  OLD: \rp_roz/oper.fml
::----------------------------------------------------------------------------------------------------------------------
_gray:='';
{? 1+OP.TYP='N'
|| _gray:='E'
?};
OP.actions_grayed('WER2',_gray);
exec('op_kont4','rozrach');
OP.KH().KOD;
{? var_pres('_a')>0 & var_pres('_b')>0 & _a<_b
|| {? PAR_SKID.get(47)='N' & (1+OP.TYP='N' & OP.MA>OP.WN | 1+OP.TYP='Z' & OP.WN>OP.MA)
   || 'OP#02'
   |? OP.STAN = 'N' & OP.TZ < date()
   || _d:=date()-OP.TZ;
      {? _d<=_a || 'OP#02#01'
      |? _d>_a & _d<=_b || 'OP#02#02'
      |? _d>_b || 'OP#02#03'
      ?}
   || ''
   ?}
|| ''
?}


\op_kont4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Formula Rekord przed w okienkach wertowania tabeli VROZ
::  OLD: \op_kont4/opis_kon.fml
::----------------------------------------------------------------------------------------------------------------------
exec('op_konta','konto',OP.AN,null,2);
exec('ka_opis','konto')


\pw_r_tp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.40]
:: OPIS: Akcja przed wysw. dla pola ROZRACH.PO_TP
::  OLD: \pw_r_tp/oper.fml
::----------------------------------------------------------------------------------------------------------------------
{? OP.get() & OP.STAN='N' & (_d:=date()-OP.TZ)>0
|| {? PAR_SKID.get(47)='N' & (1+OP.TYP='N' & OP.MA>OP.WN | 1+OP.TYP='Z' & OP.WN>OP.MA)
   || _d:=0
   ?};
   ROZRACH.PO_TP:=_d;
   Color.rekprzed('OP#01')
|| 0
?}


\op_rmk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Wyświetlanie danych RMK
::  OLD: \op_rmk/oper.fml
::----------------------------------------------------------------------------------------------------------------------
RMK.prefix();
OP.cntx_psh();
OP.win_edit({? -OP.TYP='rmk' & RMK.find_key(OP.ODD,OP.AN,OP.SYM,OP.SYM,OP.SYM_ROK)
            || 'REDRMK'
            || 'RED'
            ?});
OP.display();
OP.cntx_pop(); 1


\stany1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: stany operacji
::  OLD: \stany1/oper.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dat_spl','rozrach',date(2015,4,30));
STANY.index('STAN');
SUM.SUMWN:=0;
SUM.SUMMA:=0;
STANY.prefix(OP.ref);
{? STANY.first
|| {! |?
      SUM.SUMWN+=STANY.WN;
      SUM.SUMMA+=STANY.MA;
      STANY.next()
   !}
?};
SUM.SALWN:=F.SWn(SUM.SUMWN, SUM.SUMMA);
SUM.SALMA:=F.SMa(SUM.SUMWN, SUM.SUMMA);
STANY.select()


\rp_srok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: rekord przed przy wyswietlaniu tabeli STANY
::  OLD: \rp_srok/oper.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.W1_S:=OP.WAL;
POMOC.ROK:=STANY.OKRO().ROK


\stan_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Stany - waluta
::  OLD: \stan_wal/oper.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('QRT')<=0
|| ROZRACH.W2_S:=null;
   ROZRACH.WNW:=ROZRACH.MAW:=0;
   QRT:=exec('oper_mas','rozrach',3);
   {? QRT[1]
   || ROZRACH.W2_S:=QRT[1];
      exec('stan_zap','rozrach', QRT[6])
   ?}
?};
QRT[4]+=1;     _w:=QRT[1];
{? QRT[4]>QRT[5] || obj_del(QRT) ?};
_w


\stan_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Stany - zapisy
::  OLD: \stan_zap/oper.fml
::----------------------------------------------------------------------------------------------------------------------
_w:=0;
ZAP_OP.cntx_psh(); ZAP_OP.index('OP'); ZAP_OP.prefix(_a);
{? ZAP_OP.first()
|| {! |?
      {? ZAP_OP.OKRO=STANY.OKRO
      || ROZRACH.WNW+=ZAP_OP.WN; ROZRACH.MAW+=ZAP_OP.MA
      ?};
      ZAP_OP.next()
   !}
?};
ZAP_OP.cntx_pop();
_w


\op_przeglad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2011]
:: OPIS: Zmiana zakresu wyswietlanych rozrachunkow
::  OLD: \op_przeglad/oper.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.win_edit('ZAKRESOP');
VAR_DEL.delete('war');
war:="ROZNE.TYP_DOK:=~-ROZNE.TYP_DOK;
   _wynik:='';
   {? ROZNE.ZAKR_ROZ=3 & ROZNE.KON_OD().SYM<>'' & ROZNE.KON_DO().SYM<>'' & ROZNE.KON_DO().SYM<ROZNE.KON_OD().SYM
   || FUN.info('Wprowadzono nieprawidłowy zakres kont.'@);
      _wynik:='KON_OD'
   ?};
   {? _wynik='' & ROZNE.KOMP_DOD<>date(0,0,0) & ROZNE.KOMP_DDO<>date(0,0,0) & ROZNE.KOMP_DDO<ROZNE.KOMP_DOD
   || FUN.info('Wprowadzono nieprawidłowy zakres dat dla zakresu daty otwarcia.'@);
      _wynik:='KOMP_DOD'
   ?};
   {? _wynik='' & ROZNE.DATA_OD<>date(0,0,0) & ROZNE.DATA_DO<>date(0,0,0) & ROZNE.DATA_DO<ROZNE.DATA_OD
   || FUN.info('Wprowadzono nieprawidłowy zakres dat dla zakresu terminu płatności.'@);
      _wynik:='DATA_OD'
   ?};
   WSK.cntx_psh();
   WSK.index('RODZ'); WSK.prefix('I');
   {? _wynik='' & ~(ROZNE.TYP_DOK<>'' & WSK.find_key(ROZNE.TYP_DOK) | ROZNE.TYP_DOK='')
   || FUN.info('Nie istnieje typ rozrachunku o początku: %1'@[ROZNE.TYP_DOK]);
      _wynik:='TYP_DOK'
   ?};
   WSK.cntx_pop();
   _wynik
   ";
{? ROZNE.edit("war()")
|| exec('op_przeglad1','rozrach')
?};
VAR_DEL.delete('war');
~~


\op_przeglad1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Zmiana zakresu wyswietlanych rozrachunkow
::  OLD: \op_przeglad1/oper.fml
::----------------------------------------------------------------------------------------------------------------------
{? ( ROZNE.ZAKR_ROZ=1 | ROZNE.ZAKR_ROZ=2 & ROZNE.KH_WYB=null | ROZNE.ZAKR_ROZ=4 & ROZNE.MASKA=''
     | ROZNE.ZAKR_ROZ=3 & ROZNE.KON_OD().SYM='' & ROZNE.KON_DO().SYM='')
   & ROZNE.KOMP_DOD=date(0,0,0) & ROZNE.KOMP_DDO=date(0,0,0)
   & ROZNE.DATA_OD=date(0,0,0) & ROZNE.DATA_DO=date(0,0,0)
   & ROZNE.TYP_DOK=''
|| OP.f_clear();
   exec('zakr_op','rozrach')
|| _maska:=_zakr_od:=_zakr_do:=_kh:=_typ_roz:=_tyt:='';
   {? POMOC.STAN='W' | POMOC.STAN=''
   || {? OPERATOR.DEPT
      || OP.index('PRZEG_O'); OP.prefix(SSTALE.WAL,OPERATOR.DEPT,ROZNE.PREFIX);
         _sort:='WAL,ODD,AN,TZ,SYM,DO';
         _where:='OP.WAL=:_a and OP.ODD=:_b'
      || OP.index('PRZEG'); OP.prefix(SSTALE.WAL,ROZNE.PREFIX);
         _sort:='WAL,AN,TZ,SYM,DO';
         _where:='OP.WAL=:_a'
      ?}
   || {? OPERATOR.DEPT
      || OP.index('STAN_O'); OP.prefix(SSTALE.WAL,OPERATOR.DEPT,POMOC.STAN,ROZNE.PREFIX);
         _sort:='WAL,ODD,STAN,AN,TZ,SYM,SYM_ROK,DO';
         _where:='OP.WAL=:_a and OP.ODD=:_b and OP.STAN=\':_c\''
      || OP.index('STAN'); OP.prefix(SSTALE.WAL,POMOC.STAN,ROZNE.PREFIX);
         _sort:='WAL,STAN,AN,TZ,SYM,SYM_ROK,DO';
         _where:='OP.WAL=:_a and OP.STAN=\':_c\''
      ?}
   ?};
   {? var_pres('zakladka')>0 || tyt_op:='' ?};
   exec('nagl','rozrach');
   {? ROZNE.ZAKR_ROZ=4
   || _maska:=MS.fld_len('POZ','KON')+exec('str_sql','#sql',ROZNE.MASKA);
      _where+=' and OP.AN like \':_d\'';
      {? ROZNE.MASKA<>'' || _tyt+=' dla maski '+ROZNE.MASKA ?}
   |? ROZNE.ZAKR_ROZ=1
   || _maska:=MS.fld_len('POZ','KON')+exec('str_sql','#sql',ROZNE.PREFIX);
      _where+=' and OP.AN like \':_d\'';
      {? ROZNE.PREFIX<>'' || _tyt+='- konta '+ROZNE.PREFIX ?}
   |? ROZNE.ZAKR_ROZ=3
   || _zakr_od:=ROZNE.KON_OD().SYM;
      _zakr_do:=ROZNE.KON_DO().SYM;
      {? _zakr_od<>'' & _zakr_do<>''
      || _where+=' and OP.AN between \':_e\' and \':_f\'';
         _tyt+=' konta od '+_zakr_od+' do '+_zakr_do
      |? _zakr_od='' & _zakr_do=''
      || _tyt+=' wszystkie konta'
      |? _zakr_od<>''
      || _where+=' and OP.AN>=\':_e\'';
         _tyt+=' od konta '+_zakr_od
      |? _zakr_do<>''
      || _where+=' and OP.AN<=\':_f\'';
         _tyt+=' do konta '+_zakr_do
      ?}
   |? ROZNE.ZAKR_ROZ=2
   || _kh:=ROZNE.KH_WYB;
      {? ROZNE.KH_WYB<>null
      || _where+=' and OP.KH=:_g';
         _tyt+=' dla kontrahenta '+ROZNE.KH_WYB().SKR
      ?}
   ?};
   {? ROZNE.KOMP_DOD=date(0,0,0) & ROZNE.KOMP_DDO=date(0,0,0)
   || 1
   |? ROZNE.KOMP_DDO=date(0,0,0)
   || _where+=' and OP.DO>=to_date(:_h)';
      _tyt+=', data otwarcia od '+ROZNE.KOMP_DOD$1
   |? ROZNE.KOMP_DOD=date(0,0,0)
   || _where+=' and OP.DO<=to_date(:_i)';
      _tyt+=', data otwarcia do '+ROZNE.KOMP_DDO$1
   || _where+=' and OP.DO>=to_date(:_h) and OP.DO<=to_date(:_i)';
      _tyt+=', data otwarcia od '+ROZNE.KOMP_DOD$1+' do '+ROZNE.KOMP_DDO$1
   ?};
   {? ROZNE.DATA_OD=date(0,0,0) & ROZNE.DATA_DO=date(0,0,0)
   || 1
   |? ROZNE.DATA_DO=date(0,0,0)
   || _where+=' and OP.TZ>=to_date(:_j)';
      _tyt+=', term. zapłaty od '+ROZNE.DATA_OD$1
   |? ROZNE.DATA_OD=date(0,0,0)
   || _where+=' and OP.TZ<=to_date(:_k)';
      _tyt+=', term. zapłaty do '+ROZNE.DATA_DO$1
   || _where+=' and OP.TZ>=to_date(:_j) and OP.TZ<=to_date(:_k)';
      _tyt+=', term. zapłaty od '+ROZNE.DATA_OD$1+' do '+ROZNE.DATA_DO$1
   ?};
   {? ROZNE.TYP_DOK<>''
   || _typ_roz:=MS.fld_len('OP','TYP')+exec('str_sql','#sql',ROZNE.TYP_DOK);
      _where+=' and OP.TYP like \':_l\'';
      _tyt+=', typ '+ROZNE.TYP_DOK
   ?};
   OP.prefix();
   OP.f_set(_sort,,_where,SSTALE.WAL,OPERATOR.DEPT,POMOC.STAN,_maska,_zakr_od,_zakr_do,_kh,
       ROZNE.KOMP_DOD,ROZNE.KOMP_DDO,ROZNE.DATA_OD,ROZNE.DATA_DO,_typ_roz);
   {? zakladka=2
   || OP.hdr_sel()
   || {? _tyt<>'' || OP.hdr_sel(_tyt) ?}
   ?};
   {? var_pres('tyt_op')>0 || tyt_op+=_tyt ?}
?}


\pocz_pst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Wartosc pocz. POMOC.STAN stany wyswietlanych operacji
::  OLD: \pocz_pst/oper.fml
::----------------------------------------------------------------------------------------------------------------------
'N'


\pr_pref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Po redakcji ROZNE.ZAKR_ROZ
::  OLD: \pr_pref/skid_op.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1).win_edit('?')='ZAKRESOP'
|| {? ROZNE.ZAKR_ROZ=1
   || ROZNE.MASKA:=''; ROZNE.KH_WYB:=ROZNE.KON_OD:=ROZNE.KON_DO:=null
   |? ROZNE.ZAKR_ROZ=3
   || ROZNE.PREFIX:=ROZNE.MASKA:=''; ROZNE.KH_WYB:=null; ROZNE.SZUK:=1
   |? ROZNE.ZAKR_ROZ=2
   || ROZNE.PREFIX:=ROZNE.MASKA:=''; ROZNE.KON_OD:=ROZNE.KON_DO:=null
   |? ROZNE.ZAKR_ROZ=4
   || ROZNE.PREFIX:=''; ROZNE.KON_OD:=ROZNE.KON_DO:=ROZNE.KH_WYB:=null
   ?}
|| {? ROZNE.ZAKR_ROZ=0
   || ROZNE.PREF_ROZ:=''; ROZNE.KON_OD:=ROZNE.KON_DO:=null;
      ROZNE.KH_WYB:=null
   |? ROZNE.ZAKR_ROZ=1
   || ROZNE.KH_WYB:=ROZNE.KON_OD:=ROZNE.KON_DO:=null
   |? ROZNE.ZAKR_ROZ=3
   || ROZNE.PREF_ROZ:=''; ROZNE.KH_WYB:=null
   |? ROZNE.ZAKR_ROZ=2
   || ROZNE.PREF_ROZ:=''; ROZNE.KON_OD:=ROZNE.KON_DO:=null
   ?}
?};
1


\bv_prfx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Przed wyswietl dla pola PAR_WYDR.PREFIX
::  OLD: \bv_prfx/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.PAR4=0


\bv_maska
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Przed wyswietl dla pola PAR_WYDR.MASKA
::  OLD: \bv_maska/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1).win_edit('?')='ZAKR_WYS'
|| ''
|| ROZNE.PAR4=2 | cur_tab(1,1).win_edit('?')='ZAKRESOP'
?}


\pr_kwyb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Przed redakcja pol ROZNE.KON_OD i ROZNE.KON_DO
::  OLD: \pr_kwyb/skid_ror.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.SZUK:=1; ROZNE.ZAKR_ROZ=3


\komp_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Przed redagowaniem ROZNE.KOMP_DOD, ROZNE.KOMP_DDO
::  OLD: \komp_2/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.KOMP_OKR | cur_tab(1,1).win_edit('?')='ZAKRESOP' || 1 || 0 ?}


\bedaty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Formula przed redakcja pol ROZNE.DATA_OD, ROZNE.DATA_DO
::  OLD: \bedaty/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab()=WYDRUKI & WYDRUKI.win_edit('?')='OKRESY1'
|| WYDRUKI.P1<>2
|? cur_tab()=ROZNE & ROZNE.win_edit('?')='ZAKR_WYS'
|| ROZNE.TYP_WYS='M'
|| 1
?}


\aedata
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PB] [8.60]
:: OPIS: Formula po redakcji pola typu data
::       sprawdza czy redagowane pole daty jest z aktywnego roku bilansowego
::  OLD: \aedata/dok_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_okno:=cur_tab(1,1).win_edit('?');
{? _okno='ZAKRESOP' | _okno='ZAKR_WYS' | exec('dat_not','dok_fks',fld)
|| 1
|| FUN.info('Data musi być z bieżącego roku bilansowego.'@); 0
?}


\opzap_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MAKO [2010]
:: OPIS: Akcja Okienko Przed okna ROZL tabeli ZAP_OP
:-----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.SLPAR1:=''; 1


\op_dr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [7.53]
:: OPIS: Wydruki dla pojedynczych rozrachunkow (Rozrach.-->Przegl. rozr.)
::  OLD: \op_dr/parow.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','','fks_op_*',,1)


\pop_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2006]
:: OPIS: Po poprawianiu rozrachunku poprawia ten sam rozrachunek w innych latach
::       lacznie z przeniesieniem zmodyfikowanych platnosci ratalnych
::   WE: _a - 1/0 - przenosic/nie przenosic rat
::----------------------------------------------------------------------------------------------------------------------
_tran:={? do_state()=0 || do(); 0 || 1 ?}; _rok_od:=null; _wal_rat:=null;
OP.cntx_psh();  ROK_F.cntx_psh(); _kod_r:=(OP.name()+2);
ZAP_OP.cntx_psh(); {? (ZAP_OP.name()+2)<>_kod_r || ZAP_OP.use('rozzap'+_kod_r) ?};
D_RB.cntx_psh(); {? (D_RB.name()+2)<>_kod_r || D_RB.use('dr__fk'+_kod_r) ?};
_drb_old:=D_RB.name(); _op_old:=OP.ref();
ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref());
{? ZAP_OP.first() || _rok_od:=ZAP_OP.OKRO().ROK ?};
{? _rok_od<>null
|| {? _a
   || D_RB.cntx_psh(); D_RB.index('OP'); D_RB.prefix(OP.ref());
      {? D_RB.first()
      || _wal_rat:=OP.WAL;
         TAB_DRB:=tab_tmp(2,'MASPOZ','STRING[10]','Maska poza',
                            'REFPOZ','INTEGER','Ref poza');
         {! |?
            {? D_RB.POZ<>null
            || _maska:=ref_name(D_RB.POZ); _ref:=#D_RB.POZ;
               {? ~TAB_DRB.find_key(_maska,_ref)
               || TAB_DRB.REFPOZ:=_ref; TAB_DRB.MASPOZ:=_maska; TAB_DRB.add()
               ?}
            ?};
            D_RB.next()
         !}
      ?};
      D_RB.cntx_pop()
   ?};
   SLO.cntx_psh(); SLO.index('SL');
   _odd:=OP.ODD; _sym:=OP.SYM; _han:=OP.HAN; _usym:=OP.SYM_ROK;
   _utz:=OP.TZ; _uop:=OP.OP; _uods:=OP.ODS; _umon:=OP.CZY_MON; _unot:=OP.CZY_ODS; _urb:=OP.RB; _konto:='';
   {? ZAP_OP.POZDOK
   || POZ.cntx_psh();
      POZ.use(ref_name(ZAP_OP.POZDOK)); POZ.index('DOK'); POZ.prefix(); _konto:=ZAP_OP.POZDOK().KON;
      POZ.cntx_pop()
   ?};
   ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
   {? _konto<>'' & ROK_F.seek(_rok_od)
   || {! |?
         {? ROK_F.KOD<>_kod_r
         || OP.use('operac'+ROK_F.KOD); OP.index('KON_O');
            ZAP_OP.use('rozzap'+ROK_F.KOD);
            D_RB.use('dr__fk'+ROK_F.KOD); D_RB.index('OP');
            SLO.prefix(FINFO.SLWAL().SLU);
            {? SLO.first()
            || {! |?
                  OP.prefix(SLO.ref(),_odd,_konto,_sym,_sym,_usym);
                  {? OP.first()
                  || {? OP.r_lock(1,1)
                     || OP.TZ:=_utz; OP.OP:=_uop; OP.ODS:=_uods; OP.CZY_MON:=_umon; OP.HAN:=_han;
                        OP.CZY_ODS:=_unot; OP.RB:=_urb; OP.put();
                        {? _a & _wal_rat=OP.WAL & var_pres('TAB_DRB')>0
                        || D_RB.prefix(OP.ref());
                           {? D_RB.first()
                           || {! |?
                                {? TAB_DRB.first()
                                || _petla:=1;
                                   {! |?
                                      {? TAB_DRB.MASPOZ=ref_name(D_RB.POZ) &
                                         TAB_DRB.REFPOZ=#D_RB.POZ
                                      || _petla:=0
                                      ?};
                                      _petla & TAB_DRB.next()
                                   !};
                                   {? _petla || D_RB.next() || D_RB.del() ?}
                                || 0
                                ?}
                              !}; _op_new:=OP.ref(); _drb_new:=D_RB.name();
                              D_RB.cntx_psh();
                              D_RB.use(_drb_old); D_RB.index('OP'); D_RB.prefix(_op_old);
                              {? D_RB.first()
                              || {! |?
                                    D_RB.cntx_psh();
                                    D_RB.use(_drb_new); D_RB.OP:=_op_new; D_RB.add();
                                    D_RB.cntx_pop();
                                    D_RB.next()
                                 !}
                              ?};
                              D_RB.cntx_pop()
                           ?}
                        ?};
                        OP.r_unlock()
                     || undo()
                     ?}
                  ?};
                  SLO.next()
               !}
            ?}
         ?};
         _pkon:=_konto; _konto:='';
         ROK_F.cntx_psh();
         {? ROK_F.next()
         || OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
            {? OKRO_F.first()
            || POZ.cntx_psh();
               POZ.use('pozy'+ROK_F.KOD+form(OKRO_F.NR,-2));
               POZ.index('PKON'); POZ.prefix(_pkon);
               {? POZ.first() & POZ.PKON=_pkon || _konto:=POZ.KON ?};
               POZ.cntx_pop()
            ?};
            OKRO_F.cntx_pop()
         ?};
         ROK_F.cntx_pop();
         _konto<>'' & ROK_F.next()
      !}
   ?};
   SLO.cntx_pop()
?};
D_RB.cntx_pop(); ROK_F.cntx_pop(); OP.cntx_pop(); ZAP_OP.cntx_pop();
VAR_DEL.delete('TAB_DRB');
{? ~_tran || end() ?}; 1


\ust_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.53]
:: OPIS: Ustawia wartosc w zmiennej ROZRACH.KW3 (okienka)
::  OLD: \ust_poz/parow.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.KW3:={? cur_win()='PB_GEN' | cur_win()='PB_ZAL'
             || OPTMP.SAL-OPTMP.ROZL
             || {? SER_KOR.TYP='K' | SER_KOR.TYP='P' | SER_KOR.TYP='' | OPTMP.ROZL$2>0
                || {? SER_KOR.TYP='K'
                   || {? ROZRACH.KW4<>0
                      || OPTMP.SAL-OPTMP.KOMPMA
                      || 0
                      ?}
                   || OPTMP.SAL-OPTMP.ROZL
                   ?}
                || 0
                ?}
             ?};
ROZRACH.POZ_VAT:={? cur_win()='PB_GEN' | cur_win()='PB_GEN_G'
                 || OPTMP.SP_VSAL-OPTMP.SP_VDOZ
                 || 0
                 ?};
{? cur_win()<>'PBGNZAL1'
|| _hid:=exec('optmp_hid','rozrach');
   _win:=OPTMP.win_sel('?');
   {? _win+2='_G' || _win:=_win-2 ?};
   OPTMP.actions_grayed(_win,_hid)
?};
1


\bd_rbopt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.70]
:: OPIS: Przed wyswietleniem rachunku bankowego OPTMP.RB
::  OLD: \bd_rbopt/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
OPTMP.RB:=RB.get_rbtx(2,OPTMP.RB);
1


\sal_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Obliczenie sald dla zakresu wyswietlanych rozrachunkow
::  OLD: \sal_op/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.RPAR1:=PAR_WYDR.RPAR2:=0;
OP.cntx_psh();
_ref:=OP.ref;
{? {? OP.f_active || OP.f_first || OP.first() ?}
|| {! |?
      PAR_WYDR.RPAR1+=OP.WN$2;
      PAR_WYDR.RPAR2+=OP.MA$2;
      {? OP.f_active || OP.f_next || OP.next() ?}
   !}
?};
{? OP.f_active || OP.f_seek(_ref) ?};
OP.cntx_pop();
PAR_WYDR.RPAR3:=F.SWn(PAR_WYDR.RPAR1,PAR_WYDR.RPAR2);
PAR_WYDR.RPAR4:=F.SMa(PAR_WYDR.RPAR1,PAR_WYDR.RPAR2);
1


\nier_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Wyswietlenie rozrachunkow dla kontrahentow  o podanym stanie
::   WE: _a - stan (N/R)
::       _b - KH.ref
::  OLD: \nier_op/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('stringi') || _a:='N' ?};
{? var_pres('_b')<>type_of(null) || _b:=KH.ref ?};
{? _b=null || _b:=-1 ?};
POMOC.STAN:=_a;
OP.index('KH');
{? OPERATOR.DEPT
|| OP.prefix(SSTALE.WAL,_b,_a,OPERATOR.DEPT);
   {? OP.f_active() || OP.f_rfresh() ?};
   {? ~OP.find_key(OP.AN,OP.TZ,OP.SYM,OP.DO,OP.SYM_ROK) || OP.first() ?}
|| OP.prefix(SSTALE.WAL,_b,_a);
   {? OP.f_active() || OP.f_rfresh() ?};
   {? ~OP.find_key(OP.ODD,OP.AN,OP.TZ,OP.SYM,OP.DO,OP.SYM_ROK) || OP.first() ?}
?};
OP.hdr_sel();
{? _a='N'
|| OP.hdr_sel(' - %1 -  nierozliczone'@[SSTALE.AR().NAZ])
|| OP.hdr_sel(' - %1 -  rozliczone'@[SSTALE.AR().NAZ])
?};
exec('sal_op','rozrach');
exec('gentree1','rozrach')


\roz_kont
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Przed redakcja pola struktura
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.KONTR=null


\prz_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Przed redakcją PAR_NAG.ODD
::  OLD: \prz_odd/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
OPERATOR.DEPT=null


\pr_komkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Formuła przed redakcją pola PAR_NAG.KH1
::  OLD: \pr_komkh/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.KONTR=null


\po_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Formuła po redakcji pola PAR_NAG.PAR_UM
::  OLD: \po_um/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? PAR_NAG.PAR_UM<>null
|| PAR_NAG.PAR_UM();
   {? ~ROZRACH.KONTR
   || ROZRACH.SLU:=PAR_UM.SL().SLU
   |? ROZRACH.KONTR & PAR_UM.KH<>ROZRACH.KONTR
   || FUN.info('Dana umowa nie dotyczy kontrahenta: "'+ROZRACH.KONTR().SKR+'".'); _zwrot:=0
   ?}
|| PAR_UM.SLO:=PAR_UM.KH:=null; ROZRACH.SLU:=null
?};
_zwrot


\ust_ptz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Ustawia wartości zmiennych dla kompensat i rozliczeń
::  OLD: \ust_ptz/parow.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.DO:=date(0,0,0);
OP.cntx_psh(); OP.index('KON_O');
_konto:={? PAR_NAG.TYP='P' || PAR_NAG.KONTO || PAR_POZ.KONTO ?};
{? PAR_POZ.SYM_ROK=''
|| OP.prefix(SSTALE.WAL,PAR_NAG.ODD,_konto,PAR_POZ.OP,PAR_POZ.OP)
|| OP.prefix(SSTALE.WAL,PAR_NAG.ODD,_konto,PAR_POZ.OP,PAR_POZ.OP,PAR_POZ.SYM_ROK)
?};
{? OP.first()
|| _ok:=0; {? PAR_NAG.TYP='K' || ROZRACH.KONTO:=OP.AN ?}; ROZRACH.DO:=OP.DO
|| _ok:=1; {? PAR_NAG.TYP='K' || ROZRACH.KONTO:='' ?}
?};
{? PAR_NAG.TYP='P'
|| ROZRACH.KW1:=PAR_POZ.SAL$2-PAR_POZ.KWOTA$2
|| ROZRACH.KW1:={? -PAR_POZ.STR='wn' || PAR_POZ.SAL$2-PAR_POZ.KWOTA$2 || 0 ?};
   ROZRACH.KW10:={? -PAR_POZ.STR='ma' || PAR_POZ.SAL$2-PAR_POZ.KWOTA$2 || 0 ?}
?};
OP.cntx_pop();
{? _ok || 'PAR_POZ#01#01' || '' ?}


\ust_poz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: wartosc w zmiennej ROZRACH.KW11
::  OLD: \ust_poz1/parow.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.KW11:={? ROZRACH.KW4=0 || OPTMP.SAL-OPTMP.KOMPWN || 0 ?}; 1


\ae_sym_optmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Po redakcji pola OPTMP.SYM
::  OLD: \ae_sym_optmp/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.SYM_ZEW='' | DOK.DOK_REJ().EDSYMZEW='N'
|| _maska:=((POZ.name()-2)+2);
   OP.cntx_psh(); OP.use('operac'+_maska);
   OP.index('KON_O'); OP.prefix(ROZRACH.WAL,DOK.ODD,OPTMP.KONTO,OPTMP.SYM,OPTMP.SYM);
   OPTMP.SYM_ZEW:={? OP.first() || OP.SYM_ZEW || OPTMP.SYM ?};
   OP.cntx_pop()
?};
1


\be_trz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Formuła przed redakcja parametrów rozrachunku
::  OLD: \be_trz/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<=0 || _a:=0 ?};
{? form(OPTMP.SYM)<>'' & ~DOK.RVAT ||
   {? OPTMP.DATA=date(0,0,0) & DOK.DTW<>date(0,0,0)
   || OPTMP.DATA:=DOK.DTW+FINFO.OKRROZ
   ?};
   {? OPTMP.DATAO=date(0,0,0) || OPTMP.DATAO:=DOK.DTW ?};
   1
|? form(OPTMP.SYM)=''
   || OPTMP.TYP:='';OPTMP.DATA:=OPTMP.DATAO:=date(0,0,0);0
   || _a
?}


\komwnedi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula przed redakcja pola OPTMP.KOMPWN
::  OLD: \komwnedi/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.KW5$2<>0


\kommaedi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula przed redakcja pola OPTMP.KOMPMA
::  OLD: \kommaedi/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.KW4$2<>0


\be_optmp_symzew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Przed redakcja pola OPTMP.SYM_ZEW
::  OLD: \be_optmp_symzew/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.DOK_REJ().EDSYMZEW='T'


\par_nag_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Trigger dla tabeli PAR_NAG - add przed i put przed
::  OLD: \par_nag_trig/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_NAG.SYM_ZEW='' || PAR_NAG.SYM_ZEW:=PAR_NAG.OP ?};
1


\par_poz_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Trigger dla tabeli PAR_POZ - add przed i put przed
::  OLD: \par_poz_trig/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_POZ.SYM_ZEW='' || PAR_POZ.SYM_ZEW:=PAR_POZ.OP ?};
1


\rozl_6
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Po redagowaniu ROZNE.ROZL_ZAK
::  OLD: \rozl_6/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~ROZNE.ROZL_ZAK
|| ROZNE.ROZL_KOD:=ROZNE.ROZL_KDO:=ROZNE.ROZL_SLU:=null;
   ROZNE.ROZL_POZ:=null; ROZNE.ROZL_SL1:=''
|? ROZNE.ROZL_ZAK=1
|| ROZNE.ROZL_KOD:=ROZNE.ROZL_KDO:=null
|| ROZNE.ROZL_SL1:=''; ROZNE.ROZL_POZ:=ROZNE.ROZL_SLU:=null
?}; 1


\rozl_7
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Przed redagowaniem ROZNE.ROZL_POZ
::  OLD: \rozl_7/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.ROZL_ZAK=1 & |ROZNE.ROZL_SL1<>'' || 1 || 0 ?}


\rozl_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Przed redagowaniem ROZNE.ROZL_SL1
::  OLD: \rozl_1/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.ROZL_ZAK=1 || 1 || 0 ?}


\rozl_5
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Po redagowaniu ROZNE.ROZL_SL1
::  OLD: \rozl_5/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? chk_fld
|| exec('pored_slu','slo_slu','ROZNE.ROZL_SLU','ROZNE.ROZL_SL1','')
|| 0
?}


\rozl_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Przed redagowaniem ROZNE.ROZL_KOD, ROZNE.ROZL_KDO
::  OLD: \rozl_2/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.ROZL_ZAK=3 || 1 || 0 ?}


\ed_konr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Przed redagowaniem ROZNE.PREF_ROZ
::  OLD: \ed_konr/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.ZAKR_ROZ=1 || 1 || 0 ?}


\pr_p_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Formuła przed redakcją pola PAR_UM.SLO
::  OLD: \pr_p_slo/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_UM.SL<>null
|| SLO.win_sel('ONE'); SLO.win_dict('ONE');
   PAR_UM.SL().SLU();
   {? PAR_UM.SLO
   || SLO.cntx_psh(); SLO.index('SL'); SLO.prefix(SLU.ref());
      {? ~SLO.seek(PAR_UM.SLO) || PAR_UM.SLO:=null; win_disp() ?};
      SLO.cntx_pop()
   ?};
   1
?}


\bl_um_tp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartość początkowa pola PAR_UM.TYP i SER_WYD.TYP
::  OLD: \bl_um_tp/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
SER_KOR.TYP


\chk_s_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Sprawdza wypełnienie pól przy wypełnianiu danych umowy
::  OLD: \chk_s_um/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
{? SER_KOR.TYP='K'
|| _a:=__CHK.record(PAR_UM,,'SYM','KH','DATA_OD','DATA_DO')
|| _a:=__CHK.record3(PAR_UM,'SYM',,ROZRACH,'SL','Słownik',PAR_UM,'SLO',,PAR_UM,'DATA_OD',,PAR_UM,'DATA_DO',)
?};
{? _a=''
|| {? PAR_UM.DATA_OD>PAR_UM.DATA_DO
   || FUN.info('Niewłaściwy zakres dat.'@); _a:='DATA_OD'
   ?}
?};
{? _a='' || exec('kon2paru','rozrach') ?};
_a


\kon2paru
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Ustawienie pól PAR_UM.KONTO1 do PAR_UM.KONTO4 na podstawie KONTO.K1 do KONTO.K4
::  OLD: \kon2paru/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_UM.KONTO1:=KONTO.K1; PAR_UM.KONTO2:=KONTO.K2;
PAR_UM.KONTO3:=KONTO.K3; PAR_UM.KONTO4:=KONTO.K4


\pszukum1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Przed akcja Szukaj w okienku WER1 tabeli PAR_UM
::  OLD: \pszukum1/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_UM.win_patt(''); 1


\pdol_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Przed akcją Dołącz w okienku wertowania PAR_UM
::  OLD: \pdol_um/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ust_um','rozrach');
KONTO.K1:=KONTO.K2:=KONTO.K3:=KONTO.K4:=''


\ust_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Ustawienie okienka redakcyjnego tabeli PAR_UM
::  OLD: \ust_um/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
{? SER_KOR.TYP='K'
|| PAR_UM.win_edit('');
   PAR_UM.win_patt('SZUK')
|? SER_KOR.TYP='F'
|| PAR_UM.win_edit('FAK')
|| PAR_UM.win_edit('UMU')
?}


\ppop_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Przed akcja popraw w okienku tabeli PAR_UM
::  OLD: \ppop_um/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ust_um','rozrach');
KONTO.K1:=PAR_UM.KONTO1; KONTO.K1_RODZ:=1; KONTO.K1_WYM:=0; KONTO.K1_SYNT:=0;
KONTO.K1_BE:=''; KONTO.K1_AE:='';
KONTO.K2:=PAR_UM.KONTO2; KONTO.K2_RODZ:=1; KONTO.K2_WYM:=0; KONTO.K2_SYNT:=0;
KONTO.K2_BE:=''; KONTO.K2_AE:='';
KONTO.K3:=PAR_UM.KONTO3; KONTO.K3_RODZ:=1; KONTO.K3_WYM:=0; KONTO.K3_SYNT:=0;
KONTO.K3_BE:=''; KONTO.K3_AE:='';
KONTO.K4:=PAR_UM.KONTO4; KONTO.K4_RODZ:=3; KONTO.K4_WYM:=0; KONTO.K4_SYNT:=1;
KONTO.K4_BE:=''; KONTO.K4_AE:='';
1


\po_poum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Po akcji Popraw w okienku tabeli PAR_UM
::  OLD: \po_poum/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
exec('kon2paru','rozrach');
PAR_UM.put();
1


\pwys_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Akcja wyświetl w okienku tabeli PAR_UM
::  OLD: \pwys_um/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ust_um','rozrach');
exec('ppop_um','rozrach');
PAR_UM.display()


\pszuk_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Przed akcja Szukaj w okienku tabeli PAR_UM
::  OLD: \pszuk_um/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_UM.win_patt('SZUK'); PAR_UM.win_edit(''); 1


\aeserdef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.10]
:: OPIS: Rekord po dla wzorców korespondencji z rozrachunków i umów dotyczących rozrachunków
::  OLD: \aeserdef/wz_ser.fml
::----------------------------------------------------------------------------------------------------------------------
_a:='';
{? SER_DEF.KOD=''
|| FUN.info('Proszę podać kod.'@); _a:='KOD'
?};
{? _a=''
|| {? -SER_KOR.TYP='w' & SER_DEF.ST<=0
   || FUN.info('Stopień musi być większy od zera.'@); _a:='ST'
   |? -SER_KOR.TYP='p' & ~(SER_DEF.ST=0 | SER_DEF.ST=1)
   || FUN.info('Dopuszczalne wartości stopnia:'
               '\n0 - uwzględnia wszystkie rozrachunki'
               '\n1 - tylko nierozliczone'@);
      _a:='ST'
   ?}
?};
{? _a='' & __CHK.index(SER_DEF,-menu_txt(,)='popraw')<>'' || _a:='KOD' ?};
_a


\be_wart1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Przed redakcja rekordow w SER_DEFW
::  OLD: \be_wart1/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('be_wart','rozrach')
|| exec('par_j','rozrach')
|| 0
?}


\be_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Przed redakcja rekordów w tabelach SER_WART, SER_DEFW, SER_SCH
::  OLD: \be_wart/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_err','rozrach','SLO.win_sel(\'ONE_SEL\'); SLO.win_dict(\'ONE_SEL\')')
|| exec('msg_err','rozrach'); 0
|| 1
?}


\par_j
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Ustawienie slownika jezykow
::  OLD: \par_j/param.fml
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.SLJEZYK=0
|| FUN.info('Nie zdefiniowano słownika języków.'@);   0
|| SLO.index('SL');
   SLO.prefix(XINFO.SLJEZYK);
   XINFO.SLJEZYK();
   SLO.win_sel('ONE_SEL'); SLO.win_dict('ONE_SEL');
   1
?}


\czy_err
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [8.40]
:: OPIS: Formula sprawdza czy formula przekazana jako STRING nie wywoluje bledu
::   WE: _a - formula (STRING)
::       _b - 1 pokazywac komunikat o numerze bledu
::   WY: 0 - nie ma bledu
::       <>0 - numer bledu
::  OLD: \czy_err/skid_app.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<=0 || _b:=0 ?};
no_msg(1); errno();
exec('form_err','rozrach',_a);
_errno:=errno();
{? _errno & _b || FUN.info('Numer błędu: %1'@[$_errno]) ?};
no_msg(0);
_errno


\form_err
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [8.40]
:: OPIS: Wykonuje formule przekazana jako STRING parametrem
::   WE: _a - formula (STRING)
::  OLD: \form_err/skid_app.fml
::----------------------------------------------------------------------------------------------------------------------
($_a)()


\msg_err
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [8.40]
:: OPIS: Komunikat o niedozwolonym wywolaniu
::  OLD: \msg_err/skid_app.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Funkcja niedostępna z tego kontekstu wywołania.'@)


\skid_sop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Opis tekstowy
::  OLD: \skid_sop/gen_ser.fml
::----------------------------------------------------------------------------------------------------------------------
SER_DEFW.memo_get(,'TEKST');
SER_DEFW.memo_view(,'TEKST');
0


\ser_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Artur Makos [2010]
:: OPIS: Typ korespondencji
::  OLD: \ser_typ/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
SER_KOR.TYP


\stopien
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Podpowiedz następnego wolnego stopnia sprawozdania (wezwania do zaplaty)
::  OLD: \stopien/wz_ser.fml
::----------------------------------------------------------------------------------------------------------------------
{? -SER_KOR.TYP<>'p'
|| {? SER_DEF.ST<>0
   || BYLO:=BYLO1:=SER_DEF.ST; 1
   || BYLO:=0;
      SER_DEF.cntx_psh(); SER_DEF.index('SER_DEFS'); SER_DEF.prefix(SER_KOR.TYP);
      _a:={? SER_DEF.last() || SER_DEF.ST || 0 ?};
      SER_DEF.cntx_pop();
      BYLO1:=SER_DEF.ST:=_a+1;1
   ?}
|| BYLO:=BYLO1:=SER_DEF.ST; 1
?}


\stopspr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Artur Makos [2010]
:: OPIS: Sprawdza wypelnienie odpowiedniego stopnia sprawozdania
::  OLD: \stopspr/wz_ser.fml
::----------------------------------------------------------------------------------------------------------------------
{? -SER_KOR.TYP<>'p'
|| {? SER_DEF.ST<=0
   || FUN.info('Stopień musi być większy od zera'@); 0
   || {? BYLO<>0 & BYLO<>SER_DEF.ST
      || {? FUN.ask('Zmienić paramatry komentarza?'@)
         || 1
         || SER_DEF.ST:=BYLO; 0
         ?}
      |? BYLO1<SER_DEF.ST
      || FUN.info('W stopniowaniu powstaną luki.'@)
      |? SER_DEF.ST>BYLO1
      || FUN.info('Sprawdź czy nie ma komentarza o tym stopniu.'@)
      || 1
      ?}
   ?}
|| {? SER_DEF.ST=0 | SER_DEF.ST=1
   || 1
   || FUN.info('Dopuszczalne wartości:'
               '\n0 - uwzględnia wszystkie rozrachunki'
               '\n1 - tylko nierozliczone'@);0
   ?}
?}


\duze1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Artur Makos [2010]
:: OPIS: Napis 'UUU'
::  OLD: \duze1/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
'UUU'


\serdfref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS:
::  OLD: \serdfref/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
SER_DEF.ref()


\rpo_serdefw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Rekord po - wydruki sprawozdań
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? ~SER_DEFW.JEZYK
|| FUN.info('Nie wybrano języka'@); _zwrot:='JEZYK'
?};
{? _zwrot='' & __CHK.index(SER_DEFW,-menu_txt(,)='popraw')<>'' || _zwrot:='JEZYK' ?};
_zwrot


\initree1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Tworzenie tabelek tymczasowych (rozrachunki w pulpicie windykatora)
::  OLD: \initree1/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TAB_ROZ')>0 || tabr:=1; return(1) ?};
TAB_ROZ:=tab_tmp(1,'TREE','TREE_REF','',
                   'WARTTREE','STRING[80]','',
                   'WID','INTEGER','Widoczna pozycja',
                   'PELWART','STRING[100]','',
                   'POZIOM','INTEGER','Poziom',
                   'WART','STRING[60]','',
                   'WN','REAL','Obroty Winien',
                   'MA','REAL','Obroty Ma',
                   'SWN','REAL','Saldo Winien',
                   'SMA','REAL','Saldo Ma',
                   'PRZED_PO','STRING[18]','Przeterminowany',
                   'AN','STRING[35]','Konto',
                   'DO','STRING[10]','Data otwarcia',
                   'TZ','STRING[10]','Termin płatności',
                   'ZWL','STRING[6]','Zwłoka',
                   'TYP','STRING[3]','Typ',
                   'ODD','STRING[8]','Jednostka księgowa',
                   'SYM','STRING[50]','Rozrachunek',
                   'SYM_ROK','STRING[55]','Unikalny symbol',
                   'REF_WAL','INTEGER','Waluta',
                   'WARTTRE1','STRING[60]','',
                   'SYM_ZEW','STRING[50]',''
                );
indtroz3:=TAB_ROZ.ndx_tmp('',1,'AN',,0,'WID',,0);
indtroz4:=TAB_ROZ.ndx_tmp('',1,'AN',,0,'PRZED_PO',,0,'WID',,0);
indtroz5:=TAB_ROZ.ndx_tmp('',1,'AN',,0,'AN',,0);
indtroz6:=TAB_ROZ.ndx_tmp('',1,'AN',,0,'PRZED_PO',,0,'PRZED_PO',,0);
indtroz7:=TAB_ROZ.ndx_tmp('',1,'POZIOM',,0,'REF_WAL',,0,'ODD',,0,'AN',,0,'SYM',,0,'SYM',,0,'SYM_ROK',,0);
sel_roz:=TAB_ROZ.mk_sel('Rozrachunki'@,'N',0,'tab_roz_wer1',,,,1);
indtroz1:=TAB_ROZ.index('?');
indtroz2:=TAB_ROZ.ndx_tmp('',1,'POZIOM',,0,'PELWART',,0);
TAB_ROZ.win_fld(sel_roz,,'WARTTREE',,,25);
TAB_ROZ.win_fml(sel_roz,,'WARTTREE',,'ICON_BEFORE',
                "TAB_ROZ.cntx_psh(); TAB_ROZ.index(indtroz1); TAB_ROZ.prefix(TAB_ROZ.ref());
                 _zwrot:={? TAB_ROZ.first()
                         || TAB_ROZ.cntx_pop();
                            {? TAB_ROZ.tr_state()=1
                            || 'xwin16.png:75'
                            || 'xwin16.png:74'
                            ?}
                         || TAB_ROZ.cntx_pop(); ''
                         ?}; _zwrot");
TAB_ROZ.win_act(sel_roz,,'Formuła','Zwiń/&rozwiń całość'@@,,
                'Zwijanie/rozwijanie całości'@,"exec('zwrw_all','#tree','TAB_ROZ','TREE')",,,,,,'R');
TAB_ROZ.win_fld(sel_roz,,'WN',,,12,2,,'Obroty Winien'@);
TAB_ROZ.win_fld(sel_roz,,'MA',,,12,2,,'Obroty Ma'@);
TAB_ROZ.win_fld(sel_roz,,'SWN',,,12,2,,'Saldo Winien'@);
TAB_ROZ.win_fld(sel_roz,,'SMA',,,12,2,,'Saldo Ma'@);
TAB_ROZ.win_fld(sel_roz,,'DO');
TAB_ROZ.win_fld(sel_roz,,'TZ');
TAB_ROZ.win_fld(sel_roz,,'ZWL');
TAB_ROZ.win_fld(sel_roz,,'TYP');
TAB_ROZ.win_fld(sel_roz,,'ODD');
TAB_ROZ.win_act(sel_roz,,'Rekord',,,,"exec('rek_prz1','rozrach')");
TAB_ROZ.win_act(sel_roz,,'Formuła','O&blicz obroty'@@,,'Obroty i salda zaznaczonych pozycji'@,,
                "exec('obl_obr2','rozrach')",,1,"exec('be_gobr','dok_fks')",
                "exec('ae_gobr','dok_fks')" ,'B');
TAB_ROZ.win_act(sel_roz,,'Formuła','Zapisy'@@,,'Zapisy na rozrachunkach'@,"exec('wop_zap','rozrach')");
TAB_ROZ.win_act(sel_roz,,'Formuła','Opis konta'@@,,'Pełne informacje o koncie zapisu'@,"exec('op_konta','konto',TAB_ROZ.AN)",,,,,,'O');
TAB_ROZ.win_act(sel_roz,0,'Menu','Zmień z&akres'@,,'Ustalenie zakresu przeglądanych rozrachunków'@);
TAB_ROZ.win_act(sel_roz,0,'Formuła','Wszystkie'@@,'Zmień z&akres'@,'Przeglądanie wszystkich rozrachunków'@,
                "exec('wszy_op','rozrach')",,,,,,'W');
TAB_ROZ.win_act(sel_roz,0,'Formuła','Nierozliczone'@@,'Zmień z&akres'@,
                'Przeglądanie rozrachunków nierozliczonych'@,"exec('nier_op','rozrach')",,,,,,'N');
TAB_ROZ.win_act(sel_roz,0,'Formuła','Rozliczone'@@,'Zmień z&akres'@,'Przeglądanie rozrachunków rozliczonych'@,
                "exec('rozl_op','rozrach')",,,,,,'R');
TAB_ROZ.win_act(sel_roz,0,'Formuła','Wybrany &typ, prefiks'@@,'Zmień z&akres'@,
                'Przeglądanie rozrachunków wybranego typu'@,"exec('typ_op','rozrach')",,,,,,'T');
TAB_ROZ.win_act(sel_roz,1,'Menu','Zmień z&akres'@,,'Ustalenie zakresu przeglądanych rozrachunków'@);
TAB_ROZ.win_act(sel_roz,1,'Formuła','Wszystkie'@@,'Zmień z&akres'@,'Przeglądanie wszystkich rozrachunków'@,
                "exec('wszy_op','rozrach')",,,,,,'W');
TAB_ROZ.win_act(sel_roz,1,'Formuła','Nierozliczone'@@,'Zmień z&akres'@,'Przeglądanie rozrachunków nierozliczonych'@,
                "exec('nier_op','rozrach')",,,,,,'N');
TAB_ROZ.win_act(sel_roz,1,'Formuła','Rozliczone'@@,'Zmień z&akres'@,'Przeglądanie rozrachunków rozliczonych'@,
                "exec('rozl_op','rozrach')",,,,,,'R');
TAB_ROZ.win_act(sel_roz,1,'Formuła','wybrany Typ, prefiks'@@,'Zmień z&akres'@,
                'Przeglądanie rozrachunków wybranego typu'@,"exec('typ_op','rozrach')");
TAB_ROZ.win_act(sel_roz,0,'Wyświetl',,,,,"exec('wop_wys','rozrach')");
TAB_ROZ.win_act(sel_roz,0,'Formuła','Drukuj'@@,,'Wydruk bieżącej zawartości ekranu'@,
                "exec('widoczne','rozrach')",,,,,,'D',,'icon=print');
TAB_ROZ.win_sel(sel_roz);
TAB_ROZ1:=tab_tmp(3,'AN','STRING[35]','',
                    'PRZED_PO','STRING[18]','Przeterminowany',
                    'SYM','STRING[50]','Rozrachunek',
                    'WN','REAL','Winien',
                    'MA','REAL','Ma',
                    'DO','DATE','Data otwarcia',
                    'TZ','DATE','Termin płatności',
                    'ZWL','INTEGER','Zwłoka',
                    'TYP','STRING[3]','Typ',
                    'ODD','STRING[8]','Jedn. ks.',
                    'REF_WAL','INTEGER','Waluta',
                    'SYM_ZEW','STRING[50]','Symbol zewnętrzny'
                 )


\obl_obr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Obliczenie obrotow i sald dla pozycji (rozrachunki)
::  OLD: \obl_obr2/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
{? TAB_ROZ.sel_size()=0
|| ROZNE.WN:=TAB_ROZ.WN$2; ROZNE.MA:=TAB_ROZ.MA$2;
   ROZNE.SWN:=F.SWn(ROZNE.WN,ROZNE.MA); ROZNE.SMA:=F.SMa(ROZNE.WN,ROZNE.MA);
   ROZNE.win_edit('OBROTY1');
   ROZNE.hdr_edit();
   ROZNE.hdr_edit('Obroty i salda zaznaczonych pozycji'@);
   ROZNE.display();
   ROZNE.hdr_edit()
|| ROZNE.WN+=TAB_ROZ.WN$2; ROZNE.MA+=TAB_ROZ.MA$2
?}


\widoczne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Wrzuca do tabelki tymczasowej rozwiniete elementy i drukuje je
::  OLD: \widoczne/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_WID:=tab_tmp(1,'PELWART','STRING[100]','',
                   'WART','STRING[60]','',
                   'WN','REAL','Obroty Winien',
                   'MA','REAL','Obroty Ma',
                   'SWN','REAL','Saldo Winien',
                   'SMA','REAL','Saldo Ma',
                   'DO','STRING[10]','Data otw.',
                   'TZ','STRING[10]','Termin pł.',
                   'ZWL','STRING[6]','Zwłoka',
                   'TYP','STRING[3]','Typ',
                   'ODD','STRING[8]','Jedn. ks.',
                   'WARTTRE1','STRING[60]','',
                   'SYM_ZEW','STRING[50]',''
                );
TAB_ROZ.cntx_psh();
TAB_ROZ.index(indtroz1); TAB_ROZ.prefix(null);
{? TAB_ROZ.first()
|| {! |?
      {? TAB_ROZ.tr_state()=1 || exec('rekuren','rozrach',TAB_ROZ.ref()) ?};
      exec('add_wid','rozrach');
      TAB_ROZ.next()
   !}
?};
TAB_ROZ.cntx_pop();
exec('rep_exec','#b_report','','fks_tmptree2',,,,,,,,'W');
VAR_DEL.delete('TAB_WID');
1


\rekuren
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Rekurencyjnie wrzuca do tabelki wynikowej widoczne pozycje
::   WE: _a - ref rekordu nadrzednego
::  OLD: \rekuren/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
TAB_ROZ.cntx_psh();
TAB_ROZ.index(indtroz1); TAB_ROZ.prefix(_a);
{? TAB_ROZ.first()
|| {! |?
      {? TAB_ROZ.tr_state()=1 || exec('rekuren','rozrach',TAB_ROZ.ref()) ?};
      exec('add_wid','rozrach');
      TAB_ROZ.next()
   !}
|| _zwrot:=0
?};
TAB_ROZ.cntx_pop();
_zwrot


\add_wid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Dodaje rekordy do tabeli z widocznymi pozycjami
::  OLD: \add_wid/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_WID.PELWART:=TAB_ROZ.PELWART;
TAB_WID.WART:=TAB_ROZ.WART;
TAB_WID.WN:=TAB_ROZ.WN;
TAB_WID.MA:=TAB_ROZ.MA;
TAB_WID.SWN:=TAB_ROZ.SWN;
TAB_WID.SMA:=TAB_ROZ.SMA;
TAB_WID.DO:=TAB_ROZ.DO;
TAB_WID.TZ:=TAB_ROZ.TZ;
TAB_WID.ZWL:=TAB_ROZ.ZWL;
TAB_WID.TYP:=TAB_ROZ.TYP;
TAB_WID.ODD:=TAB_ROZ.ODD;
TAB_WID.WARTTRE1:=TAB_ROZ.WARTTRE1;
TAB_WID.SYM_ZEW:=TAB_ROZ.SYM_ZEW;
TAB_WID.add()


\wop_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Akcja Zapisy w okienkach tabeli TAB_ROZ
::  OLD: \wop_zap/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
{? TAB_ROZ.POZIOM=3
|| OP.cntx_psh();
   {? exec('fnd_op','rozrach')
   || ZAP_OP.cntx_psh();
      ZAP_OP.win_sel('ROZL2'); ZAP_OP.hdr_sel(); ZAP_OP.hdr_sel('Zapisy na rozrachunkach'@);
      ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref());
      exec('sumzapop','rozrach');
      ZAP_OP.select();
      ZAP_OP.cntx_pop()
   ?};
   OP.cntx_pop()
|| FUN.info('Akcja niedostępna dla danej pozycji.'@)
?}


\sumzapop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Naliczanie podsumowan w okienku tabeli ZAP_OP
::  OLD: \sumzapop/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
SUM.SUMRWN:=SUM.SUMRMA:=SUM.TSUMWN:=SUM.TSUMMA:=0;
{? ZAP_OP.first
|| {! |?
      SUM.SUMRWN+=ZAP_OP.WN; SUM.SUMRMA+=ZAP_OP.MA;
      ZAP_OP.next()
   !}
?};
SUM.SALRWN:=F.SWn(SUM.SUMRWN,SUM.SUMRMA);
SUM.SALRMA:=F.SMa(SUM.SUMRWN,SUM.SUMRMA)


\fnd_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Znalezienie rozrachunku dla pozycji
::  OLD: \fnd_op/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
OP.index('KON_O'); OP.prefix();
SLO.cntx_psh(); SLO.prefix();
ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? ODD.find_key(TAB_ROZ.ODD,TAB_ROZ.ODD) & SLO.seek(TAB_ROZ.REF_WAL,SLO.name()) &
   OP.find_key(SLO.ref(),ODD.ref(),TAB_ROZ.AN,TAB_ROZ.SYM,TAB_ROZ.SYM,TAB_ROZ.SYM_ROK)
|| _zwrot:=1
|| FUN.info('Brak rozrachunku w aktualnej kartotece rozrachunków.'@)
?};
SLO.cntx_pop(); ODD.cntx_pop();
_zwrot


\wop_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Akcja Wyswietl w okienku tabeli TAB_WIN
::  OLD: \wop_wys/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
OP.cntx_psh();
{? TAB_ROZ.POZIOM=3 & exec('fnd_op','rozrach') || OP.win_edit('RED'); OP.display() ?};
OP.cntx_pop()


\rek_prz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Formula na rekord przed dla okienka tabeli TAB_WIN
::  OLD: \rek_prz1/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
echo();
KS.cntx_psh(); KS.index('SYM'); KS.prefix(SSTALE.AR,SSTALE.AR().SYNT+TAB_ROZ.AN);
{? KS.first() || exec('opis','konto',TAB_ROZ.AN); exec('ka_opis','konto') ?};
KS.cntx_pop();
_zwrot


\wszy_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Wyświetlenie rozrachunków dla kontrahenta
::   WE: _a - typ kontrahenta
::  OLD: \wszy_op/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.STAN:='';
{? _=0 || _a:='' ?};
{? OPERATOR.DEPT
|| OP.index('KH3'); OP.prefix(SSTALE.WAL,OPERATOR.DEPT,KH.ref(),_a)
|| OP.index('KH2'); OP.prefix(SSTALE.WAL,KH.ref(),_a)
?};
{? OP.f_active() || OP.f_rfresh() ?};
OP.hdr_sel();
OP.hdr_sel(' - %1'@[SSTALE.AR().NAZ]);
exec('sal_op','rozrach');
exec('gentree1','rozrach')


\typ_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Wyświetlenie rozrachunków kontrahenta dla podanego typu i prefiksu konta
::  OLD: \typ_op/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
KONTO.K1_RODZ:=3;
KONTO.K1_WYM:=0;
KONTO.K1_SYNT:=0;
KONTO.K1_BE:=KONTO.K1_AE:='';
POMOC.STAN:='P';
ROZRACH.win_edit('TYP');
{? ROZRACH.edit()
|| {? OPERATOR.DEPT
   || OP.index('KH3');
      OP.prefix(SSTALE.WAL,OPERATOR.DEPT,KH.ref(),ROZRACH.ZN,KONTO.K1)
   || OP.index('KH2'); OP.prefix(SSTALE.WAL,KH.ref(),ROZRACH.ZN,KONTO.K1)
   ?};
   {? OP.f_active() || OP.f_rfresh() ?};
   OP.hdr_sel();
   _opistyp:={? ROZRACH.ZN='NAL' || 'należności'
             |? ROZRACH.ZN='ZOB' || 'zobowiązania'
             |? ROZRACH.ZN='RMK' || 'rozliczenia międzyokresowe kosztów'
             |? ROZRACH.ZN='RMP' || 'rozliczenia międzyokresowe przychodów'
             |? ROZRACH.ZN='NOD' || 'odsetki od należności'
             |? ROZRACH.ZN='ZOD' || 'odsetki od zobowiązań'
             || 'rozrachunki techniczne'
             ?};
   OP.hdr_sel(' - %1 - Typ: %2 (%3) Prefix konta: \'%4\' '@[SSTALE.AR().NAZ,ROZRACH.ZN,_opistyp,KONTO.K1]);
   exec('sal_op','rozrach');
   exec('gentree1','rozrach')
?}


\rozl_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Wyświetlenie rozliczonych rozrachunków dla kontrahentów
::  OLD: \rozl_op/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('nier_op','rozrach','R')


\gentree1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Zapelnianie tabelki tymczasowej (rozrachunki w pulpicie windykatora)
::  OLD: \gentree1/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_ROZ.erase(); TAB_ROZ1.erase(); OP.cntx_psh();
TAB_ROZ.cntx_psh(); TAB_ROZ.index(indtroz1); TAB_ROZ.prefix();
ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? OP.first()
|| {! |?
       TAB_ROZ1.AN:=OP.AN;
       TAB_ROZ1.SYM:=OP.SYM;
       TAB_ROZ1.SYM_ZEW:=OP.SYM_ZEW;
       TAB_ROZ1.PRZED_PO:={? OP.STAN='R' || 'rozliczone'
                          |? OP.TZ>=date() || 'nieprzeterminowane'
                          || 'przeterminiowane'
                          ?};
       TAB_ROZ1.WN:=OP.WN;
       TAB_ROZ1.MA:=OP.MA;
       TAB_ROZ1.DO:=OP.DO;
       TAB_ROZ1.TZ:=OP.TZ;
       TAB_ROZ1.ZWL:={? PAR_SKID.get(47)='N' & (1+OP.TYP='N' & OP.MA>OP.WN | 1+OP.TYP='Z' & OP.WN>OP.MA)
                     || TAB_ROZ1.PRZED_PO:='nieprzeterminowane'; 0
                     || {? OP.TZ<>date(0,0,0)
                        || date()-OP.TZ
                        || 0
                        ?}
                     ?};
       TAB_ROZ1.TYP:=OP.TYP;
       TAB_ROZ1.ODD:=OP.ODD().OD;
       TAB_ROZ1.REF_WAL:=#OP.WAL;
       TAB_ROZ1.add();
       OP.next()
   !}
?};
_sumprzw:=_sumprzm:=_sumkonw:=_sumkonm:=0;
{? TAB_ROZ1.first()
|| {! |?
      _war:=3*' '+'- '+TAB_ROZ1.SYM; _przeter:=TAB_ROZ1.PRZED_PO;
      _pel_war:=TAB_ROZ1.AN+_przeter+TAB_ROZ1.SYM+TAB_ROZ1.SYM_ZEW; _konto:=TAB_ROZ1.AN;
      _wn:=TAB_ROZ1.WN; _ma:=TAB_ROZ1.MA;
      _sumprzw+=_wn; _sumprzm+=_ma; _sumkonw+=_wn; _sumkonm+=_ma;
      exec('addtree1','rozrach',0,_pel_war,3,_war,_wn,_ma,_przeter,_konto,
                               TAB_ROZ1.DO,$TAB_ROZ1.TZ,TAB_ROZ1.ZWL,TAB_ROZ1.TYP,TAB_ROZ1.ODD,
                               TAB_ROZ1.SYM,TAB_ROZ1.REF_WAL);
      TAB_ROZ1.cntx_psh();
      _next:=TAB_ROZ1.next();
      {? ~_next | (_next & (_przeter<>TAB_ROZ1.PRZED_PO | _konto<>TAB_ROZ1.AN))
      || _war:=' + '+_przeter; _pel_war:=_konto+_przeter;
         {? exec('addtree1','rozrach',0,_pel_war,2,_war,_sumprzw,_sumprzm,_przeter,_konto,
                                     date(0,0,0),'',0,'','','',0)
         || TAB_ROZ.cntx_psh(); _ref:=TAB_ROZ.ref();
            TAB_ROZ.index(indtroz2); TAB_ROZ.prefix(3,_pel_war);
            {? TAB_ROZ.first() || {! |? TAB_ROZ.TREE:=_ref; TAB_ROZ.put(); TAB_ROZ.next() !} ?};
            TAB_ROZ.cntx_pop()
         ?};
         _sumprzw:=_sumprzm:=0
      ?};
      {? ~_next | (_next & _konto<>TAB_ROZ1.AN)
      || _war:='+'+_konto; _pel_war:=_konto;
         {? exec('addtree1','rozrach',1,_pel_war,1,_war,_sumkonw,_sumkonm,'',_konto,
                                      date(0,0,0),'',0,'','','',0)
         || TAB_ROZ.cntx_psh(); _ref:=TAB_ROZ.ref();
            TAB_ROZ.index(indtroz2); TAB_ROZ.prefix(2,_pel_war);
            {? TAB_ROZ.first() || {! |? TAB_ROZ.TREE:=_ref; TAB_ROZ.put(); TAB_ROZ.next() !} ?};
            TAB_ROZ.cntx_pop()
         ?};
         _sumkonw:=_sumkonm:=0
      ?};
      TAB_ROZ1.cntx_pop();
      TAB_ROZ1.next()
   !}
?};
TAB_ROZ.cntx_pop(); ODD.cntx_pop(); OP.cntx_pop()


\addtree1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Dodawanie rekordow do tabeli tymczasowej (rozrahunki
::   WE: _a - widoczna pozycja, _b - pelna wartosc, _c - poziom, _d - wartosc,
::       _e - winien, _f - ma,  _g - przeterminowany/nieprzeterminowany
::       _h - konto,  _i - data otwarcia, _j - termin platnosci
::       _k - zwloka, _l - typ, _m - jednostka ksiegowa, _n - symbol rozrachunku,
::       _o - waluta
::  OLD: \addtree1/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_ROZ.blank();
TAB_ROZ.TREE:=0;
TAB_ROZ.WID:=_a;
TAB_ROZ.PELWART:=_b;
TAB_ROZ.POZIOM:=_c;
TAB_ROZ.WART:=_d;
{? TAB_ROZ.POZIOM=3
|| TAB_ROZ.WARTTRE1:=3*' '+'- '+TAB_ROZ1.SYM;
   TAB_ROZ.SYM_ZEW:={? TAB_ROZ1.SYM<>TAB_ROZ1.SYM_ZEW & TAB_ROZ1.SYM_ZEW<>''
                    || 6*' '+'('+TAB_ROZ1.SYM_ZEW+')'
                    || ''
                    ?};
   TAB_ROZ.WARTTREE:=TAB_ROZ1.SYM+
                     {? TAB_ROZ1.SYM<>TAB_ROZ1.SYM_ZEW & TAB_ROZ1.SYM_ZEW<>''
                     || ' ('+TAB_ROZ1.SYM_ZEW+')'
                     || ''
                     ?}
|| TAB_ROZ.WARTTREE:=|(1-(|_d))
?};
TAB_ROZ.WN:=_e;
TAB_ROZ.MA:=_f;
TAB_ROZ.PRZED_PO:=_g;
TAB_ROZ.AN:=_h;
TAB_ROZ.DO:={? _i<>date(0,0,0) || $_i || '' ?};
TAB_ROZ.TZ:=_j;
TAB_ROZ.ZWL:={? TAB_ROZ.POZIOM=3 & _k>0 || form(_k,6) || '' ?};
TAB_ROZ.TYP:=_l;
TAB_ROZ.ODD:=_m;
TAB_ROZ.SYM:=_n;
TAB_ROZ.REF_WAL:=_o;
TAB_ROZ.SWN:=F.SWn(_e,_f);
TAB_ROZ.SMA:=F.SMa(_e,_f);
TAB_ROZ.SYM_ROK:=exec('op_unik_sym','rozrach',TAB_ROZ.SYM,_i);
TAB_ROZ.add()


\sel_rozr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Wyswietlenie szczegolow dla pozycji analizy (rozrachunki)
::  OLD: \sel_rozr/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_ROZ.index(indtroz1);
TAB_ROZ.prefix()


\okn_grup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Tworzenie okienka grupowego (rozrachunki)
::  OLD: \okn_grup/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
_area0:=AreaTitle.area;
_fb:="AreaTitle.setArea('FKS_ROZ'); AreaTitle.setTitle();~~";
_fa:='AreaTitle.setArea(\''+_area0+'\'); AreaTitle.setTitle(); ~~';
_fa:=$_fa;
ODD.f_clear();
_grp_sel:=OP.grp_make('ROZRACHUNKI'@,,'op_gr');
OP.grp_sel(_grp_sel,,'WER22','Wg kont'@,"exec('zap_opod','rozrach')",,,,_fb,_fa,,,'maximized');
{? exec('interm','#system')
|| OP.tab_splt(_grp_sel,,'horizontal','panel1',',55%');
   OP.grp_sel(_grp_sel,ZAP_OP,'ROZL3',,,,,,,,,,'maximized');
   OP.tab_splt(_grp_sel,,'horizontal','panel2',',65%');
   OP.grp_edit(_grp_sel,ZAP_OP,'POSUM',,,,,,'maximized','zap_op_pods')
|| OP.tab_splt(_grp_sel,,'horizontal','panel1',20);
   OP.grp_sel(_grp_sel,ZAP_OP,'ROZL1',,,,,,,,,,'maximized')
?};
OP.grp_sel(_grp_sel,TAB_ROZ,sel_roz,'Wg typów'@,,,,,_fb,_fa,,,'maximized');
OP.win_sel(_grp_sel);
OP.hdr_sel(' - %1 - nierozliczone'@[SSTALE.AR().NAZ]);
_act:=_actp:=''; _act+='E';
{? var_pres('pulpit')>0 || _act+='K'; _actp+='K' ?};
{? var_pres('__Khv')>0 || _act+='U'; _actp+='U' ?};
{? +_act | +_actp || OP.actions('WER22',_act+':'+_actp) ?};
OP.select();
OP.actions('WER22')


\deltree1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Kasowanie tabelki tymczasowej (rozrachunki w pulpicie windykatora)
::  OLD: \deltree1/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TAB_ROZ')>0
|| VAR_DEL.delete('TAB_ROZ','sel_roz','indtroz1','indtroz2');
   VAR_DEL.delete('indtroz3','indtroz4','indtroz5','indtroz6','indtroz7')
?};
VAR_DEL.delete('TAB_ROZ1')


\op_wyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Akcja Wydruk w okienku WER22 tabeli OP
::  OLD: \op_wyd/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rpm_init','dok_fks');
OP.cntx_psh();
popup(1,'Wydruki rozrachunków',
'A. Zapisy księgowe dla wybranego rozrachunku',,
"exec('rep_exec','#b_report','','fks_op_zap',,,,,,,,'W')",
'   ZESTAWIENIA DLA KONTRAHENTA: '+KH.KOD,,"",
'B. Zestawienie rozrachunków',,
"exec('rep_exec','#b_report','','fks_rwsyntan',,,,,,,,'W')",
'C. Należności / zobowiązania',,
"exec('rep_exec','#b_report','','fks_rwzobow',,,,,,,,'W')",
'D. Rozrachunki do rozliczenia (parowania)',,
"exec('rep_exec','#b_report','','fks_par_rozl',,,,,,,,'W')");
OP.cntx_pop()


\op_parow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Akcja Rozlicz w okienku WER22 tabeli OP
::  OLD: \op_parow/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rozlicz','!fks_roz_dcli');
exec('sal_op','rozrach')


\zm_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Zmiana kontrahenta przy przeglądzie rozrachunków
::  OLD: \zm_kh/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('kh_ten','rozrach');
_ref_kh:=KH.ref();
{? KH.select(,1)
|| ROZRACH.KONTR:=KH.ref(); exec('nier_op','rozrach')
|| KH.seek(_ref_kh)
?}


\kh_ten
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Okienko selekcyjne do wybory kontrahenta
::  OLD: \kh_ten/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
_wer:=KH.mk_sel('Wybierz kontrahenta'@,'P',,'kh_wer');
KH.index('KOD');
KH.prefix(2);
KH.win_fld(_wer,,'KOD',,,8);
KH.win_fld(_wer,,'SKR',,,10);
KH.win_fld(_wer,,'NAZ',,,50);
KH.win_act(_wer,0,'Formuła','Wybierz'@@,,,,"sel_exit",1,,,,'W');
KH.win_act(_wer,0,'Szukaj');
KH.win_act(_wer,0,'Kolejność');
KH.win_act(_wer,0,'Wyświetl',,,,,"__KH_MOD:=1; exec('kh_dod_ini','kontrahent'); KH.display(); &__KH_MOD");
KH.win_sel(_wer)


\obl_obr3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Obliczenie obrotow i sald dla pozycji (rozrachunki)
::  OLD: \obl_obr3/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
{? OP.sel_size()=0
|| ROZNE.WN:=OP.WN$2; ROZNE.MA:=OP.MA$2;
   ROZNE.SWN:=F.SWn(ROZNE.WN,ROZNE.MA); ROZNE.SMA:=F.SMa(ROZNE.WN,ROZNE.MA);
   ROZNE.win_edit('OBROTY1');
   ROZNE.hdr_edit();
   ROZNE.hdr_edit('Obroty i salda zaznaczonych pozycji'@);
   ROZNE.display();
   ROZNE.hdr_edit()
|| ROZNE.WN+=OP.WN$2; ROZNE.MA+=OP.MA$2
?}


\odswiez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Odswiezenie analizy rozrachunkow
::  OLD: \odswiez/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_ROZ.erase(); TAB_ROZ1.erase();
exec('gentree1','rozrach');
FUN.info('Zakończono odświeżanie danych.'@)


\nal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS:  String 'NAL'
::  OLD: \nal/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
'NAL'


\str_nod_
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: String 'NOD'
::  OLD: \str_nod_/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
'NOD'


\str_rmk_
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: String  'RMK'
::----------------------------------------------------------------------------------------------------------------------
'RMK'


\inn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MAKO [2010]
:: OPIS: Okno TYP tabeli ROZRACH
::----------------------------------------------------------------------------------------------------------------------
'INN'


\zod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MAKO [2010]
:: OPIS: Okno TYP tabeli ROZRACl
::----------------------------------------------------------------------------------------------------------------------
'ZOD'


\zob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MAKO [2010]
:: OPIS: String 'ZOB'
::----------------------------------------------------------------------------------------------------------------------
'ZOB'


\op_w_ana
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: 'Rekord przed' dla okienka wertowania ROZL2 tabeli ZAP_OP.
::       Zaznacza pozycje rozrachunkow, ktore sa w biezacej analizie.
::  OLD: \op_w_ana/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
WIND_OP.cntx_psh();
KH.cntx_psh(); KH.prefix();
OP.cntx_psh(); OP.prefix(); ZAP_OP.OP().KH();
ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
WIND_OP.index('DRZEWKO'); WIND_OP.prefix(KH.KOD,KH.KOD,OP.AN,ZAP_OP.ODD().OD,OP.SYM,OP.SYM_ROK,OP.TZ);
_zwrot:={? WIND_OP.first() || 'ZAP_OP#02#01' || '' ?};
ODD.cntx_pop(); OP.cntx_pop(); KH.cntx_pop(); WIND_OP.cntx_pop();
_zwrot


\besluprj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przed redakcja pola XINFO.SLU_PROJ
::  OLD: \besluprj/skid_prj.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
OKRO_F.index('ROK');
POZ.cntx_psh();
{? ROK_F.last()
|| {!
   |? OKRO_F.prefix(ROK_F.ref());
      {? OKRO_F.first()
      || {!
         |? POZ.use('pozy'+ROK_F.KOD+form(OKRO_F.NR,-2));
            POZ.prefix();
            {? POZ.first()
            || {!
               |? _ok:=POZ.SLO_PROJ=null;
                  _ok & POZ.next()
               !}
            ?};
            _ok & OKRO_F.next()
         !}
      ?};
      _ok & ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev()
   !}
?};
POZ.cntx_pop();
_ok


\bdopproj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Akcja wyswietl okna WER tabeli OP_PROJ
::  OLD: \bdopproj/skid_prj.fml
::----------------------------------------------------------------------------------------------------------------------
OP_PROJ.OP();
OP.win_edit('RED'); OP.display()


\rbopproj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Rekord przed okna WER tabeli OP_PROJ
::  OLD: \rbopproj/skid_prj.fml
::----------------------------------------------------------------------------------------------------------------------
UNPAR.PODD:=OP_PROJ.OP().ODD; ''


\bvzappro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przed wyswietl okna WER tabeli ZAP_PROJ
::  OLD: \bvzappro/skid_prj.fml
::----------------------------------------------------------------------------------------------------------------------
exec('wyswietl','dok_fks',8+$ZAP_PROJ.POZ+4,#ZAP_PROJ.POZ)


\brzapprj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Rekord przed okna WER tabeli ZAP_PROJ
::  OLD: \brzapprj/skid_prj.fml
::----------------------------------------------------------------------------------------------------------------------
ZAP_PROJ.PAR_POZ<>null


\jakisch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Formula znajduje schemat dla kontrahenta na dzien SER_KOR.DATA
::  OLD: \jakisch/kh_ser.fml
::----------------------------------------------------------------------------------------------------------------------
SER_KOR.SER_SCH:=null;
SER_WOW.index('KH');
SER_WOW.prefix(KH.ref);
exec('szusch','rozrach');
{? SER_KOR.SER_SCH=null
|| SER_WOW.index('GRKH');
   SER_WOW.prefix(KH.GRKH);
   exec('szusch','rozrach');
   {? SER_KOR.SER_SCH=null
   || SER_WOW.index('KH');
      SER_WOW.prefix(null,null);
      exec('szusch','rozrach')
   ?}
?}


\szusch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Formula znajduje schemat w ustalonej dziedzinie SER_WOW
::  OLD: \szusch/kh_ser.fml
::----------------------------------------------------------------------------------------------------------------------
{? SER_WOW.last()
|| {! |? {? SER_KOR.DATA>=SER_WOW.DATA_OD &
          ((SER_WOW.DATA_DO<>date(0,0,0) & SER_KOR.DATA<=SER_WOW.DATA_DO) |
          SER_WOW.DATA_DO=date(0,0,0))
         || SER_KOR.SER_SCH:=SER_WOW.SER_SCH; 0
         || SER_WOW.prev()
         ?}

    !}
?}


\dat_spl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [850]
:: OPIS: Znajduje date splaty dla rozrachunku (bez rat) - Naleznosci i Zobowiazan
::       Formula bazuje na biezaco ustawionym w buforze rekordzie tabeli OP
::   WE: [_a] - liczy rowniez date splaty dla rozrachunkow uregulowanych w terminie, w parametrze
::              podaje sie date 'stanu na dzien' dla ktorych liczony jest rozrachunek
::   WY: Data splaty (data zerowa jesli nie splacono)
::  OLD: \dat_spl/kor_ser3.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=date(0,0,0);
{? ( _ & OP.DO<=OP.TZ) | _=0
|| ZAP_OP.cntx_psh();
   F.RObr(OP.ref, {? _ || _a || OP.TZ ?});
   ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref());
   _sum_w:={? 1+OP.TYP='N' || F.rwn || F.rma ?};
   _sum_m:=0;
   {? _sum_w$2>0 & ZAP_OP.first()
   || {! |?
         _sum_m+={? 1+OP.TYP='N'
                 || {? _ || ZAP_OP.MA || F.SMa(ZAP_OP.WN,ZAP_OP.MA) ?}
                 || {? _ || ZAP_OP.WN || F.SWn(ZAP_OP.WN,ZAP_OP.MA) ?}
                 ?};
         {? _sum_m>=_sum_w || _zwrot:=ZAP_OP.DATA ?};
         _zwrot=date(0,0,0) & ZAP_OP.next()
      !}
   ?};
   ZAP_OP.cntx_pop()
?};
_zwrot


\ust_okn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Ustawianie okienek dla umow
::  OLD: \ust_okn/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
SER_DEF.win_dict('SERUMO'); SER_DEF.win_sel('SERUMO');
SER_DEF.hdr_sel();
exec('okn_umu','rozrach');
exec('ust_um','rozrach');
KH.win_dict('WERHOME2');
PAR_POZ.win_patt({? SER_KOR.TYP='K' || 'SZU_KOM' |? SER_KOR.TYP='S' || 'SZU_UMU' || 'SZU_FAK' ?});
OPTMP.win_patt('SZU_KOM');
PAR_NAG.hdr_sel();
{? var_pres('only_dek')>0 & only_dek
|| PAR_NAG.hdr_sel(', niezadekretowane (%1)'@[SSTALE.WAL().KOD])
|| PAR_NAG.hdr_sel(', wszystkie (%1)'@[SSTALE.WAL().KOD])
?}


\okn_umu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Ustawienie okienek redakcyjnych tabeli PAR_NAG
::  OLD: \okn_umu/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
{? SSTALE.WAL=FINFO.NAROD
|| {? SER_KOR.TYP='K'
   || PAR_NAG.win_edit('KOM_RED')
   |? SER_KOR.TYP='S'
   || PAR_NAG.win_edit('UMU_RED')
   |? SER_KOR.TYP='F'
   || PAR_NAG.win_edit('FAK_RED')
   ?}
|| {? SER_KOR.TYP='K'
   || PAR_NAG.win_edit('KOM_REDW')
   |? SER_KOR.TYP='S'
   || PAR_NAG.win_edit('UMU_REDW')
   |? SER_KOR.TYP='F'
   || PAR_NAG.win_edit('FAK_REDW')
   ?}
?};
{? SER_KOR.TYP='K'
|| PAR_NAG.win_patt('KOM_SZUK')
|? SER_KOR.TYP='S'
|| PAR_NAG.win_patt('UMU_SZUK')
|? SER_KOR.TYP='F'
|| PAR_NAG.win_patt('FAK_SZUK')
?};
{? SER_KOR.TYP='K'
|| PAR_UM.win_dict('WER1'); PAR_NAG.win_sel('KOM_WER')
|? SER_KOR.TYP='F'
|| PAR_UM.win_dict('WER12'); PAR_NAG.win_sel('UMUF_WER')
|| PAR_UM.win_dict('WER12'); PAR_NAG.win_sel('UMU_WER')
?}


\kom_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Uaktywnia okienko wertowania planów umów
::  OLD: \kom_sel/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
SER_KOR.TYP:=_a; ROZRACH.ZN:=''; _a:='';
{? SER_KOR.TYP='K'
|| PAR_UM.win_dict('WER1'); PAR_NAG.win_sel('KOM_WER')
|? SER_KOR.TYP='F'
|| PAR_UM.win_dict('WER12'); PAR_NAG.win_sel('UMUF_WER')
|| PAR_UM.win_dict('WER12'); PAR_NAG.win_sel('UMU_WER')
?};
exec('ust_okn','rozrach');
exec('zakres_umow','rozrach')


\wyczysc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Usuniecie rekordow z roboczej tabeli OPTMP
::   WE: _a - unikalny identyfikator
::  OLD: \wyczysc/parow.fml
::----------------------------------------------------------------------------------------------------------------------
OPTMP.index('SYM'); OPTMP.prefix(_a);
{? OPTMP.first() || {! |? OPTMP.del() !} ?};
1


\czy_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Sprawdza czy zakonczono wprowadzanie rozliczenia
::   WE: _a - user
::   WY: 1/0
::  OLD: \czy_roz/parow.fml
::----------------------------------------------------------------------------------------------------------------------
OPTMP.cntx_psh();
OPTMP.index('ZNACZ'); OPTMP.prefix(_a,'T');
_czy:=OPTMP.first();
OPTMP.cntx_pop();
_czy


\utw_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Utworzenie pozycji rozliczenia
::   WE: _a - unikalny identyfikator
::       _b - kurs (opcja)
::  OLD: \utw_poz/parow.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
{? _=2 || war:=0 ?};
PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix(PAR_NAG.ref());
OPTMP.index('ZNACZ'); OPTMP.prefix(_a,'T');
{? OPTMP.first()
|| {! |?
      PAR_POZ.blank();
      PAR_POZ.PAR_NAG:=PAR_NAG.ref();
      PAR_POZ.OP:=OPTMP.SYM;
      PAR_POZ.SYM_ROK:=OPTMP.SYM_ROK;
      PAR_POZ.STR:=OPTMP.STR;
      {? _=2
      || PAR_POZ.KWOTA:=(OPTMP.ROZL*_b)$2;
         PAR_POZ.REGRES:=(OPTMP.KW2*_b)$2;
         PAR_POZ.SAL:=exec('sal2','rozrach',1+PAR_NAG.STR,PAR_NAG.ODD,PAR_NAG.KONTO,PAR_POZ.OP,PAR_POZ.OP,PAR_POZ.SYM_ROK);
         {? OPTMP.SAL$2-OPTMP.ROZL$2=0
         || PAR_POZ.KWOTA:=PAR_POZ.SAL
         ?};
         war+=PAR_POZ.KWOTA
      || PAR_POZ.KWOTA:={? SER_KOR.TYP<>'K'
                        || OPTMP.ROZL$2
                        || {? -OPTMP.STR='wn' || OPTMP.KOMPMA$2 || OPTMP.KOMPWN$2 ?}
                        ?};
         PAR_POZ.REGRES:=OPTMP.KW2$2;
         PAR_POZ.SAL:=OPTMP.SAL
      ?};
      PAR_POZ.TZ:=OPTMP.DATA;
      PAR_POZ.KONTO:=OPTMP.KONTO;
      PAR_POZ.SYM_ZEW:=OPTMP.SYM_ZEW;
      _ok:=PAR_POZ.add();
      _ok & OPTMP.next()
   !}
?};
_ok


\sal2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.53]
:: OPIS: Oblicza saldo dla pozycji rozliczenia
::   WE: _a - W, M (winien, ma)
::       _b - jednostka ksiegowa
::       _c - konto
::       _d, _e - rozrachunek
::       _f - unikalny symbol rozrachunku
::  OLD: \sal2/parow.fml
::----------------------------------------------------------------------------------------------------------------------
OP.cntx_psh();
OP.index('KON_O'); OP.prefix(FINFO.NAROD,_b,_c,_d,_d,_f);
_w:={? OP.first()
    || {? _a='M' || F.SWn(OP.WN,OP.MA) || F.SMa(OP.WN,OP.MA) ?}
    || 0
    ?};
OP.cntx_pop();
_w


\kom_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Dołączanie planów umów
::  OLD: \kom_dol/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_mp:=_args.mp;
_wy:=_args.out;
exec('init_obj_um','fks');
ROZRACH.SUM1:=ROZRACH.SUM2:=ROZRACH.SUM3:=ROZRACH.SUM4:=ROZRACH.SUM7:=ROZRACH.SUM8:=0;
ROZRACH.SUM5:=ROZRACH.SUM6:=0;
PAR_NAG.blank();
um_user:=tm_form(OPTMP.tm_stamp())+24; _ref_nag:=null;
PAR_NAG.UNIK:=um_user;
PAR_NAG.TYP:=SER_KOR.TYP;
PAR_NAG.ST_REJ:=PAR_NAG.ST_AKC:=PAR_NAG.ST_DEK:='N';
PAR_NAG.DATA:=SSTALE.AO().KON;
PAR_NAG.WAL:=SSTALE.WAL;
PAR_NAG.KH1:=ROZRACH.KONTR;
ROZRACH.SLU:=null;
OP.index('KON_O');
{? OPERATOR.DEPT<>null || PAR_NAG.ODD:=OPERATOR.DEPT ?};
_del:=0; _add:=null;
PAR_NAG.cntx_psh(); PAR_NAG.prefix();
ODD.f_clear();
{! |?
   _petla:=0;
   {? PAR_NAG.edit("exec('chk_kom','rozrach')")
   || _del:=0;
      {? SER_KOR.TYP='K' || PAR_NAG.KH1:=PAR_NAG.PAR_UM().KH ?};
      exec('kon2paru','rozrach');
      {? _add | PAR_NAG.add()
      || {? _add=null || _add:=PAR_NAG.ref() ?};
         {? exec('zablok_um','rozrach')
         || _ref_nag:=PAR_NAG.ref;
            exec('wyczysc','rozrach',um_user);
            OP.cntx_psh();
            _ok:={? SER_KOR.TYP='K'
                 || exec('utw_optm','rozrach',um_user);
                    ROZRACH.SUM3:=ROZRACH.SUM4:=ROZRACH.SUM7:=ROZRACH.SUM8:=0;
                    ROZRACH.SUM5:=ROZRACH.SUM1
                 || exec('utw_optu','rozrach',um_user)
                 ?}; ROZRACH.SUM6:=ROZRACH.SUM2;
            {? _ok & OPTMP.first()
            || {? SER_KOR.TYP='K'
               || OPTMP.win_sel('KOM')
               |? SER_KOR.TYP='S'
               || OPTMP.win_sel('UMU')
               || OPTMP.win_sel('FAK')
               ?};
               _sel:=0;
               OPTMP.win_edit();
               OPTMP.actions_grayed(OPTMP.win_sel('?'),'AO');
               {! |?
                  um_p:=0;
                  OPTMP.select();
                  {? ~exec('czy_roz','rozrach',um_user)
                  || _del:=1
                  |? ~um_p
                  || _del:=1
                  || PAR_NAG.EMAIL:={? +PAR_NAG.KH1().EM & exec('mail_ok','#email',PAR_NAG.KH1().EM) || 'N' || 'B' ?};
                     PAR_NAG.put();
                     PAR_POZ.cntx_psh();
                     exec('utw_poz','rozrach',um_user);
                     PAR_POZ.cntx_pop();
                     _wy.PAR_NAG:=PAR_NAG.ref();
                     _mp.save(,_wy);
                     {? um_p=1 || params_exec('kom_zak_plan','rozrach',1) ?};
                     _sel:=2
                  ?};
                  _sel=1
               !}
            || _petla:=1; FUN.info('Brak rozrachunków do planu umowy.'@); _del:=1
            ?};
            OP.cntx_pop();
            exec('wyczysc','rozrach',um_user);
            {? PAR_NAG.seek(_ref_nag) || exec('odblok_um','rozrach') ?}
         ?}
      ?}
   ?};
   _petla
!};
{? _del & _add & PAR_NAG.seek(_add) || PAR_NAG.del(); _mp.cancel() ?};
PAR_NAG.cntx_pop(); PAR_NAG.seek(_ref_nag);

VAR_DEL.delete('um_user','um_p')


\kom_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Poprawianie planu umowy
::   WE: _a - 0 - nagłówek
::            1 - pozycje
::  OLD: \kom_pop/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_mp:=_args.mp;
_wy:=_args.out;
{? PAR_NAG.ST_REJ='T'
|| FUN.info('Plan umowy jest już zakończony.'@)
|| {? exec('zablok_um','rozrach')
   || _ref:=PAR_NAG.ref;
      {? _a=1
      || ROZNE.SZUK:=1;  um_user:=tm_form(OPTMP.tm_stamp())+24;
         exec('wyczysc','rozrach',um_user);
         OP.cntx_psh();
         _ok:={? SER_KOR.TYP='K'
              || exec('utw_optm2','rozrach',um_user)
              || exec('utw_optu2','rozrach',um_user)
              ?};
         {? _ok & OPTMP.first()
         || {? SER_KOR.TYP='K' || ROZRACH.SUM5:=ROZRACH.SUM1$2-ROZRACH.SUM3 ?};
            ROZRACH.SUM6:=ROZRACH.SUM2$2-ROZRACH.SUM4;
            {? SER_KOR.TYP='K'
            || OPTMP.win_sel('KOM')
            |? SER_KOR.TYP='S'
            || OPTMP.win_sel('UMU')
            || OPTMP.win_sel('FAK')
            ?}; _sel:=0;
            OPTMP.win_edit();
            OPTMP.actions_grayed(OPTMP.win_sel('?'),'AO');
            {! |?
               um_p:=0;
               OPTMP.select();
               {? ~exec('czy_roz','rozrach',um_user)
               || _sel:=FUN.ask('Brak pozycji planu umowy. Nagłówek planu zostanie usunięty.'
                                '\nKontynuować edycję planu?'@);
                  {? _sel=0
                  ||  PAR_POZ.index('PAR_POZ');
                      PAR_POZ.prefix(PAR_NAG.ref());
                      {? PAR_POZ.first() || {! |? PAR_POZ.del() !} ?};
                      PAR_NAG.del()
                  ?}
               |? ~um_p
               || FUN.info('Zostaną przywrócone poprzednie pozycje planu.'@)
               || _sel:=0;
                  {? um_p
                  || PAR_POZ.cntx_psh(); PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix(PAR_NAG.ref());
                     do();
                     {? PAR_POZ.first() || {! |? PAR_POZ.del() !} ?};
                     exec('utw_poz','rozrach',um_user);
                     end();
                     PAR_POZ.cntx_pop();
                     {? um_p=1 || params_exec('kom_zak_plan','rozrach',1) ?}
                  ?}

               ?};
               _sel=1
            !};
             exec('wyczysc','rozrach',um_user)
         ?};  OP.cntx_pop()
      || {? SER_KOR.TYP='K'
         || PAR_NAG.win_edit('KOM_POP')
         |? SER_KOR.TYP='F'
         || PAR_NAG.win_edit('KOM_POPF')
         || PAR_NAG.win_edit('KOM_POPU')
         ?};
         _w:=PAR_NAG.PROC; _r:=PAR_NAG.REGRES;
         ODD.f_clear();
         {? PAR_NAG.edit("exec('chk_kom','rozrach')")
         || {? _w$2<>PAR_NAG.PROC$2 | _r$2<>PAR_NAG.REGRES$2
            || um_p:=FUN.ask('Zmieniono procentowy sposób ustalania wartości pozycji.'
                           '\nPrzeliczyć pozycje planu?'@)
            || um_p:=0
            ?};
            do();
            PAR_NAG.put();
            {? um_p || exec('pop_poz','rozrach') ?};
            {? ~end() || FUN.info('Operacja poprawienia nie powidła się.'@) ?}
         ?};
         exec('okn_umu','rozrach')
      ?};
      {? PAR_NAG.seek(_ref) || exec('odblok_um','rozrach') ?}
   ?}
?};
VAR_DEL.delete('um_user','um_p')


\zablok_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.53]
:: OPIS: Blokowanie nagłówka planu
::  OLD: \zablok/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=PAR_NAG.r_lock(1,1);
{? ~_ok & PAR_NAG.sel_size()=0 || FUN.info('Umowę obsługuje inny operator.\nZabroniony dostęp'@) ?};
_ok


\odblok_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.53]
:: OPIS: Odblokowanie nagłówka planu
::  OLD: \odblok/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_NAG.r_unlock()


\chk_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Sprawdza wypełnienie pól przy wypełnianiu nagłówka planu umowy
::  OLD: \chk_kom/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
{? SSTALE.WAL<>FINFO.NAROD
|| _p:=__CHK.record(PAR_NAG,,'ODD','KURS','SYM','DATA','KH')
|| _p:=__CHK.record(PAR_NAG,,'ODD','SYM','DATA','KH')
?};
{? _p='' & PAR_NAG.PAR_UM=null
|| FUN.info('Nie wybrano umowy.'@); _p:='PAR_UM'
?};
{? _p=''
|| _d1:=PAR_NAG.PAR_UM().DATA_OD;
   _d2:=PAR_NAG.PAR_UM().DATA_DO;
   {? _d1<=PAR_NAG.DATA & _d2>=PAR_NAG.DATA
   || 1
   || FUN.info('Data spoza zakresu obowiązywania umowy.'@); _p:='DATA'
   ?}
?};
{? _p='' & SER_KOR.TYP<>'K'
|| {? PAR_NAG.PROC$2<=0 || FUN.info('%% wartości musi być dodatni.'@); _p:='PROC'?};
   {? _p='' & PAR_NAG.REGRES$2<0 || FUN.info('%% regresu nie może być mniejszy od zera.'@); _p:='REGRES'?};
   {? _p='' & PAR_NAG.KOSZTY$2<0 || FUN.info('Koszty dodatkowe nie mogą być mniejsze od zera.'@); _p:='KOSZTY'?}
?};
_p


\utw_optm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Wypelnienie tabeli OPTMP - rozrachunkow do kompensaty przy dolaczaniu definicji kompensaty
::   WE: _a - user - unikalny identyfikator
::  OLD: \utw_optm/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.SUM1:=ROZRACH.SUM2:=0;
OP.index('KH'); OP.prefix(PAR_NAG.WAL,PAR_NAG.KH1,'N',PAR_NAG.ODD);
{? OP.first()
|| _w:=_m:=_ok:=0;
   {! |?
      {? OP.MA$2>OP.WN$2 || _m:=1 |? OP.MA$2<OP.WN$2 || _w:=1 ?};
      {? _w=1 & _m=1 || _ok:=1 ?};
      ~_ok & OP.next()
   !};
   {? _ok & OP.first()
   || {! |?
         _ok:=1;
         {? OP.WAL=FINFO.NAROD
         || OP.cntx_psh(); OP.index('KON_OBW'); OP.prefix(OP.ODD,OP.AN,OP.SYM,OP.SYM,OP.SYM_ROK);
            {? OP.size()>1 || _ok:=0 ?};
            OP.cntx_pop()
         ?};
         {? _ok & OP.MA$2<>OP.WN$2
         || OPTMP.blank();
            OPTMP.USER:=_a;
            OPTMP.SYM:=OP.SYM;
            OPTMP.SYM_ZEW:=OP.SYM_ZEW;
            OPTMP.SYM_ROK:=OP.SYM_ROK;
            OPTMP.DATAO:=OP.DO;
            OPTMP.TYP:=OP.TYP;
            OPTMP.DATA:=OP.TZ;
            OPTMP.KONTO:=OP.AN;
            {? OP.WN$2>OP.MA$2
            || OPTMP.SAL:=F.SWn(OP.WN,OP.MA);
               ROZRACH.SUM1+=OPTMP.SAL$2;
               OPTMP.STR:='Wn'
            || OPTMP.SAL:=F.SMa(OP.WN,OP.MA);
               ROZRACH.SUM2+=OPTMP.SAL$2;
               OPTMP.STR:='Ma'
            ?};
            OPTMP.add()
         ?};
         OP.next()
      !}
   ?}
?};
OPTMP.first()


\utw_optu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Wypelnienie tabeli OPTMP - rozrachunkow do umowy sprzedazy przy dolaczaniu definicji umowy
::   WE: _a - user - unikalny identyfikator
::  OLD: \utw_optu/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.SUM1:=ROZRACH.SUM2:=0;
OP.index('KH'); OP.prefix(PAR_NAG.WAL,PAR_NAG.KH1,'N',PAR_NAG.ODD);
{? OP.first()
|| {? OP.first()
   || {! |?
         _ok:=1;
         {? OP.WAL=FINFO.NAROD
         || OP.cntx_psh(); OP.index('KON_OBW'); OP.prefix(OP.ODD,OP.AN,OP.SYM,OP.SYM,OP.SYM_ROK);
            {? OP.size()>1 || _ok:=0 ?};
            OP.cntx_pop()
         ?};
         {? _ok & OP.WN$2>OP.MA$2
         || OPTMP.blank();
            OPTMP.USER:=_a;
            OPTMP.SYM:=OP.SYM;
            OPTMP.SYM_ZEW:=OP.SYM_ZEW;
            OPTMP.TYP:=OP.TYP;
            OPTMP.DATA:=OP.TZ;
            OPTMP.SYM_ROK:=OP.SYM_ROK;
            OPTMP.DATAO:=OP.DO;
            OPTMP.KONTO:=OP.AN;
            OPTMP.SAL:=F.SWn(OP.WN,OP.MA);
            ROZRACH.SUM1+=OPTMP.SAL$2;
            OPTMP.ROZL:=0;
            OPTMP.KW2:=0;
            {? OPTMP.ROZL$2<>0 || OPTMP.ZNACZ:='T' ?};
            OPTMP.STR:='Wn';
            OPTMP.add()
         ?};
         OP.next()
      !}
   ?}
?};
ROZRACH.SUM4:={? ROZRACH.SUM3$2<>0 || ROZRACH.SUM1-ROZRACH.SUM3 || 0 ?};
OPTMP.first()


\kom_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Przeglądanie pozycji planu umowy
::   WE: _a - zadeklarowane - bez edycji (tylko podgląd z selectem)
::  OLD: \kom_poz/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_POZ.index('PAR_POZ');
ROZRACH.SUM1:=ROZRACH.SUM2:=ROZRACH.SUM3:=ROZRACH.SUM4:=ROZRACH.SUM6:=0;
{? PAR_NAG.get()
|| PAR_POZ.prefix(PAR_NAG.ref());
   {? SER_KOR.TYP='K'
   || PAR_POZ.win_patt('SZU_KOM')
   |? SER_KOR.TYP='S'
   || PAR_POZ.win_patt('SZU_UMU')
   || PAR_POZ.win_patt('SZU_FAK')
   ?};
   {? PAR_POZ.first()
   || {! |?
      {? 1+PAR_POZ.STR='W'
      || ROZRACH.SUM1+=PAR_POZ.SAL$2;
         {? SER_KOR.TYP='K' || ROZRACH.SUM4+=PAR_POZ.KWOTA$2 || ROZRACH.SUM3+=PAR_POZ.KWOTA$2 ?}
      || ROZRACH.SUM2+=PAR_POZ.SAL$2;
         {? SER_KOR.TYP='K' || ROZRACH.SUM3+=PAR_POZ.KWOTA$2 || ROZRACH.SUM4+=PAR_POZ.KWOTA$2 ?}
      ?};
      ROZRACH.SUM6+=PAR_POZ.REGRES;
      PAR_POZ.next()
   !};
   PAR_POZ.first();
   {? SER_KOR.TYP='K'
   || ROZRACH.SUM5:=ROZRACH.SUM1$2-ROZRACH.SUM4$2;
      ROZRACH.SUM6:=ROZRACH.SUM2$2-ROZRACH.SUM3$2
   || ROZRACH.SUM5:=ROZRACH.SUM1$2-ROZRACH.SUM3$2
   ?}
   ?}
|| PAR_POZ.prefix(null)
?};
{? _
|| {? SER_KOR.TYP='K'
   || PAR_POZ.win_sel('KOM_WER')
   |? SER_KOR.TYP='S'
   || PAR_POZ.win_sel('UMU_WER')
   || PAR_POZ.win_sel('FAK_WER')
   ?};
   PAR_POZ.select()
|| {? SER_KOR.TYP='K'
   || grp_disp(PAR_POZ,'KOM_WER')
   |? SER_KOR.TYP='S'
   || grp_disp(PAR_POZ,'UMU_WER')
   || grp_disp(PAR_POZ,'FAK_WER')
   ?}
?};
1


\utw_optm2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Wypelnienie tabeli OPTMP - rozrachunkow do umowy przy poprawianiu definicji kompensaty
::   WE: _a - user - unikalny identyfikator
::  OLD: \utw_optm2/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.SUM1:=ROZRACH.SUM2:=ROZRACH.SUM3:=0;
ROZRACH.SUM4:=ROZRACH.SUM7:=ROZRACH.SUM8:=0;
kom_wn:=kom_ma:=0;
PAR_POZ.cntx_psh(); PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix(PAR_NAG.ref());
OP.index('KH4');
{? PAR_POZ.first()
|| {! |?
      OP.prefix(PAR_NAG.WAL,PAR_NAG.KH1,'N',PAR_NAG.ODD,PAR_POZ.KONTO,PAR_POZ.TZ,PAR_POZ.OP,PAR_POZ.SYM_ROK);
      {? OP.first() || _t:=OP.TYP; _do:=OP.DO || _t:='.'; _do:=date(0,0,0) ?};
      {? -PAR_POZ.STR='wn'
      || kom_wn:=0; kom_ma:=PAR_POZ.KWOTA
      || kom_ma:=0; kom_wn:=PAR_POZ.KWOTA
      ?};
      exec('wyp_opt','rozrach',_a,PAR_POZ.KONTO,PAR_POZ.OP,PAR_POZ.TZ,_t,PAR_POZ.SAL,PAR_POZ.KWOTA,'T',PAR_POZ.STR,0,PAR_POZ.SYM_ROK,_do,PAR_POZ.SYM_ZEW);
      {? 1+PAR_POZ.STR='W'
      || ROZRACH.SUM1+=PAR_POZ.SAL$2; ROZRACH.SUM3+=PAR_POZ.KWOTA$2
      || ROZRACH.SUM2+=PAR_POZ.SAL$2; ROZRACH.SUM4+=PAR_POZ.KWOTA$2
      ?};
      PAR_POZ.next()
   !}
?};
ROZRACH.SUM8:=F.SWn(ROZRACH.SUM4,ROZRACH.SUM3);
ROZRACH.SUM7:=F.SMa(ROZRACH.SUM4,ROZRACH.SUM3);
PAR_POZ.cntx_pop();
kom_wn:=0; kom_ma:=0;
OPTMP.cntx_psh(); OPTMP.index('SYM_UNIK'); OPTMP.prefix(_a);
OP.index('KH'); OP.prefix(PAR_NAG.WAL,PAR_NAG.KH1,'N',PAR_NAG.ODD);
{? OP.first()
|| {! |?
      {? OP.WN$2<>OP.MA$2
      || {? ~OPTMP.find_key(OP.TZ,OP.SYM,OP.SYM_ROK,OP.AN,OP.AN)
         || _w:={? OP.WN$2>OP.MA$2
                || _s:='Wn'; F.SWn(OP.WN,OP.MA)
                || _s:='Ma'; F.SMa(OP.WN,OP.MA)
                ?};
            exec('wyp_opt','rozrach',_a,OP.AN,OP.SYM,OP.TZ,OP.TYP,_w,0,'',_s,0,OP.SYM_ROK,OP.DO,OP.SYM_ZEW);
            {? OP.WN$2>OP.MA$2
            || ROZRACH.SUM1+=OPTMP.SAL$2
            || ROZRACH.SUM2+=OPTMP.SAL$2
            ?}
         ?}
      ?};
      OP.next()
   !}
?};
OPTMP.cntx_pop();
&kom_wn; &kom_ma;
ROZRACH.SUM1$2<>0 | ROZRACH.SUM2$2<>0


\utw_optu2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Wypelnienie tabeli OPTMP - rozrachunkow do umowy
::   WE: _a - user - unikalny identyfikator
::  OLD: \utw_optu2/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.SUM1:=ROZRACH.SUM2:=ROZRACH.SUM3:=ROZRACH.SUM4:=ROZRACH.SUM5:=0;
OP.index('KH4');
PAR_POZ.cntx_psh(); PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix(PAR_NAG.ref());
{? PAR_POZ.first()
|| {! |?
      OP.prefix(PAR_NAG.WAL,PAR_NAG.KH1,'N',PAR_NAG.ODD,PAR_POZ.KONTO,PAR_POZ.TZ,PAR_POZ.OP,PAR_POZ.SYM_ROK);
      {? OP.first() || _t:=OP.TYP; _do:=OP.DO || _t:='.'; _do:=date(0,0,0) ?};
      exec('wyp_opt','rozrach',_a,PAR_POZ.KONTO,PAR_POZ.OP,PAR_POZ.TZ,_t,PAR_POZ.SAL,PAR_POZ.KWOTA,'T',PAR_POZ.STR,
                             PAR_POZ.REGRES,PAR_POZ.SYM_ROK,_do,PAR_POZ.SYM_ZEW);
      ROZRACH.SUM1+=PAR_POZ.SAL$2;
      ROZRACH.SUM3+=PAR_POZ.KWOTA$2;
      ROZRACH.SUM5+=PAR_POZ.REGRES$2;
      PAR_POZ.next()
   !}
?};
ROZRACH.SUM4:={? ROZRACH.SUM3$2<>0 || ROZRACH.SUM1-ROZRACH.SUM3 || 0 ?};
PAR_POZ.cntx_pop();
OPTMP.cntx_psh(); OPTMP.index('SYM_UNIK'); OPTMP.prefix(_a);
OP.index('KH'); OP.prefix(PAR_NAG.WAL,PAR_NAG.KH1,'N',PAR_NAG.ODD);
{? OP.first()
|| {! |?
      {? OP.WN$2>OP.MA$2
      || {? ~OPTMP.find_key(OP.TZ,OP.SYM,OP.SYM_ROK)
         || _w:=F.SWn(OP.WN,OP.MA);
            exec('wyp_opt','rozrach',_a,OP.AN,OP.SYM,OP.TZ,OP.TYP,_w,0,'','Wn',0,OP.SYM_ROK,OP.DO,OP.SYM_ZEW);
            ROZRACH.SUM1+=OPTMP.SAL$2
         ?}
      ?};
      OP.next()
   !}
?};
OPTMP.cntx_pop();
ROZRACH.SUM1$2<>0


\wyp_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.53]
:: OPIS: Dolozenie rekordu do tabeli OPTMP
::   WE:  _a - user
::        _b - konto
::        _c - symbol rozrachunku
::        _d - termin platnosci
::        _e - typ rozrachunku
::        _f - saldo
::        _g - kwota rozliczenia
::        _h - znacznik
::        _i - strona
::        _j - wart. regresu
::        _k - unikalny symbol rozrachunku
::        _l - data otwarcia
::        _m - symbol zewnetrzny
::  OLD: \wyp_opt/parow.fml
::----------------------------------------------------------------------------------------------------------------------
OPTMP.blank();
OPTMP.USER:=_a;
OPTMP.KONTO:=_b;
OPTMP.SYM:=_c;
OPTMP.DATA:=_d;
OPTMP.TYP:=_e;
OPTMP.SAL:=_f;
{? var_pres('kom_wn')<=0 | var_pres('kom_ma')<=0
|| OPTMP.ROZL:=_g
|| OPTMP.ROZL:=0; OPTMP.KOMPWN:=kom_wn; OPTMP.KOMPMA:=kom_ma
?};
OPTMP.ZNACZ:=_h;
OPTMP.STR:=_i;
OPTMP.KW2:=_j;
OPTMP.SYM_ROK:=_k;
OPTMP.DATAO:=_l;
{? var_pres('_m')>0 || OPTMP.SYM_ZEW:=_m ?};
OPTMP.add()


\pop_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Przeliczenie pozycji planu według zmienionych pol: PAR_NAG.PROC PAR_NAG.REGRES
::  OLD: \pop_poz/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix(PAR_NAG.ref());
{? PAR_POZ.first()
|| {! |?
      PAR_POZ.KWOTA:=(PAR_POZ.SAL*PAR_NAG.PROC/100)$2;
      PAR_POZ.REGRES:=(PAR_POZ.SAL*PAR_NAG.REGRES/100)$2;
      PAR_POZ.put();
      PAR_POZ.next()
   !}
?}


\kom_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Usuwanie planów umów
::  OLD: \kom_usu/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0; _selsize:=PAR_NAG.sel_size();
{? exec('zablok_um','rozrach')
|| {? PAR_NAG.DATADOK<>date(0,0,0)
   || {? _selsize=0 || FUN.info('Plan umowy jest zadekretowany.\nNie może być usunięty.'@) ?}
   |? PAR_NAG.DATA_AKC<>date(0,0,0)
   || {? _selsize=0 || FUN.info('Plan umowy jest zaakceptowany.\nNie może być usunięty.'@) ?}
   || {? _selsize>0 | FUN.ask('Czy usunąć plan umowy?'@)
      || PAR_POZ.cntx_psh(); PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix(PAR_NAG.ref());
         do();
         {? PAR_POZ.first() || {!|? PAR_POZ.del() !} ?};
         _ok:=1; exec('odblok_um','rozrach');
         PAR_NAG.cntx_psh();
         PAR_NAG.index('UNIK');
         PAR_NAG.prefix(PAR_NAG.WAL,PAR_NAG.TYP,PAR_NAG.UNIK);
         {? PAR_NAG.first() || {? var_pres('licz_gr')>0 || licz_gr+=1 ?}; PAR_NAG.del() ?};
         PAR_NAG.cntx_pop();
         end();
         PAR_POZ.cntx_pop()
       ?}
   ?};
   {? ~_ok || exec('odblok_um','rozrach') ?}
?};
1


\komdelbe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula początkowa dla usuwania grupy umów
::  OLD: \komdelbe/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
licz_gr:=0; licz_zaz:=PAR_NAG.sel_size();
_zwrot:=FUN.ask('Czy usunąć zaznaczone plany umów?'@);
{? ~_zwrot || VAR_DEL.delete('licz_gr','licz_zaz') ?};
_zwrot


\komdelae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula końcowa dla usuwania grupy umów
::  OLD: \komdelae/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Liczba zaznaczonych umów: %1'
         '\nLiczba usuniętych umów: %2'@[$licz_zaz,$licz_gr]);
VAR_DEL.delete('licz_gr','licz_zaz'); 1


\okn_prz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Formula na 'Okienko przed' dla PAR_NAG
::   WE: _a - typ
::  OLD: \okn_prz/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('grup_um')>0
|| SER_KOR.TYP:=_a;
   {? SER_KOR.TYP='K'
   || PAR_UM.win_dict('WER1')
   || PAR_UM.win_dict('WER12')
   ?};
   exec('ust_okn','rozrach');
   ROZRACH.KONTR:={? cur_tab(1,1)=WIND_KH || WIND_KH.KH || null ?};
   exec('kom_zak','rozrach')
?};
1


\fks_ruc_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zmiana parametrów pracy
::----------------------------------------------------------------------------------------------------------------------
_rok:=SSTALE.AR;
_okr:=SSTALE.AO;
_odd:=OPERATOR.DEPT;
_wal:=SSTALE.WAL;
{? __PARSES.editDom('FKS')
|| {? _rok<>SSTALE.AR | _odd<>OPERATOR.DEPT | _okr<>SSTALE.AO | _wal<>SSTALE.WAL
   || exec('zakres_umow','rozrach')
   ?};
   AreaTitle.setTitle()
?}


\zakres_umow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zakres umów
::----------------------------------------------------------------------------------------------------------------------
{? (SER_KOR.TYP='K' & zakr_umk='W') | (SER_KOR.TYP='F' & zakr_umf='W') | (SER_KOR.TYP='S' & zakr_ums='W')
|| exec('kom_zak','rozrach')
|? (SER_KOR.TYP='K' & zakr_umk='K') | (SER_KOR.TYP='F' & zakr_umf='K') | (SER_KOR.TYP='S' & zakr_ums='K')
|| exec('kom_zakk','rozrach',{? SER_KOR.TYP='K' || kh_k |? SER_KOR.TYP='F' || kh_f || kh_s ?})
|| exec('kom_zaku','rozrach',{? SER_KOR.TYP='K' || umo_k |? SER_KOR.TYP='F' || umo_f || umo_s ?})
?}


\kom_zak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Zmiana zakresu wyświetlanych planów umów
::  OLD: \kom_zak/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
{? SER_KOR.TYP='K' || zakr_umk:='W' |? SER_KOR.TYP='F' || zakr_umf:='W' || zakr_ums:='W' ?};
_kh:={? ROZRACH.KONTR<>null || ROZRACH.KONTR().KOD || '' ?};
{? -SSTALE.AR().ZAM='t'
|| PAR_NAG.actions('KOM_WER','DPUZWANTC:D',,1);
   PAR_NAG.actions('UMUF_WER','DPUZWANTC:D',,1);
   PAR_NAG.actions('UMU_WER','DPUZWANTC:D',,1)
|? var_pres('only_dek')>0 & only_dek
|| PAR_NAG.actions('KOM_WER','RMDPUZWANCK:MDK','T',1);
   PAR_NAG.actions('UMUF_WER','RMDPUZWANCK:MDK','T',1);
   PAR_NAG.actions('UMU_WER','RMDPUZWANCK:MDK','T',1)
?};
{? _kh<>''
|| {? var_pres('only_dek')>0 & only_dek
   || {? OPERATOR.DEPT<>null
      || PAR_NAG.index('KONTO_O1'); PAR_NAG.prefix('T','N',SSTALE.WAL,SER_KOR.TYP,OPERATOR.DEPT,'',_kh)
      || PAR_NAG.index('KONTO1'); PAR_NAG.prefix('T','N',SSTALE.WAL,SER_KOR.TYP,'',_kh)
      ?}
   || {? OPERATOR.DEPT<>null
      || PAR_NAG.index('KONTO_O'); PAR_NAG.prefix(SSTALE.WAL,SER_KOR.TYP,OPERATOR.DEPT,'',_kh)
      || PAR_NAG.index('KONTO'); PAR_NAG.prefix(SSTALE.WAL,SER_KOR.TYP,'',_kh)
      ?}
   ?}
|| {? var_pres('only_dek')>0 & only_dek
   || {? OPERATOR.DEPT<>null
      || PAR_NAG.index('KONTOO1X'); PAR_NAG.prefix('T','N',SSTALE.WAL,SER_KOR.TYP,OPERATOR.DEPT)
      || PAR_NAG.index('KONTO1X'); PAR_NAG.prefix('T','N',SSTALE.WAL,SER_KOR.TYP)
      ?}
   || {? OPERATOR.DEPT<>null
      || PAR_NAG.index('KONTOOX'); PAR_NAG.prefix(SSTALE.WAL,SER_KOR.TYP,OPERATOR.DEPT)
      || PAR_NAG.index('KONTOX'); PAR_NAG.prefix(SSTALE.WAL,SER_KOR.TYP)
      ?}
   ?}
?};
PAR_NAG.hdr_sel();
{? var_pres('only_dek')>0 & only_dek
|| PAR_NAG.hdr_sel(', niezadekretowane (%1)'@[SSTALE.WAL().KOD])
|| PAR_NAG.hdr_sel(' (%1)'@[SSTALE.WAL().KOD])
?}


\kom_zakk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Zmiana zakresu wświetlanych umów dla wybranego kontrahenta
::  OLD: \kom_zakk/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZRACH.KONTR=null
|| exec('kh_ten','rozrach');
   {? (_ & KH.seek(_a)) | (~_ & KH.select())
   || {? SER_KOR.TYP='K'
      || zakr_umk:='K'; kh_k:=KH.ref()
      |? SER_KOR.TYP='F'
      || zakr_umf:='K'; kh_f:=KH.ref()
      || zakr_ums:='K'; kh_s:=KH.ref()
      ?};
      {? OPERATOR.DEPT<>null
      || PAR_NAG.index('KONTO_O'); PAR_NAG.prefix(SSTALE.WAL,SER_KOR.TYP,OPERATOR.DEPT,'',KH.KOD)
      || PAR_NAG.index('KONTO'); PAR_NAG.prefix(SSTALE.WAL,SER_KOR.TYP,'',KH.KOD)
      ?};
      PAR_NAG.hdr_sel();
      _dod:={? SER_KOR.TYP='F' || ' faktoringu' |? SER_KOR.TYP='S' || ' sprzedaży' || '' ?};
      PAR_NAG.hdr_sel(_dod+', kontrahent: '+KH.KOD)
   ?}
|| FUN.info('Opcja nieaktywna.'@)
?}


\kom_zaku
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Zmiana zakresu wyświetlanych planów do wybranej umowy
::  OLD: \kom_zaku/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZRACH.KONTR=null
|| _wer:=PAR_UM.mk_sel('Wybierz umowę'@,,,'par_um_wer');
   PAR_UM.index('SYM');
   PAR_UM.prefix(REF.FIRMA,SER_KOR.TYP);
   PAR_UM.win_fld(_wer,,'SYM',,,20);
   PAR_UM.win_fld(_wer,,'DATA_OD',,,10);
   PAR_UM.win_fld(_wer,,'DATA_DO',,,10);
   PAR_UM.win_fld(_wer,,'OPIS',,,10);
   PAR_UM.win_act(_wer,0,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
   PAR_UM.win_act(_wer,0,'Wyświetl',,,,,"exec('pwys_um','rozrach')");
   PAR_UM.win_act(_wer,0,'Szukaj',,,,"exec('pszuk_um','rozrach')");
   PAR_UM.win_sel(_wer);
   {? (_ & PAR_UM.seek(_a)) | (~_ & PAR_UM.select())
   || {? SER_KOR.TYP='K'
      || zakr_umk:='U'; umo_k:=PAR_UM.ref()
      |? SER_KOR.TYP='F'
      || zakr_umf:='U'; umo_f:=PAR_UM.ref()
      || zakr_ums:='U'; umo_s:=PAR_UM.ref()
      ?};
      {? OPERATOR.DEPT<>null
      || PAR_NAG.index('UMOWA'); PAR_NAG.prefix(SSTALE.WAL,SER_KOR.TYP,PAR_UM.SYM,OPERATOR.DEPT)
      || PAR_NAG.index('UMOWA'); PAR_NAG.prefix(SSTALE.WAL,SER_KOR.TYP,PAR_UM.SYM)
      ?};

     PAR_NAG.hdr_sel();  _dod:={? SER_KOR.TYP='F' || ' faktoringu'@ |? SER_KOR.TYP='S' || ' sprzedaży'@ || '' ?};
     PAR_NAG.hdr_sel('%1, umowa: %2'@[_dod,PAR_UM.SYM])
   ?}
|| FUN.info('Opcja nieaktywna.'@)
?}


\kom_dr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.53]
:: OPIS: Wydruk planów umów
::  OLD: \kom_dr/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_NAG.cntx_psh();
popup(1,'Wydruki planów umów',
'A. Wydruk bieżącego planu umowy',,
"{? SER_KOR.TYP='K' || exec('rep_exec','#b_report','','fks_km_plan',,,,,,,,'W') || exec('rep_exec','#b_report','','fks_km_umowa',,,,,,,,'W') ?}",
'B. Zestawienie zbiorcze planów umów',,
"{? SER_KOR.TYP='K' || exec('rep_exec','#b_report','','fks_km_hist',,,,,,,,'W') || exec('rep_exec','#b_report','','fks_km_hist2',,,,,,,,'W') ?}");
PAR_NAG.cntx_pop()


\sprwzwyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Sprawdza, czy jest zdefiniowany wzorzec wydruku
::   WE: _a - początkowe znaki pliku *.rpi bez kodu języka
::       _b - kod języka
::       _c - pokazywac komunikat (1/0)
::  OLD: \sprwzwyd/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1; wz_wyd:='';
_wz_wyd:=_a+(-_b);
{? _zwrot
|| _plik:=__FileLayer.real_name(_wz_wyd,'rpi');
   _jest_pl:=fopen(_plik,'r',1);
   {? _jest_pl
   || fclose(_jest_pl); wz_wyd:=_wz_wyd
   || _zwrot:=0;
     {? _c || FUN.info('Brak pliku %1.'@[_plik]) ?}
   ?}
?};
_zwrot


\symbol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Zwraca napis dla jezyka oznaczajacy nasz kod w danych kontrahenta
::   WE: _a=1 - jezyk polski, _a=2 - angielski
::  OLD: \symbol/gen_ser.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| 'Nasz identyfikator w Państwa kartotekach:'
|? _a=2
|| 'Our identification symbol in your register:'
|| ''
?}


\komp_3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Po redagowaniu ROZNE.KOMP_ZAK
::  OLD: \komp_3/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.KOMP_ZAK=0 || ROZNE.KOMP_KH:=null || 1 ?}


\komp_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Przed redagowaniem ROZNE.KOMP_KH
::  OLD: \komp_1/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.KOMP_ZAK=1 || 1 || 0 ?}


\komp_4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Po redagowaniu ROZNE.KOMP_OKR
::  OLD: \komp_4/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.KOMP_OKR
|| {? ROZNE.KOMP_DOD=date(0,0,0) || ROZNE.KOMP_DOD:=SSTALE.AO().POCZ ?};
   {? ROZNE.KOMP_DDO=date(0,0,0) || ROZNE.KOMP_DDO:=SSTALE.AO().KON ?};
   1
|| ROZNE.KOMP_DOD:=ROZNE.KOMP_DDO:=date(0,0,0)
?}


\ilelinii
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Sprawdza, ile linii zajmuje dany tekst (drukowany za pomoca metody SPLIT)
::   WE: _a - tekst
::       _b - dlugosc jednej linii tekstu
::   WY: Liczba linii tekstu
::  OLD: \ilelinii/skid.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
{? _a<>'' & _b
|| STR.split(_a);
   {! |? _zwrot+=1; STR.line(_b); STR.next() !}
?};
_zwrot


\kom_rp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Rekord przed dla planów umów
::  OLD: \kom_rp/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.EMAIL:={? PAR_NAG.EMAIL='T' || 'Wysłany' |? PAR_NAG.EMAIL='N' || 'Nie wysłany' || 'Brak adresu email' ?};
_okno:={? SER_KOR.TYP='K'
       || 'KOM_WER'
       |? SER_KOR.TYP='S'
       || 'UMU_WER'
       || 'UMUF_WER'
       ?};
_akcje:='';
{? ~PAR_NAG.sel_size()
|| {? PAR_NAG.ST_DEK='T'
   || _akcje:='UZWANTP'
   |? PAR_NAG.ST_AKC='T'
   || _akcje:='UZWAP'
   |? PAR_NAG.ST_REJ='T'
   || _akcje:='UZNP'
   || _akcje:='WANT'
   ?};
   {? PAR_NAG.ST_AKC<>'T' || _akcje+='T' ?}
?};
PAR_NAG.actions_grayed(_okno,'');
PAR_NAG.actions_grayed(_okno,_akcje);
{? PAR_NAG.ST_DEK='T' || 'PAR_NAG#01#02'
|? PAR_NAG.ST_AKC='T' || 'PAR_NAG#01#01'
|| ''
?}


\sal_wys1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS:
::  OLD: \sal_wys1/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? -PAR_POZ.STR='wn'
|| ROZRACH.KW6:=PAR_POZ.SAL; ROZRACH.KW7:=0
|| ROZRACH.KW6:=0; ROZRACH.KW7:=PAR_POZ.SAL
?};
1


\kw_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Na wyswietl dla kwot kompensaty
::  OLD: \kw_kom/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
{? -PAR_POZ.STR='wn'
|| ROZRACH.KW8:=0; ROZRACH.KW9:=PAR_POZ.KWOTA
|| ROZRACH.KW9:=0; ROZRACH.KW8:=PAR_POZ.KWOTA
?};
1


\sal_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS:
::  OLD: \sal_wys/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? -OPTMP.STR='wn'
|| ROZRACH.KW4:=OPTMP.SAL; ROZRACH.KW5:=0
|| ROZRACH.KW4:=0; ROZRACH.KW5:=OPTMP.SAL
?};
1


\kom_zak_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Kończenie planów umów
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_mp:=_args.mp;
_wy:=_args.out;
_selsize:=PAR_NAG.sel_size();
{? exec('zablok_um','rozrach')
|| {? PAR_NAG.ST_REJ='T'
   || {? _selsize=0 || FUN.info('Plan umowy jest już zakończony.'@) ?}; _mp.done()
   || {? SER_KOR.TYP='K'
      || PAR_POZ.cntx_psh();  PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix(PAR_NAG.ref());
         {? PAR_POZ.first()
         || _ok:=1; _w:=_m:=0;
            {! |?
               {? 1+PAR_POZ.STR='W' || _w+=PAR_POZ.KWOTA$2 || _m+=PAR_POZ.KWOTA$2 ?};
               PAR_POZ.next()
            !}
         ?};
         PAR_POZ.cntx_pop()
       || _ok:=1
       ?};
       {? _ok
       || {? SER_KOR.TYP<>'K' | (SER_KOR.TYP='K' & _m$2=_w$2)
          || _ref:=PAR_NAG.ref();
             exec('ozn_akc','rozrach','T');
             {? PAR_NAG.seek(_ref) & PAR_NAG.ST_REJ='T' || _mp.done() ?}
          || {? _selsize=0 || FUN.info('Pozycje nie bilansują się.\nPlan nie może być zakończony.'@) ?}
          ?}
       || {? _selsize=0 || FUN.info('Brak pozycji planu umowy.'@) ?}
       ?}
   ?}; exec('odblok_um','rozrach')
?}


\kom_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Akceptacja planów umów
::   WE: _a - zadeklarowane - z okienkiem
::  OLD: \kom_akc/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_mp:=_args.mp;
_wy:=_args.out;
_selsize:=PAR_NAG.sel_size();
{? exec('zablok_um','rozrach')
|| {? PAR_NAG.ST_AKC='T'
   || {? _selsize=0 || FUN.info('Plan umowy jest już zaakceptowany.'@) ?}; _mp.done()
   |? PAR_NAG.ST_REJ='N'
   || {? _selsize=0 || FUN.info('Plan umowy nie jest zakończony.'@) ?}; _mp.error()
   |? _mp.isAutoRun()
   || params_exec('kom_akc1','rozrach');
      {? PAR_NAG.ST_AKC='T' || _mp.done() ?}
   |? _
   || {? SER_KOR.TYP='K'
      || params_exec('okno_par_nag','rozrach',{? PAR_NAG.WAL=FINFO.NAROD || 'KOM_RED' || 'KOM_REDW' ?},
                     'Plan umowy kompensaty')
      |? SER_KOR.TYP='S'
      || params_exec('okno_par_nag','rozrach',{? PAR_NAG.WAL=FINFO.NAROD || 'UMU_RED' || 'UMU_REDW' ?},
                     'Plan umowy sprzedaży wierzytelności')
      || params_exec('okno_par_nag','rozrach',{? PAR_NAG.WAL=FINFO.NAROD || 'FAK_RED' || 'FAK_REDW' ?},
                     'Plan umowy faktoringu')
      ?};
      {? PAR_NAG.ST_AKC='T' || _mp.done() ?}
   || params_exec('kom_akc1','rozrach');
      {? PAR_NAG.ST_AKC='T' || _mp.done() ?}
   ?};
   exec('odblok_um','rozrach')
?}


\kom_akc1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Akceptacja planów umów - wewnętrzna
::----------------------------------------------------------------------------------------------------------------------
do();
exec('ozn_mon','rozrach','T');
PAR_NAG.ST_AKC:='T';
PAR_NAG.USER:=exec('usr_zar','dok_fks');
PAR_NAG.DATA_AKC:=date();
{? PAR_NAG.put() & var_pres('licz_gr')>0 || licz_gr+=1 ?};
end()


\okno_par_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [17.00]
:: OPIS: Tworzy okienko tymczasowe dla umowy
::   WE: _a - akronim okienka redakcji
::----------------------------------------------------------------------------------------------------------------------
_okn:=PAR_NAG.mk_edit(_b);
PAR_NAG.win_ewin(_okn,,_a);
PAR_NAG.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&Pozycje'@],
                 "exec('kom_poz','rozrach',1); ''"
                );
PAR_NAG.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Akceptuj'@],
                      "exec('kom_akc1','rozrach'); {? PAR_NAG.ST_AKC='T' || 'key:Esc' || '' ?}"
                );
_anuluj:=PAR_NAG.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Anuluj'@],
                 'key:Esc');
PAR_NAG.btn_eopt(_okn,_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
PAR_NAG.win_edit(_okn);
PAR_NAG.display()


\ozn_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Formuła wykonywana przy akcji Zakończ lub Wycofaj dla planów
::   WE: _a - znacznik zakończenia ('T') lub zdjecie znacznika ('N')
::  OLD: \ozn_akc/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
do();
PAR_NAG.cntx_psh();
PAR_NAG.prefix();
PAR_NAG.ST_REJ:=_a;
PAR_NAG.cntx_psh(); PAR_NAG.prefix(); PAR_NAG.put(); PAR_NAG.cntx_pop();
{? var_pres('licz_gr')>0 || licz_gr+=1 ?};
PAR_NAG.cntx_pop();
end()


\ozn_mon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia znacznik monotowania na rozrachunkach
::   WE: _a - monitować? T/N
::----------------------------------------------------------------------------------------------------------------------
OP.index('KON_O');
PAR_POZ.cntx_psh(); PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix(PAR_NAG.ref());
_b:={? _a='T' || 'N' || 'T' ?};
_par:=PAR_SKID.get(44);
{? PAR_POZ.first()
|| {! |?
      OP.prefix(PAR_NAG.WAL,PAR_NAG.ODD,PAR_POZ.KONTO,PAR_POZ.OP,PAR_POZ.OP,PAR_POZ.SYM_ROK);
      {? OP.first() & OP.STAN='N'
      || {? -PAR_NAG.TYP='k' & (_par='T' | _par='Z' & OP.TZ>=PAR_NAG.DATA)
         || OP.CZY_ODS:=_b;
            OP.put()
         ?};
         {? _a='T' | (_a='N' & zn_um)
         || OP.CZY_ODS:=_b;
            OP.CZY_MON:=_b;
            OP.put()
         ?};
         exec('pop_all','rozrach',0)
      ?};
      PAR_POZ.next()
   !}
?};
PAR_POZ.cntx_pop()


\komzakbe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.40]
:: OPIS: Formuła początkowa dla zakończenia grupy umów
::----------------------------------------------------------------------------------------------------------------------
licz_gr:=0; licz_zaz:=PAR_NAG.sel_size();
_zwrot:=FUN.ask('Zakończyć zaznaczone plany umów?'@);
{? ~_zwrot || VAR_DEL.delete('licz_gr','licz_zaz') ?};
_zwrot


\komzakae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula końcowa dla zakończenia grupy umow
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Liczba zaznaczonych umów: %1'
         '\nLiczba zakończonych umów: %2'@[$licz_zaz,$licz_gr]);
VAR_DEL.delete('licz_gr','licz_zaz'); 1


\komakcbe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula poczatkowa dla akceptacji grupy umow
::  OLD: \komakcbe/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
licz_gr:=0; licz_zaz:=PAR_NAG.sel_size();
_zwrot:=FUN.ask('Zaakceptować zaznaczone plany umów?'@);
{? ~_zwrot || VAR_DEL.delete('licz_gr','licz_zaz') ?};
_zwrot


\komakcae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula koncowa dla akceptacji grupy umow
::  OLD: \komakcae/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Liczba zaznaczonych umów: %1'
         '\nLiczba zaakceptowanych umów: %2'@[$licz_zaz,$licz_gr]);
VAR_DEL.delete('licz_gr','licz_zaz'); 1


\kom_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Wycofanie akceptacji planów umów
::  OLD: \kom_wyc/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
_selsize:=PAR_NAG.sel_size();
{? exec('zablok_um','rozrach')
|| {? PAR_NAG.ST_AKC='N'
   || {? _selsize=0 || FUN.info('Plan umowy nie jest zaakceptowany.'@) ?}
   |? PAR_NAG.ST_DEK='T'
   || {? _selsize=0 || FUN.info('Plan umowy jest zadekretowany.'@) ?}
   || {? _selsize=0
      || zn_um:=FUN.ask('Włączyć naliczanie odsetek i monitowanie dla rozrachunków z pozycji planu?'@)
      ?};
      do();
      exec('ozn_mon','rozrach','N');
      {? _selsize=0 || &zn_um ?};
      PAR_NAG.ST_AKC:='N';
      PAR_NAG.USER:='';
      PAR_NAG.DATA_AKC:=date(0,0,0);
      PAR_NAG.cntx_psh(); PAR_NAG.prefix();
      {? PAR_NAG.put() & var_pres('licz_gr')>0 || licz_gr+=1 ?};
      PAR_NAG.cntx_pop();
      end()
   ?};
   exec('odblok_um','rozrach')
?}


\komwakbe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula poczatkowa dla anulowania akceptacji grupy umów
::  OLD: \komwakbe/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
licz_gr:=0; licz_zaz:=PAR_NAG.sel_size(); zn_um:=0;
_zwrot:=FUN.ask('Anulować akceptację zaznaczonych planów umów?'@);
{? ~_zwrot
|| VAR_DEL.delete('licz_gr','licz_zaz')
|| zn_um:=FUN.ask('Włączyć naliczanie odsetek i monitowanie dla rozrachunków z pozycji zaznaczonych planów?'@)
?};
_zwrot


\komwakae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula koncowa dla anulowania akceptacji grupy umów
::  OLD: \komwakae/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Liczba zaznaczonych umów: %1'
         '\nLiczba umów, w których anulowano akceptację: %2'@[$licz_zaz,$licz_gr]);
VAR_DEL.delete('licz_gr','licz_zaz','zn_um');
1


\kom_wzak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Wycofanie zakończenia planów umów
::  OLD: \kom_wyc/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
_selsize:=PAR_NAG.sel_size();
{? exec('zablok_um','rozrach')
|| {? PAR_NAG.ST_REJ='N'
   || {? _selsize=0 || FUN.info('Plan umowy nie jest zakończony.'@) ?}
   |? PAR_NAG.ST_AKC='T'
   || {? _selsize=0 || FUN.info('Plan umowy jest zaakceptowany.'@) ?}
   |? PAR_NAG.ST_DEK='T'
   || {? _selsize=0 || FUN.info('Plan umowy jest zadekretowany.'@) ?}
   || exec('ozn_akc','rozrach','N')
   ?};
   exec('odblok_um','rozrach')
?}


\komwycbe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formuła poczatkowa dla wycofywania zakończenia grupy umów
::----------------------------------------------------------------------------------------------------------------------
licz_gr:=0; licz_zaz:=PAR_NAG.sel_size(); zn_um:=0;
_zwrot:=FUN.ask('Wycofać zakończenie zaznaczonych planów umów?'@);
{? ~_zwrot
|| VAR_DEL.delete('licz_gr','licz_zaz','zn_um')
?};
_zwrot


\komwycae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula końcowa dla wycofywania zakończenia grupy umów
::  OLD: \komwakae/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Liczba zaznaczonych umów: %1'
         '\nLiczba umów, w których wycofano zakończenie: %2'@[$licz_zaz,$licz_gr]);
VAR_DEL.delete('licz_gr','licz_zaz','zn_um'); 1


\kom_dek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Dekretowanie planów umów
::  OLD: \kom_dek/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_mp:=_args.mp;
_wy:=_args.out;
exec('czytaj','#stalesys');
{? PAR_NAG.get()
|| {? ~exec('czy_okr_zam_con','konsolidacja',1) & exec('zablok_um','rozrach')
   || {? PAR_NAG.ST_AKC='N'
      || FUN.info('Plan umowy nie jest zaakceptowany.'@)
      |? PAR_NAG.ST_DEK='T'
      || FUN.info('Plan umowy jest już zadekretowany.'@)
      || {? exec('spr_poz','rozrach')
         || {? SER_KOR.TYP='K'
            || DOK.win_edit('KSKOMP')
            || PAR_NAG.PAR_UM();
               {? SER_KOR.TYP='S' || DOK.win_edit('KSKUMU') || DOK.win_edit('KSKFAK') ?};
               exec('ppop_um','rozrach')
            ?};
            DOK.cntx_psh();REJ.index('KOD'); REJ.prefix(); REJ.first();
            DOK.blank(0);
            DOK.RVAT:=DOK.REJ:=DOK.DZ:=DOK.DOK_REJ:=null;
            DOK.TR:=PAR_NAG.OPIS;
            DOK.NK:=ROZRACH.SYMR:=PAR_NAG.PAR_UM().SYM;
            ROZRACH.DATA:=PAR_NAG.DATA+FINFO.OKRROZ;
            DOK.DTO:=PAR_NAG.DATA;
            ROZRACH.OPIS:='Umowa: '+DOK.NK;
            REJ.win_sel('WER1'); _okno:=REJ.win_dict('?'); REJ.win_dict('SLO1');
            POMOC.AKC:='K'; czy_podp:=0;
            exec('gr_bufor','dok_fks');
            {? DOK.edit("exec('chk_dok','dok_fks')")
            || DOK.cntx_psh;
               DOK.index('REJ');
               DOK.prefix(DOK.REJ);
               _numer:={? DOK.last || DOK.NR+1 || 1 ?};
               DOK.cntx_pop();
               DOK.NR:=_numer;
               DOK.prefix();
               DOK.DR:=date();
               DOK.ZAR:=exec('usr_zar','dok_fks');
               DOK.A:='N';
               DOK.ZK:='N';
               DOK.ZP:='N';
               DOK.WSK_XD:='N';
               DOK.ODD:=DOK.REJ().ODD;
               DOK.DOKZRODL:='par_nag'+$(#PAR_NAG.ref);
               DOK.JPK_V_T:=exec('typ_dok','obiegi2');
               do();
               {? DOK.add()
               || exec('pop_poz','dok_fks','DOK',0);
                  OP.cntx_psh(); OP.index('KON_O');
                  PAR_POZ.cntx_psh();
                  PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix(PAR_NAG.ref);
                  _sum1:=_sum2:=_sum3:=0; _ok:=1;
                  {? PAR_POZ.first
                  || {! |?
                        OP.prefix(PAR_NAG.WAL,PAR_NAG.ODD,PAR_POZ.KONTO,PAR_POZ.OP,PAR_POZ.OP,PAR_POZ.SYM_ROK);
                        {? OP.first() & OP.STAN='N'
                        || _s:={? PAR_POZ.STR='Wn' || 'Ma' || 'Wn' ?};
                           _sum1+=PAR_POZ.KWOTA$2;
                           _sum2+=PAR_POZ.SAL$2-PAR_POZ.KWOTA$2;
                           _sum3+=PAR_POZ.REGRES$2;
                           _kw:={? SER_KOR.TYP='K' || PAR_POZ.KWOTA || PAR_POZ.SAL ?};
                           _ok:=exec('poz_add','dekret_aut',{? SSTALE.WAL<>FINFO.NAROD || 0 || _kw ?},
                                     _s,PAR_POZ.KONTO,PAR_POZ.OP,OP.TYP,OP.DO,OP.TZ,ROZRACH.OPIS,
                                     {? SSTALE.WAL<>FINFO.NAROD || SSTALE.WAL().KOD || '' ?},
                                     {? SSTALE.WAL<>FINFO.NAROD || _kw || 0 ?},
                                     PAR_NAG.KURS,'',exec('dat_otw','dok_fks'));
                           {? _ok & SER_KOR.TYP='F' & KONTO.K4<>'' & PAR_POZ.REGRES$2<>0
                           || _ok:=exec('poz_add','dekret_aut',{? SSTALE.WAL<>FINFO.NAROD || 0 || PAR_POZ.REGRES ?},
                                        PAR_POZ.STR,KONTO.K4,PAR_POZ.OP,OP.TYP,PAR_NAG.DATA,PAR_NAG.DATA+PAR_NAG.PO_TER,ROZRACH.OPIS,
                                        {? SSTALE.WAL<>FINFO.NAROD || SSTALE.WAL().KOD || '' ?},
                                        {? SSTALE.WAL<>FINFO.NAROD || PAR_POZ.REGRES || 0 ?},
                                        PAR_NAG.KURS,'',exec('dat_otw','dok_fks'))
                           ?}
                        || undo(); _ok:=0;
                           FUN.info('Brak rozrachunku o symbolu %1 \nwskazanego w pozycji planu umowy.'@[PAR_POZ.OP])
                        ?};
                        _ok & PAR_POZ.next()
                     !}
                  ?};
                  PAR_POZ.cntx_pop();
                  OP.cntx_pop();
                  {? _ok & SER_KOR.TYP<>'K' || exec('dek_dod','rozrach',_sum1,_sum2,_sum3) ?};
                  {? _ok
                  || PAR_NAG.REJ:=DOK.REJ;
                     PAR_NAG.DATADOK:=DOK.DTW;
                     PAR_NAG.NREJ:=DOK.NR;
                     PAR_NAG.SYMDOK:=DOK.NK;
                     PAR_NAG.ST_DEK:='T';
                     PAR_NAG.cntx_psh(); PAR_NAG.prefix();
                     PAR_NAG.put();
                     _wy.DOK:=DOK.ref(); _mp.save(,_wy);
                     _mp.done();
                     PAR_NAG.cntx_pop()
                  || undo()
                  ?}
               || FUN.info('Nie powiodło się dodanie dokumentu.'@)
               ?};
               end()
            ?};
            DOK.cntx_pop; &czy_podp; REJ.win_dict(_okno);
            VAR_DEL.delete('pamietaj');
            POMOC.AKC:=''
         ?}
      ?};
      exec('odblok_um','rozrach')
   ?}
|| FUN.info('Nie znaleziono umowy.'@)
?}


\spr_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.53]
:: OPIS: Sprawdzanie pozycji planu
::  OLD: \spr_poz/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
OP.cntx_psh(); OP.index('KH');
PAR_POZ.cntx_psh(); PAR_POZ.index('PAR_POZ'); PAR_POZ.prefix(PAR_NAG.ref());
_ok:=1;
{? PAR_POZ.first()
|| {! |?
      OP.prefix(PAR_NAG.WAL,PAR_NAG.KH1,'N',PAR_NAG.ODD,PAR_POZ.KONTO,PAR_POZ.TZ,PAR_POZ.OP);
      _ok:={? OP.first
           || 1
           || FUN.info('Brak nierozliczonego rozrachunku o symbolu %1'
                       '\nwskazanego w pozycji planu umowy.'@[PAR_POZ.OP]);0
           ?};
      _ok & PAR_POZ.next()
   !}
?};
OP.cntx_pop(); PAR_POZ.cntx_pop();
_ok


\dek_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Dekretowanie planów umów
::   WE: _a - kwota na KONT.K1
::       _b - kwota na KONT.K2
::       _c - kwota na KONT.K3
::  OLD: \dek_dod/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? KONTO.K1<>''
|| _ok:=exec('poz_add','dekret_aut',{? SSTALE.WAL<>FINFO.NAROD || 0 || _a-PAR_NAG.KOSZTY$2 ?},
             'Wn',KONTO.K1,ROZRACH.SYMR,'NAL',PAR_NAG.DATA,ROZRACH.DATA,ROZRACH.OPIS,
             {? SSTALE.WAL<>FINFO.NAROD || SSTALE.WAL().KOD || '' ?},
             {? SSTALE.WAL<>FINFO.NAROD || _a-PAR_NAG.KOSZTY$2 || 0 ?},
             PAR_NAG.KURS,'',exec('dat_otw','dok_fks'))
?};
{? _ok & KONTO.K2<>''
|| _ok:=exec('poz_add','dekret_aut',{? SSTALE.WAL<>FINFO.NAROD || 0 || _b+PAR_NAG.KOSZTY$2 ?},
             'Wn',KONTO.K2,'','',date(0,0,0),date(0,0,0),ROZRACH.OPIS,
             {? SSTALE.WAL<>FINFO.NAROD || SSTALE.WAL().KOD || '' ?},
             {? SSTALE.WAL<>FINFO.NAROD || _b+PAR_NAG.KOSZTY$2 || 0 ?},PAR_NAG.KURS)
?};
{? _ok & KONTO.K3<>'' & _c$2<>0
|| _ok:=exec('poz_add','dekret_aut',{? SSTALE.WAL<>FINFO.NAROD || 0 || _c ?},
             'Ma',KONTO.K3,ROZRACH.SYMR,'ZOB',PAR_NAG.DATA,PAR_NAG.DATA+PAR_NAG.PO_TER,ROZRACH.OPIS,
             {? SSTALE.WAL<>FINFO.NAROD || SSTALE.WAL().KOD || '' ?},
             {? SSTALE.WAL<>FINFO.NAROD || _c || 0 ?},PAR_NAG.KURS,'',exec('dat_otw','dok_fks'))
?};
1


\umu_prz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Formuła wykonywana przed akcją 'Zaznacz częściowo w okienku wertowania pozycji do planu
::  OLD: \umu_prz/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.KWOTA:=OPTMP.ROZL;
ROZRACH.KW:=OPTMP.KW2;
{? OPTMP.ROZL$2=0
|| OPTMP.ROZL:=(OPTMP.SAL*(PAR_NAG.PROC/100))$2;
   OPTMP.KW2:=(OPTMP.SAL*(PAR_NAG.REGRES/100))$2
?};
1


\umu_rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Rekord po w okienkach UMU, FAK tabeli PAR_NAG
::  OLD: \umu_rec/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.ROZL$2>ROZRACH.KW4$2
|| {? SER_KOR.TYP='F'
   || FUN.info('Wartość finansowania powinna być \nmniejsza od wartości Saldo Wn.'@)
   || FUN.info('Cena sprzedaży nie może być \nwiększa od wartości Saldo Wn.'@)
   ?};
   'ROZL'
|| {? SER_KOR.TYP='F' & OPTMP.KW2$2>ROZRACH.KW4$2
   || FUN.info('Wartość regresu powinna być \nmniejsza od wartości Saldo Wn.'@); 'KW2'
   || 1
   ?}
?}


\umu_cze
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Formuła wykonywana przy akcji 'Zaznacz częściowo w okienku wertowania pozycji do plany
::  OLD: \umu_cze/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
OPTMP.ROZL:=OPTMP.ROZL$2;
OPTMP.ZNACZ:={? OPTMP.ROZL$2=0 || OPTMP.KW2:=0;'' || OPTMP.KW2:=OPTMP.KW2$2;'T' ?};
OPTMP.put;
ROZRACH.SUM3+=OPTMP.ROZL-ROZRACH.KWOTA$2;
ROZRACH.SUM4+={? ROZRACH.KWOTA$2=0 || OPTMP.SAL$2-OPTMP.ROZL$2|| -OPTMP.ROZL$2+ROZRACH.KWOTA$2 ?};
ROZRACH.SUM5+=OPTMP.KW2-ROZRACH.KW$2;
1


\umu_cal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Formuła wywoływana na akcję 'Zaznacz całkowicie' w okienku wertowania pozycji planu
::  OLD: \umu_cal/kompens.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.ROZL$2>0
|| ROZRACH.SUM3-=OPTMP.ROZL$2;
   ROZRACH.SUM4-=OPTMP.SAL$2-OPTMP.ROZL$2;
   ROZRACH.SUM5-=OPTMP.KW2$2;
   OPTMP.ZNACZ:='';
   OPTMP.ROZL:=OPTMP.KW2:=0;
   OPTMP.put()
|| OPTMP.ROZL:=(OPTMP.SAL*(PAR_NAG.PROC/100))$2;
   OPTMP.KW2:=(OPTMP.SAL*(PAR_NAG.REGRES/100))$2;
   {? OPTMP.ROZL$2<>0
   || OPTMP.ZNACZ:='T';
      OPTMP.put();
      ROZRACH.SUM3+=OPTMP.ROZL$2;
      ROZRACH.SUM5+=OPTMP.KW2$2;
      ROZRACH.SUM4+=OPTMP.SAL$2-OPTMP.ROZL$2
   ?}
?}


\sl_jez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Szukanie slownika jezykow, ustawianie pozycji 'POL' i wybor jezyka
::   WY: 1/0 - zatwierdzono/nie zatwierdzono wybor jezyka
::  OLD: \sl_jez/mail_fk.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
SLO.cntx_psh(); SLU.prefix(); SLUAPPL.prefix();
SLO.index('SL'); SLO.prefix();
SER_KOR.JEZYK:={? SLO.find_key(SLU.ref(),'POL')
               || SLO.ref()
               || null
               ?};
PAR_WYDR.win_edit({? SER_KOR.TYP='W'
                  || exec('set_kbr','rozrach_przel'); 'JEZKBANK'
                  || 'JEZYK'
                  ?});
{? ~PAR_WYDR.edit("{? SER_KOR.TYP<>'W'
                   || 1
                   || {? RACHBANK.KB_1R=''
                      || FUN.info('Nie podano numeru konta bankowego.'@); 'KB_1R'
                      || 1
                      ?}
                   ?}")
|| _zwrot:=0
|| SER_WYD.cntx_psh();
   SER_WYD.index('SER_WYD1'); SER_WYD.prefix(SER_KOR.TYP,SER_KOR.JEZYK);
   {? ~SER_WYD.first()
   || FUN.info('Nie zdefiniowano wysyłania tego typu wiadomości\nw języku %1.'@[SER_KOR.JEZYK().KOD]);
      _zwrot:=0
   ?};
   SER_WYD.cntx_pop()
?};
SLO.cntx_pop();
{? _zwrot & var_pres('sl_jez')>0 || sl_jez:=1 ?};
_zwrot


\parses_par_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła ustala PARSES dla czynności na podstawie maski tabeli PAR_NAG,
::       wskazanie na rekord tabeli PAR_NAG jest przekazane poprzez parametr PAR_NAG czynności.
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
{? _mp.pathTodo()
|| _result:=0;
   _par_nag:='';
   {? var_pres('PAR_NAG',_out) & var_pres('PAR_NAG',_out)=type_of(null()) & _out.PAR_NAG<>null
   || _par_nag:=_out.PAR_NAG
   |? var_pres('PAR_NAG',_in) & var_pres('PAR_NAG',_in)=type_of(null()) & _in.PAR_NAG<>null
   || _par_nag:=_in.PAR_NAG
   || _par_nag:=null
   ?};
   {? _par_nag
   || _ref:=BB.sqlint($_par_nag); _nam:=form(($_par_nag)-8);
      {? _ref<>0 & _nam<>''
      || PAR_NAG.cntx_psh(); PAR_NAG.use(_nam); PAR_NAG.prefix();
         {? PAR_NAG.seek(_ref,_nam)
         || exec('szuk_okr','okresy',PAR_NAG.DATA);
            {? ROZNE.UT_OKROD<>null
            || OKRO_F.prefix(); ROZNE.UT_OKROD();
               __PARSES.setVal('OkresRok',OKRO_F.ref());
               _result:=1
            ?}
         ?};
         PAR_NAG.cntx_pop()
      ?}
   ?}
?};
_result


\upr_par_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła na uprawnienia do danych dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menadżer Procesów
::   WY: 0 - użytkownik nie ma uprawnień do danych dla czynności
::       1 - użytkownik ma uprawnienia do danych czynności
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_in:=_args.in;
_user:=_args.user;
_mp:=_args.mp;

_result:=0;
USERS.cntx_psh(); USERS.prefix();
{? USERS.seek(_user)
|| {? var_pres('PAR_NAG',_in) & var_pres('PAR_NAG',_in)=type_of(null()) & _in.PAR_NAG<>null
   || PAR_NAG.cntx_psh(); PAR_NAG.prefix();
      {? PAR_NAG.seek(_in.PAR_NAG,form(($_in.PAR_NAG)-8))
      || {? exec('usr_fjks','b_perm',PAR_NAG.ODD().OD,USERS.ref())
         || _result:=1
         ?}
      ?};
      PAR_NAG.cntx_pop()
   ||
:: czy w ogóle user ma uprawnienia do jakiejkolwiek jednostki księgowej
      {? exec('usr_fjks_any','b_perm',USERS.ref())
      || _result:=1
      ?}
   ?}
?};
USERS.cntx_pop();
_result


\dspslupn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: Na wyświetl dla pola ROZRACH.SLU
::  OLD: \dspslupn/auto_roz.fml
::----------------------------------------------------------------------------------------------------------------------
{? -menu_txt<>'dołącz'
|| ROZRACH.SLU:=PAR_NAG.PAR_UM().SL().SLU
?};
1


\po_sl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Formula po redakcji pola ROZRACH.SL
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh(); SLO.prefix();
{? PAR_UM.SLO<>null & ~SLO.seek(PAR_UM.SLO) || PAR_UM.SLO:=null ?};
SLO.cntx_pop();
1


\mail_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Definiowanie adresu e-mail dla kontrahenta
::   WE: Dotychczasowy adres e-mail kontrahenta
::  OLD: \mail_def/mail_fk.fml
::----------------------------------------------------------------------------------------------------------------------
undefine();
define('EM',_a,'',,100,60);
_btnzap:=def_btn('text=%1'['Zapisz'@],'key:F2');
_btnan:=def_btn('text=%1'['Anuluj'@],'key:Esc');
def_bopt(_btnzap,'tooltip='+exec('help_red_ok','#window','Z'));
def_bopt(_btnan,'tooltip='+exec('help_red_esc','#window','A'));
{? def_edit("DEFINE.EM:=|DEFINE.EM;
             {? DEFINE.EM<>'' & ~exec('mail_ok','#email',DEFINE.EM)
             || FUN.info('Niepoprawnie zdefiniowany adres e-mail dla kontrahenta %1'@[KH.SKR]); 0
             || 1
             ?}",'Adres E-mail'@)
|| KH.EM:=DEFINE.EM;
   exec('kh_mod','kontrahent');
   KH.put()
?};
undefine()


\forini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Formula inicjujaca zmienne
::  OLD: \forini/mail_fk.fml
::----------------------------------------------------------------------------------------------------------------------
tab_mail:=obj_new(30); {! _i:=1..29 |! tab_mail[_i]:='' !};
:parametr nr 30 = 1 dla jezyka polskiego, 0 dla obcego
tab_mail[30]:=1;
1


\fordel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Formula inicjujaca zmienne
::  OLD: \fordel/mail_fk.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('tab_mail'); 1


\forexec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Szukanie i ewentualne wykonywanie formuly dla monitow
::   WE: _a - ref jezyka
::  OLD: \forexec/mail_fk.fml
::----------------------------------------------------------------------------------------------------------------------
SER_WYD.index('SER_WYD1'); SER_WYD.prefix(SER_KOR.TYP,_a);
{? SER_WYD.first() & SER_WYD.FORMMAIL<>'' || ($SER_WYD.FORMMAIL)() ?};
1


\bdel_par_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed usuwaniem rekordów w PAR_UM
::----------------------------------------------------------------------------------------------------------------------
{? PAR_UM.count()>0
|| FUN.info('Umowa wykorzystywana w systemie.'@); 0
|| 1
?}


\usu_ser_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Usuwanie rekordu w tabeli SER_DEF
::  OLD: \usu_ser_def/!zws_par_frum.fml
::----------------------------------------------------------------------------------------------------------------------
_count:=SER_DEF.count(); _del:=1;
SER_DEFW.cntx_psh(); SER_DEFW.index('SERDEFW2'); SER_DEFW.prefix(SER_DEF.ref());
{? _count
|| _del:=(SER_DEF.count()=SER_DEFW.size());
   {? ~_del
   || FUN.info('Pozycja wykorzystywana w systemie.'@)
   ?}
?};
{? _del & FUN.ask('Usunąć bieżącą pozycję?'@)
|| do();
   {? SER_DEFW.first()
   || {! |?
         _delr:=SER_DEFW.del(,1);
         {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
      !}
   ?};
   {? ~SER_DEF.count() || SER_DEF.del() || undo() ?};
   end()
?};
SER_DEFW.cntx_pop()


\bl_wyraz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Zwraca WYRAZ.LP
::  OLD: \bl_wyraz/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.LP


\fld2le0
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Sprawdzenie czy wartosc pola mniejsza od 0 przy precyzji 2
::  OLD: \fld2le0/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
fld(fld()$2);
{? fld()<0
|| FUN.info('Wprowadzona liczba musi być większa bądź równa zero.'@); 0
|| 1
?}


\min_kw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Minimalne kwoty - dla schematów windykacyjnych odsetek w nocie
::                         dla poziomów trybów monitowania - minimalna wartość monitu
::   WE: _a=1 - SER_SCH, 2 - SER_TPO
::  OLD: \min_kw/wz_ser.fml
::----------------------------------------------------------------------------------------------------------------------
SER_WART.cntx_psh();
SER_WART.hdr_sel(); SER_WART.win_sel('WER');
{? _a=1
|| {? exec('sch_ods1','rozrach')
   || ROZNE.WYW:='A'; SER_WART.win_edit('RED');
      SER_WART.hdr_sel('Minimalna kwota odsetek w nocie dla walut'@);
      SER_WART.index('SERWART2'); SER_WART.prefix(SER_SCH.ref());
      SER_WART.select()
   || FUN.info('Nie zdefiniowano w schemacie naliczania odsetek w nocie.'@)
   ?}
|| ROZNE.WYW:='B';
   SER_WART.win_edit();
   SER_WART.hdr_sel('Minimalna wartość monitu'@);
   SER_WART.index('SERWART3'); SER_WART.prefix(SER_TPOZ.ref());
   SER_WART.select()
?};
SER_WART.win_edit();
SER_WART.cntx_pop()


\sch_ods1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Przed redakcją pola SER_SCH.DNI_ODS
::  OLD: \sch_ods1/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
{? SER_SCH.CZY_ODS='T'  || 1 || SER_SCH.DNI_ODS:=0; 0 ?}


\bl_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartosc poczatkowa pola SER_WART.SER_SCH
::  OLD: \bl_sch/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.WYW='A' || SER_SCH.ref() || null ?}


\bl_tpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartosc poczatkowa pola SER_WART.SER_TPOZ
::  OLD: \bl_tpoz/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.WYW='B' || SER_TPOZ.ref() || null ?}


\rek_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Rekord przed w tabeli SER_WART
::  OLD: \rek_wart/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
{? SER_WART.TYP_TERM || 'SER_WART#01#01' || '' ?}


\rposwart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Rekord po dla tabeli SER_WART
::  OLD: \rposwart/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? ~SER_WART.WAL
|| FUN.info('Nie wybrano waluty.'@); _zwrot:='WAL'
|| {? -menu_txt='popraw' || _ref:=SER_WART.ref() ?};
   SER_WART.cntx_psh();
   SER_WART.index('SERWART1'); SER_WART.prefix(SER_WART.SER_SCH,SER_WART.SER_TPOZ,SER_WART.WAL,SER_WART.TYP_TERM);
   {? SER_WART.first() & {? -menu_txt='popraw' || SER_WART.ref()<>_ref || 1 ?}
   || FUN.info('Istnieje już pozycja dla podanej waluty.'@); _zwrot:='WAL'
   ?};
   SER_WART.cntx_pop()
?};
_zwrot


\operdept
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2010]
:: OPIS: Formula wlana na wartosc poczatkowa pola UDT.ODD
::  OLD: \operdept/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? +app_info('web_sesid')
|| _parses:=__PARSES.getVal('JednostkaKsięgowa');
   OPERATOR.DEPT:=_parses.REF
?};
ODD.cntx_psh();
exec('odd_filtr','fst');
_odd:={? ODD.f_size()=1 & ODD.f_first() || ODD.ref || null() ?};
ODD.f_clear();
ODD.cntx_pop();
{? OPERATOR.DEPT=null() & _odd<>null()
|| _odd
|| OPERATOR.DEPT
?}


\sstalewl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Zwraca walute ze stalych systemu
::  OLD: \sstalewl/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
SSTALE.WAL


\kont_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: powolanie tabeli szczegolow kontaktu
::  OLD: \kont_tmp/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__Tab_sz');
:: okno wertowania szczegolow
__Tab_sz:=tab_tmp(1,
   'N','INTEGER','',
   'T','STRING[121]','Treść');
__wer_sz:=__Tab_sz.mk_sel('Szczegóły'@,,0,'kontakty_szczeg');
__Tab_sz.win_fld(__wer_sz,,'T',,,,,,,1);
__Tab_sz.win_sel(__wer_sz);
exec('kont_win_fml','rozrach')


\kont_tmp_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: usuniecie tabeli szczegolow kontaktu
::  OLD: \kont_tmp_del/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__Tab_sz')


\gen_tmp2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Stworzenie tabelki tymczasowej i okienka - blokady
::  OLD: \gen_tmp2/kh_ser.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_MEM2:=tab_tmp(1,'N','INTEGER','',
                    'T','STRING[160]','Treść');
sel_mem2:=TAB_MEM2.mk_sel('Notatki'@,,0,'tab_mem2_wer');
TAB_MEM2.win_fld(sel_mem2,,'T');
TAB_MEM2.win_sel(sel_mem2)


\del_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Skasowanie tabelki tymczasowej i okienka
::  OLD: \del_tmp/kh_ser.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TAB_MEM1','sel_mem1','TAB_MEM2','sel_mem2')


\kont_win_fml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: kontakty - ustawia icony dla pol
::  OLD: \kont_win_fml/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
DOKUM.win_fml('WERK',KHVZ,'ICO_ZAL',,'ICON_BEFORE',"{? DOKUM.DOKUM || 'xwin16.png:119' || '' ?}");
DOKUM.win_fml('WERK',KHVZ,'ICO_EM',,'ICON_BEFORE',"{? DOKUM.ESEND='T' || 'xwin16.png:80' || '' ?}")


\blok_str
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Zamienia znacznik blokady na napis
::   WE: _a - znacznik blokady
::  OLD: \blok_str/kh_ser.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.BLOK_STR:={? (var_pres('pulpit')>0 & WIND_KH.size()) |
                   (var_pres('pulpit')<=0 & KH.get())
                || {? -_a='w' || 'warunkowa' |? -_a='b' || 'bezwarunkowa' || 'brak' ?}
                || ''
                ?}


\zdarzt_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dodawanie typów zdarzeń (blokady)
::  OLD: \zdarzt_add/!fks_rwp_zlaz.fml
::----------------------------------------------------------------------------------------------------------------------
ZDARZT.cntx_psh(); ZDARZT.index('ZDARZT'); ZDARZT.prefix();
{? ~ZDARZT.first()
|| {? ~ZDARZT.find_key('T','BL_BEZWARUNKOWE')
   || ZDARZT.ZDARZ:='BL_BEZWARUNKOWE'; ZDARZT.SYS:='T';  ZDARZT.add()
   ?};
   {? ~ZDARZT.find_key('T','BL_WARUNKOWE')
   || ZDARZT.ZDARZ:='BL_WARUNKOWE';  ZDARZT.SYS:='T'; ZDARZT.add()
   ?};
   {? ~ZDARZT.find_key('T','ODBLOKOWANIE')
   || ZDARZT.ZDARZ:='ODBLOKOWANIE';  ZDARZT.SYS:='T'; ZDARZT.add()
   ?}
?};
ZDARZT.cntx_pop()


\kh_dict
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2010]
:: OPIS: Formula wolana przed akcja szukaj w okienku wertowania WER tab. WIND_KH
::  OLD: \kh_dict/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
KH.win_dict('WERHOME2'); 1


\zap_zak_um
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zapisywanie lub kończenie umowy dotyczącej rozrachunków
::   WE: _a - 1 - zapisywanie
::            2 - zakończenie
::----------------------------------------------------------------------------------------------------------------------
um_p:={? _a=2 || 1 || 2 ?};
sel_exit();
1


\umu_rozr_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Umowy dotyczące rozrachunków
::----------------------------------------------------------------------------------------------------------------------
PAR_UM.cntx_psh();
PAR_UM.index('SYM'); PAR_UM.prefix(REF.FIRMA,SER_KOR.TYP);
{? SER_KOR.TYP='K'
|| PAR_UM.win_sel('WER1')
|| PAR_UM.win_sel('WER12')
?};
PAR_UM.select();
PAR_UM.cntx_pop()


\optmp_hid
::----------------------------------------------------------------------------------------------------------------------
:: UTW: Artur Kozłowski [wersja: 12.41] 25.04.2016  - 11:50
:: OPIS:  ukrywanie akcji dla OPTMP
:: WE:
:: WY:
::----------------------------------------------------------------------------------------------------------------------
_hid_d:=_hid:='D(DEZ)';
OP.cntx_psh();
      OP.index('KON_O');
      OP.prefix(WYDRUKI.WAL,OPTMP.ODD,OPTMP.KONTO,OPTMP.SYM,OPTMP.SYM,OPTMP.SYM_ROK);
      {? OP.size=1 & OP.first()
      ||    ZAP_OP.cntx_psh();
            ZAP_OP.index('OP');
            ZAP_OP.prefix(OP.ref);
           _maska:='';_ref:=0;
            {?   ZAP_OP.first()
            ||   {! |?  {? ZAP_OP.MA<>0
                           ||  _hid_d:='';_hid:='';
                               _maska:=(ref_name(ZAP_OP.POZDOK)+4);
                                 _ref:=#ZAP_OP.POZDOK ;
                                   DOK.cntx_psh(); POZ.cntx_psh();
                               _maska2:={? (DOK.name()+2)='__' || (DOK.name()+4) || SSTALE.AR().KOD+form(SSTALE.AO().NR,-2) ?};
                                  {? _maska=_maska2
                                  || _ok:=1
                                  || _ok:=0;
                                     POZ.use('pozy'+_maska);
                                     DOK.use('doku'+_maska)
                                  ?};
                                  POZ.prefix();
                               {? _ref<>0 & POZ.seek(_ref,)
                               ||   {? _ref<>0 & DOK.seek(POZ.DOK)
                                     || {? PAR_SKID.get(82)='N'
                                         ||     DOKUM.index('DOKUM');
                                                  DOKUM.prefix(REF.FIRMA,$DOK.ref);
                                                  {? DOKUM.first()
                                                  ||  ''
                                                  || _hid_d+='Z'
                                                  ?}
                                         ?};'załącznik';
                                        {? DOK.DOKZRODL='' || _hid_d+='D' ?};'dokument źródłowy';
                                        {? ~DOK.E_DOC || _hid_d+='E' ?};'skan ';
                                        {? _hid_d<>'' || _hid+='D('+_hid_d+')' ?}
                                    ?}
                               || _hid:='D(DEZ)'
                               ?};
                             POZ.cntx_pop(); DOK.cntx_pop()
                         ?};
                     ZAP_OP.next() & _maska<>''
                  !}
            ?};
            ZAP_OP.cntx_pop()
      ?};
      OP.cntx_pop();
      {? OPTMP.sel_size()=0 & OPTMP.SPP='N' || _hid+='T' ?};
_hid


\dsp_par_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Tworzy okienko tymczasowe dla umowy
::   WE: _a - akronim okienka redakcji
::       _b - nazwa okienka
::----------------------------------------------------------------------------------------------------------------------
_okn:=PAR_NAG.mk_edit(_b);
PAR_NAG.win_ewin(_okn,,_a);
PAR_NAG.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&Pozycje'@],
                 "exec('kom_poz','rozrach',1); ''"
                );
_anuluj:=PAR_NAG.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Anuluj'@],
                 'key:Esc');
PAR_NAG.btn_eopt(_okn,_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
PAR_NAG.win_edit(_okn);
PAR_NAG.display()


\rpo_ser_defw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Rekord po - SER_DEFW
::----------------------------------------------------------------------------------------------------------------------
{? SER_DEFW.JEZYK=null
|| FUN.info('Nie wybrano jezyka.'@); 0
|| __CHK.index(SER_DEFW,-menu_txt(,)='popraw')=''
?}


\op_enable
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawienie dostępności pól w tabeli OP
::----------------------------------------------------------------------------------------------------------------------
OP.efld_opt('RED',{? (1+OP.TYP)='N' & OP.KH & exec('ps_65','rachunki')='T' || 'enable=1' || 'enable=0' ?},RACHBANK,'KB_1R');
OP.efld_opt('RED',{? (1+OP.TYP)='Z' & OP.KH || 'enable=1' || 'enable=0' ?},RACHBANK,'KB_3R');
~~


\mail_sendk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Wysłano maila z załącznikiem umowy konpensaty
::----------------------------------------------------------------------------------------------------------------------
{? 6+DOKUM.REFSQL='parnag'
|| PAR_NAG.cntx_psh();
   PAR_NAG.use(8+DOKUM.REFSQL);
   PAR_NAG.prefix();
   {? PAR_NAG.seek(DOKUM.REFSQL)
   || PAR_NAG.EMAIL:=DOKUM.ESEND;
      PAR_NAG.put()
   ?};
   PAR_NAG.cntx_pop()
?}


\mail_sendw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Wysłano maila z załącznikiem wezwania do zapłaty
::----------------------------------------------------------------------------------------------------------------------
{? 7+DOKUM.REFSQL='ser_nag'
|| SER_NAG.cntx_psh(); SER_NAG.prefix();
   {? SER_NAG.seek(DOKUM.REFSQL)
   || SER_NAG.EMAIL:=DOKUM.ESEND;
      SER_NAG.put()
   ?};
   SER_NAG.cntx_pop()
?}


\okienko
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK][8.70]
:: OPIS: Tworzy okienko z zakladkami dla tabeli WIND_KH
::  OLD: \okienko/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__CTR');
__CTR:=obj_new('BTAB', 'BBLOB','TAB','WIN_ID','WIN_ACR','DIR_SEP','DND');
__CTR.BTAB:='DOKUMZ';
__CTR.TAB:='DOKUM';
__CTR.BBLOB:='DOKUM';
__CTR.WIN_ACR:=exec('mk_ctr','bloby','kont_dokz_ctr',':');
__CTR.WIN_ID:=-(1-__CTR.WIN_ACR);
__CTR.DIR_SEP:=exec('sep','#file',1);
__CTR.DND:=1;
__PAR188:=PAR_SKID.get(188)='T';
ZDARZT.win_fml('ZDARZT2',,'ICON',,'ICON_BEFORE',"ZDARZT.ICON");
_okno:={? WIND_N.KHKODSKR=0 || 'WER' || 'WER1' ?};
_grp_sel:=WIND_KH.grp_make('Analizy działań windykacyjnych'@,,'#wind_kh_gr',,,);
WIND_KH.fld_opt(_okno,'col_name="%1"'[PAR_WYDR.IPAR1],WIND_KH,'PRZ1');
WIND_KH.fld_opt(_okno,'col_name="%1"'[PAR_WYDR.IPAR2],WIND_KH,'PRZ2');
WIND_KH.fld_opt(_okno,'col_name="%1"'[PAR_WYDR.IPAR3],WIND_KH,'PRZ3');
WIND_KH.fld_opt(_okno,'col_name="%1"'[PAR_WYDR.IPAR4],WIND_KH,'PRZ4');
WIND_KH.fld_opt(_okno,'col_name="%1"'[PAR_WYDR.IPAR5],WIND_KH,'PRZ5');
WIND_KH.fld_opt(_okno,'col_name="%1"'[PAR_WYDR.IPAR6],WIND_KH,'PRZ6');
WIND_KH.fld_opt(_okno,'col_name="%1"'[PAR_WYDR.IPAR7],WIND_KH,'PRZ7');
WIND_KH.fld_opt(_okno,'col_name="%1"'[PAR_WYDR.IPAR8],WIND_KH,'PRZ8');
WIND_KH.grp_sel(_grp_sel,WIND_KH,_okno,'Kontrahenci'@,,,,,,,,,'maximized_with_title','sel1_wind_kh');
WIND_KH.grp_sel(_grp_sel,ZDARZ,'ZDBKH','Blokady sprzedaży'@,,,,10,,,,,'maximized_with_title');
task_attach('ZWS_PAR_KKGB');
_far:="exec('kont_sz_akt','kontrahent')";
_far1:=$('exec(\'dokum_rfr\',\'bloby\',\':'+__CTR.WIN_ID+'\',\''+__CTR.WIN_ACR+'\')');
_befor:="exec('bobs_dokumz','bloby')";
_fb:="KHVZ.KONTAKTY:='T'; KHVZ.KHVP:='windykacja'; DOKUM.index('KH'); DOKUM.prefix(KH.ref()); DOKUM.win_edit('REDK')";
_fa:="KHVZ.KONTAKTY:='N'; KHVZ.KHVP:=''";
WIND_KH.grp_sel(_grp_sel,DOKUM,'WERK1','Kontakty'@,_far; _far1,,,,_fb,_fa,,,'maximized_with_title');
task_attach('KKH_KON_DRKO');
task_attach('KKH_KON_PKON');
WIND_KH.tab_splt(_grp_sel,,'horizontal','tab2',18);
WIND_KH.grp_ctr(_grp_sel,DOKUMZ,__CTR.WIN_ACR,__CTR.WIN_ID,,,,,,,_befor,,,'maximized');
WIND_KH.win_sel(_grp_sel);
__KONTIN:=(exec('hasAction','users','KKH_KON_DRKO')=0)


\deltree
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Kasowanie tabelki tymczasowej (rozrachunki przeterminowane w pulpicie windykatora)
::  OLD: \deltree/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TAB_WIN')>0
|| VAR_DEL.delete('TAB_WIN','co_w_kol','ilekolr');
   VAR_DEL.delete('ind_win1','ind_win2','ind_win3','ind_win4','ind_win5');
   VAR_DEL.delete('ind_win6','ind_win7','ind_win8','ind_win9')
?};
VAR_DEL.delete('kh_ile')


\ile_prz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Zwraca liczbę przedziałów analizy
::   WE: _a - czy z przedziałem przed terminem (0/1)
::  OLD: \ile_prz/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
_w:={? WIND_N.PRZ6<>0 || 6
    |? WIND_N.PRZ5<>0 || 5
    |? WIND_N.PRZ4<>0 || 4
    |? WIND_N.PRZ3<>0 || 3
    |? WIND_N.PRZ2<>0 || 2
    |? WIND_N.PRZ1<>0 || 1
    || 0
    ?};
{? _a=1 & WIND_N.PRZED_TP<>0
|| _w+=1
?};
_w


\del_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK]
:: OPIS: Kasuje pozycje analizy
::  OLD: \del_poz/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
WIND_KH.cntx_psh(); WIND_KH.index('KOD'); WIND_KH.prefix();
{? WIND_KH.first() || {! |? WIND_KH.del() !} ?};
WIND_KH.cntx_pop();
WIND_OP.cntx_psh(); WIND_OP.index('KH'); WIND_OP.prefix();
{? WIND_OP.first() || {! |? WIND_OP.del() !} ?};
WIND_OP.cntx_pop()


\kt_prz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Sprawdzenie, do którego przedziału zalicza się data
::   WE: _a - data
::  OLD: \kt_prz/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a>=WIND_N.DATA
|| _prz:=(WIND_N.PRZED_TP<>0 & (_a-WIND_N.PRZED_TP)<WIND_N.DATA)
|| _prz:=max_prz+1;
   _d:=WIND_N.DATA-_a;
   {! _i:=1..max_prz-{? WIND_N.PRZED_TP<>0 || 1 || 0 ?}
   |! _w:=($('WIND_N.PRZ'+$_i))();
      {? _d<=_w & _prz=max_prz+1
      || _prz:=_i+{? WIND_N.PRZED_TP<>0 || 1 || 0 ?}
      ?}
   !}
?};
_prz


\gen_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Generowanie pozycji szczegółów dla pozycji analizy
::   WE: _a - kwota w przedziale                                      ";
::       _b - termin platności
::  OLD: \gen_op/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
_prz:=exec('kt_prz','rozrach',_b);
{? _prz>0
|| k[_prz]+=_a;
   {? WIND_N.Z='T' & {? WIND_N.PRZED_TP<>0 || _prz>1 || 1 ?}
   || WIND_OP.prefix();
      WIND_OP.blank();
      WIND_OP.FIRMA:=REF.FIRMA;
      WIND_OP.KH:=KH.ref();
      WIND_OP.ODD:=OP.ODD;
      WIND_OP.SYM:=OP.SYM;
      WIND_OP.SYM_ZEW:=OP.SYM_ZEW;
      WIND_OP.TZ:=_b;
      WIND_OP.DO:=OP.DO;
      WIND_OP.KW:=_a;
      WIND_OP.AN:=OP.AN;
      WIND_OP.PRZ:=_prz;
      WIND_OP.SYM_ROK:=exec('op_unik_sym','rozrach',OP.SYM,OP.DO);
      WIND_OP.add()
   ?}
?}


\kas_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Usuwanie szczegółów dla pozycji analizy
::  OLD: \kas_op/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? WIND_N.Z='T'
|| WIND_OP.index('KH'); WIND_OP.prefix(KH.ref());
  {? WIND_OP.first() || {! |? WIND_OP.del() !} ?}
?}


\gen_poj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Generowanie pozycji analizy dla jednego kontrahenta
::  OLD: \gen_poj/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
echo('Generowanie dla kontrahenta: %1'@[KH.KOD]);
_ost_pl:=_czas:=_nm:=_nw:=_zm:=_zw:=_suma:=_ile_o:=_ile_d:=0;
_data:=date(0,0,0);
_zmienne:=obj_new(16);
{! _i:=1..16 |! _zmienne[_i]:=0 !};
_zmienne[3]:=date(0,0,0); _zmienne[7]:=null;
k:=obj_new(max_prz+1);
_dp:=WIND_N.DATA-WIND_N.OST_PL;
{! _i:=1..max_prz+1 |! k[_i]:=0 !};
ZAP_OP.index('OP');
D_RB.index('OP');
{? var_pres('DRB',@.CLASS)<0 || exec('obj_drbt','raty') ?};
{? var_pres('DRB')>0 || obj_del(DRB); &DRB ?};
DRB:=obj_new(@.CLASS.DRB);
_dl:=+WIND_N.KON_PRE;
_kon:={? WIND_N.KON_PRE<>''
      || WIND_N.KON_PRE
      |? WIND_N.KON_MAS*'?'>1
      || ((WIND_N.KON_MAS*'?')-1)+WIND_N.KON_MAS
      || ''
      ?};
_unique:='';
SER_KOR.DATA:=WIND_N.DATA;
{? WIND_N.NAL_ODS
|| exec('jakisch','rozrach');
   _zmienne[7]:={? SER_KOR.SER_SCH().ODS<>null || SER_SCH.ODS || FINFO.TODS_DOM ?}
?};
OP.cntx_psh(); ZAP_OP.cntx_psh();  D_RB.cntx_psh(); ROK_F.cntx_psh(); OKRO_F.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_ar:=SSTALE.AR;
{? ROK_F.find_le(_dp)
|| {! |?
      OP.use('operac' + ROK_F.KOD);
      ZAP_OP.use('rozzap'+ ROK_F.KOD);
      D_RB.use('dr__fk'+ROK_F.KOD);
      {? WIND_N.ODD=null
      || OP.index('KH2'); OP.prefix(SSTALE.WAL,KH.ref())
      || OP.index('KH3'); OP.prefix(SSTALE.WAL,WIND_N.ODD,KH.ref())
      ?};
      {?  OP.first()
      || {! |?
            _war1:={? _ar<>ROK_F.ref() || OP.STAN='R' || 1 ?};
            {? _war1 & OP.DO<=WIND_N.DATA & ~(_unique*OP.SYM_ROK)
            || {? _ok:={? WIND_N.ZAK_KON='M' & WIND_N.KON_MAS<>35*'?' &
                          ~exec('maski','dok_fks',OP.AN,WIND_N.KON_MAS,35)
                       || 0
                       |? _dl+OP.AN<>WIND_N.KON_PRE
                       || 0
                       || 1
                       ?}
               || ZAP_OP.prefix(OP.ref());
                  _w:=_m:=0; _o_d:=date(0,0,0); _zmienne[9]:=0; _zmienne[10]:=0;
                  _mon:={? WIND_N.OZNACZ='T' & OP.CZY_MON='N' || 0 || 1 ?};
                  {? ZAP_OP.first()
                  || _zmienne[10]:=~(OP.TZ>=OP.DO); _zmienne[12]:=0;
                     _zmienne[11]:={? _zmienne[10]
                                   || 0
                                   |? (1+OP.TYP)='N' & WIND_N.TYP='N'
                                   || F.RObr(OP.ref(),WIND_N.DATA); F.rwn
                                   || F.RObr(OP.ref(),WIND_N.DATA); F.rma
                                   ?};
                     {! |?
                        {? ZAP_OP.DATA<=WIND_N.DATA
                        || _w+=ZAP_OP.WN; _m+=ZAP_OP.MA;
                           {? (1+OP.TYP)='N' & WIND_N.TYP='N'
                           || _zmienne[12]+=ZAP_OP.MA;
                              {? ZAP_OP.MA$2<>0 & ~_zmienne[10] & _o_d=date(0,0,0) & _zmienne[12]>=_zmienne[11]
                              || _o_d:=ZAP_OP.DATA
                              ?};
                              {? ZAP_OP.MA$2<>0 & _data<ZAP_OP.DATA || _data:=ZAP_OP.DATA ?};
                              {? ZAP_OP.DATA>=_dp || _ost_pl+=ZAP_OP.MA ?}
                           |? (1+OP.TYP)='Z' & WIND_N.TYP='Z'
                           || _zmienne[12]+=ZAP_OP.WN;
                              {? ZAP_OP.WN$2<>0 & ~_zmienne[10] & _o_d=date(0,0,0) & _zmienne[12]>=_zmienne[11]
                              || _o_d:=ZAP_OP.DATA
                              ?};
                              {? ZAP_OP.WN$2<>0 & _data<ZAP_OP.DATA || _data:=ZAP_OP.DATA ?};
                              {? ZAP_OP.DATA>=_dp || _ost_pl+=ZAP_OP.WN ?}
                           ?};
                           ZAP_OP.next()
                        || 0
                        ?}
                     !}
                  ?};
                  _zmienne[1]:=0;
                  {? (1+OP.TYP)='N'
                  || _nw+=_w;_nm+=_m;
                     {? WIND_N.TYP='N'
                     || {? _m$2>=_w$2 & _w$2<>0 & _o_d<>date(0,0,0)
                        || _ile_d+=_o_d-OP.TZ; _ile_o+=1
                        ?};
                        {? _w$2>_m$2
                        || _zmienne[13]:=_w$2-_m$2;
                           _zmienne[14]+=_zmienne[13]*(WIND_N.DATA-OP.TZ);
                           _zmienne[15]+=(WIND_N.DATA-OP.TZ)
                        ?};
                        _zmienne[1]:=1
                     ?}
                  |? (1+OP.TYP)='Z'
                  || _zw+=_w; _zm+=_m;
                     {? WIND_N.TYP='Z'
                     || {? _w$2>=_m$2 & _m$2<>0 & _o_d<>date(0,0,0)
                        || _ile_d+=_o_d-OP.TZ; _ile_o+=1
                        ?};
                        {? _m$2>_w$2
                        || _zmienne[13]:=_m$2-_w$2;
                           _zmienne[14]+=_zmienne[13]*(WIND_N.DATA-OP.TZ);
                           _zmienne[15]+=(WIND_N.DATA-OP.TZ)
                        ?};
                        _zmienne[1]:=1
                     ?}
                  ?};
                  {? _zmienne[1]
                  || _vtp:={? DRB.set_tab(OP.ref(),,WIND_N.DATA) & WIND_N.RATY || DRB.TPF || OP.TZ ?};
                     {? _mon
                     || _i:=0;
                        {! |?
                           _i+=1; _vk:=0;
                           _zmienne[3]:={? DRB.EXIST & WIND_N.RATY || t_drb[_i][3] || _vtp ?};
                           {? _zmienne[3]>=WIND_N.DATA
                           | (PAR_SKID.get(47)='N' & ( 1+OP.TYP='N' & _m$2>_w$2 | 1+OP.TYP='Z' & _w$2>_m$2))
                           || _zmienne[2]+={? DRB.EXIST & WIND_N.RATY
                                           || t_drb[_i][1]-t_drb[_i][2]
                                           || {? WIND_N.TYP='N' || (_w-_m)$2 || (_m-_w)$2 ?}
                                           ?}
                           ?};
                           {? _m$2<>_w$2 & (_zmienne[3]-WIND_N.PRZED_TP+WIND_N.PO_TP)<=WIND_N.DATA
                           || {? DRB.EXIST & WIND_N.RATY
                              || _vk:=t_drb[_i][1]-t_drb[_i][2];                       _vtp:=t_drb[_i][3]
                              || _vk:={? WIND_N.TYP='N' || (_w-_m)$2 || (_m-_w)$2 ?};  _vtp:=OP.TZ
                              ?};
                              {? _vk>0
                              || {? (WIND_N.TYP='N' & OP.TYP='NOD') | (WIND_N.TYP='Z' & OP.TYP='ZOD')
                                 || _zmienne[6]+=_vk
                                 ?};
                                 {? WIND_N.NAL_ODS & _zmienne[7]<>null &
                                   (WIND_N.TYP='N' & OP.TYP='NAL') | (WIND_N.TYP='Z' & OP.TYP='ZOB')
                                 || SER_KOR.TAB_ODS:=_zmienne[7]; SER_KOR.DATA:=WIND_N.DATA;
                                    _zmienne[8]+={? DRB.EXIST & WIND_N.RATY
                                                 || {? _zmienne[9]=0
                                                    || _zmienne[9]:=1;
                                                       exec('ods_rat','rozrach_ods',WIND_N.DATA)$2
                                                    || 0
                                                    ?}
                                                  || exec('odsetki','rozrach_ods',OP.ref(),WIND_N.DATA,1)$2
                                                  ?}
                           ?};
                           _suma+=_vk;{? exec('gen_op','rozrach',_vk,_vtp) || _unique+=','+WIND_OP.SYM_ROK ?}
                        ?}
                           || {? _ar<>ROK_F.ref() || _unique+=','+OP.SYM_ROK ?}
                          ?};
                           DRB.EXIST & WIND_N.RATY & _i<D_RB.size()
                        !}
                     ?}
                  ?}
               ?}
            ?};
            OP.next()
         !}
      ?};
      ROK_F.next() & ROK_F.POCZ_ROK<=WIND_N.DATA
   !};
   _suma+=_zmienne[2];
   _jest:={? _suma$2<WIND_N.OD_KW$2 | (_suma$2=0 & _zmienne[2]$2=0) || exec('kas_op','rozrach'); 0 || 1 ?};
   {? _jest>0
   || _czas:={? _ile_o>0 || (_ile_d/_ile_o)$0 || -1000000 ?};
      _zmienne[16]:={? _zmienne[15]<>0 || _zmienne[14]/_zmienne[15] || -1000000 ?};
      _zmienne[4]:=_zmienne[5]:=0;
      {! _i:=1..max_prz+1
      |! _zmienne[4]+=k[_i];
         {? (WIND_N.PRZED_TP=0 & _i=1) | _i>1 || _zmienne[5]+=k[_i] ?}
      !};
      _j:=1;
      WIND_KH.blank();
      WIND_KH.KH:=KH.ref();
      {! _h:=1..8 |!
        {? _j<=max_prz+1 || ($('WIND_KH.PRZ'+$(_h)+':=k['+$_j+']'))(); _j+=1 ?}
      !};
      WIND_KH.RAZEM:=_zmienne[4];
      WIND_KH.POTER:=_zmienne[5];
      WIND_KH.PRZEDTER:=_zmienne[2];
      WIND_KH.SR_CZAS:=_czas;
      WIND_KH.SR_WAZ:=_zmienne[16];
      WIND_KH.OST_PL:={? WIND_N.OST_PL<>0 || _ost_pl || 0 ?};
      WIND_KH.OST_DATA:=_data;
      WIND_KH.SWN_N:=_nw;
      WIND_KH.SWN_Z:=_zw;
      WIND_KH.SMA_N:=_nm;
      WIND_KH.SMA_Z:=_zm;
      WIND_KH.ODSNALWC:=_zmienne[6];
      WIND_KH.ODSPOTER:=_zmienne[8];
      WIND_KH.add()
   ?}
?};
OP.cntx_pop(); ZAP_OP.cntx_pop(); D_RB.cntx_pop(); ROK_F.cntx_pop(); OKRO_F.cntx_pop();
OP.use('operac' + SSTALE.AR().KOD);
VAR_DEL.delete('k','DRB')


\wyr_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.62]
:: OPIS: Zaznacza/odznacza rekord w okienku
::  OLD: \wyr_kh/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
TMPKH.prefix();
{? TMPKH.find_key(KH.KOD,KH.KOD)
|| TMPKH.del(); 0
|| TMPKH.KOD:=KH.KOD;
   TMPKH.REF:=$KH.ref();
   TMPKH.add(); 1
?}


\akt_not
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK][8.70]
:: OPIS: Aktualizacja notatek
::  OLD: \akt_not/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? WIND_NOT.first()
|| WIND_KH.cntx_psh();
   KH.cntx_psh(); KH.prefix();
   WIND_KH.index('KOD'); WIND_KH.prefix();
   {! |?
      {? WIND_KH.find_key(WIND_NOT.KOD) & WIND_KH.KH().KOD=WIND_NOT.KOD
      || WIND_NOT.next()
      || WIND_NOT.del()
      ?}
   !};
   KH.cntx_pop(); WIND_KH.cntx_pop()
?}


\akt_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK][8.70]
:: OPIS: Aktualizuje podsumowania
::  OLD: \akt_sum/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
{! _j:=1..9 |! ($('SER_KOR.WINSUM0'+$(_j)+':=0'))() !}; SER_KOR.WINSUM10:=0;
WIND_KH.prefix();
WIND_KH.cntx_psh();
{? WIND_KH.first()
|| {! |?
      SER_KOR.WINSUM01+=WIND_KH.PRZEDTER$2;
      SER_KOR.WINSUM10+=WIND_KH.RAZEM$2;
      {! _j:=2..9
      |! {? ($('PAR_WYDR.IPAR'+$(_j-1)+'<>\'\''))()
         || ($('SER_KOR.WINSUM0'+$(_j)+'+='+'WIND_KH.PRZ'+$(_j-1)+'$2'))()
         ?}
      !};
      WIND_KH.next()
   !}
?};
WIND_KH.cntx_pop()


\header
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK][8.70]
:: OPIS: Header okienek tabeli WIND_KH
::  OLD: \header/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
WIND_KH.hdr_sel();
{? WIND_N.TYP='N'
|| WIND_KH.hdr_sel(' - analiza należności na dzień: %1'@[$WIND_N.DATA])
|| WIND_KH.hdr_sel(' - analiza zobowiązań na dzień: %1'@[$WIND_N.DATA])
?}


\aktwall
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK][8.70]
:: OPIS: Aktualizacja calej analizy
::   WE: _a - zadeklarowane - przy poprawianiu parametrow analizy
::  OLD: \aktwall/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
WIND_KH.unlock(); WIND_N.r_unlock();
_rlock:=WIND_N.r_lock(1,1);
_lock:=WIND_KH.lock(1,1);
WYDRUKIN.win_edit('DATA');  WYDRUKIN.hdr_edit('Aktualizacja analizy'@);
WYDRUKIN.DATAOD:=WIND_N.DATA;
{? (_ & | {? exec('szuk_okr','okresy',WYDRUKIN.DATAOD); ROZNE.UT_OKROD=null || exec('blad_okr','rozrach_kor'); 0 || 1 ?}) |
   (~_ & WYDRUKIN.edit("{? exec('szuk_okr','okresy',WYDRUKIN.DATAOD); ROZNE.UT_OKROD=null || exec('blad_okr','rozrach_kor'); 0 || 1 ?}"))
|| {? _rlock & _lock
   || WIND_KH.cntx_psh(); WIND_OP.cntx_psh(); WIND_NOT.cntx_psh();
      {? SSTALE.AR<>ROZNE.UT_OKROD
      || SSTALE.AR:=ROZNE.UT_OKROD().ROK; SSTALE.AO:=ROZNE.UT_OKROD;
         exec('open_tabele','open_tab')
      ?};
      WIND_KH.cntx_pop(); WIND_OP.cntx_pop(); WIND_NOT.cntx_pop();
      exec('tmp_ods','rozrach_ods');
      {? WIND_N.ZAK_KH='W'
      || do();
         {? ~_ || WIND_N.DATA:=WYDRUKIN.DATAOD ?};
         exec('del_poz','rozrach');
         KH.cntx_psh(); KH.index('KOD'); KH.prefix(2);
         {? KH.first()
         || {! |?
               exec('gen_poj','rozrach'); echo();
               KH.next()
            !}
         ?};
         KH.cntx_pop(); WIND_KH.first();
         WIND_N.CZAS:=time();
         WIND_N.DATA_GEN:=date(); WIND_N.put();
         end()
      || exec('initmpkh','rozrach_kor');
         KH.cntx_psh(); KH.prefix();
         WIND_KH.cntx_psh();
         {? WIND_KH.first()
         || {! |?
              WIND_KH.KH();  exec('wyr_kh','rozrach');
              WIND_KH.next()
            !}
         ?};
         WIND_KH.cntx_pop();
         KH.select();
         {? TMPKH.first()
         || do();
            {? ~_ || WIND_N.DATA:=WYDRUKIN.DATAOD ?};
            WIND_N.CZAS:=time();
            WIND_N.DATA_GEN:=date();
            WIND_N.put();
            exec('del_poz','rozrach');
            KH.index('KOD'); KH.prefix(2);
            {! |?
               {? KH.find_key(TMPKH.KOD) || exec('gen_poj','rozrach'); echo() ?};
               TMPKH.next()
            !}; WIND_KH.first();
            end()
         ?};
         KH.cntx_pop();
         exec('deltmpkh','rozrach_kor')
      ?};
      {? ODS_TMP1.first() || exec('pyt_pok','rozrach_ods') ?};
      exec('del_tmp','rozrach_ods');
      {? _=0 || selexit:=1; sel_exit() ?};
      WIND_KH.lock(0,1);
      WIND_N.r_lock(0,1)
   || {? _lock || WIND_KH.lock(0,1) ?};
      {? _rlock || WIND_N.r_lock(0,1) ?};
      FUN.info('Analizę obsługuje inny operator.'@)
   ?}
?};
exec('akt_not','rozrach');
exec('akt_sum','rozrach');
exec('header','rozrach');
WYDRUKIN.hdr_edit()


\wndn_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [7.62]
:: OPIS: Wyswietlenie pozycji aktualnej analizy - tabela WIND_KH
::   WE: _a - 1/0 wejscie 'automatyczne',
::       _b - aktualizacja przy wejsciu
::  OLD: \wndn_poz/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('okienko','rozrach');
{? _a=1
|| AreaTitle.setTabWin(WIND_KH,WIND_KH.win_sel('?'));
   AreaTitle.setTitle()
?};
windpole:=0; pulpit:=1; _ar:=SSTALE.AR; _ao:=SSTALE.AO;
exec('szuk_okr','okresy',WIND_N.DATA);
{? ROZNE.UT_OKROD<>null
|| {? _ao<>ROZNE.UT_OKROD
   || SSTALE.AR:=ROZNE.UT_OKROD().ROK; SSTALE.AO:=ROZNE.UT_OKROD;
      exec('open_tabele','open_tab')
   ?};
   _m:=$(#WIND_N.ref()); _m:=('000'+_m)+4;
   WIND_KH.use('wndk'+_m);
   WIND_OP.use('wino'+_m);
   WIND_NOT.use('winn'+_m);
   WIND_KH.win_fml('WER',,'KH','S_VAT','ICON_BEFORE',"exec('icona_svat','blp',KH.S_VAT)");
   WIND_KH.win_fml('WER1',,'KH','S_VAT','ICON_BEFORE',"exec('icona_svat','blp',KH.S_VAT)");
   _refwndn:=null;
   {? WIND_N.r_lock(0,1) & WIND_KH.lock(0,1)
   || _refwndn:=WIND_N.ref();
      exec('deltree','rozrach');
      {? WIND_N.PRZED_TP<>0 || PAR_WYDR.IPAR1:='< '+$WIND_N.PRZED_TP; _i:=1 || _i:=0 ?};
      PAR_WYDR.IPAR3:=PAR_WYDR.IPAR4:='';
      max_prz:=exec('ile_prz','rozrach',1);
      {! _j:=1+_i..8  |! ($('PAR_WYDR.IPAR'+$(_j)+':=\'\''))() !};
      {! _j:=1+_i..max_prz+1 |!
         prz:=($('WIND_N.PRZ'+$({? _j>=max_prz+1-_i || max_prz-_i || _j-_i ?})))();
         ($('PAR_WYDR.IPAR'+$(_j)+':='+
         {? _j=max_prz+1 || '''> ''+$prz'
                         || '''do '''+'+$'+$prz+'+\' wł.\''
         ?}
         ))()
      !};
      {? _b || exec('aktwall','rozrach') || exec('akt_sum','rozrach') ?};
      exec('header','rozrach'); {? _b || selexit:=0 ?};
      {? ~wind_akt || WIND_KH.first() || wind_akt:=0 ?};
      _okno:=WIND_KH.win_sel('?');
      WIND_KH.fld_opt('WER','col_name="%1"'[PAR_WYDR.IPAR1],WIND_KH,'PRZ1');
      WIND_KH.fld_opt('WER','col_name="%1"'[PAR_WYDR.IPAR2],WIND_KH,'PRZ2');
      WIND_KH.fld_opt('WER','col_name="%1"'[PAR_WYDR.IPAR3],WIND_KH,'PRZ3');
      WIND_KH.fld_opt('WER','col_name="%1"'[PAR_WYDR.IPAR4],WIND_KH,'PRZ4');
      WIND_KH.fld_opt('WER','col_name="%1"'[PAR_WYDR.IPAR5],WIND_KH,'PRZ5');
      WIND_KH.fld_opt('WER','col_name="%1"'[PAR_WYDR.IPAR6],WIND_KH,'PRZ6');
      WIND_KH.fld_opt('WER','col_name="%1"'[PAR_WYDR.IPAR7],WIND_KH,'PRZ7');
      WIND_KH.fld_opt('WER','col_name="%1"'[PAR_WYDR.IPAR8],WIND_KH,'PRZ8');
      WIND_KH.fld_opt('WER1','col_name="%1"'[PAR_WYDR.IPAR1],WIND_KH,'PRZ1');
      WIND_KH.fld_opt('WER1','col_name="%1"'[PAR_WYDR.IPAR2],WIND_KH,'PRZ2');
      WIND_KH.fld_opt('WER1','col_name="%1"'[PAR_WYDR.IPAR3],WIND_KH,'PRZ3');
      WIND_KH.fld_opt('WER1','col_name="%1"'[PAR_WYDR.IPAR4],WIND_KH,'PRZ4');
      WIND_KH.fld_opt('WER1','col_name="%1"'[PAR_WYDR.IPAR5],WIND_KH,'PRZ5');
      WIND_KH.fld_opt('WER1','col_name="%1"'[PAR_WYDR.IPAR6],WIND_KH,'PRZ6');
      WIND_KH.fld_opt('WER1','col_name="%1"'[PAR_WYDR.IPAR7],WIND_KH,'PRZ7');
      WIND_KH.fld_opt('WER1','col_name="%1"'[PAR_WYDR.IPAR8],WIND_KH,'PRZ8');
      {? ~WIND_KH.select(,1) & _a=1
      || WIND_KH.unlock(); unlock_r()
      ?}
   || FUN.info('Analizę obsługuje inny operator.'@)
   ?};
   WIND_KH.unlock();
   WIND_N.cntx_psh(); WIND_N.prefix(REF.FIRMA);
   {? _refwndn<>null & WIND_N.seek(_refwndn) || WIND_N.r_unlock() ?};
   WIND_N.cntx_pop();
   SSTALE.AR:=_ar; SSTALE.AO:=_ao;
   WIND_KH.cntx_psh(); WIND_OP.cntx_psh(); WIND_NOT.cntx_psh();
   exec('open_tabele','open_tab');
   WIND_KH.cntx_pop(); WIND_OP.cntx_pop(); WIND_NOT.cntx_pop()
|| exec('blad_okr','rozrach_kor')
?};
VAR_DEL.delete('max_prz','windpole','pulpit','prz')


\tr_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Akcja Tryb monitowania w okienkach wertowania tabeli SER_SCH
::  OLD: \tr_sch/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
{? SER_SCH.SER_TM<>null
|| SER_SCH.SER_TM();
   exec('poz_tm','rozrach_kor')
|| FUN.info('W definicji schematu windykacyjnego nie wskazano trybu monitowania.'@)
?}


\udt_zal_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.14]
:: OPIS: Odswieżenie załączników do umów
::----------------------------------------------------------------------------------------------------------------------
DOKUM.index('DOKUM');
{? UDT.get()
|| DOKUM.prefix(REF.FIRMA,$UDT.ref())
|| DOKUM.prefix(REF.FIRMA,'@!@!@!@!@!@!@!@!');
   DOKUM.first()
?};
exec('getblobs','srsr_zal',__CTR.WIN_ID);
grp_disp(($(__CTR.BTAB))(),__CTR.WIN_ACR,,1);
~~


\be_op_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Przed redakcji OP.TYP
::----------------------------------------------------------------------------------------------------------------------
OpTyp:=OP.TYP;
OP.TYP<>'RMK' & OP.TYP<>'RMP'


\zap_op2rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: Dodaje zapisy związane z rozliczeniem rozrachunków do następnych lat
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(76)<>'N'
|| OP.cntx_psh();
   _obj:=exec('obj_op','dok_fks_ks');
   _obj.PKON:=ZAP_OP.OP().AN;
   _obj.cntx_psh();
   {? _obj.first()
   || {!
      |? OP.index('KON_O'); OP.prefix();
         {? OP.find_key(OP.WAL,OP.ODD,_obj.KON,OP.SYM,OP.SYM,OP.SYM_ROK,)
         || ZAP_OP.OP:=OP.ref();
            ZAP_OP.cntx_psh();
            ZAP_OP.prefix();
            {? ZAP_OP.add()
            || OP.WN+=ZAP_OP.WN;
               OP.MA+=ZAP_OP.MA;
               OP.STAN:={? OP.WN$2=OP.MA$2 || 'R' || 'N' ?};
               {? OP.put()
               || STANY.cntx_psh();
                  STANY.index('STAN'); STANY.prefix(OP.ref(),ZAP_OP.OKRO);
                  {? STANY.first()
                  || STANY.WN+=ZAP_OP.WN;
                     STANY.MA+=ZAP_OP.MA;
                     STANY.put()
                  ?};
                  STANY.cntx_pop()
               ?}
            ?};
            ZAP_OP.cntx_pop()
         ?};
         _obj.next()
      !}
   ?};
   _obj.cntx_pop();
   OP.cntx_pop()
?}


\sp_poz_next
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.14]
:: OPIS: Sprawdza, czy można ustalić konto dla rozrachunku w następnych latach
::   WE: _a - Obiekt do obsługi rozrachunków w następnych latach
::       _b - konto do sprawdzenia.
::   WY: 0/1 - blokuj/nie blokuj
::----------------------------------------------------------------------------------------------------------------------
{? _<2 || return(0) ?};
_obj:=_a;
_ok:=1;
_last_act:=_obj.getACTYEAR(SSTALE.AR().POCZ_ROK);
{? _last_act & SSTALE.AR<>_last_act
|| {? _b<>''
   || _obj.PKON:=_b;
      _obj.cntx_psh();
      {? _obj.first()
      || {!
         |? _obj.PKON:=_obj.KON;
            _obj.next()
         !};
         _ok:={? _obj.KON='' || 0 || 1 ?}
      || _ok:=0
      ?};
      _obj.cntx_pop()
   || _ok:=0
   ?}
?};
_ok


\sp_zap_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.14]
:: OPIS: Sprawdza, czy rozrachunek jest już rozliczony w następnych latach
::   WE: _a - Obiekt do obsługi rozrachunków w następnych latach
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
OP.cntx_psh();
_ok:=1;
_obj:=_a;
_obj.PKON:=OP.AN;
_obj.cntx_psh();
_last_act:=_obj.getACTYEAR(SSTALE.AR().POCZ_ROK);
{? _last_act & SSTALE.AR<>_last_act
|| {? _obj.first()
   || {!
      |? OP.index('KON_O'); OP.prefix();
         {? OP.find_key(OP.WAL,OP.ODD,_obj.KON,OP.SYM,OP.SYM,OP.SYM_ROK,)
         || F.RObr(OP.ref(),ROK_F.KON_ROK);
            {? F.rwn$2=F.rma$2
            || _ok:=0
            ?}
         ?};
         _ok & _obj.next()
      !}
   || _ok:=0
   ?}
?};
_obj.cntx_pop();
OP.cntx_pop();
_ok


\tr_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [12.51]
:: OPIS: Przeniesienie całego rozrachunku do następnego roku
::  OLD: \tr_op/dok_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1; {? var_pres('kon')>0 || _kon:=kon ?};
ROK_F.cntx_psh();
pocz:=kon:=_pocz_s:=_kon_s:=date(0,0,0);
BILANSP.NROK:=ROK_F.ref(); _dlsynt:=ROK_F.SYNT;
BILANSP.PROK:=SSTALE.AR;
_pocz_s:=SSTALE.AR().POCZ_ROK;  _kon_s:=SSTALE.AR().KON_ROK;
{? _ok
|| _nkon:=exec('an_bo','zam_okr_rok',POZ.KON);
   Konto:={? _nkon<>'' || POZ.PKON:=POZ.KON; _nkon || POZ.KON ?};
   SLU.prefix(); FINFO.SLWAL().SLU();
   SLO.index('SL');  SLO.prefix(SLU.ref); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
   {? POZ.WAL<>null
   || POZ.WAL(); exec('copy_op','rozrach',_pocz_s,_kon_s,POZ.ID)
   ?};
   FINFO.NAROD();
   exec('copy_op','rozrach',_pocz_s,_kon_s,POZ.ID,POZ.ref())
?};
&pocz; {? var_pres('_kon')>0 || kon:=_kon ?};
ROK_F.cntx_pop();
_ok


\copy_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [12.51]
:: OPIS: Właściwa formuła kopiująca
:: WE: _a, _b - data poczatku i konca roku,
::         _c - symbol rozrachunku
::         _d - ref POZ
::  OLD: \copy_op/dok_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_test:=0;
_newop:=_oldop:=null();
OP.use('operac'+BILANSP.PROK().KOD);
OP.index('KON_O'); OP.prefix(SLO.ref,POZ.ODD,Konto,_c,_c,POZ.SYM_ROK);
{? OP.first()
|| _oldop:=OP.ref();
   {? exec('test_dat','zam_okr_rok', _a, _b)
   || _tz:=OP.TZ; _do:=OP.DO;
      OP.use('operac'+BILANSP.NROK().KOD);
      OP.index('KON_O'); OP.prefix();
      OP.AN:=Konto;
      {? -POZ.TID<>'rmk'
      || SLO.cntx_psh(); KH.cntx_psh();
         OP.POCH:=exec('wys_op','dok_fks_ks',Konto);
         OP.KH:=exec('kh_op','dok_fks_ks');
         SLO.cntx_pop(); KH.cntx_pop()
      ?};
      {? ~OP.find_key(OP.WAL,OP.ODD,OP.AN,OP.SYM,OP.SYM,OP.SYM_ROK)
      || OP.WN:=OP.MA:=0; {? OP.add() || _newop:=OP.ref() ?}
      || _newop:=OP.ref(); _j:=0; {? _do<OP.DO || OP.DO:=_do; _j+=1 ?};
         {? _tz<OP.TZ || OP.TZ:=_tz; _j+=1 ?};
         {? _j || OP.put(); exec('pop_all','rozrach',0) ?}
      ?}
   ?}
?};
OP.use('operac'+BILANSP.PROK().KOD);
ZAP_OP.use('rozzap'+BILANSP.PROK().KOD);
ZAP_OP.index('OP');
{? _oldop || OP.seek(_oldop) || return(0) ?};
{? _newop<>null
|| ZAP_OP.prefix(OP.ref());
   {? ZAP_OP.first()
   || {! |?
          _waluta:=ZAP_OP.OP().WAL; _Poz:=ZAP_OP.POZDOK;
          OP.cntx_psh();  ZAP_OP.cntx_psh(); STANY.cntx_psh();
          OP.use('operac'+BILANSP.NROK().KOD); ZAP_OP.use('rozzap'+BILANSP.NROK().KOD);
          ZAP_OP.index('OP'); ZAP_OP.prefix();
          ZAP_OP.prefix(_newop); _Jest:=0;
          {? ZAP_OP.first()
          || {! |? {? ZAP_OP.POZDOK=_Poz || _Jest:=1; 0 || ZAP_OP.next() ?}  !}
          ?};
          OP.cntx_pop(); ZAP_OP.cntx_pop();  STANY.cntx_pop();

          OP.cntx_psh();  ZAP_OP.cntx_psh(); STANY.cntx_psh();
          OP.use('operac'+BILANSP.NROK().KOD); ZAP_OP.use('rozzap'+BILANSP.NROK().KOD);
          ZAP_OP.prefix();
          _ok:={? _Jest=0 || ZAP_OP.OP:=_newop; ZAP_OP.add() || 0 ?};

          {? _ok
          || STANY.use('stany_'+BILANSP.NROK().KOD);
             STANY.index('STAN');
             STANY.prefix();
             {? ~STANY.find_key(ZAP_OP.OP,ZAP_OP.OKRO)
             || STANY.blank(1); STANY.OP:=ZAP_OP.OP; STANY.OKRO:=ZAP_OP.OKRO;
                STANY.WN:=ZAP_OP.WN; STANY.MA:=ZAP_OP.MA; STANY.add()
             || STANY.WN+=ZAP_OP.WN; STANY.MA+=ZAP_OP.MA; STANY.put()
             ?};
             ZAP_OP.OP();
             OP.WN+=ZAP_OP.WN; OP.MA+=ZAP_OP.MA;
             OP.STAN:={? OP.WN$2 = OP.MA$2 || 'R' || 'N' ?};
             OP.put()
         ?};
         OP.cntx_pop(); ZAP_OP.cntx_pop();  STANY.cntx_pop();
         ZAP_OP.next()
      !}
   ?}
?}


\d_rb_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [22.26]
:: OPIS: Trigger dla tabeli D_RB
::   WE: _a - 1 - dołącz po
::            2 - popraw po
::            3 - usuń po
::----------------------------------------------------------------------------------------------------------------------
{? D_RB.name()<>'dr__xxxx' & D_RB.OP
|| OP.cntx_psh();
   OP.use('operac'+(D_RB.name()+2)); OP.index('KON_O'); OP.prefix();
   D_RB.OP();
   D_RB.cntx_psh(); D_RB.index('OP'); D_RB.prefix(OP.ref());
   _raty:=OP.RATY;
   OP.RATY:={? D_RB.first() || 'T' || 'N' ?};
   {? OP.RATY<>_raty || OP.put() ?};
   D_RB.cntx_pop();
   OP.cntx_pop();
   {? (D_RB.name()+2)=(OP.name()+2) || D_RB.OP() ?}
?};
~~


\zap_opod2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Po odświeżeniu okienka tabeli ZAP_OP
::   WE: [_a]: 1-rozrachunki z logistyki, brak - pozostałe
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 || _a:=1 ?};
{? ZAP_OP.f_active()
|| ZAP_OP.f_clear()
?};
ZAP_OP.index('OP');
{? (OP.f_active=0 | (OP.f_active<>0 & (OP.sel_size()<>0 | OP.f_size<>0))) & OP.get
|| ZAP_OP.prefix(OP.ref)
|| ZAP_OP.prefix(0)
?};
{? ZAP_OP.OP<>OP.ref || ZAP_OP.first || ZAP_OP.get ?};
ZAP_OP.cntx_psh;
{? _a=0 || ZAP_OP.win_sel('ROZL1') || ZAP_OP.win_sel('ROZL4') ?};
ZAP_OP.hdr_sel();
ZAP_OP.hdr_sel('Zapisy rozrachunku: %1'@[OP.SYM]);
exec('zap_op_sum','rozrach');
POMOC.USE:=SSTALE.AR().KOD+form(SSTALE.AO().NR,-2);
ZAP_OP.cntx_pop;
{? _a=0 || grp_disp(ZAP_OP,'ROZL1') || grp_disp(ZAP_OP,'ROZL4') ?}



\op_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Formuła na triger
::   WE:  _a  - 1-po add, 2-po put, 3-przed del
::       [_b] - sukces operacji
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
_ok:={? var_pres('_b')=type_of(1) || _b || 1 ?};
{? _ok
|| {? OP.KH & (_typ=1 & (OP.WN | OP.MA) | _typ=2 & (OP.WN<>bfld('WN') | OP.MA<>bfld('MA')) | _typ=3)
   || KH_DOD.cntx_psh();
      KH_DOD.index('KH_DOD');
      KH_DOD.prefix(REF.FIRMA,OP.KH);
      _ok:=KH_DOD.first() & KH_DOD.EFAKTURA='B';
      KH_DOD.cntx_pop();
      {? _ok
      || _rok_kod:=OP.name()+2;
         _firma:=REF.FIRMA;
         ROK_F.cntx_psh();
         ROK_F.index('KODG'); ROK_F.prefix();
         _dzis:=date();
         _data:=_dzis;
         {? ROK_F.find_key(_rok_kod,)
         || _firma:=ROK_F.FIRMA;
            _ok:=ROK_F.POCZ_ROK<=_dzis & ROK_F.KON_ROK>=_dzis;
            {? ~_ok
            || ROK_F.index('ROKPOCZ'); ROK_F.prefix(_firma);
               _ok:=~ROK_F.next()
            ?};
            _data:=ROK_F.POCZ_ROK
         ?};
         ROK_F.cntx_pop();
         {? _ok
         || BL_OP.cntx_psh();
            BL_OP.index('UNIK');
            BL_OP.prefix();
            _dokum:=exec('op_dokum_bl','rozrach',_firma);
            {? _dokum
            || {? ~BL_OP.find_key(_firma,OP.KH,'DOKUM',$_dokum)
               || BL_OP.blank(1);
                  BL_OP.FIRMA:=_firma;
                  BL_OP.KH:=OP.KH;
                  BL_OP.TABELA:='DOKUM';
                  BL_OP.REF:=$_dokum;
                  BL_OP.WN:=OP.WN;
                  BL_OP.MA:=OP.MA;
                  BL_OP.TO_SEND:='N';
                  BL_OP.add()
               || BL_OP.WN:=OP.WN;
                  BL_OP.MA:=OP.MA;
                  BL_OP.TO_SEND:='N';
                  BL_OP.put()
               ?}
            ?};
            _upd_all:=0;
            {? ~BL_OP.find_key(_firma,OP.KH,'KH',)
            || BL_OP.blank(1);
               BL_OP.FIRMA:=_firma;
               BL_OP.KH:=OP.KH;
               BL_OP.TABELA:='KH';
               BL_OP.DATA:=_data;
               BL_OP.TO_SEND:='T';
               BL_OP.add();
               _upd_all:=1
            |? BL_OP.TO_SEND<>'T' | BL_OP.DATA<>_data
            || BL_OP.TO_SEND:='T';
               _upd_all:=BL_OP.DATA<>_data;
               BL_OP.DATA:=_data;
               BL_OP.put()
            ?};
            _wn:=_ma:=0;
            {? _typ=1
            || _wn:=OP.WN; _ma:=OP.MA
            |? _typ=2
            || _wn:=OP.WN-bfld('WN'); _ma:=OP.MA-bfld('MA')
            |? _typ=3
            || _wn:=-OP.WN; _ma:=-OP.MA
            ?};
            exec('bl_op_obr','rozrach',OP.KH,OP.WAL().KOD,_wn,_ma,_upd_all,{? _typ=3 || OP.ref() || null ?});
            BL_OP.cntx_pop()
         ?}
      ?}
   ?}
?};
{? _typ=3 || 1 || ~~ ?}


\op_dokum_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Zwraca fakturę wysłaną do Businesslink powiązaną z rozrachunkiem
::   WE: _a - wskazanie na firmę
::----------------------------------------------------------------------------------------------------------------------
_dokum:=null;
_firma:=_a;
ZAP_OP.cntx_psh();
ZAP_OP.use('rozzap'+((ref_name(OP.ref()))+2));
ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref());
{? ZAP_OP.first()
|| _dalej:=1;
   {!
   |? {? ZAP_OP.POZDOK
      || POZ.cntx_psh();
         POZ.use(ref_name(ZAP_OP.POZDOK));
         POZ.prefix();
         {? POZ.seek(ZAP_OP.POZDOK)
         || DOK.cntx_psh();
            DOK.use(ref_name(POZ.DOK));
            DOK.prefix();
            {? DOK.seek(POZ.DOK) & DOK.RVAT
            || _dalej:=0;
               {? 1+DOK.DOKZRODL='D'
               || FAKS.cntx_psh();
                  FAKS.use('faktu'+(3+(1-DOK.DOKZRODL)));
                  FAKS.prefix();
                  {? FAKS.seek(#(4-DOK.DOKZRODL))
                  || DOKUM.cntx_psh();
                     0 & DOKUM.use('dok'+(DOK.name()+2));
                     DOKUM.index('BL_2');
                     DOKUM.prefix(_firma,'T',$FAKS.ref(),'W');
                     {? DOKUM.first()
                     || _dokum:=DOKUM.ref()
                     ?};
                     DOKUM.cntx_pop()
                  ?};
                  FAKS.cntx_pop()
               ?}
            ?};
            DOK.cntx_pop()
         ?};
         POZ.cntx_pop()
      ?};
      _dalej & ZAP_OP.next()
   !}
?};
ZAP_OP.cntx_pop();
_dokum


\bl_op_obr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Aktualizacja obrotów rozrachunków dla kontrahenta w businesslink
::   WE: _a - wskazanie na kontrahenta
::       _b - kod waluty
::       _c - winien
::       _d - ma
::       _e - czy aktualizować wszystkie obroty dla kontrahenta
::       _f - wskazanie rozrachunku, który nalezy pominąć
::----------------------------------------------------------------------------------------------------------------------
_kh:=_a;
_wal:=_b;
_wn:=_c;
_ma:=_d;
_upd_all:=_e;
_op_pomin:=_f;
{? _upd_all
|| BL_OP.cntx_psh();
   BL_OP.index('UNIK');
   BL_OP.prefix(REF.FIRMA,_kh,'OBR',);
   {? BL_OP.first() || {! |? BL_OP.del !} ?};
   BL_OP.prefix();
   OP.index('GENIUSKH'); OP.prefix(_kh);
   {? OP.first()
   || {!
      |? OP.prefix(_kh,OP.WAL);
         {? OP.first()
         || BL_OP.blank(1);
            BL_OP.FIRMA:=REF.FIRMA;
            BL_OP.KH:=_kh;
            BL_OP.TABELA:='OBR';
            BL_OP.REF:=OP.WAL().KOD;
            {!
            |? {? _op_pomin=null | OP.ref()<>_op_pomin
               || BL_OP.WN+=OP.WN;
                  BL_OP.MA+=OP.MA
               ?};
               OP.next()
            !};
            BL_OP.add()
         ?};
         OP.prefix(_kh);
         OP.next()
      !}
   ?};
   BL_OP.cntx_pop()
|| BL_OP.cntx_psh();
   BL_OP.index('UNIK');
   BL_OP.prefix();
   {? ~BL_OP.find_key(REF.FIRMA,_kh,'OBR',_wal,)
   || BL_OP.blank(1);
      BL_OP.FIRMA:=REF.FIRMA;
      BL_OP.KH:=_kh;
      BL_OP.TABELA:='OBR';
      BL_OP.REF:=_wal;
      BL_OP.WN:=_wn;
      BL_OP.MA:=_ma;
      BL_OP.add()
   || BL_OP.WN+=_wn;
      BL_OP.MA+=_ma;
      BL_OP.put()
   ?};
   BL_OP.cntx_pop()
?}


\obj_bl_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Zwraca obiekt do obsługi rozrachunków dla Businesslink
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('objBlOp')<=0
|| _vp_bl_op:=var_pres('BL_OP')>0;
   _obj:=obj_new(
      'KH',
      'DOKUM',
      'OBR',
      'send'
   );

:: Obsługa KH
   _obj.KH:=obj_new(
      'BL_OP',
      'cntx','first','next','get','size'
   );
   _obj.KH.BL_OP:=_vp_bl_op;
   _obj.KH.cntx:="
      {? .BL_OP
      || {? _a=1
         || BL_OP.cntx_psh()
         || BL_OP.cntx_pop()
         ?}
      ?}
   ";
   _obj.KH.first:="
      {? .BL_OP
      || BL_OP.index('SEND');
         BL_OP.prefix(REF.FIRMA,'KH','T',);
         {? BL_OP.first()
         || .get()
         ?}
      || KH.clear();
         KH.f_set('SKR','join KH_DOD','KH_DOD.EFAKTURA=\\\'B\\\'');
         KH.f_first()
      ?}
   ";
   _obj.KH.next:="
      {? .BL_OP
      || {? BL_OP.first()
         || .get()
         ?}
      || KH.f_next()
      ?}
   ";
   _obj.KH.get:="
      KH.prefix();
      KH.seek(BL_OP.KH)
   ";
   _obj.KH.size:="
      {? .BL_OP
      || BL_OP.size()
      || KH.f_size()
      ?}
   ";

:: Obsługa DOKUM
   _obj.DOKUM:=obj_new(
      'KH','BL_OP','WN','MA',
      'cntx','prefix','first','next','get'
   );
   _obj.DOKUM.BL_OP:=_vp_bl_op;
   _obj.DOKUM.cntx:="
      {? .BL_OP
      || {? _a=1
         || BL_OP.cntx_psh()
         || BL_OP.cntx_pop()
         ?}
      ?}
   ";
   _obj.DOKUM.prefix:="
      _kh:=.KH:=_a;
      {? .BL_OP
      || BL_OP.index('UNIK');
         BL_OP.prefix(REF.FIRMA,_kh,'DOKUM',)
      || DOKUM.index('BL');
         DOKUM.prefix('T',REF.FIRMA,'W')
      ?}
   ";
   _obj.DOKUM.get:="
      {? .BL_OP
      || DOKUM.use(ref_name(BL_OP.REF));
         DOKUM.prefix();
         {? DOKUM.seek(BL_OP.REF) & DOKUM.BL_GUID<>''
         || BL_OP.TO_SEND:='T';
            BL_OP.put();
            .WN:=BL_OP.WN;
            .MA:=BL_OP.MA;
            1
         ?}
      || {? DOKUM.REFSQL<>'' &
            ref_tab(DOKUM.REFSQL)=FAKS &
            DOKUM.BL_GUID<>'' &
            exec('FindAndGet','#table',FAKS,DOKUM.REFSQL,,\"FAKS.KH\",null())=.KH
         || _op:=exec('op_faks','businesslink3',DOKUM.REFSQL);
            .WN:=_op.WN;
            .MA:=_op.MA;
            obj_del(_op);
            1
         ?}
      ?}
   ";
   _obj.DOKUM.first:="
      {? .BL_OP
      || {? BL_OP.first()
         || {? .get()
            || 1
            || .next()
            ?}
         ?}
      || {? DOKUM.first()
         || {? .get()
            || 1
            || .next()
            ?}
         ?}
      ?}
   ";
   _obj.DOKUM.next:="
      {? .BL_OP
      || _ret:=0;
         {!
         |? {? BL_OP.next()
            || {? .get()
               || _ret:=1;
                  0
               || 1
               ?}
            ?}
         !};
         _ret
      || _ret:=0;
         {!
         |? {? DOKUM.next()
            || {? .get()
               || _ret:=1;
                  0
               || 1
               ?}
            ?}
         !};
         _ret
      ?}
   ";

:: Obsługa obrotów rozrachunków kontrahenta
   _obj.OBR:=obj_new(
      'WAL','BALANCE','KH',
      'cntx_psh','cntx_pop','prefix','first','next','get'
   );
   _obj.OBR.cntx_psh:="
      BL_OP.cntx_psh()
   ";
   _obj.OBR.cntx_pop:="
      BL_OP.cntx_pop()
   ";
   _obj.OBR.prefix:="
      _kh:=.KH;
      BL_OP.index('UNIK');
      BL_OP.prefix(REF.FIRMA,_kh,'OBR',)
   ";
   _obj.OBR.first:="
      {? BL_OP.first()
      || .get(); 1
      ?}
   ";
   _obj.OBR.next:="
      {? BL_OP.next()
      || .get(); 1
      ?}
   ";
   _obj.OBR.get:="
      .WAL:=BL_OP.REF;
      .BALANCE:=BL_OP.WN-BL_OP.MA
   ";

:: Pozostałe
   _obj.send:="
      _kh:=_a;
      {? var_pres('BL_OP')>0
      || BL_OP.cntx_psh();
         BL_OP.index('UNIK');
         BL_OP.prefix(REF.FIRMA,_kh,'KH',);
         {? BL_OP.first()
         || BL_OP.TO_SEND:='N';
            BL_OP.put()
         ?};
         BL_OP.index('SEND');
         BL_OP.prefix(REF.FIRMA,'DOKUM','T',_kh);
         {? BL_OP.first() || {! |? BL_OP.del !} ?};
         BL_OP.cntx_pop()
      ?}
   ";
   objBlOp:=_obj
|| _obj:=objBlOp
?};
_obj

:Sign Version 2.0 jowisz:1045 2024/01/17 10:40:06 1b5c08903743581abb41550db1110388d3c965f490dbfb780c69c36cc994deb3db4d068e1296802a349431358395319368ad62c4000c7702ee545f5d24ed5c27edb872d794b2d622b1391d8e83815e05ee48bca8193e773646df99507404f986e49987558de035cf05c600c89c5224def454588b96bd4841ab9f4718093e9be5
