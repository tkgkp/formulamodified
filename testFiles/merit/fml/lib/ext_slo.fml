:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: ext_slo.fml
:: Utworzony: 2001/04/26
:: Autor: GS
::======================================================================================================================
:: Zawartość: Funkcje obsługujące słowniki "przeciążone" programu KALI
::======================================================================================================================


\slownik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Procedura nadaje wartość zmiennej EDIT_VAR.SLO_TYP używanej do prefiksowania słownika dla tabeli SLO_TYP.
::       Formuła wykorzystywana jako formuła na wzorzec.
::   WE: _a [STRING] - Symbol słownika.
::   WY: ''
::  OLD: \ODDZUS/ext_slo.fml
::  OLD: \FORMNA/ext_slo.fml
::  OLD: \KASACH/ext_slo.fml
::  OLD: \STPWOJ/ext_slo.fml
::  OLD: \SZKOLA/ext_slo.fml
::  OLD: \SZK_TYP/ext_slo.fml
::  OLD: \ISOPIS/ext_slo.fml
::  OLD: \WIERZ/ext_slo.fml
::  OLD: \KOMORNIK/ext_slo.fml
::  OLD: \OKR_UZAS/ext_slo.fml
::  OLD: \UMZLEC/ext_slo.fml
::  OLD: \SZK_RODZ/ext_slo.fml
::  OLD: \RP7DANE/ext_slo.fml
::  OLD: \ZGL_TYP/ext_slo.fml
::  OLD: \WER_WYN/ext_slo.fml
::  OLD: \TYP_ZAP/ext_slo.fml
::  OLD: \POD_REAL/ext_slo.fml
::----------------------------------------------------------------------------------------------------------------------
EDIT_VAR.SLO_TYP:={? var_pres('_a')=type_of('') || _a || '???' ?};
''


\slownik_zus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła nadaje wartość zmiennej EDIT_VAR.KOD_DOK używanej do prefiksowania słownika S_ZUS.
::       Formuła wykorzystywana jako formuła na wzorzec.
::   WE: _a [STRING] - Rodzaj słownika.
::   WY: ''
::  OLD: \SZCHAR/kartprac.fml
::  OLD: \BLWN/kartprac.fml
::  OLD: \NZPR/kartprac.fml
::  OLD: \SZWA/kartprac.fml
::  OLD: \stpk/kali.fml
::  OLD: \__TTUB/war_tech.fml
::  OLD: \__PREM/war_tech.fml
::  OLD: \__STNP/war_tech.fml
::  OLD: \__KDSW/war_tech.fml
::  OLD: \tpid/war_tech.fml
::  OLD: \___KDCH/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
EDIT_VAR.KOD_DOK:={? var_pres('_a')=type_of('') || _a || '???' ?}; ''


\slo_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS
:: OPIS: Wyszukuje definicje typu słownika. Jeżeli typ słownika o podanym symbolu nie został odnaleziony, tworzony jest
::       odpowiedni zapis. Za określenie komentarza dla słownika odpowiedzialna jest funkcja "opis" tej biblioteki.
::   WE: [_a] [STRING] - Symbol typu słownika (jeżeli pominięty, to przyjmowana jest wartość pola EDIT_VAR.SLO_TYP).
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| EDIT_VAR.SLO_TYP:=_a
?};
_slo_typ:=EDIT_VAR.SLO_TYP;
{? +form(_slo_typ)
|| SLO_TYP.clear();
   SLO_TYP.index('SYMBOL');
   {? {? ~SLO_TYP.find_key(_slo_typ,_slo_typ)
      || SLO_TYP.SYMBOL:=_slo_typ;
         SLO_TYP.OPIS:=exec('opis','ext_slo',_slo_typ);
         SLO_TYP.add(1)
      ?}
   || SLO_TYP.ref()
   || SLO_TYP.ref()
   ?}
|| null()
?}


\opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS
:: OPIS: Ustawia opis dla typu słownika o podanym kodzie.
::   WE: [_a] [STRING] - Kod typu słownika.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || _a:='' ?};

{? _a='FORMNA'   || 'Forma naboru'
|? _a='JEZOB'    || 'Język obcy'
|? _a='JEZRTL'   || 'Język tłumaczeń'
|? _a='STZNAJ'   || 'Stopień znajomości języka'
|? _a='OKRDOK'   || 'Określenie dokumentacji'
|? _a='KASACH'   || 'Oddział NFZ'
|? _a='FUNDEM'   || 'Otwarty Fundusz Emerytalny'
|? _a='ODDZUS'   || 'Oddział ZUS'
|? _a='URZSKA'   || 'Urząd Skarbowy'
|? _a='ROZWUM'   || 'Tryb rozwiązania umowy o pracę'
|? _a='RP7DANE'  || 'Źródło informacji'
|? _a='STPWOJ'   || 'Stopień wojskowy'
|? _a='UMPRAC'   || 'Umowa o pracę'
|? _a='UMZLEC'   || 'Rodzaj umowy'
|? _a='KRAJ'     || 'Kraj'
|? _a='WOJEW'    || 'Województwo'
|? _a='POWIAT'   || 'Powiat'
|? _a='GMINA'    || 'Gmina'
|? _a='MIASTO'   || 'Miejscowość'
|? _a='NOTKA'    || 'Notatka'
|? _a='ISOPISZ'  || 'Świadczenia z ZFŚS'
|? _a='ISOPISP'  || 'Świadczenia pozostałe'
|? _a='KOMORNIK' || 'Dane komornika'
|? _a='WIERZ'    || 'Dane wierzyciela'
|? _a='ZAL'      || 'Typy załączników'
|? _a='PRZEDZAK' || 'Przedstawiciel zakładu'
|? _a='MIEJSCPR' || 'Miejsce pracy'
|? _a='TYPPOZ'   || 'Typ pełnionych obowiązków'
|? _a='PROFTYP'  || 'Rodzaj profilu'
|? _a='ZA_FORM'  || 'Status formularza'
|? _a='ZA_INSTR' || 'Rodzaj badania'
|? _a='ZA_INSTS' || 'Status badania'
|? _a='ZA_ZESTS' || 'Status szablonu'
|? _a='ZA_ZESTA' || 'Status ankiety'
|? _a='SZB_OROD' || 'Rodzaj budżetu'
|? _a='SZB_PROD' || 'Rodzaj pozycji'
|? _a='SZK_RODZ' || 'Rodzaj szkolenia'
|? _a='SZK_STYP' || 'Typ szkolenia'
|? _a='SZK_STAN' || 'Status szkolenia'
|? _a='SZK_MKS'  || 'Miara kosztów szkolenia'
|? _a='SZK_GRP'  || 'Kategoria szkolenia'
|? _a='SZK_PLAN' || 'Status planu szkoleń'
|? _a='ZGL_TYP'  || 'Typ zgłoszenia'
|? _a='WER_WYN'  || 'Wynik weryfikacji'
|? _a='ZZ_OSOBA' || 'Właściwości osób'
|? _a='STN_TYP'  || 'Typy stanowisk pracy'
|? _a='STP_FUNK' || 'Pełnione funkcje'
|? _a='TR_KOD'   || 'Trener własny/zewnętrzny'
|? _a='TYP_ZAP'  || 'Rodzaj wynikłego zapotrzebowania'
|? _a='LOKAL'    || 'Rodzaj lokalizacji'
|? _a='SKUTEK'   || 'Sposób weryfikowania skuteczności szkolenia'
|? _a='TYP_FORM' || 'Typ formuły'
|? _a='MOB_TYP'  || 'Typy mobilności'
|? _a='POD_REAL' || 'Realizacja na podstawie'
|? _a='ZP_DET'   || 'Rodzaj zmiany'
|? _a='ZP_OKR'   || 'Status planu'
|? _a='RP_OFE_S' || 'Status oferty'
|? _a='RP_OFE_R' || 'Rodzaj oferty'
|? _a='RP_OEST'  || 'Status'
|? _a='RP_OSET'  || 'Decyzja'
|? _a='RP_PROC'  || 'Status procesu'
|? _a='RP_PRET'  || 'Status etapu'
|? _a='SZKOLA'   || 'Szkoła / uczelnia'
|? _a='SZK_TYP'  || 'Typ szkoły'
|? _a='TYTULZ'   || 'Tytuł zawodowy'
|? _a='DZIEDZIN' || 'Dziedzina przyznania tytułu'
|? _a='AKTNAUK'  || 'Typ aktywności naukowej'
|? _a='GRUPPRAC' || 'Grupy pracowników'
|? _a='P_DODINF' || 'Typ dodatkowych informacji'
|? _a='P_ODDEL'  || 'Typ oddelegowania'
|? _a='LISTAT'   || 'Status listy płac'
|? _a='RZNIP'    || 'Rodzaj numeru identyfikacyjnego'
|? _a='RODZPRAC' || 'Rodzaj pracy'
|? _a='IMIE'     || 'Imię'
|? _a='CHARPRAC' || 'Charakter pracy'
|? _a='BADLEKT'  || 'Typ badania lekarskiego'
|? _a='OKR_UZAS' || 'Rodzaje umów na czas określony z uzasad.'
|? 7+_a='PROJWSK' || 'Projekty - wskaźnik nr '+(_a+1)
|? _a='ZA_TEST' || 'Rodzaj pytania'
|? _a='ZA_ZEST' || 'Typ ankiety'
|? _a='PPK_IF'   || 'Instytucja finansowa'
|? _a='PPK_RBL'  || 'Rodzaj komunikatu'
|? _a='OBYWATEL' || 'Obywatelstwo'
|? _a='ZAOM'     || 'Miejsca użycia załączników'
|? _a='AktOsobB' || 'Akta osobowe cz. B  [§ 3. 2)]'
|? _a='AktOsobC' || 'Akta osobowe cz. C  [§ 3. 3)]'
|? _a='DokP6p1'  || 'Czas pracy [§ 6. 1)]'
|? _a='TYPBLOBF' || 'Obraz firmy'
|? _a='P_STAT'   || 'Statusy dla pracownika'
|? _a='H_STAT'   || 'Status aneksu do umowy o pracę'
|? _a='FLD_FML'  || 'Rodzaj formuły pola'
|? _a='PPSFT'    || 'Typ pracy poza siedzibą firmy'
|? _a='GRUPWYN'  || 'Grupy wynagrodzeń'
|? _a='MET_REZ'  || 'Metody obliczania podstawy rezerw'
|? _a='WN_PODAT' || 'Wnioski - zwolniony podatek'
|? _a='RODZ_PL'  || 'Rodzaje płatników'
|? _a='ZERD_OKN' || 'Rodzaj okienka zestawów'
|? _a='PODP_OKN' || 'Podpowiedź w okienku'
|? _a='KOTLIMIT' || 'Stan trzeźwości'
|? _a='KOT_RODZ' || 'Rodzaj badania trzeźwości'
|? _a='KOT_URZA' || 'Urządzenia do badania trzeźwości'
|? _a='PPSF_TA'  || 'Typy adresów pracy zdalnej'
|? _a='NWOPO'    || 'Oświadczenia wniosków o urlop opiekuńczy'
|| _a+' (utworzony)'
?}


\slo_naz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Funkcja zwraca pozycję słownika SLO_NAZ wskazaną parametrami. Jeżeli pozycja nie została znaleziona
::       a parametr _c nie ma wartości 1, to zostanie utworzona.
::   WE:  _a  [STRING/REFERENCE] - Słownik (symbol lub wskazanie).
::        _b  [STRING]           - Nazwa pozycji.
::       [_c] [NUMBER]           - Pomijać tworzenie nowej pozycji? [0*/1]
::       [_d] [INTEGER]          - Czy zapis systemowy [0*/1] (domyślnie 0, które ustawi znacznik SYSTEM na 'N')
::   WY: Wskazanie znalezionego rekordu lub null().
::----------------------------------------------------------------------------------------------------------------------
_ret:=null();

{? var_pres('_a')=type_of('') & _a<>''
|| _typ:=exec('slo_typ','ext_slo',_a)
|? var_pres('_a')=type_of(_ret) & _a<>_ret & ref_tab(_a)=SLO_TYP
|| _typ:=_a
|| return(_ret)
?};

{? _typ=_ret
|| return(_ret)
?};

{? var_pres('_b')=type_of('') & _b<>''
|| _nazwa:=_b
|| return(_ret)
?};

_find_only:=var_pres('_c')=type_of(0) & _c;

_system:={? var_pres('_d')=type_of(0) & _d || 'T' || 'N' ?};

SLO_NAZ.cntx_psh();
SLO_NAZ.index('NAZWA');
SLO_NAZ.prefix(_typ,_nazwa,);
{? SLO_NAZ.first()
|| _put:=(~_find_only & SLO_NAZ.SYSTEM<>_system);
   {? _put
   || SLO_NAZ.SYSTEM:=_system;
      {? SLO_NAZ.put()
      || _ret:=SLO_NAZ.ref()
      ?}
   || _ret:=SLO_NAZ.ref()
   ?}
|? ~_find_only
|| SLO_NAZ.blank();
   SLO_NAZ.SLO_TYP:=_typ;
   SLO_NAZ.NAZWA:=_nazwa;
   SLO_NAZ.SYSTEM:=_system;
   {? SLO_NAZ.add()
   || _ret:=SLO_NAZ.ref()
   ?}
?};
SLO_NAZ.cntx_pop();
_ret


\lista
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS
:: OPIS: Wyświetla listę wyboru pozycji słownika o określonym typie. Funkcja może być wywołana tylko z akcji dla pola
::       (ze względu na wykorzystanie funkcji fld). Wykorzystywana głównie jako akcja na klawisz F3 dla pól tekstowych
::       jako lista wartości do wyboru (np: powiat, gmina, etc.).
::       UWAGA: argumenty _b.._d są ignorowane w przypadku obsługi tabeli OS_ADRES
::   WE:  _a  [STRING] - symbol typu słownika
::       [_b] [TABLE]  - alias tabeli: SLO_NAZ (domyślnie), SLO_KOD
::       [_c] [STRING] - akronim okna wertowania [domyślnie: WER]
::       [_d] [STRING] - akronim indeksu sortującego listę (domyślnie 'NAZWA')
::       [_e] [RULE]   - formuła na wartość zwracaną przy wyborze (domyślnie "SLO_NAZ.NAZWA")
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| EDIT_VAR.SLO_TYP:=_a
?};
_typ:=EDIT_VAR.SLO_TYP;

{? ((cur_tab(1,1)=OS_ADRES & -OS_ADRES.KRAJ().SYM='pl') | (cur_tab()=KST & -KST.KRAJ().SYM='pl')
   | var_pres('KRAJ',cur_tab()) & var_pres('SYM',KST.KRAJ()) & -KST.KRAJ().SYM='pl' | var_pres('GMINA',cur_tab())) &
   (_typ='WOJEW' | _typ='POWIAT' | _typ='GMINA' | _typ='MIASTO')
|| {? _typ='WOJEW'  || exec('f3_wojewodztwa','podz_admin')
   |? _typ='POWIAT' || exec('f3_powiaty','podz_admin')
   |? _typ='GMINA'  || exec('f3_gminy','podz_admin')
   |? _typ='MIASTO' || exec('f3_miasta','podz_admin')
   ?}

|| _SLO:={? var_pres('_b')=type_of(SYSLOG) & (_b=SLO_NAZ | _b=SLO_KOD) || _b || SLO_NAZ ?};
   _ws:={? var_pres('_c')=type_of('') || _c || 'WER' ?};
   _key:={? var_pres('_d')=type_of('') & _d<>'' || _d || 'NAZWA' ?};
   _val:={? var_pres('_e')=type_of("") || _e || "SLO_NAZ.NAZWA" ?};

   _ret:='';
   SLO_TYP.cntx_psh();
   {? _ref:=exec('slo_typ','ext_slo',_typ)
   || _SLO.index(_key);
      _SLO.prefix(_ref);
      _SLO.find_key(fld);
      _SLO.win_sel(_ws);
      {? _SLO.select(,1)
      || _ret:=_val()
      ?}
   ?};
   SLO_TYP.cntx_pop();
:: Przywrócenie wartości zmienionej przez \slo_typ
   EDIT_VAR.SLO_TYP:=SLO_TYP.SYMBOL;
   _ret
?}


\edit_var_kod_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła na wartość początkową pola S_ZUS.RODZAJ oraz G.R
::  OLD: \s_zus_rd_kd/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
EDIT_VAR.KOD_DOK


\kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Wyszukuje kod o podanym typie i symbolu.
::   WE: _a [STRING] - symbol typu
::       _b [STRING] - symbol kodu
::   WY: wskazanie na znaleziony kod lub null gdy kodu nie udało się odszukac
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') & |_a='' || return(null) ?};
{? var_pres('_b')<>type_of('') & |_b='' || return(null) ?};

SLO_KOD.index('KOD');
SLO_KOD.prefix(exec('slo_typ','ext_slo',_a));
{? SLO_KOD.find_key(_b,_b)
|| SLO_KOD.ref
|| null
?}


\kod_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Wyszukuje kod o podanym typie i symbolu, jeśli wyszukanie nie powiodło się, to tworzony jest nowy zapis.
::   WE: _a [STRING/REFERENCE] - Symbol lub wskazanie (zalecane ze względu na wydajność) typu.
::       _b [STRING]           - Symbol kodu.
::       _c [STRING]           - Opis kodu.
::       _d [NUMBER]           - Czy zapis systemowy?
::                               0 - Nie.
::                               1 - Tak [domyślnie].
::   WY: wskazanie na znaleziony kod lub null gdy kodu nie udało się odszukać
::----------------------------------------------------------------------------------------------------------------------
_typ:=
   {? var_pres('_a')=type_of('') & +|_a || exec('slo_typ','ext_slo',_a)
   |? var_pres('_a')=type_of(null) & _a || _a
   || null
   ?};

{? ~_typ | var_pres('_b')<>type_of('') | _b='' | var_pres('_c')<>type_of('') | _c=''
|| return(null)
?};

SLO_KOD.index('KOD');
SLO_KOD.prefix(_typ);
{? SLO_KOD.find_key(_b,_b)
|| SLO_KOD.ref()
|| SLO_KOD.blank(1);
   SLO_KOD.SLO_TYP:=_typ;
   SLO_KOD.KOD:=_b;
   SLO_KOD.NAZWA:=_c;
   SLO_KOD.SYSTEM:={? var_pres('_d')=type_of(0) || {? _d || 'T' || 'N' ?} || 'T' ?};
   {? SLO_KOD.add(1)
   || SLO_KOD.ref()
   || null
   ?}
?}


\slo_x_x_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed wyświetleniem okien tabel wykorzystujących SLO_TYP.
::       Ustala tytuł wskazanej kolumny zgodnie z opisem typu słownika.
::   WE: _a [TABLE] - alias tabeli tabeli
::       _b [STRING] - akronim kolumny z nazwą (domyślnie 'NAZWA')
::       _c [STRING] - akronim kolumny ze wskazaniem SLO_TYP (domyślnie 'SLO_TYP')
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_TAB:=_a;
_col:={? var_pres('_b')<>type_of('') | _b='' || 'NAZWA' || _b ?};
_dic:={? var_pres('_c')<>type_of('') | _c='' || 'SLO_TYP' || _c ?};

_txt:=MS.name(_TAB,_col);

SLO_TYP.cntx_psh();
_ref:=_TAB.fld_fml(_dic,'*BLANK')();
{? SLO_TYP.seek(_ref,,1)
|| _txt:=SLO_TYP.OPIS
?};
SLO_TYP.cntx_pop();

_TAB.fld_opt(cur_win(1,1),'col_name=%1'[_txt],,_col);
1


\slo_kod_webwyb1_wybierz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.02]
:: OPIS: Obsługa akcji "Wybierz - po" w oknie WEBWYB1 tabeli SLO_KOD.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
web_params_set(_par:=web_params_get());
{? obj_ntab(_par) & var_pres('SLO_KOD_WEBWYB1_WYBIERZ_A',_par)=type_of("")
|| _par.SLO_KOD_WEBWYB1_WYBIERZ_A()
?};
~~


\wybierz_kody
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.02]
:: OPIS: Wybór kodów ze słownika danego typu.
::   WE: _a [STRING/_SLO_TYP] - określenie typu słownika
::       _b [INTEGER] - wybór pojedyńczego kodu: 1 - tak, wpp - wybór wielu kodów
::       _c [STRING] - kod, na którym ustawić kursor
::   WY: wskazanie na tablicę nazwaną o polach:
::       WYBOR [TABLE] - alias tabeli zawierającej wybrane kody, struktura:
::          KOD [STRING[8]] - wybrany kod
::          REF [STRING[16]] - wskazanie wiersza tabeli SLO_KOD
::       OK [INTEGER] - 0/1 nie wybrano/wybrano jakikolwiek wiersz
::----------------------------------------------------------------------------------------------------------------------
: wartość zwracana
_ret:=obj_new('WYBOR','OK');
: tabela wybranych kodów
_ret.WYBOR:=tab_tmp(1,
   'KOD','STRING[8]',,
   'REF','STRING[16]',
);
: dokonany wybór
_ret.OK:=0;

_slo_typ:=null;
{? var_pres('_a')=type_of('')
:  typ słownika określony kodem
|| _slo_typ:=exec('slo_typ','ext_slo',_a);
   {? _slo_typ=null
   || return(_ret)
   ?}

|? var_pres('_a')=type_of(null) & _a<>null
:  typ słownika podany wskazaniem
|| {? ref_tab(_a)=SLO_TYP
   || _slo_typ:=_a
   || return(_ret)
   ?}

|| return(_ret)
?};

: przekazanie tabeli do formuły wyboru
params_set('WYBOR',_ret.WYBOR);

_fml:="
   _TAB:=cur_tab(1,1);
   _WYBOR:=params_get().WYBOR;
   _WYBOR.KOD:=_TAB.KOD;
   _WYBOR.REF:=_TAB.REF;
   _WYBOR.add();
   sel_exit()
";

_KOD:=sql(
   'select SLO_KOD.NAZWA as NAZWA, SLO_KOD.KOD as KOD, SLO_KOD.REFERENCE as REF '
   'from SLO_KOD '
   'where SLO_KOD.SLO_TYP=:_a '
   'order by 2',
   _slo_typ
);

_tytul:='';
SLO_TYP.cntx_psh();
SLO_TYP.prefix();
{? SLO_TYP.seek(_slo_typ)
|| _tytul:=SLO_TYP.OPIS
?};
SLO_TYP.cntx_pop();

_LEN:=sql('select max(char_length(:_a.KOD)) as KOD, max(char_length(:_a.NAZWA)) as NAZWA from :_a',_KOD);
{? _LEN.first()=0
|| _LEN.KOD:=3;
   _LEN.NAZWA:=20;
   _LEN.add()
|| {? _LEN.NAZWA>60
   || _LEN.NAZWA:=60;
      _LEN.put()
   ?}
?};

_win:=_KOD.mk_sel(_tytul,,,'#_kod_%1'[$_slo_typ+8],,,10,,'U');
_KOD.win_sel(_win);
_KOD.win_fld(_win,,'KOD',,,_LEN.KOD,,,'Kod'@,,exec('fldComment','#field',SLO_KOD,'KOD'));
_KOD.win_fld(_win,,'NAZWA',,,_LEN.NAZWA,,,'Nazwa'@,,exec('fldComment','#field',SLO_KOD,'NAZWA'));
_KOD.win_act(_win,,'Formuła','Wybierz'@,,,_fml,,1,(var_pres('_b')<>type_of(0) | ~_b));

: wybór kodów
{? var_pres('_c')=type_of('') & _c<>''
|| _KOD.find_key(_c,)
|| _KOD.first()
?};
_ret.OK:=_KOD.select(,1);

_ret


\wybierz_nazwy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Formuła pozwala na wybór pozycji słownika SLO_NAZ.
::   WE:  _a  [STRING/_SLO_TYP] - wskazanie typu słownika
::       [_b] [INTEGER] - wybór tylko jednej pozycji [0*/1]
::       [_c] [STRING] - nazwa, na której ustawić kursor
::       [_d] [RULE] - alternatywna formuła ograniczenia dziedziny, do formuły przekazany zostanie argument _a będący
::            wskazaniem typu słownika
::       [_e] [STRING] - tytuł okna wyboru (wertowania) [domyślnie: opis słownika].
::   WY: Tablica elementów nazwanych:
::          OK    [INTEGER]   - Pole informujące o dokonaniu/niedokonaniu wyboru [0/1].
::          WYBOR [TABLE]     - Tabela z wybranymi pozycjami:
::             NAZWA [STRING] - Nazwa.
::             REF   [STRING] - SQL-ref.
::----------------------------------------------------------------------------------------------------------------------
: wartość zwracana
_ret:=obj_new('WYBOR','OK');
: tabela wybranych kodów
_ret.WYBOR:=tab_tmp(1,
   'NAZWA','STRING[%1]' [$MS.fld_len(SLO_NAZ,'NAZWA')],,
   'REF','STRING[16]',
);
: dokonany wybór
_ret.OK:=0;

_slo_typ:=null();
{? var_pres('_a')=type_of('')
:  typ słownika określony kodem
|| _slo_typ:=exec('slo_typ','ext_slo',_a);
   {? _slo_typ=null()
   || return(_ret)
   ?}

|? var_pres('_a')=type_of(null()) & _a<>null()
:  typ słownika podany wskazaniem
|| {? ref_tab(_a)=SLO_TYP
   || _slo_typ:=_a
   || return(_ret)
   ?}

|| return(_ret)
?};

_single:=var_pres('_b')=type_of(0) & _b;

params_set('WYBOR',_ret.WYBOR);

SLO_NAZ.cntx_psh();
{? var_pres('_d')<>type_of("")
|| "  SLO_NAZ.index('NAZWA');
      SLO_NAZ.prefix(_a)
   "
|| _d
?}(_slo_typ);

_title:={? var_pres('_e')=type_of('') || _e || exec('FindAndGet','#table',SLO_TYP,_slo_typ,,"OPIS",'Słownik nazw'@) ?};
::tworzymy okienko
_wer:=SLO_NAZ.mk_sel(_title,,0,'#slonaz20140527',,,,,'U');
SLO_NAZ.win_act(_wer,0,'Formuła','&Wybierz'@@,,,
   "  _WYBOR:=params_get().WYBOR;
      _WYBOR.blank();
      _WYBOR.NAZWA:=SLO_NAZ.NAZWA;
      _WYBOR.REF:=$SLO_NAZ.ref();
      _WYBOR.add()
   ",
   "sel_exit()",
   1,
   ~_single,,,
   'W'
);
:: Tabela SLO_NAZ ma właściwie jedno pole. Okno redagowania jest tylko kłopotem (np. jeśli chodzi o tytuł). Dlatego
:: rezygnujemy z okna redagowania.
SLO_NAZ.win_edit();

: wybór nazw
{? var_pres('_c')=type_of('') & _c<>''
|| {? SLO_NAZ.f_active()
   || SLO_NAZ.f_find(_c,)
   || SLO_NAZ.find_key(_c,)
   ?}
|| {? SLO_NAZ.f_active()
   || SLO_NAZ.f_first()
   || SLO_NAZ.first()
   ?}
?};

SLO_NAZ.win_fld(_wer,,'NAZWA',,,50);
SLO_NAZ.win_sel(_wer);
{? SLO_NAZ.select(,1)
|| _ret.OK:=1
?};
SLO_NAZ.cntx_pop();

_ret


\slo_kod_fml_val
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła pozwala wybrać akronim słownika kodów.
::       Formuła wykorzystywana jako argument atrybutu 'fml_val' parametru czynności.
::   WE:  _a  [STRING]    - Typ słownika [SLO_TYP.SYMBOL].
::       [_b] [REFERENCE] - Wskazanie bieżącej pozycji słownika [SLO_KOD.ref()].
::   WY: Wskazanie wybranej pozycji lub ~~.
::----------------------------------------------------------------------------------------------------------------------
_typ:=obj_new('ref','SYMBOL','OPIS');
_typ.ref:=null();
{? var_pres('_a')=type_of('')
|| SLO_TYP.cntx_psh();
   SLO_TYP.index('SYMBOL');
   SLO_TYP.prefix(_a,);
   {? SLO_TYP.first()
   || _typ.ref:=SLO_TYP.ref();
      _typ.SYMBOL:=SLO_TYP.SYMBOL;
      _typ.OPIS:=SLO_TYP.OPIS
   ?};
   SLO_TYP.cntx_pop()
?};
{? _typ.ref=null()
|| return()
?};

_in:={? var_pres('_b')=type_of(null()) & _b<>null() & ref_tab(_b)=SLO_KOD || _b || null() ?};

SLO_KOD.cntx_psh();
SLO_KOD.index('KOD');
SLO_KOD.prefix(_typ.ref);
_dh:=SLO_KOD.size();
{? _dh<5
|| _dh:=5
|? _dh>30
|| _dh:=30
?};
_ws:=SLO_KOD.mk_sel(_typ.OPIS,'N',,'slo_kod_fml_val',,,_dh,,'U');
SLO_KOD.win_fld(_ws,,'KOD',,,,,,,,MS.comment(SLO_KOD,'KOD'));
SLO_KOD.win_fld(_ws,,'NAZWA',,,40,,,,,MS.comment(SLO_KOD,'NAZWA'));
SLO_KOD.win_fld(_ws,,'SYSTEM',,,-3,,,,,MS.comment(SLO_KOD,'SYSTEM'),2,,"'T'","'N'");
SLO_KOD.win_act(_ws,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
SLO_KOD.win_sel(_ws);
SLO_KOD.seek(_in);
_ret:=
   {? SLO_KOD.select(,1,-1)
   || SLO_KOD.ref()
   || _in
   ?};
SLO_KOD.cntx_pop();

_ret


\slo_kod_fml_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła eksportująca wartość parametru typu _SLO_KOD.
::   WE: _a [REFERENCE] - Wskazanie pozycji słownika [SLO_KOD.ref()].
::   WY: Treść formuły do wykonania podczas importu.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) & _a<>null() & ref_tab(_a)=SLO_KOD
|| _slo_kod:=_a
|| return('')
?};

_fml:='';
SLO_TYP.cntx_psh();
SLO_TYP.prefix();
SLO_KOD.cntx_psh();
SLO_KOD.prefix();
{? SLO_KOD.seek(_slo_kod)
|| _fml:=exec('formulizer_clean','#b_export',
      'exec(\'kod\',\'ext_slo\',\'%1\',\'%2\')' [SLO_KOD.SLO_TYP().SYMBOL,SLO_KOD.KOD]
   )
?};
SLO_KOD.cntx_pop();
SLO_TYP.cntx_pop();
_fml


\wybierz_adres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wybór dowolnego adresu lub adresy określonego typu
::   WE:  _a  [STRING/_SLO_TYP] - wskazanie typu słownika
::       [_b] [_ADRES] - adres, na którym ustawić kursor
::   WY: wskazanie adresu lub null
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_slo_typ:=null;
_ref:=null;

{? var_pres('_a')=type_of('')
:  typ słownika określony kodem
|| _slo_typ:=exec('slo_typ','ext_slo',_a);
   {? _slo_typ=null
   || return(null)
   ?}

|? var_pres('_a')=type_of(null) & _a<>null
:  typ słownika podany wskazaniem
|| {? ref_tab(_a)=SLO_TYP
   || _slo_typ:=_a
   || return(null)
   ?}
?};

{? var_pres('_b')=type_of(null) & _b<>null & ref_tab(_b)=ADRES
:: podano adres, na którym należy ustawić kursor
|| _ref:=_b
?};

_ret:=null;
ADRES.cntx_psh();
ADRES.clear();
{? _slo_typ<>null
|| ADRES.index('SYMBOL');
   ADRES.prefix(_slo_typ);
   ADRES.index('ADRES');
   ADRES.prefix(_slo_typ);
   ADRES.win_sel('WYB');
   ADRES.win_edit('RED');
   ADRES.seek(_ref);
   {? ADRES.select(,1)
   || _ret:=ADRES.ref()
   ?}

|| SLO_TYP.cntx_psh();
   SLO_TYP.clear();
   SLO_TYP.f_set('OPIS',,'SYMBOL in ('
      '\'KOMORNIK\',\'WIERZ\',\'SZKOLA\','
      '\'KASACH\',\'FUNDEM\',\'ODDZUS\',\'URZSKA\',\'PPK_IF\''
   ')');
   ADRES.index('SYMBOL');
   ADRES.prefix(null);
   ADRES.index('ADRES');
   ADRES.prefix(null);
   ADRES.index('ADRES_X');
   ADRES.win_sel('WYB_X');
   ADRES.win_edit('RED_X');
   ADRES.seek(_ref);
   {? ADRES.select(,1)
   || _ret:=ADRES.ref()
   ?};
   SLO_TYP.cntx_pop()
?};
ADRES.cntx_pop();

_ret


\init_fld_fml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Uzupełnia zawartość słownika FLD_FML.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_typ:=exec('slo_typ','ext_slo','FLD_FML');
{? _typ=null
|| return()
?};

exec('kod_ref','ext_slo',_typ,'PT','Wzorzec');
exec('kod_ref','ext_slo',_typ,'BL','Wartość początkowa');
exec('kod_ref','ext_slo',_typ,'BD','Przed wyświetleniem');
exec('kod_ref','ext_slo',_typ,'BE','Przed redagowaniem');
exec('kod_ref','ext_slo',_typ,'F3','Wybór F3');
exec('kod_ref','ext_slo',_typ,'AE','Po redagowaniu');
~~


\kod_storno
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zwraca kod właściwy dla storno listy.
::   WE:
::   WY: kod w słowniku
::----------------------------------------------------------------------------------------------------------------------
'STORNO'


\ref_storno
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zwraca wskazanie wiersza tabeli SLO_KOD właściwego dla kodu 'STORNO'
::   WE:
::   WY: wskazanie wiersza lub null
::----------------------------------------------------------------------------------------------------------------------
exec('kod_ref','ext_slo','LISTAT',exec('kod_storno','ext_slo'),'Storno składników listy płac')


\slo_naz_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli SLO_NAZ.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('slo_naz_chk','ext_slo',0)


\slo_naz_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli SLO_NAZ.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('slo_naz_chk','ext_slo',1)
|| {? exec('lic','#b_domain','PEP')
   || exec('zasw_nazw','portal_paperless')
   ?};
   1
?}


\slo_naz_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli SLO_NAZ.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

{? bfld('NAZWA')<>SLO_NAZ.NAZWA
|| {? exec('lic','#b_domain','POR')
   || SLO_TYP.cntx_psh();
      SLO_TYP.prefix();
      _typ:=SLO_NAZ.SLO_TYP().SYMBOL;
      SLO_TYP.cntx_pop();
      {? _typ='JEZOB'
      || exec('idput_ndx','#table',ZJ,'S1',SLO_NAZ.ref())
      |? _typ='STZNAJ'
      || exec('idput_ndx','#table',ZJ,'SZ',SLO_NAZ.ref())
      ?}
   ?}
?};

~~


\slo_naz_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli SLO_NAZ.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(SLO_NAZ
   ,$("_a.table(_b,"+$_put+",,'SLO_TYP','NAZWA','SYSTEM')")
   ,"_a.in_set(_b,'SYSTEM',,'T','N')"
   ,$("_ret:='';
      SLO_TYP.cntx_psh();
      SLO_TYP.prefix();
      {? SLO_NAZ.SLO_TYP().DL_NAZ & SLO_TYP.DL_NAZ<+SLO_NAZ.NAZWA
      ||  _ret:=_a.err_fld(_b,'NAZWA',1
            ,'"+
               'Maksymalna liczba znaków w polu (%1) została przekroczona (%2).'@[$SLO_TYP.DL_NAZ,$(+SLO_NAZ.NAZWA)]+"'
         )
      ?};
      SLO_TYP.cntx_pop();
      _ret
   ")
)


\init_wnd_type
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [23.25]
:: OPIS: Uzupełnia zawartość słownika ZERD_OKN.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_typ:=exec('slo_typ','ext_slo','ZERD_OKN');
{? _typ=null
|| return()
?};

exec('kod_ref','ext_slo',_typ,'WER','wertowanie');
exec('kod_ref','ext_slo',_typ,'WYB','wybór');
exec('kod_ref','ext_slo',_typ,'RED','redakcja');
exec('kod_ref','ext_slo',_typ,'WZO','wzorzec');
~~


:Sign Version 2.0 jowisz:1045 2023/07/21 13:25:28 829cbdabaa3a67f334cd043d9b035134e4a74783592dd5c945273a7c260b159d3bec4990a6fb047505f40583efcf4aa1cbe59355540359535c974fe699d3d329893fa7dfe9d0289eb55df073cf87472140b6fd708f5c9430801737458e50313215ec3d61ab3317b55a2b73759f8e9820fdb98b4597f8afee34214848ac388840
