:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: material.fml
:: Utworzony: 26.03.2015
:: Autor: TS
::======================================================================================================================
:: Zawartość: Obsługa materiałów - część bibioteczna
::======================================================================================================================


\slo_m_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: ustawia okienka dla słownika materiałów
::   WE:  _a  - rodzaj 'T' - materiał, 'U' - usługa np. POMOC.RODZ
::       [_b] - czy ze stanami 0-tak 1-nie (tylko gdy _a=T)
::       [_c] - w jakim module - M - magazyn P - produkcja
::              jeżeli brak parametru, to wg uruchomionego systemu (EMAG, PROD)
::       [_d] - wyróżniki akcji do usunięcia (jak w metodzie actions)
::       [_e] - domyślne wyróżniki akcji (jak w metodzie actions)
::  OLD: \slo_m_ok/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')=type_of(0)  || _stany:=_b || _stany:=1 ?};
{? var_pres('_d')=type_of('') || _hidden:=_d || _hidden:='' ?};
{? var_pres('_e')=type_of('') || _default:=_e || _default:='' ?};

{? _a='T'
|| _wer:='NL_WER'+{? _stany || '' || 'ST' ?};
   M.win_sel(_wer);
   M.win_dict(_wer);
   M.actions(_wer,_hidden,_default);
   M.btn_sopt(_wer,'INDEKS_ADD','default=0')
|| M.win_sel('NL_WERU');
   M.win_dict('NL_WERU');
   M.actions('NL_WERU',_hidden,_default);
   M.btn_sopt('NL_WERU','INDEKS_ADD','default=0')
?};
''


\filter
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2006]
:: OPIS: Aktywuje ograniczenie dziedziny dla słownika materiałów (bez uslug) przed wywołaniem przez F3
::   WE: _a - Sposób ograniczania dziedziny - ciąg znaków identyfikujących zawartość pola M.R (W,P,S,H)
::            Dozwolone wartości: 'PS' albo 'WP'
::  OLD: \filter/ptowary.fml
::----------------------------------------------------------------------------------------------------------------------
_rodz:=_a;

:: Sprawdzam dozwolone wartości argumentów
{? _rodz<>'PS' & _rodz<>'WP'
|| FUN.wdrerror('Nieprawidłowa wartość argumentu _a w formule filter/material.fml'@)
?};

::M.clear();
FILTER.T_WPM:=_a;
POMOC.RODZ:='T';
ZAKR.MATU:='A';
{? _rodz='PS'
|| ZAKR.R_PROD:='N';
   ZAKR.R_KOMP:='T'
|? _rodz='WP'
|| ZAKR.R_PROD:='T';
   ZAKR.R_KOMP:='N'
?};

:: Zabieram akcje z okna słownika M, które w tym kontekście nie mają sensu i powodują problemy
::M.actions('WER_PROD','NRYZ:NRYZ');
::M.hdr_sel();
~~


\filter_clear
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.41]
:: OPIS: Sprzata ograniczenia dziedziny dla słownika materiałów
::  OLD: \filter_clear/ptowary.fml
:: DOST: PUBLIC
::----------------------------------------------------------------------------------------------------------------------
::M.clear();
::M.actions('WER_PROD');
ZAKR.R_PROD:='';
ZAKR.R_KOMP:='';
~~


\wpm_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Ustawia opis okna selekcji materiałów - wg aktualnego sposobu ograniczenia dziedziny
::   WE: [_a] - opis wg podanego "filtra" WPS; jeżeli brak parametru, to wg pól ZAKR.R_KOMP, ZAKR.R_PROD
::       [_b] - dodatkowy opis w oknie
::  OLD: \wpm_opis/ptowary.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') || _wps:=_a || _wps:='###' ?};
{? var_pres('_b')=type_of('') || _dod:=_b || _dod:='' ?};

_opis:='';

{? M.win_sel('?')='WER_O'
|| _opis:={? POMOC.RODZ='T' || ' '+'materiałów'@ || ' '+'usług'@ ?}

|? _wps='###'
|| {? ZAKR.R_KOMP='T'
   || _opis:=' (%1, %2)'['surowce'@,'półprodukty'@]
   |? ZAKR.R_PROD='T'
   || _opis:=' (%1, %2)'['półprodukty'@,'wyroby'@]
   ?}

|| _opis:=' (';
   {? _a*'S'<>0
   || _opis+='surowce'@
   ?};
   {? _a*'P'
   || _onc:=_opis<>' (';
      _opis+={? _onc || ', ' || '' ?}+'półprodukty'@
   ?};
   {? _a*'W'
   || _onc:=_opis<>' (';
      _opis+={? _onc || ', ' || '' ?}+'wyroby'@
   ?};
   _opis+=')'

?};

_opis:=_opis+_dod;

M.hdr_sel();
M.hdr_sel(_opis);
~~


\zakr_naz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Tłumaczy ZAKR.MATU na zrozumiały napis
::   WE: _a - zwykle ZAKR.MATU
::   WY: napis
::  OLD: \zakr_naz/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='A'
|| _nazwa:='aktywne'@
|? _a='N'
|| _nazwa:='nieaktywne'@
|| _nazwa:='wszystkie'@
?};
_nazwa


\m_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: stawka VAT dla kontrahenta i materialu
::   WE: _a - M.ref() material
::       _b - KH.ref() kontrahent
::       [_c] - 1-eksport, 0-wpp
::       _d - rok do ustalenia stawki VAT
::       _e - miesiac do ustalenia stawki VAT
::       _f - stawka VAT
::       _g - =1-zwracac stawke _f, =2-warunkowo zwracac stawke _f
::       _h - komunikat o dzialaniu funkcji
::       _i - [S]przedaż/[Z]akup
::       _j - KRAJE.ref()
::   WY: SLO.ref() - stawka VAT
::  OLD: \m_vat/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_mat:=_a;
_kh:=_b;
{? var_pres('_c')<>type_of(1) || _c:=0 ?};
{? var_pres('_d')<>type_of(1) | _d=0 || _d:=date()~1 ?};
{? var_pres('_e')<>type_of(1) | _e=0 || _e:=date()~2 ?};
{? var_pres('_f')<>type_of(null) || _f:=null ?};
{? var_pres('_g')<>type_of(1) || _g:=0 ?};
{? var_pres('_h')<>type_of('a') || _h:='' ?};
_sz:={? var_pres('_i')=type_of('') || _i || 'S' ?};
_kraj_vat:={? var_pres('_j')=type_of(null()) || _j || BEER.KRAJ_VAT ?};
{? _kraj_vat=null()
||
   SLO.cntx_psh();
   _kraj_vat:={? KSTE.KRAJ || KSTE.KRAJ().KOD || INFO.KRAJ().KOD ?};
   SLO.cntx_pop();
   _kraj_vat:=exec('FindInSet','#table','KRAJE','KODISO',_kraj_vat,,,1,,null())
?};

{? _kraj_vat=null() || return(null()) ?};
_kraj_vat_kod:=exec('FindAndGet','#table',KRAJE,_kraj_vat,,"KRAJE.KODISO",'');

_wyn:=null;
_kom:=_g=2;
_ktm:='';
:: funkcja sprawdza czy stawka należy do słownika kraju
_sv_w_slo_kraj_vat:="
   _sv:=_a;
   _kraj_vat_kod:=_b;
   exec('FindAndGet','#table',SLO,_sv,,\"
      _kod:=_b;
      @.SLU.cntx_psh();
      _return:=gsub(SLO.SLU().NAZ,'~STAWKI VAT ','')=_kod;
      @.SLU.cntx_pop();
      _return
   \",0,_kraj_vat_kod)
";
:: _stv_kraj_vat=
::    0 - stawka _f nie znajduje się w słowniku stawek vat _kraj_vat
::    1 - stawka _f znajduje się w słowniku stawek vat _kraj_vat
_stv_kraj_vat:={? _f=null() || 1 || _sv_w_slo_kraj_vat(_f,_kraj_vat_kod) ?};
:: dodac parametr czy wyznaczac stawke VAT wg historii
{? _g=2 || _g:='T|B'*exec('get','#params',100320,2) ?};
{? _g & _f<>null
   | ~_stv_kraj_vat
   | _c & _kraj_vat_kod<>KSTE.KRAJ().KOD
||
   _wyn:=_f

|? _c & _kraj_vat_kod=KSTE.KRAJ().KOD
||
:: eksport, wdt
   SLU.cntx_psh(); SLO.cntx_psh();
   SLU.index('NAZ');
   SLO.index('SL');
   SLU.prefix();
   {? SLU.find_key('~STAWKI VAT '+_kraj_vat_kod)
   || SLO.prefix(SLU.ref,' 0 %'); {? SLO.first() || _wyn:=SLO.ref() ?}
   ?};
   SLU.cntx_pop(); SLO.cntx_pop()

|? exec('FindAndGet','#table',M,_mat,,"M.OO='T'",0)
   & KSTE.KRAJ().KOD='PL'
   & (_params:=obj_new('KH','M','SZ');
      _params.KH:=_kh;
      _params.M:=_mat;
      _params.SZ:=_sz;
      _war:=exec('get','#params',100323,3)(_params);
      _war<>~~ & _war)
||
:: stawka odwrotne obciążenie
   SLU.cntx_psh(); SLO.cntx_psh();
   SLU.index('NAZ');
   SLO.index('SL');
   SLU.prefix();
   {? SLU.find_key('~STAWKI VAT PL')
   ||
      SLO.prefix(SLU.ref,' -o'); {? SLO.first() || _wyn:=SLO.ref() ?}
   ?};
   SLU.cntx_pop(); SLO.cntx_pop()
||
   M.cntx_psh();
   M.prefix();
   {? M.seek(_mat)
   ||
      {? _sv_w_slo_kraj_vat(M.VAT,_kraj_vat_kod)
      ||
         _wyn:=M.VAT;
         _ktm:=M.KTM
      ?};
      {? _kraj_vat_kod=INFO.KRAJ().KOD
      ||
:: wg historii stawek vat M_SV
         M_SV.cntx_psh;
         M_SV.index('OD');
         M_SV.prefix('0',_mat);
         {? M_SV.last
         ||
            _ok:=1;
            {!
            |?
               {? M_SV.OD~1<_d | M_SV.OD~1=_d & M_SV.OD~2<=_e || _ok:=0; _wyn:=M_SV.VAT ?};
               _ok & M_SV.prev
            !};
::       rok wczesniejszy od pierwszego zdefiniowanego w systemie
            {? _ok || _wyn:=M_SV.VAT ?}
         ?};
         M_SV.cntx_pop
      ||
:: wg historii stawek vat krajów M_SV_K
         M_SV_K.cntx_psh;
         M_SV_K.index('OD');
         M_SV_K.prefix('0',_mat,_kraj_vat);
         {? M_SV_K.last
         ||
            _ok:=1;
            {!
            |?
               {? M_SV_K.OD~1<_d | M_SV_K.OD~1=_d & M_SV.OD~2<=_e || _ok:=0; _wyn:=M_SV_K.VAT ?};
               _ok & M_SV_K.prev
            !};
::       rok wczesniejszy od pierwszego zdefiniowanego w systemie
            {? _ok || _wyn:=M_SV_K.VAT ?}
         ?};
         M_SV_K.cntx_pop
      ?};
      _rr:=_sz='Z' & exec('FindAndGet','#table',KH,$_kh,,"KH.TYP='R'",0);
      {? _rr
      ||
         _rr:=0;
         _sv:=exec('get_par','#parametr',144);
         {? _sv<>''
         ||
            SLU.cntx_psh();
            SLU.index('NAZ');
            SLU.prefix();
            SLU.find_key('~STAWKI VAT PL');
            SLO.cntx_psh();
            SLO.index('SL');
            SLO.prefix(SLU.ref,_sv);
            {? SLO.first()
            ||
               {? _sv_w_slo_kraj_vat(SLO.ref(),_kraj_vat_kod)
               ||
                  _wyn:=SLO.ref();
                  _rr:=1
               ?}
            ?};
            SLO.cntx_pop();
            SLU.cntx_pop()
         ?}
      ?};
      {? ~_rr
      ||
         M_KH_SV.cntx_psh;
         M_KH_SV.index('M_KH');
         M_KH_SV.prefix(_mat,_kh);
         {? M_KH_SV.first()
         ||
            {? _sv_w_slo_kraj_vat(M_KH_SV.SV,_kraj_vat_kod) || _wyn:=M_KH_SV.SV ?}
         ||
::          sprawdza czy jest ustawiona domyślna stawka VAT kontrahenta
            M_KH_SV.index('KH');
            M_KH_SV.prefix('T',_kh);
            {? M_KH_SV.first()
            || {? _sv_w_slo_kraj_vat(M_KH_SV.SV,_kraj_vat_kod) || _wyn:=M_KH_SV.SV ?}
            ?}
         ?};
         M_KH_SV.cntx_pop()
      ?}
   ?};
   M.cntx_pop()
?};
:: jeśli nie udało się wyznaczyć stawki a była przekazana w _f to zwracamy _f
{? _f & _wyn=null() || _wyn:=_f ?};
{? _kom & _c=0 & _f & _f<>_wyn
||
   _stv:=exec('FindAndGet','#table',SLO,$_f,,"SLO.KOD",'');
   _sto:=exec('FindAndGet','#table',SLO,$_wyn,,"SLO.KOD",'');
   _txt:='Zmieniono stawkę VAT indeksu %1 z %2 na %3.'@[_ktm,_stv,_sto];
   {? do_state=0
   ||
      FUN.info('~~%1'[_txt])
   ||
      {? _h<>'' & ($_h)()*_txt=0
      ||
         ($_h)():={? ($_h)()<>'' || ($_h)()+'\n' || '' ?}+_txt
      ?}
   ?}
?};
_wyn


\juz_jest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdza czy dany indeks materiałowy występuje już we wprowadzanym dokumencie
::   WE: _a - miejsce wywołania M-magazyn F-faktura Z-zamówienie D-zamówienie dostaw O-oferta K-zakupy
::       _b - ref nagłówka
::       _c - ref materiału
::       _d - ref pozycji lub null
::       [_e] - dodanie do tabeli komentarzy domyślnie 0 -nie dodaje
::       0-brak powielenia 1-jest powieleny (numer pozycji)
::  OLD: \juz_jest/mag_fun.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};

_wyn:=0;
{? _a='M' || _par:=1100; _ind:='MAM'; _tab:='DK'; _poz:='P'
|? _a='F' || _par:=2100; _ind:='FAM'; _tab:='FAP'; _poz:='POZ'
|? _a='K' || _par:=6100; _ind:='FAM'; _tab:='FAP'; _poz:='POZ'
|? _a='Z' || _par:=3100; _ind:='ZAM'; _tab:='ZK_P'; _poz:='POZ'
|? _a='D' || _par:=3200; _ind:='DAM'; _tab:='ZD_POZ'; _poz:='POZ'
|? _a='O' || _par:=3300; _ind:='OAM'; _tab:='OFP'; _poz:='POZ'
|? _a='W' || _par:=3400; _ind:='ZAM'; _tab:='ZK_P'; _poz:='POZ'
|| _par:=0
?};
{? _par & exec('get','#params',_par,2,OPERATOR.USER)='T'
|| _tabela:=$(_tab);
   _indeks:=$(_tab+'.index('''+_ind+''')');
   _pozycja:=$(_tab+'.'+_poz);
   _mat:='';
   M.cntx_psh();
   {| _tabela()
   |! cntx_psh();
      _indeks();
      {? _a='Z' || prefix(_b,_c,1) || prefix(_b,_c) ?};
      {? first() & _c
      || {? _d=null
         || _wyn:=_pozycja();
            _mat:=M().KTM+' - '+M().N
         || {! |? {? _d<>ref() || _wyn:=_pozycja(); _mat:=M().KTM+' - '+M().N ?}; ~_wyn & next() !}
         ?}
      || _wyn:=0
      ?};
      cntx_pop()
   |};
   M.cntx_pop()
|| _wyn:=0
?};
{? _wyn
|| {? ~_e
   || FUN.info('Indeks:\n%1\n'
      'wystąpił już w pozycji nr %2.'@[_mat,form(_wyn,,0,'99')])
   || exec('add_kom','#message','Na pozycji %1 wprowadzono już indeks: %2.'@[form(_wyn,,0,'99'),_mat],4)
   ?}
?};
_wyn


\m_gr_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: szablon do grupowego dodawania pozycji w oparciu o kartoteke materialowa,
::       przed uruchomieniem funkcji musza byc zdefiniowane __RODZ, __M_SEL, __FADDP
::  OLD: \m_gr_poz/wzorsl.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.RODZ:=__RODZ;
M.win_sel(__M_SEL);
M.actions(__M_SEL,'RE:E');
M.index('ARODZ');
M.prefix('T',POMOC.RODZ);
{? var_pres('__tab')>100 || obj_del(__tab) ?};
{? M.select() || ($__FADDP)() ?};
''


\pkwiu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: wyznacza aktualny kod PKWiU
::   WE: _a - data
::       _b - M.ref
::       [_c] - 0/1 - czy wołane dla wydruku?
::       [_d] - wartość z dokumentu
::   WY: kod PKWiU
::  OLD: \pkwiu/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_dr:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_cnpkwiu:={? var_pres('_d')=type_of('') || _d || '' ?};
_wyn:='';
_find_pk:=0;
M_SV.cntx_psh();
M_SV.index('OD');
M_SV.prefix('P',null());
_date:={? M_SV.first() || M_SV.OD || date(2020,7,1) ?};
M_SV.cntx_pop();
{? _dr
||
   {? exec('get','#params',300207,2)='N' || return('') ?};
   {? _cnpkwiu<>'' || return(_cnpkwiu) ?}
?};
{? _a<date(2011,1,1)
||
   M_SV.cntx_psh();
   M_SV.prefix('P',_b);
   {? M_SV.first || _wyn:=M_SV.FIS_KTM ?};
   M_SV.cntx_pop()

|? _a<_date
||
   M_SV.cntx_psh();
   M_SV.prefix('P',_b,date(2020,3,31));
   {? M_SV.first() || _wyn:=M_SV.FIS_KTM; _find_pk:=1 ?};
   M_SV.cntx_pop()
?};
:: jeśli _z_m=1 to kod PKWiU pobieramy z pola M.PKWIU
_z_m:=0;
{? _a>=_date
||
   M.cntx_psh();
   M_SV.cntx_psh();
   M_SV.M:=_b;
   _z_m:={? M_SV.M().RODZ='U' || 1 || exec('nmsv_cn_z_m','material') ?};
   M_SV.cntx_pop();
   M.cntx_pop()

|? _find_pk=0 & date(2011,1,1)<=_a & _a<_date & _wyn=''
      |
   _a<date(2011,1,1) & _wyn='' & exec('get','#params',300201,2)='N'
||
   _z_m:=1
?};
{? _z_m
||
   M.cntx_psh();
   M.prefix();
   {? M.seek(_b) || _wyn:=M.PKWIU().KOD ?};
   M.cntx_pop()
?};
_wyn


\sel_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przygotowuje tabele z zaznaczonymi rekordami (__tab) dla tabeli M
::  OLD: \sel_tab/wzorsl.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__tab')>100 || obj_del(__tab) ?};
__tab:=M.sel_aget();
''


\drukmatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: pobiera kody kreskowe
::   WE: _a - ref M_ATR
::  OLD: \drukmatr/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__mdkc');
__mdkc:=tab_tmp(1,'MAT','STRING[16]',''
                 ,'DKC','STRING[16]',''
                 ,'KTM','STRING[255]',''
                 ,'SCE','STRING[30]',''
                 ,'OPI','STRING[255]','');
DK_C.cntx_psh();
MKODK.cntx_psh();
M.cntx_psh();
DK_C.index('M_ATR');
DK_C.prefix(M_ATR.ref());
{? DK_C.first()
|| {!
   |? MKODK.index('RSQL');
      MKODK.prefix($DK_C.ref(),);
      {? MKODK.first()
      || {!
         |? {? MKODK.KODK<>'' & MKODK.M().IDMOB='A'
            || __mdkc.clear();
               __mdkc.blank();
               __mdkc.MAT:=$MKODK.M;
               __mdkc.DKC:=$DK_C.ref();
               __mdkc.KTM:=MKODK.M().KTM+' - '+MKODK.M().N;
               __mdkc.SCE:=MKODK.KODK;
               __mdkc.OPI:=(_op:=exec('formopis','kody_kresk','A',__mdkc.DKC,0,,MKODK.M().IDZP);
                            _bop:=_op[1]; obj_del(_op); _bop);
               __mdkc.add(1)
            ?};
            MKODK.next()
         !}
      ?};
      DK_C.next()
   !}
?};
DK_C.cntx_pop();
MKODK.cntx_pop();
M.cntx_pop();
~~


\filtr_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2008]
:: OPIS: przygotowuje liste materialow
::   WE: _a =T - wybor z listy, =N - cala kartoteka
::       _b (istotny jesli _a=T)=T - przygotowanie listy z uwzglednieniem grup materialowych, =N - lista bez grup
::       _c =T - materialy, =U - usluga, ='' - materialy i uslugi
::       _d =1-przygotować na podstawie SM tylko dla _a=N, _b=N, _c=T; 0-wpp
::   WY: 0 - przygotowano liste materialow, 1 - zrezygnowano z przygotowania listy
::  OLD: \filtr_m/wydruki.fml
::----------------------------------------------------------------------------------------------------------------------

{? var_pres('_d')<>type_of(1) || _d:=0 ?};

_wyn:=0;
ZAKR.ACCESS:='N';
VAR_DEL.delete('X_Xa');
{? _a='T'
||
   _acr_sel:=M.mk_sel('Materiały / Usługi'@,'P',0,'filtr_m',,,,,'U');
   M.win_fld(_acr_sel,ZAKR,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
   M.win_fld(_acr_sel,,'KTM',,,20,,0,'Indeks'@);
   M.win_fld(_acr_sel,,'N',,,50,,0,'Nazwa'@);
   M.win_fld(_acr_sel,,'MGR','KOD',,8,,0,'Grupa kod'@);
   M.win_fld(_acr_sel,,'MGR','NAZ',,30,,0,'Nazwa'@);
   M.win_act(_acr_sel,0,'Formuła','Wybierz'@@,,'Wybór pozycji'@,
      "
      X_Xa.prefix();
      {? ~X_Xa.find_key(M.KTM,)
      || X_Xa.blank();
         X_Xa.MGR:=$M.MGR;
         X_Xa.MGRKOD:=M.MGR().KOD;
         X_Xa.REF:=$M.ref();
         X_Xa.REFI:=#M.ref;
         X_Xa.KTM:=M.KTM;
         X_Xa.add()
      ?}
      ",,1,1);
   M.win_act(_acr_sel,0,'Formuła','Zrezygnuj'@@,,'Rezygnacja z wybór pozycji'@,
         "
         X_Xa.clear();
         X_Xa.prefix(M.KTM,);
         {? X_Xa.first() || {! |? X_Xa.del() !} ?}
         ",,,1);
   M.win_act(_acr_sel,0,'Formuła','Akceptuj'@@,,'Akceptacja wybóru pozycji'@,"sel_exit",,);
   M.win_act(_acr_sel,0,'Kolejność');
   M.win_act(_acr_sel,0,'Rekord',,,,"{? ~(var_pres('X_Xa')=-1)
                                     || exec('access','kontrahent',M.KTM,X_Xa,'KTM')
                                     ?};
                                     exec('actions','kontrahent');
                                     ~~");
   M.win_sel(_acr_sel);
   {? var_pres('X_Xa')=-1
   ||
      X_Xa:=tab_tmp(1
         ,'KTM','STRING[50]',
         ,'MGR','STRING[16]',
         ,'MGRKOD','STRING[8]',
         ,'REF','STRING[16]',
         ,'REFI'  ,'INTEGER',)
   ?};
   {? _c='' || M.index('MATKTM'); M.prefix || M.index('RODZ'); M.prefix(_c) ?};
   _wyn:=M.select()=0 |
         {? var_pres('X_Xa')=-1
         || 1
         || {? (X_Xa.clear(); ~X_Xa.size) || FUN.info('Nic nie zostało wybrane.\nZestawienie niemożliwe.'@); 1 || 0 ?}
         ?}
||
   {? _b='T'
   ||
      {? var_pres('X_Xa')=-1
      ||
         X_Xa:=tab_tmp(1
            ,'KTM'   ,'STRING[50]',
            ,'MGR'   ,'STRING[16]',
            ,'MGRKOD','STRING[8]',
            ,'REF'   ,'STRING[16]',
            ,'REFI'  ,'INTEGER',)
      ?};
      M.index('RODZ'); M.prefix(_c);
      {? M.first()
      ||
         {!
         |? X_Xa.prefix();
            {? ~X_Xa.find_key(M.KTM,)
            || X_Xa.blank();
               X_Xa.MGR:=BB.refsql(M.MGR);
               X_Xa.MGRKOD:=M.MGR().KOD;
               X_Xa.REF:=BB.refsql(M.ref());
               X_Xa.REFI:=#M.ref;
               X_Xa.KTM:=M.KTM;
               X_Xa.add()
            ?};
            M.next
         !}
      ?}
   ||
      {? var_pres('X_Xa')=-1
      ||
         X_Xa:=tab_tmp(1
            ,'KTM'   ,'STRING[50]',
            ,'REF'   ,'STRING[16]',
            ,'REFI'  ,'INTEGER',)
      ?};
      {? _c='T' & _d=1
      ||
         _Tab:=sql('select distinct SM.M M, M.KTM KTM from @SM join M using (SM.M,M.REFERENCE) where M.RODZ=''T''');
         {? _Tab.first
         ||
            {!
            |?
               X_Xa.REF:=_Tab.M;
               X_Xa.REFI:=BB.sqlint(X_Xa.REF);
               X_Xa.KTM:=_Tab.KTM;
               X_Xa.add & _Tab.next
            !}
         ?}
      ||
         M.index('RODZ'); M.prefix(_c);
         {? M.first()
         ||
            {!
            |?
               X_Xa.prefix();
               X_Xa.blank();
               X_Xa.REF:=BB.refsql(M.ref());
               X_Xa.REFI:=#M.ref;
               X_Xa.KTM:=M.KTM;
               X_Xa.add();
               M.next
            !}
         ?}
      ?}
   ?}
?};
_wyn


\czydkc_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: sprawdza czy dana cecha jest wykorzystana w tabeli MKODK
::   WE: _a - ref SQL DK_C
::       [_b] - ref M
::   WY: 1-tak 0-nie
::  OLD: \czydkc_m/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>7 || _b:=null() ?} || _b:=null() ?};

_wyn:=0;
MKODK.cntx_psh();
MKODK.index('RSQL');
{? _b<>null() || MKODK.prefix(_a,_a,_b) || MKODK.prefix(_a,_a) ?};
_wyn:=MKODK.first();
MKODK.cntx_pop();
_wyn


\zwrdkc_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: zwraca kod identyfikujący z tabeli MKODK
::   WE: _a - ref SQL DK_C
::       [_b] - ref M
::   WY: kod lub ''
::  OLD: \zwrdkc_m/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>7 || _b:=null() ?} || _b:=null() ?};

_wyn:='';
_idzp:={? _b<>null() || exec('FindAndGet','#table',M,_b,,"IDMOB='D' & IDZP",0) || 0 ?};
{? _idzp || _wyn:=exec('zwrZPEAN','magdok_wspolne',_a) ?};
{? _wyn=''
|| MKODK.cntx_psh();
   MKODK.index('RSQL');
   {? _b<>null() || MKODK.prefix(_a,_a,_b) || MKODK.prefix(_a,_a) ?};
   _wyn:={? MKODK.first() || MKODK.KODK || '' ?};
   MKODK.cntx_pop()
?};
_wyn


\aktpdkil2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: aktualizauje pole PD_K.IL2 po zmianie pola PD_K.IL
::  OLD: \aktpdkil2/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
_dokl_m:=exec('jaka_dok_m','jm',PD_K.M);
_dokl_s:=exec('jaka_dok_mjm','jm',PD_K.M,PD_K.J2,PD_K.M().J);
{? _dokl_s<0 || _dokl_s:=_dokl_m ?};

{? PD_K.T2<>'N' & PD_K.WS2
|| PD_K.IL2:=PD_K.IL/PD_K.WS2 $ (_dokl_s+1);
   roundmet(BEER.MDOKL);
   PD_K.IL2:=PD_K.IL2 $ _dokl_s;
   roundmet(5)
?}


\m_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Ustawia okna redakcji
::----------------------------------------------------------------------------------------------------------------------
:: Budowa indeksu wg wzorca
_p104:={? exec('FindInSet','#table','M_ATR','TYP','B')<>null() || 'P' || 'N' ?};

{? (';TP'*_p104)>1
|| {? POMOC.RODZ='T'
   || exec('m_ety_kol','material','REDA');
      M.win_edit('REDA')
   || M.win_edit('REDUA')
   ?}
|| {? POMOC.RODZ='T'
   || exec('m_ety_kol','material','RED');
      M.win_edit('RED')
   || M.win_edit('REDU')
   ?}
?};
::Wyłączenie edycji pól abc, xyz
M.efld_opt(M.win_edit('?'),'editable=0',,'ABC');
M.efld_opt(M.win_edit('?'),'editable=0',M_DOD,'ABC');
M.efld_opt(M.win_edit('?'),'editable=0',,'XYZ');
M.efld_opt(M.win_edit('?'),'editable=0',M_DOD,'XYZ');

exec('m_win_wym_dokl','material')


\m_win_patt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Ustawia okna wzorca
::----------------------------------------------------------------------------------------------------------------------
:: Budowa indeksu wg wzorca
_p104:={? exec('FindInSet','#table','M_ATR','TYP','B')<>null() || 'P' || 'N' ?};

{? (';TP'*_p104)>1
|| {? POMOC.RODZ='T'
   || M.win_patt('SZUK')
   || M.win_patt('SZUKU')
   ?}
|| {? POMOC.RODZ='T'
   || M.win_patt('SZUK')
   || M.win_patt('SZUKU')
   ?}
?};
exec('m_win_wym_dokl','material')


\material_party
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Sprawdza czy wyrob powinien byc partiowany - czyli czy jest powiazany
::       z definicja atrybutow dostaw, ktora ma partie
::   WE: _a - M.ref
::   WY: 0 - material nie moze byc partiowany
::       1 - material musi byc partiowany
::  OLD: \material_party/zparn.fml
:: DOST: PUBLIC
::----------------------------------------------------------------------------------------------------------------------
_mat:=_a;

_result:=0;
_part_num:=0;

M.cntx_psh();
M.clear();
{? M.seek(_mat)
|| _part_num:=exec('partia_num_matr','mat_atr',M.M_ATR);
   {? _part_num>0
   || _result:=1
   ?}
?};
M.cntx_pop();
_result


\m_sklad_
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: m.in. rekord przed w okienku materiałów
::   WE: [_a] - data obowiązywania kompletu (jeśli nie podana, to date() )
::   WY: ilość składowych dla materiału (w komplecie obowiązującym na podaną datę)
::  OLD: \m_sklad_/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(date()) || _date:=_a || _date:=date() ?};

_tpktl:=VAR.A_TPKTL;
_res:=0;
{? exec('find_k_res','tech_head')
||
   TKTL.cntx_psh();
   VAR.A_TPKTL:=TPKTL.ref();
   TKTL.index('SKLAD_OD');
   TKTL.prefix('T',M.ref(),VAR.A_TPKTL,'N');
   {? TKTL.first()
   || _can_continue:=1;
      {!
      |? {? exec('date_in_interval','#datetime',_date,TKTL.TERM_OD,TKTL.TERM_DO)
         || TMAT.cntx_psh();
            TMAT.index('NL');
            TMAT.prefix(TKTL.ref());
            _res:=TMAT.size();
            TMAT.cntx_pop();
            _can_continue:=0
         ?};
         _can_continue>0 & TKTL.next()
      !}
   ?};
   TKTL.cntx_pop()
?};
VAR.A_TPKTL:=_tpktl;
POM.SKLAD:=_res


\doklwg_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: ustawia ST.DOKL i ST.DOKL_C
::  OLD: \doklwg_m/win_ust.fml
::----------------------------------------------------------------------------------------------------------------------
:: 1. pobranie max. dokladnosci dla indeksow materialowych
:: 2. pobranie max. dokladnosci dla ceny indeksow materialowych
:: 3. pobranie indeksow materialowych ze wzorcem cech dostawy

_tab:=sql('select max(DOKL), max(DOKL_C), max(DOKL_S), max(DOKL_Z), count(M_ATR), count(J2) from M');
:: pobranie max. dokladnosci dla indeksow materialowych będacych wyrobami lub półproduktami
_tab2:=sql('select max(DOKL) from M where R in (\'P\',\'W\')');
:: sprawdzenie czy korzystamy z atestów
_tab3:=sql('select distinct count(ATEST) from M where ATEST=\'T\'');
ST.DOKL:={? _tab.first() || _tab[1] ||  3 ?};
ST.DOKL_C:={? _tab.first() || _tab[2] ||  2 ?};
ST.DOKL_S:={? _tab.first() || _tab[3] ||  2 ?};
ST.DOKL_Z:={? _tab.first() || _tab[4] ||  2 ?};
ATR.CZY_ATR:={? _tab.first() || _tab[5]<>0 ||  0 ?};
ST.JM2:={? _tab.first() || {? _tab[6]<>0 || 'T' || 'N' ?} || 'N' ?};
ST.DK_AT:=_tab3.first() & _tab3[1]>0;
ST.DOKL_P:={? _tab2.first() || _tab2[1] || 3 ?};
obj_del(_tab);
obj_del(_tab2);
obj_del(_tab3);
exec('m_win_wym_dokl','material');
~~


\aktmkodk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: ustawia znacznik aktywnosci dla MKODK
::   WE: _a - MKODK.ref()
::       [_b] - aktualny stan zlecenia
::  OLD: \aktmkodk/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};

MKODK.cntx_psh();
MKODK.clear();
{? MKODK.seek(_a)
|| _scean:=MKODK.KODK;
   {? (';DPZ'*MKODK.IDMOB)>1
   || _stn:=0;
      _zlec:=0;
      ND.cntx_psh();
      DK.cntx_psh();
      OKR.cntx_psh();
      OKR.index('MC');
      OKR.prefix(REF.FIRMA,1);
      {? OKR.first()
      || {!
         |? DK.use('dokma'+ST.ODDZ+($OKR.ROK+2));
            DK.index('SCEAN');
            DK.prefix(_scean,_scean);
            {? DK.first()
            || {!
               |? _stn+={? DK.Z='T' || {? DK.PLUS='T' || DK.IL || -DK.IL ?} ?};
                  {? DK.ZL<>null() & 'ZP'*MKODK.IDMOB || _zlec:={? DK.ZL().STAN='Z' || -1 || 1 ?} ?};
                  DK.next()
               !}
            ?};
            OKR.next()
         !}
      ?};
      ND.cntx_pop();
      DK.cntx_pop();
      OKR.cntx_pop();
      MKODK.AKT:={? ~_stn || {? _zlec<=0 & _b='Z' || 'N' || 'T' ?} || 'T' ?};
      {? MKODK.M<>null & MKODK.OLD<>'T'
      || _ist:=0;
         MKODK.OPMOB:={? MKODK.M().FOMOB<>null
                      || ($MKODK.M().FOMOB().FORMULA)()
                      || _ist:=1;
                         _op:=exec('formopis','kody_kresk',MKODK.IDMOB,MKODK.RSQL,1,,MKODK.M().IDZP);
                         _op[1]
                      ?};
         MKODK.OPMOB2:={? _ist || _op[2] || '' ?};
         {? _ist || obj_del(_op) ?}
      ?};
      MKODK.put(1)
   ?}
?};
MKODK.cntx_pop();
~~


\zamm_mx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: zamienniki z poziomu materialow magazynu
::  OLD: \zamm_mx/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
MX.M;
exec('zamien','material',0)


\zamm_sm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: zamienniki z poziomu stanow magazynowych
::  OLD: \zamm_sm/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
SM.M;
exec('zamien','material',0)


\zamien
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JF [2006]
:: OPIS: zamienniki dla materialow
::   WE: _a 1 - ustawienie okna MZ.WER, 2- okienko WERD, inny - ustawienie okna MZ.WERS
::       [_b] - 0 bez okienka 1 (domyslnie) z okienkiem
::   WY: ''
::  OLD: \zamien/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

_exit:=0;
HELP.REFMAT:=HELP.KTM:=M.ref();
M.cntx_psh();
MZ.index('MZ');
{? _a=2
|| MZ.win_sel('WERD')
|? ~_a
||
   MZ.win_sel('WER');
   {? (3+BEER.MENU_PTH)='FWY'
   || _act:=MZ.actions('WER','W','Z:d')
   |? 3+cur_tab.name='stm'
   || _act:=MZ.actions('WER','','W:d')
   || _act:=MZ.actions('WER','W','Z:d')
   ?}
|| MZ.win_sel('WERS')
?};
MZ.hdr_sel();
MZ.hdr_sel(' dla: %1 - %2'@[HELP.KTM().KTM,HELP.KTM().N]);
MZ.prefix(HELP.REFMAT);
{? _b & MZ.select() || _exit:=1; _ref:=MZ.MZ || _ref:=null ?};
M.cntx_pop();
{? _b & _ref<>HELP.REFMAT
||
   M.seek(_ref);

   _sm:=null;
   SM.cntx_psh();
   SM.index('SM');
   SM.prefix(ST.MAG,_ref);
   {? SM.first() || _sm:=SM.ref() ?};
   SM.cntx_pop();
   {? _exit || SM.clear() ?};
   SM.seek(_sm);

   _mx:=null;
   MX.cntx_psh();
   MX.index('M_MG');
   MX.prefix(ST.MAG,_ref);
   {? MX.first() || _mx:=MX.ref() ?};
   MX.cntx_pop();
   {? _exit || MX.clear() ?};
   MX.seek(_mx);
   HELP.REFMAT:=_ref
?};
{? ~_a || MZ.actions('WER',,_act) ?};
{? _exit || sel_exit() ?};
''


\all_kart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: akcja wszystkie indeksy materialowe
::  OLD: \all_kart/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
SCRP.TMG:=0;
sel_exit()


\mx_kart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: akcja indeksy materialowe magazynu
::  OLD: \mx_kart/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
SCRP.TMG:=0;
sel_exit()


\m_sklad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: wyswietla skladowe dla materialu z poziomu slownika
::   WE: [_a] - 0 bez okienka 1 (domyslnie) z okienkiem
::   WY: ''
::  OLD: \m_sklad/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
params_set('env_mater',exec('env_mater','tech_mater'));

{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

__Level:=1;
exec('m_sklx','material',_a);
&__Level;
~~


\m_sklx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: wyswietla skladowe dla materialu
::   WE: [_a] - 0 bez okienka 1 (domyslnie) z okienkiem
::  OLD: \m_sklx/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

params_set(params_get());

{? _a & M.RODZ<>'T'
|| FUN.emsg('Składowe można definiować tylko dla materiału.'@)
|? _a & M.R<>'W' & M.R<>'P'
|| FUN.emsg('Składowe można definiować tylko dla wyrobu gotowego lub półproduktu.'@)
|? _a & ~exec('find_k_res','tech_head')
|| FUN.emsg('Niepoprawnie sparametryzowany system.\n\nBrak technologii typu %1'@[exec('k_res_string','tech_head')])
|| M.cntx_psh();
   VAR.A_TORW:='T';
   VAR.A_T:=M.ref();
   VAR.A_STAN:='N';
   VAR.ARCH:='N';
   VAR.A_TPKTL:=TPKTL.ref();

   {? exec('get','#params',500740,2)='N'
   || exec('filter_clear','material')
   || exec('filter','material','PS')
   ?};
   TKTL.index('SKLAD_OD');
   TKTL.prefix('T',VAR.A_T,VAR.A_TPKTL,'N');
   {? ~TKTL.first()
   || TKTL.blank();
      TKTL.TYP:=VAR.A_TPKTL;
      TKTL.NRK:=VAR.A_T().KTM;
      TKTL.XJM:=TKTL.TYP().XJM;
      _wer:=exec('lastver','material',VAR.A_T().KTM);
      TKTL.WER:=_wer;
      TKTL.KTM:=VAR.A_T;
      TKTL.JM:=VAR.A_T().J;
      TKTL.SERIA:=1;
      TKTL.OPIS:='Składowe dla: '+TKTL.NRK;
      {? TKTL.add()
      || VAR.A_KTL:=TKTL.ref();
         TKTLW.clear();
         TKTLW.blank();
         TKTLW.KTM:=VAR.A_T;
         _ok:=TKTLW.add();
         {? ~_ok || TKTL.del() ?}
      || _ok:=0
      ?}
   || {? ~TKTL.find_le(date()) || TKTL.first() ?};
      VAR.A_KTL:=TKTL.ref();
      _ok:=1
   ?};
   {? _ok
   ||
      VAR.KOR:=0;
      exec('s_tktl','tech_head');
      TMAT.index('NL');
      TMAT.prefix(VAR.A_KTL);
      TMAT.win_sel(exec('win_sklad','material',__Level,VAR.A_KTL().KTM().KTM));
      TMAT.win_edit('REDS'); TMAT.win_patt('REDS');
      {? _a || TMAT.select() ?};

      {? ~TMAT.first()
      ||
         TKTL.cntx_psh();
         TKTLW.cntx_psh();
         TKTLW.index('REF');
         TKTLW.prefix(VAR.A_KTL);
         {? TKTLW.first() || TKTLW.del() ?};
         TKTL.prefix();
         {? TKTL.seek(VAR.A_KTL) || TKTL.del() ?};
         TKTL.cntx_pop();
         TKTLW.cntx_pop()
      ?}
   ?};
   exec('filter_clear','material');
   M.cntx_pop()
?};
~~


\lastver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AJ [ER/WRT/XP/11.10/0910/0007]
:: OPIS: zwraca ostatni nr wersji dla danej karty
::   WE: _a [STRING] - karta technologiczna (numer)
::   WY: [STRING] nr wersji
::  OLD: \lastver/tech.fml
::----------------------------------------------------------------------------------------------------------------------
_ver:='1.00';
TKTL.cntx_psh();
TKTL.index('NRK');
TKTL.prefix(VAR.A_TORW,_a,);
{? TKTL.last()
|| _ver:=form(#TKTL.WER+0.01,,2,'9.')
?};
TKTL.cntx_pop();
_ver


\tmat_tab_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zakładka składowe materiału - init
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__Level:=1;
M.cntx_psh();
VAR.A_TORW:='T';
VAR.A_T:=M.ref();
VAR.A_STAN:='N';
VAR.ARCH:='N';
VAR.A_TPKTL:=TPKTL.ref();

{? exec('get','#params',500740,2)='N'
|| exec('filter_clear','material')
|| exec('filter','material','PS')
?};
TKTL.index('SKLAD_OD');
TKTL.prefix('T',VAR.A_T,VAR.A_TPKTL,'N');
{? ~TKTL.first()
|| TKTL.blank();
   TKTL.TYP:=VAR.A_TPKTL;
   TKTL.NRK:=VAR.A_T().KTM;
   TKTL.XJM:=TKTL.TYP().XJM;
   _wer:=exec('lastver','material',VAR.A_T().KTM);
   TKTL.WER:=_wer;
   TKTL.KTM:=VAR.A_T;
   TKTL.JM:=VAR.A_T().J;
   TKTL.SERIA:=1;
   TKTL.OPIS:='Składowe dla: '+TKTL.NRK;
   TKTL.prefix();
   {? TKTL.add()
   || VAR.A_KTL:=TKTL.ref();
      TKTLW.clear();
      TKTLW.blank();
      TKTLW.KTM:=VAR.A_T;
      _ok:=TKTLW.add();
      {? ~_ok || TKTL.del() ?}
   || _ok:=0
   ?}
|| {? ~TKTL.find_le(date()) || TKTL.first() ?};
   VAR.A_KTL:=TKTL.ref();
   _ok:=1
?};
{? _ok
||
   VAR.KOR:=0;
   exec('s_tktl','tech_head');
   TMAT.index('NL');
   TMAT.prefix(VAR.A_KTL);
   TMAT.win_edit('REDS'); TMAT.win_patt('REDS')
?}


\tmat_tab_done
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zakładka składowe materiału - done
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
TMAT.cntx_psh();
{? ~TMAT.first()
|| exec('tktl_del','material',VAR.A_KTL)
?};
TMAT.cntx_pop();
exec('filter_clear','material');
M.cntx_pop();
&__Level


\win_sklad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: tworzy okno TMATa w zaleznosci od poziomu zaglebienia struktury
::   WE: _a - poziom zaglebienia struktury
::       _b - do czego [STRING]
::  OLD: \win_sklad/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
_grp:=TMAT.grp_make('Składowe do %1 — poziom %2'@[_b,$_a],,'tmat_skl_'+$_a,3*_a,5+2*_a,,,'normal');
_far:="
   _grayed:=':';
   TKTL.index('SKLAD_OD');
   TKTL.prefix('T',TKTL.KTM,TKTL.TYP,'N');
   TKTL.cntx_psh(); {? ~TKTL.prev() || _grayed:='R'+_grayed+'R' ?}; TKTL.cntx_pop();
   TKTL.cntx_psh(); {? ~TKTL.next() || _grayed:='N'+_grayed+'N' ?}; TKTL.cntx_pop();
   TMAT.actions_grayed('WERS',_grayed);
   ~~
";
TMAT.actions('WERS',{? _a<10 || '' || 'A' ?});
TMAT.grp_sel(_grp,,'WERS',,_far,,,,,,,,'maximized');
_grp


\mskl_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: skladowe dla skladowych
::  OLD: \mskl_skl/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
_a_t:=VAR.A_T;
_a_ktl:=VAR.A_KTL;
TKTL.cntx_psh();
TKTLW.cntx_psh();
TMAT.cntx_psh();
__Level+=1;
params_exec('m_sklx','material');
__Level-=1;
TMAT.cntx_pop();
TKTLW.cntx_pop();
TKTL.cntx_pop();
VAR.A_T:=_a_t;
VAR.A_KTL:=_a_ktl;
~~


\tar_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: zakladka cenniki - init
::  OLD: \tar_m/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
TAZ.SD:='S'; exec('utw_ceny','ceny',0);

__win_acr:=ceny.mk_sel(,'P',,'weiajhstdkalojs',,,,1);
ceny.win_sel(__win_acr);
ceny.win_fld(__win_acr,,'OPIS',,,22,,,'Rodzaje cenników'@);
ceny.win_fld(__win_acr,,'KH_OPIS',,,15,,,'Kontrahent/Grupa'@);
ceny.win_act(__win_acr,0,'Szukaj');
ceny.win_act(__win_acr,0,'Formuła','&Dołącz'@@,,'Dołącznie bieżącego zapisu'@,,"exec('tar_add','ceny',1)",,,,,'D');
ceny.win_act(__win_acr,0,'Formuła','&Popraw'@@,,'Poprawienie bieżącego zapisu'@,,"exec('tar_add','ceny',2)",,,,,'P');
ceny.win_act(__win_acr,0,'Formuła','&Usuń'@@,,'Usunięcie bieżącego zapisu'@,,"exec('tar_usun','ceny')",,,,,'U');
_fb:="
   {? TAZ.CEN_VIEW<>'G'
   || {? FUN.ask('Przełączyć na widok grupy - podgrupy?'@)
      || TAZ.CEN_VIEW:='G'
      ?}
   |? TAZ.CEN_VIEW='G' & TAZ.RODZ='T'
   || {? FUN.ask('Przełączyć na widok indeksu?'@) || TAZ.CEN_VIEW:='T' ?}
   |? TAZ.CEN_VIEW='G' & TAZ.RODZ='U'
   || {? FUN.ask('Przełączyć na widok indeksu?'@) || TAZ.CEN_VIEW:='U' ?}
   ?};
   TAP.hdr_sel();
   {? TAZ.CEN_VIEW<>'G'
   || TAP.hdr_sel(' indeksu '@+M.KTM)
   || MGR.cntx_psh(); MGRP.cntx_psh();
      TAP.hdr_sel({? M.MGRP || ' grupy %1 - podgrupy %2'@[M.MGR().KOD,M.MGRP().KOD] || ' grupy %1 '@[M.MGR().KOD] ?});
      MGR.cntx_pop(); MGRP.cntx_pop()
   ?};
   params_exec('tar_far_m','material',1)
";
ceny.win_act(__win_acr,0,'Formuła','Cenniki materiału/grupy materiałowej'@@,,
   'Przełącznik cenniki materiału/grupy materiału'@,,_fb);
ceny.win_act(__win_acr,0,'Formuła','Zwiń/rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,
                      "exec('zwrw_all','#tree','ceny','TREE',__win_acr)");
ceny.win_act(__win_acr,0,'Formuła','Kopiuj'@@,,'Kopia danego cennika'@,,"exec('tar_copy','ceny')");
_fb:="{? TAZ.SD='G'
      || exec('rep_exec','#b_report','','lsp_gra_001','Gratisy',2,,,,,,'W')
      || exec('rep_exec','#b_report','','wsp_cen_001','Cennik',2,,,,,,'W')
      ?}";
ceny.win_act(__win_acr,0,'Formuła','Druku&j'@@,,'Drukowanie cennika'@,,_fb);
ceny.win_act(__win_acr,0,'Rekord',,,,"
   {? ceny.TREE=null || ceny.actions(__win_acr,'J',,1) || ceny.actions(__win_acr,,,1) ?};
   KALK.CEN_KH:='';KALK.CEN_GRKH:='';
   DISP.TAR:=null;
   {? ceny.REF<>''
   || TAR.cntx_psh();
      TAR.prefix();
      {? TAR.seek(ceny.REF)
      || DISP.TAR:=TAR.ref()
      || ceny.del()
      ?};
      TAR.cntx_pop()
   ?};
   {? DISP.TAR=null | ceny.NR =2 || 1 || 0 ?}");
ceny.win_act(__win_acr,0,'Wyświetl',,,,"exec('tar_disp','ceny')");

ceny.win_fml(__win_acr,,'OPIS',,'ICON_BEFORE',"
             {? ceny.TREE =0 & ceny.NR<>1
             || {? ceny.tr_state()=1
                || _wyn:='xwin16.png:75'
                || _wyn:='xwin16.png:74'
                ?}
             || _wyn:='xwin16.png:76'
             ?};
             _wyn");

ceny.dnd_sel(__win_acr,,'records.TAP',"exec('dragcopy','ceny',,1)");

KALK.KH:=null;
exec('tar_utw','ceny');

ceny.tr_fml(__win_acr,,,"{? ceny.TREE=0 & ceny.NR>1 || 1 ?}");

__zmie_a:=1


\tar_far_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: zakladka cenniki - odswiez
::   WE: _a=0-bez odswiezania TAP, =1-z odswiezaniem TAP
::  OLD: \tar_far_m/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

TAZ.M:={? TAZ.CEN_VIEW<>'G' || M.ref || null ?};
TAZ.MGR:={? TAZ.CEN_VIEW='G' || M.MGR || null ?};
TAZ.MGRP:={? TAZ.CEN_VIEW='G' || M.MGRP || null ?};
TAZ.SD:='S';
TAP.hdr_sel;
{? TAZ.CEN_VIEW<>'G'
|| TAP.hdr_sel(' indeksu %1'@[M.KTM])
|| TAP.hdr_sel({? M.MGRP || ' grupy %1 - podgrupy %2'@[M.MGR().KOD,M.MGRP().KOD] || ' grupy %1'@[M.MGR().KOD] ?})
?};
_opis:=ceny.OPIS;
ceny.for_each("{? ceny.TYP=TAZ.SD & ceny.TREE<>0 || ceny.del ?}");
ZAKR.TAR_AKT:='T';
exec('tar_utw','ceny');
ceny.prefix(TAZ.SD);
ceny.find_tab(,'OPIS',,'=',_opis);
exec('tar_gr2','ceny',0,{? TAZ.M || 1 || 2 ?},0);
grp_disp(ceny,__win_acr); {? _a || grp_disp(TAP,'WERMKH') ?}


\tpktl_kompletacja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dodaje typ karty technologicznej Kompletacja
::----------------------------------------------------------------------------------------------------------------------
_typ:=exec('k_res_string','tech_head');
TPKTL.index('TYP');
TPKTL.prefix(_typ,_typ);
{? TPKTL.first()
||
   _tpktl:=TPKTL.ref()
||
   TPKTL.TYP:=_typ;
   TPKTL.OPIS:='Kompletacja';
   TPKTL.XJM:=1;
   TPKTL.OPER:='N';
   TPKTL.SUR:='K';
   TPKTL.UTIL:='N';
   TPKTL.PAR:='N';
   TPKTL.DJ:='P';
   TPKTL.CZAPLA:='N';
   {? TPKTL.add(1) || _tpktl:=TPKTL.ref() || _tpktl:=null() ?}
?}


\m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: M.ref
::  OLD: \m/magazyn.fml
::       \m_ref/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
M.ref


\mat_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: dostawcy dla materialu
::   WE: [_a] - 0 bez okienka 1 (domyslnie) z okienkiem
::       [_b] - 0 cennik dostawcy, 1 cennik sprzedazy
::   WY: ''
::  OLD: \mat_dost/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

{? HELP.REFMAT<>null || M.seek(HELP.REFMAT) ?};

HELP.KODK:='mkh';
MKODK.win_dict('WERKH');
KH.win_dict('WER');
KH.actions('WER','MWN(TCD):M');

MDOST.hdr_sel();
MDOST.hdr_sel(': '+M.KTM);
MDOST.win_sel('WER');

MDOST.index('M');
{? _b
|| TAZ.SD:='S';
   MDOST.win_edit('RED1');
   MDOST.win_patt('RED1')
|| TAZ.SD:='D';
   MDOST.win_edit('RED');
   MDOST.win_patt('SZUK')
?};
MDOST.prefix(TAZ.SD,M.ref());
{? _a || MDOST.select() ?};
''


\kol_mdost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: wyznacza kolor dla MDOST
::   WY: kolor
::  OLD: \kol_mdost/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
{? MDOST.D='T'
|| 'M#03#01'
|| ''
?}


\ref_mat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: zwraca wartosc zmiennej
::  OLD: \ref_mat/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1)=MZ & cur_tab(1,1).index('?')='MZ' & cur_tab(1,1).cur_prfx<>'' & cur_tab(1,1).cur_prfx*','=0
||
   M.cntx_psh;
   M.prefix;
   {? M.seek(#cur_tab(1,1).cur_prfx,)
   ||
      HELP.REFMAT:=M.ref
   ?};
   M.cntx_pop
?};
HELP.REFMAT


\mag_mat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: magazyny przypisane do indeksu materialowego
::   WE: [_a] - 0 bez okienka 1 (domyslnie) z okienkiem
::   WY: ''
::  OLD: \mag_mat/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

SCRP.MG:=null;
SCRP.M:=M.ref();
MX.win_sel('WMG');
MX.win_edit('REDMG');
MX.win_patt('SZUKMG');
MX.index('M');
MX.prefix(SCRP.M);
MX.hdr_sel();
MX.hdr_sel(' '+M.KTM);
{? M.A<>'T'
|| {? _a || MX.select(,1,10,'DUPdup:Dd') ?}
|| {? _a || MX.select() ?}
?};
''


\m_minmax
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: minimum / maksimum dla materialu na magazynach
::   WE: [_a] - 0 bez okienka 1 (domyslnie) z okienkiem
::   WY: ''
::  OLD: \m_minmax/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

{? HELP.REFMAT<>null || M.seek(HELP.REFMAT) ?};
MST.win_edit('RED');
MST.win_patt('SZUK');
MST.win_sel('WER');
MST.index('MG');
MST.prefix(M.ref);
MST.hdr_sel('');
MST.hdr_sel(' - dla indeksu %1'@[M.KTM]);
{? _a || MST.select() ?};
''


\m_kh_sv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: stawki VAT dla kontrahentow materialu
::   WE: [_a] - 0 bez okienka 1 (domyslnie) z okienkiem
::   WY: ''
::  OLD: \m_kh_sv/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

{? HELP.REFMAT<>null || M.seek(HELP.REFMAT) ?};

POMOC.KH:=null;
M_KH_SV.index('MAT');
M_KH_SV.prefix(M.ref());
M_KH_SV.win_edit('RED_M');
M_KH_SV.win_patt('RED_M');
M_KH_SV.win_sel('WER_M');
{? _a || M_KH_SV.select() ?};
''


\chk_mkhv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: po redakcji M_KH_SV
::  OLD: \chk_mkhv/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? M_KH_SV.M=null
||
   FUN.info('Należy uzupełnić materiał.'@);
   _wyn:='M'
|? M_KH_SV.KH=null
||
   FUN.info('Należy uzupełnić kontrahenta.'@);
   _wyn:='KH'
|? M_KH_SV.SV=null
||
   FUN.info('Należy uzupełnić stawkę VAT dla kontrahenta.'@);
   _wyn:='SV'
?};
_wyn


\m_mg_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: powiazanie M z MG_GR - material-strefy magazynowania
::   WE: [_a] - 0 bez okienka 1 (domyslnie) z okienkiem
::   WY: ''
::  OLD: \m_mg_gr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

HELP.REFMAT:=M.ref();

KH.win_dict('WER');
KH.actions('WER','W');

M_MG_GR.hdr_sel();
M_MG_GR.hdr_sel(': '+M.KTM);
M_MG_GR.win_edit('RED');
M_MG_GR.win_sel('WER');
M_MG_GR.index('M');
M_MG_GR.prefix(HELP.REFMAT);
{? _a || M_MG_GR.select() ?};
''


\renummst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: renumeracja M_MG_GR
::   WE: [_a] - ''(domyślnie) - drag&drop, 'U','D','N'-akcja do przenumerowania
::  OLD: \renummst/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (';UDN'*_a)>1 || _a || '' ?};

M_MG_GR.cntx_psh();
{? _tryb=''
|| _ref:=dnd_info('dest_record');
   {? M_MG_GR.seek(_ref) || exec('zmien_lp','#dragdrop','LP','M') ?}
|| exec('zmien_lpa','#dragdrop','LP','M',,,_tryb)
?};
M_MG_GR.cntx_pop()


\m_sv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.20]
:: OPIS: historia stawek VAT materialu
::   WE: _a - =1 - wlaczone okno selekcji, =0-pomijac okno selekcji
::  OLD: \m_sv/defin.fml
::----------------------------------------------------------------------------------------------------------------------
SLU.index('NAZ'); SLU.prefix();
SLU.find_key('~STAWKI VAT PL');
M_SV.index('OD');
M_SV.prefix('0',M.ref);
OKR.win_dict('WER_1');
OKR.actions('WER_1','W');
M_SV.hdr_sel({? M.RODZ='T' || ' materiału %1'@[M.KTM] || ' usługi %1'@[M.KTM] ?});
{? _a
||
   M_SV.win_sel('WER');
   M_SV.select;
   OKR.actions('WER_1','');
   VAR_DEL.delete('__od')
?};
M_SV.hdr_sel


\mx_brak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: sprawdza czy brak rekordu w kartotece MX
::   WE: _a-MG.ref
::       _b-M.ref
::   WY: 0-brak rekordu w MX; 1-wpp
::  OLD: \mx_brak/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
MX.cntx_psh();
MX.index('M_MG'); MX.prefix(_a);
{? MX.first() & MX.find_key(_b)=0 || _wyn:=0 ?};
MX.cntx_pop();
_wyn


\mx_add_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: dodaje zapis w MX jesli jest lista MX
::   WE: _a-MG.ref
::       _b-M.ref
::       _c-M.A
::  OLD: \mx_add_auto/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
MX.cntx_psh();
MX.index('M_MG'); MX.prefix(_a);
{? MX.first() & MX.find_key(_b)=0
|| MX.blank();
   MX.MG:=_a;
   MX.M:=_b;
   MX.A:=_c;
   _statsM:=exec('statsM','statexam',MX.M);
   MX.DEFSTATS:={? _statsM=null() || MX.MG().DEFSTATS || _statsM ?};
   MX.add(1)
?};
MX.cntx_pop();
~~


\m_opakow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: opakowania do materialu
::   WY: ''
::  OLD: \m_opakow/defin.fml
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
POMOC.M:=M.ref();
M_OPAKOW.index('M_OPAKOW');
M_OPAKOW.prefix(POMOC.M);
{? POMOC.M().OPAKOW<>'T'
||
   POMOC.OPAKOW:='T';
   DISP.JM:=M.J;
   M_OPAKOW.actions('WER','',,1)
||
   M_OPAKOW.actions('WER','dup:d',,1)
?};
M.cntx_pop();
''


\pomoc_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: POMOC.M
::  OLD: \pomoc_m/defin.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.M


\skl_ktl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Zwraca TKTL.ref() karty kompletacyjnej dla danego produktu (niepustą, na bieżącą lub wskazaną datę)
::   WE: _a - M.ref()
::       [_b] [DATE] - data analizy
::  OLD: \skl_ktl/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')=type_of(date()) || _date:=_b || _date:=date() ?};

_res:=null();

TKTL.cntx_psh(); TMAT.cntx_psh();
TKTL.index('SKLAD_OD');
TKTL.prefix('T',_a,exec('ref_k_res','tech_head'),'N');
{? TKTL.first()
|| _can_continue:=1;
   {!
   |? {? exec('date_in_interval','#datetime',_date,TKTL.TERM_OD,TKTL.TERM_DO)
      || TMAT.index('NL');
         TMAT.prefix(TKTL.ref());
         {? TMAT.first()
         || _res:=TKTL.ref();
            _can_continue:=0
         ?}
      ?};
      _can_continue>0 & TKTL.next()
   !}
?};
TKTL.cntx_pop(); TMAT.cntx_pop();
_res


\gen_pskl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: generuje pozycje dla skladowej podczas wystawiania dokumentow
::  OLD: \gen_pskl/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
_c:=__dokum;
_tmg:=__typmag;
_e:=__dodmag;
_tryb:=__tryb;

{? ~__dekpl &
   {? ZMIENNE.M().RODZ='T'
   || exec('obl_stan','magazyn_stan',ZMIENNE.M,1,_e); BEER.SD>=__SUR.TAB.WARB
   || _tmg:='U'; 1
   ?}
|| {? _tmg='U'
   || exec('ewijm','material',__SUR.TAB.WARB);
      {? __uslroz
      || exec('adddk','magdok_poz',_c,ZMIENNE.M,__SUR.TAB.WARB,0,,,,,,,,,,,,,,,,,,__sklsql)
      || exec('add_kom','#message','W magazynie: %1'
          ' nie wolno wprowadzać usług na dokumentach rozchodowych.'@[__symmag],4);
         exec('add_kom','#message',__koment,4);
         exec('add_kom','#message','Nie dodano składowej - usługi: %1.'@[ZMIENNE.M().KTM],4)
      ?}
   |? 'FLŚ'*_tmg
   || exec('ewijm','material',__SUR.TAB.WARB);
      _dk_ref:=exec('adddk','magdok_poz',_c,ZMIENNE.M,__SUR.TAB.WARB,0,,,,,,,,,7,,,,,,,,,__sklsql);
      exec('gen_wskl','material',_dk_ref)
   |? 'E' *_tmg = 1
   || _cena:=exec('biez_cen','ceny_dok',ZMIENNE.M,_e,ND.D,,ND.T);
      exec('ewijm','material',__SUR.TAB.WARB);
      _dk_ref:=exec('adddk','magdok_poz',_c,ZMIENNE.M,__SUR.TAB.WARB,_cena,,,,,,,,,7,,,,,,,,,__sklsql);
      exec('gen_wskl','material',_dk_ref);
      _wyn:=_dk_ref<>null()
   |? 'D' *_tmg = 1
   || _ok:=0;
      _cena:={? exec('FindAndGet','#table',MG,_e,,"TYP*'EWI'",0)
             || exec('biez_cen','ceny_dok',ZMIENNE.M,_e,ND.D,,ND.T)
             || -1
             ?};
      ilosc:=__SUR.TAB.WARB;
      {? var_pres('X_Xb')>100
      ||
         X_Xb.prefix(#DK.ref,#DK.N().MD,#ZMIENNE.M);
         _ok:=X_Xb.first()
      ?};
      {? _ok
      ||
         {!
         |?
            X_Xb.cntx_psh();
            {? X_Xb.IL<>0
            ||
::             cechy
               _dk_c:=null;
               DK_C.index('SYM');
               DK_C.prefix(X_Xb.CECHA,X_Xb.CECHA);
               {? DK_C.first() || _dk_c:=DK_C.ref() ?};

               wydano:=X_Xb.IL;
               ilosc:=ilosc-wydano;
               exec('ewijm','material',wydano);
               _scean:=exec('FindAndGet','#table',SC,X_Xb.SC_REF,,"SCEAN",'');
               _tw:=exec('FindAndGet','#table',SC,X_Xb.SC_REF,,"TW",date(0,0,0));
               _dk_ref:=exec('adddk','magdok_poz',_c,ZMIENNE.M,wydano,{? _cena=-1 || X_Xb.C || _cena ?},X_Xb.D,,,,,,,,7
                         ,X_Xb.RDK,X_Xb.NDK,_dk_c,,,,,,__sklsql,,,_scean,_tw);
               exec('gen_wskl','material',_dk_ref)
            ?};
            X_Xb.cntx_pop();
            X_Xb.next() & ilosc>0
         !}
      ||
::       FIFO/LIFO - FIFO takze gdy nieokreslono trybu
         _stats:=exec('FindAndGet','#table',ND,_c,
                  ,"{? TYP().P='T'
                    || 'NOZ'
                    || {? TYP().STATS_N='T' || 'N'  || '' ?}+
                       {? TYP().STATS_O='T' || 'O'  || '' ?}+
                       {? TYP().STATS_Z='T' || 'Z'  || '' ?}
                    ?}",'NOZ');
         exec('sc_tymczas','magazyn_stan',DK.N().MD,ZMIENNE.M,'T',,_stats);
         {? _tryb<>'L' || __sc.first() || __sc.last() ?};
         {!
         |?
            _sta:=exec('obl_stsc','magazyn_stan',__sc.RDK,__sc.NDK,DK.N().MD,ZMIENNE.M);
            {? _sta>0 & __sc.D<=__data
            ||
               {? ilosc<=_sta
               || wydano:={? __SUR.TAB.WARB >0 & __SUR.TAB.WARB <=ilosc
                          || __SUR.TAB.WARB
                          || ilosc
                          ?};
                          ilosc:=ilosc-wydano
               || wydano:={? __SUR.TAB.WARB >0 & __SUR.TAB.WARB <=_sta
                          || __SUR.TAB.WARB
                          || _sta
                          ?};
                          ilosc:=ilosc-wydano
               ?};
               _dk_c:={? __sc.DK_C='' || null() || exec('FindAndGet','#table','DK_C',__sc.DK_C) ?};
               exec('ewijm','material',wydano);
               _scean:=__sc.SCEAN;
               _tw:=__sc.TW;
               _dk_ref:=exec('adddk','magdok_poz',_c,ZMIENNE.M,wydano,{? _cena=-1 || __sc.C || _cena ?},__sc.D,,,,,,,,7
                          ,__sc.RDK,__sc.NDK,_dk_c,,,,,,__sklsql,,,_scean,_tw);
               exec('gen_wskl','material',_dk_ref)
            ?};
            {? _tryb<>'L' || __sc.next() || __sc.prev() ?} & ilosc>0
         !}
      ?};
      {? ilosc <>0
      || undo();
         {? var_pres('__kom')>100
         || exec('add_kom','#message','Błędne określenie ilości %1'@[ZMIENNE.M().KTM],2)
         || FUN.info('Błędne określenie ilości %1.\n Dokument nie zostanie utworzony.'@[ZMIENNE.M().KTM])
         ?}
      ?}
   ?}
|? __dekpl
|| {? 'DFLŚ'*_tmg
   || _doroz:=__SUR.TAB.WARB;
      _mincen:=0;
      _refcen:=null();
      _ilkom:=exec('FindAndGet','#table',DK,__sklsql,,"IL",0);
      _wsp:={? _ilkom>0 || __ilosc/_ilkom || 1 ?};
      _dokl_m:=exec('jaka_dok_m','jm',ZMIENNE.M);
      _tab:=tab_tmp(2
       ,'SQL','STRING[16]','ref SQL dostawy'
       ,'DATA','DATE','data dostawy'
       ,'CENA','REAL','cena dostawy'
       ,'DK_C','STRING[16]','cecha dostawy'
       ,'RDK','INTEGER','rdk'
       ,'NDK','STRING[8]','ndk'
       ,'PRDK','STRING[16]','prdk'
       ,'ILP','REAL','ilość przychodu - pierwotna'
       ,'ILZ','REAL','ilość przychodu'
       ,'ILW','REAL','ilość rozchodu'
       ,'ILR','REAL','ilość dla pozycji'
       ,'RKM','REAL','ilość na RKOM-ie');
      exec('mag_psh','open_tab');
      OKR.cntx_psh();
::    przebieg pierwszy zbiera wydania wg SKLSQL dla danego materiału
      _odrok:=2000+(#(form(8+__sklsql)+2));
      OKR.index('MC');
      OKR.prefix(REF.FIRMA,1);
      {? OKR.find_key(_odrok)
      || {!
         |? exec('mag_open','open_tab',ST.ODDZ,form(OKR.ROK-2000,-2,0,'99'));
            DK.index('MSKL');
            DK.prefix('N',ZMIENNE.M,__sklsql,);
            {? DK.first()
            || {!
               |? {? DK.PRDK<>''
                  || {? (_tab.clear(); ~_tab.find_key(DK.PRDK,))
                     || _tab.blank();
                        _tab.SQL:=DK.PRDK;
                        _tab.RKM:=DK.IL;
                        _tab.add(1)
                     || _tab.RKM+=DK.IL;
                        _tab.put(1)
                     ?}
                  ?};
                  DK.next()
               !}
            ?};
            OKR.next()
         !}
      ?};
::    przebieg drugi analizuje dostawy wg PRDK dla danego materiału
      _tab.clear();
      {? _tab.first()
      || {!
         |? _odrok:=2000+(#(form(8+_tab.SQL)+2));
            OKR.index('MC');
            OKR.prefix(REF.FIRMA,1);
            {? OKR.find_key(_odrok)
            || {!
               |? exec('mag_open','open_tab',ST.ODDZ,form(OKR.ROK-2000,-2,0,'99'));
                  DK.index('PRDK');
                  DK.prefix(_tab.SQL,);
                  {? DK.first()
                  || {!
                     |? {? DK.PLUS='T' & DK.PRDK=$DK.ref()
                        || _tab.ILP:=DK.IL;
                           _tab.ILZ+=DK.IL;
                           _tab.CENA:=DK.C;
                           _tab.DK_C:=$DK.DK_C;
                           _tab.RDK:=DK.RDK;
                           _tab.NDK:=DK.NDK;
                           _tab.PRDK:=DK.PRDK;
                           _tab.DATA:=DK.DOST;
                           _tab.put(1)
                        || {? DK.PLUS='T' || _tab.ILZ+=DK.IL || _tab.ILW+=DK.IL ?};
                           _tab.put(1)
                        ?};
                        DK.next()
                     !}
                  ?};
                  OKR.next()
               !}
            ?};
            _obldst:=(_tab.ILW-(_tab.ILZ-_tab.ILP));
            _aktdst:=_tab.RKM*_wsp $ _dokl_m;
            {? _aktdst>0
            || {? _aktdst>=_doroz
               || _tab.ILR:=_doroz;
                  _tab.put(1);
                  _doroz:=0
               || _tab.ILR:=_aktdst;
                  _tab.put(1);
                  _doroz-=_aktdst
               ?}
            ?};
            _doroz>0 & _tab.next()
         !};
::       ewentualne rozpisanie przybliżeń
         {? _doroz>0 & (_tab.clear(); _tab.first())
         || {!
            |? _max:=(_tab.ILZ-_tab.ILR);
               {? _max>=_doroz
               || _tab.ILR+=_doroz;
                  _tab.put(1);
                  _doroz:=0
               |? _max>0
               || _tab.ILR+_max;
                  _tab.put(1);
                  _doroz-=_max
               ?};
               _doroz>0 & _tab.next()
            !}
         ?}
      ?};
      OKR.cntx_pop();
      exec('mag_pop','open_tab');
      _tab.clear();
      {? _tab.first()
      || {!
         |? {? _tab.ILR>0
            || {? __dezwr
               || _dk_c:={? _tab.DK_C='' || null() || exec('FindAndGet','#table','DK_C',_tab.DK_C) ?};
                  exec('ewijm','material',_tab.ILR);
                  _dk_ref:=exec('adddk','magdok_poz',_c,ZMIENNE.M,_tab.ILR,_tab.CENA,_tab.DATA,,,,,,,,7
                          ,_tab.RDK,_tab.NDK,_dk_c,,_tab.PRDK,,,,__sklsql)
               || exec('ewijm','material',_tab.ILR);
                  _dk_ref:=exec('adddk','magdok_poz',_c,ZMIENNE.M,_tab.ILR,_tab.CENA,,,,,,,,,7,,,,,,,,,__sklsql)
               ?}
            ?};
            _tab.next()
         !}
      ?};
      {? _doroz>0
      || exec('ewijm','material',_doroz);
         _dk_ref:=exec('adddk','magdok_poz',_c,ZMIENNE.M,_doroz,0,,,,,,,,,7,,,,,,,,,__sklsql)
      ?};
      obj_del(_tab)
   |? 'E' *_tmg = 1
   || _cena:=exec('biez_cen','ceny_dok',ZMIENNE.M,_e,ND.D,,ND.T);
      exec('ewijm','material',__SUR.TAB.WARB);
      _dk_ref:=exec('adddk','magdok_poz',_c,ZMIENNE.M,__SUR.TAB.WARB,_cena,,,,,,,,,7,,,,,,,,,__sklsql);
      _wyn:=_dk_ref<>null()
   ?}
||
   {? var_pres('__kom')>100
   || exec('add_kom','#message',__koment,2);
      exec('add_kom','#message','  w magazynie: %1'
       ' brak odpowiedniej ilości dla składowej %2 na dzień %3.'@[__symmag,ZMIENNE.M().KTM,form(__data)],2);

::    sprawdzenie nastepnych skladowych

      M.clear();
      {? var_pres('__SUR')>100 & __SUR.TAB.next()
      || {!
         |? {? M.seek(__SUR.TAB.PT,) & M.RODZ='T'
            || exec('obl_stan','magazyn_stan',M.ref,1,_e);
               {? ~(BEER.SD>=__SUR.TAB.WARB)
               || exec('add_kom','#message','  w magazynie: %1'
                   ' brak odpowiedniej ilości dla składowej %2 na dzień %3.'@[__symmag,M.KTM,form(__data)],2)
               ?}
            ?};
            __SUR.TAB.next()
         !}
      ?};
      exec('add_kom','#message','Wygenerowany dokument został usunięty.'@,3)

   || FUN.info('Brak odpowiedniej ilości dla składowej %1 na dzień %2.'
            '\nDokument nie zostanie utworzony.'@[ZMIENNE.M().KTM,form(__data)])
   ?};
   undo()
?};
POM.PAR5:='X';
''


\gen_sklt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: generuje skladowe - mozliwosc wyboru dostaw
::   WY: stan wyboru dostaw
::  OLD: \gen_sklt/mag_skl.fml
:: ~OST: INWINBTN
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_tmg:=(1+DK.N().MD().TYP);
_typ:=DK.N().TYP().TD;
VAR_DEL.delete('__status');
__status:='';
__status+={? exec('FindInSet','#table','TYPYDOK','TYP',_typ,_typ,"TYPYDOK.STATS_Z",,,'')='T' || 'Z' || '' ?};
__status+={? exec('FindInSet','#table','TYPYDOK','TYP',_typ,_typ,"TYPYDOK.STATS_N",,,'')='T' || 'N' || '' ?};
__status+={? exec('FindInSet','#table','TYPYDOK','TYP',_typ,_typ,"TYPYDOK.STATS_O",,,'')='T' || 'O' || '' ?};

{?  'D' *_tmg = 1
||
   {? 1
   ||
      VAR_DEL.delete('X_Xa');

      X_Xa:=tab_tmp(,'FAPP','INTEGER','Składowa dla pozycji'@,
                     'MAG','INTEGER','Magazyn'@,
                     'MKTM','STRING[50]','Kod materiału'@,
                     'JM','STRING[8]','jm'@,
                     'MG','STRING[10]','Magazyn'@,
                     'M','INTEGER','Materiał'@,
                     'SD','REAL','Dostępne'@,
                     'IL','REAL','Do wydania'@,
                     'FAP','INTEGER','fap'@,
                     'ILR','REAL','Ilość rozpisana'@);

      _form_akc:="_oki:=1;
                  X_Xa.cntx_psh();
                  X_Xa.prefix();
                  {? X_Xa.first()
                  || {!
                     |? _oki:=X_Xa.IL=X_Xa.ILR;
                        _oki & X_Xa.next()
                     !}
                  ?};
                  X_Xa.cntx_pop();
                  {? ~_oki & FUN.ask('Nie wszystkie dostawy zostały rozpisane.\nCzy rezygnacja z ich rozpisania?')
                  || _oki:=2
                  ?};
                  {? _oki || sel_exit() ?}
                 ";
      _acr:=X_Xa.mk_sel('Ilości dla materiałów na dokumencie przychodowym %1'@[DK.N().SYM],'P',0,'gen_skltx_xa',,,,,'U');
      X_Xa.win_fld(_acr,,'FAPP',,,17);
      X_Xa.win_fld(_acr,,'MG',,,8);
      X_Xa.win_fld(_acr,,'MKTM',,,20);
      X_Xa.win_fld(_acr,,'JM',,,5);
      X_Xa.win_fld(_acr,,'SD',,,10,3);
      X_Xa.win_fld(_acr,,'IL',,,10,3);
      X_Xa.win_fld(_acr,,'ILR',,,10,3);
      X_Xa.win_act(_acr,0,'Formuła','&Wg dostaw'@@,,,,"__xxb()",1,,,,'W');
      X_Xa.win_act(_acr,0,'Formuła','&Akceptuj'@@,,,,_form_akc,,,,,'A');
      X_Xa.win_act(_acr,,'Formuła','&Legenda'@@,,,"exec('legenda','color','GKOMP#01')",,,,,,'L');
      X_Xa.win_act(_acr,,'Rekord',,,,"exec('rekprzed','color','GKOMP#01')",,0);
      X_Xa.win_act(_acr,0,'Szukaj');
      X_Xa.win_act(_acr,0,'Kolejność');
      X_Xa.win_btn(_acr,'text='+'&Akceptuj'@+', icon='+exec('ok','#icon')+', panel=bottom, align=end'
       ,'menu:A',,,,,,'noempty');
      X_Xa.win_sel(_acr);

      VAR_DEL.delete('X_Xb');

      X_Xb:=tab_tmp(5,'FAP','INTEGER','fap',
                     'MAG','INTEGER','magazyn'@,
                     'M','INTEGER','material'@,
                     'D','DATE','Data dostawy'@,
                     'C','REAL','Cena'@,
                     'S','REAL','Stan'@,
                     'SD','REAL','Dostępne'@,
                     'IL','REAL','Do wydania'@,
                     'DOST','STRING[20]','Dostawa'@,
                     'CECHA','STRING[20]','Cecha'@,
                     'RDK','INTEGER','RDK',
                     'NDK','STRING[20]','NDK',
                     'SC_REF','STRING[20]','SC_REF',
                     'WAR01','STRING[25]','Atr.cechy dost. 1',
                     'WAR02','STRING[25]','Atr.cechy dost. 2',
                     'WAR03','STRING[25]','Atr.cechy dost. 3',
                     'WAR04','STRING[25]','Atr.cechy dost. 4',
                     'WAR05','STRING[25]','Atr.cechy dost. 5',
                     'WAR06','STRING[25]','Atr.cechy dost. 6',
                     'WAR07','STRING[25]','Atr.cechy dost. 7',
                     'WAR08','STRING[25]','Atr.cechy dost. 8',
                     'WAR09','STRING[25]','Atr.cechy dost. 9',
                     'WAR10','STRING[25]','Atr.cechy dost. 10',
                     'JM','STRING[10]','');
      exec('war_hid','ceny',X_Xb,'C');

      _ten_fml:="
         VAR_DEL.delete('__acr');
         __acr:=X_Xb.mk_edit('Wydanie z dostawy'@,0);
         X_Xb.win_esep(__acr,'Do wydania');
         X_Xb.win_efld(__acr,,'IL',,,10,3,,'Ilość [%1]'[X_Xa.JM]);
         exec('ok_esc','#window',X_Xb,__acr);
         _aa:=ile_rozp;
         _be_il:=X_Xb.IL;
         {? X_Xb.IL=0
         || X_Xb.IL:={? X_Xa.IL-ile_rozp>X_Xb.SD || X_Xb.SD || X_Xa.IL-ile_rozp ?}
         ?};
         X_Xb.win_edit(__acr);
         {? X_Xb.edit(\"
                        _wyn:=1;
                        _ref:=X_Xb.ref();
                        X_Xb.cntx_psh();
                        X_Xb.prefix();
                        _prev:={? X_Xb.seek(_ref) || X_Xb.IL || 0 ?};
                        X_Xb.cntx_pop();
                        {? X_Xb.IL>(X_Xa.IL-ile_rozp)+_prev
                        ||
                           FUN.info('Pozostało do rozpisania: %1 %2.'@[form(X_Xa.IL-ile_rozp+_prev,,3),X_Xa.JM]);
                           _wyn:=0
                        |? X_Xb.IL>X_Xb.SD
                        ||
                           FUN.info('Można wydać maksymalnie stan dostępny: %1 %2.'@[form(X_Xb.SD,,3),X_Xa.JM]);
                           _wyn:=0
                        |? X_Xb.IL<0
                        ||
                           FUN.info('Należy podać ilość większą lub równą zero.'@);
                           _wyn:=0
                        ?};
                        _wyn
                      \")
         ||
            ile_rozp+=(X_Xb.IL-_be_il);
            X_Xb.put()
         ?};
         X_Xb.win_edit();

         X_Xb.hdr_sel('');
         X_Xb.hdr_sel('Pozostało: %1 %2'@[form(X_Xa.IL-ile_rozp,,3),X_Xa.JM]);
         echo('%1   Rozpisano: %2 %3   Pozostało: %4 %5'@[X_Xa.MKTM,form(ile_rozp,,3),X_Xa.JM,form(X_Xa.IL-ile_rozp,,3),X_Xa.JM]);
         win_disp()
      ";

      ile_rozp:=0;
      _ind:=X_Xb.ndx_tmp('',,'FAP',,,'MAG',,,'M',,,'D',,,'C',,);
      X_Xb.index(_ind);
      _acr:=X_Xb.mk_sel(X_Xa.MKTM,'P',0,'gen_skltx_xb',,,,,'U');
      X_Xb.win_fld(_acr,,'D',,,10);
      X_Xb.win_fld(_acr,,'C',,,7,2);
      X_Xb.win_fld(_acr,,'S',,,9,3);
      X_Xb.win_fld(_acr,,'SD',,,9,3);
      X_Xb.win_fld(_acr,,'IL',,,9,3);
      X_Xb.win_fld(_acr,X_Xa,'JM',,,5);
      X_Xb.win_fld(_acr,,'DOST',,,12);
      X_Xb.win_fld(_acr,,'CECHA',,,10);
      X_Xb.win_act(_acr,0,'Formuła','&Wybierz'@@,,,,_ten_fml,1,,,,'W');
      X_Xb.win_act(_acr,0,'Formuła','&Akceptuj'@@,,,,"__xxb_akc()",,,,,'A');
      X_Xb.win_act(_acr,,'Formuła','&Legenda'@@,,,"exec('legenda','color','GKOMZ#01')",,,,,,'L');
      X_Xb.win_act(_acr,,'Rekord',,,,"exec('rekprzed','color','GKOMZ#01')",,0);
      X_Xb.win_act(_acr,0,'Szukaj');
      X_Xb.win_act(_acr,0,'Kolejność');
      X_Xb.win_btn(_acr,'text='+'&Akceptuj'@+', icon='+exec('ok','#icon')+', panel=bottom, align=end'
       ,'menu:A',,,,,,'noempty');
      X_Xb.win_sel(_acr);

      VAR_DEL.delete('__acr','__xxb_akc','__xxb');
      __acr:=X_Xb.mk_edit('Wydanie z dostawy'@,0);
      X_Xb.win_esep(__acr,'Do wydania');
      X_Xb.win_efld(__acr,,'IL',,,10,3,,'Ilość');
      exec('ok_esc','#window',X_Xb,__acr);

      __xxb_akc:="
         {? ile_rozp<>X_Xa.IL
         ||
            {? FUN.ask('Ilość rozpisana wg dostaw jest mniejsza niż ilość do wydania.\n'
                     'Zrezygnować z rozpisania dostaw dla składowych?'@)
            ||
               {? X_Xb.first() || {! |? X_Xb.IL:=0;X_Xb.put(1);X_Xb.next !} ?};
               _wyn:=0;
               sel_exit()
            ?}
         ||
            X_Xa.ILR:=ile_rozp;
            X_Xa.put(1);
            _wyn:=1;
            sel_exit()
         ?}
      ";

      __xxb:="
         ile_rozp:=0;X_Xb.prefix(X_Xa.FAP,X_Xa.MAG,X_Xa.M);
         {? ~X_Xb.first
         ||
            MG.cntx_psh();
            M.cntx_psh();
            MG.clear();MG.seek(X_Xa.MAG,);
            M.clear();M.seek(X_Xa.M,);
            exec('sc_tymczas','magazyn_stan',MG.ref(),M.ref(),'T',,__status);
            {? __sc.first()
            || {!
               |?
                  {? __sc.S>0 & __sc.D<=ND.D
                  ||
                     X_Xb.FAP:=X_Xa.FAP;
                     X_Xb.MAG:=X_Xa.MAG;
                     X_Xb.M:=X_Xa.M;
                     X_Xb.IL:=0;
                     X_Xb.D:=__sc.D;
                     X_Xb.C:=__sc.C;
                     X_Xb.S:=__sc.S;
                     X_Xb.SD:=0;
                     X_Xb.DOST:='';
                     X_Xb.CECHA:='';
                     X_Xb.RDK:=__sc.RDK;
                     X_Xb.NDK:=__sc.NDK;
                     X_Xb.SC_REF:=__sc.REF;
                     X_Xb.add()
                  ?};
                  __sc.next()
               !}
            || FUN.info('Brak stanów wg dostaw.'@)
            ?};
            M.cntx_pop();
            MG.cntx_pop()
         ||
            X_Xb.first();
            {! |? ile_rozp+=X_Xb.IL;X_Xb.next() !};
            X_Xb.first()
         ?};
         X_Xb.hdr_sel('');
         X_Xb.hdr_sel('Pozostało: %1 %2'@[form(X_Xa.IL-ile_rozp,,3),X_Xa.JM]);
         echo('%1   Rozpisano: %2 %3   Pozostało: %4 %5'@[X_Xa.MKTM,form(ile_rozp,,3),X_Xa.JM,form(X_Xa.IL-ile_rozp,,3),X_Xa.JM]);
         win_disp();
         X_Xb.select();
         echo('Rozpisanie składowych wg dostaw dla dokumentu %1'@[ND.SYM]);
         win_disp()
      "
   ?};

   {? DK.first()
   ||
      {!
      |?
         DK.M().KTM;
         _form:="
            {? ZMIENNE.M().RODZ='T'
            ||
               exec('obl_stan','magazyn_stan',ZMIENNE.M,1,DK.N().MD);
               X_Xa.MKTM:=ZMIENNE.M().KTM;
               X_Xa.JM:=ZMIENNE.M().J().KOD;
               X_Xa.MAG:=#DK.N().MD;
               X_Xa.M:=#ZMIENNE.M;
               X_Xa.SD:=BEER.SD;
               X_Xa.IL:=__SUR.TAB.WARB;
               X_Xa.FAP:=#DK.ref;
               X_Xa.FAPP:=DK.P;
               X_Xa.MG:=DK.N().MD().SYM;
               {? X_Xa.IL>X_Xa.SD
               || _wyn:=2;
                  exec('add_kom','#message','Pozycja %1 dokumentu %2 - %3: '@[form(DK.P,,0,'99'),ND.TYP().T,DK.M().KTM],2);
                  exec('add_kom','#message','w magazynie: %1 brak odpowiedniej ilości dla składowej %2.'@[DK.N().MD().SYM,ZMIENNE.M().KTM],2)
               || X_Xa.add()
               ?}
            ?}
         ";
         exec('skl_anal','material',DK.M,DK.IL,_form,ND.D);
         _wyn<>2 & DK.next()
      !}
   ?};

   {? _wyn<>2
   ||
      echo('Rozpisanie składowych wg dostaw dla dokumentu %1'@[ND.SYM]);
      win_disp();
      {? X_Xa.select() || _wyn:=1 ?};
      echo();
::    sprawdzamy czy dokonano przyporzadkowania dostaw dla skladowych, jezeli nie to nie akceptujemy dokumentu
      X_Xa.first; {! |? {? X_Xa.IL>X_Xa.ILR || _wyn:=3; 0 || X_Xa.next ?} !}
   ?}
?};
VAR_DEL.delete('__status');

_wyn


\skl_anal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: analiza tabeli ze skladowymi
::   WE: _a  - material (M.ref)
::       _b  - ilosc
::       _c  - formula do wywolania
::       _d - data analizy (składowe wg wersji na dzień)
::  OLD: \skl_anal/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ile_skl','material',_a,_b,,,1,_d);

:: Uwaga: przy pobieraniu bedzie mozna sterowac, czy pierwszy poziom, czy "do dna"

:: Jak nie ma __SUR'a to byl blad, wiec nic nie robimy
{? var_pres('__SUR')<0 || return() ?};

M.cntx_psh();
M.clear();

{? POM.PAR1='N'
||
:: Pierwszy poziom struktury (polfabrykaty)
   __SUR.TAB.cntx_psh();
   __SUR.TAB.index(__SUR.NDX1);
   __SUR.TAB.prefix(0);
   {? __SUR.TAB.first()
   ||
      {!
      |?
         {? M.seek(__SUR.TAB.PT,)
         ||
            ZMIENNE.M:=M.ref();
            {? __SUR.TAB.WARB>0
            ||
               _c()
            ||
               {? var_pres('__kom')>100
               ||
                  exec('add_kom','#message','W wyniku zaokrągleń dla surowca '
                     '%1 ilość do pobrania jest zerowa. Pozycja została pominięta.'@[ZMIENNE.M().KTM],4)
               ?}
            ?}
         ?};
         __SUR.TAB.next()
      !}
   ?};
   __SUR.TAB.cntx_pop()
||
:: Ostatni dostepny poziom struktury (elementy nie majace skladowych)
   __SUR.TAB.cntx_psh();
   __SUR.TAB.index(__SUR.NDX3);
   __SUR.TAB.prefix('',);
   {? __SUR.TAB.first()
   ||
      {!
      |?
         {? M.seek(__SUR.TAB.PT,)
         ||
            ZMIENNE.M:=M.ref();
            {? __SUR.TAB.WARB>0
            ||
               _c()
            ||
               {? var_pres('__kom')>100 & var_pres('X_Xa')<0
               ||
                  exec('add_kom','#message','W wyniku zaokrągleń dla surowca '
                     '%1 ilość do pobrania jest zerowa. Pozycja została pominięta.'@[ZMIENNE.M().KTM],4)
               ?}
            ?}
         ?};
         __SUR.TAB.next()
      !}
   ?};
   __SUR.TAB.cntx_pop()
?};

VAR_DEL.delete('__SUR');

M.cntx_pop();
~~


\ile_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: zwraca tabele tymczasowa z powiazanymi skladowymi oraz ilosciami
::   WE: _a  material (M.ref)
::       [_b] dla jakiej ilosci sztuk maja byc przedstawione wartosci
::            domyslnie 1
::       [_c]  -  1 - wg danego magazynu
::                2 - wg operatora zamowien
::                3 - wg wszystkich magazynow
::                4 - wg operatora magazynow produkcyjnych
::       [_d] - wg magazynu tylko dla _d=1 (gdy nie wypelnione to biezacy
::              magazyn)
::       [_e] - czy wyswietlac select (nie tworzy rowniez okienek)
::              0 - wyswietlac, 1 - nie wyswietlac
::       [_f] [DATE] - data analizy (składowe wg wersji na dzień)
::  OLD: \ile_skl/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?}; {? _b=0 || _b:=1 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};
{? _>=4 || {? type_of(_d)<>7 || _d:=null() ?} || _d:=null() ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};
{? var_pres('_f')=type_of(date()) || _date:=_f || _date:=date() ?};

M.cntx_psh();
M.clear();
{? M.seek(_a)
||
   {? M.RODZ<>'T'
   || FUN.info('Składowe można definiować tylko dla materiału.'@)
   |? M.R<>'W' & M.R<>'P'
   || FUN.info('Składowe można definiować tylko dla wyrobu lub półfabrykatu.'@)
   |? ~exec('find_k_res','tech_head')
   || FUN.info(
         'Niepoprawnie sparametryzowany system.\n\n'
         'Brak technologii typu %1.'@[exec('k_res_string','tech_head')]
      )
   ||
      VAR_DEL.delete('__SUR');
      _tktl:=exec('skl_ktl','material',M.ref(),_date);
      TKTL.prefix();
      {? TKTL.seek(_tktl)
      || exec('surx_decl','tech_mater');
         __SUR:=obj_new(@.CLASS.SURX,TKTL.ref(),'#',0,,_b,_date);

         __SUR.obl_stan(_c,_d);

         {? _e=0
         ||
            set_virt(__SUR,'tree',"
               _wer:=.TAB.mk_sel('Informacje dla ilości produktu: %1'@[$.ILOSC],'N',,'tree_tmater_str',,5,,1);
               .TAB.index(.NDX1);
               .TAB.win_fld(_wer,,'PT_S',,,20,,,'Indeks'@);
               .TAB.win_fld(_wer,,'PT_N',,,36,,,'Nazwa'@);
               .TAB.win_fld(_wer,,'WARB',,,14,4,,'Ilość'@);
               .TAB.win_fld(_wer,,'PT_JM',,,5,,,'jm'@);
               .TAB.win_fld(_wer,,'STAN',,,14,4,,'Stan'@);
               .TAB.win_act(_wer,,'Rekord',,,,\"
                  ~~
               \");
               .TAB.win_sel(_wer);
               .TAB.win_fml(_wer,,'PT_S',,'ICON_BEFORE',\"
                  {? __SUR.TAB.WPM='M'
                  || 'xwin16.png:71'
                  |? __SUR.TAB.WPM='P'
                  || 'xwin16.png:159'
                  || ''
                  ?}
               \");
               .TAB.select();
               ~~
            ");
            __SUR.tree()
         ?}
      || {? var_pres('__kom')>100
         || exec('add_kom','#message','Brak definicji składowych dla materiału %1.'@[M.KTM],2)
         || FUN.info('Brak definicji składowych dla %1.'@[M.KTM])
         ?}
      ?}
   ?}
|| FUN.info('Nie znaleziono materiału.'@)
?};
M.cntx_pop();

''


\gen_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: generuje skladowe podczas wystawiania dokumentow (DK w buforze)
::   WE: _a  material z DK
::       _b  ilosc
::       _c  ref N
::   WY: zwraca warto
::  OLD: \gen_skl/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
DK.cntx_psh();
ND.cntx_psh();

VAR_DEL.delete('__mater');
VAR_DEL.delete('__ilosc');
VAR_DEL.delete('__dokum');
VAR_DEL.delete('__typmag');
VAR_DEL.delete('__dodmag');
VAR_DEL.delete('__koment');
VAR_DEL.delete('__symmag');
VAR_DEL.delete('__uslroz');
VAR_DEL.delete('__sklsql');
VAR_DEL.delete('__tryb','__data');
VAR_DEL.delete('__dekpl','__dezwr');

__mater:=_a;
__ilosc:=_b;
__dokum:=_c;
__koment:='Pozycja %1 dokumentu %2, Indeks: %3: '@[form(DK.P,,0,'99'),DK.N().TYP().T,DK.M().KTM];
__typmag:=(1+DK.N().MD().TYP);
__dodmag:=DK.N().MD;
__symmag:=DK.N().MD().SYM;
__uslroz:=DK.N().MD().U='T';
__ilszt:=__ilosc;
__dekpl:=DK.N().TYP().DN='D';
__sklsql:={? ~__dekpl || $DK.ref || DK.PRDK ?};
__tryb:={? ~__dekpl
        || exec('FindInSet','#table','TYPYDOK','TYP',DK.N().TYP().TD,DK.N().TYP().TD,"TYPYDOK.AFIFO",,,'')
        || 'N'
        ?};
__dezwr:={? __dekpl
         || exec('FindInSet','#table','TYPYDOK','TYP',DK.N().TYP().TD,DK.N().TYP().TD,"TYPYDOK.DN",,,'')='T'
         || 0
         ?};
__data:={? ~__dekpl | DK.PRDK='' || DK.N().D || exec('FindAndGet','#table',DK,DK.PRDK,,"DOST",DK.N().D) ?};

exec('skl_anal','material',_a,_b,"exec(\'gen_pskl\',\'material\',)",__data);

VAR_DEL.delete('__mater');
VAR_DEL.delete('__ilosc');
VAR_DEL.delete('__dokum');
VAR_DEL.delete('__typmag');
VAR_DEL.delete('__dodmag');
VAR_DEL.delete('__koment');
VAR_DEL.delete('__symmag');
VAR_DEL.delete('__uslroz');
VAR_DEL.delete('__sklsql');
VAR_DEL.delete('__tryb','__data');
VAR_DEL.delete('__dekpl','__dezwr');

DK.cntx_pop();
ND.cntx_pop();
''


\zamienz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wyswietlanie zamiennikow z poziomu stanow magazynowych zamowien
::  OLD: \zamienz/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__mz_gr');
__mz_gr:=0;
HELP.REFMAT:=HELP.KTM:=M.ref;
M.get;
M.cntx_psh();
_sel:=M.win_sel('?');
_dict:=M.win_dict('?');
M.win_sel('SLO_M');
M.win_dict('SLO_M');
MZ.index('MZ');
MZ.win_sel('WERZ');
_act:=MZ.actions('WERZ','E');
MZ.prefix(HELP.REFMAT);
MZ.select();
MZ.actions('WERZ',_act);
M.win_sel(_sel);
M.win_dict(_dict);
M.cntx_pop();
VAR_DEL.delete('__mz_gr');
''


\skl_mat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wyswietlanie skladowych z poziomu materialu
::  OLD: \skl_mat/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
{? exec('m_sklad_','material')>0
|| exec('ile_skl','material',M.ref(),1);
   VAR_DEL.delete('__SUR')
|| FUN.info('Brak składowych dla materiału: %1.'@[M.N])
?};
M.cntx_pop();
''


\rek_zzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: akcja rekord dla zamiennikow
::   WY: podswietlenie jesli stan dostepny na danym indeksie jest wiekszy od zera
::  OLD: \rek_zzam/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
MZ.cntx_psh();
M.clear();
{? M.seek(MZ.MZ) || exec('rek_mate_upr','magazyn_stan') ?};
MZ.cntx_pop();
M.cntx_pop();
exec('rekprzed','color','MZ#01')


\add_kodk_mat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JSz [12.30]
:: OPIS: Dodaje kod kreskowy jako główny kod materiału
::   WE: _a - kod kreskowy dla materiału
::   WY: 1 udało się dodać kod kreskowy, 0 nie udało się dodac kodu kreskowego
::  OLD: \add_kodk_mat/tkod.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
M.KODK:=_a;
{? ~exec('unik_ean','kody_kresk','M',M.KODK,M.ref())
|| FUN.info('Podany kod kreskowy jest już wykorzystywany w systemie.\nNależy podać inny.'@)
|| do();
   {? M.put()
   || {? exec('m_kody_akt','kody_kresk',M.ref(),M.KTM,M.N,M.KODK)
      || _wyn:=1
      || undo()
      ?}
   ?};
   end()
?};
{? ~_wyn || FUN.info('Nie udało się dodać kodu kreskowego.'@) ?};
_wyn


\m_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Wyświetla informacje o materiale
::----------------------------------------------------------------------------------------------------------------------
exec('info_zam','magazyn_stan',{? BEER.MENU_PTH='ZW' || 1 || 3 ?},M.ref());
~~


\kompprek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: kolorowanie rekordow
::   WY: kod koloru
::  OLD: \kompprek/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';

SC.cntx_psh();
SC.use(form(8+X_Xb.SC_REF));
SC.clear();
{? SC.seek(X_Xb.SC_REF,form(8+X_Xb.SC_REF))
||
   exec('sc_info','magazyn_stan');
   X_Xb.SD:=DISP.SD-exec('ile_xxb','material',X_Xb.RDK,X_Xb.NDK,X_Xb.ref());
   X_Xb.DOST:=DISP.DOST;
   X_Xb.CECHA:=SC.DK_C().SYM;
   {! _i:=1..10 |! ($('X_Xb.WAR'+form(_i,-2,,'99')))():=($('SC.DK_C().WAR'+form(_i,-2,,'99')))() !};
   X_Xb.put()
?};
SC.cntx_pop();

{? X_Xb.IL<>0
||
   _wyn:='GKOMZ#01#01'
?};
_wyn


\komp_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: kolorowanie rekordow
::   WY: kod koloru
::  OLD: \komp_rek/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? X_Xa.IL<>X_Xa.ILR
||
   _wyn:='GKOMP#01#01'
?};
_wyn


\ile_xxb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: oblicza sume innych X_Xb.IL dla danej dostawy
::   WE: _a - X_Xb.RDK
::       _b - X_Xb.NDK
::       _c - X_Xb.ref() -> sumuje inne niz biezacy
::  OLD: \ile_xxb/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
X_Xb.cntx_psh();
_ndx:=X_Xb.ndx_tmp(,,'RDK',,,'NDK',,);
X_Xb.index(_ndx);
X_Xb.prefix(_a,_b);
{? X_Xb.first()
||
   {!
   |?
      {? X_Xb.ref()<>_c || _wyn+=X_Xb.IL ?};
      X_Xb.next()
   !}
?};
X_Xb.ndx_drop(_ndx);
X_Xb.cntx_pop();
_wyn


\skl_sm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wyswietlanie stanow wg skladowych z poziomu M
::  OLD: \skl_sm/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
{? exec('m_sklad_','material')>0
||
   exec('ile_skl','material',M.ref(),DK.IL,1);
   VAR_DEL.delete('__SUR')
|| FUN.info('Materiał nie posiada składowych.'@)
?};
M.cntx_pop();
''


\m_zaznacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zaznacz - zaznaczanie/odznaczanie pozycji kartoteki M
::   WE: [_a] - 1-zaznaczenie (domyślnie) 0-odznaczenie
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_zaz:={? var_pres('_a')<>type_of(0) || 1 || _a ?};

_Sel:=M.sel_aget();

{? var_pres('__tab')<=0
|| VAR_DEL.delete('__tab');
   __tab:=M.sel_aget();
   __tab.index(__tab.ndx_tmp(,,'REF',,));
   _loop:=__tab.first();
   {!
   |? _loop
   |!
      _loop:=__tab.del()
   !}
?};

{? ~_Sel.first() || _Sel.REF:=#M.ref(); _Sel.CRC:=M.crc(); _Sel.add() ?};

_loop:=_Sel.first();
{!
|? _loop
|!
   {? ~_zaz & __tab.find_key(_Sel.REF)
   || __tab.del()
   |? _zaz & ~__tab.find_key(_Sel.REF)
   || __tab.REF:=_Sel.REF;
      __tab.CRC:=_Sel.CRC;
      __tab.add()
   ?};
   _loop:=_Sel.next()
!};

M.sel_adel();
0


\beer_sel_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Przed wyświetl BEER.SEL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BEER.SEL:=
   {? var_pres('__tab')>0 & __tab.find_key(#M.ref())
   || 'T'
   || 'N'
   ?}


\zakres_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Akcja 'Zmień zakres' w obszarze roboczym kartoteki materiałowej
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

{? var_pres('__ZAKR_ND_KH_PROJ')>0 & __ZAKR_ND_KH_PROJ
|| exec('zakres_m_k_p','material');
   return(~~)
?};

_before_u:='';
_before_t:='';

{? POMOC.RODZ='T'
||
   POMOC.win_edit('M_ZAKR_T');
   {? POMOC.M_ZAKR_T=''
   || POMOC.M_ZAKR_T:='T'
   ?};
   _before:=POMOC.M_ZAKR_T
|? POMOC.RODZ='U'
||
   POMOC.win_edit('M_ZAKR_U');
   {? POMOC.M_ZAKR_U=''
   || POMOC.M_ZAKR_U:='T'
   ?};
   _before_u:=POMOC.M_ZAKR_U
?};
_can_continue:=0;
{? POMOC.edit()
|| _can_continue:=1
?};
{? _can_continue>0
|| M.first();
   {? type_of(params_get())>100 & var_pres('env',params_get())>100
:: Obsługa w obszarze roboczym Materiał
   || _env:=params_get().env;
      {? POMOC.RODZ='T'
      || {? cur_win()=_env.WIN_MAIN || grp_disp(M,_env.PANEL.MAIN.TAB.MATERIALY.WER,1) ?}
      |? POMOC.RODZ='U'
      || grp_disp(M,_env.PANEL.MAIN.TAB.USLUGI.WER,1)
      ?}
   || {? POMOC.RODZ='T'
      || exec('zakres_set_towar','material')
      |? POMOC.RODZ='U'
      || exec('zakres_set_usluga','material')
      ?}
   ?}
|| POMOC.M_ZAKR_U:=_before_u;
   POMOC.M_ZAKR_T:=_before_t
?};
~~


\zakres_set_towar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Ustawia w oknach kartoteki materiałowej odpowiedni indeks i prefiks dla towarów
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.M_ZAKR_T=''
|| POMOC.M_ZAKR_T:='T'
?};
{? POMOC.M_ZAKR_T='T'
|| {? ZAKR.R_PROD='T'
   || M.index('R_PROD');
      M.prefix('T',POMOC.RODZ,'T')
   |? ZAKR.R_KOMP='T'
   || M.index('R_KOMP');
      M.prefix('T',POMOC.RODZ,'T')
   || M.index('ARODZ');
      M.prefix('T',POMOC.RODZ)
   ?}

|? POMOC.M_ZAKR_T='N'
|| {? ZAKR.R_PROD='T'
   || M.index('R_PROD');
      M.prefix('N',POMOC.RODZ,'T')
   |? ZAKR.R_KOMP='T'
   || M.index('R_KOMP');
      M.prefix('N',POMOC.RODZ,'T')
   || M.index('ARODZ');
      M.prefix('N',POMOC.RODZ)
   ?}

|| {? ZAKR.R_PROD='T'
   || M.index('R_PROD2');
      M.prefix(POMOC.RODZ,'T')
   |? ZAKR.R_KOMP='T'
   || M.index('R_KOMP2');
      M.prefix(POMOC.RODZ,'T')
   || M.index('RODZ');
      M.prefix(POMOC.RODZ)
   ?}
?};
~~


\zakres_set_usluga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Ustawia w oknach kartoteki materiałowej odpowiedni indeks i prefiks dla towarów
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.M_ZAKR_U=''
|| POMOC.M_ZAKR_U:='T'
?};

{? POMOC.M_ZAKR_U='T'
|| M.index('ARODZ');
   M.prefix('T',POMOC.RODZ)
|? POMOC.M_ZAKR_U='N'
|| M.index('ARODZ');
   M.prefix('N',POMOC.RODZ)
||
   M.index('RODZ');
   M.prefix(POMOC.RODZ)
?};
~~


\pobrys_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: pobiera rysunek dla M
::  OLD: \pobrys_m/defin.fml
::----------------------------------------------------------------------------------------------------------------------
exec('myDIALOG','object');
{? M.RYS=null
|| FUN.info('Brak rysunku.'@)
||
   _opc:=FUN.choice('Wybierz jedną z opcji:'@,,'Podgląd rysunku'@,'Zapis rysunku'@);
   {? _opc=1
   || exec('bl_view','#blob',M,'RYS')
   |? _opc=2
   || exec('bl_save','#blob',M,'RYS')
   ?}
?};
~~


\wykorzyst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Wyswietla miejsca wykorzystania materialu jako skladowej, albo w technologii (zaleznie od wspolpracy z PROD)
::       Kontekst: aktualny rekord tabeli M
::   WE: [_a] - lista akcji, które ukryć
::  OLD: \wykorzyst/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
_actions:={? var_pres('_a')=type_of('') || _a || '' ?};
exec('whohasme','tech_mater',2,,_actions);
~~


\gen_wskl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: Ustawia ilość w wydaniu dla podanego DK
::   WE: _a - DK.ref()
::  OLD: \gen_wskl/mag_skl.fml
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh();
DK.cntx_psh();
DK.prefix();
{? DK.seek(_a) & DK.PLUS='N'
|| exec('update','rezerwacje','DK',DK.ref(),DK.N().MAG,DK.M,DK.IL,DK.SRDK);
   exec('obl_stan','magazyn_stan',DK.M,1,DK.N().MAG)
?};
ND.cntx_pop();
DK.cntx_pop();
~~


\m_ety_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PS] [17.00]
:: OPIS: Zmiana kolorow etykiet danych specyficznych dla danej firmy w oknach materiału.
::   WE: _a - okno redakcji
::----------------------------------------------------------------------------------------------------------------------
_kol:=exec('fir_ety_kol','color');
M.efld_opt(_a,'label_color='+_kol,BEER,'BADSEH');
M.efld_opt(_a,'label_color='+_kol,BEER,'BNFTT');
M.efld_opt(_a,'label_color='+_kol,BEER,'KK');
M.efld_opt(_a,'label_color='+_kol,M_DOD,'ABC');
M.efld_opt(_a,'label_color='+_kol,M_DOD,'XYZ');
~~


\actions_grayed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PS] [17.00]
:: OPIS: Wyszarza lub usuwa akcje związane z materiałem
::   WE: [_a] - STRING - akronim okna wertowania, domyślnie - obecnie używane
::----------------------------------------------------------------------------------------------------------------------
_wer:={? var_pres('_a')=type_of('') || _a || cur_win() ?};
_actions_grayed:='';
_actions:='';
_def_actions:='';

:: Dołącz grupowo
{? _wer='WER_SEL'
||
   _actions:=_actions+'RE:E';
   _wyb:={? var_pres('__tab')>0 & __tab.find_key(#M.ref())
   || 'T'
   || 'N'
   ?};
   _size:=M.sel_size();
   {? _wyb='T' | _size
   || _def_actions:='A';
      _actions_grayed:=_actions_grayed+{? _size || '' || 'Z' ?}
   || _def_actions:='Z';
      _actions_grayed:=_actions_grayed+{? _size || '' || 'A' ?}
   ?};
   _actions_grayed:=_actions_grayed+'N(KC)'
?};
M.actions(_wer,_actions,_def_actions,1);
M.actions_grayed(_wer,_actions_grayed);
~~


\mgrp_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.42]
:: OPIS: Selekcja podgrupy materiałowej
::   WY: MGRP.ref lub null
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
MGRP.cntx_psh();
MGRP.index('MGR');
MGRP.prefix();
MGRP.win_sel('SLO');
MGRP.hdr_sel();
{? MGRP.select()
|| _result:=MGRP.ref()
?};
MGRP.cntx_pop();
_result


\mgr_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.42]
:: OPIS: Selekcja grupy materiałowej
::   WY: MGR.ref lub null
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
MGR.cntx_psh();
MGR.index('MGR');
MGR.prefix();
MGR.win_sel('SLO');
MGR.hdr_sel();
{? MGR.select()
|| _result:=MGR.ref()
?};
MGR.cntx_pop();
_result


\mk_mgrp_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Tworzy grupowe okno redagowania dla grup materiałowych
::   WY: Akronim okna redagowania
::----------------------------------------------------------------------------------------------------------------------
_red:=MGRP.mk_edit('Podgrupa'@,,'zlredp');
MGRP.win_etab(_red,'Dane podstawowe'@);
MGRP.win_ewin(_red,,'RED');
MGRP.win_etab(_red,'Dane wyposażenia'@);
MGRP.win_ewin(_red,,'WYP');
exec('ok_esc','#window',MGRP,_red,1);
MGRP.win_efml(_red,,'IKONA',,'ICON_BEFORE',"Icon.icon_before(MGRP.IKONA)");
_red


\skl_copy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Tworzy kopię (nową wersję) składowych obowiązującą we wskazanych ramach czaasowych
::----------------------------------------------------------------------------------------------------------------------
TKTL.cntx_psh();
:: Podpowiadamy datę początkową o dzień większą od ostatniego końca (o ile jest), datę końcową nieokreśloną
TKTL.index('SKLAD_OD');
TKTL.prefix('T',TKTL.KTM,TKTL.TYP,'N');
{? TKTL.last()
|| _od:={? TKTL.TERM_DO=date(0,0,0) || date(0,0,0) || TKTL.TERM_DO+1 ?}
|| _od:=date(0,0,0)
?};
_do:=date(0,0,0);

_red:=TKTL.mk_edit('Nowa wersja składowych'@,,'editdaty');
TKTL.win_esep(_red,'Dane podstawowe'@);
TKTL.win_efld(_red,VAR,'GEN',,,,,,'Kopiować?'@,,,
   'check-box','check_label="%1"'['Nowa wersja będzie kopią bieżącej'@],"'T'","'N'"
);
TKTL.win_esep(_red,'Termin obowiązywania'@);
TKTL.win_efld(_red,,'TERM_OD',,,,,,'Od daty'@);
TKTL.win_efld(_red,,'TERM_DO',,,,,,'Do daty'@);
exec('ok_esc','#window',TKTL,_red);
TKTL.win_edit(_red);
VAR.GEN:='T';
TKTL.TERM_OD:=_od;
TKTL.TERM_DO:=_do;
_ok:=TKTL.edit("exec('skl_valid','material',0)");
_gen:=VAR.GEN;
_od:=TKTL.TERM_OD;
_do:=TKTL.TERM_DO;

:: Powrót do kopiowanego kompletu
TKTL.cntx_pop();

{? _ok
||
   _args:=exec('args_copy','tech_arch');
   _args.TKTL_SRC:=TKTL.ref();
   _args.DELETE:=0;
   _args.TRANS:=1;
   _args.DIR:='KARTOTEKA';
   _args.MASK_SRC:=ref_name(TKTL.ref())+3;
   _args.MASK_DST:='___';
   _args.DST_SYM:=TKTL.NRK;
   _args.DST_WER:=exec('lastver','material',TKTL.NRK);
   _args.DST_STAN:='N';
   _args.STATUS_COPY:=0;
   _args.DST_TORW:='T';
   _args.COPY_SUR:={? _gen='T' || 1 || 0 ?};
   _args.DST_T_OD:=_od;
   _args.DST_T_DO:=_do;
   _can_continue:=exec('tktl_copy','tech_arch',_args)
?};
~~


\skl_next
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Przełącza widok na kolejny komplet wg terminu obowiązywania
::----------------------------------------------------------------------------------------------------------------------
TKTL.index('SKLAD_OD');
TKTL.prefix('T',TKTL.KTM,TKTL.TYP,'N');
{? TKTL.next()
|| VAR.A_KTL:=TKTL.ref();
   TMAT.index('NL');
   TMAT.prefix(VAR.A_KTL)
|| FUN.info('Nie ma późniejszej wersji.'@)
?};
~~


\skl_prev
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Przełącza widok na poprzedni komplet wg terminu obowiązywania
::----------------------------------------------------------------------------------------------------------------------
TKTL.index('SKLAD_OD');
TKTL.prefix('T',TKTL.KTM,TKTL.TYP,'N');
{? TKTL.prev()
|| VAR.A_KTL:=TKTL.ref();
   TMAT.index('NL');
   TMAT.prefix(VAR.A_KTL)
|| FUN.info('Nie ma wcześniejszej wersji.'@)
?};
~~


\skl_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wybór kompletu do redakcji/podglądu/usunięcia
::----------------------------------------------------------------------------------------------------------------------
TKTL.index('SKLAD_OD');
TKTL.prefix('T',TKTL.KTM,TKTL.TYP,'N');
_wer:=TKTL.mk_sel('Wersje składowych'@,'P',,'selterminy',10,10,10,,'U');
::TKTL.win_fld(_wer,,'WER',,,,,1);
TKTL.win_fld(_wer,,'TERM_OD',,,,,,'Od daty'@);
TKTL.win_fld(_wer,,'TERM_DO',,,,,,'Do daty'@);
::TKTL.win_fld(_wer,,'OPIS',,,50);
TKTL.win_act(_wer,,'Formuła','Dołącz'@@,,,"exec('skl_copy','material')");
TKTL.win_act(_wer,,'Popraw',,,,"TKTL.win_edit();~~");
_formula:="
   {? VAR.A_KTL=TKTL.ref()
   || FUN.info('Nie można usunąć aktualnie przeglądanej wersji.'@)
   |? FUN.ask('Czy usunąć wskazaną wersję?'@)
   || TMAT.cntx_psh();
      TMAT.index('NL');
      TMAT.prefix(TKTL.ref());
      {? TMAT.first()
      || {! |? TMAT.del() !}
      ?};
      exec('tktl_del','material',TKTL.ref());
      TMAT.cntx_pop()
   ?}
";
TKTL.win_act(_wer,,'Formuła','Usuń'@@,,,_formula,,,,,,'U');
TKTL.win_act(_wer,,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W');
TKTL.win_act(_wer,,'Rekord',,,,,"exec('skl_valid','material',1)");
TKTL.win_sel(_wer);
{? TKTL.select(,1,5)
|| VAR.A_KTL:=TKTL.ref();
   TMAT.index('NL');
   TMAT.prefix(VAR.A_KTL)
?};
~~


\skl_rkprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Przed rekord w oknie TMAT.WERS
::----------------------------------------------------------------------------------------------------------------------
:: UWAGA: tutaj nie robimy wyszarzania akcji - jest w formułach after_refresh w oknach grupowych,
::        w których umieszczone jest okno TMAT.WERS: \slo_mat_env/zws.fml, \win_sklad/material.fml
VAR.A_T:=TMAT.PT;
VAR1.KTM:=TMAT.PT().KTM;
~~


\tktl_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Usuwa wskazaną kartę kompletacyjną - nagłówek i powiązania (zadziała tylko gdy jest pusta)
::       Dla uproszczenia i poprawy wydajności nie jest używana \TKTL_usun/tech_head.fml
::   WE: _a - TKTL.ref()
::----------------------------------------------------------------------------------------------------------------------
_tktl:=_a;
TKTL.cntx_psh();
TKTLW.cntx_psh();
TKTLW.index('REF');
TKTLW.prefix(_tktl);
{? TKTLW.first() || TKTLW.del() ?};
TKTL.prefix();
{? TKTL.seek(_tktl) || TKTL.del() ?};
TKTL.cntx_pop();
TKTLW.cntx_pop();
~~


\skl_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Sprawdza rekord nagłówka kompletu po redakcji (spójność dat)
::   WE: _a - 1: popraw, 0: dołącz
::----------------------------------------------------------------------------------------------------------------------
_tryb:=_a;

_result:=1;

_od:=TKTL.TERM_OD;
_do:={? TKTL.TERM_DO=date(0,0,0) || date(exec('max_rok','#datetime'),12,31) || TKTL.TERM_DO ?};
_ref:={? _tryb || TKTL.ref() || null() ?};

{? _do<>date(0,0,0) & _od>_do
|| FUN.emsg('Data końcowa nie może być wcześniejsza niż początkowa.'@);
   _result:=0
|| TKTL.cntx_psh();
   TKTL.index('SKLAD_OD');
   TKTL.prefix('T',TKTL.KTM,TKTL.TYP,'N');
   {? TKTL.first()
   || {!
      |? {? TKTL.ref()<>_ref
         || {? exec('date_in_interval','#datetime',_od,TKTL.TERM_OD,TKTL.TERM_DO)
            || FUN.info('Data początkowa nakłada się z inną wersją składowych.'@);
               _result:=0
            |? exec('date_in_interval','#datetime',_do,TKTL.TERM_OD,TKTL.TERM_DO)
            || FUN.info('Data końcowa nakłada się z inną wersją składowych.'@);
               _result:=0
            ?}
         ?};
         _result>0 & TKTL.next()
      !}
   ?};
   TKTL.cntx_pop()
?};

_result


\filtr_m_ind
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: przygotowuje liste materialow
::   WE:
::   WY: 0 - przygotowano liste materialow, 1 - zrezygnowano z przygotowania listy
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ZAKR.ACCESS:='N';
VAR_DEL.delete('X_Xa');
_acr_sel:=M.mk_sel('Materiały'@,'P',0,'filtr_m_ind',,,,,'U');
M.win_fld(_acr_sel,ZAKR,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
M.win_fld(_acr_sel,,'KTM',,,20,,0,'Indeks'@);
M.win_fld(_acr_sel,,'N',,,50,,0,'Nazwa'@);
M.win_act(_acr_sel,0,'Formuła','Wybierz'@@,,'Wybór pozycji'@,
   "
   X_Xa.prefix();
   {? ~X_Xa.find_key(M.KTM,)
   || X_Xa.blank();
      X_Xa.REF:=$M.ref();
      X_Xa.REFI:=#M.ref;
      X_Xa.KTM:=M.KTM;
      X_Xa.add()
   ?}
   ",,1,1);
M.win_act(_acr_sel,0,'Formuła','Zrezygnuj'@@,,'Rezygnacja z wybór pozycji'@,
      "
      X_Xa.clear();
      X_Xa.prefix(M.KTM,);
      {? X_Xa.first() || {! |? X_Xa.del() !} ?}
      ",,,1);
M.win_act(_acr_sel,0,'Formuła','Akceptuj'@@,,'Akceptacja wybóru pozycji'@,"sel_exit",,);
M.win_act(_acr_sel,0,'Kolejność');
M.win_act(_acr_sel,0,'Rekord',,,,"{? ~(var_pres('X_Xa')=-1)
                                  || exec('access','kontrahent',M.KTM,X_Xa,'KTM')
                                  ?};
                                  exec('actions','kontrahent');
                                  ~~");
M.win_sel(_acr_sel);
{? var_pres('X_Xa')=-1
||
   X_Xa:=tab_tmp(1
      ,'KTM','STRING[50]',
      ,'REF','STRING[16]',
      ,'REFI'  ,'INTEGER',)
?};
M.index('RODZ'); M.prefix('T');
_wyn:=M.select()=0 |
      {? var_pres('X_Xa')=-1
      || 1
      || {? (X_Xa.clear(); ~X_Xa.size) || FUN.info('Nic nie zostało wybrane.\nZestawienie niemożliwe.'@); 1 || 0 ?}
      ?};
_wyn


\filtr_mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: przygotowuje liste grup materialowych
::   WE:
::   WY: 0 - przygotowano liste grup materialowych, 1 - zrezygnowano z przygotowania listy
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ZAKR.ACCESS:='N';
VAR_DEL.delete('X_Xa');
_acr_sel:=MGR.mk_sel('Grupy materiałowe'@,'P',0,'filtr_mgr',,,,,'U');
MGR.win_fld(_acr_sel,ZAKR,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
MGR.win_fld(_acr_sel,,'KOD',,,8,,0,'Grupa kod'@);
MGR.win_fld(_acr_sel,,'NAZ',,,30,,0,'Nazwa'@);
MGR.win_act(_acr_sel,0,'Formuła','Wybierz'@@,,'Wybór pozycji'@,
   "
   X_Xa.prefix();
   {? ~X_Xa.find_key(MGR.KOD,)
   || X_Xa.blank();
      X_Xa.REF:=$MGR.ref();
      X_Xa.REFI:=#MGR.ref;
      X_Xa.KOD:=MGR.KOD;
      X_Xa.add()
   ?}
   ",,1,1);
MGR.win_act(_acr_sel,0,'Formuła','Zrezygnuj'@@,,'Rezygnacja z wybór pozycji'@,
      "
      X_Xa.clear();
      X_Xa.prefix(MGR.KOD,);
      {? X_Xa.first() || {! |? X_Xa.del() !} ?}
      ",,,1);
MGR.win_act(_acr_sel,0,'Formuła','Akceptuj'@@,,'Akceptacja wybóru pozycji'@,"sel_exit",,);
MGR.win_act(_acr_sel,0,'Kolejność');
MGR.win_act(_acr_sel,0,'Rekord',,,,"{? ~(var_pres('X_Xa')=-1)
                                  || exec('access','kontrahent',MGR.KOD,X_Xa,'KOD')
                                  ?};
                                  exec('actions','kontrahent');
                                  ~~");
MGR.win_sel(_acr_sel);
{? var_pres('X_Xa')=-1
||
   X_Xa:=tab_tmp(1
      ,'KOD','STRING[8]',
      ,'REF','STRING[16]',
      ,'REFI'  ,'INTEGER',)
?};
MGR.index('KOD');MGR.prefix();
_wyn:=MGR.select()=0 |
      {? var_pres('X_Xa')=-1
      || 1
      || {? (X_Xa.clear(); ~X_Xa.size) || FUN.info('Nic nie zostało wybrane.\nZestawienie niemożliwe.'@); 1 || 0 ?}
      ?};
_wyn


\mdost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: MDOST.ref()
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
MDOST.ref()


\mdostpow_dolb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: MDOSTPOW - Dołącz przed
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__env_mdostpow')<>type_of(obj_new('obj'))
      |
   var_pres('IL',__env_mdostpow)<>type_of(0)
||
   VAR_DEL.delete('__env_mdostpow');
   __env_mdostpow:=obj_new('IL')
?};
__env_mdostpow.IL:=0;
1


\mdostpow_popb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: MDOSTPOW - Popraw przed
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__env_mdostpow')<>type_of(obj_new('obj'))
      |
   var_pres('IL',__env_mdostpow)<>type_of(0)
||
   VAR_DEL.delete('__env_mdostpow');
   __env_mdostpow:=obj_new('IL')
?};
__env_mdostpow.IL:=MDOSTPOW.IL;
1


\mdostpow_reka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: MDOSTPOW - Rekord po
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? MDOSTPOW.IL<=0
||
   FUN.info('Ilość zamawiana musi być większa od zera.'@);
   return('IL')

|? __env_mdostpow.IL<>MDOSTPOW.IL
||
   MDOSTPOW.cntx_psh();
   MDOSTPOW.index('MDOST');
   MDOSTPOW.prefix(MDOST.ref(),MDOSTPOW.IL);
   _jest:=MDOSTPOW.first();
   MDOSTPOW.cntx_pop();
   {? _jest
   ||
      FUN.info('Wpis dla ilości %1 już istnieje.'@[$MDOSTPOW.IL]);
      return('IL')
   ?}
?};
{? MDOSTPOW.ILDNI<=0
||
   FUN.info('Ilość dni na realizację zamówienia musi być większa od zera.'@);
   return('ILDNI')

|? MDOSTPOW.ILDNI>365
||
   FUN.info('Ilość dni na realizację zamówienia musi być mniejsza od 365.'@);
   return('ILDNI')
?};
1


\pkwiu_cn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Zwraca kod PKWiU lub CN
::   WE: _a - data
::       _b - M.ref
::   WY:
::  OLD: \pkwiu_cn/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_date:=_a;
_mat:=_b;
_wyn:='';
M.cntx_psh();
M.prefix();
{? M.seek(_b)
||
   M_SV.cntx_psh();
   M_SV.index('OD');
   M_SV.prefix('P',null());
   _od:={? M_SV.first() || M_SV.OD || date(2020,7,1) ?};
   M_SV.cntx_pop();
   _z_m:=exec('nmsv_cn_z_m','material');
   {? _z_m=0 & M.RODZ='T' & _a>=_od
   || _wyn:=exec('daj_cn_ref','sklad',_mat,_date,1)
   || _wyn:=exec('pkwiu','material',_date,_mat)
   ?}
?};
M.cntx_pop();
_wyn


\nmsv_env_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Nowa matryca stawek VAT - środowisko - uchwyt
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__NMSV


\nmsv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Nowa matryca stawek VAT - obowiązuje od 1 kwietnia 2020 roku
::----------------------------------------------------------------------------------------------------------------------
:: DRO_TODO_AWI:  ?? Automatyczne ustalenie stawki VAT dla CN
:: DRO_TODO_AWI:  ?? Niejednoznaczność PKWiU
_done:="VAR_DEL.delete('__NMSV','__red')";
_done();

__NMSV:=obj_new(
   'OD',
   'pk15','k_pk','k_cn',
   'TAB','BUF','refresh'
);
_env:=__NMSV;

:: data obowiązywania
_return:=0;
_do:=date(0,0,0);
_od:=date(0,0,0);
_od_old:=date(0,0,0);
M_SV.cntx_psh();
M_SV.index('OD');
M_SV.prefix('P',null());
{? M_SV.first()
||
   _od_old:=M_SV.OD
||
   M_SV.blank();
   M_SV.STATUS:='P';
   M_SV.M:=null();
   M_SV.OD:=date(2020,7,1);
   M_SV.add()
?};
_red:=M_SV.mk_edit('Nowa matryca stawek VAT'@,,'nmsv_red_od');
M_SV.win_efld(_red,,'OD',,,10,,,'Obowiązuje od daty'@);
exec('ok_esc','#window',M_SV,_red);
M_SV.win_edit(_red);
{? M_SV.edit("__CHK.record(M_SV,,'OD')")
||
   _od:=M_SV.OD;
   _do:=_od-1;
   _env.OD:=_od;
   {? ~M_SV.put()
   ||
      _return:=1
   ?}
||
   _return:=1
?};
M_SV.cntx_pop();
{? _return || return() ?};

_pk15:=_env.pk15:=exec('nmsv_klucze_obj','material','pkwiu_2015.dem',0);
_k_pk:=_env.k_pk:=exec('nmsv_klucze_obj','material','pkwiu_2015_klucze_z_pkwiu_2008.dem',1);
_k_cn:=_env.k_cn:=exec('nmsv_klucze_obj','material','pkwiu_2015_klucze_na_cn_2020.dem',1);

::_Count:=sql($"
::   select
::      KOD1, count(KOD2)
::   from
::      :_a
::   group by
::      KOD1
::",_k_cn.TAB);
::_countwe:=_Count.mk_sel('',,1,,,,,,'U');
::_Count.win_sel(_countwe);
::_Count.select();

_Tab:=_env.TAB:=tab_tmp(2
   ,'RODZ','STRING[1]','Materiał/Usługa'
   ,'PKWIUOLD','STRING[20]','PKWiU do 31.03'
   ,'PKWIUNEW','STRING[20]','PKWiU'
   ,'PKWIU15','STRING[20]','PKWiU 2015'
   ,'PKWIU15I','STRING[5]','PKWiU 2015 ilość'
   ,'CN15','STRING[10]','CN 2015'
   ,'CN15I','STRING[5]','CN 2015 ilość'
   ,'CN','STRING[10]','CN'
   ,'SV','STRING[8]','Stawka VAT'
   ,'SVNEW','STRING[8]','Nowa stawka VAT'
   ,'SVNEWOP','STRING[50]','Nazwa na paragonie'
   ,'KTM','STRING[50]','Indeks'
   ,'N','STRING[100]','Nazwa'
   ,'S','REAL' ,'Stan'
   ,'MREF','STRING[16]','$M.ref');
_Tab.fld_fml('CN','PATTERN',"exec('wz_cyfry','#string')");
_env.BUF:=obj_new('PKWIUOLD','PKWIUNEW','CN','SVNEW','SVNEWOP');

_env.refresh:="
   _env:=exec('nmsv_env_get','material');
   _od:=_env.OD;
   _do:=_env.OD-1;
   _Tab:=.TAB;
   _pk15:=.pk15;
   _k_pk:=.k_pk;
   _k_cn:=.k_cn;
   _mat:=exec('FindAndGet','#table',M,_Tab.MREF,,,null());
   _Tab.PKWIUOLD:=exec('pkwiu','material',_do,_mat);
   _Tab.PKWIUNEW:=exec('pkwiu','material',_od,_mat);
   _Tab.PKWIU15I:='';
   _Tab.PKWIU15:=_k_pk.find(_Tab.PKWIUOLD);
   {? _Tab.PKWIU15=''
   || _Tab.PKWIU15:=_pk15.find(_Tab.PKWIUOLD,1);
      {? _Tab.PKWIU15<>'' || _Tab.PKWIU15I:='1' ?}
   || _Tab.PKWIU15I:=_k_pk.ile(_Tab.PKWIUOLD)
   ?};
   {? _Tab.RODZ='T' || _Tab.CN15:=_k_cn.find(_Tab.PKWIU15) || '' ?};
   {? _Tab.RODZ='T' || _Tab.CN15I:=_k_cn.ile(_Tab.PKWIU15) || '' ?};
   _Tab.CN:=exec('daj_cn_ref','sklad',_mat,_od,1);
   M.VAT:=exec('m_vat','material',_mat,null(),0,date()~1,date()~2);
   _Tab.SV:=M.VAT().KOD;
   M.VAT:=exec('m_vat','material',_mat,null(),0,_od~1,_od~2);
   _Tab.SVNEW:=M.VAT().KOD;
   _Tab.SVNEWOP:=exec('cur_fis_ktm','fis',_mat,_od~1,_od~2);
   _Tab.put()
";

_ff:="
   _Tab:=cur_tab();
   {? _Tab.RODZ='T'
   || _z_m:=exec('nmsv_cn_z_m','material'); _z_m=1
   || 1
   ?}
";
_Tab.fld_fml('PKWIUNEW','BEFORE_EDIT',_ff);
_ff:="
   _sel:=exec('nmsv_pkwiu_slo','material',fld());
   {? _sel.EXIT || fld(_sel.WYN) || ~~ ?}
";
_Tab.fld_fml('PKWIUOLD','F3',_ff);
_ff:="
   _env:=exec('nmsv_env_get','material');
   _Tab:=_env.TAB;
   _sel:=
      {? _Tab.RODZ='T'
      ||
         exec('nmsv_mpkw_slo','material',fld())
      ||
         exec('nmsv_pkwiu_slo','material',fld())
      ?};
   {? _sel.EXIT || fld(_sel.WYN) || ~~ ?}
";
_Tab.fld_fml('PKWIUNEW','F3',_ff);
_ff:="
   _env:=exec('nmsv_env_get','material');
   _buf:=_env.BUF;
   _pk15:=_env.pk15;
   _fld:=fld();
   {? _fld='' | _pk15.find(_fld,1)<>''
   || 1
   || ~FUN.ask('Brak wartości %1 w słowniku PKWiU 2015.\nCzy powrócić do redakcji pola?'@[_fld])
   ?}
";
_Tab.fld_fml('PKWIUOLD','AFTER_EDIT',_ff);
_ff:="
   _env:=exec('nmsv_env_get','material');
   _Tab:=_env.TAB;
   {? _Tab.RODZ='T'
   ||
      1
   ||
      _buf:=_env.BUF;
      _pk15:=_env.pk15;
      _fld:=fld();
      {? _fld='' | _pk15.find(_fld,1)<>''
      || 1
      || ~FUN.ask('Brak wartości %1 w słowniku PKWiU 2015.\nCzy powrócić do redakcji pola?'@[_fld])
      ?}
   ?}
";
_Tab.fld_fml('PKWIUNEW','AFTER_EDIT',_ff);
_ff:="
   _Tab:=cur_tab();
   {? _Tab.RODZ='T'
   || _z_m:=exec('nmsv_cn_z_m','material'); _z_m=0
   || 0
   ?}
";
_Tab.fld_fml('CN','BEFORE_EDIT',_ff);
_ff:="
   _sel:=exec('nmsv_cn_slo','material',fld());
   {? _sel.EXIT || fld(_sel.WYN) || ~~ ?}
";
_Tab.fld_fml('CN','F3',_ff);
_ff:="
   _sel:=exec('nmsv_sv_slo','material',fld());
   {? _sel.EXIT || fld(_sel.WYN) || ~~ ?}
";
_Tab.fld_fml('SVNEW','F3',_ff);

M.prefix();
{? M.first
||
   _Sm:=sql('select SM.M as REFM, sum(SM.S) as S from @SM group by SM.M order by 1');
   {!
   |?
      _Tab.RODZ:=M.RODZ;
      _Tab.PKWIUOLD:=exec('pkwiu','material',_do,M.ref());
      _Tab.PKWIUNEW:=exec('pkwiu','material',_od,M.ref());
      _Tab.PKWIU15I:='';
      _Tab.PKWIU15:=_k_pk.find(_Tab.PKWIUOLD);
      {? _Tab.PKWIU15=''
      || _Tab.PKWIU15:=_pk15.find(_Tab.PKWIUOLD,1);
         {? _Tab.PKWIU15<>'' || _Tab.PKWIU15I:='1' ?}
      || _Tab.PKWIU15I:=_k_pk.ile(_Tab.PKWIUOLD)
      ?};
      _Tab.CN15:={? _Tab.RODZ='T' || _k_cn.find(_Tab.PKWIU15) || '' ?};
      _Tab.CN15I:={? _Tab.RODZ='T' || _k_cn.ile(_Tab.PKWIU15) || '' ?};
      _Tab.CN:=exec('daj_cn_ref','sklad',M.ref(),_od,1);
      M.VAT:=exec('m_vat','material',M.ref(),null(),0,date()~1,date()~2);
      _Tab.SV:=M.VAT().KOD;
      M.VAT:=exec('m_vat','material',M.ref(),null(),0,_od~1,_od~2);
      _Tab.SVNEW:=M.VAT().KOD;
      _Tab.SVNEWOP:=exec('cur_fis_ktm','fis',M.ref(),_od~1,_od~2);
      _Tab.KTM:=M.KTM;
      _Tab.N:=M.N;
      _Tab.MREF:=$M.ref;
      _Tab.S:=sql('select S from :_a where REFM=:_b',_Sm,M.ref()).S;
      _Tab.add;
      M.next
   !}
?};

_txt_do:='%1'[_do$4];
_txt_od:='%1'[_od$4];
_wer:=_Tab.mk_sel('Nowa matryca stawek VAT'@,,,'nmsv2020',,,,,'U',,,,,'maximized');
_Tab.win_fld(_wer,,'RODZ',,,-2,,1,'maTeriał/Usługa'@);
_Tab.win_fld(_wer,,'PKWIUOLD',,,10,,,'PKWiU do %1'@[_txt_do]);
_Tab.win_fld(_wer,,'PKWIUNEW',,,10,,,'PKWiU od %1'@[_txt_od]);
_Tab.win_fld(_wer,,'PKWIU15',,,10,,1,'Odpowiednik PKWiU 2015'@);
_Tab.win_fld(_wer,,'PKWIU15I',,,5,,1,'Ilość'@);
_Tab.win_fld(_wer,,'CN15',,,10,,1,'Odpowiednik CN'@);
_Tab.win_fld(_wer,,'CN15I',,,5,,1,'Ilość'@);
_Tab.win_fld(_wer,,'CN',,,10,,,'CN od %1'@[_txt_od]);
_Tab.win_fld(_wer,,'SV',,,-15,,1,'Bieżąca stawka VAT'@);
_Tab.win_fld(_wer,,'SVNEW',,,-15,,,'Stawka VAT od %1'@[_txt_od]);
_Tab.win_fld(_wer,,'SVNEWOP',,,-10,,,'Nazwa na paragonie od %1'@[_txt_od]);
_Tab.win_fld(_wer,,'KTM',,,-17,,1,'Indeks'@);
_Tab.win_fld(_wer,,'N',,,-13,,1,'Nazwa'@);
_Tab.win_fld(_wer,,'S',,,-10,ST.DOKL,1,'Stan'@);
:: Popraw
_fb:="
   _env:=exec('nmsv_env_get','material');
   _Tab:=_env.TAB;
   _buf:=_env.BUF;
   _buf.PKWIUOLD:=_Tab.PKWIUOLD;
   _buf.PKWIUNEW:=_Tab.PKWIUNEW;
   _buf.CN:=_Tab.CN;
   _buf.SVNEW:=_Tab.SVNEW;
   _buf.SVNEWOP:=_Tab.SVNEWOP;
   1
";
_fa:="
   _env:=exec('nmsv_env_get','material');
   _env.refresh()
";
_Tab.win_act(_wer,,'Popraw',,,,_fb,_fa,1);
:: Aktualizuj PKWiU
_fb:="exec('nmsv_akt_pkwiu','material')";
_Tab.win_act(_wer,0,'Formuła','Aktualizuj PKWiU'@,,'Aktualizuje PKWiU'@,_fb,,,1,_fb);
:: Aktualizuj CN
_fb:="exec('nmsv_akt_cn','material')";
_Tab.win_act(_wer,0,'Formuła','aktualizuj CN'@,,'Aktualizuje CN'@,_fb,,,1,_fb);
:: Aktualizuj stawkę VAT
_fb:="exec('nmsv_akt_sv','material')";
_Tab.win_act(_wer,0,'Formuła','aktualizuj stawkę VAT'@,,'Aktualizuje stawkę VAT'@,_fb,,,1,_fb);

_fb:="
   _choice:=FUN.ask('Czy zaktualizować stawkę VAT w kartotekach materiałowej i usługowej wg historii stawek VAT?'@);

   {? _choice

   || _env:=exec('nmsv_env_get','material');
      _Tab:=_env.TAB;
      _ind1:=_Tab.ndx_tmp(,,'MREF',,);
      _okrrok:=_env.OD~1;
      _okrmc:=_env.OD~2;

      M.cntx_psh;
      _Tab.cntx_psh;
      _Tab.index(_ind1);
      _Tab.prefix;
      M.index('ARODZ');
      M.prefix('T');
      FUN.prg_start(M.size,'Aktualizacja kartotek'@,,5);
      {? M.first
      ||
         {!
         |?
            M.VAT:=exec('m_vat','material',M.ref,null,,_okrrok,_okrmc,,,,'N');
            {? _Tab.find_key($M.ref)
            || _Tab.SV:=M.VAT().KOD
            ?};
            FUN.prg_next() & _Tab.put() & M.put & M.next()
         !}
      ?};
      M.cntx_pop;
      _Tab.cntx_pop;
      FUN.prg_stop()
   ?};

   win_disp()

";
_Tab.win_act(_wer,,'Formuła','Ak&tualizuj kartoteki'@@,,'Aktualizacja kartoteki materiałowej/usługowej'@,_fb,,,,,,'T');

_Tab.win_act(_wer,0,'Kolejność');
_fb:="exec('legenda','color','NMSV#01')
";
_Tab.win_act(_wer,0,'Formuła','Legenda'@,,,_fb);
_fb:="
   exec('rekprzed','color','NMSV#01')

";
_fa:="
   _wyn:='';

   _env:=exec('nmsv_env_get','material');
   _Tab:=_env.TAB;
   _buf:=_env.BUF;
   _od:=_env.OD;

   M.cntx_psh();
   M.prefix();
   {? ~M.seek(exec('FindAndGet','#table',M,_Tab.MREF,,,null()))
   ||
      ~~
   ||
      _akt_m:=0;
      _z_m:=exec('nmsv_cn_z_m','material');
      do();
      _akt_m:=_Tab.RODZ='T' & _z_m=0;
      exec('nmsv_pkwiu_his','material',_Tab.PKWIUOLD,M.ref());
      {? _akt_m | _buf.PKWIUNEW<>_Tab.PKWIUNEW
      ||
         _pkwiu:=M.PKWIU;
         _pkwiu1:={? _akt_m || _Tab.PKWIUOLD || _Tab.PKWIUNEW ?};
         M.PKWIU:={? _pkwiu1='' || null() || exec('nmsv_pkwiu_get','material',_pkwiu1) ?};
         {? _pkwiu1='' | M.PKWIU
         ||
            {? M.PKWIU<>_pkwiu || M.put() ?}
         ||
            undo();
            FUN.info('Pominięto aktualizację bo nie powiodło się wyznaczenie słownika PKWiU.'@);
            _wyn:={? _akt_m || 'PKWIUOLD' || 'PKWIUNEW' ?}
         ?}
      ?};
      {? _z_m=0 & _buf.CN<>_Tab.CN
      ||
         {? ~exec('nmsv_cn_upd','material',_Tab.CN,M.ref(),0,_od)
         ||
            undo();
            FUN.info('Pominięto aktualizację bo nie powiódł się zapis w kartotece kodów CN.'@);
            _wyn:='CN'
         ?}
      ?};
      {? _buf.SVNEW<>_Tab.SVNEW | _buf.SVNEWOP<>_Tab.SVNEWOP
      ||
         SLU.index('NAZ');
         SLU.prefix();
         SLU.find_key('~STAWKI VAT PL');
         SLO.index('SL');
         SLO.prefix(SLU.ref,_Tab.SVNEW);
         {? _Tab.SVNEW=''
         ||
            undo();
            FUN.info('Pominięto aktualizację bo nie podano stawki VAT.'@);
            _wyn:='SVNEW'

         |? ~SLO.first()
         ||
            undo();
            FUN.info('Pominięto aktualizację bo brak stawki vat w słowniku ~STAWKI VAT PL.'@);
            _wyn:='SVNEW'

         |? ~exec('nmsv_sv_upd','material',SLO.ref(),M.ref(),0,_Tab.SVNEWOP,_od)
         ||
            undo();
            FUN.info('Pominięto aktualizację bo nie powiódł się zapis w historii stawek VAT.'@);
            _wyn:='SVNEW'
         ?}
      ?};
      end()
   ?};
   M.cntx_pop();
   _wyn
";
_Tab.win_act(_wer,0,'Rekord',,,,_fb,_fa);

_Tab.fld_attr('MREF',2);

_Tab.win_sel(_wer);
_Tab.select;

_done()


\nmsv_klucze_obj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Zwraca obiekt do obsługi kluczy _a
::   WE: _a - nazwa pliku
::       _b - 0/1 - usuwać białe znaki
::   WY: wskaźnik na tabelę
::----------------------------------------------------------------------------------------------------------------------
_klucze:=_a;
_del_ws:=_b;
_obj:=obj_new('TAB','NDX1','NDX2','find','ile');
_obj.TAB:=exec('nmsv_klucze_imp','material',_klucze,_del_ws);
_obj.NDX1:=_obj.TAB.index('?');
_obj.NDX2:=_obj.TAB.ndx_tmp(,,'KOD2',,,'KOD1',,);
_obj.find:="
   _b:={? var_pres('_b')=type_of(0) || _b || 2 ?};
   .TAB.index(.NDX1);
   .TAB.prefix();
   {? .TAB.find_key(_a,)
   || {? _b=1 || .TAB.KOD1 || .TAB.KOD2 ?}
   || ''
   ?}
";
_obj.ile:="
   .TAB.index(.NDX1);
   .TAB.prefix(_a,);
   _il:=.TAB.size();
   {? _il
   || form(_il,,,'99')
   || ''
   ?}
";
_obj


\nmsv_klucze_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Zwraca klucze powiązań PKWiU 2008 z PKWiU 2015
::   WE: _a - nazwa pliku
::       _b - 0/1 - usuwać białe znaki
::   WY: wskaźnik na tabelę
::----------------------------------------------------------------------------------------------------------------------
_klucze:=_a;
_del_ws:=_b;

_Tab:=tab_tmp(2
   ,'KOD1','STRING[10]','PKWiU-2008'
   ,'KOD2','STRING[60]','PKWiU-2015');

_in:=fopen(_klucze,'ur',1,,1);
{? _in.is_open()
||
   _sep:=';';
   {!
   |? (_txt:=fread(_in); _txt<>'\n')
   |!
      _wsk:=_txt*_sep;
      _Tab.KOD1:=(_wsk-1)+_txt;
      _Tab.KOD1:=gsub(_Tab.KOD1,'*','');
      _Tab.KOD2:=_wsk-_txt;
      {? _del_ws || _Tab.KOD2:=gsub(_Tab.KOD2,' ','') ?};
      _Tab.KOD2:=gsub(_Tab.KOD2,'*','');
      _Tab.add()
   !}
?};

_Tab


\nmsv_akt_pkwiu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Aktualizuje PKWiU
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=exec('nmsv_env_get','material');
_Tab:=_env.TAB;
_od:=_env.OD;
_do:=_od-1;

_Sel:=_Tab.sel_aget();
{? ~_Sel.first() || _Sel.REF:=#_Tab.ref(); _Sel.add() ?};
_akc_gr:=_Sel.first() & _Sel.next();

_z_m:=exec('nmsv_cn_z_m','material');

_choice:=FUN.choice('Czy zaktualizować kody PKWiU?'@,,'Do %1'@[_do$4],'Od %1'@[_od$4]);

{? ~_choice || return(0) ?};

_mar:=_choice=1;
_kwi:=_choice=2;

exec('ini_kom','#message','Wynik aktualizacji PKWiU'@);
M.cntx_psh();
M.prefix();
MPKW.cntx_psh();
MPKW.index('KOD');
MPKW.prefix();

_loop:=_Sel.first();
{!
|? _loop
|!
   {? ~_Tab.seek(_Sel.REF,)
   ||
      ~~

   |? ~M.seek(exec('FindAndGet','#table',M,_Tab.MREF,,,null()))
   ||
      ~~
   ||
      _ok:=0;
      {? _kwi & _Tab.RODZ='T'
      ||
         exec('add_kom','#message',_Tab.KTM,7,'Nie dotyczy materiałów'@)

      |? _Tab.PKWIU15=''
      ||
         exec('add_kom','#message',_Tab.KTM,7,'Pominięto aktualizację z powodu braku odpowiednika PKWIU15'@)

      |? _akc_gr & _Tab.PKWIU15I<>'1'
      ||
         exec('add_kom','#message',_Tab.KTM,7,
            'Pominięto aktualizację z powodu braku jednoznaczności odpowiednika PKWIU15'@)
      ||
         _ok:=1;
         _pkwiu_o:={? _Tab.RODZ='T' & _kwi || _Tab.CN15 || _Tab.PKWIU15 ?};
            {? _Tab.PKWIU15I<>'1'
         ||
            _odpow:=exec('nmsv_odpow','material',_Tab.PKWIUOLD,0);
            _ok:=_odpow.EXIT;
            _pkwiu_o:=_odpow.WYN;
            &_odpow
         ?}
      ?};
      {? _ok
      ||
         _ok:=1;
         {? _Tab.RODZ='U' & _Tab.PKWIUOLD<>'' & _Tab.PKWIUOLD<>_Tab.PKWIUNEW
               |
            _Tab.RODZ='T' & _mar & _z_m
         ||
:: zapis PKWiU w hitorii
            exec('nmsv_pkwiu_his','material',{? _mar || _pkwiu_o || _Tab.PKWIUOLD ?},M.ref())
         ?};
         {? _kwi & _Tab.RODZ='U' | _mar & _Tab.RODZ='T' & _z_m=0
         ||
:: aktualizacja M.PKWIU
:: - dla usług zawsze
:: - dla materiałów jeśli CN nie jest brany z M.PKWIU
            _pkwiu:=M.PKWIU;
            M.PKWIU:=exec('nmsv_pkwiu_get','material',_pkwiu_o);
            {? M.PKWIU
            ||
               {? M.PKWIU<>_pkwiu || M.put() ?}
            ||
               _ok:=0;
               exec('add_kom','#message',_Tab.KTM,2,
                  'Pominięto aktualizację bo nie powiodło się wyznaczenie słownika PKWiU'@)
            ?}
         ?};
         {? _ok
         ||
            _env.refresh()
         ?};
         {? _ok || exec('add_kom','#message',_Tab.KTM,1,'Zaktualizowono'@) ?}
      ?}
   ?};
   _loop:=_Sel.next()
!};

MPKW.cntx_pop();
M.cntx_pop();
exec('end_kom','#message');
_Tab.sel_adel();
0


\nmsv_akt_cn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Aktualizuje CN
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=exec('nmsv_env_get','material');
_Tab:=_env.TAB;
_od:=_env.OD;

_Sel:=_Tab.sel_aget();
{? ~_Sel.first() || _Sel.REF:=#_Tab.ref(); _Sel.add() ?};
_akc_gr:=_Sel.first() & _Sel.next();

_z_m:=exec('nmsv_cn_z_m','material');

_ok:=1;
{? _z_m
|| _ok:=FUN.ask('Czy zaktualizować kody CN w kartotece PKWiU?'@)
|| _ok:=FUN.ask('Czy zaktualizować kody CN w kartotece kodów CN?'@)
?};

{? ~_ok || return(0) ?};

_ok_gr:=1;
_cn_o_gr:='';

exec('ini_kom','#message','Wynik aktualizacji CN'@);
M.cntx_psh();
M.prefix();

_loop:=_Sel.first();
{!
|? _loop
|!
   {? ~_Tab.seek(_Sel.REF,)
   ||
      ~~

   |? ~M.seek(exec('FindAndGet','#table',M,_Tab.MREF,,,null()))
   ||
      ~~
   ||
      _ok:=0;
      {? _Tab.RODZ='U'
      ||
         exec('add_kom','#message',_Tab.KTM,7,'Nie dotyczy usług'@)

      |? _Tab.CN15=''
      ||
         exec('add_kom','#message',_Tab.KTM,7,'Pominięto aktualizację z powodu braku odpowiednika CN'@)

      |? _akc_gr & (_Tab.PKWIU15I<>'1' | _Tab.CN15I<>'1')
      ||
         {? _ok_gr
         ||
            {? _cn_o_gr<>''
            ||
               _cn_o:=_cn_o_gr;
               _ok:=1
            ||
               _ok_gr:=0;
               _odpow:=exec('nmsv_odpow','material',_Tab.PKWIUOLD,1);
               {? _odpow.EXIT & FUN.ask('Czy przypisać kod CN %1 wybranym i niejednoznaczym pozycjom?'@[_odpow.WYN])
               ||
                  _ok:=_odpow.EXIT;
                  _cn_o:=_odpow.WYN;
                  _cn_o_gr:=_cn_o;
                  _ok_gr:=_ok
               ?};
               &_odpow
            ?}
         ?};
         {? ~_ok_gr
         ||
            exec('add_kom','#message',_Tab.KTM,7,
               'Pominięto aktualizację z powodu braku jednoznaczności odpowiednika CN'@)
         ?}
      ||
         _ok:=1;
         _cn_o:=_Tab.CN15;
         {? _Tab.PKWIU15I<>'1' | _Tab.CN15I<>'1'
         ||
            _odpow:=exec('nmsv_odpow','material',_Tab.PKWIUOLD,1);
            _ok:=_odpow.EXIT;
            _cn_o:=_odpow.WYN;
            &_odpow
         ?}
      ?};
      {? _ok
      ||
         {? _z_m
         ||
:: aktualizacja M.PKWIU
            exec('nmsv_pkwiu_his','material',_Tab.PKWIUOLD,M.ref());
            _pkwiu:=M.PKWIU;
            M.PKWIU:=exec('nmsv_pkwiu_get','material',_cn_o);
            {? M.PKWIU
            ||
               {? M.PKWIU<>_pkwiu || M.put() ?}
            ||
               _ok:=0;
               exec('add_kom','#message',_Tab.KTM,2,
                  'Pominięto aktualizację bo nie powiodło się wyznaczenie słownika PKWiU'@)
            ?}
         ||
:: aktualizacja CNM
            _ok:=exec('nmsv_cn_upd','material',_cn_o,M.ref(),1,_od)
         ?};
         {? _ok
         ||
            _env.refresh()
         ?};
         {? _ok || exec('add_kom','#message',_Tab.KTM,1,'Zaktualizowono'@) ?}
      ?}
   ?};
   _loop:=_Sel.next()
!};

M.cntx_pop();
exec('end_kom','#message');
_Tab.sel_adel();
0


\nmsv_akt_sv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Aktualizuje stawkę VAT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=exec('nmsv_env_get','material');
_Tab:=_env.TAB;
_od:=_env.OD;
_do:=_od-1;

_Sel:=_Tab.sel_aget();
{? ~_Sel.first() || _Sel.REF:=#_Tab.ref(); _Sel.add() ?};
_akc_gr:=_Sel.first() & _Sel.next();

_z_m:=exec('nmsv_cn_z_m','material');

_sv_slo:=exec('nmsv_sv_slo','material',{? _akc_gr || '' |? _Tab.seek(_Sel.REF,) || _Tab.SVNEW || '' ?});

{? ~_sv_slo.EXIT || return(0) ?};

_sv:=_sv_slo.WYN;
_ok:=FUN.ask('Stawka VAT %1 będzie obowiązywać od %2.\n\nCzy aktualizować stawki VAT?'@[|_sv,_od$4]);

{? ~_ok || return(0) ?};

_sv_ref:=_sv_slo.REF;

exec('ini_kom','#message','Wynik aktualizacji stawek VAT'@);
M.cntx_psh();
M.prefix();

_loop:=_Sel.first();
{!
|? _loop
|!
   {? ~_Tab.seek(_Sel.REF,)
   ||
      ~~

   |? ~M.seek(exec('FindAndGet','#table',M,_Tab.MREF,,,null()))
   ||
      ~~
   ||
:: aktualizacja Stawki VAT
      _ok:=exec('nmsv_sv_upd','material',_sv_ref,M.ref(),1,'',_od);
      {? _ok
      ||
         _env.refresh()
      ?};
      {? _ok || exec('add_kom','#message',_Tab.KTM,1,'Zaktualizowono'@) ?}
   ?};
   _loop:=_Sel.next()
!};

M.cntx_pop();
exec('end_kom','#message');
_Tab.sel_adel();
0


\nmsv_cn_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Zwraca CN.ref() odpowiadający kodowi _a, jeśli brak zapisu w kartotece CN dodaje go
::   WE: _a - CN
::   WY: CN.ref()
::----------------------------------------------------------------------------------------------------------------------
{? _a='' || return(null()) ?};
_wyn:=null();
CN.cntx_psh();
CN.index('KOD');
CN.prefix(_a,_a);
{? CN.first()
||
   _wyn:=CN.ref()
||
   CN.KOD:=_a;
   CN.OPIS:=_a;
   {? CN.add() || _wyn:=CN.ref() ?}
?};
CN.cntx_pop();
_wyn


\nmsv_cn_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Aktualizuje CN
::   WE: _a - CN
::       _b - M.ref()
::       _c - komunikaty
::       _d - data
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_cn:=_a;
_mat:=_b;
_kom:=_c;
_od:=_d;

_wyn:=1;

_do:=date(0,0,0);
_cn:=exec('nmsv_cn_get','material',_cn);
CNM.cntx_psh();
CNM.M:=_mat;
M.cntx_psh();
_ktm:=CNM.M().KTM;
M.cntx_pop();
CNM.index('M');
CNM.prefix(_mat,);
{? ~CNM.first()
||
   CNM.M:=_mat;
   CNM.CN:=_cn;
   CNM.DATA_OD:=_od;
   CNM.DATA_DO:=_do;
   CNM.add()

|? CNM.find_le(_od)
||
   {? CNM.DATA_OD=_od
   ||
      {? _cn=null()
      ||
         {? CNM.count()=0 || CNM.del() || _wyn:=0 ?}
      ||
         CNM.CN:=_cn;
         CNM.put()
      ?}

   |? ~CNM.next()
   ||
      {? _cn=null()
      ||
         _wyn:=0
      ||
         CNM.DATA_DO:=_od-1;
         {? CNM.put()
         ||
            CNM.M:=_mat;
            CNM.CN:=_cn;
            CNM.DATA_OD:=_od;
            CNM.DATA_DO:=_do;
            CNM.add()
         ?}
      ?}
   ||
      {? _kom
      ||
         exec('add_kom','#message',_ktm,1,
            'Pominięto aktualizację bo kartoteka CN zawiera wpisy z datą od po %1 roku'@[_od$6])
      ?};
      _wyn:=0
   ?}

|? CNM.find_ge(_od)
||
   {? _kom
   ||
      exec('add_kom','#message',_ktm,1,
         'Pominięto aktualizację bo kartoteka CN zawiera wpisy z datą od %1 roku'@[_od$6])
   ?};
   _wyn:=0
?};
CNM.cntx_pop();
_wyn


\nmsv_pkwiu_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Zwraca MPKW.ref() odpowiadający kodowi _a, jeśli brak zapisu w kartotece MPKW dodaje go
::   WE: _a - PKWiU
::   WY: MPKW.ref()
::----------------------------------------------------------------------------------------------------------------------
{? _a='' || return(null()) ?};
_wyn:=null();
MPKW.cntx_psh();
MPKW.index('KOD');
MPKW.prefix();
{? MPKW.find_key(_a,)
||
   _wyn:=MPKW.ref()
||
   _env:=exec('nmsv_env_get','material');
   _pk15:=_env.pk15;
   _op:=_pk15.find(_a);
   MPKW.blank();
   MPKW.KOD:=_a;
   MPKW.OP:={? _op<>'' || _op || _a ?};
   {? MPKW.add() || _wyn:=MPKW.ref() ?}
?};
MPKW.cntx_pop();
_wyn


\nmsv_pkwiu_his
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Dodaje, poprawia lub usuwa PKWiU w historii
::   WE: _a - PKWiU
::       _b - M.ref()
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_pkwiu:=_a;
_mat:=_b;
_wyn:=0;
_od:=date(2020,3,31);
M_SV.cntx_psh();
M_SV.index('OD');
M_SV.prefix('P',_mat,_od);
{? M_SV.first()
||
   {? M_SV.FIS_KTM<>_pkwiu
   ||
      M_SV.FIS_KTM:=_pkwiu;
      M_SV.put()
   ?};
   _wyn:=1
||
   M_SV.blank();
   M_SV.STATUS:='P';
   M_SV.M:=_mat;
   M_SV.OD:=_od;
   M_SV.FIS_KTM:=_pkwiu;
   _wyn:=M_SV.add()
?};
M_SV.cntx_pop();
_wyn


\nmsv_pkwiu_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: PKWiU 2015 - słownik
::   WE: _a - wartość pola
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_fld:=_a;

_wyn:=obj_new('EXIT','WYN');
_wyn.EXIT:=0;
_wyn.WYN:='';

_env:=exec('nmsv_env_get','material');
_pk15:=_env.pk15;
_Tab:=_pk15.TAB;
_ndx:=_pk15.NDX1;

_Tab.cntx_psh();
_Tab.index(_ndx);
_Tab.prefix();
_Tab.find_key(_fld);
_wer:=_Tab.mk_sel('PKWiU 2015'@,,,'pkwiu2015_slo',,,,,'U');
_Tab.win_fld(_wer,,'KOD1',,,20,,,'Symbol'@);
_Tab.win_fld(_wer,,'KOD2',,,60,,,'Nazwa'@);
_fb:="sel_exit()";
_Tab.win_act(_wer,,'Formuła','Wybierz'@,,,_fb,,1);
_Tab.win_sel(_wer);
{? _Tab.select(,1,2)
||
   _wyn.EXIT:=1;
   _wyn.WYN:=_Tab.KOD1
?};
_Tab.cntx_pop();
_wyn


\nmsv_mpkw_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: MPKW - słownik
::   WE: _a - wartość pola
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_fld:=_a;

_wyn:=obj_new('EXIT','WYN');
_wyn.EXIT:=0;
_wyn.WYN:='';

MPKW.cntx_psh();
MPKW.index('KOD');
MPKW.prefix();
MPKW.find_key(_fld);
_wer:=MPKW.mk_sel('PKWiU'@,,,'mpkw_slo',,,,,'U');
MPKW.win_fld(_wer,,'KOD',,,20,,,'Kod'@);
MPKW.win_fld(_wer,,'OP',,,60,,,'Opis'@);
_fb:="sel_exit()";
MPKW.win_act(_wer,,'Formuła','Wybierz'@,,,_fb,,1);
MPKW.win_sel(_wer);
{? MPKW.select(,1,2)
||
   _wyn.EXIT:=1;
   _wyn.WYN:=MPKW.KOD
?};
MPKW.cntx_pop();
_wyn


\nmsv_sv_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Aktualizuje CN
::   WE: _a - SLO.ref() - Stawka VAT
::       _b - M.ref()
::       _c - komunikaty
::       _d - nazwa na paragonie
::       _e - data
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_sv:=_a;
_mat:=_b;
_kom:=_c;
_op:=_d;
_od:=_e;

_wyn:=1;

_czy_op:=var_pres('_d')=type_of('');
_ok:=1;
CNM.cntx_psh();
CNM.M:=_mat;
M.cntx_psh();
_ktm:=CNM.M().KTM;
CNM.cntx_pop();
M.cntx_pop();
M_SV.cntx_psh();
M_SV.index('OD');
M_SV.prefix('0',_mat,);
{? ~M_SV.first()
||
   OKR.cntx_psh();
   OKR.index('OKR');
   OKR.prefix;
   _okrfirs:={? OKR.first || date(OKR.ROK,OKR.MC,1) || date(0,0,0) ?};
   OKR.cntx_pop();
   {? _okrfirs=date(0,0,0)
   ||
      _wyn:=0
   ||
      M_SV.blank();
      M_SV.STATUS:='0';
      M_SV.M:=_mat;
      M_SV.VAT:=M_SV.M().VAT;
      M_SV.OD:=_okrfirs;
      M_SV.FIS_KTM:={? _czy_op || _op || M_SV.M().FIS_KTM ?};
      M_SV.add()
   ?}
?};
{? _wyn
||
   {? M_SV.find_ge(_od) & M_SV.OD>_od
   ||
      _wyn:=0;
      {? _kom
      ||
         exec('add_kom','#message',_Tab.KTM,2,'Pominięto aktualizację bo są stawki VAT obowiązujęce po 1.04'@)
      ?}

   |? M_SV.find_le(_od)
   ||
      {? M_SV.OD=_od
      ||
         {? M_SV.VAT<>_sv | _czy_op & M_SV.FIS_KTM<>_op
         ||
            M_SV.VAT:=_sv;
            M_SV.FIS_KTM:=_op;
            M_SV.put()
         ?}
      ||
         M_SV.blank();
         M_SV.STATUS:='0';
         M_SV.M:=_mat;
         M_SV.VAT:=_sv;
         M_SV.OD:=_od;
         M_SV.FIS_KTM:={? _czy_op || _op || M_SV.M().FIS_KTM ?};
         M_SV.add()
      ?}
   ?}
?};
M_SV.cntx_pop();

_wyn


\nmsv_sv_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Stawki VAT - słownik
::   WE: _a - wartość pola
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_fld:=_a;

_wyn:=obj_new('EXIT','WYN','REF');
_wyn.EXIT:=0;
_wyn.WYN:='';
_wyn.REF:=null();

SLU.cntx_psh();
SLU.index('NAZ');
SLU.prefix();
SLU.find_key('~STAWKI VAT PL');
SLO.cntx_psh();
SLO.index('SL');
SLO.prefix(SLU.ref);
SLO.first();
SLO.find_key(_fld);
SLO.win_sel('ONE_SEL');
SLO.hdr_sel('');
SLO.hdr_sel(SLU.OP);
{? SLO.select(,1,20)
||
   _wyn.EXIT:=1;
   _wyn.WYN:=SLO.KOD;
   _wyn.REF:=SLO.ref()
?};
SLO.hdr_sel('');
SLO.cntx_pop();
SLU.cntx_pop();
_wyn


\nmsv_cn_z_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Czy pobierać CN z pola PKWiU materiału?
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
exec('get','#params',300206,2)='T'


\nmsv_odpow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Odpowiednik PKWiU jeśli _b=0 lub CN jeśli _b=1
::   WE: _a - PKWiU
::       _b - 0/1 Czy CN?
::       [_c] - PKWIU jeśli _b=0, CN jeśli _b=1
::   WY: odpowiednik
::----------------------------------------------------------------------------------------------------------------------
_pkwiu:=_a;
_odpcn:=_b;
_kod:={? var_pres('_c')=type_of('') || _c || '' ?};

_wyn:=obj_new('EXIT','WYN');
_wyn.EXIT:=0;
_wyn.WYN:='';

_findkod:=var_pres('_c')=type_of('');
_env:=exec('nmsv_env_get','material');
_Tab:=_env.TAB;
_pk15:=_env.pk15; _Pk15:=_pk15.TAB; _pk15ndx:=_pk15.NDX1;
_k_pk:=_env.k_pk; _K_pk:=_k_pk.TAB; _k_pkndx:=_k_pk.NDX1;
_k_cn:=_env.k_cn; _K_cn:=_k_cn.TAB; _k_cnndx:=_k_cn.NDX1;

_Odpow:=tab_tmp(2
   ,'PKWIU','STRING[20]','PKWiU'
   ,'PKWIUOP','STRING[60]','Opis PKWiU'
   ,'CN','STRING[10]','CN'
   ,'CNOP','STRING[255]','Opis CN');

_Pk15.cntx_psh();
_Pk15.index(_pk15ndx);
_Pk15.prefix();
_K_cn.cntx_psh();
_K_cn.index(_k_cnndx);
_K_pk.cntx_psh();
_K_pk.index(_k_pkndx);
_K_pk.prefix(_pkwiu,);
_loop:=_K_pk.first();
{? _loop=0
||
   {? _Pk15.find_key(_pkwiu)
   ||
      {? _odpcn=0
      ||
         _Odpow.PKWIU:=_Pk15.KOD1;
         _Odpow.PKWIUOP:=_Pk15.KOD2;
         _Odpow.CN:='';
         _Odpow.CNOP:='';
         _Odpow.add()
      ||
         _K_cn.prefix(_Pk15.KOD1);
         _loop:=_K_cn.first();
         {!
         |? _loop
         |!
            _Odpow.PKWIU:=_Pk15.KOD1;
            _Odpow.PKWIUOP:=_Pk15.KOD2;
            _Odpow.CN:=_K_cn.KOD2;
            _Odpow.CNOP:=exec('FindInSet','#table','CN','KOD',_Odpow.CN,_Odpow.CN,"CN.OPIS",,,'');
            _Odpow.add();
            _loop:=_K_cn.next()
         !}
      ?}
   ?}
||
   {!
   |? _loop
   |!
      _pkwiu_o:=_K_pk.KOD2;
      {? _odpcn=0
      ||
         _Odpow.PKWIU:=_pkwiu_o;
         _Odpow.PKWIUOP:={? _Pk15.find_key(_pkwiu_o) || _Pk15.KOD2 || '' ?};
         _Odpow.CN:='';
         _Odpow.CNOP:='';
         _Odpow.add()
      ||
         _K_cn.prefix(_pkwiu_o);
         _loop:=_K_cn.first();
         {!
         |? _loop
         |!
            _Odpow.PKWIU:=_pkwiu_o;
            _Odpow.PKWIUOP:={? _Pk15.find_key(_pkwiu_o) || _Pk15.KOD2 || '' ?};
            _Odpow.CN:=_K_cn.KOD2;
            _Odpow.CNOP:=exec('FindInSet','#table','CN','KOD',_Odpow.CN,_Odpow.CN,"CN.OPIS",,,'');
            _Odpow.add();
            _loop:=_K_cn.next()
         !}
      ?};
      _loop:=_K_pk.next()
   !}
?};
_K_pk.cntx_pop();
_K_cn.cntx_pop();
_Pk15.cntx_pop();

{? _findkod
||
   _ndx:=
      {? _odpcn
      || _Odpow.ndx_tmp(,,'CN',,)
      || _Odpow.index('?')
      ?};
   _Odpow.index(_ndx);
   _wyn.EXIT:=_Odpow.find_key(_kod,)
||
   _wer:=_Odpow.mk_sel('Odpowiedniki'@,,,{? _odpcn=0 || 'nmsv_odpow' || 'nmsv_odpow_cn' ?},,,,,'U');
   _Odpow.win_fld(_wer,,'PKWIU',,,20,,,'PKWiU'@);
   _Odpow.win_fld(_wer,,'PKWIUOP',,,60,,,'Opis PKWiU'@);
   {? _odpcn
   ||
      _Odpow.win_fld(_wer,,'CN',,,20,,,'CN'@);
      _Odpow.win_fld(_wer,,'CNOP',,,60,,,'Opis CN'@)
   ?};
   _fb:="sel_exit()";
   _Odpow.win_act(_wer,,'Formuła','Wybierz'@,,,_fb,,1);
   _Odpow.win_sel(_wer);
   {? _Odpow.select()
   ||
      _wyn.EXIT:=1;
      _wyn.WYN:={? _odpcn || _Odpow.CN || _Odpow.PKWIU ?}
   ?}
?};

_wyn


\nmsv_color
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Nowa matryca stawek VAT - kolory
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=exec('nmsv_env_get','material');
_Tab:=_env.TAB;
_ok:=1;
_z_m:=exec('nmsv_cn_z_m','material');
{? _Tab.RODZ='T'
||
   {? _Tab.CN15<>''
   ||
      _kod:={? _z_m || _Tab.PKWIUNEW || _Tab.CN ?};
      _ok:=
         {? _kod=''
         || 0
         || exec('nmsv_odpow','material',_Tab.PKWIUOLD,1,_kod).EXIT
         ?}
   ?}
||
   {? _Tab.PKWIU15<>''
   ||
      _kod:=_Tab.PKWIUNEW;
      _ok:=
         {? _kod=''
         || 0
         || exec('nmsv_odpow','material',_Tab.PKWIUOLD,0,_kod).EXIT
         ?}
   ?}
?};
{? _ok
|| ''
|? _Tab.RODZ='T'
|| 'NMSV#01#01'
|| 'NMSV#01#02'
?}


\nmsv_cn_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: CN - słownik
::   WE: _a - wartość pola
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_fld:=_a;

_wyn:=obj_new('EXIT','WYN');
_wyn.EXIT:=0;
_wyn.WYN:='';

CN.cntx_psh();
CN.index('KOD');
CN.prefix();
CN.find_key(_fld);
_wer:=CN.mk_sel('Słownik kodów CN'@,,,'mpkw_slo',,,,,'U');
CN.win_fld(_wer,,'KOD',,,20,,,'Kod'@);
CN.win_fld(_wer,,'OPIS',,,60,,,'Opis'@);
_fb:="sel_exit()";
CN.win_act(_wer,,'Formuła','Wybierz'@,,,_fb,,1);
CN.win_sel(_wer);
{? CN.select(,1,2)
||
   _wyn.EXIT:=1;
   _wyn.WYN:=CN.KOD
?};
CN.cntx_pop();
_wyn


\nmsv_cenniki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Nowa matryca stawek VAT - zmiana stawki VAT i ceny brutto w aktualnych cennikach
::----------------------------------------------------------------------------------------------------------------------

_dt:=date();
_okrrok:=_dt~1;
_okrmc:=_dt~2;

_zm_t:=0;
_zm_c:=0;

_dokl_c:=2;

_tb_zm:=tab_tmp(3,
                'KTM','STRING[50]','Indeks',
                'ODDZ','STRING[1]','Oddział',
                'CENNIK','STRING[10]','Cennik',
                'WAL','STRING[3]','Waluta',
                'N','STRING[100]' ,'Nazwa',
                'CN','REAL','Cena netto',
                'CB0','REAL','Cena brutto stara',
                'CB','REAL','Cena brutto nowa',
                'SV0','STRING[8]','Stawka VAT stara',
                'SV','STRING[8]','Stawka VAT nowa'
                );
_okn_zm:=_tb_zm.mk_sel('Zmiany w cennikach',,,'zm_cen',1,,,,'U');
_tb_zm.win_fld(_okn_zm,,'KTM',,,20,,1,'Indeks');
_tb_zm.win_fld(_okn_zm,,'N',,,20,,1,'Nazwa');
_tb_zm.win_fld(_okn_zm,,'ODDZ',,,1,,1,'Oddział');
_tb_zm.win_fld(_okn_zm,,'CENNIK',,,10,,1,'Cennik');
_tb_zm.win_fld(_okn_zm,,'CN',,,10,2,1,'Cena netto');
_tb_zm.win_fld(_okn_zm,,'SV0',,,8,,1,'VAT stary');
_tb_zm.win_fld(_okn_zm,,'CB0',,,10,2,1,'Cena brutto stara');
_tb_zm.win_fld(_okn_zm,,'SV',,,8,,1,'VAT nowy');
_tb_zm.win_fld(_okn_zm,,'CB',,,10,2,1,'Cena brutto nowa');
_tb_zm.win_fld(_okn_zm,,'WAL',,,3,,1,'Waluta');
_tb_zm.win_sel(_okn_zm);

_tap_ind:=TAP.ndx_tmp('',1,'TAR','SD',0,'M',,);

M.cntx_psh();
M.index('ARODZ');
M.prefix('T');
FUN.prg_start(M.size,'Aktualizacja cenników',,5);
{? M.first
|| {!
   |? _vt:=exec('m_vat','material',M.ref,null,,_okrrok,_okrmc,,,,'N');
      TAP.cntx_psh();
      TAP.index(_tap_ind);
      TAP.prefix('S',M.ref());
      {? TAP.first()
      || _zm:=0;
         {!
         |? {? TAP.DO=date(0,0,0) & TAP.SV<>_vt
            || _vt0_kod:=TAP.SV().KOD;
               _cb0:=TAP.CENB;
               TAP.SV:=_vt;
               _vat:=#((TAP.SV().KOD*'%')+TAP.SV().KOD-1)/100;
               TAP.CENB:=(TAP.CEN+(TAP.CEN*_vat))$_dokl_c;
               {? TAP.put(1)
               || _zm:=1;
                  _zm_c+=1;
                  _tb_zm.blank();
                  _tb_zm.KTM:=M.KTM;
                  _tb_zm.N:=M.N;
                  _tb_zm.CENNIK:=TAP.TAR().KOD;
                  _tb_zm.ODDZ:=TAP.TAR().ODDZ;
                  _tb_zm.WAL:=TAP.WAL().KOD;
                  _tb_zm.CN:=TAP.CEN;
                  _tb_zm.CB0:=_cb0;
                  _tb_zm.CB:=TAP.CENB;
                  _tb_zm.SV0:=_vt0_kod;
                  _tb_zm.SV:=TAP.SV().KOD;
                  _tb_zm.add(0)
               ?}
            ?};
            TAP.next()
         !};
         {? _zm
         || _zm_t+=1
         ?}
      ?};
      TAP.cntx_pop();
      FUN.prg_next() & M.next()
   !}
?};
M.cntx_pop();
FUN.prg_stop();

{? _zm_c=0
|| FUN.info('Ceny są aktualne - nie zmieniono żadnych cenników.')
|| _tb_zm.select()
?};
~~


\ewijm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Po redakcji dla pierwszej jednostki ewidencyjnej
::   WE: _a - ilość
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? ZMIENNE.M().J2<>null()
|| _j2:=ZMIENNE.M().J2;
   _ws2:=exec('oblWSP','jm',ZMIENNE.M);
   _dokl:={? ZMIENNE.M<>null || exec('jaka_dok_m','jm',ZMIENNE.M) || 3 ?};
   _dokl_s:=exec('jaka_dok_mjm','jm',ZMIENNE.M,_j2,ZMIENNE.M().J);
   {? _dokl_s<0 || _dokl_s:=_dokl ?};
   {? _j2<>null() & _ws2>0
   || _il2:=_a/_ws2 $ (_dokl_s+1);
      roundmet(BEER.MDOKL);
      _ws2:={? _il2>0 & _a>0 || _a/_il2 || _ws2 ?};
      exec('przyjdod','jm',$_j2,_ws2,_il2);
      _res:=1
   ?}
?};
_res


\zakres_m_k_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Akcja 'Zmień zakres' przy wyborze towaru dla dokumentu magazynowego przychodowego
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__M_NDX')<0
|| FUN.emsg('Zmiana zakresu jest możliwa tylko dla dokumentu zwrotu do magazynu.'@);
   return(~~)
?};
_win0:=POMOC.win_edit('?');
m_win:=M.win_sel('?');
POMOC.win_edit('M_R_K_P');
{? BEER.KH=null()
|| POMOC.M_R_KH:='N';
   POMOC.efld_opt('M_R_K_P','editable=grayed',,'M_R_KH')
|| POMOC.efld_opt('M_R_K_P','editable=1',,'M_R_KH')
?};
{? BEER.PROJEKTY=null()
|| POMOC.M_R_PROJ:='N';
   POMOC.efld_opt('M_R_K_P','editable=grayed',,'M_R_PROJ')
|| POMOC.efld_opt('M_R_K_P','editable=1',,'M_R_PROJ')
?};
{? POMOC.edit()
|| {? POMOC.M_R_KH='N' & POMOC.M_R_PROJ='N'
   || _fml:=$(__M_NDX.TAB+'.f_clear()');
      _fml();
      _fml:=$(__M_NDX.TAB+'.index(\''+__M_NDX.NDX+'\')');
      _fml();
      _fml:=$(__M_NDX.TAB+'.prefix('+__M_NDX.PRFX+')');
      _fml();
      _fml:=$(__M_NDX.TAB+'.hdr_sel(\'\')');
      _fml()
   || {? __M_NDX.TAB='MX'
      || _from:='join m';
         _where:='mx.a = \''+'T'+'\' and mx.mg = \''+$ST.MAG+'\''
      || _from:='';
         _where:='m.a = \''+'T'+'\' and m.rodz = \''+POMOC.RODZ+'\'';
         {? __M_NDX.WYPOSAZENIE
         || _where+=' and m.ktm = \''+D_HELP.M+'\''
         ?}
      ?};
      {? (__M_NDX.TAB='M' & __M_NDX.NDX='AMGM') | (__M_NDX.TAB='MX' &  __M_NDX.NDX='MGR')
      || _where+=' and m.mgr = \''+$POMOC.MGR+'\''
      ?};
      _where+=' and m.reference in '+
              '(select distinct dk.m from @dk join @nd join typydok '+
              'where typydok.p = \''+'N'+'\'';
      {? POMOC.M_R_KH='T'
      || _where+=' and nd.kh = \''+$BEER.KH+'\''
      ?};
      {? POMOC.M_R_PROJ='T'
      || _where+=' and nd.projekty = \''+$BEER.PROJEKTY+'\''
      ?};
      _where+=')';
      _fml:=$(__M_NDX.TAB+'.prefix()');
      _fml();
      {? __M_NDX.TAB='MX'
      || MX.f_set(,_from,_where)
      || M.f_set(,,_where)
      ?};
      _fml0:=$(__M_NDX.TAB+'.f_test()');
      _fml:=$(__M_NDX.TAB+'.f_first()');
      {? ~_fml0()
      || _fml()
      ?};
      _fml:=$(__M_NDX.TAB+'.hdr_sel(\' - zakres\')');
      _fml()
   ?}
?};
POMOC.win_edit(_win0);
~~


\zakres_m_k_p_pocz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Ustawienie zmiennych dla akcji'Zmień zakres' przy wyborze towaru dla dokumentu magazynowego
::   WE: _a - akronim tabeli (M, MX), domyslnie M
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<0 | (_a<>'M' & _a<>'MX')
|| _a:='M'
?};
VAR_DEL.delete('__M_NDX');
__M_NDX:=obj_new('TAB','NDX','PRFX','WYPOSAZENIE');
__M_NDX.TAB:=_a;
_fml:=$(__M_NDX.TAB+'.index(\'?\')');
__M_NDX.NDX:=_fml();
_fml:=$(__M_NDX.TAB+'.cur_prfx()');
__M_NDX.PRFX:=_fml();
__M_NDX.WYPOSAZENIE:=0;
BEER.KH:=ND.KH;
{? DK.PROJEKTY<>null()
|| BEER.PROJEKTY:=DK.PROJEKTY
|| BEER.PROJEKTY:=ND.PROJEKTY
?};
POMOC.M_R_KH:='N';
POMOC.M_R_PROJ:='N';
VAR_DEL.delete('__ZAKR_ND_KH_PROJ');
__ZAKR_ND_KH_PROJ:=0;
{? ND.TYP().P='T' & ND.TYP().DN='T' & (ND.TYP().Z='T' |
   (ND.TYP().PROJZAKR<>'' & ND.TYP().PROJZAKR<>'Nie dotyczy'))
|| __ZAKR_ND_KH_PROJ:=1
?};
~~


\zakres_m_k_p_konc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Usunięcie zmiennych dla akcji'Zmień zakres' przy wyborze towaru dla dokumentu magazynowego
::----------------------------------------------------------------------------------------------------------------------
BEER.KH:=null();
BEER.PROJEKTY:=null();
POMOC.M_R_KH:='N';
POMOC.M_R_PROJ:='N';
VAR_DEL.delete('__ZAKR_ND_KH_PROJ');
VAR_DEL.delete('__M_NDX');
~~


\init_jm2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Włączenie drugiej jednostki ewidencyjnej
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_mat:=M.ref();
_ktm:=M.KTM;
{? M.J2<>null()
|| FUN.info('Indeks %1 ma przypisaną drugą jednostkę ewidencji: %2.'@[M.KTM,M.J2().KOD]);
   _res:=0
||
:: kontrolujemy skorzystanie z drugiej jednostki miary na dokumentach
   {? _res>0
    & sql('select top 1 REFERENCE from @DK where DK.M=:_a and (not (DK.J2 is null)) and (DK.J2<>DK.JM)',_mat).first()
   || _res:=-1
   ?};
   {? _res>0
    & sql('select top 1 REFERENCE from @FAP where FAP.M=:_a and (not (FAP.J2 is null)) and (FAP.J2<>FAP.JM)',_mat).first()
   || _res:=-2
   ?};
   {? _res>0
    & sql('select top 1 REFERENCE from @ZK_P where ZK_P.M=:_a and (not (ZK_P.J2 is null)) and (ZK_P.J2<>ZK_P.JM)',_mat).first()
   || _res:=-3
   ?};
   {? _res>0
    & sql('select top 1 REFERENCE from @ZD_POZ where ZD_POZ.M=:_a and (not (ZD_POZ.J2 is null)) and (ZD_POZ.J2<>ZD_POZ.JM)',_mat).first()
   || _res:=-4
   ?};
   {? _res
    & sql('select top 1 REFERENCE from @INP where INP.M=:_a and (not (INP.J2 is null))',_mat).first()
   || _res:=-5
   ?};
   {? _res
    & sql('select top 1 REFERENCE from @PD_K where PD_K.M=:_a and (not (PD_K.J2 is null)) and (PD_K.J2<>PD_K.JM)',_mat).first()
   || _res:=-6
   ?};
   {? _res<0
   || _txt:={? _res=-1 || 'dokumenty magazynowe'@
            |? _res=-2 || 'dokumenty sprzedaży lub zakupu'@
            |? _res=-3 || 'zamówienia sprzedaży lub wewnętrzne'@
            |? _res=-4 || 'zamówienia dostaw'@
            |? _res=-5 || 'pozycje inwentaryzacji'@
            |? _res=-6 || 'pozycje koszyka planu dostaw'@
            || ''
            ?};
      FUN.info('Dla indeksu %1 wprowadzono %2 z jednostką przelicznikową.\n'
               'Wprowadzenie ewidencji wg jednostki dodatkowej niedostępne.'@[M.KTM,_txt]);
      _res:=0
   || {? FUN.ask('Czy zmienić definicję indeksu i umożliwić prowadzenie ewidencji w dodatkowej jednostce miary?\n\n'
                 'Uwaga. Wszystkie dokumenty (bez sprzedaży i zakupów), zamówienia zostaną przeliczone.\n'
                 'Operacja może być czasochłonna.'@)
      || _jm:=M.J;
         _j2:=null();
         _ws2:=0;
         _mjm:=null();
         BEER.MJM:=_mat;
         MJM.cntx_psh();
         _sel:=MJM.win_sel('?');
         _win:=MJM.mk_sel('Przeliczniki dla indeksu'@,'P',0,'mjmqsel',13,1,14,0,'U','T',0,0,0,'','wrapped');
         MJM.win_fld(_win,MJM,'JM','KOD','KOD',5,0,0,'1'@@,0,'',,);
         MJM.win_fld(_win,MJM,'JM','NAZ','*',20,0,1,'Jednostka'@@,0,'',,);
         MJM.win_fld(_win,MJM,'PRZ','','',10,5,0,'='@@,0,'',,);
         MJM.win_fld(_win,MJM,'JP','KOD','KOD',5,0,0,'',1,'',,);
         MJM.win_fld(_win,MJM,'JP','NAZ','*',20,0,1,'Jednostki'@@,0,'',,);
         MJM.win_fld(_win,BEER,'SDOKL','','',11,0,0,'Przybliżenie'@@,0,'Metoda przybliżenia części dziesiętnej'@,,);
         MJM.win_act(_win,0,'Formuła','&Wybierz'@@,'','Wybór przelicznika'@,"sel_exit","",1,0,"","",'M',0,'mobile=1,target=record');
         MJM.win_act(_win,0,'Rekord','','','',"exec('rek_mjm','jm')","exec('po_mjm','jm')",0,0,"","",'',0,'mobile=1,target=window');
         MJM.win_act(_win,0,'Szukaj','','','',"","",0,0,"","",'',0,'mobile=1,target=window');
         MJM.win_act(_win,0,'Kolejność','','','',"","",0,0,"","",'',0,'mobile=1,target=window');
         MJM.win_sel(_win);
         MJM.index('JM');
         MJM.prefix(_mat);
         {? MJM.first()
         || {? MJM.select()
            || _mjm:=MJM.ref();
               _j2:=MJM.JM;
               _ws2:=MJM.PRZ
            ?}
         || MJM.blank();
            _edt:=MJM.win_edit('RED');
            {? MJM.edit("exec('po_mjm','jm')")
            || MJM.add(1);
               _mjm:=MJM.ref();
               _j2:=MJM.JM;
               _ws2:=MJM.PRZ
            ?};
            MJM.win_edit(_edt)
         ?};
         MJM.win_sel(_sel);
         MJM.cntx_pop();

         {? _j2<>null() & _ws2>0
         || _ok:=1;
            exec('psh_cntx','powdok');
::          dokumenty magazynowe
            _tab:=sql('select REFERENCE REF from @DK where DK.M=:_a ',_mat);
            _msk:=sql('select distinct substr(:_a.REF,6,3) MSK from :_a',_tab);
            _mag:=tab_tmp(1,'REF','STRING[16]','');
            do();
            _msk.clear();
            {? _msk.first()
            || {!
               |? exec('mag_open','open_tab',1+_msk.MSK,1-_msk.MSK);
                  DK.index('MAT');
                  DK.prefix(_mat);
                  {? DK.first()
                  || {!
                     |? {? (_mag.clear(); _mag.prefix($DK.N().MAG); ~_mag.first())
                        || _mag.blank();
                           _mag.REF:=$DK.N().MAG;
                           _mag.add(1)
                        ?};
                        DK.T2:='M';
                        DK.J2:=_j2;
                        DK.WS2:=_ws2;
                        _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.J2,DK.M().J);
                        _dokl_m:=exec('jaka_dok_m','jm',DK.M);
                        {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
                        roundmet(BEER.MDOKL);
                        DK.IL2:=DK.IL/DK.WS2 $_dokl_s;
                        {? DK.put(1)
                        ||
::                         aktualiacja w wydaniu
                           {? DK.PLUS='N'
                           || REZ.index('DK');
                              REZ.prefix(DK.ref());
                              {? REZ.first()
                              || {!
                                 |? REZ.J2:=DK.J2;
                                    REZ.WS2:=DK.WS2;
                                    REZ.IL2:=DK.IL2;
                                    {? ~REZ.put(1) || _ok:=0; undo() ?};
                                    REZ.next()
                                 !}
                              ?}
                           ?};
::                         aktualizacja DK_L-a
                           DK_L.index('DK');
                           DK_L.prefix(DK.ref(),null());
                           {? DK_L.first()
                           || {!
                              |? exec('reoIL2','magdok_wymiary');
                                 {? ~DK_L.put(1) || _ok:=0; undo() ?};
                                 _ok & DK_L.next()
                              !}
                           ?}
                        || _ok:=0; undo()
                        ?};
                        _ok & DK.next()
                     !}
                  ?};
::                reorganizacje
                  DK_L.index('MMG');
                  DK_L.prefix(_mat);
                  {? DK_L.first()
                  || {!
                     |? {? DK_L.DK_LN<>null()
                        || exec('reoIL2','magdok_wymiary');
                           {? ~DK_L.put(1) || _ok:=0; undo() ?}
                        ?};
                        _ok & DK_L.next()
                     !}
                  ?};
                  _ok & _msk.next()
               !}
            ?};
            obj_del(_tab);
            obj_del(_msk);
::          REZERWACJE TYMCZASOWE
            {? _ok
            || _tab:=sql('select REFERENCE REF from @REZ where REZ.TYP=\'T\' and REZ.M=:_a ',_mat);
               _msk:=sql('select distinct substr(:_a.REF,6,3) MSK from :_a',_tab);
               _msk.clear();
               {? _msk.first()
               || {!
                  |? REZ.use('rezz'+_msk.MSK);
                     REZ.index('NRK');
                     REZ.prefix('T',_mat);
                     {? REZ.first()
                     || {!
                        |? REZ.J2:=_j2;
                           REZ.WS2:=_ws2;
                           _dokl_s:=exec('jaka_dok_mjm','jm',REZ.M,REZ.J2,REZ.M().J);
                           _dokl_m:=exec('jaka_dok_m','jm',REZ.M);
                           {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
                           roundmet(BEER.MDOKL);
                           REZ.IL2:=REZ.IL/REZ.WS2 $_dokl_s;
                           {? ~REZ.put(1) || _ok:=0; undo() ?};
                           REZ.next()
                        !}
                     ?};
                     _ok & REZ.next()
                  !}
               ?};
               obj_del(_tab);
               obj_del(_msk)
            ?};
::          ZAMÓWIENIA SPRZEDAŻY/WEWNĘTRZNE
            {? _ok
            || _tab:=sql('select REFERENCE REF from @ZK_P where ZK_P.M=:_a ',_mat);
               _msk:=sql('select distinct substr(:_a.REF,6,3) MSK from :_a',_tab);
               _msk.clear();
               {? _msk.first()
               || {!
                  |? ZK_P.index('MATMAT');
                     ZK_P.prefix(_mat);
                     {? ZK_P.first()
                     || {!
                        |? exec('openz','open_tab',_msk.MSK);
                           ZK_P.J2:=_j2;
                           ZK_P.WS2:=_ws2;
                           _dokl_s:=exec('jaka_dok_mjm','jm',ZK_P.M,ZK_P.J2,ZK_P.M().J);
                           _dokl_m:=exec('jaka_dok_m','jm',ZK_P.M);
                           {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
                           roundmet(BEER.MDOKL);
                           ZK_P.IL2:=ZK_P.ILZ/ZK_P.WS2 $_dokl_s;
                           {? ~ZK_P.put(1) || _ok:=0; undo() ?};
                           ZK_P.next()
                        !}
                     ?};
                     _ok & ZK_P.next()
                  !}
               ?};
               obj_del(_tab);
               obj_del(_msk)
            ?};
::          ZAMÓWIENIA DOSTAW
            {? _ok
            || _tab:=sql('select REFERENCE REF from @ZD_POZ where ZD_POZ.M=:_a ',_mat);
               _msk:=sql('select distinct substr(:_a.REF,6,3) MSK from :_a',_tab);
               _msk.clear();
               {? _msk.first()
               || {!
                  |? ZD_POZ.index('ZRE');
                     ZD_POZ.prefix(_mat);
                     {? ZD_POZ.first()
                     || {!
                        |? exec('openzd','open_tab',_msk.MSK);
                           ZD_POZ.J2:=_j2;
                           ZD_POZ.WS2:=_ws2;
                           _dokl_s:=exec('jaka_dok_mjm','jm',ZD_POZ.M,ZD_POZ.J2,ZD_POZ.M().J);
                           _dokl_m:=exec('jaka_dok_m','jm',ZD_POZ.M);
                           {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
                           roundmet(BEER.MDOKL);
                           ZD_POZ.IL2:=ZD_POZ.IL/ZD_POZ.WS2 $_dokl_s;
                           {? ~ZD_POZ.put(1) || _ok:=0; undo() ?};
                           ZD_POZ.next()
                        !}
                     ?};
                     _ok & ZD_POZ.next()
                  !}
               ?};
               obj_del(_tab);
               obj_del(_msk)
            ?};
::          PLAN DOSTAW
            {? _ok
            || PD_K.index('M');
               PD_K.prefix(_mat);
               {? PD_K.first()
               || {!
                  |? PD_K.J2:=_j2;
                     PD_K.WS2:=_ws2;
                     _dokl_s:=exec('jaka_dok_mjm','jm',PD_K.M,PD_K.J2,PD_K.M().J);
                     _dokl_m:=exec('jaka_dok_m','jm',PD_K.M);
                     {? _dokl_s<0 || _dokl_s:=_dokl_m ?};
                     roundmet(BEER.MDOKL);
                     PD_K.IL2:=PD_K.IL/PD_K.WS2 $_dokl_s;
                     {? ~PD_K.put(1) || _ok:=0; undo() ?};
                     PD_K.next()
                  !}
               ?}
            ?};
            {? _ok
            || VAR_DEL.delete('__j2','__ws2');
               __j2:=_j2;
               __ws2:=_ws2;
               exec('FindAndGet','#table','M',_mat,,"J2:=__j2;WS2:=__ws2;put(1)",0);
               exec('FindAndGet','#table','MJM',_mjm,,"JMG:='T';put(1)",0);
               VAR_DEL.delete('__j2','__ws2');
               _res:=1
            ?};
            _stmag:=ST.MAG;
            _mag.clear();
            {? _mag.first()
            || {!
               |? ST.MAG:=exec('FindAndGet','#table','MG',_mag.REF,,,null());
                  exec('odtst_m','magazyn_stan',_ktm,ST.MAG);
                  exec('obl_ssc','magazyn_stan',0,'',ST.MAG,_mat,'N');
                  exec('obl_smsc','magazyn_stan',ST.MAG,_mat);
                  exec('obl_stan','magazyn_stan',_mat,1,ST.MAG);
                  _mag.next()
               !}
            ?};
            end();
            ST.MAG:=_stmag;
            exec('pop_cntx','powdok')
         || _res:=0
         ?}
      || _res:=2
      ?}
   ?}
?};
_res


\zmvat_kol_kart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: zmiana vat kolory - podokno kartoteki materialowej/uslugowej
::   WY: kolor
::  OLD: \zmvat_kol_kart/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
M_SV.cntx_psh;
M_SV.index('OD');
M_SV.prefix;
{? M_SV.find_key('2',exec('FindAndGet','#table','M',__Tab.M_REF,,,null()),date(__okrrok,__okrmc,1))
|| _wyn:='M#06#01'
?};
M_SV.cntx_pop;
{? _wyn='' & (__Tab.VAT1<>'' | __Tab.FIS_KTM1<>'')
|| _wyn:='M#06#02'
?};
_wyn


\zmvat_kol_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: zmiana vat kolory - podokno uwag
::   WY: kolor
::  OLD: \zmvat_kol_kom/defin.fml
::----------------------------------------------------------------------------------------------------------------------

{? __Kom.RODZAJ=exec('zmvat_kom_rodz','material',0) || 'M#07#01'
|? __Kom.RODZAJ=exec('zmvat_kom_rodz','material',1) || 'M#07#02'
|? __Kom.RODZAJ=exec('zmvat_kom_rodz','material',2) || 'M#07#03'
|| ''
?}


\zmvat_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: dodanie komentarza
::   WE: _a - opis
::       _b - rodzaj komunikatu =0-informacja, =1-ostrzezenie, =2-blad
::  OLD: \zmvat_kom/defin.fml
::----------------------------------------------------------------------------------------------------------------------

__Kom.KTM:=__Tab.KTM;
__Kom.TAB_REF:=$__Tab.ref;
__Kom.OPIS:=_a;
__Kom.RODZAJ:=exec('zmvat_kom_rodz','material',_b);
__Kom.add


\zmvat_kom_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: zwraca opis rodzaju komunikatu
::   WE: _a - rodzaj komunikatu =0-informacja, =1-ostrzezenie, =2-blad
::  OLD: \zmvat_kol_rodz/defin.fml
::----------------------------------------------------------------------------------------------------------------------

{? _a=0 || 'Informacja'@
|? _a=1 || 'Ostrzeżenie'@
|? _a=2 || 'Błąd'@
|| ''
?}


\zmvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: zmiana stawki vat i nazwy na paragonie
::  OLD: \zmvat/defin.fml
::----------------------------------------------------------------------------------------------------------------------

:: wybor okresu od ktorego beda obowiazywac nowe stawki VAT
VAR_DEL.delete('__okr','__okrrok','__okrmc','__Tab','__ind','__ind1','__wer','__Kom','__werk');
OKR.cntx_psh();
OKR.index('OKR'); OKR.prefix(); OKR.find_key(ST.AR,ST.AM);
_wero:=OKR.mk_sel('Początkowy okres nowych ustawień',,,'zmwatokrccskekk');
OKR.win_fld(_wero,,'ROK',,,10,,1,'Rok'@);
OKR.win_fld(_wero,,'MC',,,10,,1,'Miesiac'@);
OKR.win_fld(_wero,,'NAZ',,,20,,1,'Nazwa'@);
_fb:="sel_exit";
OKR.win_act(_wero,0,'Formuła','&Wybierz'@@,,,_fb,,1,,,,'W');
OKR.win_act(_wero,,'Szukaj');
OKR.win_act(_wero,,'Kolejność');
OKR.win_sel(_wero);
__okr:={? OKR.select(,1,1) || date(OKR.ROK,OKR.MC,1) || date(0,0,0) ?};
__okrrok:={? __okr<>date(0,0,0) || OKR.ROK || 0 ?};
__okrmc:={? __okr<>date(0,0,0) || OKR.MC || 0 ?};
_okrnaz:={? __okr<>date(0,0,0) || OKR.NAZ || '' ?};
OKR.cntx_pop;

{? __okr=date(0,0,0) || return ?};

:: tabela przechowujaca informacje o kartotece materialowej
__Tab:=sql('
      select
         M.reference M_REF,
         M.RODZ RODZ,
         MGR.KOD MGRKOD,
         M.KTM KTM,
         M.N N,
         ''        '' VAT,
         ''        '' VAT1,
         ''                                                  '' FIS_KTM,
         ''                                                  '' FIS_KTM1,
         '' '' Z
      from
         M
         join MGR using(M.MGR,MGR.reference)
      where
         M.A like ''T''
      order by
         2,3,4
   ');
__ind:=__Tab.index('?');
__ind1:=__Tab.ndx_tmp(,,'M_REF',,);

__wer:=__Tab.mk_sel('Bufor kartotek materiałowej i usługowej'@,,0,'zmvatkartdacbxc',,,,,'U');
__Tab.win_fld(__wer,,'RODZ',,,7,,1,'Materiał/Usługa'@);
__Tab.win_fld(__wer,,'MGRKOD',,,8,,1,'Grupa'@);
__Tab.win_fld(__wer,,'KTM',,,20,,1,'Indeks'@);
__Tab.win_fld(__wer,,'N',,,20,,1,'Nazwa'@);
__Tab.win_fld(__wer,,'VAT',,,5,,1,'VAT'@);
__Tab.win_fld(__wer,,'VAT1',,,5,,1,'Nowy VAT'@);
__Tab.win_fld(__wer,,'FIS_KTM',,,20,,1,'Nazwa na paragonie'@);
__Tab.win_fld(__wer,,'FIS_KTM1',,,20,,,'Nowa nazwa na paragonie'@);
__Tab.win_fld(__wer,,'Z',,,2,,,'Z',,'Zmiana nazwy na parag. wymagana(T), niewymagana(N)'@);

_fb:="
   _akt:=FUN.choice('Jaki tryb akceptacji wybierasz?'@,,'Weryfikacja'@,'Aktualizacja kartoteki'@);

   {? ~_akt || return ?};

   {? __Kom.first || {! |? __Kom.del !} ?};
   __Tab.cntx_psh;
   __Tab.index(__ind); __Tab.prefix;
   {? __Tab.first
   ||
      FUN.prg_start(__Tab.size,'Akceptacja zmian'@,,5);
      {!
      |?
         {? __Tab.VAT1='' & __Tab.FIS_KTM1<>''
         ||
            exec('zmvat_kom','material','Należy przypisać nowy VAT.'@,1)
         |? __Tab.VAT1<>''
         ||
            _m_ref:=exec('FindAndGet','#table','M',__Tab.M_REF,,,null());
            {? M.seek(_m_ref)
            ||
               M.VAT:=exec('m_vat','material',M.ref,null,,__okrrok,__okrmc,,,,'S');
               __Tab.VAT:=M.VAT().KOD;
               __Tab.FIS_KTM:=exec('cur_fis_ktm','fis',M.ref,__okrrok,__okrmc);
               __Tab.put;
               {? __Tab.VAT=__Tab.VAT1 & (__Tab.FIS_KTM=__Tab.FIS_KTM1 | __Tab.FIS_KTM1='')
               ||
                  exec('zmvat_kom','material','Nowy VAT i nazwa na paragonie nie różnią się od dotychczasowych.'@,1)
               ||
                  _add:=1;
                  OKR.cntx_psh;
                  OKR.index('OKR'); OKR.prefix();
                  _okrprev:=_okrfirs:=date(0,0,0);
                  {? OKR.find_key(__okrrok,__okrmc)
                  ||
                     OKR.prev;
                     _okrprev:=date(OKR.ROK,OKR.MC,1)
                  ?};
                  {? OKR.first || _okrfirs:=date(OKR.ROK,OKR.MC,1) ?};
                  OKR.cntx_pop;
                  M_SV.index('OD');
                  M_SV.prefix('0',_m_ref);
                  {? M_SV.find_key(date(__okrrok,__okrmc,1))
                  ||
                     _add:=0
                  ?};
::                kontrola unikalnosci nazwy na paragonie
                  {? __Tab.FIS_KTM1<>''
                  ||
                     _m_ktm:=exec('chk_fis_ktm','!zws_par_kmtr',M.ref,__Tab.FIS_KTM1,1,1);
                     {? _m_ktm<>''
                     ||
                        exec('zmvat_kom','material',
                             'Podany opis pozycji paragonu jest przypisany do indeksu %1.'@[_m_ktm],2)
                     ?}
                  ?};
                  {? _akt=2
                  ||
                     __Kom.cntx_psh;
                     __Kom.index(__indk);
                     {? ~__Kom.find_key($__Tab.ref)
                     ||
                        do;
::                      zapis historyczny na podstawie danych z M
                        {? ~M_SV.first & _okrprev<>date(0,0,0) & _okrfirs<>date(0,0,0)
                        ||
                           M_SV.prefix;
                           M_SV.blank(1);
                           M_SV.STATUS:='0';
                           M_SV.M:=_m_ref;
                           M_SV.VAT:=M_SV.M().VAT;
                           M_SV.FIS_KTM:=M.FIS_KTM;
                           M_SV.OD:=_okrfirs;
                           M_SV.add;
                           {? M_SV.OD~1=__okrrok & M_SV.OD~2=__okrmc || _add:=0 ?}
                        ?};
                        M_SV.prefix('1',_m_ref,date(__okrrok,__okrmc,1));
                        {? M_SV.first
                        ||
                           {? _add
                           ||
                              M_SV.prefix;
                              M_SV.STATUS:='0';
                              {? M_SV.FIS_KTM='' || M_SV.FIS_KTM:=__Tab.FIS_KTM ?};
                              M_SV.put
                           ||
                              _vat:=M_SV.VAT;
                              _fis_ktm:={? M_SV.FIS_KTM='' || __Tab.FIS_KTM || M_SV.FIS_KTM ?};
                              M_SV.del;
                              M_SV.prefix('0',_m_ref,date(__okrrok,__okrmc,1));
                              {? M_SV.first
                              ||
                                 M_SV.VAT:=_vat;
                                 M_SV.FIS_KTM:=_fis_ktm;
                                 M_SV.put
                              ?}
                           ?}
                        ?};
                        M.VAT:=exec('m_vat','material',M.ref,null,,__okrrok,__okrmc,,,,'S');
                        __Tab.VAT:=M.VAT().KOD;
                        __Tab.FIS_KTM:=exec('cur_fis_ktm','fis',M.ref,__okrrok,__okrmc);
                        __Tab.VAT1:=__Tab.FIS_KTM1:='';
                        {? __Tab.put
                        ||
                           exec('zmvat_kom','material','Zaktualizowano pozycję.'@,0)
                        ?};
                        end
                     ?};
                     __Kom.cntx_pop
                  ?}
               ?}
            ?}
         ?};
         FUN.prg_next() & __Tab.next
      !};
      FUN.prg_stop()
   ?};
   __Tab.cntx_pop;
   __Kom.first;
   grp_disp(__Kom,__werk)
";
__Tab.win_act(__wer,,'Formuła','&Aktualizuj hist. st. vat'@@,,'Aktualizacja historii stawek VAT'@,_fb,,,,,,'A');

_fb:="
   _choice:=FUN.choice('Zaktualizować stawkę VAT i nazwę na paragonie w kartotekach materiałowej i usługowej?'@,,
      'Wg &historii st. VAT'@,'Wg &bufora'@);

   {? ~_choice || return ?};

   {? __Kom.first || {! |? __Kom.del !} ?};

   {? _choice=1
   ||
:: wg historii
      FUN.prg_start(M.size,'Aktualizacja kartotek'@,,5);
      M.cntx_psh; __Tab.cntx_psh;
      __Tab.index(__ind1); __Tab.prefix;
      M.index('ARODZ'); M.prefix('T');
      {? M.first
      ||
         {!
         |?
            M.VAT:=exec('m_vat','material',M.ref,null,,__okrrok,__okrmc,,,,'S');
            M.FIS_KTM:=exec('cur_fis_ktm','fis',M.ref,__okrrok,__okrmc);
            {? __Tab.find_key($M.ref)
            || __Tab.VAT:=M.VAT().KOD;
               __Tab.FIS_KTM:=M.FIS_KTM
            ?};
            FUN.prg_next() & __Tab.put & M.put & M.next
         !}
      ?};
      M.cntx_pop; __Tab.cntx_pop;
      FUN.prg_stop()
   ||
:: wg bufora
      FUN.prg_start(M.size,'Aktualizacja kartotek'@,,5);
      __Tab.cntx_psh; M.cntx_psh; M_SV.cntx_psh;
      __Tab.index(__ind); __Tab.prefix;
      {? __Tab.first
      ||
         M_SV.index('OD'); M_SV.prefix;
         M.prefix;
         {!
         |?
            {? __Tab.VAT1<>'' | __Tab.FIS_KTM1<>''
            ||
               {? M.seek(__Tab.M_REF)
               ||
                  _m_ktm:=exec('chk_fis_ktm','!zws_par_kmtr',M.ref,__Tab.FIS_KTM1,1,1);
                  {? _m_ktm<>''
                  ||
                     exec('zmvat_kom','material',
                          'Podany opis pozycji paragonu jest przypisany do indeksu %1.'[_m_ktm],2)
                  ||
                     {? M_SV.find_key('1',M.ref)
                     ||
                        {? M_SV.VAT || M.VAT:=M_SV.VAT ?};
                        {? M_SV.FIS_KTM<>'' || M.FIS_KTM:=M_SV.FIS_KTM ?};
                        do;
                        M_SV.del;
                        M.put;
                        __Tab.VAT1:=__Tab.FIS_KTM1:='';
                        M.VAT:=exec('m_vat','material',M.ref,null,,__okrrok,__okrmc,,,,'S');
                        __Tab.VAT:=M.VAT().KOD;
                        __Tab.FIS_KTM:=exec('cur_fis_ktm','fis',M.ref,__okrrok,__okrmc);
                        __Tab.put;
                        end
                     ?}
                  ?}
               ?}
            ?};
            FUN.prg_next() & __Tab.next
         !}
      ?};
      __Tab.cntx_pop; M.cntx_pop; M_SV.cntx_pop;
      FUN.prg_stop()
   ?};
   __Kom.first;
   grp_disp(__Kom,__werk)
";
__Tab.win_act(__wer,,'Formuła','Ak&tualizuj kartoteki'@@,,'Aktualizacja kartoteki materiałowej/usługowej'@,_fb,,,,,,'T');

__Tab.win_act(__wer,,'Menu','Wg &wzorca'@@,,'Ustalenie nowego vat i/lub nazwy na paragonie wg wzoru'@,,,,,,,'W');
_fb:="
   _Tab:=tab_tmp(1
      ,'VAT'   ,'STRING[8]'   ,'VAT'
      ,'VAT1'  ,'STRING[8]'   ,'Nowy VAT'
      ,'SLO'   ,'STRING[16]'  ,'SLO.ref'
      ,'SLO1'  ,'STRING[16]'  ,'SLO.ref');

   SLU.cntx_psh;
   SLU.index('NAZ'); SLU.prefix();
   _slu:={? SLU.find_key('~STAWKI VAT PL') || SLU.ref || null ?};
   SLU.cntx_pop;

   {? ~_slu || return ?};

:: 22% -> 23%
   _Tab.VAT:='22 %'; _Tab.SLO:=$exec('FindInSet','#table','SLO','SL',_Tab.VAT,_slu);
   _Tab.VAT1:='23 %'; _Tab.SLO1:=$exec('FindInSet','#table','SLO','SL',_Tab.VAT1,_slu);
   _Tab.add;
:: 7% -> 8%
   _Tab.VAT:=' 7 %'; _Tab.SLO:=$exec('FindInSet','#table','SLO','SL',_Tab.VAT,_slu);
   _Tab.VAT1:=' 8 %'; _Tab.SLO1:=$exec('FindInSet','#table','SLO','SL',_Tab.VAT1,_slu);
   _Tab.add;
:: 3% -> 5%
   _Tab.VAT:=' 3 %'; _Tab.SLO:=$exec('FindInSet','#table','SLO','SL',_Tab.VAT,_slu);
   _Tab.VAT1:=' 5 %'; _Tab.SLO1:=$exec('FindInSet','#table','SLO','SL',_Tab.VAT1,_slu);
   _Tab.add;

   _wer:=_Tab.mk_sel('Wzorzec'@,,0,'wzzmianyvateazc',,,10);
   _Tab.win_fld(_wer,,'VAT',,,10,,,'VAT'@);
   _Tab.win_fld(_wer,,'VAT1',,,10,,,'Nowy VAT'@);
   _fb:=\"sel_exit\";
   _Tab.win_act(_wer,,'Formuła','&Akceptuj'@@,,'Dołącz wzorzec'@,_fb,,,,,,'A');
   _fb:=\"
      _add:=-(1+menu_txt)='d';
      _ref:={? _add || null || cur_tab.ref ?};
      SLO.cntx_psh;
      SLU.index('NAZ'); SLU.prefix();
      SLU.find_key('~STAWKI VAT PL');
      SLO.index('SL'); SLO.prefix(SLU.ref); {? _add || SLO.first || SLO.find_key(cur_tab.VAT) ?};
      SLO.win_sel('ONE_SEL');
      SLO.hdr_sel(' - Definiowanie VAT wzorca'@);
      {? SLO.select(,1,20)
      || cur_tab.VAT:=SLO.KOD; cur_tab.SLO:=$SLO.ref;
         cur_tab.cntx_psh;
         cur_tab.prefix(cur_tab.VAT);
         _is:=0;
         {? cur_tab.first
         || {? _add
            || _is:=1
            || {!
               |?
                  _is:=cur_tab.ref<>_ref;
                  _is=0 & cur_tab.next
               !}
            ?}
         ?};
         cur_tab.cntx_pop;
         {? _is
         || FUN.info('Wzorzec dla stawki %1 już istnieje.'@[cur_tab.VAT])
         || {? ~_add || SLO.find_key(cur_tab.VAT1) ?};
            SLO.hdr_sel; SLO.hdr_sel(' - Definiowanie nowego VAT wzorca'@);
            {? SLO.select(,1,20)
            || cur_tab.VAT1:=SLO.KOD; cur_tab.SLO1:=$SLO.ref;
               {? _add || cur_tab.add || cur_tab.put ?}
            ?}
         ?}
      ?};
      SLO.cntx_pop
   \";
   _Tab.win_act(_wer,,'Formuła','&Dołącz'@@,,'Dołącz wzorzec'@,_fb,,,,,,'D');
   _Tab.win_act(_wer,1,'Formuła','&Dołącz'@@,,'Dołącz wzorzec'@,_fb,,,,,,'D');
   _Tab.win_act(_wer,,'Formuła','&Popraw'@@,,'Popraw wzorzec'@,_fb,,,,,,'P');
   _Tab.win_act(_wer,,'Usuń',,,'Usuń wzorzec'@);

   _Tab.win_sel(_wer);
   {? _Tab.select
   ||
      __Tab.cntx_psh;
      __Tab.index(__ind); __Tab.prefix;
      {? __Tab.first
      ||
         FUN.prg_start(__Tab.size,'Nowy VAT wg wzorca'@,,5);
         M_SV.cntx_psh;
         M_SV.prefix;
         {!
         |?
            {? __Tab.VAT1=''
            ||
               {? _Tab.find_key(__Tab.VAT)
               ||
                  _add:=1;
                  _m_ref:=exec('FindAndGet','#table','M',__Tab.M_REF,,,null());
                  M_SV.prefix('1',_m_ref,date(__okrrok,__okrmc,1));
                  do;
                  {? M_SV.first
                  ||
                     M_SV.VAT:=exec('FindAndGet','#table','SLO',_Tab.SLO1,,,null());
                     _add:=0
                  ||
                     M_SV.blank(1);
                     M_SV.STATUS:='1';
                     M_SV.M:=_m_ref;
                     M_SV.OD:=__okr;
                     M_SV.VAT:=exec('FindAndGet','#table','SLO',_Tab.SLO1,,,null())
                  ?};
                  {? {? _add || M_SV.add || M_SV.put ?}
                  ||
                     __Tab.VAT1:=_Tab.VAT1;
                     {? __Tab.put
                     ||
                        exec('zmvat_kom','material','Przypisano nowy VAT.'@,0)
                     ?}
                  ?};
                  end
               ?}
            ?};
            FUN.prg_next() & __Tab.next
         !};
         M_SV.cntx_pop;
         FUN.prg_stop()
      ?};
      __Tab.cntx_pop
   ?};
   __Kom.first;
   grp_disp(__Kom,__werk)
";
__Tab.win_act(__wer,,'Formuła','Nowy &VAT'@@,'#W','Ustalenie nowego VAT wg wzoru'@,_fb,,,,,,'V');
_fb:="
   undefine;
   define('PREFIX','','Dopisz na początku obecnej nazwy'@,'Przedrostek obecnej nazwy na paragonie'@,10);
   define('SUFFIX','','Dopisz na końcu obecnej nazwy'@,'Przyrostek obecnej nazwy'@,10);
   def_btn('text=%1'['Zapisz'@],'key:F2');
   def_btn('text=%1'['Anuluj'@],'key:Esc');
   {? def_edit(,'Wzorzec')
   ||
      {? __Kom.first || {! |? __Kom.del !} ?};

      __Tab.cntx_psh;
      _Sel:=__Tab.sel_aget;
      __Tab.sel_adel;
      {? ~_Sel.first
      || _Sel.REF:=#__Tab.ref;
         _Sel.add
      ?};
      {? _Sel.first
      ||
         FUN.prg_start(_Sel.size,'Nowa nazwa na paragonie wg wzorca'@,,5);
         M_SV.cntx_psh;
         M_SV.index('OD'); M_SV.prefix;
         _dl:=exec('get','#params',300161,1);
         {!
         |?
            {? __Tab.seek(_Sel.REF,) & __Tab.FIS_KTM1=''
            ||
               __Tab.FIS_KTM1:=_dl+{? __Tab.FIS_KTM='' || __Tab.KTM+' '+__Tab.N || __Tab.FIS_KTM ?};
               {? DEFINE.PREFIX<>''
               ||
                  __Tab.FIS_KTM1:=_dl+(DEFINE.PREFIX+__Tab.FIS_KTM1)
               ?};
               {? DEFINE.SUFFIX<>''
               ||
                  {? _dl>+DEFINE.SUFFIX
                  ||
                     __Tab.FIS_KTM1:=((_dl-(+DEFINE.SUFFIX))+__Tab.FIS_KTM1)+DEFINE.SUFFIX
                  ?}
               ?};
               do;
               _m_ref:=exec('FindAndGet','#table','M',__Tab.M_REF,,,null());
               M_SV.blank(1);
               {? M_SV.find_key('1',_m_ref,date(__okrrok,__okrmc,1))
               ||
                  M_SV.FIS_KTM:=__Tab.FIS_KTM1;
                  M_SV.put
               ||
                  M_SV.blank(1);
                  M_SV.STATUS:='1';
                  M_SV.M:=_m_ref;
                  M_SV.OD:=__okr;
                  M_SV.FIS_KTM:=__Tab.FIS_KTM1;
                  M_SV.add
               ?};
               {? __Tab.put
               ||
                  exec('zmvat_kom','material','Przypisano nową nazwę na paragonie.'@,0)
               ?};
               end
            ?};
            FUN.prg_next() & _Sel.next
         !};
         M_SV.cntx_pop;
         FUN.prg_stop()
      ?};
      __Tab.cntx_pop
   ?};
   __Kom.first;
   grp_disp(__Kom,__werk)
";
__Tab.win_act(__wer,,'Formuła','Nowa &nazwa na parag.'@@,'#W','Ustalenie nowej nazwy na parag. wg wzoru'@,
              _fb,,,1,_fb,,'N');

__Tab.win_act(__wer,,'Menu','&Drukarka fiskalna'@@,,'Funkcje drukarki fiskalnej'@,,,,,,,'D');
_fb:="
   {? ~FUN.ask('Kontrolować bazę danych drukarki fiskalnej?'@) || return ?};

   {? ~exec('set_prt','fis') || return ?};

   {? __Kom.first || {! |? __Kom.del !} ?};

   __Tab.cntx_psh;
   __Tab.index(__ind); __Tab.prefix;
   {? __Tab.first
   ||
      FUN.prg_start(__Tab.size,'Kontrola bazy danych drukarki fiskalnej'@,,5);
      _dl:=exec('get','#params',300161,1);
      _ok:=1;
      {!
      |?
         {? M.seek(__Tab.M_REF)
         ||
            _m_ref:=exec('FindAndGet','#table','M',__Tab.M_REF,,,null());
            __Tab.FIS_KTM:=exec('cur_fis_ktm','fis',M.ref,__okrrok,__okrmc);
            __Tab.put;
            _fis_ktm:={? __Tab.FIS_KTM1<>'' || __Tab.FIS_KTM1 || __Tab.FIS_KTM ?};
            {? _fis_ktm='' || _fis_ktm:=M.KTM+' '+M.N ?};
            {? +_fis_ktm>_dl
            ||
               exec('zmvat_kom','material','Za długa nazwa na paragonie: %1.'@[_fis_ktm],2)
            ||
               _vat:={? __Tab.VAT1<>'' || __Tab.VAT1 || __Tab.VAT ?};
               _vat1:=#((__Tab.VAT1*'%')+__Tab.VAT1-1);
               {? var_pres('_wynf1')>0 || obj_del(_wynf1) ?};
               _fmoz:=exec('fis_begin','faktury_fis');
               {? _fmoz[1]
               || _wynf1:=PRT_FISK.chk_spr(_fis_ktm,_vat);
                  _ok:=_wynf1[1]
               || _ok:=-2
               ?};
               exec('fis_end','faktury_fis',_fmoz);
               {? _ok=-2
               ||
::             drukarka niedostepna
                  FUN.info('Drukarka niedostępna.\nDalsza kontrola przerwana.'@);
                  _ok:=0
               |? _ok=-1
               ||
::             nieoczekiwana odpowiedz drukarki
                  FUN.info('Nieoczekiwana odpowiedź drukarki.\nDalsza kontrola przerwana.'@);
                  _ok:=0
               |? _ok=1 & #_wynf1[2]<>_vat1 & #_wynf1[2]<_vat1
               ||
::             wymagana zmiana nazwy na paragonie
                  do;
                  M_SV.cntx_psh;
                  M_SV.index('OD');
                  M_SV.prefix('2',_m_ref,date(__okrrok,__okrmc,1));
                  {? M_SV.first || M_SV.del ?};
                  M_SV.prefix('3',_m_ref,date(__okrrok,__okrmc,1));
                  {? M_SV.first || M_SV.del ?};
                  M_SV.prefix;
                  M_SV.blank(1);
                  M_SV.STATUS:='2';
                  M_SV.M:=M.ref;
                  M_SV.OD:=__okr;
                  {? M_SV.add
                  ||
                     exec('zmvat_kom','material','Wymagana zmiana nazwy na paragonie. '+
                        'Stawka VAT zapisana w drukarce wynosi %1 %%.'@[_wynf1[2]],2)
                  ?};
                  M_SV.cntx_pop;
                  __Tab.Z:='T';
                  __Tab.put;
                  end;
                  _ok:=1
               |? _ok=0 | _ok=1
               ||
::             nie wymaga zmiany nazwy
                  do;
                  M_SV.cntx_psh;
                  M_SV.index('OD');
                  M_SV.prefix('2',_m_ref,date(__okrrok,__okrmc,1));
                  {? M_SV.first || M_SV.del ?};
                  M_SV.prefix('3',_m_ref,date(__okrrok,__okrmc,1));
                  {? M_SV.first || M_SV.del ?};
                  M_SV.blank(1);
                  M_SV.STATUS:='3';
                  M_SV.M:=M.ref;
                  M_SV.OD:=__okr;
                  M_SV.add;
                  M_SV.cntx_pop;
                  __Tab.Z:='N';
                  __Tab.put;
                  end;
                  _ok:=1
               ?}
            ?}
         ?};
         FUN.prg_next() & _ok & __Tab.next
      !};
      FUN.prg_stop()
   ?};
   __Tab.cntx_pop;
   __Kom.first;
   grp_disp(__Kom,__werk)
";
__Tab.win_act(__wer,,'Formuła','&Kontroluj bazę danych'@@,'#D','Sprawdza bazę danych na drukarce'@,_fb,,,,,,'K');
_fb:="
   {? ~FUN.ask('Zerować wynik kontroli bazy danych drukarki fiskalnej?'@) || return ?};

   {? __Kom.first || {! |? __Kom.del !} ?};

   __Tab.cntx_psh; M_SV.cntx_psh;
   __Tab.index(__ind); __Tab.prefix;
   M_SV.index('OD');
   {? __Tab.first
   ||
      FUN.prg_start(__Tab.size,'Usuwanie wyniku kontroli bazy danych drukarki fiskalnej'@,,5);
      {!
      |?
         do;
         _m_ref:=exec('FindAndGet','#table','M',__Tab.M_REF,,,null());
         M_SV.prefix('2',_m_ref,date(__okrrok,__okrmc,1));
         {? M_SV.first || M_SV.del ?};
         M_SV.prefix('3',_m_ref,date(__okrrok,__okrmc,1));
         {? M_SV.first || M_SV.del ?};
         __Tab.Z:='';
         __Tab.put;
         end;
         FUN.prg_next() & __Tab.next
      !};
      FUN.prg_stop()
   ?};
   __Tab.cntx_pop; M_SV.cntx_pop;
   __Kom.first;
   grp_disp(__Kom,__werk)
";
__Tab.win_act(__wer,,'Formuła','&Usuń wynik kontroli'@@,'#D','Usuwa wynik kontroli bazy danych'@,_fb,,,,,,'U');

_fb:="
   __Tab.cntx_psh; SLO.cntx_psh;
   _Sel:=__Tab.sel_aget;
   __Tab.sel_adel;
   SLU.index('NAZ'); SLU.prefix();
   SLU.find_key('~STAWKI VAT PL');
   SLO.index('SL'); SLO.prefix(SLU.ref); SLO.find_key({? __Tab.VAT1<>'' || __Tab.VAT1 || __Tab.VAT ?});
   SLO.win_sel('ONE_SEL');
   {? SLO.select(,1,20)
   ||
      _gr:=1;
      {? ~_Sel.first || _gr:=0; _Sel.REF:=#__Tab.ref ?};
      {? _gr || {? __Kom.first || {! |? __Kom.del !} ?} ?};

      {? _Sel.REF
      ||
         {? _gr || FUN.prg_start(_Sel.size,'Nowy VAT'@,,5) ?};
         M_SV.cntx_psh;
         M_SV.index('OD');
         {!
         |?
            {? __Tab.seek(_Sel.REF,)
            ||
               do;
               _m_ref:=exec('FindAndGet','#table','M',__Tab.M_REF,,,null());
               {? __Tab.VAT1<>SLO.KOD
               ||
                  M_SV.index('OD'); M_SV.prefix('2',_m_ref,date(__okrrok,__okrmc,1));
                  {? M_SV.first || M_SV.del ?};
                  M_SV.index('OD'); M_SV.prefix('3',_m_ref,date(__okrrok,__okrmc,1));
                  {? M_SV.first || M_SV.del ?};
                  __Tab.Z:=''
               ?};
               __Tab.VAT1:=SLO.KOD;
               __Tab.put;
               M_SV.prefix('1',_m_ref,date(__okrrok,__okrmc,1));
               {? M_SV.first
               ||
                  M_SV.VAT:=SLO.ref;
                  M_SV.put
               ||
                  M_SV.blank(1);
                  M_SV.STATUS:='1';
                  M_SV.M:=_m_ref;
                  M_SV.OD:=__okr;
                  M_SV.VAT:=SLO.ref;
                  M_SV.add
               ?};
               {? _gr || exec('zmvat_kom','material','Przypisano nowy VAT.'@,0) ?};
               end
            ?};
            _ok:={? _gr || FUN.prg_next() || 1 ?};
            _ok & _Sel.next
         !};
         M_SV.cntx_pop;
         {? _gr || FUN.prg_stop() ?}
      ?}
   ?};
   __Tab.cntx_pop; SLO.cntx_pop;
   __Kom.first;
   grp_disp(__Kom,__werk)
";
__Tab.win_act(__wer,,'Formuła','Nowy &VAT'@@,,'Przypisanie nowego VAT'@,_fb,,1,1,_fb,,'V');

_fb:="
   _red:=__Tab.mk_edit('Zmiana nazwy na paragonie'@);
   __Tab.win_efld(_red,,'FIS_KTM',,,50,,1,'Nazwa na paragonie'@);
   __Tab.win_efld(_red,M,'FIS_KTM',,,50,,,'Nowa nazwa na paragonie'@);
   exec('ok_esc','#window',__Tab,_red);
   __Tab.win_edit(_red);

   M.FIS_KTM:=__Tab.FIS_KTM1;
   {? __Tab.edit & M.FIS_KTM<>__Tab.FIS_KTM1
   ||
      do;
      __Tab.FIS_KTM1:=M.FIS_KTM;
      _m_ref:=exec('FindAndGet','#table','M',__Tab.M_REF,,,null());
      __Tab.put;
      M_SV.cntx_psh;
      M_SV.index('OD'); M_SV.prefix('1',_m_ref,date(__okrrok,__okrmc,1));
      {? M_SV.first
      ||
         M_SV.FIS_KTM:=__Tab.FIS_KTM1;
         M_SV.put
      ||
         M_SV.blank(1);
         M_SV.STATUS:='1';
         M_SV.M:=_m_ref;
         M_SV.OD:=__okr;
         M_SV.FIS_KTM:=__Tab.FIS_KTM1;
         M_SV.add
      ?};
      M_SV.index('OD'); M_SV.prefix('2',_m_ref,date(__okrrok,__okrmc,1));
      {? M_SV.first || M_SV.del ?};
      M_SV.index('OD'); M_SV.prefix('3',_m_ref,date(__okrrok,__okrmc,1));
      {? M_SV.first || M_SV.del ?};
      __Tab.Z:='';
      __Tab.put;
      M_SV.cntx_pop;
      end
   ?};

   __Tab.win_edit
";
__Tab.win_act(__wer,,'Formuła','Nowa &nazwa na parag.'@@,,'Przypisanie nowej nazwy na paragonie'@,_fb,,,,,,'N');

_fb:="
   __Tab.cntx_psh;
   _Sel:=__Tab.sel_aget;
   __Tab.sel_adel;
   {? _co:=FUN.choice('Co usunąć?',,'Nowy VAT &i nową nazwę na parag.','Nowy &VAT','Nową &nazwę na parag.')
   ||
      _gr:=1;
      {? ~_Sel.first || _gr:=0; _Sel.REF:=#__Tab.ref ?};
      {? _gr || {? __Kom.first || {! |? __Kom.del !} ?} ?};

      {? _Sel.REF
      ||
         {? _gr || FUN.prg_start(_Sel.size,'Usuwanie'@,,5) ?};
         M_SV.cntx_psh;
         M_SV.index('OD');
         {!
         |?
            {? __Tab.seek(_Sel.REF,)
            ||
               _m_ref:=exec('FindAndGet','#table','M',__Tab.M_REF,,,null());
               M_SV.prefix('1',_m_ref,date(__okrrok,__okrmc,1));
               {? M_SV.first
               ||
                  do;
                  {? _co=1
                  || M_SV.del;
                     __Tab.VAT1:=__Tab.FIS_KTM1:='';
                     __Tab.put
                  |? _co=2
                  || M_SV.VAT:=null;
                     M_SV.put;
                     __Tab.VAT1:='';
                     __Tab.put
                  |? _co=3
                  || M_SV.FIS_KTM:='';
                     M_SV.put;
                     __Tab.FIS_KTM1:='';
                     __Tab.put
                  ?};
                  end
               ?}
            ?};
            _ok:={? _gr || FUN.prg_next() || 1 ?};
            _ok & _Sel.next
         !};
         M_SV.cntx_pop;
         {? _gr || FUN.prg_stop() ?}
      ?}
   ?};
   __Tab.cntx_pop
";
__Tab.win_act(__wer,,'Formuła','&Usuń'@@,,'Usuwanie nowego vat i/lub nowej nazwy na paragonie'@,_fb,,,1,_fb,,'U');

_fb:="
   M.cntx_psh;
   M.prefix;
   {? M.seek(exec('FindAndGet','#table','M',__Tab.M_REF,,,null()))
   ||
      exec('m_sv','material',1)
   ?};
   M.VAT:=exec('m_vat','material',M.ref,null,,__okrrok,__okrmc,,,,'S');
   __Tab.VAT:=M.VAT().KOD;
   __Tab.FIS_KTM:=exec('cur_fis_ktm','fis',M.ref,__okrrok,__okrmc);
   __Tab.put;
   M.cntx_pop
";
__Tab.win_act(__wer,,'Formuła','&Historia st. vat'@@,,'Historia stawek VAT materiału'@,_fb,,,,,,'H');

_fb:="
   M.prefix;
   {? M.seek(__Tab.M_REF)
   ||
      M.win_edit({? M.RODZ='T' || 'RED' || 'REDU' ?});
      M.display
   ?}
";
__Tab.win_act(__wer,,'Wyświetl',,,'Szczegóły pozycji'@,_fb);

_fb:="
   exec('rekprzed','color','M#06')
";
__Tab.win_act(__wer,,'Rekord',,,,_fb);

_fb:="exec('legenda','color','M#06')";
__Tab.win_act(__wer,,'Formuła','&Legenda'@@,,'Objaśnienie kolorów użytych w danym oknie wertowania'@,_fb,,,,,,'L');

__Tab.win_act(__wer,,'Szukaj');
__Tab.win_act(__wer,,'Kolejność');

:: tabela z uwagami po wykonaniu funkcji
__Kom:=tab_tmp(1
   ,'KTM'      ,'STRING[50]'  ,'Indeks'
   ,'OPIS'     ,'STRING[255]' ,'Opis'
   ,'TAB_REF'  ,'STRING[16]'  ,'__Tab.ref'
   ,'RODZAJ'   ,'STRING[11]'  ,'Rodzaj komunikatu');
__indk:=__Kom.ndx_tmp(,,'TAB_REF',,);

__werk:=__Kom.mk_sel('Uwagi',,0,'zmvatkomcldgeop');
__Kom.win_fld(__werk,,'KTM',,,20,,1,'Indeks',,'Indeks materiału/usługi'@);
__Kom.win_fld(__werk,,'RODZAJ',,,11,,1,'Rodzaj',,'Rodzaj uwagi'@);
__Kom.win_fld(__werk,,'OPIS',,,85,,1,'Opis',,'Treść uwagi'@);

_fb:="
   __Tab.seek(__Kom.TAB_REF);
   grp_disp(__Tab,__wer)
";
__Kom.win_act(__werk,,'Formuła','&Idź do'@@,,'Przejście do pozcji'@,_fb,,1,,,,'I');

_fb:="
   exec('rekprzed','color','M#07')
";
__Kom.win_act(__werk,,'Rekord',,,,_fb);

_fb:="exec('legenda','color','M#07')";
__Kom.win_act(__werk,,'Formuła','&Legenda'@@,,'Objaśnienie kolorów użytych w danym oknie wertowania'@,_fb,,,,,,'L');

__Kom.win_act(__werk,,'Szukaj');
__Kom.win_act(__werk,,'Kolejność');


M.cntx_psh;
M.prefix;

:: wypelnie pol VAT, VAT1, FIS_KTM, FIS_KTM1 w tabeli __Tab
_ok:=1;
{? __Tab.first
||
   FUN.prg_start(__Tab.size,'Przygotowanie bufora'@,,5);
   M_SV.cntx_psh;
   M_SV.index('OD'); M_SV.prefix;
   {!
   |?
      {? M.seek(__Tab.M_REF)
      ||
         M.VAT:=exec('m_vat','material',M.ref,null,,__okrrok,__okrmc,,,,'S');
         __Tab.VAT:=M.VAT().KOD;
         __Tab.FIS_KTM:=exec('cur_fis_ktm','fis',M.ref,__okrrok,__okrmc);
         {? M_SV.find_key('1',M.ref,date(__okrrok,__okrmc,1))
         || __Tab.VAT1:=M_SV.VAT().KOD;
            __Tab.FIS_KTM1:=M_SV.FIS_KTM
         || __Tab.VAT1:=__Tab.FIS_KTM1:=''
         ?};
         {? M_SV.find_key('2',M.ref,date(__okrrok,__okrmc,1))
         || __Tab.Z:='T'
         |? M_SV.find_key('3',M.ref,date(__okrrok,__okrmc,1))
         || __Tab.Z:='N'
         ?};
         __Tab.put
      ?};
      _ok:=FUN.prg_next();
      _ok & __Tab.next
   !};
   M_SV.cntx_pop;
   FUN.prg_stop()
?};

:: ukrywanie po technicznych
__Tab.fld_attr('M_REF',2);
__Kom.fld_attr('TAB_REF',2);

:: okno grupowe definiowania nowych stawek vat i nazw na paragonie
_werg:=__Tab.grp_make('Definiowanie VAT obowiązującego od okresu '+_okrnaz,,'zmvatdefpdacfrp');
__Tab.grp_sel(_werg,,__wer,,,,,20,,,,,'maximized_with_title');
__Tab.grp_splt(_werg,,'horizontal','panel1');
__Tab.grp_sel(_werg,__Kom,__werk,,,,,,,,,,'maximized_with_title');
__Tab.win_sel(_werg);

{? _ok || __Tab.select ?};

M.cntx_pop;

__Tab.ndx_drop(__ind1);
VAR_DEL.delete('__okr','__okrrok','__okrmc','__Tab','__ind','__ind1','__wer','__Kom','__werk')


\ae_mod_mgat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: po modyfikacji MGAT
::----------------------------------------------------------------------------------------------------------------------
_ref:=MGAT.ref();
_new:=MGAT.KOD;
M.cntx_psh();
M.index('MGAT');
M.prefix(_ref);
{? M.first()
|| {!
   |? M.GATKOD:=_new;
      M.put(1);
      M.next()
   !}
?};
M.cntx_pop();
~~


\m_win_wym_dokl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: ustawienie dokładności w pola z wymiarami
::----------------------------------------------------------------------------------------------------------------------
exec('ustawJMwym','jm');
M.fld_fml('SZER','EDIT_FORMAT',"'in_prec='+$VAR.JMDOKL");
M.fld_fml('SZER','DISPLAY_FORMAT',"'out_prec='+$VAR.JMDOKL");
M.fld_fml('DLUG','EDIT_FORMAT',"'in_prec='+$VAR.JMDOKL");
M.fld_fml('DLUG','DISPLAY_FORMAT',"'out_prec='+$VAR.JMDOKL");
M.fld_fml('WYS','EDIT_FORMAT',"'in_prec='+$VAR.JMDOKL");
M.fld_fml('WYS','DISPLAY_FORMAT',"'out_prec='+$VAR.JMDOKL");
M.fld_fml('GRUB','EDIT_FORMAT',"'in_prec='+$VAR.JMDOKL");
M.fld_fml('GRUB','DISPLAY_FORMAT',"'out_prec='+$VAR.JMDOKL");
~~


\m_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: konto kosztowe dla materialu / usługi
::   WE: _a - M.ref() material
::   WY: SLO.ref() - stawka VAT
::----------------------------------------------------------------------------------------------------------------------
_kk:=null();
{? var_pres('_a')>0
|| _kk:=exec('FindInSet','#table','M_DOD','M_DOD',_a,exec('firma','ustawienia'),"M_DOD.KK",,,null())
?};
_kk


\leg_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Akcja Legenda dla wybranych okien wertowania tabeli M
::----------------------------------------------------------------------------------------------------------------------
{? VAR.PROD='T'
|| exec('legenda','color','M#01','KTM#')
|| exec('legenda','color','M#01')
?}


\leg_mu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Akcja Legenda dla wybranych okien wertowania tabeli M (usługi)
::----------------------------------------------------------------------------------------------------------------------
{? VAR.PROD='T'
|| exec('legenda','color','M#05','KTM#')
|| exec('legenda','color','M#05')
?}


\leg_m2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Akcja Legenda dla wybranych okien wertowania tabeli M (stany magazynowe)
::----------------------------------------------------------------------------------------------------------------------
{? VAR.PROD='T'
|| exec('legenda','color','M#02','KTM#')
|| exec('legenda','color','M#02')
?}


\czy_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Sprawdza, czy podany materiał posiada zdefiniowane zamienniki
::   WE: _a - M.ref()
::  WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
MZ.cntx_psh();
MZ.index('MZ');
MZ.prefix(_a);
{? MZ.first
|| _wyn:=1
?};
MZ.cntx_pop();
_wyn


\m2zl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Rejestracja nagłówka zlecenia produkcyjnego z poziomu materiału/usługi (M)
::   WE: [_a] - kategoria zlecenia: ['P'] - proste, 'Z' - złożone
::----------------------------------------------------------------------------------------------------------------------
_kategoria:={? var_pres('_a')=type_of('') || _a || 'P' ?};
exec('zl_add','zl_head',2,_kategoria);
~~


\chk_m4rem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Buduje listę zgłoszeń, w których wykorzystany został dany indeks materiałowy.
::   WE: [_a] - M.ref() - jak niepodany to aktualny rekord
::   WY: tabela z miejscami wykorzystania indeksu
::----------------------------------------------------------------------------------------------------------------------
_ref:={? var_pres('_a')=type_of(null()) || _a || M.ref() ?};
_result:=~~;
M.cntx_psh();
M.prefix();
{? M.seek(_ref)
||
:: Przetwarzane wyłącznie zgłoszenia niezamknięte, przetwarzane surowce, do których nie wygenerowano dokumentu mag.
   _sql:=
      'select
         REM_GRM.IL as IL,
         REM_ZGL.SYM as REM_SYM,
         REM_ZGL.TYTUL as TYTUL,
         REM_ZGL.STAT_REJ as REM_STAN,
         REM_ZAS.SYMBOL as ZAS_SYM,
         REM_ZAS.NAZWA as ZAS_NAZ,
         REM_GRM.REFERENCE as REF
      from @REM_GRM
         join REM_ZGL using (REM_GRM.REM_ZGL, REM_ZGL.REFERENCE)
         left join REM_ZAS using (REM_ZGL.REM_ZAS, REM_ZAS.REFERENCE)
      where
         REM_GRM.M=:_a
         and REM_GRM.ND<>\'T\'
         and REM_ZGL.STAT_REJ<>\':_b\'
   ';
   _result:=sql(_sql,M.ref(),exec('status_closed','remonty_zgloszenia'))
?};
M.cntx_pop();
_result

:Sign Version 2.0 jowisz:1045 2023/10/26 08:53:19 8fb754aac881f936445272461876e3e0e20bb2cc61c8e0761af138c5c644ae9aea879268d9fb62dd54133cd46060f2e92e9d118446af7dee46d8aeadc57b0c43381c5ac9b26395e6f9faff2c8e37def8a590541ab4454335bf904e2c762f1effa7b3a772c63bb8752b12f5eec5e88e09bfe26722f7bab397e9f20c645df4d752
