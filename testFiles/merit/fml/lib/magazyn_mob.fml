:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: magazyn_mob.fml
:: Utworzony: 16.10.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Operacje mobilne
::======================================================================================================================


\archeann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: archwizacja pojednyczej operacji
::   WE: _a - ref EANN.ref()
::       [_b] - tabela pozycji do archiwizacji
::       [_c] - poprzedni stan operacji
::   WY: 1-gdy jest OK 0-gdy się nie udalo
::  OLD: \archeann/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_all:=0;
{? _>=2 || {? type_of(_b)<>118 || _all:=1 ?} || _all:=1 ?};
_stan:={? var_pres('_c')=type_of('') || _c || '' ?};
_wyn:=0;

EANN.cntx_psh();
EANP.cntx_psh();
EANN.clear();
{? EANN.seek(_a)
|| _oldstan:={? _stan='' || EANN.STAN || _stan ?};
   _ref_old:=EANN.ref();
   _kododd:={? 'PW'*EANN.TYP || ND.name()+2 || form((EANN.DATA~1)-2000,-2,0,'99') ?};
   _msk:=(EANN.name()-2)+_kododd;
   _msp:=(EANP.name()-2)+_kododd;
   _msw:=(EANW.name()-2)+_kododd;
   _ok:=0;
   EANN.cntx_psh();
   EANN.use(_msk);
   EANN.clear();
   EANN.AKT:='N';
   EANN.SYM:=$EANN.ref();
   {? _stan<>'' || EANN.STAN:=_stan ?};
   EANN.UNIK:=$_ref_old;
   _typ:=EANN.TYP;
   EANN.OLDSTAN:=_oldstan;
   _ref_new:={? EANN.add(1) || _ok:=1; EANN.ref() || null ?};
   EANN.cntx_pop();
   {? _ok
   || EANP.index('EANN');
      EANP.prefix(_ref_old);
      {? EANP.first()
      || {!
         |?
            {? _all | (~_all & (_b.clear(); _b.find_key($EANP.ref())))
            || _oldeanp:=EANP.ref();
               _neweanp:=null();
               EANN.cntx_psh();
               EANP.cntx_psh();
               EANN.use(_msk);
               EANP.use(_msp);
               EANP.clear();
               EANP.EANN:=_ref_new;
               EANP.NRC:=EANP.EANN().NRC;
               EANP.PAL:=null;
               EANP.PALDO:=null;
               EANP.IDPAL:=EANP.IDPALD:=EANP.KODPAL:=EANP.KODPALD:='';
               _ok:={? EANP.add(1) || _neweanp:=EANP.ref(); 1 || 0 ?};
               EANN.cntx_pop();
               EANP.cntx_pop();
::             wartości kodów GS1
               EANW.index('EANP');
               EANW.prefix(_oldeanp);
               {? _ok & EANW.first()
               || {!
                  |? EANP.cntx_psh();
                     EANW.cntx_psh();
                     EANP.use(_msp);
                     EANW.use(_msw);
                     EANW.prefix();
                     EANW.EANP:=_neweanp;
                     _ok:=EANW.add(1);
                     EANP.cntx_pop();
                     EANW.cntx_pop();
                     {? _ok || EANW.del() || 0 ?}
                  !}
               ?};
               _mat:=EANP.M;
               _mag:=EANP.LOKZ().MG;
               _pal:={? 'ZW'*EANP.EANN().TYP || EANP.PAL || null ?};
               no_msg(1);
               _oki:=EANP.del();
               no_msg(0);
               {? (';WZ'*_typ)>1 & _mat<>null & _mag<>null || exec('obl_stan','magazyn_stan',_mat,1,_mag) ?};
               {? _pal<>null
               || exec('znacznik','magdok_palety',_pal);
                  exec('ktm2pal','magdok_palety',0,_pal)
               ?};
               _oki
            || EANP.next()
            ?}
         !}
      ?};
      {? _ok
      || EANN.get();
         _wyn:=1;
         {? EANN.STAN<>'A' || EANN.STAN:='+' ?};
         EANN.AKT:='N';
         EANN.OLDSTAN:=_oldstan;
         {? EANN.TYP='Z' & (5+EANN.REFSQL)='zknag' || {? exec('FindAndGet','#table',ZK_N,EANN.REFSQL,,"STAT_REJ='A'",0)
                                                      || EANN.REF_REAL:='anulowano';
                                                         EANN.IDREA:='anulowano'
                                                      || EANN.REF_REAL:=EANN.REFSQL;
                                                         EANN.IDREA:=EANN.IDZAM
                                                      ?}
         |? EANN.TYP='Z' & (4+EANN.REFSQL)='trnl'  || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM
         |? EANN.TYP='R' & (5+EANN.REFSQL)='dokln' || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM
         |? EANN.TYP='P' & ((5+EANN.REFSQL)='zdnag' | (4+EANN.REFSQL)='trnl')
                                                   || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM
         |? EANN.TYP='W' & ((5+EANN.REFSQL)='zknag' | (4+EANN.REFSQL)='trnl')
                                                   || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM
         |? EANN.TYP='I' & (5+EANN.REFSQL)='inw_y' || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM
         ?};
         EANN.UNIK:=$_ref_new;
         {? EANN.put() & EANN.TYP='R' || exec('akt_R_M','magazyn_mobi',EANN.ref(),1) ?}
      ?}
   ?}
?};
EANN.cntx_pop();
EANP.cntx_pop();
_wyn


\addilp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zwraca ilosc pozycji dla EANN
::   WE: _a - ref EANN.ref()
::   WY: ilosc podpietych EANP
::  OLD: \addilp/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
EANN.cntx_psh();
EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(_a);
_wyn:=EANP.size();
EANN.cntx_pop();
EANP.cntx_pop();
_wyn


\operac_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: przeglad operacji
::   WE: _a - typ operacji
::       _b - 'M'-mobilne 'Z'-zlecenia webservice
::  OLD: \operac_sel/ean.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__czy_wyb','__wyb_ope','__wyb_rok','__tab_ope','__ini_ope','__refresh','__btnrefr');
__wyb_ope:='';
_typ_op:=_a;
__tab_ope:=_b;
__wyb_rok:='--';
__refresh:=0;
__btnrefr:=1;
{!
|? __czy_wyb:=0;
   __ini_ope:=1;
   FILTER.AUTOTASK:={? __tab_ope='M' || 1 || 2 ?};
   exec('operacje','magazyn_mob',_typ_op,,,,__wyb_rok,__tab_ope);
   tab_sel({? __tab_ope='M' || 1 || 2 ?});
:: R - reorganizacja, Z - kompletacja, P - przyjęcie, W - wydanie, I - inwentura
   {? __czy_wyb=1
   || {? __wyb_ope<>'' || _typ_op:=__wyb_ope ?};
      1
   || 0
   ?}
!};
VAR_DEL.delete('__czy_wyb','__wyb_ope','__wyb_rok','__tab_ope','__ini_ope','__refresh','__btnrefr');
''


\operacje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: okienko przegladu operacji wg typow
::   WE: _a - typ operacji
::       [_b] - 0-domyslnie-aktualne operacje 1-historia operacji
::       [_c] - 0-domyslnie-nowa 1-bez usuwania __stnczy
::       [_d] - 0-wyłącznie do wyboru operacji 1-nie (domyślnie)
::       [_e] - rok archiwum lub aktualne operacje '--' (domyślnie)
::       [_f] - typ operacji 'M'-mobilne(domyślnie) 'Z'-zlecenia webservice
::   WY: wynik polecenia select
::  OLD: \operacje/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=1 ?} || _d:=1 ?};
{? _>=5 || {? type_of(_e)<>2 || _e:='--' ?} || _e:='--' ?};
_rodzope:={? var_pres('_f')<>type_of('') || 'M' || _f ?};

_usun_zm:=0;
{? var_pres('__wyb_rok')<0 || _usun_zm:=1; __wyb_rok:='--' ?};
{? var_pres('__tab_ope')<0 || _usun_zm+=2; __tab_ope:='M' ?};
{? var_pres('__wyb_ope')<0 || {? _usun_zm<2 || _usun_zm+=2 ?}; __wyb_ope:=_a ?};

_czy_akt:=_e='--';
_arch:=' ('+'Archiwum z %1 roku'@[__wyb_rok]+')';
_aktmsk:=EANN.name()+3;
_newmsk:=ST.ODDZ+{? _e='--' || '__' || (_e+2) ?};

{? ~_b
|| {? _aktmsk<>_newmsk || exec('openean','open_tab',_newmsk) ?};

   VAR_DEL.delete('__sel_n','__sel_p','czy_dsp','__sel_o','bie_r','__btn_m','__btn_i','__btn_n','__btn_z','__noonly');
   VAR_DEL.delete('__selwn','__selwp','__tabMope','__selMope','__tabZope','__selZope');
   VAR_DEL.delete('__sel_n','__sel_p','czy_dsp','__sel_o','bie_r','__btn_m','__btn_i','__btn_n','__btn_z','__noonly');
   {? ~_c || VAR_DEL.delete('__sel_s') ?};
   __noonly:=_d;

   {? __noonly
   || __sel_n:='SEL';   __sel_p:='SEL'
   || __sel_n:='SELS';  __sel_p:='SELS'
   ?};
   __selwn:='SEL_W'; __selwp:='SEL_W';
   _fmikon:="{? EANN.STAN='O' || EANX.STAN:=''; 'xwin16.png:185'
             |? EANN.STAN='A' || EANX.STAN:=''; 'xwin16.png:14'
             |? EANN.STAN='R' || EANX.STAN:=''; 'xwin16.png:18'
             |? EANN.STAN='Y' || EANX.STAN:=''; 'xwin16.png:18'
             |? EANN.STAN='Z' || EANX.STAN:=''; {? ~exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
                                                || 'xwin16.png:72'
                                                || 'xwin16.png:13'
                                                ?}
             |? EANN.STAN='X' & EANN.AKT='T' || EANX.STAN:=''; 'xwin16.png:16'
             |? EANN.STAN='X' & EANN.AKT='N' || EANX.STAN:=''; 'xwin16.png:38'
             |? EANN.STAN='!' || EANX.STAN:=''; 'xwin16.png:61'
             |? EANN.STAN='+' || EANX.STAN:=''; 'xwin16.png:38'
             || ''
             ?}";
   EANN.win_fml(__sel_n,EANX,'STAN',,'ICON_BEFORE',_fmikon);
   EANN.win_fml(__selwn,EANX,'STAN',,'ICON_BEFORE',_fmikon);
   _fmikon:="{? EANX.ERR='B'
             || EANX.ERR:=''; 'xwin16.png:5'
             |? EANX.ERR='K'
             || EANX.ERR:=''; 'xwin16.png:72'
             |? EANX.ERR='M'
             || EANX.ERR:=''; 'xwin16.png:6'
             |? EANX.ERR='S'
             || EANX.ERR:=''; 'xwin16.png:17'
             |? EANX.ERR='I'
             || EANX.ERR:=''; 'xwin16.png:3'
             |? EANX.ERR='U'
             || EANX.ERR:=''; 'xwin16.png:184'
             |? EANX.ERR='D'
             || EANX.ERR:=''; 'xwin16.png:92'
             || EANX.ERR:=''; 'xwin16.png:38'
             ?}";
   EANP.win_fml(__sel_p,EANX,'ERR',,'ICON_BEFORE',_fmikon);
   {? _czy_akt
   || {? __noonly || EANN.actions(__sel_n,'Y') || EANN.actions(__sel_n,'RPAZY') ?}
   || EANN.actions(__sel_n,'RPAZ')
   ?};
   {? _czy_akt || EANP.actions(__sel_p,'')  || EANP.actions(__sel_p,'DINP') ?};
:: powolanie okienka stanow na czytnikach
:: powolanie okienka informacji o pozycji
   {? ~_c
   || __sel_s:=exec('stn_czyt','magazyn_mob',1,0)
   ?};
   EANN.win_sel(__sel_n);
   EANN.hdr_sel({? _czy_akt || '' || _arch ?});
   EANN.win_sel(__selwn);
   EANN.hdr_sel({? _czy_akt || '' || _arch ?});

   _before:="
      {? __noonly
      || exec('infoOper','magazyn_mobi',__tab_ope,1);
         {? FILTER.AUTOTASK=2
         || __tab_ope:='Z';
            exec('prefixOper','magazyn_mob');
            grp_disp(EANN,__selwn,1,1);
            win_activate('WER_WEBE');
            ~~
         |? FILTER.AUTOTASK=1
         || __tab_ope:='M';
            exec('prefixOper','magazyn_mob');
            grp_disp(EANN,__sel_n,1,1);
            win_activate('WER_MOBI');
            ~~
         ?}
      || ''
      ?}
   ";

   _acr_grp:=EANN.grp_make(,_before,{? _czy_akt || '#oper_mobil_a' || '#oper_mobilaa' ?},,,"exec('exit','zws',_a)");
   {? __noonly
   || exec('selOper','magazyn_mobi','M',_a);
      exec('selOper','magazyn_mobi','Z',_a);
      EANN.grp_sel(_acr_grp,__tabMope,__selMope,'Operacje mobilne'@
       ,"exec('dispOper','magazyn_mobi',__tabMope.WYR,'M')",,,,,,,,'maximized_with_title','WER_OPE');
      EANN.tab_splt(_acr_grp,'tab0','vertical','tab1','0, 33%');
      EANN.grp_sel(_acr_grp,EANN,__sel_n,,"exec('akt_pozy','magazyn_mob')",,,
       ,"exec('initOper','magazyn_mob',1)",,0,1
       ,'maximized_with_title','WER_MOBI');
      EANN.tab_splt(_acr_grp,'tab1','horizontal','tab2',20);
      EANN.grp_sel(_acr_grp,EANP,__sel_p,,"exec('akt_poz2','magazyn_mob')",0,14,10,,,,,'maximized_with_title','WER_MOB');
::    Zakładka OPERACJI WEBSERVICE
      EANN.grp_sel(_acr_grp,__tabZope,__selZope,'Operacje webservice'@
        ,"exec('dispOper','magazyn_mobi',__tabZope.WYR,'Z')",,,,,,,,'maximized_with_title','WER_OPZ');
      EANN.tab_splt(_acr_grp,'tab0','vertical','tab1','0, 33%');
      EANN.grp_sel(_acr_grp,EANN,__selwn,
       ,"exec('akt_pozy','magazyn_mob')",,,,"exec('initOper','magazyn_mob',2)",,,__tab_ope='Z'
       ,'maximized_with_title','WER_WEBE');
      EANN.tab_splt(_acr_grp,'tab1','horizontal','tab2',20);
      EANN.grp_sel(_acr_grp,EANP,__selwp,,"exec('akt_poz2','magazyn_mob')",0,14,10,,,,,'maximized_with_title','WER_WEB')
   |? _rodzope='M'
   || EANN.grp_sel(_acr_grp,EANN,__sel_n,,"exec('akt_pozy','magazyn_mob')",,,,,,,,'maximized_with_title','WER_MOBI');
      EANN.grp_splt(_acr_grp,,'horizontal','tab1');
      EANN.grp_sel(_acr_grp,EANP,__sel_p,,"exec('akt_poz2','magazyn_mob')",0,14,10,,,,,'maximized_with_title','WER_MOB')
   |? _rodzope='W'
   || EANN.grp_sel(_acr_grp,EANN,__selwn,,"exec('akt_pozy','magazyn_mob')",,,,,,,,'maximized_with_title','WER_WEBE');
      EANN.grp_splt(_acr_grp,,'horizontal','tab1');
      EANN.grp_sel(_acr_grp,EANP,__selwp,,"exec('akt_poz2','magazyn_mob')",0,14,10,,,,,'maximized_with_title','WER_WEB')
   ?};
   EANN.win_sel(_acr_grp);

   _refresh:="
      {? __refresh<=0
      || __btnrefr:=0;
         _filtr:=EANN.f_active();
         __refresh:={? _filtr>1 || 50
                    |? _filtr   || EANN.f_size()
                    || EANN.size()
                    ?}%50;
         win_disp();
         exec('akt_pozy','magazyn_mob');
         {? __noonly & __tab_ope='M' || exec('infoOper','magazyn_mobi',,1) ?};
         __btnrefr:=1
      || __refresh-=1
      ?}
   ";
   EANN.timer('sel',_acr_grp,2,_refresh);
   {? _czy_akt & __noonly
   || EANN.index('DATA');
      EANN.prefix('T',{? __tab_ope='M' || 'N' || 'T' ?},_a)
   |? ~_czy_akt
   || EANN.index('TYPDATA');
      EANN.prefix({? __tab_ope='M' || 'N' || 'T' ?},_a)
   || __tab_ope:=_rodzope;
      EANN.index('DATA');
      EANN.prefix();
      EANN.f_clear();
      EANN.f_set('DATA',,'\"EANN\".AKT=\'T\' and \"EANN\".STAN=\'Z\' and \"EANN\".TYP=\':_a\' and \"EANN\".ZLEC=\':_b\''
       ,_a,{? __tab_ope='M' || 'N' || 'T' ?});
      {? EANN.f_first()
      || {!
         |? {? exec('ctrlEANN','magazyn_mob',_a,1,0)
            || EANN.f_next()
            || EANN.f_del()
            ?}
         !}
      ?}
   ?};
   _filtr:=EANN.f_active();
   __refresh:={? _filtr>1 || 50
              |? _filtr   || EANN.f_size()
              || EANN.size()
              ?}%50;
   AreaTitle.setTabWin(EANN,~~);
   AreaTitle.setTitle();
   {? __noonly | (~__noonly & EANN.f_first()) | 1
   || {? EANN.select() & ~__noonly
      || _wyn:=1
      ?};
      {? ~__noonly || EANN.f_clear() ?}
   |? ~(__noonly & EANN.f_first())
   || FUN.info('Aktualnie brak zakończonych operacji.'@)
   ?};
   VAR_DEL.delete('__sel_n','__sel_p','czy_dsp','__sel_o','bie_r','__sel_s','__noonly');
   VAR_DEL.delete('__selwn','__selwp','__tabMope','__selMope','__tabZope','__selZope')
?};

{? _usun_zm=1 | _usun_zm=3 || VAR_DEL.delete('__wyb_rok') ?};
{? _usun_zm=2 | _usun_zm=3 || VAR_DEL.delete('__tab_ope'); VAR_DEL.delete('__wyb_ope') ?};
_wyn


\stn_czyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: wyswietla aktualny stan czytnikow
::   WE: [_a] - informacja ogolna domyslnie 0, informacja na okienkach operacji 1, odswiezenie informacji 2
::       [_b] - wylaczenie akcji Przelacz-1 (domyslnie) 0-nie
::   WY: dla _a=1 uchwyt okienka dla innych ''
::  OLD: \stn_czyt/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

:: drukarki kodów kreskowych
exec('myDPRINT','object');

_byl:=var_pres('__tab_ope')>0;

{? _a=0 || VAR_DEL.delete('__tab_ope'); __tab_ope:='M' ?};
{? _a<2
|| VAR_DEL.delete('__stnczy');

   __stnczy:=tab_tmp(3,'TREE','TREE_REF','galazka',
              'LAB','STRING[100]','Etykieta',
              'DAT','DATE','',
              'TYP','STRING[32]','Typ',
              'STN','STRING[20]','Stan',
              'ILP','INTEGER','Liczba pozycji',
              'OP','STRING[1]','Typ operacji na czytniku');

   _win_sel:=__stnczy.mk_sel('Aktualny stan operacji na czytnikach'@,'P',,'#qqqqqslld',,,__stnczy.size(),1);

   {? ~_a
   || __stnczy.win_fld(_win_sel,,'LAB',,,45,,1,'');
      __stnczy.win_fld(_win_sel,,'DAT',,,10,,1,'Data'@);
      __stnczy.win_fld(_win_sel,,'STN',,,15,,1,'Stan'@);
      __stnczy.win_fld(_win_sel,,'ILP',,,15,0,1,'Liczba pozycji'@)
   || __stnczy.win_fld(_win_sel,,'LAB',,,20,,1,'');
      __stnczy.win_fld(_win_sel,,'DAT',,,10,,1,'Data'@);
      __stnczy.win_fld(_win_sel,,'STN',,,4,,1,'Stan'@);
      __stnczy.win_fld(_win_sel,,'ILP',,,-6,0,1,'Liczba pozycji'@)
   ?};

   {? ~_b
   || __stnczy.win_act(_win_sel,,'Formuła','&Nieprzypisane kody kreskowe'@@,,,"exec('prn_kodk','kody_kresk',0)",,,,,,'N');
      __stnczy.win_act(_win_sel,,'Formuła','Kody &atrybutów dostawy'@@,,,"exec('prn_kodk','kody_kresk',1)",,,,,,'A');
      __stnczy.win_act(_win_sel,,'Formuła','Kody part&ii produkcyjnych'@@,,,"exec('prn_kodk','kody_kresk',2)",,,,,,'I');
      __stnczy.win_act(_win_sel,,'Formuła','Kody z&leceń'@@,,,"exec('prn_kodk','kody_kresk',3)",,,,,,'L');
      __stnczy.win_act(_win_sel,,'Formuła','&Domyślne kody kreskowe indeksów'@@,,,"exec('prn_kodk','kody_kresk',4)",,,,,,'D');
      __stnczy.win_act(_win_sel,,'Formuła','&Historia logowań'@@,,,"exec('history_all','magazyn_mob',4)",,,,,,'H')
   ?};

   {? ~_b | (_b & ~_a)
   ||
      __stnczy.win_btn(_win_sel,'text=%1, panel=right, align=begin'['&Nieprzypisane kody kreskowe'@],'menu:N',,,,,,'noempty');
      __stnczy.win_btn(_win_sel,'text=%1, panel=right, align=begin'['Kody &atrybutów dostawy'@],'menu:A',,,,,,'noempty');
      __stnczy.win_btn(_win_sel,'text=%1, panel=right, align=begin'['Kody part&ii produkcyjnych'@],'menu:I',,,,,,'noempty');
      __stnczy.win_btn(_win_sel,'text=%1, panel=right, align=begin'['Kody z&leceń'@],'menu:L',,,,,,'noempty');
      __stnczy.win_btn(_win_sel,'text=%1,panel=right, align=begin'['&Domyślne kody kreskowe indeksów'@],'menu:D',,,,,,'noempty');
      __stnczy.win_btn(_win_sel,'text=%1,panel=right, align=end'['&Historia logowań'@],'menu:H',,,,,,'noempty')
   ?};

   __stnczy.win_act(_win_sel,0,'Szukaj');
   __stnczy.win_act(_win_sel,0,'Kolejność');
   __stnczy.tr_fml(_win_sel,,"{? _a || {? __stnczy.TREE=0 || 1 || _a ?} || _a ?}");
   __stnczy.win_sopt(_win_sel,'select_record_checkbox=0');
   __stnczy.win_sel(_win_sel)
|| _akttree:=__stnczy.TREE;
   _aktlab:=__stnczy.LAB;
   _aktdat:=__stnczy.DAT;
   __stnczy.clear();
   {? __stnczy.first()
   || {!
      |? {? __stnczy.TREE=0
         || __stnczy.next()
         || __stnczy.del()
         ?}
      !}
   ?}
?};

_tab:=tab_tmp(1,'NRC','INTEGER','','SQL','STRING[16]','');

:: operacje wykorzystywane w systemie
_tab_op:=obj_new(5);
_tab_op[1]:='Przyjęcie dostawy'@;
_tab_op[2]:='Kompletacja wysyłki'@;
_tab_op[3]:='Reorganizacja magazynu'@;
_tab_op[4]:='Inwentaryzacja'@;
_tab_op[5]:='Wydanie magazynowe'@;

{? _a<>2
|| {! _i..5
   |! __stnczy.clear(); __stnczy.blank();
      __stnczy.TREE:=0; __stnczy.LAB:=_tab_op[_i];
      __stnczy.TYP:=__stnczy.OP:=1+((_i-1)-'PZRIW'); __stnczy.STN:=''; __stnczy.DAT:=date();
      __stnczy.add(1);
      _tab.clear(); _tab.blank(); _tab.NRC:=-_i; _tab.SQL:=$__stnczy.ref(); _tab.add()
   !};
   _akttree:=0;
   _aktlab:='';
   _aktdat:=date(0,0,0);
   _aktref:=null
|| _aktref:=null;
   {! _i..5
   |! __stnczy.clear();
      {? __stnczy.find_key(0,_tab_op[_i])
      || _tab.clear(); _tab.blank(); _tab.NRC:=-_i; _tab.SQL:=$__stnczy.ref(); _tab.add();
         {? _aktlab=__stnczy.LAB || _aktref:=__stnczy.ref() ?}
      ?}
   !}
?};

:: czytniki dostepne w systemie
EANC.cntx_psh();
EANC.index('AKT');
EANC.prefix('T');
{? EANC.first()
|| {!
   |? {? _a<>2
      || __stnczy.clear();
         __stnczy.blank();
         __stnczy.TREE:=0;
         __stnczy.LAB:='Czytnik nr '+form(EANC.NRC,,0,'99')+', opis: '+EANC.OPI;
         __stnczy.TYP:='';
         __stnczy.STN:='';
         __stnczy.DAT:=date();
         __stnczy.add(1);
         _tab.clear();
         _tab.blank();
         _tab.NRC:=EANC.NRC;
         _tab.SQL:=$__stnczy.ref();
         _tab.add()
      || __stnczy.clear();
         {? __stnczy.find_key(0,'Czytnik nr '+form(EANC.NRC,,0,'99')+', opis: '+EANC.OPI)
         || _tab.clear(); _tab.blank(); _tab.NRC:=EANC.NRC; _tab.SQL:=$__stnczy.ref(); _tab.add();
            {? _aktlab=__stnczy.LAB || _aktref:=__stnczy.ref() ?}
         ?}
      ?};
      EANC.next()
   !}
?};
EANC.cntx_pop();
EANN.cntx_psh();
EANP.cntx_psh();
_msk:=EANN.name()+3;
exec('openean','open_tab',ST.ODDZ+'__');
EANN.index('DATA');
EANN.prefix('T',{? __tab_ope='M' || 'N' || 'T' ?});
{? EANN.first()
|| {!
   |? _tab.clear();
      {? _tab.find_key(EANN.NRC)
      || __stnczy.clear();
         _korzen:={? __stnczy.seek(_tab.SQL,__stnczy.name()) || __stnczy.ref() || null ?};
         {? _korzen<>null
         || EANP.index('EANN');
            EANP.prefix(EANN.ref());
            _ilp:=EANP.size();
            __stnczy.blank();
            __stnczy.TREE:=_korzen;
            __stnczy.LAB:={? EANN.TYP='Z' || 'Zamówienie: '+EANN.SYM+', Kontrahent: '+EANN.KH().KOD+'-'+EANN.KH().SKR
                          |? EANN.TYP='P' || 'Dostawa, Kontrahent: '+EANN.KH().KOD+'-'+EANN.KH().SKR
                          |? EANN.TYP='I' || 'Inwentaryzacja'@
                          |? EANN.TYP='R' || 'Zmiana lokalizacji/przesunięcie'@
                          |? EANN.TYP='W' || 'Wydanie, Kontrahent: '+EANN.KH().KOD+'-'+EANN.KH().SKR
                          || ''
                          ?};
            __stnczy.TYP:={? EANN.TYP='Z' || 'Realizacja zamówienia'@
                          |? EANN.TYP='P' || 'Przyjęcie dostawy'@
                          |? EANN.TYP='I' || 'Inwentaryzacja'@
                          |? EANN.TYP='R' || 'Zmiana lokalizacji/przesunięcie'@
                          |? EANN.TYP='W' || 'Wydanie magazynowe'@
                          || ''
                          ?};
            __stnczy.STN:={? EANN.STAN='O' || 'Otwarte'@
                          |? EANN.STAN='A' || 'Anulowane'@
                          |? EANN.STAN='R' | EANN.STAN='Y'  || 'W realizacji'@
                          |? EANN.STAN='Z' || 'Skompletowane'@
                          |? EANN.STAN='X' || 'Generowana realizacja'@
                          |? EANN.STAN='!' || 'Zakładanie operacji'@
                          || 'Zamknięte'@
                          ?};
            __stnczy.ILP:=_ilp;
            __stnczy.DAT:=EANN.DATA;
            __stnczy.OP:=EANN.TYP;
            __stnczy.add(1);
            {? _aktlab=__stnczy.LAB & _akttree=__stnczy.TREE & _aktdat=__stnczy.DAT || _aktref:=__stnczy.ref() ?};
            _tab.clear();
            {? _tab.find_key(-('PZRIW'*EANN.TYP))
            || __stnczy.cntx_psh();
               __stnczy.clear();
               _korzen:={? __stnczy.seek(_tab.SQL,__stnczy.name()) || __stnczy.ref() || null ?};
               __stnczy.cntx_pop();
               __stnczy.TYP:='Czytnik nr '+form(EANN.NRC,,0,'99');
               __stnczy.TREE:=_korzen;
               __stnczy.OP:=EANN.TYP;
               __stnczy.add(1);
               {? _aktlab=__stnczy.LAB & _akttree=__stnczy.TREE & _aktdat=__stnczy.DAT || _aktref:=__stnczy.ref() ?}
            ?}
         ?}
      ?};
      EANN.next()
   !}
?};
exec('openean','open_tab',_msk);
EANN.cntx_pop();
EANP.cntx_pop();
__stnczy.clear();
__stnczy.first();
{? ~_a
|| __stnczy.select();
   {? ~_byl
   || VAR_DEL.delete('__stnczy','__tab_ope')
   || VAR_DEL.delete('__stnczy')
   ?};
   ''
|? _a=1
|| _win_sel
|| {? _aktref<>null || __stnczy.seek(_aktref) || __stnczy.first() ?};
   ''
?}


\inf_eann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: dodatkowa informacja dla naglowka operacji
::  OLD: \inf_eann/ean2.fml
::----------------------------------------------------------------------------------------------------------------------

{? ~do_state()
|| {? 'PW'*EANN.TYP
   || EANX.OPEANN:={? EANN.REFSQL<>'' & (5+EANN.REFSQL)='nagdo' || '(potwierdzenie) ' || '' ?}
                  +'operacja '
                  +{? (1+EANN.RODZ)='W' || 'wewnętrzna' || 'zewnętrzna' ?}
                  +{? (EANN.RODZ+1)='P' || '-paletowa' || '' ?}
   |? EANN.TYP='Z'
   || EANX.OPEANN:='kompletacja '
                  +{? (5+EANN.REFSQL)='zknag'
                   || {? exec('FindAndGet','#table',ZK_N,EANN.REFSQL,,"T().R",'')='Z' || 'zewnętrzna' || 'wewnętrzna' ?}
                   |? (4+EANN.REFSQL)='trnl'
                   || 'dla dyspozycji w magazynie'
                   || ''
                   ?}
   |? EANN.TYP='R'
   || EANX.OPEANN:={? EANN.PALEAN<>''
                   || 'rozpakowanie na paletę: %1'@[EANN.PALEAN]
                   |? __wyb_ope='M'
                   || 'przesunięcie do innego magazynu'
                   || 'reorganizacja'
                     +{? EANN.EANL<>null || ' spisowa lokalizacji: %1'@[EANN.EANL().KOD] || '' ?}
                     +{? (5+EANN.REFSQL)='dokln' || ' wysłana z systemu' || ' z urządzenia' ?}
                   ?}
   |? EANN.TYP='I'
   || EANX.OPEANN:='inwentaryzacja'
   ?}
?}


\akt_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: Pozycje operacji na czytnikach
::  OLD: \akt_pozy/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANN.size()
|| EANP.index('EANN');
   {? __wyb_ope='R'
   || EANP.prefix(EANN.ref(),'R')
   |? __wyb_ope='M'
   || EANP.prefix(EANN.ref(),'M')
   || EANP.prefix(EANN.ref())
   ?}
|| EANP.index('EANN');
   EANP.prefix(null)
?};
grp_disp(EANP,{? __tab_ope='M' || __sel_p || __selwp ?});
{? __tab_ope='M'
|| {? var_pres('__tabMope')>0 || grp_disp(__tabMope,__selMope) ?}
|| {? var_pres('__tabMope')>0 || grp_disp(__tabZope,__selZope) ?}
?};
~~


\rekeanp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: rekord dla pozycji operacji
::   WE: [_a] - 1-z wylaczeniem klawiszy 0-bez klawiszy (domyslnie)
::  OLD: \rekeanp/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
exec('uzupdane','magazyn_mob');
_no_et:={? ~exec('isDEFetyk','magazyn_mobi','EANP') || 'T' || '' ?};

{? _a & var_pres('__btnrefr')>0 & __btnrefr & (EANN.name()+2)='__' || exec('btnOnOff','magazyn_mob') ?};
{? var_pres('__sel_p')>0 || _act:=EANP.actions_grayed(__sel_p,'') ?};
{? (EANN.name()+2)<>'__'
|| {? exec('FindInSet','#table','EANW','EANP',EANP.ref())=null()
   || _act:='G'+_act
   || _act:=gsub(_act,'G','')
   ?}
?};
{? var_pres('__sel_p')>0 || EANP.actions_grayed(__sel_p,_no_et+_act) ?};
EANX.MG:={? EANP.M<>null() & EANP.M().RODZ='U' & EANP.RSQL<>''
         || exec('FindAndGet','#table',ZK_P,EANP.RSQL,,"MG",null())
         || EANP.LOKZ().MG
         ?};
EANX.WYLZAL:={? EANX.MG().MWS='T' & ~EANX.MG().W_ALL || 'N' || 'T' ?};
{? (';R'*EANN.TYP)>1 & __wyb_ope='R'
|| EANX.PKOL:=EANP.LOKDO().KOD
|? (';Z'*EANN.TYP)>1
|| EANX.PKOL:=form(EANP.IL,,ST.DOKL)
|? (';R'*EANN.TYP)>1 & __wyb_ope='M'
|| EANX.PKOL:='%1 [%2]'[EANP.LOKDO().MG().SYM,EANP.LOKDO().KOD]
|| EANX.PKOL:=''
?}


\akt_poz2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: Pozycje operacji na czytnikach
::  OLD: \akt_poz2/ean.fml
::----------------------------------------------------------------------------------------------------------------------
~~


\przelbtn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przelaczenie
::   WE: [_a] - typ operacji, ''(domyślnie)
::  OLD: \przelbtn/ean.fml
::----------------------------------------------------------------------------------------------------------------------
__czy_wyb:=1;
__wyb_ope:={? var_pres('_a')=type_of('') || _a || '' ?};
sel_exit();
'activate:browse'


\uzupdane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: uzupelnia dane
::  OLD: \uzupdane/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_scean:=EANP.SCEAN;
{? EANP.PAL=null & EANP.M<>null & EANP.LOKZ().MG().PAL<>'T' & (1+EANP.LOKZ().MG().TYP)='D'
 & (';PZ'*EANP.M().IDMOB)>1 & _scean<>''
|| {? EANP.M().IDMOB='P' & exec('FindInSet','#table','MKODK','KK',_scean,_scean)=null
   || ZPARN.cntx_psh();
      ZPARN.index('SCEAN');
      ZPARN.prefix(EANP.M,_scean,_scean);
      {? ZPARN.first() || exec('mkodkadd','kody_kresk',EANP.M,_scean,$ZPARN.ref()) ?};
      ZPARN.cntx_pop()
   |? EANP.M().IDMOB='Z' & exec('FindInSet','#table','MKODK','KK',_scean,_scean)=null
   || ZL.cntx_psh();
      ZL.index('SCEAN');
      ZL.prefix(EANP.M,_scean,_scean);
      {? ZL.first() || exec('mkodkadd','kody_kresk',EANP.M,_scean,$ZL.ref()) ?};
      ZL.cntx_pop()
   ?}
?};
{? EANP.PAL=null & EANP.M<>null & EANP.M().SETW='P' & EANP.LOKZ().MG().PAL<>'T' & (1+EANP.LOKZ().MG().TYP)='D'
 & EANP.M().IDMOB='D' & _scean<>''
|| _scsql:=exec('FindInSet','#table','MKODK','KK',_scean,_scean,"MKODK.RSQL",,,'');
   {? (5+_scsql)='dokma'
   || _tw:=exec('FindAndGet','#table',DK,_scsql,,"TW",date(0,0,0));
      {? _tw<>date(0,0,0) & EANP.TW=date(0,0,0)
      || EANP.TW:=_tw;
         EANP.put(1)
      ?}
   ?}
?};

{? EANP.ZL=null & (1+EANP.EANN().RODZ)='W'
|| {? EANP.EANN().TYP='W' & EANP.ZLEAN<>''
   || exec('przypzle','magazyn_mob',EANP.ZLEAN,'','N')
   |? EANP.EANN().TYP<>'W' & (EANP.ZLEAN<>'' | (EANP.SCEAN<>'' & (';PZ'*EANP.M().IDMOB)>1))
   || exec('przypzle','magazyn_mob',EANP.ZLEAN,EANP.SCEAN,EANP.M().IDMOB)
   || ''
   ?}
?};
:: aktualizacja znaczników dla reorganizacji
{? EANP.EANN().TYP='R'
|| EANP.IS_RM:={? EANP.LOKDO<>null() & EANP.LOKZ().MG<>EANP.LOKDO().MG || 'M' || 'R' ?}
|| EANP.IS_RM:='N'
?};
exec('akt_R_M','magazyn_mobi',EANP.EANN);
~~


\btnOnOff
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wlaczenie/wylaczenie klawiszy dla pozycji operacji
::  OLD: \btnOnOff/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_act:='';
:: klawisz przypisz material
_czypal:={? EANP.EANN().EANL<>null() || EANP.EANN().EANL().MG().PAL || EANP.LOKZ().MG().PAL ?};
{? EANP.M=null()
 & (_czypal<>'T' | (_czypal='T' & EANP.EAN<>EANP.PALEAN & EANP.PALEAN<>'' & EANP.PAL=null()))
 & EANN.STAN='Z'
|| ''
|| _act+='D'
?};

_przy:=EANP.EANN().TYP='P' & ~exec('czypowid','magazyn_mob',EANP.M,EANP.SCEAN);
_jest:=EANP.SCEAN<>'' & exec('FindInSet','#table','MKODK','KK',EANP.SCEAN,EANP.SCEAN,"MKODK.IDMOB")=EANP.M().IDMOB;
_open:=EANP.EANN().STAN<>'Z' | ~exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT);
_pale:=EANP.LOKZ().MG().PAL='T';
_dost:=(1+EANP.LOKZ().MG().TYP)='D';
_inwe:=EANP.EANN().TYP='I';
_gs1:=exec('FindInSet','#table','EANW','EANP',EANP.ref())<>null();
{? ~_gs1 || _act+='G' ?};

:: klawisz powiaz identyfikator
{? var_pres('__btn_i')>0
|| {? ~_open & ~_pale & _dost & EANP.M<>null & ~_jest
    & {? EANP.M().IDMOB='D' || ~_przy & ~_inwe || (';DAPZ'*EANP.M().IDMOB)>1 ?}
   || ''
   || _act+='I'
   ?}
?};

:: klawisz nowy identyfikator
{? var_pres('__btn_n')>0
|| {? EANP.M<>null & EANP.M().IDMOB='D' & ~_przy & ~_inwe & ~_jest
   || ''
   || _act+='N'
   ?}
?};

:: klawisz przypisz zlecenie
{? var_pres('__btn_z')>0
|| _wskz:=EANN.REFSQL<>'' & (';zdnag;zknag;'*(5+EANN.REFSQL))>1;
   {? ~_open & ~_wskz & EANN.RODZ='W'
   || ''
   || _act+='P'
   ?}
?};
EANP.actions_grayed(__sel_p,_act);
~~


\ret_eann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przywrocenie operacji mobilnej po usunieciu dokumentow
::   WE: _a - ref SQL dokumentu
::       _b - typ operacji
::       _c - magazyn
::  OLD: \ret_eann/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
:: funckja zablokowana
MOBPAR.cntx_psh();
MOBPAR.index('MG');
MOBPAR.prefix(_c,_b,'Z');
{? 0 & MOBPAR.first() & MOBPAR.TAK='T' || exec('auto_ret','magazyn_mob',_a) ?};
MOBPAR.cntx_pop();
~~


\auto_ret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: automatycznie przywraca operacje wg ref
::   WE: _a - ref SQL dla pola EANN.REFSQL
::  OLD: \auto_ret/ean.fml
::----------------------------------------------------------------------------------------------------------------------
EANN.cntx_psh();
EANN.index('REF_REAL');
EANN.prefix(_a,_a);
{? EANN.first()
|| {!
   |? exec('rtr_eann','magazyn_mob',EANN.ref());
      EANN.next()
   !}
?};
EANN.cntx_pop();
''


\rtr_eann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przywrocenie z archiwum zaznaczonych operacji
::   WE: [_a] - ref EANN.ref() - jesli automatyczne przywrocenie, null(domyslnie) gdy funkcja
::   WY: 1-gdy jest OK 0-gdy się nie udalo
::  OLD: \rtr_eann/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};

_upr:=exec('chk_role','#b__box',OPERATOR.USER,'LMO_MOB_RETO');
_ref:=null;
EANN.cntx_psh();
{? _a=null & _upr
|| _ile:=0;
   _tab:=EANN.sel_aget();
   EANN.sel_adel();
   {? _tab.first() & FUN.ask('Czy przywrócić zaznaczone operacje pochodzące z urządzenia mobilnego?'@)
   || _ile:=_tab.size();
      {!
      |? {? (EANN.clear(); EANN.seek(_tab.REF,))
         || _mag:={? EANN.ZLEC='T' || EANN.MG || exec('one_mag','magazyn_mob',EANN.ref()) ?};
::          sprawdzenie parametrow domyslnych i pozwolenia na przywracanie
            {? _mag<>null
            || {? exec('roneeann','magazyn_mob',EANN.ref())>0 || _ile-=1 ?}
            ?}
         ?};
         _tab.next()
      !};
      {? _ile>0
      || FUN.info('Nie udało się przywrócić: %1 operacji.\n'
          'Prawdopodobny powód to brak uprawnień do przywracania '
          'danego typu operacji w danym magazynie,\n'
          'brak pozycji, brak ilości odczytanej, operacja na kilku magazynach,\n'
          'anulowanie dokumentu, zamówienia,\n'
          'skojarzone urządzenie mobilne nie jest aktywne\n'
          'lub w chwili powstania operacji niedokonano jego autoryzacji.'@[form(_ile,,0,'99')])
      ?}
   |? FUN.ask('Czy przywrócić daną operację?'@)
   || _akt:=EANN.ref();
      EANN.prev();
      _ref:=EANN.ref();
      {? EANN.seek(_akt)
      || _mag:={? EANN.ZLEC='T' || EANN.MG || exec('one_mag','magazyn_mob',EANN.ref()) ?};
::       sprawdzenie parametrow domyslnych i pozwolenia na przywracanie
         {? _mag<>null
         || {? (_oki:=exec('roneeann','magazyn_mob',EANN.ref()))<=0
            || _ref:=_akt;
               {? _oki<0
               || FUN.info('Nie można przywrócić danej operacji.\n'
                           'Skojarzone urządzenie mobilne nie jest aktywne\n'
                           'lub w chwili powstania operacji niedokonano jego autoryzacji.'@)
               || FUN.info('Nie udało się przywrócić danej operacji.'@)
               ?}
            ?}
         || FUN.info('Przywrócenie operacji niemożliwe.\n'
             'Prawdopodobne powody to: brak pozycji, brak ilości odczytanej, operacja na kilku magazynach,\n'
             'anulowanie dokumentu, zamówienia.'@)
         ?}
      ?}
   ?}
|| EANN.clear();
   {? EANN.seek(_a)
   || _kododd:={? 'PW'*EANN.TYP || ND.name()+2 || form((EANN.DATA~1)-2000,-2,0,'99') ?};
      _msk:=(EANN.name()-2)+_kododd;
      _msp:=(EANP.name()-2)+_kododd;
      _msw:=(EANW.name()-2)+_kododd;
      _eann:=EANN.UNIK;
      EANN.cntx_psh();
      EANP.cntx_psh();
      EANW.cntx_psh();
      EANN.use(_msk);
      EANP.use(_msp);
      EANW.use(_msw);
      EANN.index('UNIK');
      EANN.prefix(_eann,_eann);
      {? EANN.first() || exec('roneeann','magazyn_mob',EANN.ref()) ?};
      EANN.cntx_pop();
      EANP.cntx_pop();
      EANW.cntx_pop()
   ?}
?};
EANN.cntx_pop();
{? _ref<>null || EANN.seek(_ref) ?}


\one_mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy wszystkie pozycje dotycza jednego magazynu
::   WE: _a - ref EANN
::       [_b] - 0-czy pomijac ilosci odczytane - 1-domyslnie nie
::   WY: ref magazynu lub null jezeli kilka
::  OLD: \one_mag/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

_wyn:=null();
EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(_a);
{? EANP.first()
|| {!
   |? _mag:={? EANP.M<>null() & EANP.M().RODZ='U'
            || exec('FindAndGet','#table',ZK_P,EANP.RSQL,,"MG",null())
            || EANP.LOKZ().MG
            ?};
      {? (~_b | EANP.ILS>0) & _wyn=null()
      || _wyn:=_mag;
         EANP.next()
      |? (~_b | EANP.ILS>0)
      || {? _wyn<>_mag
         || _wyn:=null();
            0
         || EANP.next()
         ?}
      || EANP.next()
      ?}
   !}
?};
EANP.cntx_pop();
_wyn


\roneeann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przywrocenie z archiwum pojednyczej operacji
::   WE: _a - ref EANN.ref()
::   WY: 1-gdy jest OK 0-gdy się nie udalo -1-gdy niemożliwe przywrócenie - bez autoryzacji urządzenia
::  OLD: \roneeann/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_trans:=do_state();
{? ~_trans || do() ?};
EANN.cntx_psh();
EANP.cntx_psh();
EANN.clear();
{? EANN.seek(_a)
|| _ref_old:=EANN.ref();
   _msk:=(EANN.name()-2)+'__';
   _msp:=(EANP.name()-2)+'__';
   _msw:=(EANW.name()-2)+'__';
   _ok:=0;
   _typ:=EANN.TYP;
   _eann:=EANN.UNIK;
   _stan:=EANN.OLDSTAN;
   _ideanc:=EANN.IDEANC;
   EANN.cntx_psh();
   EANN.use(_msk);
   {? _typ='Z' | (_typ='R' & (4+EANN.UNIK)='eann')
   || EANN.clear();
      {? EANN.seek(_eann)
      || EANN.IDUSR:='';
         EANN.USERS:=null();
         {? (+EANN.IDEANC)=31 & exec('FindAndGet','#table',EANC,EANN.IDEANC,,"AKT='T'",0)
         || EANN.NRC:=exec('FindAndGet','#table',EANC,EANN.IDEANC,,"NRC",0)
         |? (+_ideanc)=31 & exec('FindAndGet','#table',EANC,_ideanc,,"AKT='T'",0)
         || EANN.IDEANC:=_ideanc;
            EANN.NRC:=exec('FindAndGet','#table',EANC,EANN.IDEANC,,"NRC",0)
         || _ok:=-1
         ?};
         {? _ok>=0
         || EANN.AKT:='T';
            _typ:={? EANN.TYP='R' & EANN.PALEAN<>'' || 'O'
                  |? EANN.TYP='R' & EANN.EANL<>null() || 'L'
                  || EANN.TYP
                  ?};
            EANN.SYM:=exec('eannSYM','magazyn_mob',_typ,'',EANN.UNIK);
            EANN.STAN:={? _stan='+' || 'Z'
                       |? _stan<>'' & (';ZR'*_stan)>1 || _stan
                       |? EANN.STAN='+' || 'Z'
                       |? EANN.STAN<>'' & (';ZR'*EANN.STAN)>1 || EANN.STAN
                       || 'R'
                       ?};
            {? _typ='Z' & (5+EANN.REF_REAL)='zknag' || EANN.REFSQL:=EANN.REF_REAL; EANN.IDREA:=EANN.IDZAM
            |? _typ='R' & (5+EANN.REF_REAL)='dokln' || EANN.REFSQL:=''; EANN.REF_REAL:=''; EANN.IDREA:=''; EANN.IDZAM:=''
            ?};
            _typ:=EANN.TYP;
            EANN.prefix();
            EANN.UNIK:='ret'+$EANN.tm_stamp();
            EANN.OLDSTAN:='';
            _ref_new:={? EANN.put(1) || _ok:=1; EANN.ref() || undo() ?}
         ?}
      ?}
   |? 'RPWI'*_typ
   || {? {? _msk=(7+_eann)
         || EANN.prefix();
            EANN.seek(_eann)
         || EANN.index('UNIK');
            EANN.prefix(_eann,_eann);
            EANN.first()
         ?}
      || EANN.IDUSR:='';
         EANN.USERS:=null();
         {? (+EANN.IDEANC)=31 & exec('FindAndGet','#table',EANC,EANN.IDEANC,,"AKT='T'",0)
         || EANN.NRC:=exec('FindAndGet','#table',EANC,EANN.IDEANC,,"NRC",0)
         |? (+_ideanc)=31 & exec('FindAndGet','#table',EANC,_ideanc,,"AKT='T'",0)
         || EANN.IDEANC:=_ideanc;
            EANN.NRC:=exec('FindAndGet','#table',EANC,EANN.IDEANC,,"NRC",0)
         || _ok:=-1
         ?};
         {? _ok>=0
         || EANN.AKT:='T';
            _typ:={? EANN.TYP='R' & EANN.PALEAN<>'' || 'O'
                  |? EANN.TYP='R' & EANN.EANL<>null() || 'L'
                  || EANN.TYP
                  ?};
            EANN.SYM:=exec('eannSYM','magazyn_mob',_typ,'',EANN.UNIK);
            EANN.STAN:={? _stan='+' || 'Z'
                       |? _stan<>'' & (';ZR'*_stan)>1 || _stan
                       |? EANN.STAN='+' || 'Z'
                       |? EANN.STAN<>'' & (';ZR'*EANN.STAN)>1 || EANN.STAN
                       || 'R'
                       ?};
            {? EANN.TYP='P' & (5+EANN.REF_REAL)='zdnag' || EANN.REFSQL:=EANN.REF_REAL; EANN.IDREA:=EANN.IDZAM
            |? EANN.TYP='W' & (5+EANN.REF_REAL)='zknag' || EANN.REFSQL:=EANN.REF_REAL; EANN.IDREA:=EANN.IDZAM
            || EANN.REFSQL:=''; EANN.IDZAM:=''
            ?};
            _typ:=EANN.TYP;
            EANN.prefix();
            EANN.UNIK:='ret'+$EANN.tm_stamp();
            EANN.OLDSTAN:='';
            _ref_new:={? EANN.put(1) || _ok:=1; EANN.ref() || undo() ?}
         ?}
      ?}
   ?};
   EANN.cntx_pop();
   {? _ok>0
   || EANP.index('EANN');
      EANP.prefix(_ref_old);
      {? EANP.first()
      || _pals:=tab_tmp(3,'KOD','STRING[16]','','KO2','STRING[16]','','UNIK','STRING[30]','','ILS','REAL','');
         {!
         |? _oldeanp:=EANP.ref();
            _neweanp:=0;
            _zlec:=EANP.EANN().ZLEC='T';
            _unik:=EANP.UNIK;
            _oku:=1;
            _roz:=EANP.PALEAN<>'' & EANP.M<>null() & 'ZW'*EANP.EANN().TYP;
            _palean:=EANP.PALEAN;
            _czypal:=0;
            EANP.cntx_psh();
            {? _unik<>'' & 'ZW'*EANP.EANN().TYP
            || EANP.index('UNIK');
               EANP.prefix(_unik,);
               {? EANP.first() || {! |? _czypal:=EANP.M=null() & EANP.PALEAN<>''; ~_czypal & EANP.next() !} ?}
            ?};
            EANP.cntx_pop();

            EANN.cntx_psh();
            EANP.cntx_psh();
            EANW.cntx_psh();
            EANN.use(_msk);
            EANP.use(_msp);
            EANW.use(_msw);
            {? _unik<>''
            || EANP.index('UNIK');
               EANP.prefix(_unik,);
               _oku:=~EANP.first()
            ?};
            {? (_oku | _zlec) & (~_czypal | (_czypal & EANP.M=null()))
            || EANP.clear();

               EANP.EANN:=_ref_new;
               EANP.NRC:=EANP.EANN().NRC;
               EANP.PAL:={? EANP.PALEAN<>'' & EANP.LOKZ().MG().PAL='T'
                         || exec('FindInSet','#table','PAL','PAL',EANP.PALEAN,EANP.PALEAN)
                         || null
                         ?};
               EANP.PALDO:={? EANP.PALDOEAN<>'' & EANP.LOKZ().MG().PAL='T'
                           || exec('FindInSet','#table','PAL','PAL',EANP.PALDOEAN,EANP.PALDOEAN)
                           || null
                           ?};
               exec('uzupIDkod','magdok_palety',EANP);
               {? EANP.add(1)
               || _neweanp:=EANP.ref();
                  _ok:=1;
                  {? EANP.PAL<>null() & 'ZW'*EANP.EANN().TYP
                  || _pals.clear();
                     {? ~_pals.find_key(EANP.PAL().KODK,EANP.PAL().KODK,EANP.UNIK,)
                     || _pals.blank();
                        _pals.KOD:=_pals.KO2:=EANP.PAL().KODK;
                        _pals.UNIK:=EANP.UNIK;
                        _pals.ILS:={? EANP.ROZPAL>0 || EANP.ILS || 0 ?};
                        _pals.add(1)
                     ?}
                  ?}
               || _ok:=0;
                  undo()
               ?};
               _mat:=EANP.M;
               _mag:={? _zlec || EANP.EANN().MG || EANP.LOKZ().MG ?};
               _pal:={? 'ZW'*EANP.EANN().TYP || EANP.PAL || null ?};
               EANN.cntx_pop();
               EANP.cntx_pop();
               EANW.cntx_pop();
::             wartości kodów GS1
               EANW.index('EANP');
               EANW.prefix(_oldeanp);
               {? _ok & EANW.first()
               || {!
                  |? EANP.cntx_psh();
                     EANW.cntx_psh();
                     EANP.use(_msp);
                     EANW.use(_msw);
                     EANW.prefix();
                     EANW.EANP:=_neweanp;
                     _ok:=EANW.add(1);
                     EANP.cntx_pop();
                     EANW.cntx_pop();
                     {? _ok || EANW.del() || 0 ?}
                  !}
               ?};
               no_msg(1);
               _oki:=EANP.del();
               no_msg(0);
               {? _typ='Z' & _mat<>null & _mag<>null || exec('obl_stan','magazyn_stan',_mat,1,_mag) ?};
               {? _pal<>null
               || exec('znacznik','magdok_palety',_pal);
                  exec('ktm2pal','magdok_palety',0,_pal)
               ?}
            || {? _roz
               || _pals.clear();
                  {? _pals.find_key(_palean,_palean,EANP.UNIK,)
                  || _pals.ILS:=1;
                     _pals.put(1)
                  || _pals.blank();
                     _pals.KOD:=_pals.KO2:=_palean;
                     _pals.UNIK:=EANP.UNIK;
                     _pals.ILS:=1;
                     _pals.add(1)
                  ?}
               ?};
               EANN.cntx_pop();
               EANP.cntx_pop();
               EANW.cntx_pop();
               no_msg(1);
               _oki:=EANP.del();
               no_msg(0);
               _ok:=1
            ?};
            _oki
         !};
         {? (_pals.clear(); _pals.first())
         || EANN.cntx_psh();
            EANP.cntx_psh();
            EANW.cntx_psh();
            EANN.use(_msk);
            EANP.use(_msp);
            EANW.use(_msw);
            EANP.index('EANN');
            EANP.prefix(_ref_new);
            {? EANP.first()
            || {!
               |? _pals.clear();
                  {? _pals.find_key(EANP.PAL().KODK,EANP.PAL().KODK,EANP.UNIK)
                  || EANP.ILS:=_pals.ILS;
                     EANP.put(1)
                  ?};
                  EANP.next()
               !}
            ?};
            EANN.cntx_pop();
            EANP.cntx_pop();
            EANW.cntx_pop()
         ?};
         obj_del(_pals)
      ?};
      {? _ok || EANN.del(); _wyn:=1 || undo() ?}
   |? _ok<0
   || _wyn:=-1
   || undo()
   ?}
?};
EANN.cntx_pop();
EANP.cntx_pop();
{? ~_trans || end() ?};
_wyn


\ust_stan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: ustala stan danej operacji na podstawie pozycji
::   WE: _a - ref EANN.ref()
::   WY: 'Z'-zakonczona 'R'-w realizacji 'O'-otwarta
::  OLD: \ust_stan/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_ilp:=0;
_ilo:=0;
_byl:=0;
_pal:=tab_tmp(2,'KOD','STRING[30]','','KO2','STRING[30]','');
EANP.index('EANN');
EANP.prefix(_a);
{? EANP.first()
|| _ilp:=EANP.EANN().ILP;
   _ilo:=EANP.EANN().ILODCZYT;
   _byl:=1;
   {!
   |? {? EANP.M<>null() & EANP.PALEAN<>''
      || {? (_pal.clear(); ~_pal.find_key(EANP.PALEAN,EANP.PALEAN))
         || _roz:=1;
            _pal.blank();
            _pal.KOD:=_pal.KO2:=EANP.PALEAN;
            _pal.add(1)
         || _roz:=-1
         ?}
      || _roz:=0
      ?};
      _ilp-={? _roz=0 || 1 || 0 ?};
      _ilo-={? _roz>0 || 1 |? _roz<0 || 0 || EANP.ILS ?};
      EANP.next()
   !}
?};
obj_del(_pal);
_wyn:={? ~_ilp & ~_ilo & _byl || 'Z'
      |? ~_byl | (_byl & ~_ilo) || 'O'
      |? (_ilp | _ilo) & _byl || 'R'
      || 'O'
      ?};
_wyn


\czyzgilp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: sprawdza zgodnosc ilosci pozycji z pozycjami operacji
::   WE: _a - EANN.ref()
::       _b - ilosc jaka powinna byc
::       _c - suma ilosci z pozycji jaka powinna byc
::   WY: 1-jest ok 0-nie jest zgodna
::  OLD: \czyzgilp/ean.fml
:: UWAGA. Od wersji 18.22 zrezygnowano z kontroli ilości odczytanej
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
:: EANP.cntx_psh();
:: EANP.index('EANN');
:: EANP.prefix(_a);
:: obliczenie ilosci odczytanej dla pola EANN.ILODCZYT
:: _ilodczyt:=0;
:: {? EANP.first() || {! |? _ilodczyt+=EANP.ILS; EANP.next() !} ?};
:: _wyn:=_b=EANP.size() & _ilodczyt=_c;
:: EANP.cntx_pop();
_wyn


\pob_mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: zwraca tabelke tymczasowa - magazynow na podstawie pozycji operacji
::   WE: [_a] - tabelka zaznaczen (jesli brak parametru to dany rekord)
::       _b - opcja 0-MG1/MG2 1-pojedyncze dokumenty 2-zbiorczy dokument
::       [_c] - sprawdzenie czy magazyn typu MWS 0-nie(domyslnie) 1-tak
::       [_d] - 1-przesunięcie pomiędzy magazynami, 0(domyślnie)-nie
::  OLD: \pob_mag/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>118 || _wgzazn:=0 || _wgzazn:=1 ?} || _wgzazn:=0 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
_mmmg:={? var_pres('_d')=type_of(0) || _d || 0 ?};

{? _wgzazn
|| {? _a.first()
   || {!
      |? {? (EANN.clear(); EANN.seek(_a.REF,EANN.name()))
          & {? EANN.TYP='R' || EANN.STAN='Z' | (EANN.STAN='+' & (EANN.IS_R='T' | EANN.IS_M='T')) || EANN.STAN='Z' ?}
          & exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
         || _wg_zlec:=EANN.ZLEC='T';
            EANP.index('EANN');
            {? EANN.TYP='R' & ~_mmmg
            || EANP.prefix(EANN.ref(),'R')
            |? EANN.TYP='R' & _mmmg
            || EANP.prefix(EANN.ref(),'M')
            || EANP.prefix(EANN.ref())
            ?};
            {? EANP.first()
            || {!
               |? {? {? EANN.TYP='I' || EANP.M<>null() & EANP.ILS>0 || EANP.ILS>0 ?}
                   & (_wg_zlec | {? ~_c || 1 || EANP.LOKZ().MG().MWS='T' & ~EANP.LOKZ().MG().W_ALL ?})
                  || _mg1:={? _wg_zlec || $EANP.EANN().MG || $EANP.LOKZ().MG ?};
                     _mg2:={? _b=1 || $EANP.EANN
                           |? _wg_zlec || $EANP.EANN().MG
                           |? EANP.LOKDO<>null || $EANP.LOKDO().MG
                           || $EANP.LOKZ().MG
                           ?}
                          +{? 'PW'*EANN.TYP || {? EANN.KH<>null || $EANN.KH || 'nullnull00000000' ?} || '' ?};
                     __magik.clear();
                     {? ~__magik.find_key(_mg1,_mg2)
                     || __magik.blank();
                        __magik.MG1:=_mg1;
                        __magik.MG2:=_mg2;
                        __magik.add(1)
                     ?};
                     __eanp.clear();
                     __eanp.blank();
                     __eanp.MG1:=_mg1;
                     __eanp.MG2:=_mg2;
                     __eanp.LP:=EANP.LP;
                     __eanp.EANP:=$EANP.ref();
                     __eanp.EANN:=$EANP.EANN;
                     __eanp.add(1)
                  ?};
                  EANP.next()
               !}
            ?}
         ?};
         _a.next()
      !}
   ?}
|| {? {? EANN.TYP='R' || EANN.STAN='Z' | (EANN.STAN='+' & (EANN.IS_R='T' | EANN.IS_M='T')) || EANN.STAN='Z' ?}
    & exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
   || _wg_zlec:=EANN.ZLEC='T';
      EANP.index('EANN');
      {? EANN.TYP='R' & ~_mmmg
      || EANP.prefix(EANN.ref(),'R')
      |? EANN.TYP='R' & _mmmg
      || EANP.prefix(EANN.ref(),'M')
      || EANP.prefix(EANN.ref())
      ?};
      {? EANP.first()
      || {!
         |? {? {? EANN.TYP='I' || EANP.M<>null() & EANP.ILS>0 || EANP.ILS>0 ?}
             & {? ~_c || 1 || EANP.LOKZ().MG().MWS='T' & ~EANP.LOKZ().MG().W_ALL ?}
            || _mg1:={? _wg_zlec || $EANP.EANN().MG || $EANP.LOKZ().MG ?};
               _mg2:={? _b=1 || $EANP.EANN
                     |? _wg_zlec || $EANP.EANN().MG
                     |? EANP.LOKDO<>null || $EANP.LOKDO().MG
                     || $EANP.LOKZ().MG
                     ?}
                    +{? 'PW'*EANN.TYP || {? EANN.KH<>null || $EANN.KH || 'nullnull00000000' ?} || '' ?};
               __magik.clear();
               {? ~__magik.find_key(_mg1,_mg2)
               || __magik.blank();
                  __magik.MG1:=_mg1;
                  __magik.MG2:=_mg2;
                  __magik.add(1)
               ?};
               __eanp.clear();
               __eanp.blank();
               __eanp.MG1:=_mg1;
               __eanp.MG2:=_mg2;
               __eanp.LP:=EANP.LP;
               __eanp.EANP:=$EANP.ref();
               __eanp.EANN:=$EANP.EANN;
               __eanp.add(1)
            ?};
            EANP.next()
         !}
      ?}
   ?}
?}


\sprwyp_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdza czy wszystkie pozycje maja przypisane materialy, dodatkowo kontrolowana jest identyfikacja dostaw
::   WE: _a - ref EANN
::   WY: 1-wszystko jest OK 0-istnieja pozycje bez indeksow -1-istnieja pozycje bez prawidłowych kodow identyfikacyjnych
::       2-istnieja pozycje bez prawidlowych kodow identyfikacyjnych ale mozna dzialac dokumentem zwrotnym
::  OLD: \sprwyp_m/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
EANN.cntx_psh();
EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(_a);
{? EANP.first()
|| _reorg:=EANP.EANN().TYP='R';
   {!
   |? {? EANP.ILS>0 & (~_reorg | (_reorg & EANP.LOKDO<>null()))
      || _czypal:={? EANP.EANN().EANL<>null() || EANP.EANN().EANL().MG().PAL || EANP.LOKZ().MG().PAL ?};
         {? _czypal='T' & EANP.PAL<>null & EANP.PAL().AKT='N' || exec('aktywpal','magdok_palety',EANP.PAL,-1) ?};
         {? (_czypal='T' & EANP.EAN=EANP.PALEAN & EANP.PAL=null())
         || _wyn:=0
         |? _czypal<>'T' | (_czypal='T' & EANP.EAN<>EANP.PALEAN)
         || {? EANP.M=null & EANP.EAN<>''
            || EANP.M:=exec('FindInSet','#table','M','KODK',EANP.EAN,EANP.EAN);
               EANP.put(1)
            ?};
            _wyn:=EANP.M<>null | (EANP.M=null & ~EANP.ILS)
         ?};
         {? _wyn
          & (~exec('ok_kodid','magazyn_mob')
             | (EANP.EANN().TYP='P'
              & EANP.SCEAN<>''
              & (EANP.M().IDMOB='D' & ~EANP.M().IDZP)
              & exec('czypowid','magazyn_mob',EANP.M,EANP.SCEAN)))
         || {? EANP.EANN().TYP='P' & EANP.SCEAN<>''
             & (EANP.M().IDMOB='D' & ~EANP.M().IDZP) & exec('unik_ean','kody_kresk','M',EANP.SCEAN,EANP.M)
            || _wyn:=2
            || _wyn:=-1
            ?}
         ?}
      ?};
      _wyn>0 & EANP.next()
   !}
?};
EANN.cntx_pop();
EANP.cntx_pop();
_wyn


\ok_kodid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy wypelniono prawidlowo kod identyfikacyjny
::   WY: 1-tak 0-nie
::  OLD: \ok_kodid/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? EANP.LOKZ().MG().PAL<>'T' & (1+EANP.LOKZ().MG().TYP)='D' & (';DAPZ'*EANP.M().IDMOB)>1
|| _idmob:={? EANP.SCEAN<>''
           || exec('FindInSet','#table','MKODK','KK',EANP.SCEAN,EANP.SCEAN,"MKODK.IDMOB",,,'')
           || ''
           ?};
   _wyda:=(1+EANP.EANN().TYP)<>'P';
   {? (EANP.M<>null() & EANP.SCEAN<>'' & ~exec('unik_ean','kody_kresk','M',EANP.SCEAN,EANP.M))
    | (EANP.SCEAN='' & {? _wyda || 1 || (';APZ'*EANP.M().IDMOB)>1 ?})
    | (EANP.SCEAN<>'' & _idmob<>'' & ~(((';N'+EANP.M().IDMOB)*_idmob)>1))
   || _wyn:=0
   ?}
?};
_wyn


\czypowid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza powielenie pozycji wg identyfikatora dostawy
::   WE: _a - material
::       _b - SCEAN
::       [_c] - kontrola tylko dla EANP-1 ... domyslnie 0-dla wszystkich
::   WY: 1-pozycja powielona 0-jest OK
::  OLD: \czypowid/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};

_wyn:=0;

:: zwraca rodzaj kodu kreskowego
_old:=exec('FindInSet','#table','MKODK','KK',_b,_b,"MKODK.OLD",,,'')='T';
{? _old || return(0) ?};

_eann:=null;
_mat:=null;
_ile:=0;
:: sprawdzenie powielenia na pozycjach operacji
{? _b<>''
|| EANN.cntx_psh();
   EANP.cntx_psh();
   EANP.index('SCEAN');
   EANP.prefix(_b,_b,'P');
   {? EANP.first()
   || {!
      |? {? EANP.EANN().AKT='T' & EANP.M<>null & EANP.ILS>0
         || _eann:=EANP.EANN;
            _mat:=EANP.M;
            _ile+=1;
            0
         || EANP.next()
         ?}
      !};
      {? _eann<>null
      || {!
         |? {? EANP.EANN().AKT='T' & EANP.M<>null & EANP.ILS>0 || _wyn:=_eann<>EANP.EANN | _mat<>_a ?};
            ~_wyn & EANP.next()
         !}
      ?}
   ?};
   EANN.cntx_pop();
   EANP.cntx_pop();
:: sprawdzenie na pozycjach dokumentow przychodowych
   {? ~_c & ~_wyn
   || OKR.cntx_psh();
      OKR.index('MC');
      OKR.prefix(REF.FIRMA,1);
      {? OKR.first()
      || {!
         |? ND.cntx_psh();
            DK.cntx_psh();
            ND.use('nagdo'+ST.ODDZ+form(OKR.ROK-2000,-2,0,'99'));
            DK.use('dokma'+ST.ODDZ+form(OKR.ROK-2000,-2,0,'99'));
            DK.index('SCEAN');
            DK.prefix(_b,_b,'T');
            {? DK.first()
            || _size:=DK.size();
               _prdk:=DK.PRDK;
               _buf:='';
               {! |? {? DK.N().TYP().DN='T' | (_buf=DK.PRDK | DK.N().NDSQL<>'') || _size-=1 ?}; _buf:=_prdk; DK.next() !};
               _wyn:=_ile>0 | _size>1
            ?};
            ND.cntx_pop();
            DK.cntx_pop();
            ~_wyn & OKR.next()
         !}
      ?};
      OKR.cntx_pop()
   ?}
?};
_wyn


\sprwyp_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza czy wszystkie pozycje z kodami kreskowymi palet maja przypisane palet
::   WE: _a - ref EANN
::   WY: 1-wszystko jest OK 0-istnieją pozycje bez indeksów -1-nie można aktualnie zaakceptować rozpakowania
::  OLD: \sprwyp_p/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
EANN.cntx_psh();
EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(_a);
{? EANP.first()
|| {!
   |? _wyn:={? EANP.PALEAN<>''
            || _pal:=exec('FindInSet','#table','PAL','PAL',EANP.PALEAN,EANP.PALEAN);
               {? _pal<>null
               || EANP.PAL:=_pal;
                  EANP.put(1)
               ?};
               EANP.PAL<>null
            || 1
            ?};
      {? EANP.EANN().TYP='R' & EANP.EANN().PALEAN<>'' & EANP.PAL<>null()
       & exec('FindInSet','#table','SL','PALALL',EANP.LOKZ().MG,EANP.PAL)=null()
      || _wyn:=-1
      ?};
      _wyn>0 & EANP.next()
   !}
?};
EANN.cntx_pop();
EANP.cntx_pop();
_wyn


\listczyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: daje mozliwosc rozpisania reorganizacji na rozne czytniki
::   WY: 1-rozpisano pozycje 0-nie rozpisano
::  OLD: \listczyt/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
__eanp.cntx_psh();
EANP.cntx_psh();

__eanp.clear();
{? __eanp.first()
|| {!
   |? {? (EANP.clear(); EANP.seek(__eanp.EANP,))
      || {? EANP.EANN().RODZ='ZP'
         || __eanp.MAT:=EANP.PALEAN;
            __eanp.NAZ:='';
            __eanp.ILP:=EANP.ILS;
            __eanp.ILR:=EANP.ILS;
            __eanp.JM:='pal';
            __eanp.CZY:=1
         || __eanp.MAT:=EANP.M().KTM;
            __eanp.NAZ:=EANP.M().N;
            __eanp.ILP:=EANP.ILS;
            __eanp.ILR:=EANP.ILS;
            __eanp.JM:=EANP.M().J().KOD
         ?};
         __eanp.put()
      ?};
      __eanp.next()
   !}
?};

_win_sel:=__eanp.mk_sel('Pozycje przyjęcia dostawy'@,'P',,'#inf_eanp');

__eanp.win_fld(_win_sel,,'MAT',,,20,,1,'Indeks materiałowy'@);
__eanp.win_fld(_win_sel,,'NAZ',,,30,,1,'Nazwa'@);
__eanp.win_fld(_win_sel,,'ILR',,,12,3,0,'Ilość'@);
__eanp.win_fld(_win_sel,,'JM',,,5,,1,'jm'@);
__eanp.win_fld(_win_sel,,'NRC',,,7,,0,'Czytnik'@);
__eanp.win_act(_win_sel,0,'Popraw',,,,,"exec('pop_czyt','magazyn_mob')",1);
__eanp.win_act(_win_sel,0,'Formuła','&Akceptuj'@@,,,"sel_exit",,,,,,'A');
__eanp.win_act(_win_sel,0,'Formuła','Prz&ypisz czytnik'@@,,,,"exec('addeczyt','magazyn_mob')"
 ,,1,"exec('addeczyt','magazyn_mob')",,'Y');
__eanp.win_act(_win_sel,0,'Rekord',,,,"exec('rek_czyt','magazyn_mob')","exec('rpopczyt','magazyn_mob')");
__eanp.win_act(_win_sel,0,'Szukaj');
__eanp.win_act(_win_sel,0,'Kolejność');

__eanp.fld_fml('NRC','F3',"exec('f3nrc_e','magazyn_mob')");
__eanp.fld_fml('ILR','BEFORE_EDIT',"~__eanp.CZY");
__eanp.win_sel(_win_sel);

__eanp.clear();
{? __eanp.select()
||
:: sprawdzenie przypisania czytnikow
   {? __eanp.first()
   || {!
      |? _wyn:=__eanp.NRC<>0;
         _wyn & __eanp.next()
      !}
   ?};
   {? ~_wyn
   || FUN.info('Nie do wszystkich pozycji zostały przypisane czytniki.\nReorganizacja wg kilku urządzeń niemożliwa.'@)
   || __magik.erase();
      __eanp.for_each("__eanp.MG1+=form(__eanp.NRC,,0,'99'); __eanp.put(1)",0);

      {? __eanp.first()
      || {!
         |? __magik.clear();
            {? ~__magik.find_key(__eanp.MG1,__eanp.MG2)
            || __magik.blank();
               __magik.MG1:=__eanp.MG1;
               __magik.MG2:=__eanp.MG2;
               __magik.add(1)
            ?};
            __eanp.next()
         !}
      ?}
   ?}
?};

__eanp.cntx_pop();
EANP.cntx_pop();
_wyn


\pop_czyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po akcji popraw dla __eanp
::  OLD: \pop_czyt/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? __eanp.ILR>0 & __eanp.ILP<>__eanp.ILR
|| _ile:=__eanp.ILP-__eanp.ILR;
   _old:={? __eanp.OLD || __eanp.OLD || #__eanp.ref() ?};
   __eanp.ILP:=__eanp.ILR;
   __eanp.put(1);
   __eanp.ILR:=_ile;
   __eanp.ILP:=_ile;
   __eanp.OLD:=_old;
   __eanp.add(1)
|? __eanp.ILR=0 & __eanp.OLD>0
|| _ile:=__eanp.ILP;
   _old:=__eanp.OLD;
   __eanp.del();
   {? __eanp.seek(_old,)
   || __eanp.ILR+=_ile;
      __eanp.ILP+=_ile;
      __eanp.put(1)
   ?}
?}


\addeczyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: dodaje czytnik do zaznaczonych rekordow
::  OLD: \addeczyt/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy przypisać numer czytnika?'@)
|| EANX.NRC_Z:=0;
   exec('wyb_czyt','magazyn_mob',1,'EANX.NRC_Z','EANX.IDEANC_Z');
   __eanp.cntx_psh();
   {? EANX.NRC_Z>0
   || _tab:=__eanp.sel_aget();
      __eanp.sel_adel();
      _tab.clear();
      {? _tab.size()
      || {? _tab.first()
         || {!
            |? {? (__eanp.clear(); __eanp.seek(_tab.REF,))
               || __eanp.NRC:=EANX.NRC_Z;
                  __eanp.put(1)
               ?};
               _tab.next()
            !}
         ?}
      || __eanp.NRC:=EANX.NRC_Z;
         __eanp.put(1)
      ?}
   ?};
   __eanp.cntx_pop()
?}


\wyb_czyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wybor czytnika
::   WE: _a - pole = 1 tabela danych = 0 tabela EANN = 2
::       _b - dla _a=1 pole, dla _a=0 po prostu nic - zaznaczone rekordy dla __zknrea - NUMER URZĄDZENIA
::       _c - dla _a=1 pole, dla _a=0 po prostu nic - zaznaczone rekordy dla __zknrea - IDADD URZĄDZENIA
::       [_d] - bez wskazania urządzenia
::       [_e] - magazyn, którego dotyczy wybór domyślnie null lub 1-zaznaczone rekordy
::   WY: ''/1-wybrano 0-nie
::  OLD: \wyb_czyt/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_parwyb:={? var_pres('_d')=type_of(0) || _d || 0 ?};
_noczyt:=_parwyb; _noczyt:=1;
_idfld:={? var_pres('_c')=type_of('') || _c || '' ?};
_seltab:=0;
   _mg:={? var_pres('_e')=type_of(null())
        || _e
        |? var_pres('_e')=type_of(0)
        || _seltab:=_e;
           null()
        || null()
        ?};
_res:=1;

VAR_DEL.delete('__eanc');
{? _a=1 & var_pres('__lstum')>0 & var_pres('__mags')>117 &__lstum=1
|| _seltab:=1;
   __mags.prefix();
   {? __mags.first()
   || {? __mags.size()=1
      || _mg:=exec('FindAndGet','#table',MG,__mags.MG,,,null())
      || _mg:=null(); _seltab:=2
      ?}
   ?}
|? _seltab
|| {? _a=0
   || __zknrea.cntx_psh();
      __zknrea.prefix();
      _sel:=__zknrea.sel_aget();
      _sel.prefix();
      {? _sel.first()
      || {!
         |? {? __zknrea.seek(_sel.REF,) & __zknrea.SMG<>''
            || _buf:=exec('FindAndGet','#table',MG,__zknrea.SMG,,,null());
               {? _buf<>null()
               || {? _mg=null() || _mg:=_buf
                  |? _buf<>_mg  || _mg:=null();  _seltab:=2
                  ?}
               ?}
            ?};
            _seltab<2 & _sel.next()
         !}
      ?};
      __zknrea.cntx_pop();
      obj_del(_sel)
   |? _a=2
   || EANN.cntx_psh();
      EANN.prefix();
      _sel:=EANN.sel_aget();
      _sel.prefix();
      {? _sel.first()
      || {!
         |? {? EANN.seek(_sel.REF,)
            || _buf:=EANN.MG;
               {? _buf=null()
               || EANP.cntx_psh();
                  EANP.index('EANN');
                  EANP.prefix(EANN.ref());
                  {? EANP.first() || _buf:=EANP.LOKZ().MG ?};
                  EANP.cntx_pop()
               ?};
               {? _buf<>null()
               || {? _mg=null() || _mg:=_buf
                  |? _buf<>_mg  || _mg:=null();  _seltab:=2
                  ?}
               ?}
            ?};
            _seltab<2 & _sel.next()
         !}
      ?};
      EANN.cntx_pop();
      obj_del(_sel)
   ?}
?};
_noid:='';
_zazn:=0;
{? _a=2
|| _tab:=EANN.sel_aget(); EANN.sel_adel();
   {? ~_tab.size()
   || _noid:=EANN.IDEANC;
      _mg:=EANN.MG;
      {? _mg=null()
      || EANP.cntx_psh();
         EANP.index('EANN');
         EANP.prefix(EANN.ref());
         {? EANP.first() || _mg:=EANP.LOKZ().MG ?};
         EANP.cntx_pop()
      ?}
   || _zazn:=1
   ?}
?};

__eanc:=tab_tmp(3,'DAT','DATE',''
         ,'TIM','TIME',''
         ,'NRC','INTEGER',''
         ,'OPI','STRING[120]',''
         ,'OSO','STRING[40]',''
         ,'ILP','INTEGER',''
         ,'ILW','INTEGER',''
         ,'ILR','INTEGER',''
         ,'USR','STRING[50]',''
         ,'IDADD','STRING[31]','');

_weanc:=__eanc.mk_sel('Wybór czytników'@,'T',0,'lodfaswqpldtrre',,,,,'U');
__eanc.win_fld(_weanc,,'NRC',,,-5,0,1,'Czytnik'@,,'Numer czytnika'@);
__eanc.win_fld(_weanc,,'OPI',,,-16,,1,'Opis'@,,'Opis czytnika'@);
__eanc.win_fld(_weanc,,'DAT',,,-10,0,1,'Data ostatniego logowania'@,,'Data ostatniego logowania na czytniku'@);
__eanc.win_fld(_weanc,,'TIM',,,-10,0,1,'Czas ostatniego logowania'@,,'Czas ostatniego logowania na czytniku'@);
__eanc.win_fld(_weanc,,'USR',,,-20,0,1,'Operator ostatniej aktywności'@,,
                                       'Użytkownik, który wykonał ostatnią czynność na czytniku'@);
__eanc.win_fld(_weanc,,'ILP',,,-10,0,1,'Ilość operacji'@,,'Ilość operacji na czytniku'@);
__eanc.win_fld(_weanc,,'ILW',,,-10,0,1,'Ilość pozycji'@,,'Wszystkie pozycje operacji z danego czytnika'@);
__eanc.win_act(_weanc,0,'Formuła','&Wybierz'@@,,,"sel_exit",,1,,,,'W');
__eanc.win_act(_weanc,0,'Rekord',,,,"exec('rekprzed','color','__infeanc#01')");
__eanc.win_act(_weanc,0,'Kolejność');
__eanc.win_act(_weanc,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','__infeanc#01','@__infean#PRO')",,,,,,'L');
__eanc.win_sel(_weanc);

EANC.index('AKT');
EANC.prefix('T');
{? EANC.first()
|| {!
   |? {? EANC.IDTERM<>'' & (_noid='' | _noid<>EANC.IDADD)
       & (exec('FindInSet','#table','EANCMG','EANC',EANC.ref(),,,,,null())=null()
          | {? ~_seltab
            || _mg=null() | exec('FindInSet','#table','EANCMG','EANC',_mg,EANC.ref(),,,,null())<>null()
            || {? var_pres('__mags')>117
               || _oki:=1;
                  __mags.clear();
                  {? __mags.first()
                  || {!
                     |? _oki:=exec('FindInSet','#table','EANCMG','EANC'
                               ,exec('FindAndGet','#table',MG,__mags.MG,,,null()),EANC.ref(),,,,null())<>null();
                        _oki & __mags.next()
                     !}
                  ?};
                  _oki
               || exec('FindInSet','#table','EANCMG','EANC',_mg,EANC.ref(),,,,null())<>null()
               ?}
            ?})
      || __eanc.clear();
         __eanc.blank();
         __eanc.NRC:=EANC.NRC;
         __eanc.IDADD:=EANC.IDADD;
         __eanc.OPI:=EANC.OPI;
         __eanc.DAT:=exec('str2date','#convert',10+EANC.DTA);
         __eanc.TIM:=exec('str2time','#convert',8+(11-EANC.DTA));
         _buf:=exec('ilopWGnrc','magazyn_mobi',EANC.NRC);
         __eanc.USR:={? (+_buf[3])=31 || exec('FindAndGet','#table',USERS,_buf[3],,"KOD+' - '+DANE",'') || '' ?};
         __eanc.ILP:=_buf[1];
         __eanc.ILW:=_buf[2];
         obj_del(_buf);
::         __eanc.ILP:=sql('select count(*) ILE from EANN where EANN.AKT=\'T\' and EANN.NRC=\':_a\'',EANC.NRC).ILE;
::         __eanc.ILW:=sql('select count(*) ILE '
::                         'from EANP left join EANN using(EANP.EANN,EANN.REFERENCE) '
::                         'where EANN.AKT=\'T\' and EANP.NRC=\':_a\'',EANC.NRC).ILE;
         __eanc.add(1)
      ?};
      EANC.next()
   !}
?};
{? _noczyt & __eanc.size()
|| __eanc.clear();
   __eanc.blank();
   __eanc.NRC:=0;
   __eanc.IDADD:='';
   __eanc.OPI:='<WSZYSTKIE URZĄDZENIA>';
   __eanc.DAT:=date(0,0,0);
   __eanc.TIM:=time(0,0,0);
   __eanc.USR:='';
   _buf:=exec('ilopWGnrc','magazyn_mobi',0);
   __eanc.ILP:=_buf[1];
   __eanc.ILW:=_buf[2];
   obj_del(_buf);
::   __eanc.ILP:=sql('select count(*) ILE from EANN where EANN.AKT=\'T\' and EANN.NRC=\':_a\'',EANC.NRC).ILE;
::   __eanc.ILW:=sql('select count(*) ILE '
::                   'from EANP left join EANN using(EANP.EANN,EANN.REFERENCE) '
::                   'where EANN.AKT=\'T\' and EANP.NRC=\':_a\'',EANN.NRC).ILE;
   __eanc.add(1)
?};
_newid:='';
_wyb:=0;
_newnrc:={? _a=2 & (_zazn | EANN.NRC<>0) & FUN.ask('Czy usunąć przypisanie do urządzenia?'@)
         || _wyb:=1;
            0
         || _res:=0;
            _bufnrc:={? var_pres('_b')=type_of('') & _b<>'' || ($_b)() || 0 ?};
            {? __eanc.last(); __eanc.select(,1,15)
            || _wyb:=1;
               _res:=1;
               _newid:=__eanc.IDADD;
               __eanc.NRC
            || _bufnrc
            ?}
         ?};

{? _a=1
|| ($_b)():=_newnrc;
   {? _idfld<>'' || ($_idfld)():=_newid ?}
?};

{? _wyb & (_newnrc | (_a=2 & _newnrc=0))
|| {? _a=1
   || ($_b)():=_newnrc;
      {? _idfld<>'' || ($_idfld)():=_newid ?}
   |? _a=2
   || {? _tab.first()
      || EANN.cntx_psh();
         {!
         |? {? (EANN.prefix(); EANN.seek(_tab.REF,) & EANN.STAN<>'Z')
            || EANN.IDEANC:=_newid;
               EANN.NRC:=_newnrc;
               {? EANN.put(1)
               || EANP.index('EANN');
                  EANP.prefix(EANN.ref());
                  {? EANP.first()
                  || {!
                     |? EANP.NRC:=_newnrc;
                        EANP.put(1);
                        EANP.next()
                     !}
                  ?}
               ?}
            ?};
            _tab.next()
         !};
         EANN.cntx_pop()
      |? EANN.STAN<>'Z'
      || EANN.IDEANC:=_newid;
         EANN.NRC:=_newnrc;
         {? EANN.put(1)
         || EANP.index('EANN');
            EANP.prefix(EANN.ref());
            {? EANP.first()
            || {!
               |? EANP.NRC:=_newnrc;
                  EANP.put(1);
                  EANP.next()
               !}
            ?}
         ?}
      ?}
   || _tab:=__zknrea.sel_aget();
      __zknrea.sel_adel();
      {? _tab.size()
      || __zknrea.cntx_psh();
         _tab.clear();
         {? _tab.first()
         || {!
            |? {? (__zknrea.clear(); __zknrea.seek(_tab.REF,)) & __zknrea.TREE<>0 & __zknrea.ICON<>-2
               || __zknrea.NRC:=_newnrc;
                  __zknrea.NRCS:=form(__zknrea.NRC,6);
                  __zknrea.put(1)
               ?};
               _tab.next()
            !}
         ?};
         __zknrea.cntx_pop()
      |? __zknrea.TREE<>0 & __zknrea.ICON<>-2
      || __zknrea.NRC:=_newnrc;
         __zknrea.NRCS:=form(__zknrea.NRC,6);
         __zknrea.put(1)
      ?}
   ?}
?};
VAR_DEL.delete('__eanc');
{? _parwyb || _res || {? _res || '' || _newnrc ?} ?}


\rek_czyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: podswietla rekordy z przypisanym czytnikiem
::  OLD: \rek_czyt/mws.fml
::----------------------------------------------------------------------------------------------------------------------
__eanp.NRC<>0


\rpopczyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza poprawnosc wypelnienia danych ewentualnie laczy badz rozlacza pozycje
::   WY: ''-jest OK 'pole'-nie jest dobrze
::  OLD: \rpopczyt/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? __eanp.ILR<0
|| FUN.info('Ilość nie może być liczbą mniejszą od zera.'@);
   _wyn:='ILR'
|? __eanp.ILR>__eanp.ILP
|| FUN.info('Ilość nie może być liczbą większą od %1.'@[form(__eanp.ILP,,3)]);
   _wyn:='ILR'
|? ~__eanp.ILR & ~__eanp.OLD
|| FUN.info('Ilość nie może być równa zero.'@);
   _wyn:='ILR'
|? __eanp.NRC<0
|| FUN.info('Numer czytnika nie może być liczbą mniejszą od zera.'@);
   _wyn:='NRC'
|? __eanp.NRC>0 & exec('FindInSet','#table','EANC','AKT',__eanp.NRC,'T')=null
|| FUN.info('Brak aktywnego czytnika o podanym numerze.'@);
   _wyn:='NRC'
?};
_wyn


\f3nrc_e
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: klawisz F3 dla wyboru czytnika
::----------------------------------------------------------------------------------------------------------------------
exec('wyb_czyt','magazyn_mob',1,'__eanp.NRC','__eanp.IDEANC')


\kakteanc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: akcja rekord dla czytnikow
::  OLD: \kakteanc/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_czas:=time();
_data:=date();
_akt:=((_data-date(1990,1,1))*24)+(_czas~1)+((_czas~2)/60)$0;
_nrc:=((__eanc.DAT-date(1990,1,1))*24)+(__eanc.TIM~1)+((__eanc.TIM~2)/60)$0;

_ilgodz:=_akt-_nrc;
_ildni:=_ilgodz%24;

{? __eanc.NRC=0
|| ''
|? _ildni>30
|| '__infeanc#01#03'
|? _ildni>7
|| '__infeanc#01#02'
|? _ilgodz>24
|| '__infeanc#01#01'
|| ''
?}


\sprwysyl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza poprawnosc wypelnienia pol
::   WE: [_a] 0(domyslnie) -sprawdzenie wg MG.MWS 1-sprawdzenie numeru czytnika
::  OLD: \sprwysyl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_wyn:='';
{? ~_a & ZK_N.MG().MWS='T' & ~ZK_N.MG().W_ALL
|| {? EANX.NRC_Z<0
   || FUN.info('Należy podać numer czytnika dla kompletacji wysyłki.'@);
      _wyn:='NRC_Z'
   |? EANX.NRC_R<0
   || FUN.info('Należy podać numer czytnika dla reorganizacji.'@);
      _wyn:='NRC_R'
   |? EANX.DOK=null
   || FUN.info('Należy podać dok załadunkowy.'@);
      _wyn:='DOK'
   ?}
|| {? EANX.NRC_Z<0
   || FUN.info('Należy podać numer czytnika dla kompletacji wysyłki.'@);
      _wyn:='NRC_Z'
   ?}
?};
_wyn


\dkl2eann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po wprowadzeniu czytnika
::   WE: _a - ref DK_LN
::       _b - numer czytnika
::       [_c] - 1-rozpakowanie 0(domyslnie) nie
::       [_d] - symbol zamowienia lub ''
::       [_e] - klucz grupujący
::       [_f] - 1-reorganizacja mieszana (z rozpakowaniem na palety techniczne) 0(domyślnie)-nie
::  OLD: \dkl2eann/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
{? _>=4 || {? type_of(_d)<>2 || _d:='' ?} || _d:='' ?};
{? _>=5 || {? type_of(_e)<>2 || _e:='' ?} || _e:='' ?};
_mix:={? var_pres('_f')=type_of(0) || _f || 0 ?};

EANN.cntx_psh();
EANN.cntx_pop();
DK_L.index('DK_LN');
DK_L.prefix('Z',_a);
{? DK_L.first()
|| _sync:=tab_tmp(1,'PAL','STRING[16]','');
   EANN.clear();
   EANN.blank();
   EANN.DATA:=date();
   EANN.TYP:='R';
   EANN.IDZAM:=DK_L.DK_LN().IDADD;
   EANN.REFSQL:=$DK_L.DK_LN;
   EANN.UNIK:=$DK_L.DK_LN;
   EANN.SYM:={? _d='' || form(form(DK_L.DK_LN().DT,,3)+' '+form(DK_L.DK_LN().TM,,3)+' '+DK_L.DK_LN().US().KOD) || _d ?};
   EANN.KH:=null;
   EANN.ODB:=null;
   EANN.NRC:=_b;
   EANN.IDEANC:=exec('FindInSet','#table','EANC','AKT',_b,'T',"EANC.IDADD",,,'');
   EANN.TIME:=time();
   EANN.RODZ:={? _c || 'W' || 'W'+{? DK_L.DK_LN().MG().PAL='T' || 'P' || '' ?} ?};
   EANN.STAN:='!';
   EANN.MG:=DK_L.DK_LN().MG;
   EANN.GRP_KEY:=_e;
   _czypal:=DK_L.DK_LN().MG().PAL='T';
   _palean:='';
   EANN.IS_R:='T';
   EANN.IS_M:='N';
   {? EANN.add(1)
   || _lp:=0;
      EANN.UNIK:=$EANN.ref();
      {? ~EANN.put() || undo() ?};
      {!
      |? {? _czypal | form(DK_L.M().KODK)<>''
         || _lp+=1;
            _zpalet:=DK_L.ZPALET;
            EANP.clear();
            EANP.blank;
            EANP.EANN:=EANN.ref();
            EANP.NRC:=EANN.NRC;
            EANP.LOKZ:=DK_L.LOK;
            EANP.LOKDO:=DK_L.LOKDO;
            EANP.M:={? _czypal & _zpalet<2 || null || DK_L.M ?};
            EANP.EAN:={? _czypal & _zpalet<2 || DK_L.PAL().KODK || DK_L.M().KODK ?};
            EANP.IL:={? _czypal & _zpalet<2 || 1 || DK_L.IL ?};
            EANP.ILS:=0;
            _ws2:={? EANP.M<>null() || exec('oblWSP','jm',EANP.M) || 0 ?};
            EANP.IL2:={? EANP.M().J2<>null() & _ws2>0 || EANP.IL/_ws2 || 0 ?};
            EANP.ILS2:=0;
            EANP.LP:=_lp;
            EANP.RSQL:=$DK_L.ref();
            EANP.PAL:=DK_L.PAL;
            EANP.PALDO:=DK_L.PALDO;
            EANP.PALEAN:=DK_L.PAL().KODK;
            EANP.PALDOEAN:={? DK_L.PALDO<>null() || DK_L.PALDO().KODK || '<nieokreślono>' ?};
            EANP.ZPALET:=_zpalet;
            _palean:=EANP.TYMCZAS:={? _zpalet=2 || EANP.PALDOEAN || '' ?};
            EANP.SCEAN:=DK_L.SCEAN;
            EANP.IS_RM:='R';
            EANP.KPLREO:=DK_L.KPLREO;
            {? _zpalet=2 | (EANN.MG().MWS='T' & ~EANX.MG().W_ALL) || EANP.TW:=DK_L.TW ?};
            {? _zpalet=2
            || _sync.clear();
               {? ~_sync.find_key($DK_L.PAL)
               || _sync.blank();
                  _sync.PAL:=$DK_L.PAL;
                  _sync.add(1)
               ?}
            ?};
            EANP.ROZPAL:={? EANP.ZPALET=2 & _mix || 2  || 0 ?};
            exec('uzupIDkod','magdok_palety',EANP);
            {? EANP.add(1)
            || EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
               {? ~EANP.put() || undo() ?}
            || undo()
            ?}
         ?};
         DK_L.next()
      !};
      EANN.STAN:='O';
      EANN.ILP:=exec('addilp','magazyn_mob',EANN.ref());
      {? _palean<>'' & ~_mix || EANN.PALEAN:=_palean ?};
      {? ~EANN.put() || undo() ?}
   || undo()
   ?};
   _sync.clear();
   {? _sync.first()
   || PAL.cntx_psh();
      PAL_POZ.cntx_psh();
      {!
      |? PAL.clear();
         {? PAL.seek(_sync.PAL)
         || {? PAL.AKT='N' || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99')) || PAL_POZ.use('paletyp') ?};
            PAL_POZ.index('PAL');
            PAL_POZ.prefix(PAL.ref());
            {? PAL_POZ.first()
            || {!
               |? PAL_POZ.AKT:='N'; PAL_POZ.put(1);
                  PAL_POZ.AKT:='T'; PAL_POZ.put(1);
                  PAL_POZ.next()
               !}
            ?}
         ?};
         _sync.next()
      !};
      PAL.cntx_pop();
      PAL_POZ.cntx_pop()
   ?};
   obj_del(_sync)
||
:: brak pozycji na reorganizacji wiec usuwamy naglowek
   DK_LN.cntx_psh();
   DK_LN.clear();
   {? DK_LN.seek(_a) & DK_LN.RODZ<>'I'
   || DK_LI.index('DK_LN');
      DK_LI.prefix(DK_LN.ref());
      {? DK_LI.first() || {! |? DK_LI.del() !} ?};
      DK_L.index('DK_LNLOK');
      DK_L.prefix(DK_LN.ref());
      {? DK_L.first() || {! |? DK_L.del() !} ?};
      {? ~DK_LN.count() || DK_LN.del() ?}
   ?};
   DK_LN.cntx_pop()
?};
EANN.cntx_psh();
EANN.cntx_pop();
~~


\aktdeazl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: aktywacja/dezaktywacja kodów dla zleceń
::   WE: _a - kod SCEAN
::       _b - ref M
::       _c - aktualny stan zlecenia
::  OLD: \aktdeazl/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a<>''
|| MKODK.cntx_psh();
   MKODK.index('KK');
   MKODK.prefix(_a,_a);
   {? MKODK.first() & MKODK.M().IDMOB='Z' & _b=MKODK.M || exec('aktmkodk','material',MKODK.ref(),_c) ?};
   MKODK.cntx_pop()
?};
~~


\przypzle
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: podpina zlecenie wg pola EANP.ZLEAN
::   WE: _a - EANP.ZLEAN
::       _b - EANP.SCEAN
::       _c - IDMOB
::  OLD: \przypzle/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _c='P'
|| EANP.ZL:=exec('FindInSet','#table','ZPARN','SCEAN',_b,EANP.M,"ZPARN.ZL",,,null());
   EANP.WYD:=EANP.ZL().JORG;
   EANP.put(1)
|? _c='Z'
|| EANP.ZL:=exec('FindInSet','#table','ZL','ZLEAN',_b);
   EANP.WYD:=EANP.ZL().JORG;
   EANP.put(1)
|| EANP.ZL:=exec('FindInSet','#table','ZL','ZLEAN',_a);
   EANP.WYD:=EANP.ZL().JORG;
   EANP.put(1)
?};
~~


\def_UMob_User
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: definicje urządzeń mobilnych oraz użytkowników urządzeń mobilnych
::  OLD: \eanczytn/ean.fml
::       \eanoper/ean.fml
::----------------------------------------------------------------------------------------------------------------------
:: _win_grp:=EANC.grp_make('Parametryzacja urządzeń mobilnych'@,"",'urz_mobilne');
:: EANC.grp_sel(_win_grp,EANC,'WER',,,,,10,,,,,'maximized');
_win_grp:='GRP';
EANC.win_sel(_win_grp);

EANC.index('AKT');
EANC.prefix();

EANC.select();
''


\chk_eanc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: sprawdzenie uzupelnienia danych
::   WE: [_a] - 'add' / 'put' - dołączenie lub poprawa rekordu, pusty string oznacza wywołanie w systemie
::   WY: ''-ok lub 'ACR' pola
::  OLD: \chk_eanc/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_ctrl:={? var_pres('_a')=type_of('') & (+_a)=3
       || _a
       |? (1+menu_txt())='P'
       || 'put'
       || 'add'
       ?};
{? EANC.NRC<=0
|| FUN.info('Numer urządzenia musi być liczbą większą od zera.'@);
   _wyn:='NRC'
|? EANC.ODDZ=null()
|| FUN.info('Należy podać oddział.'@);
   _wyn:='ODDZ'
|| _err:=0;
   _czy:=exec('FindInSet','#table','EANC','NRC',EANC.NRC);
   {? _czy<>null() || _err:={? _ctrl='put' || _czy<>EANC.ref() || 1 ?} ?};
   {? _err
   || FUN.info('Podany numer urządzenia już istnieje.\nNależy podać inny.'@);
      _wyn:='NRC'
   ?};
   {? _wyn='' & ~_err & EANC.IDTERM<>''
   || _czy:=exec('FindInSet','#table','EANC','IDTERM',EANC.IDTERM,,,1);
      {? _czy<>null() || _err:={? _ctrl='put' || _czy<>EANC.ref() || 1 ?} ?}
   ?};
   {? _wyn='' & _err
   || FUN.info('Podany identyfikator urządzenia już istnieje.\nNależy podać inny.'@);
      _wyn:='IDTERM'
   ?};
   {? _wyn='' & EANC.IDTERM='' & EANC.AKT='T'
   || FUN.info('Brak przypisania identyfikatora urządzenia.\nZmieniono znacznik aktywności czytnika.'@);
      EANC.AKT:='N'
   ?}
?};
{? _wyn='' & ~(var_pres('_a')=type_of('')) & ~exec('eanc_system','magazyn_mob',1)
|| FUN.info('Podano nieobsługiwaną wersję systemu operacyjnego.'@);
   {? type_of(exec('eanc_system','magazyn_mob'))=type_of(0)
   || _wyn:='SYSTEM'
   ?}
?};
_wyn


\prn_eanu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wydruk kodow kreskowych operatorow urzadzen mobilnych
::  OLD: \prn_eanu/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','LMG_MOB_XXXX','lmg_eanu_*','Wydruki kodów kreskowych operatorów urządzeń mobilnych',1)


\pw_eantw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem pola EANP.TW
::  OLD: \pw_eantw/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANP.LOKZ().MG().PAL='T' & EANP.ZPALET<2 & (EANP.M=null | EANP.EAN=EANP.PALEAN)
|| exec('findfnv','#color')
|| ''
?}


\pwerrean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: ustawia zmienna dla EANX.ERR
::  OLD: \pwerrean/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.ERR:={? EANP.M<>null() & EANP.M().RODZ='U'
          || 'K'
          |? EANP.ILS=0
          || 'B'
          |? EANP.M=null & EANP.PAL=null
          || 'M'
          |? EANP.M<>null & EANP.PAL=null & ((1+EANP.LOKZ().MG().TYP)='D' | (1+EANP.EANN().EANL().MG().TYP)='D')
          || {? EANP.SCEAN='' & (';DAPZ'*EANP.M().IDMOB)>1
             || 'S'
             |? EANP.SCEAN<>'' & (';DAPZ'*EANP.M().IDMOB)>1 & ~exec('unik_ean','kody_kresk','M',EANP.SCEAN,EANP.M)
             || 'U'
             |? EANP.SCEAN<>'' & (';APZ'*EANP.M().IDMOB)>1
               & exec('FindInSet','#table','MKODK','KK',EANP.SCEAN,EANP.SCEAN,"MKODK.IDMOB",,,'')<>EANP.M().IDMOB
             || 'I'
             |? EANP.SCEAN<>'' & EANP.M().IDMOB='D' & ~EANP.M().IDZP & EANP.EANN().TYP='P'
               & exec('czypowid','magazyn_mob',EANP.M,EANP.SCEAN)
             || 'D'
             || ''
             ?}
          || 'T'
          ?}


\anuleann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: anulowanie operacji na czytniku
::   WE: [_a] - domyslnie 1 0-brak pytan
::   WY: _a=0 - liczba anulowanych operacji, _a=1 - aktywacja okienka
::  OLD: \anuleann/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
_wyn:=0;

:: czy mozliwe anulowanie pomimo nie zakonczenia operacji
_par:=exec('get','#params',4020,2,OPERATOR.USER)='T' | ~_a;

_tab:=EANN.sel_aget();
{? _tab.size()
|| _licz:=0;  _anul:=0;
   _txt:={? EANN.ZLEC='T' || 'webservice' || 'na czytnikach' ?};
   {? {? _a
      || FUN.ask('Anulować operację %1?'@[_txt]+
          {? _par || '\nUwaga. wśród zaznaczonych operacji anulowane zostaną również operacje niezakończone.'@ || '' ?})
      || 1
      ?}
    & _tab.first()
   || EANN.cntx_psh();
      {!
      |? {? EANN.clear; EANN.seek(_tab.REF,EANN.name())
         || _zam:={? (5+EANN.REFSQL)='zknag' || EANN.REFSQL || '' ?};
            _stan:=EANN.STAN;
            {? EANN.STAN='Z' | _par
            || EANN.STAN:='A';
               EANN.AKT:='N';
               {? EANN.TYP='Z' & (5+EANN.REFSQL)='zknag'
               || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM; EANN.REFSQL:=''; EANN.IDZAM:=''
               |? EANN.TYP='R' & (5+EANN.REFSQL)='dokln'
               || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM; EANN.REFSQL:=''; EANN.IDZAM:=''
               |? EANN.TYP='P' & (5+EANN.REFSQL)='zdnag'
               || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM; EANN.REFSQL:=''; EANN.IDZAM:=''
               |? EANN.TYP='W' & (5+EANN.REFSQL)='zknag'
               || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM; EANN.REFSQL:=''; EANN.IDZAM:=''
               |? EANN.TYP='I' & (5+EANN.REFSQL)='inw_y'
               || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM; EANN.REFSQL:=''; EANN.IDZAM:=''
               ?};
               EANN.put(1);
               exec('archeann','magazyn_mob',EANN.ref(),,_stan);
               {? _zam<>'' || exec('akteanzk','zamsiw_wspolne',_zam) ?};
               _licz+=1
            || _anul+=1
            ?}
         ?};
         _tab.next()
      !};
      EANN.cntx_pop()
   ?};
   EANN.sel_adel();
   FUN.info({? _anul
            || 'Anulowano: %1 operacji.\n'
               'Nie anulowano: %2 operacji '
               '(niezakończone operacje).'@[form(_licz,,0,'99'),form(_anul,,0,'99')]
            || 'Anulowano: %1 operacji.'@[form(_licz,,0,'99')]
            ?})
|| {? EANN.STAN='Z' | _par
   || {? {? _a
         || _txt:=exec('sprpowop','magazyn_mob',EANN.ref());
            _tx2:={? EANN.ZLEC='T' || 'webservice' || 'na czytniku' ?};
            FUN.ask(_txt+'Anulować operację %1?'@[_tx2]+
             {? _par & EANN.STAN<>'Z' || '\nUwaga. Operacja nie została zakończona.'@ || '' ?})
         || 1
         ?}
      || _ref:=EANN.ref();
         _zam:={? (5+EANN.REFSQL)='zknag' || EANN.REFSQL || '' ?};
         EANN.cntx_psh();
         EANN.clear();
         {? EANN.seek(_ref)
         || _stan:=EANN.STAN;
            EANN.STAN:='A';
            EANN.AKT:='N';
            {? EANN.TYP='Z' & (5+EANN.REFSQL)='zknag'
            || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM; EANN.REFSQL:=''; EANN.IDZAM:=''
            |? EANN.TYP='R' & (5+EANN.REFSQL)='dokln'
            || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM; EANN.REFSQL:=''; EANN.IDZAM:=''
            |? EANN.TYP='P' & (5+EANN.REFSQL)='zdnag'
            || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM; EANN.REFSQL:=''; EANN.IDZAM:=''
            |? EANN.TYP='W' & (5+EANN.REFSQL)='zknag'
            || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM; EANN.REFSQL:=''; EANN.IDZAM:=''
            |? EANN.TYP='I' & (5+EANN.REFSQL)='inw_y'
            || EANN.REF_REAL:=EANN.REFSQL; EANN.IDREA:=EANN.IDZAM; EANN.REFSQL:=''; EANN.IDZAM:=''
            ?};
            EANN.put(1)
         ?};
         EANN.cntx_pop();
         _wyn+=exec('archeann','magazyn_mob',_ref,,_stan);
         {? _zam<>'' || exec('akteanzk','zamsiw_wspolne',_zam) ?}
      ?}
   || FUN.info('Nie zakończono operacji. Anulowanie operacji niemożliwe.'@)
   ?}
?};
{? ~_a || _wyn || 'activate:browse' ?}


\sprpowop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdzenie powiazan danej operacji
::   WE: _a - ref EANN
::   WY: tekst o powiazaniach lub ''
::  OLD: \sprpowop/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
EANN.cntx_psh();
EANN.clear();
{? EANN.seek(_a)
|| {? EANN.TYP='R' & (5+EANN.REFSQL)='dokln'
   || _wyn:='Operacja powiązana z reorganizacją w systemie.\n'
            'Uwaga. Anulowanie operacji nie usuwa reorganizacji.\n\n'@
   |? EANN.TYP='Z' & exec('FindInSet','#table','DK_LN','ZDOK',$EANN.ref(),$EANN.ref())
   || _wyn:='Na podstawie kompletacji została wygenerowana reorganizacja w systemie.\n'
            'Uwaga. Anulowanie operacji nie usuwa reorganizacji.\n\n'@
   |? EANN.TYP='Z'
   || _wyn:='Operacja powiązana z zamówieniem w systemie.\n'
            'Uwaga. Anulowanie operacji nie usuwa zamówienia.\n\n'@
   |? EANN.TYP='P' & exec('FindInSet','#table','DK_LN','ZDOK',$EANN.ref(),$EANN.ref())
   || _wyn:='Na podstawie dostawy została wygenerowana reorganizacja w systemie.\n'
            'Uwaga. Anulowanie operacji nie usuwa reorganizacji.\n\n'@
   ?}
?};
EANN.cntx_pop();
_wyn


\realeann_reo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: realizacja operacji
::   WE: [_a] - sposób uruchomienia 1-przegląd(obszar roboczy) 0-nie
::       [_b] - automatyczna realizacja 0-(domyslnie) nie 1-tak
::       [_c] - uzupełnienie terminów ważności 0-(domyslnie) nie 1-tak
::       [_d] - klucz grupujący lub ''-(domyslnie)
::   !!! dla _b=1 zakładamy że w w zmiennej BEER.MOBPAR są domyślne parametry operacji
::   WY: ref DK_LN lub null()
::  OLD: \realeann/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
_uzuptw:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_grpkey:={? var_pres('_d')=type_of('') || _d || '' ?};

EANX.BEZTW:=_uzuptw;

_wyn:=null();
_real:=1;

VAR_DEL.delete('__magik','__eanp','__eazkp','__zamdst','__gennd','__reazew','__addeanp','__poznd','__onlyzw');
VAR_DEL.delete('__ilplus');
__magik:=tab_tmp(2,'MG1','STRING[16]',''
          ,'MG2','STRING[32]','');
__eanp:=tab_tmp(3,'MG1','STRING[16]',''
         ,'MG2','STRING[32]',''
         ,'LP','INTEGER',''
         ,'EANP','STRING[16]',''
         ,'EANN','STRING[16]','');
__eazkp:=tab_tmp(4,'ZKN','STRING[32]',''
          ,'ZKP','STRING[16]',''
          ,'MAT','STRING[16]',''
          ,'SCEAN','STRING[128]',''
          ,'ILR','REAL',''
          ,'ILW','REAL',''
          ,'DOD','INTEGER',''
          ,'MAG','STRING[16]',''
          ,'ILP','REAL',''
          ,'LOK','STRING[16]',''
          ,'TRM','DATE',''
          ,'REF','STRING[16]','');
__gennd:=tab_tmp(4,'WYB','STRING[1]',''
          ,'MGS','STRING[10]',''
          ,'SYM','STRING[20]',''
          ,'SQL','STRING[16]','');

__onlyzw:=0;
ZAKR.TEANP1:='';
ZAKR.TEANP2:='';
ZAKR.RP:='D';

:: POCZATEK REORGANIZACJI - CZESC DOTYCZACA REORGANIZACJI
_nowy:=0;
_tab:=EANN.sel_aget();
EANN.sel_adel();

_rozpak:='';
EANN.cntx_psh();
EANP.cntx_psh();
DK_LN.cntx_psh();
DK_L.cntx_psh();

_i:=0;
{? ~_b & _tab.size()
|| _tab.clear();
   _tab.cntx_psh();
   _rozpal:=exec('pal_iroz','magazyn_mob',null,_tab);
   _utwpal:={? ~_rozpal || 1 |? _rozpal=1 || exec('utwpalet','magdok_palety',null,_tab,1) || 0 ?};
   _tab.cntx_pop();
   _wyp:=1;
   _pal:=1;
   _sprokr:=0;
   {? _tab.first
   || {!
      |? {? (EANN.clear; EANN.seek(_tab.REF,EANN.name()))
         || _sprokr+=EANN.DATA>date(ST.AR,ST.AM,0) | EANN.DATA<date(ST.AR,ST.AM,1);
            {? _rozpak='' || _rozpak:=exec('ctrlrozp','magdok_palety') ?};
            _wyp:=exec('sprwyp_m','magazyn_mob',EANN.ref());
            {? _wyp>0
            || {? EANN.PALEAN<>''
               || _paldo:=exec('FindInSet','#table','PAL','PAL',EANP.EANN().PALEAN,EANP.EANN().PALEAN);
                  {? _paldo=null() & exec('autoapal','magdok_palety',EANN.PALEAN)
                  || _paldo:=PAL.ref()
                  ?};
                  EANP.index('EANN');
                  EANP.prefix(EANN.ref());
                  {? EANP.first()
                  || {!
                     |? EANP.PALDO:=_paldo;
                        EANP.PALDOEAN:=EANP.PALDO().KODK;
                        EANP.LOKDO:={? EANN.EANL<>null() || EANN.EANL
                              |? EANN.MG().EANL<>null() || EANN.MG().EANL
                              |? EANP.LOKZ<>null() || EANP.LOKZ().MG().EANL
                              || EANP.LOKDO
                              ?};
                        EANP.put(1);
                        EANP.next()
                     !}
                  ?}
               ?};
               _pal:=exec('sprwyp_p','magazyn_mob',EANN.ref())
            ?}
         ?};
         _wyp>0 & _pal>0 & _rozpak='' & _tab.next()
      !}
   ?};
   {? _sprokr
   || FUN.info('Wśród zaznaczonych operacji istnieją pozycje o dacie nie będącej z aktualnego okresu.\n'
           'Akceptacja operacji niemożliwa.'@)
   |? _rozpak<>''
   || FUN.info('Wśród zaznaczonych operacji istnieją pozycje rozpakowujące palety\n'
           'o ilości do rozpakowania większej od aktualnej ilości na palecie.\n'
           'Pierwsza z palet do rozpakowania o niezgodnej ilości to: %1.\n\n'
           'Należy anulować inne otwarte operacje rozpakowania dla tej palety.\n'
           'Akceptacja operacji niemożliwa.'@[_rozpak])
   |? _wyp=0
   || FUN.info('Wśród zaznaczonych operacji istnieją pozycje bez indeksów materiałowych.\n'
           'Pozycje te zostaną pominięte przy zatwierdzeniu reorganizacji magazynu.'@)
   |? _wyp<0
   || FUN.info('Wśród zaznaczonych operacji istnieją pozycje bez prawidłowych kodów identyfikacyjnych.\n'
           'Pozycje te zostaną pominięte przy zatwierdzeniu reorganizacji magazynu.'@)
   |? ~_pal
   || FUN.info('Wśród zaznaczonych operacji istnieją pozycje bez zdefiniowanych palet w systemie.\n'
           'Pozycje te zostaną pominięte przy zatwierdzeniu reorganizacji magazynu.'@)
   |? _pal<0
   || FUN.info('Wśród zaznaczonych operacji istnieją pozycje rozpakowania,\n'
               'których palety nie zostały przyjęte do danego magazyn.\n'
               'Akceptacja operacji niemożliwa.'@)
   |? _rozpal=2
   || FUN.info('Wśród zaznaczonych operacji istnieją pozycje z rozpakowania i bez.\nOperacja niemożliwa.'@);
      _sprokr:=1
   |? ~_utwpal
   || FUN.info('Istnieją pozycje (z rozpakowania) bez zdefiniowanych palet w systemie.\nOperacja niemożliwa.'@);
      _sprokr:=1
   ?};
   {? ~_sprokr & _rozpak='' & _pal>0 & _tab.first()
   || _czy_inw:=exec('czytwinw','magazyn_inw',_tab,1);
      _czy_akc:=exec('sprakc_r','magazyn_mob',1,_tab);
      {? _czy_inw='P' & _czy_akc
      || EANX.win_edit('REANN');
         {? EANX.edit()
         || _akc:={? EANX.AKC || 2 || 1 ?};
            _czy_inw:={? EANX.BEZTW || 'T' || 'N' ?}
         || _akc:=0
         ?}
      |? _czy_inw='P' & ~_czy_akc
      || _akc:=FUN.choice('Czy zatwierdzić reorganizację magazynu?'@,
                ,'Bez uzupełnienia terminów ważn.'@,'Z uzupełnieniem terminów ważn.'@);
         _czy_inw:={? _akc=2 || 'T' || 'N' ?};
         _akc:=_akc<>0
      || _akc:={? _czy_akc
               || FUN.choice('Czy zatwierdzić reorganizację magazynu?'@,,'Bez akceptacji'@,'Z ak&ceptacją'@)
               || FUN.ask('Czy zatwierdzić reorganizację magazynu?'@)
               ?}
      ?}
   || _akc:=0
   ?};

   _dklnakc:=tab_tmp(1,'SQL','STRING[16]','');
   {? _akc & (_tab.clear(); _tab.first())
   || {!
      |? _nowy:=0;
         {? (EANN.clear(); EANN.seek(_tab.REF,EANN.name()))
          & (EANN.STAN='Z' | (EANN.STAN='+' & EANN.IS_R='T'))
          & exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
         || _refakc:=null;
            _spis:=EANN.PALEAN='' & EANN.EANL<>null;
            _dom:=EANN.EANL().MG().EANL;
            do();
::          usuniecie poprzedniej rozpiski
            {? (5+EANN.REFSQL)='dokln'
            || {? (DK_LN.clear(); DK_LN.seek(EANN.REFSQL,form(8+EANN.REFSQL)))
               || _refakc:=DK_LN.ref();
                  {? _grpkey<>''
                  || DK_LN.GRP_KEY:=_grpkey;
                     DK_LN.put(1)
                  ?};
                  DK_L.index('DK_LN');
                  DK_L.prefix('Z',DK_LN.ref());
                  {? DK_L.first()
                  || {!
                     |? {? EANN.EANL=null | EANN.EANL=DK_L.LOK | EANN.PALEAN<>''
                        || {? DK_L.ZPALET=2
                           || exec('poz_bpal','magdok_palety',0,$DK_L.PALDO,$DK_L.PAL,DK_L.M().KTM,DK_L.IL,-1,DK_L.TW);
                              exec('zwrilpal','magdok_palety',DK_L.PAL,DK_L.M().KTM,DK_L.IL,-1,DK_L.TW)
                           ?};
                           DK_L.del()
                        || DK_L.next()
                        ?}
                     !}
                  ?}
               ?}
            ||
::             zakladamy nowego DK_LN-a
               DK_LN.clear();
               DK_LN.blank();
               _i+=0.033333;
               DK_LN.TM+=_i;
               DK_LN.RODZ:={? _spis || 'I' || 'C' ?};
::             ustawienie magazynu z ktorego pochodza lokalizacje
               {? _spis
               || DK_LN.MG:=EANN.EANL().MG
               || EANP.index('EANN');
                  EANP.prefix(EANN.ref());
                  {? EANP.first || DK_LN.MG:=EANP.LOKZ().MG ?}
               ?};
               {? _grpkey<>'' || DK_LN.GRP_KEY:=_grpkey ?};
               {? ~DK_LN.add()
               || undo()
               || EANN.REFSQL:=$DK_LN.ref();
                  EANN.IDZAM:=DK_LN.IDADD;
                  EANN.put(1);
                  _refakc:=DK_LN.ref()
               ?}
            ?};
            exec('uzup_rtw','magazyn_mob',EANN.ref());
::             generacja nowej wg zapisow na pozycjach czytnika
            EANP.index('EANN');
            EANP.prefix(EANN.ref());
            {? EANP.first()
            || {!
               |? {? (EANP.M<>null | EANP.PAL<>null) & exec('ok_kodid','magazyn_mob') & EANP.ILS>0
                   & (_spis | EANP.LOKDO<>null())
                  || {? ((EANN.RODZ+1)='P' | EANN.RODZ='W') & EANP.PAL<>null & (PAL.clear(); PAL.seek(EANP.PAL))
                     || {? _spis & ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),_dom,EANN.EANL,date(0,0,0)
                                     ,date(0,0,0),1,DK_LN.MG,null,,,EANP.PAL,EANP.PAL,,1)
                        || undo()
                        |? ~_spis
                        || {? EANP.ZPALET<2
                           || {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),EANP.LOKZ,EANP.LOKDO,date(0,0,0)
                                   ,date(0,0,0),1,DK_LN.MG,null,,,EANP.PAL,EANP.PAL,,1)
                              || undo()
                              ?}
                           || {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),EANP.LOKZ,EANP.LOKDO,EANP.TW
                                  ,EANP.TW,EANP.ILS,DK_LN.MG,EANP.M,,,EANP.PAL,EANP.PALDO,,2)
                              || undo()
                              ||
::                               aktualizuje pole ILP na pozycjach palety
                                 _ileroz:=EANP.ILS;
                                 PAL.cntx_psh();
                                 PAL_POZ.cntx_psh();
                                 {? EANP.PAL().AKT='N'
                                 || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
                                 || PAL_POZ.use('paletyp')
                                 ?};
                                 PAL_POZ.index('PAL');
                                 PAL_POZ.prefix(EANP.PAL,EANP.M().KTM,EANP.M().KTM);
                                 {? PAL_POZ.first()
                                 || {!
                                    |? {? PAL_POZ.ILP>=_ileroz
                                       || PAL_POZ.ILP-=_ileroz;
                                          exec('akt_palp','magdok_palety');
                                          {? PAL_POZ.put(1)
                                          || exec('poz_bpal','magdok_palety',1,$EANP.PALDO,$PAL_POZ.PAL
                                              ,PAL_POZ.M().KTM,_ileroz,PAL_POZ.C,PAL_POZ.TW,PAL_POZ.SCSQL
                                              ,EANP.LOKZ().MG,PAL_POZ.DK_C)
                                          ?};
                                          _ileroz:=0
                                       |? PAL_POZ.ILP>0
                                       || _ilp:=PAL_POZ.ILP;
                                          _ileroz-=_ilp;
                                          PAL_POZ.ILP:=0;
                                          PAL_POZ.IL2:=0;
                                          {? PAL_POZ.put(1)
                                          || exec('poz_bpal','magdok_palety',1,$EANP.PALDO,$PAL_POZ.PAL
                                              ,PAL_POZ.M().KTM,_ilp,PAL_POZ.C,PAL_POZ.TW,PAL_POZ.SCSQL
                                              ,EANP.LOKZ().MG,PAL_POZ.DK_C)
                                          ?}
                                       ?};
                                       _ileroz>0 & PAL_POZ.next()
                                    !}
                                 ?};
                                 PAL.cntx_pop();
                                 PAL_POZ.cntx_pop();
                                 exec('znacznik','magdok_palety',EANP.PAL);
                                 exec('ktm2pal','magdok_palety',0,EANP.PAL)
                              ?}
                           ?}
                        ?};
                        {? _spis
                        || DK_LI.index('DK_LNLOK');
                           DK_LI.prefix(DK_LN.ref());
                           {? ~DK_LI.find_key(EANN.EANL)
                           || DK_LI.blank();
                              DK_LI.DK_LN:=DK_LN.ref();
                              DK_LI.EANL:=EANN.EANL;
                              exec('uzupIDkod','magdok_palety',DK_LI);
                              {? ~DK_LI.add(1) || undo() ?}
                           ?}
                        ?}
                     || {? _spis & ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),_dom,EANN.EANL,EANP.TW,EANP.TW
                                    ,EANP.ILS,DK_LN.MG,EANP.M,,,null,EANP.PAL,,,EANP.SCEAN)
                        || undo()
                        |? ~_spis & ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),EANP.LOKZ,EANP.LOKDO,EANP.TW,EANP.TW
                                     ,EANP.ILS,DK_LN.MG,EANP.M,,,EANP.PAL,EANP.PAL,,,EANP.SCEAN)
                        || undo()
                        ?};
                        {? _spis
                        || DK_LI.index('DK_LNLOK');
                           DK_LI.prefix(DK_LN.ref());
                           {? ~DK_LI.find_key(EANN.EANL)
                           || DK_LI.blank();
                              DK_LI.DK_LN:=DK_LN.ref();
                              DK_LI.EANL:=EANN.EANL;
                              exec('uzupIDkod','magdok_palety',DK_LI);
                              {? ~DK_LI.add(1) || undo() ?}
                           ?}
                        ?}
                     ?}
                  ?};
                  EANP.next()
               !};
               {? _czy_inw='T' & DK_LN.MG().PAL='N' || exec('popdkltw','magazyn_stan',null,DK_LN.ref()) ?}
            |? _spis & (_nowy | EANN.REFSQL='')
            || DK_LI.clear();
               DK_LI.blank();
               DK_LI.DK_LN:=DK_LN.ref();
               DK_LI.EANL:=EANN.EANL;
               exec('uzupIDkod','magdok_palety',DK_LI);
               {? ~DK_LI.add(1) || undo() ?}
            ?};
            EANN.STAN:='+';
            EANN.put(1);
            exec('archeann','magazyn_mob',EANN.ref());
            end();
            {? _akc=2 & _refakc<>null
            || _dklnakc.clear();
               {? ~_dklnakc.find_key($_refakc)
               || _dklnakc.blank();
                  _dklnakc.SQL:=$_refakc;
                  _dklnakc.add(1)
               ?}
            ?}
         ?};
         _tab.next()
      !}
   ?};
   obj_del(_dklnakc)
|| _pal:=1;
   _stEANN:={? (EANN.STAN='Z' | (EANN.STAN='+' & EANN.IS_R='T')) || 'Z' || EANN.STAN ?};
   {? _stEANN='Z' & ~exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
   || {? ~_b
      || FUN.info('W obecnej chwili nie wszystkie pozycje operacji zostały zaktualizowane.\n'
          'Realizacja operacji niemożliwa.'@)
      ?}
   |? _stEANN='Z'
   || _is_rm:=0;
      {? EANN.IS_M='T' || _is_rm:=1; VAR_DEL.delete('__listpoz'); __listpoz:=tab_tmp(1,'EANP','STRING[16]','') ?};
      _wyp:=exec('sprwyp_m','magazyn_mob',EANN.ref());
      {? _wyp>0
      || {? EANN.PALEAN<>''
         || _paldo:=exec('FindInSet','#table','PAL','PAL',EANP.EANN().PALEAN,EANP.EANN().PALEAN);
            {? _paldo=null() & exec('autoapal','magdok_palety',EANN.PALEAN)
            || _paldo:=PAL.ref()
            ?};
            EANP.index('EANN');
            EANP.prefix(EANN.ref());
            {? EANP.first()
            || {!
               |? {? EANP.IS_RM='R'
                  || EANP.PALDO:=_paldo;
                     EANP.PALDOEAN:=EANP.PALDO().KODK;
                     EANP.LOKDO:={? EANN.EANL<>null() || EANN.EANL
                                 |? EANN.MG().EANL<>null() || EANN.MG().EANL
                                 |? EANP.LOKZ<>null() || EANP.LOKZ().MG().EANL
                                 || EANP.LOKDO
                                 ?};
                     EANP.put(1)
                  ?};
                  EANP.next()
               !}
            ?}
         ?};
         _utwpal:={? ~exec('pal_iroz','magazyn_mob',EANN.ref())
                  || 1
                  || exec('utwpalet','magdok_palety',EANN.ref(),,1)
                  ?};
         _pal:=exec('sprwyp_p','magazyn_mob',EANN.ref())
      ?};
      _sprokr:=EANN.DATA>date(ST.AR,ST.AM,0) | EANN.DATA<date(ST.AR,ST.AM,1);
      _rozpak:=exec('ctrlrozp','magdok_palety');
      {? _sprokr
      || {? ~_b
         || FUN.info('Wybrana operacja ma datę nie będącą z aktualnego okresu.\n'
             'Akceptacja operacji niemożliwa.'@)
         ?}
      |? _rozpak<>''
      || {? ~_b
         || FUN.info('Dla operacji istnieją pozycje rozpakowujące palety\n'
             'o ilości do rozpakowania większej od aktualnej ilości na palecie.\n'
             'Pierwsza z palet do rozpakowania o niezgodnej ilości to: %1.\n\n'
             'Należy anulować inne otwarte operacje rozpakowania dla tej palety.\n'
             'Akceptacja operacji niemożliwa.'@[_rozpak])
         ?}
      |? _wyp=0
      || {? ~_b
         || FUN.info('Istnieją pozycje bez indeksów materiałowych.\n'
             'Pozycje te zostaną pominięte przy zatwierdzeniu reorganizacji magazynu.'@)
         ?}
      |? _wyp<0
      || {? ~_b
         || FUN.info('Istnieją pozycje bez prawidłowych kodów identyfikacyjnych.\n'
             'Pozycje te zostaną pominięte przy zatwierdzeniu reorganizacji magazynu.'@)
         ?}
      |? ~_pal
      || {? ~_b
         || FUN.info('Istnieją pozycje bez zdefiniowanych palet w systemie.\n'
             'Pozycje te zostaną pominięte przy zatwierdzeniu reorganizacji magazynu.'@)
         ?}
      |? _pal<0
      || {? ~_b
         || FUN.info('Rozpakowywane palety nie zostały przyjęte do danego magazynu.\n'
             'Akceptacja operacji niemożliwa.'@)
         ?}
      |? ~_utwpal
      || {? ~_b
         || FUN.info('Istnieją pozycje (z rozpakowania) bez zdefiniowanych palet w systemie.\nOperacja niemożliwa.'@)
         ?};
         _sprokr:=1
      ?};
      {? ~_sprokr & _rozpak='' & _pal>0
      || _czy_inw:=exec('czytwinw','magazyn_inw',,1);
         _czy_akc:=exec('sprakc_r','magazyn_mob',0,EANN.ref());
:: [rr] DRO
         _czy_akc:=0;
         _rozpal:=exec('pal_iroz','magazyn_mob',EANN.ref());
         {? _b | (~_b & BEER.MOBPAR<>null)
         || EANX.AKC:=BEER.MOBPAR().TAK='T'
         ?};
         {? _czy_inw='P' & _czy_akc
         || {? ~_b
            || EANX.win_edit('REANN');
               {? EANX.edit()
               || _akc:={? EANX.AKC || 2 || 1 ?};
                  _czy_inw:={? EANX.BEZTW || 'T' || 'N' ?}
               || _akc:=0
               ?}
            || _akc:={? BEER.MOBPAR().TAK='T' || 2 || 1 ?};
               _czy_inw:={? EANX.BEZTW || 'T' || 'N' ?}
            ?}
         |? _czy_inw='P' & ~_czy_akc
         || {? ~_b
            || _akc:=FUN.choice('Czy zatwierdzić reorganizację magazynu?'@,
                      ,'Bez uzupełnienia terminów ważn.'@,'Z uzupełnieniem terminów ważn.'@)
            || _akc:={? BEER.MOBPAR().TAK='T' || 2 || 1 ?};
               _czy_inw:={? EANX.BEZTW || 'T' || 'N' ?}
            ?};
            _czy_inw:={? _akc=2 || 'T' || 'N' ?};
            _akc:=_akc<>0
         || {? ~_b
            || _akc:={? _czy_akc
                     || FUN.choice('Czy zatwierdzić reorganizację magazynu?'@,,'Bez akceptacji'@,'Z ak&ceptacją'@)
                     || FUN.ask('Czy zatwierdzić reorganizację magazynu?'@)
                     ?}
            || _akc:={? BEER.MOBPAR().TAK='T' || 2 || 1 ?};
               _czy_inw:={? EANX.BEZTW || 'T' || 'N' ?}
            ?}
         ?}
      || _akc:=0
      ?};
      {? _akc
      || _refakc:=null;
         _spis:=EANN.PALEAN='' & EANN.EANL<>null;
         _dom:=EANN.EANL().MG().EANL;
         do();
::          usuniecie poprzedniej rozpiski
         {? (5+EANN.REFSQL)='dokln'
         || {? (DK_LN.clear(); DK_LN.seek(EANN.REFSQL,form(8+EANN.REFSQL)))
            || _refakc:=_wyn:=DK_LN.ref();
               EANX.IDDK_LN:=DK_LN.IDADD;
               {? _grpkey<>''
               || DK_LN.GRP_KEY:=_grpkey;
                  DK_LN.put(1)
               ?};
               DK_L.index('DK_LN');
               DK_L.prefix('Z',DK_LN.ref());
               {? DK_L.first()
               || {!
                  |? {? EANN.EANL=null | EANN.EANL=DK_L.LOK | EANN.PALEAN<>''
                     || {? DK_L.ZPALET=2
                        || exec('poz_bpal','magdok_palety',0,$DK_L.PALDO,$DK_L.PAL,DK_L.M().KTM,DK_L.IL,-1,DK_L.TW);
                           exec('zwrilpal','magdok_palety',DK_L.PAL,DK_L.M().KTM,DK_L.IL,-1,DK_L.TW)
                        ?};
                        DK_L.del()
                     || DK_L.next()
                     ?}
                  !}
               ?}
            ?}
         ||
::             zakladamy nowego DK_LN-a
            DK_LN.clear();
            DK_LN.blank();
            _i+=0.033333;
            DK_LN.TM+=_i;
            DK_LN.RODZ:={? _spis || 'I' || 'C' ?};
::             ustawienie magazynu z ktorego pochodza lokalizacje
            {? _spis
            || DK_LN.MG:=EANN.EANL().MG
            || EANP.index('EANN');
               EANP.prefix(EANN.ref());
               {? EANP.first || {! |? {? EANP.IS_RM='R' || DK_LN.MG:=EANP.LOKZ().MG; 0 || EANP.next() ?} !} ?}
            ?};
            {? _grpkey<>'' || DK_LN.GRP_KEY:=_grpkey ?};
            {? ~DK_LN.add()
            || undo()
            || _nowy:=1;
               EANN.REFSQL:=$DK_LN.ref();
               EANN.IDZAM:=DK_LN.IDADD;
               EANN.put(1);
               _refakc:=_wyn:=DK_LN.ref();
               EANX.IDDK_LN:=DK_LN.IDADD
            ?}
         ?};
         exec('uzup_rtw','magazyn_mob',EANN.ref());
::       generacja nowej wg zapisow na pozycjach czytnika
         EANP.index('EANN');
         EANP.prefix(EANN.ref());
         {? EANP.first()
         ||
            {!
            |?
               {? EANP.IS_RM='R'
               ||
::             kontrola czy lokalizacje z tego samego magazynu
                  {? ~_spis & EANP.LOKDO<>null() & (#EANP.LOKZ().MG<>#DK_LN.MG | #EANP.LOKDO().MG<>#DK_LN.MG)
                  ||
                     undo();
                     FUN.info('Lokalizacje pochodzą z różnych magazynów. Dokumentu nie można zaakceptować.'@)
                  ?};
                  {? (EANP.M<>null | EANP.PAL<>null) & exec('ok_kodid','magazyn_mob') & EANP.ILS>0
                   & (_spis | EANP.LOKDO<>null())
                  || {? _is_rm
                     || __listpoz.clear();
                        __listpoz.blank();
                        __listpoz.EANP:=$EANP.ref();
                        __listpoz.add(1)
                     ?};
                     {? ((EANN.RODZ+1)='P' | _rozpal) & EANP.PAL<>null
                     || {? _spis & ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),_dom,EANN.EANL,date(0,0,0)
                                     ,date(0,0,0),1,DK_LN.MG,null,,,EANP.PAL,EANP.PAL)
                        || undo()
                        |? ~_spis
                        || {? EANP.ZPALET<2
                           || {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),EANP.LOKZ,EANP.LOKDO,date(0,0,0)
                                   ,date(0,0,0),1,DK_LN.MG,null,,,EANP.PAL,EANP.PAL,,1)
                              || undo()
                              ?}
                           || {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),EANP.LOKZ,EANP.LOKDO,EANP.TW
                                  ,EANP.TW,EANP.ILS,DK_LN.MG,EANP.M,,,EANP.PAL,EANP.PALDO,,2)
                              || undo()
                              ||
::                               aktualizuje pole ILP na pozycjach palety
                                 _ileroz:=EANP.ILS;
                                 PAL.cntx_psh();
                                 PAL_POZ.cntx_psh();
                                 {? EANP.PAL().AKT='N'
                                 || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
                                 || PAL_POZ.use('paletyp')
                                 ?};
                                 PAL_POZ.index('PAL');
                                 PAL_POZ.prefix(EANP.PAL,EANP.M().KTM,EANP.M().KTM);
                                 {? PAL_POZ.first()
                                 || {!
                                    |? {? PAL_POZ.ILP>=_ileroz
                                       || PAL_POZ.ILP-=_ileroz;
                                          exec('akt_palp','magdok_palety');
                                          {? PAL_POZ.put(1)
                                          || exec('poz_bpal','magdok_palety',1,$EANP.PALDO,$PAL_POZ.PAL
                                              ,PAL_POZ.M().KTM,_ileroz,PAL_POZ.C,PAL_POZ.TW,PAL_POZ.SCSQL
                                              ,EANP.LOKZ().MG,PAL_POZ.DK_C)
                                          ?};
                                          _ileroz:=0
                                       |? PAL_POZ.ILP>0
                                       || _ilp:=PAL_POZ.ILP;
                                          _ileroz-=_ilp;
                                          PAL_POZ.ILP:=0;
                                          PAL_POZ.IL2:=0;
                                          {? PAL_POZ.put(1)
                                          || exec('poz_bpal','magdok_palety',1,$EANP.PALDO,$PAL_POZ.PAL
                                              ,PAL_POZ.M().KTM,_ilp,PAL_POZ.C,PAL_POZ.TW,PAL_POZ.SCSQL
                                              ,EANP.LOKZ().MG,PAL_POZ.DK_C)
                                          ?}
                                       ?};
                                       _ileroz>0 & PAL_POZ.next()
                                    !}
                                 ?};
                                 PAL.cntx_pop();
                                 PAL_POZ.cntx_pop();
                                 exec('znacznik','magdok_palety',EANP.PAL);
                                 exec('ktm2pal','magdok_palety',0,EANP.PAL)
                              ?}
                           ?}
                        ?};
                        {? _spis
                        || DK_LI.index('DK_LNLOK');
                           DK_LI.prefix(DK_LN.ref());
                           {? ~DK_LI.find_key(EANN.EANL)
                           || DK_LI.blank();
                              DK_LI.DK_LN:=DK_LN.ref();
                              DK_LI.EANL:=EANN.EANL;
                              exec('uzupIDkod','magdok_palety',DK_LI);
                              {? ~DK_LI.add(1) || undo() ?}
                           ?}
                        ?}
                     || {? _spis & ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),_dom,EANN.EANL,EANP.TW,EANP.TW
                                     ,EANP.ILS,DK_LN.MG,EANP.M,,,null,EANP.PAL,,,EANP.SCEAN)
                        || undo()
                        |? ~_spis & ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),EANP.LOKZ,EANP.LOKDO,EANP.TW,EANP.TW
                                      ,EANP.ILS,DK_LN.MG,EANP.M,,,EANP.PAL,EANP.PAL,,,EANP.SCEAN)
                        || undo()
                        ?};
                        {? _spis
                        || DK_LI.index('DK_LNLOK');
                           DK_LI.prefix(DK_LN.ref());
                           {? ~DK_LI.find_key(EANN.EANL)
                           || DK_LI.blank();
                              DK_LI.DK_LN:=DK_LN.ref();
                              DK_LI.EANL:=EANN.EANL;
                              exec('uzupIDkod','magdok_palety',DK_LI);
                              {? ~DK_LI.add(1) || undo() ?}
                           ?}
                        ?}
                     ?}
                  ?}
               ?};
               EANP.next()
            !};
            {? _czy_inw='T' & DK_LN.MG().PAL='N' || exec('popdkltw','magazyn_stan',null,DK_LN.ref()) ?}
         |? _spis & (_nowy | EANN.REFSQL='')
         || DK_LI.clear();
            DK_LI.blank();
            DK_LI.DK_LN:=DK_LN.ref();
            DK_LI.EANL:=EANN.EANL;
            exec('uzupIDkod','magdok_palety',DK_LI);
            {? ~DK_LI.add(1) || undo() ?}
         ?};
         EANN.STAN:='+';
         EANN.put(1);
         {? _is_rm
         || exec('archeann','magazyn_mob',EANN.ref(),__listpoz);
            VAR_DEL.delete('__listpoz')
         || exec('archeann','magazyn_mob',EANN.ref())
         ?};
         end()
      ?}
   || {? EANN.STAN='+'
      || FUN.info('Operacja została zrealizowana.'@)
      |? EANN.STAN='A'
      || FUN.info('Operacja została anulowana.'@)
      || FUN.info('Niezakończona reorganizacja magazynu.\nOperacja niemożliwa.'@)
      ?}
   ?}
?};
DK_LN.cntx_pop();
DK_L.cntx_pop();
EANN.cntx_pop();
EANP.cntx_pop();
VAR_DEL.delete('__magik','__pozy','__eazkp','__zamdst','__gennd','__reazew','__poznd','__onlyzw');
VAR_DEL.delete('__ilplus');
_wyn


\eann2dk_ln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Poprawa nagłówka reorganizacji
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_DREO';
_params.UIDREF:=EANN.uidref();
_params.AKCJA:='Generuj_wg_ope';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EANN',EANN.ref());
exec('mp_run','#b__box',_params);
'activate:browse'


\pal_iroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy pozycje sa mieszane rozpakowanie i palety
::   WE: _a - ref EANN lub null
::       _b - tabela zaznaczen
::       [_c] - 1-tryb przepisywania 0-nie (domyślnie)
::   WY: 0-tylko palety 1-tylko rozpakowanie 2-rozpakowanie i palety
::       3-rozpakowanie techniczne 4-rozpakowanie techniczne i palety
::  OLD: \pal_iroz/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_sprpoz:={? var_pres('_c')=type_of(0) || _c || 0 ?};
{? _a<>null
|| _buf:=tab_tmp(1,'REF','INTEGER','');
   _buf.clear();
   _buf.blank();
   _buf.REF:=#_a;
   _buf.add(1)
|| _buf:=_b
?};

_wyn:=0;
_roz:=0;
_pal:=0;
_rpal:=0;
_rbuf:=0;
EANN.cntx_psh();
EANP.cntx_psh();
_buf.clear();
{? _buf.first()
|| {!
   |? {? (EANN.clear(); EANN.seek(_buf.REF,))
      || {? _sprpoz
         || EANP.index('EANN');
            EANP.prefix(EANN.ref());
            {? EANP.first()
            || {!
               |? _tech:=EANP.PALDO<>null() & EANP.PALDO().BEZOZN='B' & EANP.PALDO().MG=EANP.LOKZ().MG;
                  {? EANP.ZPALET=2 | (EANP.PALDO<>null() & EANP.PAL<>EANP.PALDO)
                  || _roz:=1; _rpal+=1; {? _tech || _rbuf+=1 ?}
                  || _pal:=1
                  ?};
                  EANP.next()
               !}
            ?}
         || {? EANN.PALEAN<>'' || _roz:=1 || _pal:=1 ?}
         ?}
      ?};
      _buf.next()
   !}
?};
EANN.cntx_pop();
EANP.cntx_pop();

obj_del(_buf);

_wyn:={? _roz & _pal  || {? _rbuf<>_rpal || 2 || 4 ?}
      |? _roz & ~_pal || {? _rbuf<>_rpal || 1 || 3 ?}
      || 0
      ?};
_wyn


\jest_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdzonko palety
::   WE: [_a] 0-pole PAL(domyslnie) 1-PALDO
::   WY: 1-utworzenie nowej palety 2-dodanie pozycji do palety 3-istnieje w systemie z pozycjami
::  OLD: \jest_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

{? ~_a
|| _pal:={? EANP.PALEAN<>'' || exec('FindInSet','#table','PAL','PAL',EANP.PALEAN,EANP.PALEAN) || EANP.PAL ?};
   {? EANP.PALEAN<>'' & _pal=null()
   || _wyn:=1
   |? EANP.PALEAN<>'' & exec('FindInSet','#table','PAL_POZ','PAL',EANP.PAL)=null()
   || _wyn:=2
   |? EANP.PALEAN<>'' & _pal<>null()
   || _wyn:=3
   || 0
   ?}
|| _pal:={? EANP.PALDOEAN<>'' || exec('FindInSet','#table','PAL','PAL',EANP.PALDOEAN,EANP.PALDOEAN) || EANP.PALDO ?};
   {? EANP.PALDOEAN<>'' & _pal=null()
   || _wyn:=1
   |? EANP.PALDOEAN<>'' & _pal<>null()
   || _wyn:=2
   || 0
   ?}
?}


\sprakc_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza czy mozna zaakceptowac reorganizacje
::   WE: _a - 1-tabela danych 0-rekord
::       _b - uchwyt tabeli lub rekord
::   WY: 1-mozna 0-nie bo jest ich kilka
::  OLD: \sprakc_r/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
EANN.cntx_psh();
{? _a
|| _buf:=tab_tmp(1,'SQL','STRING[16]',''
          ,'ILE','INTEGER',''
          ,'ILB','INTEGER','');
   _b.cntx_psh();
   _b.clear();
   {? _b.first()
   || {!
      |? {? (EANN.clear(); EANN.seek(_b.REF,)) & EANN.REFSQL<>'' & (5+EANN.REFSQL)='dokln'
         || EANN.index('REFSQL');
            EANN.prefix(EANN.REFSQL,EANN.REFSQL);
            {? EANN.first()
            || _ile:=0;
               {!
               |? _ile+=EANN.AKT<>'N' & EANN.STAN<>'+' & EANN.STAN<>'A';
                  EANN.next()
               !};
               _buf.clear();
               {? _buf.find_key(EANN.REFSQL)
               || _buf.ILB+=1;
                  _buf.put(1)
               || _buf.blank();
                  _buf.SQL:=EANN.REFSQL;
                  _buf.ILE:=_ile;
                  _buf.ILB:=1;
                  _buf.add(1)
               ?}
            ?}
         ?};
         _b.next()
      !}
   ?};
   _b.cntx_pop();
   _buf.clear();
   {? _buf.first()
   || {!
      |? _wyn:={? _buf.ILE>1 || _buf.ILE=_buf.ILB || 1 ?};
         _wyn & _buf.next()
      !}
   ?};
   obj_del(_buf)
|| EANN.clear();
   {? EANN.seek(_b) & EANN.REFSQL<>'' & (5+EANN.REFSQL)='dokln'
   || EANN.index('REFSQL');
      EANN.prefix(EANN.REFSQL,EANN.REFSQL);
      {? EANN.first()
      || _ile:=0;
         {!
         |? _ile+=EANN.AKT<>'N' & EANN.STAN<>'+' & EANN.STAN<>'A';
            EANN.next()
         !};
         _wyn:={? _ile>1 || 0 || 1 ?}
      ?}
   ?}
?};
EANN.cntx_pop();
_wyn


\uzup_rtw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: uzupelnia terminy waznosci dla palety rozpakowywanej
::   WE: _a - ref EANN
::  OLD: \uzup_rtw/ean.fml
::----------------------------------------------------------------------------------------------------------------------
EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(_a);
{? (_lp:={? EANP.last() || EANP.LP || 0 ?}; EANP.first())
||
   _buf:=tab_tmp(1,'POZ','STRING[16]','','ILE','REAL','');
   {!
   |? {? EANP.ZPALET=2 & EANP.M<>null & EANP.PAL<>null & EANP.ILS>0 & EANP.TW=date(0,0,0)
      || _ileroz:=EANP.ILS;
         PAL.cntx_psh();
         PAL_POZ.cntx_psh();
         PAL.clear();
         {? PAL.seek(EANP.PAL)
         || {? PAL.AKT='N'
            || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
            || PAL_POZ.use('paletyp')
            ?};
            PAL_POZ.index('PAL');
            PAL_POZ.prefix(PAL.ref(),EANP.M().KTM,EANP.M().KTM);
            {? PAL_POZ.first()
            || _czybyl:=0;
               {!
               |? _buf.clear(); _ilp:=PAL_POZ.ILP-{? _buf.find_key($PAL_POZ.ref()) || _buf.ILE || 0 ?};
                  {? _ilp>0 & PAL_POZ.TW<>date(0,0,0)
                  || {? _ilp>=_ileroz
                     || EANP.TW:=PAL_POZ.TW;
                        EANP.put(1);
                        _czybyl:=1;
                        _buf.clear();
                        {? _buf.find_key($PAL_POZ.ref())
                        || _buf.ILE+=_ileroz
                        || _buf.blank();
                           _buf.POZ:=$PAL_POZ.ref();
                           _buf.ILE:=_ileroz;
                           _buf.add(1)
                        ?};
                        _ileroz:=0
                     || _lp+=1;
                        _bylo:=EANP.ILS;
                        EANP.TW:=PAL_POZ.TW;
                        EANP.ILS:=_ilp;
                        EANP.put(1);
                        _czybyl:=1;
                        EANP.cntx_psh();
                        EANP.ILS:=_bylo-_ilp;
                        EANP.TW:=date(0,0,0);
                        exec('uzupIDkod','magdok_palety',EANP);
                        EANP.add(1);
                        EANP.cntx_pop();
                        _buf.clear();
                        {? _buf.find_key($PAL_POZ.ref())
                        || _buf.ILE+=_ilp
                        || _buf.blank();
                           _buf.POZ:=$PAL_POZ.ref();
                           _buf.ILE:=_ilp;
                           _buf.add(1)
                        ?};
                        _ileroz-=_ilp
                     ?}
                  ?};
                  ~_czybyl & PAL_POZ.next()
               !}
            ?}
         ?};
         PAL.cntx_pop();
         PAL_POZ.cntx_pop()
      ?};
      EANP.next()
   !};
   obj_del(_buf)
?};
EANP.cntx_pop();
~~


\autooper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: automatyczna realizacja danej operacji dla danego magazynu
:: !!! UWAGA !!! formula wywolywana w procedura wbudowanych m.in. powoluje obiekty i otwiera maski
::   WE: _a - ref EANN
::       [_b] - wartość kontroli domyślnie 1
::       [_c] - klucz grupujący
::       [_d] - brak kontroli magazynu-0, 1-domyślnie kontroluj
::       [_e] - uzupełnienie terminów ważności 0-nie(domyślnie), 1-tak
::       [_f] - 1-dotyczy dyspozycji w magazynie 0(domyślnie)-nie
::   WY: 1-udało się 0-nie
::  OLD: \autooper/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_ctrl:={? var_pres('_b')=type_of(0) || _b || 1 ?};
_grp_key:={? var_pres('_c')=type_of('') || _c || '' ?};
_ctrlmg:={? var_pres('_d')=type_of(0) || _d || 1 ?};
_uzuptw:={? var_pres('_e')=type_of(0) || _e || 0 ?};
_dyspmg:={? var_pres('_f')=type_of(0) || _f || 0 ?};

_wyn:=0;
_mp:=params_get().mp;
_in:=params_get().in;
EANN.cntx_psh();
EANP.cntx_psh();
EANW.cntx_psh();
_oddz:=1+((ref_name(_a))+3);
EANN.use('eann'+_oddz+'__');
EANP.use('eanp'+_oddz+'__');
EANW.use('eanw'+_oddz+'__');
EANN.clear();
{? EANN.seek(_a)
||
:: czy operacja dotyczy tylko jednego magazynu
   _mag:={? EANN.ZLEC='N' || exec('one_mag','magazyn_mob',EANN.ref()) || EANN.MG ?};
:: sprawdzenie parametrow domyslnych i pozwolenia na automatyczna realizacje
   {? EANN.ZLEC='T' | (~_ctrlmg & _mag<>null()) | _mag=_in.MG
   || _data:=(EANN.DATA+_in.OKR);
      _rok:=form((_data~1)-2000,,0,'99');
      ST.ODDZ:=_oddz;
      ST.AR:=_data~1;
      ST.AM:=_data~2;
      ST.MAG:=_mag;
      exec('fun_decl','#message');
      exec('open','open_tab',_oddz,_rok);
      __Logupr.CS:=1;
      __gen:=1;
      {? EANN.TYP='R'
      || _wyn:=params_exec('realeann_reo','magazyn_mob',0,1,_uzuptw,_grp_key)<>null()
      |? EANN.TYP='P'
      || {? _dyspmg
         || _wyn:=$params_exec('realeann_dysp','magazyn_mobi',EANN.ref(),1)<>''
         || _wyn:=params_exec('realeann_mag','magazyn_mob','P',0,1,,_ctrl,_grp_key)<>''
         ?}
      |? EANN.TYP='W'
      || {? _dyspmg
         || _wyn:=$params_exec('realeann_dysp','magazyn_mobi',EANN.ref(),1)<>''
         || _wyn:=params_exec('realeann_mag','magazyn_mob','W',0,1,,_ctrl,_grp_key)<>''
         ?}
      |? EANN.TYP='I'
      || _wyn:=params_exec('realeann_inw','magazyn_mob',1,_ctrl)<>''
      |? EANN.TYP='Z'
      || {? _dyspmg
         || _wyn:=$params_exec('realeann_dysp','magazyn_mobi',EANN.ref(),1)<>''
         || _wyn:=params_exec('realeann_kpl','magazyn_mob',0,1,,_ctrl)<>''
         ?}
      ?}
   ?}
?};
EANN.cntx_pop();
EANP.cntx_pop();
EANW.cntx_pop();
_wyn


\nr_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: nadaje numer pozycji operacji
::   WE: _a -ref EANN
::   WY: numer pozycji
::  OLD: \nr_pozy/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
EANP.cntx_psh();
{? EANP.EANN().TYP<>'Z'
||
   EANP.index('EANN');
   EANP.prefix(_a);
   _wyn:={? EANP.last() || EANP.LP || 0 ?}+1
||
   EANP.index('TOWLOK');
   EANP.prefix(_a,EANP.M);
   {? EANP.first
   || _wyn:=EANP.LP
   ?}
?};
EANP.cntx_pop();
_wyn


\realeann_mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: realizacja operacji
::   WE: _a - typ operacji
::       [_b] - sposób uruchomienia 1-przegląd(obszar roboczy) 0-nie
::       [_c] - automatyczna realizacja 0-(domyslnie) nie 1-tak
::       [_d] - ref sql zamowienia
::       [_e] - wartość zmiennej _wyp
::       [_f] - wartość klucza grupującego
::   WY: klucz grupujący lub pusty string
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
{? _>=4 || {? type_of(_d)<>2 || _d:='' ?} || _d:='' ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};
_grpk:={? var_pres('_f')=type_of('') || _f || '' ?};

_wyp:=_e;
_wyn:='';

_mp:=params_get().mp;
_in:=params_get().in;
_akcja:=_mp.akcja();

_real:=1;

VAR_DEL.delete('__magik','__eanp','__eazkp','__zamdst','__gennd','__reazew','__addeanp','__poznd','__onlyzw','__plus');
VAR_DEL.delete('__isope');
__isope:=1;
__magik:=tab_tmp(2,'MG1','STRING[16]',''
          ,'MG2','STRING[32]','');
__eanp:=tab_tmp(3,'MG1','STRING[16]',''
         ,'MG2','STRING[32]',''
         ,'LP','INTEGER',''
         ,'EANP','STRING[16]',''
         ,'EANN','STRING[16]','');
__eazkp:=tab_tmp(4,'ZKN','STRING[32]',''
          ,'ZKP','STRING[16]',''
          ,'MAT','STRING[16]',''
          ,'SCEAN','STRING[128]',''
          ,'ILR','REAL',''
          ,'ILW','REAL',''
          ,'DOD','INTEGER',''
          ,'MAG','STRING[16]',''
          ,'ILP','REAL',''
          ,'LOK','STRING[16]',''
          ,'TRM','DATE',''
          ,'REF','STRING[16]','');
__gennd:=tab_tmp(4,'WYB','STRING[1]',''
          ,'MGS','STRING[10]',''
          ,'SYM','STRING[20]',''
          ,'SQL','STRING[16]','');

__onlyzw:=0;
ZAKR.TEANP1:='';
ZAKR.TEANP2:='';
ZAKR.RP:='D';
_eannrefsql:='';
_wyslsys:=0;

HELP.MJS:='';
_tab:=EANN.sel_aget(); EANN.sel_adel();
_utwpal:=0;
EANX.CZYRP:=~(_tab.size) &  exec('czyi_pal','magazyn_mob',EANN.ref());
EANN.cntx_psh();
EANP.cntx_psh();
{? ~_c & _tab.size()
|| _tab.clear();
   _wyp:=1;
   _pal:=1;
   _wys:=1;
   __reazew:=0;
   _rodzz:=exec('sprrodzz','magazyn_mob',_tab);
   {? _tab.first
   || _tab.cntx_psh();
      _utwpal:=exec('utwpalet','magdok_palety',null,_tab);
      _tab.cntx_pop();
      {!
      |? {? (EANN.clear; EANN.seek(_tab.REF,EANN.name()))
         || _wyslsys:=(';PW'*EANN.TYP)>1 & (5+EANN.REFSQL)='nagdo';
            __reazew+=(1+EANN.RODZ)='Z';
            {? EANN.TYP='P' & EANN.REFSQL<>'' & _eannrefsql<>'~~' & EANN.REFSQL<>_eannrefsql & ~_wyslsys
            || _eannrefsql:={? _eannrefsql='' || EANN.REFSQL || '~~' ?}
            ?};
            _wyp:=exec('sprwyp_m','magazyn_mob',EANN.ref());
            {? _wyp>0 || _pal:=exec('sprwyp_p','magazyn_mob',EANN.ref()) ?}
         ?};
         _wyp>0 & _pal & _tab.next()
      !}
   ?};
   {? ~_rodzz
   || FUN.info('Zaznaczono różne rodzaje operacji (wewnętrzne i zewnętrzne)\nzatwierdzenie operacji niemożliwe.'@);
      0
   |? _rodzz<0
   || FUN.info('Zaznaczono różne rodzaje operacji (z urządzenia i potwierdzenia)\nzatwierdzenie operacji niemożliwe.'@);
      0
   |? _wyp=0
   || FUN.info({? _a='P'
               || 'Wśród zaznaczonych operacji istnieją pozycje bez indeksów materiałowych.\n'
                  'Przed przyjęciem należy je uzupełnić.'@
               || 'Wśród zaznaczonych operacji istnieją pozycje bez indeksów materiałowych.\n'
                  'Przed wydaniem należy je uzupełnić.'@
               ?})
   |? _wyp<0
   || FUN.info({? _a='P'
               || 'Wśród zaznaczonych operacji istnieją pozycje bez prawidłowych kodów identyfikacyjnych.\n'
                  'Przed przyjęciem należy je uzupełnić lub poprawić.'@
               || 'Wśród zaznaczonych operacji istnieją pozycje bez prawidłowych kodów identyfikacyjnych.\n'
                  'Przed wydaniem należy je uzupełnić lub poprawić.'@
               ?})
   |? ~_pal
   || FUN.info({? _a='P'
               || 'Wśród zaznaczonych operacji istnieją pozycje bez zdefiniowanych palet w systemie.\n'
                  'Przed przyjęciem należy je uzupełnić.'@
               || 'Wśród zaznaczonych operacji istnieją pozycje bez zdefiniowanych palet w systemie.\n'
                  'Przed wydaniem należy je uzupełnić.'@
               ?})
   |? _tab.first() & (_opc:={? _a='P' || {? _wyslsys
                                         || 1
                                         |? _eannrefsql='~~'
                                         || FUN.choice({? _wyp=2
                                                       || 'Należy wybrać sposób przyjęcia dostawy.'
                                                          '\n\nUwaga. Ze względu na identyfikację dostawy '
                                                          'dostępne są tylko typy dokumentów zwrotu.'@
                                                       || 'Należy wybrać sposób przyjęcia dostawy.'@
                                                       ?}
                                             ,,'przyjęcie Pojedynczymi dokum.'@)
                                         || FUN.choice({? _wyp=2
                                                       || 'Należy wybrać sposób przyjęcia dostawy.'
                                                          '\n\nUwaga. Ze względu na identyfikację dostawy '
                                                          'dostępne są tylko typy dokumentów zwrotu.'@
                                                       || 'Należy wybrać sposób przyjęcia dostawy.'@
                                                       ?}
                                             ,,'przyjęcie Pojedynczymi dokum.'@,'przyjęcie Zbiorcze dokumentów'@)
                                         ?}
                            |? _a='W' || {? _wyslsys
                                         || 1
                                         || FUN.choice('Należy wybrać sposób wydania magazynowego.'@,,
                                             'wydanie Pojedynczymi dokum.'@,'wydanie Zbiorcze dokumentów'@)
                                         ?}
                            || 0
                            ?})
   || _grp_key:={? _grpk<>'' || _grpk || tm_stamp()+'1' ?};
      __onlyzw:=(_wyp=2);
::       magazyny dla lokalizacji i przesuniec

      exec('pob_mag','magazyn_mob',_tab,{? _opc=1 || 1 || 0 ?});

::       typy dokumentow zmian na magazynach
      _typ:=null;
      _tabspr:=sql('select distinct :_a.MG1, :_a.MG2 from :_a ',__magik);
      _tabeann:=tab_tmp(1,'EANN','STRING[16]','');
      EANX.DOK1:=_tabspr.size()>0;
      obj_del(_tabspr);

      ZAKR.DP:=EANN.DATA;
      ZAKR.MGMM:=null;
::       ustawiamy filtr na magazyny
      {? _a='W'
      || MG.f_clear();
         MG.clear();
         MG.f_set('SYM,NAZ','','\"MG\".ODDZ=\':_a\'',ST.ODDZ);
         {? MG.f_first()
         || {!
            |? __magik.clear();
               {? __magik.find_key($MG.ref())
               || MG.f_del()
               || MG.f_next()
               ?}
            !}
         ?}
      ?};

      {? ~_c & _opc=2 & _a='P' & _eannrefsql<>'' & _eannrefsql<>'~~'
      || ZAKR.SYMZ:={? (5+_eannrefsql)='zdnag'
                    || ZAKR.REFSQL:=_autozam:=_eannrefsql;
                       {? 5+_eannrefsql='zdnag'
                       || exec('FindAndGet','#table',ZD_NAG,_eannrefsql,,"SYM",'')
                       |? 5+_eannrefsql='zdptn'
                       || exec('FindAndGet','#table',ZDP_NAG,_eannrefsql,,"SYM",'')
                       |? 4+_eannrefsql='trnl'
                       || exec('FindAndGet','#table',TR_NZL,_eannrefsql,,"SYM",'')
                       || ''
                       ?}
                    || ''
                    ?};
         ZAKR.REAZAM:={? ZAKR.SYMZ<>'' || 'T' || 'N' ?}
      || ZAKR.SYMZ:='';
         ZAKR.REAZAM:={? __reazew
                      || exec('get','#params',100600,2)
                      || 'N'
                      ?}
      ?};
::Wybór waluty
      {? ~_c || ZAKR.WAL:=null() ?};

      ZAKR.ZL01:=ZAKR.ZL02:='';
      ZAKR.WYDEAN:=ZAKR.ZL:=null;
      ZAKR.win_edit('EAN_'+_a);
      exec('set_efld_opt','magazyn_mob','EAN_'+_a);
      __plus:=_a='P';
      {? _wyslsys
      ||
::       potwierdzenie dokumentów wysłanych na urządzenie
         {? _tab.first &  FUN.ask('Czy potwierdzić zaznaczone dokumenty?'@)
         || {!
            |? {? (EANN.clear; EANN.seek(_tab.REF,EANN.name())) & EANN.STAN='Z'
               || {? exec('potwND','magazyn_mobi',EANN.ref()) || _wyn:=_grp_key ?}
               ?};
               _tab.next()
            !}
         ?}
      |? ZAKR.edit("{? ZAKR.DP=date(0,0,0)
                    || FUN.info('Należy podać niezerową datę.'@);
                       0
                    |? ZAKR.DP>date(ST.AR,ST.AM,0) | ZAKR.DP<date(ST.AR,ST.AM,1)
                    || FUN.info('Należy podać datę z aktualnego okresu, tj. %1\n'
                                'lub zmienić w parametrach okres.'@[form(date(ST.AR,ST.AM,1),,8)]);
                       0
                    |? EANX.DOK1 & ZAKR.RP='D' & ZAKR.TEANP1=''
                    || FUN.info({? __plus
                                || 'Należy podać typ dokumentu przyjęcia.'@
                                || 'Należy podać typ dokumentu wydania.'@
                                ?});
                       0
                    |? ~__plus & ZAKR.TEANP1<>'' & ZAKR.MGMM=null
                      & exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1,\"TYPYDOK.TD\",,,'')<>''
                    || FUN.info('Należy podać magazyn do którego ma zostać przesunięty materiał.'@);
                       0
                    |? ~exec('mgwgdaty','magazyn_mob')
                    || 0
                    |? exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1,\"TYPYDOK.ZLEC\",,,'')='T'
                     & ZAKR.ZL=null & ~exec('czypalzl','magazyn_mob') & EANN.TYP='P'
                    || FUN.info('Ponieważ pozycje operacji są związane z magazynem z obsługą palet.\n'
                                'Wymagane podanie zlecenia'@);
                       0
                    |? __plus & ~exec('ctrlrapp','magazyn_mob')
                    || FUN.info('Brak magazynu na pozycjach operacji zgodnego z magazynem podanego zlecenia.\n'
                                'Niemożliwe przyjęcie operacji podanym typem dokumentu.'@);
                       0
                    |? ZAKR.ZL<>null
                     & (_zl:=exec('ctrlzlnd','magazyn_mob',EANN.ref()
                              ,exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1));
                        {? _zl=0 || ~FUN.ask('Zlecenie nie zostanie przypisane do pozycji\n'
                                             '(limit, definicja zlecenia).\n'
                                             'Czy zatwierdzić utworzenie dokumentu?'@)
                        |? _zl=2 || ~FUN.ask('Zlecenie zostanie przypisane tylko do niektórych pozycji.\n'
                                             '(limit, definicja zlecenia).\n'
                                             'Czy zatwierdzić utworzenie dokumentu?'@)
                        |? _zl=3 || FUN.info('Wszystkie pozycje operacji mają przypisane zlecenie.\n'
                                             'Podane zlecenie zostanie pominięte.'@); 0
                        || 0
                        ?})
                    || 0
                    || 1
                    ?}")
      ||
         _typ:={? EANX.DOK1 || exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1) || null ?};
         __magik.clear();
         {? __magik.first()
         || {!
            |?
               __listpoz:=tab_tmp(1,'EANP','STRING[16]','');
               do();
               {? _a='W' || exec('ord__eanp','magazyn_mob',__magik.MG1,__magik.MG2) ?};
               __eanp.clear();
               __eanp.prefix(__magik.MG1,__magik.MG2);
               {? __eanp.first()
               ||
::                zakladamy dokument
                  _nag:=null();
                  _eann:={? _opc=1 || __eanp.MG2 || __eanp.EANN ?};
                  _eannsql:=$EANN.ref();

                  {? (EANN.clear; EANN.seek(16+_eann,EANN.name())) & exec('eannBlock','magazyn_mob',0)
                  || _czyzl:=exec('ctrlzlnd','magazyn_mob',EANN.ref(),_typ);
                     _nag:={? ZAKR.RP='D'
                           || exec('gen_nagl','zamsiw_rea',ZAKR.DP,_typ
                               ,exec('FindAndGet','#table',MG,__magik.MG1,,,null())
                               ,EANN.KH,ZAKR.MGMM,EANN.ODB,,,1
                               ,{? _czyzl=1 || ZAKR.ZL || null ?},{? _czyzl=1 || ZAKR.WYDEAN || null ?},1,_grp_key
                               ,ZAKR.WAL,ZAKR.TP)
                           ||
::                               zakladamy nowego DK_LN-a
                              DK_LN.clear();
                              DK_LN.blank();
                              _i+=0.033333;
                              DK_LN.TM+=_i;
                              DK_LN.RODZ:='B';
                              DK_LN.MG:=exec('FindAndGet','#table',MG,__magik.MG1,,,null());
                              {? ~DK_LN.add() || undo(); null || DK_LN.ref() ?}
                           ?};
                     _idzam:=exec('FindAndGet','#table',{? ZAKR.RP='D' || ND || DK_LN ?},_nag,,"IDADD",'');
::                      przepiecie znacznika generacji reorganizacji
                     {? ZAKR.RP='D' & _a='P'
                     || DK_LN.cntx_psh();
                        DK_LN.index('ZDOK');
                        DK_LN.prefix($EANN.ref(),$EANN.ref());
                        {? DK_LN.first()
                        || {!
                           |? _dkln:=DK_LN.ref(); _okdkln:=DK_LN.next();
                              DK_LN.cntx_psh();
                              DK_LN.clear();
                              {? DK_LN.seek(_dkln)
                              || DK_LN.ZDOK:=$_nag;
                                 DK_LN.put(1)
                              ?};
                              DK_LN.cntx_pop();
                              _okdkln
                           !}
                        ?};
                        DK_LN.cntx_pop()
                     ?}
                  ?};
                  {? _nag<>null
                  || _wyn:=_grp_key;
                     EANN.STAN:='X';
                     EANN.SYM:=$_nag;
                     EANN.put();
                     EANN.cntx_psh();
                     {!
                     |? {? (EANP.clear; EANP.seek(__eanp.EANP,EANP.name()))
                        || {? ZAKR.RP='D'
                           || _zlec:={? EANP.ZL<>null || EANP.ZL || ZAKR.ZL ?};
                              _wyda:={? EANP.WYD<>null || EANP.WYD || ZAKR.WYDEAN ?};
                              {? exec('genpozdk','magazyn_mob',_nag,_utwpal,_zlec,_wyda)
                              || _tabeann.clear();
                                 {? ~_tabeann.find_key($EANP.EANN)
                                 || _tabeann.EANN:=$EANP.EANN;
                                    _tabeann.add(1)
                                 ?};
                                 __listpoz.clear();
                                 __listpoz.blank();
                                 __listpoz.EANP:=$EANP.ref();
                                 __listpoz.add(1)
                              ?}
                           |? ZAKR.RP='I'
                           || {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref()
                                   ,EANP.LOKZ,EANP.LOKZ().MG().EANL,EANP.TW
                                   ,date(0,0,0),EANP.ILS,DK_LN.MG,EANP.M,,,EANP.PAL,null,,0)
                              || undo()
                              || _tabeann.clear();
                                 {? ~_tabeann.find_key($EANP.EANN)
                                 || _tabeann.EANN:=$EANP.EANN;
                                    _tabeann.add(1)
                                 ?};
                                 __listpoz.clear();
                                 __listpoz.blank();
                                 __listpoz.EANP:=$EANP.ref();
                                 __listpoz.add(1)
                              ?}
                           ?}
                        ?};
                        __eanp.next()
                     !};
                     {? _tabeann.size() & _tabeann.first()
                     || {!
                        |? {? (EANN.clear; EANN.seek(_tabeann.EANN,EANN.name()))
                           || EANN.REFSQL:=$_nag;
                              EANN.IDZAM:=_idzam;
                              EANN.STAN:='+';
                              EANN.put();
                              {? exec('archeann','magazyn_mob',EANN.ref(),__listpoz)
                              || {? _a='W' || exec('aktustan','magazyn_stan',_nag) ?};
                                 {? ZAKR.RP='D' || exec('dk_sum','magdok_wspolne',_nag) ?}
                              || undo()
                              ?}
                           ?};
                           _tabeann.next()
                        !}
                     ?};
                     EANN.cntx_pop();
                     exec('eannUnBlock','magazyn_mob',_eannsql)
                  || undo()
                  ?}
               ?};
               end();
               VAR_DEL.delete('__listpoz');
               __magik.next()
            !}
         ?}
      ?};
      {? _a='W' || MG.f_clear() ?}
   ?}
|| _eannsql:=$EANN.ref();
   _wyslsys:=(';PW'*EANN.TYP)>1 & (5+EANN.REFSQL)='nagdo';
   {? {? ~_c
      || FUN.ask({? _wyp=2
                 || {? _wyslsys
                    || 'Czy potwierdzić dokument %1?'@[exec('record','#to_string',EANN.REFSQL)]
                    || 'Czy utworzyć dokument?\n\n'
                       'Uwaga. Ze względu na identyfikację dostawy '
                       'dostępne są tylko typy dokumentów zwrotu.'@
                    ?}
                 || {? _wyslsys
                    || 'Czy potwierdzić dokument %1?'@[exec('record','#to_string',EANN.REFSQL)]
                    || 'Czy utworzyć dokument?'@
                    ?}
                 ?})
      || 1
      ?}
    & exec('eannBlock','magazyn_mob')
   || __reazew:=(1+EANN.RODZ)='Z';
      _grp_key:={? _grpk<>'' || _grpk || tm_stamp()+'1' ?};
      __onlyzw:=(_wyp=2);
::          magazyny dla lokalizacji i przesuniec
      exec('pob_mag','magazyn_mob',,{? ';WP'*EANN.TYP || 1 || 0 ?},,EANN.TYP='R' & EANN.IS_M='T');
::          typy dokumentow zmian na magazynach
      _typ:=null;
      _tabspr:=sql('select distinct :_a.MG1, :_a.MG2 from :_a ',__magik);
      EANX.DOK1:=_tabspr.size()>0;
      obj_del(_tabspr);
      ZAKR.DP:=EANN.DATA;
      ZAKR.MGMM:=null;
::          ustawiamy filtr na magazyny
      {? _a='W'
      || {? EANN.TYP='R' & EANN.IS_M='T'
         || MG.f_clear();
            MG.clear();
            MG.f_set('SYM,NAZ','','\"MG\".ODDZ=\':_a\'',ST.ODDZ);
            {? MG.f_first()
            || {!
               |? __magik.clear();
                  {? __magik.first() & __magik.find_tab('first','MG2',,'=',$MG.ref())
                  || MG.f_next()
                  || MG.f_del()
                  ?}
               !}
            ?};
            {? MG.f_first() & MG.f_size()=1 || ZAKR.MGMM:=MG.ref() ?}
         || MG.f_clear();
            MG.clear();
            MG.f_set('SYM,NAZ','','\"MG\".ODDZ=\':_a\'',ST.ODDZ);
            {? MG.f_first()
            || {!
               |? __magik.clear();
                  {? __magik.find_key($MG.ref())
                  || MG.f_del()
                  || MG.f_next()
                  ?}
               !}
            ?}
         ?}
      ?};
      _autozam:='';
      ZAKR.REFSQL:=EANN.REFSQL;
      ZAKR.REAZAM:={? __reazew
                   || exec('get','#params',100600,2)
                   || 'N'
                   ?};
      ZAKR.ZL01:=ZAKR.ZL02:='';
      ZAKR.WYDEAN:=ZAKR.ZL:=null;
      {? ~_c
      || ZAKR.SYMZ:={? EANN.REFSQL<>''
                    || {? _a='W'
                       || {? (5+EANN.REFSQL)='zknag'
                          || _autozam:=EANN.REFSQL;
                             exec('FindAndGet','#table',ZK_N,EANN.REFSQL,,"SYM",'')
                          || ''
                          ?}
                       || {? (5+EANN.REFSQL)='zdnag'
                          || _autozam:=EANN.REFSQL;
                             exec('FindAndGet','#table',ZD_NAG,EANN.REFSQL,,"SYM",'')
                          |? (5+EANN.REFSQL)='zdptn'
                          || _autozam:=EANN.REFSQL;
                             exec('FindAndGet','#table',ZDP_NAG,EANN.REFSQL,,"SYM",'')
                          |? (4+EANN.REFSQL)='trnl'
                          || _autozam:=EANN.REFSQL;
                             exec('FindAndGet','#table',TR_NZL,EANN.REFSQL,,"SYM",'')
                          || ''
                          ?}
                       ?}
                    || ''
                    ?}
      || _autozam:=EANN.REFSQL
      ?};
::Wybór waluty
      {? ~_c
      || ZAKR.WAL:={? EANN.REFSQL<>''
                   || {? (5+EANN.REFSQL)='zknag'
                      || exec('FindAndGet','#table',ZK_N,EANN.REFSQL,,"WAL",'')
                      |? (5+EANN.REFSQL)='zdnag'
                      || exec('FindAndGet','#table',ZD_NAG,EANN.REFSQL,,"WAL",'')
                      ||
                         {? KSTE.WAL<>null
                         || KSTE.WAL
                         || INFO.NAROD
                         ?}
                      ?}
                   ||
                      {? KSTE.WAL<>null
                      || KSTE.WAL
                      || INFO.NAROD
                      ?}
                   ?}
      || ZAKR.WAL:={? KSTE.WAL<>null
                   || KSTE.WAL
                   || INFO.NAROD
                   ?}
      ?};

      {? _c | ~_c
      || ZAKR.RP:='D';
         ZAKR.DP:=EANN.DATA+_in.OKR;
         ZAKR.TEANP1:=exec('FindAndGet','#table',TYPYDOK,_in.TYPYDOK,,"T",'');
         {? _a='W'
         || {? _in.MGMM<>null() & EANN.TYP<>'R' || ZAKR.MGMM:=_in.MGMM ?};
            EANX.BEZTW:=_in.CZYTW='T'
         ?}
      ?};
      {? __onlyzw & ZAKR.TEANP1<>''
       & exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1,"TYPYDOK.DN",,,'')<>'T'
      || ZAKR.TEANP1:=''
      ?};
      {? _d<>'' | (__reazew & EANN.REFSQL<>'') || ZAKR.REAZAM:='T' ?};
      {? EANN.ZLEAN<>''
      || ZAKR.ZL:=exec('FindInSet','#table','ZL','ZLEAN',EANN.ZLEAN,,,1,,null());
         ZAKR.WYDEAN:=ZAKR.ZL().JORG
      ?};
      ZAKR.win_edit('EAN_'+_a);
      {? ZAKR.SYMZ<>'' & ((5+EANN.REFSQL)='zdnag' | (5+EANN.REFSQL)='zdptn' | (4+EANN.REFSQL)='trnl')
      || ZAKR.REAZAM:='T'
      ?};
      exec('set_efld_opt','magazyn_mob','EAN_'+_a);
      __plus:=_a='P';
      {? ZAKR.TEANP1='' & _a='W' & EANN.TYP='R' & EANN.IS_M='T'
      || exec('f3_tean1','magazyn_mob',1)
      ?};
      {? _wyslsys
      ||
::       potwierdzenie dokumentu wysłanego na urządzenie
         {? exec('potwND','magazyn_mobi',EANN.ref()) || _wyn:=_grp_key ?}
      |? _c
       | ZAKR.edit("{? ZAKR.DP=date(0,0,0)
                    || FUN.info('Należy podać niezerową datę.'@);
                       0
                    |? ZAKR.DP>date(ST.AR,ST.AM,0) | ZAKR.DP<date(ST.AR,ST.AM,1)
                    || FUN.info('Należy podać datę z aktualnego okresu, tj. %1\n'
                                'lub zmienić w parametrach okres.'@[form(date(ST.AR,ST.AM,1),,8)]);
                       0
                    |? EANX.DOK1 & ZAKR.RP='D' & ZAKR.TEANP1=''
                    || FUN.info({? __plus
                                || 'Należy podać typ dokumentu przyjęcia.'@
                                || 'Należy podać typ dokumentu wydania.'@
                                ?});
                       0
                    |? ~__plus & ZAKR.TEANP1<>'' & ZAKR.MGMM=null & EANN.TYP<>'R'
                      & exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1,\"TYPYDOK.TD\",,,'')<>''
                    || FUN.info('Należy podać magazyn do którego ma zostać przesunięty materiał.'@);
                       0
                    |? ~exec('mgwgdaty','magazyn_mob')
                    || 0
                    |? exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1,\"TYPYDOK.ZLEC\",,,'')='T'
                      & ZAKR.ZL=null & ~exec('czypalzl','magazyn_mob') & EANN.TYP='P'
                    || FUN.info('Ponieważ pozycje operacji są związane z magazynem z obsługą palet.\n'
                                'Wymagane podanie zlecenia'@);
                       0
                    |? __plus & ~exec('ctrlrapp','magazyn_mob')
                    || FUN.info('Brak magazynu na pozycjach operacji zgodnego z magazynem podanego zlecenia.\n'
                                'Niemożliwe przyjęcie operacji podanym typem dokumentu.'@);
                       0
                    |? ZAKR.ZL<>null
                     & (_zl:=exec('ctrlzlnd','magazyn_mob',EANN.ref()
                              ,exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1));
                        {? _zl=0 || ~FUN.ask('Zlecenie nie zostanie przypisane do pozycji\n'
                                             '(limit, definicja zlecenia).\n'
                                             'Czy zatwierdzić utworzenie dokumentu?'@)
                        |? _zl=2 || ~FUN.ask('Zlecenie zostanie przypisane tylko do niektórych pozycji.\n'
                                             '(limit, definicja zlecenia).\n'
                                             'Czy zatwierdzić utworzenie dokumentu?'@)
                        |? _zl=3 || FUN.info('Wszystkie pozycje operacji mają przypisane zlecenie.\n'
                                             'Podane zlecenie zostanie pominięte.'@); 0
                        || 0
                        ?})
                    || 0
                    || 1
                    ?}")
      || _typ:={? EANX.DOK1 || exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1) || null ?};
         __magik.clear();
         {? __magik.first()
         || {!
            |?
               __listpoz:=tab_tmp(1,'EANP','STRING[16]','');
               do();
               {? _a='W' || exec('ord__eanp','magazyn_mob',__magik.MG1,__magik.MG2) ?};
               __eanp.clear();
               __eanp.prefix(__magik.MG1,__magik.MG2);
               {? __eanp.first()
               ||
::                      zakladamy dokument
                  _nag:=null;
                  _idzam:='';
                  _eann:=__eanp.EANN;
                  {? (EANN.clear; EANN.seek(_eann,EANN.name()))
                  || {? EANN.TYP='R' & EANN.IS_M='T' & __magik.MG1<>__magik.MG2
                     || _mgmm:=exec('FindAndGet','#table',MG,__magik.MG2,,,null())
                     || _mgmm:=null()
                     ?};
                     {? _mgmm=null() || _mgmm:=ZAKR.MGMM ?};
                     _czyzl:=exec('ctrlzlnd','magazyn_mob',EANN.ref(),_typ);
                     _nag:={? ZAKR.RP='D'
                           || exec('gen_nagl','zamsiw_rea',ZAKR.DP,_typ
                               ,exec('FindAndGet','#table',MG,__magik.MG1,,,null()),EANN.KH,_mgmm,EANN.ODB,,,1
                               ,{? _czyzl=1 || ZAKR.ZL || null ?},{? _czyzl=1 || ZAKR.WYDEAN || null ?},,_grp_key
                               ,ZAKR.WAL,ZAKR.TP)
                           ||
::                                  zakladamy nowego DK_LN-a
                              DK_LN.clear();
                              DK_LN.blank();
                              _i+=0.033333;
                              DK_LN.TM+=_i;
                              DK_LN.RODZ:='B';
                              DK_LN.MG:=exec('FindAndGet','#table',MG,__magik.MG1,,,null());
                              {? ~DK_LN.add() || undo(); null || DK_LN.ref() ?}
                           ?};
                     _idzam:=exec('FindAndGet','#table',{? ZAKR.RP='D' || ND || DK_LN ?},_nag,,"IDADD",'');
::                         przepiecie znacznika generacji reorganizacji
                     {? ZAKR.RP='D' & _a='P'
                     || DK_LN.cntx_psh();
                        DK_LN.index('ZDOK');
                        DK_LN.prefix($EANN.ref(),$EANN.ref());
                        {? DK_LN.first()
                        || {!
                           |? _dkln:=DK_LN.ref(); _okdkln:=DK_LN.next();
                              DK_LN.cntx_psh();
                              DK_LN.clear();
                              {? DK_LN.seek(_dkln)
                              || DK_LN.ZDOK:=$_nag;
                                 DK_LN.put(1)
                              ?};
                              DK_LN.cntx_pop();
                              _okdkln
                           !}
                        ?};
                        DK_LN.cntx_pop()
                     ?}
                  ?};
                  {? _nag<>null
                  || _wyn:=_grp_key;
                     EANN.STAN:='X';
                     EANN.SYM:=$_nag;
                     EANN.put();
                     EANN.cntx_psh();
                     {!
                     |? {? (EANP.clear; EANP.seek(__eanp.EANP,EANP.name()))
                        || _zlec:={? EANP.ZL<>null || EANP.ZL || ZAKR.ZL ?};
                           _wyda:={? EANP.WYD<>null || EANP.WYD || ZAKR.WYDEAN ?};
                           {? ZAKR.RP='D'
                           || {? exec('genpozdk','magazyn_mob',_nag,_utwpal,_zlec,_wyda)
                              || __listpoz.clear();
                                 __listpoz.blank();
                                 __listpoz.EANP:=$EANP.ref();
                                 __listpoz.add()
                              ?}
                           |? ZAKR.RP='I'
                           || {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref()
                                   ,EANP.LOKZ,EANP.LOKZ().MG().EANL,EANP.TW
                                   ,date(0,0,0),EANP.ILS,DK_LN.MG,EANP.M,,,EANP.PAL,null,,0)
                              || undo()
                              || __listpoz.clear();
                                 __listpoz.blank();
                                 __listpoz.EANP:=$EANP.ref();
                                 __listpoz.add(1)
                              ?}
                           ?}
                        ?};
                        __eanp.next()
                     !};
                     EANN.cntx_pop();
                     EANN.REFSQL:=$_nag;
                     EANN.IDZAM:=_idzam;
                     EANN.STAN:='+';
                     EANN.put();
                     {? exec('archeann','magazyn_mob',EANN.ref(),__listpoz)
                     || {? _a='W' || exec('aktustan','magazyn_stan',_nag) ?};
                        {? ZAKR.RP='D' || exec('dk_sum','magdok_wspolne',_nag) ?}
                     || undo()
                     ?}
                  || undo()
                  ?}
               ?};
               end();
               VAR_DEL.delete('__listpoz');
               __magik.next()
            !};
::                realizacja zamowien dostaw oraz zamowien sprzedazy
            _potw:={? ~_c
                   || 1
                   |? _a='P' & _autozam<>''
                   || exec('FindAndGet','#table','ZD_NAG',_autozam,,"POTW",'N')='N'
                   || 1
                   ?};
            {? _a='W' & _autozam<>'' || exec('eanz_zkn','powdok',_autozam,_nag) ?}
         |? EANN.RODZ='W' & EANN.IS_M='T'
         || FUN.info('Na operacji brak pozycji z ilością większą od zera.\n\n'
                     'Dokument przesunięcia nie zostanie utworzony.\n'
                     'Operacja zostanie zrealizowana.'@);
            EANN.REFSQL:='';
            EANN.IDZAM:='';
            EANN.STAN:='+';
            EANN.put();
            {? ~exec('archeann','magazyn_mob',EANN.ref()) || undo() ?}
         ?}
      ?};
      {? _a='W' || MG.f_clear() ?};
      exec('eannUnBlock','magazyn_mob',_eannsql)
   ?}
?};
EANN.cntx_pop();
EANP.cntx_pop();
VAR_DEL.delete('__magik','__pozy','__eazkp','__zamdst','__gennd','__reazew','__poznd','__onlyzw','__plus');
VAR_DEL.delete('__isope');
:: 'activate:browse'
_wyn


\czyi_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: sprawdza czy dana operacja moze zainicjowac palety
::   WE: _a - ref EANN
::   WY: 1-tak 0-nie
::  OLd: \czyi_pal/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(EANN.ref());
{? EANP.first()
|| {!
   |? {? EANP.ILS>0 || _wyn:=EANP.LOKZ().MG().PAL='T' & EANP.M<>null() & EANP.PALEAN<>'' ?};
      _wyn & EANP.next()
   !}
?};
EANP.cntx_pop();
_wyn


\sprrodzz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy wsrod zaznaczonych rekordow jest zgodnosc rodzaju wewnetrzny/zewnetrzny i operacja/potwierdzenie
::   WE: _a - tabela zaznaczen
::   WY: 1-zgodne 0-nie -1-są potwierdzenia i dokumenty tworzone na urządzeniu
::  OLD: \sprrodzz/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_rodz:='';
_wysl:=-1;

EANN.cntx_psh();
_a.cntx_psh();
_a.clear();
{? _a.first()
|| {!
   |? {? (EANN.clear(); EANN.seek(_a.REF,EANN.name())) & EANN.STAN='Z'
      || {? _rodz='' || _rodz:=1+EANN.RODZ ?};
         _wyn:={? _rodz=(1+EANN.RODZ) || 1 || 0 ?};
         {? _wyn
         || {? _wysl=-1
            || _wysl:=(';PW'*EANN.TYP)>1 & (5+EANN.REFSQL)='nagdo'
            || {? _wysl<>((';PW'*EANN.TYP)>1 & (5+EANN.REFSQL)='nagdo') || _wyn:=-1 ?}
            ?}
         ?}
      ?};
      _wyn>0 & _a.next()
   !}
?};
EANN.cntx_pop();
_a.cntx_pop();
_wyn


\mgwgdaty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza magazyny wg daty
::   WY: 1-jest OK 0-nie jest fajnie
::  OLD: \mgwgdaty/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_stmag:=ST.MAG;
MG.cntx_psh();
__magik.clear();
{? __magik.first()
|| {!
   |? MG.clear();
      {? MG.seek(__magik.MG1,form(8+__magik.MG1))
      || ST.MAG:=MG.ref();
         _wyn:=exec('spr_datn','magdok_wspolne',MG.ref(),ZAKR.DP
                ,exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1),0,,0,,EANN.ref(),ZAKR.TP)
      ?};
      _wyn & __magik.next()
   !}
?};
MG.cntx_pop();
ST.MAG:=_stmag;
_wyn


\czypalzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza magazyny wg tego czy sa paletowe
::   WY: 1-jest OK 0-nie jest fajnie
::  OLD: \czypalzl/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
MG.cntx_psh();
__magik.clear();
{? __magik.first()
|| {!
   |? MG.clear();
      {? MG.seek(__magik.MG1,form(8+__magik.MG1)) || _wyn:=MG.PAL<>'T' ?};
      _wyn & __magik.next()
   !}
?};
MG.cntx_pop();
_wyn


\ctrlrapp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: sprawdza mozliwosc utworzenia dokumentu typu raport produkcji dla danego zlecenia
::   WY: 1-mozna jest choc jeden magazyn 0-nie
::  OLD: \ctrlrapp/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? ZAKR.ZL<>null() & ZAKR.ZL().MG<>null()
 & exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1,"TYPYDOK.ZLEC",,,'')='T'
 & exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1,"TYPYDOK.WYR",,,'')='T'
|| __magik.cntx_psh();
   __magik.clear();
   {? __magik.first()
   || _wyn:=0;
      {!
      |? _wyn:=ZAKR.ZL().MG=exec('FindAndGet','#table',MG,__magik.MG1,,,null());
         ~_wyn & __magik.next()
      !}
   ?};
   __magik.cntx_pop()
?};
_wyn


\ctrlzlnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: kontrola zlecen dla naglowka
::   WE: _a - EANN.ref
::       _b - typ dokumentu
::   WY: 1-dla wszystkich pozycji OK 0-dla zadnej pozycji nie jest dobrze 2-dla niektorych pozycji jest ok
::       3-wszystkie EANP maja EANP.ZL 4-tak jak 1 ale niektore pozycje maja przypisane zlecenie
::  OLD: \ctrlzlnd/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_one:=0;
_all:=0;
_ean:=0;
_nzl:=null();
EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(_a);
{? EANP.first()
|| _nzl:={? EANP.EANN().ZLEAN<>'' || exec('FindInSet','#table','ZL','ZLEAN',EANP.EANN().ZLEAN,,,1,,null()) || null() ?};
   _all:=EANP.size();
   {!
   |? {? EANP.ILS>0
      || {? EANP.ZL<>null
         || _ean+=1;
            _all-=1;
            {? _nzl<>EANP.ZL || _nzl:=null() ?}
         |? exec('ctrlzldk','magazyn_mob',2,_b)
         || _one+=1;
            _all-=1
         ?}
      || _all-=1
      ?};
      EANP.next()
   !}
?};
EANP.cntx_pop();
_wyn:={? ~_all & _ean & ~_one || {? _nzl=null() || 3 || 1 ?}
      |? ~_all & _one & _ean || 4
      |? ~_all & _one || 1
      |? _all & _one || 2
      || 0
      ?};
_wyn


\ctrlzldk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: kontrola zlecen dla pozycji
::   WE: _a - tabela sprawdzana 0-DK 1-EANP 2-ZAKR
::       _b - typ dokumentu lub null jak nieistotne
::   WY: 1-jest OK 0-nie jest dobrze
::  OLD: \ctrlzldk/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_prod:=exec('tte_lic','tte');
HELP.TYP:=_b;
_fld:=D_HELP.M:={? ~_a || DK.M().KTM || EANP.M().KTM ?};

_zlec:={? ~_a || DK.ZL |? _a=1 || EANP.ZL || ZAKR.ZL ?};
_wydz:={? ~_a || DK.WYD |? _a=1 || EANP.WYD || ZAKR.WYDEAN ?};

{? _fld<>'' & {? HELP.TYP<>null || HELP.TYP().WYR='T' || 0 ?} & _prod='T'
|| {? {? ~_a || _fld<>DK.ZL().KTM().KTM |? _a=1 || _fld<>EANP.ZL().KTM().KTM || _fld<>ZAKR.ZL().KTM().KTM ?}
   || M.cntx_psh();
      M.index('MATKTM');
      M.prefix();
      {? M.find_key(_fld,_fld)
      || _wyn:={? ~_a || DK.ZL().TYP().WP<>'P' || EANP.ZL().TYP().WP<>'P' ?}
      || _wyn:=0
      ?};
      M.cntx_pop()
   || M.cntx_psh();
      M.index('MATKTM');
      M.prefix();
      {? M.find_key(_fld,_fld)
      || _wyn:=1
      || _wyn:=0
      ?};
      M.cntx_pop()
   ?}
|? _fld<>'' & {? HELP.TYP<>null || HELP.TYP().WYR<>'T' || 1 ?} & _zlec<>null & _prod='T'
|| _zljoin:='(ZLIM.ZLEC,ZL.REFERENCE)';
   {? {? ~_a
      || DK.ZL().GENLIM='N' | DK.ZL().NRNZL<>0
      |? _a=1
      || EANP.ZL().GENLIM='N' | EANP.ZL().NRNZL<>0
      || ZAKR.ZL().GENLIM='N' | ZAKR.ZL().NRNZL<>0
      ?}
   || _zljoin:='(ZLIM.ZLEC,ZL.REFERENCE)'
   || _zljoin:='(ZLIM.ZLDOD,ZL.REFERENCE)'
   ?};
   _tab:=sql('
      select sum(ZLIM.LIL) as LIL
      from  ZL join @ZLIM using'+_zljoin+'
      join M using(ZLIM.KTM, M.REFERENCE)
      where ZL.REFERENCE=:_a and M.KTM='':_b''
      and (ZLIM.WYD=:_c or ZLIM.WYD is null)
      and (ZL.JORG=:_c or ZL.JORG is null)
      and (ZLIM.AKC=''T'' or ZLIM.LIMIT=''N'')
      group by ZLIM.KTM'
     ,_zlec,D_HELP.M,_wydz);

   {? ~_tab.first()
   || _wyn:=0
   || M.cntx_psh();
      M.index('MATKTM');
      M.prefix();
      {? M.find_key(_fld,_fld)
      || _wyn:={? ~_a
               || exec('spr_rez','zamsiw_limit')
               || exec('spr_rez','zamsiw_limit',_zlec,EANP.LOKZ().MG)
               ?}
      || _wyn:=0
      ?};
      M.cntx_pop()
   ?}
|? _zlec<>null & _prod='N'
|| _wyn:=1
?};
_wyn


\genpozdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: Sprawdza czy istnieja pozycje tylko zerowe pole ILS
::   WE: _a - naglowek
::       [_b] - czy rozpiska wg palety 0(domyslnie)-tak 1-nie stosowane w przypadku utworzenia palet
::       [_c] - zlecenie
::       [_d] - wydzial
::       [_e] - ilosc do rozpisania
::   WY: 1 - rozpisano 0 - nie rozpisano
::  OLD: \genpozdk/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};
{? _>=3 || {? type_of(_c)<>7 || _c:=null ?} || _c:=null ?};
{? _>=4 || {? type_of(_d)<>7 || _d:=null ?} || _d:=null ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};

_wyn:=0;
_err:=0;
_prod:=exec('tte_lic','tte')='T';

:: sprawdzenie czy pozycja nie jest paleta jesli tak to rozpiska wg niej inaczej stara obsluga
{? EANP.PAL<>null & ~_b & ~EANP.ROZPAL
|| _wyn:=exec('przeppal','magdok_palety',_a,EANP.PAL,EANP.LOKZ,,,,,EANP.LOKDO);
   {? _wyn
   || EANP.RNAG:=$_a;
      EANP.put(1)
   ?}
|| _rozpal:=EANP.ROZPAL;
   _rdst:={? (+EANP.RSQL)=16 & ref_tab(EANP.RSQL)=DK || EANP.RSQL || '' ?};
   _wgtw:=EANP.M().SETW='P';
   _wggs1:=exec('FindInSet','#table','EANW','EANP',EANP.ref())<>null();
   _tw:={? _wgtw || EANP.TW || date(0,0,0) ?};
   _zwrot:=0;

   ND.cntx_psh();
   ND.clear();
   {? ND.seek(_a)
   || {? (ND.TYP().P='N' & ND.MAG().TYP*'DOST' & (ND.TYP().AFIFO='' | ND.TYP().AFIFO='N' | ND.MAG().IL='T'))
       | (_zwrot:=ND.TYP().P='T' & ND.MAG().TYP*'DOST' & ND.TYP().DN='T' & EANP.M().IDMOB='D' & EANP.SCEAN<>'';
          _zwrot)
      || _wyda:=ND.TYP().P<>'T';
         {? ND.TYP().ZLEC='T'
         || _zlec:={? EANP.ZL<>null || EANP.ZL || _c ?};
            _wydz:={? EANP.WYD<>null || EANP.WYD || _d ?};
            _zlim:=exec('dk_zlim_suggest','zl_limit',_zlec,EANP.M().KTM,null())
         || _zlec:=null();
            _wydz:=null();
            _zlim:=null()
         ?};
         _scean:=EANP.SCEAN;
         _fifo:=_scean='' | ND.MAG().SP_IDMOB='F';
::       rozpisujemy wg automatu FIFO
         _jesnamg:=0;
         _dokl_m:=exec('jaka_dok_m','jm',EANP.M);
         _dokl_s:={? EANP.M().J2<>null() || exec('jaka_dok_mjm','jm',EANP.M,EANP.M().J2,EANP.M().J) || _dokl_m ?};
         _ileeanp:={? ~_e || EANP.ILS || _e ?} $ _dokl_m;
         _ileean2:={? ~_e || EANP.ILS2 || _e ?} $ _dokl_s;
         exec('sc_tymczas','magazyn_stan',ND.MAG,EANP.M,{? ~_zwrot || 'T' || '' ?},,,,,{? ~_zwrot || _scean || '' ?});
         _ind:=__sc.ndx_tmp('',,'D',,,'NDK',,,'RDK',,);
         __sc.index(_ind);
::       najpierw szukamy po wskazanej dostawie
         _is_dst:=0;
         {? _rdst<>'' & __sc.first() & __sc.find_tab('first','SRDK',,'=',_rdst) || _is_dst:=1 ?};
         {? _is_dst | {? _fifo || __sc.first() || __sc.last() ?}
         || {!
            |? {? {? _scean<>'' || __sc.SCEAN=_scean || 1 ?} & {? _wgtw || __sc.TW=_tw | _tw=date(0,0,0) || 1 ?}
               || _ilenasc:=exec('obl_stsc','magazyn_stan',__sc.RDK,__sc.NDK,ND.MAG,EANP.M)
                           +{? _zwrot || exec('FindAndGet','#table',DK,__sc.SRDK,,"IL",0) || 0 ?};
                  _ilenas2:=HELP.DIL2
               || _ilenasc:=0;
                  _ilenas2:=0
               ?};
               {? _ilenasc>0
               || _jesnamg+=1;
                  _ile:={? _ilenasc>=_ileeanp || _ileeanp || _ilenasc ?};
                  {? EANP.M().J2<>null() & _ileean2>0
                  || _jm2:=$EANP.M().J2;
                     _il2:={? _ilenas2>=_ileean2 || _ileean2 || _ilenas2 ?};
                     _ws2:={? _ile>0 & _il2>0 || _ile/_il2 || 0 ?}
                  |? EANP.M().J2<>null()
                  || _jm2:=$EANP.M().J2;
                     _ws2:=exec('oblWSP','jm',EANP.M);
                     _il2:={? _ws2>0 || _ile/_ws2 || 0 ?}
                  || _jm2:=$EANP.M().J;
                     _ws2:=1;
                     _il2:=_ile
                  ?};
                  exec('przyjdod','jm',_jm2,_ws2,_il2);
                  _dk_c:={? _wyda | _zwrot || exec('FindAndGet','#table',DK_C,__sc.DK_C,,,null()) || null() ?};
                  _sctw:=EANP.TW;
                  _srdk:=__sc.SRDK;
                  _nosl:=0;
                  {? (_ref:=exec('adddk','magdok_poz',ND.ref,EANP.M,_ile,__sc.C,__sc.D,,,,
                        ,exec('m_vat','material',EANP.M,ND.KH,,ND.AR,ND.AM,,,,{? ND.TYP().P='T' || 'Z' || 'S' ?})
                        ,,,7,__sc.RDK,__sc.NDK,_dk_c,,__sc.SRDK,,_zlec,_wydz,,,,_scean,__sc.TW))<>null
                  || DK.cntx_psh();
                     DK.clear();
                     {? DK.seek(_ref)
                     || _put:=0;
                        {? DK.M().SETW='P' || _sctw:=DK.TW ?};
                        {? _zwrot
                        || DK.STATS:=exec('FindAndGet','#table',STATS,__sc.STATS,,,null());
                           _srdk:=DK.SRDK:=DK.PRDK;
                           DK.put(1)
                        ?};
                        {? _zlim<>null()
                        || DK.ZLIM:=_zlim;
                           DK.M_ZLIM:=ref_name(_zlim);
                           DK.put(1)
                        ?};
                        {? _wyda || exec('update','rezerwacje','DK',DK.ref(),DK.N().MAG,DK.M,DK.IL,DK.SRDK) ?};
                        {? _zlec<>null & _wydz<>null
                         & {? _wyda & DK.ZLIM<>null() || 0 || ~exec('ctrlzldk','magazyn_mob',0,DK.N().TYP) ?}
                        || DK.ZL:=null();
                           DK.WYD:=null();
                           DK.ZLIM:=null();
                           DK.M_ZLIM:='';
                           DK.put(1)
                        ?};
                        {? ND.TYP().WYR<>'T' & DK.ZL<>null() & DK.ZLIM=null() & _prod
                        || _err:=exec('aedklimi','magdok_poz',1);
                           DK.put(1)
                        ?};
                        {? _rozpal
                        || DK.ROZPAK:=1;
                           {? DK.put(1)
                           || EANX.PALK:=EANP.PAL().KODK;
                              EANX.EANL:=EANP.LOKZ;
                              {? exec('rozpNOPAL','magdok_palety')>=0 || _nosl:=1 ?}
                           ?}
                        ?};
                        params_exec('formEANW','magazyn_mob',EANP.ref(),DK.M,DK.uidref())
                     ?};
                     DK.cntx_pop();
                     _ileeanp-=_ile;
                     EANP.RSQL:=$_ref;
                     EANP.RNAG:=$ND.ref();
                     EANP.put();
                     {? ~_nosl
                     || {? ~exec('add2dk_l','magdok_wspolne',_ref,null(),EANP.LOKZ
                          ,{? EANP.LOKDO<>null() || EANP.LOKDO || null() ?},_sctw,date(0,0,0)
                          ,_ile,EANP.LOKZ().MG,EANP.M,,,EANP.PAL,,1,,,_srdk)
                        || undo()
                        ?}
                     ?};
                     {? EANX.BEZTW & EANP.M().SETW<>'P' || exec('popdkltw','magazyn_stan',_ref,null) ?}
                  || undo()
                  ?}
               ?};
::             nie udało się rozpisać całości dla wskazanej dostawy
               {? _is_dst & _ileeanp>0 || _is_dst:=0; {? _fifo || __sc.first() || __sc.last() ?} ?};
               _ileeanp>0 & {? _fifo || __sc.next() || __sc.prev() ?}
            !}
         ?};
         __sc.ndx_drop(_ind);
::       to co pozostalo
         {? _ileeanp>0
         || _zwrot:=0;
            {? _scean<>'' & ND.TYP().P='T' & EANP.M().IDMOB='D'
             & exec('FindInSet','#table','MKODK','KK',_scean,_scean,"MKODK.OLD",,,'')='N'
             & (_rsql:=exec('FindInSet','#table','MKODK','KK',_scean,_scean,"MKODK.RSQL",,,''); (5+_rsql)='dokma')
            || _aktmsk:=DK.name()+3;
               _newmsk:=8+_rsql+3;
               ND.cntx_psh();
               DK.cntx_psh();
               DK_L.cntx_psh();
               {? _aktmsk<>_newmsk || exec('mag_open','open_tab',1+_newmsk,_newmsk+2) ?};
               DK.prefix();
               {? DK.seek(_rsql)
               || _zwrot:=1;
                  _dost:=DK.DOST;
                  _rdk:=DK.RDK;
                  _ndk:=DK.NDK;
                  _prdk:=DK.PRDK;
                  _srdk:=DK.SRDK;
                  _cena:=DK.C;
                  _dk_c:=DK.DK_C;
                  _zlec:=DK.ZL;
                  _wydz:=DK.WYD
               ?};
               {? _aktmsk<>_newmsk || exec('mag_open','open_tab',1+_aktmsk,_aktmsk+2) ?};
               ND.cntx_pop();
              DK.cntx_pop();
               DK_L.cntx_pop()
            ?};
            {? EANP.M().J2<>null() & _ileean2>0
            || _jm2:=$EANP.M().J2;
               _il2:=_ileean2;
               _ws2:={? _ileeanp>0 & _il2>0 || _ileeanp/_il2 || 0 ?}
            || _jm2:=$EANP.M().J;
               _ws2:=1;
               _il2:=_ileeanp
            ?};
            exec('przyjdod','jm',_jm2,_ws2,_il2);
            {? _zwrot
            || _ref:=exec('adddk','magdok_poz',ND.ref(),EANP.M,_ileeanp,_cena,_dost,,,,
               ,exec('m_vat','material',EANP.M,ND.KH,,ND.AR,ND.AM,,,,{? ND.TYP().P='T' || 'Z' || 'S' ?})
               ,,,7,_rdk,_ndk,_dk_c,,_prdk,,_zlec,_wydz,,,,_scean,_tw)
            || _ref:=exec('adddk','magdok_poz',ND.ref(),EANP.M,_ileeanp,0,date(0,0,0),,,,
               ,exec('m_vat','material',EANP.M,ND.KH,,ND.AR,ND.AM,,,,{? ND.TYP().P='T' || 'Z' || 'S' ?})
               ,,,7,,,,,,,,,,,,_scean,_tw)
            ?};
            {? _ref<>null
            || _nosl:=0;
               _sctw:=EANP.TW;
               DK.cntx_psh();
               DK.prefix();
               {? DK.seek(_ref)
               || {? DK.M().SETW='P' || _sctw:=DK.TW ?};
                  {? _zlim<>null()
                  || DK.ZLIM:=_zlim;
                     DK.M_ZLIM:=ref_name(_zlim);
                     DK.put(1)
                  ?};
                  exec('update','rezerwacje','DK',DK.ref(),DK.N().MAG,DK.M,DK.IL,DK.SRDK);
                  {? _zlec<>null() & _wydz<>null()
                   & {? DK.PLUS='N' & DK.ZLIM<>null() || 0 || ~exec('ctrlzldk','magazyn_mob',0,DK.N().TYP) ?}
                  || DK.ZL:=null();
                     DK.WYD:=null();
                     DK.ZLIM:=null();
                     DK.M_ZLIM:='';
                     DK.put(1)
                  ?};
                  {? _rozpal
                  || DK.ROZPAK:=1;
                     {? DK.put(1)
                     || EANX.PALK:=EANP.PAL().KODK;
                        EANX.EANL:=EANP.LOKZ;
                        {? exec('rozpNOPAL','magdok_palety')>=0 || _nosl:=1 ?}
                     ?}
                  ?};
                  params_exec('formEANW','magazyn_mob',EANP.ref(),DK.M,DK.uidref())
               ?};
               DK.cntx_pop();
               {? ~_jesnamg
               || EANP.RSQL:=$_ref;
                  EANP.RNAG:=$ND.ref();
                  EANP.put()
               ?};
               {? ~_nosl
               || {? ~exec('add2dk_l','magdok_wspolne',_ref,null,EANP.LOKZ
                       ,{? EANP.LOKDO<>null() || EANP.LOKDO || null() ?},_sctw,date(0,0,0)
                       ,_ileeanp,EANP.LOKZ().MG,EANP.M,,,EANP.PAL,,1)
                  || undo()
                  || _wyn:=1
                  ?}
               ?};
               {? EANX.BEZTW & EANP.M().SETW<>'P' || exec('popdkltw','magazyn_stan',_ref,null) ?}
            || undo()
            ?}
         || _wyn:=1
         ?}
      || _mdst:=ND.MAG().TYP*'DOST';
         _wyda:=ND.TYP().P<>'T';
         _dokl_m:=exec('jaka_dok_m','jm',EANP.M);
         _dokl_s:={? EANP.M().J2<>null() || exec('jaka_dok_mjm','jm',EANP.M,EANP.M().J2,EANP.M().J) || _dokl_m ?};
         _dk_c:={? EANP.M().M_ATR<>null()
                || _waratr:='';
                   {! _ii:=1..10
                   |! _waratr+={? ($'EANP.M().M_ATR().SL_%1'[form(_ii,-2,0,'99')])()<>null()
                               || form(($'EANP.WAR%1'[form(_ii,-2,0,'99')])())
                               || ''
                               ?}
                   !};
                   {? _waratr<>''
                   || exec('m_atr_sprdod','mat_atr'
                       ,EANP.WAR01,EANP.WAR02,EANP.WAR03,EANP.WAR04,EANP.WAR05
                       ,EANP.WAR06,EANP.WAR07,EANP.WAR08,EANP.WAR09,EANP.WAR10
                       ,EANP.M().M_ATR,null())
                   || null()
                   ?}
                || null()
                ?};
         {? EANP.M().J2<>null() & EANP.ILS>0 & EANP.ILS2=0
         || _ws2:=exec('oblWSP','jm',EANP.M);
            EANP.ILS2:={? _ws2>0 || EANP.ILS/_ws2 || 0 ?};
            EANP.put(1)
         ?};
         _isj2:=EANP.M().J2<>null() & EANP.ILS2>0;
         {? _isj2
         || _jm2:=$EANP.M().J2;
            _il2:=EANP.ILS2 $ _dokl_s;
            _ws2:={? EANP.ILS>0 & _il2>0 || EANP.ILS/_il2 || 0 ?}
         || _jm2:=$EANP.M().J;
            _ws2:=1;
            _il2:=EANP.ILS $ _dokl_m
         ?};
         exec('przyjdod','jm',_jm2,_ws2,_il2);
         {? ND.TYP().ZLEC='T'
         || _zlec:={? EANP.ZL<>null || EANP.ZL || _c ?};
            _wydz:={? EANP.WYD<>null || EANP.WYD || _d ?};
            _zlim:=exec('dk_zlim_suggest','zl_limit',_zlec,EANP.M().KTM,null())
         || _zlec:=null();
            _wydz:=null();
            _zlim:=null()
         ?};
         _upd:=0;
         _scean:={? (1+ND.MAG().TYP)='D' || EANP.SCEAN || '' ?};
         {? EANP.M().IDMOB='A' & _scean<>'' & _dk_c<>null()
         || _rsql:=exec('FindInSet','#table','MKODK','KK',_scean,_scean,"MKODK.RSQL",,,'');
            {? _rsql<>$_dk_c
            || _cdean:=exec('FindInSet','#table','MKODK','RSQL',EANP.M,$_dk_c,"MKODK.KODK",,$_dk_c,'');
               {? _cdean<>''
               || _scean:=_cdean
               || exec('mkodkadd','kody_kresk',EANP.M,_scean,$_dk_c)
               ?}
            ?}
         ?};
         DK.index('MAM');
         DK.prefix(ND.ref(),EANP.M);
         {? DK.first()
         || {? _zlec=null & _wydz=null & DK.SCEAN=_scean & (~_wgtw | DK.TW=_tw) & ~_wggs1
             & (~_mdst | _dk_c=DK.DK_C)
            || DK.IL+=EANP.ILS $ _dokl_m;
               DK.IL2+={? _isj2 || EANP.ILS2 $ _dokl_s || 0 ?};
               {? ~DK.put(1) || undo() ?};
               _ref:=DK.ref();
               _upd:=1
            || {!
               |? {? DK.ZL=_zlec & DK.WYD=_wydz & DK.SCEAN=_scean & (~_wgtw | DK.TW=_tw) & ~_wggs1
                   & (~_mdst | _dk_c=DK.DK_C)
                  || DK.IL+=EANP.ILS $ _dokl_m;
                     DK.IL2+={? _isj2 || EANP.ILS2 $ _dokl_s || 0 ?};
                     {? ~DK.put(1) || undo() ?};
                     _ref:=DK.ref();
                     _upd:=1
                  ?};
                  ~_upd & DK.next()
               !}
            ?}
         ?};
         {? ~_upd
         || _ref:=exec('adddk','magdok_poz',ND.ref(),EANP.M,EANP.ILS $ _dokl_m,0,{? ~_wyda || ZAKR.DP || date(0,0,0) ?}
                   ,,,,,exec('m_vat','material',EANP.M,ND.KH,,ND.AR,ND.AM,,,,{? ~_wyda || 'Z' || 'S' ?})
                   ,,,7,,,_dk_c,,,,_zlec,_wydz,,,,_scean,_tw)
         ?};
         {? _ref<>null
         || DK.cntx_psh();
            DK.clear();
            {? DK.seek(_ref)
            || {? _zlim<>null() & ND.TYP().WYR<>'T' & DK.ZL<>null() & DK.ZLIM=null() & _prod
               || DK.ZLIM:=_zlim;
                  DK.M_ZLIM:=ref_name(_zlim);
                  DK.put(1)
               ?};
               _brak:=DK.SCEAN<>'' & exec('FindInSet','#table','MKODK','KK',DK.SCEAN,DK.SCEAN,"MKODK.M",,,null())=null;
               {? DK.SCEAN<>'' & DK.M().IDMOB='D' & _brak
               || exec('mkodkadd','kody_kresk',DK.M,DK.SCEAN,$DK.ref())
               |? DK.SCEAN<>'' & DK.M().IDMOB='A' & ~_brak
               || _rsql:=exec('FindInSet','#table','MKODK','KK',DK.SCEAN,DK.SCEAN,"MKODK.RSQL",,,'');
                  DK.DK_C:=exec('FindAndGet','#table','DK_C',_rsql,,,null());
                  DK.put(1)
               |? DK.SCEAN<>'' & DK.M().IDMOB='P' & ~_brak
               || _rsql:=exec('FindInSet','#table','MKODK','KK',DK.SCEAN,DK.SCEAN,"MKODK.RSQL",,,'');
                  DK.PARTIA:=exec('FindAndGet','#table','ZPARN',_rsql,,,null());
                  DK.ZL:=DK.PARTIA().ZL;
                  DK.WYD:=DK.PARTIA().ZL().JORG;
                  DK.put(1)
               |? DK.SCEAN<>'' & DK.M().IDMOB='Z' & ~_brak
               || _rsql:=exec('FindInSet','#table','MKODK','KK',DK.SCEAN,DK.SCEAN,"MKODK.RSQL",,,'');
                  DK.ZL:=exec('FindAndGet','#table','ZL',_rsql,,,null());
                  DK.WYD:=DK.ZL().JORG;
                  DK.put(1)
               ?};
               {? _wyda || exec('update','rezerwacje','DK',DK.ref(),DK.N().MAG,DK.M,DK.IL,DK.SRDK) ?};
               {? _zlec<>null & _wydz<>null
                & {? DK.PLUS='N' & DK.ZLIM<>null() || 0 || ~exec('ctrlzldk','magazyn_mob',0,DK.N().TYP) ?}
               || DK.ZL:=null();
                  DK.WYD:=null();
                  DK.ZLIM:=null();
                  DK.M_ZLIM:='';
                  DK.put(1)
               ?};
               {? ND.TYP().WYR<>'T' & DK.ZL<>null() & DK.ZLIM=null() & _prod
               || _wyn:=exec('aedklimi','magdok_poz',1);
                  DK.put(1)
               ?};
               params_exec('formEANW','magazyn_mob',EANP.ref(),DK.M,DK.uidref())
            ?};
            DK.cntx_pop();
            EANP.RSQL:=$_ref;
            EANP.RNAG:=$ND.ref() ;
            EANP.put();
            {? ~exec('add2dk_l','magdok_wspolne',_ref,null,EANP.LOKZ
                 ,{? EANP.LOKDO<>null() || EANP.LOKDO || null() ?},EANP.TW,date(0,0,0)
                 ,EANP.ILS $ _dokl_m,EANP.LOKZ().MG,EANP.M,,,EANP.PAL,,1)
            || undo()
            || _wyn:=1
            ?}
         || undo()
         ?};
         {? _wyda
         || {? EANX.BEZTW & EANP.M().SETW<>'P' || exec('popdkltw','magazyn_stan',_ref,null) ?}
         ?}
      ?}
   ?};
   ND.cntx_pop()
?};
{? _wyn || exec('actTAXS','magdok_wspolne',_a) ?};
_wyn


\eann2nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Generacja dokumentu na podstawie operacji mobilnej
::   WE: _a- 'P'-przychód 'W'-rozchód
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:={? _a='P' || 'LMO_MOB_DPRZ' || 'LMO_MOB_DWYD' ?};
_params.UIDREF:=EANN.uidref();
_params.AKCJA:='Generuj_wg_ope';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EANN',EANN.ref());
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'WEB',{? EANN.ZLEC='T' || 'TAK' || 'NIE' ?});
exec('mp_run','#b__box',_params);
'activate:browse'


\ctrlEANN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: sprawdza czy daną operację można zrealizować
::   WE: _a-typ operacji
::       [_b] - automatyczna realizacja 0-(domyslnie) nie 1-tak
::       [_c] - 1 (domyślnie) z kontrolą palet, 0-bez kontroli palet
::   WY: 0 lub wartość zmiennej _wyp
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=1 ?} || _c:=1 ?};

_wyn:=0;
_stEANN:={? (EANN.name()+2)='__' & EANN.TYP='R' & EANN.STAN='+' & (EANN.IS_R='T' | EANN.IS_M='T')
         || 'Z'
         || EANN.STAN
         ?};
{? _stEANN='Z' & exec('FindInSet','#table','EANP','EANN',EANN.ref())=null()
|| {? ~_b
   || FUN.info('Operacja bez pozycji.\n'
               'Realizacja operacji niemożliwa.'@)
    ?}
|? _stEANN='Z' & ~exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
|| {? ~_b
   || FUN.info('W obecnej chwili nie wszystkie pozycje operacji zostały zaktualizowane.\n'
               'Realizacja operacji niemożliwa.'@)
   ?}
|? _stEANN='Z' & (';PW'*_a)>1
|| _wyp:=exec('sprwyp_m','magazyn_mob',EANN.ref());
   _pal:=_c;
   {? _c & _wyp>0
   || _utwpal:=exec('utwpalet','magdok_palety',EANN.ref());
      _pal:=exec('sprwyp_p','magazyn_mob',EANN.ref())
   || _wyn:=_wyp
   ?};
   {? _wyp=0
   || {? ~_b
      || FUN.info({? _a='P'
                  || 'Istnieją pozycje bez indeksów materiałowych.\n'
                     'Przed przyjęciem należy je uzupełnić.'@
                  || 'Istnieją pozycje bez indeksów materiałowych.\n'
                     'Przed wydaniem należy je uzupełnić.'@
                  ?})
      ?}
   |? _wyp<0
   || {? ~_b
      || FUN.info({? _a='P'
                  || 'Istnieją pozycje bez prawidłowych kodów identyfikacyjnych.\n'
                     'Przed przyjęciem należy je uzupełnić lub poprawić.'@
                  || 'Istnieją pozycje bez prawidłowych kodów identyfikacyjnych.\n'
                     'Przed wydaniem należy je uzupełnić lub poprawić.'@
                  ?})
      ?}
   |? ~_pal
   || {? ~_b
      || FUN.info({? _a='P'
                  || 'Istnieją pozycje bez zdefiniowanych palet w systemie.\n'
                     'Przed przyjęciem należy je uzupełnić.'@
                  || 'Istnieją pozycje bez zdefiniowanych palet w systemie.\n'
                     'Przed wydaniem należy je uzupełnić.'@
                  ?})
      ?}
   || _wyn:=_wyp
   ?}
|? _stEANN<>'Z' & ~_b
|| FUN.info({? EANN.AKT='N' || 'Operacja zrealizowana.'@
            |? _a='P' || 'Dostawa nieskompletowana.\nPrzyjęcie niemożliwe.'@
            |? _a='W' || 'Wydanie nie skompletowane.\Wydanie niemożliwe.'@
            |? _a='I' || 'Inwentaryzacja nieskompletowana.\Przeniesienie na arkusz niemożliwe.'@
            |? _a='Z' || 'Kompletacja wysyłki nieskompletowana.\nRealizacja niemożliwa.'@
            || 'Nie zakończono operacji.'@
            ?})
|| _wyn:=1
?};
_wyn


\pwzakrrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: przed wyswietlenie ZAKR.RP
::  OLD: \pwzakrrp/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
''


\przakrrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: przed redakcja ZAKR.RP
::  OLE: \przakrrp/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.CZYRP


\pw_tean1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: przed wyswietleniem typu dokumentu realizacji
::  OLD: \pw_tean1/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(EANX.DOK1 & ZAKR.RP='D')
|| exec('findfnrd','color')
|| ''
?}


\pr_tean1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: przed redakcja typu dokumentu realizacji
::  OLD: \pr_tean1/ean.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.DOK1 & ZAKR.RP='D'


\f3_tean1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: f3 dla typu dokumentu realizacji
::   WE: [_a] - 0(domyślnie), 1-podpowiedź typu dokumentu
::  OLD: \f3_tean1/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_prod:=exec('tte_lic','tte');
_typ:=null;
_rodz:=ZAKR.win_edit('?')+1;
_onlyzw:=var_pres('__onlyzw')>0 & __onlyzw;
_war:={? _rodz='R'
      || '"TYPYDOK".Z=\'N\' and "TYPYDOK".P=\'N\' and "TYPYDOK".SYS=\'L\' '
      |? _rodz='P' & (1+EANN.RODZ)='Z'
      || {? ~_onlyzw
         || '"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DS=\'N\' '+
            'and "TYPYDOK".DK=\'N\' '
         || '"TYPYDOK".DN=\'T\' and "TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DS=\'N\' '+
            'and "TYPYDOK".DK=\'N\' '
         ?}
      |? _rodz='P' & (1+EANN.RODZ)='W'
      || {? ~_onlyzw
         || '"TYPYDOK".Z=\'N\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DS=\'N\' '+
            'and "TYPYDOK".DK=\'N\' and "TYPYDOK".T<>\'PRC+\' and "TYPYDOK".T<>\'INW+\' and "TYPYDOK".T<>\'KN+\' '
         || '"TYPYDOK".DN=\'T\' and "TYPYDOK".Z=\'N\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DS=\'N\' '+
            'and "TYPYDOK".DK=\'N\' and "TYPYDOK".T<>\'PRC+\' and "TYPYDOK".T<>\'INW+\' and "TYPYDOK".T<>\'KN+\' '
         ?}
      |? _rodz='W' & EANN.TYP='R' & EANN.IS_M='T'
      || '"TYPYDOK".P=\'N\' and "TYPYDOK".Z=\'N\' and "TYPYDOK".DK=\'N\' '
         'and "TYPYDOK".TD<>\'\' and "TYPYDOK".DN<>\'D\' '+
         'and "TYPYDOK".T<>\'INW-\' and "TYPYDOK".T<>\'PRC-\' and "TYPYDOK".T<>\'KN-\' '
      |? _rodz='W' & (1+EANN.RODZ)='Z'
      || '"TYPYDOK".P=\'N\' and "TYPYDOK".Z=\'T\' and "TYPYDOK".DK=\'N\' '+
         'and "TYPYDOK".T<>\'INW-\' and "TYPYDOK".T<>\'PRC-\' and "TYPYDOK".T<>\'KN-\' '
      |? _rodz='W' & (1+EANN.RODZ)='W'
      || '"TYPYDOK".P=\'N\' and "TYPYDOK".Z=\'N\' and "TYPYDOK".DK=\'N\' '+
         'and "TYPYDOK".T<>\'INW-\' and "TYPYDOK".T<>\'PRC-\' and "TYPYDOK".T<>\'KN-\' '
      || ' 1 '
      ?}+{? _prod='N' || ' and "TYPYDOK".WYR<>\'T\'' || '' ?};
__magik.cntx_psh();
__magik.clear();
{? __magik.first()
|| _mags:=tab_tmp(1,'SQL','STRING[20]','');
   {!
   |? _mags.clear();
      _mag:=
      {? ~_mags.find_key(__magik.MG1)
        & exec('FindInSet','#table','T2MG','T',exec('FindAndGet','#table','MG',__magik.MG1,,,null()))<>null
      || _mags.SQL:=__magik.MG1;
         _mags.add(1)
      ?};
      __magik.next()
   !};
   {? _mags.size() & _mags.first()
   || _tab:=obj_new(_mags.size()); _i:=0;
      {! |? {? (MG.clear(); MG.seek(_mags.SQL)) || _i+=1; _tab[_i]:=MG.ref() ?}; _mags.next() !}
   || _tab:=0
   ?}
|| _tab:=0
?};
__magik.cntx_pop();

{? _tryb
|| HELP.TYP:=exec('typ_dok','lmg',_war,,,,_tab,,,,,0)
|| HELP.TYP:=exec('typ_dok','lmg',_war,,,,_tab,,,,,-1)
?};
{? HELP.TYP<>null
|| ZAKR.TEANP1:=HELP.TYP().T;
   HELP.TYP:=_typ;
   1
|| HELP.TYP:=_typ;
   0
?}


\po_tean1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: po redakcji typu dokumentu
::  OLD: \po_tean1/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:=fld() ?} || _a:=fld() ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=1 ?} || _b:=1 ?};

_fld:=_a;
_typ:=HELP.TYP;
HELP.TYP:={? form(_fld)='' || null || exec('FindInSet','#table','TYPYDOK','TYP',_fld,_fld) ?};
_war:=HELP.TYP<>null & (_ogr:=exec('ogr_typ','magazyn_mob',1));

{? HELP.TYP=null
|| {? _b || FUN.info('Należy wybrać typ dokumentu magazynowego.'@) ?};
   0
|? _war
|| ZAKR.TEANP1:=HELP.TYP().T;
   HELP.TYP:=_typ;
   exec('set_efld_opt','magazyn_mob');
   win_disp();
   1
|| {? _b
   || {? ~_ogr
      || FUN.info('Nałożono ograniczenia na podany typ dokumentu\n'
                  '(przypisanie do użytkownika, przypisanie do magazynu).\n'
                  'Należy wybrać inny typ dokumentu magazynowego (klawisz F3).'@)
      || FUN.info('Należy wybrać typ dokumentu magazynowego.'@)
      ?}
   ?};
   HELP.TYP:=null;
   0
?}


\ogr_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdzenie podanego typu czy zgadza sie z ograniczniami
::   WE: _a - 1-TEANP1 2-TEANP2
::   WY: 1-jest OK 0-nie jest OK
::  OLD: \ogr_typ/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_prod:=exec('tte_lic','tte');
_rodz:=ZAKR.win_edit('?')+1;
_onlyzw:=var_pres('__onlyzw')>0 & __onlyzw;
_war:={? _rodz='R' & _a=1
      || '"TYPYDOK".Z=\'N\' and "TYPYDOK".P=\'N\' and "TYPYDOK".SYS=\'L\' '
      |? _rodz='R' & _a=2
      || '"TYPYDOK".Z=\'N\' and "TYPYDOK".P=\'N\' and "TYPYDOK".TD<>\'\' and "TYPYDOK".SYS<>\'L\' '
      |? _rodz='P' & (1+EANN.RODZ)='Z'
      || {? ~_onlyzw
         || '"TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DS=\'N\' '+
            'and "TYPYDOK".DK=\'N\' '
         || '"TYPYDOK".DN=\'T\' and "TYPYDOK".Z=\'T\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DS=\'N\' '+
            'and "TYPYDOK".DK=\'N\' '
         ?}
      |? _rodz='P' & (1+EANN.RODZ)='W'
      || {? ~_onlyzw
         || '"TYPYDOK".Z=\'N\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DS=\'N\' '+
            'and "TYPYDOK".DK=\'N\' and "TYPYDOK".INW<>\'E\' and "TYPYDOK".INW<>\'I\' '
         || '"TYPYDOK".DN=\'T\' and "TYPYDOK".Z=\'N\' and "TYPYDOK".P=\'T\' and "TYPYDOK".DS=\'N\' '+
            'and "TYPYDOK".DK=\'N\' and "TYPYDOK".INW<>\'E\' and "TYPYDOK".INW<>\'I\' '
         ?}
      |? _rodz='W' & EANN.TYP='R' & EANN.IS_M='T'
      || '"TYPYDOK".P=\'N\' and "TYPYDOK".Z=\'N\' and "TYPYDOK".DK=\'N\' '
         'and "TYPYDOK".TD<>\'\' and "TYPYDOK".DN<>\'D\' '+
         'and "TYPYDOK".INW<>\'I\' and "TYPYDOK".INW<>\'E\' '
      |? _rodz='W' & (1+EANN.RODZ)='Z'
      || '"TYPYDOK".P=\'N\' and "TYPYDOK".DK=\'N\' and "TYPYDOK".Z=\'T\' '+
         'and "TYPYDOK".INW<>\'I\' and "TYPYDOK".INW<>\'E\' '
      |? _rodz='W' & (1+EANN.RODZ)='W'
      || '"TYPYDOK".P=\'N\' and "TYPYDOK".DK=\'N\' and "TYPYDOK".Z=\'N\' '+
         'and "TYPYDOK".INW<>\'I\' and "TYPYDOK".INW<>\'E\' '
      || ' 1 '
      ?}+{? _prod='N' || ' and "TYPYDOK".WYR<>\'T\'' || '' ?};
_typ:=HELP.TYP;
__magik.cntx_psh();
__magik.clear();
{? __magik.first()
|| _mags:=tab_tmp(1,'SQL','STRING[20]','');
   {!
   |? _mags.clear();
      _magazyn:=__magik.MG1;
      {? ~_mags.find_key(_magazyn)
        & exec('FindInSet','#table','T2MG','T',exec('FindAndGet','#table','MG',_magazyn,,,null()))<>null
      || _mags.SQL:=_magazyn;
         _mags.add(1)
      ?};
      __magik.next()
   !};
   {? _mags.size() & _mags.first()
   || _tab:=obj_new(_mags.size()); _i:=0;
      {! |? {? (MG.clear(); MG.seek(_mags.SQL)) || _i+=1; _tab[_i]:=MG.ref() ?}; _mags.next() !}
   || _tab:=0
   ?}
?};
__magik.cntx_pop();

_typs:=exec('typ_dok','lmg',_war,,,1,_tab);
_wyn:=_typs*(HELP.TYP().T+' ');
_wyn


\prwydean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja pola ZAKR.WYDEAN
::   WY: 0/1
::  OLD: \prwydean/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('pr_zl01','magazyn_mob') & XINFO.SLWYDZIA<>null()
|| _eanp:=var_pres('__eanpzl')=1;
   _dkzl:=var_pres('__dk2zl')=1;
   _prod:=exec('tte_lic','tte');
   _szl:=0;

   {? ~_eanp & ~_dkzl
   || EANP.cntx_psh();
      EANP.index('EANN');
      EANP.prefix(EANN.ref());
      {? EANP.first() || {! |? _szl:=EANP.ZL<>null; ~_szl & EANP.next() !} ?};
      EANP.cntx_pop();

      XINFO.SLWYDZIA();

      {? ZAKR.ZL<>null()
      || {? ~_szl
         || HELP.TYP:=exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1);
            {? HELP.TYP().WYR='T' | _prod='N'
            || ZAKR.WYDEAN:=ZAKR.ZL().JORG;
               {? ZAKR.WYDEAN=null() || 1 || win_disp(); 0 ?}
            || {? ~exec('chk_wyd','magdok_nag',ZAKR.WYDEAN,ZAKR.ZL,0)
               || ZAKR.WYDEAN:=ZAKR.ZL().JORG
               ?};
               1
            ?}
         || 0
         ?}
      || ZAKR.WYDEAN:=null();
         ~~
      ?}
   || XINFO.SLWYDZIA();
      {? ZAKR.ZL<>null || ZAKR.WYDEAN:=ZAKR.ZL().JORG ?};
      {? ZAKR.WYDEAN=null() || 1 || win_disp(); 0 ?}
   ?}
|| 0
?}


\powydean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji pola ZAKR.WYDEAN
::  OLD: \powydean/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_prod:=exec('tte_lic','tte');
{? ZAKR.ZL<>null()
|| {? _prod='N' | ZAKR.ZL().JORG=ZAKR.WYDEAN
   || 1
   || exec('chk_wyd','magdok_nag',ZAKR.WYDEAN,ZAKR.ZL,1)
   ?}
|| 1
?}


\pw_zl01
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem pola ZAKR.ZL01
::  OLD: \pw_zl01/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__eanpzl')=1 | var_pres('__dk2zl')=1
|| exec('zl_p_wys','zl_common','ZAKR.ZL','ZAKR.ZL01')
|? ZAKR.TEANP1<>'' & ~((';zdnag;zknag;'*(5+EANN.REFSQL))>1)
|| HELP.TYP:=exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1);
   {? HELP.TYP().ZLEC='T'
   || exec('zl_p_wys','zl_common','ZAKR.ZL','ZAKR.ZL01')
   || exec('findfnv','#color')
   ?}
|| exec('findfnv','#color')
?}


\pr_zl01
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja pola ZAKR.ZL01
::  OLD: \pr_zl01/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__eanpzl')=1 | var_pres('__dk2zl')=1
|| exec('zl_p_red','zl_common','ZAKR')
|? ZAKR.TEANP1<>'' & ~((';zdnag;zknag;'*(5+EANN.REFSQL))>1)
|| HELP.TYP:=exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1);
   {? HELP.TYP().ZLEC='T'
   || exec('zl_p_red','zl_common','ZAKR')
   || 0
   ?}
|| 0
?}


\f3_zl01
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: klawisz F3 pola ZAKR.ZL01
::   WE: _a - ref EANN
::   WY: ref magazynu lub null jezeli kilka
::  OLD: \f3_zl01/ean.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zl_f3_1','zl_common','ZAKR.ZL01','ZAKR.ZL',-2)


\po_zl01
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji pola ZAKR.ZL01
::  OLD: \po_zl01/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_eanp:=var_pres('__eanpzl')=1;
_dkzl:=var_pres('__dk2zl')=1;

_wynik:=1;
_prod:=exec('tte_lic','tte');
{? ZAKR.ZL01<>''
|| ZL.cntx_psh();
   ZL.clear();
   ZL.blank(1);
   ZL.index('HIDDEN');
   _wynik:={? _prod='T'
           || ZL.find_tab(0,'SYM',,'=',ZAKR.ZL01,'HIDDEN',,'=','N','STAN',,'=','O')
           || ZL.find_tab(0,'SYM',,'=',ZAKR.ZL01,'HIDDEN',,'=','N','STAN',,'=','O','TYP','TYP','=','~ML')
           ?};
   {? _wynik=0
   || FUN.emsg('Brak w słowniku otwartego zlecenia o podanym symbolu.'@)
   || {? ZL.OD>{? ~_eanp & ~_dkzl || ZAKR.DP |? _eanp || EANP.EANN().DATA || DK.N().D ?}
      || FUN.info('Zlecenie powołane jest z datą późniejszą niż data przyjęcia dokumentu.'@);
         _wynik:=0
      || ZAKR.ZL:=ZL.ref();
         ZAKR.KK:=ZL.KK
      ?};
      {? _prod='N'
      || ZAKR.WYDEAN:=ZL.JORG;
         ZAKR.KK:=ZL.KK
      ?}
   ?};
   ZL.cntx_pop();
   win_disp();
   _wynik
|| ZAKR.ZL:=null;
   ~~
?}


\pw_zl02
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem pola ZAKR.ZL02
::  OLD: \pw_zl02/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__eanpzl')=1 | var_pres('__dk2zl')=1 | (ZAKR.TEANP1<>'' & ZAKR.ZL01<>'')
|| exec('zl_p_wys3','zl_common','ZAKR.ZL','ZAKR.ZL02')
|| exec('findfnv','#color')
?}


\pr_zl02
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja pola ZAKR.ZL02
::  OLD: \pr_zl02/ean.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zl_p_wys2','zl_common','ZAKR.ZL','ZAKR.ZL01','ZAKR.ZL02')


\f3_zl02
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: klawisz F3 pola ZAKR.ZL02
::  OLD: \f3_zl02/ean.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zl_f3_2','zl_common','ZAKR.ZL','ZAKR.ZL02',0,'ZAKR.ZL01')


\po_zl02
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji pola ZAKR.ZL02
::  OLD: \po_zl02/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:=0;
{? ZAKR.ZL02=''
|| {? ZAKR.ZL().GENLIM='N'
   || _wynik:=1
   || FUN.emsg('Proszę wypełnić pole.'@);
      _wynik:=0
   ?}
|| ZL.cntx_psh();
   ZL.clear();
   ZL.blank(1);
   ZL.index('STAN');
   _wynik:=ZL.find_tab(0,'SYM',,'=',ZAKR.ZL02,'HIDDEN',,'=','N','STAN',,'=','O','NRNZL',,'<>',0);
   {? _wynik=0
   || FUN.emsg('Niepoprawny symbol zlecenia.'@)
   || ZAKR.ZL:=ZL.ref();
      ZAKR.KK:=ZL.KK
   ?};
   ZL.cntx_pop();
   win_disp()
?};
_wynik


\pw_symz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem pola symbol zamówienia
::  OLD: \pw_symz/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAKR.SYMZ<>'' & {? EANN.TYP='P' || (1+EANN.RODZ)='Z' || 1 ?}
|| ''
|| exec('findfnv','#color')
?}


\pr_symz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja pola symbol zamówienia
::  OLD: \pr_symz/ean.fml
::----------------------------------------------------------------------------------------------------------------------
0


\pw_mgmm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem magazynu dla MM-ki
::  OLD: \pw_mgmm/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAKR.TEANP1<>'' & exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1,"TYPYDOK.TD",,,'')<>''
|| 1
|| exec('findfnv','#color')
?}


\pr_mgmm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed ustaleniem magazynu dla MM-ki
::   WY: 0 jesli typ nie tworzy dokumentu 1 w przeciwnym przypadku
::  OLD: \pr_mgmm/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAKR.TEANP1<>''
|| exec('FindInSet','#table','TYPYDOK','TYP',ZAKR.TEANP1,ZAKR.TEANP1,"TYPYDOK.TD",,,'')<>''
|| 0
?}


\blreazam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wartosc poczatkowa pola ZAKR.REAZAM
::  OLD: \blreazam/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? __reazew || exec('get','#params',100600,2) || 'N' ?}


\prreazam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakzji pola ZAKR.REAZAM
::   WY: 1/0
::  OLD: \prreazam/ean.fml
::----------------------------------------------------------------------------------------------------------------------
__reazew>0 & ZAKR.RP='D'


\var_fakpop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zmienna - parametry operacji mobilnej
::   WY: uchwyt do zmiennej
::----------------------------------------------------------------------------------------------------------------------
obj_new('RAB','KRS','NKRS','KH','ODB','WAL','PL','IST_TYP','R_LOCK','PO_FIRST')


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zaznacza wymagalne pola dla ZAKR
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || ZAKR.win_edit('?') ?};

{? (';PW'*(_win_red+1))>1
|| _zl01:='enable='+{? EANN.RODZ='Z' | ~exec('pr_zl01','magazyn_mob') || '0' || '1' ?};
   _zl02:='enable='+{? EANN.RODZ='Z' | ~exec('pr_zl01','magazyn_mob') || '0' || '1' ?};
   ZAKR.efld_opt(_win_red,_zl01,,'ZL01');
   ZAKR.efld_opt(_win_red,_zl02,,'ZL02');
   ZAKR.efld_opt(_win_red,_zl01,,'WYDEAN')
?};
{? (_win_red+1)='W'
|| _mgmm:='enable='+{? EANN.RODZ='Z' | ~exec('pr_mgmm','magazyn_mob') || '0' || '1' ?};
   ZAKR.efld_opt(_win_red,_mgmm,,'MGMM')
?};
~~


\poaleanp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Poprawia wszystkie EANP bez M o danym kodzie kreskowym
::   WE: _a - kod kreskowy
::       _b - ref M
::  OLD: \poaleanp/ean.fml
::----------------------------------------------------------------------------------------------------------------------
EANP.cntx_psh();
EANP.index('EAN');
EANP.prefix(_a,_a);
{? EANP.first() || {! |? EANP.M:=_b; EANP.put(1); EANP.next() !} ?};
EANP.cntx_pop()


\m_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Materiał/Usługa - Dołącz
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='ZWS_PAR_KMTR';
_params.AKCJA:='Mobil';

exec('mp_run','#b__box',_params)


\addident
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: powiazanie identyfikatora na podstawie M
::  OLD: \addident/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=EANP.ref();
exec('uzupdane','magazyn_mob');
EANP.cntx_psh();
{? EANP.EANN().STAN<>'Z' | ~exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
|| FUN.info('Opcja dostępna dla operacji zakończonej.'@)
|? EANP.LOKZ().MG().PAL='T'
|| FUN.info('Opcja niedostępna w magazynie z obsługą palet.'@)
|? (1+EANP.LOKZ().MG().TYP)<>'D'
|| FUN.info('Opcja niedostępna w magazynie typu: %1.'@[EANP.LOKZ().MG().TYP])
|? EANP.M=null
|| FUN.info('Należy najpierw dodać indeks materiałowy do pozycji operacji.'@)
|? EANP.M().IDMOB='D' & EANP.EANN().TYP='P' & ~exec('czypowid','magazyn_mob',EANP.M,EANP.SCEAN)
|| FUN.info('Kod identyfikacyjny zostanie przypisany po utworzeniu dokumentu przyjęcia.'@)
|? (';DAPZ'*EANP.M().IDMOB)>1 & EANP.SCEAN<>''
  & exec('FindInSet','#table','MKODK','KK',EANP.SCEAN,EANP.SCEAN,"MKODK.IDMOB",,,'')=EANP.M().IDMOB
|| FUN.info('Kod identyfikacyjny jest prawidłowo powiązany.'@)
|? FUN.ask('Czy powiązać kod identyfikujący dostawę?'@) & (EANP.clear(); EANP.seek(_ref))
|| _idmob:=EANP.M().IDMOB;
   {? _idmob='D'
   || _newean:=exec('addscean','kody_kresk',4,EANP.SCEAN);
      {? _newean<>''
      || EANP.SCEAN:=_newean;
         EANP.put()
      ?}
   |? _idmob='A'
   || _matr:=EANP.M().M_ATR;
      ATR.MJS:='EANP';
      {? _matr<>null
      || DK_C.index('M_ATR');
         DK_C.prefix(_matr); DK_C.prefix();
         ATR.SCEAN:=EANP.SCEAN;
         exec('dk_atr_dict','mat_atr',-2);
         DK_C.f_set('WAR01,WAR02,WAR03,WAR04,WAR05,WAR06,WAR07,WAR08,WAR09,WAR10',,'DK_C.M_ATR=:_a',_matr);
         {? DK_C.f_first()
         || {!
            |? _ii:=0;
               _oki:=1;
               {!
               |? _ii+=1;
                  _war:=($'DK_C.WAR%1'[form(_ii,-2,0,'99')])();
                  _mob:=($'EANP.WAR%1'[form(_ii,-2,0,'99')])();
                  _oki:=(_war='' | _mob='' | _war=_mob);
                  _oki & _ii<10
               !};
               {? _oki || DK_C.f_next() || DK_C.f_del() ?}
            !};
            DK_C.f_first()
         ?};
         {? DK_C.select()
         || {? EANP.SCEAN<>''
            || _scean:=EANP.SCEAN
            || _rsql:=$DK_C.ref();
               MKODK.cntx_psh();
               MKODK.index('RSQL');
               MKODK.prefix(_rsql,_rsql,EANP.M);
               {? MKODK.first()
               || _scean:=MKODK.KODK
               || _scean:=exec('mkodkKODK','kody_kresk',EANP.M)
               ?};
               MKODK.cntx_pop()
            ?};
            exec('mkodkadd','kody_kresk',EANP.M,_scean,$DK_C.ref());
            {? EANP.SCEAN=''
            || EANP.SCEAN:=_scean;
               EANP.put(1)
            ?}
         ?};
         DK_C.f_clear()
      ?};
      ATR.SCEAN:=''
   |? _idmob='P'
   || ''
   |? _idmob='Z'
   || {? exec('zl_f3_1','zl_common','ZAKR.ZL01','ZAKR.ZL',-3) & ZAKR.ZL<>null & (ZL.clear(); ZL.seek(ZAKR.ZL))
      || _scean:={? EANP.SCEAN<>'' || EANP.SCEAN || exec('mkodkKODK','kody_kresk',EANP.M,'ZL.SCEAN') ?};
         ZL.SCEAN:=_scean;
         {? ZL.put(1) || exec('mkodkadd','kody_kresk',EANP.M,_scean,$ZL.ref()) ?};
         {? EANP.SCEAN=''
         || EANP.SCEAN:=_scean;
            EANP.put(1)
         ?}
      ?}
   ?}
?};
EANP.cntx_pop();
''


\newkodie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: nowy kod identyfikacji
::  OLD: \newkodie/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANP.M().IDMOB='D' & EANP.EANN().TYP='P' & ~exec('czypowid','magazyn_mob',EANP.M,EANP.SCEAN)
|| FUN.info('Kod identyfikacyjny zostanie przypisany po utworzeniu dokumentu przyjęcia.'@)
|? (';DAPZ'*EANP.M().IDMOB)>1 & EANP.SCEAN<>''
  & exec('FindInSet','#table','MKODK','KK',EANP.SCEAN,EANP.SCEAN,"MKODK.IDMOB",,,'')=EANP.M().IDMOB
|| FUN.info('Kod identyfikacyjny jest prawidłowo powiązany.'@)
|? EANP.M<>null & EANP.M().IDMOB='D'
|| {? FUN.ask('Czy wygenerować nowy kod kreskowy dla dostawy?'@)
   || _scean:=exec('mkodkKODK','kody_kresk',null(),'MKODK.KODK');
      exec('mkodkadd','kody_kresk',null,_scean,'');
      EANP.SCEAN:=_scean;
      EANP.put(1)
   ?}
|| FUN.info('Operacja dostępna dla indeksów materiałowych z identyfikacją wg Dostawy.'@)
?};
''


\zl2eanp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przypisuje zlecenie i wydzial do zaznaczonych EANP
::  OLD: \zl2eanp/ean.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__eanpzl');
ZAKR.win_edit('WYP_ZL');
ZAKR.ZL01:=ZAKR.ZL02:='';
ZAKR.ZL:=ZAKR.WYDEAN:=null;

{? EANN.STAN<>'Z'
|| FUN.info('Operacja dostępna wyłącznie dla operacji zakończonej.'@)
|? EANN.REFSQL<>'' & (';zdnag;zknag;'*(5+EANN.REFSQL))>1
|| FUN.info('Wskazano zamówienie powiązane z daną operacją.\nPrzypisanie zlecenia niemożliwe.'@)
|? EANN.RODZ='W'
|| __eanpzl:=1;
   _err:=0;
   _pal:=0;
   _tab:=EANP.sel_aget();
   EANP.sel_adel();
   EANP.cntx_psh();
   {? (_ile:=_tab.size())>0 & FUN.ask('Czy przypisać wybrane zlecenie dla zaznaczonych pozycji?'@)
    & ZAKR.edit("exec('chkzlwyd','magazyn_mob')") & _tab.first()
   || {!
      |? {? (EANP.clear(); EANP.seek(_tab.REF,))
         || {? EANP.LOKZ().MG().PAL='T'
            || _pal+=1
            || EANP.ZL:=ZAKR.ZL;
               EANP.WYD:=ZAKR.WYDEAN;
               {? exec('ctrlzldk','magazyn_mob',1,null)
               || EANP.put(1)
               || _err+=1
               ?}
            ?}
         ?};
         _tab.next()
      !};
      {? _err>0 | _pal>0
      || FUN.info({? _err>0 & _pal>0
                  || 'Nieprawidłowe przypisania zlecenia dla danego materiału (limit, definicja zlecenia).\n'
                     'Nie przypisano zlecenia do %1 z %2 zaznaczonych pozycji operacji.\n'
                     'Funkcja niedostępna dla pozycji w magazynie z obsługą palet '
                     '(pominięto: %3 pozycji).'@[form(_err,,0,'99'),form(_ile,,0,'99'),form(_pal,,0,'99')]
                  |? _err>0
                  || 'Nieprawidłowe przypisania zlecenia dla danego materiału (limit, definicja zlecenia).\n'
                     'Nie przypisano zlecenia do %1 z %2 '
                     'zaznaczonych pozycji operacji.'@[form(_err,,0,'99'),form(_ile,,0,'99')]
                  |? _pal>0
                  || 'Funkcja niedostępna dla pozycji w magazynie z obsługą palet '
                     '(pominięto: %1 pozycji).'@[form(_pal,,0,'99')]
                  || ''
                  ?})
      ?}
   |? EANP.LOKZ().MG().PAL='T'
   || FUN.info('Funkcja niedostępna dla pozycji w magazynie z obsługą palet.'@)
   |? FUN.ask('Czy przypisać zlecenie dla danej pozycji?'@) & ZAKR.edit("exec('chkzlwyd','magazyn_mob')")
   || EANP.ZL:=ZAKR.ZL;
      EANP.WYD:=ZAKR.WYDEAN;
      {? exec('ctrlzldk','magazyn_mob',1,null)
      || EANP.put(1)
      || FUN.info('Nieprawidłowe przypisanie zlecenia dla danego materiału (limit, definicja zlecenia).\n'
                  'Nie przypisano zlecenia do pozycji operacji.'@)
      ?}
   ?};
   EANP.cntx_pop()
|| FUN.info('Operacja dostępna wyłącznie dla operacji wewnętrznych.'@)
?};
VAR_DEL.delete('__eanpzl');
~~


\chkzlwyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sparwdza czy podano zlecenie i wydzial
::   WY: ''-jest ok lub akronim niewypelnionego pola
::  OLD: \chkzlwyd/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_prod:=exec('tte_lic','tte');
_wyn:='';
{? ZAKR.ZL=null | ZAKR.ZL01=''
|| FUN.info('Należy podać zlecenie.'@);
   _wyn:='ZL01'
|? _prod='T' & ZAKR.WYDEAN=null
|| FUN.info('Należy podać wydział.'@);
   _wyn:='KOD'
?};
_wyn


\realeann_inw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: realizacja operacji
::   WE: [_a] - automatyczna realizacja 0-(domyslnie) nie 1-tak
::       [_b] - wartość zmiennej _wyp
::   WY: klucz grupujący lub pusty string
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
_wyp:=_b;
_wyn:='';

_mp:=params_get().mp;
_in:=params_get().in;
_akcja:=_mp.akcja();

_real:=1;

VAR_DEL.delete('__magik','__eanp','__eazkp','__zamdst','__gennd','__reazew','__addeanp','__poznd','__onlyzw'
              ,'__pal_p');
__magik:=tab_tmp(2,'MG1','STRING[16]',''
          ,'MG2','STRING[32]','');
__eanp:=tab_tmp(3,'MG1','STRING[16]',''
         ,'MG2','STRING[32]',''
         ,'LP','INTEGER',''
         ,'EANP','STRING[16]',''
         ,'EANN','STRING[16]','');
__eazkp:=tab_tmp(4,'ZKN','STRING[32]',''
          ,'ZKP','STRING[16]',''
          ,'MAT','STRING[16]',''
          ,'SCEAN','STRING[128]',''
          ,'ILR','REAL',''
          ,'ILW','REAL',''
          ,'DOD','INTEGER',''
          ,'MAG','STRING[16]',''
          ,'ILP','REAL',''
          ,'LOK','STRING[16]',''
          ,'TRM','DATE',''
          ,'REF','STRING[16]','');
__gennd:=tab_tmp(4,'WYB','STRING[1]',''
          ,'MGS','STRING[10]',''
          ,'SYM','STRING[20]',''
          ,'SQL','STRING[16]','');
__pal_p:=tab_tmp(2,'PAL','STRING[16]',''
           ,'MAT','STRING[16]',''
           ,'POZ','STRING[16]',''
           ,'DST','STRING[16]',''
           ,'LOK','STRING[16]','');

__onlyzw:=0;
ZAKR.TEANP1:='';
ZAKR.TEANP2:='';
ZAKR.RP:='D';

:: inwentura
_tab:=EANN.sel_aget(); EANN.sel_adel();
EANN.cntx_psh();
{? _tab.size()
|| _tab.clear();
   {? _tab.first() & {? ~_a || _opc:=1 || _opc:=2 ?}
   ||
      _grp_key:=tm_stamp()+'1';
::       magazyny dla inwentaryzacji
      exec('pob_mag','magazyn_mob',_tab,2);
::       lista niezaakceptowanych dokumentow
      _ok:=1;
      {? exec('spr_znag','magazyn_inw',date(),2,,,__magik)=1
      || {? FUN.ask('Istnieją niezaakceptowane dokumenty w magazynach\n'
                    'lub niezaakceptowane dokumenty sprzedaży generujące dokumenty w magazynach.\n'
                    '\nNiemożliwe wprowadzenie arkusza inwentaryzacji dla poszczególnych magazynów.'
                    '\n\nWyświetlić niezaakceptowane dokumenty?'@)
         || X_Xc.select()
         ?};
         VAR_DEL.delete('X_Xc');
         _ok:=2
      ?};
      {? _ok
      ||
         do();
         __magik.clear();
         {? __magik.first()
         || {!
           |? __eanp.clear();
               __eanp.prefix(__magik.MG1,__magik.MG2);
               {? __eanp.first()
               ||
::                zakladamy arkusz
                  _mg:=exec('FindAndGet','#table','MG',__magik.MG1,,,null());

                  {? {? _opc=1
                     || (_inn:=exec('wyb_inn','magazyn_inw',_mg); _inn>0)
                     || {? ~_a
                        || (_inn:=exec('wyb_inn','magazyn_inw',_mg); _inn>0)
                        || (_inn:=exec('wyb_inn','magazyn_inw',_mg,1,ZAKR.DP-_okres,ZAKR.DP+_okres,_ok=2); _inn>0)
                        ?}
                     ?}
                    & (_inx:=exec('add_innx','magazyn_inw',0,_inn,_grp_key))<>null
                  || _idzam:=exec('FindAndGet','#table',INX,_inx,,"IDADD",'');
                     _wyn:=_grp_key;
                     {!
                     |? {? (EANP.clear; EANP.seek(__eanp.EANP,EANP.name()))
                        || {? EANP.PALEAN<>'' & EANP.EAN<>'' & EANP.EAN<>EANP.PALEAN
                           || EANP.M:=exec('FindInSet','#table','M','KODK',EANP.EAN,EANP.EAN);
                              EANP.put(1)
                           ?};
                           _palref:={? EANP.M<>null() & EANP.PALEAN<>''
                                    || exec('FindInSet','#table','PAL','PAL',EANP.PALEAN,EANP.PALEAN)
                                    || EANP.PAL
                                    ?};
                           _pozpal:=EANP.M<>null() & _palref<>null();
                           _dk_c:={? EANP.M().M_ATR<>null()
                                  || _waratr:='';
                                     {! _ii:=1..10
                                     |! _waratr+={? ($'EANP.M().M_ATR().SL_%1'[form(_ii,-2,0,'99')])()<>null()
                                                 || form(($'EANP.WAR%1'[form(_ii,-2,0,'99')])())
                                                 || ''
                                                 ?}
                                     !};
                                     {? _waratr<>''
                                     || exec('m_atr_sprdod','mat_atr'
                                         ,EANP.WAR01,EANP.WAR02,EANP.WAR03,EANP.WAR04,EANP.WAR05
                                         ,EANP.WAR06,EANP.WAR07,EANP.WAR08,EANP.WAR09,EANP.WAR10
                                         ,EANP.M().M_ATR,null())
                                     || null()
                                     ?}
                                  || null()
                                  ?};
                           exec('add_inny','magazyn_inw',_inx,EANP.M,EANP.ILS,EANP.LOKZ,$EANP.ref()
                            ,EANP.TW,_palref,~_pozpal,EANP.SCEAN,,_dk_c);
                           EANP.RSQL:=$INY.ref();
                           EANP.put();
                           {? EANP.PAL<>null() & EANP.M<>null()
                           || __pal_p.prefix();
                              __pal_p.prefix($EANP.PAL);
                              {? __pal_p.first()
                              || {? __pal_p.find_tab('first','PAL',,'=',$EANP.PAL,'MAT',,'=',$EANP.M)
                                 || {!
                                    |? _refpoz:=__pal_p.ref();
                                       _next:=__pal_p.find_tab('next','PAL',,'=',$EANP.PAL,'MAT',,'=',$EANP.M);
                                       __pal_p.cntx_psh();
                                       __pal_p.prefix();
                                       {? __pal_p.seek(_refpoz) || __pal_p.del() ?};
                                       __pal_p.cntx_pop();
                                       _next
                                    !}
                                 ?}
                              || PAL.cntx_psh();
                                 PAL_POZ.cntx_psh();
                                 PAL.use('palety');
                                 {? EANP.PAL().AKT='N'
                                 || PAL_POZ.use('palet'+form(EANP.PAL().AR-2000,-2,0,'99'))
                                 || PAL_POZ.use('paletyp')
                                 ?};

                                 PAL_POZ.index('PAL');
                                 PAL_POZ.prefix(EANP.PAL);
                                 {? PAL_POZ.first()
                                 || {!
                                    |? {? PAL_POZ.ILP>0 & PAL_POZ.AKT<>'N' & PAL_POZ.M<>EANP.M
                                       || __pal_p.prefix();
                                          __pal_p.blank();
                                          __pal_p.PAL:=$PAL_POZ.PAL;
                                          __pal_p.MAT:=$PAL_POZ.M;
                                          __pal_p.POZ:=$PAL_POZ.ref();
                                          __pal_p.DST:=PAL_POZ.SCSQL;
                                          __pal_p.LOK:=$EANP.LOKZ;
                                          __pal_p.add(1)
                                       ?};
                                       PAL_POZ.next()
                                    !}
                                 ?};
                                 PAL.cntx_pop();
                                 PAL_POZ.cntx_pop()
                              ?}
                           ?};
                           EANN.cntx_psh();
                           {? (EANN.clear(); EANN.seek(EANP.EANN))
                           || EANN.REFSQL:=$_inx;
                              EANN.IDZAM:=_idzam;
                              EANN.put()
                           ?};
                           EANN.cntx_pop()
                        ?};
                        __eanp.next()
                     !};
                     __pal_p.prefix();
                     {? __pal_p.first()
                     || PAL.cntx_psh();
                        PAL_POZ.cntx_psh();
                        {!
                        |? PAL.use(form(8+__pal_p.PAL));
                           PAL_POZ.use(form(8+__pal_p.POZ));
                           PAL_POZ.prefix();
                           {? PAL_POZ.seek(__pal_p.POZ)
                           || exec('add_inny','magazyn_inw',_inx,PAL_POZ.M,0
                               ,exec('FindAndGet','#table',EANL,__pal_p.LOK,,,null()),''
                               ,PAL_POZ.TW,PAL_POZ.PAL,0,PAL_POZ.SCEAN,,PAL_POZ.DK_C)
                           ?};
                           __pal_p.next()
                        !};
                        PAL.cntx_pop();
                        PAL_POZ.cntx_pop()
                     ?};
                     INX.r_unlock()
                  || FUN.info('Nie wygenerowano arkuszy inwentaryzacyjnych.'@);
                     undo()
                  ?}
               ?};
               __magik.next()
            !};
::          przeniesienie do archiwum
            _tab.clear();
            {? _tab.first()
            || {!
               |? {? (EANN.clear(); EANN.seek(_tab.REF,EANN.name())) & EANN.STAN='Z' & (3+EANN.REFSQL)='inw'
                  || EANN.STAN:='+';
                     EANN.put(1);
                     exec('archeann','magazyn_mob',EANN.ref())
                  ?};
                  _tab.next()
               !}
            ?}
         ?};
         end()
      ?}
   ?}
|| {? EANN.STAN='Z' & ~exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
   || FUN.info('W obecnej chwili nie wszystkie pozycje operacji zostały zaktualizowane.\n'
               'Realizacja operacji niemożliwa.'@)
   |? EANN.STAN='Z'
   ||
      {? {? ~_a
         || _opc:=1
         || _opc:=2
         ?}
      || _grp_key:=tm_stamp()+'1';
::       magazyny dla lokalizacji i przesunięć
         {? EANN.MG=null || EANN.MG:=ST.MAG; EANN.put(1) ?};
         exec('pob_mag','magazyn_mob',,1);
::       lista niezaakceptowanych dokumentów
         _ok:=1;
         ZAKR.DP:=date();
         _okres:=0;
         {? _a | ~_a
         || ZAKR.DP:=EANN.DATA+_in.OKR;
            _okres:=_in.OKR
         ?};
         {? exec('spr_znag','magazyn_inw',ZAKR.DP,2,,,__magik)=1
         || {? ~_a
            || {? FUN.ask('Istnieją niezaakceptowane dokumenty w magazynach\n'
                          'lub niezaakceptowane dokumenty sprzedaży generujące dokumenty w magazynach.\n'
                          '\nNiemożliwe wprowadzenie arkusza inwentaryzacji dla poszczególnych magazynów.'
                          '\n\nWyświetlić niezaakceptowane dokumenty?'@)
               || X_Xc.select()
               ?}
            ?};
            VAR_DEL.delete('X_Xc');
            _ok:=2
         ?};
         _inx:='';
         {? _ok
         || _err:=0;
            do();
            __magik.clear();
            {? __magik.first()
            || {!
               |? __eanp.clear();
                  __eanp.prefix(__magik.MG1,__magik.MG2);
                  {? __eanp.first()
                  ||
::                      zakladamy arkusz

                     _mg:=exec('FindAndGet','#table','MG',__magik.MG1,,,null());

                     {? {? _opc=1
                        || (_inn:=exec('wyb_inn','magazyn_inw',_mg); _inn>0)
                        || {? ~_a
                           || (_inn:=exec('wyb_inn','magazyn_inw',_mg); _inn>0)
                           || (_inn:=exec('wyb_inn','magazyn_inw',_mg,1,ZAKR.DP-_okres,ZAKR.DP+_okres,_ok=2); _inn>0)
                           ?}
                        ?}
                       & (_inx:=exec('add_innx','magazyn_inw',0,_inn,_grp_key))<>null
                     || _idzam:=exec('FindAndGet','#table',INX,_inx,,"IDADD",'');
                        _wyn:=_grp_key;
                        {!
                        |? {? (EANP.clear; EANP.seek(__eanp.EANP,EANP.name()))
                           || {? EANP.PALEAN<>'' & EANP.EAN<>'' & EANP.EAN<>EANP.PALEAN
                              || EANP.M:=exec('FindInSet','#table','M','KODK',EANP.EAN,EANP.EAN);
                                 EANP.put(1)
                              ?};
                              _palref:={? EANP.M<>null() & EANP.PALEAN<>''
                                       || exec('FindInSet','#table','PAL','PAL',EANP.PALEAN,EANP.PALEAN)
                                       || EANP.PAL
                                       ?};
                              _pozpal:=EANP.M<>null() & _palref<>null();
                              _dk_c:={? EANP.M().M_ATR<>null()
                                     || _waratr:='';
                                        {! _ii:=1..10
                                        |! _waratr+={? ($'EANP.M().M_ATR().SL_%1'[form(_ii,-2,0,'99')])()<>null()
                                                    || form(($'EANP.WAR%1'[form(_ii,-2,0,'99')])())
                                                    || ''
                                                    ?}
                                        !};
                                        {? _waratr<>''
                                        || exec('m_atr_sprdod','mat_atr'
                                            ,EANP.WAR01,EANP.WAR02,EANP.WAR03,EANP.WAR04,EANP.WAR05
                                            ,EANP.WAR06,EANP.WAR07,EANP.WAR08,EANP.WAR09,EANP.WAR10
                                            ,EANP.M().M_ATR,null())
                                        || null()
                                        ?}
                                     || null()
                                     ?};
                              exec('add_inny','magazyn_inw',_inx,EANP.M,EANP.ILS,EANP.LOKZ,$EANP.ref()
                               ,EANP.TW,_palref,~_pozpal,EANP.SCEAN,,_dk_c);
                              EANP.RSQL:=$INY.ref();
                              EANP.put();
                              {? EANP.PAL<>null() & EANP.M<>null()
                              || __pal_p.prefix();
                                 __pal_p.prefix($EANP.PAL);
                                 {? __pal_p.first()
                                 || {? __pal_p.find_tab('first','PAL',,'=',$EANP.PAL,'MAT',,'=',$EANP.M)
                                    || {!
                                       |? _refpoz:=__pal_p.ref();
                                          _next:=__pal_p.find_tab('next','PAL',,'=',$EANP.PAL,'MAT',,'=',$EANP.M);
                                          __pal_p.cntx_psh();
                                          __pal_p.prefix();
                                          {? __pal_p.seek(_refpoz) || __pal_p.del() ?};
                                          __pal_p.cntx_pop();
                                          _next
                                       !}
                                    ?}
                                 || PAL.cntx_psh();
                                    PAL_POZ.cntx_psh();
                                    PAL.use('palety');
                                    {? EANP.PAL().AKT='N'
                                    || PAL_POZ.use('palet'+form(EANP.PAL().AR-2000,-2,0,'99'))
                                    || PAL_POZ.use('paletyp')
                                    ?};

                                    PAL_POZ.index('PAL');
                                    PAL_POZ.prefix(EANP.PAL);
                                    {? PAL_POZ.first()
                                    || {!
                                       |? {? PAL_POZ.ILP>0 & PAL_POZ.AKT<>'N' & PAL_POZ.M<>EANP.M
                                          || __pal_p.prefix();
                                             __pal_p.blank();
                                             __pal_p.PAL:=$PAL_POZ.PAL;
                                             __pal_p.MAT:=$PAL_POZ.M;
                                             __pal_p.POZ:=$PAL_POZ.ref();
                                             __pal_p.DST:=PAL_POZ.SCSQL;
                                             __pal_p.LOK:=$EANP.LOKZ;
                                             __pal_p.add(1)
                                          ?};
                                          PAL_POZ.next()
                                       !}
                                    ?};
                                    PAL.cntx_pop();
                                    PAL_POZ.cntx_pop()
                                 ?}
                              ?};
                              EANN.get();
                              EANN.REFSQL:=$_inx;
                              EANN.IDZAM:=_idzam;
                              EANN.put()
                           ?};
                           __eanp.next()
                        !};
                        __pal_p.prefix();
                        {? __pal_p.first()
                        || PAL.cntx_psh();
                           PAL_POZ.cntx_psh();
                           {!
                           |? PAL.use(form(8+__pal_p.PAL));
                              PAL_POZ.use(form(8+__pal_p.POZ));
                              PAL_POZ.prefix();
                              {? PAL_POZ.seek(__pal_p.POZ)
                              || exec('add_inny','magazyn_inw',_inx,PAL_POZ.M,0
                                  ,exec('FindAndGet','#table',EANL,__pal_p.LOK,,,null()),''
                                  ,PAL_POZ.TW,PAL_POZ.PAL,0,PAL_POZ.SCEAN,,PAL_POZ.DK_C)
                              ?};
                              __pal_p.next()
                           !};
                           PAL.cntx_pop();
                           PAL_POZ.cntx_pop()
                        ?};
                        INX.r_unlock()
                     || undo();
                        _err:={? _inn<0 || 1 || 2 ?}
                     ?}
                  ?};
                  __magik.next()
               !};
               {? (3+EANN.REFSQL)='inw'
               || EANN.STAN:='+';
                  EANN.put(1);
                  exec('archeann','magazyn_mob',EANN.ref())
               ?}
            ?};
            end();
            {? ~_a & _err
            || {? _err=1
               || FUN.info('Brak otwartych arkuszy spisowych.\n'
                           'Przeniesienie operacji na arkusz niemożliwe.'@)
               || FUN.info('Nie wygenerowano arkuszy inwentaryzacyjnych (wg arkuszy pomocniczych).'@)
               ?}
            ?}
         ?}
      ?}
   || {? ~_a || FUN.info('Inwentaryzacja nieskompletowane.\nGeneracja arkusza niemożliwa.'@) ?}
   ?}
?};
EANN.cntx_pop();
VAR_DEL.delete('__magik','__pozy','__eazkp','__zamdst','__gennd','__reazew','__poznd','__onlyzw','__pal_p');
:: 'activate:browse'
_wyn


\realeann_kpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: realizacja operacji
::   WE: [_a] - sposób uruchomienia 1-przegląd(obszar roboczy) 0-nie
::       [_b] - automatyczna realizacja 0-(domyslnie) nie 1-tak
::       [_c] - 1-czy wystawic fakture 0-nie(domyslnie)
::       [_d] - wartość zmiennej _wyp
::       [_e] - klucz grupujący
::   WY: klucz grupujący lub pusty string
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
{? _>=5 || {? type_of(_e)<>2 || _e:='' ?} || _e:='' ?};

_wyp:=_d;
_wyn:='';

_real:=1;

_mp:=params_get().mp;
_in:=params_get().in;
_akcja:=_mp.akcja();

VAR_DEL.delete('__magik','__eanp','__eazkp','__zamdst','__gennd','__reazew','__addeanp','__poznd','__onlyzw','__isope');
__isope:=1;
__magik:=tab_tmp(2,'MG1','STRING[16]',''
          ,'MG2','STRING[32]','');
__eanp:=tab_tmp(3,'MG1','STRING[16]',''
         ,'MG2','STRING[32]',''
         ,'LP','INTEGER',''
         ,'EANP','STRING[16]',''
         ,'EANN','STRING[16]','');
__eazkp:=tab_tmp(5,'ZKN','STRING[32]',''
          ,'ZKP','STRING[16]',''
          ,'MAT','STRING[16]',''
          ,'SCEAN','STRING[128]',''
          ,'GS1','STRING[16]',''
          ,'ILR','REAL',''
          ,'ILW','REAL',''
          ,'DOD','INTEGER',''
          ,'MAG','STRING[16]',''
          ,'ILP','REAL',''
          ,'LOK','STRING[16]',''
          ,'TRM','DATE',''
          ,'REF','STRING[16]',''
          ,'USL','STRING[1]','');
__gennd:=tab_tmp(4,'WYB','STRING[1]',''
          ,'MGS','STRING[10]',''
          ,'SYM','STRING[20]',''
          ,'SQL','STRING[16]','');

__onlyzw:=0;
ZAKR.TEANP1:='';
ZAKR.TEANP2:='';
ZAKR.RP:='D';

VAR_DEL.delete('__refrea','__dostpal','__matakt','__stnmat','__kolmag','__bufrez');
exec('init_blk','zamsiw_nag');
__dostpal:=tab_tmp(2,'PAL','STRING[16]',''
            ,'M','STRING[16]',''
            ,'ILR','REAL',''
            ,'ILP','REAL',''
            ,'RDK','REAL',''
            ,'NDK','STRING[8]',''
            ,'KOD','STRING[30]',''
            ,'LOK','STRING[30]',''
            ,'TW','DATE',''
            ,'PALDO','STRING[16]',''
            ,'POZ','STRING[16]',''
            ,'ROZPAL','INTEGER',''
            ,'LOKDO','STRING[30]','');
__matakt:=tab_tmp(2,'REF','STRING[16]',''
           ,'NRK','INTEGER',''
           ,'ILR','REAL',''
           ,'ZKP','STRING[16]',''
           ,'ZKN','STRING[16]','');
__stnmat:=tab_tmp(2,'MAT','STRING[16]',''
           ,'MAG','STRING[16]',''
           ,'ILE','REAL',''
           ,'ILR','REAL','');
__kolmag:=tab_tmp(2,'REA','STRING[16]',''
           ,'MAG','STRING[16]',''
           ,'NRK','INTEGER','');
_poz2dk:=tab_tmp(1,'ZKP','STRING[16]',''
           ,'MAG','STRING[16]',''
           ,'ILE','REAL','');
__bufrez:=tab_tmp(2,'ZKP','STRING[16]',''
           ,'MAT','STRING[16]',''
           ,'ODD','DATE',''
           ,'DOD','DATE',''
           ,'ILR','REAL',''
           ,'ILW','REAL','');
_loks:=tab_tmp(1,'REF','STRING[16]','');

BEER.MW:='Z';
BEER.SZ:='S';
BEER.ZAK:='N';
BEER.KOR:='N';
exec('ustaw_ww','eurusd','Z');
:: sprawdzenie zaznaczenia kilku wysyłek
_eans:=EANN.sel_aget();
EANN.sel_adel();
{? ~_eans.size()
|| _eans.blank();
   _eans.REF:=#EANN.ref();
   _eans.add(1)
?};

_many:=_eans.size>1;

_first:=0;
_nag:=null();
_grp_key:=_e;
__refrea:='';
_lock:=-1;

EANN.cntx_psh();
ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
_eans.clear();
{? _eans.first()
|| {!
   |? EANN.cntx_psh();
      {? (EANN.clear(); EANN.seek(_eans.REF,))
      || _zero:=exec('zero_ils','magazyn_mob',EANN.ref());
         _sprpal:=exec('sprapal','magazyn_mob',EANN.ref());
         {? EANN.STAN<>'Z'
         || _real:=0;
            {? ~_b
            || FUN.info('Operacja kompletacji wysyłki nie została zakończona na urządzeniu mobilnym.\n'
                        'Realizacja operacji niemożliwa.'@)
            ?}
         |? EANN.STAN='Z' & ~exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
         || _real:=0;
            {? ~_b
            || FUN.info('W obecnej chwili nie wszystkie pozycje operacji zostały zaktualizowane.\n'
                        'Realizacja operacji niemożliwa.'@)
            ?}
         |? EANN.STAN='Z' & _zero
          & {? ~_b
            || {? _zero<0
               || FUN.ask('Wszystkie pozycje operacji oprócz usług mają ilość odczytaną równą zero.\n'
                          'Czy anulować wysyłkę?'@)
               || FUN.ask('Wszystkie pozycje operacji mają ilość odczytaną równą zero.\nCzy anulować wysyłkę?'@)
               ?}
            || 0
            ?}
         || _real:=0;
            {? ~_b || exec('anuleann','magazyn_mob',0) ?}
         |? EANN.STAN='Z' & ~_sprpal
         || _real:=0;
            {? ~_b
            || FUN.info('Nie wszystkie palety na pozycjach operacji zostały wprowadzone i zaakceptowane w systemie.\n'
                        'Realizacja operacji niemożliwa.'@)
            ?}
         |? EANN.STAN='Z' & ~_zero & (_lock:=EANN.r_lock(1,1,1))
          & {? ~_b
            || {? ~_first & ~_many
               || FUN.ask({? ~_many || 'Czy realizować wysyłkę?'@ || 'Czy realizować wysyłki?'@ ?})
               || 1
               ?}
            || 1
            ?}
         || _first:=1;
            _loks.blank();
            _loks.REF:=$EANN.ref();
            _loks.add(1);
            _nag:=null;
            {? _grp_key='' || _grp_key:=tm_stamp()+'1' ?};
::    do realizacji przez palety
            EANN.STAN:='!';
            EANN.put(1);
            _czyzpal:=0;
            {? ~(_czyzpal:=exec('zwgpalet','magazyn_mob',EANN.ref()))
            || EANN.STAN:='Z';
               EANN.put(1)
            ?};

            EANP.index('EANN');
            EANP.prefix(EANN.ref());
            {? EANP.first()
            || _exit:=0;
               {!
               |? {? (EANP.ILS>0 | (EANP.IL>0 & EANP.RSQL<>'' & EANP.M().SETW<>'P')) & EANP.M<>null()
                  || {? _nag=null()
                     || ZK_N.clear();
                        {? ZK_N.seek(EANN.REFSQL,form(8+EANN.REFSQL))
                        || {? exec('add_blk','zamsiw_nag',ZK_N.ref())
                           || {? __refrea='' || __refrea:=($ZK_N.tm_stamp())+($OPERATOR.USER) ?};
                              _nag:=ZK_N.ref();
                              exec('pop_eanr','magazyn_mob',EANN.ref(),_nag,EANN.TYP='W');
                              BEER.ZK_N:=ZK_N.ref();
                              BEER.WG:=ZK_N.WG;
                              _kh:=ZK_N.KH;
                              _odb:=ZK_N.ODB;
                              BEER.TYP:='Z';
                              ZAKR.TYPYSP:=ZK_N.TR().T;
                              exec('buf_stap','zamsiw_wspolne',BEER.ZK_N,BEER.TYP,,2);
                              exec('buf_rez','rezerwacje',BEER.ZK_N);
                              _fk:=0;
                              _war_be:=ZK_N.BRT
                           || _exit:=1;
                              _real:=0;
                              {? ~_b & FUN.ask('Zamówienie obsługuje inny operator.\nCzy chcesz zobaczyć kto?'@)
                               & ZK_N.r_lock()
                              || ZK_N.r_unlock()
                              ?}
                           ?}
                        ?}
                     ?};
                     {? EANN.TYP<>'W' & (EANP.ILS>0 | (EANP.IL>0 & EANP.RSQL<>'' & EANP.M().SETW<>'P'))
                     || _ileprz:={? EANP.IL>0 & EANP.ILS>EANP.IL || 0 || EANP.IL ?};
                        _scean:={? EANP.SCEAN<>'' || EANP.SCEAN || 'xxxx' ?};
                        _gs1:={? _ileprz>0 & exec('ctrlEANW','magazyn_mob',EANP.ref(),EANP.M) || $EANP.ref() || 'N' ?};
                        __eazkp.clear();
                        __eazkp.prefix($_nag+$EANN.ref());
                        {? ~_czyzpal
                         & __eazkp.find_key({? EANP.RSQL='' | ~_ileprz || 'null' || EANP.RSQL ?},$EANP.M,_scean,_gs1)
                        || __eazkp.ILR+=EANP.ILS;
                           __eazkp.ILP+=_ileprz;
                           __eazkp.put(1)
                        || __eazkp.blank();
                           __eazkp.ZKN:=$_nag+$EANN.ref();
                           __eazkp.ZKP:={? EANP.RSQL='' | ~_ileprz || 'null' || EANP.RSQL ?};
                           __eazkp.ILR:=EANP.ILS;
                           __eazkp.MAT:=$EANP.M;
                           __eazkp.MAG:=$EANP.LOKZ().MG;
                           __eazkp.DOD:=0;
                           __eazkp.ILP:=_ileprz;
                           __eazkp.LOK:=$EANP.LOKZ;
                           __eazkp.TRM:=EANP.TW;
                           __eazkp.REF:=$EANP.ref();
                           __eazkp.SCEAN:=_scean;
                           __eazkp.USL:={? EANP.M<>null() & EANP.M().RODZ='U' || 'T' || 'N' ?};
                           __eazkp.GS1:=_gs1;
                           __eazkp.add(1)
                        ?}
                     ?}
                  ?};
                  ~_exit & EANP.next()
               !};
               {? _nag<>null
               || exec('rozpeanp','magazyn_mob',_nag,EANN.ref());
                  __eazkp.clear();
                  __eazkp.prefix($_nag+$EANN.ref());
                  {? __eazkp.first()
                  || {!
                     |? {? __eazkp.ILR>0 & __eazkp.USL='T' & __eazkp.ZKP<>'null'
                        || ZK_P.cntx_psh();
                           ZK_P.prefix();
                           {? ZK_P.seek(__eazkp.ZKP)
                           || exec('one_prea','zamsiw_rea',null,ZK_P.ref(),__eazkp.ILR,ZK_P.RMAG,ZK_P.TOP,__refrea
                               ,null,1,,-1,null(),0)
                           ?};
                           ZK_P.cntx_pop()
                        |? __eazkp.ILR>0
                        || _pozost:={? ~_czyzpal & __eazkp.ZKP<>'null'
                                    || exec('uzup_rez','rezerwacje',__eazkp.ZKP,__eazkp.ILR
                                        ,{? __eazkp.SCEAN='xxxx' || 'xxxxx' || __eazkp.SCEAN ?},1
                                        ,exec('FindAndGet','#table',MG,__eazkp.MAG,,,null()),__eazkp.TRM,__eazkp.GS1)
                                    || __eazkp.ILR
                                    ?};
                           {? _pozost>0 & __eazkp.ZKP<>'null'
                           || _poz2dk.clear();
                              {? _poz2dk.find_key(__eazkp.ZKP)
                              || _poz2dk.ILE+=_pozost
                              || _poz2dk.blank();
                                 _poz2dk.ZKP:=__eazkp.ZKP;
                                 _poz2dk.ILE:=_pozost;
                                 _poz2dk.MAG:=__eazkp.MAG;
                                 _poz2dk.add(1)
                              ?}
                           ?}
                        ?};
                        __eazkp.next()
                     !}
                  ?}
               ?}
            ?}
         |? ~_b & ~_lock
         || {? FUN.ask('Operację obsługuje inny operator.\nCzy chcesz zobaczyć kto?'@) & EANN.r_lock()
            || EANN.r_unlock()
            ?}
         ?}
      ?};
      EANN.cntx_pop();
      _eans.next()
   !};

   {? _nag<>null
   || {? _czyzpal & BEER.ZK_N().MG().TYP*'DOST'
      || ZK_RP.index('NAGA');
         ZK_RP.prefix(__refrea,null);
         {? ZK_RP.first() || {! |? ZK_RP.del() !} ?};
         exec('akt_stap','zamsiw_wspolne',BEER.ZK_N,BEER.TYP);
         exec('pal2dost','zamsiw_palety',1);
         ''
      ?};
      {? _b | ~_b
      || ZAKR.RP:='D';
         ZAKR.DR:=EANN.DATA+_in.OKR;
         ZAKR.TYPYDOK:=exec('FindAndGet','#table',TYPYDOK,_in.TYPYDOK,,"T",'');
         ZAKR.TYPYSP:='';
         ZAKR.MD:=_in.MD;
         EANX.BEZTW:=_in.CZYTW='T'
      ?};
      _fk:=_c;
      ZK_RP.index('NAGA');
      ZK_RP.prefix(__refrea);
      {? ZK_RP.last() || {! |? ZK_RP.W:={? ZK_RP.ILR>0 || '*' || '' ?}; ZK_RP.put(1); ZK_RP.prev() !} ?};
      params_set('in',_in);
      __ilplus:=0;
      _oki:=exec('add_doki','zamsiw_rea',_fk,_kh,_odb,__refrea,EANN.ref(),,_b,_poz2dk,_grp_key,_loks);

      {? _oki || _wyn:=_grp_key ?};
      exec('anul_bez','zamsiw_rea');
      exec('unbufrez','rezerwacje');
      ZK_RP.index('NAGA');
      ZK_RP.prefix(__refrea,null);
      {? ZK_RP.first() || {! |? ZK_RP.del() !} ?};
      exec('anul_bez','zamsiw_rea');
      exec('akt_rezy','rezerwacje');
      POM.TAB:='ZK_N';
      POM.TYPDOK:=BEER.TYPYZAM().KOD;
      ZK_N.cntx_psh();
      __blkrez.clear();
      {? __blkrez.first()
      || {!
         |? ZK_N.clear();
            {? ZK_N.seek(__blkrez.SQL,form(8+__blkrez.SQL))
            || BEER.ZK_N:=ZK_N.ref();
               BEER.TYP:='Z';
               exec('akt_stap','zamsiw_wspolne',BEER.ZK_N,BEER.TYP)
            ?};
            __blkrez.next()
         !}
      ?};
      ZK_N.cntx_pop()
   || _oki:=0
   ?};
   _loks.clear();
   {? _loks.first()
   || {!
      |? {? EANN.clear(); EANN.seek(_loks.REF) || EANN.r_unlock() ?};
         _loks.next()
      !}
   ?}
?};
EANN.cntx_pop();
ZK_N.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();

obj_del(_poz2dk); obj_del(_loks);
exec('done_blk','zamsiw_nag');
VAR_DEL.delete('__refrea','__dostpal','__matakt','__stnmat','__kolmag','__bufrez');
VAR_DEL.delete('__magik','__pozy','__eazkp','__zamdst','__gennd','__reazew','__poznd','__onlyzw','__isope');
:: 'activate:browse'
_wyn


\zero_ils
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Sprawdza czy istnieja pozycje tylko zerowe pole ILS
::   WE: _a - ref EANN
::   WY: 1-tylko zerowe 0-rozne -1-tylko usługi
::  OLD: \zero_ils/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_usl:=0;

EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(_a);
{? EANP.first()
|| {!
   |? {? EANP.M<>null() & EANP.M().RODZ='U'
      || _usl:=1
      || _wyn:=EANP.ILS<=0
      ?};
      _wyn & EANP.next()
   !}
?};
EANP.cntx_pop();
{? _wyn & _usl || _wyn:=-1 ?};
_wyn


\sprapal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy wszystkie podane palety istnieja i sa zaakceptowane w systemie
::   WE: _a - ref EANN
::   WY: 1-OK 0-nie
::  OLD: \sprapal/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
EANN.cntx_psh();
EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(_a);
{? EANP.first()
|| {!
   |? {? EANP.ILS>0 & EANP.LOKZ<>null & EANP.LOKZ().MG().PAL='T' & EANP.PAL<>null
      || _wyn:=~('BN'*EANP.PAL().STAN)
      ?};
      _wyn & EANP.next()
   !}
?};
EANN.cntx_pop();
EANP.cntx_pop();
_wyn


\zwgpalet
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: rozpisuje pozycje operacji wg palet
::   WE: _a - ref EANN
::   WY: 1-sa 0-nie ma
::  OLD: \zwgpalet/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_bpp:=tab_tmp(1,'SQL','STRING[16]','','ILR','REAL','');
_buf:=tab_tmp(1,'SQL','STRING[16]','','ILR','REAL','');
_pal:=tab_tmp(1,'SQL','STRING[16]','');
_ean:=tab_tmp(1,'SQL','STRING[16]','','ZPALET','INTEGER','');

_wyn:=0;

EANN.cntx_psh();
EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(_a);
{? EANP.first()
|| _lp:=0;
   _refzkn:='';
   _mag:=ST.MAG;
   _rzkn:=BB.sqlint(EANP.EANN().REFSQL);
   _nzkn:=form(8+EANP.EANN().REFSQL);
   ZK_N.cntx_psh();
   ZK_P.cntx_psh();
   ZK_N.clear();
   {? _rzkn>0 & (ZK_N.clear(); ZK_N.r_lock(1,1,1,_rzkn,_nzkn) & ZK_N.seek(_rzkn,_nzkn)) & ZK_N.r_lock(1,1,1)
   || _refzkn:=$ZK_N.ref();
      ZK_P.index('ZAM');
      ZK_P.prefix(ZK_N.ref,PAL_POZ.M,1);
      {? ZK_P.first() || _mag:=ZK_P.RMAG ?}
   ?};
   ZK_N.cntx_pop();
   ZK_P.cntx_pop();
   {? _refzkn<>''
   ||
::    tworzy bufor odczytanych pozycji
      {!
      |? {? EANP.ZPALET=2 & EANP.ROZPAL>0 & EANP.PALDO=null()
         || _oldean:=EANP.PALDOEAN;
            EANP.PALDO:=exec('FindInSet','#table','PAL','NOPAL',EANP.LOKZ().MG,'B',,,,null());
            EANP.PALDOEAN:=EANP.PALDO().KODK;
            {? EANP.PALDOEAN='' || EANP.PALDOEAN:=_oldean ?};
            EANP.put(1)
         ?};
         {? ((EANP.LOKZ().MG().PAL='T'  & EANP.PAL<>null & EANP.ILS>0 & EANP.ZPALET=1)
           | (EANP.ZPALET=2 & EANP.ILS>0)
           | (EANP.ROZPAL%*1 & EANP.ILS>0))
          & (_pal.clear(); ~_pal.find_key($EANP.PAL))
         || _ean.clear();
            _ean.blank();
            _ean.SQL:=$EANP.ref();
            _ean.ZPALET:={? EANP.ROZPAL=3 || 3 || EANP.ZPALET ?};
            _ean.add(1);
            _pal.SQL:=$EANP.PAL;
            _pal.add(1)
         ?};
         EANP.next()
      !};
::    rozpisuje pozycje wg palet
      do();
      _ean.clear();
      {? _ean.first()
      || {!
         |? {? (EANP.clear(); EANP.seek(_ean.SQL))
            || {? _ean.ZPALET=1
               || {? EANP.PAL().AKT='N'
                  || PAL_POZ.use('palet'+form(EANP.PAL().AR-2000,-2,0,'99'))
                  || PAL_POZ.use('paletyp')
                  ?};
                  PAL_POZ.index('PAL');
                  PAL_POZ.prefix(EANP.PAL);
                  {? PAL_POZ.first()
                  || {!
                     |? _ilepal:=PAL_POZ.ILP;
                        _dost:={? PAL_POZ.SCSQL<>''
                               || (8+PAL_POZ.SCSQL)+form(BB.sqlint(PAL_POZ.SCSQL),-8,0,'99')
                               || exec('last_dst','magdok_palety',PAL_POZ.M,PAL_POZ.PAL,PAL_POZ.C,PAL_POZ.DK_C,PAL_POZ.IL)
                               ?};

                        _tab:=exec('aktrdndk','magdok_palety',_mag,#form(8-_dost),form(8+_dost),PAL_POZ.PAL);
                        _nost:=form(_tab[2])+form(_tab[1],-8,0,'99');
                        {? _nost<>_dost || _dost:=_nost ?};
                        obj_del(_tab);
                        exec('sc_tymczas','magazyn_stan',_mag,PAL_POZ.M,'T',,'Z');
                        _ind:={? _dost=''
                              || __sc.ndx_tmp('',,'D',,,'NDK',,,'RDK',,)
                              || __sc.ndx_tmp('',,'NDK',,,'RDK',,,'D',,)
                              ?};
                        __sc.index(_ind);
                        {? __sc.first() &
                          {? _dost<>''
                          || {? __sc.find_key(form(8+_dost),#form(8-_dost)) || 1 || __sc.first() ?}
                          || 1
                          ?}
                        || _ilenasc:=exec('obl_stsc','magazyn_stan',__sc.RDK,__sc.NDK,_mag,PAL_POZ.M,,_refzkn);
                           {? (_buf.clear(); _buf.prefix(__sc.REF); _buf.first()) || _ilenasc-=_buf.ILR ?};
                           {? _ilenasc>0
                           || _ile:={? _ilenasc>=_ilepal || _ilepal || _ilenasc ?};
                              _lp:=exec('ustal_lp','zamsiw_wspolne',PAL_POZ.M,EANN.REFSQL);
                              EANP.LP:=_lp;
                              EANP.EANN:=EANN.ref();
                              EANP.NRC:=EANN.NRC;
                              EANP.M:=PAL_POZ.M;
                              EANP.TW:=PAL_POZ.TW;
                              EANP.RSQL:='';
                              EANP.IL:=_ile;
                              EANP.ILS:=_ile;
                              exec('uzupIDkod','magdok_palety',EANP);
                              {? EANP.add(1) || {? ~_wyn || _wyn:=1 ?} || _wyn:=0; undo() ?};
                              __dostpal.clear();
                              __dostpal.blank();
                              __dostpal.PAL:=$PAL_POZ.PAL;
                              __dostpal.LOK:=EANP.LOKZ().KOD;
                              __dostpal.M:=$PAL_POZ.M;
                              __dostpal.ILR:=_ile;
                              __dostpal.ILP:=_ile;
                              __dostpal.RDK:=__sc.RDK;
                              __dostpal.NDK:=__sc.NDK;
                              __dostpal.KOD:=PAL_POZ.PAL().KODK;
                              __dostpal.TW:=PAL_POZ.TW;
                              __dostpal.PALDO:='';
                              __dostpal.POZ:=$PAL_POZ.ref();
                              __dostpal.ROZPAL:=0;
                              __dostpal.LOKDO:={? EANP.LOKDO<>null() || $EANP.LOKDO || '' ?};
                              __dostpal.add(1);
                              {? (_buf.clear(); _buf.prefix(__sc.REF); _buf.first())
                              || _buf.ILR+=_ile;
                                 _buf.put(1)
                              || _buf.blank();
                                 _buf.SQL:=__sc.REF;
                                 _buf.ILR:=_ile;
                                 _buf.add(1)
                              ?};
                              _ilepal-=_ile
                           ?}
                        ?};
                        {? _ilepal>0
                        || _bpp.clear();
                           _bpp.blank();
                           _bpp.SQL:=$PAL_POZ.ref();
                           _bpp.ILR:=PAL_POZ.ILP-_ilepal;
                           _bpp.add(1)
                        ?};
                        __sc.ndx_drop(_ind);
                        PAL_POZ.next()
                     !}
                  ?};
                  _bpp.clear();
                  {? _bpp.first()
                  || {!
                     |? PAL_POZ.clear();
                        {? PAL_POZ.seek(_bpp.SQL)
                        || _ilepal:=PAL_POZ.ILP-_bpp.ILR;
                           _dost:='';
                           exec('sc_tymczas','magazyn_stan',_mag,PAL_POZ.M,'T',,'Z');
                           _ind:={? _dost=''
                                 || __sc.ndx_tmp('',,'D',,,'NDK',,,'RDK',,)
                                 || __sc.ndx_tmp('',,'NDK',,,'RDK',,,'D',,)
                                 ?};
                           __sc.index(_ind);
                           {? __sc.first()
                           || {!
                              |? _ilenasc:=exec('obl_stsc','magazyn_stan',__sc.RDK,__sc.NDK,_mag,PAL_POZ.M,,_refzkn);
                                 {? (_buf.clear(); _buf.prefix(__sc.REF); _buf.first()) || _ilenasc-=_buf.ILR ?};
                                 {? _ilenasc>0
                                 || _ile:={? _ilenasc>=_ilepal || _ilepal || _ilenasc ?};
                                    _lp:=exec('ustal_lp','zamsiw_wspolne',PAL_POZ.M,EANN.REFSQL);
                                    EANP.LP:=_lp;
                                    EANP.EANN:=EANN.ref();
                                    EANP.NRC:=EANN.NRC;
                                    EANP.M:=PAL_POZ.M;
                                    EANP.TW:=PAL_POZ.TW;
                                    EANP.RSQL:='';
                                    EANP.IL:=_ile;
                                    EANP.ILS:=_ile;
                                    exec('uzupIDkod','magdok_palety',EANP);
                                    {? EANP.add(1) || {? ~_wyn || _wyn:=1 ?} || _wyn:=0; undo() ?};
                                    __dostpal.clear();
                                    __dostpal.blank();
                                    __dostpal.PAL:=$PAL_POZ.PAL;
                                    __dostpal.LOK:=EANP.LOKZ().KOD;
                                    __dostpal.M:=$PAL_POZ.M;
                                    __dostpal.ILR:=_ile;
                                    __dostpal.ILP:=_ile;
                                    __dostpal.RDK:=__sc.RDK;
                                    __dostpal.NDK:=__sc.NDK;
                                    __dostpal.KOD:=PAL_POZ.PAL().KODK;
                                    __dostpal.TW:=PAL_POZ.TW;
                                    __dostpal.PALDO:='';
                                    __dostpal.POZ:=$PAL_POZ.ref();
                                    __dostpal.ROZPAL:=0;
                                    __dostpal.LOKDO:={? EANP.LOKDO<>null() || $EANP.LOKDO || '' ?};
                                    __dostpal.add(1);
                                    {? (_buf.clear(); _buf.prefix(__sc.REF); _buf.first())
                                    || _buf.ILR+=_ile;
                                       _buf.put(1)
                                    || _buf.blank();
                                       _buf.SQL:=__sc.REF;
                                       _buf.ILR:=_ile;
                                       _buf.add(1)
                                    ?};
                                    _ilepal-=_ile
                                 ?};
                                 _ilepal>0 & __sc.next()
                              !}
                           ?};
                           __sc.ndx_drop(_ind)
                        ?};
                        _bpp.del()
                     !}
                  ?};
                  PAL_POZ.use('paletyp')
               |? _ean.ZPALET=2
               || _ileroz:=EANP.ILS;
                  {? EANP.PAL().AKT='N'
                  || PAL_POZ.use('palet'+form(EANP.PAL().AR-2000,-2,0,'99'))
                  || PAL_POZ.use('paletyp')
                  ?};
                  PAL_POZ.index('PAL');
                  PAL_POZ.prefix(EANP.PAL,EANP.M().KTM,EANP.M().KTM);
                  {? PAL_POZ.first()
                  || {!
                     |? {? PAL_POZ.ILP>=_ileroz
                        || {? ~EANP.ROZPAL
                           || _lp:=exec('ustal_lp','zamsiw_wspolne',PAL_POZ.M,EANN.REFSQL);
                              EANP.LP:=_lp;
                              EANP.EANN:=EANN.ref();
                              EANP.NRC:=EANN.NRC;
                              EANP.M:=PAL_POZ.M;
                              EANP.TW:=PAL_POZ.TW;
                              EANP.RSQL:='';
                              EANP.IL:=_ileroz;
                              EANP.ILS:=_ileroz;
                              exec('uzupIDkod','magdok_palety',EANP);
                              EANP.add(1)
                           || _wyn:=1
                           ?};
                           __dostpal.clear();
                           __dostpal.blank();
                           __dostpal.PAL:=$PAL_POZ.PAL;
                           __dostpal.LOK:=EANP.LOKZ().KOD;
                           __dostpal.M:=$PAL_POZ.M;
                           __dostpal.ILR:=_ileroz;
                           __dostpal.ILP:=_ileroz;
                           {? PAL_POZ.SCSQL<>''
                           || _dost:=(8+PAL_POZ.SCSQL)+form(BB.sqlint(PAL_POZ.SCSQL),-8,0,'99')
                           || _dost:=exec('last_dst','magdok_palety',PAL_POZ.M,PAL_POZ.PAL,PAL_POZ.C
                                      ,PAL_POZ.DK_C,PAL_POZ.IL)
                           ?};
                           __dostpal.RDK:=#form(8-_dost);
                           __dostpal.NDK:=form(8+_dost);
                           _tab:=exec('aktrdndk','magdok_palety',_mag,__dostpal.RDK,__dostpal.NDK,PAL_POZ.PAL);
                           __dostpal.RDK:=_tab[1];
                           __dostpal.NDK:=_tab[2];
                           obj_del(_tab);
                           __dostpal.KOD:=PAL_POZ.PAL().KODK;
                           __dostpal.TW:=PAL_POZ.TW;
                           __dostpal.PALDO:={? EANP.ZPALET=2 & EANP.PALDO=null()
                                             & (EANP.PALDOEAN='' | EANP.PALDOEAN='<nieokreślone>')
                                            || 'xxx'
                                            || $EANP.PALDO
                                            ?};
                           __dostpal.POZ:=$PAL_POZ.ref();
                           __dostpal.ROZPAL:=EANP.ROZPAL;
                           __dostpal.LOKDO:={? EANP.LOKDO<>null() || $EANP.LOKDO || '' ?};
                           __dostpal.add(1);
                           _ileroz:=0
                        |? PAL_POZ.ILP>0
                        || EANP.cntx_psh();
                           _lp:=exec('ustal_lp','zamsiw_wspolne',PAL_POZ.M,EANN.REFSQL);
                           EANP.LP:=_lp;
                           EANP.EANN:=EANN.ref();
                           EANP.NRC:=EANN.NRC;
                           EANP.M:=PAL_POZ.M;
                           EANP.TW:=PAL_POZ.TW;
                           EANP.RSQL:='';
                           EANP.IL:=PAL_POZ.ILP;
                           EANP.ILS:=PAL_POZ.ILP;
                           exec('uzupIDkod','magdok_palety',EANP);
                           EANP.add(1);
                           EANP.cntx_pop();
                           {? EANP.ROZPAL
                           || EANP.ILS-=PAL_POZ.ILP;
                              EANP.put(1);
                              _wyn:=1
                           ?};
                           __dostpal.clear();
                           __dostpal.blank();
                           __dostpal.PAL:=$PAL_POZ.PAL;
                           __dostpal.LOK:=EANP.LOKZ().KOD;
                           __dostpal.M:=$PAL_POZ.M;
                           __dostpal.ILR:=PAL_POZ.ILP;
                           __dostpal.ILP:=PAL_POZ.ILP;
                           {? PAL_POZ.SCSQL<>''
                           || _dost:=(8+PAL_POZ.SCSQL)+form(BB.sqlint(PAL_POZ.SCSQL),-8,0,'99')
                           || _dost:=exec('last_dst','magdok_palety',PAL_POZ.M,PAL_POZ.PAL,PAL_POZ.C,PAL_POZ.DK_C
                               ,PAL_POZ.IL)
                           ?};
                           __dostpal.RDK:=#form(8-_dost);
                           __dostpal.NDK:=form(8+_dost);
                           _tab:=exec('aktrdndk','magdok_palety',_mag,__dostpal.RDK,__dostpal.NDK,PAL_POZ.PAL);
                           __dostpal.RDK:=_tab[1];
                           __dostpal.NDK:=_tab[2];
                           obj_del(_tab);
                           __dostpal.KOD:=PAL_POZ.PAL().KODK;
                           __dostpal.TW:=PAL_POZ.TW;
                           __dostpal.PALDO:={? EANP.ZPALET=2 & EANP.PALDO=null()
                                             & (EANP.PALDOEAN='' | EANP.PALDOEAN='<nieokreślone>')
                                            || 'xxx'
                                            || $EANP.PALDO
                                            ?};
                           __dostpal.POZ:=$PAL_POZ.ref();
                           __dostpal.ROZPAL:=EANP.ROZPAL;
                           __dostpal.LOKDO:={? EANP.LOKDO<>null() || $EANP.LOKDO || '' ?};
                           __dostpal.add(1);
                           _ileroz-=PAL_POZ.ILP
                        ?};
                        _ileroz>0 & PAL_POZ.next()
                     !}
                  ?}
               |? _ean.ZPALET=3
               || _ileroz:=EANP.ILS;
                  _paldo:=$EANP.PALDO;
                  _kodk:=EANP.PALDO().KODK;
                  {? EANP.PAL().AKT='N'
                  || PAL_POZ.use('palet'+form(EANP.PAL().AR-2000,-2,0,'99'))
                  || PAL_POZ.use('paletyp')
                  ?};
                  PAL_POZ.index('PAL');
                  PAL_POZ.prefix(EANP.PAL,EANP.M().KTM,EANP.M().KTM);
                  {? PAL_POZ.first()
                   & (PAL_POZ.find_tab('first','IL',,'>=',_ileroz) | PAL_POZ.find_tab('first','IL',,'>',0))
                  || __dostpal.clear();
                     __dostpal.blank();
                     __dostpal.PAL:=_paldo;
                     __dostpal.LOK:=EANP.LOKZ().KOD;
                     __dostpal.M:=$PAL_POZ.M;
                     __dostpal.ILR:=_ileroz;
                     __dostpal.ILP:=_ileroz;
                     {? PAL_POZ.SCSQL<>''
                     || _dost:=(8+PAL_POZ.SCSQL)+form(BB.sqlint(PAL_POZ.SCSQL),-8,0,'99')
                     || _dost:=exec('last_dst','magdok_palety',PAL_POZ.M,PAL_POZ.PAL,PAL_POZ.C
                                ,PAL_POZ.DK_C,PAL_POZ.IL)
                     ?};
                     __dostpal.RDK:=#form(8-_dost);
                     __dostpal.NDK:=form(8+_dost);
                     _tab:=exec('aktrdndk','magdok_palety',_mag,__dostpal.RDK,__dostpal.NDK,PAL_POZ.PAL);
                     __dostpal.RDK:=_tab[1];
                     __dostpal.NDK:=_tab[2];
                     obj_del(_tab);
                     __dostpal.KOD:=_kodk;
                     __dostpal.TW:=PAL_POZ.TW;
                     __dostpal.PALDO:=_paldo;
                     __dostpal.POZ:=$PAL_POZ.ref();
                     __dostpal.ROZPAL:=3;
                     __dostpal.LOKDO:={? EANP.LOKDO<>null() || $EANP.LOKDO || '' ?};
                     __dostpal.add(1)
                  ?}
               ?}
            ?};
            _ean.next()
         !}
      ?};
      end()
   |? FUN.ask('Zamówienie obsługuje inny operator.\nCzy chcesz zobaczyć kto?'@)
   || {? ZK_N.seek(EANP.EANN().REFSQL,form(8+EANP.EANN().REFSQL)) & ZK_N.r_lock() || ZK_N.r_unlock() ?}
   ?}
?};
EANN.cntx_pop();
EANP.cntx_pop();

obj_del(_bpp);
obj_del(_pal);
obj_del(_ean);
obj_del(_buf);
_wyn


\pop_eanr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: poprawia RSQL dla ZK_P
::   WE: _a - ref EANN
::       _b - ref ZK_N
::       _c - 1-typ EANN=W (wypelnia tabele __eazkp) 0-dla innych przypadkow
::  OLD: \pop_eanr/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>7 || _a:=null ?} || _a:=null ?};
{? _>=2 || {? type_of(_b)<>7 || _b:=null ?} || _b:=null ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};

_refsql:=$_b;
_czyzpal:=0;
_zkp:=tab_tmp(3,'MAT','STRING[16]',''
       ,'ORD','INTEGER',''
       ,'ZKP','STRING[16]',''
       ,'ILP','REAL',''
       ,'ILR','REAL','');

ZK_N.cntx_psh();
EANN.cntx_psh();
EANP.cntx_psh();
EANP.index('EANN');
{? _a=null || EANP.prefix() || EANP.prefix(_a) ?};
{? EANP.first()
|| {? _refsql=''
   || {? _c
      || _refzam:=exec('FindAndGet','#table','ZK_N',EANP.EANN().REFSQL,,,null());
         ZK_P.cntx_psh();
         ZK_P.index('TYPN');
         ZK_P.prefix('A','Z',_refzam,1);
         {? ZK_P.first()
         || _czyzpal:=ZK_P.RMAG().PAL='T';
            {!
            |? {? ZK_P.ILP>0
               || _zkp.clear();
                  _zkp.blank();
                  _zkp.MAT:=$ZK_P.M;
                  _zkp.ORD:=ZK_P.POZ;
                  _zkp.ZKP:=$ZK_P.ref();
                  _zkp.ILP:=ZK_P.ILP;
                  _zkp.ILR:=0;
                  _zkp.add(1)
               ?};
               ZK_P.next()
            !}
         ?};
         ZK_P.cntx_pop()
      ?};
      {!
      |? {? EANP.EANN().TYP='Z' & form(EANP.EANN().REFSQL)<>'' & EANP.ILS>0
         || _refzam:=exec('FindAndGet','#table','ZK_N',EANP.EANN().REFSQL,,,null());
            {? _refzam<>null
            || _newzkp:=exec('zwr_top','magazyn_mob',_refzam,EANP.LP,EANP.M);
               {? $_newzkp<>EANP.RSQL || EANP.RSQL:=$_newzkp; EANP.put() ?}
            ?}
         |? _c & EANP.EANN().TYP='W' & form(EANP.EANN().REFSQL)<>'' & EANP.ILS>0
         || _ils:=EANP.ILS;
            _zkp.clear();
            _zkp.prefix($EANP.M);
            {? _zkp.first()
            || {!
               |? _ilp:=_zkp.ILP-_zkp.ILR;
                  {? _ilp>0
                  || {? _ilp>=_ils
                     || _ilr:=_ils;
                        _ils:=0
                     || _ilr:=_ilp;
                        _ils-=_ilp
                     ?};
                     __eazkp.clear();
                     {? ~_czyzpal & __eazkp.find_key(_zkp.ZKP)
                     || __eazkp.ILR+=_ilr;
                        __eazkp.put(1)
                     || __eazkp.blank();
                        __eazkp.ZKN:=_refsql+$EANP.EANN;
                        __eazkp.ZKP:=_zkp.ZKP;
                        __eazkp.ILR:=_ilr;
                        __eazkp.MAT:=$EANP.M;
                        __eazkp.DOD:=0;
                        __eazkp.MAG:=$EANP.LOKZ().MG;
                        __eazkp.add(1)
                     ?};
                     _zkp.ILR+=_ilr;
                     _zkp.put(1)
                  ?};
                  _ils>0 & _zkp.next()
               !}
            || __eazkp.clear();
               {? ~_czyzpal & __eazkp.find_key('null')
               || __eazkp.ILR+=EANP.ILS;
                  __eazkp.put(1)
               || __eazkp.blank();
                  __eazkp.ZKN:=_refsql+$EANP.EANN;
                  __eazkp.ZKP:='null';
                  __eazkp.ILR:=EANP.ILS;
                  __eazkp.MAT:=$EANP.M;
                  __eazkp.DOD:=0;
                  __eazkp.MAG:=$EANP.LOKZ().MG;
                  __eazkp.add(1)
               ?}
            ?}
         ?};
         EANP.next()
      !}
   || _refzam:=_b;
      {!
      |? {? EANP.EANN().TYP='Z' & form(EANP.EANN().REFSQL)<>'' & EANP.ILS>0 & _refsql=EANP.EANN().REFSQL
         || _newzkp:=exec('zwr_top','magazyn_mob',_refzam,EANP.LP,EANP.M);
            {? $_newzkp<>EANP.RSQL || EANP.RSQL:=$_newzkp; EANP.put() ?}
         ?};
         EANP.next()
      !}
   ?}
?};
EANN.cntx_pop();
EANP.cntx_pop();
ZK_N.cntx_pop();
1


\zwr_top
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: zwraca ref top 1
::   WE: _a - ref zamowienia
::       _b - numer pozycji
::       _c - ref M
::   WY: ref ZK_P o TOP rownym 1
::  OLD: \zwr_top/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;
ZK_P.cntx_psh();
ZK_P.index('NAG');
ZK_P.prefix(_a,_b);
_wyn:={? ZK_P.last() & ZK_P.M=_c || ZK_P.ref() || null ?};
ZK_P.cntx_pop();
_wyn


\rozpeanp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: ewentualna rozpiska __eazkp wg pozycji zamowienia (najpierw rezerwacje wg dostaw)
::   WE: _a - ref ZK_N
::       _b - ref EANN
::  OLD: \rozpeanp/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(2,'KTM','STRING[16]',''
       ,'ZKP','STRING[16]',''
       ,'ILE','REAL',''
       ,'ILR','REAL','');
_buf:=tab_tmp(5,'KTM','STRING[16]',''
       ,'LOK','STRING[16]',''
       ,'TRM','DATE',''
       ,'SCE','STRING[30]',''
       ,'GS1','STRING[16]',''
       ,'SQL','STRING[16]',''
       ,'REF','STRING[16]',''
       ,'ILR','REAL','');
_bmt:=tab_tmp(1,'MAT','STRING[16]','','ILS','REAL','','ILP','REAL','');

ZK_N.cntx_psh();
ZK_P.cntx_psh();
REZ.cntx_psh();
EANN.cntx_psh();
EANP.cntx_psh();
__eazkp.cntx_psh();

_magref:=null();
:: to zostalo wyslane
EANP.index('EANN');
EANP.prefix(_b);
{? EANP.first() & EANP.EANN().TYP='Z'
|| {!
   |? {? EANP.IL>0 & EANP.M<>null
      || _rsql:={? EANP.RSQL<>'' || EANP.RSQL || $exec('zwr_top','magazyn_mob',_a,EANP.LP,EANP.M) ?};
         {? _rsql<>''
         || _tab.clear();
            {? ~_tab.find_key($EANP.M,_rsql)
            || _tab.blank();
               _tab.KTM:=$EANP.M;
               _tab.ZKP:=_rsql;
               _tab.ILE:=0;
               _tab.ILR:=0;
               _tab.add(1)
            ?}
         ?}
      ?};
      {? EANP.ILS>0 & EANP.M<>null()
      || _magref:=EANP.LOKZ().MG;
         _bmt.clear();
         {? _bmt.find_key($EANP.M)
         || _bmt.ILS+=EANP.ILS;
            _bmt.put(1)
         || _bmt.blank();
            _bmt.MAT:=$EANP.M;
            _bmt.ILS:=EANP.ILS;
            _bmt.add(1)
         ?}
      ?};
      {? EANP.ILS>0 & EANP.ILS>EANP.IL
      || _buf.clear();
         _buf.blank();
         _buf.KTM:=$EANP.M;
         _buf.LOK:=$EANP.LOKZ;
         _buf.TRM:=EANP.TW;
         _buf.SQL:=EANP.RSQL;
         _buf.REF:=$EANP.ref();
         _buf.ILR:=EANP.ILS;
         _buf.SCE:={? EANP.SCEAN<>'' || EANP.SCEAN || 'xxxx' ?};
         _buf.GS1:={? exec('ctrlEANW','magazyn_mob',EANP.ref(),EANP.M) || $EANP.ref() || 'N' ?};
         _buf.add(1)
      ?};
      EANP.next()
   !}
?};

:: wypelnia tabelke pozycji zamowienia
ZK_P.index('TYPN');
ZK_P.prefix('A','Z',_a,1);
{? ZK_P.first()
|| _param:={? ZK_P.N().T().R='Z' || 600800 || 600801 ?};
   _ilplus:=ZK_P.N().LIM='T' | (';ZR'*exec('get','#params',_param,2))>1;

   {!
   |? {? ZK_P.ILP>0 & (_tab.clear(); _tab.find_key($ZK_P.M,$ZK_P.ref()))
      || _tab.KTM:=$ZK_P.M;
         _tab.ZKP:=$ZK_P.ref();
         _tab.ILE:=ZK_P.ILP;
         _tab.ILR:=0;
         _tab.put(1);
         _bmt.clear();
         {? _bmt.find_key($ZK_P.M)
         || _bmt.ILP+=ZK_P.ILP;
            _bmt.put(1)
         ?}
      ?};
      ZK_P.next()
   !};
   {? _ilplus & _magref<>null() & (_bmt.clear(); _bmt.first())
   || {!
      |? _rozn:=_bmt.ILS-_bmt.ILP;
         {? _rozn>0
         || _matref:=exec('FindAndGet','#table',M,_bmt.MAT,"",null());
            exec('obl_stan','magazyn_stan',_matref,1,_magref,,,,,,,1);
            _ilp:=BEER.SD-_bmt.ILP;
            _ilp:={? _ilp>0 || {? _rozn<=_ilp || _rozn || _ilp ?} || 0 ?};
            {? _ilp>0 & (_tab.clear(); _tab.find_key(_bmt.MAT))
            || _tab.ILE+=_ilp;
               _tab.put(1)
            ?}
         ?};
         _bmt.next()
      !}
   ?}
?};

:: korekta ilosc odczytanych - rozpiska na pozycje
_buf.clear();
{? _buf.first()
|| __eazkp.clear();
   {? __eazkp.first()
   || {!
      |? {? __eazkp.ZKP<>'null' & ~__eazkp.ILR & __eazkp.ILP>0
         || _ilebrak:=__eazkp.ILP;
            _iler:=0;
            _scean:={? __eazkp.SCEAN<>'' || __eazkp.SCEAN || 'xxxx' ?};
            __eazkp.cntx_psh();
            _ndx:=__eazkp.ndx_tmp('',0,'ZKN',,0,'REF',,0);
            _buf.clear();
            _buf.prefix(__eazkp.MAT,__eazkp.LOK,__eazkp.TRM,_scean,__eazkp.GS1);
            {? _buf.first()
            || {!
               |? _doroz:=_buf.ILR;
                  {? _doroz>0
                  || {? _doroz>=_ilebrak
                     || __eazkp.index(_ndx);
                        __eazkp.prefix($_a+$_b);
                        {? __eazkp.find_key(_buf.REF,)
                        || _iler+=_ilebrak;
                           _ilebrak:=0;
                           _doroz-=_iler;
                           __eazkp.ILR-=_iler;
                           __eazkp.put(1);
                           _buf.ILR-=_iler;
                           _buf.put(1);
                           0
                        || _buf.next()
                        ?}
                     || __eazkp.index(_ndx);
                        __eazkp.prefix($_a+$_b);
                        {? __eazkp.find_key(_buf.REF,)
                        || _jest:=(_ilebrak-_doroz);
                           _iler+=_jest;
                           _ilebrak-=_jest;
                           _doroz-=_jest;
                           __eazkp.ILR-=_jest;
                           __eazkp.put(1);
                           _buf.ILR-=_jest;
                           _buf.put(1);
                           _buf.next()
                        || _buf.next()
                        ?}
                     ?}
                  || _buf.next()
                  ?}
               !}
            ?};
            __eazkp.ndx_drop(_ndx);
            __eazkp.cntx_pop();
            {? _iler>0
            || __eazkp.ILR:=_iler;
               __eazkp.put(1)
            ?}
         ?};
         __eazkp.next()
      !}
   ?}
?};

:: to co na __eazkp
__eazkp.clear();
__eazkp.prefix($_a+$_b);
{? __eazkp.first()
|| {!
   |? {? __eazkp.ZKP<>'null' & (_tab.clear(); _tab.find_key(__eazkp.MAT,__eazkp.ZKP))
      || _tab.ILR+=__eazkp.ILR;
         _tab.put(1)
      ?};
      __eazkp.next()
   !}
?};

:: rozpisanie __eazkp
__eazkp.clear();
__eazkp.prefix($_a+$_b,'null');
{? __eazkp.first()
|| {!
   |? _ref:=__eazkp.ref();
      _doroz:=__eazkp.ILR;
      _mat:=__eazkp.MAT;
      _ok:=__eazkp.next();
      _tab.clear();
      _tab.prefix(_mat);
      {? _doroz>0 & _tab.first()
      || {!
         |? _napoz:=_tab.ILE-_tab.ILR;
            {? _napoz>0
            || {? _napoz>=_doroz
               || __eazkp.cntx_psh();
                  __eazkp.clear();
                  {? __eazkp.seek(_ref)
                  || __eazkp.ZKP:=_tab.ZKP;
                     __eazkp.put(1)
                  ?};
                  __eazkp.cntx_pop();
                  _tab.ILR+=_doroz;
                  _tab.put(1);
                  _doroz:=0
               || __eazkp.cntx_psh();
                  __eazkp.clear();
                  {? __eazkp.seek(_ref)
                  || __eazkp.ILR-=_napoz;
                     __eazkp.put(1);
                     _byl:=0;
                     __eazkp.cntx_psh();
                     __eazkp.clear();
                     {? __eazkp.find_key(_mat,_tab.ZKP)
                     || _byl:=1;
                        __eazkp.ILR+=_napoz;
                        __eazkp.put(1)
                     ?};
                     __eazkp.cntx_pop();
                     {? ~_byl
                     || __eazkp.ILR:=_napoz;
                        __eazkp.ZKP:=_tab.ZKP;
                        __eazkp.add(1)
                     ?}
                  ?};
                  __eazkp.cntx_pop();
                  _tab.ILR+=_napoz;
                  _tab.put(1);
                  _doroz-=_napoz
               ?}
            ?};
            _doroz>0 & _tab.next()
         !}
      ?};
      _ok
   !}
?};
:: scalenie __eazkp
_scl:=sql('select distinct :_a.ZKN, :_a.ZKP, :_a.MAT, :_a.SCEAN, :_a.GS1 from :_a',__eazkp);
{? _scl.first()
|| {!
   |? __eazkp.clear();
      __eazkp.prefix(_scl.ZKN,_scl.ZKP,_scl.MAT,_scl.SCEAN,_scl.GS1,);
      {? __eazkp.first() & __eazkp.size()>1
      || _ilr:=_ilw:=_ilp:=0;
         {!
         |? _ilr+=__eazkp.ILR;
            _ilw+=__eazkp.ILW;
            _ilp+=__eazkp.ILP;
            {? __eazkp.size()>1 || __eazkp.del() || 0 ?}
         !};
         __eazkp.ILR:=_ilr;
         __eazkp.ILW:=_ilw;
         __eazkp.ILP:=_ilp;
         __eazkp.put(1)
      ?};
      _scl.next
   !}
?};
obj_del(_scl);

__eazkp.cntx_pop();
EANN.cntx_pop();
EANP.cntx_pop();
ZK_N.cntx_pop();
ZK_P.cntx_pop();
REZ.cntx_pop();
obj_del(_tab);
obj_del(_buf);
obj_del(_bmt);
1


\eann2inn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dołaczenie arkuszy pomocniczych na podstawie operacji mobilnej
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMO_MOB_DINW';
_params.UIDREF:=EANN.uidref();
_params.AKCJA:='Generuj_wg_ope';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EANN',EANN.ref());
exec('mp_run','#b__box',_params);
'activate:browse'


\akc_wysl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: akceptacja zamowien do wysylki
::   WE: _a - 0-pytamy lub 1-nie
::       _b - numer czytnika kompletacja lub 0
::       _c - numer czytnika reorganizacja lub 0
::       _d - kod doku załadunkowego
::       [_e] - dyspozycja w magazynie
::   WY: GRP_KEY- klucz grupujący lub pusty string
::  OLD: \akc_wysl/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
POMOC.TR_NZL:={? var_pres('_e')=type_of(null()) || _e || null() ?};
_bezwurz:=exec('get','#params',4022,2,OPERATOR.USER)='T';
{? _bezwurz & _b<=0
 & exec('FindInSet','#table','EANC','AKT','T',,,,,null())<>null()
|| _autonrc:=1;
   _b:=0; _c:=0;
   EANX.NRC_Z:=0; EANX.NRC_R:=0
|| _autonrc:=_a>0
?};
{? _a=2 || _a:=0 ?};

VAR_DEL.delete('__eann','__zknrea','__mat_mag','__dstean','__dstsel','__zknsel','__grpsel','__dstbtn');
VAR_DEL.delete('__refrea','__ilplus','__ctrlst','__lstum');

:: ewentualna kompletacja bez kontroli stanów magazynowych
_par:=exec('get','#params',600702,2);
__ctrlst:=1;
{? _par='T'
| (_par='P' & FUN.ask('Czy kompletacja bez kontroli stanów magazynowych?\n\n'
                      'Uwaga. Pozycje bez kodów kreskowych i przypisanych magazynów zostaną pominięte.'@))
|| __ctrlst:=0
?};

__refrea:=($ZK_N.tm_stamp())+($OPERATOR.USER);

__eann:=tab_tmp(1,'DAT','DATE',''
         ,'TIM','TIME',''
         ,'TIMER','TIME',''
         ,'USER','STRING[20]',''
         ,'TIMEZ','TIME',''
         ,'STN','STRING[10]',''
         ,'SYM','STRING[20]',''
         ,'KHD','STRING[20]',''
         ,'NRC','INTEGER',''
         ,'REF','INTEGER',''
         ,'PRC','REAL',''
         ,'TXT1','STRING[255]','');

__zknrea:=tab_tmp(4,'TREE','TREE_REF','galazka'
           ,'LAB','STRING[90]','Etykieta'
           ,'ZAM','STRING[20]','Symbol zamówienia'
           ,'POZ','INTEGER','Pozycja'
           ,'REF','STRING[16]','ref'
           ,'MAG','STRING[10]','Magazyn'
           ,'KTM','STRING[50]','Indeks-KTM'
           ,'NAZ','STRING[100]','Indeks-Nazwa'
           ,'ILZ','REAL','Il.zamówiona'
           ,'ILP','REAL','Il.pozostała'
           ,'REZ','REAL','Il.zarezerwowana'
           ,'REA','REAL','Il.do realizacji'
           ,'ICON','INTEGER','Ikonka'
           ,'WYB','STRING[1]','Wybrano'
           ,'RJ2','REAL','Ilość w j.sprz.'
           ,'JM1','STRING[10]','jm'
           ,'JM2','STRING[10]','J.sprz.'
           ,'DTZ','DATE','Data zamówienia'
           ,'ZKN','STRING[16]','ref zamowienia'
           ,'PAL','STRING[16]','paleta'
           ,'SQM','STRING[16]','ref SQL M'
           ,'KPAL','STRING[30]','kod kreskowy palety'
           ,'CZY','INTEGER','czy magazyn paletowy'
           ,'LOKZ','STRING[20]','Lokalizacja'
           ,'KODK','STRING[128]','Kod kreskowy'
           ,'TW','DATE','Termin ważności'
           ,'ZLSYM','STRING[20]','Symbol zlecenia'
           ,'WART','REAL','wartosc sprzedazy'
           ,'ONEMG','STRING[16]','tylko z magazynu'
           ,'DOST','INTEGER','rezerwacje wg dostaw'
           ,'NAD','INTEGER','czy galaz nadrzedna'
           ,'NRC','INTEGER','nr czytnika'
           ,'SQL','STRING[16]','ref ZK_P'
           ,'TR','DATE','Termin realizacji'
           ,'WTR','DATE','Wewnętrzny termin realizacji'
           ,'USL','STRING[1]','Czy usluga'
           ,'ZGH','INTEGER','Przewodnik zlecenia - #ZGH.ref()'
           ,'ZGP','INTEGER','Pozycja przewodnika - #ZGP.ref()'
           ,'ZGP_NAME','STRING[40]','Pozycja przewodnika'
           ,'RED','REAL','Ilość zarezerwowana wg dostawy'
           ,'SCEAN','STRING[128]','kod identyfikacji'
           ,'NRCS','STRING[15]','napis nr czytnika'
           ,'SMG','STRING[16]','ref SQL magazynu'
           ,'PLUS','REAL','Ilość powyżej'
           ,'RES','REAL','Sumaryczna ilość do realizacji'
           ,'RS2','REAL','Sumaryczna ilość wg j.sprz.'
           ,'WDST','INTEGER','Czy wynika z wyboru dostawy');

__mat_mag:=tab_tmp(2,'MG','STRING[16]','','M','STRING[16]','');

_wg_tr:=POMOC.TR_NZL<>null();
exec('initdste','magazyn_mob');
_tab:={? _wg_tr || exec('zknWGtr_nzl','transport_wspolne',POMOC.TR_NZL) || ZK_N.sel_aget() ?};
_ilezaz:=_tab.size();

_win_sel:=__zknsel:=__zknrea.mk_sel('Ilości do realizacji'@,'P',,'qqqqrrraeokax',,,__zknrea.size(),1);

__zknrea.win_fld(_win_sel,,'LAB',,,38,,1,'');
__zknrea.win_fld(_win_sel,,'MAG',,,10,3,1,'Magazyn'@);
__zknrea.win_fld(_win_sel,,'LOKZ',,,15,,1,'Lokalizacja'@);
__zknrea.win_fld(_win_sel,,'KPAL',,,10,,1,'Paleta'@);
__zknrea.win_fld(_win_sel,,'TW',,,-13,,1,'Termin ważności'@);
__zknrea.win_fld(_win_sel,,'NRCS',,,-13,0,1,'Czytnik'@);
__zknrea.win_fld(_win_sel,,'REZ',,,-12,3,1,'Zarezerwowano'@);
__zknrea.win_fld(_win_sel,,'REA',,,-10,3,1,'Do realizacji'@);
__zknrea.win_fld(_win_sel,,'RES',,,-10,3,,'Do realizacji'@);
__zknrea.win_fld(_win_sel,,'JM1',,,5,,1,'jm'@);
{? ~_wg_tr || __zknrea.win_act(_win_sel,0,'Popraw',,,,"exec('prpopwys','magazyn_mob')",,1) ?};
__zknrea.win_act(_win_sel,0,'Rekord',,,,"exec('rekzkrea','magazyn_mob')","exec('popzkrea','magazyn_mob')");
__zknrea.win_act(_win_sel,0,'Formuła','Akceptuj'@@,,'Akceptacja ilości do realizacji'@,,"sel_exit()",,,,,'A');
{? ~_wg_tr || __zknrea.win_act(_win_sel,0,'Formuła','&Zeruj/wypełnij'@@,,'Zerowanie lub wypełnienie pola Do realizacji'@
                  ,"exec('zatw_wyb','magazyn_mob')",,,1,"exec('zatw_wyb','magazyn_mob')",,'Z') ?};
__zknrea.win_act(_win_sel,0,'Formuła','&Czytnik'@@,,'Przypisanie czytnika do operacji'@
                    ,"exec('wyb_czyt','magazyn_mob',0,,,,exec('FindAndGet','#table',MG,__zknrea.SMG,,,null()))"
                    ,,,1,"exec('wyb_czyt','magazyn_mob',0,,,,1)",,'C');
__zknrea.win_act(_win_sel,0,'Formuła','&Ustaw parametry'@@,,'Ustawienie parametrów dla magazynu'@
                    ,"exec('ustparam','magazyn_mob',0)",,,,,,'U');
__zknrea.tr_fml(_win_sel,,"{? _a || {? __zknrea.TREE=0 || 1 || _a ?} || _a ?}");
__zknrea.win_fml(_win_sel,,'LAB',,'ICON_BEFORE',"
         {? __zknrea.TREE<>0 & __zknrea.WYB='*'
         || 'xwin16.png:38'
         |? __zknrea.TREE<>0 & __zknrea.WYB=''
         || ''
         |? __zknrea.ICON=-1
         || 'xwin16.png:7'+{? __zknrea.tr_state()=1 || '5' || '4' ?}
         |? __zknrea.ICON=-2
         || 'xwin16.png:52'

         || ''
         ?}
      ");
__zknrea.win_fml(_win_sel,,'MAG',,'ICON_BEFORE',"
         {? __zknrea.TREE<>0 & __zknrea.SQM<>'' & exec('FindAndGet','#table',M,__zknrea.SQM,,\"RODZ\",'')='U'
         || 'xwin16.png:72'
         || ''
         ?}
      ");
__zknrea.win_fml(_win_sel,,'NRCS',,'ICON_BEFORE',"
         {? ~__zknrea.TREE & __zknrea.ICON=-2
         || 'xwin16.png:70'
         |? ~__zknrea.TREE
         || 'xwin16.png:85'
         || ''
         ?}");
__zknrea.fld_fml('NRCS','DISPLAY_FORMAT'
 ,"{? ~__zknrea.TREE | __zknrea.ICON=-2
    | exec('FindInSet','#table','MG','MAGAZYNY',__zknrea.MAG,__zknrea.MAG,\"MG.MWS\",,,'')='T'
   || 'empty=0'
   || 'empty=1'
   ?}");
__zknrea.fld_fml('LOKZ','DISPLAY_FORMAT'
 ,"{? __zknrea.ICON<>-2
    & (~__zknrea.TREE | (';DAPZ'*exec('FindAndGet','#table',M,__zknrea.SQM,,\"IDMOB\",''))>1)
   || 'empty=1'
   || 'empty=0'
   ?}");
__zknrea.fld_fml('REZ','DISPLAY_FORMAT',"{? ~__zknrea.TREE | __zknrea.ICON=-2 || 'empty=1' || 'empty=0' ?}");
__zknrea.fld_fml('REA','DISPLAY_FORMAT',"{? ~__zknrea.TREE | __zknrea.ICON=-2 || 'empty=1' || 'empty=0' ?}");
__zknrea.fld_fml('RES','DISPLAY_FORMAT',"{? ~__zknrea.TREE | __zknrea.ICON=-2 || 'empty=1' || 'empty=0' ?}");
__zknrea.fld_fml('TW','DISPLAY_FORMAT'
 ,"{? __zknrea.ICON=-2
    | ~__zknrea.TREE
    | (';DAPZ'*exec('FindAndGet','#table',M,__zknrea.SQM,,\"IDMOB\",''))>1
    | exec('FindAndGet','#table',M,__zknrea.SQM,,\"RODZ\",'')='U'
   || 'empty=1'
   || 'empty=0'
   ?}");

__zknrea.win_sel(_win_sel);

__dstsel:=__dstean.mk_sel('Ilości wg identyfikacji dostaw'@,'P',,'xxxxraeokax',,,,,'U');

__dstean.win_fld(__dstsel,,'LAB',,,29,,1,'');
__dstean.win_fld(__dstsel,,'LOKZ',,,20,,1,'Lokalizacja'@);
__dstean.win_fld(__dstsel,,'TW',,,10,,1,'Termin'@);
__dstean.win_fld(__dstsel,,'ILP',,,10,3,1,'Ilość wg identyfikacji'@);
__dstean.win_fld(__dstsel,,'ILR',,,10,3,1,'Ilość do realizacji'@);
__dstean.win_fld(__dstsel,,'JM1',,,5,,1,'jm'@);
__dstean.win_act(__dstsel,0,'Formuła','&Zmień'@@,,,"exec('kplscean','magazyn_mob')",,1,,,,'Z');
__dstean.win_act(__dstsel,1,'Formuła','&Zmień'@@,,,"exec('kplscean','magazyn_mob')",,1,,,,'Z');
__dstean.win_act(__dstsel,0,'Rekord',,,,"exec('rekzkrea','magazyn_mob')","exec('popzkrea','magazyn_mob')");

__dstean.fld_fml('JM1','DISPLAY_FORMAT',"{? 'NX'*__dstean.TYP || 'empty=1' || 'empty=0' ?}");
__dstean.fld_fml('ILP','DISPLAY_FORMAT',"{? 'NX'*__dstean.TYP || 'empty=1' || 'empty=0' ?}");
__dstean.fld_fml('ILR','DISPLAY_FORMAT',"{? 'NX'*__dstean.TYP || 'empty=1' || 'empty=0' ?}");

__dstbtn:=__dstean.win_btn(__dstsel,'text=%1, panel=bottom, align=begin'['&Zmień'@],'menu:Z');
__zknrea.win_sel(__zknsel);
__dstean.win_sel(__dstsel);

__zknrea.win_btn(_win_sel,'text=%1, panel=bottom, align=begin'['&Akceptuj'@],'menu:A',,,,,,'noempty');

:: tworzymy okienko grupowe z informacjami dotyczacymi identyfikacji dostaw

__grpsel:=__zknrea.grp_make('Kompletacja wysyłki'@,,'#komplwysyl');
__zknrea.grp_sel(__grpsel,__zknrea,__zknsel,,"exec('odswid_m','magazyn_mob')",,,20,,,,,'maximized_with_title');
__zknrea.grp_splt(__grpsel,,'horizontal','idmob');
__zknrea.grp_sel(__grpsel,__dstean,__dstsel,,"grp_disp(__zknrea,__zknsel)",,,8,,,,,'maximized_with_title');
__zknrea.win_sel(__grpsel);

:: tabela kontrolujaca juz rozpisane pozycje
_ilwyk:=tab_tmp(2,'SL','STRING[16]',''
         ,'ILL','REAL','');

_ilepom:=0;
_beerzkn:=BEER.ZK_N;
_param:={? BEER.ZK_N().T().R='Z' || 600800 || 600801 ?};
__ilplus:=~(BEER.ZK_N().MG().PAL='T') & (BEER.ZK_N().LIM='T' | (';ZR'*exec('get','#params',_param,2))>1);
_sa_poz:=0;
_nopal:=1;

ZK_N.sel_adel();
{? 1
|| {? (_b>0 & exec('FindInSet','#table','EANC','AKT',_b,'T')) | _b=0
   || _nrc_z:=EANX.NRC_Z:={? _b=0 & ~_bezwurz || -1 || _b ?}
   |? (_c>0 & exec('FindInSet','#table','EANC','AKT',_c,'T')) | _c=0
   || _nrc_r:=EANX.NRC_R:={? _c=0 & ~_bezwurz || -1 || _c ?}
   |? _d<>'' & (_dok:=exec('FindInSet','#table','EANL','KOD',_d,_d))<>null()
   || EANX.DOK:=_dok
   ?};
   _grp_key:=tm_stamp()+'1';

   _blok:=tab_tmp(1,'RSQL','STRING[20]','','WAR_BE','REAL','');
   _blok_zam:='';
   {? ~_ilezaz
   || BEER.TYP:='Z';
      BEER.ZK_N:=ZK_N.ref();
      _blok.prefix();
      _blok.blank();
      _blok.RSQL:=$ZK_N.ref();
      _blok.WAR_BE:=ZK_N.BRT;
      _blok.add();
      exec('buf_stap','zamsiw_wspolne',BEER.ZK_N,BEER.TYP,,1)
   ?};

   _onemag:=__mags.size()=1;
   _bezmg:=0;

   EANL.cntx_psh();

   {? _onemag
   || EANX.MG:=exec('FindAndGet','#table',MG,__mags.MG,,,null());
      EANX.WYLZAL:={? EANX.MG().MWS='T' & ~EANX.MG().W_ALL || 'N' || 'T' ?}
   || EANX.MG:=null();
      EANX.WYLZAL:='T'
   ?};

   {? ZK_N.T().R='Z'
   ||
      exec('ini_kom','#message','Informacje o pozycjach zamówień.'@);
::    sprawdzenie ceny na pozycjach zamowienia zamowien
      ZK_N.cntx_psh();
      {? _ilezaz & _tab.first()
      || {!
         |? ZK_N.clear;
            {? ZK_N.seek(_tab.REF,ZK_N.name()) & ZK_N.AKC='T' & ZK_N.T().MOB='T'
             & {? _ilezaz>1 || {? ZK_N.MG=null() | ZK_N.MG().PAL='N' || 1 || _nopal:=0; 0 ?} || 1 ?}
             & {? ZK_N.T().ZAP='T' || {? ZK_N.EZAPOT<>'' ||  exec('zapot_akc','zamowienia',ZK_N.EZAPOT) || 0 ?} || 1 ?}
            || BEER.ZK_N:=ZK_N.ref();
               exec('zp_spr_c','zamsiw_nag')
            ?};
            _tab.next()
         !}
      |? ZK_N.AKC='T'
      || exec('zp_spr_c','zamsiw_nag')
      ?};
      ZK_N.cntx_pop();
      exec('end_kom','#message')
   ?};
:: podrezerwowanie tego co się da
   __lstum:=1;
   {? _nopal
   || ZK_N.cntx_psh();
      {? _ilezaz & _tab.first()
      || {!
         |? ZK_N.clear;
            {? ZK_N.seek(_tab.REF,ZK_N.name()) & ZK_N.AKC='T' & ZK_N.T().MOB='T'
            || _bezmg:=~exec('rez2oper','magazyn_mob',ZK_N.ref())
            ?};
            ~_bezmg & _tab.next()
         !}
      |? ZK_N.AKC='T' & ZK_N.T().MOB='T'
      || _bezmg:=~exec('rez2oper','magazyn_mob',ZK_N.ref())
      ?};
      {? ~_bezwurz & (EANX.NRC_Z=0 | EANX.NRC_R=0) || EANX.NRC_Z:=-1; EANX.NRC_R:=-1 ?};
      _edt:=1;
      ZK_N.cntx_pop();
      {? _bezmg
      || _nrc:=-1
      |? _onemag
      || _dict:=EANL.win_dict('?');
         EANL.win_dict('WER');
         _act:=EANL.actions('WER','dpUKMBPEAGZ:dKAZ');
         EANL.index('KOD');
         EANL.prefix();
         EANL.f_clear();
         {? EANX.MG().MWS='T' & EANX.MG().W_ALL
         || EANL.f_set('KOD',,'\"EANL\".MG=:_a and \"EANL\".AKT=\'T\' ',EANX.MG)
         || EANL.f_set('KOD',,'\"EANL\".MG=:_a and \"EANL\".DOK=\'T\' and \"EANL\".AKT=\'T\' ',EANX.MG)
         ?};

         {? EANX.MG<>null & EANX.DOK().MG<>EANX.MG || EANX.DOK:=null ?};

         EANX.win_edit('WYSYLK'+{? EANX.MG().MWS='T' & ~EANX.MG().W_ALL || 'W' || 'A' ?});
         {? (_autonrc & EANX.NRC_Z>=0) | (_edt:=EANX.edit("exec('sprwysyl','magazyn_mob')"); _edt)
         || __mags.clear();
            __mags.prefix($EANX.MG);
            {? __mags.first()
            || {!
               |? __mags.DOK:=$EANX.DOK;
                  __mags.NRK:=EANX.NRC_Z;
                  __mags.put(1);
                  __mags.next()
               !}
            ?}
         || EANX.NRC_Z:=-1
         ?};
         {? EANX.MG().MWS<>'T' | EANX.MG().W_ALL || EANX.NRC_R:=EANX.NRC_Z ?};
         EANL.f_clear();
         EANL.win_dict(_dict);
         EANL.actions('WER',_act)
      || EANX.win_edit('WYSYLKA');
         {? (_autonrc & EANX.NRC_Z>=0) | (_edt:=EANX.edit("exec('sprwysyl','magazyn_mob')");_edt)
         || EANX.NRC_R:=EANX.NRC_Z;
            __mags.clear();
            {? __mags.first()
            || {!
               |? __mags.NRK:=EANX.NRC_Z;
                  __mags.put(1);
                  __mags.next()
               !}
            ?}
         || EANX.NRC_Z:=0
         ?};
         EANX.DOK:=null()
      ?};
      {? ~_bezmg || _nrc:=EANX.NRC_Z ?}
   || _nrc:=-1
   ?};
   EANL.cntx_pop();
   __lstum:=0;
   {? _edt & _nrc>=0 & _nopal
   || {? _tab.size
      || _tab.clear();
         {? _tab.first()
         || _czypom:=0;
            _byl:=1;
            {!
            |? ZK_N.cntx_psh;
               ZK_N.clear;
               {? ZK_N.seek(_tab.REF,ZK_N.name()) & ZK_N.AKC='T' & ZK_N.T().MOB='T'
::                & {? _ilezaz>1 || {? ZK_N.MG().PAL='N' || 1 || _ilepom+=1; 0 ?} || 1 ?}
                & {? exec('add_blk','zamsiw_nag',ZK_N.ref()) || 1 || _blok_zam+=ZK_N.SYM+','; 0 ?}
               || _tabilr:=exec('sapozzkn','magazyn_mob',ZK_N.ref(),POMOC.TR_NZL,__ctrlst);
                  BEER.TYP:='Z';
                  BEER.ZK_N:=ZK_N.ref();
                  BEER.AKTZKN:=$ZK_N.ref();
                  _blok.prefix();
                  _blok.blank();
                  _blok.RSQL:=$ZK_N.ref();
                  _blok.WAR_BE:=ZK_N.BRT;
                  _blok.add();
                  exec('buf_stap','zamsiw_wspolne',BEER.ZK_N,BEER.TYP,_byl,1);
                  _byl:=0;
                  EANN.clear();
                  EANN.blank();
                  EANN.DATA:=date();
                  EANN.TYP:='Z';
                  EANN.REFSQL:=EANN.UNIK:={? POMOC.TR_NZL<>null() || $POMOC.TR_NZL || $ZK_N.ref() ?};
                  EANN.IDZAM:=EANN.IDADD;
                  EANN.SYM:=ZK_N.SYM;
                  EANN.KH:=ZK_N.KH;
                  EANN.ODB:=ZK_N.ODB;
                  EANN.NRC:=_nrc;
                  EANN.IDEANC:=exec('FindInSet','#table','EANC','AKT',_nrc,'T',"EANC.IDADD",,,'');
                  EANN.STAN:='!';
                  EANN.MG:=ZK_N.MG;
                  EANN.TIME:=time();
                  EANN.RODZ:={? ZK_N.T().R='Z' || 'Z' || 'W' ?};
                  EANN.GRP_KEY:=_grp_key;
                  {? EANN.add(1)
                  || _ref:=EANN.ref;
                     EANN.UNIK:=$_ref;
                     EANN.put();
                     __zknrea.clear();
                     __zknrea.blank();
                     __zknrea.TREE:=0;
                     __zknrea.LAB:='Pozycje do wysyłki zamówienia: '+ZK_N.SYM;
                     __zknrea.ICON:=-1;
                     __zknrea.POZ:=__zknrea.REZ:=__zknrea.ILP:=__zknrea.REA:=__zknrea.RES:=__zknrea.PLUS:=0;
                     __zknrea.REF:=$EANN.ref();
                     __zknrea.ZKN:=$ZK_N.ref();
                     __zknrea.JM1:='';
                     __zknrea.NRCS:='reorganizacja';
                     __zknrea.add();
                     _korzen:=__zknrea.ref();
                     {? _<1 || _a:=0 ?};
                     ZK_P.cntx_psh();
                     ZK_P.index('NAG');
                     ZK_P.prefix(ZK_N.ref());
                     {? ZK_P.first()
                     || _czypal:=ZK_N.MG().PAL='T';
                        {!
                        |? _tabilr.clear();
                           {? _tabilr.find_key($ZK_P.M,$ZK_P.ref())
                           || _ilerea:=_tabilr.ILE
                           || _ilerea:=0
                           ?};
                           _top:=$ZK_P.ref();
                           REZ.index('ZK_P');
                           REZ.prefix(ZK_P.ref(),'B');
                           _isREZ:=REZ.first();
                           {? (_isREZ | ~__ctrlst) & _ilerea>0
                           || _czywgd:={? _isREZ
                                       || (1+REZ.MG().TYP)='D' & ~_czypal & (';DAPZ'*ZK_P.M().IDMOB)>1
                                       || (1+ZK_P.MG().TYP)='D' & ~_czypal & (';DAPZ'*ZK_P.M().IDMOB)>1
                                       ?};
                              exec('admatmag','zamsiw_wspolne',{? _isREZ || $REZ.MG || $ZK_P.MG ?},$ZK_P.M);
                              {!
                              |? _open:=exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,{? _isREZ || REZ.MG || ZK_P.MG ?})<>0;
                                 {? _open
                                 || {? ~_isREZ
                                    || _ilr:=_ilerea;
                                       _ilerea:=0
                                    |? _ilerea>=REZ.ILR
                                    || _ilr:=REZ.ILR;
                                       _ilerea-=REZ.ILR
                                    || _ilr:=_ilerea;
                                       _ilerea:=0
                                    ?};
                                    _czypom+=ZK_P.ILP>0 & _ilr<=0;
                                    _czypom+=form(ZK_P.M().KODK)=''
                                 ?};
                                 {? _open & _ilr>0
                                  & {? _isREZ
                                    || REZ.MG<>null() & REZ.MG().SL='T'
                                    || ZK_P.MG<>null() & ZK_P.MG().SL='T'
                                    ?}
                                  & form(ZK_P.M().KODK)<>''
                                 ||
::                                  zwraca lokalizacje dostawy
                                    {? _isREZ
                                    || _lokz:=exec('rozpdk_l','magdok_poz',0,REZ.MG,ZK_P.M,_ilr,ZK_P.N().DLAKH,,,_ilwyk);
                                       _lokz.clear()
                                    || _lokz:=tab_tmp(2,'EANL','STRING[16]',''
                                               ,'TW','DATE',''
                                               ,'IL','REAL','');
                                       _lokz.blank();
                                       _lokz.EANL:={? _isREZ || $REZ.MG().EANL || $ZK_P.MG().EANL ?};
                                       _lokz.TW:=date(0,0,0);
                                       _lokz.IL:=_ilr;
                                       _lokz.add(1)
                                    ?};
                                    {? _wg_tr & POMOC.TR_NZL().EANL<>null()
                                    || _lokz.EANL:=$POMOC.TR_NZL().EANL;
                                       _lokz.put()
                                    ?};
                                    {? _lokz.size() & _lokz.first()
                                    || {!
                                       |? {? ~_czywgd
                                          || _loki:=exec('FindAndGet','#table',EANL,_lokz.EANL,,,null());
                                             _term:=_lokz.TW
                                          || _loki:={? _isREZ || REZ.MG().EANL || ZK_P.MG().EANL ?};
                                             _term:=date(0,0,0)
                                          ?};
                                          EANP.index('TOWLOK2');
                                          EANP.prefix();
                                          {? EANP.find_key(EANN.ref(),ZK_P.M,_loki,_term) & EANP.RSQL=_top
                                          || EANP.IL+=_lokz.IL;
                                             {? EANP.put() || _ok:=1 ?}
                                          || EANP.clear();
                                             EANP.blank;
                                             EANP.EANN:=EANN.ref();
                                             EANP.NRC:=EANN.NRC;
                                             EANP.LOKZ:=_loki;
                                             EANP.LOKDO:=null;
                                             EANP.TW:=_term;
                                             EANP.M:=ZK_P.M;
                                             EANP.EAN:=ZK_P.M().KODK;
                                             EANP.IL:=_lokz.IL;
                                             EANP.ILS:=0;
                                             _ws2:=exec('oblWSP','jm',EANP.M);
                                             EANP.IL2:={? EANP.M().J2<>null() & _ws2>0 || EANP.IL/_ws2 || 0 ?};
                                             EANP.ILS2:=0;
                                             EANP.LP:=ZK_P.POZ;
                                             EANP.RSQL:=_top;
                                             EANP.ZLEAN:=ZK_P.ZL().SCEAN;
                                             {? EANP.M<>null() & ZK_P.DK_C<>null() & ZK_P.DK_C().M_ATR<>null()
                                             || _aa:=1;
                                                _wsk:=form(_aa,-2,0,'99');
                                                {! |? _aa<11 & ($('ZK_P.DK_C().M_ATR().SL_%1'[_wsk]))()<>null()
                                                |! ($('EANP.WAR%1'[_wsk]))():=($('ZK_P.DK_C().WAR%1'[_wsk]))();
                                                   _aa+=1;
                                                   _wsk:=form(_aa,-2,0,'99')
                                                !}
                                             ?};
                                             exec('uzupIDkod','magdok_palety',EANP);
                                             {? EANP.add()
                                             || _ok:=1;
                                                EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
                                                EANP.put()
                                             ?}
                                          ?};
                                          {? _isREZ
                                          || _ilwyk.clear();
                                             {? ~_ilwyk.find_key(_lokz.SL)
                                             || _ilwyk.blank();
                                                _ilwyk.SL:=_lokz.SL;
                                                _ilwyk.ILL:=_lokz.IL;
                                                _ilwyk.add(1)
                                             || _ilwyk.ILL+=_lokz.IL;
                                                _ilwyk.put(1)
                                             ?}
                                          ?};
                                          _lokz.next()
                                       !}
                                    ?};
                                    obj_del(_lokz)
                                 ?};
                                 _isREZ:=REZ.next();
                                 _isREZ | (~__ctrlst & _ilerea>0)
                              !}
                           |? ZK_P.M().RODZ='U'
                           || _naczyt:=exec('oblilean','magazyn_mob',_top);
                              {? (ZK_P.ILP-_naczyt)>0
                              || EANP.clear();
                                 EANP.blank;
                                 EANP.EANN:=EANN.ref();
                                 EANP.NRC:=EANN.NRC;
                                 EANP.LOKZ:=null();
                                 EANP.LOKDO:=null();
                                 EANP.M:=ZK_P.M;
                                 EANP.EAN:=ZK_P.M().KODK;
                                 EANP.IL:=ZK_P.ILP-_naczyt;
                                 _ws2:=exec('oblWSP','jm',EANP.M);
                                 EANP.ILS:=0;
                                 EANP.IL2:={? EANP.M().J2<>null() & _ws2>0 || EANP.IL/_ws2 || 0 ?};
                                 EANP.ILS2:=0;
                                 EANP.LP:=ZK_P.POZ;
                                 EANP.RSQL:=_top;
                                 exec('uzupIDkod','magdok_palety',EANP);
                                 {? EANP.add()
                                 || _ok:=1;
                                    EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
                                    EANP.put()
                                 ?}
                              ?}
                           ?};
                           ZK_P.next()
                        !}
                     ?};
                     ZK_P.cntx_pop();
                     EANP.index('TOWLOK2');
                     EANP.prefix(_ref);
                     {? EANP.first()
                     || {!
                        |?
                           ZK_P.cntx_psh();
                           ZK_P.clear();
                           {? ZK_P.seek(EANP.RSQL,form(8+EANP.RSQL))
                           || __zknrea.prefix();
                              __zknrea.blank();
                              __zknrea.ZKN:=$ZK_P.N;
                              __zknrea.TREE:=_korzen;
                              __zknrea.LAB:=form(ZK_P.POZ,4,0,'99')+'. '+ZK_P.M().KTM+' '+ZK_P.M().N;
                              __zknrea.ZAM:=ZK_P.N().SYM;
                              __zknrea.DTZ:=ZK_P.N().DP;
                              __zknrea.POZ:=ZK_P.POZ;
                              __zknrea.SQL:=$ZK_P.ref();
                              __zknrea.MAG:={? ZK_P.M().RODZ='U' || 'USŁUGA' || EANP.LOKZ().MG().SYM ?};
                              __zknrea.KTM:=ZK_P.M().KTM;
                              __zknrea.SQM:=$ZK_P.M;
                              __zknrea.KODK:=ZK_P.M().KODK;
                              __zknrea.NAZ:=ZK_P.M().N;
                              __zknrea.REZ:=EANP.IL;
                              __zknrea.ILP:=EANP.IL;
                              __zknrea.REA:=__zknrea.RES:=EANP.IL;
                              __zknrea.WYB:='*';
                              __zknrea.JM1:=ZK_P.M().J().KOD;
                              __zknrea.LOKZ:=EANP.LOKZ().KOD;
                              __zknrea.TW:=EANP.TW;
                              __zknrea.REF:=$EANP.ref();
                              __zknrea.NRC:=EANX.NRC_R;
                              __zknrea.NRCS:=form(__zknrea.NRC,6);
                              __zknrea.ICON:=0;
                              __zknrea.CZY:=EANP.LOKZ().MG().PAL='T';
                              __zknrea.RED:=ZK_P.ILRD;
                              __zknrea.SMG:=$EANP.LOKZ().MG;
                              {? __zknrea.add() & (__mags.clear(); __mags.find_key($EANP.LOKZ().MG,$ZK_P.N))
                              || __mags.WYB:=1;
                                 __mags.put(1)
                              ?}
                           ?};
                           ZK_P.cntx_pop();
                           EANP.next()
                        !}
                     || _ok:=0
                     ?};
                     EANN.cntx_psh();
                     EANN.clear;
                     {? EANN.seek(_ref) || {? ~_ok || EANN.del() ?} ?};
                     EANN.cntx_pop
                  ?};
                  obj_del(_tabilr)
               ?};
               ZK_N.cntx_pop();
               _tab.next()
            !};
            {? _ilepom>0
            || FUN.info('Niedostępne grupowe wysłanie na urządzenie mobilne zamówień do magazynu z obsługą palet.\n'
                        'Liczba pominiętych zamówień: %1.'@[form(_ilepom,,0,'99')])
            ?};
            {? _czypom>0
            || {? __ctrlst
               || FUN.info('Nie wszystkie pozycje z zamówień zostały wyszczególnione do wysyłki.\n\n'
                           'Zostały pominięte: pozycje bez pokrycia na stanie magazynu,\n'
                           'pozycje już wysłane na czytnik lub pomniejszono ich ilość,\n'
                           'pozycje o indeksach materiałowych bez przypisanych kodów kreskowych.'@)
               || FUN.info('Nie wszystkie pozycje z zamówień zostały wyszczególnione do wysyłki.\n\n'
                           'Zostały pominięte:\n'
                           'pozycje już wysłane na czytnik lub pomniejszono ich ilość,\n'
                           'pozycje o indeksach materiałowych bez przypisanych kodów kreskowych.'@)
               ?}
            ?}
         ?}
      || {? ZK_N.AKC='T' & ZK_N.T().MOB='T'
         || {? (_sa_poz:=exec('sprpozzk','zamsiw_wspolne',ZK_N.ref());
                {? __ctrlst=0
                || {? _sa_poz=-2
                   || FUN.info('Nie wszystkie indeksy materiałowe na pozycjach zamówienia mają przypisany kod kreskowy.\n'
                               'Do wysyłki zostaną wyszczególnione '
                               'wyłącznie indeksy materiałowe z przypisanym kodem kreskowym.'@)
                   ?};
                   _sa_poz:=1;
                   0
                || _sa_poz=0
                ?})
            || _sa_poz:=1;
              {? _sa_poz
              || _sa_poz:=exec('sprpozzk','zamsiw_wspolne',ZK_N.ref());
                 {? ~_sa_poz
                 || {? ZK_N.MG<>null & exec('czyinwds','magdok_wspolne',ZK_N.MG,date(),,1)
                    || FUN.info('W magazynie: %1 jest otwarta inwentaryzacja.\n'
                                'Niemożliwe wysłanie pozycji do wysyłki.'@[ZK_N.MG().SYM])
                    |? exec('eann2zk','magdok_wspolne',ZK_N.ref())<>''
                    || FUN.info('Zamówienie już zostało wysłane na czytnik (częściowo lub w całości).\n'
                                'Obecnie brak pozycji w magazynie: %1 o stanie dostępnym większym od zera.\n'
                                'Niemożliwe ponowne wysłanie pozycji do wysyłki.'@[ZK_N.MG().SYM])
                    || FUN.info('Brak pozycji w magazynie: %1 o stanie dostępnym większym od zera.\n'
                                'Niemożliwe wysłanie pozycji do wysyłki.'@[ZK_N.MG().SYM])
                    ?}
                 ?}
              ?}
            |? _sa_poz<0
            || {? _sa_poz=-1
               || FUN.info('Wszystkie indeksy materiałowe na pozycjach zamówienia\n'
                           'nie mają przypisanego kodu kreskowy.\n'
                           'Niemożliwe wysłanie pozycji do wysyłki.'@);
                  _sa_poz:=0
               |? _sa_poz=-2
               || FUN.info('Nie wszystkie indeksy materiałowe na pozycjach zamówienia mają przypisany kod kreskowy.\n'
                           'Do wysyłki zostaną wyszczególnione '
                           'wyłącznie indeksy materiałowe z przypisanym kodem kreskowym.'@);
                  _sa_poz:=1
               |? _sa_poz=-4
               || FUN.info('Wszystkie pozycje zamówienia\n'
                           'nie mają przypisanego magazynu.\n'
                           'Niemożliwe wysłanie pozycji do wysyłki.'@);
                  _sa_poz:=0
               |? _sa_poz=-8
               || FUN.info('Nie wszystkie pozycje zamówienia mają przypisany magazyn.\n'
                           'Do wysyłki zostaną wyszczególnione '
                           'wyłącznie pozycje z przypisanym magazynem.'@);
                  _sa_poz:=1
               |? _sa_poz=-10
               || FUN.info('Nie wszystkie indeksy materiałowe na pozycjach zamówienia mają przypisany kod kreskowy.\n'
                           'Nie wszystkie pozycje zamówienia mają przypisany magazyn.\n'
                           'Do wysyłki zostaną wyszczególnione '
                           'wyłącznie indeksy materiałowe z przypisanym kodem kreskowym i mgazynem na pozycjach.'@);
                  _sa_poz:=1
               ?}
            || _sa_poz:=1
            ?}
         || _sa_poz:=0
         ?};
         {? _sa_poz
         || _tabilr:=exec('sapozzkn','magazyn_mob',ZK_N.ref(),POMOC.TR_NZL,__ctrlst);
            _czypal:=ZK_N.MG().PAL='T';
            BEER.TYP:='Z';
            BEER.ZK_N:=ZK_N.ref();
            BEER.AKTZKN:=$ZK_N.ref();
            EANN.clear();
            EANN.blank();
            EANN.DATA:=date();
            EANN.TYP:='Z';
            EANN.REFSQL:=EANN.UNIK:={? POMOC.TR_NZL<>null() || $POMOC.TR_NZL || $ZK_N.ref() ?};
            EANN.IDZAM:=ZK_N.IDADD;
            EANN.SYM:=ZK_N.SYM;
            EANN.KH:=ZK_N.KH;
            EANN.ODB:=ZK_N.ODB;
            EANN.NRC:=_nrc;
            EANN.IDEANC:=exec('FindInSet','#table','EANC','AKT',_nrc,'T',"EANC.IDADD",,,'');
            EANN.STAN:='!';
            EANN.MG:=ZK_N.MG;
            EANN.RODZ:={? ZK_N.T().R='Z' || 'Z' || 'W' ?};
            EANN.TIME:=time();
            EANN.GRP_KEY:=_grp_key;
            {? EANN.add(1)
            || _ref:=EANN.ref;
               EANN.UNIK:=$_ref;
               EANN.put();
               __zknrea.clear();
               __zknrea.blank();
               __zknrea.TREE:=0;
               __zknrea.LAB:='Pozycje do wysyłki zamówienia: '+ZK_N.SYM;
               __zknrea.ICON:=-1;
               __zknrea.POZ:=__zknrea.REZ:=__zknrea.ILP:=__zknrea.REA:=__zknrea.RES:=__zknrea.PLUS:=0;
               __zknrea.REF:=$EANN.ref();
               __zknrea.ZKN:=$ZK_N.ref();
               __zknrea.JM1:='';
               __zknrea.NRCS:='reorganizacja';
               __zknrea.add();
               _korzen:=__zknrea.ref();
               {? _<1 || _a:=0 ?};
               ZK_P.cntx_psh();
               ZK_P.index('NAG');
               ZK_P.prefix(ZK_N.ref());
               {? ZK_P.first()
               || _czypal:=ZK_N.MG().PAL='T';
                  {!
                  |? _tabilr.clear();
                     {? _tabilr.find_key($ZK_P.M,$ZK_P.ref())
                     || _ilerea:=_tabilr.ILE
                     || _ilerea:=0
                     ?};
                     _top:=$ZK_P.ref();
                     REZ.index('ZK_P');
                     REZ.prefix(ZK_P.ref(),'B');
                     _isREZ:=REZ.first();
                     {? (_isREZ | ~__ctrlst) & _ilerea>0
                     || _czywgd:={? _isREZ
                                 || (1+REZ.MG().TYP)='D' & ~_czypal & (';DAPZ'*ZK_P.M().IDMOB)>1
                                 || (1+ZK_P.MG().TYP)='D' & ~_czypal & (';DAPZ'*ZK_P.M().IDMOB)>1
                                 ?};
                        exec('admatmag','zamsiw_wspolne',{? _isREZ || $REZ.MG || $ZK_P.MG ?},$ZK_P.M);
                        {!
                        |? _open:=exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,{? _isREZ || REZ.MG || ZK_P.MG ?})<>0;
                           {? _open
                           || {? ~_isREZ
                              || _ilr:=_ilerea;
                                 _ilerea:=0
                              |? _ilerea>=REZ.ILR
                              || _ilr:=REZ.ILR;
                                 _ilerea-=REZ.ILR
                              || _ilr:=_ilerea;
                                 _ilerea:=0
                              ?}
                           ?};
                           {? _open & _ilr>0
                            & {? _isREZ || REZ.MG<>null() & REZ.MG().SL='T' || ZK_P.MG<>null() & ZK_P.MG().SL='T' ?}
                            & form(ZK_P.M().KODK)<>''
                           ||
::                            zwraca lokalizacje dostawy
                              {? ~_czypal & _isREZ
                              || _lokz:=exec('rozpdk_l','magdok_poz',0,REZ.MG,ZK_P.M,_ilr,ZK_P.N().DLAKH,,,_ilwyk);
                                 _lokz.clear()
                              || _lokz:=tab_tmp(2,'EANL','STRING[16]',''
                                         ,'TW','DATE',''
                                         ,'IL','REAL','');
                                 _lokz.blank();
                                 _lokz.EANL:={? _isREZ || $REZ.MG().EANL || $ZK_P.MG().EANL ?};
                                 _lokz.TW:=date(0,0,0);
                                 _lokz.IL:=_ilr;
                                 _lokz.add(1)
                              ?};
                              {? _lokz.size() & _lokz.first()
                              || {!
                                 |? {? ~_czywgd
                                    || _loki:=exec('FindAndGet','#table',EANL,_lokz.EANL,,,null());
                                       _term:=_lokz.TW
                                    || _loki:={? _isREZ || REZ.MG().EANL || ZK_P.MG().EANL ?};
                                       _term:=date(0,0,0)
                                    ?};
                                    EANP.index('TOWLOK2');
                                    EANP.prefix();
                                    {? EANP.find_key(EANN.ref(),ZK_P.M,_loki,_term) & EANP.RSQL=_top
                                    || EANP.IL+=_lokz.IL;
                                       {? EANP.put() || _ok:=1 ?}
                                    || EANP.clear();
                                       EANP.blank;
                                       EANP.EANN:=EANN.ref();
                                       EANP.NRC:=EANN.NRC;
                                       EANP.LOKZ:=_loki;
                                       EANP.LOKDO:=null;
                                       EANP.TW:=_term;
                                       EANP.M:=ZK_P.M;
                                       EANP.EAN:=ZK_P.M().KODK;
                                       EANP.IL:=_lokz.IL;
                                       EANP.ILS:=0;
                                       _ws2:=exec('oblWSP','jm',EANP.M);
                                       EANP.IL2:={? EANP.M().J2<>null() & _ws2>0 || EANP.IL/_ws2 || 0 ?};
                                       EANP.ILS2:=0;
                                       EANP.LP:=ZK_P.POZ;
                                       EANP.RSQL:=_top;
                                       EANP.ZLEAN:=ZK_P.ZL().SCEAN;
                                       {? EANP.M<>null() & ZK_P.DK_C<>null() & ZK_P.DK_C().M_ATR<>null()
                                       || _aa:=1;
                                          _wsk:=form(_aa,-2,0,'99');
                                          {! |? _aa<11 & ($('ZK_P.DK_C().M_ATR().SL_%1'[_wsk]))()<>null()
                                          |! ($('EANP.WAR%1'[_wsk]))():=($('ZK_P.DK_C().WAR%1'[_wsk]))();
                                             _aa+=1;
                                             _wsk:=form(_aa,-2,0,'99')
                                          !}
                                       ?};
                                       exec('uzupIDkod','magdok_palety',EANP);
                                       {? EANP.add()
                                       || _ok:=1;
                                          EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
                                          EANP.put()
                                       ?}
                                    ?};
                                    {? ~_czypal & _isREZ
                                    || _ilwyk.clear();
                                       {? ~_ilwyk.find_key(_lokz.SL)
                                       || _ilwyk.blank();
                                          _ilwyk.SL:=_lokz.SL;
                                          _ilwyk.ILL:=_lokz.IL;
                                          _ilwyk.add(1)
                                       || _ilwyk.ILL+=_lokz.IL;
                                          _ilwyk.put(1)
                                       ?}
                                    ?};
                                    _lokz.next()
                                 !}
                              ?};
                              obj_del(_lokz)
                           ?};
                           _isREZ:=REZ.next();
                           _isREZ | (~__ctrlst & _ilerea>0)
                        !}
                     |? ZK_P.M().RODZ='U'
                     || _naczyt:=exec('oblilean','magazyn_mob',_top);
                        {? (ZK_P.ILP-_naczyt)>0
                        || EANP.clear();
                           EANP.blank;
                           EANP.EANN:=EANN.ref();
                           EANP.NRC:=EANN.NRC;
                           EANP.LOKZ:=null();
                           EANP.LOKDO:=null();
                           EANP.M:=ZK_P.M;
                           EANP.EAN:=ZK_P.M().KODK;
                           EANP.IL:=ZK_P.ILP-_naczyt;
                           EANP.ILS:=0;
                           _ws2:=exec('oblWSP','jm',EANP.M);
                           EANP.IL2:={? EANP.M().J2<>null() & _ws2>0 || EANP.IL/_ws2 || 0 ?};
                           EANP.ILS2:=0;
                           EANP.LP:=ZK_P.POZ;
                           EANP.RSQL:=_top;
                           exec('uzupIDkod','magdok_palety',EANP);
                           {? EANP.add()
                           || _ok:=1;
                              EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
                              EANP.put()
                           ?}
                        ?}
                     ?};
                     ZK_P.next()
                  !}
               ?};
               ZK_P.cntx_pop();
               EANP.index('TOWLOK2');
               EANP.prefix(EANN.ref());
               {? EANP.first()
               || {!
                  |?
                     ZK_P.cntx_psh();
                     ZK_P.clear();
                     {? ZK_P.seek(EANP.RSQL,form(8+EANP.RSQL))
                     || __zknrea.prefix();
                        __zknrea.blank();
                        __zknrea.TREE:=_korzen;
                        __zknrea.LAB:=form(ZK_P.POZ,4,0,'99')+'. '+ZK_P.M().KTM+' '+ZK_P.M().N;
                        __zknrea.ZKN:=$ZK_P.N;
                        __zknrea.ZAM:=ZK_P.N().SYM;
                        __zknrea.DTZ:=ZK_P.N().DP;
                        __zknrea.POZ:=ZK_P.POZ;
                        __zknrea.SQL:=$ZK_P.ref();
                        __zknrea.MAG:={? ZK_P.M().RODZ='U' || 'USŁUGA' || EANP.LOKZ().MG().SYM ?};
                        __zknrea.KTM:=ZK_P.M().KTM;
                        __zknrea.SQM:=$ZK_P.M;
                        __zknrea.KODK:=ZK_P.M().KODK;
                        __zknrea.NAZ:=ZK_P.M().N;
                        __zknrea.REZ:=EANP.IL;
                        __zknrea.ILP:=EANP.IL;
                        __zknrea.REA:=__zknrea.RES:=EANP.IL;
                        __zknrea.WYB:='*';
                        __zknrea.JM1:=ZK_P.M().J().KOD;
                        __zknrea.LOKZ:=EANP.LOKZ().KOD;
                        __zknrea.TW:=EANP.TW;
                        __zknrea.REF:=$EANP.ref();
                        __zknrea.NRC:=EANX.NRC_R;
                        __zknrea.NRCS:=form(__zknrea.NRC,6);
                        __zknrea.ICON:=0;
                        __zknrea.CZY:=EANP.LOKZ().MG().PAL='T';
                        __zknrea.RED:=ZK_P.ILRD;
                        __zknrea.SMG:=$EANP.LOKZ().MG;
                        {? __zknrea.add() & (__mags.clear(); __mags.find_key($EANP.LOKZ().MG,$ZK_P.N))
                        || __mags.WYB:=1;
                           __mags.put(1)
                        ?}
                     ?};
                     ZK_P.cntx_pop();
                     EANP.next()
                  !}
               || _ok:=0
               ?};

               EANN.cntx_psh();
               EANN.clear;
               {? EANN.seek(_ref) || {? ~_ok || EANN.del() ?} ?};
               EANN.cntx_pop()
            ?}
         |? _sa_poz
         || FUN.info('Już istnieje niezamknięta kompletacja wysyłki.\n'
                     'Ponowne generowanie wysyłki możliwe po zamknięciu wcześniejszej wysyłki.'@)
         ?}
      ?};
      {? _blok_zam<>''
      || FUN.info('Z powodu blokady przez innych użytkowników\nnie będą realizowane zamówienia:\n%1.'@[_blok_zam-1])
      ?};

      __zknrea.clear();
::    sprawdzenie dostepnosci wg palet
      _czypal:=_ilezaz<2 & ZK_N.MG().PAL='T';
      {? _czypal & __zknrea.first()
      || EANN.clear();
         EANN.seek(_ref);
         {? exec('wybpalzk','zamsiw_palety',1)
         || ''
         || FUN.info('Nie wybrano palet do realizacji zamówienia.\nRealizacja niemożliwa.'@);
            __zknrea.clear();
            __zknrea.for_each("{? __zknrea.TREE
                               || EANP.clear();
                                  {? (4+__zknrea.REF)='eanp' & EANP.seek(__zknrea.REF,) || EANP.del() ?};
                                  __zknrea.del()
                               ?}",0);
            __zknrea.for_each("EANP.clear();
                               {? (4+__zknrea.REF)='eanp' & EANP.seek(__zknrea.REF,) || EANP.del() ?};
                               __zknrea.del()",0);
            EANN.cntx_psh();
            EANN.clear;
            {? EANN.seek(_ref) || EANN.del() ?};
            EANN.cntx_pop()
         ?}
      ?};
      exec('dstidmob','magazyn_mob');
      {? __zknrea.first() & __zknrea.size()>1 & ~_czypal
      || _korzen:=0;
         __mags.clear();
         {? __mags.first()
         || {!
            |? {? __mags.WYB
               || MG.cntx_psh();
                  MG.clear();
                  {? MG.seek(__mags.MG)
                  || {? _korzen=0
                     || __zknrea.clear();
                        __zknrea.blank();
                        __zknrea.TREE:=0;
                        __zknrea.LAB:='Parametry dla magazynów';
                        __zknrea.MAG:='';
                        __zknrea.LOKZ:='';
                        __zknrea.ICON:=-2;
                        __zknrea.POZ:=__zknrea.REZ:=__zknrea.ILP:=__zknrea.REA:=__zknrea.RES:=__zknrea.PLUS:=0;
                        __zknrea.REF:=$EANN.ref();
                        __zknrea.ZKN:='';
                        __zknrea.JM1:='';
                        __zknrea.NRCS:='załadunek';
                        {? __zknrea.add() || _korzen:=__zknrea.ref() ?}
                     ?};
                     __zknrea.clear();
                     {? ~__zknrea.find_key(_korzen,'Magazyn: '+MG.SYM,)
                     || __zknrea.blank();
                        __zknrea.TREE:=_korzen;
                        __zknrea.LAB:='Magazyn: '+MG.SYM;
                        __zknrea.MAG:=MG.SYM;
                        __zknrea.LOKZ:={? EANX.DOK<>null() || EANX.DOK().KOD || MG.EANL().KOD ?};
                        __zknrea.ICON:=-2;
                        __zknrea.POZ:=__zknrea.REZ:=__zknrea.ILP:=__zknrea.REA:=__zknrea.RES:=__zknrea.PLUS:=0;
                        __zknrea.REF:=$EANN.ref();
                        __zknrea.ZKN:=$MG.ref();
                        __zknrea.NRC:=EANX.NRC_Z;
                        __zknrea.NRCS:=form(__zknrea.NRC,6);
                        __zknrea.JM1:='';
                        __zknrea.SMG:=$MG.ref();
                        __zknrea.add()
                     ?}
                  ?};
                  MG.cntx_pop();
                  __mags.next()
               || __mags.del()
               ?}
            !}
         ?}
      ?};
      _esc:=0;
      _il_usl:=0;
      _ok:=__zknrea.first() & __zknrea.size()>1 & {? ~_czypal || {? __zknrea.select() || 1 || _esc:=1; 0 ?} || 1 ?};

::    sprawdza czy istnieja pozycje do wysylki
      _eanns:=tab_tmp(2,'ZKN','STRING[16]','','REF','STRING[16]','');
      {? __zknrea.first()
      ||
         _il_sum:=0;
         {!
         |? _il_sum+=__zknrea.RES;
            _il_usl+={? __zknrea.SQM<>'' & exec('FindAndGet','#table',M,__zknrea.SQM,,"RODZ",'')='U'
                     || __zknrea.RES
                     || 0
                     ?};
            {? __zknrea.RES>0 & (__mags.clear(); __mags.find_key(__zknrea.SMG,__zknrea.ZKN))
            || __mags.WYB:=2;
               __mags.put(1);
               _refe:=$exec('FindAndGet','#table',EANP,__zknrea.REF,,"EANN",null());
               _eanns.clear();
               _eanns.prefix(__zknrea.ZKN,_refe);
               {? ~_eanns.first()
               || _eanns.blank();
                  _eanns.REF:=_refe;
                  _eanns.ZKN:=__zknrea.ZKN;
                  _eanns.add(1)
               ?}
            ?};
            __zknrea.next()
         !};
         {? _il_sum=0 | _il_sum=_il_usl || _ok:=0 ?}
      ?};
      {? _ok=1
      ||
::       przepisanie nowych ilosci + aktywacja statusu do tabeli EANP
         _czymws:=0;
         __mags.clear();
         {? __mags.first()
         || {!
            |? {? __mags.WYB=2
               || _eanns.clear();
                  _eanns.prefix(__mags.ZKN);
                  {? _eanns.first() & (EANN.clear(); EANN.seek(_eanns.REF))
                  || {? $EANN.MG=''
                     || EANN.MG:=exec('FindAndGet','#table',MG,__mags.MG,,,null());
                        EANN.NRC:=__mags.NRK;
                        EANN.IDEANC:=exec('FindInSet','#table','EANC','AKT',__mags.NRK,'T',"EANC.IDADD",,,'');
                        EANN.UNIK:=$EANN.ref();
                        EANN.REFSQL:={? POMOC.TR_NZL<>null() || $POMOC.TR_NZL || __mags.ZKN ?};
                        EANN.IDZAM:={? POMOC.TR_NZL<>null()
                                    || POMOC.TR_NZL().IDADD
                                    || exec('FindAndGet','#table',ZK_N,__mags.ZKN,,"IDADD",'')
                                    ?};
                        {? POMOC.TR_NZL<>null() || EANN.ZEANN:=__mags.ZKN ?};
                        _bufeann:={? EANN.put(1) || $EANN.ref() || '' ?}
                     |? $EANN.MG=__mags.MG
                     || EANN.NRC:=__mags.NRK;
                        EANN.IDEANC:=exec('FindInSet','#table','EANC','AKT',__mags.NRK,'T',"EANC.IDADD",,,'');
                        EANN.UNIK:=$EANN.ref();
                        EANN.REFSQL:={? POMOC.TR_NZL<>null() || $POMOC.TR_NZL || __mags.ZKN ?};
                        EANN.IDZAM:={? POMOC.TR_NZL<>null()
                                    || POMOC.TR_NZL().IDADD
                                    || exec('FindAndGet','#table',ZK_N,__mags.ZKN,,"IDADD",'')
                                    ?};
                        {? POMOC.TR_NZL<>null() || EANN.ZEANN:=__mags.ZKN ?};
                        EANN.put(1);
                        _bufeann:=$EANN.ref()
                     || EANN.cntx_psh();
                        EANN.clear();
                        EANN.MG:=exec('FindAndGet','#table',MG,__mags.MG,,,null());
                        EANN.NRC:=__mags.NRK;
                        EANN.IDEANC:=exec('FindInSet','#table','EANC','AKT',__mags.NRK,'T',"EANC.IDADD",,,'');
                        _bufeann:={? EANN.add(1) || $EANN.ref() || '' ?};
                        EANN.UNIK:=$EANN.ref();
                        EANN.REFSQL:={? POMOC.TR_NZL<>null() || $POMOC.TR_NZL || __mags.ZKN ?};
                        EANN.IDZAM:={? POMOC.TR_NZL<>null()
                                    || POMOC.TR_NZL().IDADD
                                    || exec('FindAndGet','#table',ZK_N,__mags.ZKN,,"IDADD",'')
                                    ?};
                        {? POMOC.TR_NZL<>null() || EANN.ZEANN:=__mags.ZKN ?};
                        EANN.put(1);
                        EANN.cntx_pop()
                     ?};
                     __mags.EANN:=_bufeann;
                     __mags.put(1);
                     {? ~_czymws & __mags.MWS='T' || _czymws:=1 ?};
                     __mags.next()
                  || __mags.next()
                  ?}
               |? ~__ctrlst & (_eanns.prefix(); _eanns.first())
               || {!
                  |? EANN.prefix();
                     {? EANN.seek(_eanns.REF)
                     || {? exec('FindInSet','#table','EANP','EANN',EANN.ref())<>null
                        || _wyn:=_grp_key;
                           EANN.STAN:='O';
                           EANN.ILP:=exec('addilp','magazyn_mob',EANN.ref());
                           _refeann:=$EANN.ref();
                           EANN.put(1)
                        || EANN.del()
                        ?}
                     ?};
                     _eanns.next()
                  !}
               || __mags.del()
               ?}
            !}
         || _czymws:=ZK_N.MG().MWS='T' & ~ZK_N.MG().W_ALL
         ?};

         _refeann:='';
         {? _czypal
         || EANN.clear();
            {? EANN.seek(_ref)
            || {? exec('FindInSet','#table','EANP','EANN',EANN.ref())<>null
               || _wyn:=_grp_key;
                  EANN.STAN:='O';
                  EANN.ILP:=exec('addilp','magazyn_mob',EANN.ref());
                  _refeann:=$EANN.ref();
                  EANN.put(1)
               || EANN.del()
               ?}
            ?}
         |? __zknrea.first()
         || _steann:=tab_tmp(1,'EANN','STRING[16]','');
            {!
            |?
               {? __zknrea.TREE<>0 & __zknrea.ICON<>-2
               || EANP.cntx_psh();
                  EANP.clear();
                  {? (4+__zknrea.REF)='eanp' & EANP.seek(__zknrea.REF,form(8+__zknrea.REF))
                  || {? ~__zknrea.CZY & __zknrea.RES>0 & __zknrea.SCEAN=''
                     ||
                        __dstean.clear();
                        __dstean.prefix($__zknrea.ref());
                        {? __dstean.first()
                        || {? (';DAPZ'*__dstean.TYP)>1
                           || _doroz:={? ~__ctrlst || __zknrea.RES || 0 ?};
                              _first:=1;
                              {!
                              |? {? __dstean.ILR>0
                                 || _doroz-=__dstean.ILR;
                                    EANP.IL:=__dstean.ILR;
                                    EANP.SCEAN:=__dstean.SCEAN;
                                    EANP.LOKZ:=exec('FindAndGet','#table',EANL,__dstean.REFL,,,null());
                                    EANP.TW:=__dstean.TW;
                                    _ws2:=exec('oblWSP','jm',EANP.M);
                                    EANP.IL2:={? EANP.M().J2<>null() & _ws2>0 || EANP.IL/_ws2 || 0 ?};
                                    exec('uzupIDkod','magdok_palety',EANP);
                                    {? _first
                                    || _first:=0;
                                       {? EANP.put(1)
                                       || __zknrea.SCEAN:={? EANP.SCEAN<>'' || EANP.SCEAN || 'brak id' ?};
                                          __zknrea.REA:=__zknrea.RES:=EANP.IL;
                                          __zknrea.LOKZ:=__dstean.LOKZ;
                                          __zknrea.put(1)
                                       ?}
                                    || {? EANP.add(1)
                                       || EANP.UNIK:='';
                                          __zknrea.SCEAN:={? EANP.SCEAN<>'' || EANP.SCEAN || 'brak id' ?};
                                          __zknrea.REA:=__zknrea.RES:=EANP.IL;
                                          __zknrea.LOKZ:=__dstean.LOKZ;
                                          __zknrea.add(1)
                                       ?}
                                    ?};
                                    EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
                                    {? (__mags.clear(); __mags.find_key($EANP.LOKZ().MG,__zknrea.ZKN))
                                    || EANX.DOK:=exec('FindAndGet','#table',EANL,__mags.DOK,,,null());
                                       EANP.EANN:=exec('FindAndGet','#table',EANN,__mags.EANN,,,null());
                                       EANP.NRC:=EANP.EANN().NRC
                                    ?};
                                    {? EANP.LOKZ().MG().MWS='T' & ~EANP.LOKZ().MG().W_ALL || EANP.LOKZ:=EANX.DOK ?};
                                    EANP.put(1)
                                 ?};
                                 __dstean.next()
                              !};
                              {? _doroz>0
                              || EANP.IL:=_doroz;
                                 EANP.SCEAN:='';
                                 EANP.LOKZ:=exec('FindAndGet','#table',MG,__zknrea.SMG,,"EANL",null());
                                 EANP.TW:=date(0,0,0);
                                 _ws2:=exec('oblWSP','jm',EANP.M);
                                 EANP.IL2:={? EANP.M().J2<>null() & _ws2>0 || EANP.IL/_ws2 || 0 ?};
                                 exec('uzupIDkod','magdok_palety',EANP);
                                 {? EANP.add(1)
                                 || EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
                                    EANP.NRC:=EANP.EANN().NRC
                                 ?};
                                 {? EANP.LOKZ().MG().MWS='T' & ~EANP.LOKZ().MG().W_ALL || EANP.LOKZ:=EANX.DOK ?};
                                 EANP.put(1)
                              ?}
                           || EANP.IL:=__zknrea.RES;
                              _ws2:=exec('oblWSP','jm',EANP.M);
                              EANP.IL2:={? EANP.M().J2<>null() & _ws2>0 || EANP.IL/_ws2 || 0 ?};
                              {? __zknrea.SQM<>'' & exec('FindAndGet','#table',M,__zknrea.SQM,,"RODZ",'')='U'
                              || EANP.ILS:=__zknrea.RES
                              ?};
                              {? (__mags.clear(); __mags.find_key($EANP.LOKZ().MG,__zknrea.ZKN))
                              || EANX.DOK:=exec('FindAndGet','#table',EANL,__mags.DOK,,,null());
                                 EANP.EANN:=exec('FindAndGet','#table',EANN,__mags.EANN,,,null());
                                 EANP.NRC:=EANP.EANN().NRC
                              ?};
                              {? EANP.LOKZ().MG().MWS='T' & ~EANP.LOKZ().MG().W_ALL || EANP.LOKZ:=EANX.DOK ?};
                              {? EANP.put(1)
                              || __zknrea.SCEAN:={? EANP.SCEAN<>'' || EANP.SCEAN || 'brak id' ?};
                                 __zknrea.put(1)
                              ?}
                           ?}
                        ?};
                        __mags.clear();
                        {? __mags.first()
                        || {!
                           |? EANN.clear();
                              {? (_steann.clear(); ~_steann.find_key(__mags.EANN)) & EANN.seek(__mags.EANN)
                              || _steann.blank();
                                 _steann.EANN:=__mags.EANN;
                                 _steann.add(1)
                              ?};
                              __mags.next()
                           !}
                        ?}
                     |? ~(~__zknrea.CZY & __zknrea.RES>0)
                     || _eann:=EANP.EANN;
                        EANP.del();
                        {? exec('FindInSet','#table','EANP','EANN',_eann)=null
                        || EANN.cntx_psh();
                           EANN.clear();
                           {? EANN.seek(_eann) || EANN.del() ?};
                           EANN.cntx_pop()
                        ?}
                     ?}
                  ?};
                  EANP.cntx_pop()
               ?};
               __zknrea.next()
            !};
            _steann.clear();
            {? _steann.first()
            || {!
               |? EANN.clear();
                  {? EANN.seek(_steann.EANN)
                  || EANN.STAN:='O';
                     EANN.ILP:=exec('addilp','magazyn_mob',EANN.ref());
                     _refeann:=$EANN.ref();
                     EANN.put(1)
                  ?};
                  _steann.next()
               !}
            ?};
            obj_del(_steann)
         ?};
         _rozpa:={? _czypal & _refeann<>''
                 || exec('pal_iroz','magazyn_mob',exec('FindAndGet','#table',EANN,_refeann,,,null()),,1)
                 || 0
                 ?};
::       reorganizacja w przypadku kompletacji zlozonej
         {? _czymws | _rozpa=1 | _rozpa=2
         || _symzam:=ZK_N.SYM;
            _i:=0;
            {? {? ZK_N.MG<>null() || ZK_N.MG().PAL='N' || __mags.size() ?}
            || _grnrc:=sql('select distinct :_a.NRC NRC, :_a.SMG SMG, :_a.ZKN ZKN'+
                           ' from :_a where :_a.REA>0 and :_a.ICON<>-2 ',__zknrea);
               _grnrc.clear;
               {? _grnrc.first()
               || _ndx:=__zknrea.ndx_tmp('',0,'NRC',,0,'SMG',,0,'ZKN',,0,'ICON',,0,'LOKZ',,0,'KTM',,0);
                  {!
                  |? {? _grnrc.NRC>=0 & exec('FindAndGet','#table',MG,_grnrc.SMG,,"MWS",'')='T'
                     || __zknrea.index(_ndx);
                        __zknrea.prefix(_grnrc.NRC,_grnrc.SMG,_grnrc.ZKN,0);
                        {? __zknrea.first()
                        || DK_LN.clear();
                           DK_LN.blank();
                           _i+=0.033333;
                           DK_LN.TM+=_i;
                           DK_LN.MG:=exec('FindAndGet','#table',MG,_grnrc.SMG,,,null());
                           DK_LN.RODZ:='S';
                           __mags.clear();
                           {? __mags.find_key(_grnrc.SMG,__zknrea.ZKN)
                           || DK_LN.ZDOK:=__mags.EANN;
                              EANX.DOK:=exec('FindAndGet','#table','EANL',__mags.DOK,,,null())
                           || DK_LN.ZDOK:=_refeann
                           ?};
                           _refakc:={? ~DK_LN.add() || undo(); null || DK_LN.ref() ?};
                           {? _refakc<>null
                           || {!
                              |? {? __zknrea.SCEAN<>'brak id'
                                 || _scean:=__zknrea.SCEAN;
                                    _czyscean:=1
                                 || _scean:='';
                                    _czyscean:=0
                                 ?};
                                 _lok:=exec('FindInSet','#table','EANL','KOD',__zknrea.LOKZ,__zknrea.LOKZ);
                                 {? _lok<>EANX.DOK
                                 || {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref()
                                         ,_lok,EANX.DOK,__zknrea.TW,__zknrea.TW,__zknrea.REA,DK_LN.MG
                                         ,exec('FindInSet','#table','M','MATKTM',__zknrea.KTM,__zknrea.KTM),~_czyscean
                                         ,,,,,,_scean)
                                    || undo()
                                    ?}
                                 ?};
                                 __zknrea.next()
                              !};
                              _symzam:=exec('FindAndGet','#table',ZK_N,_grnrc.ZKN,,"SYM",'');
                              exec('dkl2eann','magazyn_mob',_refakc,_grnrc.NRC,,_symzam,_grp_key)
                           ?}
                        ?}
                     ?};
                     _grnrc.next()
                  !};
                  __zknrea.ndx_drop(_ndx)
               ?};
               obj_del(_grnrc)
            |? _refeann<>'' & (_refik:=exec('FindAndGet','#table',EANN,_refeann,,,null()))<>null
            || _dklnroz:=tab_tmp(2,'KODK','STRING[128]','','REF','STRING[16]','');
               _dklnpal:=null;

               EANP.cntx_psh();
               EANP.index('EANN');
               EANP.prefix(_refik);
               {? EANP.first()
               ||
                  _bpal:=tab_tmp(1,'PAL','STRING[16]','');
                  _rozpa:=exec('pal_iroz','magazyn_mob',_refik,,1);

                  {? _rozpa=1 | _rozpa=2
                  || EANP.cntx_psh();
                     {!
                     |? _kodpaldo:={? EANP.PALDO<>null() || EANP.PALDO().KODK || EANP.PALDOEAN ?};
                        {? (_czymws | _rozpa<3) & _kodpaldo<>'' & EANP.PAL<>EANP.PALDO
                         & (_dklnroz.clear(); _dklnroz.prefix(_kodpaldo,); ~_dklnroz.first())
                        || DK_LN.clear();
                           DK_LN.blank();
                           _i+=0.033333;
                           DK_LN.TM+=_i;
                           DK_LN.MG:=ZK_N.MG;
                           DK_LN.RODZ:='S';
                           DK_LN.ZDOK:=_refeann;
                           {? ~DK_LN.add()
                           || undo();
                              null()
                           || _dklnroz.prefix();
                              _dklnroz.blank();
                              _dklnroz.REF:=$DK_LN.ref();
                              _dklnroz.KODK:=_kodpaldo;
                              _dklnroz.add(1)
                           ?}
                        ?};
                        EANP.next()
                     !};
                     EANP.cntx_pop()
                  ?};

                  {? _rozpa=0 | _rozpa>=2
                  || DK_LN.clear();
                     DK_LN.blank();
                     _i+=0.033333;
                     DK_LN.TM+=_i;
                     DK_LN.MG:=ZK_N.MG;
                     DK_LN.RODZ:='S';
                     DK_LN.ZDOK:=_refeann;
                     _refakc:={? ~DK_LN.add() || undo(); null || DK_LN.ref() ?};
                     _dklnpal:=_refakc
                  || _dklnpal:=null()
                  ?};

                  {? _dklnroz.size() | _dklnpal<>null()
                  || {!
                     |? _tech:={? ~_czymws
                               || EANP.PAL<>null() & EANP.PAL().BEZOZN='B' & EANP.PAL().MG=EANP.LOKZ().MG
                               || EANP.PALDO<>null() & EANP.PALDO().BEZOZN='B' & EANP.PALDO().MG=EANP.LOKZ().MG
                               ?};
                        {? ~_tech | _czymws
                        || EANP.cntx_psh();
                           {? EANP.ZPALET=2
                           || {? _rozpa>2 & _dklnpal<>null()
                              || {? ~exec('addrozpa','magazyn_mob',exec('FindAndGet','#table',DK_LN,_dklnpal,,,null()))
                                 || undo()
                                 ?}
                              |? (_dklnroz.clear(); _dklnroz.prefix(_kodpaldo,); _dklnroz.first())
                              || {? ~exec('addrozpa','magazyn_mob',exec('FindAndGet','#table',DK_LN,_dklnroz.REF,,,null()))
                                 || undo()
                                 ?}
                              || undo()
                              ?}
                           || {? EANP.LOKDO<>EANX.DOK
                              || {? ~exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),EANP.LOKDO,EANX.DOK,date(0,0,0)
                                     ,date(0,0,0),1,DK_LN.MG,null,0,,EANP.PAL,EANP.PAL,,,EANP.SCEAN)
                                 || undo()
                                 ?}
                              ?}
                           ?};
                           EANP.cntx_pop()
                        ?};
                        {? EANP.ZPALET=2
                        || EANP.LOKDO:=null;
                           {? ~_tech
                           || EANP.M:=null();
                              EANP.ZPALET:=1;
                              EANP.PAL:=EANP.PALDO;
                              EANP.EAN:=EANP.PAL().KODK;
                              EANP.PALDO:=null();
                              EANP.PALEAN:=EANP.PAL().KODK;
                              EANP.IL:=1
                           || EANP.EAN:=EANP.M().KODK;
                              EANP.ZPALET:=2;
                              EANP.ROZPAL:={? _czymws || 3 || 1 ?};
                              EANP.PALDO:=null;
                              EANP.PALEAN:=EANP.PAL().KODK
                           ?}
                        || EANP.LOKDO:=null
                        ?};
                        _bpal.clear();
                        {? _bpal.find_key($EANP.PAL)
                        || _refb:=EANP.ref(); _okb:=EANP.next();
                           EANP.cntx_psh();
                           EANP.clear();
                           {? EANP.seek(_refb) || EANP.del() ?};
                           EANP.cntx_pop();
                           _okb
                        || _bpal.blank();
                           _bpal.PAL:=$EANP.PAL;
                           _bpal.add(1);
                           EANP.put(1);
                           EANP.next()
                        ?}
                     !};
                     {? EANX.NRC_R=0 || EANX.NRC_R:=EANX.NRC_Z ?};
                     {? _dklnpal<>null
                     || exec('dkl2eann','magazyn_mob',_dklnpal,EANX.NRC_R,,_symzam,_grp_key,_rozpa>2)
                     ?};
                     {? _dklnroz.size()
                     || _dklnroz.prefix();
                        {? _dklnroz.first()
                        || {!
                           |? exec('dkl2eann','magazyn_mob',exec('FindAndGet','#table',DK_LN,_dklnroz.REF,,,null())
                               ,EANX.NRC_R,1,_symzam,_grp_key);
                              _dklnroz.next()
                           !}
                        ?}
                     ?}
                  ?};
                  obj_del(_bpal)
               ?};
               EANP.cntx_pop();
               obj_del(_dklnroz)
            ?}
         ?}
      ||
::       usuniecie EANN i EANP
         {? __zknrea.first()
         || {!
            |? {? __zknrea.TREE=0
               || EANN.clear();
                  {? EANN.seek(__zknrea.REF,form(8+__zknrea.REF))
                  || EANP.index('EANN');
                     EANP.prefix(EANN.ref());
                     {? EANP.first() || {! |? EANP.del() !} ?};
                     EANN.del()
                  ?}
               ?};
               __zknrea.next()
            !}
         ?};
         {? ~_esc
         || {? _il_usl=0
            || FUN.info('Brak pozycji na zamówieniu do kompletacji wysyłki.'@)
            || FUN.info('Nie można realizować kompletacji wysyłki wyłącznie na pozycje usługowe.'@)
            ?}
         ?}
      ?};
      obj_del(_eanns)
   |? ~_nopal
   || FUN.info('Grupowa generacja kompletacji nie jest dostępna w magazynach z obsługą palet.'@)
   |? _bezmg
   || FUN.info('Istnieją pozycje zamówienia bez przypisanego magazynu.\nWysłanie kompletacji niemożliwe.'@)
   |? ~_edt
   || FUN.info('Nie wskazano urządzenia.\nWysłanie kompletacji niemożliwe.'@)
   ?};

   exec('anul_bez','zamsiw_rea');

   ZK_N.cntx_psh();
   _blok.prefix();
   {? _blok.first()
   || {!
      |? ZK_N.prefix();
         {? ZK_N.seek(_blok.RSQL)
         || BEER.ZK_N:=ZK_N.ref();
            BEER.TYP:='Z';
            exec('akt_stap','zamsiw_wspolne',BEER.ZK_N,BEER.TYP,,,~_sa_poz | ~__ctrlst);
            exec('obl_warz','zamsiw_nag',BEER.ZK_N,,1)
         ?};
         _blok.next()
      !};
::    aktualizujemy stany na danych materialach
      {? var_pres('__mat_mag')>100 || exec('wgmatmag','magazyn_stan') ?}
   ?};
   ZK_N.cntx_pop()
?};
BEER.ZK_N:=_beerzkn;

exec('done_blk','zamsiw_nag');

obj_del(_ilwyk);
VAR_DEL.delete('__refrea','__mags','__ctrlst','__lstum');
VAR_DEL.delete('__zknrea','__eanc','__eann','__mat_mag','__dstean','__dstsel','__zknsel','__grpsel','__dstbtn');
_wyn


\initdste
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zaklada tabelke __dstean
::  OLD: \initdste/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
__dstean:=tab_tmp(1,'ZKR','STRING[16]',''
           ,'LAB','STRING[100]',''
           ,'TYP','STRING[16]',''
           ,'ILR','REAL',''
           ,'ILP','REAL',''
           ,'JM1','STRING[10]',''
           ,'SQL','STRING[16]',''
           ,'LOKZ','STRING[20]',''
           ,'SCEAN','STRING[128]',''
           ,'REFL','STRING[16]',''
           ,'TW','DATE',''
           ,'SLD','STRING[16]',''
           ,'DST','INTEGER',''
           ,'REZ','REAL','');
~~


\pob_mags
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: pobiera listę magazynów możliwych do kompletacji wysyłki - wypełnia tabelkę __mags
::       Uwaga. Pobierane są wyłacznie uprawnione magazyny z obsługą wymiarów - niepaletowe
::   WE: _a - tabela zaznaczeń
::  OLD: \pob_mags/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
ZK_P.cntx_psh();
_a.clear();
{? _a.first()
|| {!
   |? {? (ZK_N.clear(); ZK_N.seek(_a.REF,))
      || exec('pob_mgzk','magazyn_mob')
      ?};
      _a.next()
   !}
|| exec('pob_mgzk','magazyn_mob')
?};
ZK_N.cntx_pop();
ZK_P.cntx_pop();
~~


\pob_mgzk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: pobiera listę magazynów dla jednego zamówienia - wypełnia tabelkę __mags
::       Uwaga. Pobierane są wyłacznie uprawnione magazyny z obsługą wymiarów - niepaletowe
::       Uwaga. jesteśmy na danym zamówieniu
::  OLD: \pob_mgzk/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_samag:=0;

USERS_UP.cntx_psh();
USERS_UP.index('MG');
USERS_UP.prefix(OPERATOR.USER,'ZA'+{? ZK_P.RODZ='W' || 'W' || 'M' ?},ST.ODDZ);
_ogolne:=~USERS_UP.first();
USERS_UP.cntx_pop();
{? ZK_N.MG<>null()
|| {? ZK_N.MG().SL='T' & exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,ZK_N.MG)<>0
   || __mags.blank();
      __mags.MG:=$ZK_N.MG;
      __mags.MWS:={? ZK_N.MG().MWS='T' || {? ZK_N.MG().W_ALL || 'N' || 'T' ?} || 'N' ?};
      __mags.DOK:=$ZK_N.MG().EANL;
      __mags.NRR:=0;
      __mags.NRK:=0;
      __mags.MAG:=ZK_N.MG().SYM;
      __mags.ZKN:=$ZK_N.ref();
      _samag+=__mags.add(1)
   ?}
|| ZK_P.index('NAG');
   ZK_P.prefix(ZK_N.ref());
   {? ZK_P.first()
   || {!
      |? {? ZK_P.MG().SL='T' & ZK_P.MG().PAL='N' & exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,ZK_P.MG)<>0
          & (__mags.clear(); ~__mags.find_key($ZK_P.MG,$ZK_P.N))
         || __mags.blank();
            __mags.MG:=$ZK_P.MG;
            __mags.MWS:={? ZK_P.MG().MWS='T' || {? ZK_P.MG().W_ALL || 'N' || 'T' ?} || 'N' ?};
            __mags.DOK:=$ZK_P.MG().EANL;
            __mags.NRR:=0;
            __mags.NRK:=0;
            __mags.MAG:=ZK_P.MG().SYM;
            __mags.ZKN:=$ZK_N.ref();
            _samag+=__mags.add(1)
         ?};
         ZK_P.next()
      !}
   ?}
?};
{? _ogolne & ~_samag
|| BUFMG.index('NR');
   BUFMG.prefix(OPERATOR.USER,{? ZK_N.T().R='Z' || 2 || 9 ?});
   {? BUFMG.first()
   || {!
      |? {? BUFMG.MG().ODDZ=ST.ODDZ
          & BUFMG.MG().SL='T' & BUFMG.MG().PAL='N' & exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,BUFMG.MG)<>0
          & (__mags.clear(); ~__mags.find_key($BUFMG.MG,$ZK_N.ref()))
         || __mags.blank();
            __mags.MG:=$BUFMG.MG;
            __mags.MWS:={? BUFMG.MG().MWS='T' || {? BUFMG.MG().W_ALL || 'N' || 'T' ?} || 'N' ?};
            __mags.DOK:=$BUFMG.MG().EANL;
            __mags.NRR:=0;
            __mags.NRK:=0;
            __mags.MAG:=BUFMG.MG().SYM;
            __mags.ZKN:=$ZK_N.ref();
            __mags.add(1)
         ?};
         BUFMG.next()
      !}
   ?}
?}


\prpopwys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed Popraw dla pozycji kompletacji
::   WE: [_a] 1(domyslnie)-komunikat 0-bez komunikatu
::  OLD: \prpopwys/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

__zknrea.TREE<>0 & __zknrea.ICON<>-2 &
{? ~((';DAPZ'*exec('FindAndGet','#table',M,__zknrea.SQM,,"IDMOB",''))>1)
|| 1
|? ~__ctrlst
|| _nomod:=1;
   _silp:=0;
   _silr:=0;
   __dstean.cntx_psh();
   {? __dstean.first()
   || {!
      |? _silp+=__dstean.ILP;
         _silr+=__dstean.ILR;
         __dstean.next()
      !}
   ?};
   __dstean.cntx_pop();
   {? _silp<=_silr & __zknrea.REA<=__zknrea.REZ & __zknrea.REA>=_silr || _nomod:=0 ?};
   {? _nomod
   || {? _a || FUN.info('Ilość do realizacji należy zmienić w sekcji "Ilość wg identyfikacji".'@) ?};
      0
   || 1
   ?}
|| {? _a || FUN.info('Ilość do realizacji należy zmienić w sekcji "Ilość wg identyfikacji".'@) ?};
   0
?}


\rekzkrea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: podswietlenie rekordow
::   WY: 1-ilosc do realizacji wieksza od zera
::  OLD: \rekzkrea/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_mws:=~__zknrea.sel_size() & exec('FindInSet','#table','MG','MAGAZYNY',__zknrea.MAG,__zknrea.MAG,"MG.MWS",,,'')='T';
{? __zknrea.ICON<>-2
|| __zknrea.actions(__zknsel,'U',,1)
|? __zknrea.ICON=-2
|| __zknrea.actions(__zknsel,'Cp'+{? __zknrea.TREE || 'Z' || 'U' ?},,1)
?};
__zknrea.actions_grayed(__zknsel,{? __zknrea.TREE || {? _mws || '' || 'C' ?} || 'C' ?});
__zknrea.REA>0


\popzkrea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: kontrola ilosci do realizacji
::   WY: 1-jest ok 0-zla ilosc
::  OLD: \popzkrea/ean.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~__ilplus || __zknrea.REA:=__zknrea.RES ?};

_nomod:=0;
{? (';DAPZ'*exec('FindAndGet','#table',M,__zknrea.SQM,,"IDMOB",''))>1 & ~__ctrlst
|| _nomod:=0;
   _silp:=0;
   _silr:=0;
   __dstean.cntx_psh();
   {? __dstean.first()
   || {!
      |? _silp+=__dstean.ILP;
         _silr+=__dstean.ILR;
         __dstean.next()
      !}
   ?};
   __dstean.cntx_pop();
   {? __zknrea.REA<_silr || _nomod:=1 ?}
?};

{? _nomod
|| FUN.info('Ze względu na identyfikację dostaw podano zbyt małą ilość.\nWybór nie został zatwierdzony.'@);
   0
|? __zknrea.REA<0 | __zknrea.RES<0
|| FUN.info('Należy podać ilość nieujemną.\nWybór nie został zatwierdzony.'@);
   0
|? ~__ilplus & __zknrea.REA>__zknrea.REZ
|| FUN.info('Podano zbyt dużą ilość.\nWybór nie został zatwierdzony.'@);
   0
|| {? (__zknrea.REA+__zknrea.PLUS)<>__zknrea.RES
   || {? __zknrea.PLUS=0 & __zknrea.RES<=__zknrea.REZ
      || __zknrea.REA:=__zknrea.RES
      || _zk_p:=exec('FindAndGet','#table',ZK_P,__zknrea.SQL,,,null());
         _rez:=exec('ilrBezPlusZK_P','zamsiw_rea',_zk_p,__refrea,'');
         _res:=__zknrea.RES;
         _new:=exec('UpDownEanp','magazyn_mobi',_zk_p,_rez);
         {? _new[1]>0
         || _dst:=__zknrea.REZ-__zknrea.REA;
            _res:=_new[3];
            {? _dst>=_new[1]
            || __zknrea.REA+=_new[1];
               __zknrea.PLUS:=0
            || __zknrea.REA:=__zknrea.REZ;
               __zknrea.PLUS+=_new[1]-_dst
            ?}
         || {? __zknrea.PLUS+_new[1]>=0
            || __zknrea.PLUS:=__zknrea.PLUS+_new[1]
            || __zknrea.REA-=(__zknrea.PLUS+_new[1]);
               __zknrea.PLUS:=0
            ?}
         ?};
         __zknrea.RES:=__zknrea.REA+__zknrea.PLUS;
         {? _res<>__zknrea.RES
         || _dod:=_new[2]-_new[1];
            FUN.info('Brak podanej ilości dla danych wymiarów: %1 %2.\n'
                     'Zmieniono na aktualnie maksymalną ilość dostępną: %3 %2.\n'
                     'Dodatkowo rozpisano: %4 %2 na innych wymiarach.'@[$_res,__zknrea.JM1,$__zknrea.RES,$_dod])
         ?};
         obj_del(_new)
      ?}
   ?};
   EANP.cntx_psh();
   EANP.clear();
   {? (4+__zknrea.REF)='eanp' & EANP.seek(__zknrea.REF,form(8+__zknrea.REF))
   || EANP.IL:=__zknrea.RES;
      EANP.put()
   ?};
   EANP.cntx_pop();
   __zknrea.WYB:={? __zknrea.RES>0 || '*' || '' ?};
   1
?}


\zatw_wyb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: zatwierdza wybor wg zaznaczonych rekordow
::   WY: dokonuje inwersji wyboru
::  OLD: \zatw_wyb/ean.fml
::----------------------------------------------------------------------------------------------------------------------
:: pobiera tableke zaznaczen;
_tab:=__zknrea.sel_aget();  __zknrea.sel_adel();
_nag:=sql('select distinct :_a.TREE TREE, 0 BYL from :_a order by 1',__zknrea);
__zknrea.cntx_psh();
{? _tab.size()
||
:: sa jakies zaznaczone rekordy
   {? _tab.first()
   || {!
      |? {? __zknrea.ICON<>-2 & (__zknrea.prefix(); __zknrea.seek(_tab.REF,__zknrea.name()))
         || {? __zknrea.TREE<>0 & (EANP.prefix(); (4+__zknrea.REF)='eanp' & EANP.seek(__zknrea.REF,))
              & _nag.find_key(__zknrea.TREE) & ~_nag.BYL
            || exec('plus_min','magazyn_mobi')
            |? __zknrea.TREE=0
            || _refzam:=#__zknrea.ref();
               {? _nag.find_key(_refzam) || _nag.BYL:=1; _nag.put(1) ?};
               __zknrea.prefix(_refzam);
               {? __zknrea.first()
               || {!
                  |? {? (EANP.prefix(); (4+__zknrea.REF)='eanp' & EANP.seek(__zknrea.REF))
                     || exec('plus_min','magazyn_mobi')
                     ?};
                     __zknrea.next()
                  !}
               ?}
            || ''
            ?}
         ?};
         _tab.next()
      !}
   ?}
||
:: biezacy rekord
   {? __zknrea.ICON=-2
   || ''
   |? __zknrea.TREE<>0 & (EANP.prefix(); (4+__zknrea.REF)='eanp' & EANP.seek(__zknrea.REF))
     & _nag.find_key(__zknrea.TREE) & ~_nag.BYL
   || exec('plus_min','magazyn_mobi')
   |? __zknrea.TREE=0
   || _refzam:=#__zknrea.ref();
      {? _nag.find_key(_refzam) || _nag.BYL:=1; _nag.put(1) ?};
      __zknrea.prefix(_refzam);
      {? __zknrea.first()
      || {!
         |? {? (EANP.prefix(); (4+__zknrea.REF)='eanp' & EANP.seek(__zknrea.REF))
            || exec('plus_min','magazyn_mobi')
            ?};
            __zknrea.next()
         !}
      ?}
   || ''
   ?}
?};
__zknrea.cntx_pop();
1


\ustparam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: ustawia parametry dla danego magazynu
::  OLD: \ustparam/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? __zknrea.ICON=-2 & __zknrea.TREE<>0
|| EANX.fld_fml('NRC_R','BEFORE_EDIT',"0");
   EANX.fld_fml('NRC_R','DISPLAY_FORMAT',"'empty=1'");
   EANX.MG:=exec('FindAndGet','#table',MG,__zknrea.SMG,,,null());
   EANX.NRC_Z:=__zknrea.NRC;
   EANX.DOK:=exec('FindInSet','#table','EANL','KOD',__zknrea.LOKZ,__zknrea.LOKZ);
   _dict:=EANL.win_dict('?');
   EANL.win_dict('WER');
   _act:=EANL.actions('WER','dpUKMBPEAGZ:dKAZ');
   EANL.cntx_psh();
   EANL.index('KOD');
   EANL.prefix();
   EANL.f_clear();
   EANL.f_set('KOD',,'\"EANL\".MG=:_a and \"EANL\".DOK=\'T\' and \"EANL\".AKT=\'T\' ',EANX.MG);

   {? EANX.MG<>null & EANX.DOK().MG<>EANX.MG || EANX.DOK:=null ?};

   EANX.win_edit('WYSYLK'+{? EANX.MG().MWS='T' & ~EANX.MG().W_ALL || 'W' || 'A' ?});
   {? EANX.edit("exec('sprwysyl','magazyn_mob')")
   || __zknrea.NRC:=EANX.NRC_Z;
      __zknrea.NRCS:=form(__zknrea.NRC,6);
      __zknrea.LOKZ:=EANX.DOK().KOD;
      {? __zknrea.put(1)
      || __mags.clear();
         __mags.prefix(__zknrea.SMG);
         {? __mags.first()
         || {!
            |? __mags.DOK:=$EANX.DOK;
               __mags.NRK:=__zknrea.NRC;
               __mags.put(1);
               __mags.next()
            !}
         ?}
      ?}
   ?};
   EANX.fld_fml('NRC_R','BEFORE_EDIT',"");
   EANX.fld_fml('NRC_R','DISPLAY_FORMAT',"");
   EANL.f_clear();
   EANL.win_dict('WER');
   EANL.cntx_pop();
   EANL.actions('WER',_act);
   EANL.win_dict(_dict)
|| FUN.info('Funkcja niedostępna.'@)
?}


\odswid_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wyswietla liste dostaw
::   WY: ref dodanego rekordu
::  OLD: \odswid_m/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
__dstean.hdr_sel('');
__dstean.clear();
__dstean.prefix($__zknrea.ref());
__dstean.cntx_psh();
{? __dstean.first()
|| _hdr:={? __dstean.TYP='D' || '(wg Dostawy)'@
         |? __dstean.TYP='A' || '(wg Atrybutów dostawy)'@
         |? __dstean.TYP='P' || '(wg Partii produkcyjnej)'@
         |? __dstean.TYP='Z' || '(wg Zlecenia)'@
         || '(Brak identyfikacji dostaw)'@
         ?};
   __dstean.hdr_sel(' '+(~-_hdr));
:: [rr] było poniżej w warunku: & exec('norezdst','magazyn_mob',__zknrea.ref())
   {? (';DAPZ'*__dstean.TYP)>1
   || __dstean.actions_grayed(__dstsel,'')
   || __dstean.actions_grayed(__dstsel,'Z')
   ?}
?};
__dstean.cntx_pop();
grp_disp(__dstean,__dstsel);
~~


\norezdst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2014]
:: OPIS: sprawdza czy nie ma rezerwacji wg dostaw
::   WE: _a - __zknrea.ref()
::   WY: 1-nie ma 0-sa
::  OLD: \norezdst/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
__dstean.cntx_psh();
__dstean.prefix($_a);
{? __dstean.first()
|| {!
   |? _wyn:=__dstean.DST=0;
      _wyn & __dstean.next()
   !}
?};
__dstean.cntx_pop();
_wyn


\rozb_mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza strukture magazynow wg zaznaczonych naglowkow zamowien
::   WE: _a - tabela zaznaczen
::   WY: 1-rozbiezne 0-OK
::  OLD: \rozb_mag/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_mag:='';
ZK_N.cntx_psh();
_a.cntx_psh();
_a.clear();
{? _a.first()
|| {!
   |? {? (ZK_N.clear(); ZK_N.seek(_a.REF,))
      || _par:={? ZK_N.MG<>null || '1' || '0' ?}
              +{? ZK_N.MG<>null & ZK_N.MG().SL='T' || '1' || '0' ?}
              +{? ZK_N.MG<>null & ZK_N.MG().PAL='T' || '1' || '0' ?}
              +{? ZK_N.MG<>null & ZK_N.MG().MWS='T' || '1' || '0' ?};
              +{? ZK_N.MG<>null & ZK_N.MG().MWS='T' || ZK_N.MG().SYM || 'xxx' ?};
         {? _mag=''
         || _mag:=_par
         || _wyn:=_par<>_mag
         ?};
         BEER.ZK_N:=ZK_N.ref()
      ?};
      ~_wyn & _a.next()
   !}
?};
_a.cntx_pop();
ZK_N.cntx_pop();
{? _mag<>'' & (1+_mag)='0' || _wyn:=0 ?};
_wyn


\rez2oper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: automatyczna rezerwacja pozycji dla operacji mobilnych (wysylka na urzadzenie)
::   WE: _a - ref ZK_N
::   WY: 0-są pozycje bez przypisanych magazynów 1-ok
::  OLD: \rez2oper/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
ZK_P.cntx_psh;
ZK_P.index('NAG');
ZK_P.prefix(_a);
{? ZK_P.first()
|| {!
   |? {? ZK_P.M().RODZ='T' & ZK_P.ILP>0 & ZK_P.RMAG().SL='T' || _res:=ZK_P.RMAG<>null()  ?};
      _res & ZK_P.next()
   !};
   {? _res & ZK_P.first()
   || {!
      |? {? ZK_P.M().RODZ='T' & ZK_P.CZYBEZ='T' & ZK_P.ILBEZ>0 & ZK_P.RMAG().SL='T'
         || exec('rozp_rez','rezerwacje',__refrea,,,,,,1)
         ?};
         ZK_P.next()
      !}
   ?}
?};
ZK_P.cntx_pop();
_res


\sapozzkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: oblicza ilosci pozostale dla ZK_N - niewysłane na czytnik
::   WE: _a - ref ZK_N
::       [_b] - ref TR_NZL
::       [_c] - 1(domyślnie)-kontroluj stan 0-nie
::   WY: tablica ilosci pozostalych
::  OLD: \sapozzkn/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=tab_tmp(2,'MAT','STRING[16]',
       ,'ZKP','STRING[16]',''
       ,'ILE','REAL',''
       ,'ILP','REAL',''
       ,'ILW','REAL',''
       ,'ILS','REAL',''
       ,'ILR','REAL','');
_trnzl:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_wg_tr:=_trnzl<>null();
_ctrlst:={? var_pres('_c')=type_of(0) || _c || 1 ?};

ZK_N.cntx_psh();
ZK_P.cntx_psh();
ZK_P.index('NAG');
ZK_P.prefix(_a);
{? ZK_P.first()
|| _czypal:=ZK_P.N().MG().PAL='T';
   {!
   |? {? ZK_P.ILRB>0 | (~_ctrlst & ZK_P.ILP>0)
      || _wyn.blank();
         _wyn.MAT:=$ZK_P.M;
         _wyn.ZKP:=$ZK_P.ref();
         {? _wg_tr
         || _ilp:=exec('FindInSet','#table','TR_ZL','POZREF',ZK_P.uidref(),_trnzl,"@.TR_ZL.IL",0)
         || _ilp:=ZK_P.ILP
         ?};
         _wyn.ILE:=_ilp;
         _wyn.ILP:=_ilp;
         _dod:={? _ctrlst || 0 || exec('oblilean','magazyn_mob',$ZK_P.ref()) ?};
         _ilb:=_ilp-_dod;
         {? _ilb<0 || _ilb:=0 ?};
         _wyn.ILS:={? _ctrlst || exec('Rez2StnDostMg','rezerwacje',ZK_P.ref()) || _ilb ?};
         _wyn.ILR:={? _ctrlst || ZK_P.ILRB || 0 ?};
         _wyn.add(1)
      ?};
      ZK_P.next()
   !}
?};
EANN.cntx_psh();
EANP.cntx_psh();
PAL.cntx_psh();
PAL_POZ.cntx_psh();
EANN.index('REFSQL');
EANN.prefix($_a,$_a);
{? EANN.first() & _ctrlst
|| {!
   |? {? EANN.TYP='Z' & EANN.STAN<>'+' & EANN.STAN<>'A'
      || EANP.index('EANN');
         EANP.prefix(EANN.ref());
         {? EANP.first()
         || {!
            |? {? ~_czypal
               || _wyn.clear();
                  {? _wyn.find_key($EANP.M,EANP.RSQL)
                  || _wyn.ILW+=EANP.IL;
                     _wyn.ILR-=EANP.IL;
                     _wyn.put(1)
                  ?}
               |? EANP.PAL<>null
               || {? EANP.PAL().AKT='N'
                  || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
                  || PAL_POZ.use('paletyp')
                  ?};
                  PAL_POZ.index('PAL');
                  PAL_POZ.prefix(EANP.PAL);
                  {? PAL_POZ.first()
                  || {!
                     |? _ileroz:=PAL_POZ.ILP;
                        {? _ileroz>0
                        || _wyn.clear();
                           _wyn.prefix($PAL_POZ.M);
                           {? _wyn.first()
                           || {!
                              |? _ilepoz:=_wyn.ILP-_wyn.ILW;
                                 {? _ilepoz>0
                                 || {? _ilepoz>=_ileroz
                                    || _wyn.ILW+=_ileroz;
                                       _wyn.put(1);
                                       _ileroz:=0
                                    || _wyn.ILW:=_ilepoz;
                                       _wyn.put(1);
                                       _ileroz-=_ilepoz
                                    ?}
                                 ?};
                                 _ileroz>0 & _wyn.next()
                              !}
                           ?}
                        ?};
                        PAL_POZ.next()
                     !}
                  ?}
               ?};
               EANP.next()
            !}
         ?}
      ?};
      EANN.next()
   !}
?};
EANN.cntx_pop();
EANP.cntx_pop();
PAL.cntx_pop();
PAL_POZ.cntx_pop();
ZK_N.cntx_pop();
ZK_P.cntx_pop();
_wyn.clear();
{? _wyn.first()
|| {!
   |? _wyn.ILE:=_wyn.ILP-_wyn.ILW;
      _wyn.ILS+=_wyn.ILR;
      {? _wyn.ILE>0 & _wyn.ILS<_wyn.ILE || _wyn.ILE:=_wyn.ILS ?};
      _wyn.put(1);
      _wyn.next()
   !}
?};
_wyn


\dstidmob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: generuje liste identyfikacji dostaw wg __zknrea
::   WY: 1-sa identyfikacje 0-nie ma
::  OLD: \dstidmob/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

_beerm:=BEER.M;
_beermg:=BEER.MG;
BEER.MG:=ZK_N.MG;
_dlakh:=ZK_N.DLAKH;
_dlref:={? _dlakh<>'' || exec('FindInSet','#table','KH','KOD',_dlakh,2) || null ?};

__zknrea.cntx_psh();
__zknrea.clear();
__zknrea.prefix(0);
{? __zknrea.first()
|| {!
   |? _refrea:=__zknrea.ref();
      __zknrea.cntx_psh();
      __zknrea.clear();
      __zknrea.prefix(_refrea);
      {? __zknrea.first()
      || {!
         |? _rearef:=__zknrea.ref();
            BEER.M:=exec('FindAndGet','#table',M,__zknrea.SQM,,,null());
            BEER.MG:={? BEER.M().RODZ<>'U'
                     || exec('FindInSet','#table','MG','MAGAZYNY',__zknrea.MAG,__zknrea.MAG)
                     || null()
                     ?};
            {? BEER.M().RODZ='U'
            || _kor:=exec('addstean','magazyn_mob',$_rearef,'Usługa','X',0,0,'','','','',date(0,0,0),'')
            |? ~(BEER.MG().TYP*'DOST')
            || _kor:=exec('addstean','magazyn_mob',$_rearef,'Nieprawidłowy typ magazynu'
                      ,'X',0,0,'','','','',date(0,0,0),'')
            |? __zknrea.REA>0
            || _opis:={? BEER.M().IDMOB='N' || 'Brak identyfikacji dostaw'@
                      |? BEER.M().IDMOB='D' || 'Identyfikacja dostawy wg Dostawy'@
                      |? BEER.M().IDMOB='A' || 'Identyfikacja dostawy wg Atrybutów dostawy'@
                      |? BEER.M().IDMOB='P' || 'Identyfikacja dostawy wg Partii produkcyjnej'@
                      |? BEER.M().IDMOB='Z' || 'Identyfikacja dostawy wg Zlecenia'@
                      || 'Brak identyfikacji dostaw'@
                      ?};
               {? (';DAPZ'*BEER.M().IDMOB)>1
               || _wyn:=1;
                  exec('rozscean','magazyn_mobi')
               || exec('addstean','magazyn_mob',$_rearef,_opis,BEER.M().IDMOB,0,__zknrea.REA,BEER.M().J().KOD
                   ,'','','',date(0,0,0),'')
               ?}
            || _kor:=exec('addstean','magazyn_mob',$_rearef,'Brak ilości do kompletacji','X',0,0
                      ,'','','','',date(0,0,0),'')
            ?};
            __zknrea.next()
         !}
      ?};
      __zknrea.cntx_pop();
      __zknrea.next()
   !}
?};
__zknrea.cntx_pop();
BEER.M:=_beerm;
BEER.MG:=_beermg;
_wyn


\addstean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: dodaje jeden rekord do tabeli __dstean
::   WE: _a - ref __zknrea
::       _b - etykieta
::       _c - typ identyfikacji
::       _d - sumaryczna ilosc na dostawach wg identyfikacji
::       _e - ilosc do realizacji
::       _f - jednostka miary
::       _g - kod lokalizacji
::       _h - kod kreskowy identyfikacji
::       _i - ref SQL EANL
::       _j - termin waznosci
::       _k - ref SQL SLD
::       _l - wg dostaw
::   WY: ref dodanego rekordu
::  OLD: \addstean/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=12 || {? type_of(_l)<>1 || _l:=0 ?} || _l:=0 ?};

__dstean.clear();
__dstean.blank();
__dstean.ZKR:=_a;
__dstean.LAB:=_b;
__dstean.TYP:=_c;
__dstean.ILP:=_d;
__dstean.ILR:=_e;
__dstean.JM1:=_f;
__dstean.LOKZ:=_g;
__dstean.SCEAN:=_h;
__dstean.REFL:=_i;
__dstean.TW:=_j;
__dstean.SLD:=_k;
__dstean.DST:=_l;
__dstean.add(1)


\ilenawyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: oblicza ilosc na wydaniu (zaakceptowana i niezaakceptoweana kompletacja i zaakceptowane wydania)
::   WE: _a - material
::       _b - ref lokalizacji
::       _c - termin waznosci
::       _d - kod identyfkikacyjny
::   WY: ilosc wydawana na urzadzeniach mobilnych
:: UWAGA. w zmiennej BEER.MG jest dany magazyn, którego dotyczy sprawdzenie
::  OLD: \ilenawyd/ean2.fml
::---------------------------------------------------------------------------------------------------------------------
_wyn:=0;
EANN.cntx_psh();
EANP.cntx_psh();
:: kompletacja wysylki
EANP.index('TYP');
EANP.prefix('Z',_a,BEER.MG,_b,_c);
{? EANP.first()
|| {!
   |? {? EANP.EANN<>null & EANP.EANN().AKT='T' & EANP.EANN().STAN<>'!' & (_d='' | EANP.SCEAN=_d)
      || _wyn+={? EANP.EANN().STAN<>'Z' || EANP.IL || EANP.ILS ?}
      ?};
      EANP.next()
   !}
?};
:: wydania
EANP.index('TYP');
EANP.prefix('W',_a,BEER.MG,_b,_c);
{? EANP.first()
|| {!
   |? {? EANP.EANN<>null & EANP.EANN().AKT='T' & EANP.EANN().STAN<>'!' & (_d='' | EANP.SCEAN=_d)
      || _wyn+=EANP.ILS
      ?};
      EANP.next()
   !}
?};
EANN.cntx_pop();
EANP.cntx_pop();
_wyn


\initscsl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sortuje rekordy tabeli __sc wg kryterium dla magazynu i tworzy tabele __scsld
::   WE: _a - cecha dostawy lub null()
::       [_b] - ilość 0(domyślnie)
::       [_c] - kontrahent null(domyślnie)'
::       [_d] - ref ZK_P lub null()
::  OLD: \initscsl/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>7 || _c:=null() ?} || _c:=null() ?};
_zkp:={? var_pres('_d')=type_of(null()) || _d || null()?};

VAR_DEL.delete('__scsld','__ndxsld');
__scsld:=tab_tmp(2,'LP','INTEGER',''
          ,'LOK','STRING[30]',''
          ,'ILE','REAL',''
          ,'TRM','DATE',''
          ,'FIF','INTEGER',''
          ,'SC','STRING[16]',''
          ,'SL','STRING[16]',''
          ,'SCEAN','STRING[128]',''
          ,'LOR','STRING[16]',''
          ,'SLD','STRING[16]',''
          ,'ILS','REAL',''
          ,'STD','REAL','');
_bufsld:=tab_tmp(1,'SQL','STRING[16]',''
          ,'ILE','REAL','');

_typ_lok:=BEER.MG().SP_REANL;
_fifo:=BEER.MG().SP_IDMOB='F';
_wgmggr:=BEER.MG().WGMGGR='T';

_i:=0;
:: budujemy tabelke stanow wg SLD i SC
__sc.clear();
{? {? _fifo || __sc.first() || __sc.last() ?}
|| {!
   |? _dkczkp:={? __sc.DK_C<>'' || exec('FindAndGet','#table',DK_C,__sc.DK_C,,,null()) || null() ?};
      {? _a=null() | exec('czyzawch','mat_atr',_a,_dkczkp)
      || _scean:=__sc.SCEAN;
         _stansc:=exec('obl_ssc','magazyn_stan',__sc.RDK,__sc.NDK,BEER.MG,BEER.M,'T',,__sc.SCEAN);
         _rezzsc:=0;
         {? _zkp<>null()
         || REZ.cntx_psh();
            REZ.index('URODZ');
            REZ.prefix(_zkp,BEER.M,BEER.MG,'B',__sc.PRDK);
            {? REZ.first() || _rezzsc+=REZ.ILR; _stansc+=_rezzsc ?};
            REZ.cntx_pop()
         ?};
         _sc_rez:={? BEER.M().IDMOB='D' || EANX.ILW || 0 ?}+
                  {? __sc.DK_C<>''
                  || exec('rezScWgAtr','magazyn_stan',BEER.MG,BEER.M,__sc.RDK,__sc.NDK
                      ,exec('FindAndGet','#table',DK_C,__sc.DK_C,,,null()),,__zknrea.SQL,_scean)
                  || 0
                  ?};
         _stansc:={? _stansc>=_sc_rez || _stansc-_sc_rez || 0 ?};
         {? _stansc>0
         || _stansc-=_rezzsc;
            SLD.cntx_psh();
            SLD.index('SCEAN');
            SLD.prefix(_scean,_scean,BEER.MG);
            {? SLD.first()
            || {!
               |? _ilwyd:=exec('ilenawyd','magazyn_mob',SLD.SL().M,SLD.SL().EANL,SLD.SL().TW,SLD.SCEAN);
                  _ilsld:=SLD.IL-_ilwyd-{? (_bufsld.clear(); _bufsld.find_key($SLD.ref())) || _buf.ILE || 0 ?};
                  {? _ilsld>0
                  || {? _ilsld>=_stansc
                     || _ilroz:=_stansc
                     || _ilroz:=_ilsld
                     ?};
                     _i+=1;
                     __scsld.blank();
                     __scsld.LP:=0;
                     __scsld.SC:=$__sc.ref();
                     __scsld.STD:={? _ilsld<_stansc || _ilsld || _stansc ?};
                     __scsld.LOK:=SLD.SL().EANL().KOD;
                     __scsld.TRM:=SLD.SL().TW;
                     __scsld.ILE:=_ilroz;
                     __scsld.SCEAN:=SLD.SCEAN;
                     __scsld.FIF:=_i;
                     __scsld.LOR:=$SLD.SL().EANL;
                     __scsld.SLD:=$SLD.ref();
                     __scsld.ILS:=SLD.IL-_ilwyd;
                     __scsld.add(1);
                     _bufsld.clear();
                     {? ~_bufsld.find_key($SLD.ref())
                     || _bufsld.blank();
                        _bufsld.SQL:=$SLD.ref();
                        _bufsld.ILE:=_ilroz;
                        _bufsld.add(1)
                     || _bufsld.ILE+=_ilroz;
                        _bufsld.put(1)
                     ?};
                     _stansc-=_ilroz
                  ?};
                  _stansc>0 & SLD.next()
               !}
            ?};
            SLD.cntx_pop()
         ?}
      ?};
      {? _fifo || __sc.next() || __sc.prev() ?}
   !}
?};
obj_del(_bufsld);
:: porządek wg stref magazynowania
{? _wgmggr & __scsld.size()
|| _lp:=0;
   _buf:=exec('findmlok','magdok_wymiary',BEER.MG,BEER.M,_b,_c);
   {? _buf.first()
   || {!
      |? _lp+=1;
         __scsld.clear();
         __scsld.prefix(0,_buf.LOK,);
         {? __scsld.first()
         || {!
            |? _ref:=__scsld.ref(); _nxt:=__scsld.next();
               __scsld.cntx_psh();
               {? (__scsld.clear(); __scsld.seek(_ref))
               || __scsld.LP:=_lp;
                  __scsld.put(1)
               ?};
               __scsld.cntx_pop();
               _nxt
            !}
         ?};
         _buf.next()
      !};
::    to co pozostało
      __scsld.clear();
      __scsld.prefix(0);
      {? __scsld.first()
      || _lp+=1;
         {!
         |? _ref:=__scsld.ref(); _nxt:=__scsld.next();
            __scsld.cntx_psh();
            {? (__scsld.clear(); __scsld.seek(_ref))
            || __scsld.LP:=_lp;
               __scsld.put(1)
            ?};
            __scsld.cntx_pop();
            _nxt
         !}
      ?}
   ?};
   obj_del(_buf)
?};
:: porzadkowanie tabelki __scsld
__ndxsld:={? _typ_lok='N' || __scsld.ndx_tmp('',0,'LP',,0,'FIF',,0)
          |? _typ_lok='S' || __scsld.ndx_tmp('',0,'LP',,0,'LOK',,0,'FIF',,0)
          |? _typ_lok='A' || __scsld.ndx_tmp('',0,'LP',,0,'ILE',,0,'FIF',,0)
          |? _typ_lok='D' || __scsld.ndx_tmp('',0,'LP',,0,'ILE',,1,'FIF',,0)
          |? _typ_lok='T' || __scsld.ndx_tmp('',0,'LP',,0,'TRM',,0,'FIF',,0)
          |? _typ_lok='W' || __scsld.ndx_tmp('',0,'LP',,0,'TRM',,1,'FIF',,0)
          ?};
~~


\donescsl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: usuwa tabele __scsld
::  OLD: \donescsl/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__scsld','__ndxsld')


\addrozpa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: generacja rozpakowania
::   WE: _a - ref DK_LN
::   WY: 1-OK 0-nie
::  OLD: \addrozpa/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_newpal:=EANP.PALDO;
_bezpal:=0;
_kplreo:=EANP.IDADD;

DK_LN.cntx_psh();
DK_LN.clear();
{? DK_LN.seek(_a)
|| _bezpal:=EANP.PALDO=null() & EANP.PALDOEAN<>'';
   _update:=(EANP.PALDO().BEZOZN='B' | _bezpal) & EANP.LOKZ().MG=DK_LN.MG;
   {? _newpal=null & ~_bezpal
   || PAL.cntx_psh();
      PAL.clear;
      PAL.blank();
      PAL.KODK:=exec('kodk_pal','magdok_palety');
      PAL.TPAL:=EANP.LOKZ().MG().TPAL;
      PAL.AKT:='T';
      PAL.STAN:='B';
      _newpal:={? PAL.add() || PAL.ref() || null ?};
      PAL.cntx_pop()
   ?};
   {? (_newpal | _bezpal) & EANP.PAL<>null
   || _ileroz:=EANP.IL;
      M.cntx_psh();
      PAL.cntx_psh();
      EANN.cntx_psh();
      EANP.cntx_psh();
      PAL_POZ.cntx_psh();
      PAL_POZ.use('paletyp');
      PAL_POZ.index('PAL');
      PAL_POZ.prefix(EANP.PAL);
      {? PAL_POZ.first()
      || {!
         |? {? PAL_POZ.M=EANP.M
            ||
               {? PAL_POZ.ILP>=_ileroz
               || {? exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),EANP.LOKDO,EANP.LOKZ,PAL_POZ.TW,PAL_POZ.TW
                      ,_ileroz,DK_LN.MG,PAL_POZ.M,,,PAL_POZ.PAL,_newpal,,2,,,_kplreo)
                  || PAL_POZ.ILP-=_ileroz;
                     exec('akt_palp','magdok_palety');
                     {? PAL_POZ.put(1)
                     || exec('poz_bpal','magdok_palety',1,$_newpal,$PAL_POZ.PAL,PAL_POZ.M().KTM,_ileroz
                         ,PAL_POZ.C,PAL_POZ.TW,PAL_POZ.SCSQL,EANP.LOKZ().MG,PAL_POZ.DK_C,_update)
                     ?};
                     exec('znacznik','magdok_palety',PAL_POZ.PAL)
                  ?};
                  _wyn:=1;
                  _ileroz:=0
               |? PAL_POZ.ILP>0 & _ileroz>0
               || _tylejest:=PAL_POZ.ILP;
                  {? exec('add2dk_l','magdok_wspolne',null,DK_LN.ref(),EANP.LOKDO,EANP.LOKZ,PAL_POZ.TW,PAL_POZ.TW
                      ,_tylejest,DK_LN.MG,PAL_POZ.M,,,PAL_POZ.PAL,_newpal,,2,,,_kplreo)
                  || PAL_POZ.ILP:=0;
                     PAL_POZ.IL2:=0;
                     {? PAL_POZ.put(1)
                     || exec('poz_bpal','magdok_palety',1,$_newpal,$PAL_POZ.PAL,PAL_POZ.M().KTM,_tylejest
                         ,PAL_POZ.C,PAL_POZ.TW,PAL_POZ.SCSQL,EANP.LOKZ().MG,PAL_POZ.DK_C,_update)
                     ?};
                     exec('znacznik','magdok_palety',PAL_POZ.PAL)
                  ?};
                  _wyn:=1;
                  _ileroz-=_tylejest
               ?}
            ?};
            _ileroz>0 & PAL_POZ.next()
         !}
      ?};
      M.cntx_pop();
      PAL.cntx_pop();
      EANN.cntx_pop();
      EANP.cntx_pop();
      PAL_POZ.cntx_pop()
   ?}
?};
DK_LN.cntx_pop();
_wyn


\f3nrc_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: klawisz F3 dla wyboru czytnika
::  OLD: \f3nrc_z/ean.fml
::----------------------------------------------------------------------------------------------------------------------
exec('wyb_czyt','magazyn_mob',1,'EANX.NRC_Z','EANX.IDEANC_Z',,EANX.MG)


\ponrc_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po wyborze czytnika
::  OLD: \ponrc_z/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_res:={? EANX.NRC_Z=0
      || {? exec('FindInSet','#table','EANC','AKT','T')<>null
         || 1
         || FUN.info('Brak aktywnych czytników.'@);
            0
         ?}
      |? EANX.NRC_Z>0
      || {? exec('FindInSet','#table','EANC','AKT',EANX.NRC_Z,'T')<>null
         || 1
         || FUN.info('Czytnik numer %1 nie jest aktywny.'@[$EANX.NRC_Z]);
            0
         ?}
      || FUN.info('Należy podać numer czytnika dla kompletacji wysyłki.'@);
         0
      ?};
{? _res & EANX.NRC_Z>0
|| {? var_pres('__lstum')>0 & var_pres('__mags')>117 &__lstum=1
   || _eanc:=exec('FindInSet','#table','EANC','AKT',EANX.NRC_Z,'T',,,,null());
      _buf:=null();
      __mags.prefix();
      {? __mags.first()
      || {? __mags.size()=1
         || _buf:=exec('FindAndGet','#table',MG,__mags.MG,,,null())
         ?}
      ?};
      {? exec('FindInSet','#table','EANCMG','EANC',_eanc,,,,,null())<>null()
       & exec('FindInSet','#table','EANCMG','EANC',_buf,_eanc,,,,null())=null()
      || FUN.info('Czytnik numer %1 jest przypisany do magazynu.\n'
                  'Niemożliwy wybór czytnika dla wszystkich pozycji'@[$EANX.NRC_Z]);
         _res:=0
      ?}
   || _eanc:=exec('FindInSet','#table','EANC','AKT',EANX.NRC_Z,'T',,,,null());
      {? exec('FindInSet','#table','EANCMG','EANC',_eanc,,,,,null())<>null()
       & exec('FindInSet','#table','EANCMG','EANC',EANX.MG,_eanc,,,,null())=null()
      || FUN.info('Czytnik numer %1 nie jest aktywny w magazynie %2.'@[$EANX.NRC_Z,EANX.MG().SYM]);
         _res:=0
      ?}
   ?}
?};
_res


\f3nrc_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: klawisz F3 dla wyboru czytnika
::  OLD: \f3nrc_r/ean.fml
::----------------------------------------------------------------------------------------------------------------------
exec('wyb_czyt','magazyn_mob',1,'EANX.NRC_R','EANX.IDEANC_R',,EANX.MG)


\ponrc_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po wyborze czytnika
::  OLD: \ponrc_r/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_res:={? EANX.NRC_R=0
      || {? exec('FindInSet','#table','EANC','AKT','T')<>null
         || 1
         || FUN.info('Brak aktywnych czytników.'@);
            0
         ?}
      |? EANX.NRC_R>0
      || {? exec('FindInSet','#table','EANC','AKT',EANX.NRC_R,'T')<>null
         || 1
         || FUN.info('Czytnik numer %1 nie jest aktywny.'@[$EANX.NRC_R]);
            0
         ?}
      || FUN.info('Należy podać numer czytnika dla reorganizacji.'@);
         0
      ?};
{? _res & EANX.NRC_R>0
|| {? var_pres('__lstum')>0 & var_pres('__mags')>117 &__lstum=1
   || _eanc:=exec('FindInSet','#table','EANC','AKT',EANX.NRC_R,'T',,,,null());
      _buf:=null();
      __mags.prefix();
      {? __mags.first()
      || {? __mags.size()=1
         || _buf:=exec('FindAndGet','#table',MG,__mags.MG,,,null())
         ?}
      ?};
      {? exec('FindInSet','#table','EANCMG','EANC',_eanc,,,,,null())<>null()
       & exec('FindInSet','#table','EANCMG','EANC',_buf,_eanc,,,,null())=null()
      || FUN.info('Czytnik numer %1 jest przypisany do magazynu.\n'
                  'Niemożliwy wybór czytnika dla wszystkich pozycji'@[$EANX.NRC_R]);
         _res:=0
      ?}
   || _eanc:=exec('FindInSet','#table','EANC','AKT',EANX.NRC_R,'T',,,,null());
      {? exec('FindInSet','#table','EANCMG','EANC',_eanc,,,,,null())<>null()
       & exec('FindInSet','#table','EANCMG','EANC',EANX.MG,_eanc,,,,null())=null()
      || FUN.info('Czytnik numer %1 nie jest aktywny w magazynie %2.'@[$EANX.NRC_R,EANX.MG().SYM]);
         _res:=0
      ?}
   ?}
?};
_res


\ctrlZK_N
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: sprawdza czy dane zamówienie można przesłać na urządzenie
::   WE: [_a] - dyspozycja w magazynie
::   WY: 1-tak 0-nie -1-zmiana zakresu
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_trnzl:={? var_pres('_a')=type_of(null()) || _a || null() ?};

VAR_DEL.delete('__mags');
exec('init_blk','zamsiw_nag');
:: tabela magazynów do kompletacji wysyłki
__mags:=tab_tmp(2,'MG','STRING[16]',''
          ,'ZKN','STRING[16]',''
          ,'MWS','STRING[1]',''
          ,'DOK','STRING[16]',''
          ,'NRR','INTEGER',''
          ,'NRK','INTEGER',''
          ,'WYB','INTEGER',''
          ,'MAG','STRING[8]',''
          ,'EANN','STRING[16]','');
_tab:={? _trnzl<>null() || exec('zknWGtr_nzl','transport_wspolne',_trnzl) || ZK_N.sel_aget() ?};
_ilezaz:=_tab.size();
exec('pob_mags','magazyn_mob',_tab);
{? ZK_N.T().MOB<>'T'
|| FUN.info('Operacja dostępna wyłącznie dla typów zamówień obsługiwanych przez urządzenia mobilne.'@)
|? ~_ilezaz & ZK_N.STAN='ZRE'
|| FUN.info('Zamówienie w całości zrealizowane.\nPrzygotowanie wysyłki niemożliwe.'@)
|? ~(date>=date(ST.AR,ST.AM,1) & date()<=date(ST.AR,ST.AM,0))
|| FUN.info('Operacje na urządzeniu mobilnym generowane są z bieżącą datą.\n'
    'Ponieważ aktywna data nie jest zgodna z okresem ustawionym w parametrach.\nPrzygotowanie wysyłki niemożliwe.\n'
    'Należy zmienić aktywny okres w parametrach na %1.'@[form(date(),,8)]);
   _wyn:=-1
|? _ilezaz & {? (__mags.clear(); ~__mags.first()) || exec('rozb_mag','magazyn_mob',_tab) || 0 ?}
|| FUN.info('Zaznaczone zamówienia mają przypisane magazyny z różną obsługą (palety, magazyn wysokiego składowania).\n'
    'Przygotowanie wysyłki niemożliwe.'@)
|? ~_ilezaz & ZK_N.AKC<>'T'
|| FUN.info('Zamówienie nie jest zaakceptowane.\nPrzygotowanie wysyłki niemożliwe.'@)
|? ~_ilezaz & (__mags.clear(); ~__mags.first())
|| FUN.info('Brak magazynów do realizacji zamówienia z obsługą wymiarów.\nPrzygotowanie wysyłki niemożliwe.'@)
|? ~_ilezaz & ~exec('add_blk','zamsiw_nag',ZK_N.ref())
|| {? FUN.ask('Zamówienie obsługuje inny operator.\nCzy chcesz zobaczyć kto?'@)
     & ZK_N.r_lock()
   || ZK_N.r_unlock()
   ?}
|? ZK_N.T().ZAP='T' & ZK_N.EZAPOT<>'' & ~exec('zapot_akc','zamowienia',ZK_N.EZAPOT)
|| FUN.info('Zamówienie jest zaakceptowane,'
            '\nale do jego realizacji potrzebna jest akceptacja Zapotrzebowania.'
            '\nRealizacja niemożliwa.'@)
|| _wyn:=1
?};
{? _wyn<=0 || exec('done_blk','zamsiw_nag'); VAR_DEL.delete('__mags') ?};
_wyn


\kplscean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zmiana kompletacji wysylki wg kodo identyfikujacych
::  OLD: \kplscean/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_beermg:=BEER.MG;
BEER.MG:=exec('FindAndGet','#table','MG',__zknrea.SMG,,,null());
__dstean.cntx_psh();
VAR_DEL.delete('__sscean');
__sscean:=tab_tmp(5,'TREE','TREE_REF','galazka'
           ,'OPI','STRING[255]','Etykieta'
           ,'SCEAN','STRING[128]',''
           ,'LOK','STRING[30]',''
           ,'TW','DATE',''
           ,'ILD','REAL',''
           ,'ILE','REAL',''
           ,'ILR','REAL',''
           ,'REF','STRING[16]',''
           ,'RLOK','STRING[16]',''
           ,'DST','INTEGER','');

_win_sel:=__sscean.mk_sel('Dostawy wg kodów identyfikujących'@,'P',,'#dotawidmob',,,__sscean.size(),1);

__sscean.win_fld(_win_sel,,'OPI',,,22,,1,'');
__sscean.win_fld(_win_sel,,'SCEAN',,,30,,1,'Kod identyfikacyjny'@);
__sscean.win_fld(_win_sel,,'LOK',,,20,,1,'Lokalizacja'@);
__sscean.win_fld(_win_sel,,'TW',,,10,,1,'Termin'@);
__sscean.win_fld(_win_sel,,'ILD',,,12,3,1,'Ilość wg ID'@);
__sscean.win_fld(_win_sel,,'ILE',,,12,3,1,'Ilość dostępna'@);
__sscean.win_fld(_win_sel,,'ILR',,,12,3,0,'Do kompletacji'@);
__sscean.win_act(_win_sel,0,'Formuła','&Wybierz'@@,,,"exec('wysscean','magazyn_mob',1)",,0,1
 ,"exec('wysscean','magazyn_mob',1)",,'W');
__sscean.win_act(_win_sel,0,'Formuła','&Zrezygnuj z wyboru'@@,,,"exec('wysscean','magazyn_mob',0)",,0,1
 ,"exec('wysscean','magazyn_mob',0)",,'Z');
__sscean.win_act(_win_sel,0,'Popraw',,,,"__zknrea.TREE<>0",,1);
__sscean.win_act(_win_sel,0,'Formuła','&Akceptuj'@@,,,"exec('akcscean','magazyn_mob')",,,,,,'A');
__sscean.win_act(_win_sel,0,'Rekord',,,,"exec('rekscean','magazyn_mob')","exec('popscean','magazyn_mob')");
__sscean.win_act(_win_sel,0,'Kolejność');

__sscean.tr_fml(_win_sel,,"{? _a || {? __sscean.TREE=0 || 1 || _a ?} || _a ?}");
__sscean.win_fml(_win_sel,,'OPI',,'ICON_BEFORE',"
         {? __sscean.TREE<>null & __sscean.ILR>0 || exec('zaakceptowany','icon')
         || ''
         ?}
         ");
__sscean.win_fml(_win_sel,,'ILR',,'ICON_BEFORE',"{? __sscean.ILR>0
                                                 || exec('zaakceptowany','icon')
                                                 || exec('pusta','#icon')
                                                 ?}");
__sscean.win_btn(_win_sel,'text=%1, panel=bottom, align=begin'['&Akceptuj'@],'menu:A');
__sscean.fld_fml('TW','DISPLAY_FORMAT',"{? __sscean.TREE=null || 'empty=1' || 'empty=0' ?}");
__sscean.win_sel(_win_sel);

BEER.M:=exec('FindAndGet','#table',M,__zknrea.SQM,,,null());

__sscean.clear();
__sscean.blank();
__sscean.TREE:=null;
__sscean.OPI:=BEER.M().KTM;
__sscean.SCEAN:='';
__sscean.ILE:=0;
__sscean.ILD:=0;
__sscean.REF:='';
__sscean.LOK:='';
__sscean.TW:=date(0,0,0);
_tree:={? __sscean.add() || __sscean.ref() || null ?};

_ref:=$__zknrea.ref();
_dk_c:=null();
ZK_P.cntx_psh();
ZK_P.clear();
{? ZK_P.seek(__zknrea.SQL) || _dk_c:=ZK_P.DK_C ?};
ZK_P.cntx_pop();

_sld:=tab_tmp(1,'REF','STRING[16]','','SSC','STRING[16]','');
_sild:=0;
_sile:=0;
_silr:=0;

{? _tree<>null
|| exec('sc_aktyw','magazyn_stan',BEER.MG,BEER.M);
   _stskind:='Z';
   exec('sc_tymczas','magazyn_stan',BEER.MG,BEER.M,'T',,_stskind,,1);
   exec('initscsl','magazyn_mob',_dk_c,,,ZK_P.ref());
   __scsld.index(__ndxsld);
   {? __scsld.first()
   || {!
      |? _scean:={? __scsld.SCEAN<>'' || __scsld.SCEAN || 'xxxx' ?};
         MKODK.cntx_psh();
         MKODK.index('KK');
         MKODK.prefix(_scean,_scean);
         {? MKODK.first()
         || _opis:={? MKODK.M().FOMOB<>null
                   || ($MKODK.M().FOMOB().FORMULA)()
                   || _op:=exec('formopis','kody_kresk',MKODK.IDMOB,MKODK.RSQL,-1,,MKODK.M().IDZP);
                      _bop:=_op[1]; obj_del(_op); _bop
                   ?}
         || _opis:='kod ID'
         ?};
         MKODK.cntx_pop();
         {? (_sld.clear(); _sld.find_key(__scsld.SLD))
         || __scsld.ILD+=__scsld.ILS;
            __scsld.put(1);
            _sild+=__scsld.ILS
         || __sscean.blank();
            __sscean.TREE:=_tree;
            __sscean.OPI:=_opis;
            __sscean.SCEAN:=__scsld.SCEAN;
            __sscean.ILD:=__scsld.ILS;
            __sscean.ILR:=0;
            __sscean.ILE:=__scsld.STD;
            __sscean.REF:=__scsld.SLD;
            __sscean.LOK:=__scsld.LOK;
            __sscean.TW:=__scsld.TRM;
            __sscean.RLOK:=__scsld.LOR;
            __sscean.add(1);
            _sld.blank();
            _sld.REF:=__scsld.SLD;
            _sld.SSC:=$__sscean.ref();
            _sld.add(1);
            _sild+=__sscean.ILD;
            _sile+=__sscean.ILE
         ?};
         __scsld.next()
      !}
   ?};
   exec('donescsl','magazyn_mob');
   __dstean.cntx_psh();
   __dstean.clear();
   {? __dstean.first()
   || {!
      |? {? __dstean.SLD<>'' & __dstean.ILR>0 & (_sld.clear(); _sld.find_key(__dstean.SLD))
          & (__sscean.clear(); __sscean.seek(_sld.SSC))
         || {? __dstean.ZKR<>_ref
            || __sscean.ILE-=__dstean.ILR;
               _sile-=__dstean.ILR
            ?};
            {? __dstean.ZKR=_ref
            || __sscean.ILR+=__dstean.ILR;
               {? __dstean.DST
               || __sscean.ILE+=__dstean.ILP;
                  _sile+=__dstean.ILP
               ?};
               _silr+=__dstean.ILR
            ?};
            __sscean.DST:=__dstean.DST;
            {? __sscean.ILE>__sscean.ILD || __sscean.ILE:=__sscean.ILD ?};
            __sscean.put(1)
         ?};
         __dstean.next()
      !}
   ?};
   __dstean.cntx_pop();
   obj_del(_sld)
?};

__sscean.clear();
{? __sscean.first()
|| __sscean.ILD:=_sild;
   __sscean.ILE:=_sile;
   __sscean.ILR:=_silr;
   {? __sscean.ILE>__sscean.ILD || __sscean.ILE:=__sscean.ILD ?};
   __sscean.put(1);
   __sscean.select()
?};

VAR_DEL.delete('__sscean');
__dstean.cntx_pop();
BEER.MG:=_beermg;
'activate:browse'


\wysscean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po poprawie ilosci dla jednej pozycji
::   WE: _a - 1-wybor 0-rezygnacja z wyboru
::   WY: 1-ok 0-nie jest dobrze
::  OLD: \wysscean/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=__sscean.sel_aget();
__sscean.sel_adel();
__sscean.cntx_psh();
__sscean.clear();
{? __sscean.first() || _ile:=__sscean.ILR ?};
__sscean.cntx_pop();
__sscean.cntx_psh();
_rez:=__zknrea.REZ;
_dor:=_rez-_ile;
_ilr:=0;
_tab.clear();
{? _a & _dor<=0
|| FUN.info('Podano już maksymalną ilość.\nWybór niemożliwy.'@)
|? ~_tab.size() & ~__sscean.TREE
|| {? _a
   || FUN.info('Dla podsumowania.\nWybór niedostępny.'@)
   || FUN.info('Dla podsumowania.\nRezygnacja niedostępna.'@)
   ?}
|? _tab.first()
|| {? {? _a
      || FUN.ask('Czy wybrać maksymalną ilość do kompletacji dla zaznaczonych pozycji?'@)
      || FUN.ask('Czy zrezygnować z wyboru ilości do kompletacji dla zaznaczonych pozycji?'@)
      ?}
   || {!
      |? {? (__sscean.clear(); __sscean.seek(_tab.REF,)) & __sscean.TREE<>null
         || {? _a
            || _bez:=__sscean.ILE-__sscean.ILR;
               {? _bez>0
               || _kpl:=0;
                  {? _bez<=_dor
                  || __sscean.ILR+=_bez;
                     _jest:=__sscean.ILR;
                     __sscean.ILR:=exec('popscean','magazyn_mob',1);
                     __sscean.put(1);
                     _kpl:=(_bez-(_jest-__sscean.ILR));
                     _ilr+=_kpl;
                     _dor-=_kpl
                  || __sscean.ILR+=_dor;
                     _jest:=__sscean.ILR;
                     __sscean.ILR:=exec('popscean','magazyn_mob',1);
                     __sscean.put(1);
                     _kpl:=(_dor-(_jest-__sscean.ILR));
                     _ilr+=_kpl;
                     _dor-=_kpl
                  ?};
                  {? _kpl>0
                  || __sscean.clear();
                     {? __sscean.first()
                     || __sscean.ILR+=_kpl;
                        __sscean.put(1)
                     ?}
                  ?}
               ?}
            || _ilr-=__sscean.ILR;
               __sscean.ILR:=0;
               __sscean.put(1)
            ?}
         ?};
         (_dor>0 | ~_a) & _tab.next()
      !}
   ?}
|? _a & FUN.ask('Czy wybrać maksymalną ilość do kompletacji dla pozycji?'@)
|| _bez:=__sscean.ILE-__sscean.ILR;
   {? _bez>0
   || {? _bez<=_dor
      || __sscean.ILR+=_bez;
         _jest:=__sscean.ILR;
         __sscean.ILR:=exec('popscean','magazyn_mob',1);
         __sscean.put(1);
         _ilr+=(_bez-(_jest-__sscean.ILR));
         _dor-=(_bez-(_jest-__sscean.ILR))
      || __sscean.ILR+=_dor;
         _jest:=__sscean.ILR;
         __sscean.ILR:=exec('popscean','magazyn_mob',1);
         __sscean.put(1);
         _ilr+=(_dor-(_jest-__sscean.ILR));
         _dor-=(_dor-(_jest-__sscean.ILR))
      ?}
   ?}
|? ~_a & FUN.ask('Czy zrezygnować z wyboru ilości do kompletacji dla pozycji?'@)
|| _ilr-=__sscean.ILR;
   __sscean.ILR:=0;
   __sscean.put(1)
?};
__sscean.clear();
{? __sscean.first()
|| __sscean.ILR:=_ile+_ilr;
   __sscean.put(1)
?};
__sscean.cntx_pop();
~~


\popscean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po poprawie ilosci dla jednej pozycji
::   WE: [_a] 0-(domyslnie) na popraw 1-do kontroli
::   WY: 1-ok 0-nie jest dobrze W PRZYPADKU _a=1 zwraca maksymalna ilosc
::  OLD: \popscean/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_wyn:=1;
{? __sscean.ILR<0
|| {? ~_a || FUN.info('Należy podać ilość większą lub równą zero.'@) ?};
   _wyn:=0
?};
{? _wyn & __sscean.ILR>__sscean.ILE
|| {? ~_a
   || FUN.info('Podano zbyt dużą ilość.\n'
               'Aktualnie dla danej identyfikacji dostawy dostępna jest ilość: %1.'@[form(__sscean.ILE,,3,'99')])
   ?};
   __sscean.ILR:=__sscean.ILE;
   _wyn:=0
?};
{? _wyn
|| _alldst:=exec('ildstsce','magazyn_mob','');
   _aktdst:=exec('ildstsce','magazyn_mob',__sscean.SCEAN);
   _pomdst:=_alldst-_aktdst;
   _ilr:=__sscean.ILR;
   _res:=__zknrea.REZ-__zknrea.PLUS;
   _rez:=_res-{? ~_aktdst || _alldst || _pomdst ?};
   _ref:=__sscean.ref();
   __sscean.cntx_psh();
   __sscean.clear();
   {? __sscean.first()
   || _ile:=__sscean.ILR;
      _allstn:={? ~__ilplus || 0 || _rez:=__sscean.ILD; _rez ?};
      {? _alldst>0
      || _buf:=tab_tmp(1,'SCEAN','STRING[128]','','ILE','REAL','','ILR','REAL','');
         _tree:=__sscean.ref();
         __sscean.prefix(_tree);
         {? __sscean.first()
         || {!
            |? _buf.clear();
               {? ~_buf.find_key(__sscean.SCEAN)
               || _buf.blank();
                  _buf.SCEAN:=__sscean.SCEAN;
                  _buf.ILE:=exec('ildstsce','magazyn_mob',__sscean.SCEAN);
                  _buf.ILR:=0;
                  _buf.add(1)
               ?};
               _ild:=_buf.ILE-_buf.ILR;
               {? _ref<>__sscean.ref() & __sscean.ILR>0 & _ild>0
               || {? _ild<__sscean.ILR
                  || _ile-=_ild;
                     _buf.ILR+=_ild;
                     _buf.put(1)
                  || _ile-=__sscean.ILR;
                     _buf.ILR+=__sscean.ILR;
                     _buf.put(1)
                  ?}
               ?};
               __sscean.next()
            !}
         ?};
         obj_del(_buf)
      ?}
   || _ile:=0
   ?};
   __sscean.clear();
   {? __sscean.seek(_ref) || _ilb:=__sscean.ILR || _ilb:=0 ?};
   _roz:=_ilb-_ilr;
   __sscean.cntx_pop();
   {? ((_ile-_ilb)+_ilr)>_rez
   || {? _alldst>0 & ~_aktdst
      || __sscean.ILR:=_rez-(_ile-_ilb);
         {? __sscean.ILR<0 || __sscean.ILR:=0 ?};
         {? ~_a
         || FUN.info('Przekroczono ilość rezerwowaną dla danej pozycji zamówienia.\n'
                     'Zamówienie posiada ilości rezerwowane wg dostaw, których identyfikator nie jest zgodny z danym.\n'
                     'Maksymalnie można podać ilość: %1.'@[form(__sscean.ILR)])
         ?}
      || __sscean.ILR:=_rez-(_ile-_ilb);
         {? __sscean.ILR<0 || __sscean.ILR:=0 ?};
         {? ~_a
         || FUN.info('Przekroczono ilość rezerwowaną dla danej pozycji zamówienia.\n'
                     'Maksymalnie można podać ilość: %1.'@[form(__sscean.ILR)])
         ?}
      ?};
      _wyn:={? ~_a || 0 || __sscean.ILR ?}
   || {? _a || _wyn:=_ilr ?}
   ?}
?};
{? ~_a & _wyn
|| __sscean.cntx_psh();
   __sscean.clear();
   {? __sscean.first()
   || __sscean.ILR-=_roz;
      __sscean.put(1)
   ?};
   __sscean.cntx_pop()
?};
_wyn


\ildstsce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: oblicza ilosc rezerwowana wg dostaw dla danej pozycji zamowienia
::   WE: _a - identyfikator dostawy
::       [_b] - 0(domyslnie) 1-pomijanie dostawy
::  OLD: \ildstsce/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

_wyn:=0;
ZK_P.cntx_psh();
REZ.cntx_psh();
{? ZK_P.seek(__zknrea.SQL)
|| REZ.index('ZK_P');
   REZ.prefix(ZK_P.ref());
   {? REZ.first()
   || {!
      |? {? REZ.SC<>''
          & (_a='' | {? ~_b
                     || exec('FindAndGet','#table',DK,REZ.SC,,"SCEAN",'')=_a
                     || exec('FindAndGet','#table',DK,REZ.SC,,"SCEAN",'')<>_a
                     ?})
         || _wyn+=REZ.ILR
         ?};
         REZ.next()
      !}
   ?}
?};
ZK_P.cntx_pop();
REZ.cntx_pop();
_wyn


\rekscean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: podswietlenie rekordow
::  OLD: \rekscean/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
__sscean.TREE=null & __sscean.ILR>0


\akcscean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po zmianie iloscie akceptacja
::   WE: [_a] - 0(domyślnie) standardowa akceptacja w okienku, -1-automatyczne zerowanie,
::  OLD: \akcscean/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_auto:={? var_pres('_a')=type_of(0) & fabs(_a)<=1 || _a || 0 ?};

{? _auto<>0 | FUN.ask('Czy zaakceptować zmianę ilości?'@)
|| {? _auto=0 || sel_exit() ?};
   _sum:=0;
   _zkr:=$__zknrea.ref();
   _zk_p:=exec('FindAndGet','#table',ZK_P,__zknrea.SQL,,,null());
   _rezb:=exec('ilrBezPlusZK_P','zamsiw_rea',_zk_p,__refrea);
   _rezs:=exec('ilrBezPlusZK_P','zamsiw_rea',_zk_p,'');
   {? _rezs>_rezb || _rezb:=_rezs ?};
   _rezp:=exec('ilrPlusZK_P','zamsiw_rea',_zk_p,__refrea,'');
   _drea:=__zknrea.RES;
   __dstean.cntx_psh();
   __dstean.clear();
   __dstean.prefix(_zkr);
   {? __dstean.first() || {! |? __dstean.del() !} ?};
   {? ~_auto
   || __sscean.clear();
      {? __sscean.first()
      || {!
         |? {? __sscean.TREE<>null & __sscean.ILR>0
            || _sum+=__sscean.ILR;
               exec('addstean','magazyn_mob',_zkr,__sscean.OPI,BEER.M().IDMOB,__sscean.ILD,__sscean.ILR,BEER.M().J().KOD
                ,__sscean.LOK,__sscean.SCEAN,__sscean.RLOK,__sscean.TW,__sscean.REF,__sscean.DST)
            ?};
            __sscean.next()
         !}
      ?}
   || _sum:=0
   ?};
   __dstean.cntx_pop();
   __zknrea.RES:=_sum;
   {? __zknrea.RES>=_rezb & _rezb>0
   || __zknrea.REA:=_rezb;
      __zknrea.PLUS:=__zknrea.RES-_rezb
   || __zknrea.REA:=__zknrea.RES;
      __zknrea.PLUS:=0
   ?};
   __zknrea.WYB:={? __zknrea.REA>0 || '*' || '' ?};
   __zknrea.put(1);
   {? __zknrea.RES<>_drea
   || _upgrade:=_rezp-__zknrea.PLUS;
      ZK_P.cntx_psh();
      ZK_P.prefix();
      {? ZK_P.seek(_zk_p)
      || {? _upgrade>0
         || REZ.cntx_psh();
            REZ.index('ZK_PP');
            REZ.prefix(ZK_P.ref(),'T','B',__refrea);
            {? REZ.last()
            || {!
               |? {? REZ.ILR<=_upgrade
                  || _upgrade-=REZ.ILR;
                     REZ.del()
                  |? REZ.ILR>0
                  || REZ.ILR-=_upgrade;
                     REZ.put(1);
                     _upgrade:=0;
                     0
                  || REZ.prev()
                  ?}
               !}
            ?};
            REZ.cntx_pop()
         |? _upgrade<0
         || exec('update','rezerwacje','ZK_PP',ZK_P.ref(),ZK_P.RMAG,ZK_P.M,_upgrade,,'B',,1,ZK_P.NR,__refrea);
            exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
            ZK_P.get();
            exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,0,$ZK_P.N)
         ?}
      ?};
      ZK_P.cntx_pop()
   ?}
|| 0
?}


\eann2zk_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Realizacja kompletacji na podstawie operacji mobilnej
::----------------------------------------------------------------------------------------------------------------------
_selsize:=EANN.sel_size();
{? _selsize=1
|| _tab:=EANN.sel_aget();
   EANN.cntx_psh();
   {? _tab.first() & EANN.seek(_tab.REF,)
   || EANN.sel_adel();
      _params:=exec('mp_run_a','#b__box');
      _params.ACT_UID:='LMO_MOB_DKOM';
      _params.UIDREF:=EANN.uidref();
      _params.AKCJA:='Generuj_wg_ope';
      _params.PROC_START:='T';
      _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
      exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EANN',EANN.ref());
      exec('mp_run','#b__box',_params)
   ?};
   EANN.cntx_pop()
|? _selsize>1 & FUN.ask('Czy realizować zaznaczone operacje kompletacji?'@)
|| EANN.cntx_psh();
   _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LMO_MOB_DKOM';
   _params.UIDREF:=EANN.uidref();
   _params.AKCJA:='Generuj_wg_ope';
   _params.PROC_START:='T';
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EANN',EANN.ref());
   exec('mp_run','#b__box',_params);
   EANN.cntx_pop()
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LMO_MOB_DKOM';
   _params.UIDREF:=EANN.uidref();
   _params.AKCJA:='Generuj_wg_ope';
   _params.PROC_START:='T';
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EANN',EANN.ref());
   exec('mp_run','#b__box',_params)
?};
'activate:browse'


\akczeann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: akceptacja wyboru realizacji zamowienia
::  OLD: \akczeann/ean.fml
::----------------------------------------------------------------------------------------------------------------------
:: DRO: [rr] dla W i P obecnie nieobsługiwane
EANN.cntx_psh();
EANN.get();
{? EANN.TYP='Z'
|| VAR_DEL.delete('__zknrtk','__zknntk','__zknbtk','__zkndtk','__zknswa','__zknkrs');
   BEER.ZK_N:=ZK_N.ref();
   _ref_kh:=ZK_N.KH;
   _ref_odb:=ZK_N.ODB;
   __zknrtk:=ZK_N.RTK;
   __zknntk:=ZK_N.NTK;
   __zknbtk:=ZK_N.BTK;
   __zkndtk:=ZK_N.DTK;
   __zknswa:=ZK_N.SWAL;
   __zknkrs:=ZK_N.KRS;
   HELP.MJS:='Z';
   exec('eann2zk_n','magazyn_mob');
   VAR_DEL.delete('__zknrtk','__zknntk','__zknbtk','__zkndtk','__zknswa','__zknkrs')
?};
EANN.cntx_pop();
~~


\pr_zeann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed odswiezeniem operacji
::  OLD: \pr_zean/ean.fml
::----------------------------------------------------------------------------------------------------------------------
1


\po_zeann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po odswiezeniu operacji
::  OLD: \po_zeann/ean.fml
::----------------------------------------------------------------------------------------------------------------------
EANP.index('EANN');
EANP.prefix(EANN.ref());
grp_disp(EANP,'WYB');
1


\rekzeann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: rekord dla operacji mobilnych
::  OLD: \rekzeann/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('ctrlezam','magazyn_mob',EANN.ref(),EANN.REFSQL);
_wyn


\ctrlezam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: rekord dla operacji mobilnych
::   WE: _a - ref EANN
::       _b - ref SQL zamowienia
::   WY: sposob kolorowania
::  OLD: \ctrleza/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
ZD_NAG.cntx_psh();
ZD_POZ.cntx_psh();
ZK_N.cntx_psh();
ZK_P.cntx_psh();
EANN.cntx_psh();
EANP.cntx_psh();
PAL.cntx_psh();
PAL_POZ.cntx_psh();

_buf:=tab_tmp(2,'MAT','STRING[16]',''
       ,'MAG','STRING[16]',''
       ,'ILZ','REAL',''
       ,'ILE','REAL','');

{? (5+EANN.REFSQL)='zknag'
|| _typ:='Z';
   _refzam:=exec('FindAndGet','#table',ZK_N,EANN.REFSQL,,,null())
|| _typ:='D';
   _refzam:=exec('FindAndGet','#table',ZD_NAG,EANN.REFSQL,,,null())
?};

{? _typ='Z'
|| ZK_P.index('NAG');
   ZK_P.prefix(_refzam);
   {? ZK_P.first()
   || {!
      |? _buf.clear();
         _buf.prefix($ZK_P.M,$ZK_P.RMAG);
         {? _buf.first()
         || _buf.ILZ+=ZK_P.ILP;
            _buf.put(1)
         || _buf.blank();
            _buf.MAT:=$ZK_P.M;
            _buf.MAG:=$ZK_P.RMAG;
            _buf.ILZ:=ZK_P.ILP;
            _buf.add(1)
         ?};
         ZK_P.next()
      !}
   ?}
|| ZD_POZ.index('POZ');
   ZD_POZ.prefix(_refzam);
   {? ZD_POZ.first()
   || {!
      |? _buf.clear();
         _buf.prefix($ZD_POZ.M,$ZD_POZ.MG);
         {? _buf.first()
         || _buf.ILZ+=ZD_POZ.IL_POZ;
            _buf.put(1)
         || _buf.blank();
            _buf.MAT:=$ZD_POZ.M;
            _buf.MAG:=$ZD_POZ.MG;
            _buf.ILZ:=ZD_POZ.IL_POZ;
            _buf.add(1)
         ?};
         ZD_POZ.next()
      !}
   ?}
?};
EANP.index('EANN');
EANP.prefix(_a);
{? EANP.first()
|| {!
   |? {? EANP.PAL<>null
      || {? EANP.PAL().AKT='N'
         || PAL_POZ.use('palet'+form(PAL.AR-2000,-2,0,'99'))
         || PAL_POZ.use('paletyp')
         ?};
         PAL_POZ.index('PAL');
         PAL_POZ.prefix(EANP.PAL);
         {? PAL_POZ.first()
         || {!
            |? _buf.clear();
               _buf.prefix($PAL_POZ.M,$EANP.LOKZ().MG);
               {? _buf.first()
               || _buf.ILE+=PAL_POZ.ILP;
                  _buf.put(1)
               || _buf.blank();
                  _buf.MAT:=$PAL_POZ.M;
                  _buf.MAG:=$EANP.LOKZ().MG;
                  _buf.ILE:=PAL_POZ.ILP;
                  _buf.add(1)
               ?};
               PAL_POZ.next()
            !}
         ?}
      || _buf.clear();
         _buf.prefix($EANP.M,$EANP.LOKZ().MG);
         {? _buf.first()
         || _buf.ILE+=EANP.ILS;
            _buf.put(1)
         || _buf.blank();
            _buf.MAT:=$EANP.M;
            _buf.MAG:=$EANP.LOKZ().MG;
            _buf.ILE:=EANP.ILS;
            _buf.add(1)
         ?}
      ?};
      EANP.next()
   !}
?};

_byl:=0;
_all:=0;

_buf.clear();
{? _buf.first()
|| _all:=_buf.size();
   {!
   |? _byl+=_buf.ILZ>0 & _buf.ILE>0;
      _buf.next()
   !}
?};

_wyn:={? ~_byl || 'EANN#01#01'
      |? _all>_byl || 'EANN#01#02'
      || ''
      ?};

ZD_NAG.cntx_pop();
ZD_POZ.cntx_pop();
ZK_N.cntx_pop();
ZK_P.cntx_pop();
EANN.cntx_pop();
EANP.cntx_pop();
PAL.cntx_pop();
PAL_POZ.cntx_pop();

_wyn


\przelbtn_ctrl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przelaczenie
::   WE: [_a] - typ operacji, ''(domyślnie), 'X'-operacje w tabeli tymczasowej
::  OLD: \przelbtn/ean.fml
::----------------------------------------------------------------------------------------------------------------------
__czy_wyb:=1;
__wyb_ope:={? var_pres('_a')=type_of('') || _a || '' ?};
{? __wyb_ope='X' || __wyb_ope:=1+menu_pth() ?};

_msk:=(EANN.name()+2)<>{? __wyb_rok='--' || '__' || (__wyb_rok+2) ?};
_prf:=EANN.cur_prfx()*__wyb_ope;
{? _msk | ~_prf || sel_exit() || 1 ?}


\combo_years
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Tworzy tymczasową tabelę z wartościami dla combobox'a.
::   WY: tabela z latami
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,'LP','INTEGER','','ROK','STRING[4]','Rok');
_lp:=0;

_tab.blank();
_tab.LP:=_lp;
_tab.ROK:='--';
_tab.add();

OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.last()
|| {!
   |? _lp+=1;
      _tab.blank();
      _tab.LP:=_lp;
      _tab.ROK:=$OKR.ROK;
      _tab.add();
      OKR.prev()
   !}
?};
OKR.cntx_pop();
_tab


\combo_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PS [17.00]
:: OPIS: Akcja uruchamiania po wybraniu wartości z combobox'a.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_value:={? __tab_ope='M'
        || exec('get_value','#desktop','','magazyn','cmb_arch@panel')
        || exec('get_value','#desktop','','magazynw','cmb_arch@panelw')
        ?};
{? _value='' || _value:='--' ?};
__wyb_rok:=_value;
{? __tab_ope<>'M'
|| exec('set_value','#desktop','','magazyn','cmb_arch@panel',__wyb_rok)
|| exec('set_value','#desktop','','magazynw','cmb_arch@panelw',__wyb_rok)
?};
exec('przelbtn_ctrl','magazyn_mob',__wyb_ope);
~~


\btnval
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PS [17.00]
:: OPIS: Ustawia wartość (napis) przycisku na tę przekazaną w parametrze.
::   WE: _a - id systemowe przycisku
::       _b - nazwa przycisku
::       _c - wartość liczbowa 1
::       _d - wartość liczbowa 2
::       [_e] - kolor tekstu w RGB (domyślnie FFFFFF - biały)
::       [_f] - [0]/1 - pogrubienie tekstu
::   WY: tekst
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_e')=type_of('')
|| _color:=_e
|| _color:='FFFFFF'
?};

{? var_pres('_f')=type_of('')
|| _bold:='<b>';
   _bolde:='</b>'
|| _bold:='';
   _bolde:=''
?};

{? var_pres('_g')=type_of('') & _g<>''
|| _ctrl:=_g
|| _ctrl:='magazyn'
?};

_text:='<html><center><font color="'+_color+'">'+_bold+_b+_bolde+'<br/></font>'
'<font size=6 color="FFA500"><b>'+_c+'</font><font size=6 color="CACACA">/</font>'
'<font size=5 color="CACACA">'+_d+'</font></b></center><html>';

exec('set_value','#desktop','',_ctrl,_a,_text,1);
_text


\btnOnOffNag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: wlaczenie/wylaczenie klawiszy dla nagłówka operacji
::----------------------------------------------------------------------------------------------------------------------
:: klawisz realizacji
_zmu:={? EANN.sel_size()=0
      || {? EANN.STAN='Z' || 'Z' || '' ?}
      || {? EANN.TYP='R'  || 'R' || '' ?}
      ?};
_trnzl:=(4+EANN.REFSQL)='trnl';
_no_et:={? ~exec('isDEFetyk','magazyn_mobi','EANN') || 'T' || '' ?};
{? EANN.TYP='Z'
|| {? EANN.sel_size=0 | exec('sprWybKompl','magazyn_mob')
   || EANN.actions_grayed(__sel_n,_no_et+{? _trnzl || 'R' || 'P' ?}+_zmu)
   || EANN.actions_grayed(__sel_n,_no_et+'RP'+_zmu)
   ?}
|? (EANN.name()+2)<>'__' & (';PWI'*EANN.TYP)>0
|| {? EANN.sel_size<>0 | ~exec('sprCzyPal','magazyn_mob')
   || EANN.actions_grayed(__sel_n,_no_et+'R'+_zmu)
   || EANN.actions_grayed(__sel_n,_no_et+''+_zmu)
   ?}
|? _zmu<>''
|| EANN.actions_grayed(__sel_n,_no_et+{? ~((';PW'*EANN.TYP)>1) || 'P' |? _trnzl || 'R' || 'P' ?}+_zmu)
|| EANN.actions_grayed(__sel_n,_no_et+{? ~((';PW'*EANN.TYP)>1) || 'P' |? _trnzl || 'R' || 'P' ?})
?};
~~


\sprWybKompl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: sprawdza zaznaczone kompletacje
::   WY: 1-zgodne 0-niezgodne
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
EANN.cntx_psh();
ZK_N.cntx_psh();
_eann:=EANN.sel_aget();
{? _eann.first() & _eann.size>1 & (EANN.clear(); EANN.seek(_eann.REF,))
 & {? EANN.STAN='Z' & exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT) || 1 || _wyn:=0; 0 ?}
 & (5+EANN.REFSQL)='zknag'
|| ZK_N.clear();
   {? ZK_N.seek(EANN.REFSQL,form(8+EANN.REFSQL))
   ||
::    pobieramy parametry pierwszego z zamówień
      _czypal:=ZK_N.MG<>null & ZK_N.MG().PAL='T';
      _rodz:=ZK_N.T().R;
      _typ:=ZK_N.T;
      _wyd:=ZK_N.WYD;
      _zlec:=ZK_N.ZL;
      _mag:={? _czypal || ZK_N.MG || null ?};
      _kh:=ZK_N.KH;
      _odb:=ZK_N.ODB;
      _rab:=ZK_N.RAB;
      _wal:=ZK_N.WAL;
      _krs:=ZK_N.KRS;
      _pl:=ZK_N.PL;
      _han:=ZK_N.HAN;
      _cb:=ZK_N.CB;
      _tr:=ZK_N.TR;
      _czym:=0;
      _nip_ue:=ZK_N.NIP_UE;
      _spoblra:=ZK_N.SPOBLRAB;
      _rab_typ:=ZK_N.RAB_TYP;
      _spp:=ZK_N.SPP;
      _mjs:=ZK_N.KH_MSC;
      {? _eann.next()
      || {!
         |? {? ~_czypal & (EANN.clear(); EANN.seek(_eann.REF,))
              & EANN.STAN='Z' & exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
              & (5+EANN.REFSQL)='zknag'
              & (ZK_N.clear(); ZK_N.seek(EANN.REFSQL,form(8+EANN.REFSQL)))
            || {? ZK_N.T().R=_rodz & ZK_N.T=_typ
               || {? _rodz='Z'
                  || _wyn:=ZK_N.ODB=_odb & ZK_N.RAB=_rab
                         & ZK_N.WAL=_wal & ZK_N.KRS=_krs
                         & ZK_N.PL=_pl & ZK_N.HAN=_han
                         & ZK_N.CB=_cb & ZK_N.DP<=date(ST.AR,ST.AM,0)
                         & ({? ~_czym || _czym:=_tr<>ZK_N.TR ?}; 1)
                         & ZK_N.NIP_UE=_nip_ue
                         & ZK_N.SPOBLRAB=_spoblra & ZK_N.RAB_TYP=_rab_typ
                         & ZK_N.SPP=_spp & ZK_N.KH_MSC=_mjs
                         & {? _mag<>null || ZK_N.MG=_mag |? ZK_N.MG<>null || ZK_N.MG().PAL='N' || 1 ?}
                  |? _rodz='W'
                  || _wyn:=ZK_N.DP<=date(ST.AR,ST.AM,0)
                         & ZK_N.ZL=_zl & ZK_N.WYD:=_wyd
                         & {? ZK_N.MG<>null || ZK_N.MG().PAL<>'T' || 1 ?}
                         & (ZK_N.ZL=null() | ZK_N.ZL().STAN='O')
                         & ({? ~_czym || _czym:=_tr<>ZK_N.T().TYPYDOK ?}; 1)
                         & {? _mag<>null || ZK_N.MG=_mag |? ZK_N.MG<>null || ZK_N.MG().PAL='N' || 1 ?}
                  || _wyn:=0
                  ?}
               || _wyn:=0
               ?}
            || _wyn:=0
            ?};
            _wyn & _eann.next()
         !}
      ?}
   ?}
?};
EANN.cntx_pop();
ZK_N.cntx_pop();
_wyn


\eannBlock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: blokuje EANN
::   WE: _a-komunikat o blokadzie 0-nie
::   WY: 1-udało się 0-nie udało się
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? EANN.r_lock(1,1,1)
|| _wyn:=1
|? _a
|| {? FUN.ask('Operację obsługuje inny operator.\nCzy chcesz zobaczyć kto?'@) & EANN.r_lock() || EANN.r_unlock() ?}
?};
_wyn


\eannUnBlock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: odblokowuje EANN
::   WE: _a-refslq EANN-a
::   WY: 1-udało się 0-nie udało się
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
EANN.cntx_psh();
EANN.prefix();
{? _a<>'' & EANN.seek(_a)
|| EANN.r_unlock();
   _wyn:=1
?};
EANN.cntx_pop();
_wyn


\sprCzyPal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: sprawdza czy nie jest to operacja paletowa lub czy została wprowadzona jako całe palety
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_pal:=0;
_bez:=0;
EANP.cntx_psh();
EANP.index('EANN');
EANP.prefix(EANN.ref());
{? EANP.first()
|| {!
   |? _pal+=EANP.EAN<>'' & EANP.EAN=EANP.PALEAN & EANP.M=null();
      _bez+=EANP.LOKZ().MG().PAL<>'T';
      (~_pal & ~_bez) & EANP.next()
   !}
?};
EANP.cntx_pop();
_wyn:=_pal | _bez;
_wyn


\zk_n2eann
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: realizuję operację kompletacji lub wydania dla zamówienia
::----------------------------------------------------------------------------------------------------------------------
{? EANN.TYP='W'
|| {? ~exec('chk_role','#b__box',OPERATOR.USER,'LMO_MOB_DWYD')
   || FUN.info('Zamówienie powiązane z operacjami na urządzeniach mobilnych.\n'
               'Brak uprawnień do czynności realizacji operacji wydania.\n\n'@+
               'Realizacja niemożliwa.'@)
   || exec('eann2nd','magazyn_mob','W')
   ?}
|? EANN.TYP='Z'
|| {? ~exec('chk_role','#b__box',OPERATOR.USER,'LMO_MOB_DKOM')
   || FUN.info('Zamówienie powiązane z operacjami na urządzeniach mobilnych.\n'
               'Brak uprawnień do czynności realizacji operacji kompletacji wysyłki.\n\n'@+
               'Realizacja niemożliwa.'@)
   || exec('eann2zk_n','magazyn_mob')
   ?}
?};
~~


\operWEBSERV_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: okienko dla nagłówków operacji webservice
::   WE: _a - typ operacji
::       _b - 1-archiwalne 0-nie
::   WY: uchwyt okienka
::----------------------------------------------------------------------------------------------------------------------
_arch:={? var_pres('_b')<>type_of(0) || 0 || _b ?};

_wyn:=EANN.mk_sel('Nagłówki operacji z webservice'@,'P',0,
             {? _a='P' || '#eann_selecw_p'
             |? _a='W' || '#eann_selecw_w'
             || '#eann_selecw_x' ?},,,,,'U','T');
EANN.win_fld(_wyn,EANX,'STAN',,,4,,1,'Stan'@);
EANN.win_fld(_wyn,,'KH','SKR',,14,,1,'Kontrahent'@);
EANN.win_fld(_wyn,,'DATA',,,15,,1,'Data'@);
EANN.win_fld(_wyn,,'MG','SYM',,12,,1,'Magazyn'@);
EANN.win_fld(_wyn,,'TIMER',,,16,,1,'Czas rozpoczęcia'@);
EANN.win_fld(_wyn,,'TIMEZ',,,16,,1,'Czas zakończenia'@);
EANN.win_fld(_wyn,,'USERS','KOD',,20,,1,'Użytkownik'@);
EANN.win_fld(_wyn,EANX,'OPEANN',,,30,,1,'Informacje'@);

:: akcje dla archiwalnych operacji
{? _arch & exec('chk_role','#b__box',OPERATOR.USER,'LMO_MOB_RETO')
|| EANN.win_act(_wyn,,'Formuła','&Przywróć operację'@@,,,"exec('rtr_eann','magazyn_mob')"
                ,,,1,"exec('rtr_eann','magazyn_mob')",,'P');
   EANN.win_btn(_wyn,'text=%1, panel=bottom, align=begin'['&Przywróć operację'@],'menu:P')

:: akcje dla przyjęcia dostawy
|? ~_arch & __noonly & _a='P' & exec('chk_role','#b__box',OPERATOR.USER,'LMO_MOB_DPRZ')
|| EANN.win_act(_wyn,,'Formuła','&Przyjmij dostawę'@@,,,"exec('eann2nd','magazyn_mob','P')",,,
                1,"exec('eann2nd','magazyn_mob','P')",,'P');
   EANN.win_btn(_wyn,'text=%1, panel=bottom, align=begin'['&Przyjmij dostawę'@],'menu:P',,,,,,'noempty')

:: akcje dla wydania magazynowego
|? ~_arch & __noonly & _a='W' & exec('chk_role','#b__box',OPERATOR.USER,'LMO_MOB_DWYD')
|| EANN.win_act(_wyn,,'Formuła','&Utwórz dokument'@@,,,"exec('eann2nd','magazyn_mob','W')",,,
                1,"exec('eann2nd','magazyn_mob','W')",,'U');
   EANN.win_btn(_wyn,'text=%1, panel=bottom, align=begin'['&Utwórz dokument'@],'menu:U',,,,,,'noempty')
?};
{? ~_arch & __noonly
|| EANN.win_act(_wyn,,'Formuła','&Anuluj'@@,,,"exec('anuleann','magazyn_mob')",,,
                1,"exec('anuleann','magazyn_mob')",,'A');
   EANN.win_btn(_wyn,'text=%1, panel=bottom, align=begin'['&Anuluj'@],'menu:A',,,,,,'noempty')
?};

EANN.win_act(_wyn,,'Formuła','Zadan&ia'@@,,,"exec('todo_select','#b__box',EANN.uidref())",,,,,,'I');
EANN.win_act(_wyn,0,'Szukaj');
EANN.win_act(_wyn,0,'Kolejność');
EANN.win_act(_wyn,0,'Formuła','Legenda'@@,,,"exec('legenda','color','EANNOP#01')",,,,,,'L');
EANN.win_act(_wyn,0,'Rekord',,,,"exec('btnOnOffNag','magazyn_mob'); exec('inf_eann','magazyn_mob')");
formikon:="{? EANN.STAN='O' || EANX.STAN:=''; 'xwin16.png:185'
           |? EANN.STAN='A' || EANX.STAN:=''; 'xwin16.png:14'
           |? EANN.STAN='R' || EANX.STAN:=''; 'xwin16.png:18'
           |? EANN.STAN='Y' || EANX.STAN:=''; 'xwin16.png:18'
           |? EANN.STAN='Z' || EANX.STAN:=''; {? ~exec('czyzgilp','magazyn_mob',EANN.ref(),EANN.ILP,EANN.ILODCZYT)
                                              || 'xwin16.png:72'
                                              || 'xwin16.png:13'
                                              ?}
           |? EANN.STAN='X' & EANN.AKT='T' || EANX.STAN:=''; 'xwin16.png:16'
           |? EANN.STAN='X' & EANN.AKT='N' || EANX.STAN:=''; 'xwin16.png:38'
           |? EANN.STAN='!' || EANX.STAN:=''; 'xwin16.png:61'
           |? EANN.STAN='+' || EANX.STAN:=''; 'xwin16.png:38'
           || ''
           ?}";
EANN.win_fml(_wyn,EANX,'STAN',,'ICON_BEFORE',formikon);
_wyn


\operWEBSERV_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: okienko dla pozycji operacji webservice
::   WE: _a - typ operacji
::   WY: uchwyt okienka
::----------------------------------------------------------------------------------------------------------------------
_wyn:=EANP.mk_sel('Pozycje operacji na zleceniach webservice'@,'P',0,
          {? _a='P' || '#eanp_selecw_p'
          |? _a='W' || '#eanp_selecw_w'
          || '#eanp_selecw_x'
          ?},,,,,'U','T');
EANP.win_fld(_wyn,,'LP',,,5,0,1,'Lp.'@);
EANP.win_fld(_wyn,,'M','KTM',,30,,1,'Materiał'@);
EANP.win_fld(_wyn,,'M','N',,49,,1,'Nazwa'@);
EANP.win_fld(_wyn,,'IL',,,20,ST.DOKL,1,'Ilość deklarowana'@);
EANP.win_fld(_wyn,,'ILS',,,20,ST.DOKL,1,'Ilość do rozliczenia'@);
EANP.win_fld(_wyn,M,'J','KOD',,8,,1,'jm'@);

_fmikon:="{? EANX.ERR='B'
          || EANX.ERR:=''; 'xwin16.png:5'
          |? EANX.ERR='M'
          || EANX.ERR:=''; 'xwin16.png:6'
          |? EANX.ERR='S'
          || EANX.ERR:=''; 'xwin16.png:17'
          |? EANX.ERR='I'
          || EANX.ERR:=''; 'xwin16.png:3'
          |? EANX.ERR='U'
          || EANX.ERR:=''; 'xwin16.png:184'
          |? EANX.ERR='D'
          || EANX.ERR:=''; 'xwin16.png:92'
          || EANX.ERR:=''; 'xwin16.png:38'
          ?}";
:: EANP.win_fml(__sel_p,EANX,'ERR',,'ICON_BEFORE',_fmikon);

EANP.win_act(_wyn,0,'Rekord',,,,"exec('rekeanp','magazyn_mob',1)");
EANP.win_act(_wyn,0,'Szukaj');
EANP.win_act(_wyn,0,'Kolejność');
EANP.win_act(_wyn,0,'Formuła','Legenda'@@,,,"exec('legenda','color','EANPOP#01')",,,,,,'L');
_wyn


\prefixOper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: ustawienie prefiksów dla operacji
::----------------------------------------------------------------------------------------------------------------------
_czy_akt:=(EANN.name()+2)='__';
{? _czy_akt & __noonly
|| {? __wyb_ope='M'
   || EANN.index('DATM');
      EANN.prefix('T',{? __tab_ope='M' || 'N' || 'T' ?},'R','T')
   || EANN.index('DATA');
      {? __wyb_ope<>'R'
      || EANN.prefix('T',{? __tab_ope='M' || 'N' || 'T' ?},__wyb_ope)
      || EANN.prefix('T',{? __tab_ope='M' || 'N' || 'T' ?},__wyb_ope,'T')
      ?}
   ?}
|? ~_czy_akt
|| {? __wyb_ope='M'
   || EANN.index('TYPDATM');
      EANN.prefix({? __tab_ope='M' || 'N' || 'T' ?},'R','T')
   || EANN.index('TYPDATA');
      {? __wyb_ope<>'R'
      || EANN.prefix({? __tab_ope='M' || 'N' || 'T' ?},__wyb_ope)
      || EANN.prefix({? __tab_ope='M' || 'N' || 'T' ?},__wyb_ope,'T')
      ?}
   ?}
|| EANN.index('DATA');
   EANN.prefix();
   EANN.f_clear();
   EANN.f_set('DATA',,'\"EANN\".AKT=\'T\' and \"EANN\".STAN=\'Z\' and \"EANN\".TYP=\':_a\' and \"EANN\".ZLEC=\':_b\''
    ,__wyb_ope,{? __tab_ope='M' || 'N' || 'T' ?});
   {? EANN.f_first()
   || {!
      |? {? exec('ctrlEANN','magazyn_mob',__wyb_ope,1,0)
         || EANN.f_next()
         || EANN.f_del()
         ?}
      !}
   ?}
?};
~~


\initOper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: ustawienie miejsca wywołania
::   WE: _a - 'M' - mobilne 'Z' - zlecenia webservice
::----------------------------------------------------------------------------------------------------------------------
_modify:=FILTER.AUTOTASK<>_a;
FILTER.AUTOTASK:=_a;
__tab_ope:={? FILTER.AUTOTASK=2 || 'Z' || 'M' ?};
{? __tab_ope='Z' & ~((';PW'*__wyb_ope)>1) || __wyb_ope:='P' ?};
exec('prefixOper','magazyn_mob');
{? __noonly || exec('infoOper','magazyn_mobi',,1) ?};
~~


\user_configurate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Konfiguracja uwierzytelnienia operatora urządzeń mobilnych - formuła wspólna
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__usmob');
__usmob:=1;
{? USERS.MOBIL<>'T' | (+USERS.PASS)=4
|| _new_user:=1;
   USERS.MOBIL:='T';
   {? USERS.IP='' || USERS.IP:=exec('gen_code_id','ekioski') ?}
|| _new_user:=0
?};

_red:=USERS.mk_edit('Użytkownik - operator urządzeń mobilnych'@,,'usermobil');
USERS.win_esep(_red,'Użytkownik'@);
USERS.win_efld(_red,,'KOD',,,30,,1);
USERS.win_efld(_red,,'DANE',,,30,,1);
USERS.win_esep(_red,'Dane logowania'@);
USERS.win_efld(_red,,'PASS',,,4,,,'Hasło (kod PIN)'@,,,'password');
USERS.win_efld(_red,,'IP',,,,,1,'Identyfikator (kod kreskowy)'@);
USERS.win_ebtn(_red,'text=%1,display=1,align=begin'['Druku&j'@],"exec('drukUserEtyk','ekioski');''");
USERS.win_ebtn(_red,'text=%1,display=1,align=begin'['&Etykieta'@],"exec('etykieta','param_wydr','USERS');''");
USERS.win_esep(_red,'Domyślne parametry'@);
USERS.win_efld(_red,EANX,'MG','SYM','*',10,,0,'Magazyn'@);
USERS.win_efld(_red,EANX,'USEREANL','KOD','MGDOK2',30,,0,'Lokalizacja'@);
_formula:="
   {? FUN.ask('Czy wygenerować nowy identyfikator?'@)
   || _code:=exec('gen_code_id','ekioski');
      USERS.IP:=_code;
      USERS.put()
   ?};
   ''
";
USERS.win_ebtn(_red,'text=%1,display=1,align=begin'['Generuj ID'@],_formula);
exec('ok_esc','#window',USERS,_red);
USERS.efld_opt(_red,'mark=1',,'PASS');
USERS.win_edit(_red);
_formula:="
   {? (+USERS.PASS)<>4
   || FUN.info('Dla operatora mobilnego należy podać 4-znakowy kod PIN.'@);
      'PASS'
   |? EANX.MG<>null() & EANX.USEREANL=null()
   || {? FUN.ask('Nie podano lokalizacji.\nCzy zatwierdzić ustawienia?'@) || '' || 'USEREANL' ?}
   || ''
   ?}
";
MG.f_clear();
MG.clear();
MG.f_set('SYM,NAZ','','\"MG\".SL=\':_a\'','T');

_input:=exec('get','#params',4021,2,USERS.ref());

{? _input<>''
|| EANX.USEREANL:=exec('FindAndGet','#table',EANL,_input,,,null());
   EANX.MG:=EANX.USEREANL().MG
|| EANX.MG:=null();
   EANX.USEREANL:=null()
?};
EANX.fld_fml('USEREANL','BEFORE_EDIT',"EANX.MG<>null()");
EANX.fld_fml('MG','AFTER_EDIT',"{? EANX.MG<>EANX.USEREANL().MG || EANX.USEREANL:=null()
                                |? EANX.USEREANL<>null()       || EANX.MG:=EANX.USEREANL().MG
                                ?};
                                1");
{? _new_user
|| {? USERS.edit(_formula) & (+USERS.PASS)=4
   || USERS.put();
      exec('set','#params',4021,EANX.USEREANL().IDADD,USERS.ref())
   ?}
|| USERS.display()
?};
MG.f_clear();
EANX.fld_fml('USEREANL','BEFORE_EDIT',"");
EANX.fld_fml('MG','AFTER_EDIT',"");
VAR_DEL.delete('__usmob');
~~


\user_config
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Konfiguracja uwierzytelnienia operatora urządzeń mobilnych
::----------------------------------------------------------------------------------------------------------------------
exec('user_configurate','magazyn_mob');
~~


\user_activate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Aktywowanie uwierzytelnienia operatora urządzeń mobilnych
::----------------------------------------------------------------------------------------------------------------------
{? USERS.PASS<>'' & USERS.IP<>''
|| USERS.MOBIL:='T';
   USERS.put()
|| exec('user_configurate','magazyn_mob')
?};
~~


\user_deactivate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Dezaktywowanie uwierzytelnienia operatora urządzeń mobilnych
::----------------------------------------------------------------------------------------------------------------------
USERS.MOBIL:='N';
USERS.PASS:='';
USERS.put();
~~


\user_delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Usunięcie uwierzytelniania operatora urządzeń mobilnych
::----------------------------------------------------------------------------------------------------------------------
{? USERS.PASS<>'' | USERS.MOBIL='T'
|| {? FUN.ask(
        'Czy na pewno chcesz usunąć wszystkie dane dotyczące uwierzytelniania na urządzeniach mobilnych operatora: %1?'@
        [USERS.KOD]
      )
   || USERS.PASS:='';
      USERS.MOBIL:='N';
      {? USERS.EKIOSK<>'T' || USERS.IP:='' ?};
      USERS.put()
   ?}
?};
~~


\user_active
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Czy jest aktywne uwierzytelnianie operatora urządzeń mobilnych
::   WE: _a - USERS.ref()
::----------------------------------------------------------------------------------------------------------------------
_result:=exec('FindAndGet','#table',USERS,_a,,"MOBIL='T'",0);
_result


\user_present
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Czy jest skonfigurowane uwierzytelnianie operatora urządzeń mobilnych
::   WE: _a - USERS.ref()
::----------------------------------------------------------------------------------------------------------------------
_result:=exec('FindAndGet','#table',USERS,_a,,"PASS<>''",0);
_result


\addKO
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Dodanie jednego pola do tabeli o strukturze KOD, OPIS, lub do tabeli z wartosciami typu STRING
::   WE: _a - wskazanie na tabele
::       _b - wartość KOD
::       _c - wartość OPIS
::       [..] - wartości kolejnych pól
::----------------------------------------------------------------------------------------------------------------------
_par:=_-1;
_tab:=_a;
_len:=_tab.fld_num();
{? _len<_par || _par:=_len ?};
{? _par>1
|| _tab.cntx_psh();
   _tab.clear();
   _tab.blank();
   {! _ii.._par |! _tab[_ii]:=_[_ii+1] !};
   _tab.add(1);
   _tab.cntx_pop();
   _tab.first()
?}


\rejLOG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Dodanie jednego zapisu do tabeli log-ów dla operacji mobilnych
::       pomijamy pole IDADD
::   WE: _a - wartość IDEANC
::       _b - wartość IDUSR
::       [..] - wartości kolejnych pól
::----------------------------------------------------------------------------------------------------------------------
_par:=_;
_tab:=EANLOG;
_tab.use('elog____');
_tab.prefix();
_len:=_tab.fld_num();
_end:=0;
{? _par
|| _nrfld:=0;
   _nrpar:=0;
   _tab.blank();
   {!
   |? _nrfld+=1;
      _nrpar+=1;
      {? _tab.fld_acr(_nrfld)='IDADD' || _nrfld+=1 ?};
      _tab[_nrfld]:=_[_nrpar];
      {? _tab.fld_acr(_nrfld)='VER' || _end:=1 ?};
      ~_end & _nrfld<_len & _nrpar<_par
   !};
   {? _tab.add(1)
   || _poziom:={? 'n_cud'=(5+_tab.OPIS) || 2
               |? 'p_cud'=(5+_tab.OPIS) || 3
               |? (';LIN;OUT;ERR'*_tab.TYP)>1 || 1
               |? (';ACT;NAG'*_tab.TYP)>1 || 2
               |? (';POZ;INF'*_tab.TYP)>1 || 3
               || 4
               ?};
      _tab.DATA:=exec('str2date','#convert',(10+_tab.IDADD));
      _tab.CZAS:=exec('str2time','#convert',8+(11-_tab.IDADD));
      _tab.USER:={? (+_tab.IDUSR)=31 || exec('FindAndGet','#table',USERS,_tab.IDUSR,,"KOD",'') || '' ?};
      _tab.NRC:={? (+_tab.IDEANC)=31 || exec('FindInSet','#table','EANC','IDADD',_tab.IDEANC,,"EANC.NRC",,,0) || 0 ?};
      _tab.P1:={? _poziom<=1 || 'T' || 'N' ?};
      _tab.P2:={? _poziom<=2 || 'T' || 'N' ?};
      _tab.P3:={? _poziom<=3 || 'T' || 'N' ?};
      _tab.P4:={? _tab.TYP='ANS' || 'T' || 'N' ?};
      _tab.put(1);
      {? (+_tab.IDEANC)=31
      || EANC.cntx_psh();
         EANC.index('IDADD');
         EANC.prefix(_tab.IDEANC);
         {? EANC.first()
         || {? _tab.TYP='LIN' || EANC.DTA:=form(20+_tab.IDADD) ?};
            EANC.DOPE:=form(20+_tab.IDADD);
            EANC.put(1)
         ?};
         EANC.cntx_pop()
      ?};
::    statystyki użycia
      {? _tab.TYP='ACT'
      || exec('stat_add','st_common','A_OP_MOBIL',_tab.RESULT);
         exec('stat_add','st_common','A_OP_MOBIL_E',_tab.RESULT)
      ?}
   ?}
?}


\history_eanc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Wyświetla historię operacji na urządzeniu
::----------------------------------------------------------------------------------------------------------------------
EANX.MIDADD:='C'+EANC.IDADD;
EANX.STATUS:='____';

_ff:="exec('load','#desktop','selektor','lmg_log.dsk',,,,,,0);
      exec('set_name','#desktop','','selektor','status@panel','Zakres informacji'@)";
_win_grp:=EANLOG.grp_make('',_ff,'eanlog_eanc');

EANLOG.grp_sel(_win_grp,EANLOG,'WER',,"",,,20,"",,,,'maximized','WER',1);
EANLOG.grp_splt(_win_grp,'panel0','horizontal','zakres','0,80%');
exec('create','#desktop',EANLOG,'selektor',_win_grp,1,1,1);
EANLOG.use('elog____');
EANLOG.index('IDEANC');
EANLOG.prefix(EANC.IDADD,);
EANLOG.first();
EANLOG.win_sel(_win_grp);
EANLOG.select();
~~


\history_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Wyświetla historię operacji na wszystkich urządzeniach
::----------------------------------------------------------------------------------------------------------------------
EANX.MIDADD:='';
EANX.STATUS:='____';

EANLOG.use('elog____');
EANLOG.index('IDADD');
EANLOG.prefix();
{? EANLOG.first()
|| EANLOG.win_sel('WER');
   EANLOG.select()
|| FUN.info('Brak zapisów o operacjach na urządzeniach'@)
?};
~~


\analiza_mob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Analizuje zaznaczone dane lub w danym zakresie, gdy brak zaznaczeń
::----------------------------------------------------------------------------------------------------------------------
EANX.win_edit('ANALELOG');
{? EANX.edit()
|| VAR_DEL.delete('__eanlog');

   __eanlog:=tab_tmp(2,'IDEANC','STRING[31]',''
              ,'IDUSR','STRING[31]',''
              ,'ILLIN','INTEGER',''
              ,'ILOUT','INTEGER',''
              ,'TIME','INTEGER',''
              ,'LOPER','INTEGER',''
              ,'STMOPER','REAL',''
              ,'START','STRING[19]',''
              ,'STOP','STRING[19]',''
              ,'DT','DATE',''
              ,'TM','TIME',''
              ,'TYP','STRING[3]',''
              ,'USER','STRING[50]',''
              ,'HARD','STRING[130]',''
              ,'STM','STRING[8]',''
              ,'STO','STRING[8]',''
              ,'CHARTUID','STRING[20]',''
              ,'KOLOR','STRING[12]','');
   _filtr:=EANLOG.f_active();
   _msk:=EANLOG.name();
   _tab:=EANLOG.sel_aget();
   _grp:=_tab.size();
   {? _grp || _ndx:=_tab.ndx_tmp(,,'REF',,,'DBMASK',,) ?};

   _buf:=tab_tmp(1,'IDADD','STRING[31]','','UIDREF','STRING[48]','');
   _noname:=tab_tmp(1,'ID','STRING[31]','','LP','INTEGER','');

   EANLOG.sel_adel();
   EANLOG.cntx_psh();
   {? ~_filtr
   || EANLOG.index('IDADD');
      {? (1+EANX.MIDADD)='U'
      || EANLOG.index('IDUSR');
         EANLOG.prefix(1-EANX.MIDADD)
      |? (1+EANX.MIDADD)='C'
      || EANLOG.index('IDEANC');
         EANLOG.prefix(1-EANX.MIDADD)
      || EANLOG.index('IDADD');
         EANLOG.prefix()
      ?}
   || _ref:=EANLOG.ref()
   ?};

:: przepisanie do bufora dla właściwego posortowania danych
   {? {? _filtr || EANLOG.f_last() || EANLOG.last() ?}
   || _arch:=(EANLOG.name()+4)<>'____';
      {!
      |? {? ~_grp | (_grp & (_tab.index(_ndx); _tab.prefix(#EANLOG.ref(),_msk); _tab.first()))
         || _buf.blank();
            _buf.IDADD:={? _arch
                        || {? EANLOG.IDOLD<>'' || EANLOG.IDOLD || form(EANLOG.DATA)+' '+form(EANLOG.CZAS,,3) ?}
                        || EANLOG.IDADD
                        ?};
            _buf.UIDREF:=EANLOG.uidref();
            _buf.add(1)
         ?};
         {? _filtr || EANLOG.f_prev() || EANLOG.prev() ?}
      !}
   ?};

   _buf.clear();
   {? _buf.first()
   || _lp:=0;
      _adduser:=(';OA'*EANX.TRYBANAL)>1;
      _addeanc:=(';UA'*EANX.TRYBANAL)>1;
      {!
      |? {? (EANLOG.clear(); EANLOG.seek(_buf.UIDREF))
         || _arch:=(EANLOG.name()+4)<>'____';
            _user:={? _adduser & (+EANLOG.IDUSR)=31 || EANLOG.IDUSR || 'xxx' ?};
            _eanc:={? _addeanc & (+EANLOG.IDEANC)=31 || EANLOG.IDEANC || 'xxx' ?};
            __eanlog.clear();
            __eanlog.prefix(_eanc,_user);
            {? __eanlog.first()
            || _date:={? _arch || EANLOG.DATA || exec('str2date','#convert',(10+EANLOG.IDADD)) ?};
               _time:={? _arch || EANLOG.CZAS || exec('str2time','#convert',8+(11-EANLOG.IDADD)) ?};
               _work:=0;
               _licz:=1;
               {? EANLOG.TYP='LIN'
               || _licz:=__eanlog.TYP<>'OUT';
                  __eanlog.ILLIN+=1
               |? EANLOG.TYP='OUT'
               || __eanlog.ILOUT+=1
               || __eanlog.LOPER+=1
               ?};
               {? _licz || _work:=*exec('timeDiff','#datetime',__eanlog.DT,__eanlog.TM,_date,_time) ?};
               __eanlog.TYP:=EANLOG.TYP;
               __eanlog.DT:=_date;
               __eanlog.TM:=_time;
               __eanlog.TIME+=_work;
               __eanlog.STOP:={? _arch || form(EANLOG.DATA)+' '+form(EANLOG.CZAS,,3) || 19+EANLOG.IDADD ?};
               {? __eanlog.TIME>0
               || __eanlog.STM:=form(*__eanlog.TIME,,3)
               ?};
               {? __eanlog.LOPER
               || __eanlog.STMOPER:=__eanlog.TIME/__eanlog.LOPER $6;
                  __eanlog.STO:=form(*__eanlog.STMOPER,,3)
               ?};
               __eanlog.put(1)
            || __eanlog.blank();
               __eanlog.IDUSR:=_user;
               __eanlog.IDEANC:=_eanc;
               __eanlog.START:={? _arch || form(EANLOG.DATA)+' '+form(EANLOG.CZAS,,3) || 19+EANLOG.IDADD ?};
               __eanlog.STOP:={? _arch || form(EANLOG.DATA)+' '+form(EANLOG.CZAS,,3) || 19+EANLOG.IDADD ?};
               {? EANLOG.TYP='LIN' || __eanlog.ILLIN:=1
               |? EANLOG.TYP='OUT' || __eanlog.ILOUT:=1
               || __eanlog.LOPER:=1
               ?};
               __eanlog.DT:={? _arch || EANLOG.DATA || exec('str2date','#convert',(10+EANLOG.IDADD)) ?};
               __eanlog.TM:={? _arch || EANLOG.CZAS || exec('str2time','#convert',8+(11-EANLOG.IDADD)) ?};
               __eanlog.TYP:=EANLOG.TYP;
               __eanlog.STMOPER:=0;
               __eanlog.STM:='';
               __eanlog.STO:='';
               _chartuid:='';
               {? (+_user)=31
               || _txt:=exec('FindAndGet','#table',USERS,_user,,"KOD+' - '+DANE",50*'!');
                  {? _txt=(50*'!')
                  || _noname.clear();
                     {? ~_noname.find_key(_user)
                     || _noname.ID:=_user;
                        _noname.LP:=_noname.size()+1;
                        _noname.add(1)
                     ?};
                     _txt:='No name: '+form(_noname.LP,-5,0,'99')+' '+(35*'!');
                     _chartuid+='NN:'+form(_noname.LP,-5,0,'99')
                  || _chartuid+=exec('FindAndGet','#table',USERS,_user,,"KOD",3*'!')
                  ?};
                  __eanlog.USER:=_txt
               || __eanlog.USER:=50*'.';
                  _chartuid+=3*'.'
               ?};
               _chartuid+='(';
               {? (+_eanc)=31
               || _txt:=exec('FindAndGet','#table',EANC,_eanc,,"$NRC+' - '+OPI",130*'!');
                  {? _txt=(130*'!')
                  || _noname.clear();
                     {? ~_noname.find_key(_eanc)
                     || _noname.ID:=_eanc;
                        _noname.LP:=_noname.size()+1;
                        _noname.add(1)
                     ?};
                     _txt:='No name: '+form(_noname.LP,-5,0,'99')+' '+(35*'!');
                     _chartuid+='NN:'+form(_noname.LP,-5,0,'99')
                  || _chartuid+=exec('FindAndGet','#table',EANC,_eanc,,"$NRC",3*'!')
                  ?};
                  __eanlog.HARD:=_txt
               || __eanlog.HARD:=130*'.';
                  _chartuid+=3*'.'
               ?};
               _chartuid+=')';
               __eanlog.CHARTUID:=_chartuid;
               _lp+=1;
               __eanlog.KOLOR:=exec('complementaryColors','#color',_lp,1);
               __eanlog.add(1)
            ?}
         ?};
         _buf.next()
      !}
   ?};
   EANLOG.cntx_pop();
   {? _filtr || EANLOG.f_seek(_ref) ?};
   {? _grp || _tab.ndx_drop(_ndx); obj_del(_tab) ?};
   obj_del(_buf);
   obj_del(_noname);

   __eanlog.clear();
   {? __eanlog.first()
   || _win_sel:=__eanlog.mk_sel('Analiza operacji na urządzeniach mobilnych'@,'P',,'#analeanlog',,,,,'U','T');
      __eanlog.win_fld(_win_sel,,'USER',,,20,,1,'Użytkownik'@);
      __eanlog.win_fld(_win_sel,,'HARD',,,20,,1,'Urządzenie'@);
      __eanlog.win_fld(_win_sel,,'START',,,20,,1,'Czas pierwszej operacji'@);
      __eanlog.win_fld(_win_sel,,'STOP',,,20,,1,'Czas ostatniej operacji'@);
      __eanlog.win_fld(_win_sel,,'STM',,,10,,1,'Czas pracy'@);
      __eanlog.win_fld(_win_sel,,'ILLIN',,,10,,1,'Ilość logowań'@);
      __eanlog.win_fld(_win_sel,,'ILOUT',,,10,,1,'Ilość wylogowań'@);
      __eanlog.win_fld(_win_sel,,'LOPER',,,10,,1,'Ilość operacji'@);
      __eanlog.win_fld(_win_sel,,'STO',,,10,,1,'Średni czas na operację'@);
      __eanlog.win_act(_win_sel,0,'Szukaj');
      __eanlog.win_act(_win_sel,0,'Kolejność');
      __eanlog.win_sel(_win_sel);
      __eanlog.select()
   ?};
   VAR_DEL.delete('__eanlog')
?};
~~


\dsk_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Wybranie statusu w selektorze
::   WE: [_a] -status lub brak ''
::----------------------------------------------------------------------------------------------------------------------
EANX.STATUS:={? var_pres('_a')=type_of('') & (+_a)=4 || _a || return(~~) ?};
{? (EANLOG.name()+4)<>EANX.STATUS
|| EANLOG.use('elog'+EANX.STATUS);
   EANLOG.hdr_sel('');
   {? EANX.STATUS<>'____'
   || _opis:=form(date(2000+(#(2+EANX.STATUS)),#(2-EANX.STATUS),),,8);
      EANLOG.hdr_sel(' (Archiwum z okresu: %1)'@[_opis])
   ?};
   {? (1+EANX.MIDADD)='U'
   || EANLOG.index('IDUSR');
      EANLOG.prefix(1-EANX.MIDADD)
   |? (1+EANX.MIDADD)='C'
   || EANLOG.index('IDEANC');
      EANLOG.prefix(1-EANX.MIDADD)
   || EANLOG.index('IDADD');
      EANLOG.prefix()
   ?}
?};
~~


\dsk_get_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Zwraca dane dla selektora statusu.
::   WY: alias do tabeli tymczasowej zawierającej listę statusów.
::----------------------------------------------------------------------------------------------------------------------
_rs:=sql('select 0 as LP, SPACE(4) as KOD, SPACE(30) as NAZWA from FIRMA where 0=1');
_msk:=EANLOG.names();
_msk.clear();
{? _msk.first()
|| {!
   |? _rs.KOD:=(_msk.NAME+4);
      _rs.NAZWA:={? _rs.KOD='____'
                 || 'Bieżące'
                 || 'Zarchiwizowane %1'@[form(date(2000+(#(2+_rs.KOD)),#(2-_rs.KOD),1),,8)]
                 ?};
      _rs.add(1);
      _msk.next()
   !}
?};
obj_del(_msk);
_rs


\dsk_set_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Formuła odpowiada za ustawienie wartości wskazanych elementów pulpitu.
::   WE: _a - identyfikator elementu panelu.
::----------------------------------------------------------------------------------------------------------------------
_set:="exec('set_value','#desktop','','selektor',_a,_b)";
_set(_a,EANX.STATUS);
~~


\chart_title_main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Aktualizuje tytuł głównego wykresu
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_title:='Średni czas operacji (sekundy)';
exec('set_value','#desktop','','selektors','1fl7b938a96fhnk40ljmdm2i8l799',_title);
_title:='Łączny czas operacji (sekundy)';
exec('set_value','#desktop','','selektora','1fl7b938a96fhnk40ljmdm2i8l799',_title);
_title:='Ilość operacji (odczyt - zapis)';
exec('set_value','#desktop','','selektori','1fl7b938a96fhnk40ljmdm2i8l799',_title);
~~


\chart_get_var
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Zwraca dane dla selektora wykresu.
::   WE: _a - rodzaj danych
::   WY: alias do tabeli tymczasowej zawierającej listę wartości
::----------------------------------------------------------------------------------------------------------------------
_rs:=sql('select '+
         ' :_a.CHARTUID as CHARTUID, '+
         {? _a='sto'
         || ' :_a.STMOPER as CHARTVAL, '
         |? _a='ato'
         || ' :_a.TIME as CHARTVAL, '
         |? _a='ilo'
         || ' :_a.LOPER as CHARTVAL, '
         || ''
         ?}+
         ' KOLOR as KOLOR, '+
         ' SPACE(255) as TOOLTIP, '+
         ' 1 as FILTER, '+
         ' REFERENCE as REF '+
         'from :_a'+
         {? _a='sto'
         || 'order by 2,1 desc'
         || 'order by 2,1'
         ?},__eanlog);
_rs.clear();
{? _rs.first()
|| {!
   |? _rs.TOOLTIP:=exec('tooltip','magazyn_mob',_rs.REF,_rs.KOLOR);
      _rs.put(1);
      _rs.next()
   !}
?};
_rs


\tooltip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Dodaje opis do słupków wkresu
::   WE: _a - wskazanie wartość z analizy
::       _b - kolor
::   WY: napis w postaci HTML-a
::----------------------------------------------------------------------------------------------------------------------
_result:='<html>';

__eanlog.cntx_psh();
__eanlog.prefix();
{? __eanlog.seek(_a)
|| _kolor:=exec('dec2hex','#color','255:0:0');
   _result+='<tr><td>UŻYTKOWNIK: '+{? __eanlog.USER=(50*'.') || '...nieznany...' || __eanlog.USER ?}+'</td></tr>'+
            '<tr><td>URZĄDZENIE: '+{? __eanlog.HARD=(130*'.') || '...nieznane...' || __eanlog.HARD ?}+'</td></tr>'+
            '<tr><td><font color='+_kolor+'>W OKRESIE od: '+__eanlog.START+' do: '+__eanlog.STOP+'</font></td></tr>'
?};
__eanlog.cntx_pop();
_result+='</html>';
_result


\big_chart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Rysuje duży wykres
::   WE: _a - rodzaj analizy 'sto'-średni czas operacji
::   WY: napis w postaci HTML-a
::----------------------------------------------------------------------------------------------------------------------
{? _a='sto'
|| _title:='Wykres średniego czasu operacji na urządzeniach mobilnych'@
|? _a='ato'
|| _title:='Wykres łącznego czasu operacji na urządzeniach mobilnych'@
|? _a='ilo'
|| _title:='Wykres ilości operacji na urządzeniach mobilnych'@
|| return(0)
?};

_bc_args:=obj_new('TAB'
                  ,'CTR_ID'
                  ,'TITLE_ID'
                  ,'TITLE_WIN'
                  ,'TITLE_CHART'
                  ,'DSK');
_bc_args.TAB:=__eanlog;
_bc_args.CTR_ID:={? _a='sto' || 'selektors'
                 |? _a='ato' || 'selektora'
                 |? _a='ilo' || 'selektori'
                 || ''
                 ?};
_bc_args.TITLE_ID:='1fl7b938a96fhnk40ljmdm2i8l799';
_bc_args.TITLE_WIN:='Analiza operacji na urządzeniach mobilnych'@;
_bc_args.TITLE_CHART:=_title;
_bc_args.DSK:={? _a='sto' || 'lmg_elog_st.dsk'
              |? _a='ato' || 'lmg_elog_at.dsk'
              |? _a='ilo' || 'lmg_elog_il.dsk'
              || ''
              ?};

_grp_win:='';

params_set('bc_args',_bc_args);

_win_id:='kontrolka1';
_ctr_win:=exec('create','#desktop',_bc_args.TAB,_bc_args.CTR_ID,_grp_win,30,160,_bc_args.TITLE_WIN);
_bc_args.TAB.win_ctr(_ctr_win);

_before:="
   params_set(params_get);
   _bc_args:=params_get().bc_args;
   _opt:=exec('set_options_a','#desktop');
   _opt.FOCUS_RET:=1;
   exec('load','#desktop',_bc_args.CTR_ID,_bc_args.DSK,_opt,,,,,0);
   exec('set_value','#desktop','',_bc_args.CTR_ID,_bc_args.TITLE_ID,_bc_args.TITLE_CHART);
   exec('set_visible','#desktop','',_bc_args.CTR_ID,'more@chart',0);
   ~~
";
{? _grp_win=''
|| _bc_args.TAB.control(_win_id,'modal=true',_before)
?};
~~


\genWgZAM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Generuje pozycje operacji na podstawie zamówienia dostaw
::   WE: _a - rodzaj zamówienia 'P'-dostaw 'W'-sprzedaży lub wewnętrzne
::       _b - ref EANN
::       _c - IDADD zamówienia/potwierdzenia/dyspozycji w magazynie
::   WY: 1-ok 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_msk:=ref_name(_b)+3;
_lp:=0;
_do_state:=do_state();
_nok:=0;
_sap:=0;
{? (+_msk)=3 & _a='P'
|| exec('openzd_psh','open_tab');
   exec('opentr_psh','open_tab');
   DK_C.cntx_psh();
   exec('openzd','open_tab',_msk);
   exec('opentr','open_tab','____');
   _refzd:=exec('FindAndGet','#table',ZD_NAG,_c,,,null());
   _refzdp:={? _refzd=null() || exec('FindAndGet','#table',ZDP_NAG,_c,,,null()) || null() ?};
   _reftrn:={? _refzd=null() & _refzdp=null() || exec('FindAndGet','#table',TR_NZL,_c,,,null()) || null() ?};

   _czypal:=exec('FindAndGet','#table',EANN,_b,,"RODZ*'P'",0);
   _plus:=(';ZR'*exec('get','#params',600803,2))>1;
   {? _refzd<>null()
   ||
::    zamówienie dostaw
      ZD_POZ.index('POZ');
      ZD_POZ.prefix(_refzd);
      {? ZD_POZ.first() & ZD_POZ.ZD_NAG().T().MOB='T'
       & (ZD_POZ.ZD_NAG().STAN='A' | ZD_POZ.ZD_NAG().STAN='C' | _plus)
      || {? ~_do_state || do() ?};
         {!
         |? {? ZD_POZ.MG().SL='T' & {? _czypal || ZD_POZ.MG().PAL='N' || 1 ?} & ZD_POZ.M().KODK<>''
             & {? ~_plus || ZD_POZ.IL_POZ>0 || ZD_POZ.IL_POZ>=0 ?}
            || _lp+=1;
               {? ~exec('zap2EANP','magazyn_mob',_b,ZD_POZ.MG().EANL,ZD_POZ.M,ZD_POZ.IL_POZ,_lp,ZD_POZ.IDADD,ZD_POZ.DK_C)
               || _res:=0;
                  undo()
               ?}
            ?};
            ZD_POZ.next()
         !};
         {? ~_do_state || end() ?}
      ?}
   |? _refzdp<>null()
   ||
::    Potwierdzenie zamówień dostaw
      ZDP_POZ.index('ZDP_POZ');
      ZDP_POZ.prefix(_refzdp);
      {? ZDP_POZ.first() & ZDP_POZ.ZDP_NAG().STAT_REJ='T' & exec('ctrlREA','zamdst_ptw',1)
      || {? ~_do_state || do() ?};
         {!
         |? ZDP_POZ.cntx_psh();
            {? (form(8+ZDP_POZ.ZD_POZ)+2)='__'
            || _ilrea:=exec('obl_rea','zamdst_rea',$ZDP_POZ.ref());
               _ilpoz:=ZDP_POZ.IL-_ilrea
            || _ilpoz:=0
            ?};
            {? _ilpoz>0 & (ZD_POZ.prefix(); ZD_POZ.seek(ZDP_POZ.ZD_POZ)) & ZD_POZ.ZD_NAG().T().MOB='T'
             & ZD_POZ.MG().SL='T' & {? _czypal || ZD_POZ.MG().PAL='N' || 1 ?} & ZD_POZ.M().KODK<>''
            || _lp+=1;
               {? ~exec('zap2EANP','magazyn_mob',_b,ZD_POZ.MG().EANL,ZD_POZ.M,_ilpoz,_lp,ZD_POZ.IDADD,ZD_POZ.DK_C)
               || _res:=0;
                  undo()
               ?}
            ?};
            ZDP_POZ.cntx_pop();
            ZDP_POZ.next()
         !};
         {? ~_do_state || end() ?}
      ?}
   |? _reftrn<>null()
   ||
::    Dyspozycja w magazynie
      TR_ZL.index('POZ');
      TR_ZL.prefix(_reftrn);
      {? TR_ZL.first() & TR_ZL.TR_NZL().STAT_REJ='Z' & (1+TR_ZL.TR_NZL().STMG)='A'
      || {? ~_do_state || do() ?};
         {!
         |? _ilpoz:=TR_ZL.IL;
            _zd_poz:={? (5+(TR_ZL.POZ_REF+16))='zdpoz'
                     || (TR_ZL.POZ_REF+16)
                     |? (5+(TR_ZL.POZ_REF+16))='zdptp'
                     || ZDP_POZ.prefix();
                        {? ZDP_POZ.seek(TR_ZL.POZ_REF) || ZDP_POZ.ZD_POZ || '' ?}
                     || ''
                     ?};
            {? _zd_poz<>'' & _ilpoz>0 & (ZD_POZ.prefix(); ZD_POZ.seek(_zd_poz)) & ZD_POZ.ZD_NAG().T().MOB='T'
             & ZD_POZ.MG().SL='T' & {? _czypal || ZD_POZ.MG().PAL='N' || 1 ?} & {? ZD_POZ.M().KODK<>'' || 1 || _nok+=1; 0 ?}
            || _lp+=1;
               _res:=1;
               TR_ZLM.index('TR_ZL');
               TR_ZLM.prefix(TR_ZL.ref());
               {? TR_ZLM.first()
               || {!
                  |? {? TR_ZL.IL>0
                     || {? ~exec('zap2EANP','magazyn_mob',_b
                             ,{? TR_ZLM.LOK<>null() || TR_ZLM.LOK || ZD_POZ.MG().EANL ?}
                             ,ZD_POZ.M
                             ,TR_ZLM.IL,_lp,ZD_POZ.IDADD
                             ,{? TR_ZLM.DK_C<>null() || TR_ZLM.DK_C || ZD_POZ.DK_C ?}
                             ,TR_ZLM.TW)
                        || _res:=0;
                           _sap+=1;
                           undo()
                        || _ilpoz-=TR_ZLM.IL
                        ?}
                     ?};
                     TR_ZLM.next()
                  !}
               ?};
               _eanl:={? TR_ZL.TR_NZL().EANL<>null() || TR_ZL.TR_NZL().EANL || ZD_POZ.MG().EANL ?};
               {? _res & _ilpoz>0
               || {? ~exec('zap2EANP','magazyn_mob',_b,_eanl,ZD_POZ.M,_ilpoz,_lp,ZD_POZ.IDADD,ZD_POZ.DK_C)
                  || _res:=0;
                     undo()
                  || _sap+=1
                  ?}
               ?}
            ?};
            TR_ZL.next()
         !};
         {? ~_do_state || end() ?};
         {? _nok || _res:=-1 ?}
      ?}
   ?};
   DK_C.cntx_pop();
   exec('openzd_pop','open_tab');
   exec('opentr_pop','open_tab')
?};
_res


\ctrlEANNcud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Kontrola nagłówka operacji
::   WE: _a - typ sprawdzenia
::       [_b] - kod kreskowy lokalizacji
::       [_c] - kod kreskowy palety
::       [_d] - kod oddziału
::   WY: opis błędu lub pusty string
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? (';LO'*_a)>1
|| _lok:={? var_pres('_b')=type_of('') || form(_b) || '' ?};
   _pal:={? var_pres('_c')=type_of('') || form(_c) || '' ?};
   _odd:={? var_pres('_d')=type_of('') || form(_d) || '' ?};

:: kontrola poprawności lokalizacji
   {? (';LO'*_a)>1 & _lok<>''
   || EANL.cntx_psh();
      EANL.index('EAN');
      EANL.index('EAN');
      EANL.prefix(_lok,);
      {? EANL.first()
      || {? _odd<>'' & EANL.MG().ODDZ<>_odd
         || _res:='Podana lokalizacja o kodzie %1 jest z innego oddziału.'@[_lok]
         |? _a='O' & _pal<>'' & EANL.MG().PAL<>'T'
         || _res:='Podana lokalizacja o kodzie %1 nie jest w magazynie paletowym. Rozpakowanie niedostępne.'@[_lok]
         ?}
      || _res:='Nie znaleziono lokalizacji o kodzie %1.'@[_lok]
      ?};
      EANL.cntx_pop()
   ?};
:: kontrola poprawności palety do rozpakowania
   {? _res='' & _a='O' & _pal<>''
   || _akt:=0;
      PAL.cntx_psh();
      PAL.use('palety');
      PAL.index('PAL');
      PAL.prefix(_pal,);
      {? PAL.first() | (_akt:=exec('kodkINarch','magdok_palety',_pal);_akt)
      || {? PAL.AKT='N' | _akt
         || _res:='Podana paleta o kodzie %1 nie jest aktywna.'@[_pal]
         |? _odd<>'' & PAL.ODD<>_odd
         || _res:='Podana paleta o kodzie %1 jest z innego oddziału.'@[_pal]
         |? PAL.STAN<>'B'
         || _res:='Podana paleta o kodzie %1 nie jest dostępna dla rozpakowania.'@[_pal]
         ?}
      ?};
      PAL.cntx_pop()
   |? _res='' & _a='O' & _pal=''
   || _res:='Nie podano nowej palety, na którą rozpakowujemy.'@
   |? _res='' & _a='L' & _lok=''
   || _res:='Nie podano lokalizacji.'@
   ?}
?};
_res


\ctrlEANPcud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Kontrola pozycji operacji
::   WE: [_a] - identyfikator EANN
::       [_b] - identyfikator M
::       [_c] - kod palety
::       [_d] - wskazanie na magazyn dla znacznika zpalet=2 + wydanie to sprawdzenie czy jest to rozpakowanie do wydania
::   WY: opis błędu lub pusty string
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_refean:={? var_pres('_a')=type_of('') || exec('FindAndGet','#table',EANN,form(_a),,,null()) || null() ?};
_ktm:={? var_pres('_b')=type_of('') || form(_b) || '' ?};
_refmat:={? _ktm<>'' || exec('FindInSet','#table','M','MATKTM',_ktm,,,1,,null()) || null() ?};
_mag:={? var_pres('_d')=type_of(null()) || _d || null() ?};

PAL.cntx_psh();
PAL.use('palety');
PAL.prefix();
_kodpal:={? var_pres('_c')=type_of('') || form(_c) || '' ?};
_refpal:={? _kodpal<>'' || exec('FindInSet','#table','PAL','PAL',_kodpal,,,1,,null()) || null() ?};
PAL.cntx_pop();

_rozpal:=0;
_symmag:='';
{? _mag<>null() & _refean<>null() & _refmat<>null() & _refpal<>null()
 & exec('FindAndGet','#table',EANN,_refean,,"TYP='W'",0)
 & exec('FindAndGet','#table',MG,_mag,,"PAL='T'",0)
|| {? exec('FindInSet','#table','PAL','NOPAL',_mag,'B',,,,null())<>null()
   || _rozpal:=1
   || _symmag:=exec('FindAndGet','#table',MG,_mag,,"SYM",'');
      _rozpal:=-1
   ?}
?};

{? _refean<>null() & (_refmat<>null() | _refpal<>null())
|| EANN.cntx_psh();
   EANN.prefix();
   {? EANN.seek(_refean) & (';PW'*EANN.TYP)>1 & (5+EANN.REFSQL)='nagdo'
   || _refnd:=exec('FindAndGet','#table',ND,EANN.REFSQL,,,null());
      _ispal:=exec('FindAndGet','#table',ND,EANN.REFSQL,,"MAG().PAL='T'",0);
      {? _refnd<>null()
      || _msk:=3+(5-EANN.REFSQL);
         exec('mag_psh','open_tab');
         exec('mag_open','open_tab',1+_msk,_msk+2);
         {? ~_ispal
         || DK.index('MAM');
            DK.prefix(_refnd,_refmat);
            {? ~DK.first() || _res:='Brak indeksu %1 na dokumencie magazynowym do potwierdzenia.'@[_ktm] ?}
         |? _refpal<>null()
         || DK_L.index('CZYPAL');
            DK_L.prefix(_refnd,_refpal);
            {? ~DK_L.first() || _res:='Brak palety %1 na dokumencie magazynowym do potwierdzenia.'@[_kodpal] ?}
         ?};
         exec('mag_pop','open_tab')
      ?}
   ?};
   EANN.cntx_pop()
?};
{? _res='' & _rozpal=1  || _res:='#rozpal'
|? _res='' & _rozpal=-1 || _res:='W magazynie %1 nie jest dostępne wydanie bez rozpakowania.'@[_symmag]
?};
_res


\eannSYM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: przypisanie symbolu operacji na podstawie IDADD
::   WE: _a - typ operacji
::       [_b] - symbol
::       [_c] - unik
::   WY: napis typu symbol
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_a')=type_of('') || _a || '' ?};
_symbol:={? var_pres('_b')=type_of('') || _b || '' ?};
_unik:={? var_pres('_c')=type_of('') || _c || '' ?};

_res:={? form(_symbol)<>''
      || form(_symbol)
      || {? _typ='L' || 'RI/'+gsub(19+EANN.IDADD,'/','')
         |? _typ='R' || 'RE/'+gsub(19+EANN.IDADD,'/','')
         |? _typ='O' || 'RR/'+gsub(19+EANN.IDADD,'/','')
         |? _typ='P' || 'PD/'+gsub(19+EANN.IDADD,'/','')
         |? _typ='W' || 'WM/'+gsub(19+EANN.IDADD,'/','')
         |? _typ='I' || 'IN/'+gsub(19+EANN.IDADD,'/','')
         |? _typ='Z' || 'KW/'+gsub(19+EANN.IDADD,'/','')
         || _unik
         ?}
      ?};
_res


\eanc_system
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: kontroluję podaną wersję systemu
::   WE: [_a] - 1-kontrola 0-klawisz F3 (domyślnie)
::   WY: 1-ok 0-nie
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_res:=0;

_system:=EANC.SYSTEM;
_versys:=EANC.VERSYS;
_tab:=proc_exe('system@mobil_cnf');
{? ~_tryb
|| _win:=_tab.mk_sel('Wybór systemu na urządzeniu'@,'T',0,'#systemeanc',,,,,'U');
   _tab.win_fld(_win,,'SYSTEM',,,20,0,1,'System operacyjny'@,,'System operacyjny'@);
   _tab.win_fld(_win,,'VERSYS',,,8,0,1,'Numer wersji systemu'@,,'Wersja'@);
   _tab.win_act(_win,0,'Formuła','&Wybierz'@@,,,"sel_exit",,1,,,,'W');
   _tab.win_act(_win,0,'Szukaj');
   _tab.win_act(_win,0,'Kolejność');
   _tab.win_sel(_win);
   {? _tab.first() || {! |? {? _tab.SYSTEM=_system & _tab.VERSYS=_versys || 0 || _tab.next() ?} !} ?};
   {? _tab.select(,1)
   || EANC.VERSYS:=_tab.VERSYS;
      EANC.SYSTEM:=_tab.SYSTEM;
      _res:=_tab.SYSTEM
   ?}
|| {? _tab.first()
   || {!
      |? {? _tab.SYSTEM=_system & _tab.VERSYS=_versys
         || _res:=1;
            0
         || _tab.next()
         ?}
      !}
   ?}
?};
obj_del(_tab);
_res


\oblilean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: oblicza ilosc z pozycji zamowienia przekazana na czytnik
::   WE: _a - ref SQL-owy ZK_P
::   WY: aktualna ilosc na czytniku
::  OLD: \oblilean/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
EANN.cntx_psh();
EANP.cntx_psh();
EANP.index('RSQL');
EANP.prefix(_a,_a);
{? EANP.first()
|| {!
   |? {? EANP.EANN().STAN<>'+' & EANP.EANN().STAN<>'A'
      || _wyn+=EANP.IL
      ?};
      EANP.next()
   !}
?};
EANN.cntx_pop();
EANP.cntx_pop();
_wyn


\ord__eanp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: zmienia kolejność dla __eanp w przypadku Terminów ważności dla dostaw i wydań/reorganizacji
::       - terminy zerowe na końcu
::   WE: _a - prefiks pierwszy poziom
::       _b - prefiks drugi poziom
::----------------------------------------------------------------------------------------------------------------------
__eanp.cntx_psh();
__eanp.clear();
__eanp.prefix(_a,_b);
{? __eanp.first()
|| _lp:=_size:=__eanp.size();
   {!
   |? _ref:=__eanp.ref();
      _zmien:=exec('FindAndGet','#table',EANP,__eanp.EANP,,"M().SETW='P' & TW=date(0,0,0)",0);
      _ok:=__eanp.next();
      {? _zmien
      || __eanp.cntx_psh();
         __eanp.clear();
         {? __eanp.seek(_ref)
         || _lp+=1;
            __eanp.LP:=_lp;
            __eanp.put(1)
         ?};
         __eanp.cntx_pop()
      ?};
      _ok & __eanp.LP<_size
   !}
?};
__eanp.cntx_pop();
~~


\eann2tr_nzl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Realizacja dyspozycji transportu na podstawie operacji mobilnej
::----------------------------------------------------------------------------------------------------------------------
_tab:=EANN.sel_aget();
EANN.sel_adel();
_one:=_tab.size()=0;
{? _one
|| EANN.cntx_psh();
   _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LMO_MOB_DMAG';
   _params.UIDREF:=EANN.uidref();
   _params.AKCJA:='Generuj_wg_ope';
   _params.PROC_START:='T';
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EANN',EANN.ref());
   exec('mp_run','#b__box',_params);
   EANN.cntx_pop()
|? FUN.ask('Czy potwierdzić zaznaczone operacje?\n'
           'Uwaga. Operacje, które nie dotyczą dyspozycji w magazynie oraz niezakończone zostaną pominięte.'@)
|| EANN.cntx_psh();
   {? _tab.first()
   || {!
      |? {? (EANN.prefix(); EANN.seek(_tab.REF,)) & EANN.STAN='Z' & (4+EANN.REFSQL)='trnl'
         || _params:=exec('mp_run_a','#b__box');
            _params.ACT_UID:='LMO_MOB_DMAG';
            _params.UIDREF:=EANN.uidref();
            _params.AKCJA:='Generuj_wg_ope';
            _params.PROC_START:='T';
            _params.GRUPA:='T';
            _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
            exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EANN',EANN.ref());
            exec('mp_run','#b__box',_params);
            obj_del(_params)
         ?};
         _tab.next()
      !}
   ?};
   EANN.cntx_pop()
?};
obj_del(_tab);
'activate:browse'


\tr_nzl2EANN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Generacja operacji przyjęcia dostawy na podstawie TR_NZL
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy wygenerować operację przyjęcia dostawy na urządzenie mobilne?'@)
|| _nrc:=-1;
   _wyb:=exec('wyb_czyt','magazyn_mob',1,'EANX.NRC_Z','EANX.IDEANC_Z',,TR_NZL.MG);

   _nrc:=EANX.NRC_Z;
   _ideanc:=EANX.IDEANC_Z;
   _nok:=-2;

   {? var_pres('_wyb')=type_of('') & _nrc>=0
   || do();
      _refeann:=null();
      EANN.clear();
      EANN.blank();
      EANN.DATA:=date();
      EANN.TYP:='P';
      EANN.REFSQL:=EANN.UNIK:=$TR_NZL.ref();
      EANN.IDZAM:=TR_NZL.IDADD;
      EANN.SYM:=TR_NZL.SYM;
      EANN.KH:=TR_NZL.KH;
      EANN.ODB:=TR_NZL.KH_ODB;
      EANN.NRC:=_nrc;
      EANN.IDEANC:=_ideanc;

      EANN.STAN:='!';
      EANN.MG:=TR_NZL.MG;
      EANN.RODZ:='Z';
      EANN.TIME:=time();
      EANN.GRP_KEY:='';
      {? EANN.add(1)
      || _refeann:=EANN.ref;
         EANN.UNIK:=$_refeann;
         EANN.SYM:='PD/'+gsub(19+EANN.IDADD,'/','');
         EANN.put()
      ?};
      {? _refeann<>null()
      || {? (_nok:=exec('genWgZAM','magazyn_mob','P',_refeann,TR_NZL.IDADD); _nok<>0)
         || EANN.STAN:='O';
            EANN.put(1)
         || undo()
         ?}
      ?};
      end();
      {? ~_nok
      || FUN.info('Pozycje z dyspozycji nie zostały wyszczególnione do wysyłki.\n\n'
                  'Powody braku generacji:\n'
                  'pozycje z zamówień niezwiązanych z urządzeniami mobilnymi,\n'
                  'pozycje o indeksach materiałowych bez przypisanych kodów kreskowych.'@)
      |? _nok=-1
      || FUN.info('Nie wszystkie pozycje z dyspozycji zostały wyszczególnione do wysyłki.\n\n'
                  'Zostały pominięte:\n'
                  'pozycje z zamówień niezwiązanych z urządzeniami mobilnymi,\n'
                  'pozycje o indeksach materiałowych bez przypisanych kodów kreskowych.'@)
      ?}
   ?}
?};
~~


\zap2EANP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Generacja jedną pozycję operacji wg podanych parametrów
::   WE: _a - EANN.ref()
::       _b - EANL.ref()
::       _c - M.ref()
::       _d - ilość
::       _e - LP
::       _f - IDADD
::       _g - DK_C.ref()
::       _h - termin ważności
::----------------------------------------------------------------------------------------------------------------------
 _eann:={? var_pres('_a')=type_of(null()) || _a || null() ?};
 _eanl:={? var_pres('_b')=type_of(null()) || _b || null() ?};
  _mat:={? var_pres('_c')=type_of(null()) || _c || null() ?};
  _ile:={? var_pres('_d')=type_of(0) || _d || 0 ?};
   _lp:={? var_pres('_e')=type_of(0) || _e || 0 ?};
_idadd:={? var_pres('_f')=type_of('') || _f || '' ?};
 _dk_c:={? var_pres('_g')=type_of(null()) || _g || null() ?};
   _tw:={? var_pres('_h')=type_of(date()) || _h || date(0,0,0) ?};

_res:=0;
EANP.clear();
EANP.blank;
EANP.EANN:=_eann;
EANP.NRC:=EANP.EANN().NRC;
EANP.LOKZ:=_eanl;
EANP.LOKDO:=null();
EANP.M:=_mat;
EANP.EAN:=EANP.M().KODK;
EANP.IL:=_ile;
EANP.ILS:=0;
EANP.LP:=_lp;
EANP.RSQL:=_idadd;
EANP.PAL:=null();
EANP.PALEAN:='';
EANP.PALDO:=null();
EANP.PALDOEAN:='';
EANP.ZPALET:=0;
EANP.BEZOZN:='N';
EANP.TYMCZAS:='';
EANP.TW:=_tw;
_mskdkc:=ref_name(_dk_c);
{? _mskdkc<>''
|| DK_C.use(_mskdkc);
   _scean:={? EANP.M().IDMOB='A' & _dk_c<>null() & ~(exec('FindAndGet','#table',DK_C,_dk_c,,"UZUP*'0'",0))
           || exec('FindInSet','#table','MKODK','RSQL',_mat,$_dk_c,"MKODK.KODK",,$_dk_c,'')
           || ''
           ?}
|| _scean:=''
?};
EANP.SCEAN:=_scean;
exec('uzupIDkod','magdok_palety',EANP);
{? EANP.add(1)
|| _res:=1;
   EANP.UNIK:=(($EANP.EANN)+8)+(form(8+$EANP.ref())+3)+($EANP.ref()+8);
   {? ~EANP.put() || _res:=0 ?}
|| _res:=0
?};
_res


\def_GS1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: definicje kodów GS1
::----------------------------------------------------------------------------------------------------------------------
EAND.win_sel('WER');
EAND.index('KOD');
EAND.prefix();
EAND.select();
''


\infogs1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: informacja o wartościach kodów GS1
::----------------------------------------------------------------------------------------------------------------------
EANW.index('EANP');
EANW.prefix(EANP.ref());
{? EANW.first() || EANW.select() ?};
~~


\ctrlEANWcud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Kontrola kodu GS1 dla pozycji operacji
::   WE: _a - typ sprawdzenia
::       [_b] - kod kreskowy lokalizacji
::       [_c] - kod kreskowy palety
::       [_d] - kod oddziału
::   WY: opis błędu lub pusty string
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_res


\ogs1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przypisuje opis dla danego kodu GS1
::----------------------------------------------------------------------------------------------------------------------
EANX.PGS1:=0;
_kod:=exec('kodGS1','magazyn_mob',EANW.KOD);
_eand:=exec('FindInSet','#table','EAND','KOD',_kod,,,1,,null());
EANX.OGS1:={? _eand<>null()
           || exec('FindAndGet','#table',EAND,_eand,,"OPIS",'<brak kodu w definicji>')
           || '<brak kodu w definicji>'
           ?};
EANX.WGS1:=exec('dispGS1','magazyn_mob',_eand,EANW.WAR);
''


\formEANW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: formuła obsługi kodów GS1
::   WE: _a - EANP.ref()
::       _b - M.ref()
::       _c - uidref() danego pola tabeli
::----------------------------------------------------------------------------------------------------------------------
_eanp:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_mat:={? var_pres('_b')=type_of(null()) || _b || null() ?};

{? _eanp<>null() & _mat<>null()
|| EANX.UIDGS1:=_c;
   _beerm:=BEER.M;
   BEER.M:=_mat;
   _atr:=tab_tmp(1,'FLD','INTEGER',''
          ,'WAR','STRING[25]','');
   EANW.cntx_psh();
   EAND.cntx_psh();
   EANW.index('EANP');
   EANW.prefix(_a);
   {? EANW.first()
   || {!
      |? _kod:=exec('kodGS1','magazyn_mob',EANW.KOD);
         EAND.index('KOD');
         EAND.prefix(_kod,);
         {? EANW.KOD<>'' & EANW.WAR<>'' & EAND.first()
         || {? EAND.A='T' & EAND.R='F'
            ||
::             Bezpośrednie wykonanie formuły
               ($EAND.FORM().FORMULA)(EANW.WAR,EANW.KOD+1)
            |? EAND.A='T' & EAND.R='A'
            ||
::             Gromadzi przekazane wartości atrybutów w tabeli
               {? BEER.M().M_ATR<>null()
               || _ii:=0;
                  {!
                  |? _ii+=1;
                     {? ($('BEER.M().M_ATR().SL_'+form(_ii,-2,0,'99')))()<>null()
                     || _defkod:=($('BEER.M().M_ATR().GS1'+form(_ii,-2,0,'99')))();
                        {? _defkod=EANW.KOD
                        || _atr.blank();
                           _atr.FLD:=_ii;
                           _atr.WAR:={? EAND.FCON=null()
                                     || EANW.WAR
                                     || ($EAND.FCON().FORMULA)(EANW.WAR,_ii)
                                     ?};
                           _atr.add(1)
                        ?}
                     ?};
                     _ii<10
                  !}
               ?}
            ?}
         ?};
         EANW.next()
      !}
   ?};
   EANW.cntx_pop();
   EAND.cntx_pop();
   _atr.clear();
   {? _atr.first()
   || _fatr:='exec(\'m_atr_sprdod\',\'mat_atr\',';
      {! _ii:=1..10
      |! _atr.clear();
         _atr.prefix(_ii);
         _fatr+={? _atr.first() || '\''+_atr.WAR+'\',' || '\'\',' ?}
      !};
      _fatr+='BEER.M().M_ATR)';
      _refdkc:=($_fatr)();
      {? _refdkc<>null()
      || _tab:=ref_tab(EANX.UIDGS1);
         {? var_pres('_tab')=type_of(SYSLOG)
         || _tab.cntx_psh();
            _tab.DK_C:=_refdkc;
            _tab.put(1);
            _tab.cntx_pop();
            _tab.get()
         ?}
      ?}
   ?};
   obj_del(_atr);
   BEER.M:=_beerm
?};
~~


\pr_eandr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed edycją pola EAND.R
::----------------------------------------------------------------------------------------------------------------------
EAND.A='T'


\po_eandr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Po edycji pola EAND.R
::----------------------------------------------------------------------------------------------------------------------
{? EAND.R='A' || EAND.FORM:=null()
|? EAND.R='F' || EAND.FCON:=null()
|? EAND.R='N' || EAND.FORM:=null(); EAND.FCON:=null()
?};
1


\po_eanda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Po edycji pola EAND.A
::----------------------------------------------------------------------------------------------------------------------
{? EAND.A='N'
|| EAND.R:='N';
   EAND.FCON:=null();
   EAND.FORM:=null()
?};
1


\dispGS1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Konwersja odczytanych wartości
::   WE: _a - wskazanie na EAND
::       _b - wartość do konwersji
::       _c - kod do konwersji
::   WY: wartość po konwersji
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_eand:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_war:={? var_pres('_b')=type_of('') || _b || '' ?};
_kod:={? var_pres('_c')=type_of('') || _c+1 || '' ?};

{? _eand<>null() & _b<>''
|| EAND.cntx_psh();
   EAND.prefix();
   {? EAND.seek(_eand) & EAND.FDSP<>null()
   || _buf:=($EAND.FDSP().FORMULA)(_war,_kod);
      {? var_pres('_buf')=type_of('')
      || _res:=_buf
      |? var_pres('_buf')<>type_of(~~) & var_pres('_buf')<>type_of(null())
      || _res:=form(_buf)
      ?}
   || _res:=_war
   ?};
   EAND.cntx_pop()
?};
_res


\kodGS1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: zwraca kod z definicji GS1
::   WE: _a - odczytany kod
::   WY: kod w definicji
::----------------------------------------------------------------------------------------------------------------------
_kod:={? var_pres('_a')=type_of('') || _a || EANW.KOD ?};

_res:={? (1+_kod)='3' & (+_kod)=4 || EANX.PGS1:=#(_kod+1); (_kod-1)+'n'
      |? (3+_kod)='703'           || '703s'
      |? (3+_kod)='723'       || '723s'
      || _kod
      ?};
_res


\ctrlEANW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: formuła kontrolująca czy dladanego EANP są podane wartości obsłużonych kodów GS1
::   WE: _a - EANP.ref()
::       _b - ref M
::   WY: 1-sa 0-nie ma
::----------------------------------------------------------------------------------------------------------------------
_eanp:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_mat:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_res:=0;

{? _eanp<>null() & _mat<>null()
|| _beerm:=BEER.M;
   BEER.M:=_mat;
   EANW.cntx_psh();
   EAND.cntx_psh();
   EANW.index('EANP');
   EANW.prefix(_a);
   {? EANW.first()
   || {!
      |? _kod:=exec('kodGS1','magazyn_mob',EANW.KOD);
         EAND.index('KOD');
         EAND.prefix(_kod,);
         {? EANW.KOD<>'' & EANW.WAR<>'' & EAND.first()
         || {? EAND.A='T' & EAND.R='F'
            || _res:=EAND.FORM<>null()
            |? EAND.A='T' & EAND.R='A'
            || {? BEER.M().M_ATR<>null()
               || _ii:=0;
                  {!
                  |? _ii+=1;
                     {? ($('BEER.M().M_ATR().SL_'+form(_ii,-2,0,'99')))()<>null()
                     || _defkod:=($('BEER.M().M_ATR().GS1'+form(_ii,-2,0,'99')))();
                        _ref:=_defkod=EANW.KOD
                     ?};
                     ~_res & _ii<10
                  !}
               ?}
            ?}
         ?};
         ~_res & EANW.next()
      !}
   ?};
   EANW.cntx_pop();
   EAND.cntx_pop();
   BEER.M:=_beerm
?};
_res


\infoEANP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: informacja o danej pozycji operacji
::----------------------------------------------------------------------------------------------------------------------
exec('info_ean','magazyn_mobi',1);
__infean.first();
__infean.select();
~~


\encode_key
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Klucz kodujący hasło dla urządzenia mobilnego
::----------------------------------------------------------------------------------------------------------------------
'j88brflmobp5v5ji6z40t1u3'

:Sign Version 2.0 jowisz:1045 2024/01/18 14:42:40 98fee5892ff52837bd1d0d0517091cc8b5819e8cb6f4e07dccabd914886d3985d5365b6c852c5887a3c36dfddd68be70d05eb08f82961ed9fd52e694d7db58982d467c7684127ffbc99b0dc5eb1b7d5047feae44affc5d4bce0cad14c86ffd8cc061fee2913d2abcf6096b8639e18063dc891cd94cb9f9c0b413aa7e0b5d92fa
