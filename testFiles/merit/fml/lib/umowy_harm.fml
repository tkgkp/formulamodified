:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: umowy_harm.fml
:: Utworzony: 08.01.2019
:: Autor: WH
::======================================================================================================================
:: Zawartość: Formuły do obsługi harmonogramów umów
::======================================================================================================================


\env
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Środowisko obszaru roboczego
::   WE:
::   WY:
::  TAG: <PUBLICZNA>
:: ~OST: INFCOPY,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
::UWAGA: _fld, i _mth to formułki pomocnicze, zeby wygodniej tworzyć tablicę i komentować poszczególne jej elementy
::       powiedzmy, że to bedzie pole
         _fld:="31+form(_a)";
::       powiedzmy, że to bedzie metoda
         _mth:="31+form(_a)";

_env:=obj_new(
::             Zmienne pomocnicze
                _fld('DISABLE_HARM','Czy disablować okienka z harmonogramem')
               ,_fld('ROW_COUNT_DATY','Liczba wierszy dla kalendarza')
               ,_fld('ROW_COUNT_WEEK','Liczba wierszy dla kalendarza')
               ,_fld('ZAKRES','Zakreś wyświetlanych HN (wszystkie, aktywne, nieaktywne)')
               ,_fld('SEL_HN','Zaznaczony rekord')
               ,_fld('RFR_ROK','Rekord dla którego odświeżono zakładkę')
               ,_fld('RFR_CAL','Rekord dla którego odświeżono zakładkę')
               ,_fld('RFR_OLDM','Rekord dla którego odświeżono zakładkę')
               ,_fld('RFR_OLDT','Rekord dla którego odświeżono zakładkę')
               ,_fld('RFR_F3M','Rekord dla którego odświeżono zakładkę')
               ,_fld('RFR_F3U','Rekord dla którego odświeżono zakładkę')
               ,_fld('RFR_F3A','Rekord dla którego odświeżono zakładkę')
               ,_fld('TAB','Bieżąca zakładka')
               ,_fld('COMBO_ROK_SIZE','Ila lat wstecz i do przodu załadować w wybieraczce roku')
               ,_fld('WYC_MODE','Tryb wycofywania dla akcji grupowej')
               ,_fld('KAL_STD','Czy znaleziono kalendarz standard')
               ,_fld('KAL_LAST','Ostatnio załadowany kalendarz')
               ,_fld('CAL_LOADED_ROK','Czy znaleziono załadowano już tabelkę z datami')
               ,_fld('CAL_LOADED_CAL','Czy znaleziono załadowano już tabelkę z datami')
               ,_fld('CAL_LOADED_ALL','Czy znaleziono załadowano już tabelkę z datami')
               ,_fld('F3_MODE','Czy okno wyświetlone w trybie F3')
               ,_fld('F3_LOK','Czy dla okna F3 ma być zakładka wg lokalizacji')
               ,_fld('F3_ALL','Czy dla okna F3 ma być zakładka Wszystkie')
               ,_fld('F3_MIASTO','Miasto dla F3')
               ,_fld('F3_ULICA','Ulica dla F3')
               ,_fld('F3_UPSYS','System wywozu dla F3')
               ,_fld('F3_REJO','Rejon dla F3')
               ,_fld('ONE_MODE','Czy okno wyświetlone w trybie pojedynczego HN')
               ,_fld('BOR_SIZE','Domyślny rozmiar ramki dla kontrolek')
               ,_fld('ACTIONS','Akcje które domyślnie wykluczyć z okna')
               ,_fld('SEL_WEEK','Czy rekord w widoku tygodniowym na interm zaznaczony')

               ,_fld('MP_RUN','Czy akcje mają uruchamiać mp_run')
               ,_fld('SINGLE','HN.ref harmonogramu do którego zawęzić widok')

               ,_fld('ALL_LOADED','Czy załadowano już widok grupowy')
               ,_fld('DAYS','Tablica dni')
               ,_fld('DAYS_SHORT','Tablica dni')
               ,_fld('MONTHS','Tablica misięcy')
               ,_fld('AR','Aktualny rok')
               ,_fld('AR_LOCK','Czy zmiana roku zablokowana?')
               ,_fld('RELOAD','Czy przeładowywać widok w kontrolkach')
               ,_fld('SIZE_CALW','Rozmiar oczek kalendarza')
               ,_fld('SIZE_CALH','Rozmiar oczek kalendarza')
               ,_fld('SIZE_ROKW','Rozmiar oczek kalendarza')
               ,_fld('SIZE_ROKH','Rozmiar oczek kalendarza')
               ,_fld('SIZE_ALLW','Rozmiar oczek kalendarza')
               ,_fld('SIZE_ALLH','Rozmiar oczek kalendarza')
               ,_fld('SIZE_MONTHS','Rozmiar oczek kalendarza')
               ,_fld('ROK_HEAD_LOADED','Czy stałe elementy widoku rocznego załadowane')
               ,_fld('CAL_HEAD_LOADED','Czy stałe elementy widoku rocznego załadowane')
               ,_fld('LIST_COLOR_FREE','Kolor na listach')
               ,_fld('LIST_COLOR_HOLY','Kolor na listach')
               ,_fld('LIST_COLOR_BORDER','Kolor na listach')
               ,_fld('LIST_COLOR_POS','Kolor na listach')

               ,_fld('CTR_VISIBLE_ROK','Czy kontrolka widoczna')
               ,_fld('CTR_VISIBLE_CAL','Czy kontrolka widoczna')
               ,_fld('CTR_VISIBLE_ALL','Czy kontrolka widoczna')

::             identyfikatory okienek
               ,_fld('wid_main','ID okienka głównego')
               ,_fld('wid_f3','ID okienka głównego')

               ,_fld('ctr_opt_name','Nazwa okienka kontrolki')
               ,_fld('ctr_opt_id','ID okienka kontrolki')
               ,_fld('ctr_cal_name','Nazwa okienka kontrolki')
               ,_fld('ctr_cal_id','ID okienka kontrolki')
               ,_fld('ctr_all_name','Nazwa okienka kontrolki')
               ,_fld('ctr_all_id','ID okienka kontrolki')
               ,_fld('ctr_rok_name','Nazwa okienka kontrolki')
               ,_fld('ctr_rok_id','ID okienka kontrolki')
               ,_fld('ctr_rok2_name','Nazwa okienka kontrolki')
               ,_fld('ctr_rok2_id','ID okienka kontrolki')
               ,_fld('ctr_f3mia_name','Nazwa okienka kontrolki')
               ,_fld('ctr_f3mia_id','ID okienka kontrolki')
               ,_fld('ctr_f3ul_name','Nazwa okienka kontrolki')
               ,_fld('ctr_f3ul_id','ID okienka kontrolki')
               ,_fld('ctr_f3all_name','Nazwa okienka kontrolki')
               ,_fld('ctr_f3all_id','ID okienka kontrolki')
               ,_fld('ctr_single_name','Nazwa okienka kontrolki')
               ,_fld('ctr_single_id','ID okienka kontrolki')

::             tytuły okienek
               ,_fld('tit_main','Tytuł okienka głównego')

::             tabele tymczasowe
               ,_fld('TAB_WEEK','Tabelka tymczasowa - widok harmonogramu tygodniowy')
               ,_fld('TAB_CTR_MONTH','Tabelka tymczasowa - widok harmonogramu roczny')
               ,_fld('TAB_CTR_ROK','Tabelka tymczasowa - widok harmonogramu roczny')
               ,_fld('TAB_CTR_ROK2','Tabelka tymczasowa - widok harmonogramu roczny')
               ,_fld('TAB_CTR_31','Tabelka tymczasowa - widok harmonogramu roczny')
               ,_fld('TAB_CTR_5WEEKS','Tabelka tymczasowa - widok harmonogramu roczny')
               ,_fld('TAB_CTR_WEEK','Tabelka tymczasowa dla kontrolek - tabela tygodni')
               ,_fld('TAB_CTR_CAL','Tabelka tymczasowa dla kontrolek - tabela kalendarza')
               ,_fld('TAB_CTR_POS','Tabelka tymczasowa dla kontrolek - tabela pozycji')
               ,_fld('TAB_CTR_DAYS','Tabelka tymczasowa dla kontrolek - tabela nazw dni')
               ,_fld('TAB_F3_MIA','Tabelka tymczasowa - obsługa F3')
               ,_fld('TAB_F3_UL','Tabelka tymczasowa - obsługa F3')
               ,_fld('TAB_F3_ALL','Tabelka tymczasowa - obsługa F3')


               ,_fld('TAB_CTR_ALL_HEAD','Tabelka tymczasowa dla kontrolek - tabela nazw dni')
               ,_fld('TAB_CTR_ALL','Tabelka tymczasowa dla kontrolek - tabela nazw dni')
               ,_fld('TAB_CTR_ALL_HN','Tabelka tymczasowa dla kontrolek - tabela nazw harmonogramu')
::             indeksy tymczasowych tabel
               ,_fld('NDX_ALL1','Indeks tymczasowy')
               ,_fld('NDX_F3_1','Indeks tymczasowy')
               ,_fld('NDX_F3_2','Indeks tymczasowy')
               ,_fld('NDX_CAL1','Indeks tymczasowy')
               ,_fld('NDX_CAL_COL_ID','Indeks tymczasowy')
               ,_fld('NDX_ROK_COL_ID','Indeks tymczasowy')
               ,_fld('NDX_ROK2_COL_ID','Indeks tymczasowy')
               ,_fld('NDX_ALL_COL_ID','Indeks tymczasowy')
::             uchwyty do okien
               ,_fld('WIN_MAIN','Uchwyt okienka grupowego')
               ,_fld('WIN_MAIN_F3','Uchwyt okienka grupowego')
               ,_fld('WIN_HN','Uchwyt okienka nagłówków')
               ,_fld('WIN_MONTH','Uchwyt okienka pozycji harmonogramu')
               ,_fld('WIN_F3_MIA','Uchwyt okienka - obsługa F3')
               ,_fld('WIN_F3_UL','Uchwyt okienka - obsługa F3')
               ,_fld('WIN_F3_ALL','Uchwyt okienka - obsługa F3')
               ,_fld('WIN_WEEK','Uchwyt okienka tygodniowego')
               ,_fld('WIN_WEEK2','Uchwyt okienka tygodniowego')


::             METODY
               ,_mth('select','Pokazuje okno obszaru')
               ,_mth('set_cntx','Ustawia kontekst tabeli HN')
               ,_mth('f3','Pokazuje okno do wybierania F3')
               ,_mth('select_one','Pokazuje podgląd jednego HN')
               ,_mth('select_one_interm','Pokazuje podgląd jednego HN')

             );
_env.COMBO_ROK_SIZE:=5;
_env.ZAKRES:='T';
_env.DISABLE_HARM:='';
_env.CAL_LOADED_ROK:=0;
_env.CAL_LOADED_CAL:=0;
_env.CAL_LOADED_ALL:=0;
_env.CTR_VISIBLE_ROK:=1;
_env.CTR_VISIBLE_CAL:=1;
_env.CTR_VISIBLE_ALL:=1;
_env.ROK_HEAD_LOADED:=0;
_env.CAL_HEAD_LOADED:=0;
_env.ALL_LOADED:=0;
_env.AR:=date()~1;
_env.AR_LOCK:=0;
_env.TAB:='';
_env.F3_LOK:=1;
_env.F3_MODE:=0;
_env.ONE_MODE:=0;
_env.F3_ALL:=1;
_env.F3_MIASTO:='';
_env.F3_ULICA:='';
_env.WYC_MODE:='';
_env.RELOAD:=0;
_env.SIZE_CALW:=120;
_env.SIZE_CALH:=0;
_env.SIZE_ROKW:=32;
_env.SIZE_ROKH:=24;
_env.SIZE_ALLW:=32;
_env.SIZE_ALLH:=0;
_env.SIZE_MONTHS:=100;
_env.BOR_SIZE:=1;
_env.MP_RUN:=1;
_env.SINGLE:=null();
{? exec('interm','#system')
|| _env.ACTIONS:='GWH'
|| _env.ACTIONS:='H'
?};
_env.SEL_WEEK:=0;

exec('legenda_after','umowy_harm',_env);

_env.DAYS:=obj_new(7);
_env.DAYS[1]:='Poniedziałek'@;
_env.DAYS[2]:='Wtorek'@;
_env.DAYS[3]:='Środa'@;
_env.DAYS[4]:='Czwartek'@;
_env.DAYS[5]:='Piątek'@;
_env.DAYS[6]:='Sobota'@;
_env.DAYS[7]:='Niedziela'@;

_env.MONTHS:=obj_new(12);
_env.MONTHS[1]:='Styczeń'@;
_env.MONTHS[2]:='Luty'@;
_env.MONTHS[3]:='Marzec'@;
_env.MONTHS[4]:='Kwiecień'@;
_env.MONTHS[5]:='Maj'@;
_env.MONTHS[6]:='Czerwiec'@;
_env.MONTHS[7]:='Lipiec'@;
_env.MONTHS[8]:='Sierpień'@;
_env.MONTHS[9]:='Wrzesień'@;
_env.MONTHS[10]:='Październik'@;
_env.MONTHS[11]:='Listopad'@;
_env.MONTHS[12]:='Grudzień'@;

_env.DAYS_SHORT:=obj_new(7);
_env.DAYS_SHORT[1]:='Pn'@;
_env.DAYS_SHORT[2]:='Wt'@;
_env.DAYS_SHORT[3]:='Śr'@;
_env.DAYS_SHORT[4]:='Cz'@;
_env.DAYS_SHORT[5]:='Pt'@;
_env.DAYS_SHORT[6]:='Sb'@;
_env.DAYS_SHORT[7]:='Nd'@;

_env.SEL_HN:=null();
_env.RFR_ROK:=null();
_env.RFR_CAL:=null();
_env.RFR_OLDM:=null();
_env.RFR_OLDT:=null();
_env.RFR_F3M:=null();
_env.RFR_F3U:=null();
_env.RFR_F3A:=null();

_env.ctr_opt_name:='umo_harm_opt';
_env.ctr_cal_name:='umo_harm_cal';
_env.ctr_all_name:='umo_harm_all';
_env.ctr_rok_name:='umo_harm_rok';
_env.ctr_rok2_name:='umo_harm_rok2';
_env.ctr_f3mia_name:='umo_harm_f3_mi';
_env.ctr_f3ul_name:='umo_harm_f3_ul';
_env.ctr_f3all_name:='umo_harm_f3_al';
_env.ctr_single_name:='umo_harm_one';
_env.wid_main:='#zum_harm_main';
_env.wid_f3:='#zum_harm_f33';
_env.tit_main:='Harmonogramy'@;
_env.WIN_MAIN:='';
_env.WIN_MAIN_F3:='';
_env.WIN_HN:='WER';
_env.WIN_MONTH:='WER_H';
_env.WIN_F3_MIA:='';
_env.WIN_F3_UL:='';
_env.WIN_F3_ALL:='';

:: Definicje tabel
_env.TAB_WEEK:=exec('tab_week','umowy_harm');
_env.TAB_CTR_WEEK:=exec('tab_calendar','umowy_harm',_env);
_env.TAB_CTR_CAL:=exec('tab_calendar','umowy_harm',_env);
_env.TAB_CTR_POS:=exec('tab_calendar','umowy_harm',_env);
_env.TAB_CTR_ALL_HEAD:=exec('tab_calendar','umowy_harm',_env);
_env.TAB_CTR_ALL:=exec('tab_calendar','umowy_harm',_env);
_env.TAB_CTR_ALL_HN:=exec('tab_calendar','umowy_harm',_env);
_env.TAB_CTR_MONTH:=exec('tab_calendar','umowy_harm',_env);
_env.TAB_CTR_ROK:=exec('tab_calendar','umowy_harm',_env);
_env.TAB_CTR_ROK2:=exec('tab_calendar','umowy_harm',_env);
_env.TAB_CTR_31:=exec('tab_calendar','umowy_harm',_env);
_env.TAB_CTR_5WEEKS:=exec('tab_calendar','umowy_harm',_env);

_env.TAB_CTR_DAYS:=exec('tab_calendar','umowy_harm',_env);
_env.TAB_CTR_DAYS.blank();
_env.TAB_CTR_DAYS.ID:='1';
_env.TAB_CTR_DAYS.COL_ID:='1';
_env.TAB_CTR_DAYS.DESC:='Poniedziałek'@;
_env.TAB_CTR_DAYS.TOOLTIP:=_env.TAB_CTR_DAYS.DESC;
_env.TAB_CTR_DAYS.add();
_env.TAB_CTR_DAYS.blank();
_env.TAB_CTR_DAYS.ID:='2';
_env.TAB_CTR_DAYS.COL_ID:='2';
_env.TAB_CTR_DAYS.DESC:='Wtorek'@;
_env.TAB_CTR_DAYS.TOOLTIP:=_env.TAB_CTR_DAYS.DESC;
_env.TAB_CTR_DAYS.add();
_env.TAB_CTR_DAYS.blank();
_env.TAB_CTR_DAYS.ID:='3';
_env.TAB_CTR_DAYS.COL_ID:='3';
_env.TAB_CTR_DAYS.DESC:='Środa'@;
_env.TAB_CTR_DAYS.TOOLTIP:=_env.TAB_CTR_DAYS.DESC;
_env.TAB_CTR_DAYS.add();
_env.TAB_CTR_DAYS.blank();
_env.TAB_CTR_DAYS.ID:='4';
_env.TAB_CTR_DAYS.COL_ID:='4';
_env.TAB_CTR_DAYS.DESC:='Czwartek'@;
_env.TAB_CTR_DAYS.TOOLTIP:=_env.TAB_CTR_DAYS.DESC;
_env.TAB_CTR_DAYS.add();
_env.TAB_CTR_DAYS.blank();
_env.TAB_CTR_DAYS.ID:='5';
_env.TAB_CTR_DAYS.COL_ID:='5';
_env.TAB_CTR_DAYS.DESC:='Piątek'@;
_env.TAB_CTR_DAYS.TOOLTIP:=_env.TAB_CTR_DAYS.DESC;
_env.TAB_CTR_DAYS.add();
_env.TAB_CTR_DAYS.blank();
_env.TAB_CTR_DAYS.ID:='6';
_env.TAB_CTR_DAYS.COL_ID:='6';
_env.TAB_CTR_DAYS.DESC:='Sobota'@;
_env.TAB_CTR_DAYS.TOOLTIP:=_env.TAB_CTR_DAYS.DESC;
_env.TAB_CTR_DAYS.add();
_env.TAB_CTR_DAYS.blank();
_env.TAB_CTR_DAYS.ID:='7';
_env.TAB_CTR_DAYS.COL_ID:='7';
_env.TAB_CTR_DAYS.DESC:='Niedziela'@;
_env.TAB_CTR_DAYS.TOOLTIP:=_env.TAB_CTR_DAYS.DESC;
_env.TAB_CTR_DAYS.add();

:: Definicje indeksów
_env.NDX_ALL1:=_env.TAB_CTR_ALL.ndx_tmp(,,'ID',,);
_env.NDX_CAL1:=_env.TAB_CTR_CAL.ndx_tmp(,,'ID',,);

_env.NDX_CAL_COL_ID:=_env.TAB_CTR_CAL.ndx_tmp(,,'COL_ID',,);
_env.NDX_ROK_COL_ID:=_env.TAB_CTR_ROK.ndx_tmp(,,'COL_ID',,);
_env.NDX_ROK2_COL_ID:=_env.TAB_CTR_ROK2.ndx_tmp(,,'COL_ID',,);
_env.NDX_ALL_COL_ID:=_env.TAB_CTR_ALL.ndx_tmp(,,'COL_ID',,);

_env.ROW_COUNT_DATY:=0;
_env.ROW_COUNT_WEEK:=0;

_env.select:="

   _hid_actions:='';
   {? var_pres('_a')=type_of('')
   || _hid_actions:=_a
   ?};

   params_set(params_get());
   exec('__KAL','object');
   .KAL_STD:=__KAL.set_cal();

   HA.blank();
   HA.REJO:=null();
   HN.REJO:=null();

   exec('icon_before','umowy_harm');
   {? .WIN_MAIN=''
   || {? exec('interm','#system')
      || exec('grp_make_interm','umowy_harm',.)
      || exec('grp_make','umowy_harm',.)
      ?}
   ?};

   HN.win_sel(.WIN_MAIN);
   .set_cntx();

   _hid_actions:=.ACTIONS+_hid_actions;
   {? _hid_actions<>''
   || HN.actions(.WIN_HN,_hid_actions)
   ?};
   HN.select(,,,.ACTIONS);
   {? _hid_actions<>''
   || HN.actions(.WIN_HN)
   ?};
   ~~
";

_env.set_cntx:="
   {? .SINGLE<>null()
   ||
      HN.prefix();
      {? HN.seek(.SINGLE)
      || HN.index('ODDZ');
         HN.prefix(HN.ODDZ,HN.KOD,);
         HN.first()
      || FUN.emsg('Nie znaleziono harmonogramu.'@)
      ?}
   |? .ZAKRES='W'
   || HN.index('ODDZ');
      HN.prefix(ST.ODDZ)
   || HN.index('NAZ');
      HN.prefix(.ZAKRES,ST.ODDZ);
      HN.first()
   ?};
   ~~
";

_env.select_one:="

   exec('__KAL','object');
   .KAL_STD:=__KAL.set_cal();

   params_set(params_get());
   .ONE_MODE:=1;
   _what:=exec('HN','#to_string');
   .ctr_single_id:=exec('create','#desktop',HN,.ctr_single_name,,20,160,'Harmonogram: %1'@[_what],,'normal');
   _win_id:='kontrolka1';
   HN.win_ctr(.ctr_single_id);
   _before:=\"
            params_set(params_get());
            _env:=params_get().env_harm;

            exec('load','#desktop',_env.ctr_single_name,_env.ctr_single_name+'.dsk',,,,,,0);
::          Ładowanie ikon
            _sep:=exec('sep','#file');
            _file:='xwin16.png';
            _filepath:=tmp_dir()+_sep+_file;
            fcopy(_file,'@'+_filepath,1,0,1);
            exec('set_icons','#desktop','',_env.ctr_single_name,_filepath);

            exec('set_value','#desktop','',_env.ctr_single_name,'calendar@desktop','cellW='+$_env.SIZE_ROKW);
            {? _env.SIZE_ROKH>0
            || exec('set_value','#desktop','',_env.ctr_single_name,'calendar@desktop','cellH='+$_env.SIZE_ROKH)
            ?};
            exec('set_value','#desktop','',_env.ctr_single_name,'months@desktop','cellW='+$_env.SIZE_MONTHS);
            {? _env.SIZE_ROKH>0
            || exec('set_value','#desktop','',_env.ctr_single_name,'months@desktop','cellH='+$_env.SIZE_ROKH)
            ?};
            exec('set_value','#desktop','',_env.ctr_single_name,'days@desktop','cellW='+$_env.SIZE_ROKW);
            {? _env.SIZE_ROKH>0
            || exec('set_value','#desktop','',_env.ctr_single_name,'days@desktop','cellH='+$_env.SIZE_ROKH)
            ?};
            exec('set_value','#desktop','',_env.ctr_single_name,'days@desktop','rowCount=1');
            exec('set_value','#desktop','',_env.ctr_single_name,'calendar@desktop','rowCount=12');

            exec('refresh_combo_rok','umowy_harm',_env.ctr_single_name);
            exec('load_one','umowy_harm');
            1
            \";
   HN.control(_win_id,'modal=false',_before);
   ~~
";

_env.select_one_interm:="

   exec('__KAL','object');
   .KAL_STD:=__KAL.set_cal();

   params_set(params_get());
   .ONE_MODE:=1;
   _what:=exec('HN','#to_string');

   _wer:=exec('win_week','umowy_harm',0);

   exec('load_week','umowy_harm');
   .TAB_WEEK.win_sel(_wer);
   .TAB_WEEK.select();
   ~~
";

_env.f3:="

   _miasto:='';
   {? var_pres('_a')=type_of('')
   || _miasto:=_a
   ?};
   _ulica:='';
   {? var_pres('_b')=type_of('')
   || _ulica:=_b
   ?};
   _upsys:=null;
   {? var_pres('_c')=type_of(UPSYS.ref())
   || _upsys:=_c
   ?};
   _rejo:=null();
   {? var_pres('_d')=type_of(REJO.ref())
   || _rejo:=_d
   ?};
   _cur_tab:=~~;
   {? var_pres('_e')>100
   || _cur_tab:=_e
   ?};

   .F3_MODE:=1;
   _result:=null();

   params_set(params_get());
   exec('__KAL','object');
   .KAL_STD:=__KAL.set_cal();

   exec('icon_before','umowy_harm');

   .TAB_F3_MIA:=exec('tab_f3','umowy_harm');
   .TAB_F3_UL:=exec('tab_f3','umowy_harm');
   .TAB_F3_ALL:=exec('tab_f3','umowy_harm');

::   {? _miasto<>'' | _ulica<>''
::   || .F3_LOK:=1
::   ?};
   .F3_MIASTO:=_miasto;
   .F3_ULICA:=_ulica;
   .F3_UPSYS:=_upsys;
   .F3_REJO:=_rejo;

::   {? .WIN_F3_MIA=''
::   || _title:='';
::      {? _miasto<>''
::      || _title:='Harmonogramy w mieście: %1'@[_miasto]
::      ?};
::      .WIN_F3_MIA:=exec('win_f3','umowy_harm',.,.TAB_F3_MIA,'#hn_f3_mia',1,_title)
::   ?};
   {? .WIN_F3_UL=''
   ||
      _title:='';
      {? _miasto<>'' & _ulica<>''
      || _title:='Harmonogramy w mieście: %1 na ulicy: %2'@[_miasto,_ulica]
      ?};
      .WIN_F3_UL:=exec('win_f3','umowy_harm',.,.TAB_F3_UL,'#hn_f3_ul',1,_title)
   ?};
   {? .WIN_F3_ALL=''
   || .WIN_F3_ALL:=exec('win_f3','umowy_harm',.,.TAB_F3_ALL,'#hn_f3_all',0)
   ?};

   {? .WIN_MAIN_F3=''
   || {? exec('interm','#system')
      || exec('grp_make_f3_interm','umowy_harm',.)
      || exec('grp_make_f3_2','umowy_harm',.)
      ?}
   ?};
   {? exec('load_f3','umowy_harm',_miasto,_ulica,_cur_tab)>0
   ||
      _ndx1:=.TAB_F3_MIA.ndx_tmp(,,'MIASTO',,,'ULICA',,,'NR_POS',,);
      _ndx2:=.TAB_F3_UL.ndx_tmp(,,'MIASTO',,,'ULICA',,,'NR_POS',,);
      _ndx3:=.TAB_F3_ALL.ndx_tmp(,,'KOD',,,'NAZ',,);

      .TAB_F3_MIA.index(_ndx1);
      .TAB_F3_UL.index(_ndx2);
      .TAB_F3_ALL.index(_ndx3);

      HN.win_sel(.WIN_MAIN_F3);
      {? HN.select()>0
      || _result:=.SEL_HN
      ?};

      .TAB_F3_MIA.ndx_drop(_ndx1);
      .TAB_F3_UL.ndx_drop(_ndx2);
      .TAB_F3_ALL.ndx_drop(_ndx3);
      ~~
   || FUN.emsg('Ładowanie harmonogramów zakończone niepowodzeniem.'@)
   ?};
   _result
";
_env


\grp_make
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [WH] [19.22]
:: OPIS: Tworzy okienko grupowe obszaru
::   WE: _a - _env - srodowisko - wynik działąnia exec('env','umowy_harm')
:: ~OST: INFCOPY,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=HN;
{? _env.WIN_MAIN=''
||
   _grpbefor:="
         params_set(params_get());
         _env:=params_get().env_harm;

::       Ładowanie dsk
         exec('load','#desktop',_env.ctr_cal_name,_env.ctr_cal_name+'.dsk',,,,,,0);
         exec('load','#desktop',_env.ctr_all_name,_env.ctr_all_name+'.dsk',,,,,,0);
         exec('load','#desktop',_env.ctr_opt_name,_env.ctr_opt_name+'.dsk',,,,,,0);
         exec('load','#desktop',_env.ctr_rok_name,_env.ctr_rok_name+'.dsk',,,,,,0);
         exec('load','#desktop',_env.ctr_rok2_name,_env.ctr_rok2_name+'.dsk',,,,,,0);

::       Ładowanie ikon
         _sep:=exec('sep','#file');
         _file:='xwin16.png';
         _filepath:=tmp_dir()+_sep+_file;
         fcopy(_file,'@'+_filepath,1,0,1);
         exec('set_icons','#desktop','',_env.ctr_rok_name,_filepath);
         exec('set_icons','#desktop','',_env.ctr_rok2_name,_filepath);
         exec('set_icons','#desktop','',_env.ctr_cal_name,_filepath);

::       Zakładka widok kalendarza
         exec('set_value','#desktop','',_env.ctr_cal_name,'calendar@desktop','cellW='+$_env.SIZE_CALW);
         {? _env.SIZE_CALH>0
         || exec('set_value','#desktop','',_env.ctr_cal_name,'calendar@desktop','cellH='+$_env.SIZE_CALH)
         ?};
         exec('set_value','#desktop','',_env.ctr_cal_name,'weeks@desktop','cellW='+$_env.SIZE_CALW);
         {? _env.SIZE_CALH>0
         || exec('set_value','#desktop','',_env.ctr_cal_name,'weeks@desktop','cellH='+$_env.SIZE_CALH)
         ?};
         exec('set_value','#desktop','',_env.ctr_cal_name,'days@desktop','cellW='+$_env.SIZE_CALW);
         {? _env.SIZE_CALH>0
         || exec('set_value','#desktop','',_env.ctr_cal_name,'days@desktop','cellH='+$_env.SIZE_CALH)
         ?};
         exec('set_value','#desktop','',_env.ctr_cal_name,'days@desktop','rowCount=1');

::       Zakładka widok roczny
         exec('set_value','#desktop','',_env.ctr_rok_name,'calendar@desktop','cellW='+$_env.SIZE_ROKW);
         {? _env.SIZE_ROKH>0
         || exec('set_value','#desktop','',_env.ctr_rok_name,'calendar@desktop','cellH='+$_env.SIZE_ROKH)
         ?};
         exec('set_value','#desktop','',_env.ctr_rok_name,'months@desktop','cellW='+$_env.SIZE_MONTHS);
         {? _env.SIZE_ROKH>0
         || exec('set_value','#desktop','',_env.ctr_rok_name,'months@desktop','cellH='+$_env.SIZE_ROKH)
         ?};
         exec('set_value','#desktop','',_env.ctr_rok_name,'days@desktop','cellW='+$_env.SIZE_ROKW);
         {? _env.SIZE_ROKH>0
         || exec('set_value','#desktop','',_env.ctr_rok_name,'days@desktop','cellH='+$_env.SIZE_ROKH)
         ?};
         exec('set_value','#desktop','',_env.ctr_rok_name,'days@desktop','rowCount=1');
         exec('set_value','#desktop','',_env.ctr_rok_name,'calendar@desktop','rowCount=12');

::       Zakładka widok roczny2
         exec('set_value','#desktop','',_env.ctr_rok2_name,'calendar@desktop','cellW='+$_env.SIZE_ROKW);
         {? _env.SIZE_ROKH>0
         || exec('set_value','#desktop','',_env.ctr_rok2_name,'calendar@desktop','cellH='+$_env.SIZE_ROKH)
         ?};
         exec('set_value','#desktop','',_env.ctr_rok2_name,'months@desktop','cellW='+$_env.SIZE_MONTHS);
         {? _env.SIZE_ROKH>0
         || exec('set_value','#desktop','',_env.ctr_rok2_name,'months@desktop','cellH='+$_env.SIZE_ROKH)
         ?};
         exec('set_value','#desktop','',_env.ctr_rok2_name,'days@desktop','cellW='+$_env.SIZE_ROKW);
         {? _env.SIZE_ROKH>0
         || exec('set_value','#desktop','',_env.ctr_rok2_name,'days@desktop','cellH='+$_env.SIZE_ROKH)
         ?};
         exec('set_value','#desktop','',_env.ctr_rok2_name,'days@desktop','rowCount=1');
         exec('set_value','#desktop','',_env.ctr_rok2_name,'calendar@desktop','rowCount=12');

         {? _env.AR_LOCK>0
         || exec('set_enabled','#desktop','',_env.ctr_opt_name,'combo_rok@desktop',0);
            exec('set_enabled','#desktop','',_env.ctr_opt_name,'btn_prev@desktop',0);
            exec('set_enabled','#desktop','',_env.ctr_opt_name,'btn_next@desktop',0);
            ~~
         ?};

         exec('refresh_combo_rok','umowy_harm');
         grp_disp(HN,_env.WIN_HN,1);
         ~~
      ";

   _grp:=_tab.grp_make(_env.tit_main,_grpbefor,_env.wid_main,1,1,"exec('exit','zws',_a)");

   _after_rfr:="
      params_set(params_get());
      exec('after_rfr_hn','umowy_harm')
   ";
   _env.ctr_opt_id:=exec('create','#desktop',HN,_env.ctr_opt_name,_grp,1);

   _tab.grp_splt(_grp,'panel0','horizontal','Bottom');

   _tab.grp_sel(_grp,HN,_env.WIN_HN,,_after_rfr,,,20,,,,,'maximized_with_title',,1);
::   _tab.grp_splt(_grp,'panel0','horizontal','Dolny',30);
::   _tab.grp_edit(_grp,BPMN,'MODELER','',,,,,'maximized');


   _tab.grp_splt(_grp,'Bottom','vertical','Right');

:: Zakładka Widok roczny
   _after_rfr:="";
   _before:="
      params_set(params_get());
      _env:=params_get().env_harm;
      {? _a>0
      || _env.TAB:=cur_win_id(1)
      ?};
      {? _env.DISABLE_HARM='#disable'
      || _env.CTR_VISIBLE_ROK:=0;
         exec('set_visible','#desktop','',_env.ctr_rok2_name,'desktop',0)
      || _env.CTR_VISIBLE_ROK:=1;
         exec('set_visible','#desktop','',_env.ctr_rok2_name,'desktop',1)
      ?};
      {? _a>0 & _env.DISABLE_HARM<>'#disable'
      || _env.RFR_ROK:=null();
         exec('refresh_tab_rok','umowy_harm')
      ?}
   ";
   _env.ctr_rok2_id:=exec('create','#desktop',HN,_env.ctr_rok2_name,_grp,10,,,'Widok roczny'@,,,,,_before);

   _tab.tab_splt(_grp,,'horizontal','tab_bottom',18);

   _after_rfr:="";

   _before:="
      params_set(params_get());
      _env:=params_get().env_harm;

      {? _env.DISABLE_HARM='#disable'
      || exec('set_visible','#desktop','',_env.ctr_rok_name,'desktop',0)
      || exec('set_visible','#desktop','',_env.ctr_rok_name,'desktop',1)
      ?}
   ";
:: Zapamiętuję identyfikator pierwszej zakładki
   _env.TAB:=_env.ctr_rok2_name;

   _env.ctr_rok_id:=exec('create','#desktop',HN,_env.ctr_rok_name,_grp,10,,,'',,,,,_before);


:: Zakładka Widok kalendarza
   _before:="
      params_set(params_get());
      _env:=params_get().env_harm;
      {? _a>0
      || _env.TAB:=cur_win_id(1)
      ?};
      {? _env.DISABLE_HARM='#disable'
      || _env.CTR_VISIBLE_CAL:=0;
         exec('set_visible','#desktop','',_env.ctr_cal_name,'desktop',0)
      || _env.CTR_VISIBLE_CAL:=1;
         exec('set_visible','#desktop','',_env.ctr_cal_name,'desktop',1)
      ?};
      {? _a>0 & _env.DISABLE_HARM<>'#disable'
      || _env.RFR_CAL:=null();
         exec('refresh_tab_cal','umowy_harm')
      ?}
   ";
   _env.ctr_cal_id:=exec('create','#desktop',HN,_env.ctr_cal_name,_grp,10,,,'Widok kalendarza'@,,,,,_before);

:: Zakładka widok grupowy
   _before:="
      params_set(params_get());
      _env:=params_get().env_harm;
      {? _a>0
      || _env.TAB:=cur_win_id(1);

         {? _env.ALL_LOADED=0
         || _env.ALL_LOADED:=1;
            exec('refresh_tab_all','umowy_harm')
         ?}
      ?};
::      {? _env.DISABLE_HARM='#disable'
::      || _env.CTR_VISIBLE_ALL:=0;
::         exec('set_visible','#desktop','',_env.ctr_all_name,'desktop',0)
::      || _env.CTR_VISIBLE_ALL:=1;
::         exec('set_visible','#desktop','',_env.ctr_all_name,'desktop',1)
::      ?};
      ~~
   ";
   _env.ctr_all_id:=exec('create','#desktop',HN,_env.ctr_all_name,_grp,10,,,'Widok grupowy'@,,,,,_before);

   _tab.win_sel(_grp);
   _env.WIN_MAIN:=_grp;

   ~~
?};
~~


\grp_make_interm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Tworzy okienko grupowe obszaru na interm
::   WE: _a - _env - srodowisko - wynik działąnia exec('env','umowy_harm')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=_a;
_tab:=HN;
{? _env.WIN_MAIN=''
||
   _env.ctr_rok_name:='';
   _env.ctr_rok2_name:='';
   _env.ctr_cal_name:='';
   _before:="
       params_set(params_get());
      _env:=params_get().env_harm;
      grp_disp(HN,_env.WIN_HN,1);
      ~~
   ";
   _grp:=_tab.grp_make(_env.tit_main,_before,_env.wid_main,1,1,"exec('exit','zws',_a)");

   _after_rfr:="
      params_set(params_get());
      _env:=params_get().env_harm;
      exec('after_rfr_hn_interm','umowy_harm');
      ~~
   ";
   _before:="
      params_set(params_get());
      _env:=params_get().env_harm;

      ~~
   ";
   _tab.grp_sel(_grp,HN,_env.WIN_HN,,_after_rfr,,,20,_before,,,,'maximized_with_title',,1);

   _tab.grp_splt(_grp,,'vertical','Right','150,33%');

   _before:="
      params_set(params_get());
      _env:=params_get().env_harm;
      _env.DISABLE_HARM
   ";
   _env.WIN_WEEK:=exec('win_week','umowy_harm');
   _tab.grp_sel(_grp,_env.TAB_WEEK,_env.WIN_WEEK,,_after_rfr,,,20,_before,,,,'maximized_with_title');

   _tab.win_sel(_grp);
   _env.WIN_MAIN:=_grp;

   ~~
?};
~~


\grp_make_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [WH] [19.22]
:: OPIS: Tworzy okienko grupowe obszaru
::   WE: _a - _env - srodowisko - wynik działąnia exec('env','umowy_harm')
:: ~OST: INFCOPY,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=HN;
{? _env.WIN_MAIN_F3=''
||
   _grpbefor:="
         params_set(params_get());
         _env:=params_get().env_harm;

         exec('load','#desktop',_env.ctr_opt_name,_env.ctr_opt_name+'.dsk',,,,,,0);

::       Ładowanie ikon
         _sep:=exec('sep','#file');
         _file:='xwin16.png';
         _filepath:=tmp_dir()+_sep+_file;
         fcopy(_file,'@'+_filepath,1,0,1);
         {? _env.F3_LOK>0
         ||
::          Zakładka wg lokalizacji
            exec('load','#desktop',_env.ctr_f3mia_name,_env.ctr_f3mia_name+'.dsk',,,,,,0);
            exec('set_icons','#desktop','',_env.ctr_f3mia_name,_filepath);

            {? _env.F3_ULICA<>''
            || exec('load','#desktop',_env.ctr_f3ul_name,_env.ctr_f3ul_name+'.dsk',,,,,,0);
               exec('set_icons','#desktop','',_env.ctr_f3ul_name,_filepath)
            ?};
::          Miasta
            exec('set_value','#desktop','',_env.ctr_f3mia_name,'calendar@desktop','cellW='+$_env.SIZE_ROKW);
            {? _env.SIZE_ROKH>0
            || exec('set_value','#desktop','',_env.ctr_f3mia_name,'calendar@desktop','cellH='+$_env.SIZE_ROKH)
            ?};
            exec('set_value','#desktop','',_env.ctr_f3mia_name,'months@desktop','cellW='+$_env.SIZE_MONTHS);
            {? _env.SIZE_ROKH>0
            || exec('set_value','#desktop','',_env.ctr_f3mia_name,'months@desktop','cellH='+$_env.SIZE_ROKH)
            ?};
            exec('set_value','#desktop','',_env.ctr_f3mia_name,'days@desktop','cellW='+$_env.SIZE_ROKW);
            {? _env.SIZE_ROKH>0
            || exec('set_value','#desktop','',_env.ctr_f3mia_name,'days@desktop','cellH='+$_env.SIZE_ROKH)
            ?};
            exec('set_value','#desktop','',_env.ctr_f3mia_name,'days@desktop','rowCount=1');
            exec('set_value','#desktop','',_env.ctr_f3mia_name,'calendar@desktop','rowCount=12');

            {? _env.F3_ULICA<>''
            ||
::             Ulice
               exec('set_value','#desktop','',_env.ctr_f3ul_name,'calendar@desktop','cellW='+$_env.SIZE_ROKW);
               {? _env.SIZE_ROKH>0
               || exec('set_value','#desktop','',_env.ctr_f3ul_name,'calendar@desktop','cellH='+$_env.SIZE_ROKH)
               ?};
               exec('set_value','#desktop','',_env.ctr_f3ul_name,'months@desktop','cellW='+$_env.SIZE_MONTHS);
               {? _env.SIZE_ROKH>0
               || exec('set_value','#desktop','',_env.ctr_f3ul_name,'months@desktop','cellH='+$_env.SIZE_ROKH)
               ?};
               exec('set_value','#desktop','',_env.ctr_f3ul_name,'days@desktop','cellW='+$_env.SIZE_ROKW);
               {? _env.SIZE_ROKH>0
               || exec('set_value','#desktop','',_env.ctr_f3ul_name,'days@desktop','cellH='+$_env.SIZE_ROKH)
               ?};
               exec('set_value','#desktop','',_env.ctr_f3ul_name,'days@desktop','rowCount=1');
               exec('set_value','#desktop','',_env.ctr_f3ul_name,'calendar@desktop','rowCount=12')
            ?};
            ~~
         ?};

::       Zakładka wszystkie
         exec('load','#desktop',_env.ctr_f3all_name,_env.ctr_f3all_name+'.dsk',,,,,,0);
         exec('set_icons','#desktop','',_env.ctr_f3all_name,_filepath);

         exec('set_value','#desktop','',_env.ctr_f3all_name,'calendar@desktop','cellW='+$_env.SIZE_ROKW);
         {? _env.SIZE_ROKH>0
         || exec('set_value','#desktop','',_env.ctr_f3all_name,'calendar@desktop','cellH='+$_env.SIZE_ROKH)
         ?};
         exec('set_value','#desktop','',_env.ctr_f3all_name,'months@desktop','cellW='+$_env.SIZE_MONTHS);
         {? _env.SIZE_ROKH>0
         || exec('set_value','#desktop','',_env.ctr_f3all_name,'months@desktop','cellH='+$_env.SIZE_ROKH)
         ?};
         exec('set_value','#desktop','',_env.ctr_f3all_name,'days@desktop','cellW='+$_env.SIZE_ROKW);
         {? _env.SIZE_ROKH>0
         || exec('set_value','#desktop','',_env.ctr_f3all_name,'days@desktop','cellH='+$_env.SIZE_ROKH)
         ?};
         exec('set_value','#desktop','',_env.ctr_f3all_name,'days@desktop','rowCount=1');
         exec('set_value','#desktop','',_env.ctr_f3all_name,'calendar@desktop','rowCount=12');

         {? _env.AR_LOCK>0
         || exec('set_enabled','#desktop','',_env.ctr_opt_name,'combo_rok@desktop',0);
            exec('set_enabled','#desktop','',_env.ctr_opt_name,'btn_prev@desktop',0);
            exec('set_enabled','#desktop','',_env.ctr_opt_name,'btn_next@desktop',0);
            ~~
         ?};

         exec('refresh_combo_rok','umowy_harm');
         exec('grp_disp_f3','umowy_harm');
         ~~
      ";

   _grp:=_tab.grp_make(_env.tit_main,_grpbefor,_env.wid_f3,1,1);
   _env.ctr_opt_id:=exec('create','#desktop',HN,_env.ctr_opt_name,_grp,1);
   _tab.grp_splt(_grp,'panel0','horizontal','Okna');
   {? _env.F3_LOK>0
   ||
::    Zakładka wg lokalizacji

      {? _env.F3_ULICA<>''
      ||
         _after_rfr:="
            params_set(params_get());
            _env:=params_get().env_harm;
            _env.RFR_F3U:=exec('after_rfr_f3','umowy_harm',_env.ctr_f3ul_name,_env.RFR_F3U);
            ~~
         ";
         _tab.grp_sel(_grp,_env.TAB_F3_UL,_env.WIN_F3_UL,'Wg lokalizacji'@,_after_rfr,,,15,,,,,'maximized_with_title');

         _tab.tab_splt(_grp,'tab0','horizontal','lok_bottom');
         ~~
      ?};

      _after_rfr:="
         params_set(params_get());
         _env:=params_get().env_harm;
         _env.RFR_F3M:=exec('after_rfr_f3','umowy_harm',_env.ctr_f3mia_name,_env.RFR_F3M);
         ~~
      ";
      _tab_name:='';
      {? _env.F3_ULICA=''
      ||
::       Jeśli wcześniej nie było okienka z ulicami, to to będzie pierwsze okno na zakładce
         _tab_name:='Wg lokalizacji'@
      ?};
      _tab.grp_sel(_grp,_env.TAB_F3_MIA,_env.WIN_F3_MIA,_tab_name,_after_rfr,,,15,,,,,'maximized_with_title',,1);

      {? _env.F3_ULICA<>''
      ||
         _tab.tab_splt(_grp,'tab0','vertical','tab_cal_ul');

         _after_rfr:="
         ";
         _before:="
            params_set(params_get());
            ~~
         ";
         _env.ctr_f3ul_id:=exec('create','#desktop',HN,_env.ctr_f3ul_name,_grp,15,100,,'',,,,,_before);

         ~~
      ?};

      {? _env.F3_ULICA<>''
      || _tab.tab_splt(_grp,'lok_bottom','vertical','tab_cal_mia')
      || _tab.tab_splt(_grp,'tab0','vertical','tab_cal_mia')
      ?};

      _after_rfr:="";
      _before:="
         params_set(params_get());
         ~~
      ";
      _env.ctr_f3mia_id:=exec('create','#desktop',HN,_env.ctr_f3mia_name,_grp,10,100,,'',,,,,_before);


::    Zapamiętuję identyfikator pierwszej zakładki
      _env.TAB:=_env.ctr_f3mia_name;
      ~~
   ?};

:: Zakładka wszystkie
   _after_rfr:="
      params_set(params_get());
      _env:=params_get().env_harm;
      _env.RFR_F3A:=exec('after_rfr_f3','umowy_harm',_env.ctr_f3all_name,_env.RFR_F3A);
      ~~
   ";
   _tab.grp_sel(_grp,_env.TAB_F3_ALL,_env.WIN_F3_ALL,'Wszystkie'@,_after_rfr,,,20,,,,,'maximized_with_title');

   _tab.tab_splt(_grp,,'vertical','tab_cal_all');

   _after_rfr:="";
   _before:="
      params_set(params_get());
      ~~
   ";
   _env.ctr_f3all_id:=exec('create','#desktop',HN,_env.ctr_f3all_name,_grp,10,100,,'',,,,,_before);

   _tab.win_sel(_grp);
   _env.WIN_MAIN_F3:=_grp;
   ~~
?};
~~


\grp_make_f3_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [WH] [19.22]
:: OPIS: Tworzy okienko grupowe obszaru
::   WE: _a - _env - srodowisko - wynik działąnia exec('env','umowy_harm')
:: ~OST: INFCOPY,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=HN;
{? _env.WIN_MAIN_F3=''
||
   _grpbefor:="
         params_set(params_get());
         _env:=params_get().env_harm;

         exec('load','#desktop',_env.ctr_opt_name,_env.ctr_opt_name+'.dsk',,,,,,0);

::       Ładowanie ikon
         _sep:=exec('sep','#file');
         _file:='xwin16.png';
         _filepath:=tmp_dir()+_sep+_file;
         fcopy(_file,'@'+_filepath,1,0,1);
         {? _env.F3_LOK>0
         ||
::          Zakładka wg lokalizacji
            {? _env.F3_ULICA<>''
            || exec('load','#desktop',_env.ctr_f3ul_name,_env.ctr_f3ul_name+'.dsk',,,,,,0);
               exec('set_icons','#desktop','',_env.ctr_f3ul_name,_filepath)
            ?};
            {? _env.F3_ULICA<>''
            ||
::             Ulice
               exec('set_value','#desktop','',_env.ctr_f3ul_name,'calendar@desktop','cellW='+$_env.SIZE_ROKW);
               {? _env.SIZE_ROKH>0
               || exec('set_value','#desktop','',_env.ctr_f3ul_name,'calendar@desktop','cellH='+$_env.SIZE_ROKH)
               ?};
               exec('set_value','#desktop','',_env.ctr_f3ul_name,'months@desktop','cellW='+$_env.SIZE_MONTHS);
               {? _env.SIZE_ROKH>0
               || exec('set_value','#desktop','',_env.ctr_f3ul_name,'months@desktop','cellH='+$_env.SIZE_ROKH)
               ?};
               exec('set_value','#desktop','',_env.ctr_f3ul_name,'days@desktop','cellW='+$_env.SIZE_ROKW);
               {? _env.SIZE_ROKH>0
               || exec('set_value','#desktop','',_env.ctr_f3ul_name,'days@desktop','cellH='+$_env.SIZE_ROKH)
               ?};
               exec('set_value','#desktop','',_env.ctr_f3ul_name,'days@desktop','rowCount=1');
               exec('set_value','#desktop','',_env.ctr_f3ul_name,'calendar@desktop','rowCount=12')
            ?};
            ~~
         ?};

::       Zakładka wszystkie
         exec('load','#desktop',_env.ctr_f3all_name,_env.ctr_f3all_name+'.dsk',,,,,,0);
         exec('set_icons','#desktop','',_env.ctr_f3all_name,_filepath);

         exec('set_value','#desktop','',_env.ctr_f3all_name,'calendar@desktop','cellW='+$_env.SIZE_ROKW);
         {? _env.SIZE_ROKH>0
         || exec('set_value','#desktop','',_env.ctr_f3all_name,'calendar@desktop','cellH='+$_env.SIZE_ROKH)
         ?};
         exec('set_value','#desktop','',_env.ctr_f3all_name,'months@desktop','cellW='+$_env.SIZE_MONTHS);
         {? _env.SIZE_ROKH>0
         || exec('set_value','#desktop','',_env.ctr_f3all_name,'months@desktop','cellH='+$_env.SIZE_ROKH)
         ?};
         exec('set_value','#desktop','',_env.ctr_f3all_name,'days@desktop','cellW='+$_env.SIZE_ROKW);
         {? _env.SIZE_ROKH>0
         || exec('set_value','#desktop','',_env.ctr_f3all_name,'days@desktop','cellH='+$_env.SIZE_ROKH)
         ?};
         exec('set_value','#desktop','',_env.ctr_f3all_name,'days@desktop','rowCount=1');
         exec('set_value','#desktop','',_env.ctr_f3all_name,'calendar@desktop','rowCount=12');

         {? _env.AR_LOCK>0
         || exec('set_enabled','#desktop','',_env.ctr_opt_name,'combo_rok@desktop',0);
            exec('set_enabled','#desktop','',_env.ctr_opt_name,'btn_prev@desktop',0);
            exec('set_enabled','#desktop','',_env.ctr_opt_name,'btn_next@desktop',0);
            ~~
         ?};

         exec('refresh_combo_rok','umowy_harm');
         exec('grp_disp_f3','umowy_harm');
         ~~
      ";

   _grp:=_tab.grp_make(_env.tit_main,_grpbefor,_env.wid_f3,1,1);
   _env.ctr_opt_id:=exec('create','#desktop',HN,_env.ctr_opt_name,_grp,1);
   _tab.grp_splt(_grp,'panel0','horizontal','Okna');
   {? _env.F3_LOK>0
   ||
::    Zakładka wg lokalizacji

      {? _env.F3_ULICA<>''
      ||
         _after_rfr:="
            params_set(params_get());
            _env:=params_get().env_harm;
            _env.RFR_F3U:=exec('after_rfr_f3','umowy_harm',_env.ctr_f3ul_name,_env.RFR_F3U);
            ~~
         ";
         _tab.grp_sel(_grp,_env.TAB_F3_UL,_env.WIN_F3_UL,'Wg lokalizacji'@,_after_rfr,,,15,,,,,'maximized_with_title');
         ~~
      ?};

      _tab.tab_splt(_grp,'tab0','vertical','tab_cal_ul');
      _after_rfr:="
      ";
      _before:="
         params_set(params_get());
         ~~
      ";
      _env.ctr_f3ul_id:=exec('create','#desktop',HN,_env.ctr_f3ul_name,_grp,15,100,,'',,,,,_before);

::    Zapamiętuję identyfikator pierwszej zakładki
      _env.TAB:=_env.ctr_f3mia_name;
      ~~
   ?};

:: Zakładka wszystkie
   _after_rfr:="
      params_set(params_get());
      _env:=params_get().env_harm;
      _env.RFR_F3A:=exec('after_rfr_f3','umowy_harm',_env.ctr_f3all_name,_env.RFR_F3A);
      ~~
   ";
   _tab.grp_sel(_grp,_env.TAB_F3_ALL,_env.WIN_F3_ALL,'Wszystkie'@,_after_rfr,,,20,,,,,'maximized_with_title');

   _tab.tab_splt(_grp,,'vertical','tab_cal_all');

   _after_rfr:="";
   _before:="
      params_set(params_get());
      ~~
   ";
   _env.ctr_f3all_id:=exec('create','#desktop',HN,_env.ctr_f3all_name,_grp,10,100,,'',,,,,_before);

   _tab.win_sel(_grp);
   _env.WIN_MAIN_F3:=_grp;
   ~~
?};
~~


\grp_make_f3_interm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Tworzy okienko grupowe obszaru
::   WE: _a - _env - srodowisko - wynik działąnia exec('env','umowy_harm')
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=HN;
params_set(params_get());

{? _env.WIN_MAIN_F3=''
||
   _grpbefor:="
         params_set(params_get());
         _env:=params_get().env_harm;
::         tab_sel(1);
         exec('grp_disp_f3','umowy_harm');
         ~~
      ";

   _grp:=_tab.grp_make(_env.tit_main,_grpbefor,'#zum_harm_f34',1,1);
   {? _env.F3_LOK>0
   ||
::    Zakładka wg lokalizacji

      {? _env.F3_ULICA<>''
      ||
         _after_rfr:="
            params_set(params_get());
            _env:=params_get().env_harm;
            exec('after_rfr_f3_interm','umowy_harm',_env.WIN_WEEK2);
            ~~
         ";
         _tab.grp_sel(_grp,_env.TAB_F3_UL,_env.WIN_F3_UL,'Wg lokalizacji'@,_after_rfr,,,15,,,,,'maximized_with_title',,1);
         ~~
      ?};

      _tab.tab_splt(_grp,'tab0','vertical','tab_cal_ul','150,33%');
      _after_rfr:="
      ";
      _before:="
         params_set(params_get());
         ~~
      ";
      _env.WIN_WEEK2:=exec('win_week','umowy_harm',0);
      _tab.grp_sel(_grp,_env.TAB_WEEK,_env.WIN_WEEK2,,_after_rfr,,,20,_before,,,,'maximized_with_title');

::    Zapamiętuję identyfikator pierwszej zakładki
      _env.TAB:=_env.ctr_f3mia_name;
      ~~
   ?};

:: Zakładka wszystkie
   _after_rfr:="
      params_set(params_get());
      _env:=params_get().env_harm;
      exec('after_rfr_f3_interm','umowy_harm',_env.WIN_WEEK);
      ~~
   ";
   _tab.grp_sel(_grp,_env.TAB_F3_ALL,_env.WIN_F3_ALL,'Wszystkie'@,_after_rfr,,,20,,,,,'maximized_with_title');

   _tab.tab_splt(_grp,,'vertical','tab_cal_all','150,33%');

   _after_rfr:="";
   _before:="
      params_set(params_get());
      ~~
   ";

   _env.WIN_WEEK:=exec('win_week','umowy_harm',0);
   _tab.grp_sel(_grp,_env.TAB_WEEK,_env.WIN_WEEK,,_after_rfr,,,20,_before,,,,'maximized_with_title');

   _tab.win_sel(_grp);
   _env.WIN_MAIN_F3:=_grp;
   ~~
?};
~~



\cal_tab_daty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelkę dla kontrolki
::   WY: tab_tmp
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env_harm;
_env.TAB_CTR_CAL


\cal_tab_week
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelkę dla kontrolki
::   WY: tab_tmp
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env_harm;
_env.TAB_CTR_WEEK


\cal_tab_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelkę dla kontrolki
::   WY: tab_tmp
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env_harm;
_env.TAB_CTR_POS


\cal_tab_days
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelkę dla kontrolki
::   WY: tab_tmp
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env_harm;
_env.TAB_CTR_DAYS


\cal_tab_31
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelkę dla kontrolki
::   WY: tab_tmp
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env_harm;
_env.TAB_CTR_31


\cal_tab_5weeks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelkę dla kontrolki
::   WY: tab_tmp
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env_harm;
_env.TAB_CTR_5WEEKS


\cal_tab_head
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelkę dla kontrolki
::   WY: tab_tmp
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env_harm;
_env.TAB_CTR_ALL_HEAD



\cal_tab_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelkę dla kontrolki
::   WY: tab_tmp
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env_harm;
_env.TAB_CTR_ALL



\cal_tab_all_hn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelkę dla kontrolki
::   WY: tab_tmp
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env_harm;
_env.TAB_CTR_ALL_HN



\cal_tab_month
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelkę dla kontrolki
::   WY: tab_tmp
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env_harm;
_env.TAB_CTR_MONTH


\cal_tab_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelkę dla kontrolki
::   WY: tab_tmp
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env_harm;
_env.TAB_CTR_ROK



\cal_tab_rok2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelkę dla kontrolki
::   WY: tab_tmp
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env_harm;
_env.TAB_CTR_ROK2



\after_rfr_hn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Po odświeżeniu w tabeli HN
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;
::return(1);
exec('actions_grayed','umowy_harm');
HA.HEADSTAT:='Zakończono w: %1'@[$_env.AR];
HN.fld_opt('WER', 'col_name=%1'[HA.HEADSTAT],HA,'STAT_REJ');
{? _env.ACTIONS<>''
|| HN.actions('WER',_env.ACTIONS,,1)
?};
{? HN.ref()<>null() & HN.ODDZ<>''
||
   exec('months_reload','umowy_harm');
   {? _env.TAB=_env.ctr_all_name & _env.RELOAD>0
   || _env.ALL_LOADED:=1;
      exec('refresh_tab_all','umowy_harm')
   ?};
   {? _env.SEL_HN<>HN.ref() | _env.RELOAD>0
   ||
      HARMON.index('HN');
      HARMON.prefix(HN.ODDZ,HN.KOD,_env.AR);
      {? ~HARMON.first()
      || exec('new_harm','umowy_harm',_env.AR,HN.KAL_NAZW)
      ?};

::    Zakładka widok roczny
      {? _env.TAB=_env.ctr_rok2_name
      || exec('refresh_tab_rok','umowy_harm')
      ?};

::    Zakładka widok kalendarza
      {? _env.TAB=_env.ctr_cal_name
      || exec('refresh_tab_cal','umowy_harm')
      ?};

      _env.RELOAD:=0;
      ~~
   ?}
?};

::grp_disp(HN,_env.ctr_all_id);
{? grp_empty(cur_tab(1,1),cur_win(1,1))
|| _env.DISABLE_HARM:='#disable';
   exec('set_visible','#desktop','',_env.ctr_rok_name,'desktop',0);
   exec('set_visible','#desktop','',_env.ctr_cal_name,'desktop',0);
   exec('set_visible','#desktop','',_env.ctr_rok2_name,'desktop',0)
|| {? HN.AKT='N'
   || _env.DISABLE_HARM:='#disable';
      exec('set_visible','#desktop','',_env.ctr_rok_name,'desktop',0);
      exec('set_visible','#desktop','',_env.ctr_cal_name,'desktop',0);
      exec('set_visible','#desktop','',_env.ctr_rok2_name,'desktop',0)
   || {? _env.DISABLE_HARM<>''
      || _env.DISABLE_HARM:='';
         exec('set_visible','#desktop','',_env.ctr_rok_name,'desktop',1);
         exec('set_visible','#desktop','',_env.ctr_cal_name,'desktop',1);
         exec('set_visible','#desktop','',_env.ctr_rok2_name,'desktop',1)
      ?}
   ?}
?};
_env.SEL_HN:=HN.ref();
~~


\after_rfr_hn_interm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Po odświeżeniu w tabeli HN
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;
::return(1);
_keys:=exec('actions_grayed','umowy_harm',,_env.WIN_HN);
_env.TAB_WEEK.actions_grayed(_env.WIN_WEEK,_keys);

HA.HEADSTAT:='Zakończono w: %1'@[$_env.AR];
HN.fld_opt('WER','col_name=%1'[HA.HEADSTAT],HA,'STAT_REJ');
{? _env.ACTIONS<>''
|| HN.actions('WER',_env.ACTIONS,,1)
?};
{? HN.ref()<>null() & HN.ODDZ<>''
||

   {? _env.SEL_HN<>HN.ref() | _env.RELOAD>0
   ||
      HARMON.index('HN');
      HARMON.prefix(HN.ODDZ,HN.KOD,_env.AR);
      {? ~HARMON.first()
      || exec('new_harm','umowy_harm',_env.AR,HN.KAL_NAZW)
      ?};
::    Zakładka widok kalendarza
      exec('refresh_tab_oldt','umowy_harm');
      _env.RELOAD:=0;
      ~~
   ?}
?};
::grp_disp(HN,_env.ctr_all_id);
{? grp_empty(HN,'WER')
|| _env.DISABLE_HARM:='#disable'
|| {? HN.AKT='N'
   || _env.DISABLE_HARM:='#disable'
   || {? _env.DISABLE_HARM<>''
      || _env.DISABLE_HARM:=''
      ?}
   ?}
?};
_env.SEL_HN:=HN.ref();
grp_disp(_env.TAB_WEEK,_env.WIN_WEEK);
~~


\after_rfr_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Po odświeżeniu w tabeli tymczasowej HN
::   WE: _a - STRING - identyfikator kontrolki
::       _b - HN.ref - ostatnio załadowany rekord
::   WY: HN.ref() - załadowany rekord
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

::HA.HEADSTAT:='Zakończono w: %1?'@[$_env.AR];
_ctr_name:=_a;
_last_ref:=_b;
_result:=_last_ref;
_ref:=null();
HN.cntx_psh();
HN.index('ODDZ');
HN.prefix(ST.ODDZ,cur_tab(1,1).KOD,);
{? HN.first()
|| _ref:=HN.ref()
?};
HN.cntx_pop();
HN.prefix();

{? _ref<>null() & HN.seek(_ref) & HN.ODDZ<>''
||
   {? _last_ref<>HN.ref() | _env.RELOAD>0
   ||
      HARMON.index('HN');
      HARMON.prefix(HN.ODDZ,HN.KOD,_env.AR);
      {? ~HARMON.first()
      || exec('new_harm','umowy_harm',_env.AR,HN.KAL_NAZW)
      ?};

::    Widok kalendarzyka
      _result:=exec('refresh_tab_f3','umowy_harm',_ctr_name,_last_ref);
      _env.SEL_HN:=HN.ref()
   ?}
?};

::grp_disp(HN,_env.ctr_all_id);
{? grp_empty(cur_tab(1,1),cur_win(1,1))
|| exec('set_visible','#desktop','',_ctr_name,'desktop',0)
|| {? _env.CTR_VISIBLE_ROK>0
   || exec('set_visible','#desktop','',_ctr_name,'desktop',1)
   ?}
?};
_result



\after_rfr_f3_interm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Po odświeżeniu w tabeli tymczasowej HN
::   WE: _a - STRING - akronim okienka tabeli TAB_WEEK
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_win:=_a;

::HA.HEADSTAT:='Zakończono w: %1?'@[$_env.AR];
_ref:=null();
HN.cntx_psh();
HN.index('ODDZ');
HN.prefix(ST.ODDZ,cur_tab(1,1).KOD,);
{? HN.first()
|| _ref:=HN.ref()
?};
HN.cntx_pop();
HN.prefix();

{? _ref<>null() & HN.seek(_ref) & HN.ODDZ<>''
||
   {? _env.SEL_HN<>HN.ref() | _env.RELOAD>0
   ||
      HARMON.index('HN');
      HARMON.prefix(HN.ODDZ,HN.KOD,_env.AR);
      {? ~HARMON.first()
      || exec('new_harm','umowy_harm',_env.AR,HN.KAL_NAZW)
      ?};

::    Widok kalendarzyka
      exec('refresh_tab_oldt','umowy_harm');
      _env.SEL_HN:=HN.ref()
   ?}
?};

::grp_disp(HN,_env.ctr_all_id);
{? grp_empty(cur_tab(1,1),cur_win(1,1))
|| _env.DISABLE_HARM:='#disable'
|| {? _env.CTR_VISIBLE_ROK>0
   || _env.DISABLE_HARM:=''
   ?}
?};
grp_disp(_env.TAB_WEEK,_win);
~~

\refresh_tab_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuła ładująco odświeżająca zakładkę Widok roczny
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;
{? _env.RFR_ROK<>HN.ref() | _env.RELOAD>0
||
::   return(1);
   _can_continue:=exec('load_rok','umowy_harm',,1);

   {? _can_continue>0
   ||
::    Ładowanie się zakończyło prawidłowo, ale jeśli ostanio kontrolka była zniknięta to ją pojawiam
      {? _env.CTR_VISIBLE_ROK=0
      || exec('set_visible','#desktop','',_env.ctr_rok_name,'desktop',1);
         exec('set_visible','#desktop','',_env.ctr_rok2_name,'desktop',1);
         _env.CTR_VISIBLE_ROK:=1
      ?};

::    Widok górny

::    Numery dni
      {? _env.ROK_HEAD_LOADED=0
      || _data_id_31:=$SYSLOG.tm_stamp();
         exec('fetch_data','#desktop',_data_id_31,_env.ctr_rok_name,exec('cal_tab_31','umowy_harm'),'ID,DESC,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
         exec('grab_data','#desktop','',_env.ctr_rok_name,'days@desktop',_data_id_31)
      ?};

::    Nazwy miesięcy
      {? _env.ROK_HEAD_LOADED=0
      || _data_id_month:=$SYSLOG.tm_stamp();
         exec('fetch_data','#desktop',_data_id_month,_env.ctr_rok_name,exec('cal_tab_month','umowy_harm'),'ID,DESC,ICON,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
         exec('grab_data','#desktop','',_env.ctr_rok_name,'months@desktop',_data_id_month)
      ?};
::    Zawartość zakładki
      _data_id_rok:=$SYSLOG.tm_stamp();
      exec('fetch_data','#desktop',_data_id_rok,_env.ctr_rok_name,exec('cal_tab_rok','umowy_harm'),'ID,DESC,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
      exec('grab_data','#desktop','',_env.ctr_rok_name,'calendar@desktop',_data_id_rok);

::    Widok dolny

::    Nazwy dni
      {? _env.ROK_HEAD_LOADED=0
      || _data_id_5weeks:=$SYSLOG.tm_stamp();
         exec('fetch_data','#desktop',_data_id_5weeks,_env.ctr_rok2_name,exec('cal_tab_5weeks','umowy_harm'),'ID,DESC,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
         exec('grab_data','#desktop','',_env.ctr_rok2_name,'days@desktop',_data_id_5weeks)
      ?};

::    Nazwy miesięcy
      {? _env.ROK_HEAD_LOADED=0
      || _data_id_month:=$SYSLOG.tm_stamp();
         exec('fetch_data','#desktop',_data_id_month,_env.ctr_rok2_name,exec('cal_tab_month','umowy_harm'),'ID,DESC,ICON,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
         exec('grab_data','#desktop','',_env.ctr_rok2_name,'months@desktop',_data_id_month)
      ?};

::    Zawartość zakładki
      _data_id_rok:=$SYSLOG.tm_stamp();
      exec('fetch_data','#desktop',_data_id_rok,_env.ctr_rok2_name,exec('cal_tab_rok2','umowy_harm'),'ID,DESC,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
      exec('grab_data','#desktop','',_env.ctr_rok2_name,'calendar@desktop',_data_id_rok);

      exec('set_value','#desktop','',_env.ctr_rok_name,'days@desktop','select_clear=1');
      exec('set_value','#desktop','',_env.ctr_rok2_name,'days@desktop','select_clear=1');

      {? _env.ROK_HEAD_LOADED=0
      || _env.ROK_HEAD_LOADED:=1
      ?}
   ||
::    Ładowanie się wykrzaniło, znikam kontrolkę
      exec('set_visible','#desktop','',_env.ctr_rok_name,'desktop',0);
      exec('set_visible','#desktop','',_env.ctr_rok2_name,'desktop',0);
      _env.CTR_VISIBLE_ROK:=0
   ?};
   _env.RFR_ROK:=HN.ref()
?};
~~


\refresh_tab_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuła ładująco odświeżająca zakładkę Widok roczny
::   WE: _a - STRING - identyfikator kontrolki
::       _b - HN.ref - ostatnio załadowany rekord
::   WY  HN.ref() - załadowany rekord HN
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_ctr_name:=_a;
_last_ref:=_b;
_result:=_last_ref;

{? _last_ref<>HN.ref() | _env.RELOAD>0
||
   _can_continue:=exec('load_rok','umowy_harm',,1,,0);

   {? _can_continue>0
   ||
::    Ładowanie się zakończyło prawidłowo, ale jeśli ostanio kontrolka była zniknięta to ją pojawiam
      {? _env.CTR_VISIBLE_ROK=0
      || exec('set_visible','#desktop','',_ctr_name,'desktop',1);
         _env.CTR_VISIBLE_ROK:=1
      ?};

::    Nazwy dni
      {? _env.ROK_HEAD_LOADED=0
      || _data_id_5weeks:=$SYSLOG.tm_stamp();
         exec('fetch_data','#desktop',_data_id_5weeks,_ctr_name,exec('cal_tab_5weeks','umowy_harm'),'ID,DESC,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
         exec('grab_data','#desktop','',_ctr_name,'days@desktop',_data_id_5weeks)
      ?};

::    Nazwy miesięcy
      _data_id_month:=$SYSLOG.tm_stamp();
      exec('fetch_data','#desktop',_data_id_month,_ctr_name,exec('cal_tab_month','umowy_harm'),'ID,DESC,ICON,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
      exec('grab_data','#desktop','',_ctr_name,'months@desktop',_data_id_month);

::    Zawartość zakładki
      _data_id_rok:=$SYSLOG.tm_stamp();
      exec('fetch_data','#desktop',_data_id_rok,_ctr_name,exec('cal_tab_rok2','umowy_harm'),'ID,DESC,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
      exec('grab_data','#desktop','',_ctr_name,'calendar@desktop',_data_id_rok);

      exec('set_value','#desktop','',_ctr_name,'days@desktop','select_clear=1')
   ||
::    Ładowanie się wykrzaniło, znikam kontrolkę
      exec('set_visible','#desktop','',_ctr_name,'desktop',0);
      _env.CTR_VISIBLE_ROK:=0
   ?};
   _result:=HN.ref()
?};
_result


\refresh_tab_cal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuła ładująco odświeżająca zakładkę Widok kalendarza
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

{? _env.RFR_CAL<>HN.ref() | _env.RELOAD>0
||
   _can_continue:=exec('load_cal','umowy_harm',,1);

   {? _can_continue>0
   ||
::    Ładowanie się zakończyło prawidłowo, ale jeśli ostanio kontrolka była zniknięta to ją pojawiam
      {? _env.CTR_VISIBLE_CAL=0
      || exec('set_visible','#desktop','',_env.ctr_cal_name,'desktop',1);
         _env.CTR_VISIBLE_CAL:=1
      ?};


::    Widok kalendarza

::    Kalendarz
      _data_id_daty:=$SYSLOG.tm_stamp();
      exec('fetch_data','#desktop',_data_id_daty,_env.ctr_cal_name,exec('cal_tab_daty','umowy_harm'),'ID,DESC,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
      exec('grab_data','#desktop','',_env.ctr_cal_name,'calendar@desktop',_data_id_daty);
      exec('set_value','#desktop','',_env.ctr_cal_name,'calendar@desktop','rowCount='+$_env.ROW_COUNT_DATY);

      {? _env.CAL_HEAD_LOADED=0
      ||
::       Numery tygodni
         _data_id_week:=$SYSLOG.tm_stamp();
         exec('fetch_data','#desktop',_data_id_week,_env.ctr_cal_name,exec('cal_tab_week','umowy_harm'),'ID,DESC,ICON,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
         exec('grab_data','#desktop','',_env.ctr_cal_name,'weeks@desktop',_data_id_week);
         exec('set_value','#desktop','',_env.ctr_cal_name,'weeks@desktop','rowCount='+$_env.ROW_COUNT_WEEK);

::       Lista nazw dni
         _data_id_days:=$SYSLOG.tm_stamp();
         exec('fetch_data','#desktop',_data_id_days,_env.ctr_cal_name,exec('cal_tab_days','umowy_harm'),'ID,DESC,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
         exec('grab_data','#desktop','',_env.ctr_cal_name,'days@desktop',_data_id_days)
      ?};

      {? _env.CAL_HEAD_LOADED=0
      || _env.CAL_HEAD_LOADED:=1
      ?};
      ~~
   ||
::    Ładowanie się wykrzaniło, znikam kontrolkę
      exec('set_visible','#desktop','',_env.ctr_cal_name,'desktop',0);
      _env.CTR_VISIBLE_CAL:=0
   ?};
   _env.RFR_CAL:=HN.ref()
?};
~~


\refresh_tab_oldm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuła ładująco odświeżająca zakładkę Widok miesieczny
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

{? _env.RFR_OLDM<>HN.ref() | _env.RELOAD>0
||
   _env.RFR_OLDM:=HN.ref()
?};
~~


\refresh_tab_oldt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuła ładująco odświeżająca zakładkę Widok tygodniowy
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

{? _env.RFR_OLDT<>HN.ref() | _env.RELOAD>0
|| exec('load_week','umowy_harm');
   _env.RFR_OLDT:=HN.ref()
?};
~~


\refresh_combo_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuła ładująco odświeżacjąca combo z latami
::   WE: [_a] - STRING - nazwa kontrolki z combem
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_ctr_name:=_env.ctr_opt_name;
{? var_pres('_a')=type_of('')
|| _ctr_name:=_a
?};

_tab:=exec('combo_rok_fill','umowy_harm');
_data_id:=$SYSLOG.tm_stamp();
exec('fetch_data','#desktop',_data_id,_ctr_name,_tab,'ROK,ROK','');
exec('grab_data','#desktop','',_ctr_name,'combo_rok@desktop',_data_id,,$_env.AR);
~~


\sel_harm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wyświetla szczegółowy harmonogram
::   WE: [_a] - STRING - oddzial - domyslnie HN.ODDZ
::       [_b] - STRING - kod harmonogramu - domyslnie HN.KOD
::   WY: 0/1
::  OLD: \sel_harm/um_harm.fml
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
HN.cntx_psh();
_result:=null();
_can_continue:=1;

{? _can_continue>0
|| _env_harm:=exec('env','umowy_harm');
   params_set('env_harm',_env_harm);
   {? exec('interm','#system')
   || _result:=_env_harm.select_one_interm()
   || _result:=_env_harm.select_one()
   ?}
?};
HN.cntx_pop();
_result


\harmon_fields_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły na wartość początkową dla pól w tabeli HARMON
::   WY: ANY
::  TAG: <MBUILDER><BL><TAB:HARMON>
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
_fld:=cur_afld();
{? _fld='HN'
|| _result:=HN.KOD
|? _fld='ODDZ'
|| _result:=HN.ODDZ
|? _fld='STAT_REJ'
|| _result:='N'
?};
_result


\harmon_fields_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły przed wyświetleniem dla pól w tabeli HARMON
::   WY: STRING
::  TAG: <MBUILDER><BD><TAB:HARMON>
::----------------------------------------------------------------------------------------------------------------------
_result:='';
_fld:=cur_afld();

{? (1+_fld)='D' & (+_fld)=3
||
:: Pola o nazwie D01..NN itp
   _nr:=(_fld+2);
   HA.DZIEN:=form(($('HARMON.D'+_nr))());
   {? HA.DZIEN=HA.BRAK
   || _result:=exec('findfnv','#color')
   || _result:=Color.rekprzed('HARM#01')
   ?}
|? _fld='STAT_REJ'
|| _result:='N'
?};
_result


\harmon_fields_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły przed redkacją dla pól w tabeli HARMON
::   WE: [_a] - STRING - akronim pola, jeśli nie podane to cur_afld()
::       [_b] - ANY    - wartość w polu, jeśli nie podane to fld()
::   WY: 0/1
::  TAG: <MBUILDER><BE><TAB:HARMON>
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

_fld:=~~;
{? var_pres('_a')=type_of('')
|| _fld:=_a
|| _fld:=cur_afld()
?};
_value:=~~;
{? var_pres('_b')>0
|| _value:=_b
|| _value:=fld()
?};

{? (1+_fld)='D' & (+_fld)=3
||
:: Pola o nazwie D01..NN itp
   _nr:=(_fld+2);
   {? _value=HA.BRAK | _value=HA.SW | _value=HA.NIE | _value=HA.NIE_SW
   ||
      HARMON.hdr_sel();
      _result:=0
   ||
      _data:=date(HARMON.ROK,HARMON.NR,#(1-_nr));
      HA.DS:=(_data)$7;
      {? HN.count()<>0
      ||
         {? exec('hg_sp_dni','umowy_zlecenia',ST.ODDZ,_data)
         || HARMON.hdr_sel();
            _result:=0
         || HARMON.hdr_sel();
            HARMON.hdr_sel('  : '+HA.DS)
         ?}
      ||
         HARMON.hdr_sel();
         HARMON.hdr_sel('  : '+HA.DS);
         _result:=1
      ?}
   ?}
?};
_result


\harmon_fields_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły po redakcji dla pól w tabeli HARMON
::   WY: 0/1
::  TAG: <MBUILDER><AE><TAB:HARMON>
::----------------------------------------------------------------------------------------------------------------------
1


\harmon_fields_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły obsługi na F3 dla pól w tabeli HARMON
::  TAG: <MBUILDER><F3><TAB:HARMON>
::----------------------------------------------------------------------------------------------------------------------
~~


\harmon_fields_fd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły na format wyświetlania dla pól w tabeli HARMON
::   WY: STRING
::  TAG: <MBUILDER><FD><TAB:HARMON>
::----------------------------------------------------------------------------------------------------------------------
''


\harmon_fields_fe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły na format redagowania dla pól w tabeli HARMON
::   WY: STRING
::  TAG: <MBUILDER><FE><TAB:HARMON>
::----------------------------------------------------------------------------------------------------------------------
''


\ha_fields_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły na wartość początkową dla pól w zmiennej HA
::  TAG: <MBUILDER><BL><TAB:HA>
::  OLD: \bl_hbrak/war_tech.fml
::       \bl_hasw/war_tech.fml
::       \bl_hansw/war_tech.fml
::       \bl_hanie/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
_fld:=cur_afld();

{? _fld='BRAK'
|| _result:='~~'
|? _fld='SW'
|| _result:='S~'
|? _fld='NIE_SW'
|| _result:='NS'
|? _fld='NIE'
|| _result:='N~'
|? _fld='ROK'
|| _result:=ST.AR
|? _fld='TYP'
|| _result:=1
|? _fld='A_OKRP'
|| _result:='N'
|? _fld='HOP_MODE'
|| _result:='O'
|? _fld='HOP_DIR'
|| _result:=1
|? (1+_fld)='D' & +_fld=2
|| _result:='N'
?};
_result


\ha_fields_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły przed wyświetleniem dla pól w zmiennej HA
::   WY: STRING
::  TAG: <MBUILDER><BD><TAB:HA>
::  OLD: \bd_ha_harm/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
_result:='';
_fld:=cur_afld();

{? _fld='D7'
|| _result:=exec('findfnrd','color')
|? (1+_fld)='D' & (+_fld)=3
||
:: Pola D01..Dxx
   _nr:=(_fld+2);
   HA.DZIEN:=form(($('HA.D'+_nr))());
   {? HA.DZIEN=HA.BRAK
   || _result:=exec('findfnv','#color')
   || _result:=Color.rekprzed('HARM#01')
   ?}
?};
_result


\ha_fields_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły przed redkacją dla pól w zmiennej HA
::   WY: 0/1
::  TAG: <MBUILDER><BE><TAB:HA>
::  OLD: \be_ha_harm/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_fld:=cur_afld();

{? (1+_fld)='D' & (+_fld)=3
||
:: Pola D01..Dxx
   _value:=fld();
   {? _value=HA.BRAK | _value=HA.SW | _value=HA.NIE | _value=HA.NIE_SW
   ||
      _tab.hdr_sel();
      _result:=0
   ||
      {? _tab.OD=date(0,0,0) || _tab.OD:=_tab.DO-6 ?};
      _data:=_tab.OD+(#(1-_fld))-1;
      HA.DS:=(_data)$7;
      {? HN.count()<>0
      ||
         {? exec('hg_sp_dni','umowy_zlecenia',ST.ODDZ,_data)
         || _tab.hdr_sel();
            _result:=0
         || _tab.hdr_sel();
            _tab.hdr_sel('  : '+HA.DS)
         ?}
      ||
         _tab.hdr_sel();
         _tab.hdr_sel('  : '+HA.DS)
      ?}
   ?}
?};
_result


\ha_fields_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły po redakcji dla pól w zmiennej HA
::   WY: 0/1
::  TAG: <MBUILDER><AE><TAB:HA>
::  OLD: \harm_rok/um_harm.fml
::       \ae_harm/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

_fld:=cur_afld();
{? (1+_fld)='D' & ((+_fld)=2 | (+_fld)=3)
||
:: Pola typu D1..7 lub D01..07
::   _result:=0;
::   _value:=fld();
::   {? _value<>''
::   ||
::      {? _value<>HA.BRAK & _value<>HA.SW & _value<>HA.NIE & _value<>HA.NIE_SW
::      ||
::         {? HN.TYP=1
::         || SAM.index('ODA');
::            SAM.prefix(ST.ODDZ,'T',_value);
::            {? SAM.first() || _result:=1 ?}
::         |? HN.TYP=2
::         || ZLBR.index('ODDZ');
::            ZLBR.prefix(ST.ODDZ,_value,_value);
::            {? ZLBR.first() || _result:=1 ?}
::         |? HN.TYP=3
::         || PRACW.index('H');
::            PRACW.prefix(ST.ODDZ,_value);
::            {? PRACW.first() || _result:=1 ?}
::         |? HN.TYP=5
::         || REJO.index('KOD');
::            REJO.prefix(ST.ODDZ,_value,_value);
::            {? REJO.first() || _result:=1 ?}
::         ?}
::      ?}
::   || _result:=1
::   ?};
   ~~
|? _fld='ROK'
|| {? ~exec('chk_okr','umowy_harm',HA.ROK)
   || _result:=0;
      FUN.info('Rok niezgodny z założonymi w okresach obrachunkowych.'@)
   ?}
?};
_result


\ha_fields_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły obsługi na F3 dla pól w zmiennej HA
::   WY: ANY
::  TAG: <MBUILDER><F3><TAB:HA>
::  OLD: \f3_harm/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
_fld:=cur_afld();

{? (1+_fld)='D' & ((+_fld)=2 | (+_fld)=3)
||
:: Pola typu D1..7 lub D01..07
   _result:='';
   HA.F3:='T';
   exec('set_win','umowy');
   {? HN.TYP=1
   || ~~
   |? HN.TYP=2
   || ZLBR.index('ODDZ');
      ZLBR.prefix(ST.ODDZ);
      ZLBR.win_sel('SLO');
      {? ZLBR.select()
      || _result:=ZLBR.H
      ?}
   |? HN.TYP=3
   || PRACW.index('ODDZ');
      PRACW.prefix(ST.ODDZ);
      PRACW.win_sel('SEL');
      {? PRACW.select()
      || _result:=PRACW.H
      ?}
   |? HN.TYP=4
   || _result:=POPEXP.select('X - zaznaczenie');
      _result:=1+_result
   |? HN.TYP=5
   || REJO.index('REJ');
      REJO.prefix(ST.ODDZ);
      REJO.win_sel('SEL');
      {? REJO.select()
      || _result:=REJO.H
      ?}
   ?};
   HA.F3:=''
?};
_result


\ha_fields_fd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły na format wyświetlania dla pól w zmiennej HA
::   WY:
::  TAG: <MBUILDER><FD><TAB:HA>
::----------------------------------------------------------------------------------------------------------------------
''


\ha_fields_fe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły na format redagowania dla pól w zmiennej HA
::   WY:
::  TAG: <MBUILDER><FE><TAB:HA>
::----------------------------------------------------------------------------------------------------------------------
''


\hn_fields_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły na wartość początkową dla pól w tabeli HN
::   WY: ANY
::  TAG: <MBUILDER><BL><TAB:HN>
::  OLD: \hn_nr/um_harm.fml
::       \hn_kod/um_harm.fml
::       \hn_naz/um_harm.fml
::       \bl_hnrej/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
_fld:=cur_afld();
{? _fld='AKT'
|| _result:='T'
|? _fld='NR'
|| HN.cntx_psh();
   HN.clear();
   HN.index('ODNR');
   HN.prefix(ST.ODDZ);
   {? HN.last()
   || _result:=HN.NR+1
   || _result:=1
   ?};
   HN.cntx_pop()
|? _fld='KOD'
|| _result:=form(HN.NR,-3,,'99')
|? _fld='NAZ'
|| _result:=form(HN.NR,-3,,'99')+'/'+ST.ODDZ
|? _fld='ODDZ'
|| _result:=ST.ODDZ
|? _fld='REJO'
|| _result:=HA.REJO
|? _fld='HZ'
|| _result:=1
|? _fld='HOP_DIR'
|| _result:=1
|? _fld='HOP_MODE'
|| _result:='O'
|? (1+_fld)='D' & +_fld=2
|| _result:='N'
|? _fld='KAL_NAZW'
|| KAL_NAZW.cntx_psh();
   KAL_NAZW.index('KAL_NAZW');
   _kalnaz:=exec('get_par','#parametr',8);
   KAL_NAZW.prefix(REF.FIRMA,_kalnaz,);
   {? KAL_NAZW.first()
   || _result:=KAL_NAZW.ref()
   ?};
   KAL_NAZW.cntx_pop()
|? _fld='STAT_REJ'
|| _result:='N'
?};
_result


\hn_fields_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły przed wyświetleniem dla pól w tabeli HN
::   WY:
::  TAG: <MBUILDER><BD><TAB:HN>
::----------------------------------------------------------------------------------------------------------------------
''


\hn_fields_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły przed redkacją dla pól w tabeli HN
::   WY:
::  TAG: <MBUILDER><BE><TAB:HN>
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_fld:=cur_afld();
{? _fld='REJO' | _fld='UPSYS' | _fld='KAL_NAZW'
|| {? HN.STAT_REJ='T'
   || _result:=0
   || _result:=exec('bef_upsy','umowy_harm')
   ?}
|? _fld='KOD'
||
   {? HN.STAT_REJ='T'
   || _result:=0
   ||
      HARMON.cntx_psh();
      HARMON.index('HN');
      HARMON.prefix(HN.ODDZ,HN.KOD);
      {? HARMON.first()
      || _result:=0
      ?};
      HARMON.cntx_pop()
   ?}
|? _fld='NAZ'
|| {? HN.STAT_REJ='T'
   || _result:=0
   ?}
?};
_result


\hn_fields_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły po redakcji dla pól w tabeli HN
::   WY:
::  TAG: <MBUILDER><AE><TAB:HN>
::----------------------------------------------------------------------------------------------------------------------
1


\hn_fields_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły obsługi na F3 dla pól w tabeli HN
::   WY:
::  TAG: <MBUILDER><F3><TAB:HN>
::----------------------------------------------------------------------------------------------------------------------
~~


\hn_fields_fd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły na format wyświetlania dla pól w tabeli HN
::   WY:
::  TAG: <MBUILDER><FD><TAB:HN>
::----------------------------------------------------------------------------------------------------------------------
''


\hn_fields_fe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły na format redagowania dla pól w tabeli HN
::   WY:
::  TAG: <MBUILDER><FE><TAB:HN>
::----------------------------------------------------------------------------------------------------------------------
''


\kol_harm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: kolorowanie pola w harmonogramie
::   WE: _a - wartosc pola
::  OLD: \kol_harm/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? HA.DZIEN=HA.NIE
|| _wyn:='HARM#01#01'
|? HA.DZIEN=HA.SW | HA.DZIEN=HA.NIE_SW
|| _wyn:='HARM#01#02'
|? HA.DZIEN<>''
|| _wyn:='HARM#01#03'
?};
_wyn


\new_harm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: zakladanie rekordow dla kazdego z miesiecy
::       uzupelnia ~~ dla dni których nie ma w kalendarzu
::       oraz N~ dla niedziel i S~ dla pozostalych swiat
::       na podstawie wartosci w zmiennych z HA
::       Potrzebuje obiektu __KAL do działania
::   WE: _a - rok
::       [_b] - KAL_NAZW.ref - kalendarz
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \new_harm/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_rok:=_a;
_cal:=null;
{? var_pres('_b')=type_of(KAL_NAZW.ref())
|| _cal:=_b
?};

_can_continue:=1;
_result:=0;

_licz:=0;
_wyn:=0;
_przes:=0;
_cal_ok:=1;

_cal_ok:=exec('set_cal','umowy_harm',_cal,0,_rok);
{? _cal_ok>0
||
   {!
   |? _licz+=1;_licz<=12
   |!
      HARMON.cntx_psh();
      HARMON.index('HN');
      HARMON.prefix(ST.ODDZ,HN.KOD,_rok,_licz);
      {? HARMON.first()=0
      ||
         HARMON.blank();
         HARMON.ROK:=_rok;
         HARMON.NR:=_licz;
         _mie:=date(HARMON.ROK,_licz,0);
         HARMON.MIE:=form(_mie$8,(_mie$8*' '));
         _dzien:=_mie~3;
         {!
         |? _dzien+=1;_dzien<32
         |!
            _pole:=$('HARMON.D'+form(_dzien,-2)+':=HA.BRAK');
            _pole()
         !};
         _dzien:=0;
         {!
         |? _dzien+=1;
            _pole:=$('HARMON.D'+form(_dzien,-2)+'<>HA.BRAK');
            _dzien<32 & _pole() & _can_continue>0
         |!
            {? (date(HARMON.ROK,_licz,_dzien)$7)*'niedziela'=1
            ||
               _pole:=$('HARMON.D'+form(_dzien,-2)+':=HA.NIE');
               _pole()
            ?};
            _data:=date(_rok,_licz,_dzien);
            {? __KAL.get_day(_data)<>null()
            || {? KAL_DEF.TYP='S'
               || _pole:=$('HARMON.D'+form(_dzien,-2)+'<>HA.NIE');
                  {? _pole()
                  || _pole:=$('HARMON.D'+form(_dzien,-2)+':=HA.SW');
                     _pole()
                  ?}
               ?}
            ?}
::         _przes:=exec('spr_kal','faktury_plat',date(_a,_licz,_dzien));
::         {? _przes>0
::         || _pole:=$('HARMON.D'+form(_dzien,-2)+'<>HA.NIE');
::            {? _pole()
::            || _pole:=$('HARMON.D'+form(_dzien,-2)+':=HA.SW');
::               _pole()
::            ?}
::         ?}
         !};
         _can_continue:=HARMON.add()
      ?};
      HARMON.cntx_pop()
   !}
?};
{? _can_continue>0
|| _result:=1
?};
::HARMON.find_key(1);
_wyn


\harm_tyg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: widok harmonogramu wg tygodni
::   WE: _c - utworzenie tabeli 1 / odtworzenie wartosci - 0
::  OLD: \harm_tyg/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;
''


\week
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: zwraca numer tygodnia dla biezacej daty
::   WE: _a - data dla ktorej ustalany jest tydzien
::   WY: numer tygodnia
::  OLD: \week/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
_d0:=date(_a~1,1,1);
_db:=_a;
((_db-_d0)+_d0~4+(7-_db~4))%7


\bef_upsy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Kuba [2009]
:: OPIS: Przed redakcja pola REJO, UP_SYS na harmonogramie, sprawdzanie czy harmonogram jest zwiazany z umowa
::  OLD: \bef_upsy/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:=1;
{? -menu_txt()='popraw'
||
   UP.cntx_psh();
   UP.index('HN');
   UP.prefix(HN.ref());
   {? UP.first()
   || _wyn:=0
   ?};
   UP.cntx_pop()
?};
_wyn


\generate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: uzupelnienie harmonogramu
::   WE: _a - INTEGER - czy wyswietlac dialogi
::       _b - STRING - tryb przeskakiwania
::       _c - INTEGER - kierunek przeskakiwania
::       [_d]- INTEGER - rok dla którego generować
::    WY: 0 - porażka
::        1 -sukces
::  OLD: \harm_uzu/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
_dialog:=_a;
_hop_mode:=_b;
_hop_dir:=_c;
_ar:=date()~1;
{? var_pres('_d')=type_of(0)
|| _ar:=_d
?};

_result:=0;
_can_continue:=1;

exec('__KAL','object');
_what:=exec('HN','#to_string');

{? _can_continue>0
||
   {? _dialog=1
   || KOMM.init(250,,'Generowanie harmonogramu na rok: %1'@[$_ar])
   ?};
   HA.HZ:=HN.HZ;
   HA.OD_D:=date(_ar,1,1);
   HA.DO_D:=date(_ar,12,0);
   HA.D1:=HN.D1;
   HA.D2:=HN.D2;
   HA.D3:=HN.D3;
   HA.D4:=HN.D4;
   HA.D5:=HN.D5;
   HA.D6:=HN.D6;
   HA.D7:=HN.D7;
   HA.HOP_MODE:=HN.HOP_MODE;
   HA.HOP_DIR:=HN.HOP_DIR;
   HA.win_edit('UZUP');

   {? _can_continue>0
   || {? _dialog=1
      || _can_continue:=HA.edit("exec('chk_generate','umowy_harm')")
      |? _dialog=2
      || {? exec('chk_hn','umowy_harm',_dialog)<>''
         || _can_continue:=0
         ?}
      ?}
   ?};

   {? _can_continue>0 & exec('is_ended','umowy_harm',,_ar)>0
   || _can_continue:=0;
      _msg:='Harmonogram: %1 został już zakończony w roku: %2'@[_what,$_ar];
      {? _dialog=1
      || FUN.emsg(_msg)
      |? _dialog=2
      || exec('komm_add','umowy_harm',_msg)
      ?}
   ?};

   {? _can_continue>0
   ||
::    Czyszczę log o błędach
      {? _can_continue>0
      ||
         HARMON.cntx_psh();
         HARMON.index('HN');
         HARMON.prefix(ST.ODDZ,HN.KOD,_ar,1);
         {? HARMON.first()
         || HARMON.ERRORS:='';
            _can_continue:=HARMON.put();
            {? _can_continue>0
            || HARMON.memo_set('','BL');
               _can_continue:=HARMON.memo_put(,'BL')
            ?}
         ?};
         HARMON.cntx_pop()
      ?}
   ?};
   {? _can_continue>0
   ||
::    Ustawiam kalendarz
      _can_continue:=exec('set_cal','umowy_harm',HN.KAL_NAZW,_dialog,_ar);
      {? _can_continue=0
      || _msg:='Nie można generować harmonogramu: %1. Nie znaleziono kalendarza.'@[_what];
         _header:=1;
         {? exec('errors_present','umowy_harm')
         || _header:=0
         ?};
         exec('errors_add','umowy_harm',_msg,_ar,_header)
      ?}
   ?};
   {? _can_continue>0
   ||
      DATY.cntx_psh();
      DATY.index('RMD');
      DATY.prefix(_ar);

      {? DATY.first()
      || {!
         |? {? DATY.DATA>=HA.OD_D & DATY.DATA<=HA.DO_D
            || _can_del:=1;
               {? exec('editable','umowy_harm',DATY.DATA)=0
               || _can_del:=0
               ?};
               {? _can_del>0
               || _can_continue:=exec('pos_delete','umowy_harm',DATY.DATA)
               ?}
            ?};
            DATY.next() & _can_continue>0
         !}
      ?};

      _tydzien:=0;
      _last_tyg:=0;
      {? _can_continue>0 & DATY.first()
      || {!
         |? {? DATY.DATA>=HA.OD_D & DATY.DATA<=HA.DO_D
            ||
               {? _tydzien=0
               || _tydzien:=HA.HZ
               ?};
               {? _last_tyg=0
               || _last_tyg:=DATY.TYDZIEN
               ?};
               {? DATY.TYDZIEN<>_last_tyg
               || _tydzien+=1
               ?};
               _can_gen:=0;
               _rule:='HA.D'+$DATY.DZIEN_T;
               {? ($_rule)()='T'
               || _can_gen:=1
               ?};

               {? _can_gen>0 & HA.HZ>1
               || {? _tydzien%*HA.HZ=0
                  || _can_gen:=1
                  || _can_gen:=0
                  ?}
               ?};

               {? _can_gen & _can_continue>0
               ||
                  {? exec('editable','umowy_harm',DATY.DATA)=0
                  || _msg:='Dla okresu: %1 wygenerowano już zgłoszenia. Akcja niedozwolona.'@[DATY.DATA$8];
                     _can_gen:=0;
                     exec('komm_add','umowy_harm',_msg)
                  ?}
               ?};

               {? _can_gen>0 & _can_continue>0
               ||
                  _gen_res:=exec('pos_create','umowy_harm',DATY.DATA,HA.HOP_MODE,HA.HOP_DIR,_dialog,,_ar,HA.OD_D,HA.DO_D);
                  {? _gen_res<>0
                  || _can_continue:=1
                  || _can_continue:=0
                  ?}
               ?};

               _last_tyg:=DATY.TYDZIEN
            ?};
            DATY.next() & _can_continue>0
         !}
      ?};
      DATY.cntx_pop();
      ~~
   ?};
   {? _dialog=1
   || KOMM.select()
   ?}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Czyści harmonogram w podanym roku
::   WE: [_a] - HN.ref lub bieżący rekord
::       _b - INTEGER - rok harmonogramu
::       [_c] - INTEGER - czy wyświetać dialogi
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
{? var_pres('_a')=type_of(HN.ref())
|| _ref:=_a
?};
_year:=_b;
_dialog:=1;
{? var_pres('_c')=type_of(0)
|| _dialog:=_c
?};

_result:=0;
_can_continue:=1;

HARMON.cntx_psh();
HARMON.index('HN');
HN.cntx_psh();
{? _ref<>null()
|| HN.prefix();
   {? HN.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   {? _dialog>0
   || _what:=exec('HN','#to_string');
      _msg:='Czy usunąć cały harmonogram: \'%1\' w roku: %2?'@[_what,$_year];
      _can_continue:=FUN.ask(_msg);
      KOMM.init(250,,'Czyszczenie harmonogramu umów'@)
   ?};

   {? _can_continue>0
   || _all_clear:=1;
      HARMON.prefix(ST.ODDZ,HN.KOD,_year);
      {? HARMON.first()
      || {!
         |? _next:=0;
            _ref_nxt:=null();
            HARMON.cntx_psh();
            {? HARMON.next()
            || _ref_nxt:=HARMON.ref()
            ?};
            HARMON.cntx_pop();

            {? exec('editable','umowy_harm',date(HARMON.ROK,HARMON.NR,1))>0
            || _can_continue:=HARMON.del(,1)
            || _all_clear:=0;
               {? _dialog
               || _msg:='Miesiąc: %1 nie został wyczyszczony, ponieważ wygenerowano już w nim zgłoszenia.'@[HARMON.MIE];
                  KOMM.add(_msg,2,,1)
               ?}
            ?};
            {? _ref_nxt<>null()
            || _next:=HARMON.seek(_ref_nxt)
            ?};
            _next>0 & _can_continue>0
         !}
      ?};

::    Nie wszystko zostało wyczyszczone, dogenerowuję brakujące HARMONy
      {? _all_clear=0
      || exec('new_harm','umowy_harm',_year,HN.KAL_NAZW)
      ?};
      {? _dialog>0
      || KOMM.select()
      ?}
   ?}
?};
HN.cntx_pop();
HARMON.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\pos_create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Tworzy pozycję w harmonogramie
::       Kontekst pracy - HN
::   WE: _a - DATE - data na którą generować
::       _b - STRING - tryb przeskakiwania
::       _c - INTEGER - kierunek przeskakiwania
::       [_d] - INTEGER - [0]/1 - czy dodawać info do KOMM o nie wygenerowaniu
::       [_e] - INTEGER - [0]/1 - czy dodawać do loga info o generowaniu na siłę
::       [_f] - INTEGER - wejściowy rok - jeśli nie podany to określany na podstawie parametru _a
::       [_g] - DATE - granica 'od' którą kontrolować
::       [_h] - DATE - granica 'do' którą kontrolować
::   WY: 0 - porażka
::       1 - sukces - wygenerowano zapis
::      -1 - sukces - nie wygenerowano zapisu bo trafiło na święto albo dzien wolny, a nie włączono przeskoku
::      -2 - nie znaleziono daty w danym roku (być może przeskok nastąpił na następny dzień)
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_date:=_a;
_hop_mode:=_b;
_hop_dir:=_c;
_komm:=0;
{? var_pres('_d')=type_of(0)
|| _komm:=_d
?};
_log:=0;
{? var_pres('_e')=type_of(0)
|| _log:=_e
?};

_in_rok:=_date~1;
{? var_pres('_f')=type_of(0)
|| _in_rok:=_f
?};

_od:=~~;
{? var_pres('_g')=type_of(date())
|| _od:=_g
?};

_do:=~~;
{? var_pres('_h')=type_of(date())
|| _do:=_h
?};

_can_continue:=1;
_result:=0;
{? type_of(_od)=type_of(date()) & type_of(_do)=type_of(date())
||
:: Kontrola granic
   {? _date<_od | _date>_do
   || _can_continue:=0;
      _result:=-2;
      _msg:='Generowanie harmonogramu w dniu: %1 zakończone niepowodzeniem - data przekracza granice generowania: %2 - %3'@[$_date,$_od,$_do];
      {? _komm>0
      || exec('komm_add','umowy_harm',_msg,2)
      ?};
      _header:=1;
      {? exec('errors_present','umowy_harm',_in_rok)
      || _header:=0
      ?};
      exec('errors_add','umowy_harm',_msg,_in_rok,_header)
   ?}
?};

_ar:=_date~1;


{? _can_continue>0
||
   HARMON.cntx_psh();
   HARMON.index('HN');
   HARMON.prefix(HN.ODDZ,HN.KOD,_ar,_date~2);
   {? HARMON.first()
   ||
      _typ:='R';
      _opis:='';
      {? __KAL.get_day(_date)<>null()
      || _typ:=KAL_DEF.TYP;
         _opis:=KAL_DEF.OPIS
      ?};
      {? _typ='R' | _hop_mode='F'
      ||
::       Dzień roboczy lub na siłę
         _rule:='HARMON.D'+form(_date~3,-2)+':=\'T\';HARMON.put()';
         _result:=($_rule)();

         {? _result>0 & _hop_mode='F' & _log>0
         || _when:=exec('to_string','#tm_stamp',HARMON.tm_stamp());
            _msg:='Ręczne dodanie pozycji harmonogramu: %1 przez użytkownika: %2 (%3)'@[$_date,OPERATOR.USER().KOD,_when];
            exec('errors_add','umowy_harm',_msg,_ar,0)
         ?}
      |? _typ='W'
      ||
::       Dzień wolny
         {? _hop_mode='O'
         ||
            {? _opis<>''
            || _msg:='Przeskok harmonogramu w dniu: %1 z powodu dnia wolnego (%2).'@[$DATY.DATA,_opis]
            || _msg:='Przeskok harmonogramu w dniu: %1 z powodu dnia wolnego.'@[$DATY.DATA]
            ?};
            {? _komm>0
            || exec('komm_add','umowy_harm',_msg)
            ?};
            _header:=1;
            {? exec('errors_present','umowy_harm',_ar)
            || _header:=0
            ?};
            exec('errors_add','umowy_harm',_msg,_ar,_header);
::          !!! REKURENCJA !!!
            _result:=exec('pos_create','umowy_harm',(_date+_hop_dir),_hop_mode,_hop_dir,_komm,,_in_rok,_od,_do)
         |? _hop_mode='S'
         ||
::          Trafiło na dzień wolny, ale przekakujemy tylko święta, więc generuję
            _rule:='HARMON.D'+form(_date~3,-2)+':=\'T\';HARMON.put()';
            _result:=($_rule)()
         || _result:=-1;

            {? _opis<>''
            || _msg:='Pominięto generowanie harmonogramu w dniu: %1 z powodu dnia wolnego (%2).'@[$DATY.DATA,_opis]
            || _msg:='Pominięto generowanie harmonogramu w dniu: %1 z powodu dnia wolnego.'@[$DATY.DATA]
            ?};
            {? _komm>0
            || exec('komm_add','umowy_harm',_msg)
            ?};
            _header:=1;
            {? exec('errors_present','umowy_harm',_ar)
            || _header:=0
            ?};
            exec('errors_add','umowy_harm',_msg,_ar,_header);
            ~~
         ?}
      |? _typ='S'
      ||
::       Dzień świąteczny
         {? _hop_mode='S' | _hop_mode='O'
         ||
            {? _opis<>''
            || _msg:='Przeskok harmonogramu w dniu: %1 z powodu dnia świątecznego (%2).'@[$DATY.DATA,_opis]
            || _msg:='Przeskok harmonogramu w dniu: %1 z powodu dnia świątecznego.'@[$DATY.DATA]
            ?};
            {? _komm>0
            || exec('komm_add','umowy_harm',_msg)
            ?};
            _header:=1;
            {? exec('errors_present','umowy_harm',_ar)
            || _header:=0
            ?};
            exec('errors_add','umowy_harm',_msg,_ar,_header);
::          !!! REKURENCJA !!!
            _result:=exec('pos_create','umowy_harm',(_date+_hop_dir),_hop_mode,_hop_dir,_komm,,_in_rok,_od,_do)
         || _result:=-1;
            {? _opis<>''
            || _msg:='Pominięto generowanie harmonogramu w dniu: %1 z powodu święta (%2).'@[$DATY.DATA,_opis]
            || _msg:='Pominięto generowanie harmonogramu w dniu: %1 z powodu święta.'@[$DATY.DATA]
            ?};
            {? _komm>0
            || exec('komm_add','umowy_harm',_msg)
            ?};
            _header:=1;
            {? exec('errors_present','umowy_harm',_ar)
            || _header:=0
            ?};
            exec('errors_add','umowy_harm',_msg,_ar,_header);
            ~~
         ?}
      || _result:=0
      ?}
   || _result:=-2;
      _msg:='Przeskok harmonogramu w dniu: %1 zakończony niepowodzeniem - nie znaleziono dnia w roku: %2'@[$_date,$_ar];
      {? _komm>0
      || exec('komm_add','umowy_harm',_msg,2)
      ?};
      _header:=1;
      {? exec('errors_present','umowy_harm',_in_rok)
      || _header:=0
      ?};
      exec('errors_add','umowy_harm',_msg,_in_rok,_header);
      ~~
   ?};
   HARMON.cntx_pop();
   HARMON.get()
?};
_result


\pos_delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Usuwa pozycję w harmonogramie
::       Kontekst pracy - HN
::   WE: _a - DATE - data na którą usunąć
::       _b - INTEGER - [0]/1 - czy dodawać info do loga
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_date:=_a;

_log:=0;
{? var_pres('_b')=type_of(0)
|| _log:=_b
?};

_ar:=_date~1;
_result:=1;
HARMON.cntx_psh();
HARMON.index('HN');
HARMON.prefix(HN.ODDZ,HN.KOD,_ar,_date~2);
{? HARMON.first()
|| _rule:='HARMON.D'+form(_date~3,-2);
   _value:=($_rule)();
   _value:=form(_value);
   {? _value<>'' & _value*'~'=0
   || _rule:='HARMON.D'+form(_date~3,-2)+':=\'\';HARMON.put()';
      _result:=($_rule)()
   ?};
   {? _result>0 & _log>0
   ||
      _when:=exec('to_string','#tm_stamp',HARMON.tm_stamp());
      _msg:='Ręczne usunięcie pozycji harmonogramu: %1 przez użytkownika: %2 (%3)'@[$_date,OPERATOR.USER().KOD,_when];
      exec('errors_add','umowy_harm',_msg,_ar,0)
   ?}
|| _result:=0
?};
HARMON.cntx_pop();
HARMON.get();
_result


\pos_present
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Sprawdza czy w danym dniu istnieje pozycja w harmonogramie
::   WE: _a - DATE - data na którą sprawdzić
::   WY: 0 - brak pozycji
::       1 - jest pozycja
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_date:=_a;
_ar:=_date~1;
_result:=0;

HARMON.cntx_psh();
HARMON.index('HN');
HARMON.prefix(HN.ODDZ,HN.KOD,_ar,_date~2);
{? HARMON.first()
|| _rule:='HARMON.D'+form(_date~3,-2);
   _value:=($_rule)();
   _value:=form(_value);
   {? _value<>'' & _value*'~'=0
   || _result:=1
   ?}
|| _result:=0
?};
HARMON.cntx_pop();
_result


\chk_generate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: kontrola parametrow podczas wypelniania harmonogramu
::  OLD: \chk_uzu/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
_result:='';
{? _result='' & HA.OD_D~1<>HARMON.ROK
||
   FUN.info('Należy podać datę z %1 roku.'@[$HARMON.ROK]);
   _result:='OD_D'
?};
{? _result='' & HA.DO_D~1<>HARMON.ROK
||
   FUN.info('Należy podać datę z %1 roku.'@[$HARMON.ROK]);
   _result:='DO_D'
?};
{? _result='' & HA.OD_D>HA.DO_D
||
   FUN.info('Niewłaściwy zakres dat.'@);
   _result:='OD_D'
?};
{? _result='' & HA.D1='N' & HA.D2='N' & HA.D3='N' & HA.D4='N' & HA.D5='N' & HA.D6='N' & HA.D7='N'
|| FUN.emsg('Nie wybrano żadnego dnia tygodnia.'@);
   _result:='D1'
?};

{? _result='' & HA.D6='T'
|| {? FUN.ask('Ustawiono generowanie harmonogramu w sobotę. Czy na pewno kontynuować?'@)=0
   || _result:='D6'
   ?}
?};
{? _result='' & HA.D7='T'
|| {? FUN.ask('Ustawiono generowanie harmonogramu w niedzielę. Czy na pewno kontynuować?'@)=0
   || _result:='D7'
   ?}
?};
_result


\h_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: usuwanie pola na caly rok
::  OLD: \h_usun/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------

undefine();
define('data',date(HARMON.ROK,HARMON.NR,1),'Usuwany dzień'@,,10);
define('dzien'@,7,'Co ile dni'@,,,2,0);
{? def_edit("exec('chk_def','umowy_harm')",'Podaj parametry'@)
||
   HARMON.find_key(DEFINE.data~2);
   _wart:=$('HARMON.D'+form(DEFINE.data~3,-2));
   _war:=_wart();
   _data:=DEFINE.data;

   {? FUN.ask('Usunąć wpisy w harmonogramie co %1 dni, począwszy od %2?'@[form(DEFINE.dzien),form(DEFINE.data)])
   ||
      HARMON.find_key(1);
      _memo_wy:=0;
      _memo:=fopen(null,'uw',,,1);

      {!
      |? _data<=date(HARMON.ROK,12,0)
      |!
         HARMON.find_key(_data~2);
         _akr:='D'+form(_data~3,-2);
         _pole2:=$('HARMON.'+_akr);
         {? exec('harmon_fields_be','umowy_harm',_akr,_pole2())
         ||
            _pole:=$('HARMON.D'+form(_data~3,-2)+':=''  ''');
            _pole();
            HARMON.put()
         ||
            {? _memo_wy=0
            ||
               _user:=gsub(10+username(),'~',' ');
               _str:='Usuwano dnia '+form(date)+' przez '+_user;
               {? _memo.is_open || fwrite(_memo,_str) ?}
            ?};
            {? form(_pole2())<>''
            ||
               _str:=form(_data)+' - '+{? _pole2()=HA.SW     || 'dzien z tabeli świąt'
                                       |? _pole2()=HA.NIE_SW || 'dzien z tabeli świąt - niedziela'
                                       |? _pole2()=HA.NIE    || 'niedziela'
                                                             || 'wykorzystana w umowie'
                                       ?};
               {? _memo.is_open || fwrite(_memo,_str) ?};
               _memo_wy:=1
            ?}
         ?};
         _data+=DEFINE.dzien
      !};

      HARMON.find_key(1);
      {? _memo.is_open || HARMON.memo_put(_memo,'BL') ?};
      {? _memo_wy || HARMON.memo_get(,'BL'); HARMON.memo_vie(,'BL') ?}
   ?}
?};
HARMON.find_key(1);
''


\h_blad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: wyswietlenie bladow powstalych podczas kopiowania pola w harmonogramie
::  OLD: \h_blad/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
HARMON.cntx_psh();
HARMON.find_key(1);
HARMON.memo_get(,'BL');
HARMON.memo_vie(,'BL');
HARMON.cntx_pop();
''


\spr_d_ha
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Kuba [2009]
:: OPIS: Przed popraw na harmonogramie
::  OLD: \spr_d_ha/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:=0;
{? exec('bef_upsy','umowy_harm')=0
||
   _od:=date(HARMON.ROK,HARMON.NR,1);
   _do:=date(HARMON.ROK,HARMON.NR,0);
   _wyn:=0;
   {! _i:=#_od..#_do |! _wyn+=exec('hg_sp_dni','umowy_zlecenia',ST.ODDZ,#_i) !};
   {? _wyn<>0
   || FUN.info('Harmonogram wykorzystywany w umowie.\n'
               'Zostały wygenerowane zgłoszenia.\n'
               'Poprawianie harmonogramu niemożliwe.'@)
   ?}
?};
~_wyn


\h_kopiuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: kopiowanie pola na caly rok
::  OLD: \h_kopiuj/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------

_memo:=0;
undefine();
define('data',date(HARMON.ROK,HARMON.NR,1),'Kopiowany dzień'@,,10);
define('dzien'@,7,'co ile dni'@,,,3,0);
HARMON.cntx_psh();
{? def_edit("exec('chk_def','umowy_harm')",'Podaj parametry'@)
|| HARMON.find_key(1);
   _memo_wy:=0;
   _memo:=fopen(null,'uw',,,1);
   HARMON.find_key(DEFINE.data~2);
   _wart:=$('HARMON.D'+form(DEFINE.data~3,-2));
   _war:=_wart();
   _data:=DEFINE.data;
   {? _war<>'  '
   || {? FUN.ask('Skopiować %1 co %2 dni?'@[_war,form(DEFINE.dzien)])
      ||
         {!
         |?
            _data<=date(HARMON.ROK,12,0) |!
            HARMON.find_key(_data~2);
            _akr:='D'+form(_data~3,-2);
            _pole2:=$('HARMON.'+_akr);
            {? exec('harmon_fields_be','umowy_harm',_akr,_pole2())
            || _pole:=$('HARMON.D'+form(_data~3,-2)+':='''+_war+'''');
               _pole()
            ||
               {? _memo_wy=0
               || _user:=gsub(10+username(),'~',' ');
                 _str:='Kopiowano dnia '+form(date)+' przez '+_user;
                 {? _memo.is_open || fwrite(_memo,_str) ?}
               ?};
               _str:=form(_data)+' - '+{? _pole2()=HA.SW     || 'dzien z tabeli świąt'
                                       |? _pole2()=HA.NIE_SW || 'dzien z tabeli świąt - niedziela'
                                       |? _pole2()=HA.NIE    || 'niedziela'
                                                             || 'generowano zgłoszenia'
                                       ?};
               {? _memo.is_open || fwrite(_memo,_str) ?};
               _memo_wy:=1
            ?};
            HARMON.put();
            _data+=DEFINE.dzien
         !};
         HARMON.find_key(1);
         {? _memo.is_open || HARMON.memo_put(_memo,'BL') ?};
         {? _memo_wy || HARMON.memo_get(,'BL'); HARMON.memo_vie(,'BL') ?}
      ?}
   || FUN.info('Brak wartości dla kopiowanego pola.'@)
   ?}
?};
HARMON.cntx_pop();
HARMON.get();
''


\chk_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: sprawdza dane przy kopiowaniu pola w harmonogramie
::  OLD: \chk_def/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:=1;
DEFINE.dzien:=DEFINE.dzien$0;
{? DEFINE.data~1<HARMON.ROK
|| FUN.info('Zbyt stary rok.'@);_wyn:=0
|? DEFINE.data~1>HARMON.ROK
|| FUN.info('Zbyt odlegly rok.'@);_wyn:=0
|| 1
?};
{? DEFINE.dzien<=0 | DEFINE.dzien>365
|| FUN.info('Nieprawidłowa ilość dni.'@);_wyn:=0
?};
{? _wyn=1
||
   _hn:=HARMON.HN;
   HARMON.cntx_psh();
   HARMON.index('HN');
   HARMON.prefix(ST.ODDZ,_hn,DEFINE.data~1,DEFINE.data~2);
   {? HARMON.first()
   ||
      _akr:='D'+form(DEFINE.data~3,-2);_pole2:=$('HARMON.'+_akr);
      {? _pole2()=HA.NIE | _pole2()=HA.SW | _pole2()=HA.NIE_SW | _pole2()=HA.BRAK
      || FUN.info('Wybrany dzień jest ustalony wg kalendarza.\nZmień datę.'@); _wyn:=0
      ?}
   ?};
   HARMON.cntx_pop()
?};
_wyn


\h_kop_rk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: kopiowanie harmonogramu na nastepny rok
::  OLD: \h_kop_rk/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:=0;
{? exec('chk_okr','umowy_harm',HARMON.ROK+1)
||
   _memo:=0;
   undefine();
   define('h0',~~,'Wybierz dzień z bieżącego harmonogramu.'@);
   define('h3',~~,'');
   define('data',date(HARMON.ROK,12,0),'Kopiowany dzień'@,,10);
   define('dzien'@,7,'Co ile dni'@,,,3,0);
   HARMON.cntx_psh();
   {? def_edit("exec('chk_def','umowy_harm')",'Podaj parametry'@)
   ||
      HARMON.find_key(DEFINE.data~2);
      _wart:=$('HARMON.D'+form(DEFINE.data~3,-2));
      _war:=_wart();

      HARMON.index('HN');
      HARMON.prefix(HN.ODDZ,HN.KOD,HARMON.ROK+1);
      HARMON.hdr_sel();
      {? ~HARMON.first
      || exec('new_harm','umowy_harm',HARMON.ROK+1,HN.KAL_NAZW)
      ?};
      HARMON.find_key(1);

      _data:=DEFINE.data+DEFINE.dzien;

      _memo_wy:=0;
      _memo:=fopen(null,'uw',,,1);

      {? form(_war)<>''
      ||
         {? FUN.ask('Skopiować %1 co %2 dni?'@[_war,form(DEFINE.dzien)])
         ||
            {!
            |? _data<=date(HARMON.ROK,12,0)
            |!
               {? _data~1=HARMON.ROK
               ||
                  HARMON.find_key(_data~2);
                  _akr:='D'+form(_data~3,-2);
                  _pole2:=$('HARMON.'+_akr);
                  {? exec('harmon_fields_be','umowy_harm',_akr,_pole2())
                  ||
                     _pole:=$('HARMON.D'+form(_data~3,-2)+':='''+_war+'''');
                     _pole()
                  ||
                     {? _memo_wy=0
                     || _user:=gsub(10+username(),'~',' ');
                        _str:='Kopiowano dnia '+form(date)+' przez '+_user;
                        {? _memo.is_open || fwrite(_memo,_str) ?}
                     ?};
                     _str:=form(_data)+' - '+{? _pole2()=HA.SW     || 'dzien z tabeli świąt'
                                             |? _pole2()=HA.NIE_SW || 'dzien z tabeli świąt - niedziela'
                                             |? _pole2()=HA.NIE    || 'niedziela'
                                                                   || 'generowano zgłoszenia'
                                             ?};
                     {? _memo.is_open || fwrite(_memo,_str) ?};
                     _memo_wy:=1
                  ?};
                  HARMON.put()
               ?};
               _data+=DEFINE.dzien
            !};
            HARMON.find_key(1);
            {? _memo.is_open || HARMON.memo_put(_memo,'BL') ?};
            {? _memo_wy || HARMON.memo_get(,'BL'); HARMON.memo_vie(,'BL') ?}
         ?}
      ||
         FUN.info('Brak wartości dla kopiowanego pola.'@)
      ?}
   ?};
   HARMON.cntx_pop();
   HARMON.get()
|| FUN.info('Rok niezgodny z założonymi w okresach obrachunkowych.'@)
?};
''


\chk_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Kuba [2009]
:: OPIS: Sprawdzanie czy HA.ROK jest zgodne z zalozonymi okresami.
::   WE: _a - HA.ROK
::  OLD: \chk_okr/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:=0;
OKR.cntx_psh;
OKR.clear;
OKR.index('OKR');
OKR.prefix(REF.FIRMA,_a);
{? OKR.first
|| _wyn:=1
|| _wyn:=0
?};
OKR.cntx_pop;
_wyn


\chk_zharm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: obsluga zmiennej wyswietlającej harmonogram
::   WE: [_a] - czy kontrolowac zgodnosc typow
::  OLD: \chk_zharm/um.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
_wyn:=0;
_rule:='';
_acr:=exec('get_acronym','#table',cur_tab(1,1),'_HN');
{? _acr<>''
|| _rule:='_val:=_a;cur_tab(1,1).'+_acr+':=_val'
?};
{? _rule<>''
|| _rule:=$_rule;
   {? UMO.HNK<>''
   || HN.cntx_psh();
      HN.index('ODDZ');
      HN.prefix(ST.ODDZ,UMO.HNK,UMO.HNK);
      {? HN.first()
      || _wyn:=1;
         UMO.HNK:=HN.KOD;
         _rule(HN.ref())
      || FUN.info('Brak harmonogramu z kodem %1.'@[form(UMO.HNK)])
      ?};
      HN.cntx_pop()
   || UMO.HNK:='';
      _rule(null());
      _wyn:=1
   ?}
?};
_wyn


\harm_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: sprawdza czy dla podanego harmonogramu jest w bież. roku
::       jakiś zapis ... tzn czy nie jest pusty
::   WE: _a - ref harmonogramu
::   WY: 1- jest 0-nie ma
::  OLD: \harm_spr/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_data:=date(ST.AR,1,1);
HN.cntx_psh();
HN.clear();
{? HN.seek(_a)
||
   {!
   |?
      _wyn:=exec('pos_present','umowy_harm',_data);
      _data+=1;
      _data<=date(ST.AR,12,0) & _wyn=0
   !}
?};
HN.cntx_pop();
_wyn


\spr_kodh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: dla podanego kodu z harmonogramu zwraca ref z odpowiedniej tabeli
::   WE: _a - typ harmonogramu: 1 - samochody, 2 - brygady, 3 - pracowicy
::       _b - kod - string z harmonogramu
::   WY: 0/1
::  OLD: \spr_kodh/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? _a=1
|| SAM.index('ZLP');
   SAM.prefix(ST.ODDZ,_b,_b);
   {? SAM.first() || _wyn:=SAM.ref() ?}
|? _a=2
|| ZLBR.index('ODDZ');
   ZLBR.prefix(ST.ODDZ,_b,_b);
   {? ZLBR.first || _wyn:=ZLBR.ref() ?}
|? _a=3
|| PRACW.index('H');
   PRACW.prefix(ST.ODDZ,_b);
   {? PRACW.first || _wyn:=PRACW.ref() ?}
|? _a=5
|| REJO.index('REJ');
   REJO.prefix(ST.ODDZ,_b);
   {? REJO.first || _wyn:=REJO.ref() ?}
?};
_wyn


\tab_week
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelę tymczasową do widoku tygodniowego
::   WY: tab_tmp
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1
            ,'NR_TYG','STRING[30]','Numer tygodnia'
            ,'HARMON','INTEGER','Ref harmonogramu'

            ,'D1_DATE','DATE','Data'
            ,'D1_NAME','STRING[35]','Opis'
            ,'D1_COL','STRING[11]','Kolor'
            ,'D1_POS','STRING[1]','Czy jest pozycja?'
            ,'D1_EDIT','STRING[1]','Czy można edytować?'

            ,'D2_DATE','DATE','Data'
            ,'D2_NAME','STRING[35]','Opis'
            ,'D2_COL','STRING[11]','Kolor'
            ,'D2_POS','STRING[1]','Czy jest pozycja?'
            ,'D2_EDIT','STRING[1]','Czy można edytować?'

            ,'D3_DATE','DATE','Data'
            ,'D3_NAME','STRING[35]','Opis'
            ,'D3_COL','STRING[11]','Kolor'
            ,'D3_POS','STRING[1]','Czy jest pozycja?'
            ,'D3_EDIT','STRING[1]','Czy można edytować?'

            ,'D4_DATE','DATE','Data'
            ,'D4_NAME','STRING[35]','Opis'
            ,'D4_COL','STRING[11]','Kolor'
            ,'D4_POS','STRING[1]','Czy jest pozycja?'
            ,'D4_EDIT','STRING[1]','Czy można edytować?'

            ,'D5_DATE','DATE','Data'
            ,'D5_NAME','STRING[35]','Opis'
            ,'D5_COL','STRING[11]','Kolor'
            ,'D5_POS','STRING[1]','Czy jest pozycja?'
            ,'D5_EDIT','STRING[1]','Czy można edytować?'

            ,'D6_DATE','DATE','Data'
            ,'D6_NAME','STRING[35]','Opis'
            ,'D6_COL','STRING[11]','Kolor'
            ,'D6_POS','STRING[1]','Czy jest pozycja?'
            ,'D6_EDIT','STRING[1]','Czy można edytować?'

            ,'D7_DATE','DATE','Data'
            ,'D7_NAME','STRING[35]','Opis'
            ,'D7_COL','STRING[11]','Kolor'
            ,'D7_POS','STRING[1]','Czy jest pozycja?'
            ,'D7_EDIT','STRING[1]','Czy można edytować?'

            ,'OD','DATE','Od daty'
            ,'DO','DATE','Do daty');

{! _it:=1..7
|! _fml:='
      _tab:=cur_tab(1,1);
      {? _tab.D'+$_it+'_POS=\'~\'
      || 0
      || \'0:0:0,\'+cur_tab(1,1).D'+$_it+'_COL
      ?}
   ';
   _tab.fld_fml('D%1_POS'[$_it],'BEFORE_DISPLAY',$_fml)
!};

{? exec('mobile','#system')
|| {! _it:=1..7
   |! _fml:='
         _env:=params_get().env_harm;
         _tab:=cur_tab(1,1);
         {? _tab.D'+$_it+'_POS=\'~\'
         || 0
         || cur_tab(1,1).D'+$_it+'_COL+\',\'
         ?}
      ';
      _tab.fld_fml('D%1_NAME'[$_it],'BEFORE_DISPLAY',$_fml)
   !}
||
   {! _it:=1..7
   |! _fml:='
         _env:=params_get().env_harm;
         _tab:=cur_tab(1,1);
         {? _tab.D'+$_it+'_POS=\'~\'
         || 0
         || {? _env.SEL_WEEK>0
            || cur_tab(1,1).D'+$_it+'_COL+\',\'+cur_tab(1,1).D'+$_it+'_COL
            || \'0:0:0,\'+cur_tab(1,1).D'+$_it+'_COL
            ?}
         ?}
      ';
      _tab.fld_fml('D%1_NAME'[$_it],'BEFORE_DISPLAY',$_fml)
   !}
?};

{! _it:=1..7
|! _fml:=$('cur_tab(1,1).D'+$_it+'_EDIT=\'T\'');
   _tab.fld_fml('D%1_POS'[$_it],'BEFORE_EDIT',_fml)
!};

_fml:="
   _result:='';
   {? fld()=''
   || _result:='empty=1,'
   ?};
   _result+='alignment=left';
   _result
";
{! _it:=1..7
|! _tab.fld_fml('D%1_NAME'[$_it],'DISPLAY_FORMAT',_fml)
!};

_fml:="
   _result:='';
   {? fld()=''
   || _result:='empty=1,'
   ?};
   _result+='alignment=left';
   _result
";
{! _it:=1..7
|! _fml:=$('_tab:=cur_tab(1,1); {? _tab.D'+$_it+'_POS=\'~\' || \'empty=1\' || \'empty=0\'?}');
   _tab.fld_fml('D%1_POS'[$_it],'DISPLAY_FORMAT',_fml)
!};

{! _it:=1..7
|! _fml:=$('_tab:=cur_tab(1,1); {? _tab.D'+$_it+'_POS=\'~\' || \'empty=1\' || \'empty=0\'?}');
   _tab.fld_fml('D%1_NAME'[$_it],'DISPLAY_FORMAT',_fml)
!};

_tab


\win_week
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Zwraca okienko tygodni
::   WE: [_a] - INTEGER - 0/[1] - czy dostępne akcje edycyjne?
::   WY: STRING - akronim utworzonego okienka
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_editable:=1;
{? var_pres('_a')=type_of(0)
|| _editable:=_a
?};

_tab:=_env.TAB_WEEK;

_title:='Widok kalendarza';
_wer:=_tab.mk_sel(_title,'P',0,'#hnweekold',1,1,,,'U');
_tab.win_fld(_wer,,'NR_TYG',,,'11,11,11',,,'Tydzień'@,0,,,,,,,'mobile_visible=1,mobile_header=1');

:: wyłączenie checkboxów do zaznaczania
_tab.win_sopt(_wer,'select_record_checkbox=0');

{? exec('mobile','#system')
||
:: Widok mobilny
   {! _it:=1..7
   |!
::      _tab.win_fld(_wer,,'D%1_NAME'[$_it],,,-2,,,_env.DAYS_SHORT[_it],0,,,,,,,'mobile_visible=1');
      _tab.win_fld(_wer,,'D%1_NAME'[$_it],,,-2,,,' ',1,,,,,,,'mobile_visible=1');
      _fml:='
         _tab:=cur_tab(1,1);
         {? _tab.D%1_POS=\'T\'
         || \'xwin16.png:179\'
         || \'xwin16.png:180\'
         ?}
      '[$_it];
      _tab.win_fml(_wer,,'D%1_NAME'[$_it],,'ICON_BEFORE',$_fml)
   !}
||
:: Widok desktop
   {! _it:=1..7
   |! _tab.win_fld(_wer,,'D%1_POS'[$_it] ,,,'3,3,3',,,_env.DAYS_SHORT[_it],0,,2,,"\'T\'","\'N\'","\'~\'",'mobile_visible=1');
      _tab.win_fld(_wer,,'D%1_NAME'[$_it],,,-2,,,' '@,0)
   !}
?};

_fml:="
   _tab:=cur_tab(1,1);
   _editable:=0;
   {! _it:=1..7
   |? _editable=0
   |! {? ($('_tab:=_a;_tab.D'+$_it+'_EDIT'))(_tab)='T'
      || _editable:=1
      ?}
   !};
   {? _editable>0
   || 'xwin16.png:110'
   || 'xwin16.png:157'
   ?}
";
_tab.win_fml(_wer,,'NR_TYG',,'ICON_BEFORE',_fml);

_fml:="
   params_set(params_get());
   _env:=params_get().env_harm;
   exec('week_rok_action','umowy_harm')
";
_tab.win_act(_wer,1,'Formuła','Rok'@@,,,_fml,,,,,,'R',,'target=window');
_tab.win_act(_wer,0,'Formuła','Rok'@@,,,_fml,,,,,,'R',,'target=window');

{? _editable>0
||
   _fml:="params_exec('week_edit','umowy_harm')";
   _tab.win_act(_wer,,'Formuła','Popraw'@@,,,_fml,,1,,,,,,'target=record');

   _fml:="
      params_exec('action_generate','!lum_haw_dpha')
   ";
   _tab.win_act(_wer,,'Formuła','Generuj'@@,,,_fml,,,,,,'G',,'target=window');
   task_attach('LUM_HAW_DPHA');

   _fml:="
      params_exec('action_clear','!lum_haw_dpha')
   ";
   _tab.win_act(_wer,,'Formuła','Wyczyść'@@,,,_fml,,,,,,'W',,'target=window');
   task_attach('LUM_HAW_DPHA');

   _fml:="
      params_exec('action_zakoncz','!lum_haw_dpha')
   ";
   _tab.win_act(_wer,,'Formuła','Zakończ'@@,,,_fml,,,,,,'Z',,'target=window');
   task_attach('LUM_HAW_DPHA')
?};

{? exec('mobile','#system')=0
||
   _fml:="
      params_exec('select_harmon','umowy_harm')
   ";
   _tab.win_act(_wer,,'Formuła','Wi&dok roczny'@@,,,_fml,,,,,,'D',,'target=window')
?};

_fml:="
   params_exec('hn_legend_action','umowy_harm')
";
_tab.win_act(_wer,,'Formuła','Legenda'@@,,,_fml,,,,,,'L',,'target=window');


_fml:="
   params_set(params_get());
   _env:=params_get().env_harm;
   _env.SEL_WEEK:=_a
";
_tab.win_act(_wer,,'Rekord',,,,_fml);


_wer


\load_week
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Ładuje widok tygodniowy
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_tab:=_env.TAB_WEEK;
_tab.cntx_psh();
_tab.prefix();
_selected:=_tab.NR_TYG;
_tab.erase();
HARMON.cntx_psh();
HARMON.index('HN');
HARMON.prefix(HN.ODDZ,HN.KOD,_env.AR);
{? HARMON.first
||
   {!
   |?
::    sprawdzanie miesiecy
      _tab.prefix();
      {! _ii:=1 .. date(HARMON.ROK,HARMON.NR,0)~3
      |!
         _nr_tyg:=exec('week','umowy_harm',date(HARMON.ROK,HARMON.NR,_ii));
         _tydzien:=form(_nr_tyg,-2);
         {? ~_tab.find_key(_tydzien)
         || _tab.blank();
            _tab.HARMON:=#HARMON.ref;

            {! _it:=1..7
            |! ($('_tab:=_a;_tab.D'+$_it+'_DATE:=_b'))(_tab,date(0,0,0))
            !};
            {! _it:=1..7
            |! ($('_tab:=_a;_tab.D'+$_it+'_NAME:=_b'))(_tab,'')
            !};
            {! _it:=1..7
            |! ($('_tab:=_a;_tab.D'+$_it+'_EDIT:=_b'))(_tab,'N')
            !};
            {! _it:=1..7
            |! ($('_tab:=_a;_tab.D'+$_it+'_POS:=_b'))(_tab,'~')
            !};
            _tab.NR_TYG:=_tydzien;
            _tab.add()
         ?};
         _date:=date(HARMON.ROK,HARMON.NR,_ii);
         _acr:='D%1'[$(_date~4)];

         ($('_tab:=_a;_tab.'+_acr+'_DATE'))(_tab):=_date;
         _color:='';
         {? _date~4=6
         || _color:=_env.LIST_COLOR_FREE
         ?};
         {? _date~4=7
         || _color:=_env.LIST_COLOR_HOLY
         ?};

         {? exec('mobile','#system')
         || _opis:=_env.DAYS_SHORT[_date~4]+': '+$_date
         || _opis:=$_date
         ?};
         {? _env.KAL_STD>0
         || {? __KAL.get_day(_date)<>null()
            || {? KAL_DEF.TYP='S'
               || {? KAL_DEF.OPIS='niedziela'
                  || ~~
                  || {? exec('mobile','#system')
                     || _opis:=_env.DAYS_SHORT[_date~4]+': '+KAL_DEF.OPIS+' ('+$_date+')'
                     || _opis:=KAL_DEF.OPIS+' ('+$_date+')'
                     ?}
                  ?};
                  _color:=_env.LIST_COLOR_HOLY
               ?}
            ?}
         ?};
         {? exec('pos_present','umowy_harm',_date)
         || ($('_tab:=_a;_tab.'+_acr+'_POS'))(_tab):='T';
            _color:=_env.LIST_COLOR_POS
         || ($('_tab:=_a;_tab.'+_acr+'_POS'))(_tab):='N'
         ?};

         {? _color<>''
         || ($('_tab:=_a;_tab.'+_acr+'_COL'))(_tab):=_color
         ?};
         {? _opis<>''
         || ($('_tab:=_a;_tab.'+_acr+'_NAME'))(_tab):=_opis
         ?};

         _edit:='N';
         {? exec('editable','umowy_harm',_date)>0
         || _edit:='T'
         ?};
         ($('_tab:=_a;_tab.'+_acr+'_EDIT'))(_tab):=_edit;

         {? exec('mobile','#system')
         || _startd:=_tab.D1_DATE;
            {? _startd=date(0,0,0)
            || _startd:=date(HARMON.ROK,1,1)
            ?};
            _endd:=_tab.D7_DATE;
            {? _endd=date(0,0,0)
            || _endd:=date(HARMON.ROK,12,31)
            ?};
            _tab.NR_TYG:=_tydzien+' ('+$_startd+' - '+$_endd+')'
         ?};
         _tab.put()
      !};
      HARMON.next()
   !};
:: zamkniecie roku
   _tab.DO:=date(HARMON.ROK,HARMON.NR,0);
   _tab.put()
?};
HARMON.cntx_pop();

_view:=null();
{? _selected<>''
|| _tab.cntx_psh();
   _tab.prefix(_selected);
   {? _tab.first()
   || _view:=_tab.ref()
   ?};
   _tab.cntx_pop()
?};
_tab.cntx_pop();
_tab.prefix();
{? _view<>null()
|| _tab.seek(_view)
?};
_tab.get();
~~


\week_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Akcja popraw w oknie kalendarza na interm
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_tab:=_env.TAB_WEEK;

_can_continue:=1;

{? exec('is_ended','umowy_harm',,_env.AR)>0
|| _can_continue:=0;
   _what:=exec('HN','#to_string');
   FUN.emsg('Edycja harmonogramu: %1 w roku: %2 została już zakończona. Akcja niedozwolona.'@[_what,$_env.AR])
?};

{? _can_continue>0
|| _can_continue:=exec('chk_role','#b__box',OPERATOR.USER,'LUM_HAW_DPHA');
   {? _can_continue=0
   || FUN.emsg('Brak uprawnień do redagowania harmonogramu.'@)
   ?}
?};

{? _can_continue>0
||
   _editable:=1;
   {! _it:=1..7
   |? _editable=0
   |! {? ($('_tab:=_a;_tab.D'+$_it+'_EDIT'))(_tab)='T'
      || _editable:=1
      ?}
   !};
   {? _editable=0
   || _can_continue:=0;
      _msg:='Dla okresu: %1 wygenerowano już zgłoszenia. Akcja niedozwolona.'@[$_tab.D1_DATE+' - '+$_tab.D7_DATE];
      FUN.emsg(_msg)
   ?}
?};

{? _can_continue>0
||
   _red:=_tab.mk_edit('Redakcja kalendarza'@,0,'#tabweekedit',,,'normal');

   {! _it:=1..7
   |! _name:='%1'[_env.DAYS[_it]];
      _label:=($('_tab:=_a;_tab.D'+$_it+'_NAME'))(_tab);
      _options:='left_label=1,check_label=%1'[_label];
      _tab.win_efld(_red,,'D%1_POS'[$_it],,,,,,_name,,,'check-box',_options,"\'T\'","\'N\'")
   !};
   exec('ok_esc','#window',_tab,_red);

   _tab.win_edit(_red);

   {? _tab.edit()
   ||

      {! _it:=1..7
      |! _editable:=($('_tab:=_a;_tab.D'+$_it+'_EDIT'))(_tab)='T';
         _value:=($('_tab:=_a;_tab.D'+$_it+'_POS'))(_tab);
         _date:=($('_tab:=_a;_tab.D'+$_it+'_DATE'))(_tab);
         {? _editable>0
         || {? _value='T'
            || _can_continue:=exec('pos_create','umowy_harm',_date,'F',1,,1)
            |? _value='N'
            || _can_continue:=exec('pos_delete','umowy_harm',_date,1)
            ?}
         ?}
      !};
      {? _can_continue<>0
      || _env.RELOAD:=1;
         grp_disp(HN,_env.WIN_HN,1)
      ?}
   ?}
?};
~~


\week_rok_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Akcja Rok w widoku kalendarza dla interm
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_tab:=exec('combo_rok_fill','umowy_harm');

_array:=obj_new(_tab.size());
_it:=0;
{? _tab.first()
|| {!
   |? _it+=1;
      _array[_it]:=_tab.ROK;
      _tab.next()
   !}
?};

_rok:=exec('edit_radiobutton','#edit',$_env.AR,'Rok'@,_array,_array);
{? type_of(_rok)=type_of('')
|| _year:=#_rok;
   {? _env.AR<>_year
   || _env.AR:=_year;
      _env.RELOAD:=1;

      {? _env.F3_MODE>0
      || exec('grp_disp_f3','umowy_harm')
      |? _env.ONE_MODE>0
      || exec('load_week','umowy_harm')
      || grp_disp(HN,_env.WIN_HN,1)
      ?};

::      {? _env.F3_MODE>0
::      || exec('grp_disp_f3','umowy_harm');
::         _env.RELOAD:=0;
::         ~~
::      |? _env.ONE_MODE>0
::      || exec('load_one','umowy_harm')
::      || grp_disp(HN,_env.WIN_HN,1)
::      ?};

      ~~
   ?}
?};
~~


\load_months
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Ładuje miesiące
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_tab:=_env.TAB_CTR_MONTH;
{! _it:=1..12
|!
   _tab.blank();
   _tab.ID:=form(_it,-2);
   _tab.DESC:=_env.MONTHS[_it];
   _tab.TOOLTIP:=_env.TAB_CTR_MONTH.DESC;
   _tab.EDITABLE:=exec('editable','umowy_harm',date(_env.AR,_it,1));
   {? _tab.EDITABLE>0
   || _tab.ICON:='110'
   || _tab.ICON:='157'
   ?};
   _tab.add();
   ~~
!};
~~


\months_reload
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Sprawdza czy się zmienił status HGENa na podstawie aktualnie załadowanych miesięcy
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_tab:=_env.TAB_CTR_MONTH;

_can_continue:=1;
HGEN.cntx_psh();
HGEN.index('ORM');
{? _tab.first()
|| {!
   |? _editable:=exec('editable','umowy_harm',date(_env.AR,#_tab.ID,1));
      {? _editable<>_tab.EDITABLE
      || _env.RELOAD:=1;
         _env.ROK_HEAD_LOADED:=0;
         _env.CAL_HEAD_LOADED:=0;
         _env.CAL_LOADED_ROK:=0;
         _env.CAL_LOADED_CAL:=0;
         _can_continue:=0
      ?};
      _tab.next() & _can_continue>0
   !}
?};
HGEN.cntx_pop();
~~


\tab_calendar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca definicję tabeli tymczasowej dla kontrolek kalendarza
::   WE: _a - _env - srodowisko - wynik działąnia exec('env','umowy_harm')
::   WY: tab_tmp
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=tab_tmp(1
:: 'POLE','TYP','Nazwa w oknie',
   ,'ID','STRING[20]','Identyfikator'
   ,'PARENT','STRING[20]','ID Rodzica'
   ,'DESC','STRING[255]','Nazwa wyświetlana'
   ,'TOOLTIP','STRING[255]','Dymek'
   ,'COL_BCK','STRING[20]','Kolor tła'
   ,'COL_TXT','STRING[20]','Kolor tekstu'
   ,'DAY','STRING[20]','Dzień tygodnia'
   ,'MONTH','STRING[10]','Miesiąc w zapisie rzymskim'
   ,'BOR_SIZE','INTEGER','Rozmiar ramki'
   ,'BOR_COL','STRING[20]','Kolor ramki'
   ,'HN_KOD','STRING[100]','Kod harmongramu'
   ,'COL_ID','STRING[100]','Identyfikator kolumny'
   ,'ICON','STRING[5]','Numer ikony'
   ,'EDITABLE','INTEGER','Czy edytowalne?'
);
_tab


\tab_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca definicję tabeli tymczasowej - odwzorowanie tabeli HN
::   WY: tab_tmp
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(7
::      Żródło pochodzenia
       ,'SRC'     ,'STRING[40]' ,'Źródło'
::      Czy aktywny?
       ,'AKT'     ,'STRING[1]'  ,'Aktywny?'
::      Status rejestracji
       ,'STAT_REJ','STRING[1]'  ,'Status rejestracji'
::      Kod harmonogramu
       ,'KOD'     ,'STRING[10]' ,'Kod'
::      Miasto
       ,'MIASTO'  ,'STRING[100]','Miasto'
::      Ulica
       ,'ULICA'   ,'STRING[150]','Ulica'
::      Numer posesji
       ,'NR_POS'  ,'STRING[100]','Numer posesji'
::      Numer
       ,'NR'      ,'INTEGER'    ,'Numer'
::      Nazwa harmonogramu
       ,'NAZ'     ,'STRING[40]' ,'Nazwa'
::      Oddział
       ,'ODDZ'    ,'STRING[1]'  ,'Oddział'
::      SQL Ref HN
       ,'HN_REF'  ,'STRING[16]'  ,'SQL Ref'
       );
_tab


\win_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca definicje okienka dla tabelki HN wyświetlanej na F3
::   WE: _a - _env - srodowisko - wynik działania exec('env','umowy_harm')
::       _b - tab_tmp - tabelka której okienko stworzyć
::       _c - STRING - identyfikator okienka
::       [_d] - INTEGER - czy dodawać do okienka pola z lokalizacją (miasto,ulica)
::       [_e] - STRING - tytuł okienka
::   WY: STRING - akronim utworzonego okienka
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_env:=_a;
_tab:=_b;
_wid:=_c;

_lok_fields:=0;
{? var_pres('_d')=type_of(0)
|| _lok_fields:=_d
?};

_title:='Harmonogramy umów'@;
{? var_pres('_e')=type_of('')
|| {? _e<>''
   || _title:=_e
   ?}
?};

_wer:=_tab.mk_sel(_title,'P',0,_wid,1,1,,,'U');

_tab.win_fld(_wer,,'AKT'     ,,,-5,,,'Aktywna?'@,0,,2,,"\'T\'","\'N\'");
::_tab.win_fld(_wer,,'STAT_REJ',,,-5,,,'Zaakceptowana?'@,0,,2,,"\'T\'","\'N\'");
_tab.win_fld(_wer,,'KOD'     ,,,-5,,,'Kod'@,0);
_tab.win_fld(_wer,,'NAZ'     ,,,-20,,,'Nazwa'@,0);
{? _lok_fields>0
|| _tab.win_fld(_wer,,'MIASTO'     ,,,-10,,,'Miasto'@,0);
   _tab.win_fld(_wer,,'ULICA'     ,,,-10,,,'Ulica'@,0);
   _tab.win_fld(_wer,,'NR_POS'     ,,,-10,,,'Nr posesji'@,0);
   _tab.win_fld(_wer,,'SRC'     ,,,-20,,,'Źródło'@,0);
   ~~
?};

_fb:="
   params_set(params_get());
   _env:=params_get().env_harm;

   HN.cntx_psh();
   HN.index('ODDZ');
   HN.prefix(ST.ODDZ,cur_tab(1,1).KOD,);
   {? HN.first()
   || _env.SEL_HN:=HN.ref()
   ?};
   HN.cntx_pop();
   sel_exit()
";
_tab.win_act(_wer,0,'Formuła','Wybierz'@@,,,_fb,,1);
_tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['&Wybierz'@],'menu:W',,,,,,'noempty');

_fb:="params_exec('hn_legend_action','umowy_harm')";
_tab.win_act(_wer,0,'Formuła','Legenda'@@,,,_fb);
_tab.win_act(_wer,1,'Formuła','Legenda'@@,,,_fb);
::_tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['&Legenda'@],'menu:L');

_tab.win_act(_wer,,'Kolejność');

_fb:="
   _ref:=null();
   HN.cntx_psh();
   HN.index('ODDZ');
   HN.prefix(ST.ODDZ,cur_tab(1,1).KOD,);
   {? HN.first()
   || _ref:=HN.ref()
   ?};
   HN.cntx_pop();
   {? _ref<>null()
   || HN.seek(_ref)
   ?};
   ~~
";
_tab.win_act(_wer,,'Rekord',,,,_fb);

_tab.win_sel(_wer);
_wer


\load_cal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Ładuje kalendarz
::   WE: [_a] - HN.ref - nagłówek harmonogramu
::       [_b] - INTEGER - 0/1 - czy usuwać zawartość przed dodaniem
::       [_c] - INTEGER - 0/1 - czy do ID elementów dodawać nr identyfikacyjny HN
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;
_ref:=null();
{? var_pres('_a')=type_of(HN.ref())
|| _ref:=_a
?};

_erase:=1;
{? var_pres('_b')=type_of(0)
|| _erase:=_b
?};

_hn_nr:=0;
{? var_pres('_c')=type_of(0)
|| _hn_nr:=_c
?};

_result:=0;
_can_continue:=1;

HN.cntx_psh();
{? _ref<>null()
|| HN.prefix();
   {? HN.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   DATY.cntx_psh();
   DATY.index('ROKMIE');
   DATY.prefix(_env.AR);
   _tab:=_env.TAB_CTR_CAL;
   _weeks:=_env.TAB_CTR_WEEK;

   _can_continue:=exec('set_cal','umowy_harm',HN.KAL_NAZW);
   {? _can_continue=0
   || exec('actions_grayed','umowy_harm',0)
   ?};
   {? _can_continue>0
   ||
      {? _env.CAL_LOADED_CAL<>_env.AR
      || _env.CAL_LOADED_CAL:=_env.AR;
         {? _erase>0
         || _tab.erase();
            _weeks.erase()
         ?};
         {? DATY.first()
         ||
            {! _it:=1..(DATY.DZIEN_T-1)
            |! _tab.blank();
               _tab.ID:=exec('get_id','umowy_harm',_hn_nr,'0','_'+$_it);
::             _tab.DESC:='pusty first %1'@[$_it];
               _tab.add()
            !};

            {!
            |? _tab.blank();
               _tab.ID:=exec('get_id','umowy_harm',_hn_nr);
               _tab.DESC:=$DATY.DATA;
               _tab.COL_ID:=$DATY.DZIEN_T;
               _tab.BOR_SIZE:=_env.BOR_SIZE;
               _tab.BOR_COL:=_env.LIST_COLOR_BORDER;
               _tab.TOOLTIP:=_tab.DESC;
               {? DATY.DZIEN_T=6
               ||
                  _tab.COL_BCK:=_env.LIST_COLOR_FREE;
                  _tab.TOOLTIP:='Sobota'@
               ?};

               _color_holiday:=_env.LIST_COLOR_HOLY;
               {? DATY.DZIEN_T=7
               ||
                  _tab.COL_BCK:=_color_holiday;
                  _tab.TOOLTIP:='Niedziela'@
               ?};

               {? _env.KAL_STD>0
               || {? __KAL.get_day(date(DATY.ROK,DATY.MIESIAC,DATY.DZIEN_M))<>null()
                  || {? KAL_DEF.TYP='S'
                     || _tab.COL_BCK:=_color_holiday
                     ?}
                  ?}
               ?};

               _can_continue:=_tab.add();

               {? _can_continue>0
               ||
                  _weeks.cntx_psh();
                  _week_id:=$DATY.ROK+'_'+$form(DATY.TYDZIEN,-2);
                  _weeks.prefix(_week_id,);
                  {? _weeks.first()=0
                  || _weeks.blank();
                     _weeks.ID:=_week_id;
                     _weeks.DESC:=$DATY.TYDZIEN;
                     _weeks.TOOLTIP:=_weeks.DESC;
                     {? exec('editable','umowy_harm',DATY.DATA)>0
                     || _weeks.ICON:='110'
                     || _weeks.ICON:='157'
                     ?};
                     _can_continue:=_weeks.add()
                  ?};
                  _weeks.cntx_pop()
               ?};
               DATY.next() & _can_continue>0
            !}
         ?};

         {? DATY.last()
         || {! _it:=(DATY.DZIEN_T+1)..7
            |! _tab.blank();
::             _tab.DESC:='pusty last %1'@[$_it];
               _tab.ID:=exec('get_id','umowy_harm',_hn_nr,'999');
               _can_continue:=_tab.add()
            !}
         ?}
      ?};

      {? _can_continue>0
      ||
         DATY.index('RMD');
         HARMON.cntx_psh();
         HARMON.index('HN');
         HARMON.prefix(HN.ODDZ,HN.KOD,_env.AR);
         {? HARMON.first()
         || {!
            |? {! _it:=1..date(HARMON.ROK,HARMON.NR,0)~3
               |! _rule:='HARMON.D'+form(_it,-2);
                  _value:=($_rule)();
                  _value:=form(_value);
                  _year:=HARMON.ROK;
                  _month:=HARMON.NR;
                  _day:=_it;

                  DATY.prefix(_year,_month,_day);
                  {? DATY.first()
                  ||
                     {? _value<>''
                     ||
                        {? _value*'~'=0
                        ||
::                         Jeżeli nie zawiera znaku tyldy to jest to jakaś 'pozycja' harmonogramu
                           _can_continue:=exec('cal_add_pos','umowy_harm',_tab,_year,_month,_day,_value,,_hn_nr)
                        || {? __KAL.get_day(date(_year,_month,_day))<>null()
                           || {? KAL_DEF.TYP='S'
                              || _opis:='';
                                 {? KAL_DEF.OPIS='niedziela'
                                 || _opis:=$DATY.DATA
                                 || _opis:=KAL_DEF.OPIS
                                 ?};
                                 _can_continue:=exec('cal_add_holiday','umowy_harm',_tab,_year,_month,_day,_opis,,_hn_nr)
                              |? KAL_DEF.TYP='W'
                              || _can_continue:=exec('cal_add_free','umowy_harm',_tab,_year,_month,_day,,,_hn_nr)
                              ?}
                           ?}
                        ?}
                     ||
                        {? __KAL.get_day(date(_year,_month,_day))<>null()
                        || {? KAL_DEF.TYP='S'
                           || _can_continue:=exec('cal_add_holiday','umowy_harm',_tab,_year,_month,_day,KAL_DEF.OPIS,,_hn_nr)
                           |? KAL_DEF.TYP='W'
                           || _can_continue:=exec('cal_add_free','umowy_harm',_tab,_year,_month,_day,KAL_DEF.OPIS,,_hn_nr)
                           || _can_continue:=exec('cal_add_empty','umowy_harm',_tab,_year,_month,_day,,,_hn_nr)
                           ?}
                        ?}
                     ?}
                  ?}
               !};
               HARMON.next() & _can_continue>0
            !}
         ?};
         HARMON.cntx_pop()
      ?};
      {? _can_continue=0
      || FUN.emsg('Ładowanie zakładki z kalendarzem zakończone niepowodzeniem.'@)
      ?}
   ?};
   DATY.cntx_pop();
   _tab.prefix();
   _env.ROW_COUNT_DATY:=_tab.size()/7;
   _weeks.prefix();
   _env.ROW_COUNT_WEEK:=_weeks.size();
   ~~
?};
HN.cntx_pop();

{? _can_continue>0
|| _result:=1
?};
_result


\load_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Ładuje widok grupowy
::   WE: [_a] - INTEGER - 0/1 - czy odświeżać na siłę
::       [_b] - INTEGER - 0/1 - czy do ID elementów dodawać nr identyfikacyjny HN
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;
_erase:=1;
{? var_pres('_a')=type_of(0)
|| _erase:=_a
?};
_hn_nr:=0;
{? var_pres('_b')=type_of(0)
|| _hn_nr:=_b
?};

_result:=0;
_can_continue:=1;
_tab:=_env.TAB_CTR_ALL;
_days:=_env.TAB_CTR_ALL_HEAD;
_hn:=_env.TAB_CTR_ALL_HN;

DATY.cntx_psh();
HN.cntx_psh();
_size:=0;
_filtr:=HN.f_active();
{? _filtr>0
|| _size:=HN.f_size()
|| _size:=HN.size()
?};

_argsprog:=exec('init','#progress');
_argsprog.gl_smode('#');
_argsprog.add_progress('Generowanie kalendarzy'@,_size);
_argsprog.add_progress('Nanoszenie pozycji harmonogramu na widok'@,_size);
_argsprog.HEIGHT:=10;
exec('start','#progress',_argsprog);

{? _env.CAL_LOADED_ALL<>_env.AR | _erase>0
|| _env.CAL_LOADED_ALL:=_env.AR;

   _tab.erase();
   _days.erase();
   _hn.erase();

   {? {? _filtr>0 || HN.f_first() || HN.first() ?}
   ||
      {!
      |?
         _what:=exec('HN','#to_string');
         _argsprog.ph_sname(1,'Generowanie kalendarzy: %1'@[_what]);
         _can_continue:=exec('set_cal','umowy_harm',HN.KAL_NAZW);
         {? _can_continue=0
         || exec('actions_grayed','umowy_harm',0)
         ?};
         {? _can_continue>0
         ||
            _hn.blank();
            _hn.ID:=HN.KOD;
            _hn.DESC:=HN.KOD;
            _hn.TOOLTIP:=_hn.DESC;
            _hn.add();
            DATY.index('ROKMIE');
            DATY.prefix(_env.AR);
            {? DATY.first()
            ||
               {!
               |? _tab.blank();
                  _tab.ID:=exec('get_id','umowy_harm',_hn_nr);
                  _tab.HN_KOD:=HN.KOD;
                  _tab.DESC:='';
                  _tab.TOOLTIP:='Harmonogram: %1'@[HN.KOD]+' '+$DATY.DATA;
                  _tab.BOR_SIZE:=_env.BOR_SIZE;
                  _tab.COL_ID:=$DATY.DATA;
                  _tab.BOR_COL:=_env.LIST_COLOR_BORDER;
                  {? DATY.DZIEN_T=6
                  ||
                     _tab.COL_BCK:=_env.LIST_COLOR_FREE;
                     _tab.TOOLTIP:='Harmonogram: %1'@[HN.KOD]+' '+_env.DAYS[DATY.DZIEN_T]
                  ?};

                  _color_holiday:=_env.LIST_COLOR_HOLY;
                  {? DATY.DZIEN_T=7
                  ||
                     _tab.COL_BCK:=_color_holiday;
                     _tab.TOOLTIP:='Harmonogram: %1'@[HN.KOD]+' '+_env.DAYS[DATY.DZIEN_T]
                  ?};

                  {? _env.KAL_STD>0
                  || {? __KAL.get_day(date(DATY.ROK,DATY.MIESIAC,DATY.DZIEN_M))<>null()
                     || {? KAL_DEF.TYP='S'
                        || _tab.COL_BCK:=_color_holiday
                        ?}
                     ?}
                  ?};

                  _can_continue:=_tab.add();

                  {? _can_continue>0
                  ||
                     _days.cntx_psh();
                     _day_id:=$DATY.DATA;
                     _days.prefix(_day_id,);
                     {? _days.first()=0
                     || _days.blank();
                        _days.ID:=_day_id;
                        _days.DESC:=$DATY.DZIEN_M;
                        _days.DAY:=_env.DAYS_SHORT[DATY.DZIEN_T];
                        _days.MONTH:=exec('num_to_roman','#convert',DATY.MIESIAC);
                        _days.COL_ID:=_day_id;
                        _days.TOOLTIP:=$DATY.DATA;
                        _can_continue:=_days.add()
                     ?};
                     _days.cntx_pop()
                  ?};
                  DATY.next() & _can_continue>0
               !}
            ?}
         ?};
         {? _can_continue>0
         || _can_continue:=exec('next_step','#progress',_argsprog,1)
         ?};
         {? _filtr>0 || HN.f_next() || HN.next() ?} & _can_continue>0
      !}
   ?}
|| _argsprog.next_phase()
?};
DATY.cntx_pop();
DATY.cntx_psh();
DATY.index('RMD');
HARMON.cntx_psh();
HARMON.index('HN');
{? {? _filtr>0 || HN.f_first() || HN.first() ?}
|| _argsprog.ph_sname(1,'Generowanie kalendarzy: %1'@['OK']);
   _argsprog.next_phase();
   {!
   |?
      _what:=exec('HN','#to_string');
      _argsprog.ph_sname(2,'Nanoszenie pozycji harmonogramu na widok: %1'@[_what]);
      HARMON.prefix(HN.ODDZ,HN.KOD,_env.AR);
      {? HARMON.first()=0
      || exec('new_harm','umowy_harm',_env.AR,HN.KAL_NAZW)
      ?};
      {? HARMON.first()
      || {!
         |? {! _it:=1..date(HARMON.ROK,HARMON.NR,0)~3
            |! _rule:='HARMON.D'+form(_it,-2);
               _value:=($_rule)();
               _value:=form(_value);

               _year:=HARMON.ROK;
               _month:=HARMON.NR;
               _day:=_it;

               DATY.prefix(_year,_month,_day);
               {? DATY.first()
               ||
                  _id:=exec('get_id','umowy_harm',_hn_nr);
                  {? _value<>''
                  ||
                     {? _value*'~'=0
                     ||
::                      Jeżeli nie zawiera znaku tyldy to jest to jakaś 'pozycja' harmonogramu
                        _can_continue:=exec('all_update','umowy_harm',_tab,_id,_value,_env.LIST_COLOR_POS)
                     ||
                        {? __KAL.get_day(date(_year,_month,_day))<>null()
                        || {? KAL_DEF.TYP='S'
                           || _can_continue:=exec('cal_add_holiday','umowy_harm',_tab,_year,_month,_day,,KAL_DEF.OPIS,_hn_nr)
                           |? KAL_DEF.TYP='W'
                           || _can_continue:=exec('cal_add_free','umowy_harm',_tab,_year,_month,_day,,KAL_DEF.OPIS,_hn_nr)
                           ?}
                        ?}
                     ?}
                  ||
                     {? __KAL.get_day(date(_year,_month,_day))<>null()
                     || {? KAL_DEF.TYP='S'
                        || _can_continue:=exec('cal_add_holiday','umowy_harm',_tab,_year,_month,_day,,KAL_DEF.OPIS,_hn_nr)
                        |? KAL_DEF.TYP='W'
                        || _can_continue:=exec('cal_add_free','umowy_harm',_tab,_year,_month,_day,,KAL_DEF.OPIS,_hn_nr)
                        || _can_continue:=exec('cal_add_empty','umowy_harm',_tab,_year,_month,_day,,,_hn_nr)
                        ?}
                     ?}
                  ?}
               ?}
            !};
            HARMON.next() & _can_continue>0
         !}
      ?};
      {? _can_continue>0
      || _can_continue:=exec('next_step','#progress',_argsprog,2)
      ?};
      {? _filtr>0 || HN.f_next() || HN.next() ?} & _can_continue>0
   !}
?};
_argsprog.ph_sname(2,'Nanoszenie pozycji harmonogramu na widok: %1'@['OK']);
_argsprog.ctr_stop();
HARMON.cntx_pop();
DATY.cntx_pop();
HN.cntx_pop();
_tab.prefix();
_days.prefix();

{? _can_continue>0
|| _result:=1
|| FUN.emsg('Ładowanie zakładki z widokiem grupowym zakończone niepowodzeniem.'@)
?};
_result


\load_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Ładuje widok roczny
::   WE: [_a] - HN.ref - nagłówek harmonogramu
::       [_b] - INTEGER - 0/1 - czy usuwać zawartość przed dodaniem
::       [_c] - INTEGER - 0/1 - czy do ID elementów dodawać nr identyfikacyjny HN
::       [_d] - INTEGER - 0/1 - czy wyszarzać akcje w HN jeżeli nie uda się załadować?
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;
_ref:=null();
{? var_pres('_a')=type_of(HN.ref())
|| _ref:=_a
?};

_erase:=1;
{? var_pres('_b')=type_of(0)
|| _erase:=_b
?};

_hn_nr:=0;
{? var_pres('_c')=type_of(0)
|| _hn_nr:=_c
?};
_gray:=1;
{? var_pres('_d')=type_of(0)
|| _gray:=_d
?};

_result:=0;
_can_continue:=1;

HN.cntx_psh();
{? _ref<>null()
|| HN.prefix();
   {? HN.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   _tab:=_env.TAB_CTR_ROK;
   _tab2:=_env.TAB_CTR_ROK2;
   _days:=_env.TAB_CTR_31;
   _days2:=_env.TAB_CTR_5WEEKS;
   _months:=_env.TAB_CTR_MONTH;

   _can_continue:=exec('set_cal','umowy_harm',HN.KAL_NAZW);
   {? _can_continue=0 & _gray>0
   || exec('actions_grayed','umowy_harm',0)
   ?};

   {? _can_continue>0
   ||
      DATY.cntx_psh();
      DATY.index('ROKMIE');
      DATY.prefix(_env.AR);
      HARMON.cntx_psh();
      HARMON.index('HN');
      HARMON.prefix(HN.ODDZ,HN.KOD,_env.AR);

      {? _env.CAL_LOADED_ROK<>_env.AR | HARMON.first()=0
      ||
         _env.ROK_HEAD_LOADED:=0;
::         exec('set_value','#desktop','',_env.ctr_rok_name,'btn_end@buttons','Zakończ (rok: %1)'@[$_env.AR]);
::         exec('set_value','#desktop','',_env.ctr_rok2_name,'btn_end@buttons','Zakończ (rok: %1)'@[$_env.AR]);
::         exec('set_value','#desktop','',_env.ctr_rok_name,'btn_wyc@buttons','Wycofaj (rok: %1)'@[$_env.AR]);
::         exec('set_value','#desktop','',_env.ctr_rok2_name,'btn_wyc@buttons','Wycofaj (rok: %1)'@[$_env.AR]);
         _env.CAL_LOADED_ROK:=_env.AR;
         {? _erase>0
         || _tab.erase();
            _tab2.erase();
            _days.erase();
            _days2.erase();
            _months.erase();
            ~~
         ?};

         exec('load_months','umowy_harm');

::       Numery dni w miesiący w widoku 1
         {! _it:=1..31
         |! _days.blank();
            _days.ID:=form(_it,-2);
            _days.DESC:=form(_it,-2);
            _days.TOOLTIP:=_days.DESC;
            _days.add()
         !};

::       Nazwy krótkie dni w widoku 2
         {! _it:=1..6
         |!
            _tyg_size:=7;
            {? _it=6
            || _tyg_size:=2
            ?};

            {! _ii:=1.._tyg_size
            |!
               _days2.blank();
               _days2.ID:='week %1 day %2'[$_it,$_ii];
               _days2.DESC:=_env.DAYS_SHORT[_ii];
               _days2.TOOLTIP:=_days2.DESC;
               _days2.add()
            !}
         !};

         {! _it:=1..12
         |!
            _lp:=0;
            DATY.prefix(_env.AR,_it);
            {? DATY.first()
            ||
::             Początkowe kafelki centrujące w widoku 2
               {? DATY.DZIEN_T>1
               ||
                  {! _ii:=1..(DATY.DZIEN_T-1)
                  |! _lp+=1;
                     _tab2.blank();
::                  _tab2.DESC:=$_lp;
                     _tab2.ID:=exec('get_id','umowy_harm',_hn_nr,,'_'+$_ii,0);
                     _tab2.add()
                  !}
               ?};

               {!
               |?
::                Kafelki z zawartościa w widoku 1
                  _tab.blank();
                  _tab.ID:=exec('get_id','umowy_harm',_hn_nr);
                  _tab.DESC:=_env.DAYS_SHORT[DATY.DZIEN_T];
                  _tab.BOR_SIZE:=_env.BOR_SIZE;
                  _tab.BOR_COL:=_env.LIST_COLOR_BORDER;
::                  _tab.TOOLTIP:=$DATY.DATA;
                  _tab.COL_ID:=form(DATY.DATA~3,-2);
                  {? DATY.DZIEN_T=6
                  ||
                     _tab.COL_BCK:=_env.LIST_COLOR_FREE;
::                     _tab.TOOLTIP:='Sobota'@;
                     ~~
                  ?};

                  _color_holiday:=_env.LIST_COLOR_HOLY;
                  {? DATY.DZIEN_T=7
                  ||
                     _tab.COL_BCK:=_color_holiday;
::                     _tab.TOOLTIP:='Niedziela'@;
                     ~~
                  ?};

                  {? _env.KAL_STD>0
                  || {? __KAL.get_day(date(DATY.ROK,DATY.MIESIAC,DATY.DZIEN_M))<>null()
                     || {? KAL_DEF.TYP='S'
                        || _tab.COL_BCK:=_color_holiday
                        ?}
                     ?}
                  ?};
                  _can_continue:=_tab.add();

::                Kafelki z zawartością w widoku2
                  _lp+=1;
                  _tab2.blank();
                  _tab2.ID:=exec('get_id','umowy_harm',_hn_nr);
                  _tab2.DESC:=form(DATY.DZIEN_M,-2);
                  _tab2.BOR_SIZE:=_env.BOR_SIZE;
                  _tab2.BOR_COL:=_env.LIST_COLOR_BORDER;
                  {? _lp%*7=0
                  || _tyg:=_lp/7
                  || _tyg:=floor(_lp/7)+1
                  ?};
                  _tab2.COL_ID:='week %1 day %2'[$_tyg,$DATY.DZIEN_T];
                  _tab2.TOOLTIP:=$DATY.DATA;
                  {? DATY.DZIEN_T=6
                  ||
                     _tab2.COL_BCK:=_env.LIST_COLOR_FREE;
                     _tab2.TOOLTIP:='Sobota'@
                  ?};

                  _color_holiday:=_env.LIST_COLOR_HOLY;
                  {? DATY.DZIEN_T=7
                  ||
                     _tab2.COL_BCK:=_color_holiday;
                     _tab2.TOOLTIP:='Niedziela'@
                  ?};

                  {? _env.KAL_STD>0
                  || {? __KAL.get_day(date(DATY.ROK,DATY.MIESIAC,DATY.DZIEN_M))<>null()
                     || {? KAL_DEF.TYP='S'
                        || _tab2.COL_BCK:=_color_holiday;
                           _tab2.TOOLTIP:=KAL_DEF.OPIS
                        ?}
                     ?}
                  ?};
::                _tab2.TOOLTIP+=' '+_tab2.COL_ID+' '+$_lp;
                  _can_continue:=_tab2.add();

                  DATY.next() & _can_continue>0
               !};
::             Końcowe kafelki centrujące w widoku 2
::             Dopełniam do pełnych 6 tygodni czyli 42 kafelków
               {? _lp<=36
               ||
                  {! _ii:=_lp..36
                  |! _lp+=1;
                     _tab2.blank();
::                  _tab2.DESC:=$_lp;
                     _tab2.ID:=exec('get_id','umowy_harm',_hn_nr,,'_'+$_ii,99);
                     _tab2.add()
                  !}
               ?}
            ?};

::          Końcowe kafelki centrujące w widoku 1
            {? DATY.last()
            ||
               {? (DATY.DZIEN_M+1)<=31
               ||
                  {! _ii:=(DATY.DZIEN_M+1)..31
                  |! _tab.blank();
                     _tab.ID:=exec('get_id','umowy_harm',_hn_nr,,'_'+$_ii);
                     _can_continue:=_tab.add()
                  !}
               ?}
            ?}
         !}
      ?};

      {? _can_continue>0
      ||
         DATY.index('RMD');
         {? HARMON.first()
         || {!
            |? {! _it:=1..date(HARMON.ROK,HARMON.NR,0)~3
               |! _rule:='HARMON.D'+form(_it,-2);
                  _value:=($_rule)();
                  _value:=form(_value);
                  _year:=HARMON.ROK;
                  _month:=HARMON.NR;
                  _day:=_it;

                  DATY.prefix(_year,_month,_day);
                  {? DATY.first()
                  ||
                     {? _value<>''
                     ||
                        {? _value*'~'=0
                        ||
::                         Jeżeli nie zawiera znaku tyldy to jest to jakaś 'pozycja' harmonogramu
                           _can_continue:=exec('cal_add_pos','umowy_harm',_tab,_year,_month,_day,_value,,_hn_nr);
                           _can_continue:=exec('cal_add_pos','umowy_harm',_tab2,_year,_month,_day,_value,,_hn_nr)
                        || {? __KAL.get_day(date(_year,_month,_day))<>null()
                           || {? KAL_DEF.TYP='S'
                              || _opis:='';
                                 {? KAL_DEF.OPIS='niedziela'
                                 || _opis:=$DATY.DATA
                                 || _opis:=KAL_DEF.OPIS
                                 ?};
                                 _can_continue:=exec('cal_add_holiday','umowy_harm',_tab,_year,_month,_day,,_opis,_hn_nr);
                                 _can_continue:=exec('cal_add_holiday','umowy_harm',_tab2,_year,_month,_day,,_opis,_hn_nr)
                              |? KAL_DEF.TYP='W'
                              || _can_continue:=exec('cal_add_free','umowy_harm',_tab,_year,_month,_day,,,_hn_nr);
                                 _can_continue:=exec('cal_add_free','umowy_harm',_tab2,_year,_month,_day,,,_hn_nr)
                              || _can_continue:=exec('cal_add_empty','umowy_harm',_tab,_year,_month,_day,,,_hn_nr);
                                 _can_continue:=exec('cal_add_empty','umowy_harm',_tab2,_year,_month,_day,,,_hn_nr)
                              ?}
                           ?}
                        ?}
                     ||
                        {? __KAL.get_day(date(_year,_month,_day))<>null()
                        || {? KAL_DEF.TYP='S'
                           || _can_continue:=exec('cal_add_holiday','umowy_harm',_tab,_year,_month,_day,,KAL_DEF.OPIS,_hn_nr);
                              _can_continue:=exec('cal_add_holiday','umowy_harm',_tab2,_year,_month,_day,,KAL_DEF.OPIS,_hn_nr)
                           |? KAL_DEF.TYP='W'
                           || _can_continue:=exec('cal_add_free','umowy_harm',_tab,_year,_month,_day,,KAL_DEF.OPIS,_hn_nr);
                              _can_continue:=exec('cal_add_free','umowy_harm',_tab2,_year,_month,_day,,KAL_DEF.OPIS,_hn_nr)

                           || _can_continue:=exec('cal_add_empty','umowy_harm',_tab,_year,_month,_day,,,_hn_nr);
                              _can_continue:=exec('cal_add_empty','umowy_harm',_tab2,_year,_month,_day,,,_hn_nr)
                           ?}
                        ?}
                     ?}
                  ?}
               !};
               HARMON.next() & _can_continue>0
            !}
         ?}
      ?};
      {? _can_continue=0
      || FUN.emsg('Ładowanie zakładki z widokiem rocznym zakończone niepowodzeniem.'@)
      ?};
      DATY.cntx_pop();
      HARMON.cntx_pop()
   ?};
   _tab.prefix();
   _tab2.prefix();
   ~~
?};
HN.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\cal_add_pos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Dodaje do tabelki przesułanej do kontrolki pozycję
::   WE: _a - tab_tmp - tabelka do której dodać rekord
::       _b - INTEGER - rok
::       _c - INTEGER - miesiac
::       _d - INTEGER - dzien
::       [_e] - STRING - wartość opisowa pozycji
::       [_f] - STRING - dymek
::       [_g] - INTEGER - 0/1 - czy do ID elementów dodawać nr identyfikacyjny HN
::   WY: 0/1
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_tab_pos:=_a;
_year:=_b;
_month:=_c;
_day:=_d;
_value:='';
{? var_pres('_e')=type_of('')
|| _value:=_e
?};

_tooltip:='';
{? var_pres('_f')=type_of('')
|| _tooltip:=_f
|| {? _value<>''
   || _tooltip:=_value+' ('+$DATY.DATA+')'
   || _tooltip:=$DATY.DATA
   ?}
?};

_hn_nr:=0;
{? var_pres('_g')=type_of(0)
|| _hn_nr:=_g
?};

_result:=0;

_tab_pos.cntx_psh();
DATY.cntx_psh();
DATY.index('RMD');
DATY.prefix(_year,_month,_day);
{? DATY.first()
||
   _id:=exec('get_id','umowy_harm',_hn_nr);
   _tab_pos.prefix(_id,);
   {? _tab_pos.first()
   ||
::      _tab_pos.DESC:=_value;
      _tab_pos.COL_BCK:=_env.LIST_COLOR_POS;
::      _tab_pos.BOR_SIZE:=1;
      _tab_pos.BOR_COL:=_env.LIST_COLOR_BORDER;
      {? _tooltip<>''
      || _tab_pos.TOOLTIP:=_tooltip
      ?};
      _result:=_tab_pos.put()
   ?}
?};
DATY.cntx_pop();
_tab_pos.cntx_pop();
_result


\cal_add_holiday
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Dodaje do tabelki przesułanej do kontrolki pozycję
::   WE: _a - tab_tmp - tabelka do której dodać rekord
::       _b - INTEGER - rok
::       _c - INTEGER - miesiac
::       _d - INTEGER - dzien
::       [_e] - STRING - wartość opisowa pozycji
::       [_f] - STRING - dymek
::       [_g] - INTEGER - 0/1 - czy do ID elementów dodawać nr identyfikacyjny HN
::   WY: 0/1
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_tab_pos:=_a;
_year:=_b;
_month:=_c;
_day:=_d;
_value:='';
{? var_pres('_e')=type_of('')
|| _value:=_e
?};

_tooltip:='';
{? var_pres('_f')=type_of('')
|| _tooltip:=_f
|| {? _value<>''
   || _tooltip:=_value+' ('+$DATY.DATA+')'
   || _tooltip:=$DATY.DATA
   ?}
?};

_hn_nr:=0;
{? var_pres('_g')=type_of(0)
|| _hn_nr:=_g
?};

_result:=0;

_tab_pos.cntx_psh();
DATY.cntx_psh();
DATY.index('RMD');
DATY.prefix(_year,_month,_day);
{? DATY.first()
||
   _id:=exec('get_id','umowy_harm',_hn_nr);
   _tab_pos.prefix(_id,);
   {? _tab_pos.first()
   ||
      {? _value<>''
      || _tab_pos.DESC:=_value
      ?};
      _tab_pos.COL_BCK:=_env.LIST_COLOR_HOLY;
::      _tab_pos.BOR_SIZE:=1;
      _tab_pos.BOR_COL:=_env.LIST_COLOR_BORDER;
      {? _tooltip<>''
      || _tab_pos.TOOLTIP:=_tooltip
      ?};
      _result:=_tab_pos.put()
   ?}
?};
DATY.cntx_pop();
_tab_pos.cntx_pop();
_result


\cal_add_empty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Dodaje do tabelki przesułanej do kontrolki pozycję
::   WE: _a - tab_tmp - tabelka do której dodać rekord
::       _b - INTEGER - rok
::       _c - INTEGER - miesiac
::       _d - INTEGER - dzien
::       [_e] - STRING - wartość opisowa pozycji
::       [_f] - STRING - dymek
::       [_g] - INTEGER - 0/1 - czy do ID elementów dodawać nr identyfikacyjny HN
::   WY: 0/1
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_tab_pos:=_a;
_year:=_b;
_month:=_c;
_day:=_d;
_value:='';
{? var_pres('_e')=type_of('')
|| _value:=_e
?};

_tooltip:='';
{? var_pres('_f')=type_of('')
|| _tooltip:=_f
|| {? _value<>''
   || _tooltip:=_value+' ('+$DATY.DATA+')'
   || _tooltip:=$DATY.DATA
   ?}
?};

_hn_nr:=0;
{? var_pres('_g')=type_of(0)
|| _hn_nr:=_g
?};

_result:=0;

_tab_pos.cntx_psh();
DATY.cntx_psh();
DATY.index('RMD');
DATY.prefix(_year,_month,_day);
{? DATY.first()
||
   _id:=exec('get_id','umowy_harm',_hn_nr);
   _tab_pos.prefix(_id,);
   {? _tab_pos.first()
   ||
      _tab_pos.COL_BCK:='';
      _result:=_tab_pos.put()
   ?}
?};
DATY.cntx_pop();
_tab_pos.cntx_pop();
_result


\cal_add_free
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Dodaje do tabelki przesułanej do kontrolki pozycję
::   WE: _a - tab_tmp - tabelka do której dodać rekord
::       _b - INTEGER - rok
::       _c - INTEGER - miesiac
::       _d - INTEGER - dzien
::       [_e] - STRING - wartość opisowa pozycji
::       [_f] - STRING - dymek
::       [_g] - INTEGER - 0/1 - czy do ID elementów dodawać nr identyfikacyjny HN
::   WY: 0/1
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_tab_pos:=_a;
_year:=_b;
_month:=_c;
_day:=_d;
_value:='';
{? var_pres('_e')=type_of('')
|| _value:=_e
?};

_tooltip:='';
{? var_pres('_f')=type_of('')
|| _tooltip:=_f
|| {? _value<>''
   || _tooltip:=_value+' ('+$DATY.DATA+')'
   || _tooltip:=$DATY.DATA
   ?}
?};

_hn_nr:=0;
{? var_pres('_g')=type_of(0)
|| _hn_nr:=_g
?};

_result:=0;

_tab_pos.cntx_psh();
DATY.cntx_psh();
DATY.index('RMD');
DATY.prefix(_year,_month,_day);
{? DATY.first()
||
   _id:=exec('get_id','umowy_harm',_hn_nr);
   _tab_pos.prefix(_id,);
   {? _tab_pos.first()
   ||
      _tab_pos.COL_BCK:=_env.LIST_COLOR_FREE;
      _result:=_tab_pos.put()
   ?}
?};
DATY.cntx_pop();
_tab_pos.cntx_pop();
_result


\all_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Aktualizuje w tabelce .TAB_CTR_ALL jedną pozycję
::   WE: _a - tab_tmp - tabelka w której aktualizować
::       _b - STRING - idendyfikator rekordu
::       _c - STRING - wartość
::       _d - STRING - kolor
::       [_e] - STRING - tooltip
::   WY: 0/1
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_id:=_b;
_value:=_c;
_color:=_d;
_tooltip:=_value;
{? var_pres('_e')=type_of('')
|| _tooltip:=_e
?};

_result:=0;

_tab.cntx_psh();
_tab.prefix(_id,);
{? _tab.first()
|| _tab.DESC:='';
   _tab.TOOLTIP:=_tooltip;
   _tab.COL_BCK:=_color;
   _result:=_tab.put()
?};
_tab.cntx_pop();
_result


\refresh_tab_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Odświeża widok grupowy
::   WE: [_a] - INTEGER - 0/1 - czy odświeżać na siłę
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_erase:=0;
{? var_pres('_a')=type_of(0)
|| _erase:=_a
?};
params_set(params_get());
_env:=params_get().env_harm;

_can_continue:=exec('load_all','umowy_harm',_erase,1);
{? _can_continue>0
||
::    Ładowanie się zakończyło prawidłowo, ale jeśli ostanio kontrolka była zniknięta to ją pojawiam
   {? _env.CTR_VISIBLE_ALL=0
   || exec('set_visible','#desktop','',_env.ctr_all_name,'desktop',1);
      _env.CTR_VISIBLE_ALL:=1
   ?};

   _data_id_hn:=$SYSLOG.tm_stamp();
   exec('set_value','#desktop','',_env.ctr_all_name,'hn@desktop','cellW=140');
   exec('fetch_data','#desktop',_data_id_hn,_env.ctr_all_name,exec('cal_tab_all_hn','umowy_harm'),'ID,DESC,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
   exec('grab_data','#desktop','',_env.ctr_all_name,'hn@desktop',_data_id_hn);

   _data_id_head:=$SYSLOG.tm_stamp();
   {? _env.SIZE_ALLW>0
   || exec('set_value','#desktop','',_env.ctr_all_name,'head@desktop','cellW='+$_env.SIZE_ALLW)
   ?};
   {? _env.SIZE_ALLH>0
   || exec('set_value','#desktop','',_env.ctr_all_name,'head@desktop','cellH='+&_env.SIZE_ALLH)
   ?};
   exec('set_value','#desktop','',_env.ctr_all_name,'head@desktop','rowCount=1');
   exec('fetch_data','#desktop',_data_id_head,_env.ctr_all_name,exec('cal_tab_head','umowy_harm'),'ID,DESC,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
   exec('grab_data','#desktop','',_env.ctr_all_name,'head@desktop',_data_id_head);

   _data_id_head2:=$SYSLOG.tm_stamp();
   {? _env.SIZE_ALLW>0
   || exec('set_value','#desktop','',_env.ctr_all_name,'days@desktop','cellW='+$_env.SIZE_ALLW)
   ?};
   {? _env.SIZE_ALLH>0
   || exec('set_value','#desktop','',_env.ctr_all_name,'days@desktop','cellH='+&_env.SIZE_ALLH)
   ?};
   exec('set_value','#desktop','',_env.ctr_all_name,'days@desktop','rowCount=1');
   exec('fetch_data','#desktop',_data_id_head2,_env.ctr_all_name,exec('cal_tab_head','umowy_harm'),'ID,DAY,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
   exec('grab_data','#desktop','',_env.ctr_all_name,'days@desktop',_data_id_head2);

   _data_id_all:=$SYSLOG.tm_stamp();
   {? _env.SIZE_ALLW>0
   || exec('set_value','#desktop','',_env.ctr_all_name,'calendar@desktop','cellW='+$_env.SIZE_ALLW)
   ?};
   {? _env.SIZE_ALLH>0
   || exec('set_value','#desktop','',_env.ctr_all_name,'calendar@desktop','cellH='+&_env.SIZE_ALLH)
   ?};
   _size:=0;
   {? HN.f_active()=0
   || _size:=HN.size()
   || _size:=HN.f_size()
   ?};
   exec('set_value','#desktop','',_env.ctr_all_name,'calendar@desktop','rowCount='+$_size);
   exec('fetch_data','#desktop',_data_id_all,_env.ctr_all_name,exec('cal_tab_all','umowy_harm'),'ID,DESC,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
   exec('grab_data','#desktop','',_env.ctr_all_name,'calendar@desktop',_data_id_all);

   _data_id_roman:=$SYSLOG.tm_stamp();
   {? _env.SIZE_ALLW>0
   || exec('set_value','#desktop','',_env.ctr_all_name,'roman@desktop','cellW='+$_env.SIZE_ALLW)
   ?};
   {? _env.SIZE_ALLH>0
   || exec('set_value','#desktop','',_env.ctr_all_name,'roman@desktop','cellH='+&_env.SIZE_ALLH)
   ?};
   exec('set_value','#desktop','',_env.ctr_all_name,'roman@desktop','rowCount=1');
   exec('fetch_data','#desktop',_data_id_roman,_env.ctr_all_name,exec('cal_tab_head','umowy_harm'),'ID,MONTH,TOOLTIP,COL_BCK,COL_TXT,BOR_SIZE,BOR_COL','');
   exec('grab_data','#desktop','',_env.ctr_all_name,'roman@desktop',_data_id_roman);

   grp_disp(HN,_env.ctr_all_id)
||
:: Ładowanie się wykrzaniło, znikam kontrolkę
   exec('set_visible','#desktop','',_env.ctr_all_name,'desktop',0);
   _env.CTR_VISIBLE_ALL:=0
?};

:: Sprawdzam czy mam uprawnienia do redagowania - jeśli nie to wyszarzam guziczki
_has_action:=exec('chk_role','#b__box',OPERATOR.USER,'LUM_HAW_DPHA');
{? _has_action=0
|| _elements:=exec('elements_table','#desktop');
   exec('set_enabled_grp','#desktop','','','btn_add@buttons',0,_elements);
   exec('set_enabled_grp','#desktop','','','btn_del@buttons',0,_elements);
   exec('update','#desktop',_elements,_env.ctr_all_name);
   ~~
?};
~~


\activate_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja w oknie: 'Aktywuj'
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('set_active','umowy_harm',,'T');
~~


\activate_action_gr1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Grupa przed akcji w oknie: 'Aktywuj'
::   WY: 0/1
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_tab:=cur_tab(1,1);
{? FUN.ask('Zaznaczonych harmonogramów: %1. Czy aktywować je wszystkie?'@[$_tab.sel_size()])
|| _result:=1;
   sel_nchk();
   KOMM.init(200,,'Aktywacja harmonogramów')
?};
_result


\activate_action_gr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Grupa po akcji w oknie: 'Aktywuj'
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
~~


\deactivate_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja w oknie: 'Dezaktywuj'
::   WE:
::   WY:
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('set_active','umowy_harm',,'N');
~~


\deactivate_action_gr1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Grupa przed akcji w oknie: 'Dezaktywuj'
::   WY: 0/1
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_tab:=cur_tab(1,1);
{? FUN.ask('Zaznaczonych harmonogramów: %1. Czy dezaktywować je wszystkie?'@[$_tab.sel_size()])
|| _result:=1;
   sel_nchk();
   KOMM.init(200,,'Dezaktywacja harmonogramów')
?};
_result


\deactivate_action_gr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Grupa po akcji w oknie: 'Dezaktywuj'
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
~~


\set_active
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Aktywuje lub dezaktywuje dany nagłówek harmonogramu
::   WE: [_a] - HN.ref lub aktualny rekord
::       [_b] - STRING - [T]/N - aktywować czy dezaktywować
::       [_c] - INTEGER - 0/[1] - czy wyświetlać dialogi
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
{? var_pres('_a')=type_of(SYSLOG.ref())
|| _ref:=_a
?};
_active:='T';
{? var_pres('_b')=type_of('')
|| _active:=_b
?};
_dialog:=1;
{? var_pres('_c')=type_of(0)
|| _dialog:=_c
?};

_result:=0;
_can_continue:=1;

_tab:=cur_tab(1,1);

_tab.cntx_psh();
_tab.clear();
{? _ref<>null()
|| {? _tab.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   _what:=exec('HN','#to_string');

   _group:=0;
   {? _tab.sel_size()>0
   || _group:=1;
      _dialog:=0
   ?};

   {? _dialog>0
   || {? _active='T'
      || _can_continue:=FUN.ask('Czy aktywować harmonogram: %1?'@[_what])
      |? _active='N'
      || _can_continue:=FUN.ask('Czy dezaktywować harmonogram: %1?'@[_what])
      ?}
   ?};

   {? _can_continue>0 & _active='T'
   ||
      {? _tab.AKT='T'
      || _can_continue:=0;
         _msg:='Harmonogram: %1 jest już aktywny.'@[_what];
         {? _dialog>0
         || FUN.info(_msg)
         |? _group>0
         || exec('komm_add','umowy_harm',_msg,7)
         ?}
      ?}
   |? _can_continue>0 & _active='N'
   ||
      {? _tab.AKT='N'
      || _can_continue:=0;
         _msg:='Harmonogram: %1 jest już nieaktywny.'@[_what];
         {? _dialog>0
         || FUN.info(_msg)
         |? _group>0
         || exec('komm_add','umowy_harm',_msg,7)
         ?}
      ?}
   ?};
   {? _can_continue>0
   || _tab.AKT:=_active;
      _can_continue:=_tab.put();

      {? _can_continue=0
      || _msg:='Zmiana aktywności harmonogramu: %1 zakończona niepowodzeniem'@[_what];
         {? _dialog>0
         || FUN.info(_msg)
         |? _group>0
         || exec('komm_add','umowy_harm',_msg)
         ?}
      ?}
   ?}
?};
_tab.cntx_pop();
_tab.get();
{? _can_continue>0
|| _result:=1
?};
_result


\action_jump
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja 'Do daty' w widoku grupowym
::   WE: _a - STRING - identyfikator widoku
::  TAG: <DESKTOP>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_view:=_a;

_date:=exec('edit_date','#edit',date(),'Data w widoku'@,,'Przeuń widok do...'@);

_ctr_id:='';
_tab:=~~;
_ndx:=~~;
{? _view='cal'
|| _tab:=_env.TAB_CTR_CAL;
   _ndx:=_env.NDX_CAL1;
   _ctr_id:=_env.ctr_cal_name
|? _view='all'
|| _tab:=_env.TAB_CTR_ALL;
   _ndx:=_env.NDX_ALL1;
   _ctr_id:=_env.ctr_all_name
?};

{? type_of(_date)>0
||
   _tab.cntx_psh();
   _tab.index(_ndx);
   _tab.prefix($_date);
   {? _tab.first()
   || exec('set_value','#desktop','',_ctr_id,'calendar@desktop','jump='+_tab.ID)
   ?};
   _tab.cntx_pop()
?};
~~


\hn_add_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Kuba [2009]
:: OPIS: Dolacz na harmonogramach
::   WY: 0/1
::  OLD: \add_hn/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
::params_set(params_get());
::_env:=params_get().env_harm;

_result:=0;
HN.blank();
::exec('hn_kod','umowy_harm');
HN.win_edit('RED');
{? HN.edit("exec('chk_hn','umowy_harm')")
|| _result:=HN.add()
?};
::{? _result>0
::|| exec('new_harm','umowy_harm',_env.AR);
::::   exec('all_refresh','umowy_harm');
::   ~~
::?};
_result


\chk_hn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: poprawnosc wypelnienia danych dla harmonogramow
::   WE: [_a] - INTEGER - 1/2 - tryb dialogowania: 1 - ekran, 2 - KOMM
::  OLD: \chk_hn/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
_dialog:=1;
{? var_pres('_a')=type_of(1)
|| _dialog:=_a
?};
_result:='';
{? _dialog=1
|| _result:=__CHK.record(HN,,'KOD','NAZ')
?};
{? _result=''
||
   _hn_kod:=HN.KOD;
   _hn_ref:=HN.ref();
   HN.cntx_psh();
   HN.index('ODDZ');
   HN.prefix(ST.ODDZ,_hn_kod,_hn_kod);
   {? HN.first() & HN.ref()<>_hn_ref
   ||
      _msg:='Istnieje już harmonogram o kodzie: %1.'@[_hn_kod];
      {? _dialog=1
      || FUN.emsg(_msg)
      |? _dialog=2
      || exec('komm_add','umowy_harm',_msg)
      ?};
      _result:='KOD'
   ?};
   HN.cntx_pop()
?};
{? _result='' & HN.D1='N' & HN.D2='N' & HN.D3='N' & HN.D4='N' & HN.D5='N' & HN.D6='N' & HN.D7='N'
|| _msg:='Nie wybrano żadnego dnia tygodnia.'@;
   {? _dialog=1
   || FUN.emsg(_msg)
   |? _dialog=2
   || exec('komm_add','umowy_harm',_msg)
   ?};
   _result:='D1'
?};
{? _result='' & HN.HZ=0
|| _msg:='Nie wybrano częstotliwości powtórzeń.'@;
   {? _dialog=1
   || FUN.emsg(_msg)
   |? _dialog=2
   || exec('komm_add','umowy_harm',_msg)
   ?};
   _result:='HZ'
?};

{? _result='' & HN.HOP_MODE=''
|| _msg:='Nie wybrano trybu generowania.'@;
   {? _dialog=1
   || FUN.emsg(_msg)
   |? _dialog=2
   || exec('komm_add','umowy_harm',_msg)
   ?};
   _result:='HOP_MODE'
?};

{? _result='' & HN.HOP_DIR=0
|| _msg:='Nie wybrano kierunku przeskoku.'@;
   {? _dialog=1
   || FUN.emsg(_msg)
   |? _dialog=2
   || exec('komm_add','umowy_harm',_msg)
   ?};
   _result:='HOP_DIR'
?};


{? _result='' & HN.D6='T' & _dialog=1
|| {? FUN.ask('Ustawiono generowanie harmonogramu w sobotę. Czy na pewno kontynuować?'@)=0
   || _result:='D6'
   ?}
?};
{? _result='' & HN.D7='T' & _dialog=1
|| {? FUN.ask('Ustawiono generowanie harmonogramu w niedzielę. Czy na pewno kontynuować?'@)=0
   || _result:='D7'
   ?}
?};
_result


\hn_edit_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: funkcja popraw dla naglowka tabeli, jazeli sa pozycje to mozna poprawiac tylko nazwe
::   WY: 0/1
::  OLD: \pop_harm/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
::params_set(params_get());
::_env:=params_get().env_harm;

_can_continue:=1;
_result:=0;

_what:=exec('HN','#to_string');

{? HN.STAT_REJ='T'
|| FUN.emsg('Harmonogram: %1 zaakceptowany. Edycja niemożliwa.'@[_what]);
   _can_continue:=0
?};

{? _can_continue>0
||
   HN.win_edit('RED');
   _what:=exec('HN','#to_string');
   _ref:=HN.ref();
   _locked:=exec('blk_lock','#table','HN',_ref,,1,'Harmonogram: %1 jest redagowany'@[_what]);
   {? _locked>0
   || {? HN.edit("exec('chk_hn','umowy_harm')")
      || _can_continue:=HN.put()
      ?};
      exec('blk_unlock','#table','HN',_ref)
   ?}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\hn_delete_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: usuwanie pozycji tabeli harm zwiazanych z naglowkami harmonogramow
::   WY: 0/1
::  OLD: \usu_harm/um_harm.fml
::----------------------------------------------------------------------------------------------------------------------
::params_set(params_get());
::_env:=params_get().env_harm;

_result:=0;
_can_continue:=1;
_can_del:=1;

_what:=exec('HN','#to_string');
_ref:=HN.ref();

_dialog:=1;
{? HN.sel_size()>0
|| _dialog:=0
?};

_locked:=exec('blk_lock','#table','HN',_ref,,1,'Harmonogram: %1 jest redagowany'@[_what]);
{? _locked>0
||
   HARMON.index('HN');
   HARMON.prefix(HN.ODDZ,HN.KOD);
   _wyn:=0;
   {? _can_continue>0 & HN.count>0
   || _can_continue:=0;
      _msg:='Harmonogram jest wykorzystywany. Usunięcie niemożliwe.'@;
      {? _dialog>0
      || FUN.emsg(_msg)
      || exec('komm_add','umowy_harm',_msg)
      ?}
   ?};

   {? _can_continue>0 & HN.STAT_REJ='T'
   || _can_continue:=0;
      _msg:='Harmonogram jest zaakceptowany. Usunięcie niemożliwe.'@;
      {? _dialog>0
      || FUN.emsg(_msg)
      || exec('komm_add','umowy_harm',_msg)
      ?}
   ?};

   {? _dialog>0 & _can_continue>0
   || {? exec('is_ended_any','umowy_harm')>0
      || _can_del:=FUN.ask('Harmonogram: %1 był redagowany i jest zakończony przynajmniej w jednym roku. Czy na pewno usunąć?'@[_what])
      || _can_del:=FUN.ask('Usunąć harmonogram: %1?'@[_what])
      ?}
   ?};

   {? _can_continue>0 & _can_del>0
   ||
      _mydo:=do_state()=0;
      {? _mydo || do() ?};

      {? HARMON.first()
      || {!
         |? _next:=0;
            _ref_nxt:=null();
            HARMON.cntx_psh();
            {? HARMON.next()
            || _ref_nxt:=HARMON.ref()
            ?};
            HARMON.cntx_pop();

            _can_continue:=HARMON.del(,1);

            {? _ref_nxt<>null()
            || _next:=HARMON.seek(_ref_nxt)
            ?};
            _next>0 & _can_continue>0
         !}
      ?};
      {? _can_continue>0
      || _can_continue:=HN.del(,1)
      ?};
      {? _can_continue<=0
      || undo()
      ?};
      {? _mydo || end() ?}
   ?};
   exec('blk_unlock','#table','HN',_ref)
?};
{? _can_continue>0 & _can_del>0
|| _result:=1;
   ~~
?};
_result


\bl_zharm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: obsluga zmiennej wyswietlającej harmonogram
::  OLD: \bl_zharm/um.fml
::----------------------------------------------------------------------------------------------------------------------
''


\bd_zharm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: obsluga zmiennej wyswietlającej harmonogram
::  OLD: \bd_zharm/um.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_rule:='';
_acr:=exec('get_acronym','#table',cur_tab(1,1),'_HN');
{? _acr<>''
|| _rule:='cur_tab(1,1).'+_acr+'().KOD'
?};

{? _rule<>''
|| _rule:=$_rule;
   _wyn:=UMO.HNK:=_rule()
|| _wyn:=UMO.HNK:=''
?};
_wyn


\be_zharm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: przed redakcja zmiennej wyswietlającej harmonogram
::  OLD: \be_zharm/um.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
:: [rr] nie ma takiej ścieżki w starym systemie
:: {? 2+menu_pth()='UE' || _wyn:=0 ?};
_wyn


\f3_zharm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: obsluga zmiennej wyswietlającej harmonogram
::  OLD: \f3_zharm/um.fml
::----------------------------------------------------------------------------------------------------------------------
UMO.HNK:='';
_env:=obj_new('MIASTO','ULICA','UPSYS','REJO','CUR_TAB');

_rule_mia:='';
_rule_ul:='';
_rule_upsys:='';
_rule_rejo:='';

_acr:=exec('get_acronym','#table',cur_tab(1,1),'_POS');
{? _acr<>''
|| _rule_mia:='cur_tab(1,1).'+_acr+'().MIA().NAZ';
   _rule_ul:='cur_tab(1,1).'+_acr+'().UL().UL';
   _rule_rejo:='cur_tab(1,1).'+_acr+'().REJO';
   ~~
?};
{? _rule_mia<>''
|| _env.MIASTO:=($_rule_mia)()
?};
{? _rule_ul<>''
|| _env.ULICA:=($_rule_ul)()
?};
{? _rule_rejo<>''
|| _env.REJO:=($_rule_rejo)()
?};

_acr:=exec('get_acronym','#table',cur_tab(1,1),'_UPSYS');
{? _acr<>''
|| _rule_upsys:='cur_tab(1,1).'+_acr
?};
{? _rule_upsys<>''
|| _env.UPSYS:=($_rule_upsys)()
?};
_env.CUR_TAB:=cur_tab(1,1);

params_set('env_harm_lok',_env);

HN.index('STAT_REJ');
HN.prefix(ST.ODDZ,'T','T');
HN.win_sel('SEL');
HN.hdr_sel(' (aktywne i zaakceptowane)'@);
{? HN.select(,1)>0
|| UMO.HNK:=HN.KOD
?};
HN.hdr_sel('');
UMO.HNK


\ae_zharm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: obsluga zmiennej wyswietlającej harmonogram
::  OLD: \ae_zharm/um.fml
::----------------------------------------------------------------------------------------------------------------------
exec('chk_zharm','umowy_harm',0)


\combo_rok_fill
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zwraca tabelkę dla combo z rokiem
::   WY: tab_tmp
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_tab:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'ROK','STRING[8]','Nazwa pola 1'
);

_current:=date()~1;
_size:=_env.COMBO_ROK_SIZE;

{! _it:=(_current-_size)..(_current-1)
|! _tab.blank();
   _tab.ROK:=$_it;
   _tab.add()
!};

{! _it:=_current..(_current+_size)
|! _tab.blank();
   _tab.ROK:=$_it;
   _tab.add()
!};
_tab


\combo_rok_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Ustawia na combo podany rok
::   WE: [_a] - INTEGER - rok który ustawić
::       [_b] - STRING - nazwa kontrolki
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_year:=_env.AR;
_do_action:=0;
{? var_pres('_a')=type_of(0)
|| {? _a<>_year
   || _year:=_a;
      _do_action:=1
   ?}
?};

_ctr_name:=_env.ctr_opt_name;
{? var_pres('_b')=type_of('')
|| _ctr_name:=_b
?};
_current:=date()~1;
_size:=_env.COMBO_ROK_SIZE;
{? fabs(_current-_year)>_size
|| ~~
|| exec('set_value','#desktop','',_ctr_name,'combo_rok@desktop',$_year,1,_do_action)
?};
~~


\combo_rok_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja po zmianie roku w combo
::   WE: [_a] - STRING - nazwa kontrolki
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_ctr_name:=_env.ctr_opt_name;
{? var_pres('_a')=type_of('')
|| _ctr_name:=_a
?};

_val:=exec('get_value','#desktop','',_ctr_name,'combo_rok@desktop');
{? _val<>''
|| _year:=#_val;
   {? _env.AR<>_year
   || _env.AR:=_year;
::      HA.HEADSTAT:='Zakończono w: %1?'@[$_env.AR];
      _env.RELOAD:=1;
      {? _env.F3_MODE>0
      || exec('grp_disp_f3','umowy_harm');
         _env.RELOAD:=0;
         ~~
      |? _env.ONE_MODE>0
      || exec('load_one','umowy_harm')
      || grp_disp(HN,_env.WIN_HN,1)
      ?};
      ~~
   ?};
   ~~
?};
~~


\rok_prev
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja zmiany na poprzedni rok
::   WE: [_a] - nazwa kontrolki
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;
_ctr_name:=~~;
{? var_pres('_a')=type_of('')
|| _ctr_name:=_a
?};
exec('combo_rok_set','umowy_harm',_env.AR-1,_ctr_name);
1


\rok_next
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja zmiany na następny rok
::   WE: [_a] - nazwa kontrolki
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;
_ctr_name:=~~;
{? var_pres('_a')=type_of('')
|| _ctr_name:=_a
?};
exec('combo_rok_set','umowy_harm',_env.AR+1,_ctr_name);
1


\get_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Generuje identyfikator dla widoków graficznych
::       Kontekst działania - rekord tabeli DATY i HN
::   WE: [_a] - INTEGER - 0/1 - czy do ID elementów dodawać nr identyfikacyjny HN
::       [_b] - STRING - prefix do identyfikatora
::       [_c] - STRING - suffix do identyfikatora
::       [_d] - INTEGER - nr miesiąca, jeżeli nie podany to z tabeli DATY
::   WY:
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_hn_nr:=0;
{? var_pres('_a')=type_of(0)
|| _hn_nr:=_a
?};
_prefix:='';
{? var_pres('_b')=type_of('')
|| _prefix:=_b
?};
_suffix:='';
{? var_pres('_c')=type_of('')
|| _suffix:=_c
?};
_month:=DATY.MIESIAC;
{? var_pres('_d')=type_of(0)
|| _month:=_d
?};

_result:=_prefix+$DATY.DATA;
_result+='_'+form(_month,-2);
{? _hn_nr>0
|| _result+='_'+form(HN.NR,-4,,'99')
?};
_result+=_suffix;
_result


\legenda_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja po Legendzie - aktualizuje kolor na liście
::   WE: _a - obj_new - obiekt środowiska
::   WY: 0 - nic się nie zmieniło, nie trzeba odświeżać widoku
::       1 - nastąpiły zmiany, należy odświeżyć widok
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=~~;
{? var_pres('_a')>100
|| _env:=_a
|| _env:=params_get().env_harm
?};

_result:=0;
_color:=Color.fnd_kol('HARM#02#01');
{? _color<>''
|| {? var_pres('_split')>100
   || obj_del(_split)
   ?};
   _split:=spli_str(_color,',');
   _holy:=_split[1];
   {? _env.LIST_COLOR_HOLY<>_holy
   || _env.LIST_COLOR_HOLY:=_holy;
      _result:=1
   ?}
?};
_color:=Color.fnd_kol('HARM#02#02');
{? _color<>''
|| {? var_pres('_split')>100
   || obj_del(_split)
   ?};
   _split:=spli_str(_color,',');
   _free:=_split[1];
   {? _env.LIST_COLOR_FREE<>_free
   || _env.LIST_COLOR_FREE:=_free;
      _result:=1
   ?}
?};
_color:=Color.fnd_kol('HARM#02#03');
{? _color<>''
|| {? var_pres('_split')>100
   || obj_del(_split)
   ?};
   _split:=spli_str(_color,',');
   _border:=_split[1];
   {? _env.LIST_COLOR_BORDER<>_border
   || _env.LIST_COLOR_BORDER:=_border;
      _result:=1
   ?}
?};
_color:=Color.fnd_kol('HARM#02#04');
{? _color<>''
|| {? var_pres('_split')>100
   || obj_del(_split)
   ?};
   _split:=spli_str(_color,',');
   _pos:=_split[1];
   {? _env.LIST_COLOR_POS<>_pos
   || _env.LIST_COLOR_POS:=_pos;
      _result:=1
   ?}
?};
_result


\actions_grayed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuła na wyszarzanie akcji w oknie wertowania WER tabeli HN
::   WE: [_a] - INTEGER - czy dostępny kalendarz
::       [_b] - STRING - akronim okienka tabeli HN, jeżeli nie podane to cur_win(1,1)
::   WY: STRING - zwraca akcje które zostały wyszarzone
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_cal:=1;
{? var_pres('_a')=type_of(0)
|| _cal:=_a
?};
_win:='';
{? var_pres('_b')=type_of('')
|| _win:=_b
|| _win:=cur_win(1,1)
?};

_keys:=':';
_sel:=HN.sel_size();

{? _env.SINGLE<>null()
|| _keys:='R'+_keys+'R'
?};
{? HN.AKT<>'T' & _sel=0
|| _keys:='G'+_keys
?};

{? _sel=0
||
   {? HN.AKT='T'
   || _keys:='A'+_keys
   || _keys:='E'+_keys
   ?}
?};

{? exec('errors_present','umowy_harm',_env.AR)=0
||
:: Nie ma komunikatów, wyszarzam akcję
   _keys:='N'+_keys
?};
{? HN.STAT_REJ='T' & _sel=0
|| _keys:='CPU'+_keys
?};
_can_continue:=1;

{? _sel=0
||
   {? _cal>0
   ||
      _harmon_end:=exec('is_ended','umowy_harm',,_env.AR);
      _has_action:=exec('chk_role','#b__box',OPERATOR.USER,'LUM_HAW_DPHA');
      _elements:=exec('elements_table','#desktop');
      {? _harmon_end>0 | _has_action=0
      || _keys:='GWZ'+_keys;
::       Edycja w danym roku zakończona, lub brak uprawnien, gaszę przyciski
         exec('set_enabled_grp','#desktop','','','btn_add@buttons',0,_elements);
         exec('set_enabled_grp','#desktop','','','btn_del@buttons',0,_elements);
         exec('set_enabled_grp','#desktop','','','btn_zak@buttons',0,_elements);
         ~~
      ||
         {? HN.STAT_REJ<>'T'
         || _keys:='F'+_keys
         ?};
::       Edycja w danym roku niezakończona, odblokowuję przyciski
         exec('set_enabled_grp','#desktop','','','btn_add@buttons',1,_elements);
         exec('set_enabled_grp','#desktop','','','btn_del@buttons',1,_elements);
         exec('set_enabled_grp','#desktop','','','btn_zak@buttons',1,_elements);
         ~~
      ?};
      {? _env.ctr_rok_name<>''
      || exec('update','#desktop',_elements,_env.ctr_rok_name)
      ?};
      {? _env.ctr_rok2_name<>''
      || exec('update','#desktop',_elements,_env.ctr_rok2_name)
      ?};
      {? _env.ctr_cal_name<>''
      || exec('update','#desktop',_elements,_env.ctr_cal_name)
      ?};
      ~~
   ||
::    Brak kalendarza, kontrolek już nie widać, wyłączam same akcje
      _keys:='GWZ'+_keys
   ?}
?};
HN.actions_grayed(_win,_keys);
_keys


\select_row
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Zaznacza kolumnę w widoku kalendarza
::   WE: _a - STRING - identyfikator widoku
::       [_b] - STRING - identyfikator elementu z którego pobrać zaznaczenie
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_view:=_a;
_sel_element:='days@desktop';
{? var_pres('_b')=type_of('')
|| _sel_element:=_b
?};

_tab:=~~;
_ctr_id:='';
_ndx:=~~;
{? _view='rok'
|| _tab:=_env.TAB_CTR_ROK;
   _ndx:=_env.NDX_ROK_COL_ID;
   _ctr_id:=_env.ctr_rok_name
|? _view='rok2'
|| _tab:=_env.TAB_CTR_ROK2;
   _ndx:=_env.NDX_ROK2_COL_ID;
   _ctr_id:=_env.ctr_rok2_name
|? _view='cal'
|| _tab:=_env.TAB_CTR_CAL;
   _ndx:=_env.NDX_CAL_COL_ID;
   _ctr_id:=_env.ctr_cal_name
|? _view='all'
|| _tab:=_env.TAB_CTR_ALL;
   _ndx:=_env.NDX_ALL_COL_ID;
   _ctr_id:=_env.ctr_all_name
?};
_tab.cntx_psh();

_tab.index(_ndx);
:: pobieram zaznaczenie
_selection:=exec('get_selection','#desktop','',_ctr_id,_sel_element);
_elements:=exec('elements_table','#desktop');
{? _selection.first()
|| {!
   |?
      _tab.prefix(_selection.KEY,);
      {? _tab.first()
      || {!
         |? _elements.blank();
            _elements.ID_SYS:='calendar@desktop';
            _elements.VALUE:='select_add='+_tab.ID;
            _elements.add();
            _tab.next()
         !}
      ?};
      _selection.next()
   !}
?};
exec('update','#desktop',_elements,_ctr_id);
_tab.cntx_pop();
~~


\change_selection
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuła po zmianie zaznaczenia w kalendarzu
::   WE: _a - STRING - 'true', 'false' - czy zmiana zaznaczenia została wykonana z powodu zaznacznia
::                     programowego
::       _b - STRING - identyfikator widoku
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_formula_selection:=_a;
params_set(params_get());
_env:=params_get().env_harm;

_view:=_b;
_ctr_id:='';
_element:='days@desktop';
{? _view='rok'
|| _ctr_id:=_env.ctr_rok_name
|? _view='rok2'
|| _ctr_id:=_env.ctr_rok2_name
|? _view='cal'
|| _ctr_id:=_env.ctr_cal_name
?};
{? _view='all'
|| _ctr_id:=_env.ctr_all_name;
   {? _formula_selection='false'
   || exec('set_value','#desktop','',_ctr_id,_element,'select_clear=1');
      exec('set_value','#desktop','',_ctr_id,'head@desktop','select_clear=1');
      exec('set_value','#desktop','',_ctr_id,'roman@desktop','select_clear=1')
   ?}
|| {? _formula_selection='false'
   || exec('set_value','#desktop','',_ctr_id,_element,'select_clear=1')
   ?}
?};
~~


\hn_legend_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja legenda w oknie wertowania HN
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

exec('legenda','color','@HARM#02');

{? exec('legenda_after','umowy_harm')>0
|| _env.RELOAD:=1;
   {? _env.F3_MODE=0
   || grp_disp(HN,_env.WIN_HN,1)
   || exec('grp_disp_f3','umowy_harm');
      _env.RELOAD:=0
   ?}
?};
~~


\action_plus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja na plusik
::   WE: _a - STRING - którego widoku dotyczy: 'rok', 'rok2'
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_view:=_a;

_can_continue:=1;

{? _view<>'all'
||
   {? exec('is_ended','umowy_harm',,_env.AR)>0
   || _can_continue:=0;
      _what:=exec('HN','#to_string');
      FUN.emsg('Edycja harmonogramu: %1 w roku: %2 została już zakończona. Akcja niedozwolona.'@[_what,$_env.AR])
   ?}
?};

HN.cntx_psh();

{? _can_continue>0
||
   _id:='';
   _tab:=~~;
   {? _view='rok'
   || _tab:=_env.TAB_CTR_ROK;
      _id:=_env.ctr_rok_name
   |? _view='rok2'
   || _tab:=_env.TAB_CTR_ROK2;
      _id:=_env.ctr_rok2_name
   |? _view='cal'
   || _tab:=_env.TAB_CTR_CAL;
      _id:=_env.ctr_cal_name
   |? _view='all'
   || _tab:=_env.TAB_CTR_ALL;
      _id:=_env.ctr_all_name;
      HN.index('ODNR')
   ?};
   _tab.cntx_psh();
   _selection:=exec('get_selection','#desktop','',_id,'calendar@desktop');

   {? _view='all' | _selection.size()>1
   || KOMM.init(250,,'Edycja harmonogramu'@)
   ?};

   {? _selection.first()
   || _can_continue:=FUN.ask('Zaznaczonych dni kalendarza: %1. Czy utworzyć tam pozycje harmonogramu?'@[$_selection.size()]);
      {? _can_continue>0
      ||
         {!
         |?
            _can_edit:=1;
            {? _view='all'
            ||
               {? var_pres('_split')>100
               || obj_del(_split)
               ?};
               _split:=spli_str(_selection.KEY,'_');
               _hn_nr:=#_split[3];
               HN.prefix(ST.ODDZ,_hn_nr);
               _can_continue:=HN.first();
               {? _can_continue>0
               ||
                  {? exec('is_ended','umowy_harm',,_env.AR)>0
                  || _can_edit:=0;
                     _what:=exec('HN','#to_string');
                     _msg:='Edycja harmonogramu: %1 w roku: %2 została już zakończona. Akcja niedozwolona.'@[_what,$_env.AR];
                     exec('komm_add','umowy_harm',_msg)
                  ?}
               ?}
            ?};
            {? _can_continue<>0 & _can_edit>0
            ||
               _tab.prefix(_selection.KEY,);
               {? _tab.first()
               || {? _tab.DESC<>'' | _tab.BOR_SIZE>0
                  ||
                     _date:=exec('str2date','#convert',10+_tab.ID);

                     {? _date<>date(0,0,0)
                     ||
                        {? exec('editable','umowy_harm',_date)=0
                        || _msg:='Dla okresu: %1 wygenerowano już zgłoszenia. Akcja niedozwolona.'@[_date$8];
                           {? _view='all' | _selection.size()>1
                           || _can_edit:=0;
                              exec('komm_add','umowy_harm',_msg)
                           || _can_continue:=0;
                              FUN.emsg(_msg)
                           ?}
                        ?};
                        {? _can_continue<>0 & _can_edit>0
                        || _can_continue:=exec('pos_create','umowy_harm',_date,'F',1,,1)
                        ?}
                     ?}
                  ?}
               ?}
            ?};
            _selection.next() & _can_continue<>0
         !}
      ?}
   || FUN.emsg('Nie zaznaczono żadnych dni w kalendarzu.'@)
   ?};
   _tab.cntx_pop();
   {? _view='all' | _selection.size()>1
   || KOMM.select()
   ?}
?};
HN.cntx_pop();
{? _can_continue<>0
|| _env.RELOAD:=1;
   _env.RFR_CAL:=null();
   _env.RFR_ROK:=null();
   grp_disp(HN,_env.WIN_HN,1)
?};
~~


\action_minus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja na plusik
::   WE: _a - STRING - którego widoku dotyczy: 'rok', 'rok2'
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_view:=_a;

_can_continue:=1;

{? _view<>'all'
||
   {? exec('is_ended','umowy_harm',,_env.AR)>0
   || _can_continue:=0;
      _what:=exec('HN','#to_string');
      FUN.emsg('Edycja harmonogramu: %1 w roku: %2 została już zakończona. Akcja niedozwolona.'@[_what,$_env.AR])
   ?}
?};

HN.cntx_psh();
{? _can_continue>0
||
   _id:='';
   _tab:=~~;
   {? _view='rok'
   || _tab:=_env.TAB_CTR_ROK;
      _id:=_env.ctr_rok_name
   |? _view='rok2'
   || _tab:=_env.TAB_CTR_ROK2;
      _id:=_env.ctr_rok2_name
   |? _view='cal'
   || _tab:=_env.TAB_CTR_CAL;
      _id:=_env.ctr_cal_name
   |? _view='all'
   || _tab:=_env.TAB_CTR_ALL;
      _id:=_env.ctr_all_name;
      HN.index('ODNR');
      KOMM.init(250,,'Edycja harmonogramu')
   ?};

   _tab.cntx_psh();
   _selection:=exec('get_selection','#desktop','',_id,'calendar@desktop');

   {? _view='all' | _selection.size()>1
   || KOMM.init(250,,'Edycja harmonogramu'@)
   ?};

   {? _selection.first()
   || _can_continue:=FUN.ask('Zaznaczonych dni kalendarza: %1. Czy usunąć z nich pozycje harmonogramu?'@[$_selection.size()]);
      {? _can_continue>0
      ||
         {!
         |? _can_edit:=1;
            {? _view='all'
            || {? var_pres('_split')>100
               || obj_del(_split)
               ?};
               _split:=spli_str(_selection.KEY,'_');
               _hn_nr:=#_split[3];
               HN.prefix(ST.ODDZ,_hn_nr);
               _can_continue:=HN.first();
               {? _can_continue>0
               ||
                  {? exec('is_ended','umowy_harm',,_env.AR)>0
                  || _can_edit:=0;
                     _what:=exec('HN','#to_string');
                     _msg:='Edycja harmonogramu: %1 w roku: %2 została już zakończona. Akcja niedozwolona.'@[_what,$_env.AR];
                     exec('komm_add','umowy_harm',_msg)
                  ?}
               ?}
            ?};
            {? _can_continue<>0 & _can_edit>0
            ||
               _tab.prefix(_selection.KEY,);
               {? _tab.first()
               || {? _tab.DESC<>'' | _tab.BOR_SIZE>0
                  ||
                     _date:=exec('str2date','#convert',10+_tab.ID);
                     {? _date<>date(0,0,0)
                     ||
                        {? exec('editable','umowy_harm',_date)=0
                        || _msg:='Dla okresu: %1 wygenerowano już zgłoszenia. Akcja niedozwolona.'@[_date$8];
                           {? _view='all' | _selection.size()>1
                           || _can_edit:=0;
                              exec('komm_add','umowy_harm',_msg)
                           || _can_continue:=0;
                              FUN.emsg(_msg)
                           ?}
                        ?};

                        {? _can_continue<>0 & _can_edit>0
                        || _can_continue:=exec('pos_delete','umowy_harm',_date,1)
                        ?}
                     ?}
                  ?}
               ?}
            ?};
            _selection.next() & _can_continue<>0
         !}
      ?}
   || FUN.emsg('Nie zaznaczono żadnych dni w kalendarzu.'@)
   ?};
   _tab.cntx_pop();
   {? _view='all'
   || KOMM.select()
   ?}
?};
HN.cntx_pop();
{? _can_continue<>0
|| _env.RELOAD:=1;
   _env.RFR_CAL:=null();
   _env.RFR_ROK:=null();
   grp_disp(HN,_env.WIN_HN,1)
?};
~~


\action_revert
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja na dwuklik na kalendarzu - jeżeli nie było pozycji to ją zakłada, jeśli była to usuwa
::   WE: _a - STRING - którego widoku dotyczy: 'rok', 'rok2'
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_view:=_a;

_can_continue:=1;

{? exec('is_ended','umowy_harm',,_env.AR)>0
|| _can_continue:=0;
   _what:=exec('HN','#to_string');
   FUN.emsg('Edycja harmonogramu: %1 w roku: %2 została już zakończona. Akcja niedozwolona.'@[_what,$_env.AR])
?};

{? _can_continue>0
|| _can_continue:=exec('chk_role','#b__box',OPERATOR.USER,'LUM_HAW_DPHA');
   {? _can_continue=0
   || FUN.emsg('Brak uprawnień do redagowania harmonogramu.'@)
   ?}
?};

{? _can_continue>0
||
   _id:='';
   _tab:=~~;
   {? _view='rok'
   || _tab:=_env.TAB_CTR_ROK;
      _id:=_env.ctr_rok_name
   |? _view='rok2'
   || _tab:=_env.TAB_CTR_ROK2;
      _id:=_env.ctr_rok2_name
   |? _view='cal'
   || _tab:=_env.TAB_CTR_CAL;
      _id:=_env.ctr_cal_name
   ?};


   _tab.cntx_psh();
   _selection:=exec('get_selection','#desktop','',_id,'calendar@desktop');

   {? _selection.first()
   ||
      _tab.prefix(_selection.KEY,);
      {? _tab.first()
      || {? _tab.DESC<>''
         ||
            _can_edit:=1;
            _date:=exec('str2date','#convert',10+_tab.ID);
            {? _date<>date(0,0,0)
            ||
               {? exec('editable','umowy_harm',_date)=0
               || _msg:='Dla okresu: %1 wygenerowano już zgłoszenia. Akcja niedozwolona.'@[_date$8];
                  {? _view='all'
                  || _can_edit:=0;
                     exec('komm_add','umowy_harm',_msg)
                  || _can_continue:=0;
                     FUN.emsg(_msg)
                  ?}
               ?};
               {? _can_continue<>0 & _can_edit>0
               ||
                  {? exec('pos_present','umowy_harm',_date)>0
                  || _can_continue:=exec('pos_delete','umowy_harm',_date,1)
                  || _can_continue:=exec('pos_create','umowy_harm',_date,'F',1,,1)
                  ?}
               ?}
            ?}
         ?}
      ?}
   || FUN.emsg('Nie zaznaczono żadnych dni w kalendarzu.'@)
   ?};
   {? _can_continue<>0
   || _env.RELOAD:=1;
      grp_disp(HN,_env.WIN_HN,1)
   ?};
   _tab.cntx_pop()
?};
~~


\hn_wycofaj_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja 'Wycofaj' dla harmonogramu w bieżącym roku
::       Kontekst pracy - rekord tabeli HN
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_what:=exec('HN','#to_string');

_result:=0;
_can_continue:=1;

_dialog:=1;
{? HN.sel_size()>0
|| _dialog:=0
?};


_mode:=_env.WYC_MODE;

{? _dialog>0
||
   {? HN.STAT_REJ='T'
   || _mode+='A'
   ?};
   {? exec('is_ended','umowy_harm',,_env.AR)
   || _mode+='Z'
   ?};
   {? _mode='AZ'
   || _msg:='Wybierz jedną z opcji wycofania akceptacji lub zakończenia redakcji harmonogramu: %1'@[_what];
      _choice:=FUN.choice(_msg,,'Akceptację'@,'Akceptację+zakończenie w: %1'@[$_env.AR],'Zakończenie w: %1'@[$_env.AR]);
      {? _choice=1
      || _can_continue:=1;
         _mode:='A'
      |? _choice=2
      || _can_continue:=1
      |? _choice=3
      || _mode:='Z'
      || _can_continue:=0
      ?}
   |? _mode='A'
   || _can_continue:=FUN.ask('Wycofać akceptację harmonogramu: %1?'@[_what])
   |? _mode='Z'
   || _can_continue:=FUN.ask('Wycofać zakończenie redakcji harmonogramu: %1 w roku: %2?'@[_what,$_env.AR])
   ?}
?};

{? _can_continue>0
||
   _locked:=exec('blk_lock','#table','HN',HN.ref(),,1,{? VAR.GRUPA='T' || '' || 'Harmonogram %1 jest redagowany'@[_what] ?});
   {? _locked
   ||
      {? _mode*'A'>0
      || HN.STAT_REJ:='N';
         _can_continue:=HN.put()
      ?};
      {? _mode*'Z'>0
      ||
         HARMON.cntx_psh();
         HARMON.index('HN');
         HARMON.prefix(HN.ODDZ,HN.KOD,_env.AR);
         _can_continue:=1;
         _harmon_end:=0;
         {? HARMON.first()
         || {!
            |? HARMON.STAT_REJ:='N';
               _can_continue:=HARMON.put();
               HARMON.next() & _can_continue>0
            !}
         ?};
         HARMON.cntx_pop()
      ?};
      exec('blk_unlock','#table','HN',HN.ref())
   ||
      {? VAR.GRUPA='T'
      || KOMM.add('Nie można generować harmonogramu %1 — jest redagowany.'@[_what])
      ?}
   ?}
?};
{? _can_continue>0
|| _result:=1
?};
{? _result>0 & _dialog>0
|| grp_disp(HN,_env.WIN_HN,1)
?};
_result


\hn_wycofaj_gr1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja 'Wycofaj' dla harmonogramu w bieżącym roku - akcja grupa przed
::   WY: 0/1
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_result:=0;
_ilosc:=HN.sel_size();

_can_continue:=1;
_msg:='Ilość zaznaczonych harmonogramów: %1.\n\n'
      'Wybierz jedną z opcji wycofania akceptacji lub zakończenia redakcji wszystkich zaznaczonych harmonogramów'@[$_ilosc];
_choice:=FUN.choice(_msg,,'Akceptację+zakończenie w: %1'@[$_env.AR],'Zakończenie w: %1'@[$_env.AR]);
{? _choice=1
|| _env.WYC_MODE:='AZ'
|? _choice=2
|| _env.WYC_MODE:='Z'
|| _can_continue:=0
?};

{? _can_continue>0
||
   sel_nchk();
   VAR.GRUPA:='T';
   KOMM.init(255,,'Wycofywanie harmonogramów umów'@);
   _result:=1
?};
_result


\hn_wycofaj_gr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja 'Wycofaj' dla harmonogramu w bieżącym roku - akcja grupa po
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

VAR.GRUPA:='N';
KOMM.select();
grp_disp(HN,_env.WIN_HN,1);
~~


\is_ended
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Sprawdza czy harmonogram jest już w podanym roku zakończony
::   WE: [_a] - HN.ref lub aktualny rekord
::       [_b] - INTEGER - rok, lub aktualny rok
::   WY: 0 - nie zakonczony
::       1 - zakończony
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
{? var_pres('_a')=type_of(HN.ref())
|| _ref:=_a
?};
_rok:=date()~1;
{? var_pres('_b')=type_of(0)
|| _rok:=_b
?};

_result:=0;
_can_continue:=1;

HN.cntx_psh();
{? _ref<>null()
|| HN.prefix();
   {? HN.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   HARMON.cntx_psh();
   HARMON.index('HN');
   HARMON.prefix(HN.ODDZ,HN.KOD,_rok);
   _can_continue:=1;
   _result:=0;
   {? HARMON.first()
   || {!
      |? {? HARMON.STAT_REJ='Z'
         || _can_continue:=0;
            _result:=1
         ?};
         HARMON.next() & _can_continue>0
      !}
   ?};
   HARMON.cntx_pop();
   ~~
?};
HN.cntx_pop();
_result


\is_ended_any
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Sprawdza czy harmonogram jest zakończony w jakimkolwiek roku
::   WE: [_a] - HN.ref lub aktualny rekord
::   WY: 0 - nie zakonczony
::       1 - zakończony
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
{? var_pres('_a')=type_of(HN.ref())
|| _ref:=_a
?};
_result:=0;
_can_continue:=1;

HN.cntx_psh();
{? _ref<>null()
|| HN.prefix();
   {? HN.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   HARMON.cntx_psh();
   HARMON.index('HN');
   HARMON.prefix(HN.ODDZ,HN.KOD);
   _can_continue:=1;
   _result:=0;
   {? HARMON.first()
   || {!
      |? {? HARMON.STAT_REJ='Z'
         || _can_continue:=0;
            _result:=1
         ?};
         HARMON.next() & _can_continue>0
      !}
   ?};
   HARMON.cntx_pop();
   ~~
?};
HN.cntx_pop();
_result


\icon_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Formuły na ICON_BEFORE dla okien harmonogramu umów
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_formikon:="

   params_set(params_get());
   _env:=params_get().env_harm;

   {? HN.STAT_REJ='T' || exec('zaakceptowany','icon')
   |? HN.STAT_REJ='Z' || exec('zarejestrowany','icon')
   |? HN.STAT_REJ='N' || exec('pusta','#icon')
   || exec('pusta','#icon')
   ?}

";
HN.win_fml('WER',,'KOD',,'ICON_BEFORE',_formikon);
~~


\hn_record_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Rekord przed w oknie wertowania HN
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

HA.STAT_REJ:='';
HARMON.cntx_psh();
HARMON.index('HN');
HARMON.prefix(HN.ODDZ,HN.KOD,_env.AR);
{? HARMON.first()
|| HA.STAT_REJ:=HARMON.STAT_REJ
?};
HARMON.cntx_pop();
~~


\hn_zakres_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja 'Zakrs' w oknie wertowania HN
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_names:=obj_new(3);
_names[1]:='Wszystkie'@;
_names[2]:='Aktywne'@;
_names[3]:='Nieaktywne'@;

_values:=obj_new(3);
_values[1]:='W';
_values[2]:='T';
_values[3]:='N';
_edit:=exec('edit_radiobutton','#edit',_env.ZAKRES,'Zakres wyświetlanych harmongramów',_names,_values);
{? type_of(_edit)>0
|| _env.ZAKRES:=_edit;
   {? _edit='W'
   || HN.index('ODDZ');
      HN.prefix(ST.ODDZ)
   || HN.index('NAZ');
      HN.prefix(_edit,ST.ODDZ)
   ?}
?};
~~


\hn_errors_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja 'Błędy generowania' w tabeli wertowania HN
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_what:=exec('HN','#to_string');
HARMON.cntx_psh();
HARMON.index('HN');
HARMON.prefix(ST.ODDZ,HN.KOD,_env.AR,1);
{? HARMON.first()
||
   HARMON.memo_get(,'BL',0);
   HARMON.memo_vie(1,'BL')
|| FUN.emsg('Harmonogram: %1 nie został jeszcze wygenerowany na rok: %2'@[_what,$_env.AR])
?};
HARMON.cntx_pop();
~~


\set_cal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Ustawia kalendarz, sprawdza czy jest wypełniony w bieżącym roku
::   WE: [_a] - KAL_NAZW - kalendarz który ustawić, jeśli nie podany to bierze
::              kalendarz ustawiony w parametrze nr 8 (najczęściej standard)
::       [_b] - INTEGER - czy wyświetlać dialogi na ekranie
::       [_c] - INTEGER - rok w którym sprawdzać czy kalendarz wypełniony,
::   WY: 0 - brak kalendarza, lub kalendarz w danym roku nie wypełniony
::       1 - kalendarz ok
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_can_continue:=1;
_result:=0;

_cal:=null();
{? var_pres('_a')=type_of(KAL_NAZW.ref())
|| _cal:=_a
?};
_dialog:=1;
{? var_pres('_b')=type_of(0)
|| _dialog:=_b
?};
_ar:=0;
{? var_pres('_c')=type_of(0)
|| _ar:=_c
|| _env:=params_get().env_harm;
   _ar:=_env.AR
?};

{? _cal=null()
|| KAL_NAZW.cntx_psh();
   KAL_NAZW.index('KAL_NAZW');
   _kalnaz:=exec('get_par','#parametr',8);
   {? _kalnaz=''
   || _kalnaz:='standard'
   ?};
   KAL_NAZW.prefix(REF.FIRMA,_kalnaz,);
   {? KAL_NAZW.first()
   || _cal:=KAL_NAZW.ref()
   || _msg:='Brak kalendarza: %1'@[_kalnaz];
      {? _dialog=1
      || FUN.emsg(_msg)
      |? _dialog=2
      || exec('komm_add','umowy_harm',_msg)
      ?};
      _can_continue:=0
   ?};
   KAL_NAZW.cntx_pop()
?};
_can_continue:=__KAL.set_cal(_cal);
{? _can_continue>0
||
:: Sprawdzam czy kalendarz wygenerowany w bieżącym roku
   {? __KAL.get_day(date(_ar,1,1))=null()
   || _cal_name:=exec('record','#to_string',_cal);
      _can_continue:=0;
      _msg:='Kalendarz: %1 nie wypełniony w roku: %2'@[_cal_name,$_ar];
      {? _dialog=1
      || FUN.emsg(_msg)
      |? _dialog=2
      || exec('komm_add','umowy_harm',_msg)
      ?};
      ~~
   ?}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\select_harmon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Dla bieżącego HN wyświetla stary widok tabeli HARMON - przydatne do debugowania
::       Kontekst pracy - HN
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

HARMON.cntx_psh();
HARMON.index('HN');
HARMON.prefix(ST.ODDZ,HN.KOD,_env.AR);
HARMON.win_sel(_env.WIN_MONTH);
HARMON.select();
HARMON.cntx_pop();
~~


\errors_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Dla bieżącego rekordu HN odszukuje pierwszy rekord w tabeli HARMON i w nim
::       dodaje do memo treść błędu
::   WE: _a - STRING - treść błędu
::       _b - INTEGER - rok harmonogramu
::       [_b] - INTEGER - [0]/1 - czy dodawać nagłówek
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_msg:=_a;
_rok:=_b;
_header:=0;
{? var_pres('_c')=type_of(0)
|| _header:=_c
?};

_can_continue:=1;
_result:=0;

HARMON.cntx_psh();
HARMON.index('HN');
_what:=exec('HN','#to_string');
HARMON.prefix(HN.ODDZ,HN.KOD,_rok,1);
{? HARMON.first()
||
   HARMON.ERRORS:='T';
   _can_continue:=HARMON.put();
   {? _can_continue>0
   ||
      _txt:=HARMON.memo_txt(,1,'BL');
      {? _header>0
      || _when:=exec('to_string','#tm_stamp',HARMON.tm_stamp());
         _txt+='Wygenerowano: %1 przez użytkownika: %2\n\n'@[_when,OPERATOR.USER().KOD]
      ?};
      _txt+=_msg+'\n';
      HARMON.memo_set(_txt,'BL');
      _can_continue:=HARMON.memo_put(,'BL')
   ?}
|| FUN.emsg('Harmonogram: %1 nie został jeszcze wygenerowany na rok: %2'@[_what,$_rok])
?};
HARMON.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\errors_present
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Dla bieżącego rekordu HN sprawdza czy istnieją jakieś błędy generowania w danym roku
::   WE: _a - INTEGER - rok harmonogramu
::   WY: 0 - brak błędów
::       1 - są błędy
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_rok:=_a;

_result:=0;
HARMON.cntx_psh();
HARMON.index('HN');
HARMON.prefix(HN.ODDZ,HN.KOD,_rok,1);
{? HARMON.first()
|| {? HARMON.ERRORS='T'
   || _result:=1
   ?}
?};
HARMON.cntx_pop();
_result


\hn_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja wyświetl dla HN
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------

HN.win_edit('RED');
HN.display();
~~


\select_single
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wyświetla pojedyńczy harmonogram
::   WE: [_a] - HN.ref lub bieżący rekord
::       [_b] - INTEGER - rok harmonogramu, jeśli podany nie będzie można go zmienić
::       [_c] - INTEGER - 0/[1] - czy akcje edycyjne mają uruchamiać czynność
::       [_d] - INTEGER - 0/[1] - czy mają być akcje edycyjne
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
{? var_pres('_a')=type_of(HN.ref())
|| _ref:=_a
?};
_ar:=0;
{? var_pres('_b')=type_of(0)
|| _ar:=_b
?};
_mp_run:=1;
{? var_pres('_c')=type_of(0)
|| _mp_run:=_c
?};
_edit:=1;
{? var_pres('_d')=type_of(0)
|| _edit:=_d
?};

_result:=0;
_can_continue:=1;

_hid_actions:='';

HN.cntx_psh();
{? _ref<>null()
|| HN.prefix();
   {? HN.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
|| _env_harm:=exec('env','umowy_harm');
   params_set('env_harm',_env_harm);
   _env_harm.SINGLE:=HN.ref();
   {? _ar>0
   || _env_harm.AR:=_ar;
      _env_harm.AR_LOCK:=1
   ?};
   _env_harm.MP_RUN:=_mp_run;
   {? _edit=0
   || _env_harm.WIN_HN:='SLO';
      _hid_actions:='H:H'
   ?};
   _env_harm.select(_hid_actions)
?};
HN.cntx_pop();
~~


\select_lok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wyświetla harmonogramy wg lokalizacji
::   WE: [_a] - STRING - miasto
::       [_b] - STRING - ulica
::       [_c] - UPSYS.ref - system usług
::       [_d] - REJO.ref - rejon
::       [_e] - uchwyt do tabeli, w kontekście której działam: UP, UPMPOJ, UPMSEL
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_miasto:='';
{? var_pres('_a')=type_of('')
|| _miasto:=_a
?};
_ulica:='';
{? var_pres('_b')=type_of('')
|| _ulica:=_b
?};
_upsys:=null();
{? var_pres('_c')=type_of(UPSYS.ref())
|| _upsys:=_c
?};
_rejo:=null();
{? var_pres('_d')=type_of(REJO.ref())
|| _rejo:=_d
?};
_cur_tab:=~~;
{? var_pres('_e')>100
|| _cur_tab:=_e
?};

HN.cntx_psh();
_result:=null();
_can_continue:=1;

{? _can_continue>0
|| _env_harm:=exec('env','umowy_harm');
   params_set('env_harm',_env_harm);
   _result:=_env_harm.f3(_miasto,_ulica,,,_cur_tab)
?};
HN.cntx_pop();
_result


\komm_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Dodaje komunikat do KOMMa podczas operacji na harmonogramie
::   WE: _a - STRING - treść komunikatu
::       [_b] - INTEGER - numer ikony
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_msg:=_a;

_icon:=2;
{? var_pres('_b')=type_of(0) | var_pres('_b')=type_of('')
|| _icon:=_b
?};
_sect:='';
_sect_nr:=0;
_sect:=exec('HN','#to_string');
_sect_nr:=KOMM.find_msg(_sect);
{? _sect_nr
|| KOMM.set_root(_sect)
|| _sect_nr:=KOMM.sect_beg(_sect)
?};
{? KOMM.find_msg(_msg,_sect_nr)=0
|| KOMM.add(_msg,_icon,,1)
?};
KOMM.sect_end();
~~


\hn_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [WH] [19.22]
:: OPIS: Nagłówek harmonogramu - tymczasowe okienko redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_akr:='RED';
:: Tymczasowe okno redakcji
_title:='Harmonogram umów';
_win_red:=HN.mk_edit(_title);
::HN.win_etab(_win_red,'Dane podstawowe'@);
HN.win_ewin(_win_red,,_win_akr);
_win_red


\load_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Ładuje zawartość okienka do
::   WE: _a - STRING - miasto
::       _b - STRING - ulica
::       [_c] - uchwyt do tabeli, w kontekście której działam: UP, UPMPOJ, UPMSEL
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_miasto:='';
{? var_pres('_a')=type_of('')
|| _miasto:=_a
?};
_ulica:='';
{? var_pres('_b')=type_of('')
|| _ulica:=_b
?};
_cur_tab:=~~;
_context:='';
{? var_pres('_c')>100
|| _cur_tab:=_c;
   _context:=2-!_cur_tab
?};

_can_continue:=1;
_result:=0;

_progress:=1;

HN.cntx_psh();
UP.cntx_psh();
UPM.cntx_psh();
POS.cntx_psh();
UPMPOJ.cntx_psh();
UPMSEL.cntx_psh();
:: Najpierw ładujemy do zakładki wszystkie
HN.index('STAT_REJ');
HN.prefix(ST.ODDZ,'T','T');

_size_all:=HN.size();
_size_mia:=0;
_size_uli:=0;
_size_umo:=0;

{? _miasto<>'' & _ulica<>''
||
:: Wg lokalizacji - miasto i ulica

   {? _context='UP'
   || UP.index('POS4');
      UP.prefix(ST.ODDZ,_miasto,_ulica,);
      _size_uli:=UP.size()
   ?};

   {? _context='UPMPOJ'
   || UPMPOJ.index('POS4');
      UPMPOJ.prefix(ST.ODDZ,_miasto,_ulica,);
      _size_uli+=UPMPOJ.size()
   ?};

   {? _context='UPMSEL'
   || UPMSEL.index('POS4');
      UPMSEL.prefix(ST.ODDZ,_miasto,_ulica,);
      _size_uli+=UPMSEL.size()
   ?}
||
:: Brak wymaganej lokalizacji - wczytuję wszystie z umów
   UP.index('POS4');
   UP.prefix(ST.ODDZ);
   _size_umo:=UP.size();

   UPMPOJ.index('POS4');
   UPMPOJ.prefix(ST.ODDZ);
   _size_umo+=UPMPOJ.size();

   UPMSEL.index('POS4');
   UPMSEL.prefix(ST.ODDZ,_miasto,);
   _size_umo+=UPMSEL.size()
?};

_step:=10;
{? _progress>0
||
   _argsprog:=exec('init','#progress');
   _argsprog.gl_smode('#');
   {? _size_all>0
   || _argsprog.add_progress('Wczytywanie wszystkich harmonogramów...'@,_size_all)
   ?};
   {? _size_mia>0
   || _argsprog.add_progress('Wczytywanie harmonogramów wg miast...'@,_size_mia)
   ?};
   {? _size_uli>0
   || _argsprog.add_progress('Wczytywanie harmonogramów wg ulic...'@,_size_uli)
   ?};
   {? _size_umo>0
   || _argsprog.add_progress('Wczytywanie harmonogramów z umów...'@,_size_umo)
   ?};
   _argsprog.HEIGHT:=15;
   exec('start','#progress',_argsprog)
?};
_lp:=0;
{? HN.first()
|| {? _progress>0
   || _argsprog.next_phase()
   ?};
   {!
   |?
      _lp+=1;
      _can_continue:=exec('hn2tab','umowy_harm',_env.TAB_F3_ALL);

      {? _progress>0 & _can_continue>0 & _lp%*_step=0
      || _can_continue:=exec('next_step','#progress',_argsprog,,_step)
      ?};
      HN.next() & _can_continue>0
   !}
?};

{? _can_continue>0 & _miasto<>'' & _ulica<>''
||
:: Wg lokalizacji - miasto i ulica
   {? _context='UP'
   ||
      UP.index('POS4');
      UP.prefix(ST.ODDZ,_miasto,_ulica,);
      {? UP.first()
      || _lp:=0;
         {? _progress>0
         || _argsprog.next_phase()
         ?};
         {!
         |? _lp+=1;
            {? UP.UM().STU().A='T' & UP.H<>null()
            || UP.H();

               _can_add:=1;
               {? _env.F3_UPSYS<>null()
               || {? UP.UPSYS<>null()
                  || {? UP.UPSYS<>_env.F3_UPSYS
                     || _can_add:=0
                     ?}
                  ?}
               ?};
               {? _can_add>0
               || _can_continue:=exec('hn2tab','umowy_harm',_env.TAB_F3_UL,_miasto,_ulica,UP.POS().NR,'Umowa cykliczna'@)
               ?}
            ?};
            {? _progress>0 & _can_continue>0 & _lp%*_step=0
            || _can_continue:=exec('next_step','#progress',_argsprog,,_step)
            ?};
            UP.next() & _can_continue>0
         !}
      ?}
   ?};
   {? _context='UPMPOJ'
   ||
      UPMPOJ.index('POS4');
      UPMPOJ.prefix(ST.ODDZ,_miasto,_ulica,);
      {? UPMPOJ.first()
      ||
         {? _progress>0
         || _argsprog.next_phase()
         ?};
         {!
         |? _lp+=1;
            {? UPMPOJ.UPM().ARCH<>'T' & UPMPOJ.TYPPOJ<>'S' & UPMPOJ.HN<>null()
            || UPMPOJ.HN();

               _can_add:=1;
               {? _env.F3_UPSYS<>null()
               || {? UPMPOJ.UPSYS<>null()
                  || {? UPMPOJ.UPSYS<>_env.F3_UPSYS
                     || _can_add:=0
                     ?}
                  ?}
               ?};
               {? _can_add>0
               || _can_continue:=exec('hn2tab','umowy_harm',_env.TAB_F3_UL,_miasto,_ulica,UPMPOJ.POS().NR,'Umowa miejska (pojemnik komunalny)'@)
               ?}
            ?};
            {? _progress>0 & _can_continue>0 & _lp%*_step=0
            || _can_continue:=exec('next_step','#progress',_argsprog,,_step)
            ?};
            UPMPOJ.next() & _can_continue>0
         !}
      ?}
   ?};

   {? _context='UPMSEL'
   ||
      UPMSEL.index('POS4');
      UPMSEL.prefix(ST.ODDZ,_miasto,_ulica,);
      {? UPMSEL.first()
      ||
         {? _progress>0
         || _argsprog.next_phase()
         ?};
         {!
         |? _lp+=1;
            _arch:=exec('FindAndGet','#table',UPM,UPMSEL.UP_SRC,,"ARCH",'');
            {? _arch<>'T' & UPMSEL.HN<>null()
            || UPMSEL.HN();

               _can_add:=1;
               {? _env.F3_UPSYS<>null()
               || {? UPMSEL.UPSYS<>null()
                  || {? UPMSEL.UPSYS<>_env.F3_UPSYS
                     || _can_add:=0
                     ?}
                  ?}
               ?};
               {? _can_add>0
               || _can_continue:=exec('hn2tab','umowy_harm',_env.TAB_F3_UL,_miasto,_ulica,UPMSEL.POS().NR,'Umowa miejska (selekcja)'@)
               ?}
            ?};
            {? _progress>0 & _can_continue>0 & _lp%*_step=0
            || _can_continue:=exec('next_step','#progress',_argsprog,,_step)
            ?};
            UPMSEL.next() & _can_continue>0
         !}
      ?}
   ?}
?};
{? _progress>0
|| _argsprog.ctr_stop()
?};
POS.cntx_pop();
UP.cntx_pop();
HN.cntx_pop();
UPM.cntx_pop();
UPMPOJ.cntx_pop();
UPMSEL.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\load_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Ładuje zawartość okienka
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;
HARMON.index('HN');
HARMON.prefix(HN.ODDZ,HN.KOD,_env.AR);
{? ~HARMON.first()
|| exec('new_harm','umowy_harm',_env.AR,HN.KAL_NAZW)
?};

:: Widok kalendarzyka
_result:=exec('refresh_tab_f3','umowy_harm',_env.ctr_single_name,null());
_env.SEL_HN:=HN.ref();
~~


\hn2tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Dodaje jeden rekord do tabeli tymczasowej z nagłówkami harmonogramu
::   WE: _a - tab_tmp - tabelka do której dodać
::       [_b] - STRING - miasto
::       [_c] - STRING - ulica
::       [_d] - STRING - nr posesji
::       [_e] - STRING - źródło pochodzenia
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

_tab:=_a;
_miasto:='';
{? var_pres('_b')=type_of('')
|| _miasto:=_b
?};
_ulica:='';
{? var_pres('_c')=type_of('')
|| _ulica:=_c
?};
_posesja:='';
{? var_pres('_d')=type_of('')
|| _posesja:=_d
?};

_src:='';
{? var_pres('_e')=type_of('')
|| _src:=_e
?};

_can_continue:=1;
_result:=0;

_tab.cntx_psh();
_can_add:=1;

{? _miasto<>'' & _ulica<>'' & _posesja<>''
|| _tab.prefix(_src,HN.AKT,HN.STAT_REJ,HN.KOD,_miasto,_ulica,_posesja,)
|? _miasto<>'' & _ulica<>''
|| _tab.prefix(_src,HN.AKT,HN.STAT_REJ,HN.KOD,_miasto,_ulica,)
|? _miasto<>''
|| _tab.prefix(_src,HN.AKT,HN.STAT_REJ,HN.KOD,_miasto,)
|| _tab.prefix(_src,HN.AKT,HN.STAT_REJ,HN.KOD,)
?};
{? _tab.first()
|| _can_add:=0
?};
{? _can_add>0
||
   _tab.prefix();
   _tab.blank();
   _tab.AKT:=HN.AKT;
   _tab.STAT_REJ:=HN.STAT_REJ;
   _tab.KOD:=HN.KOD;
   _tab.NAZ:=HN.NAZ;
   _tab.NR:=HN.NR;
   _tab.ODDZ:=HN.ODDZ;
   _tab.MIASTO:=_miasto;
   _tab.ULICA:=_ulica;
   _tab.NR_POS:=_posesja;
   _tab.HN_REF:=$HN.ref();
   _tab.SRC:=_src;
   _can_continue:=_tab.add()
?};
_tab.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\grp_disp_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Uruchamia grp_disp dla okien w trybie F3
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env_harm;

{? _env.F3_MODE>0
||
   {? _env.F3_ALL>0
   || grp_disp(_env.TAB_F3_ALL,_env.WIN_F3_ALL,1)
   ?};
   {? _env.F3_LOK>0
   || {? _env.WIN_F3_MIA<>''
      || grp_disp(_env.TAB_F3_MIA,_env.WIN_F3_MIA,1)
      ?};
      {? _env.F3_ULICA<>''
      || grp_disp(_env.TAB_F3_UL,_env.WIN_F3_UL,1)
      ?}
   ?}
?};
~~


\hn_lok_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Akcja Wg lokalizacji w okienkach HN
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_miasto:='';
_ulica:='';
_upsys:=null();
_rejo:=null();
_cur_tab:=~~;

{? var_pres('env_harm_lok',params_get())>0
|| _env:=params_get().env_harm_lok;
   _miasto:=_env.MIASTO;
   _ulica:=_env.ULICA;
   _upsys:=_env.UPSYS;
   _rejo:=_env.REJO;
   _cur_tab:=_env.CUR_TAB;
   ~~
?};

_can_continue:=1;
{? _miasto='' | _ulica=''
|| FUN.emsg('Miasto i ulica muszą być wcześniej wybrane, żeby uruchomić tę funkcję.'@);
   _can_continue:=0
?};
{? var_pres('_cur_tab')=0
|| _can_continue:=0;
   FUN.emsg('Nieokreśony kontekst tabeli'@)
?};

{? _can_continue>0
||
   _hn:=exec('select_lok','umowy_harm',_miasto,_ulica,_upsys,_rejo,_cur_tab);
   {? _hn<>null()
   || _seeked:=0;
      {? HN.f_active()>0
      || _seeked:=HN.f_seek(_hn)
      || _seeked:=HN.seek(_hn)
      ?};
      {? _seeked=0
      || FUN.emsg('Nie udało ustawić się na wybranym harmonogramie. Należy zmienić filtr w oknie, lub zakres wyświetlanych harmonogramów.'@)
      ?};
      {? _seeked>0 & var_pres('env_harm_lok',params_get())>0
      || sel_exit()
      ?}
   ?}
?};
~~


\editable
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Sprawdza czy dla podanej daty wygenerowano już zgłoszenia i czy edycja harmonogramu
::       będzie możliwa
::   WE: _a - DATE - data dla której sprawdzać
::   WY: 0 - edycja zablokowana
::       1 - edycja dozwolona
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_day:=_a;

_result:=1;

_can_continue:=1;

UP.cntx_psh();
UP.index('HN');
UP.prefix(HN.ref());
{? UP.first()
||
   HGEN.cntx_psh();
   HGEN.index('ORM');
   HGEN.prefix(ST.ODDZ,_day~1,_day~2);
   {? HGEN.first()
   || {? HGEN.IL>0
      || _result:=0
      ?}
   ?};
   HGEN.cntx_pop();
   ~~
?};
UP.cntx_pop();
_result


\drukuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: wydruki dla harmonogramu
::  OLD: \h_zest/um2.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

popup(0,'WZORCE SPRAWOZDAŃ'
   ,'A. Harmonogram (widok roczny symetryczny)',,"params_set(params_get()); exec('druk_01','umowy_harm')"
   ,'B. Harmonogram (widok roczny)',,"params_set(params_get()); exec('druk_02','umowy_harm')"
   ,'C. Harmonogram uproszczony',,"params_set(params_get()); exec('druk_03','umowy_harm')"
);
''


\druk_01
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wydruk biezacego harmonogramu - widok roczny symetryczny
::   WE: [_a] - INTEGER - rok
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_can_continue:=1;

_rok:=~~;
{? type_of(params_get())>100 & var_pres('env_harm',params_get())>100
|| _rok:=params_get().env_harm.AR
?};
{? var_pres('_a')=type_of(0)
|| _rok:=_a
?};
{? type_of(_rok)=0
|| _val:=exec('edit_number','#edit',date()~1,'Rok harmonogramu'@,0);
   {? type_of(_val)=type_of(0)
   || _rok:=_val
   || _can_continue:=0
   ?}
?};

HARMON.cntx_psh();
HARMON.index('HN');
{? _can_continue>0
|| HARMON.prefix(HN.ODDZ,HN.KOD,_rok);
   VAR_DEL.delete('HAARM');
   HAARM:=tab_tmp(1,'NR','INTEGER','Nr'@,
                   'MIE','STRING[20]','Miesiąc'@,
                   'D01','STRING[2]','Pn'@,
                   'D02','STRING[2]','Wt'@,
                   'D03','STRING[2]','Śr'@,
                   'D04','STRING[2]','Cz'@,
                   'D05','STRING[2]','Pt'@,
                   'D06','STRING[2]','Sb'@,
                   'D07','STRING[2]','Nd'@,
                   'D08','STRING[2]','Pn'@,
                   'D09','STRING[2]','Wt'@,
                   'D10','STRING[2]','Śr'@,
                   'D11','STRING[2]','Cz'@,
                   'D12','STRING[2]','Pt'@,
                   'D13','STRING[2]','Sb'@,
                   'D14','STRING[2]','Nd'@,
                   'D15','STRING[2]','Pn'@,
                   'D16','STRING[2]','Wt'@,
                   'D17','STRING[2]','Śr'@,
                   'D18','STRING[2]','Cz'@,
                   'D19','STRING[2]','Pt'@,
                   'D20','STRING[2]','Sb'@,
                   'D21','STRING[2]','Nd'@,
                   'D22','STRING[2]','Pn'@,
                   'D23','STRING[2]','Wt'@,
                   'D24','STRING[2]','Śr'@,
                   'D25','STRING[2]','Cz'@,
                   'D26','STRING[2]','Pt'@,
                   'D27','STRING[2]','Sb'@,
                   'D28','STRING[2]','Nd'@,
                   'D29','STRING[2]','Pn'@,
                   'D30','STRING[2]','Wt'@,
                   'D31','STRING[2]','Śr'@,
                   'D32','STRING[2]','Cz'@,
                   'D33','STRING[2]','Pt'@,
                   'D34','STRING[2]','Sb'@,
                   'D35','STRING[2]','Nd'@,
                   'D36','STRING[2]','Pn'@,
                   'D37','STRING[2]','Wt'@,
                   'C01','STRING[11]',' 1',
                   'C02','STRING[11]',' 2',
                   'C03','STRING[11]',' 3',
                   'C04','STRING[11]',' 4',
                   'C05','STRING[11]',' 5',
                   'C06','STRING[11]',' 6',
                   'C07','STRING[11]',' 7',
                   'C08','STRING[11]',' 8',
                   'C09','STRING[11]',' 9',
                   'C10','STRING[11]','10',
                   'C11','STRING[11]','11',
                   'C12','STRING[11]','12',
                   'C13','STRING[11]','13',
                   'C14','STRING[11]','14',
                   'C15','STRING[11]','15',
                   'C16','STRING[11]','16',
                   'C17','STRING[11]','17',
                   'C18','STRING[11]','18',
                   'C19','STRING[11]','19',
                   'C20','STRING[11]','20',
                   'C21','STRING[11]','21',
                   'C22','STRING[11]','22',
                   'C23','STRING[11]','23',
                   'C24','STRING[11]','24',
                   'C25','STRING[11]','25',
                   'C26','STRING[11]','26',
                   'C27','STRING[11]','27',
                   'C28','STRING[11]','28',
                   'C29','STRING[11]','29',
                   'C30','STRING[11]','30',
                   'C31','STRING[11]','31',
                   'C32','STRING[11]','32',
                   'C33','STRING[11]','33',
                   'C34','STRING[11]','34',
                   'C35','STRING[11]','35',
                   'C36','STRING[11]','36',
                   'C37','STRING[11]','37'
   );



   exec('__KAL','object');
   HARMON.first();

::   _pos:=Color.fnd_kol('HARM#02#04')-1;
::   _free:=Color.fnd_kol('HARM#02#02')-1;
::   _holy:=Color.fnd_kol('HARM#02#01')-1;

   _pos:='21:176:32';
   _free:='250:148:17';
   _holy:='230:47:90';

   VAR_DEL.delete('HAARM_LEG');
   HAARM_LEG:=tab_tmp(1,
      'LP','INTEGER','Lp',
      'NAME','STRING[20]','Rodzaj',
      'VAL','STRING[1]','Kolor',
      'COLOR','STRING[11]','Wartość'
   );
   HAARM_LEG.blank();
   HAARM_LEG.LP:=1;
   HAARM_LEG.NAME:='Wywóz'@;
   HAARM_LEG.VAL:='';
   HAARM_LEG.COLOR:=_pos;
   HAARM_LEG.add();

   HAARM_LEG.blank();
   HAARM_LEG.LP:=2;
   HAARM_LEG.NAME:='Dzień wolny'@;
   HAARM_LEG.VAL:='';
   HAARM_LEG.COLOR:=_free;
   HAARM_LEG.add();

   HAARM_LEG.blank();
   HAARM_LEG.LP:=3;
   HAARM_LEG.NAME:='Dzień świąteczny'@;
   HAARM_LEG.VAL:='';
   HAARM_LEG.COLOR:=_holy;
   HAARM_LEG.add()
?};
{? _can_continue>0
|| _can_continue:=exec('set_cal','umowy_harm',HN.KAL_NAZW,,_rok)
?};
{? _can_continue>0
||
   _months:=obj_new(12);
   _months[1]:='Styczeń'@;
   _months[2]:='Luty'@;
   _months[3]:='Marzec'@;
   _months[4]:='Kwiecień'@;
   _months[5]:='Maj'@;
   _months[6]:='Czerwiec'@;
   _months[7]:='Lipiec'@;
   _months[8]:='Sierpień'@;
   _months[9]:='Wrzesień'@;
   _months[10]:='Październik'@;
   _months[11]:='Listopad'@;
   _months[12]:='Grudzień'@;

   {!
   |?
      HAARM.blank();
      HAARM.NR:=HARMON.NR;
      HAARM.MIE:=_months[HARMON.NR];

      _year:=HARMON.ROK;
      _month:=HARMON.NR;

      _startd:=date(_year,_month,1);
      _endd:=date(_year,_month,0);

      _ss:=_startd~4;
      _day:=0;
      {! _it:=_ss..(_ss+_endd~3-1)
      |!
         _day+=1;
         _rule_val:='HAARM.D'+form(_it,-2)+':=_a';
         _rule_val:=$_rule_val;

         _rule_color:='HAARM.C'+form(_it,-2)+':=_a';
         _rule_color:=$_rule_color;

         {? _day<=date(_year,_month,0)~3
         ||
            _date:=date(_year,_month,_day);

            _rule_val($_day);

            {? exec('pos_present','umowy_harm',_date)>0
            || _rule_color(_pos)
            |? __KAL.get_day(_date)<>null()
            || {? KAL_DEF.TYP='S'
               || _rule_color(_holy)
               |? KAL_DEF.TYP='W'
               || _rule_color(_free)
               ?}
            ?}
         || _rule_color(exec('findfnrd','color'))
         ?}
      !};
      _can_continue:=HAARM.add();
      HARMON.next() & _can_continue>0
   !}
?};

{? _can_continue>0
||
   PARAM_W.TAB_TMP:='HAARM';
   PARAM_W.TAB_POL:='1;';
   PARAM_W.TAB_TYT:='Harmonogram - %1 %2 na rok %3'@[HN.KOD,HN.NAZ,$HARMON.ROK];
   t_sumk:='';
   rep_exec('lum_harm_01')
|| FUN.emsg('Przygotowanie wydruku zakończone niepowodzeniem.'@)
?};
HARMON.cntx_pop;
VAR_DEL.delete('HAARM');
VAR_DEL.delete('HAARM_LEG');
''


\druk_02
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: Wydruk biezacego harmonogramu - widok roczny
::   WE: [_a] - INTEGER - rok
::  OLD: \h_druk/um.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_can_continue:=1;

_rok:=~~;
{? type_of(params_get())>100 & var_pres('env_harm',params_get())>100
|| _rok:=params_get().env_harm.AR
?};
{? var_pres('_a')=type_of(0)
|| _rok:=_a
?};
{? type_of(_rok)=0
|| _val:=exec('edit_number','#edit',date()~1,'Rok harmonogramu'@,0);
   {? type_of(_val)=type_of(0)
   || _rok:=_val
   || _can_continue:=0
   ?}
?};

HARMON.cntx_psh();
HARMON.index('HN');
{? _can_continue>0
|| HARMON.prefix(HN.ODDZ,HN.KOD,_rok);
   VAR_DEL.delete('HAARM');
   HAARM:=tab_tmp(1,'NR','INTEGER','Nr'@,
                'MIE','STRING[20]','Miesiąc'@,
                'D01','STRING[2]',' 1',
                'D02','STRING[2]',' 2',
                'D03','STRING[2]',' 3',
                'D04','STRING[2]',' 4',
                'D05','STRING[2]',' 5',
                'D06','STRING[2]',' 6',
                'D07','STRING[2]',' 7',
                'D08','STRING[2]',' 8',
                'D09','STRING[2]',' 9',
                'D10','STRING[2]','10',
                'D11','STRING[2]','11',
                'D12','STRING[2]','12',
                'D13','STRING[2]','13',
                'D14','STRING[2]','14',
                'D15','STRING[2]','15',
                'D16','STRING[2]','16',
                'D17','STRING[2]','17',
                'D18','STRING[2]','18',
                'D19','STRING[2]','19',
                'D20','STRING[2]','20',
                'D21','STRING[2]','21',
                'D22','STRING[2]','22',
                'D23','STRING[2]','23',
                'D24','STRING[2]','24',
                'D25','STRING[2]','25',
                'D26','STRING[2]','26',
                'D27','STRING[2]','27',
                'D28','STRING[2]','28',
                'D29','STRING[2]','29',
                'D30','STRING[2]','30',
                'D31','STRING[2]','31',
                'C01','STRING[11]',' 1',
                'C02','STRING[11]',' 2',
                'C03','STRING[11]',' 3',
                'C04','STRING[11]',' 4',
                'C05','STRING[11]',' 5',
                'C06','STRING[11]',' 6',
                'C07','STRING[11]',' 7',
                'C08','STRING[11]',' 8',
                'C09','STRING[11]',' 9',
                'C10','STRING[11]','10',
                'C11','STRING[11]','11',
                'C12','STRING[11]','12',
                'C13','STRING[11]','13',
                'C14','STRING[11]','14',
                'C15','STRING[11]','15',
                'C16','STRING[11]','16',
                'C17','STRING[11]','17',
                'C18','STRING[11]','18',
                'C19','STRING[11]','19',
                'C20','STRING[11]','20',
                'C21','STRING[11]','21',
                'C22','STRING[11]','22',
                'C23','STRING[11]','23',
                'C24','STRING[11]','24',
                'C25','STRING[11]','25',
                'C26','STRING[11]','26',
                'C27','STRING[11]','27',
                'C28','STRING[11]','28',
                'C29','STRING[11]','29',
                'C30','STRING[11]','30',
                'C31','STRING[11]','31'

   );

   _days:=obj_new(7);
   _days[1]:='Pn'@;
   _days[2]:='Wt'@;
   _days[3]:='Śr'@;
   _days[4]:='Cz'@;
   _days[5]:='Pt'@;
   _days[6]:='Sb'@;
   _days[7]:='Nd'@;

   _months:=obj_new(12);
   _months[1]:='Styczeń'@;
   _months[2]:='Luty'@;
   _months[3]:='Marzec'@;
   _months[4]:='Kwiecień'@;
   _months[5]:='Maj'@;
   _months[6]:='Czerwiec'@;
   _months[7]:='Lipiec'@;
   _months[8]:='Sierpień'@;
   _months[9]:='Wrzesień'@;
   _months[10]:='Październik'@;
   _months[11]:='Listopad'@;
   _months[12]:='Grudzień'@;

   exec('__KAL','object');
   HARMON.first();

::   _pos:=Color.fnd_kol('HARM#02#04')-1;
::   _free:=Color.fnd_kol('HARM#02#02')-1;
::   _holy:=Color.fnd_kol('HARM#02#01')-1;

   _pos:='21:176:32';
   _free:='250:148:17';
   _holy:='230:47:90';

   VAR_DEL.delete('HAARM_LEG');
   HAARM_LEG:=tab_tmp(1,
      'LP','INTEGER','Lp',
      'NAME','STRING[20]','Rodzaj',
      'VAL','STRING[1]','Kolor',
      'COLOR','STRING[11]','Wartość'
   );
   HAARM_LEG.blank();
   HAARM_LEG.LP:=1;
   HAARM_LEG.NAME:='Wywóz'@;
   HAARM_LEG.VAL:='';
   HAARM_LEG.COLOR:=_pos;
   HAARM_LEG.add();

   HAARM_LEG.blank();
   HAARM_LEG.LP:=2;
   HAARM_LEG.NAME:='Dzień wolny'@;
   HAARM_LEG.VAL:='';
   HAARM_LEG.COLOR:=_free;
   HAARM_LEG.add();

   HAARM_LEG.blank();
   HAARM_LEG.LP:=3;
   HAARM_LEG.NAME:='Dzień świąteczny'@;
   HAARM_LEG.VAL:='';
   HAARM_LEG.COLOR:=_holy;
   HAARM_LEG.add()
?};
{? _can_continue>0
|| _can_continue:=exec('set_cal','umowy_harm',HN.KAL_NAZW,,_rok)
?};
{? _can_continue>0
|| {!
   |?
      HAARM.blank();
      HAARM.NR:=HARMON.NR;
      HAARM.MIE:=_months[HARMON.NR];

      _year:=HARMON.ROK;
      _month:=HARMON.NR;

      {! _it:=1..31
      |!
         _day:=_it;
         _rule_val:='HAARM.D'+form(_it,-2)+':=_a';
         _rule_val:=$_rule_val;

         _rule_color:='HAARM.C'+form(_it,-2)+':=_a';
         _rule_color:=$_rule_color;

         {? _day<=date(_year,_month,0)~3
         ||
            _date:=date(_year,_month,_day);

            _rule_val(_days[_date~4]);

            {? exec('pos_present','umowy_harm',_date)>0
            || _rule_color(_pos)
            |? __KAL.get_day(_date)<>null()
            || {? KAL_DEF.TYP='S'
               || _rule_color(_holy)
               |? KAL_DEF.TYP='W'
               || _rule_color(_free)
               ?}
            ?}
         || _rule_color(exec('findfnrd','color'))
         ?}
      !};
      _can_continue:=HAARM.add();
      HARMON.next() & _can_continue>0
   !}
?};

{? _can_continue>0
||
   PARAM_W.TAB_TMP:='HAARM';
   PARAM_W.TAB_POL:='1;';
   PARAM_W.TAB_TYT:='Harmonogram - %1 %2 na rok %3'@[HN.KOD,HN.NAZ,$HARMON.ROK];
   t_sumk:='';
   rep_exec('lum_harm_02')
|| FUN.emsg('Przygotowanie wydruku zakończone niepowodzeniem.'@)
?};
HARMON.cntx_pop;
VAR_DEL.delete('HAARM');
VAR_DEL.delete('HAARM_LEG');
''


\druk_03
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wydruk biezacego harmonogramu - widok uproszczony
::   WE: [_a] - INTEGER - rok
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_can_continue:=1;
_rok:=~~;
{? type_of(params_get())>100 & var_pres('env_harm',params_get())>100
|| _rok:=params_get().env_harm.AR
?};
{? var_pres('_a')=type_of(0)
|| _rok:=_a
?};
{? type_of(_rok)=0
|| _val:=exec('edit_number','#edit',date()~1,'Rok harmonogramu'@,0);
   {? type_of(_val)=type_of(0)
   || _rok:=_val
   || _can_continue:=0
   ?}
?};

HARMON.cntx_psh();
HARMON.index('HN');
{? _can_continue>0
|| HA.ROK:=_rok;
   HARMON.prefix(HN.ODDZ,HN.KOD,_rok);
   HARMON.first();
   rep_exec('lum_harm_03')
?};
HARMON.cntx_pop;
''


\color_glue
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Skleja kolor czcionki w kolor czcionki i tła
::   WE: _a - STRING
::   WY: STRING
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_color:=_a;
_result:='';
::_result:='255:0:0,255:0:0';
{? _color<>''
|| _result:='0:0:0,'+_color
?};
_result


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Ustawienie parametrów sesji w obszarze roboczym dziedziny LUM
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
__PARSES.editPar('OddzialLogProd')
;

AreaTitle.setTitle();

{? var_pres('env_harm',params_get())>100
|| _env:=params_get().env_harm;
   _env.set_cntx();
   grp_disp(HN,_env.WIN_HN,1)
?};
~~


\transfer_harmon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Dla podanego harmonogramu zwraca wszystkie brygady ze wszystkich lat
::       !! UWAGA to jest duplikat formuły z tran_vlb.fml - jak będą błędy to poprawiać też tam !!
::   WE: [_a] - HN.ref lub bieżący rekord
::       [_b] - INTEGER - rok z którego pobrać, jeśli nie podany to ze wszystkich lat
::       [_c] - INTEGER - typ harmonogramu 1-samochody, 2-brygady
::   WY: tab_tmp - tablica tymczasowa z polem REF i LP
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
{? var_pres('_a')=type_of(HN.ref())
|| _ref:=_a
?};
_rok:=0;
{? var_pres('_b')=type_of(0)
|| _rok:=_b
?};
_only_hn:={? var_pres('_c')=type_of(0) || _c || 0 ?};

_result:=tab_tmp(2
   ,'LP','INTEGER','Nazwa pola 1'
   ,'REF','STRING[16]','Nazwa pola 2'
   ,'TYP','INTEGER','Typ harmonogramu'
);
_ndx:=_result.ndx_tmp(,,'REF',,);
_can_continue:=1;

_result.cntx_psh();
_result.index(_ndx);
HN.cntx_psh();
{? _ref<>null()
|| HN.prefix();
   {? HN.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   _typ_hn:=HN.TYP;
:: Typ nr 1 oznacza że samochody
:: Typ nr 2 oznacza że brygady
   {? (~_only_hn & _typ_hn<=2) | (_typ_hn=_only_hn)
   ||
      ZLBR.cntx_psh();
      SAM.cntx_psh();
      ZLBR.index('ODDZ');
      SAM.index('ZLP');
      HARMON.cntx_psh();
      {? _rok>0
      || HARMON.index('HN');
         HARMON.prefix(HN.ODDZ,HN.KOD,_rok)
      || HARMON.index('KOD');
         HARMON.prefix(HN.KOD,HN.KOD)
      ?};
      _lp:=1;
      {? HARMON.first()
      || {!
         |? {! _it:=1..date(HARMON.ROK,HARMON.NR,0)~3
            |! _rule:='HARMON.D'+form(_it,-2);
               _value:=($_rule)();
               _value:=form(_value);
               _year:=HARMON.ROK;
               _month:=HARMON.NR;
               _day:=_it;

               {? _value<>''
               ||
                  {? _value*'~'=0
                  || {? _typ_hn=1
                     || SAM.prefix(HN.ODDZ,_value,);
                        {? SAM.first()
                        || _result.prefix($SAM.ref());
                           {? _result.first()=0
                           || _result.blank();
                              _result.LP:=_lp;
                              _result.REF:=$SAM.ref();
                              _result.TYP:=_typ_hn;
                              _result.add();
                              _lp+=1
                           ?}
                        ?}
                     |? _typ_hn=2
                     || ZLBR.prefix(HN.ODDZ,_value,_value);
                        {? ZLBR.first()
                        || _result.prefix($ZLBR.ref());
                           {? _result.first()=0
                           || _result.blank();
                              _result.LP:=_lp;
                              _result.REF:=$ZLBR.ref();
                              _result.TYP:=_typ_hn;
                              _result.add();
                              _lp+=1
                           ?}
                        ?}
                     ?}
                  ?}
               ?}
            !};
            HARMON.next()
         !}
      ?};
      HARMON.cntx_pop();
      SAM.cntx_pop();
      ZLBR.cntx_pop()
   ?}

?};
HN.cntx_pop();
_result.cntx_pop();
_result.clear();
_result.ndx_drop(_ndx);
_result

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:25 679e55f9a86ea90f4624eade773ba3976c2e0999ed5c65f890ccf93eec9d3b08df0a04d39f898607089623212d417f247ab80f87295fc9640ab687e41a73a28028730316200cf2dede7e3e73d3a0ea4d83eb783a455f7e2e2c3144f3e11db5ae0d9b8818032dd85d9f489eb42354a8a840c7719929805d890301f8698f898712
