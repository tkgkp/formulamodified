:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: upgrade_2042_05.fml
:: Utworzony: 24.11.2020
::======================================================================================================================
:: Zawartość: Funkcje do obsługi transferu danych z wersji 20.14 na 20.42
::
::            Każda formuła powinna zwracać wartość liczbową, interpretacja:
::                1 - całość przeszła bez błędów - realizacja zakwalifikowana jako wykonana
::               -1 - całość przeszła z uwagami  - dla zadania automatycznego:
::                                                   * realizacja zakwalifikowana jako wykonana
::                                                 dla zadania manualnego:
::                                                   * zrezygnowano z wykonania zadania w danej chwili - zadanie nadal
::                                                     pozostaje do wykonania
::                0 - został stwierdzony błąd    - realizacja zakwalifikowana jako przerwana
::
::            Definicja zadania transferowego:
::               __UPG.add_task(name,[auto],[mf],domain,[ver],[required],[manual],[nofirm],[onlyact])
::                gdzie:
::                   name     [STRING] - nazwa formuły potransferowej (z bieżącego pliku).
::                   auto     [STRING] - formuła automatyczna: T [domyślnie] / N
::                   mf       [STRING] - formuła wielofirmowa: T [domyślnie] / N
::                                        T - wykonywana tylko raz
::                                        N - wykonywana w każdej firmie
::                   domain   [STRING] - kod dziedziny produktowej (informacyjnie)
::                   ver      [NUMBER] - wersja formuły
::                   required [STRING] - czy zadanie musi być wykonane
::                                       Dla zadań automatycznych parametr zawsze przyjmuje wartość T.
::                                       Dla zadań manualnych - domyślnie: N.
::                   manual   [STRING] - kod powiązanego zadania manualne w ramach wersji
::                                        domyślnie brak
::                                        jeśli podano i istnieje oraz zostaną dokonane zapisy w buforze to zadanie
::                                        zmieni status na wymagalne
::                   nofirm   [NUMBER] - dla zadań jednofirmowych pomija firmę '000' (wartość 1), 0-domyślna wartość
::                   onlyact  [STRING] - zadanie aktualizacyjne dla danej wersji: T-tak, N-nie (domyślnie)
::                                        (Czy zadanie weszło po emisji danej wersji?)
::
::            W formułach można stosować zapis do przesłania komunikatów dla realizacji, np.
::               __UPG.msg('Brak zapisów dla roku 2016 w tabeli FAKS.')
::            Uwaga: ponieważ wynik jest zapisywany do bazy danych, to NIE tłumaczymy go - nie kończymy znakiem @.
::
::            W formułach automatycznych, które zostały powiązane z formułą manualną można stosować zapis o danych
::            wymagalnych do zweryfikowania, np.
::               __UPG.buf(USERS.uidref(),'Zweryfikuj parametry użytkownika w kontekście anulowania dokumentów')
::            zapis jest dołączony bezpośrednio pod wskazaną czynością manualną
::            Do uzyskania zapisów dla realizacji zadania manualnego służy metoda:
::               __UPG.get_buf()
::            wynik zwracany jest w formie tabeli o strukturze:
::               CODE  - STRING[48]
::               DESC  - STRING[255]
::               FIRMA - STRING[16] - ref SQL
::
::            \formuła      - formuła potransferowa
::            \formuła_desc - opis dla formuły potransferowej
::======================================================================================================================
:: Sposób tworzenia i opisu formuł transferowych:
::           - każda formuła musi zawierać opis (\formuła_desc) która w pierwszych zdaniach opisuje co robi, w kolejnych
::             zdaniach zawiera krótki opis techniczny np. uzupełniono pole XX w tabeli AA wartością 'T'
::           - każda formuła musi badać wynik swojego działania, zwracać 1, 0, -1 jeżeli od jej wykonania jest zależne
::             działanie systemu
::           - każda formuła musi tworzyć opis tego, jak przebiegło jej wykonanie wykorzystując __UPG.msg
::             tak aby po opisie można było wywnioskować co formuła konkretnie zrobiła
::             np. w tabeli AA Poprawiono X rekordów z N przeanalizowanych
::           - każda funkcja powinna posiadać progress, pokazujący postęp wykonania (jeżeli funkcja jest przewidziana
::             do wykonania na wielu rekordach)
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Główna formuła aktualizacji 20.42_05
::----------------------------------------------------------------------------------------------------------------------
:: Zadania automatyczne, wykonywane raz dla całego systemu
__UPG.add_task('stalesys_ini',,,'ZWS',,,,,'T');
__UPG.add_task('akt_atr',,,'PPL',,,,,'T');
:: Zadania automatyczne, wykonywane dla każdej firmy osobno
__UPG.add_task('ppk_07',,'N','PPK',,,,1,'T');
:: Zadania manualne, wykonywane raz dla całego systemu
:: Zadania manualne, wykonywane dla każdej firmy osobno
__UPG.add_task('form_plac_akt_2042_05PPKV','N','N','PPL',2,,,1,'T');
__UPG.add_task('napraw_PPK_POD','N','N','PPL',1,,,1,'T');
~~


\stalesys_ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Aktualizacja definicji stałych systemu
::----------------------------------------------------------------------------------------------------------------------
exec('init_kst','#stalesys',KST_PPK);
KST_DEF.cntx_psh();
KST_DEF.clear();
KST_MAP.cntx_psh();
KST_MAP.index('KST_MAP');
KST_MAP.prefix('KST_PPK','KST_PPK');
:: wyłącz historię zmiany wartości
{? KST_MAP.find_key('PRZEJ_DO',) & KST_MAP.KST_DEF().HISTORIA<>'N'
|| KST_DEF.HISTORIA:='N';
   KST_DEF.put()
?};
KST_MAP.cntx_pop();
KST_DEF.cntx_pop();

__UPG.msg('Zaktualizowano definicje stałych systemu.');
1


\stalesys_ini_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Aktualizacja definicji stałych systemu - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja definicji stałych systemu'


\form_plac_akt_2042_05PPKV
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Aktualizacja formuł płacowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');

_rs:='7088,7089,7090,7091';
_rn:=spli_str(_rs,',');
{! _ii:=1..obj_len(_rn)
|! {? __RUB.ref(#_rn[_ii])=null
   || __UPG.msg('Aktualizacja została wstrzymana. Wymagane istnienie rubryk: %1'[_rs]);
      return(-1)
   ?}
!};
_tp:=spli_str('U,R,F,D,%1'[%255],',');
_err:=exec('formuly_import','upgrade_2042_05',_tp,_rn,'formuly_txt');
{? _err>0
|| __UPG.msg('Podczas aktualizacji formuł wystąpiło %1 błędów.'[$_err]);
   -1
|| 1
?}


\formuly_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [20.42]
:: OPIS: Funkcja do aktualizacji formuł płacowych.
::   WE: _a [ARRAY] - Tablica aktualizowanych typów formuł płacowych.
::       _b [ARRAY] - Tablica kodów aktualizowanych składników płacowych.
::       _c [STRING] - Nazwa formuły do importu formuł płacowych.
::   WY: _err (0/1) - Liczba błędów, które wystąpiły podczas importu.
::----------------------------------------------------------------------------------------------------------------------
_tp:=_a;
_rn:=_b;
_formula:=_c;
_err:=0;

FM.cntx_psh();
{! _ni:=1..obj_len(_tp)
|! FM.index('FORMNAZ');
   FM.prefix(exec('ref_firma','ustawienia'),_tp[_ni]);
   {? FM.size()>0
   || {! _mi:=1..obj_len(_rn)
      |! _fm:=form(exec(_formula,'upgrade_2042_05',_tp[_ni],#_rn[_mi]));
         {? _fm<>''
         || _ok:=1;
            _org:='';
            _found:=FM.find_tab(,'R','RN','=',#_rn[_mi]);
            {? _found
            || _org:=FM.memo_txt(,1,'F')
            || FM.blank();
               FM.TP:=_tp[_ni];
               FM.R:=__RUB.ref(#_rn[_mi]);
               FM.W:={? 'U,F,D'*_tp[_ni] || 'T' || 'N' ?};
               {? ~FM.add()
               || __UPG.msg('Utworzenie formuły typu "%1" dla składnika %2 nie powiodło się.'[_tp[_ni],_rn[_mi]]);
                  _err+=0;
                  _ok:=0
               ?}
            ?};
            {? _found & _fm=_org
            || __UPG.msg('Formuła typu "%1" dla składnika %2 nie wymaga aktualizacji.'[_tp[_ni],_rn[_mi]])
            |? _ok
            || FM.memo_set(_fm,'F');
               {? FM.memo_put(,'F')
               || {? _found
                  || __UPG.msg('Zaktualizowano formułę typu "%1" dla składnika %2.'[_tp[_ni],_rn[_mi]])
                  || __UPG.msg('Utworzono formułę typu "%1" dla składnika %2.'[_tp[_ni],_rn[_mi]])
                  ?}
               |? _found
               || __UPG.msg('Aktualizacja formuły typu "%1" dla składnika %2 nie powiodła się.'[_tp[_ni],_rn[_mi]]);
                  _err+=1
               ?}
            ?}
         ?}
      !}
   ?}
!};
FM.cntx_pop();
_err


\formuly_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Zwraca treść formuły płacowej.
::   WE: _a [STRING] - typ formuły
::       _b [INTEGER] - numer rubryki
::   WY: treść formuły
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_tp:=_a;
_rn:=_b;

{? _rn=7088
|| "
   {? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
   _od:=date(O.R,O.M,0);
   exec('licz_skl','ppk',__RUB.sys_kod(710,_od),__RUB.sys_kod(720,_od),"+
   {? _tp='R' || "'z'" || "'p'"?}+",__RUB.sys_kod(751,_od))
   "
|? _rn=7089
|| "
   {? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
   _od:=date(O.R,O.M,0);
   exec('licz_skl','ppk',__RUB.sys_kod(711,_od),__RUB.sys_kod(721,_od),"+
   {? _tp='R' || "'z'" || "'p'"?}+",__RUB.sys_kod(752,_od))
   "
|? _rn=7090
|| "
   {? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
   _od:=date(O.R,O.M,0);
   exec('licz_skl','ppk',__RUB.sys_kod(712,_od),__RUB.sys_kod(722,_od),"+
   {? _tp='R' || "'z'" || "'p'"?}+",__RUB.sys_kod(753,_od))
   "
|? _rn=7091
|| "
   {? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
   _od:=date(O.R,O.M,0);
   exec('licz_skl','ppk',__RUB.sys_kod(713,_od),__RUB.sys_kod(723,_od),"+
   {? _tp='R' || "'z'" || "'p'"?}+",__RUB.sys_kod(754,_od))
   "
|| ""
?}


\form_plac_akt_2042_05PPKV_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Aktualizacja formuł płacowych.
::   WE:
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja formuł płacowych'


\akt_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Aktualizacja atrybutów dla rubryk płacowych i dodanie nowych rubryk.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

:: Aktualizacja opisów składników płacowych.
{? +exec('import','rubryki','g','7110,7111,7112,7113,7114',1,0)
|| _txt:='Dodanie nowych rubryk zakończyło się niepowodzeniem';
   _result:=-1
|| _txt:='Dodanie nowych rubryk zakończone powodzeniem'
?};
__UPG.msg(_txt);

{? _result=1
|| exec('__RUB','object');
   __RUB.fill();
:: Dodanie atrybutu 76 - Świadczenia niepieniężne
   exec('add_attr','rubatr',7,76,'Świadczenia niepieniężne',,
      'Jeżeli suma świadczeń niepieniężnych wchodzących w skład podstawy\nemerytalno-rentowej będzie równa wyliczonej'+
      ' podstawie PPK nie zostaną naliczone\nskładki PPK zatrudnionego.');
      exec('add_attr','rubatr',76,761,'Świadczenia socjalne',,
         'Świadczenia socjalne wchodzące w skład podstawy emerytalno-rentowej.',,746,7105,7106,7107);
      exec('add_attr','rubatr',76,762,'Pozostałe świadczenia',,
         'Pozostałe świadczenia wchodzące w skład podstawy emerytalno-rentowej.',,7007);
   __UPG.msg('Dodano atrybuty dotyczące świadczeń niepieniężnych.');
:: Dodanie atrybutu 75 - Korekty składników wynagrodzenia (PPK)
   exec('add_attr','rubatr',7,75,'Korekty składników wynagrodzenia',1);
      exec('add_attr','rubatr',75,750,'Korekta podstawy wpłat',1,,,7110);
      exec('add_attr','rubatr',75,751,'Korekta wpłaty podstawowej opłacanej przez firmę',1,,,7111);
      exec('add_attr','rubatr',75,752,'Korekta wpłaty dodatkowej opłacanej przez firmę',1,,,7112);
      exec('add_attr','rubatr',75,753,'Korekta wpłaty podstawowej opłacanej przez osobę',1,,,7113);
      exec('add_attr','rubatr',75,754,'Korekta wpłaty dodatkowej opłacanej przez osobę',1,,,7114);
   __UPG.msg('Dodano atrybuty dotyczące korekt składników wynagrodzenia (PPK).')
?};

_result


\akt_atr_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Aktualizacja atrybutów dla rubryk płacowych i dodanie nowych rubryk.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja atrybutów dla rubryk płacowych oraz dodanie nowych rubryk.'


\ppk_07
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: ER/WRT/XP/20.14/2011/0012 - Brak aktualizacji pola PPK_UCZ.DO  po zmianie w przebiegu zatrudnienia.
::       Usunięcie błędnych danych z pola DO tabeli PPK_UCZ.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
PPK_UCZ.cntx_psh();
PPK_UCZ.index('ID_APP');
PPK_UCZ.prefix(exec('ref_firma','ustawienia'));
{? PPK_UCZ.first()
|| _d0:=date(0,0,0);
   {!
   |? {? PPK_UCZ.DO<>_d0
      || PPK_UCZ.DO:=_d0;
         PPK_UCZ.put(1)
      ?};

      PPK_UCZ.next()
   !}
?};
PPK_UCZ.cntx_pop();

1


\ppk_07_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: Usunięcie błędnych danych z pola DO tabeli PPK_UCZ - opis
::----------------------------------------------------------------------------------------------------------------------
'Usunięcie błędnych danych z pola DO tabeli PPK_UCZ.'


\napraw_PPK_POD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: ER/WRT/XP/20.42/2101/0022 - Błędne formuły dla umów cywilnoprawnych dla aktualizacji 20.42_05
::       Funkcja do naprawy błędnych zapisów PPK_POD.
::   WE:
::   WY: _ret (0/1/-1)
:: ~OST: INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
_query:='
   select PPK_POD.REFERENCE as REF
   from PPK_POD
   join O using(PPK_POD.WYL_O, O.REFERENCE)
   join KT using(O.T, KT.REFERENCE)
   where PPK_POD.WYL_RH is null and O.FIRMA=:_a and KT.T like \'ZL%\'
   ';
_ZLE_POD:=sql(_query,exec('ref_firma','ustawienia'));
_BLEDY:=tab_tmp(1,
   'NAPR','STRING[1]','Czy naprawiono?',
   'POD_REF','INTEGER','Wskazanie PPK_POD',
   'P_REF','INTEGER','Wskazanie na P',
   'NAZWISKO','STRING['+$MS.fld_len('OSOBA','NAZWISKO')+']','Nazwisko pracownika',
   'PIERWSZE','STRING['+$MS.fld_len('OSOBA','PIERWSZE')+']','Imię pracownika',
   'T','STRING['+$MS.fld_len('P','T')+']','Nr teczki pracownika',
   'W_O_REF','INTEGER','Wskazanie na listę wyliczenia',
   'W_O_LT','STRING['+$MS.fld_len('O','LT')+']','Symbol listy wyliczenia',
   'W_O_R','INTEGER','Rok listy wyliczenia',
   'W_O_M','INTEGER','Miesiąc listy wyliczenia',
   'W_O_T','STRING['+$MS.fld_len('KT','T')+']','Typ listy wyliczenia',
   'W_RH_REF','INTEGER','Wskazanie na rachunek wyliczenia',
   'W_RH_DRA','DATE','Data wystawienia rachunku wyliczenia',
   'W_RH_DWY','DATE','Data wypłaty rachunku wyliczenia',
   'KOM','STRING[80]','Komentarz'
   );
{? _ZLE_POD.first()
|| PPK_POD.cntx_psh();
   PPK_POD.prefix();
   {!
   |? {? PPK_POD.seek(_ZLE_POD.REF)
      || _BLEDY.NAPR:='N';
         _BLEDY.POD_REF:=#PPK_POD.ref();
         _BLEDY.P_REF:=#PPK_POD.P;
         P.cntx_psh();
         P.prefix();
         OSOBA.cntx_psh();
         OSOBA.prefix();
         _BLEDY.NAZWISKO:=PPK_POD.P().OSOBA().NAZWISKO;
         _BLEDY.PIERWSZE:=OSOBA.PIERWSZE;
         _BLEDY.T:=P.T;
         OSOBA.cntx_pop();
         P.cntx_pop();

         _BLEDY.W_O_REF:=#PPK_POD.WYL_O;
         O.cntx_psh();
         O.prefix();
         KT.cntx_psh();
         KT.prefix();
         _BLEDY.W_O_LT:=PPK_POD.WYL_O().LT;
         _BLEDY.W_O_R:=O.R;
         _BLEDY.W_O_M:=O.M;
         _BLEDY.W_O_T:=O.T().T;
         KT.cntx_pop();
         O.cntx_pop();

         _BLEDY.W_RH_REF:=#PPK_POD.WYL_RH;
         RH.cntx_psh();
         RH.index('LISTA');
         RH.prefix(PPK_POD.WYL_O,PPK_POD.P);
         RH.first();
         {? RH.size()=1
         || _BLEDY.W_RH_DRA:=RH.DRA;
            _BLEDY.W_RH_DWY:=RH.DWY

         |? RH.size()>1
         || _BLEDY.KOM:='Więcej niż jeden rachunek. '

         || _BLEDY.KOM:='Nieudało się znaleźć rachunku dla zapisu PPK_POD. ';
            {? PPK_POD.del(1)
            || _BLEDY.KOM+='Usunięto zapis PPK_POD.'
            || _BLEDY.KOM+='Niepowodzenie usunięcia zapisu PPK_POD (del)';
               _ok:=0;
               _ret:=-1
            ?}
         ?};

::       Sprawdzam czy są wśród nich rachunki już rozliczone:
         {? RH.size()
         || {? PPK_POD.POD_O<>null()
            || _BLEDY.KOM+='Lista zawiera rozliczone rachunki.'
            || _ok:=1;
               {? ~PPK_POD.del(1)
               || _BLEDY.KOM+='Niepowodzenie usunięcia zapisu PPK_POD (del)';
                  _ok:=0;
                  _ret:=-1
               ?};
               {? _ok
               || exec('czytaj','#stalesys',,KST,KST_PPK);
                  exec('__KAL','object');
                  exec('__RUB','object');
                  exec('__F_ZATR','object');
                  exec('FUNKCJE','object');
                  O.cntx_psh();
                  O.prefix();
                  ZC.cntx_psh();
                  ZC.prefix();
                  P.cntx_psh();
                  P.prefix();
                  RH.O();
                  RH.ZLE().P();
                  {!
                  |? _od:=date(RH.R,RH.M,0);
                     exec('licz_skl','ppk',__RUB.sys_kod(710,_od),__RUB.sys_kod(720,_od),'z',__RUB.sys_kod(751,_od));
                     exec('licz_skl','ppk',__RUB.sys_kod(711,_od),__RUB.sys_kod(721,_od),'z',__RUB.sys_kod(752,_od));

                     RH.next()
                  !};
                  P.cntx_pop();
                  ZC.cntx_pop();
                  O.cntx_pop()
               ?};
               {? _ok
               || _BLEDY.NAPR:='T';
                  _BLEDY.KOM+='Poprawiono zapisy PPK_POD'
               || _ret:=-1
               ?}
            ?}
         ?};

         RH.cntx_pop();
         _BLEDY.add()
      ?};

      _ZLE_POD.next()
   !};
   PPK_POD.cntx_pop();
   __UPG.msg('Należy skontrolować wykazane zapisy kartoteki PPK_POD')
|| __UPG.msg('Zapisy kartoteki PPK_POD nie wymagają poprawienia')
?};

{? _BLEDY.first()
:: Wyświetlanie tabeli:
|| _tytul:='Lista przychodów zleceniobiorców z tytułu PPK bez przypiętego rachunku';
   _BLEDY.win_sel(_BLEDY.mk_sel(_tytul,,1));
   _BLEDY.select();
:: Eksport do pliku:
   {? FUN.ask('Czy zapisać do pliku?')
   || _plik:=tmp_dir()+'\\bledy_ppk_pod.csv';
      _BLEDY.export(
      '@'+_plik,,,'UTF-8,header,nopth',,
      'NAPR',,1,,
      'POD_REF',,2,,
      'P_REF',,3,,
      'NAZWISKO',,4,,
      'PIERWSZE',,5,,
      'T',,6,,
      'W_O_REF',,7,,
      'W_O_LT',,8,,
      'W_O_R',,9,,
      'W_O_M',,10,,
      'W_O_T',,11,,
      'W_RH_REF',,12,,
      'W_RH_DRA',,13,1,
      'W_RH_DWY',,14,1,
      'KOM',,15,
      );
      FUN.info('Wyeksportowano do: '+_plik)
   ?}
?};

obj_del(_ZLE_POD);
obj_del(_BLEDY);

_ret


\napraw_PPK_POD_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.42]
:: OPIS: ER/WRT/XP/20.42/2101/0022 - Błędne formuły dla umów cywilnoprawnych dla aktualizacji 20.42_05
::       Funkcja do naprawy błędnych zapisów PPK_POD. - formuła na opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Poprawa zapisów PPK_POD dla zleceniobiorców.'

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:25 010b3bdd9e40846c1e783c8d76ac5e3181f372d46f849ab3cba4f5449364f6813d37821602fc2a2417b2b676a01538739e4bf1d74715bea29913c868059214371a7ec55795a0d0c9dd12143b94708c90f20bdd9985620fc9e19c15115f7a95dac4bd061cdb8a9fffcf93ffd31dfadbf661df14a049e4e003f13658701ec5dcfc
