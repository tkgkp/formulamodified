:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: upgradexperti1.fml
:: Utworzony: 17.10.2019
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Funkcje do obsługi transferu danych z Xpertisa 12.41/12.51 na Merita w wersji aktualnie emitowanej
::
::            DODATKOWY PLIK DLA FORMUŁ ICH WYWOŁANIE NALEŻY ZADEKLAROWAĆ w FORMULE \init/upgradexpertis.fml.
::
::            Każda formuła powinna zwracać wartość liczbową, interpretacja:
::                1 - całość przeszła bez błędów - realizacja zakwalifikowana jako wykonana
::               -1 - całość przeszła z uwagami  - realizacja zakwalifikowana jako wykonana
::                0 - został stwierdzony błąd    - realizacja zakwalifikowana jako przerwana
::
::
::            \formuła      - formuła potransferowa
::            \formuła_desc - opis dla formuły potransferowej
::======================================================================================================================
:: Sposób tworzenia i opisu formuł transferowych:
::           - każda formuła musi zawierać opis (\formuła_desc) która w pierwszych zdaniach opisuje co robi, w kolejnych
::             zdaniach zawiera krótki opis techniczny np. uzupełniono pole XX w tabeli AA wartością 'T'
::           - każda formuła musi badać wynik swojego działania, zwracać 1, 0, -1 jeżeli od jej wykonania jest zależne
::             działanie systemu
::           - każda formuła musi tworzyć opis tego, jak przebiegło jej wykonanie wykorzystując __UPG.msg
::             tak aby po opisie można było wywnioskować co formuła konkretnie zrobiła
::             np. w tabeli AA Poprawiono X rekordów z N przeanalizowanych
::           - każda funkcja powinna posiadać progress, pokazujący postęp wykonania (jeżeli funkcja jest przewidziana
::             do wykonania na wielu rekordach)
::======================================================================================================================


\MPKW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Uzupełnia MPKW.SP_WYM
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_formula:="
   __lrec+=1;
   _put:=0;
   {? MPKW.SP_WYM='' || MPKW.SP_WYM:='N'; _put:=1 ?};
   {? _put & MPKW.put() || __lmod+=1 ?}
";
MPKW.prefix();
_result:=MPKW.for_each(_formula,1);
{? _result
|| __UPG.msg('Zaktualizowano nowe pola w kartotece PKWiU.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji nowych pól w kartotece PKWiU.')
?};
VAR_DEL.delete('__lrec','__lmod');
_result


\MPKW_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Uzupełnia MPKW.SP_WYM - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja kartoteki PKWiU.'


\pd_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Aktualizacja pól tabeli PD_K
::----------------------------------------------------------------------------------------------------------------------
_result:=PD_K.for_each("
   PD_K.CZY_ZL:='N';
   {? PD_K.CZY_ZAM='T'
   || PD_K.ILP:=0
   || PD_K.ILP:=PD_K.IL
   ?};
   PD_K.put()
",1);
{? _result
|| __UPG.msg('Zaktualizowano nowe pola koszyku planu dostaw.')
|| __UPG.msg('Wystąpił błąd podczas aktualizacji nowych pól koszyku planu dostaw.')
?};
_result


\pd_k_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Aktualizacja pól tabeli PD_K - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tabeli koszyku planu dostaw.'


\spal2RODZPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Przepisanie danych z tabeli RODZPAL do tabeli SPAL
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod','__cnv');
__lrec:=__lmod:=0;
__cnv:=tab_tmp(1,'SPAL','STRING[16]','','RODZPAL','STRING[16]','');

SPAL.cntx_psh();
RODZPAL.cntx_psh();
SAMN.cntx_psh();
SAMP.cntx_psh();
do();
:: tworzenie zapisów w tabeli RODZPAL na podstawie SPAL
SPAL.prefix();
{? SPAL.first()
|| {!
   |? __lrec+=1;
      RODZPAL.index('KOD');
      RODZPAL.prefix(SPAL.KOD,);
      {? RODZPAL.first()
      || {? RODZPAL.AC=0 & SPAL.AC>0
         || RODZPAL.AC:=SPAL.AC;
            {? ~RODZPAL.put(1) || undo() || __lmod+=1 ?}
         ?};
         __cnv.clear();
         __cnv.blank();
         __cnv.SPAL:=$SPAL.ref();
         __cnv.RODZPAL:=$RODZPAL.ref();
         {? ~__cnv.add(1) || undo() ?}
      || RODZPAL.blank();
         RODZPAL.KOD:=SPAL.KOD;
         RODZPAL.NAZWA:=SPAL.NAZ;
         RODZPAL.AC:=SPAL.AC;
         {? ~RODZPAL.add(1) || undo() || __lmod+=1 ?};
         __cnv.clear();
         __cnv.blank();
         __cnv.SPAL:=$SPAL.ref();
         __cnv.RODZPAL:=$RODZPAL.ref();
         {? ~__cnv.add(1) || undo() ?}
      ?};
      SPAL.next()
   !}
?};
:: przypisanie nowych wartości w polach tabel SAMN, SAMP
SAMN.prefix();
SAMN.for_each("{? SAMN.PAL<>null() & (__cnv.clear(); __cnv.prefix($SAMN.PAL,); __cnv.first())
               || SAMN.RODZPAL:=exec('FindAndGet','#table',RODZPAL,__cnv.RODZPAL,,,null());
                  SAMN.PAL:=null();
                  SAMN.put(1)
               ?};
               {? SAMN.PAL2<>null() & (__cnv.clear(); __cnv.prefix($SAMN.PAL,); __cnv.first())
               || SAMN.RODZPAL2:=exec('FindAndGet','#table',RODZPAL,__cnv.RODZPAL,,,null());
                  SAMN.PAL2:=null();
                  SAMN.put(1)
               ?}
              ",1);
SAMP.prefix();
SAMP.for_each("{? SAMP.PAL<>null() & (__cnv.clear(); __cnv.prefix($SAMP.PAL,); __cnv.first())
               || SAMP.RODZPAL:=exec('FindAndGet','#table',RODZPAL,__cnv.RODZPAL,,,null());
                  SAMP.PAL:=null();
                  SAMP.put(1)
               ?}
              ",1);
:: usunięcie zapisów w SPAL-u
SPAL.prefix();
{? SPAL.first()
|| {!
   |? {? ~SPAL.count()
      || SPAL.del()
      || SPAL.next()
      ?}
   !}
?};
end();
SPAL.cntx_pop();
RODZPAL.cntx_pop();
SAMN.cntx_pop();
SAMP.cntx_pop();

__UPG.msg('Zaktualizowano zapisy dotyczące rodzajów paliw.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);

VAR_DEL.delete('__lrec','__lmod','__cnv');
_res


\spal2RODZPAL_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Przepisanie danych z tabeli RODZPAL do tabeli SPAL - opis
::----------------------------------------------------------------------------------------------------------------------
'Uwspólnienie zapisów dotyczących rodzajów paliwa'


\fiks_59
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42] IFZ
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044
::       Błędne esprawozdania skonsolidowane
::       kod -  ER/WRT/XP/12.51/2003/0035
::       W pliku JPK_SF wg struktury SkonsolidowanaJednostkaInnaWZlotych(1)_v1-2.txt brak pozycji
::       Aktywa_B_III_1_C_4 - inne krótkoterminowe aktywa finansowe
::----------------------------------------------------------------------------------------------------------------------
:: Skróty naprawianych sprawozdań skonsolidowanych
_s_bil:='SeBilans';
_s_pb:='SePrzep_B';
_s_pp:='SePrzep_P';
_s_rk:='SeRZIS_K';
_s_rp:='SeRZIS_P';
_s_zm:='SeZmKap';
_ks_bil:='KSeBilans';

VAR_DEL.delete('Info');
Info:=obj_new('F','S','W','add','zmiana');
Info.add:="
   .zmiana:=1;
   _str:='Firma: %1, Sprawozdanie: %2, Wiersz: %3 - %4, Opis: %5'[.F,.S,_a,_b,_c];
   __UPG.msg(_str)
";

:: Bilans
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_s_bil);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;
         Info.zmiana:=0;
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_C','Aktywa_A_V_3_D','A_A_V_3_D');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_C_1','Aktywa_A_V_3_D_1','A_A_V_3_D_1');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_C_2','Aktywa_A_V_3_D_2','A_A_V_3_D_2');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_C_3','Aktywa_A_V_3_D_3','A_A_V_3_D_3');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_C_4','Aktywa_A_V_3_D_4','A_A_V_3_D_4');

         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_B','Aktywa_A_V_3_C','A_A_V_3_C');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_B_1','Aktywa_A_V_3_C_1','A_A_V_3_C_1');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_B_2','Aktywa_A_V_3_C_2','A_A_V_3_C_2');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_B_3','Aktywa_A_V_3_C_3','A_A_V_3_C_3');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_B_4','Aktywa_A_V_3_C_4','A_A_V_3_C_4');

         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_A','Aktywa_A_V_3_B','A_A_V_3_B',
            'w jednostkach zależnych, współzależnych i stowarzysz. wyc. met. praw własności'
         );
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_A_1','Aktywa_A_V_3_B_1','A_A_V_3_B_1');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_A_2','Aktywa_A_V_3_B_2','A_A_V_3_B_2');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_A_3','Aktywa_A_V_3_B_3','A_A_V_3_B_3');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_A_4','Aktywa_A_V_3_B_4','A_A_V_3_B_4');

         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_B','Aktywa_A_V_3_A_4','A_A_V_3_A_4',
            '- inne długoterminowe aktywa finansowe','F'
         );
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_A_4','Aktywa_A_V_3_A_3','A_A_V_3_A_3',
            '- udzielone pożyczki','F'
         );
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_A_3','Aktywa_A_V_3_A_2','A_A_V_3_A_2',
            '- inne papiery wartościowe','F'
         );
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_A_2','Aktywa_A_V_3_A_1','A_A_V_3_A_1',
            '- udziały lub akcje','F'
         );
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_A_1','Aktywa_A_V_3_A','A_A_V_3_A',
            'w jednostkach zależnych, współ. niewyc. metodą konsolid. pełnej lub met. prop.','S'
         );
         exec('fiks_59d','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3_A',
            'Aktywa_A_V_3_A_1,Aktywa_A_V_3_A_2,Aktywa_A_V_3_A_3,Aktywa_A_V_3_A_4'
         );
         exec('fiks_59d','upgradexperti1',GR_SIK.ref(),'Aktywa_A_V_3',
            'Aktywa_A_V_3_A',4
         );

         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_C','Aktywa_B_III_1_D','A_B_III_1_D');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_C_1','Aktywa_B_III_1_D_1','A_B_III_1_D_1');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_C_2','Aktywa_B_III_1_D_2','A_B_III_1_D_2');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_C_3','Aktywa_B_III_1_D_3','A_B_III_1_D_3');

         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_B','Aktywa_B_III_1_C','A_B_III_1_C');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_B_1','Aktywa_B_III_1_C_1','A_B_III_1_C_1');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_B_2','Aktywa_B_III_1_C_2','A_B_III_1_C_2');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_B_3','Aktywa_B_III_1_C_3','A_B_III_1_C_3');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_B_4','Aktywa_B_III_1_C_4','A_B_III_1_C_4');

         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_A','Aktywa_B_III_1_B','A_B_III_1_B',
            'w jednostkach stowarzyszonych'
         );
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_A_1','Aktywa_B_III_1_B_1','A_B_III_1_B_1');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_A_2','Aktywa_B_III_1_B_2','A_B_III_1_B_2');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_A_3','Aktywa_B_III_1_B_3','A_B_III_1_B_3');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_A_4','Aktywa_B_III_1_B_4','A_B_III_1_B_4');

         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_B','Aktywa_B_III_1_A_4','A_B_III_1_A_4',
            '- inne krótkoterminowe aktywa finansowe','F'
         );
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_A_4','Aktywa_B_III_1_A_3','A_B_III_1_A_3',
            '- udzielone pożyczki','F'
         );
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_A_3','Aktywa_B_III_1_A_2','A_B_III_1_A_2',
            '- inne papiery wartościowe','F'
         );
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_A_2','Aktywa_B_III_1_A_1','A_B_III_1_A_1',
            '- udziały lub akcje','F'
         );
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_A_1','Aktywa_B_III_1_A','A_B_III_1_A',
            'w jednostkach zależnych i współzależnych','S'
         );
         exec('fiks_59d','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1_A',
            'Aktywa_B_III_1_A_1,Aktywa_B_III_1_A_2,Aktywa_B_III_1_A_3,Aktywa_B_III_1_A_4'
         );
         exec('fiks_59d','upgradexperti1',GR_SIK.ref(),'Aktywa_B_III_1',
            'Aktywa_B_III_1_A',4
         );

         exec('fiks_59e','upgradexperti1',GR_SIK.ref(),'Pasywa_C','S');
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'Pasywa_D','Pasywa_C_II','P_C_II',
            'Ujemna wartość - jednostki współzależne','F'
         );
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'Pasywa_C_II','Pasywa_C_I','P_C_I',
            'Ujemna wartość - jednostki zależne','F'
         );
         exec('fiks_59d','upgradexperti1',GR_SIK.ref(),'Pasywa_C',
            'Pasywa_C_I,Pasywa_C_II'
         );
         exec('fiks_59d','upgradexperti1',GR_SIK.ref(),'Pasywa_A',
            'Pasywa_A_V',8
         );
         {? Info.zmiana & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
         ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;

:: Bilans skonsolidowany
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_ks_bil);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;
         Info.zmiana:=0;
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_D','Aktywa_B_III_1_C_4','A_B_III_1_C_4',
            '– inne krótkoterminowe aktywa finansowe','F'
         );
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_C','Aktywa_B_III_1_C_4',4);
         {? Info.zmiana & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
         ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;

:: Rachunek przepływów bezpośrednich
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_s_pb);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.zmiana:=0;
         Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'B_II_4','B_II_5','B_II_5');
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'B_II_5','B_II_4','B_II_4',
            'Dywidendy i inne udziały w zyskach wypłacone udziałowcom (akc.) mniejszościowym','F'
         );
         exec('fiks_59d','upgradexperti1',GR_SIK.ref(),'B_II',
            'B_II_4',5
         );
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'C_II_3',,,'Inne niż wypłaty na rzecz właścicieli wydatki z tytułu podziału zysku');

         {? Info.zmiana & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
      ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;


:: Rachunek przepływów pośrednich
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_s_pp);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.zmiana:=0;
         Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'A_II_10','A_II_14','A_II_14','Inne korekty z działalności operacyjnej');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'A_II_9','A_II_13','A_II_13');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'A_II_8','A_II_12','A_II_12');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'A_II_7','A_II_11','A_II_11');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'A_II_6','A_II_10','A_II_10');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'A_II_5','A_II_9','A_II_9');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'A_II_4','A_II_8','A_II_8');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'A_II_3','A_II_7','A_II_7');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'A_II_2','A_II_6','A_II_6');
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'A_II_6','A_II_5','A_II_5',
            'Odpisy ujemnej wartości firmy','F'
         );
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'A_II_5','A_II_4','A_II_4',
            'Odpisy wartości firmy','F'
         );
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'A_II_1','A_II_3','A_II_3');
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'A_II_3','A_II_2','A_II_2',
            'Zysk (strata) z udziałów (akcji) w jednostkach wycenianych metodą praw własności','F'
         );
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'A_II_2','A_II_1','A_II_1',
            'Zyski (straty) mniejszości','F'
         );
         exec('fiks_59d','upgradexperti1',GR_SIK.ref(),'A_II','A_II_1',11);
         exec('fiks_59d','upgradexperti1',GR_SIK.ref(),'A_II','A_II_2',12);
         exec('fiks_59d','upgradexperti1',GR_SIK.ref(),'A_II','A_II_4',13);
         exec('fiks_59d','upgradexperti1',GR_SIK.ref(),'A_II','A_II_5',14);

         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'B_I_3_A',,,'w jednostkach wycenianych metodą praw własności');

         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'B_II_4','B_II_5','B_II_5');
         exec('fiks_59c','upgradexperti1',GR_SIK.ref(),'B_II_5','B_II_4','B_II_4',
            'Dywidendy i inne udziały w zyskach wypłacone udziałowcom (akc.) mniejszościowym','F'
         );
         exec('fiks_59d','upgradexperti1',GR_SIK.ref(),'B_II',
            'B_II_4',5
         );
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'B_II_3_A',,,'w jednostkach wycenianych metodą praw własności');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'C_II_3',,,'Inne niż wypłaty na rzecz właścicieli wydatki z tytułu podziału zysku');
         {? Info.zmiana & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
         ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;


:: Rachunek zysków i strat kalkulacyjny
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_s_rk);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'A_J',,,'- od jednostek powiązanych nieobjętych metodą konsolidacji pełnej');
         _delall:=0;
         DEFW.cntx_psh();
         DEFW.index('E_KOD'); DEFW.prefix(GR_SIK.ref());
         {? DEFW.find_key('R',)
         || _ref:=DEFW.ref();
            _kod:=DEFW.KOD;
            _naz:=DEFW.NAZWA;
            GR_KOL.cntx_psh();
            GR_KOL.index('LP'); GR_KOL.prefix(GR_SIK.ref());
            {? GR_KOL.first()
            || {!
               |? _del:=0;
                  DEFA.cntx_psh();
                  DEFA.index('LP');
                  DEFA.prefix(_ref,GR_KOL.ref());
                  {? DEFA.first()
                  || {!
                     |? {? 'IJK'*DEFA.ARGUMENT().E_KOD
                        || _del:=1; DEFA.del()
                        || DEFA.next()
                        ?}
                     !}
                  ?};
                  {? _del
                  || _delall:=1;
                     _lp:=0;
                     {? DEFA.first()
                     || {!
                        |? DEFA.LP:=(_lp+=1);
                           DEFA.put();
                           DEFA.next()
                        !}
                     ?}
                  ?};
                  DEFA.cntx_pop();
                  GR_KOL.next()
               !}
            ?};
            GR_KOL.cntx_pop()
         ?};
         DEFW.cntx_pop();
         {? _delall
         || Info.add(_kod,_naz,'Zmodyfikowano algorytmy wiersza.')
         ?};
         {? _delall & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
         ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;

:: Rachunek przepływów porównawczy
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_s_rp);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.zmiana:=0;
         Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;

         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'A_J',,,'- od jednostek powiązanych nieobjętych metodą konsolidacji pełnej');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'G_I_A',,,'od jednostek powiązanych, w tym:');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'G_I_B',,,'od jednostek pozostałych, w tym:');

         {? Info.zmiana & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
         ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;

:: Zmiany w kapitale
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_s_zm);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.zmiana:=0;
         Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'IA_8_1_1','IA_8_1_2a','IA_8_1_2a',,60,'– zmiany przyjętych zasad (polityki) rachunkowości');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'IA_8_1_2','IA_8_1_1a','IA_8_1_1a',,61,'– korekty błędów');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'IA_8_1_2a','IA_8_1_2','IA_8_1_2',,35,'– zmiany przyjętych zasad (polityki) rachunkowości');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'IA_8_1_1a','IA_8_1_1','IA_8_1_1',,34,'– korekty błędów');

         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'IA_8_4_1','IA_8_4_2a','IA_8_4_2a',,60,'– zmiany przyjętych zasad (polityki) rachunkowości');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'IA_8_4_2','IA_8_4_1a','IA_8_4_1a',,61,'– korekty błędów');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'IA_8_4_2a','IA_8_4_2','IA_8_4_2',,43,'– zmiany przyjętych zasad (polityki) rachunkowości');
         exec('fiks_59a','upgradexperti1',GR_SIK.ref(),'IA_8_4_1a','IA_8_4_1','IA_8_4_1',,42,'– korekty błędów');

         {? Info.zmiana & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
         ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;
VAR_DEL.delete('Info');
1


\fiks_59_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044
::       Błędne esprawozdania skonsolidowane
::----------------------------------------------------------------------------------------------------------------------
'Naprawienie definicji sprawozdań skonsolidowanych'


\fiks_59a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044 - Błędne esprawozdania skonsolidowane
::       Zmiana e-kodu, skrótu i nazwy wiersza sprawozdania
::   WE: _a - sprawozdanie
::       _b - e-Kod stary
::       [_c] - e-Kod nowy
::       [_d] - kod nowy
::       [_e] - nowa nazwa
::       [_f] - lp
::       [_g] - nazwa dla kontroli
::  OLD: \fiks_59a/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh();
DEFW.index('E_KOD'); DEFW.prefix(_a,_b,);
{? DEFW.first()
|| _kod:=DEFW.KOD;
   _naz:=DEFW.NAZWA;
   _zm:='';
   {? var_press('_c')>0 & DEFW.E_KOD<>_c || _zm+='eKod na: '+_c+', '; DEFW.E_KOD:=_c ?};
   {? var_press('_d')>0 & DEFW.KOD<>_d || _zm+='kod na: '+_d+', '; DEFW.KOD:=_d ?};
   {? var_press('_e')>0 & DEFW.NAZWA<>_e || _zm+='nazwę na: '+_e+', '; DEFW.NAZWA:=_e ?};
   {? var_press('_f')>0 & DEFW.LP<>_f || _zm+='lp na: '+$_f+', '; DEFW.LP:=_f ?};
   DEFW.cntx_psh();
   DEFW.prefix();
   {? (var_press('_g')<=0 | _g=DEFW.NAZWA) & _zm<>'' & DEFW.put(1)
   || Info.add(_kod,_naz,'Zmieniono '+(_zm-2))
   ?};
   DEFW.cntx_pop()
?};
DEFW.cntx_pop()


\fiks_59b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044 - Błędne esprawozdania skonsolidowane
::       Przenumerowanie wierszy
::   WE: _a - sprawozdanie
::       _b - e-Kod stary
::       _c - ile elementów przed
::  OLD: \fiks_59b/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
_lp:=0;
DEFW.cntx_psh();
DEFW.index('E_KOD'); DEFW.prefix(_a,_b,);
{? DEFW.first()
|| _lp:=DEFW.LP;
   DEFW.index('LP');
   DEFW.prefix(_a);
   {? DEFW.last()
   || {!
      |? {? DEFW.LP>=_lp
         || DEFW.LP+=_c;
            DEFW.put();
            DEFW.prev()
         ?}
      !}
   ?}
?};
DEFW.cntx_pop();
_lp


\fiks_59c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044 - Błędne esprawozdania skonsolidowane
::       Dodanie wiersza sprawozdania przed wskazanym
::   WE: _a - sprawozdanie
::       _b - dodać przed - e-Kod
::       _c - e-Kod
::       _d - kod
::       _e - nazwa
::       _f - typ
::  OLD: \fiks_59c/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh();
DEFW.index('E_KOD'); DEFW.prefix(_a);
{? ~DEFW.find_key(_c,) & DEFW.find_key(_b,)
|| _lp:=DEFW.LP;
   exec('fiks_59b','upgradexperti1',_a,_b,1);
   DEFW.E_KOD:=_c;
   DEFW.KOD:=_d;
   DEFW.NAZWA:=_e;
   DEFW.ALGORYTM:=_f;
   DEFW.cntx_psh();
   DEFW.prefix();
   {? DEFW.add()
   || Info.add(DEFW.KOD,DEFW.NAZWA,'Dodano wiersz sprawozdania.')
   ?};
   DEFW.cntx_pop()
?};
DEFW.cntx_pop()


\fiks_59d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044 - Błędne esprawozdania skonsolidowane
::       Dodanie wierszy do algorytmu
::   WE:  _a  - sprawozdanie
::        _b  - e-Kod
::        _c  - e-Kody, który należy dodać do algorytmu (oddzielone przecinkiem)
::       [_d] - lp
::  OLD: \fiks_59d/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh();
DEFW.index('E_KOD'); DEFW.prefix(_a);
{? DEFW.find_key(_b,) & DEFW.ALGORYTM='S'
|| _defw:=DEFW.ref();
   DEFA.cntx_psh();
   DEFA.index('LP'); DEFA.prefix(_defw);
   {? var_press('_d')<=0 & ~DEFA.first() | var_press('_d')>0 & DEFA.first()
   || GR_KOL.cntx_psh();
      GR_KOL.index('LP'); GR_KOL.prefix(_a);
      {? GR_KOL.first()
      || _ekod:=spli_str(_c,',');
         {!
         |? _lp:={? var_press('_d')>0 || _d || 1 ?};
            {! _i:=1..obj_len(_ekod)
            |! {? DEFW.find_key(_ekod[_i],)
               || {? ~DEFA.find_key(GR_KOL.ref(),_lp)
                  || Info.zmiana:=1;
                     DEFA.blank(1);
                     DEFA.WYR:=_defw;
                     DEFA.KOL:=GR_KOL.ref();
                     DEFA.LP:=_lp; _lp+=1;
                     DEFA.LM:='S';
                     DEFA.WSP:=1;
                     DEFA.ARGUMENT:=DEFW.ref();
                     DEFA.ARG_KOL:=GR_KOL.ref();
                     DEFA.add(1)
                  ?}
               ?}
            !};
            GR_KOL.next()
         !}
      ?};
      GR_KOL.cntx_pop()
   ?};
   DEFA.cntx_pop()
?};
DEFW.cntx_pop()


\fiks_59e
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044 - Błędne esprawozdania skonsolidowane
::       Zmiana typu algorytmu wiersza sprawozdania
::   WE: _a - sprawozdanie
::       _b - e-Kod
::       _c - algorytm
::  OLD: \fiks_59e/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh();
DEFW.index('E_KOD'); DEFW.prefix(_a);
{? DEFW.find_key(_b,) & DEFW.ALGORYTM<>_c
|| Info.zmiana:=1;
   DEFW.ALGORYTM:=_c;
   DEFW.put()
?};
DEFW.cntx_pop()


\UD_TYP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja definicji typów danych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;

UD_TYP.cntx_psh();
UD_TYP.prefix();
UD_TYP.f_set(,,'POZIOM in (:_a) or OCHRONA in (:_a) or SYSTEM in (:_a)','\'t\',\'n\'');
_loop:=UD_TYP.f_first();
_size:=UD_TYP.f_size();
{!
|? _loop
|! UD_TYP.POZIOM:=~-UD_TYP.POZIOM;
   UD_TYP.OCHRONA:=~-UD_TYP.OCHRONA;
   UD_TYP.SYSTEM:=~-UD_TYP.SYSTEM;
   UD_TYP.put();
   _loop:=UD_TYP.f_next()
!};
UD_TYP.f_clear();
UD_TYP.cntx_pop();

{? _size=0
|| __UPG.msg('Typy danych nie wymagają aktualizacji.')
|| __UPG.msg('Liczba aktualizowanych typów danych: %1'[$_size])
?};

_ret


\UD_TYP_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja definicji typów danych - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja definicji typów danych.'


\UD_SCH
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja definicji schematów danych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;

UD_SCH.cntx_psh();
UD_SCH.prefix();
UD_SCH.f_set(,,'SYSTEM in (:_a)','\'t\',\'n\'');
_loop:=UD_SCH.f_first();
_size:=UD_SCH.f_size();
{!
|? _loop
|! UD_SCH.SYSTEM:=~-UD_SCH.SYSTEM;
   UD_SCH.put();
   _loop:=UD_SCH.f_next()
!};
UD_SCH.f_clear();
UD_SCH.cntx_pop();

{? _size=0
|| __UPG.msg('Schematy danych nie wymagają aktualizacji.')
|| __UPG.msg('Liczba aktualizowanych schematów danych: %1'[$_size])
?};

_ret


\UD_SCH_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja definicji schematów danych - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja definicji schematów danych.'


\rem_zas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Aktualizacja pól tabeli REM_ZAS
::----------------------------------------------------------------------------------------------------------------------

VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_result:=REM_ZAS.for_each("
   __lrec+=1;
   _put:=0;
   {? REM_ZAS.AKT=''
   || REM_ZAS.AKT:='T';
      _put:=1
   ?};
   {? _put>0
   || {? REM_ZAS.put()
      || __lmod+=1
      ?}
   ?};
   exec('rem_zas_status','zasoby',REM_ZAS.ref)
",1);
{? _result
|| __UPG.msg('Zaktualizowano nowe pola zasobów remontowych.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji nowych pól zasobów remontowych.')
?};
_result


\rem_zas_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Aktualizacja pól tabeli REM_ZAS - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tabeli zasobów remontowych.'


\REM_GWAR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Utworzenie tabeli gwarancji dla zasobów remontowych (REM_GWAR) na podstawie gwarancji (ZSB_GW)
::----------------------------------------------------------------------------------------------------------------------
_res:=1;

VAR_DEL.delete('__lrec','__lmod');
__lrec:=0;
__lmod:=0;

_psh:=1;
REM_GWAR.cntx_psh();
REM_GWAR.prefix();
{? REM_GWAR.first()
|| _msg:='Gwarancje z programu Xpertis Remonty zostały już wcześniej przeniesione.';
   {? var_pres('__UPG')>100
   || __UPG.msg(_msg)
   || FUN.info(_msg)
   ?};
   {? _psh
   || _psh:=0;
      REM_GWAR.cntx_pop()
   ?};
   return(_res)
?};

{? var_pres('__PROJ2REM')<0
|| _msg:='Przed wywołaniem formuły REM_GWAR musi być wywołana formuła REM_ZAS.';
   {? var_pres('__UPG')>100
   || __UPG.msg(_msg)
   || FUN.info(_msg)
   ?};
   {? _psh
   || _psh:=0;
      REM_GWAR.cntx_pop()
   ?};
   return(0)
?};

:: formuła zwracajaca zasób - parametr PROJZAS.ref()
_rem_zas:="
   _res:=null();
   __PROJ2REM.prefix($_a,);
   {? __PROJ2REM.first()
   || _res:=exec('FindAndGet','#table',REM_ZAS,__PROJ2REM.REM_ZAS)
   ?};
   _res
";

ZSB_GW.cntx_psh();

:: Gwarancje
ZSB_GW.index('ZSB_GW01');
ZSB_GW.prefix();
{? ZSB_GW.first()
|| {!
   |? __lrec+=1;
      REM_GWAR.blank();
      REM_GWAR.SYMBOL:=ZSB_GW.NAZWA;
      REM_GWAR.REM_ZAS:=_rem_zas(ZSB_GW.ZASOB);
      REM_GWAR.DUR_MODE:='D';
      REM_GWAR.DUR_DATE:=ZSB_GW.DO;
      _desc:=ZSB_GW.OPIS+'\n\nKontakt:\n'+ZSB_GW.KONTAKT+'\n\nObowiązuje od: '+$ZSB_GW.OD;
      REM_GWAR.memo_set(_desc,'DESC');
      {? REM_GWAR.add()
      || REM_GWAR.memo_put(,'DESC');
         __lmod+=1
      ?};
      ZSB_GW.next()
   !}
?};

ZSB_GW.prefix();

{? var_pres('__UPG')>100
|| __UPG.msg('Utworzono tabelę gwarancji dla zasobów remontowych.');
   __UPG.msg(
      'Przetworzono: %1 zapisów źródłowych gwarancji (ZSB_GW) z ogółem %2, na podstawie których dodano: %3 zapisów (REM_GWAR).'
      [$__lrec,$ZSB_GW.size(),$__lmod]
   )
?};

ZSB_GW.cntx_pop();

{? _psh
|| _psh:=0;
   REM_GWAR.cntx_pop()
?};

VAR_DEL.delete('__lrec','__lmod');
_res


\REM_GWAR_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Utworzenie tabeli gwarancji dla zasobów remontowych (REM_GWAR) na podstawie gwarancji (ZSB_GW) - opis
::----------------------------------------------------------------------------------------------------------------------
'Utworzenie tabeli gwarancji dla zasobów remontowych.'


\REM_CYKL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Utworzenie definicji zdarzeń cyklicznych (REM_CYKL)
::----------------------------------------------------------------------------------------------------------------------
_res:=1;

VAR_DEL.delete('__lrec','__lmod');
__lrec:=obj_new(2); {! _it:=1 ..2 |! __lrec[_it]:=0 !};
__lmod:=obj_new(2); {! _it:=1 ..2 |! __lmod[_it]:=0 !};

_psh:=1;
REM_CYKL.cntx_psh();
REM_CYKL.prefix();
{? REM_CYKL.first()
|| _msg:='Definicje prac cyklicznych z programu Xpertis Remonty zostały już wcześniej przeniesione.';
   {? var_pres('__UPG')>100
   || __UPG.msg(_msg)
   || FUN.info(_msg)
   ?};
   {? _psh
   || _psh:=0;
      REM_CYKL.cntx_pop()
   ?};
   return(_res)
?};

{? var_pres('__PROJ2REM')<0
|| _msg:='Przed wywołaniem formuły REM_CYKL musi być wywołana formuła REM_ZAS.';
   {? var_pres('__UPG')>100
   || __UPG.msg(_msg)
   || FUN.info(_msg)
   ?};
   {? _psh
   || _psh:=0;
      REM_CYKL.cntx_pop()
   ?};
   return(0)
?};

:: formuła zwracajaca zasób - parametr PROJZAS.ref()
_rem_zas:="
   _res:=null();
   __PROJ2REM.prefix($_a,);
   {? __PROJ2REM.first()
   || _res:=exec('FindAndGet','#table',REM_ZAS,__PROJ2REM.REM_ZAS)
   ?};
   _res
";

:: inicjowany słownik kategorii zgłoszeń
_rem_katg:=obj_new(2);
_add_katg:="
   _result:=null();
   REM_KATG.cntx_psh();
   REM_KATG.index('SYMBOL');
   REM_KATG.prefix(_a,);
   {? REM_KATG.first()
   || _result:=REM_KATG.ref()
   || REM_KATG.SYMBOL:=_a;
      {? REM_KATG.add()
      || _result:=REM_KATG.ref()
      ?}
   ?};
   REM_KATG.cntx_pop();
   _result
";
_rem_katg[1]:=_add_katg('!PRZEGLĄD');
_rem_katg[2]:=_add_katg('!REMONT');

ZSB_BADP.cntx_psh();
ZSB_BADZ.cntx_psh();
ZSB_REMP.cntx_psh();

:: Przeglądy cykliczne
ZSB_BADP.index('AREF');
ZSB_BADP.prefix();
_size:=ZSB_BADP.size();
{? ZSB_BADP.first()
|| FUN.prg_start(_size,'Trwa przenoszenie przeglądów cyklicznych.'@,,,1);
   {!
   |? __lrec[1]+=1;
      FUN.prg_next();

:: Pola nie przeniesione
::      ZSB_BADP.MIESIAC
::      ZSB_BADP.GD
::      ZSB_BADP.MIESIACZ
::      ZSB_BADP.DZIENZ
::      ZSB_BADP.GDZ
::      ZSB_BADP.KTO_WPR
::      ZSB_BADP.KTO_ZAM
::      ZSB_BADP.ZSB_ZGL
::      ZSB_BADP.AREF
::      ZSB_BADP.DZIENZ_O

      REM_CYKL.blank();
      REM_CYKL.REM_ZAS:=_rem_zas(ZSB_BADP.ZASOB);
      REM_CYKL.NAZ:='Przegląd: %1'[ZSB_BADP.RODZAJ().KOD];
      REM_CYKL.ACT:={? ZSB_BADP.STATUS='A' || 'T' || 'N' ?};
      REM_CYKL.REM_KATG:=_rem_katg[1];
      REM_CYKL.TRIGGER:={? ZSB_BADP.PRZEBIEG='T' || 'TT' || 'TN' ?};
::      REM_CYKL.TRIG_HAR:='N';
::      REM_CYKL.TRIG_PRZ:='N';
      REM_CYKL.SERVICE:='NT';
::      REM_CYKL.SERV_INF:='N';
::      REM_CYKL.SERV_GEN:='N';
      REM_CYKL.TRYB:={? ZSB_BADP.PRZEBIEG='T' || 'N' || 'M' ?};
::      REM_CYKL.T:=exec('str_7_x_N','#blank');
      REM_CYKL.M:=
         {? ZSB_BADP.PRZEBIEG='T'
         || (12*'N')
         |? ZSB_BADP.MIESIAC>0
         || ((ZSB_BADP.MIESIAC-1)*'N')+'T'+((12-ZSB_BADP.MIESIAC)*'N')
         || (12*'T')
         ?};
      REM_CYKL.D:=
         {? ZSB_BADP.PRZEBIEG='T'
         || (32*'N')
         |? ZSB_BADP.DZIEN_O='T'
         || (31*'N')+'T'
         |? ZSB_BADP.DZIEN>0
         || ((ZSB_BADP.DZIEN-1)*'N')+'T'+((32-ZSB_BADP.DZIEN)*'N')
         || (32*'N')
         ?};
      REM_CYKL.DT:=date(ZSB_BADP.STARTROK,1,1);
::      REM_CYKL.EXPIRES:='N';
::      REM_CYKL.DTE:=date(0,0,0);
::      REM_CYKL.REPLY:=1;
::      REM_CYKL.DAYB_INF:=0;
::      REM_CYKL.DAYB_GEN:=0;
      REM_CYKL.TRYBP:={? ZSB_BADP.PRZEBIEG='T' || 'C' || 'N' ?};
::      REM_CYKL.PRZ:=0;
::      REM_CYKL.PRZS:=0;
::      REM_CYKL.PRZE:=0;
::      REM_CYKL.PRZB_INF:=0;
::      REM_CYKL.PRZB_GEN:=0;
::      REM_CYKL.PRIORITY:=0;
::      REM_CYKL.PATTERN:='';
      REM_CYKL.OP_PLAN:={? ZSB_BADP.PRZEBIEG='T' || 'P' || 'S' ?};
      _opis:=ZSB_BADP.OPIS;
      REM_CYKL.memo_set(_opis,'OPIS');
      {? REM_CYKL.add()
      || REM_CYKL.memo_put(,'OPIS');
         {? ZSB_BADP.PRZEBIEG='T'
         || ZSB_BADZ.index('ZSB_BADZ');
            ZSB_BADZ.prefix(ZSB_BADP.ref());
            {? ZSB_BADZ.first()
            || {!
               |? REM_HARM.prefix();
                  REM_HARM.REM_CYKL:=REM_CYKL.ref();
                  REM_HARM.H:='T';
                  REM_HARM.P:='T';
                  REM_HARM.DATE_INF:=ZSB_BADZ.DATA;
                  REM_HARM.DATE_GEN:=ZSB_BADZ.DATA;
                  REM_HARM.DATE:=ZSB_BADZ.DATA;
                  REM_HARM.PRZ_INF:=ZSB_BADZ.PRZEBIEG;
                  REM_HARM.PRZ_GEN:=ZSB_BADZ.PRZEBIEG;
                  REM_HARM.PRZ:=ZSB_BADZ.PRZEBIEG;
::                  REM_HARM.GEN_INF:='N';
::                  REM_HARM.GENH_INF:='N';
::                  REM_HARM.GENP_INF:='N';
::                  REM_HARM.GEN_GEN:='N';
::                  REM_HARM.GENH_GEN:='N';
::                  REM_HARM.GENP_GEN:='N';
                  REM_HARM.add();
                  ZSB_BADZ.next()
               !}
            ?}
         || exec('update_harmonogram','remonty_cykliczne',REM_CYKL.ref(),0)
         ?};
         __lmod[1]+=1
      ?};

      ZSB_BADP.next()
   !};
   FUN.prg_stop()
?};

:: Remonty cykliczne
ZSB_REMP.index('AREF');
ZSB_REMP.prefix();
_size:=ZSB_REMP.size();
{? ZSB_REMP.first()
|| FUN.prg_start(_size,'Trwa przenoszenie remontów cyklicznych.'@,,,1);
   {!
   |? __lrec[2]+=1;
      FUN.prg_next();

:: Pola nie przeniesione
::      ZSB_REMP.MIESIAC
::      ZSB_REMP.GD
::      ZSB_REMP.MIESIACZ
::      ZSB_REMP.DZIENZ
::      ZSB_REMP.GDZ
::      ZSB_REMP.KTO_WPR
::      ZSB_REMP.KTO_ZAM
::      ZSB_REMP.ZSB_ZGL
::      ZSB_REMP.AREF
::      ZSB_REMP.DZIENZ_O

      REM_CYKL.blank();
      REM_CYKL.REM_ZAS:=_rem_zas(ZSB_REMP.ZASOB);
      REM_CYKL.NAZ:='Remont: %1'[ZSB_REMP.RODZAJ().KOD];
      REM_CYKL.ACT:={? ZSB_REMP.STATUS='A' || 'T' || 'N' ?};
      REM_CYKL.REM_KATG:=_rem_katg[2];
      REM_CYKL.TRIGGER:='TN';
::      REM_CYKL.TRIG_HAR:='N';
::      REM_CYKL.TRIG_PRZ:='N';
      REM_CYKL.SERVICE:='NT';
::      REM_CYKL.SERV_INF:='N';
::      REM_CYKL.SERV_GEN:='T';
      REM_CYKL.TRYB:='M';
::      REM_CYKL.T:=exec('str_7_x_N','#blank');
      REM_CYKL.M:=
         {? ZSB_REMP.MIESIAC>0
         || ((ZSB_REMP.MIESIAC-1)*'N')+'T'+((12-ZSB_REMP.MIESIAC)*'N')
         || (12*'T')
         ?};
      REM_CYKL.D:=
         {? ZSB_REMP.DZIEN_O='T'
         || (31*'N')+'T'
         |? ZSB_REMP.DZIEN>0
         || ((ZSB_REMP.DZIEN-1)*'N')+'T'+((32-ZSB_REMP.DZIEN)*'N')
         || (32*'N')
         ?};
      REM_CYKL.DT:=date(ZSB_REMP.STARTROK,1,1);
::      REM_CYKL.EXPIRES:='N';
::      REM_CYKL.DTE:=date(0,0,0);
::      REM_CYKL.REPLY:=1;
::      REM_CYKL.DAYB_INF:=0;
::      REM_CYKL.DAYB_GEN:=0;
::      REM_CYKL.TRYBP:='N';
::      REM_CYKL.PRZ:=0;
::      REM_CYKL.PRZS:=0;
::      REM_CYKL.PRZE:=0;
::      REM_CYKL.PRZB_INF:=0;
::      REM_CYKL.PRZB_GEN:=0;
::      REM_CYKL.PRIORITY:=0;
::      REM_CYKL.PATTERN:='';
::      REM_CYKL.OP_PLAN:='S';
      _opis:=ZSB_REMP.OPIS;
      REM_CYKL.memo_set(_opis,'OPIS');
      {? REM_CYKL.add()
      || REM_CYKL.memo_put(,'OPIS');
         exec('update_harmonogram','remonty_cykliczne',REM_CYKL.ref(),0);
         __lmod[2]+=1
      ?};

      ZSB_REMP.next()
   !};
   FUN.prg_stop()
?};

ZSB_BADP.prefix();
ZSB_REMP.prefix();

{? var_pres('__UPG')>100
|| __UPG.msg(
      'Przetworzono: %1 zapisów źródłowych przeglądów cyklicznych (ZSB_BADP) z ogółem %2, na podstawie których dodano: %3 zapisów (REM_CYKL).'
      [$__lrec[1],$ZSB_BADP.size(),$__lmod[1]]
   );
   __UPG.msg(
      'Przetworzono: %1 zapisów źródłowych remontów cyklicznych (ZSB_REMP) z ogółem %2, na podstawie których dodano: %3 zapisów (REM_CYKL).'
      [$__lrec[2],$ZSB_REMP.size(),$__lmod[2]]
   )
?};

ZSB_BADP.cntx_pop();
ZSB_BADZ.cntx_pop();
ZSB_REMP.cntx_pop();

{? _psh
|| _psh:=0;
   REM_CYKL.cntx_pop()
?};

VAR_DEL.delete('__lrec','__lmod');
_res


\REM_CYKL_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Utworzenie definicji zdarzeń cyklicznych (REM_CYKL) - opis
::----------------------------------------------------------------------------------------------------------------------
'Utworzenie definicji zdarzeń cyklicznych.'


\akt_1922_08
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Uaktualnienie pól tabeli KHCHKNIP
::  OLD: \khchknip/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('D_ACTIVE',KHCHKNIP)>0
|| KHCHKNIP.prefix();
   KHCHKNIP.for_each("
      {? KHCHKNIP.D_ACTIVE=date(0,0,0)
      || KHCHKNIP.D_ACTIVE:=KHCHKNIP.DATE;
         KHCHKNIP.put()
      ?}
   ");
   __UPG.msg('Uaktualniono wymagane pola.');
   1
|| __UPG.msg('Brak nowych pól. Wymagane zmiany w definicji systemu.');
   -1
?}


\akt_1922_08_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Uaktualnienie pól tabeli KHCHKNIP
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja 19.22_08 - Sprawdzenie aktywności podatników VAT za pomocą API wykazu podatników VAT.\n'
'Uaktualnienie pól w histiorii sprawdzeń aktywności podatników VAT.'


\sp2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22_03]
:: OPIS: Uaktualnienie pól związanych z wymagalnością split payment
::   WE: _a - 1 - uruchomienie w dowolnej firmie
::            2 - uruchomienie w każdej firmie
::  ORG: \etypy_w_portal/upgrade_2042.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lmod,__lrec');
__lrec:=__lmod:=0;
_result:=1;
{? var_press('SP_WYM',DOK)<=0
|| __UPG.msg('Dane dotyczące Split Payment nie zostały uaktualnione. Brak naniesionej aktualizacji (19.22_03).');
   VAR_DEL.delete('__lmod,__lrec');
   return(0)
|| _tryb:=_a;
   {? _tryb=1
   || FIRMA.cntx_psh();
      FIRMA.index('SYMBOL2'); FIRMA.prefix('S');
      {? FIRMA.first()
      || {!
         |? {? FIRMA.Z='N'
            || ROK_F.index('ROKPOCZ'); ROK_F.prefix(FIRMA.ref());
               {? ROK_F.find_le(date(2019,1,1))
               || {!
                  |? OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
                     {? OKRO_F.first()
                     || {!
                        |? _maska:=ROK_F.KOD+form(OKRO_F.NR,-2);
                           DOK.cntx_psh();
                           DOK.use('doku'+_maska);
                           echo('Uaktualnienie dokumentów księgowych: %1'@[DOK.name()]);
                           DOK.prefix();
                           {? ~DOK.for_each("
                                 __lrec+=1;
                                 {? DOK.SP_WYM='' || DOK.SP_WYM:='N'; {? DOK.put() || __lmod+=1 ?} ?};
                                 ~~
                              ",1)
                           || __UPG.msg('Błąd podczas aktualizacji dokumentów księgowych: %1'[DOK.name()]);
                              _result:=0
                           ?};
                           VPOZ.cntx_psh();
                           VPOZ.use('pozv'+_maska);
                           echo('Uaktualnienie pozycji VAT dokumentów: %1'@[VPOZ.name()]);
                           VPOZ.prefix();
                           {? ~VPOZ.for_each("
                                 __lrec+=1;
                                 {? VPOZ.SP_WYM='' || VPOZ.SP_WYM:='T'; {? VPOZ.put() || __lmod+=1 ?} ?};
                                 ~~
                              ",1)
                           || __UPG.msg('Błąd poczas aktualizacji pozycji VAT dokumentów: %1'[VPOZ.name()]);
                              _result:=0
                           ?};
                           VPOZ.cntx_pop();
                           POZ.cntx_psh();
                           POZ.use('pozy'+_maska);
                           echo('Uaktualnienie pozycji dokumentów: %1'@[POZ.name()]);
                           POZ.prefix();
                           {? ~POZ.for_each("
                                 __lrec+=1;
                                 {? POZ.SP_WYM=''
                                 || POZ.SP_WYM:={? POZ.SP_KS='TT' || 'T' || 'N' ?};
                                    {? POZ.put() || __lmod+=1 ?}
                                 ?};
                                 ~~
                              ",1)
                           || __UPG.msg('Błąd podczas aktualizacji pozycji dokumentów: %1'[POZ.name()]);
                              _result:=0
                           ?};
                           POZ.cntx_pop();
                           DOK.cntx_pop();
                           OKRO_F.next()
                        !}
                     ?};
                     _maska:=ROK_F.KOD;
                     OP.cntx_psh();
                     ZAP_OP.cntx_psh();
                     POZ.cntx_psh();
                     DOK.cntx_psh();
                     ZAP_OP.use('rozzap'+_maska);
                     OP.use('operac'+_maska);
                     OP.prefix();
                     {? ~OP.for_each("
                           __lrec+=1;
                           {? OP.DSP=date(0,0,0)
                           || ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref());
                              {? ZAP_OP.first()
                              || {!
                                 |? _mask:=8+$ZAP_OP.POZDOK;
                                    POZ.use(_mask);
                                    DOK.use('doku'+(_mask+4));
                                    {? ZAP_OP.POZDOK().DOK().RVAT
                                    || OP.DSP:=DOK.DTO;
                                       {? OP.put() || __lmod+=1 ?}
                                    ?};
                                    OP.DSP=date(0,0,0) & ZAP_OP.next()
                                 !}
                              ?}
                           ?};
                           ~~
                        ",1)
                     || __UPG.msg('Błąd podczas aktualizacji rozrachunków: %1'[OP.name()]);
                        _result:=0
                     ?};
                     POZ.cntx_pop();
                     echo('Uaktualnienie zapisów rozrachunków: %1'@[ZAP_OP.name()]);
                     ZAP_OP.prefix();
                     {? ~ZAP_OP.for_each("
                           __lrec+=1;
                           {? ZAP_OP.SP_WYM=''
                           || ZAP_OP.SP_WYM:=1+ZAP_OP.SP_TYP;
                              {? ZAP_OP.put() || __lmod+=1 ?}
                           ?};
                           ~~
                        ",1)
                     || __UPG.msg('Błąd podczas aktualizacji zapisów rozrachunków: %1'[ZAP_OP.name()]);
                        _result:=0
                     ?};
                     ZAP_OP.cntx_pop();
                     OP.cntx_pop();
                     DVAT.cntx_psh();
                     DVAT.use('dvat__'+_maska);
                     echo('Uaktualnienie dokumentów VAT: %1'@[DVAT.name()]);
                     DVAT.prefix();
                     {? ~DVAT.for_each("
                           __lrec+=1;
                           {? DVAT.SP_WYM='' || DVAT.SP_WYM:='N'; {? DVAT.put() || __lmod+=1 ?} ?};
                           ~~
                        ",1)
                     || __UPG.msg('Błąd podczas aktualizacji dokumentów VAT: %1'[DVAT.name()]);
                        _result:=0
                     ?};
                     DVAT.cntx_pop();
                     EDOKUM.cntx_psh();
                     EDOKUM.use('skid_v'+_maska);
                     echo('Uaktualnienie dokumentów w obiegu: %1'@[EDOKUM.name()]);
                     EDOKUM.prefix();
                     {? ~EDOKUM.for_each("
                           __lrec+=1;
                           {? EDOKUM.SP_WYM='' || EDOKUM.SP_WYM:='N'; {? EDOKUM.put() || __lmod+=1 ?} ?};
                           ~~
                        ",1)
                     || __UPG.msg('Błąd poczas aktualizacji dokumentów w obiegu: %1'[EDOKUM.name()]);
                        _result:=0
                     ?};
                     EDOKUM.cntx_pop();
                     DOK.cntx_pop();
                     ROK_F.next()
                  !}
               ?}
            ?};
            FIRMA.next()
         !}
      ?};
      FIRMA.cntx_pop();
      echo('Uaktualnienie typów dokumentów w obiegu ...'@);
      ETYPY.cntx_psh();
      ETYPY.prefix();
      {? ~ETYPY.for_each("
            __lrec+=1;
            _put:=0;
            {? ETYPY.SP_WYM='' || ETYPY.SP_WYM:='N'; _put:=1 ?};
            {? ETYPY.W_PORTAL='' || ETYPY.W_PORTAL:='N'; _put:=1 ?};
            {? _put & ETYPY.put() || __lmod+=1 ?};
            ~~
         ",1)
      || __UPG.msg('Błąd podczas aktualizacji typów dokumentów w obiegu.');
         _result:=0
      ?};
      ETYPY.cntx_pop();
      {? _result
      || __UPG.msg('Uaktualniono dane dotyczące Split Payment - formuły wspólne dla wszystkich firm.')
      || __UPG.msg('Wystąpiły błędy podczas aktualizacji danych dotyczących Split Payment - formuły wspólne dla wszystkich firm.')
      ?}
   |? _tryb=2
   || ROK_F.cntx_psh();
      ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
      {? ROK_F.find_le(date(2019,1,1))
      || {!
         |? PB.cntx_psh();
            PB.use('pb'+(4+$ROK_F.POCZ_ROK));
            echo('Uaktualnienie przelewów: %1'@[PB.name()]);
            PB.prefix();
            {? ~PB.for_each("
                  __lrec+=1;
                  {? PB.SP_WYM='' || PB.SP_WYM:='N'; {? PB.put() || __lmod+=1 ?} ?};
                  ~~
               ",1)
            || __UPG.msg('Błąd poczas aktualizacji przelewów: %1'[PB.name()]);
               _result:=0
            ?};
            PB_OP.cntx_psh();
            ROK_F.cntx_psh();
            PB_OP.use('pop'+(4+$ROK_F.POCZ_ROK));
            PB_OP.prefix();
            echo('Uaktualnienie rozrachunków przelewów: %1'@[PB_OP.name()]);
            {? ~PB_OP.for_each("
                  __lrec+=1;
                  {? PB_OP.DSP=date(0,0,0)
                  || OP.cntx_psh();
                     {? exec('find_op','rozrach_przel')
                     || PB_OP.DSP:=OP.DSP; {? PB_OP.put() || __lmod+=1 ?}
                     ?};
                     OP.cntx_pop()
                  ?}
               ")
            || __UPG.msg('Błąd podczas aktualizacji rozrachunków przelewów: %1'[PB_OP.name()]);
               _result:=0
            ?};
            PB_OP.cntx_pop();
            PB.cntx_pop();
            ROK_F.cntx_pop();
            ROK_F.next()
         !}
      ?};
      ROK_F.cntx_pop();
      ROZLVAT.cntx_psh();
      echo('Uaktualnienie zawieszonych dokumentów VAT ...'@);
      ROZLVAT.prefix();
      {? ~ROZLVAT.for_each("
            __lrec+=1;
            {? ROZLVAT.SP_WYM='' || ROZLVAT.SP_WYM:='N'; {? ROZLVAT.put() || __lmod+=1 ?} ?};
            ~~
         ",1)
      || __UPG.msg('Błąd podczas aktualizacji zawieszonych dokumentów VAT.');
         _result:=0
      ?};
      ROZLVAT.cntx_pop();
      PB.cntx_psh();
      PB.use('pbxxxx');
      echo('Uaktualnienie przelewów: %1'@[PB.name()]);
      PB.prefix();
      {? ~PB.for_each("
            __lrec+=1;
            {? PB.SP_WYM='' || PB.SP_WYM:='N'; {? PB.put() || __lmod+=1 ?} ?};
            ~~
         ",1)
      || __UPG.msg('Błąd podczas aktualizacji przelewów: %1'[PB.name()]);
         _result:=0
      ?};
      PB_OP.cntx_psh();
      PB_OP.use('popxxxx');
      PB_OP.prefix();
      echo('Uaktualnienie rozrachunków przelewów: %1'@[PB_OP.name()]);
      {? ~PB_OP.for_each("
            __lrec+=1;
            {? PB_OP.DSP=date(0,0,0)
            || OP.cntx_psh();
               {? exec('find_op','rozrach_przel')
               || PB_OP.DSP:=OP.DSP; {? PB_OP.put() || __lmod+=1 ?}
               ?};
               OP.cntx_pop()
            ?}
         ")
      || __UPG.msg('Błąd podczas aktualizacji rozrachunków przelewów: %1'[PB_OP.name()]);
         _result:=0
      ?};
      PB_OP.cntx_pop();
      PB.cntx_pop();
      {? _result
      || __UPG.msg('Uaktualniono dane dotyczące Split Payment - formuły dla firmy.')
      || __UPG.msg('Wystąpiły błędy podczas aktualizacji danych dotyczących Split Payment - formuły dla firmy.')
      ?}
   ?};
   echo()
?};
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lmod,__lrec');
_result


\sp_g
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.22_03]
:: OPIS: Uaktualnienie pól związanych z wymagalnością split payment, wszystkie firmy
::----------------------------------------------------------------------------------------------------------------------
exec('sp2','upgrade_1922_03',2)


\sp_g_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.22_03]
:: OPIS: Uaktualnienie pól związanych z wymagalnością split payment, wszystkie firmy - opis
::----------------------------------------------------------------------------------------------------------------------
'Uaktualnienie pól związanych z wymagalnością split payment - wszystkie firmy.'


\sp_l
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.22_03]
:: OPIS: Uaktualnienie pól związanych z wymagalnością split payment, bieżąca firma
::----------------------------------------------------------------------------------------------------------------------
exec('sp2','upgrade_1922_03',1)


\sp_l_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.22_03]
:: OPIS: Uaktualnienie pól związanych z wymagalnością split payment, bieżąca firma - opis
::----------------------------------------------------------------------------------------------------------------------
'Uaktualnienie pól związanych z wymagalnością split payment - bieżąca firma.'


\espr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Uaktualnienie pól związanych z aktualizacja 19.22_02 - nowe schematy e-Sprawozdań
::----------------------------------------------------------------------------------------------------------------------
E_SPR.cntx_psh();
E_SPR.prefix();
E_SPR.for_each("
_put:=0;
{? E_SPR.D_KON='' || E_SPR.D_KON:='T'; _put:=1 ?};
{? E_SPR.D_ZAGROZ='' || E_SPR.D_ZAGROZ:='N'; _put:=1 ?};
{? _put
|| E_SPR.put()
?}
");
E_SPR.cntx_pop();
ISTDEF.cntx_psh();
ISTDEF.index('JPK'); ISTDEF.prefix('J','SF',);
{? ISTDEF.first()
|| {!
   |? _jedn:=9+ISTDEF.VER='Jednostka';
      {? _jedn
      || _nr5:=5
      || _nr5:=9
      ?};
      exec('espr2a','upgrade_1922','tns:P_'+$_nr5+'A',$"'true'",$"{? var_press('D_KON',E_SPR)<0 | JPK.E_SPR().D_KON='T' || 'true' || 'false' ?}");
      exec('espr2a','upgrade_1922','tns:P_'+$_nr5+'B',,$"{? var_press('D_ZAGROZ',E_SPR)<0 | JPK.E_SPR().D_ZAGROZ='N' || 'true' || 'false' ?}");
      exec('espr2a','upgrade_1922','tns:P_'+$_nr5+'C','',$"exec('opis','jpk_sf')",1);
      {? _jedn
      || exec('espr2a','upgrade_1922','tns:P_'+$(_nr5+1)+'A',
            $"{? JPK.E_SPR().L_PRZED='T' || 'true' || 'false' ?}",
            $"{? JPK.E_SPR().L_PRZED='T' || 'false' || 'true' ?}"
         )
      ?};
      ISTDEF.next()
   !}
?};
ISTDEF.cntx_pop();
__UPG.msg('Zaaktualizowano dane dla e-Sprawozdań.');
1


\espr2_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.22]
:: OPIS: Uaktualnienie pól związanych z aktualizacja 12.51_53 - nowe schematy e-Sprawozdań - OPIS
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja danych na potrzeby możliwości ustawienia zagrożeń w kontynuowaniu działalności w e-Sprawozdaniach.'


\espr2a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: FOrmuła pomocnicza do espr
::   WE:  _a  - kod elementu
::        _b  - bieżaca formuła
::        _c  - nowa formuła
::       [_d] - ustawiać typ pola
::----------------------------------------------------------------------------------------------------------------------
ISTDEFS.cntx_psh();
ISTDEFS.index('OPIS');
ISTDEFS.prefix(ISTDEF.ref(),_a,);
_typ:={? var_press('_d')>0 || _d || 0 ?};
_lp:=0;
{? ISTDEFS.first()
|| ISTDEFS.cntx_psh();
   _next:=ISTDEFS.next();
   ISTDEFS.cntx_pop();
   {!
   |? _lp+=1;
      {? var_press('_b')<=0 | ISTDEFS.REGULY=_b
      || ISTDEFS.REGULY:=_c;
         {? _typ
         || ISTDEFS.TYPFLD:={? _next=1 & _lp=1 || 'OMN' || 'OIN' ?}
         ?};
         ISTDEFS.put()
      ?};
      ISTDEFS.next()
   !}
?};
ISTDEFS.cntx_pop()


\premie_okresowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zdefiniowanie premii w tabeli składników okresowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_txt:='';
_firma:=exec('ref_firma','ustawienia');
_rodz:=spli_str('M,K,R',',');
_skl:=7100;

R.cntx_psh();
R.index('RUBKOD');
R.prefix();
PAR_POKR.cntx_psh();
PAR_POKR.index('PAR_POKR');
PAR_POKR.prefix(_firma);
{! _ii:=1 .. obj_len(_rodz)
|! {? R.find_key(_skl)
   || {? PAR_POKR.find_tab(1,'FIRMA',,'=',_firma,'RP',,'=',_rodz[_ii])
      || _txt:=
            'Zdefiniowanie premii okresowej typu "%1" obsługiwanej składnikiem "%2 - %3" nie jest możliwe. '
            'Premia jest już obsługiwana składnikiem "%4 - %5".'
            [_rodz[_ii],$R.RN,R.RT,$PAR_POKR.R().RN,R.RT];
         _result:=-1
      || PAR_POKR.blank(1);
         PAR_POKR.R:=R.ref();
         PAR_POKR.RP:=_rodz[_ii];
         PAR_POKR.RZ:='T';
         PAR_POKR.KZ:='W';
         PAR_POKR.DZ_12:={? _rodz[_ii]='M' || 'N' || 'T' ?};
         PAR_POKR.PTZO:='N';
         PAR_POKR.CZY_FM:='N';
         PAR_POKR.CZY_PKN:='N';
         PAR_POKR.FIRMA:=_firma;
         {? PAR_POKR.add(1)
         || _txt:=
               'Zdefiniowanie premii okresowej typu "%1" obsługiwanej składnikiem "%2 - %3" zakończyło się sukcesem.'
               [_rodz[_ii],$R.RN,R.RT]
         || _txt:=
               'Zdefiniowanie premii okresowej typu "%1" obsługiwanej składnikiem "%2 - %3" nie powiodło się.'
               [_rodz[_ii],$R.RN,R.RT];
            _result:=-1
         ?}
      ?}
   || _txt:='Brak składnika płacowego o numerze %1.'@[$_skl]
   ?};
   __UPG.msg(_txt);
   _skl+=1
!};
PAR_POKR.cntx_pop();
R.cntx_pop();

_result


\premie_okresowe_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zdefiniowanie premii w tabeli składników okresowych - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Definicja premii okresowych.'


\param_nagrodajubileuszowa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Parametryzacja do nagrody jubileuszowej.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_txt:='';

:: Definicja słownika do wskazania pracowników, którym należy wypłacać nagrodę jubileuszową.
SLO_TYP.cntx_psh();
SLO_KOD.cntx_psh();
{? exec('kod_ref','ext_slo','GRUPPRAC','NAG_JUB','Pracownicy do nagrody jubileuszowej')<>null()
|| _result:=1;
   _txt:='Dodano nowy słownik grupy pracowników do nagrody jubileuszowej'
|| _result:=-1;
   _txt:='Nie dodano nowego słownika grupy pracowników do nagrody jubileuszowej'
?};
SLO_KOD.cntx_pop();
SLO_TYP.cntx_pop();
__UPG.msg(_txt);

_result


\param_nagrodajubileuszowa_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Parametryzacja do nagrody jubileuszowej - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Parametryzacja do nagrody jubileuszowej'


\progi_nagrodajubileuszowa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Progi stażu do nagrody jubileuszowej (dla służby cywilnej).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_txt:='';
_choice:=
   FUN.choice(
      'Uzupełnienie definicji progów stażu do nagrody jubileuszowej.'@,0,
      'Służba cywilna'@,
      'Nauczyciele'@,
      'Nie &uzupełniaj'@
   );
{? _choice=0
|| __UPG.msg('Odłożono aktualizację progów stażu do nagrody jubileuszowej.');
   return(-1)
|? _choice=3
|| __UPG.msg('Wykonano aktualizację bez uzupełniania słownika progów stażu do nagrody jubileuszowej.');
   return(1)
?};

PAR_NJUB.cntx_psh();
PAR_NJUB.prefix();
{? ~PAR_NJUB.first()
|| _level:=
      {? _choice=1
      || spli_str('20,75,25,100,30,150,35,200,40,300,45,400',',')
      || spli_str('20,75,25,100,30,150,35,200,40,250',',')
      ?};
   _lsize:=obj_len(_level);

:: Uzupełnie tabeli progów stażu do nagrody jubileuszowej na podstwie danych z tablicy.
   {! _ii:=1 .. _lsize
   |! {? _ii%*2=0
      || PAR_NJUB.PROC:=#_level[_ii];
         PAR_NJUB.add()
      || PAR_NJUB.STAZ:=#_level[_ii]
      ?}
   !};
   _size:=PAR_NJUB.size();
   {? _size=(_lsize/2#0)
   || _txt:='Uzupełniono progi stażu do nagrody jubileuszowej.'
   || _txt:='Uzupełniono %1 z %2 progów stażu do nagrody jubileuszowej.'[$_size,$(_lsize/2#0)]
   ?};
   _txt+=' (%1)'[{? _choice=1 || 'służba cywilna' || 'nauczyciele' ?}]
|| _txt:='Nie uzupełniono progów stażu do nagrody jubileuszowej ponieważ tabela nie jest pusta.'
?};
PAR_NJUB.cntx_pop();

__UPG.msg(_txt);
_result


\progi_nagrodajubileuszowa_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Progi stażu do nagrody jubileuszowej - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Progi stażu do nagrody jubileuszowej'


\rub_52
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: Aktualizacja rubryki 52 - usunięcie z 19 pozycji karty zarobkowej.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_txt:='';
_skl:=52;
R.cntx_psh();
R.index('RUBKOD');
R.prefix();
{? R.find_key(_skl)
|| R.RSKZ:=0;
   {? R.put()
   || _txt:='Zaktualizowno składnik płacowy o numerze %1.'@[$_skl]
   || _txt:='Nie udało się zaktualizować składnika płacowego o numerze %1.'@[$_skl];
      _result:=-1
   ?}
|| _txt:='Brak składnika płacowego o numerze %1.'@[$_skl];
   _result:=-1
?};
__UPG.msg(_txt);
R.cntx_pop();
_result


\rub_52_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: Aktualizacja rubryki 52 - usunięcie z 19 pozycji karty zarobkowej.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja rubryki 52 - usunięcie z 19 pozycji karty zarobkowej.'


\usp_staz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zmiany w obsłudze ustania stosunku pracy w okresach zatrudnienia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FUN.info(
   'W okresach zatrudnienia dodane zostały pola związane z obsługą ustania stosunku pracy.\n'
   'Za chwilę zostanie uruchomiony mechanizm, który na podstawie dotychczasowego "Trybu" (zwolnienia)\n'
   'pozwala uzupełnić wartości nowych pól. Na ekranie pojawią dotychczas używane tryby rozwiązania umów wykorzystywane\n'
   'w kartotece Okresy zatrudnienia. Dzięki akcji Popraw możliwe jest ustalenie wartości nowych pól.\n'
   'UWAGA: Po akceptacji wartości (klawisz F2 lub przycisk OK) zmiany zostaną wprowadzone we wszystkich okresach\n'
   'zatrudnienia wykorzystujących tryby dla, których wskazano wypełnienie nowych pól.'@
);

_firma:=exec('ref_firma','ustawienia');

_TAB:=sql('
   select distinct SLO_NAZ.NAZWA ROU, space(137) USPPR, space(16) USPPRR, space(190) USPPO, space(16) USPPOR
   from STAZ join SLO_NAZ
   where STAZ.FIRMA=:_a',
   _firma
);
{? _TAB.first()
|| {!
   |? {? |_TAB.USPPR=''
      || _TAB.USPPR:=_TAB.USPPRR:='';
         _TAB.put(1)
      ?};
      {? |_TAB.USPPO=''
      || _TAB.USPPO:=_TAB.USPPOR:='';
         _TAB.put(1)
      ?};
      _TAB.next()
   !}
?};

:: Okno wertowania
_wer:=_TAB.mk_sel('Rozwiązanie umowy'@,,,'uspstazsel',,,,,'U',,,,,'maximized');
_TAB.win_fld(_wer,,'ROU',,,-30,,1,'Rozwiązanie umowy'@,,'Przyczyna rozwiązania umowy obowiązująca do 2018/12/31'@);
_TAB.win_fld(_wer,,'USPPR',,,-30,,1,'Rozwiązanie umowy'@,,'Przyczyna rozwiązania/wygaśnięcia stosunku pracy'@);
_TAB.win_fld(_wer,,'USPPO',,,-100,,1,'Podstawa prawna'@,,'Podstawa prawna ustania stosunku pracy/stosunku służbowego'@);
_TAB.win_act(_wer,,'Formuła','Popraw'@@,,'Poprawianie bieżącego zapisu'@,
   "  _TAB:=cur_tab();
      {? |_TAB.USPPR='' || _TAB.USPPR:=_TAB.USPPRR:='' ?};
      {? |_TAB.USPPO='' || _TAB.USPPO:=_TAB.USPPOR:='' ?};
      {? _TAB.edit(\"__CHK.record2(cur_tab(),'USPPR','Rozwiązanie umowy'@,'USPPO','Podstawa prawna'@)\")
      || _TAB.put()
      ?}
   ",,,,,,'P'
);
_TAB.win_act(_wer,,'Formuła','Zapisz'@@,,'Zapisanie wprowadzonych zmian'@,"sel_exit()",,,,,,'Z');
_TAB.win_act(_wer,,'Rekord',,,,
   "  _TAB:=cur_tab();
      _TAB.cntx_psh();
      _act:={? _TAB.find_tab(1,'USPPR',,'<>','') || '' || 'Z' ?};
      _TAB.cntx_pop();
      _TAB.actions_grayed(cur_win(),_act)
   "
);
_TAB.win_btn(_wer,'text=%1,align=begin'['Popraw'@],'menu:P',,,0,,,'noempty');
_TAB.win_btn(_wer,'text=%1,panel=bottom,align=end'['Zapisz'@],'menu:Z',,,0,,,'noempty');
_TAB.win_btn(_wer,'text=%1,panel=bottom,align=end'['Anuluj'@],'key:Esc',,,0);

:: Okno redagowania
_red:=_TAB.mk_edit('Rozwiązanie umowy'@,,'uspstazedit');
_TAB.win_esep(_red,'Dane podstawowe'@);
_TAB.win_efld(_red,,'ROU',,,150,,1,'Rozwiązanie umowy'@,,'Przyczyna rozwiązania umowy obowiązująca do 2018/12/31'@);
_TAB.win_efld(_red,,'USPPR',,,150,,,'Rozwiązanie umowy'@,,'Przyczyna rozwiązania/wygaśnięcia stosunku pracy'@,,
   'F3_button=1'
);
_TAB.efld_opt(_red,'mark=1',,'USPPR');
_TAB.win_efld(_red,,'USPPO',,,150,,,'Podstawa prawna'@,,'Podstawa prawna ustania stosunku pracy/stosunku służbowego'@,,
   'F3_button=1'
);
_TAB.efld_opt(_red,'mark=1',,'USPPO');
_TAB.fld_fml('USPPR','F3',"exec('usp_staz_f3','upgrade_1942',cur_tab(),'USPKOD')");
_TAB.fld_fml('USPPR','AFTER_EDIT',"exec('usp_staz_ae','upgrade_1942',cur_tab(),'USPKOD')");
_TAB.fld_fml('USPPO','F3',"exec('usp_staz_f3','upgrade_1942',cur_tab(),'USPPPRAK')");
_TAB.fld_fml('USPPO','AFTER_EDIT',"exec('usp_staz_ae','upgrade_1942',cur_tab(),'USPPPRAK')");
exec('ok_esc','#window',_TAB,_red);

_TAB.win_sel(_wer);
_TAB.win_edit(_red);
{? _TAB.size() & _TAB.select()
|| {? _TAB.first()
   || _ask:=FUN.ask('Czy nadpisywać wprowadzone wcześniej informacje?'@);
      S_ZUS.cntx_psh();
      S_ZUS.prefix();
      STAZ.cntx_psh();
      STAZ.index(STAZ.ndx_tmp(,1,'FIRMA',,,'ROU','NAZWA',));
      {!
      |? {? +(|_TAB.USPPRR) | +(|_TAB.USPPOR)
         || STAZ.prefix(_firma,_TAB.ROU);
            {? STAZ.first()
            || {!
               |? _put:=0;
                  {? {? _ask || 1 || STAZ.USPKOD=null() ?}
                     &
                     +(|_TAB.USPPRR)
                     &
                     S_ZUS.seek(_TAB.USPPRR,,1)
                  || STAZ.USPKOD:=S_ZUS.ref();
                     _put:=1
                  ?};
                  {? {? _ask || 1 || STAZ.USPPPRAK=null() ?}
                     &
                     +(|_TAB.USPPOR)
                     &
                     S_ZUS.seek(_TAB.USPPOR,,1)
                  || STAZ.USPPPRAK:=S_ZUS.ref();
                     _put:=1
                  ?};
                  {? _put || STAZ.put() ?};
                  STAZ.next()
               !}
            ?}
         ?};
         _TAB.next()
      !};
      STAZ.ndx_drop();
      STAZ.cntx_pop();
      S_ZUS.cntx_pop()
   ?}
?};

_funInfo:={? ~_TAB.size() || 'Brak okresów zatrudnienia spełniających warunki ustania stosunku pracy.\n'@ || '' ?};
{? FUN.ask('%4%1\n\n%2\n%3'
      [  'Czy wykonane zostały wszystkie prace związane ze zmianą sposobu raportowania do ZUS ustania stosunku pracy?'@,
         'Tak - Formuła potransferowa zostanie uznana za zakończoną. Jej ponowne uruchomienie nie będzie możliwe.'@,
         'Nie - Nie wszystkie prace zostały wykonane. Formuła potransferowa będzie mogła być ponownie uruchomiona.'@,
         _funInfo
      ]
   )
|| __UPG.msg('Użytkownik %1 potwierdził wykonanie wszystkich prac.' [exec('operatorKod','#users')]);
   1
|| __UPG.msg('Prace będę jeszcze kontynuowane.');
   0
?}


\usp_staz_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zmiany w obsłudze ustania stosunku pracy w okresach zatrudnienia.
::   WE: _a [TABLE] Tabela z danymi do modyfikacji.
::       _b [STRING] Rodzaj słownika ZUS z wymaganymi informacjami.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:=_a;
_rodz:=_b;

S_ZUS.cntx_psh();
S_ZUS.index('S_ZUS');
S_ZUS.prefix(_rodz);
_wer:=S_ZUS.mk_sel('Słownik ZUS'@,,,,,,,,'U');
S_ZUS.win_fld(_wer,,'KOD',,,12,,1,'Kod'@,,'Symbol/kod'@);
S_ZUS.win_fld(_wer,,'LINIA',,,63,,1,'Opis'@,,'Krótki opis'@);
S_ZUS.win_act(_wer,,'Formuła','Wybierz'@@,,'Wybór bieżącego zapisu'@,"sel_exit()",,1,,,,'W');
S_ZUS.win_btn(_wer,'text=%1,panel=bottom,align=end'['Wybierz'@],'menu:W',,,0,,,'noempty');
S_ZUS.win_btn(_wer,'text=%1,panel=bottom,align=end'['Anuluj'@],'key:Esc',,,0);
S_ZUS.win_sel(_wer);
{? S_ZUS.select()
|| {? _rodz='USPKOD'
   || _TAB.USPPR:=S_ZUS.LINIA;
      _TAB.USPPRR:=$S_ZUS.ref()
   |? _rodz='USPPPRAK'
   || _TAB.USPPO:=S_ZUS.LINIA;
      _TAB.USPPOR:=$S_ZUS.ref()
   || _TAB.USPPO:=_TAB.USPPOR:=''
   ?}
?};
S_ZUS.cntx_pop();
~~


\usp_staz_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zmiany w obsłudze ustania stosunku pracy w okresach zatrudnienia.f3_usp_staz
::   WE: _a [TABLE] Tabela z danymi do modyfikacji.
::       _b [STRING] Rodzaj słownika ZUS z wymaganymi informacjami.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:=_a;
_rodz:=_b;

S_ZUS.cntx_psh();
S_ZUS.index(S_ZUS.ndx_tmp(,1,'RODZAJ',,,'LINIA',,));
S_ZUS.prefix(_rodz);
_wart:={? _rodz='USPKOD' || _TAB.USPPR || _TAB.USPPO ?};
{? |_wart='' | S_ZUS.find_key(_wart,)
|| _result:=1
|| FUN.emsg('Brak wartości w słowniku.'@);
   _result:=0
?};
S_ZUS.ndx_drop();
S_ZUS.cntx_pop();
_result


\usp_staz_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zmiany w obsłudze ustania stosunku pracy w okresach zatrudnienia - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Zmiany w obsłudze ustania stosunku pracy w okresach zatrudnienia'


\zalacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Uzupełnienie pola ZALACZ.NAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
ZALACZ.cntx_psh();
ZALACZ.trig_off('*','*');
ZALACZ.index('TYP_ZAL');
ZALACZ.prefix();
_size:=ZALACZ.size();
_nag0:=_nag1:=_nag2:=0;
_loop:=ZALACZ.first();
{!
|? _loop
|! _put:=0;
   {? ZALACZ.NAG='' & ZALACZ.SQLREF<>''
   || _TAB:=ref_tab(ZALACZ.SQLREF);
      {? type_of(_TAB)<>type_of(~~)
      || _TAB.cntx_psh();
         _TAB.use(ref_name(ZALACZ.SQLREF));
         {? _TAB.seek(ZALACZ.SQLREF)
         || ZALACZ.NAG:=_TAB.uidref();
            ZALACZ.RODZAJ:=2-!_TAB;
            _put+=1
         || _nag0+=1
         ?};
         _TAB.cntx_pop();
         obj_del(_TAB)
      || {? ZALACZ.RODZAJ=''
         || ZALACZ.RODZAJ:={? ZALACZ.P<>null()
                           || 'P'
                           || 'OSOBA'
                           ?};
            _put+=1
         ?}
      ?}
   |? ZALACZ.RODZAJ=''
   || ZALACZ.RODZAJ:=
         {? ZALACZ.NAG<>''
         || 2-!ref_tab(ZALACZ.SQLREF)
         |? ZALACZ.P<>null()
         || 'P'
         || 'OSOBA'
         ?};
      _put+=1

   || _nag2+=1
   ?};
   {? _put
   || {? ZALACZ.put()
      || _nag1+=1
      || _nag0+=1
      ?}
   ?};
   _loop:=ZALACZ.next()
!};
__UPG.msg('Liczba wszystkich zapisów: %1' [$_size]);
__UPG.msg('Liczba zapisów niewymagających uzupełnienia: %1' [$_nag2]);
__UPG.msg('Liczba uzupełnionych zapisów: %1' [$_nag1]);
__UPG.msg('Liczba zapisów, których nie udało się uzupełnić: %1' [$_nag0]);
ZALACZ.trig_on('*','*');
ZALACZ.cntx_pop();
_ret


\zalacz_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Uzupełnienie pola ZALACZ.NAG - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie pola ZALACZ.NAG'


\zaoh2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Zmiany w obsłudze załączników w związku z dokumentacją pracowniczą.
::   WE:
::   WY:
::  OLD: \zaoh/upgrade_1942.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;

ZAOH.cntx_psh();
ZAOH.index('LP');
ZAOH.prefix(0);
:: Ile jest elementów głównych?
_size:=ZAOH.size();
{? _size=0
|| __UPG.msg('Brak definicji struktur - zmiany nie są wymagane.')
|? _size>1
|| __UPG.msg('Istenieją już struktury załączników i dokumentacji pracowniczej - zmiany nie są wymagane.')
|? ZAOH.first() & ZAOH.CZESC=''
|| _TAB:=sql('select count(*) as ILE from ZAOH where ZAOH.CZESC<>\'\'');
:: Pole ZAOH.CZESC:
::    - W Xpertisie było od samego początku (od pojawienia się tabeli ZAOH) i było wypełnione (z wyjątkiem rekordu
::      nadrzędnego).
::    - W Mericie nie było go jeszcze w wersji 19.22 - pojawiło się w wersji następnej (ale było puste).
:: Jeżeli więc istnieją rekordy z uzupełnioną wartością tego pola, to albo procedura transferowa była już wykonana,
:: albo transfer dotyczy przejścia z Xpertis-a.
   _ver:={? _TAB.first() & _TAB.ILE || 'X' || 'M' ?};
   do();
   ZAOH.CZESC:={? _ver='X' || exec('zaoh_path','zalacz','G0D') || exec('zaoh_path','zalacz','G0Z') ?};
   {? ZAOH.put()
   || {? _ver='M'
      || ZAOH.prefix();
         {? ZAOH.first()
         || {!
            |? {? ZAOH.ZAOH<>0 & ZAOH.SYSTEM='T'
               || ZAOH.SYSTEM:='N';
                  ZAOH.put()
               ?};
               ZAOH.next()
            !}
         ?}
      ?}
   ?};
   {? _ret:=end()
   || __UPG.msg('Aktualizacja struktury danych powiodła się.')
   || __UPG.msg('Aktualizacja struktury danych nie powiodła się.')
   ?}
|| __UPG.msg('Aktualizacja struktury danych nie jest wymagana.')
?};
ZAOH.cntx_pop();

_ret


\zaoh2_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Zmiany w obsłudze załączników w związku z dokumentacją pracowniczą - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Zmiany w obsłudze załączników w związku z dokumentacją pracowniczą'


\zaots
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Uzupełnienie nowego pola ZAOTS.G.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
ZAOTS.cntx_psh();
ZAOTS.index('PATH');
ZAOTS.prefix();
{? ZAOTS.first()
|| _size:=ZAOTS.size();
   _bz:=0;
   _zm:=0;
   {!
   |? {? ZAOTS.G=''
::       Niech zadziała wyzwalacz.
      || _zm+=ZAOTS.put() & ZAOTS.G<>''
      || _bz+=1
      ?};
      ZAOTS.next()
   !};
   __UPG.msg('Liczba wszystkich zapisów: %1' [$_size]);
   __UPG.msg('Liczba zapisów niewymagających uzupełnienia: %1' [$_bz]);
   __UPG.msg('Liczba zapisów uzupełnionych: %1' [$_zm]);
   _ret:=_zm+_bz=_size
|| __UPG.msg('Brak rekordów - uzupełnienie nie jest wymagane.')
?};
ZAOTS.cntx_pop();
_ret


\zaots_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Uzupełnienie nowego pola ZAOTS.G - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie nowego pola ZAOTS.G'


\slo_kod_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS
:: OPIS: Utworzenie nowego kodu systemowego w słowniku SLO_KOD
::----------------------------------------------------------------------------------------------------------------------
_naz:='Logo firmy';
_kod:='logo';
_put:=0;
_txt:='Nie udało się utworzyć kodu "%1" w tabeli SLO_KOD.'[_kod];
_typ:=exec('slo_typ','ext_slo','TYPBLOBF');
_kodZm:='';
{? exec('kod_ref','ext_slo',_typ,_kod,_naz,1)<>null()
:: Znaleziono taki kod. Sprawdzam nazwę i systemowość:
|| {? SLO_KOD.NAZWA<>_naz || SLO_KOD.NAZWA:=_naz; _put:=1 ?};
   {? SLO_KOD.SYSTEM<>'T' || SLO_KOD.SYSTEM:='T'; _put:=1 ?};
   {? _put || SLO_KOD.put(); _txt:='Poprawiono' || _txt:='Utworzono' ?};
   __UPG.msg('%1 kod "%2" w tabeli SLO_KOD.'[_txt,_kod])
:: Nie znaleziono takiego kodu i nie udało się utworzyć. Szukam kodu o takiej nazwie.
|| SLO_KOD.cntx_psh();
   SLO_KOD.index('NAZWA');
   SLO_KOD.prefix(_typ,);
   {? SLO_KOD.find_key(_naz,_naz)
:: Zmieniam nazwę znalezionego kodu, żebym mógł utworzyć właściwy:
   || SLO_KOD.NAZWA:=SLO_KOD.NAZWA+' a';
      _kodZm:=SLO_KOD.KOD;
      SLO_KOD.put();
::    Ponownie próbuję utworzyć odpowiedni kod:
      {? exec('kod_ref','ext_slo',_typ,_kod,_naz,1)<>null()
      || _txt:='Zmieniono nazwę kodu %1. Utworzono kod "%2" w tabeli SLO_KOD.'[_kodZm,_kod];
         __UPG.msg(_txt);
         SLO_KOD.cntx_pop();
         return(1)
      || __UPG.msg(_txt);
         SLO_KOD.cntx_pop();
         return(-1)
      ?}
   || __UPG.msg(_txt);
      SLO_KOD.cntx_pop();
      return(-1)
   ?};
   SLO_KOD.cntx_pop()
?};
1


\slo_kod_add_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS
:: OPIS: Utworzenie nowego kodu systemowego w słowniku SLO_KOD - opis
::----------------------------------------------------------------------------------------------------------------------
'Nowy kod znaku graficznego firm - "logo"'


\plugins_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [19.02]
:: OPIS: Aktualizacja listy wtyczek wdrożeniowych
::----------------------------------------------------------------------------------------------------------------------
exec('init','plugins');
__UPG.msg('Zaktualizowano wtyczki wdrożeniowe.');
1


\plugins_init_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [19.02]
:: OPIS: Aktualizacja listy wtyczek - opis.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie definicji wtyczek wdrożeniowych:\n'


\PPK_ZDN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja zawartości tabeli PPK_ZDN
::----------------------------------------------------------------------------------------------------------------------
:: Uzupełnienie kolumny AUTO.
PPK_ZDN.cntx_psh();
PPK_ZDN.prefix();
PPK_ZDN.for_each("{? PPK_ZDN.AUTO='' || PPK_ZDN.AUTO:='N'; PPK_ZDN.put() ?}");
PPK_ZDN.cntx_pop();
__UPG.msg('Zaktualizowano zawartości tabeli.');
1


\PPK_ZDN_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja zawartości tabeli PPK_ZDN - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zawartości tabeli PPK_ZDN'


\PPK_RPL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja zawartości tabeli PPK_RPL
::----------------------------------------------------------------------------------------------------------------------
:: Uzupełnienie kolumny DATA;
_d0:=date(0,0,0);
PPK_RPL.cntx_psh();
PPK_RPL.index('PPK_RPL');
PPK_RPL.prefix();
_loop:=PPK_RPL.first();
{!
|? _loop
|! {? PPK_RPL.DATA=_d0
   || _dt:={? PPK_RPL.WYS_DATA=_d0 || date() || PPK_RPL.WYS_DATA ?};
      {? PPK_RPL.R=_dt~1 & PPK_RPL.M=_dt~2
      || PPK_RPL.DATA:=_dt
      |? _dt<date(PPK_RPL.R,PPK_RPL.M,1)
      || PPK_RPL.DATA:=date(PPK_RPL.R,PPK_RPL.M,1)
      || PPK_RPL.DATA:=date(PPK_RPL.R,PPK_RPL.M,0)
      ?};
      PPK_RPL.put()
   ?};
   _loop:=PPK_RPL.next()
!};
PPK_RPL.cntx_pop();
__UPG.msg('Zaktualizowano zawartości tabeli.');
1


\PPK_RPL_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja zawartości tabeli PPK_RPL - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zawartości tabeli PPK_RPL'


\PPK_KWN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja zawartości tabeli PPK_KWN
::----------------------------------------------------------------------------------------------------------------------
:: uzupełnienie kolumny RODZAJ dla zwrotów wpłat
:: jeśli są dane, to z założenia pochodzą od instytucji finansowej
PPK_KWN.cntx_psh();
PPK_KWN.prefix();
PPK_KWN.for_each("
   _mod:=0;
   {? PPK_KWN.TYP='Z' & PPK_KWN.RODZAJ=''
   || PPK_KWN.RODZAJ:='I';
      PPK_KWN.TYTUL:='-';
      _mod:=1
   ?};
   {? PPK_KWN.DATA_KOR=date(0,0,0)
   || PPK_KWN.DATA_KOR:=date(PPK_KWN.R,PPK_KWN.M,1);
      _mod:=1
   ?};
   {? _mod
   || PPK_KWN.put()
   ?}
");
PPK_KWN.cntx_pop();
__UPG.msg('Zaktualizowano zawartości tabeli.');
1


\PPK_KWN_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja zawartości tabeli PPK_KWN - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zawartości tabeli PPK_KWN'


\trans_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [19.42]
:: OPIS: Tłumaczenie "Split payment" dla języka angielskiego
::----------------------------------------------------------------------------------------------------------------------
_opc:=1;
_opc:=FUN.choice('Należy dodać tłumaczenie "Split payment" dla języka angielskiego.\n'
       'W (Ustawienia i parametryzacja -> Zakładka Parametryzacja -> '
       'pozycja  Tłumaczenia w gałęzi Wspólne -> '
       'Tłumaczenia wydruków sprzedaży i korygujących -> '
       'pozycja słownika tekstów tłumaczeń kod 1000170).\n'
       'Czy dodano tłumaczenie do systemu?',,'Tak','Nie');
{? _opc=1
|| __UPG.msg('Dodano tłumaczenie "Split payment" dla kodu 1000170')
|| {? _opc=2
   || __UPG.msg('Nie dodano tłumaczenia "Split payment" dla kodu 1000170');
      _opc:=0
   || __UPG.msg('Zrezygnowano z doania tłumaczenia "Split payment" dla kodu 1000170');
      _opc:=-1
   ?}
?};
_opc


\trans_sp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [19.42]
:: OPIS: Tłumaczenie "Split payment" dla języka angielskiego - opis
::----------------------------------------------------------------------------------------------------------------------
'Dodać tłumaczenie "Split payment" dla języka angielskiego'


\xinfo_ter_widok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Aktualizacja stałych systemu: Konfiguracja TERYT widoczna w historii stałych systemu
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
exec('xinfo_ter_widok','teryt');
__UPG.msg('Konfiguracja TERYT jest widoczna w historii stałych systemu.');
_result


\xinfo_ter_widok_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Aktualizacja stałych systemu: Konfiguracja TERYT widoczna w historii stałych systemu - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja stałych systemu: Konfiguracja TERYT widoczna w historii stałych systemu.'


\KH_ODB
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Wypełnia pola w tabeli KH_ODB
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
KH_ODB.cntx_psh();
KH_ODB.prefix();
_res:=KH_ODB.for_each("
   __lrec+=1;
   _put:=0;
   {? KH_ODB.SKR='' || KH_ODB.SKR:=KH_ODB.KOD; _put:=1 ?};
   {? KH_ODB.FV_EM=''
   || {? KH_ODB.KH_LNK<>null() & KH_ODB.EM<>'' || KH_ODB.FV_EM:='T' || KH_ODB.FV_EM:='N' ?}; _put:=1
   ?};
   {? KH_ODB.NIP='' & KH_ODB.KH_LNK<>null() || KH_ODB.NIP:=KH_ODB.KH_LNK().NIP; _put:=1 ?};
   {? KH_ODB.KH_LNK=null() || {? KH_ODB.JST<>'N' || KH_ODB.JST:='N'; _put:=1 ?}
   || {? KH_ODB.JST<>'N' & KH_ODB.JST<>'T' || KH_ODB.JST:='T'; _put:=1 ?}
   ?};
   {? KH_ODB.KH_LNK().KRAJISO & KH_ODB.KRAJISO=null() || KH_ODB.KRAJISO:=KH.KRAJISO; _put:=1 ?};
   {? KH_ODB.CGVAT='' || KH_ODB.CGVAT:='N'; _put:=1 ?};
   {? _put>0 || {? KH_ODB.put() || __lmod+=1 ?}
   ?}
");
KH_ODB.cntx_pop();
__UPG.msg('Zaktualizowano odbiorców kontrahentów.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\KH_ODB_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Wypełnia pola w tabeli KH_ODB - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja odbiorców kontrahentów'


\zdarzt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Formuła aktualizuje pola w tabeli ZDARZT.
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_nn:=0;

ZDARZT.cntx_psh();

ZDARZT.index('ZDARZT');
ZDARZT.prefix('N');
{? ZDARZT.first()
|| {!
   |? {? ZDARZT.RODZ='' & ZDARZT.RODZINF().NAZ='Dokument prosty'
      || _zm:=0;
         _naz:=ZDARZT.ZDARZ;
         _rd:='';
         {? _naz='EMAIL'
         || _rd:='M'
         |? _naz='SPOTKANIE'
         || _rd:='S'
         |? _naz='TELEFON'
         || _rd:='T'
         ?};
         {? _rd<>''
         || ZDARZT.RODZ:=_rd;
            _zm:=1
         ?};
         {? _zm
         || ZDARZT.put();
           _nn+=1
         ?}
      ?};
      ZDARZT.next()
   !}
?};

ZDARZT.cntx_pop();

__UPG.msg('Zaktualizowano nowe pola tabeli typów kontaktów z kontrahentem - liczba zmian: '+$_nn+'.');
_result


\zdarzt_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Formuła aktualizuje pola w tabeli ZDARZT.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja pól tabeli typów kontaktów z kontrahentem.'


\upd_par76
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.14]
:: OPIS: Aktualizacja parametru 76
::----------------------------------------------------------------------------------------------------------------------
PARAMS.cntx_psh();
PARAMS.index('UNIQ'); PARAMS.prefix(76);
{? PARAMS.first()
|| {!
   |? {? PARAMS.TRESC='1'
      || PARAMS.TRESC:='T';
        PARAMS.put()
      ?};
      PARAMS.next()
   !}
?};
PARAMS.cntx_pop();
__UPG.msg('Zaktualizowano parametr numer 76.'@);
1


\upd_par76_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.14]
:: OPIS: Aktualizacja parametru numer 76 - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja parametru 76 zmiana treści z ''1'' na ''T''.'


\tlumaczenia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Aktualizacja tłumaczeń
::----------------------------------------------------------------------------------------------------------------------
exec('init','tlumaczenia');

exec('czytaj','#stalesys',,XINFO,'SLJEZYK');

_kod:='Wydruki dokumentów sprzedaży i korekt';
TRANS_GR.cntx_psh();
TRANS_GR.index('KOD');
TRANS_GR.prefix(_kod,);
{? TRANS_GR.first()
||
   _kod:='1000218';
   TRANS_PL.cntx_psh();
   TRANS_PL.index('GR');
   TRANS_PL.prefix(TRANS_GR.ref(),_kod,);
   {? TRANS_PL.first()
   ||
      _jezyki:='ANG|POL|';
      SLO.cntx_psh();
      SLO.index('SL');
      {!
      |? _jezyki*'|'
      |!
         _wsk:=_jezyki*'|';
         _jezyk:=(_wsk-1)+_jezyki;
         _jezyki:=_wsk-_jezyki;
         SLO.prefix(XINFO.SLJEZYK,_jezyk,);
         {? SLO.first()
         ||
            TRANSLAT.cntx_psh();
            TRANSLAT.blank();
            TRANSLAT.TRANS_PL:=TRANS_PL.ref();
            TRANSLAT.T:='CN';
            TRANSLAT.JEZYK:=SLO.ref();
            TRANSLAT.add(1);
            TRANSLAT.cntx_pop()
         ?}
      !};
      SLO.cntx_pop()
   ?};
   TRANS_PL.cntx_pop()
?};
TRANS_GR.cntx_pop();
__UPG.msg('Aktualizacja tłumaczeń powiodła się.'@);
1


\tlumaczenia_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Aktualizacja tłumaczeń - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tłumaczeń.'


\potwZAM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Uzupełnia zapisy dla ZDP_POZ oraz ZDP_NAG
::  ORG: \logiSTAT_REJ/upgrade_1700.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod','__lrecZ','__lmodZ');

__lrec:=__lmod:=__lrecZ:=__lmodZ:=0;
_oddz:=ST.ODDZ;
_msk:=ZDP_NAG.names();
exec('openzd_psh','open_tab');
_msk.clear();
{? _msk.first()
|| {!
   |? exec('openzd','open_tab',_msk.NAME+3);
      ST.ODDZ:=1+(_msk.NAME+3);
      ZDP_NAG.prefix();
      ZDP_NAG.for_each("
         _put:=0;
         __lrecZ+=1;
         {? ZDP_NAG.R=0 || _put:=1; ZDP_NAG.R:=ZDP_NAG.D_WYS~1 ?};
         {? ZDP_NAG.M=0 || _put:=1; ZDP_NAG.M:=ZDP_NAG.D_WYS~2 ?};
         {? ZDP_NAG.STAT_REJ='' || _put:=1; ZDP_NAG.STAT_REJ:={? ZDP_NAG.AKC='T' || 'T' || 'N' ?} ?};
         _stan:='';
         _stan:={? ZDP_NAG.STAT_REJ='N' || 'N'
                |? ZDP_NAG.STAT_REJ='Z' || 'A'
                || _ctrl:=exec('ctrlREA','zamdst_ptw',1);
                   {? _ctrl=0           || 'Z'
                   |? _ctrl=1           || 'R'
                   |? _ctrl=2           || 'C'
                   || 'T'
                   ?}
                ?};
         {? _stan<>'' & ZDP_NAG.STAN<>_stan || _put:=1; ZDP_NAG.STAN:=_stan ?};
         {? _put || {? ZDP_NAG.put() || __lmodZ+=1 ?} ?};
         ZDP_POZ.index('ZDP_NAG');
         ZDP_POZ.prefix(ZDP_NAG.ref());
         {? ZDP_POZ.first()
         || {!
            |? _put:=0;
               __lrec+=1;
               {? ZDP_POZ.KH=null()
               || _put:=1; ZDP_POZ.KH:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,\"KH\",null())
               ?};
               {? ZDP_POZ.KH_MSC=null()
               || _put:=1; ZDP_POZ.KH_MSC:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,\"KH_MSC\",null())
               ?};
               {? ZDP_POZ.M=null()
               || _put:=1; ZDP_POZ.M:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,\"M\",null())
               ?};
               {? ZDP_POZ.JM=null() || _put=1; ZDP_POZ.JM:=ZDP_POZ.M().J ?};
               _nag:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,\"$ZD_NAG\",'');
               _wal:={? _nag<>'' || exec('FindAndGet','#table',ZD_NAG,_nag,,\"WAL\",null()) || INFO.NAROD ?};
               _krs:={? _nag<>'' || exec('FindAndGet','#table',ZD_NAG,_nag,,\"KRS\",null()) || INFO.NAROD ?};
               {? ZDP_POZ.WAL=null() || _put:=1; ZDP_POZ.WAL:=_wal ?};
               {? ZDP_POZ.WAL<>INFO.NAROD & ZDP_POZ.KRS=0 || _put:=1; ZDP_POZ.KRS:=_krs ?};
               {? ZDP_POZ.D_WYS=date(0,0,0)
               || _put:=1;
                  ZDP_POZ.D_WYS:=ZDP_POZ.ZDP_NAG().D_WYS; ZDP_POZ.RR:=ZDP_POZ.D_WYS~1; ZDP_POZ.MM:=ZDP_POZ.D_WYS~2
               ?};
               {? _put || {? ZDP_POZ.put() || __lmod+=1 ?} ?};
               ZDP_POZ.next()
            !}
         ?}
      ");
      _msk.next()
   !}
?};
exec('openzd_pop','open_tab');
__UPG.msg('Zaktualizowano zapisy dla nagłówków potwierdzeń zamówień dostaw.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrecZ,$__lmodZ]);
__UPG.msg('Zaktualizowano zapisy dla pozycji potwierdzeń zamówień dostaw.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
obj_del(_msk);
ST.ODDZ:=_oddz;

VAR_DEL.delete('__lrec','__lmod','__lrecZ','__lmodZ');
_res


\potwZAM_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Uzupełnia zapisy dla ZDP_POZ oraz ZDP_NAG - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zapisów dla pozycji i nagłówków potwierdzeń zamówień dostaw.'


\bado
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Aktualizacja pól tabeli BADO
::----------------------------------------------------------------------------------------------------------------------
_result:=BADO.for_each("
   {? BADO.ZGP<>null()
   || ZGP.cntx_psh();
      BADO.ZGP();
      BADO.ILP:=BADO.IL_BRAK-ZGP.IL_BRAK-ZGP.DEK_BR;
      BADO.put();
      ZGP.cntx_pop()
   ?}
",1);
{? _result
|| __UPG.msg('Zaktualizowano nowe pola rozpiski badań do niezarejestrowanych wykonań.')
|| __UPG.msg('Wystąpił błąd podczas aktualizacji nowych pól rozpiski badań do niezarejestrowanych wykonań.')
?};
_result


\bado_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Aktualizacja pól tabeli BADO - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tabeli badań do niezarejestrowanych wykonań.'


\dokum_kh_osob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Formuła uzupełnia w pole KH_OSOB w tabeli DOKUM na podstawie pola OSOBA.
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_nn:=0;

DOKUM.cntx_psh();
KH_OSOB.cntx_psh();

DOKUM.index('KHO');
KH_OSOB.index('KH');
KH_OSOB.prefix();
{? KH_OSOB.first()
|| {!
   |? {? KH_OSOB.KH<>null() & KH_OSOB.NAZWISKO<>''
      || DOKUM.prefix(REF.FIRMA,KH_OSOB.KH,KH_OSOB.NAZWISKO+' '+KH_OSOB.IMIE);
         {? DOKUM.first()
         || {!
            |? {? DOKUM.KH_OSOB=null()
               || DOKUM.KH_OSOB:=KH_OSOB.ref();
                  {? DOKUM.put(1)
                  || _nn+=1
                  ?}
               ?};
               DOKUM.next()
            !}
         ?}
      ?};
      KH_OSOB.next()
   !}
?};

KH_OSOB.cntx_pop();
DOKUM.cntx_pop();

__UPG.msg('Zaktualizowano pole "osoba kontaktowa" tabeli kontaktów - liczba zmian: '+$_nn+'.');
_result


\dokum_kh_osob_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: Formuła uzupełnia w pole KH_OSOB w tabeli DOKUM na podstawie pola OSOBA - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja pola "osoba kontaktowa" tabeli kontaktów.'


\KR2AR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Aktualizacja pól tabeli KR2AR
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
KR2AR.cntx_psh();
KR2AR.for_each("
   _put:=0;
   {? KR2AR.DSP=''
   || KR2AR.DSP:='T';
      _put:=1
   ?};
   {? _put || KR2AR.put() ?}
",1);
KR2AR.cntx_pop();
__UPG.msg('Zaktualizowano nowe pola tabeli mapowania rubryk kalkulacyjnych na analityczne.');
_result


\KR2AR_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Aktualizacja pól tabeli KR2AR - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja pól tabeli mapowania rubryk kalkulacyjnych na analityczne.'


\SYNC_DEF
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AKUL] [20.14]
:: OPIS: Wypełnia pola w tabeli SYNC_DEF
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
SYNC_DEF.cntx_psh();
SYNC_DEF.clear();
SYNC_DEF.for_each("
  __lrec+=1;
  {? SYNC_DEF.WGIDPUT=''
  || SYNC_DEF.WGIDPUT:='N';
     {? SYNC_DEF.put(1) || __lmod+=1 ?}
  ?}
");
SYNC_DEF.cntx_pop();
__UPG.msg('Zaktualizowano definicje synchronizacji z innymi systemami.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\SYNC_DEF_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AKUL] [20.14]
:: OPIS: Wypełnia pola w tabeli SYNC_DEF - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja definicji synchronizacji z innymi systemami'


\logo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Aktualizacja miejsca przechowywania logo dla wysyłanych wiadomości
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
exec('slo_kod','dane_startowe');
_slo_typ:=exec('FindInSet','#table','SLO_TYP','SYMBOL','TYPBLOBF',,,1,,null());
{? _slo_typ=null()
|| __UPG.msg('Nie zaktualizowano miejsca przechowywania logo dla wysyłanych wiadomości - brak słownika TYPBLOBF.');
   _res:=0
|| __UPG.msg('Zaktualizowano miejsca przechowywania logo dla wysyłanych wiadomości.');
   SKID_BLB.cntx_psh(); IMG_BLOB.cntx_psh();
   SKID_BLB.index('ID'); IMG_BLOB.index('KOD');

   SKID_BLB.prefix('fo_700011',);
   {? SKID_BLB.first()
   || _blob:=SKID_BLB.BLOB;
      {? _blob
      || IMG_BLOB.prefix('F',null(),exec('ref_firma','#firma'),'logo_h',);
         {? IMG_BLOB.first()
         || IMG_BLOB.OBRAZ:=_blob;
            IMG_BLOB.put()
         || IMG_BLOB.RODZ:='F';
            IMG_BLOB.USER:=null();
            IMG_BLOB.FIRMA:=exec('ref_firma','#firma');
            IMG_BLOB.SLO_KOD:=exec('FindInSet','#table','SLO_KOD','KOD','logo_h',_slo_typ,,1,,null());
            IMG_BLOB.OBRAZ:=_blob;
            IMG_BLOB.add()
         ?}
      || IMG_BLOB.prefix('F',null(),exec('ref_firma','#firma'),'logo_h',);
         {? IMG_BLOB.first()
         || IMG_BLOB.del()
         ?}
      ?}
   || IMG_BLOB.prefix('F',null(),exec('ref_firma','#firma'),'logo_h',);
      {? IMG_BLOB.first()
      || IMG_BLOB.del()
      ?}
   ?};

   SKID_BLB.prefix('fo_700014',);
   {? SKID_BLB.first()
   || _blob:=SKID_BLB.BLOB;
      {? _blob
      || IMG_BLOB.prefix('F',null(),exec('ref_firma','#firma'),'logo_f',);
         {? IMG_BLOB.first()
         || IMG_BLOB.OBRAZ:=_blob;
            IMG_BLOB.put()
         || IMG_BLOB.RODZ:='F';
            IMG_BLOB.USER:=null();
            IMG_BLOB.FIRMA:=exec('ref_firma','#firma');
            IMG_BLOB.SLO_KOD:=exec('FindInSet','#table','SLO_KOD','KOD','logo_f',_slo_typ,,1,,null());
            IMG_BLOB.OBRAZ:=_blob;
            IMG_BLOB.add()
         ?}
      || IMG_BLOB.prefix('F',null(),exec('ref_firma','#firma'),'logo_f',);
         {? IMG_BLOB.first()
         || IMG_BLOB.del()
         ?}
      ?}
   || IMG_BLOB.prefix('F',null(),exec('ref_firma','#firma'),'logo_f',);
      {? IMG_BLOB.first()
      || IMG_BLOB.del()
      ?}
   ?};

   SKID_BLB.cntx_pop(); IMG_BLOB.cntx_pop()
?};
_res


\logo_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Aktualizacja miejsca przechowywania logo dla wysyłanych wiadomości - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja miejsca przechowywania logo dla wysyłanych wiadomości'


\PL_WZOR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.14]
:: OPIS: Wypełnia pola w tabeli PL_WZOR
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
PL_WZOR.cntx_psh();
PL_WZOR.index('NAZWA');
PL_WZOR.prefix();
{? PL_WZOR.first()
|| _lp:=1;
   {!
   |?
      __lrec+=1;
      _put:=0;
      {? PL_WZOR.AKT=''
      || PL_WZOR.AKT:='T';
         _put:=1
      ?};
      {? PL_WZOR.LP=0
      || PL_WZOR.LP:=_lp;
         _lp+=1;
         _put:=1
      ?};

      {? _put>0
      || {? PL_WZOR.put()
         || __lmod+=1
         ?}
      ?};
      PL_WZOR.next()
   !}
?};
PL_WZOR.cntx_pop();
__UPG.msg('Zaktualizowano widoki planu operacyjnego.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\PL_WZOR_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.14]
:: OPIS: Wypełnia pola w tabeli PL_WZOR - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja widoków planu operacyjnego'


\PL_OPIS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.14]
:: OPIS: Wypełnia pola w tabeli PL_OPIS
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
PL_OPIS.cntx_psh();
PL_OPIS.index('PL_WZOR');
PL_WZOR.cntx_psh();
PL_WZOR.index('NAZWA');
PL_WZOR.prefix();

_can_continue:=1;

:: Pierwsza petla przesuwa wszystko w minusy
{? PL_WZOR.first()
|| {!
   |? PL_OPIS.prefix(PL_WZOR.ref());
      {? PL_OPIS.first()
      || {!
         |? PL_OPIS.NUMER:=-(PL_OPIS.NUMER);
            _can_continue:=PL_OPIS.put();
            PL_OPIS.next() & _can_continue>0
         !}
      ?};
      PL_WZOR.next() & _can_continue>0
   !}
?};

:: Druga pętla naprawia numerację
PL_OPIS.index('PL_OPIS');
{? _can_continue>0 & PL_WZOR.first()
|| _lp:=1;
   {!
   |? PL_OPIS.prefix(PL_WZOR.ref());
      {? PL_OPIS.last()
      || _lp:=1;
         {!
         |? __lrec+=1;
            _next:=0;
            _ref_nxt:=null();
            PL_OPIS.cntx_psh();
            {? PL_OPIS.prev()
            || _ref_nxt:=PL_OPIS.ref()
            ?};
            PL_OPIS.cntx_pop();

            PL_OPIS.NUMER:=_lp;
            _can_continue:=PL_OPIS.put();
            {? _can_continue>0
            || __lmod+=1
            ?};
            _lp+=1;

            {? _ref_nxt<>null()
            || _next:=PL_OPIS.seek(_ref_nxt)
            ?};
            _next>0 & _can_continue>0
         !}
      ?};
      PL_WZOR.next() & _can_continue>0
   !}
?};


PL_WZOR.cntx_pop();
PL_OPIS.cntx_pop();
__UPG.msg('Zaktualizowano zasoby w widokach planu operacyjnego.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
{? _can_continue<=0
|| _result:=-1
?};
_result


\PL_OPIS_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.14]
:: OPIS: Wypełnia pola w tabeli PL_OPIS - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zasobów w widokach planu operacyjnego'


\PL_WZORU
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.14]
:: OPIS: Inicjalizacja użytkowników widoków planu operacyjnego
::   WY: 0/1/-1
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_can_continue:=1;
_tab_role:=tab_tmp(2,
:: 'POLE','TYP','Nazwa w oknie',
   'B_ROLE','STRING[16]','Rola',
   'UPR','STRING[1]','Czy redakcja czy podgląd',
   'OPIS','STRING[20]','opis'
);
B_ACTROL.cntx_psh();
B_ACTROL.index('ACTION');
_action:=exec('ref','#b_action','TPP_PPO_DPPL');
B_ACTROL.prefix(_action);
{? B_ACTROL.first()
|| {!
   |? _tab_role.prefix($B_ACTROL.B_ROLE,);
      {? _tab_role.first()=0
      || _tab_role.blank();
         _tab_role.B_ROLE:=$B_ACTROL.B_ROLE;
         _tab_role.UPR:='R';
         _tab_role.OPIS:='redakcja'@;
         _can_continue:=_tab_role.add()
      ?};
      B_ACTROL.next() & _can_continue>0
   !}
?};
_action:=exec('ref','#b_action','TPP_PPO_PPPL');
B_ACTROL.prefix(_action);
{? B_ACTROL.first()
|| {!
   |? _tab_role.prefix($B_ACTROL.B_ROLE,);
      {? _tab_role.first()=0
      || _tab_role.blank();
         _tab_role.B_ROLE:=$B_ACTROL.B_ROLE;
         _tab_role.UPR:='P';
         _tab_role.OPIS:='podgląd'@;
         _can_continue:=_tab_role.add()
      ?};
      B_ACTROL.next() & _can_continue>0
   !}
?};
B_ACTROL.cntx_pop();

PL_WZOR.cntx_psh();
PL_WZOR.index('NAZWA');
PL_WZOR.prefix();
PL_WZORU.cntx_psh();
PL_WZORU.index('PL_WZOR');
B_USRROL.cntx_psh();
B_USRROL.index('B_ROLE');
_tab_role.prefix();
{? _tab_role.first()
|| {!
   |? _b_role:=exec('FindAndGet','#table',B_ROLE,_tab_role.B_ROLE,,,null());
      {? _b_role<>null()
      || B_USRROL.prefix(_b_role);
         {? B_USRROL.first()
         || {!
            |?
               {? PL_WZOR.first()
               || {!
                  |?
                     PL_WZORU.prefix(PL_WZOR.ref(),B_USRROL.USERS);
                     {? PL_WZORU.first()=0
                     || PL_WZORU.blank();
                        PL_WZORU.PL_WZOR:=PL_WZOR.ref();
                        PL_WZORU.USERS:=B_USRROL.USERS;
                        PL_WZORU.UPR:=_tab_role.UPR;
                        _can_continue:=PL_WZORU.add();
                        {? _can_continue>0
                        || _usr:=exec('record','#to_string',B_USRROL.USERS);
                           __UPG.msg('Dodano użytkownikowi: %1 uprawnienie do widoku planu: %2 (%3)'@[_usr,PL_WZOR.NAZWA,_tab_role.OPIS])
                        ?}
                     ?};
                     PL_WZOR.next() & _can_continue>0
                  !}
               ?};
               B_USRROL.next() & _can_continue>0
            !}
         ?}
      ?};
      _tab_role.next() & _can_continue>0
   !}
?};
B_USRROL.cntx_pop();
PL_WZORU.cntx_pop();
PL_WZOR.cntx_pop();
{? _can_continue<=0
|| _result:=-1
?};
_result


\PL_WZORU_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.14]
:: OPIS: Inicjalizacja użytkowników widoków planu operacyjnego - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Inicjalizacja użytkowników widoków planu operacyjnego.'


\rok_f_akt_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.14]
:: OPIS: Uzupełnia zawartość pola AKT_ROZ w tabeli ROK_F
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh();
ROK_F.prefix();
VAR_DEL.delete('__par76');
__par76:=PAR_SKID.get(76);
__prec:=0;
_result:=ROK_F.for_each("{? ROK_F.FIRMA=REF.FIRMA & ROK_F.AKT_ROZ=''
                         || {? __par76='N' || ROK_F.AKT_ROZ:='N' || ROK_F.AKT_ROZ:='T' ?};
                            ROK_F.put();
                            __prec+=1
                         ?}",1);
__UPG.msg('Zaktualizowano lata obrachunkowe.'@);
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'@[$ROK_F.size(),$__prec]);
VAR_DEL.delete('__prec','__par76');
ROK_F.cntx_pop();
_result


\rok_f_akt_roz_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.14]
:: OPIS: Uzupełnia zawartość pola AKT_ROZ w tabeli ROK_F - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnia pole AKT_ROZ - Znacznik, czy aktualizować rozrachunki w roku bilansowym? (T/N)'


\id_sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Dodaje definicje identyfikatorów rekordów
::----------------------------------------------------------------------------------------------------------------------
_init:=exec('init','sync_id');
_result:=_init.RESULT;
_args:=_init.ARGS;
{? _result
|| __UPG.msg('Zaktualizowano definicje identyfikatorów rekordów.')
|| __UPG.msg('Wystąpił problem podczas aktualizacji definicji identyfikorów rekordów %1 - %2 do systemu %3.'[_args.KOD,_args.OPIS,_args.SYSTEM])
?};
_result


\id_sync_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Dodaje definicje identyfikatorów rekordów - opis
::----------------------------------------------------------------------------------------------------------------------
'Dodanie definicji identyfikatorów rekordów:\n'
'MWA_ND_SYM\n'
'MWA_FAKS_SYM\n'
'MWA_DOKUMENT_SYM\n'
'BDO_KH_ID\n'
'BDO_KH_ODB_ID\n'
'PORTAL_PORTALK_ID\n'
'PORTAL_P_ID\n'
'PORTAL_OS_ADRES_ID\n'
'PORTAL_RD_ID\n'
'PORTAL_PKO_N_ID\n'
'PORTAL_PKO_K_ID\n'
'PORTAL_OS_SZKOL_ID\n'
'PORTAL_P_INFO_ID\n'
'PORTAL_HUM_ID\n'
'PORTAL_H_ST_ID\n'
'PORTAL_H_WYD_ID\n'
'PORTAL_H_MIEJSCE\n'
'PORTAL_H_ID\n'
'PORTAL_ZC_ID\n'
'PORTAL_K_P_ID\n'
'PORTAL_K_W_ID\n'
'PORTAL_KRE_HIS_P_ID\n'
'PORTAL_KRE_HIS_W_ID\n'
'PORTAL_BNFTT_ID\n'
'PORTAL_GSPN_ID\n'
'PORTAL_P_DODINF_ID\n'
'PORTAL_USERS\n'
'PORTAL_BIPKAT_KDR_ID\n'
'PORTAL_BIPPYTN_KDR_ID\n'
'PORTAL_BIPPYTP_KDR_ID\n'
'PORTAL_KART_DOD_WYR_KAR_ID\n'
'PORTAL_R_N_ID\n'
'PORTAL_N_ID\n'
'PORTAL_ZJ_ID\n'
'PORTAL_BDO_ID\n'
'PORTAL_SZK_PRAC_ID\n'
'PORTAL_PPK_UZA_ID\n'
'PORTAL_PPK_UCZ_ID\n'


\UMLOJN_zak_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Utworzenie nowego typu załącznika "Umowa o zakazie konkurencji", dodanie miejsca jego użycia w UMLOJN.
::       Wypełnienie nowych pól tabeli UMLOJN w dotychczasowych danych wartościami domyślnymi.
::----------------------------------------------------------------------------------------------------------------------
:: Dodanie nowego typu załącznika i miejsca użycia:
_typ:=exec('slo_naz','ext_slo',exec('slo_typ','ext_slo','ZAL'),'Umowa o zakazie konkurencji');
_txt:='';
_res:=1;

:: Uzupełnienie pozycji slownika SLO_KOD:
_update:="
   {? ~(_put:=SLO_KOD.find_key(_a,_b,))
   || SLO_KOD.blank(1);
      SLO_KOD.SLO_TYP:=_a;
      SLO_KOD.KOD:=_b
   ?};
   _zmiana:=0;
   {? SLO_KOD.NAZWA<>_c
   || SLO_KOD.NAZWA:=_c;
      _zmiana+=1
   ?};
   {? var_pres('_d')=type_of('') & SLO_KOD.SYSTEM<>_d
   || SLO_KOD.SYSTEM:=_d;
      _zmiana+=1
   ?};
   {? SLO_KOD.SYSTEM<>'N' & SLO_KOD.SYSTEM<>'T'
   || SLO_KOD.SYSTEM:='N';
      _zmiana+=1
   ?};
   {? _put
   || {? _zmiana
      || SLO_KOD.put()
      ?}
   || SLO_KOD.add()
   ?}
";
SLO_KOD.cntx_psh();
SLO_KOD.index('KOD');
SLO_KOD.prefix();
_update(exec('slo_typ','ext_slo','ZAOM'),'UMLOJN','Umowa lojalnościowa','T');
SLO_KOD.cntx_pop();

:: Dodanie miejsca użycia w ZAOTM:
{? _typ
|| ZAOTM.cntx_psh();
   ZAOTM.index('MIEJSCER');
   {? SLO_NAZ.seek(_typ,,1)
   || _msc:='UMLOJN';
      ZAOTM.prefix(_msc,SLO_NAZ.ref());
      {? ZAOTM.first()
      || _txt:='Nowy typ załącznika (%1) powiązano z miejscem użycia.' [SLO_NAZ.NAZWA]
      || ZAOTM.blank();
         ZAOTM.MIEJSCE:=_msc;
         ZAOTM.SLO_NAZ:=SLO_NAZ.ref();
         ZAOTM.add()
      ?}
   ?};
   ZAOTM.cntx_pop()
|| _res:=-1
?};

:: Wypełnienie nowych pól tabeli UMLOJN w dotychczasowych danych wartościami domyślnymi:
UMLOJN.cntx_psh();
UMLOJN.prefix();
{? UMLOJN.first()
|| UMLOJN.trig_off('*','*');
   {!
   |? {? UMLOJN.TYP<>'Z'
      || UMLOJN.TYP:='L';
         UMLOJN.PO:='N';
         UMLOJN.DTZ:=date(0,0,0);
         {? ~UMLOJN.put()
         || _txt:='Nie udało się poprawić rekordu tabeli UMLOJN.'@;
            _res:=-1
         ?}
      ?};

      UMLOJN.next()
   !};
   UMLOJN.trig_on('*','*');
   {? _res>0 || _txt+=' Poprawiono rekordy tabeli UMLOJN.'@ ?}
?};
UMLOJN.cntx_pop();
__UPG.msg(_txt);

_res


\UMLOJN_zak_kon_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Utworzenie nowego typu załącznika "Umowa o zakazie konkurencji", dodanie miejsca jego użycia w UMLOJN.
::       Wypełnienie nowych pól tabeli UMLOJN w dotychczasowych danych wartościami domyślnymi. - opis
::----------------------------------------------------------------------------------------------------------------------
'Nowy typ załącznika umów lojalnościowych - "Umowa o zakazie konkurencji"'


\szablony
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Import zestawów danych i definicji szablonów.
::   WE:
::   WY: 0/1
::  ORG: \szablony/upgrade_2014.fml
::  ORG: \szablony/upgrade_2137.fml
::  ORG: \szablony/upgrade_2226.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Formuła importująca zestawy danych i definicji szablonów z danych wzorcowych. Podczas importu należy wskazać'
         ' folder w którym będą umieszone tylko pliki: szablony_zes.xlsx, szablony_def.xlsx oraz sd_*.docx.'@);
exec('import_init','#excel_imex',spli_str('ZWS_PAR_ASDZ,ZWS_PAR_ASDD',','));
{? FUN.ask(
      'Czy zakończono pracę?\n'
      '\n'
      'Tak - zadanie zostanie oznaczone jako "Wykonane" i nie będzie już można go uruchomić.\n'
      'Nie - zadanie pozostanie na liście zadań i będzie je można wykonać w późniejszym czasie.'@
   )
|| __UPG.msg('Użytkownik %1 zakończył prace nad zadaniem. Zaktualizowano zestawy danych i definicje szablonów.' [exec('operatorKod','#users')]);
   1
|| __UPG.msg('Użytkownik %1 pozostawił zadanie do późniejszego wykonania.' [exec('operatorKod','#users')]);
   0
?}


\szablony_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Import zestawów danych i definicji szablonów - opis.
::   WE:
::   WY: opis zadania potransferowego
::----------------------------------------------------------------------------------------------------------------------
'Import zestawów danych i definicji szablonów (dane wzorcowe: szablony_zes.xlsx;szblony_def.xlsx).'


\edek_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: Dodanie nowego schematu e-Deklaracji dla VAT-7 (20)
::----------------------------------------------------------------------------------------------------------------------
_imp:=-1;
{? exec('add_ver','xml','FKS',date(2019,11,01),'VAT7',20,13)
|| _imp:=exec('upg_imp','xml','FKS','D','VAT7',20,date(2019,11,1),'vat-7_20.dfg')
?};

_txt:='e-Deklaracja VAT-7 (20) obowiązująca od 01.11.2019';

{? _imp=1
|| __UPG.msg(_txt+' została dodana.');
   1
|? _imp=0
|| __UPG.msg(_txt+' już istnieje.');
   1
|| __UPG.msg(_txt+' nie została dodana.');
   0
?}


\edek_vat_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: Dodanie nowego schematu e-Deklaracji dla VAT-7 (20)
::----------------------------------------------------------------------------------------------------------------------
'Dodanie nowej wersji schematu e-Deklaracji dla VAT-7 (20)\n'
'Nowa wersja schematu obowiązuje od 1 listopada 2019 r.'


\blp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: Aktualizacja pól tabel na potrzeby 1942_09 - Biała lista podatników
::----------------------------------------------------------------------------------------------------------------------
KHCHKNIP.cntx_psh();
KHCHKNIP.index('D_ACTIVE');
KH.prefix();
KH.for_each("
   KHCHKNIP.prefix(KH.ref(),'K',);
   {? KHCHKNIP.first()
   || KH.S_VAT:=KHCHKNIP.C_ACTIVE;
      KH.S_VAT_D:=KHCHKNIP.D_ACTIVE;
      KH.put()
   || KH.S_VAT:='';
      KH.S_VAT_D:=date(0,0,0);
      KH.put()
   ?}
");
KHCHKNIP.cntx_pop();
KHCHKNIP.prefix();
KHCHKNIP.for_each("
   _put:=0;
   {? KHCHKNIP.D_ACTIVE=date(0,0,0)
   || KHCHKNIP.D_ACTIVE:=KHCHKNIP.DATE;
      _put:=1
   ?};
   {? KHCHKNIP.C_ACTIVE='' & KHCHKNIP.ACTIVE<>''
   || KHCHKNIP.C_ACTIVE:=KHCHKNIP.ACTIVE;
      _put:=1
   ?};
   {? KHCHKNIP.BAZA=''
   || KHCHKNIP.BAZA:={? 'KB'*KHCHKNIP.TYPE || 'K' || 'U' ?};
      _put:=1
   ?};
   {? _put || KHCHKNIP.put() ?}
");
__UPG.msg('Aktualizacja pól do obsługi wykazu podatników powiodła się.'@);
1


\blp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: Aktualizacja pól tabel na potrzeby 1942_09 - Biała lista podatników
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja pól tabel na potrzeby 1942_09 - Biała lista podatników.'


\jpk_fa_3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Uzupełnia pola walutowe pozyji VAT na potrzeby pliku JPK_FA (3)
::  OLD: \jpk_fa_3/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('NETTO_W',VPOZ)<=0
|| FUN.info('Brak naniesiania zmian w definicji na potrzeby aktualizacji 19.42_07 - JPK_FA (3).');
   return(0)
?};
_ret:=0;
_imp:=exec('upg_imp','xml','FKS','J','FA','JPK_FA(3)_v1-0',date(2019,11,1),'jpk_fa_3.dfg');
_txt:='Schemat plik JPK_FA (3) obowiązujący od 01.11.2019';
{? _imp=1
|| __UPG.msg(_txt+' został dodany.');
   _ret:=1
|? _imp=0
|| __UPG.msg(_txt+' już istnieje.');
   _ret:=1
|| __UPG.msg(_txt+' nie został dodany.')
?};
{? _ret
|| _upd:=0;
   ROK_F.cntx_psh();
   ROK_F.index('ROKPOCZ');
   ROK_F.prefix();
   {? ROK_F.first()
   || OKRO_F.cntx_psh();
      OKRO_F.index('ROK');
      {!
      |? {? ROK_F.ZAM<>'T'
         || OKRO_F.prefix(ROK_F.ref());
            {? OKRO_F.first()
            || {!
               |? {? OKRO_F.ZAM<>'T'
                  || echo('Firma: '+ROK_F.FIRMA().SYMBOL+', okres: '+OKRO_F.NAZ+' '+ROK_F.NAZ);
                     _maska:=ROK_F.KOD+form(OKRO_F.NR,-2);
                     DOK.cntx_psh();
                     DOK.use('doku'+_maska);
                     DOK.index('S2'); DOK.prefix(null);
                     {? DOK.last()
                     || DOK.prefix();
                        _ok:=DOK.next()
                     || DOK.prefix();
                        _ok:=DOK.first()
                     ?};
                     {? _ok
                     || VPOZ.cntx_psh();
                        VPOZ.use('pozv'+_maska);
                        VPOZ.index('VDOK');
                        {!
                        |? VPOZ.prefix(DOK.ref());
                           {? VPOZ.first()
                           || {!
                              |? {? VPOZ.NETTO_W=0 & VPOZ.VAT_W=0 & VPOZ.BRUTTO_W=0 & VPOZ.WARW
                                 || _typ:={? VPOZ.KURS
                                          || (VPOZ.WARW*VPOZ.KURS)$2<>VPOZ.NETTO
                                          || exec('czy_brutto','dok_fks')
                                          ?};
                                    exec('ae_vpozw','dok_fks1','WARW',_typ);
                                    VPOZ.put();
                                    _upd:=1
                                 ?};
                                 VPOZ.next()
                              !}
                           ?};
                           DOK.next()
                        !};
                        VPOZ.cntx_pop()
                     ?};
                     DOK.cntx_pop()
                  ?};
                  OKRO_F.next()
               !}
            ?}
         ?};
         ROK_F.next()
      !};
      OKRO_F.cntx_pop()
   ?};
   ROK_F.cntx_pop();
   echo();
   {? _upd
   || __UPG.msg('Uzupełniono pola walutowe pozycji VAT dokumentów księgowych')
   || __UPG.msg('Pola walutowe pozycji VAT dokumentów księgowych są już uzupełnione')
   ?}
?};
_ret


\jpk_fa_3_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Uzupełnia pola walutowe pozyji VAT na potrzeby pliku JPK_FA (3) - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie pól walutowych pozycji VAT dokumentów księgowych na potrzeby pliku JPK_FA (3)\n'
'Dodanie nowego schematu pliku JPK_FA (3)'


\par_wyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Aktualizacja parametrów wydruku - [ER/WRT/XP/23.25/2312/0001]
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec');
__lrec:=0;
_ok:=0;
PARWYD.cntx_psh();
PARWYD.prefix();
PARWYD.for_each("{? PARWYD.DOKUMLT=1
                 || PARWYD.DOKUMLT:=2;
                    {? PARWYD.put() || __lrec+=1 ?}
                 ?}
");
PARWYD.cntx_pop();
{? __lrec
|| __UPG.msg('Naprawiono układ wyświetlania dokumentów księgowych. Zmodyfikofano %1 rekordów tabeli PARWYD'[$__lrec])
|| __UPG.msg('Naprawa układu wyświetlania dokumentów księgowych nie jest wymagana.')
?};
1


\par_wyd_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [19.42]
:: OPIS: kod - ER/WRT/XP/19.42/2001/0023 - Brak możliwości wywołania automatu - opis
::----------------------------------------------------------------------------------------------------------------------
'Naprawa ustawień użytkowników dotyczących sposobu wyswietlania dokumentów przy rejestrowaniu\n\n'
'Po uruchomieniu formuły wszystkim użytkownikom zostanie domyslnie przypisany sposób - Lista\n'
'Parametr ten można zmienić w ustawieniach użytkownika dla obszaru Finanse'
'(scieżka w programie: Ustawienia/Ustawienia/Finanse/Układ dokumentów księgowych)'


\tzl_ppl_ppk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Utworzenie opisu typu płatności "PPL: PPK".
::   WE:
::   WY: 0/1 - sukces/porażka
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
_kod:='PPL: PPK';

TZL.cntx_psh();
TZL.index('KOD');
TZL.prefix();
_txt:=
   {? TZL.find_key(_kod,)
   || 'Opis typu płatności "%1" istnieje.'[_kod]
   || TZL.KOD:=_kod;
      TZL.OPIS:='Przelewy wpłat na PPK';
      {? ~TZL.add(1)
      || _ret:=0;
         'Utworzenie opisu typu płatności "%1" nie powiodło się.'[_kod]
      || 'Utworzono opis typu płatnści "%1".'[_kod]
      ?}
   ?};
TZL.cntx_pop();

__UPG.msg(_txt);
_ret


\tzl_ppl_ppk_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Utworzenie opisu typu płatności "PPL: PPK" - opis.
::   WE:
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Utworzenie opisu typu płatności "PPL: PPK"'


\formuly_PPK_1942_08
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja formuł płacowych składników PPK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
{? __RUB.ref(7109)=null
|| __UPG.msg('Wstrzymano aktualizację. Wymagane istnienie rubryki 7109');
   return(-1)
?};

_rn:=spli_str('7093,7109',',');
_tp:=spli_str('U,F,D,R,%1'[%255],',');
_err:=exec('formuly_import','rubryki',_tp,_rn,'formuly_pod','upgrade_1942_08');

{? _err.TAB.first()
|| {!
   |? __UPG.msg(_err.TAB.MSG);
      _err.TAB.next()
   !}
?};

{? _err.counter>0
|| __UPG.msg('Podczas aktualizacji formuł wystąpiło %1 błędów.'[$_err.counter]);
   -1
|| 1
?}


\formuly_PPK_1942_08_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Aktualizacja formuł płacowych składników PPK - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja formuł płacowych składników PPK'


\stalesys_PPK_1942_08
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Aktualizacja stałych dziedziny PPK
::----------------------------------------------------------------------------------------------------------------------
:: ustaw wymagane wartości początkowe
KST_PPK.POD_WMW:='T';
KST_PPK.D_PRZWPL:=0;
KST_PPK.PPKEMAIL:='S';
exec('zapisz_zes','#stalesys',date(0,0,0),KST_PPK,'POD_WMW','D_PRZWPL','PPKEMAIL');
__UPG.msg('Ustawiono wymagane wartości początkowe.');

:: ustawienia dla zgodności z wytycznymi odnośnie naliczania podatku
{? FUN.ask(
      'Czy ustawić wliczanie wpłat do przychodu w miesiącu\n'
      'następnym po miesiącu podatkowym naliczania wpłat?'@
   )
|| _ok:=0;
   KST_PPK.POD_WMW:='N';
   KST_PPK.D_PRZWPL:=15;
   EDIT_VAR.DATA:=date(date()~1,date()~2,0)+1;
   _wnd:=KST_PPK.mk_edit('Wyliczenie przychodu z tytułu wpłat PPK'@,0);
   KST_PPK.win_efld(_wnd,EDIT_VAR,'DATA',,,,,,'Data wprowadzenia zmiany'@);
   KST_PPK.win_efld(_wnd,KST_PPK,'D_PRZWPL');

   KST_PPK.cntx_psh();
   KST_PPK.win_edit(_wnd);
   {!
   |? {? KST_PPK.edit("
            {? EDIT_VAR.DATA=date(0,0,0)
            || FUN.emsg('""Data wprowadzenia zmiany"" musi być podana.'@);
               return('DATA')
            |? KST_PPK.D_PRZWPL<0 | KST_PPK.D_PRZWPL>31
            || FUN.emsg('Błędna wartość pola ""'+MS.name(KST_PPK,'D_PRZWPL')+'"".');
               return('D_PRZWPL')
            ?};
            1
         ")
      || _ok:=1;
         0
      || ~FUN.ask('Czy na pewno zrezygnować z wprowadzenia zmian?'@)
      ?}
   !};
   {? _ok
   || exec('zapisz_zes','#stalesys',EDIT_VAR.DATA,KST_PPK,'POD_WMW','D_PRZWPL');
      __UPG.msg('Zaktualizowano stałe dziedziny PPK.')
   ?};
   KST_PPK.cntx_pop();
   KST_PPK.win_edel(_wnd)

|| __UPG.msg('Porzucono aktualizację stałych dziedziny PPK.');
   FUN.info(
      'Sposób wliczania przychodu z tytułu wpłat pracodawcy\n'
      'można zmienić w parametrach pracy programu.'@
   )
?};

1


\stalesys_PPK_1942_08_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Aktualizacja stałych dziedziny PPK - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja stałych dziedziny PPK'


\stalesys_wid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Aktualizacja widoków stałych systemu
::  ORG: \stalesys_wid/upgrade_1842.fml
::  ORG: \stalesys_wid/upgrade_rrxx.fml
::----------------------------------------------------------------------------------------------------------------------
:: uzupełnienie widoków stałych systemu
KST_LST.cntx_psh();
KST_LST.prefix();
KST_LST.f_set(
   'NUMER',
   'join KST_DOM using(KST_LST.KST_DOM,KST_DOM.REFERENCE) '
   'join KST_MAP using(KST_LST.KST_MAP,KST_MAP.REFERENCE) '
   'join KST_ZES using(KST_MAP.KST_ZES,KST_ZES.REFERENCE) '
   'join B_DOMAIN using(KST_DOM.B_DOMAIN,B_DOMAIN.REFERENCE) ',
   'B_DOMAIN.SYMBOL=\'PPK\' and KST_ZES.SYMBOL=\'KST_PPK\''
);
{? KST_LST.f_last()
|| _num:=KST_LST.NUMER;
   _dom:=KST_LST.KST_DOM;
:: pola do dołączenia do widoku stałem KST_PPK
   _map:=spli_str('POD_WMW,D_PRZWPL,PPKEMAIL,DWT_OKR,POP_ZAW',',');
   KST_MAP.cntx_psh();
   KST_MAP.index('KST_MAP');
   KST_MAP.prefix('KST_PPK','KST_PPK');
   {! _ii:=1..obj_len(_map)
   |! {? KST_MAP.find_key(_map[_ii],_map[_ii])
::       znajdź pole w zmiennej reprezentujące stałą
      || {? ~KST_LST.find_tab(,'KST_DOM',,'=',_dom,'KST_MAP',,'=',KST_MAP.ref())
::          uzupełnij widok od pole w zestawie
         || KST_LST.KST_MAP:=KST_MAP.ref();
            KST_LST.NUMER:=_num+_ii;
            KST_LST.add()
         ?}
      ?}
   !};
   KST_MAP.cntx_pop()
?};
KST_LST.f_clear();
KST_LST.cntx_pop();
__UPG.msg('Zaktualizowano widoki stałych systemu.');
1


\stalesys_wid_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Aktualizacja widoków stałych systemu - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja widoków stałych systemu'


\wersje_raportow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Aktualizacja elementów i wersji raportów.
::----------------------------------------------------------------------------------------------------------------------
:: Elementy raportów
exec('dane_sys','ppk_xel');
__UPG.msg('Zaktualizowano elementy raportów.');

:: Wersje raportów
exec('dane_sys','ppk_xwe');
__UPG.msg('Zaktualizowano wersje raportów.');

1


\wersje_raportow_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Aktualizacja elementów i wersji raportów - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja elementów i wersji raportów.'


\wnioski_komunikaty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Aktualizacja rodzajów wniosków WODW, AWW i utworzenie DWP oraz aktualizacja definicji komunikatów.
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
__RUB.fill();

_rub:="
   {? (_rub:=__RUB.sys_kod(_a))=0
   || __UPG.msg('Nie znaleziono rubryki o atrybucie %1.'[$_a])
   ?};
   _rub
";
{? (_r710:=_rub(710))=0 |
   (_r711:=_rub(711))=0 |
   (_r712:=_rub(712))=0 |
   (_r713:=_rub(713))=0
|| return(-1)
?};

:: Komunikaty błędów
_err:=obj_new('wrd_find','wrd_add','wst_add');
_err.wrd_find:="__UPG.msg('Nie znaleziono rodzaju wniosku %1.'[_a]); 0";
_err.wrd_add:="__UPG.msg('Dodanie rodzaju wniosku %1 (%2) nie powiodło się.'[_a,_b]); 0";
_err.wst_add:="__UPG.msg('Przypisanie rubryki %1 do rodzaju wniosku %2 nie powiodło się.'[$_a,_b]); 0";
:: Komunikaty powodzenia
_msg:=obj_new('wrd_add','wst_add');
_msg.wrd_add:="__UPG.msg('Dodano/znaleziono rodzaju wniosku %1 (%2).'[_a,_b]); 1";
_msg.wst_add:="__UPG.msg('Przypisano rubrykę %1 do rodzaju wniosku %2.'[$_a,_b]); 1";
:: Obsługa aktualizacji
_upg:=obj_new('chk','err','msg','wrd_find','wrd_add','wst_add');
_upg.chk:=0;
_upg.err:=_err;
_upg.msg:=_msg;
_upg.wrd_find:="
   {? (_ref:=exec('szukaj','ppk_wrd','U',_a))=null
   || .err.wrd_find(_a);
      .chk-=1
   ?};
   _ref
";
_upg.wrd_add:="{? _a=null || .chk-=1; .err || .msg ?}.wrd_add(_b,_c)";
_upg.wst_add:="{? _a=null || .chk-=1; .err || .msg ?}.wst_add(_b,_c)";

:: Dodaj definicję WB25B
_symbol:='WB25B';
_opis:='Blokada wpłat na podstawie art. 25';
_ref:=exec('dodaj','ppk_wrd','U',_symbol,_opis,,'N','N');
{? _upg.wrd_add(_ref,_symbol,_opis)<>null
|| _upg.wst_add(exec('dodaj','ppk_wst',_ref,_r710,'T'),_r710,_symbol);
   _upg.wst_add(exec('dodaj','ppk_wst',_ref,_r711,'T'),_r711,_symbol);
   _upg.wst_add(exec('dodaj','ppk_wst',_ref,_r712,'T'),_r712,_symbol);
   _upg.wst_add(exec('dodaj','ppk_wst',_ref,_r713,'T'),_r713,_symbol)
?};

:: Dodaj definicję WB25W
_symbol:='WB25W';
_opis:='Wznowienie wpłat na podstawie art. 25';
_ref:=exec('dodaj','ppk_wrd','U',_symbol,_opis,,'N','N');
_upg.wrd_add(_ref,_symbol,_opis);

:: Dodaj definicję DOWU25
_symbol:='DOWU25';
_opis:='Deklaracja opłacania wpłat uczestnika art. 25';
_ref:=exec('dodaj','ppk_wrd','U',_symbol,_opis,,'N','T');
{? _upg.wrd_add(_ref,_symbol,_opis)<>null
|| _upg.wst_add(exec('dodaj','ppk_wst',_ref,_r712,,'N'),_r712,_symbol);
   _upg.wst_add(exec('dodaj','ppk_wst',_ref,_r713,,'N'),_r713,_symbol)
?};

:: Dodaj składnik 7086 do definicji AWW
_symbol:='AWW';
{? (_ref:=_upg.wrd_find(_symbol))<>null
|| _upg.wst_add(exec('dodaj','ppk_wst',_ref,_r713),_r713,_symbol)
?};

:: Dodaj składnik 7086 do definicji WODW
_symbol:='WODW';
{? (_ref:=_upg.wrd_find(_symbol))<>null
|| _upg.wst_add(exec('dodaj','ppk_wst',_ref,_r713),_r713,_symbol)
?};

:: Dodaj definicję DWP
_symbol:='DWP';
_opis:='Deklaracja wypłaty trans.-zmiana zarządzającego';
_ref:=exec('dodaj','ppk_wrd','U',_symbol,_opis,'UCZ_WYPŁATA_TRANSFEROWA','N','N');
_upg.wrd_add(_ref,_symbol,_opis);

:: Rodzaje komunikatów
exec('dane_sys','ppk_krd');
:: Zmiana rodzaju WYPTRANS i ZWROT
_symbol:=spli_str('WYPTRANS,ZWROT',',');
PPK_KRD.cntx_psh();
PPK_KRD.index('SYMBOL');
PPK_KRD.prefix('U');
{! _ii:=1..obj_len(_symbol)
|! {? PPK_KRD.find_key(_symbol[_ii])
   || PPK_KRD.PORTAL:='T';
      PPK_KRD.EDYCJA:='T';
      PPK_KRD.FORMULA:='T';
      PPK_KRD.memo_set('exec(\'%1\',\'ppk_krd\')'[-(_symbol[_ii])],'TRESC');
      {? ~(PPK_KRD.put() & PPK_KRD.memo_put(,'TRESC'))
      || __UPG.msg('Wystąpił błąd podczas aktualizacji rodzaju komunikatu %1.'[_symbol[_ii]]);
         _upg-=1
      ?}
   ?}
!};
PPK_KRD.cntx_pop();
obj_del(_symbol);
__UPG.msg('Zaktualizowano definicje komunikatów.');

{? _upg.chk<0 || -1 || 1 ?}


\wnioski_komunikaty_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Aktualizacja rodzajów wniosków WODW, AWW i utworzenie DWP oraz aktualizacja definicji komunikatów - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja rodzajów wniosków WODW, AWW i utworzenie DWP oraz aktualizacja definicji komunikatów.'


\stalesys_PPK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Aktualizacja stałych dziedziny PPK
::----------------------------------------------------------------------------------------------------------------------
_zd:=date(0,0,0);
_info:='Ustawiono wymagane wartości początkowe.';

exec('czytaj','#stalesys',_zd,KST_PPK,'DWT_OKR');

{? KST_PPK.DWT_OKR=0
|| KST_PPK.DWT_OKR:=7;
   exec('zapisz_zes','#stalesys',_zd,KST_PPK,'DWT_OKR')
|| _info:='Ustawienie wartości początkowych nie było konieczne.'
?};

__UPG.msg(_info);
1


\stalesys_PPK_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Aktualizacja stałych dziedziny PPK - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja stałych dziedziny PPK'


\akt_1922_05
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Aktualizacja "Zmiana w sposobie obliczania podatku od osób fizycznych" w związku z wprowadzeniem przychodu
::       zwolnionego od podatku dla osób do 26 roku życia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_txt:='';

:: Aktualizacja opisów składników płacowych i definicje atrybutów.
:: \napraw_p/tran_exp.fml

:: Uzupełnienie pola ZWPOD w tabeli RU.
{? var_pres('ZWPOD',RU)>0
|| RU.cntx_psh();
   RU.clear();
   RU.for_each(
      "  {? RU.K='1'
         || RU.ZWPOD:='T'
         || RU.ZWPOD:='N'
         ?};
         RU.put(1)
      "
   );
   {? RU.find_tab(1,'ZWPOD',,'=','')
   || _txt:='Aktualizacja wartości nowego pola w tabeli zawierającej rodzaje umów zakończyła się niepowodzeniem';
      {? _result>0
      || _result:=-1
      ?}
   || _txt:='Aktualizacja wartości nowego pola w tabeli zawierającej rodzaje umów zakończona powodzeniem'
   ?};
   RU.cntx_pop()
?};
__UPG.msg(_txt);

:: Dodanie historii wartości pól związanych przychodem podlegającym zwolnieniu od podatku art.21 ust.1 pkt 148.
:: przeniesione do \stalesys/upgradexpertis.fml

:: Załączniki do oświadczenia związanego z przychodem zwolnionym od podatku.
_txt:='Nie udało się utworzyć struktury do załączników do oświadczenia dla przychodu zwolnionego.';
_typ:=exec('slo_naz','ext_slo','ZAL','Oświadczenia-przychód zwolniony od podatku');
{? _typ
|| ZAOTM.cntx_psh();
   ZAOTM.index('MIEJSCER');
   ZAOH.cntx_psh();
   ZAOH.index(ZAOH.ndx_tmp(,1,'NAZWA',,));
   ZAOTS.cntx_psh();
   ZAOTS.clear();
   {? SLO_NAZ.seek(_typ,,1)
   || _msc:='OS_ZWPOD';
      ZAOTM.prefix(_msc,SLO_NAZ.ref());
      {? ~ZAOTM.first()
      || ZAOTM.blank();
         ZAOTM.MIEJSCE:=_msc;
         ZAOTM.SLO_NAZ:=SLO_NAZ.ref();
         {? ZAOTM.add(1)
         || ZAOH.prefix('Oświadczenia',);
            {? ZAOH.first()
            || ZAOTS.blank();
               ZAOTS.ZAOH:=ZAOH.ref();
               ZAOTS.SLO_NAZ:=SLO_NAZ.ref();
               {? ZAOTS.add(1)
               || _txt:='Utworzono strukturę dla załączników do oświadczenia dla przychodu zwolnionego.'
               ?}
            ?}
         ?}
      ?}
   ?};
   ZAOTS.cntx_pop();
   ZAOH.ndx_drop();
   ZAOH.cntx_pop();
   ZAOTM.cntx_pop()
|| {? _result>0
   || _result:=-1
   ?}
?};
__UPG.msg(_txt);

_result


\akt_1922_05_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Aktualizacja "Zmiana w sposobie obliczania podatku od osób fizycznych" w związku z wprowadzeniem przychodu
::       zwolnionego od podatku dla osób do 26 roku życia - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zmiany sposobu obliczania podatku od osób fizycznych'


\addr_cho
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Uzupełnienie tabeli addr_cho
::----------------------------------------------------------------------------------------------------------------------
_status:=1;
{? var_pres('ADDR_CHO')>100
||

   _names:='Kontrahenta.Odbiorcy kontrahenta.Miejsca dostawy.Posesji.Magazynu.Składowiska.Uzupełniony ręcznie';
   _codes:='KH,KH_ODB,KH_MSC,POS,MG,WYS,MANUAL';

   ADDR_CHO.cntx_psh();
   ADDR_CHO.prefix();

   {? ADDR_CHO.size()=0
   ||

      _names_tab:=spli_str(_names,'.');
      _codes_tab:=spli_str(_codes,',');
      _len:=obj_len(_names_tab);

      {! _i.._len
      |!
         ADDR_CHO.blank();
         ADDR_CHO.N:=_names_tab[_i];
         ADDR_CHO.K:=_codes_tab[_i];
         ADDR_CHO.add()
      !};

      {? ADDR_CHO.size()=_len
      ||
         __UPG.msg('Poprawnie uzupełniono table ADDR_CHO.')
      ||
         __UPG.msg('Nie udało się uzupełnić wszystkich rekordów w tabli ADDR_CHO.');
         _status:=0
      ?}

   ||
      __UPG.msg('Poprawnie uzupełniono table ADDR_CHO.')
   ?};

   ADDR_CHO.cntx_pop()
|| __UPG.msg('Nie udało się znaleźć tabeli ADDR_CHO.');
   _status:=0
?};
_status


\addr_cho_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Uzupełnienie tabeli addr_cho
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie tabeli związanej z wyborem przepisywania adresów.'


\tat_w_portal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.42]
:: OPIS: Uzupełnia pole W_PORTAL dla tabeli typów atrybutu. Nowe pole oznacza, czy typ może być użyty na portalu HR.
::  ORG: \tat_w_portal/upgrade_2042.fml
::----------------------------------------------------------------------------------------------------------------------
TAT.cntx_psh();
TAT.index('N');
TAT.prefix();
TAT.for_each("{? TAT.W_PORTAL='' || TAT.W_PORTAL:='N'; TAT.put() ?}");
TAT.cntx_pop();
__UPG.msg('Uzupełniono pole W_PORTAL dla tabeli typów atrybuty.');
1


\tat_w_portal_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.42]
:: OPIS: Uzupełnia pole W_PORTAL dla tabeli typów atrybutu. Nowe pole oznacza, czy typ może być użyty na portalu HR.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnia pole W_PORTAL dla tabeli typów atrybutu. Nowe pole oznacza, czy typ może być użyty na portalu HR.'


\POCZTA
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Uzupełnia pola w tabeli POCZTA
::  ORG: \POCZTA/upgrade_2042.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_formula:="
   __lrec+=1;
   _put:=0;
   {? +POCZTA.SOURCE=16
   || POCZTA.SOURCE:=exec('FindAndGet','#table',ref_tab(POCZTA.SOURCE),POCZTA.SOURCE,,\"uidref()\",POCZTA.SOURCE);
      _put:=1
   ?};
   {? POCZTA.SENDINFO='' || POCZTA.SENDINFO:='N'; _put:=1 ?};
   {? _put || {? POCZTA.put(1) || __lmod+=1 ?} ?}
";
_result:=POCZTA.for_each(_formula,1);
{? _result
|| __UPG.msg('Zaktualizowano pola w kartotece wiadomości e-mail.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji kartoteki wiadomości e-mail.')
?};
VAR_DEL.delete('__lrec','__lmod');
_result


\POCZTA_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Uzupełnia pola w tabeli POCZTA - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja kartoteki wiadomości e-mail.'


\POCZTAM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [20.42]
:: OPIS: Uzupełnia pola w tabeli POCZTAM
::  ORG: \POCZTAM/upgrade_2042.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_formula:="
   __lrec+=1;
   _put:=0;
   {? POCZTAM.RODZ='' || POCZTAM.RODZ:='P'; _put:=1 ?};
   {? POCZTAM.AUTH_KND='' || POCZTAM.AUTH_KND:=exec('auth_basic','#mailbox'); _put:=1 ?};
   {? _put || {? POCZTAM.put(1) || __lmod+=1 ?} ?}
";
_result:=POCZTAM.for_each(_formula,1);
{? _result
|| __UPG.msg('Zaktualizowano pola w kartotece serwerów poczty poczty.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji kartoteki serwerów poczty.')
?};
VAR_DEL.delete('__lrec','__lmod');
_result


\POCZTAM_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [20.42]
:: OPIS: Uzupełnia pola w tabeli POCZTAM - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja kartoteki serwerów poczty.'


\M_ATR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Aktualizacja wzorców strybutów dostawy
::  ORG: \M_ATR/upgrade_2042.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
M_ATR.cntx_psh();
M_ATR.prefix();
M_ATR.for_each("__lrec+=1; {? M_ATR.MOD='' || M_ATR.MOD:='N'; {? M_ATR.put(1) || __lmod+=1 ?} ?}",0);
M_ATR.cntx_pop();
__UPG.msg('Zaktualizowano wzorce atrybutów dostaw.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\M_ATR_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Aktualizacja wzorców strybutów dostawy - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja wzorców atrybutów dostaw'


\DK_C
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Aktualizacja cech dostawy
::  ORG: \DK_C/upgrade_2042.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
DK_C.cntx_psh();
_msk:=DK_C.names();
_msk.prefix();
{? _msk.first()
|| {!
   |? DK_C.use(_msk.NAME);
      DK_C.prefix();
      DK_C.for_each("__lrec+=1; {? DK_C.UMOD='' || DK_C.UMOD:=DK_C.UZUP; {? DK_C.put(1) || __lmod+=1 ?} ?}",0);
      _msk.next()
   !}
?};
DK_C.cntx_pop();
obj_del(_msk);
__UPG.msg('Zaktualizowano cechy dostawy.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\DK_C_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Aktualizacja cech dostawy - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja cech dostaw'


\actKoszt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Aktualizacja kosztów
::  ORG: \actKoszt/upgrade_2042.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod','__lre1','__lmo1','__lre2','__lmo2');
__lrec:=__lmod:=__lre1:=__lmo1:=__lre2:=__lmo2:=0;

_msk:=FAKS_K.names();
_msk.clear();
{? _msk.first()
|| exec('fak_psh','open_tab');
   ND.cntx_psh();
   DK.cntx_psh();
   {!
   |? _oddz:=1+(_msk.NAME+3);
      _rok:=(_msk.NAME+3)+2;
      exec('fak_open','open_tab',_oddz,_rok);
      FAKS_K.prefix();
      FAKS_K.for_each("_put:=0;
                       __lrec+=1;
                       {? FAKS_K.SC='' || FAKS_K.SC:='N'; _put:=1 ?};
                       {? FAKS_K.D=date(0,0,0) || FAKS_K.D:=FAKS_K.FAKS().DW; _put:=1 ?};
                       {? FAKS_K.OPLD='' || FAKS_K.OPLD:='N'; _put:=1 ?};
                       {? _put || {? FAKS_K.put(1) || __lmod+=1 ?} ?}",1);
      FAP_K.prefix();
      FAP_K.for_each("_put:=0;
                      __lre1+=1;
                      {? FAP_K.KK=null() & FAP_K.FAKS_K().KK<>null()
                      || FAP_K.KK:=FAP_K.FAKS_K().KK;
                         _put:=1
                      ?};
                      {? FAP_K.D=date(0,0,0)
                      || FAP_K.D:=FAP_K.FAKS_K().D;
                         _put:=1
                      ?};
                      {? FAP_K.DKSQL<>'' & FAP_K.IDND=''
                      || _mask:=form(8+FAP_K.DKSQL)+3;
                         ND.use('nagdo'+_mask);
                         DK.use('dokma'+_mask);
                         FAP_K.IDND:=exec('FindAndGet','#table',DK,FAP_K.DKSQL,,\"N().IDADD\",'');
                         _put:=1
                      ?};
                      {? _put || {? FAP_K.put(1) || __lmo1+=1 ?} ?}",1);
      _msk.next()
   !};
   exec('fak_pop','open_tab');
   ND.cntx_pop();
   DK.cntx_pop()
?};
obj_del(_msk);
__UPG.msg('Zaktualizowano koszty dla zakupów.');
__UPG.msg('Nagłówki - przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
__UPG.msg('Pozycje - przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lre1,$__lmo1]);

_msk:=N_K.names();
_msk.clear();
{? _msk.first()
|| exec('mag_psh','open_tab');
   exec('fak_psh','open_tab');
   do();
   {!
   |? _oddz:=1+(_msk.NAME+3);
      _rok:=(_msk.NAME+3)+2;
      exec('mag_open','open_tab',_oddz,_rok);
      exec('fak_open','open_tab',_oddz,_rok);

      N_K.prefix();
      {? N_K.first()
      || {!
         |? __lre2+=1;
            FAKS_K.index('OLD');
            {? ~FAKS_K.find_key(N_K.IDADD)
            || FAKS_K.blank();
               FAKS_K.FAKS:=null();
               FAKS_K.OPIS:=N_K.OP;
               FAKS_K.SV:=null();
               FAKS_K.WN:=0;
               FAKS_K.WV:=0;
               FAKS_K.WB:=N_K.WB;
               FAKS_K.WAL:=INFO.NAROD;
               FAKS_K.WW:=0;
               FAKS_K.KRS:=0;
               FAKS_K.FAP:='';
               FAKS_K.KK:=N_K.KK;
               FAKS_K.KON:='';
               FAKS_K.ROZL:=N_K.ROZL;
               FAKS_K.ROZLICZ:={? N_K.SC='T' || 'S' || 'N' ?};
               FAKS_K.IDND:=N_K.N().IDADD;
               FAKS_K.IDTR:='';
               FAKS_K.INMG:=1;
               FAKS_K.OLD:=N_K.IDADD;
               FAKS_K.SC:=N_K.SC;
               {? FAKS_K.add(1)
               || __lmo2+=1;
                  _ref:=FAKS_K.ref();
                  DK_K.index('N_K');
                  DK_K.prefix(N_K.ref());
                  {? DK_K.first()
                  || {!
                     |? FAP_K.blank();
                        FAP_K.FAP:=null();
                        FAP_K.FAKS_K:=_ref;
                        FAP_K.WB:=DK_K.WP;
                        FAP_K.DKSQL:=$DK_K.DK;
                        FAP_K.WDK:=0;
                        FAP_K.IDND:=FAP_K.FAKS_K().IDND;
                        FAP_K.CK:=0;
                        FAP_K.KK:=DK_K.KK;
                        FAP_K.D:=DK_K.D;
                        FAP_K.WYC:=0;
                        FAP_K.IL_R:=DK_K.IL_R;
                        FAP_K.W_R:=DK_K.W_R;
                        FAP_K.DK_KSQL:=DK_K.DK_KSQL;
                        {? ~FAP_K.add(1) || _res:=0; undo() ?};
                        DK_K.next()
                     !}
                  ?}
               || _res:=0; undo()
               ?}
            ?};
            _res & N_K.next()
         !}
      ?};
      _res & _msk.next()
   !};
   end();
   exec('mag_pop','open_tab');
   exec('fak_pop','open_tab')
?};
obj_del(_msk);
__UPG.msg('Zaktualizowano koszty dla dokumentów magazynowych.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lre2,$__lmo2]);
VAR_DEL.delete('__lrec','__lmod','__lre1','__lmo1','__lre2','__lmo2');
_res


\actKoszt_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Aktualizacja kosztów - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktulizacja rozliczenia kosztów dla zakupów i magazynu'


\dokum_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [20.42]
:: OPIS: Wypełnienie pola BL, BL_VISIB w tabeli DOKUM - kontakty
::  ORG: \dokum_bl/upgrade_2042.fml
::       \dokum_nad/upgrade_2042.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=0;
__lmod:=0;
DOKUM.index('DOKF');
{? DOKUM.first()
|| {!
   |? _put:=0;
      __lrec+=1;
      {? DOKUM.BL='' || _put:=1; DOKUM.BL:='N' ?};
      {? DOKUM.BL_VISIB='' || _put:=1; DOKUM.BL_VISIB:='N' ?};
      {? DOKUM.K_NAD='' || _put=1; DOKUM.K_NAD:='N' ?};
      {? _put
      || {? DOKUM.put(1) || __lmod+=1 ?}
      ?};
      DOKUM.next()
   !}
?};
__UPG.msg('Zaktualizowano dane kontaktów w zakresie dokumentów Businesslink.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
1


\dokum_BL_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [20.42]
:: OPIS: Wypełnienie pola BL w tabeli DOKUM - kontakty
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja danych kontaktów w zakresie dokumentów Businesslink'


\USERSF
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Aktualizacja użytkowników w firmach
::  ORG: \USERSF/upgrade_2042.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
USERSF.cntx_psh();
USERSF.prefix();
USERSF.for_each("
   __lrec+=1; _put:=0;
   {? USERSF.PORTAL2='' || USERSF.PORTAL2:='N'; _put:=1 ?};
   {? USERSF.KSEF_DL='' || USERSF.KSEF_DL:='N'; _put:=1 ?};
   {? USERSF.KSEF_UL='' || USERSF.KSEF_UL:='N'; _put:=1 ?};
   {? USERSF.BLK_SYNC='' || USERSF.BLK_SYNC:='N'; _put:=1 ?};
   {? _put || USERSF.put(); __lmod+=1 ?}",
   1
);
USERSF.cntx_pop();
__UPG.msg('Zaktualizowano użytkowników w firmach.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\USERSF_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Aktualizacja użytkowników w firmach - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja użytkowników w firmach'


\dokump_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [20.42]
:: OPIS: Wypełnienie pola RODZ w tabeli DOKUMP - powiadomienia o kontaktach
::  ORG: \dokump_rodz/upgrade_2042.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=0;
__lmod:=0;
DOKUMP.index('DISP');
{? DOKUMP.first()
|| {!
   |? __lrec+=1;
      {? DOKUMP.RODZ=''
      || _nxt:=null();
         DOKUMP.cntx_psh();
         {? DOKUMP.next()
         || _nxt:=DOKUMP.ref()
         ?};
         DOKUMP.cntx_pop();
         DOKUMP.RODZ:='M';
         {? DOKUMP.put(1)
         || __lmod+=1
         ?};
         {? _nxt=null()
         || _dalej:=0
         || _dalej:=DOKUMP.seek(_nxt)
         ?}
      || _dalej:=DOKUMP.next()
      ?};
      _dalej
   !}
?};
__UPG.msg('Zaktualizowano dane powiadomień o kontaktach.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
1


\dokump_rodz_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [20.42]
:: OPIS: Wypełnienie pola RODZ w tabeli DOKUMP - powiadomienia o kontaktach
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja danych powiadomień o kontaktach'


\TMAT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Aktualizacja surowców technologicznych
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
TMAT.trig_off('*','*');
TKTL.cntx_psh();
TMAT.cntx_psh();
_msk:=TMAT.names();
_msk.prefix();
{? _msk.first()
|| {!
   |? TMAT.use(_msk.NAME);
      TMAT.prefix();
      TMAT.for_each("
         __lrec+=1;
         _put:=0;

         {? TMAT.PT<>null & TMAT.XJMP=0 & TMAT.WARN>0
            & TMAT.PT().J().KOD=exec('FindAndGet','#table',TKTL,TMAT.NRK,,\"TKTL.JM().KOD\",'')
         || _xjm:=exec('FindAndGet','#table',TKTL,TMAT.NRK,,\"TKTL.XJM\",1);
            TMAT.XJMP:=((TMAT.WARN/_xjm)*100)$2;
            _put:=1
         |? TMAT.PT<>null & TMAT.DJM<>null() & (TMAT.XJMP=0 | TMAT.DXJMP=0) & TMAT.DWARN>0
            &  TMAT.DJM().KOD=exec('FindAndGet','#table',TKTL,TMAT.NRK,,\"TKTL.JM().KOD\",'')
         || {? TMAT.DXJMP<>0
            || TMAT.XJMP:=TMAT.DXJMP;
               _put:=1
            || _xjm:=exec('FindAndGet','#table',TKTL,TMAT.NRK,,\"TKTL.XJM\",1);
               TMAT.DXJMP:=(((TMAT.DWARN)/_xjm)*100)$2;
               TMAT.XJMP:=TMAT.DXJMP;
               _put:=1
            ?}
         ?};
         {? TMAT.KTM=null()
         || {? TMAT.GRKTM='G'
            || TMAT.KTM:=exec('FindAndGet','#table',TTGP,TMAT.TGDFLT,,\"PT\",null())
            || TMAT.KTM:=TMAT.PT
            ?};
            _put:=1
         ?};
         {? TMAT.TKTL_KTM=null()
         || TMAT.TKTL_KTM:=exec('FindAndGet','#table',TKTL,TMAT.NRK,,\"KTM\",null());
            _put:=1
         ?};
         {? _put>0
         || TMAT.put();
            __lmod+=1
         ?};
         ~~
         ",
         1
      );
      _msk.next()
   !}
?};
TMAT.cntx_pop();
TKTL.cntx_pop();
TMAT.trig_on('*','*');
__UPG.msg('Zaktualizowano surowce technologiczne.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\TMAT_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Aktualizacja surowców technologicznych - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja surowców technologicznych'


\TCHMAT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Aktualizacja zamienników surowca technologicznego
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
TCHMAT.trig_off('*','*');
TKTL.cntx_psh();
TCHMAT.cntx_psh();
_msk:=TCHMAT.names();
_msk.prefix();
{? _msk.first()
|| {!
   |? TCHMAT.use(_msk.NAME);
      TCHMAT.prefix();
      TCHMAT.for_each("
         __lrec+=1;
         _put:=0;

         {? TCHMAT.PT<>null & TCHMAT.XJMP=0 & TCHMAT.WARN>0
            & TCHMAT.PT().J().KOD=exec('FindAndGet','#table',TKTL,TCHMAT.NRK,,\"TKTL.JM().KOD\",'')
         || _xjm:=exec('FindAndGet','#table',TKTL,TCHMAT.NRK,,\"TKTL.XJM\",1);
            TCHMAT.XJMP:=((TCHMAT.WARN/_xjm)*100)$2;
            _put:=1
         |? TCHMAT.PT<>null & TCHMAT.DJM<>null() & (TCHMAT.XJMP=0 | TCHMAT.DXJMP=0) & TCHMAT.DWARN>0
            &  TCHMAT.DJM().KOD=exec('FindAndGet','#table',TKTL,TCHMAT.NRK,,\"TKTL.JM().KOD\",'')
         || {? TCHMAT.DXJMP<>0
            || TCHMAT.XJMP:=TCHMAT.DXJMP;
               _put:=1
            || _xjm:=exec('FindAndGet','#table',TKTL,TCHMAT.NRK,,\"TKTL.XJM\",1);
               TCHMAT.DXJMP:=(((TCHMAT.DWARN)/_xjm)*100)$2;
               TCHMAT.XJMP:=TCHMAT.DXJMP;
               _put:=1
            ?}
         ?};

         {? _put>0
         || TCHMAT.put();
            __lmod+=1
         ?};
         ~~
         ",
         1
      );
      _msk.next()
   !}
?};
TCHMAT.cntx_pop();
TKTL.cntx_pop();
TCHMAT.trig_on('*','*');
__UPG.msg('Zaktualizowano zamienniki surowca technologicznego.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\TCHMAT_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Aktualizacja zamienników surowca technologicznego - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zamienników surowca technologicznego'


\kparam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Aktualizacja stałych systemu: KPARAM, z historią zmian i dodane do widoku stałych systemu
::----------------------------------------------------------------------------------------------------------------------
_fld:=spli_str('OKD,CZY_ZMKU,LSP_WSZ',',');

{! _ii:=1..obj_len(_fld)
|! _acr:=_fld[_ii];
   exec('add_acr','#stalesys',_acr,'','T','N','T','KPARAM','LSP')
!};

_kstzes_ref:=null();
KST_ZES.cntx_psh();
KST_ZES.index('SYMBOL');
KST_ZES.prefix('KPARAM',);
{? KST_ZES.first()
|| _kstzes_ref:=KST_ZES.ref()
?};
KST_ZES.cntx_pop();

{? _kstzes_ref<>null()
|| KST_DOM.cntx_psh();
   KST_DOM.index('DOM_SYM');
   KST_DOM.prefix(_kstzes_ref);
   _kstdom_nowy:=1;
   {? KST_DOM.find_key('LSP',)
   || _kstdom_nowy:=0
   || KST_DOM.blank();
      KST_DOM.KST_ZES:=_kstzes_ref;
      KST_DOM.B_DOMAIN:=exec('domain_ref','#b_domain','LSP');
      KST_DOM.add()
   ?};
   KST_DOM.cntx_pop();
   {? _kstdom_nowy
   || {! _ii:=1..obj_len(_fld)
      |! _acr:=_fld[_ii];
         exec('add_acr','#stalesys',_acr,'','T','N','T','KPARAM','LSP')
      !}
   ?}
?};

obj_del(_fld);

exec('init_wer','#stalesys','KPARAM');

__UPG.msg('Zaktualizowano stałe systemu - parametry kasy.');

1


\kparam_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Aktualizacja stałych systemu: KPARAM, z historią zmian i dodane do widoku stałych systemu - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja stałych systemu - parametry kasy.'


\dk_mar_nar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Uzupełnia pola MAR i NAR dla tabeli z pozycjami dokumentów magazynowych.
::       Nowe pola dotyczą wyliczania Marży i Narzutu.
::----------------------------------------------------------------------------------------------------------------------
DK.trig_off('*','*');
exec('fap2dk_psh','open_tab');
DK.index('ALL');
DK.prefix();
_msk:=DK.names();
{? _msk.first()
|| {!
   |? _kod:=1+(_msk.NAME+3);
      _rok:=_msk.NAME+2;
      exec('fap2dk_open','open_tab',_kod,_rok,'sp');
      DK.prefix();
      DK.for_each(
       "DK.MAR:=((DK.CN-DK.C)*DK.IL)$2;
        DK.NAR:={? DK.C<>0 || ((DK.CN-DK.C)/DK.C*100)$2 || 0 ?};
        DK.put(1);
        {? DK.FAP<>'' & ~(FAP2DK.prefix($DK.ref());FAP2DK.first())
        || exec('adfap2dk','magdok_wspolne',$FAP.ref(),$DK.ref(),$FAP.FAKS,$DK.N,DK.IL,FAP.FAKS().WHERE)
        ?}
       ",1);
      _msk.next()
   !}
?};
obj_del(_msk);
exec('fap2dk_pop','open_tab');
DK.trig_on('*','*');
__UPG.msg('Uzupełniono pól marża i narzut oraz powiązań ze sprzedaży dla pozycji dokumentów magzynowych.');
1


\dk_mar_nar_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Uzupełnia pola MAR i NAR dla tabeli z pozycjami dokumentów magazynowych.
::       Nowe pola dotyczą wyliczania Marży i Narzutu.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnia pola MAR i NAR dla tabeli z pozycjami dokumentów magazynowych. Nowe pola dotyczą wyliczania Marży i Narzutu.'


\dok_td_fix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MP] [20.42]
:: OPIS: Aktualizacja typu dokumentu dla poprawki kod - ER/WRT/XP/20.42/2011/0022
::----------------------------------------------------------------------------------------------------------------------
FIRMA.cntx_psh(); ROK_F.cntx_psh(); OKRO_F.cntx_psh(); DOK.cntx_psh();
FIRMA.index('SYMBOL2'); FIRMA.prefix('S');
__lrec:=0;
__lret:=0;
_where:='where DOK.JPK_V_T not like \'\'';
_sql:='select JPK_V_T from @DOK ';
_sql+=_where;
_tab:=sql(_sql);
{? ~_tab.first() & FIRMA.first()
|| __lret:=1;
   {!
   |? {? FIRMA.Z='N'
      || ROK_F.index('ROKPOCZ'); ROK_F.prefix(FIRMA.ref());
         {? ROK_F.find_ge(date(2018,1,1))
         || {!
            |? OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
               {? OKRO_F.first()
               || {!
                  |? _maska:=ROK_F.KOD+form(OKRO_F.NR,-2);
                     DOK.cntx_psh();
                     DOK.use('doku'+_maska);
                     echo('Uaktualnienie dokumentów księgowych: '+DOK.name());
                     DOK.prefix();
                     DOK.for_each("
                        {? DOK.JPK_V_T='' & DOK.DOK_REJ().JPK_V_T<>''
                        || DOK.JPK_V_T:=DOK.DOK_REJ().JPK_V_T;
                           __lrec+=1;
                           DOK.put()
                        ?};
                        ~~
                     ",1);
                     DOK.cntx_pop();
                     OKRO_F.next()
                  !}
               ?};
               ROK_F.next()
            !}
         ?}
      ?};
      FIRMA.next()
   !};
   echo()
?};
{? __lret=1
|| __UPG.msg('Zaktualizowano typ dokumentu dla następującej liczby zapisów: %1'[$__lrec])
|? __lret=0
|| __UPG.msg('Aktualizacja wartości pola DOK.JPK_V_T była przeprowadzona wcześniej.')
?};
FIRMA.cntx_pop(); ROK_F.cntx_pop(); OKRO_F.cntx_pop(); DOK.cntx_pop();
1


\dok_td_fix_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Aktualizacja typu dokumentu - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja typu dokumentu'


\dok_jpk_upgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Wypełnia tabelę DOK_JPK
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
__lrec:=0;
{? ROK_F.find_ge(date(2018,1,1))
|| {!
   |? _maska:=ROK_F.KOD;
      DOK.cntx_psh(); DVAT.cntx_psh(); DOK_JPK.cntx_psh();
      DVAT.use('dvat__'+_maska);
      echo('Uaktualnienie dokumentów księgowych: '+DVAT.name());
      DVAT.prefix();
      DVAT.for_each("
      {? DVAT.DOK<>null() & DVAT.OBR().POCZ>date(2020,09,30)
      || DOK.use(ref_name(DVAT.DOK));
         _mdok:=ref_name(DVAT.DOK);
         DOK_JPK.use('dokj'+(_mdok+4));
         DOK.prefix();
         {? DOK.seek(DVAT.DOK)
         || DOK_JPK.index('UNIK');
            DOK_JPK.prefix(DOK.ref());
            {? ~DOK_JPK.first()
            || DOK_JPK.blank();
               DOK_JPK.JPK_GTU:=DOK.JPK_GTU;
               DOK_JPK.JPK_PROC:=DOK.JPK_PROC;
               DOK_JPK.DATE:=DOK.DR;
               DOK_JPK.TIME:=time(0,0,0);
               DOK_JPK.OPERATOR:=DOK.ZAR;
               DOK_JPK.DOK:=DOK.ref();
               __lrec+=1;
               DOK_JPK.add()
            ?};
            VATZMDEK.index('ROK');
            VATZMDEK.prefix(ROK_F.ref());
            {? VATZMDEK.first() & VATZMDEK.find_le(DVAT.OBR().NR)
            || SIK.ROZL_VAT:=VATZMDEK.ROZL_VAT
            || SIK.ROZL_VAT:=ROK_F.ROZL_VAT
            ?};
            _typ:='V7'+SIK.ROZL_VAT;
            PVAT.cntx_psh(); VAT_PS.cntx_psh(); VAT_DEK.cntx_psh();
            PVAT.use('pvat__'+(6-DVAT.name()));
            VAT_PS.use('vat_ps'+ROK_F.KOD);
            PVAT.index('NR');
            PVAT.prefix(DVAT.ref());
            {? PVAT.first()
            || {!
               |? {? _typ='V7M' | _typ='V7K' & DVAT.OBR().POCZ~2%*3<>0
                  || _okres:=$(DVAT.OBR().POCZ~1)+'/'+form(DVAT.OBR().POCZ~2,-2)
                  |? _typ='V7K' & DVAT.OBR().POCZ~2%*3=0
                  || _v:=#((7+$DVAT.OBR().KON)+2);
                     _okres:=(4+$DVAT.OBR().KON)+'/'
                             +{? _v<=3 || '1' |? _v<=6 || '2' |? _v<=9 || '3' || '4' ?}
                 ?};
                 VAT_DEK.index('UNIK');
                 VAT_DEK.prefix(ROK_F.ref(),_typ,_okres);
                 {? VAT_DEK.first()
                 || {!
                    |? VAT_PS.index('PVAT_REF');
                       VAT_PS.prefix(VAT_DEK.ref(),$PVAT.ref());
                       {? VAT_PS.first()
                       || {!
                          |? {? VAT_PS.CRC=PVAT.crc()
                             || DOK_JPK.VAT_DEK:=$VAT_PS.VAT_DEK;
                                _dok:=DOK_JPK.DOK;
                                _vdek:=DOK_JPK.VAT_DEK;
                                DOK_JPK.cntx_psh();
                                DOK_JPK.index('UNIK');
                                DOK_JPK.prefix(_dok,_vdek);
                                {? DOK_JPK.first() || _zap:=0 || _zap:=1 ?};
                                DOK_JPK.cntx_pop();
                                {? _zap=1
                                || DOK_JPK.cntx_psh();
                                   DOK_JPK.index('UNIK');
                                   DOK_JPK.prefix(_dok,'',);
                                   {? DOK_JPK.first()
                                   || DOK_JPK.VAT_DEK:=_vdek;
                                      DOK_JPK.prefix();
                                      DOK_JPK.put();
                                      _zap:=0
                                   || _zap:=1
                                   ?};
                                   DOK_JPK.cntx_pop()
                                ?};
                                {? _zap=1 || __lrec+=1; DOK_JPK.add() ?}
                             ?};
                             VAT_PS.next()
                          !}
                       ?};
                       VAT_DEK.next()
                    !}
                 ?};
                  PVAT.next()
               !}
            ?};
            PVAT.cntx_pop(); VAT_PS.cntx_pop(); VAT_DEK.cntx_pop()
         ?}
      ?}
      ",1);
      DOK.cntx_pop(); DVAT.cntx_pop(); DOK_JPK.cntx_pop();
      ROK_F.next()
   !};
   echo()
?};
ROK_F.cntx_pop();
DOK.cntx_psh();  DOK_JPK.cntx_psh(); ROZLVAT.cntx_psh();
ROZLVAT.index('DOK');
ROZLVAT.prefix();
{? ROZLVAT.first()
|| {!
   |? DOK.use(ref_name(ROZLVAT.DOK));
      _mdok:=ref_name(ROZLVAT.DOK);
      DOK_JPK.use('dokj'+(_mdok+4));
      DOK_JPK.cntx_psh();
      DOK_JPK.index('UNIK');
      DOK_JPK.prefix(ROZLVAT.DOK);
      {? ~DOK_JPK.first()
      || DOK_JPK.blank();
         DOK_JPK.JPK_GTU:=ROZLVAT.DOK().JPK_GTU;
         DOK_JPK.JPK_PROC:=ROZLVAT.DOK().JPK_PROC;
         DOK_JPK.DATE:=ROZLVAT.DOK().DR;
         DOK_JPK.TIME:=time(0,0,0);
         DOK_JPK.OPERATOR:=ROZLVAT.DOK().ZAR;
         DOK_JPK.DOK:=ROZLVAT.DOK;
         __lrec+=1;
         DOK_JPK.add()
      ?};
      DOK_JPK.cntx_pop();
      ROZLVAT.next()
   !}
?};
DOK.cntx_pop(); DOK_JPK.cntx_pop(); ROZLVAT.cntx_pop();
{? __lrec=0
|| __UPG.msg('Nie znaleziono dokumentów wymagających aktualizacji danych.')
|| __UPG.msg('Dodano %1 powiązań dokumentów i deklaracji JPK_V7.'[$__lrec])
?};
VAR_DEL.delete('__lrec');
1


\dok_jpk_upgr_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Wypełnia tabelę DOK_JPK - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tabeli DOK_JPK dla dokumentów nierozliczonych, tabeli DVAT oraz deklaracji JPK_V7'


\jpk_przyczyna_korekty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wydłużenie pola przyczyna korekty do 100 znaków
::----------------------------------------------------------------------------------------------------------------------
_r1:=_ret:=0;
ISTDEF.cntx_psh();
ISTDEFS.cntx_psh();
ISTDEF.index('DATA');
ISTDEF.prefix('FKS','J','FA',null,date(2019,11,1));
{? ISTDEF.first()
|| ISTDEFS.index('OPIS');
   ISTDEFS.prefix(ISTDEF.ref,'PrzyczynaKorekty');
   {? ISTDEFS.first()
   || ISTDEFS.TYPFLD:='STRING[100]';
      _r1:=ISTDEFS.put()
   ?}
?};
{? _r1 || _ret:=1 ?};
ISTDEFS.cntx_pop();
ISTDEF.cntx_pop();
{? _ret
|| __UPG.msg('Poprawiono długość przyczyny korekty na JPK_FA(3).')
|| __UPG.msg('Brak potrzeby wykonania działania naprawczego na JPK_FA(3).')
?};
1


\jpk_przyczyna_korekty_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.42]
:: OPIS: Wydłużenie pola przyczyna korekty do 100 znaków - opis
::----------------------------------------------------------------------------------------------------------------------
'Wydłużenie pola przyczyna korekty do 100 znaków'


\par_skid_rbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.22]
:: OPIS: Zmiana parametru nr 63 z domyślnej treści na 'N', aby prawidłowo wyświetlać rachunki bankowe.
::----------------------------------------------------------------------------------------------------------------------
PARAMS.index('NUMER');
PARAMS.prefix(63);
{? PARAMS.first()
|| {!
   |? PARAMS.TRESC:='N';
      PARAMS.put();
      PARAMS.next()
   !}
?};
__UPG.msg('Zmieniono treść na ''N'' dla parametru numer 63 (Rachunki bankowe kontrahenta dla firm)');
1


\par_skid_rbk_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.22]
:: OPIS: Zmiana parametru nr 63 z domyślnej treści na 'N', aby prawidłowo wyświetlać rachunki bankowe. - opis
::----------------------------------------------------------------------------------------------------------------------
'Zmiana parametru nr 63 z domyślnej treści na ''N'', aby prawidłowo wyświetlać rachunki bankowe.'


\fix_dokzrodl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.22]
:: OPIS: uzupełnia dla dokumentów księgowych informację o okresie w polu dokument źródłowy.
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh();
_tab:=DOK.names();
_str:='EF;EP;ED';
_prefix:=spli_str(_str,';');
_okro_f:=0;
{? _tab.first()
|| {!
   |? DOK.use(_tab.NAME);
      DOK.index('DOKZRODL');
      {! _ii:=1 .. obj_len(_prefix)
      |! DOK.prefix(_prefix[_ii]);
         {? DOK.first()
         || {!
            |? {? DOK.DOKZRODL=_prefix[_ii]
               || _okro_f:=#exec('dok_zal_okro','dok_fks');
                   {? _okro_f
                   || DOK.DOKZRODL+=$_okro_f;
                      DOK.put()
                   ?}
               ?};
               DOK.next()
            !}
         ?}
      !};
      _tab.next()
   !}
?};
DOK.cntx_pop();
1


\fix_dokzrodl_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.22]
:: OPIS: uzupełnia dla dokumentów księgowych informację o okresie w polu dokument źródłowy.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnia dla dokumentów księgowych informację o okresie w polu dokument źródłowy.'


\akt_2014_12
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Aktualizacja 20.14_12 - VAT-UE/K (5)
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{! _i:=1..2
|! _typ:={? _i=1 || 'POD' || 'PODK' ?};
   _fn:={? _i=1 || '' || 'k' ?};
   _imp:=-1;
   {? exec('add_ver','xml','FKS',date(2020,6,1),_typ,5)
   || _imp:=exec('upg_imp','xml','FKS','D',_typ,5,date(2020,6,1),'vat-ue'+_fn+'_5.dfg')
   ?};

   _txt:='e-Deklaracja VAT-UE'+(~_fn)+' (5) obowiązująca od 01.06.2020';

   {? _imp=1
   || __UPG.msg(_txt+' została dodana.')
   |? _imp=0
   || __UPG.msg(_txt+' już istnieje.')
   || __UPG.msg(_txt+' nie została dodana.');
      _ok:=0
   ?}
!};
_ok


\akt_2014_12_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Aktualizacja 20.14_12 - VAT-UE/K (5) - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja 20.14_12 - VAT-UE/K (5)'


\vat_ue_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Uzupełnia schemat e-Deklaracji VAT-UE/K (5) o pola związane z przemieszczeniem towarów
::       między magazynami CALL-OF STOCK
::  OLD: \vat_ue_f/napraw_f.fml
::  OLD: \vat_ue_f/upgrade_2014_1.fml
::----------------------------------------------------------------------------------------------------------------------
_zm:='POD,PODK';

_add:="
   _ref:=null;
   ISTDEFS.cntx_psh();
   ISTDEFS.prefix();
   ISTDEFS.blank();
   ISTDEFS.ISTDEF:=ISTDEF.ref();
   ISTDEFS.TREE:=#_a;
   ISTDEFS.LP:=_b;
   ISTDEFS.OPIS:=_c;
   ISTDEFS.REGULY:=_d;
   ISTDEFS.FORMULA:=_e;
   ISTDEFS.FORM_XML:=_f;
   ISTDEFS.WYM:=_g;
   ISTDEFS.HIDDEN:=_h;
   {? ISTDEFS.add()
   || _ref:=ISTDEFS.ref()
   ?};
   ISTDEFS.cntx_pop();
   _ref
";

_el:=spli_str(_zm,',');
{! _iter:=1..obj_len(_el)
|! _rodzaj:=_el[_iter];
   _status:=0;
   VAT_VER.cntx_psh();
   VAT_VER.index('VER_NR'); VAT_VER.prefix('FKS',_rodzaj,_rodzaj,5);
   _ver:={? VAT_VER.first() || VAT_VER.ref() || null ?};
   VAT_VER.cntx_pop();
   {? _ver
   || ISTDEF.cntx_psh();
      ISTDEF.index('DATA'); ISTDEF.prefix('FKS','D',_rodzaj,_ver);
      {? ISTDEF.first()
      || _status:=1;
         _nr:=0;
         _last:=null;
         ISTDEFS.cntx_psh();
         ISTDEFS.index('LP');
         ISTDEFS.prefix(ISTDEF.ref());
         {? ISTDEFS.last()
         || _nr:=ISTDEFS.LP-1;
            _last:=ISTDEFS.ref()
         ?};
         ISTDEFS.index('OPIS'); ISTDEFS.prefix(ISTDEF.ref(),'PozycjeSzczegolowe',);
         {? ISTDEFS.first()
         || _ref:=ISTDEFS.ref();
            ISTDEFS.index('DRZEWO');
            ISTDEFS.prefix(ISTDEF.ref(),_ref);
            {? ISTDEFS.last() & ISTDEFS.OPIS<>'Grupa4' & _nr<>0
            || ISTDEFS.prefix();
               {? ISTDEFS.seek(_last)
               || ISTDEFS.LP+={? _rodzaj='POD' || 5 || 11 ?};
                  ISTDEFS.put();
                  {? _rodzaj='POD'
                  || _ref2:=_add(_ref,_nr+=1,'Grupa4','',$"exec('pod_f_petla','fks_ved',_a)",$"exec('pod_f_petla','fks_ved',2)",'N','N');
                     {? _ref2
                     || _add(_ref2,_nr+=1,'P_Ca',$"PodObj.KRAJ",'','','T','N');
                        _add(_ref2,_nr+=1,'P_Cb',$"PodObj.NIP1",'','','T','N');
                        _add(_ref2,_nr+=1,'P_Cc',$"PodObj.NIP2",'','','N','N');
                        _add(_ref2,_nr+=1,'P_Cd',$"{? PodObj.PP=-1 || '' || $PodObj.PP ?}",'','','N','N')
                     ?}
                  || _ref:=_add(_ref,_nr+=1,'Grupa4','',$"exec('pod_f_petla','fks_ved',_a)",$"exec('pod_f_petla','fks_ved',2)",'T','N');
                     {? _ref
                     || _ref2:=_add(_ref,_nr+=1,'Grupa',$"exec('grupa_if','xml')",'','','N','T');
                        {? _ref2
                        || _add(_ref2,_nr+=1,'P_CBa',$"PodObj.KRAJ",'','','T','N');
                           _add(_ref2,_nr+=1,'P_CBb',$"PodObj.NIP1",'','','T','N');
                           _add(_ref2,_nr+=1,'P_CBc',$"PodObj.NIP2",'','','N','N');
                           _add(_ref2,_nr+=1,'P_CBd',$"{? PodObj.PP=-1 || '' || $PodObj.PP ?}",'','','N','N')
                        ?};
                        _ref2:=_add(_ref,_nr+=1,'Grupa',$"exec('grupa_if','xml')",'','','N','T');
                        {? _ref2
                        || _add(_ref2,_nr+=1,'P_CJa',$"{? _ || exec('pod_f_petla','fks_ved',2) ?}; PodObj.KRAJ",'','','T','N');
                           _add(_ref2,_nr+=1,'P_CJb',$"PodObj.NIP1",'','','T','N');
                           _add(_ref2,_nr+=1,'P_CJc',$"PodObj.NIP2",'','','N','N');
                           _add(_ref2,_nr+=1,'P_CJd',$"{? PodObj.PP=-1 || '' || $PodObj.PP ?}",'','','N','N')
                        ?}

                     ?}
                  ?};
                  _status:=2
               ?}
            ?}
         ?};
         ISTDEFS.cntx_pop()
      ?};
      ISTDEF.cntx_pop()
   ?};
   _ver:={? _rodzaj='POD' || 'VAT-UE (5)' || 'VAT-UEK (5)' ?};
   {? _status=0
   || __UPG.msg('Nie znaleziono schematu e-Deklaracji %1'[_ver])
   |? _status=1
   || __UPG.msg('Schematu e-Deklaracji %1 jest już uzupełniony.'[_ver])
   || __UPG.msg('Schematu e-Deklaracji %1 został uzupełniony.'[_ver])
   ?}
!};
1


\vat_ue_f_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Uzupełnia schemat e-Deklaracji VAT-UE/K (5) o pola związane z przemieszczeniem towarów
::       między magazynami CALL-OF STOCK - opis
::  OLD: \vat_ue_f_desc/upgrade_2014_1.fml
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnia schemat e-Deklaracji VAT-UE/K (5) o pola związane z przemieszczeniem towarów między magazynami CALL-OF STOCK'


\jpk_v7_gtu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [20.14]
:: OPIS: Główna formuła aktualizacji 20.14_01
::----------------------------------------------------------------------------------------------------------------------
exec('init_slo','jpk_v');
__UPG.msg('Uzupełniono wartośći słownika GTU');
1


\jpk_v7_gtu_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [20.14]
:: OPIS: Główna formuła aktualizacji 20.42_01
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie wartości słownika GTU na potrzeby aktualizacji 2014_01'


\jpk_v7_stale
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Mapowanie stałych systemu
::----------------------------------------------------------------------------------------------------------------------
exec('map_stale','upgrade_2014_01','XINFO','FIZ','KST.PODFIZ');
exec('map_stale','upgrade_2014_01','XINFO','IMIE','KST.PODIME');
exec('map_stale','upgrade_2014_01','XINFO','NAZWISKO','KST.PODNAZ');
exec('map_stale','upgrade_2014_01','XINFO','DATA_UR','KST.PODURDAT');
1


\jpk_v7_stale_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Mapowanie stałych systemu
::----------------------------------------------------------------------------------------------------------------------
'Uaktualnienie mapy stałych systemu na potrzeby aktualizacji 2014_01\n'
'Dane licencjobiorcy - osoba fizyczna'


\jpk_v7_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Dodanie nowych schematów JPK_V7M (1) oraz JPK_V7K (1)
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
_txt:='Schemat JPK_V7M (1)';
_imp:=exec('upg_imp','xml','FKS','J','V7M','JPK_V7M(1)_v1-1',date(2020,7,1),'jpk_v7m_1.dfg');
{? _imp=1
|| __UPG.msg(_txt+' został dodany.')
|? _imp=0
|| __UPG.msg(_txt+' już istnieje.')
|| __UPG.msg(_txt+' nie został dodany.');
   _ok:=0
?};
_txt:='Schemat JPK_V7K (1)';
_imp:=exec('upg_imp','xml','FKS','J','V7K','JPK_V7K(1)_v1-1',date(2020,7,1),'jpk_v7k_1.dfg');
{? _imp=1
|| __UPG.msg(_txt+' został dodany.')
|? _imp=0
|| __UPG.msg(_txt+' już istnieje.')
|| __UPG.msg(_txt+' nie został dodany.');
   _ok:=0
?};
_ok


\jpk_v7_sch_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Dodanie nowych schematów JPK_V7M (1) oraz JPK_V7K (1) - opis
::----------------------------------------------------------------------------------------------------------------------
'Dodanie nowych schematów: JPK_V7M (1) oraz JPK_V7K (1)\n'
'Schematy obowiązują od 1 lipca 2020 r.'


\jpk_v7_report
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Kompilacja raportów
::----------------------------------------------------------------------------------------------------------------------
_result:=rep_tran('fks*vat*');
__UPG.msg('Zaktualizowano wydruki i zestawienia.');
_result


\jpk_v7_report_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Kompilacja raportów - opis
::----------------------------------------------------------------------------------------------------------------------
'Kompilacja raportów'


\jpk_v7_sch2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Dodanie nowych schematów JPK_V7M (1)_2 oraz JPK_V7K (1)_2
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
_txt:='Schemat JPK_V7M (1.2)';
_imp:=exec('upg_imp','xml','FKS','J','V7M','JPK_V7M(1)_v1-2',date(2020,7,1),'jpk_v7m_1_2.dfg');
{? _imp=1
|| __UPG.msg(_txt+' został dodany.')
|? _imp=0
|| __UPG.msg(_txt+' już istnieje.')
|| __UPG.msg(_txt+' nie został dodany.');
   _ok:=0
?};
_txt:='Schemat JPK_V7K (1.2)';
_imp:=exec('upg_imp','xml','FKS','J','V7K','JPK_V7K(1)_v1-2',date(2020,7,1),'jpk_v7k_1_2.dfg');
{? _imp=1
|| __UPG.msg(_txt+' został dodany.')
|? _imp=0
|| __UPG.msg(_txt+' już istnieje.')
|| __UPG.msg(_txt+' nie został dodany.');
   _ok:=0
?};
_ok


\jpk_v7_sch2_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Dodanie nowych schematów JPK_V7M (1)_2 oraz JPK_V7K (1)_2 - opis
::----------------------------------------------------------------------------------------------------------------------
'Dodanie nowych schematów: JPK_V7M (1.2) oraz JPK_V7K (1.2)\n'
'Schematy obowiązują od 1 lipca 2020 r.'


\kor_cit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Dodanie parametru - Liczba dni po terminie płatności dla korekt CIT za złe długi
::----------------------------------------------------------------------------------------------------------------------
exec('datepar','dane_startowe');
__UPG.msg('Dodano parametr czasowy: Liczba dni po terminie płatności dla korekt CIT za złe długi');
1


\kor_cit_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Dodanie parametru - Liczba dni po terminie płatności dla korekt CIT za złe długi - opis
::----------------------------------------------------------------------------------------------------------------------
'Dodanie parametru czasowego: Liczba dni po terminie płatności dla korekt CIT za złe długi'


\zatory
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [12.51]
:: OPIS: Aktualizacja zatory płatnicze 20.14_07
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
KH.prefix();
KH.for_each("
   {? 'msd'*(-KH.WIELKOSC)>0 & KH.WIELKOSC<>''
   || KH.WIELKOSC:={? -KH.WIELKOSC='m'
                   || 'mały'
                   |? -KH.WIELKOSC='s'
                   || 'średni'
                   |? -KH.WIELKOSC='d'
                   || 'duży'
                   ?};
      KH.put()
   ?}
");
KH.cntx_pop();
__UPG.msg('Zmieniono wartości wielkości kontrahenta');
1


\zatory_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [JK] [20.14]
:: OPIS: Aktualizacja zatory płatnicze 20.42_07 - OPIS
::----------------------------------------------------------------------------------------------------------------------
'Zmieniono wartości wielkości kontrahenta.'


\akt_2014_09
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [20.14]
:: OPIS:  Aktualizacja atrybutów składników wykorzystywanych w potrąceniach.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: *********************************************************************************************************************
::exec('__RUB','object');
::__RUB.fill();
::
::exec('add_attr','rubatr',211,2117,'Zwiększenie ochrony minimalnego wynagrodzenia.',1,,,825,827);
::
::__UPG.msg('Zakończono aktualizację atrybutów.');
:: *******************Wykonane po stronie Xpertis***********************************************************************
_result:=-1;
_symbol:='PODW_OCH';

KART_DEF.cntx_psh();
KART_DEF.clear();
KART_DEF.index('SYMBOL');
{? KART_DEF.find_key(_symbol,_symbol)
|| __UPG.msg('Kartoteka dodatkowa "Zwiększenie ochrony minimalnego wynagr." już istnieje.');
   _result:=1
|| KART_DEF.blank(1);
   KART_DEF.SYMBOL:=_symbol;
   KART_DEF.NAZWA:='Zwiększenie ochrony minimalnego wynagr.';
   KART_DEF.WER:='ODDO';
   KART_DEF.OPIS:='Powód zwiększenia';
   KART_DEF.OD:='Data od';
   KART_DEF.ODW:=1;
   KART_DEF.WARTOSC:='Procent zwiększenia';
   KART_DEF.CZYWART:='_';
   KART_DEF.DO:='Data do';

   {? KART_DEF.add(1)
   || __UPG.msg('Kartoteka dodatkowa "Zwiększenie ochrony minimalnego wynagr." została dodana.');
      _result:=1
   || __UPG.msg('Dodanie kartoteki dodatkowej "Zwiększenie ochrony minimalnego wynagr." zakończone niepowodzeniem.')
   ?}
?};
KART_DEF.cntx_pop();
_result


\akt_2014_09_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [20.14]
:: OPIS: Aktualizacja atrybutów składników wykorzystywanych w potrąceniach - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja - tarcza antykryzysowa - zwiększenie ochrony minimalnego wynagrodzenia.'


\kal_def_typws
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Aktualizacja kolumny TypWS w definicji kalendarza.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_tws:=',R,RN,RS,SN,SW,W5,WH,WN,WS,';
_czyKALI:=exec('lic','#b_domain','PKD') | exec('lic','#b_domain','PPL');
exec('__KAL','object',~_czyKALI);
KAL_ROK.cntx_psh();
KAL_DEF.cntx_psh();
KAL_DEF.trig_off('*','*');
_MDB:=KAL_DEF.names();
_loop:=_MDB.first();
{!
|? _loop
|! _cnt:=0;
   KAL_DEF.use(_MDB.NAME);
   KAL_DEF.index('KAL_DATA');
   KAL_DEF.prefix();
   _loop:=KAL_DEF.first();
   {!
   |? _loop & _res
   |! {? _tws*(','+KAL_DEF.TYP+KAL_DEF.TYPWS+',')=0
      || KAL_DEF.TYPWS:=exec('getTypWS','kaledit',KAL_DEF.TYP,KAL_DEF.DATA,KAL_DEF.ROK().WZORZEC);
         {? ~KAL_DEF.put(1)
         || _res:=0
         ?};
         _cnt+=1
      ?};
      _loop:=KAL_DEF.next()
   !};
   {? _res<>0
   || __UPG.msg('Przetworzono zbiór "%1". Liczba zaktualizowanych wierszy: %2'[_MDB.NAME,$_cnt])
   || __UPG.msg('Wystąpił błąd zapisu podczas przetwarzania zbioru "%1".'[_MDB.NAME])
   ?};
   _loop:=(_res<>0 & _MDB.next())
!};
KAL_DEF.trig_on('*','*');
KAL_DEF.cntx_pop();
KAL_ROK.cntx_pop();
_res


\kal_def_typws_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Aktualizacja kolumny TypWS w definicji kalendarza - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja kolumny TypWS w definicji kalendarza.'


\zal_ucp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Zmiany w typach załączników: rezygnacja z "Umowa-zlecenie" na rzecz "Umowa cywilnoprawna".
::       ER/WRT/XP/20.14/2008/0055
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
SLO_TYP.cntx_psh();
SLO_TYP.index('SYMBOL');
SLO_TYP.prefix('ZAL',);
{? SLO_TYP.first()
|| SLO_NAZ.cntx_psh();
   SLO_NAZ.index('NAZWA');
   SLO_NAZ.prefix(SLO_TYP.ref());
   _tz:=obj_new('z','na');
   {! _lp:=1 .. 2
   |! _tz[_lp]:=obj_new('nazwa','ref','count');
      _tz[_lp].nazwa:={? _lp=1 || 'Umowa-zlecenie' || 'Umowa cywilnoprawna' ?};
      {? SLO_NAZ.find_key(_tz[_lp].nazwa,)
      || _tz[_lp].ref:=SLO_NAZ.ref();
         _tz[_lp].count:=SLO_NAZ.count()
      || _tz[_lp].ref:=null();
         _tz[_lp].count:=0
      ?}
   !};
   {? _tz.z.ref=null()
::    Jeżeli _tz.z.ref=null(), to właściwie nic nie musimy robić. Moglibyśmy założyć _tz.na (jeżeli nie istnieje), ale
::    zostanie to zrobione w ramach danych startowych.
   || __UPG.msg('Zmiany w typach załączników nie były konieczne.');
      _ret:=1

   |? _tz.na.ref=null()
::    Przypadek prostszy - nie ma "nowego" typu - wystarczy zmienić nazwę.
   || {? ~SLO_NAZ.seek(_tz.z.ref)
      || __UPG.msg('Odnalezienie typu załącznika nie powiodło się.');
         _ret:=-1
      |? SLO_NAZ.NAZWA:=_tz.na.nazwa;
         ~SLO_NAZ.put()
      || __UPG.msg('Zmiana nazwy typu załącznika z "%1" na "%2" nie powiodła się.' [_tz.z.nazwa,_tz.na.nazwa]);
         _ret:=-1
      || __UPG.msg('Zmiana nazwy typu załącznika z "%1" na "%2" zakończyła się sukcesem.' [_tz.z.nazwa,_tz.na.nazwa]);
         _ret:=1
      ?}

::    Przypadek najtrudniejszy - istnieją obydwa typy.
   || do();
      {? _tz.z.count<_tz.na.count
      || _src:=_tz.z.ref;
         _dest:=_tz.na.ref
      || _src:=_tz.na.ref;
         _dest:=_tz.z.ref
      ?};
::    Pamiętajmy, że SLO_NAZ jest tabelą globalną, ale wykorzystywaną w tabelach lokalnych. Postarajmy się wyeliminować
::    ten z typów, który ma mniej dowiązań. Najpierw w tabeli ZALACZ.
      ZALACZ.cntx_psh();
      ZALACZ.prefix();
      ZALACZ.f_set('TYP_ZAL',,'"ZALACZ".TYP_ZAL=:_a',_src);
      {? ZALACZ.f_first()
      || {!
         |? ZALACZ.TYP_ZAL:=_dest;
            ZALACZ.put();
            ZALACZ.f_next()
         !}
      ?};
      ZALACZ.f_clear();
      ZALACZ.cntx_pop();

::    ZAOTS - tutaj jest jednak indeks unikalny. Może się zdarzyć, że "podmiana" nie byłaby możliwa.
      ZAOTS.cntx_psh();
      ZAOTS.index('SLO_NAZ');
      ZAOTS.prefix();
      ZAOTS.f_set('SLO_NAZ',,'"ZAOTS".SLO_NAZ=:_a',_src);
      {? ZAOTS.f_first()
      || {!
         |? ZAOTS.cntx_psh();
            _jest:=ZAOTS.find_key(_dest,ZAOTS.G,);
            ZAOTS.cntx_pop();
            {? _jest
            || ZAOTS.del()
            || ZAOTS.SLO_NAZ:=_dest;
               ZAOTS.put()
            ?};
            ZAOTS.f_next()
         !}
      ?};
      ZAOTS.f_clear();
      ZAOTS.cntx_pop();

::    ZAOTM - tutaj też jest indeks tymczasowy.
      ZAOTM.cntx_psh();
      ZAOTM.index('MIEJSCER');
      ZAOTM.prefix();
      ZAOTM.f_set('SLO_NAZ',,'"ZAOTM".SLO_NAZ=:_a',_src);
      {? ZAOTM.f_first()
      || {!
         |? ZAOTM.cntx_psh();
            _jest:=ZAOTM.find_key(ZAOTM.MIEJSCE,_dest);
            ZAOTM.cntx_pop();
            {? _jest
            || ZAOTM.del()
            || ZAOTM.SLO_NAZ:=_dest;
               ZAOTM.put()
            ?};
            ZAOTM.f_next()
         !}
      ?};
      ZAOTM.f_clear();
      ZAOTM.cntx_pop();

::    Finalizacja
      _status:='';
      {? SLO_NAZ.seek(_src)
      || {? SLO_NAZ.count()=0
::          Czy można usunąć _src?
         || SLO_NAZ.del();
            {? _src=_tz.na.ref & SLO_NAZ.seek(_tz.z.ref)
::             Czy potrzebna jest zmiana nazwy?
            || SLO_NAZ.NAZWA:=_tz.na.nazwa;
               SLO_NAZ.put()
            ?};
            _status:='KONIEC'
         || _RECS:=SLO_NAZ.testlink();
            _status:={? _RECS.first() || 'DEL-' || 'DEL+' ?}
         ?}
      ?};

      {? end()
      || _ret:=1;
         {? _status='KONIEC'
         || __UPG.msg('Wszystkie zamierzone zmiany w typach załączników zostały wykonane i zakończyły się sukcesem.')
         |? _status='DEL+'
         || __UPG.msg('Zmiany w typach załączników w bieżącej firmie zostały wykonane.')
         |? _status='DEL-'
         || __UPG.msg(
               'Zmian w typach załączników w bieżącej firmie NIE udało się przeprowadzić '
               '(typy załączników wykorzystywane w niestandardowy sposób?).'
            );
            _ret:=-1
         ?}
      || __UPG.msg('Zmiany w typach załączników nie ');
         _ret:=-1
      ?}
   ?};
   SLO_NAZ.cntx_pop()

:: Nie ma SLO_TYP-a. Raczej niemozliwe, ale jeżeli nawet, to nic do robienia.
|| _ret:=1
?};
SLO_TYP.cntx_pop();
_ret


\zal_ucp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Zmiany w typach załączników: rezygnacja z "Umowa-zlecenie" na rzecz "Umowa cywilnoprawna" - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Zmiany w typach załączników: rezygnacja z "Umowa-zlecenie" na rzecz "Umowa cywilnoprawna".'


\ppk_06
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: PR/WRT/XP/12.51/2007/0038 - Brak uwzględnienia deklaracji złożonych między blokadą a wznowieniem grupowym.
::       Usunięcie wpisów procentowych wartości wpłat spowodowanych blokadą ekonomiczną.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
:: Usunięcie składników z wniosków DOWU25, WB25W i WB25B:
_wrd:=spli_str('DOWU25,WB25W,WB25B',',');
PPK_WST.cntx_psh();
PPK_WST.index('UNIQUE');
{! _ii:=1..obj_len(_wrd)
|! _ref:=exec('szukaj','ppk_wrd','U',_wrd[_ii]);
   PPK_WST.prefix(_ref);
   {? PPK_WST.first()
   || {!
      |? PPK_WST.del(1)
      !}
   ?}
!};
PPK_WST.cntx_pop();
obj_del(_wrd);

:: Usunięcie wpisów z PPK_WPW (w efekcie kasowane w wyzwalaczach również PPK_PNW i PPK_PWP)
:: dotyczących deklaracji DOWU25, WB25W i WB25B:
_query:=
   'select PPK_WPW.REFERENCE as REF '+
   'from PPK_WPW '+
   'join PPK_WNU using(PPK_WPW.PPK_WNU, PPK_WNU.REFERENCE) '+
   'join PPK_WRD using(PPK_WNU.PPK_WRD, PPK_WRD.REFERENCE) '+
   'where PPK_WRD.SYMBOL=\'DOWU25\' or PPK_WRD.SYMBOL=\'WB25W\' or PPK_WRD.SYMBOL=\'WB25B\'';
_WPW:=sql(_query);
{? _WPW.first()
|| PPK_WPW.cntx_psh();
   PPK_WPW.prefix();
   {!
   |? {? PPK_WPW.seek(_WPW.REF)
      || PPK_WPW.del(1)
      ?};

      _WPW.next()
   !};
   PPK_WPW.cntx_pop()
?};

:: Przemianowanie na 'O' wpisów z PPK_PWP utworzonych z listy (bez połączenia z wnioskiem),
:: a błędnie oznaczonych literką 'W':
_query:=
   'select PPK_PWP.REFERENCE as REF '+
   'from PPK_PWP '+
   'where PPK_PWP.SR=\'W\' and PPK_PWP.REFERENCE not in (select PPK_PNW.PPK_PWP from PPK_PNW)';
_PWP:=sql(_query);
{? _PWP.first()
|| PPK_PWP.cntx_psh();
   PPK_PWP.prefix();
   {!
   |? {? PPK_PWP.seek(_PWP.REF)
      || PPK_PWP.SR:='O';
         PPK_PWP.put(1)
      ?};

      _PWP.next()
   !};
   PPK_PWP.cntx_pop()
?};

1


\ppk_06_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Usunięcie wpisów procentowych wartości wpłat spowodowanych blokadą ekonomiczną - opis
::----------------------------------------------------------------------------------------------------------------------
'Usunięcie wpisów procentowych wartości wpłat spowodowanych blokadą ekonomiczną.'


\kal_def_dataw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: ER/WRT/XP/20.14/2006/0061
::       Aktualizacja kolumny "Data wyjścia" w definicji kalendarza.
::----------------------------------------------------------------------------------------------------------------------
:: statystyki
_liczba:=0;
_zmiany:=0;
_bledy:=0;

KAL_DEF.trig_off('put','*');
KAL_NAZW.cntx_psh();
KAL_NAZW.index('KAL_CZES');
KAL_NAZW.prefix(exec('ref_firma','ustawienia'),'N');
_loop:=KAL_NAZW.first();
{!
|? _loop
|! KAL_ROK.cntx_psh();
   KAL_ROK.index('KAL_ROK');
   KAL_ROK.prefix(KAL_NAZW.ref());
   _loop:=KAL_ROK.first();
   {!
   |? _loop
   |! KAL_DEF.cntx_psh();
      KAL_DEF.index('KAL_DEF');
      KAL_DEF.prefix(KAL_ROK.ref());
      _loop:=KAL_DEF.first();
      {!
      |? _loop
      |! _liczba+=1;
         {? KAL_DEF.DATA<>KAL_DEF.DATAW
         || {? KAL_DEF.POCZATEK<=KAL_DEF.KONIEC & KAL_DEF.CZAS<time(24,0,0)
            || KAL_DEF.DATAW:=KAL_DEF.DATA;
               {? KAL_DEF.put(1)
               || _zmiany+=1
               || _bledy+=1
               ?}
            ?}
         ?};
         _loop:=KAL_DEF.next()
      !};
      KAL_DEF.cntx_pop();
      _loop:=KAL_ROK.next()
   !};
   KAL_ROK.cntx_pop();
   _loop:=KAL_NAZW.next()
!};
KAL_NAZW.cntx_pop();
KAL_DEF.trig_on('put','*');

__UPG.msg(
   'Przetworzono: %1 zapisów.\n'
   'Zmodyfikowano: %2 zapisów.\n'
   'Wystąpiło %3 błędów.'
   [$_liczba,$_zmiany,$_bledy]
);

{? _bledy=0 || 1 || -1 ?}


\kal_def_dataw_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Aktualizacja kolumny "Data wyjścia" w definicji kalendarza - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja kolumny "Data wyjścia" w definicji kalendarza.'


\pm_budz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Inicjacja tabeli PM_BUDZ.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;

PM_NAG.cntx_psh();
PM_NAG.index('UNIQUE');
PM_NAG.prefix();
{? PM_NAG.first()
|| _stat:=obj_new('poprawiono','niepoprawiono','niewymaga');
   {! _lp:=1 .. obj_len(_stat)
   |! _stat[_lp]:=0
   !};

   PM_RODZ.cntx_psh();
   PM_RODZ.index('UNIQUE');
   PM_RODZ.prefix();
   PM_BUDZ.cntx_psh();
   PM_BUDZ.index('OKRES');
   PM_BUDZ.prefix();
   R.cntx_psh();
   R.prefix();
   _ok:=1;
   {!
   |? {? PM_NAG.PM_BUDZ=null()
      || do();
         PM_BUDZ.prefix(PM_NAG.PM_DYSP,PM_NAG.R);
         _od:=date(PM_NAG.ROK,PM_NAG.MSC,1);
         _budz:=null();
::       Odnalezienie lub utworzenie budżetu.
         {? PM_BUDZ.find_le(_od)
         || _budz:=PM_BUDZ.ref()
         || PM_BUDZ.blank();
            PM_BUDZ.PM_DYSP:=PM_NAG.PM_DYSP;
            PM_BUDZ.R:=PM_NAG.R;
            PM_BUDZ.SYMBOL:='NoLimit (%1)' [$PM_NAG.R().RN];
            PM_BUDZ.OPIS:='Brak limitu';
            PM_BUDZ.OD:=_od;
            {? PM_BUDZ.add()
            || _budz:=PM_BUDZ.ref()
            ?}
         ?};
         {? _budz=null()
         || _stat.niepoprawiono+=1
         || PM_NAG.PM_BUDZ:=_budz;
            {? ~PM_RODZ.find_key(PM_NAG.PM_DYSP,PM_NAG.R)
::             Rodzaj nie został znaleziony - dysponent nie ma już prawa przydzielania danego rodzaju premii.
            || PM_BUDZ.DO:=date(PM_NAG.ROK,PM_NAG.MSC,0)
            ?};
::          Jeżeli nawet nie zaaktualizowaliśmy PM_BUDZ.DO, to PM_BUDZ.put() ma za zadanie zaktualizować sumy.
            {? PM_NAG.put() & PM_BUDZ.put()
            || _stat.poprawiono+=1
            || _stat.niepoprawiono+=1
            ?}
         ?};
         _ok:=end()
      || _stat.niewymaga+=1
      ?};
      _ok & PM_NAG.next()
   !};
   R.cntx_pop();
   PM_BUDZ.cntx_pop();
   PM_RODZ.cntx_pop();

   {? _ok
   || __UPG.msg('Liczba wierszy wymagających poprawienia: %1.' [$(_stat.poprawiono+_stat.niepoprawiono)]);
      __UPG.msg('Liczba wierszy poprawionych: %1.' [$_stat.poprawiono]);
      __UPG.msg('Liczba wierszy, których nie udało się poprawić: %1.' [$_stat.niepoprawiono]);
      __UPG.msg('Liczba wierszy niewymagających poprawienia: %1.' [$_stat.niewymaga]);
      _ret:={? _stat.niepoprawiono>0 || -1 || 1 ?}
   || __UPG.msg('Aktualizacja danych nie powiodła się. Operację należy powtórzyć.');
      _ret:=-1
   ?}

|| __UPG.msg('Moduł premii uznaniowych nie jest używany. Inicjowanie tabeli budżetów nie jest wymagane.');
   _ret:=1
?};
PM_NAG.cntx_pop();

_ret


\pm_budz_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Inicjacja tabeli PM_BUDZ - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Zainicjowanie tabeli budżetów premii uznaniowych.'


\ZS_DEF
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Uzupełnienie zależności służbowych.
::----------------------------------------------------------------------------------------------------------------------
exec('transfer','zs_lib')


\ZS_DEF_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Uzupełnienie zależności służbowych - opis.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie zależności służbowych.'


\PARAMS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Usunięcie parametrów 232, 241 i 244.
::----------------------------------------------------------------------------------------------------------------------
{? ~FUN.ask(
      'Od wartości parametrów zależy działanie zadania odtwarzającego strukturę zależności służbowych.\n'
      'Zaleca się usunięcie parametrów po odtworzeniu i zweryfikowaniu zależności we wszystkich firmach.\n\n'
      'Czy na pewno usunąć parametry 232, 241 i 244?'@
   )
|| __UPG.msg('Zrezygnowano z wykonania zadania.');
   return(-1)
?};

_num:=spli_str('232,241,244',',');
_len:=obj_len(_num);

_err:=0;
PARAMS.cntx_psh();
PARAMS.index('FIRMA');
PARAMS.prefix(null);
{! _ii:=1.._len
|! _val:=#_num[_ii];
   {? PARAMS.find_key(_val)
   || {? PARAMS.del(,1)
      || __UPG.msg('Usunięto parametr %1.'[$_val])
      || __UPG.msg('Błąd usunięcia parametru %1.'[$_val]);
         _err+=1
      ?}
   || __UPG.msg('Brak parametru %1.'[$_val])
   ?}
!};
PARAMS.cntx_pop();

{? _err<>0 || -1 || 1 ?}


\PARAMS_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Usunięcie parametrów 232, 241 i 244 - opis.
::----------------------------------------------------------------------------------------------------------------------
'Usunięcie parametrów 232, 241 i 244.'


\status_pracownika
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [20.42]
:: OPIS: Dodanie statusu pracownika. Uzupełnienie danych o statusach historycznych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_add:="
   SLO_KOD.cntx_psh;
   SLO_KOD.index('KOD');
   SLO_KOD.prefix(_a);
   {? ~SLO_KOD.find_key(_b,_b)
   || SLO_KOD.blank(1);
      SLO_KOD.SLO_TYP:=_a;
      SLO_KOD.KOD:=_b;
      SLO_KOD.NAZWA:=_c;
      SLO_KOD.SYSTEM:='T';
      SLO_KOD.add
   ?};
   SLO_KOD.cntx_pop";

_ok:=0;
: Statusy listy płac
{? (_typ:=exec('slo_typ','ext_slo','P_STAT'))<>null()
|| _add(_typ,'LIST_MOD','Modyfikacja danych na liście płac.');
   __UPG.msg('Dodano nowy typ: P_STAT do słownika uniwersalnego.');
   _ok:=1
?};

{? _ok
|| _param:=exec('get_par','#parametr',266);
   {? type_of(_param)<>type_of('') || return(0) ?};
   {? +_param=10 & #(4+_param)>0 & #(2+(5-_param))>0
   || _param:=date(#(4+_param),#(2+(5-_param)),1)
   || _param:=date(0,0,0)
   ?};
   {? _param=date(0,0,0) || return(1) ?};

   _rok:=_param~1;
   _mc:=_param~2;

   O.cntx_psh();
   P.cntx_psh();
   LS.cntx_psh();
   _firma:=exec('ref_firma','ustawienia');
   _ndx:=O.ndx_tmp(,1,'FIRMA',,,'F_ZATR','KOD',,'R',,,'M',,,'D',,);
   O.index(_ndx);
   O.prefix(_firma,'P');
   _elim:="
      _prac:='';
      {? _a.first()
      || {!
         |? {? _a.P=_prac
            || _a.STATUS:=1;
               _a.put()
            || _prac:=_a.P
            ?};
            _a.next()
         !}
      ?}";
:: wykasowanie pozycji tabeli wg wskazanego statusu
   _del:="
      {? _a.first()
      || {! |? {? _a.STATUS=_b || _a.del(,1)=2 || _a.next() ?} !}
      ?}";
   _sql:="sql('
      select distinct LS.P, LS.MOD_DATA D, LS.MOD_CZAS T, LS.MOD_KTO KTO, 0 STATUS
      from LS join O
      where O.REFERENCE = :_a
      order by 1,2,3
      ',_a)";
   P.prefix();
   {? O.find_le(_rok,_mc)
   || {!
      |? LS.use(O.LT);
         LS.prefix();
         {? LS.first
         || {? var_pres('_tab')>100 || obj_del(_tab) ?};
            _tab:=_sql(O.ref);
:: eliminacja powtarzających się rekordów dla pracownika na liście pomimo distinct
            _elim(_tab);
            _del(_tab,1);
            {? _tab.first
            || {!
               |? {? P.seek(_tab.P,)
                  || exec('del_P_STAT','pracownik',P.ref,'LIST_MOD',O.ref());
                     exec('put_P_STAT','pracownik',P.ref,'LIST_MOD',_tab.D,_tab.T,O.ref(),
                        'Naliczono składniki listy płac.')
                  ?};
                  _tab.next
               !};
               _ok+=1
            ?}
         ?};
         O.next
      !};
      {? _ok>1
      || __UPG.msg('Uzupełniono informacje historyczne w statusach dla pracownika.')
      ?}
   ?};
   O.ndx_drop(_ndx);
   LS.cntx_pop();
   O.cntx_pop();
   P.cntx_pop()
?};
_ok>0


\status_pracownika_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [20.42]
:: OPIS: Dodanie statusu pracownika. Uzupełnienie danych o statusach historycznych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Wprowadzenie statusu pracownika. Uzupełnienie danych o statusach historycznych.'


\users_osoba_unique
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Weryfikacja unikalności powiązania użytkownika i osoby.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Używam "join" a nie "left join", bo interesują mnie tylko uzytkownicy z uzupełnionym polem OSOBA.
_TAB:=sql(
   'select USERS.OSOBA, OSOBA.NAZWISKO, OSOBA.PIERWSZE '
   'from USERS join OSOBA using (USERS.OSOBA,OSOBA.REFERENCE) '
   'group by USERS.OSOBA, OSOBA.NAZWISKO,OSOBA.PIERWSZE '
   'having count(*)>1 '
   'order by OSOBA.NAZWISKO, OSOBA.PIERWSZE'
);
{? _TAB.first()
|| __UPG.msg('Podczas weryfikacji znaleziono osoby powiązane z więcej niż jednym użytkownikiem.');
   __UPG.msg('Dane WYMAGAJĄ naprawy. Należy doprowadzić do unikalności powiązania użytkownika i osoby.');
   __UPG.msg('Lista osób niespełniających założeń unikalności:');
   {!
   |? __UPG.msg(' * %1 %2' [_TAB.NAZWISKO,_TAB.PIERWSZE]);
      _TAB.next()
   !};
   -1
|| __UPG.msg('Wszystkie powiązania są unikalne.');
   1
?}


\users_osoba_unique_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Weryfikacja unikalności powiązania użytkownika i osoby - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Weryfikacja unikalności powiązania użytkownika i osoby.'


\users_fz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [19.22]
:: OPIS: Aktualizacja uprawnień użytkowników do form współpracy.
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask(
      'Uwaga! Zadanie należy wykonywać tylko w ramach procedury transferu systemu z wersji Xpertis do Merit\n'
      'Czy rozpocząć aktualizację uprawnień użytkowników do form współpracy?\n'
      '\n'
      'Tak - aktualizacja zostanie rozpoczęta; operacja może być długotrwała\n'
      'Nie - zadanie pozostanie na liście zadań i będzie je można wykonać w późniejszym czasie.'@
   )
|| {? exec('users_fz','transfer',1)
   || __UPG.msg('Użytkownik %1 zdecydował o aktualizacji uprawnień użytkowników do form współpracy.' [exec('operatorKod','#users')]);
      1
   || __UPG.msg('Użytkownik %1 zdecydował o o pominięciu wykonania zadania. Możliwe będzie późniejsze wykonanie zadania.' [exec('operatorKod','#users')]);
      0
   ?}
|| {? FUN.ask(
         'Czy rezygnujesz (również w przyszłości) z wykonania tego zadania?\n'
         '\n'
         'Tak - zadanie zostanie oznaczone jako "Wykonane" i nie będzie już można go uruchomić.\n'
         'Nie - zadanie pozostanie na liście zadań i będzie je można wykonać w późniejszym czasie.'@
      )
   || __UPG.msg('Użytkownik %1 zdecydował o pominięciu wykonania zadania.' [exec('operatorKod','#users')]);
      1
   || __UPG.msg('Użytkownik %1 pozostawił zadanie do późniejszego wykonania.' [exec('operatorKod','#users')]);
      0
   ?}
?}


\users_fz_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [ARTSLO] [19.22]
:: OPIS: Aktualizacja uprawnień użytkowników do form współpracy. - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja uprawnień użytkowników do form współpracy.'


\ctrlParFisk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Zadanie manualne - kontrola parametrów fiskalnych
::----------------------------------------------------------------------------------------------------------------------
_res:=-1;
_txt:='W przypadku korzystania z urządzeń fiskalnych należy skontrolować poprawność ich ustawień:\n'
  '1.Obszar: Ustawienia i parametryzacja>Sprzedaż>Parametry fiskalne.\n'
  '2.Zaktualizować pole TRYB OTWARCIA (sekcja KOMUNIKACJA) - formułą zgodną z systemem Merit.'@;
_opc:=FUN.choice(_txt,0,'Sprawdzono'@,'Nie wymaga'@);
{? _opc>0
|| {? _opc=1
   || __UPG.msg('Użytkownik %1 sprawdził parametry fiskalne.'[exec('operatorKod','#users')])
   || __UPG.msg('Użytkownik %1 stwierdził, że nie jest wymagana kontrola parametrów fiskalnych.'[exec('operatorKod','#users')])
   ?};
   _res:=1
?};
_res


\ctrlParFisk_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Zadanie manualne - kontrola parametrów fiskalnych - opis
::----------------------------------------------------------------------------------------------------------------------
'Kontrola ustawień parametrów fiskalnych.\n'
'W przypadku korzystania z urządzeń fiskalnych należy skontrolować poprawność ich ustawień:\n'
'- Obszar: Ustawienia i parametryzacja>Sprzedaż>Parametry fiskalne.\n'
'- Zaktualizować pole TRYB OTWARCIA (sekcja KOMUNIKACJA) - formułą zgodną z systemem Merit.'


\abs_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Aktualizacja znaczników AbStore
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Czy dla tabel: Słownik materiałów, Grupy materiałów, Kontrahenci,
   \nGrupy kontrahentów, Odbiorcy kontrahenta, Osoby kontaktowe,
   \nwyłączyć znaczniki integracji z AbStore?'@,,'&Tak','&Nie');

{? _choice=1
||
   VAR_DEL.delete('__lrec','__lmod');
   __lrec:=__lmod:=0;
:: Słownik materiałów
   M.cntx_psh();
   M.prefix();
   M.for_each("
   __lrec+=1;
   {? M.ABSTORE<>'' | M.ABSTOREC<>'' || M.ABSTORE:=''; M.ABSTOREC:=''; {? M.put() || __lmod+=1 ?} ?}
   ",1);
   M.cntx_pop();
:: Grupy materiałów
   MGR.cntx_psh();
   MGR.prefix();
   MGR.for_each("
   __lrec+=1;
   {? MGR.ABSTORE<>'' | MGR.ABSTOREC<>'' || MGR.ABSTORE:=''; MGR.ABSTOREC:=''; {? MGR.put() || __lmod+=1 ?} ?}
   ",1);
   MGR.cntx_pop();
:: Kontrahenci
   KH.cntx_psh();
   KH.prefix();
   KH.for_each("
   __lrec+=1;
   {? KH.ABSTORE<>'' || KH.ABSTORE:=''; {? KH.put() || __lmod+=1 ?} ?}
   ",1);
   KH.cntx_pop();
:: Grupy kontrahentów
   GRKH.cntx_psh();
   GRKH.prefix();
   GRKH.for_each("
   __lrec+=1;
   {? GRKH.ABSTORE<>'' || GRKH.ABSTORE:=''; {? GRKH.put() || __lmod+=1 ?} ?}
   ",1);
   GRKH.cntx_pop();
:: Odbiorcy kontrahenta
   KH_ODB.cntx_psh();
   KH_ODB.prefix();
   KH_ODB.for_each("
   __lrec+=1;
   {? KH_ODB.ABSTORE<>'' || KH_ODB.ABSTORE:=''; {? KH_ODB.put() || __lmod+=1 ?} ?}
   ",1);
   KH_ODB.cntx_pop();
:: Osoby kontaktowe
   KH_OSOB.cntx_psh();
   KH_OSOB.prefix();
   KH_OSOB.for_each("
   __lrec+=1;
   {? KH_OSOB.ABSTORE<>'' || KH_OSOB.ABSTORE:=''; {? KH_OSOB.put() || __lmod+=1 ?} ?}
   ",1);
   KH_OSOB.cntx_pop();

   __UPG.msg('Zaktualizowano znaczniki AbStore.');
   __UPG.msg('Przetworzono: %1 rekordów, z czego zmodyfikowano: %2.'[$__lrec,$__lmod]);
   VAR_DEL.delete('__lrec','__lmod')
|? _choice=2
||
   __UPG.msg('Nie zaktualizowano znaczników AbStore.')
|? _choice=0
||
   return(-1)
?}


\abs_upd_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Aktualizacja znaczników AbStore
::----------------------------------------------------------------------------------------------------------------------
'Zadanie dla klientów nie korzystających z AbStore, które wyłącza znaczniki integracji dla tabel:
Słownik materiałów, Grupy materiałów, Kontrahenci, Grupy kontrahentów, Odbiorcy kontrahenta, Osoby kontaktowe.'


\SM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Aktualizacja stanów magazynowych
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_msk:=SM.names();
_msk.clear();
{? _msk.first()
|| SM.cntx_psh();
   {!
   |? SM.use(_msk.NAME);
      SM.prefix();
      _res:=SM.for_each("
         _put:=0;
         __lrec+=1;
         {? SM.J2=null()
         || {? SM.M().J2=null()
            || SM.J2:=SM.M().J
            || SM.J2:=SM.M().J2
            ?};
            _put:=1
         ?};
         {? SM.SM2='' || _put:=1; SM.SM2:={? SM.J2=SM.M().J2 || 'T' || 'N' ?} ?};
         {? _put || {? SM.put() || __lmod+=1 ?} ?}
      ");
      _msk.next()
   !};
   SM.cntx_pop()
?};
obj_del(_msk);
__UPG.msg('Zaktualizowano drugą jednostkę ewidencyjną w kartotekach stanu magazynu.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\SM_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Aktualizacja stanów magazynowych - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja drugiej jednostki ewidencyjną w kartotekach stanu magazynu.'


\ZK_RN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Aktualizacja danych związanych z realizacjami zamówień sprzedaży i wewnętrznych
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');

__lrec:=__lmod:=0;
ZK_RN.cntx_psh();
_msk:=ZK_RN.names();
_msk.prefix();
{? _msk.first()
|| {!
   |? ZK_RN.use(_msk.NAME);
      ZK_RN.prefix();
      ZK_RN.for_each("__lrec+=1;
                      _put:=0;
                      {? ZK_RN.DND=date(0,0,0) & ZK_RN.ND<>''
                      || ZK_RN.DND:=exec('FindAndGet','#table',ND,ZK_RN.ND,,\"D\",date(0,0,0));
                         _put:=1
                      ?};
                      {? ZK_RN.DFK=date(0,0,0) & ZK_RN.FAKS<>''
                      || ZK_RN.DFK:=exec('FindAndGet','#table',FAKS,ZK_RN.FAKS,,\"DW\",date(0,0,0));
                         _put:=1
                      ?};
                      {? _put & ZK_RN.put(1) || __lmod+=1 ?}",0);
      _msk.next()
   !}
?};
ZK_RN.cntx_pop();
obj_del(_msk);

__UPG.msg('Zaktualizowano realizacje zamówień sprzedaży i wewnętrznych.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\ZK_RN_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Aktualizacja danych związanych z realizacjami zamówień sprzedaży i wewnętrznych - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja danych związanych z realizacjami zamówień sprzedaży i wewnętrznych'


\ZD_RN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Aktualizacja danych związanych z realizacjami zamówień dostaw
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');

__lrec:=__lmod:=0;
ZD_RN.cntx_psh();
_msk:=ZD_RN.names();
_msk.prefix();
{? _msk.first()
|| {!
   |? ZD_RN.use(_msk.NAME);
      ZD_RN.prefix();
      ZD_RN.for_each("__lrec+=1;
                      _put:=0;
                      {? ZD_RN.DND=date(0,0,0) & ZD_RN.ND<>''
                      || ZD_RN.DND:=exec('FindAndGet','#table',ND,ZD_RN.ND,,\"D\",date(0,0,0));
                         _put:=1
                      ?};
                      {? ZD_RN.DFK=date(0,0,0) & ZD_RN.FAKS<>''
                      || ZD_RN.DFK:=exec('FindAndGet','#table',FAKS,ZD_RN.FAKS,,\"DW\",date(0,0,0));
                         _put:=1
                      ?};
                      {? _put & ZD_RN.put(1) || __lmod+=1 ?}",0);
      _msk.next()
   !}
?};
ZD_RN.cntx_pop();
obj_del(_msk);

__UPG.msg('Zaktualizowano realizacje zamówień sprzedaży i wewnętrznych.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\ZD_RN_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Aktualizacja danych związanych z realizacjami zamówień sprzedaży i wewnętrznych - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja danych związanych z realizacjami zamówień sprzedaży i wewnętrznych'


\PX_KONT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Uzupełnia pola w tabeli PX_KONT
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_formula:="
   __lrec+=1;
   _put:=0;
   {? PX_KONT.CAPFOVW1=''
   || PX_KONT.CAPFOVW1:='N';
      _put:=1
   ?};
   {? PX_KONT.CAPFOVW2=''
   || PX_KONT.CAPFOVW2:='N';
      _put:=1
   ?};
   {? PX_KONT.CAPFOVW3=''
   || PX_KONT.CAPFOVW3:='N';
      _put:=1
   ?};
   {? PX_KONT.CAPFOVW4=''
   || PX_KONT.CAPFOVW5:='N';
      _put:=1
   ?};
   {? PX_KONT.CAPFOVW5=''
   || PX_KONT.CAPFOVW5:='N';
      _put:=1
   ?};
   {? _put || {? PX_KONT.put(1) || __lmod+=1 ?} ?}
";
PX_KONT.cntx_psh();
PX_KONT.prefix();
_result:=PX_KONT.for_each(_formula,1);
PX_KONT.cntx_pop();
{? _result
|| __UPG.msg('Zaktualizowano zasoby planu strategicznego.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji zasobów planu strategicznego.')
?};
VAR_DEL.delete('__lrec','__lmod');
_result


\PX_KONT_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.14]
:: OPIS: Uzupełnia pola w tabeli PX_KONT - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zasobów planu strategicznego.'


\B_TIMER
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.14]
:: OPIS: Uzupełnia pola w tabeli B_TIMER
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_formula:="
   __lrec+=1;
   _put:=0;
   {? B_TIMER.SINGLE=''
   || B_TIMER.SINGLE:='N';
      _put:=1
   ?};
   {? _put || {? B_TIMER.put(1) || __lmod+=1 ?} ?}
";
B_TIMER.cntx_psh();
B_TIMER.prefix();
_result:=B_TIMER.for_each(_formula,1);
B_TIMER.cntx_pop();
{? _result
|| __UPG.msg('Zaktualizowano definicje zdarzeń czasowych.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji zdarzeń czasowych.')
?};
VAR_DEL.delete('__lrec','__lmod');
_result


\B_TIMER_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.14]
:: OPIS: Uzupełnia pola w tabeli B_TIMER - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja definicji zdarzeń czasowych.'


\B_HARM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.14]
:: OPIS: Uzupełnia pola w tabeli B_HARM
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_formula:="
   __lrec+=1;
   _put:=0;
   {? B_HARM.SINGLE=''
   || B_HARM.SINGLE:='N';
      _put:=1
   ?};
   {? _put || {? B_HARM.put(1) || __lmod+=1 ?} ?}
";
B_HARM.cntx_psh();
B_HARM.prefix();
_result:=B_HARM.for_each(_formula,1);
B_HARM.cntx_pop();
{? _result
|| __UPG.msg('Zaktualizowano harmonogramy.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji harmonogramów.')
?};
VAR_DEL.delete('__lrec','__lmod');
_result


\B_HARM_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.14]
:: OPIS: Uzupełnia pola w tabeli B_HARM - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja harmonogramu.'


\GROPS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.14]
:: OPIS: Uzupełnia pola w tabeli GROPS (GROPS.IL, GROPS.PLAN, GROPS.ILW)
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

:: Odtworzenie ilości planowanej
_result:=1;
GROPS.trig_off('*','*');
GROP.cntx_psh(); GROPS.cntx_psh();
GROP.prefix();
{? GROP.first()
|| {!
   |? GROPS.index('GROP');
      GROPS.prefix(GROP.ref());
::    Jedyny rekord - od razu zaplanowany na całość
      {? GROPS.size()=1
      || {? GROPS.first()
         || _put:=1;
            {? GROPS.IL=0 || GROPS.IL:=GROP.IL; _put:=1 ?};
            {? GROPS.PLAN='' || GROPS.PLAN:='T'; _put:=1 ?};
            {? _put || GROPS.put() ?}
         ?}
::    Więcej niż jeden rekord - zakładamy, że planowany jest pierwszy
      || {? GROPS.first()
         || _first:=1;
            {!
            |? _put:=0;
               {? GROPS.IL=0 & _first || GROPS.IL:=GROP.IL; _put:=1 ?};
               {? GROPS.PLAN=''
               || {? _first
                  || {? GROPS.AKC='T' || GROPS.PLAN:='T' || GROPS.PLAN:='P' ?}
                  || GROPS.PLAN:='N'
                  ?};
                  _put:=1
               ?};
               {? _put || GROPS.put() ?};
               _first:=0;
               GROPS.next()
            !}
         ?}
      ?};
      GROP.next()
   !}
?};
GROP.index('KOD');
GROP.prefix();
_result:=GROP.for_each("
   _put:=0;
   _can_continue:=1;
   GROPS.prefix(GROP.ref(),'',);
   _set_first:=0;
   _size:=GROPS.size();
   {? GROPS.first()
   || _set_first:=1;
      {!
      |? GROPS.cntx_psh();
         GROPS.prefix();
         GROPS.DEFAULT:='N';
         _can_continue:=GROPS.put();
         GROPS.cntx_pop();
         GROPS.first() & _can_continue>0
      !}
   ?};
   GROPS.prefix(GROP.ref(),'N',);
   {? _can_continue>0 & _set_first>0 & GROPS.first()
   || GROPS.cntx_psh();
      GROPS.prefix();
      GROPS.DEFAULT:='T';
      _can_continue:=GROPS.put();
      GROPS.cntx_pop()
   ?};
   _can_continue
",0);
GROPS.prefix();
_result:=GROPS.for_each("
   _put:=0;
   __lrec1+=1;
   {? GROPS.IDEAN=''
   || GROPS.IDEAN:=exec('bl_idean','kody_kresk',GROPS);
      _put:=1
   ?};
   {? _put || {? GROPS.put() || __lmod1+=1 ?} ?}
",0);
GROP.cntx_pop(); GROPS.cntx_pop();
GROPS.trig_on('*','*');
{? _result
|| __UPG.msg('Zaktualizowano ilość planowaną na stanowiskach grup operacji.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
?};

:: Odtworzenie ilości wykonanej
_result:=exec('odtworz_ilw','zl_grop',0);
{? _result
|| __UPG.msg('Odtworzono ilość wykonaną na grupach operacji i stanowiskach grup operacji.')
?};

VAR_DEL.delete('__lrec','__lmod');
_result


\GROPS_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.14]
:: OPIS: Uzupełnia pola w tabeli GROPS - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnia pola w tabeli stanowisk grup operacji.'


\samk_time
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Uzupełnia pola TIME w tabelach SAMK, SAMKOSZ i P_KAP
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

_formula:="
   __lrec+=1;
   _put:=0;
   {? SAMK.GP<>0 & SAMK.GP_T=time(0,0,0)
   || exec('fld_real2time','karty_drog','SAMK','GP_T');
      _put:=1
   ?};
   {? SAMK.GJ<>0 & SAMK.GJ_T=time(0,0,0)
   || exec('fld_real2time','karty_drog','SAMK','GJ_T');
      _put:=1
   ?};
   {? SAMK.GN<>0 & SAMK.GN_T=time(0,0,0)
   || exec('fld_real2time','karty_drog','SAMK','GN_T');
      _put:=1
   ?};
   {? SAMK.GR<>0 & SAMK.GR_T=time(0,0,0)
   || exec('fld_real2time','karty_drog','SAMK','GR_T');
      _put:=1
   ?};
   {? SAMK.GI<>0 & SAMK.GI_T=time(0,0,0)
   || exec('fld_real2time','karty_drog','SAMK','GI_T');
      _put:=1
   ?};
   {? SAMK.GU<>0 & SAMK.GU_T=time(0,0,0)
   || exec('fld_real2time','karty_drog','SAMK','GU_T');
      _put:=1
   ?};
   {? SAMK.PR_DOD_P<>0 & SAMK.PR_DOD_T=time(0,0,0)
   || exec('fld_real2time','karty_drog','SAMK','PR_DOD_T');
      _put:=1
   ?};
   {? SAMK.PR_DOD_D<>0 & SAMK.PR_DO2_T=time(0,0,0)
   || exec('fld_real2time','karty_drog','SAMK','PR_DO2_T');
      _put:=1
   ?};
   {? _put
   || {? SAMK.put(1)
      || __lmod+=1
      ?}
   ?}
";
SAMK.cntx_psh();
SAMK.prefix();
_result:=SAMK.for_each(_formula,1);
SAMK.cntx_pop();

{? _result
|| _formula:="
      __lrec+=1;
      _put:=0;
      {? SAMKOSZ.CZAS<>0 & SAMKOSZ.CZAS_T=time(0,0,0)
      || exec('fld_real2time','karty_drog','SAMKOSZ','CZAS_T');
         _put:=1
      ?};
      {? _put
      || {? SAMKOSZ.put(1)
         || __lmod+=1
         ?}
      ?}
   ";
   SAMKOSZ.cntx_psh();
   SAMKOSZ.prefix();
   _result:=SAMKOSZ.for_each(_formula,1);
   SAMKOSZ.cntx_pop()
?};


{? _result
|| _formula:="
      __lrec+=1;
      _put:=0;
      {? P_KAP.N50<>0 & P_KAP.N50_T=time(0,0,0)
      || exec('fld_real2time','karty_drog','P_KAP','N50_T');
         _put:=1
      ?};
      {? P_KAP.N100<>0 & P_KAP.N100_T=time(0,0,0)
      || exec('fld_real2time','karty_drog','P_KAP','N100_T');
         _put:=1
      ?};
      {? P_KAP.GN<>0 & P_KAP.GN_T=time(0,0,0)
      || exec('fld_real2time','karty_drog','P_KAP','GN_T');
         _put:=1
      ?};
      {? P_KAP.IL<>0 & P_KAP.IL_T=time(0,0,0)
      || exec('fld_real2time','karty_drog','P_KAP','IL_T');
         _put:=1
      ?};
      {? _put
      || {? P_KAP.put(1)
         || __lmod+=1
         ?}
      ?}
   ";
   P_KAP.cntx_psh();
   P_KAP.prefix();
   _result:=P_KAP.for_each(_formula,1);
   P_KAP.cntx_pop()
?};

{? _result
|| __UPG.msg('Zaktualizowano karty drogowe, koszty i karty pracy.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji kart drogowych, kosztów i kart pracy.')
?};
VAR_DEL.delete('__lrec','__lmod');
_result


\samk_time_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Uzupełnia pola TIME w tabelach SAMK, SAMKOSZ i P_KAP - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja kart drogowych, kosztów i kart pracy.'


\projekty_etapy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Transfer z Xpertis informacji o projektach do tabel  PROJEKTY, PROJUSR, PR_KOS.
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod','__ladd','__lupr','__lkos');
__lrec:=__lmod:=__ladd:=__lupr:=__lkos:=0;

{? REF.FIRMA=null()
|| REF.FIRMA:=exec('firma_ref','#firma',app_info('app_ident'))
?};
::Przepisanie brakujących wartości do nagłówków projektów
exec('tra2PRJ','upgradexperti1');

POM.cntx_psh();
POM.TAB:='PROJEKTY';
POM.NRT:=0;

PROJEKTY.cntx_psh();
PROJEKTY.index('FIRMA');
PROJEKTY.prefix();
__ndx:=PROJEKTY.ndx_tmp(,,'FIRMA',,,'RODZIC',,,'NAZWA',,);
PROJEKTY.for_each("
__lrec+=1;
_put:=0;

{? PROJEKTY.FIRMA=null() || PROJEKTY.FIRMA:=REF.FIRMA; _put:=1 ?};
{? PROJEKTY.KOL='' || PROJEKTY.KOL:=('001'+(207*'0'));_put:=1 ?};
{? PROJEKTY.RODZIC='' || PROJEKTY.RODZIC:=PROJEKTY.IDADD;_put:=1 ?};
{? PROJEKTY.ID_KSG=0 || PROJEKTY.ID_KSG:=exec('bl_proj_id_ksg','!zws_par_kprr') ?};
{? PROJEKTY.ID_WEW='' || PROJEKTY.ID_WEW:=(((7*'0')+$PROJEKTY.ID_KSG)+8); _put:=1 ?};
{? PROJEKTY.UPR='' || PROJEKTY.UPR:='N'; _put:=1 ?};
{? PROJEKTY.ID_KSG=0 || PROJEKTY.ID_KSG:=exec('bl_proj_id_ksg','!zws_par_kprr') ?};
{? PROJEKTY.NR=0 & PROJEKTY.T<>null()
|| POM.TYPDOK:=PROJEKTY.T().KOD;
   exec('wol_nr','numery','PROJEKTY');
   _put:=1
?};
{? _put & PROJEKTY.put() || __lmod+=1 ?};

:: uporządkowanie starych meritowych projektów i etapów
{? PROJEKTY.POZ_PROJ=0
|| do();
   PROJEKTY.cntx_psh();
   PROJEKTY.index('KOL');
   PROJEKTY.prefix(PROJEKTY.FIRMA, PROJEKTY.IDADD);
   {? PROJEKTY.first()
   ||
      {!|?
         PROJEKTY.POZ_PROJ+=1;
         PROJEKTY.put(1);
         PROJEKTY.next()
      !}
   ?};
   PROJEKTY.cntx_pop();
   exec('clean_tree','projekty_view',PROJEKTY.FIRMA, PROJEKTY.IDADD);
   exec('clean_tree','projekty_view',PROJEKTY.FIRMA, PROJEKTY.IDADD);
   PROJEKTY.get();
   end()
?};

:: uporządkowanie xpetisowych etapów
PROJETAP.cntx_psh();
PROJETAP.index('WYK');
PROJETAP.prefix(PROJEKTY.ref());

{? PROJETAP.first()
||
   {!|?
      PROJEKTY.cntx_psh();
      PROJEKTY.index(__ndx);
      PROJEKTY.prefix(PROJEKTY.FIRMA,PROJEKTY.RODZIC,80+(PROJETAP.SYMBOL+' '+PROJETAP.OPIS),);
      _first:=PROJEKTY.first();
      PROJEKTY.cntx_pop();

      {? ~_first & PROJETAP.TREE_REF=0
      ||
         _proj_ref:=exec('projekty_dol_etap','!zws_par_kprr',,0,80+(PROJETAP.SYMBOL+' '+PROJETAP.OPIS));
         PROJEKTY.cntx_psh();
         PROJEKTY.prefix();
         {? PROJEKTY.seek(_proj_ref)
         ||
            __ladd+=1;
            PROJEKTY.SZEF:=PROJETAP.OSOBA;
            PROJEKTY.HAN:=PROJETAP.OSOBA;
            PROJEKTY.put(1)
         ?};
         PROJEKTY.cntx_pop();
:: sprawdzenie zleceń czy jeszcze tu nie jest coś podpięte
         ZL.cntx_psh();
         ZL.index('PROJEKTE');
         ZL.prefix(PROJEKTY.ref(),PROJETAP.ref());
         PROJEKTY.cntx_psh();
         {? ZL.first()
         || {!|?
               PROJEKTY.prefix();
               _proj_ref_zl:={? PROJEKTY.seek(_proj_ref)
                             || exec('projekty_dol_etap','!zws_par_kprr',,0,80+(ZL.SYMZ+' '+ZL.OPIS))
                             || null()
                             ?};
               {? _proj_ref_zl<>null() & PROJEKTY.seek(_proj_ref_zl)
               ||
                  __ladd+=1;
                  PROJEKTY.SZEF:=ZL.OSOBA;
                  PROJEKTY.HAN:=ZL.OSOBA;
                  PROJEKTY.put(1)
               ?};
               ZL.next()
            !}
         ?};
         PROJEKTY.cntx_pop();
         ZL.cntx_pop()
      |? ~_first
      ||
         _tree_ref:=PROJETAP.TREE_REF;
         _prefix:='';
         _first_etap:=0;
         PROJETAP.cntx_psh();
         PROJETAP.prefix();
         PROJEKTY.cntx_psh();
         PROJEKTY.index(__ndx);
         {? PROJETAP.seek(_tree_ref)
         ||
            PROJEKTY.prefix(PROJEKTY.FIRMA,PROJEKTY.RODZIC,80+(PROJETAP.SYMBOL+' '+PROJETAP.OPIS),);
            _first_etap:=PROJEKTY.first()
         ?};
         PROJETAP.cntx_pop();
         {? _first_etap
         ||
            _proj_ref:=exec('projekty_dol_etap','!zws_par_kprr',,0,80+(PROJETAP.SYMBOL+' '+PROJETAP.OPIS));
            PROJEKTY.prefix();
            {? PROJEKTY.seek(_proj_ref)
            ||
               __ladd+=1;
               PROJEKTY.SZEF:=PROJETAP.OSOBA;
               PROJEKTY.HAN:=PROJETAP.OSOBA;
               PROJEKTY.put(1)
            ?}
         ?};
         PROJEKTY.cntx_pop();
:: sprawdzenie zleceń czy jeszcze tu nie jest coś podpięte
         ZL.cntx_psh();
         ZL.index('PROJEKTE');
         ZL.prefix(PROJEKTY.ref(),PROJETAP.ref());
         PROJEKTY.cntx_psh();
         {? ZL.first()
         || {!|?
               PROJEKTY.prefix();
               _proj_ref_zl:={? PROJEKTY.seek(_proj_ref)
                             || exec('projekty_dol_etap','!zws_par_kprr',,0,80+(ZL.SYMZ+' '+ZL.OPIS))
                             || null()
                             ?};
               {? _proj_ref_zl<>null() & PROJEKTY.seek(_proj_ref_zl)
               ||
                  __ladd+=1;
                  PROJEKTY.SZEF:=ZL.OSOBA;
                  PROJEKTY.HAN:=ZL.OSOBA;
                  PROJEKTY.put(1)
               ?};
               ZL.next()
            !}
         ?};
         PROJEKTY.cntx_pop();
         ZL.cntx_pop()
      ?};
      PROJETAP.next()
   !}
?};
PROJETAP.cntx_pop()

",1);
PROJEKTY.cntx_pop();
POM.cntx_pop();

::Przypisanie uprawnień
PROJUPR.cntx_psh();
PROJUPR.prefix();
PROJUSR.cntx_psh();
PROJUSR.prefix();
PROJUPR.for_each(
"
PROJUSR.blank();
PROJUSR.PROJEKTY:=PROJUPR.PROJEKTY;
PROJUSR.USERS:=PROJUPR.USERS;
{? PROJUSR.add(1) || __lupr+=1 ?}
"
);
PROJUPR.cntx_pop();
PROJUSR.cntx_pop();

:: przypisanie kosztów projektów
exec('czytaj','#stalesys',,XINFO);
VAR_DEL.delete('__slo_mat','__slo_usl','__slo_rob','__slo_spr');
__slo_mat:=null();
__slo_usl:=null();
__slo_rob:=null();
__slo_spr:=null();
{? XINFO.SLU_GK=null()
||
   SLU.cntx_psh();
   SLU.index('NAZ');
   SLU.prefix('Grupy_kosztów',);
   {? SLU.first()
   || XINFO.SLU_GK:=SLU.ref(); exec('zapisz','#stalesys',date(),XINFO)
   || SLU.prefix();
      SLU.blank();
      SLU.NAZ:='Grupy_kosztów';
      SLU.OP:='Grupy_kosztów';
      {? SLU.add(1)
      ||
         SLO.cntx_psh();
         SLO.blank();
         SLO.KOD:='MAT';
         SLO.TR:='Materiał';
         SLO.SLU:=SLU.ref();
         {? SLO.add(1) || __slo_mat:=SLO.ref() ?};
         SLO.blank();
         SLO.KOD:='USL';
         SLO.TR:='Usługa';
         SLO.SLU:=SLU.ref();
         {? SLO.add(1) || __slo_usl:=SLO.ref() ?};
         SLO.blank();
         SLO.KOD:='ROB';
         SLO.TR:='Robocizna';
         SLO.SLU:=SLU.ref();
         {? SLO.add(1) || __slo_rob:=SLO.ref() ?};
         SLO.blank();
         SLO.KOD:='SPR';
         SLO.TR:='Sprzęt';
         SLO.SLU:=SLU.ref();
         {? SLO.add(1) || __slo_spr:=SLO.ref() ?};
         SLO.cntx_pop()
      ?}
   ?};
   SLU.cntx_pop()
?};

PROJRMS.cntx_psh();
_names:=PROJRMS.names();
{? _names.first() & (_names.size()>0)
||
   {!|?
      PROJRMS.use(_names.NAME);
      PROJRMS.prefix();
      PROJRMS.for_each("
      ZL.cntx_psh();
      PROJETAP.cntx_psh();
      PROJEKTY.cntx_psh();
      FIRMA.cntx_psh();
      {? PROJRMS.ZL<>null() & PROJRMS.ZL().PROJETAP<>null()& PROJRMS.ZL().PROJETAP().PROJEKTY<>null()
      & PROJRMS.ZL().PROJETAP().PROJEKTY().FIRMA=REF.FIRMA
      ||
         PR_KOS.cntx_psh();
         PR_KOS.prefix();
         PR_KOS.blank();

         PROJEKTY.index(__ndx);
         PROJEKTY.prefix(PROJRMS.ZL().PROJETAP().PROJEKTY().FIRMA,
         PROJRMS.ZL().PROJETAP().PROJEKTY().RODZIC,80+(PROJRMS.ZL().SYMZ+' '+PROJRMS.ZL().OPIS),);
         PR_KOS.PROJEKTY:={? PROJEKTY.first() || PROJEKTY.ref() || null() ?};
         PR_KOS.OPIS:=100+PROJRMS.SYM+' '+PROJRMS.OPIS;
         PR_KOS.GR_K:={? PROJRMS.TYP='M' || __slo_mat
                      |? PROJRMS.TYP='R' || __slo_rob
                      |? PROJRMS.TYP='U' || __slo_usl
                      |? PROJRMS.TYP='S' || __slo_spr
                      || null()
                      ?};
         PR_KOS.M:=PROJRMS.M;
         PR_KOS.IL:=PROJRMS.ILOSC;
         exec('jakislsv','ustawienia');
         PR_KOS.SV:={? SLO.find_key(SLU.ref(); ' 0 %') || SLO.ref() || null() ?};
         PR_KOS.CN:=PR_KOS.CB:=PROJRMS.STAWKA;
         PR_KOS.WN:=PR_KOS.WB:=PROJRMS.WART_BN;
         {? PR_KOS.add(1) || __lkos+=1 ?};
         PR_KOS.cntx_pop()
      ?};
      ZL.cntx_pop();
      PROJETAP.cntx_pop();
      PROJEKTY.cntx_pop();
      FIRMA.cntx_pop()
      ");
      _names.next()
   !}
?};
PROJRMS.cntx_pop();
PROJEKTY.ndx_drop(__ndx);
VAR_DEL.delete('__slo_mat','__slo_usl','__slo_rob','__slo_spr','__ndx');

__UPG.msg('Zaktualizowano projekty dla prawidłowej obsługi etapów, identyfikatorów wewnętrznych, uprawnień.');
__UPG.msg('Przetworzono: %1 zapisów z tabeli projektów, z czego zmodyfikowano: %2 zapisów.
Przeniesiono rekordy: %3 jako etapy, %4 jako uprawnienia do nich, a %5 jako koszty.'
[$__lrec,$__lmod,$__ladd,$__lupr,$__lkos]);
VAR_DEL.delete('__lrec','__lmod','__ladd','__lupr','__lkos');
_res


\projekty_etapy_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Transfer z Xpertis informacji o projektach do tabel  PROJEKTY, PROJUSR, PR_KOS.
::----------------------------------------------------------------------------------------------------------------------
'Transfer z Xpertis informacji o projektach do tabel  PROJEKTY, PROJUSR, PR_KOS.'


\footer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Dodanie możliwości wybrou loga firmy w stopce dokumentu
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
exec('slo_kod','dane_startowe');
__UPG.msg('Dodano możliwość wyboru loga firmy w stopce dokumentu.');
_res


\footer_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Dodanie możliwości wybrou loga firmy w stopce dokumentu.
::----------------------------------------------------------------------------------------------------------------------
'Dodanie możliwości wyboru loga firmy w stopce dokumentu.'


\term_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Dodanie parametru dla form płatności: Czy drukować termin płatności?
::----------------------------------------------------------------------------------------------------------------------
_res:=1;

RS.cntx_psh();
RS.index('RS');
RS.prefix();
{? RS.find_key('~Płatności')
|| exec('new_par','slo_slu',RS.ref(),7,'Czy drukować termin płatności?','TAK_NIE')
?};
RS.cntx_pop();

__UPG.msg('Dodano nowy parametr w Formach płatności.');
_res


\term_plat_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Dodanie parametru dla form płatności: Czy drukować termin płatności?
::----------------------------------------------------------------------------------------------------------------------
'Dodanie parametru dla form płatności: Czy drukować termin płatności?'


\dokum_arch_firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: Aktualizacja danych w zakresie mechanizmu archiwizacji dokumentów (DOKUM) - firma
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
:: DOKTYP
DOKTYP.cntx_psh();
DOKTYP.use('doktyp');
DOKTYP.cntx_psh();
DOKTYP.prefix();
DOKTYP.for_each("
   __lrec+=1;
:: aktualizuje trigger na tabeli DOKTYP
   {? DOKTYP.put() || __lmod+=1 ?}
");
DOKTYP.cntx_pop();
DOKTYP.cntx_pop();
__UPG.msg('Zaktualizowano dokumenty (DOKUM).');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_result


\dokum_arch_firma_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: Aktualizacja danych w zakresie mechanizmu archiwizacji dokumentów (DOKUM) - firma - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja danych w zakresie mechanizmu archiwizacji dokumentów (DOKUM) - firma.'


\dokum_arch_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: Aktualizacja danych w zakresie mechanizmu archiwizacji dokumentów (DOKUM)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
DOKUM.cntx_psh();
DOKUM.use('dokum');
DOKUM.cntx_psh();
DOKUM.prefix();
DOKUM.for_each("
   __lrec+=1;
   _put:=0;
   {? DOKUM.ONEID='' || DOKUM.ONEID:=exec('oneid','dokum'); _put:=1 ?};
   {? _put & DOKUM.put() || __lmod+=1 ?}
");
EDOK_ATR.cntx_psh();
_Names:=EDOK_ATR.names();
_loop:=_Names.first();
{!
|? _loop
|!
   EDOK_ATR.use(_Names.NAME);
   EDOK_ATR.cntx_psh();
   EDOK_ATR.prefix();
   EDOK_ATR.for_each("
      __lrec+=1;
      {? EDOK_ATR.DOKUM & EDOK_ATR.DOKUMOID=''
      ||
         EDOK_ATR.DOKUMOID:=EDOK_ATR.DOKUM().ONEID;
         EDOK_ATR.DOT:=DOKUM.DOT;
         EDOK_ATR.put()
      ?}
   ");
   EDOK_ATR.cntx_pop();
   _loop:=_Names.next()
!};
EDOK_ATR.cntx_pop();
KN_POZ.cntx_psh();
obj_del(_Names);
_Names:=KN_POZ.names();
_loop:=_Names.first();
{!
|? _loop
|!
   KN_POZ.use(_Names.NAME);
   KN_POZ.cntx_psh();
   KN_POZ.prefix();
   KN_POZ.for_each("
      __lrec+=1;
      {? KN_POZ.DOKUM & KN_POZ.DOKUMOID=''
      ||
         KN_POZ.DOKUMOID:=KN_POZ.DOKUM().ONEID;
         KN_POZ.put()
      ?}
   ");
   KN_POZ.cntx_pop();
   _loop:=_Names.next()
!};
KN_POZ.cntx_pop();
DOKUM.cntx_pop();
DOKUM.cntx_pop();
__UPG.msg('Zaktualizowano dokumenty (DOKUM).');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_result


\dokum_arch_one_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14]
:: OPIS: Aktualizacja danych w zakresie mechanizmu archiwizacji dokumentów (DOKUM) - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja danych w zakresie mechanizmu archiwizacji dokumentów (DOKUM).'


\akt_2042_19
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JAKOLTUN, JASZAFRA [20.42]
:: OPIS: Aktualizacja 20.42_19: Okres izolacji - pandemia koronowirusa
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

_wyn:=_zas:=null();
R.cntx_psh();
R.index('RUBKOD');
R.prefix();
{? R.find_key(7125)
|| _zas:=R.ref()
|| _result:=-1;
   __UPG.msg('Nie znaleziono rubryki 7125')
?};
{? R.find_key(7126)
|| _wyn:=R.ref()
|| _result:=-1;
   __UPG.msg('Nie znaleziono rubryki 7126')
?};
R.cntx_pop();

{? _result>0
||
:: Aktualizacja tabeli kodów nieobecności chorobowych
   KST_CHOR.cntx_psh();
   KST_CHOR.index('KST_CHOR');
   KST_CHOR.prefix();
   {? ~KST_CHOR.find_key(7126)
   || KST_CHOR.WYN:=_wyn;
      KST_CHOR.ZAS:=_zas;
      {? KST_CHOR.add()
      || __UPG.msg('Zakończono aktualizację tabeli kodów nieobecności chorobowych.')
      || _result:=-1;
         __UPG.msg('Nie udało się zaktualizować tabeli kodów nieobecności chorobowych.')
      ?}
   || __UPG.msg('Tabela kodów nieobecności chorobowych jest aktualna.')
   ?};
   KST_CHOR.cntx_pop()
?};

_result


\akt_2042_19_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JAKOLTUN, JASZAFRA [20.42]
:: OPIS: Aktualizacja 20.42_19: Okres izolacji - pandemia koronowirusa
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja 20.42_19: Okres izolacji'


\kart_dod_TARC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [20.42]
:: OPIS: Dodanie kartoteki dla wniosków wyrównań zasiłków chorobowych.
::   WE:
::   WY:
::  OLD: \kart_dod/2042_04.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=-1;
_symbol:='WYR_TARC';

KART_DEF.cntx_psh();
KART_DEF.clear();
KART_DEF.index('SYMBOL');
{? KART_DEF.find_key(_symbol,_symbol)
|| __UPG.msg('Kartoteka dodatkowa "Wyrównanie wypłaconych zasiłków: TARCZA" już istnieje.');
   _result:=1
|| KART_DEF.blank(1);
   KART_DEF.SYMBOL:=_symbol;
   KART_DEF.NAZWA:='Wyrównanie wypłaconych zasiłków: TARCZA';
   KART_DEF.WER:='ODDO';
   KART_DEF.OPIS:='Opis';
   KART_DEF.OD:='Data od';
   KART_DEF.DO:='Data do';

   {? KART_DEF.add(1)
   || _update:="
         {? ~(_put:=SLO_KOD.find_key(_a,_b,))
         || SLO_KOD.blank(1);
            SLO_KOD.SLO_TYP:=_a;
            SLO_KOD.KOD:=_b
         ?};
         _zmiana:=0;
         {? SLO_KOD.NAZWA<>_c
         || SLO_KOD.NAZWA:=_c;
            _zmiana+=1
         ?};
         {? var_pres('_d')=type_of('') & SLO_KOD.SYSTEM<>_d
         || SLO_KOD.SYSTEM:=_d;
            _zmiana+=1
         ?};
         {? SLO_KOD.SYSTEM<>'N' & SLO_KOD.SYSTEM<>'T'
         || SLO_KOD.SYSTEM:='N';
            _zmiana+=1
         ?};
         {? _put
         || {? _zmiana
            || SLO_KOD.put()
            ?}
         || SLO_KOD.add()
         ?}
      ";

      SLO_KOD.cntx_psh();
      SLO_KOD.index('KOD');
      SLO_KOD.prefix();
:     Statusy przebiegu zatrudnienia
      _typ:=exec('slo_typ','ext_slo','H_STAT');
      _update(_typ,'T_ZM_WYM','Tarcza antykryzysowa - zmiana wymiaru zatrudnienia','T');
      _update(_typ,'T_ZM_WAR','Tarcza antykryzysowa - zmiana stawki wynagrodzenia','T');
      SLO_KOD.cntx_pop();

      __UPG.msg('Kartoteka dodatkowa "Wyrównanie wypłaconych zasiłków: TARCZA" została dodana.');
      _result:=1
   || __UPG.msg('Dodanie kartoteki dodatkowej "Wyrównanie wypłaconych zasiłków: TARCZA" zakończone niepowodzeniem.')
   ?}
?};
KART_DEF.cntx_pop();
_result


\kart_dod_TARC_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [20.42]
:: OPIS: Dodanie kartoteki dla wniosków wyrównań zasiłków chorobowych - opis.
::   WE:
::   WY:
::  OLD: \kart_dod_desc/2042_04.fml
::----------------------------------------------------------------------------------------------------------------------
'Dodanie kartoteki dodatkowej: Wyrównanie wypłaconych zasiłków: TARCZA'


\new_fld_P
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [21.14]
:: OPIS: Uzupełnienie wartości w nowych polach tabeli P.
::  OLD: \oddelegowania/upgrade_1842.fml
::       \p/upgrade_2042_02.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
:: Aktualizacja danych w tabeli pracowników.
P.cntx_psh();
P.index('OSOZATR');
P.prefix();
{? P.first()
|| _por:=exec('lic','#b_domain','POR');
   _stat:=obj_new('ok','poprawiono','niepoprawiono');
   {! _lp:=1 .. obj_len(_stat)
   |! _stat[_lp]:=0
   !};
   P.trig_off('*','*');
   FUN.prg_start(P.size(),'Aktualizacja pól: "Oddelegowanie", "Portal" w tabeli pracowników.'@,,,1);
   {!
   |? FUN.prg_next();
      _fld_q:=0;

      {? P.ODDEL<>'T' & P.ODDEL<>'N'
      || P.ODDEL:='N'
      || _fld_q+=1
      ?};
      {? P.PORTAL=''
      || P.PORTAL:={? _por || P.ZA || 'N' ?}
      || _fld_q+=1
      ?};
      {? _fld_q=2
      || _stat.ok+=1
      || {? P.put(1)
         || _stat.poprawiono+=1
         || _stat.niepoprawiono+=1
         ?}
      ?};
      P.next()
   !};
   FUN.prg_stop();
   P.trig_on('*','*');

   {? _stat.niepoprawiono
   || _result:=-1
   ?};
   __UPG.msg('Liczba zapisów poprawnych (niewymagających uzupełnienia): %1' [$_stat.ok]);
   __UPG.msg('Liczba zapisów, które udało się uzupełnić: %1' [$_stat.poprawiono]);
   __UPG.msg('Liczba zapisów, których NIE udało się uzupełnić: %1' [$_stat.niepoprawiono])
|| __UPG.msg('Brak danych do aktualizacji w tabeli pracowników.')
?};
P.cntx_pop();
_result


\new_fld_P_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [21.14]
:: OPIS: Uzupełnienie wartości w nowych polach tabeli P - opis.
::  OLD: \oddelegowania_desc/upgrade_1842.fml
::       \p_desc/upgrade_2042_02.fml
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie nowych pól w tabeli współpracowników (P).'


\new_fld_O
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [21.14]
:: OPIS: Uzupełnienie nowych pól w tabeli O (dla wszystkich firm).
::  OLD: \o/upgrade_2042_02.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
O.cntx_psh();
O.index('LISTYMIE');
O.prefix();
{? O.first()
|| _stat:=obj_new('ok','poprawiono','niepoprawiono');
   {! _lp:=1 .. obj_len(_stat)
   |! _stat[_lp]:=0
   !};
   O.trig_off('*','*');
   FUN.prg_start(O.size(),'Aktualizacja pól: "Portal" w tabeli O.'@,,,1);
   {!
   |? FUN.prg_next();
      {? O.PORTAL=''
      || O.PORTAL:='N';
         {? O.put(1)
         || _stat.poprawiono+=1
         || _stat.niepoprawiono+=1
         ?}
      || _stat.ok+=1
      ?};
      O.next()
   !};
   FUN.prg_stop();
   O.trig_on('*','*');
   {? _stat.niepoprawiono
   || _ret:=-1
   ?};
   __UPG.msg('Liczba zapisów poprawnych (niewymagających uzupełnienia): %1' [$_stat.ok]);
   __UPG.msg('Liczba zapisów, które udało się uzupełnić: %1' [$_stat.poprawiono]);
   __UPG.msg('Liczba zapisów, których NIE udało się uzupełnić: %1' [$_stat.niepoprawiono])

|| __UPG.msg('Brak danych do aktualizacji w tabeli O.')
?};
O.cntx_pop();
_ret


\new_fld_O_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [21.14]
:: OPIS: Uzupełnienie nowych pól w tabeli O (dla wszystkich firm) - opis.
::  OLD: \o_desc/upgrade_2042_02.fml
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie nowych pól w tabeli nagłówków list płac (O).'


\wnurl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła uzupełnianjąca identyfikator wniosku urlopowego.
::  OLD: \wnurl/upgrade_2042_02.fml
::       formuła jest zdefiniowana oddzielnie a nie w \sch_imp/upgradexpertis.fml bo chcemy by wykonala sie tylko jak
::       jest licencja na POR
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
_nazwa:='Wniosek urlopowy (HR Portal)';
ETYPY.cntx_psh();
ETYPY.index('UNIK');
ETYPY.prefix(exec('add','typ_ob','Obieg wniosków'),_nazwa,);
{? ETYPY.first()
|| {? ETYPY.ID_WP=''
   || ETYPY.trig_off('*','*');
      ETYPY.ID_WP:='WniosekUrlopowy';
      {? ETYPY.put()
      || __UPG.msg('Uzupełnienie identyfikatora wniosku zakończone sukcesem.')
      || __UPG.msg('Uzupełnienie identyfikatora wniosku nie powiodło się.');
         _ret:=-1
      ?};
      ETYPY.trig_on('*','*')
   || __UPG.msg('Identyfikator wniosku jest już uzupełniony.')
   ?}
|| __UPG.msg('"%1" - brak typu dokumentu w obiegu.')
?};
ETYPY.cntx_pop();
_ret


\wnurl_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła uzupełnianjąca identyfikator wniosku urlopowego - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie identyfikatora wniosku urlopowego'


\PKALSYNC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Dodanie zapisów do synchronizacji kalendarzy pracowników z HR Portal (zgodnie z okresem retencji)
::  OLD: \PKALSYNC/upgrade_2042_02.fml
::  OLD: \PKALSYNC/upgrade_2114.fml
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
P.use('pracowni');
P.index('PRACONAZ');
P.prefix();
P.for_each("exec('update4P','pkalsync',date((date()~1)-exec('retentionPersonWorkSchedule','portal_lib'),1,1))",1);
P.cntx_pop();
__UPG.msg('Dodano zapisy do synchronizacji kalendarzy pracowników z HR Portal (zgodnie z okresem retencji).');
1


\PKALSYNC_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Dodanie słowników wykorzystywanych na portalu (zgodnie z okresem retencji) - opis
::----------------------------------------------------------------------------------------------------------------------
'Dodanie zapisów do synchronizacji kalendarzy pracowników z HR Portal (zgodnie z okresem retencji).'


\porslo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Dodanie słowników wykorzystywanych na portalu
::  ORG: \porslo/upgrade_2042.fml
::  ORG: \porslo/upgrade_2226.fml
::----------------------------------------------------------------------------------------------------------------------
exec('init','portal_slowniki','J');
exec('init','portal_slowniki','W');
__UPG.msg('Dodano słowniki portalowe.');
1


\porslo_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Dodanie słowników wykorzystywanych na portalu - opis
::----------------------------------------------------------------------------------------------------------------------
'Dodanie słowników wykorzystywanych na portalu.'


\slo_wn_pap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Aktualizacja typów załączników - usunięcie typu "Wniosek papierowy".
::       Dodatkowo zmiana przypisania dotychczasowo zapisannych załączników akt osobowych z "Wniosku papierowego"
::       na "Wniosek z załącznikiem" (zmiana nazewnictwa).
::----------------------------------------------------------------------------------------------------------------------
_result:=-1;
_typ_papier:='Wniosek papierowy';
_typ_zzalacz:=exec('_wn_zzal','portal_walidacja').name;
_needsUpdating:=1;
_typ:=exec('FindInSet','#table','SLO_TYP','SYMBOL','ZAL','ZAL',,1,,null);
{? _typ<>null
|| _naz_papier:=exec('FindInSet','#table','SLO_NAZ','NAZWA',_typ_papier,_typ,,1,_typ_papier,null);
   _naz_zzalacz:=exec('FindInSet','#table','SLO_NAZ','NAZWA',_typ_zzalacz,_typ,,1,_typ_zzalacz,null);
   {? _naz_papier<>null
   || _errMsg:='Aktualizacja typów załączników zakończona niepowodzeniem.';
      _continue:=1;
      do();
      {? _naz_zzalacz<>null
      || ZALACZ.cntx_psh();
         SLO_NAZ.cntx_psh();
         SLO_NAZ.index('NAZWA'); SLO_NAZ.clear();
         ZALACZ.index('TYP_ZAL');
         _firma:=exec('ref_firma','ustawienia');
         ZALACZ.prefix(_firma,_naz_papier);
         _howMany:=ZALACZ.size();
         ZALACZ.prefix(_firma);
         _loop:=ZALACZ.find_key(_naz_papier);
         {? _loop & SLO_NAZ.seek(_naz_zzalacz,,1)
         || _processed:=0;
            {! _loop
            |?
               ZALACZ.TYP_ZAL:=SLO_NAZ.ref();
               _processed+=ZALACZ.put();
               _loop:=ZALACZ.find_key(_naz_papier)
            !};
            {? _processed<>_howMany || _continue*=0 ?}
         ?};
         SLO_NAZ.cntx_pop();
         {? _continue
         || _oper_zao:=0;
            _zaoh:=null;
            ZAOTS.cntx_psh(); ZAOH.cntx_psh();
            ZAOTS.index('SLO_NAZ');
            ZAOTS.prefix(_naz_papier);
            {? ZAOTS.find_key('Z')
            || _zaoh:=ZAOTS.ZAOH().ref();
               _oper_zao:=ZAOTS.del(,1)
            || _oper_zao:=1
            ?};
            {? _oper_zao<1
            || _continue*=0
            || {? _zaoh<>null & exec('FindInSet','#table','ZAOTS','SLO_NAZ','Z',_naz_zzalacz,,1,,null)=null()
                  & ZAOH.seek(_zaoh,,1) & SLO_NAZ.seek(_naz_zzalacz,,1)
               || ZAOTS.prefix(); ZAOTS.blank();
                  ZAOTS.ZAOH:=ZAOH.ref();
                  ZAOTS.SLO_NAZ:=SLO_NAZ.ref();
                  _continue:=ZAOTS.add()
               ?};
               {? _continue
               || _oper:=exec('FindInSet','#table','SLO_NAZ','NAZWA',
                     _typ_papier,_typ,"@.SLO_NAZ.del(,1)",1,_typ_papier,~~);
                  {? type_of(_oper)=type_of(0) & _oper>0
                  || __UPG.msg('Typy załączników zostały zaktualizowane.');
                     _result:=1
                  || _continue*=0
                  ?}
               ?}
            ?};
            ZAOH.cntx_pop();
            ZAOTS.cntx_pop()
         ?};
         ZALACZ.cntx_pop()
      || _errMsg+=' ';
         _errMsg+='Nie udało się odnaleźć typu %1'[_typ_zzalacz];
         _continue*=0
      ?};
      {? ~_continue
      || undo();
         __UPG.msg(_errMsg)
      ?};
      end()
   || _needsUpdating*=0
   ?}
|| _needsUpdating*=0
?};
{? ~_needsUpdating
|| __UPG.msg('Typy załączników nie wymagały aktualizacji.');
   _result:=1
?};
_result


\slo_wn_pap_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Aktualizacja typów załączników - usunięcie typu "Wniosek papierowy" - opis.
::----------------------------------------------------------------------------------------------------------------------
'Usunięcie z typów załączników wniosku papierowego (obowiązuje nowa nazwa: "Wniosek z załącznikiem").'


\ZZ_DOKZ_fill
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [21.14]
:: OPIS: Uzupełnienie nowych pól w tabeli ZZ_DOKZ.
::  OLD: \hash_fill/upgrade_2042_02.fml
::  OLD: \zz_dokz/upgrade_2114.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
ZZ_DOKZ.cntx_psh();
ZZ_DOKZ.prefix();
{? ZZ_DOKZ.first()
|| _stat:=obj_new('ok','bad','poprawiono','niepoprawiono');
   {! _lp:=1 .. obj_len(_stat)
   |! _stat[_lp]:=0
   !};
   ZZ_DOKZ.trig_off('*','*');
   FUN.prg_start(ZZ_DOKZ.size(),'Aktualizacja pól: "HASH", "SIZE" w tabeli ZZ_DOKZ.'@,,,1);
   {!
   |?
      _fld_q:=0;
      {? ZZ_DOKZ.PLIK=null()
      || _stat.bad+=1
      || {? ZZ_DOKZ.SIZE=0
         || ZZ_DOKZ.SIZE:=ZZ_DOKZ.bl_info('PLIK','SIZE')
         || _fld_q+=1
         ?};
         {? ~+ZZ_DOKZ.HASH
         || ZZ_DOKZ.HASH:=exec('hash','#blob',ZZ_DOKZ.PLIK)
         || _fld_q+=1
         ?};
         {? _fld_q=2
         || _stat.ok+=1
         || {? ZZ_DOKZ.put(1)
            || _stat.poprawiono+=1
            || _stat.niepoprawiono+=1
            ?}
         ?}
      ?};
      ZZ_DOKZ.next()
   !};
   FUN.prg_stop();
   ZZ_DOKZ.trig_on('*','*');
   {? _stat.niepoprawiono
   || _ret:=-1
   ?};
   __UPG.msg('Liczba zapisów BEZ załączników (wymagających wyjaśnienia): %1' [$_stat.bad]);
   __UPG.msg('Liczba zapisów poprawnych (niewymagających uzupełnienia): %1' [$_stat.ok]);
   __UPG.msg('Liczba zapisów, które udało się uzupełnić: %1' [$_stat.poprawiono]);
   __UPG.msg('Liczba zapisów, których NIE udało się uzupełnić: %1' [$_stat.niepoprawiono])

|| __UPG.msg('Brak danych do aktualizacji w tabeli ZZ_DOKZ.')
?};
ZZ_DOKZ.cntx_pop();
_ret


\ZZ_DOKZ_fill_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [21.14]
:: OPIS: Uzupełnienie nowych pól w tabeli ZZ_DOKZ - opis
::  OLD: \hash_fill_desc/upgrade_2042_02.fml
::  OLD: \zz_dokz_desc/upgrade_2114.fml
::----------------------------------------------------------------------------------------------------------------------
'Wypełnienie nowych pól kartoteki "Załącznik do dokumentu".'


\typy_kom_list
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Dodanie typu komunikaty dla statusów listy
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_update:="
   {? ~(_put:=SLO_KOD.find_key(_a,_b,))
   || SLO_KOD.blank(1);
      SLO_KOD.SLO_TYP:=_a;
      SLO_KOD.KOD:=_b
   ?};
   _zmiana:=0;
   {? SLO_KOD.NAZWA<>_c
   || SLO_KOD.NAZWA:=_c;
      _zmiana+=1
   ?};
   {? var_pres('_d')=type_of('') & SLO_KOD.SYSTEM<>_d
   || SLO_KOD.SYSTEM:=_d;
      _zmiana+=1
   ?};
   {? SLO_KOD.SYSTEM<>'N' & SLO_KOD.SYSTEM<>'T'
   || SLO_KOD.SYSTEM:='N';
      _zmiana+=1
   ?};
   {? _put
   || {? _zmiana
      || SLO_KOD.put()
      ?}
   || SLO_KOD.add()
   ?}
";

SLO_KOD.cntx_psh();
SLO_KOD.index('KOD');
SLO_KOD.prefix();
: Statusy listy płac
_typ:=exec('slo_typ','ext_slo','LISTAT');
_update(_typ,'KAL_AKT','Aktualizacja danych po zmianie kalendarza.','T');
SLO_KOD.cntx_pop();
_result


\typy_kom_list_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Dodanie typu komunikaty dla statusów listy - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Dodanie pozycji dla statusów listy: KAL_AKT - Aktualizacja danych po zmianie kalendarza.'


\SLO_NAZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.14]
:: OPIS: Uzupełnienie wartości w nowym polu SLO_NAZ.SYSTEM
::  ORG: \SLO_NAZ/upgrade_2114.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
SLO_NAZ.cntx_psh();
SLO_NAZ.prefix();
{? SLO_NAZ.first()
|| SLO_NAZ.trig_off('*','*');
   {!
   |? {? SLO_NAZ.SYSTEM=''
      || SLO_NAZ.SYSTEM:='N';
         SLO_NAZ.put(1)
      ?};

      SLO_NAZ.next()
   !};
   SLO_NAZ.trig_on('*','*')
?};

:: Uzupełnienie wartości systemowych:
_typ:=null();
SLO_TYP.cntx_psh();
SLO_TYP.index('SYMBOL');
SLO_TYP.prefix('ZAL');
{? SLO_TYP.first()
|| _typ:=SLO_TYP.ref()
?};
SLO_TYP.cntx_pop();

{? _typ<>null()
|| _nazy:=spli_str('Umowa o pracę,Aneks do umowy,Informacje podatkowe,Dokument RMUA,Lista płac,'
      'Dokument dla potrzeb GIODO,Dokument IMiR,Świadectwo pracy,Karta ewidencji czasu pracy,Wniosek urlopowy,'
      'Umowa cywilnoprawna',',');
   SLO_NAZ.index('NAZWA');
   SLO_NAZ.prefix(_typ);
   SLO_NAZ.trig_off('*','*');
   {! _ii:=1..obj_len(_nazy)
   |! {? SLO_NAZ.find_key(_nazy[_ii])
      || {? SLO_NAZ.SYSTEM<>'T'
         || SLO_NAZ.SYSTEM:='T';
            SLO_NAZ.put(1)
         ?}
      || SLO_NAZ.blank(1);
         SLO_NAZ.NAZWA:=_nazy[_ii];
         SLO_NAZ.SLO_TYP:=_typ;
         SLO_NAZ.SYSTEM:='T';
         SLO_NAZ.add(1);
         __UPG.msg('Dodano słownik "%1" do kartoteki SLO_NAZ.'[_nazy[_ii]])
      ?}
   !};
   SLO_NAZ.trig_on('*','*')
|| __UPG.msg('Nie znaleziono typu słownika.');
   _ret:=-1
?};
SLO_NAZ.cntx_pop();
__UPG.msg('Uzupełniono wartości w nowym polu SYSTEM kartoteki SLO_NAZ.');

_ret


\SLO_NAZ_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.14]
:: OPIS: Uzupełnienie wartości w nowym polu SLO_NAZ.SYSTEM - opis
::  ORG: \SLO_NAZ_desc/upgrade_2114.fml
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie wartości w nowym polu SYSTEM kartoteki SLO_NAZ.'


\lista_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [21.14]
:: OPIS: Uzupełnienie definicji parametrów list płac
::  ORG: \parametry_list/upgrade_2114.fml
::----------------------------------------------------------------------------------------------------------------------
exec('uzupelnij','lista_par');
__UPG.msg('Uzupełnienie definicji parametrów list płac.');
1


\lista_par_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [21.14]
:: OPIS: Uzupełnienie definicji parametrów list płac - opis.
::  ORG: \parametry_list_desc/upgrade_2114.fml
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie definicji parametrów list płac.'


\rozszerzony_filtr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Uzupełnienie definicji rozszerzonych filtrów.
::  ORG: \rozszerzony_filtr/upgrade_2114.fml
::  ORG: \rozszerzony_filtr/upgrade_2137.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask(
      'Można zaimportować standardowe definicje rozszerzonych filtrów.\n'
      'W tym celu po uruchomieniu importu:\n'
      '1. Wybierz opcję: "Nadpisuj istniejące".\n'
      '2. Wskaż katalog merit\\transfer\\filtry (pamiętaj aby wcześniej wkopiować do niego odpowiednie pliki - patrz nota).\n'
      '3. Zapoznaj się z ewentualnymi komunikatami.\n'
      '4. Zamknij okno z podsumowaniem importu.\n'
      '\n'
      'Czy rozpocząć import?'@
   )
|| exec('import_init','#excel_imex',spli_str('ZWS_PAR_XFL',','));
   {? FUN.ask(
           'Czy import został wykonany?\n'
           '\n'
           'Tak - zadanie zostanie oznaczone jako "Wykonane" i nie będzie już można go uruchomić.\n'
           'Nie - zadanie pozostanie na liście zadań i będzie je można wykonać w późniejszym czasie.'@
      )
   || __UPG.msg('Użytkownik %1 wykonał import konfiguracji.' [exec('operatorKod','#users')]);
      1
   || __UPG.msg('Użytkownik %1 pozostawił zadanie do późniejszego wykonania.' [exec('operatorKod','#users')]);
      0
   ?}
|| {? FUN.ask(
           'Czy rezygnujesz (również w przyszłości) z wykonania tego zadania?\n'
           '\n'
           'Tak - zadanie zostanie oznaczone jako "Wykonane" i nie będzie już można go uruchomić.\n'
           'Nie - zadanie pozostanie na liście zadań i będzie je można wykonać w późniejszym czasie.'@
      )
   || __UPG.msg('Użytkownik %1 zdecydował o pominięciu wykonania zadania.' [exec('operatorKod','#users')]);
      1
   || __UPG.msg('Użytkownik %1 pozostawił zadanie do późniejszego wykonania.' [exec('operatorKod','#users')]);
      0
   ?}
?}


\rozszerzony_filtr_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Uzupełnienie definicji rozszerzonych filtrów - opis.
::  ORG: \rozszerzony_filtr/upgrade_2114.fml
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie definicji rozszerzonych filtrów'


\slimvat_2042_07
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [izfijalk] [20.42]
:: OPIS: Dodanie nowego typu kontaktu z klientem do rejestracji umów o rezygnacji wysyłania potwierdzeń odbioru
::----------------------------------------------------------------------------------------------------------------------
ZDARZT.cntx_psh(); ZDARZT.index('ZDARZT'); ZDARZT.prefix();
RODZINF.index('UNIK'); RODZINF.prefix('Umowa SLIM VAT');
{? ~RODZINF.first() || RODZINF.NAZ:='Umowa SLIM VAT'; RODZINF.add() ?};
_ret:=RODZINF.ref();
{? _ret & ~ZDARZT.find_key('N','UMOWA SLIM VAT')
|| ZDARZT.blank();
   ZDARZT.RODZINF:=RODZINF.ref();
   ZDARZT.SYS:='N';
   ZDARZT.WYB_DAT:=ZDARZT.WYB_OSK:=2;
   ZDARZT.WYB_KW:=ZDARZT.WYB_PRAC:=ZDARZT.WYB_SYM:=0;
   ZDARZT.ZDARZ:='UMOWA SLIM VAT';
   ZDARZT.ICON:='xwin16.png:144';
   _ret:=ZDARZT.add()
|| _ret:=0
?};
ZDARZT.cntx_pop();
{? _ret
|| __UPG.msg('Dodano nowy typ kontaktu UMOWA SLIM VAT')
|| __UPG.msg('Nie dodano typu kontaktu UMOWA SLIM VAT')
?};
1


\slimvat_2042_07_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [izfijalk] [20.42]
:: OPIS: Dodanie nowego typu kontaktu z klientem do rejestracji umów o rezygnacji wysyłania potwierdzeń odbioru
::----------------------------------------------------------------------------------------------------------------------
'Dodanie nowego typu kontaktu z klientem do rejestracji umów o rezygnacji wysyłania potwierdzeń odbioru'


\fiks77
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [20.42_16]
:: OPIS: Aktualizacja pola: Kod Urzedu dla plików JPK_V7
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
ISTDEF.cntx_psh();
ISTDEF.index('JPK'); ISTDEF.prefix('J','V7');
{? ISTDEF.first()
|| {!
   |? ISTDEFS.cntx_psh();
      ISTDEFS.index('OPIS'); ISTDEFS.prefix(ISTDEF.ref(),'KodUrzedu',);
      {? ISTDEFS.first()
      || {!
         |? {? ISTDEFS.REGULY=$"XINFO.URZAD().EDEK_SYM"
            || ISTDEFS.cntx_psh();
               ISTDEFS.REGULY:=$"exec('urzad_jpk','xml')";
               ISTDEFS.put();
               _ok:=1;
               ISTDEFS.cntx_pop()
            ?};
            ISTDEFS.next()
          !}
       ?};
      ISTDEFS.cntx_pop();
      ISTDEF.next()
   !}
?};
ISTDEF.cntx_pop();
{? _ok=1
|| __UPG.msg('Zaktualizowano definicję pliku JPK_V7')
|? _ok=0
|| __UPG.msg('Znaleziona definicja pliku JPK_V7 jest aktualna')
?};
1


\fiks77_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Mapowanie stałych systemu
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja pola \'Kod Urzedu\' dla plików JPK_V7'


\jpk_v7_staleus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Mapowanie stałych
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
exec('init_wer','#stalesys');
KST_ZES.index('SYMBOL');
KST_ZES.prefix();
{? KST_ZES.find_key('XINFO',)
|| KST_MAP.index('SYMBOL');
   KST_MAP.prefix(KST_ZES.ref());
   {? KST_MAP.find_key('US_JPK',)
   || {? KST_MAP.KST_DEF().SYMBOL='KST.US_JPK'
      || _ok:=-1
      || KST_DEF.index('SYMBOL');
         KST_DEF.prefix();
         {? KST_DEF.find_key('KST.US_JPK',)
         || KST_MAP.KST_DEF:=KST_DEF.ref();
            KST_MAP.put();
            _ok:=1
         ?}
      ?}
   ?}
?};
{? _ok>0
|| __UPG.msg('Zmapowano: %1 na %2'['XINFO'+'.'+'US_JPK','KST.US_JPK'])
|? _ok=-1
|| __UPG.msg('Istnieje mapowanie: %1 na %2'['XINFO'+'.'+'US_JPK','KST.US_JPK'])
|| __UPG.msg('Nie udało się mapowanie: %1 na %2'['XINFO'+'.'+'US_JPK','KST.US_JPK'])
?};
_ok


\jpk_v7_staleus_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Mapowanie stałych systemu
::----------------------------------------------------------------------------------------------------------------------
'Uaktualnienie mapy stałych systemu na potrzeby aktualizacji 2014_01\n'
'Dane licencjobiorcy - osoba fizyczna'


\etypy_w_portal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.42]
:: OPIS: Uzupełnia pole W_PORTAL dla tabeli typów dokumentów w obiegu.
::       Nowe pole oznacza, czy typ może być użyty na portalu HR.
::----------------------------------------------------------------------------------------------------------------------
ETYPY.cntx_psh();
ETYPY.index('UNIK');
ETYPY.prefix();
ETYPY.for_each("
   {? ETYPY.W_PORTAL='' || ETYPY.W_PORTAL:='N'; ETYPY.put() ?}
");
ETYPY.cntx_pop();
__UPG.msg('Uzupełniono pole W_PORTAL dla tabeli typów dokumentów w obiegu.');
1


\etypy_w_portal_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.42]
:: OPIS: Uzupełnia pole W_PORTAL dla tabeli typów dokumentów w obiegu.
::       Nowe pole oznacza, czy typ może być użyty na portalu HR.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnia pole W_PORTAL dla tabeli typów dokumentów w obiegu. '
'Nowe pole oznacza, czy typ może być użyty na portalu HR.'


\inwentaryzacja_lt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.14]
:: OPIS: ER/WRT/XP/20.14/2101/0005 - Usunięcie zlikwidowanych środków z istniejących arkuszy inwentaryzacji
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
SRXD.cntx_psh();
exec('maski','srodobj');
SRXD.index('DOK_L');
SRXD.prefix();
_tmp:=tab_tmp(,
               'NRINW','INTEGER', 'Nr inwentaryzacji',
               'DATA','DATE','Data wprowadzenia',
               'NRA','INTEGER','Numer arkusza',
               'JORG','STRING[16]','J. organizacyjna',
               'ODD','STRING[8]','J. księowa',
               'NRI','STRING[20]','Numer',
               'NAZWA','STRING[100]','Nazwa',
               'GR','STRING[1]','Grupa',
               'WARP','REAL','Wart. pod.',
               'WARF','REAL','Wart. bil.',
               'REF','INTEGER','Ref');
{? SRXD.first()
|| {!
   |? _ok:=1;
      {? SRXD.SRXI().STATUS='T' | SRXD.SRXA().STATUS='T'
      || _ok:=0
      ?};
      SRSR.cntx_psh();
      _lt:=0;
      SRSR.index('NRI_O');
      SRSR.prefix(SRXD.ODD,SRXD.KIND,SRXD.NRI);
      {? SRSR.first()
      || SRDO.cntx_psh();
         SRDO.index('RODZOKR');
         SRDO.prefix(SRSR.ref(),SRXD.SRXI().OKRO_F);
         {? SRDO.first()
         || {!
            |? {? SRDO.TYP=FINFO.SRXI_LT
               || _lt:=1
               ?};
               SRDO.next()
            !}
         ?};
         SRDO.cntx_pop()
      ?};
      SRSR.cntx_pop();
      {? _lt=1 & _ok=1
      || _tmp.NRINW:=SRXD.SRXI().NR;
         _tmp.DATA:=SRXD.SRXI().DW;
         _tmp.NRA:=SRXD.SRXA().NR;
         _tmp.JORG:=SRXD.JORG().SYMBOL;
         _tmp.ODD:=SRXD.ODD().OD;
         _tmp.NRI:=SRXD.NRI;
         _tmp.NAZWA:=SRXD.NST;
         _tmp.GR:=SRXD.GR;
         _tmp.WARP:=SRXD.WARP;
         _tmp.WARF:=SRXD.WARF;
         _tmp.REF:=SRXD.ref();
         _tmp.add()
      ?};
      SRXD.next()
   !}
?};
_okienko:=_tmp.mk_sel('Pozycje arkuszy inwentaryzacji - środki zlikwidowane',,0);
_tmp.win_fld(_okienko,,'NRINW',,,5);
_tmp.win_fld(_okienko,,'DATA');
_tmp.win_fld(_okienko,,'NRA');
_tmp.win_fld(_okienko,,'JORG');
_tmp.win_fld(_okienko,,'ODD');
_tmp.win_fld(_okienko,,'NRI');
_tmp.win_fld(_okienko,,'NAZWA',,,40);
_tmp.win_fld(_okienko,,'GR');
_tmp.win_fld(_okienko,,'WARP');
_tmp.win_fld(_okienko,,'WARF');
_tmp.win_sel(_okienko);
{? _tmp.size()>0
|| _tmp.select();
   _pyt:=FUN.choice('Czy usunąć pozycje arkuszy inwentaryzacji?',,'Tak');
   SRXD.index('SRXINRI');
   {? _pyt<>1
   || SRXD.cntx_pop();
      return(-1)
   ?}
|| _pyt2:=FUN.choice('W otwartych arkuszach nie ma nieprawidłowości. \nCzy chcesz odznaczyć zadanie jako wykonane?',,'Tak',,,,'Nie');
   {? _pyt2<>1
   || SRXD.cntx_pop();
      return(-1)
   ?}
?};
{? _tmp.first() & _pyt=1
|| {!
   |? SRXD.prefix();
      {? SRXD.seek(_tmp.REF)
      || SRXD.del()
      ?};
      _tmp.next()
   !}
?};
SRXD.cntx_pop();
1


\inwentaryzacja_lt_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.14]
:: OPIS: Usunięcie zlikwidowanych środków z istniejących arkuszy inwentaryzacji - opis
::----------------------------------------------------------------------------------------------------------------------
'Usunięcie zlikwidowanych środków z istniejących arkuszy inwentaryzacji.'


\KTRWP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Uaktualnienie wartości podziałów controllingowych dla planów amortyzacji
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('oSr');
oSr:=obj_new('TODO','OK');
oSr.TODO:=0;
oSr.OK:=0;
KTRWP.cntx_psh();
SRSR.cntx_psh();
_names:=KTRWP.names();
{? _names.first()
|| VAR_DEL.delete('iSr','nSr');
   iSr:=SRSR.ndx_tmp('',1,'IDADD',,);
   nSr:=SRSR.names();
   {!
   |? echo('Uaktualnienie podziałów dla planów amortyzacji: %1.'[_names.NAME]);
      KTRWP.use(_names.NAME);
      KTRWP.prefix();
      KTRWP.for_each("
         {? +KTRWP.SROD_ID=31
         || oSr.TODO+=1;
            {? nSr.first()
            || {!
               |? SRSR.use(nSr.NAME);
                  SRSR.index(iSr);
                  SRSR.prefix();
                  {? SRSR.find_key(KTRWP.SROD_ID)
                  || KTRWP.SROD_ID:=SRSR.uidref();
                     KTRWP.put();
                     oSr.OK+=1;
                     0
                  || nSr.next()
                  ?}
               !}
            ?}
         ?}
      ");
      _names.next()
   !};
   SRSR.ndx_drop(iSr);
   VAR_DEL.delete('iSr','nSr');
   echo()
?};
KTRWP.cntx_pop();
SRSR.cntx_pop();
__UPG.msg('Liczba podziałów do uaktualnienia: %1.'[$oSr.TODO]);
__UPG.msg('Liczba podziałów uaktualnionych: %1.'[$oSr.OK]);
VAR_DEL.delete('oSr');
1


\dokum_typ_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: Formuła uzupełnia pole TYP_K w tabeli DOKUM na podstawie pola EDOKUMR.
::----------------------------------------------------------------------------------------------------------------------
DOKUM.cntx_psh();
DOKUM.index('DOKUM'); DOKUM.prefix();
{? DOKUM.first()
|| {!
   |? {? DOKUM.TYP_K=''
      || {? DOKUM.EDOKUMR<>''
         || _typ:=exec('FindAndGet','#table',EDOKUM,DOKUM.EDOKUMR,,"@.EDOKUM.TYP().TYPOBIEG().NAZWA",'');
            {? _typ='Obieg faktur'
            || DOKUM.TYP_K:='F'
            |? _typ='Obieg wniosków'
            || DOKUM.TYP_K:='W'
            || DOKUM.TYP_K:='K'
            ?}
         || DOKUM.TYP_K:='K'
         ?};
         DOKUM.put(1)
      ?};
      DOKUM.next()
   !}
?};
DOKUM.cntx_pop();
__UPG.msg('Zaktualizowano wartości pola TYP_K tabeli DOKUM.');
1


\REJ_MAT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Uzupełnia pole ZLGD w tabeli REJ_MAT (do operacji rozpoczętych na e-kiosku)
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

_result:=1;
REJ_MAT.cntx_psh();
REJ_MAT.index('ZL');
REJ_MAT.prefix();
{? REJ_MAT.first()
|| {!
   |?
      __lrec+=1;
      _put:=0;
      {? REJ_MAT.ZLGD=null() & REJ_MAT.RP<>''
      || _prac:=null();
         _bryg:=null();
         {? ref_tab(REJ_MAT.RP)=P
         || _prac:=exec('FindAndGet','#table',P,REJ_MAT.RP,,,null())
         |? ref_tab(REJ_MAT.RP)=ZLBR
         || _bryg:=exec('FindAndGet','#table',ZLBR,REJ_MAT.RP,,,null())
         ?};
         {? _prac<>null() | _bryg<>null()
         || _zlgd:=exec('findZlgdZ','ekioski',REJ_MAT.ZGP,_prac,_bryg,null());
            {? _zlgd<>null()
            || REJ_MAT.ZLGD:=_zlgd;
               _put:=1
            ?}
         ?}
      ?};
      {? _put
      || REJ_MAT.put();
         __lmod+=1
      ?};
      REJ_MAT.next()
   !}
?};
REJ_MAT.cntx_pop();
{? _result
|| __UPG.msg('Zaktualizowano pola rozliczeń surowców do operacji.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
?};

VAR_DEL.delete('__lrec','__lmod');
_result


\REJ_MAT_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Uzupełnia pole ZLGD w tabeli REJ_MAT (do operacji rozpoczętych na e-kiosku) - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnia pola rozliczeń surowców do operacji.'


\PX_GRP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.37]
:: OPIS: Uzupełnia pola w tabeli PX_GRP
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

_result:=1;
PX_GRP.trig_off('*','*');
PX_GRP.cntx_psh();
PX_GRP.index('UID');
PX_GRP.prefix();
{? PX_GRP.first()
|| {!
   |? __lrec+=1;
      _put:=0;
      _mod:=0;
      {? PX_GRP.STRSTART='' & PX_GRP.STREND='' || {? exec('plan_times_upd','px_grp') || _mod:=1 ?} ?};
      {? PX_GRP.SIM_MOD='' || PX_GRP.SIM_MOD:='N'; _put:=1 ?};
      {? PX_GRP.SIM_DEL='' || PX_GRP.SIM_DEL:='N'; _put:=1 ?};
      {? PX_GRP.KIND='' || PX_GRP.KIND:='Z'; _put:=1 ?};
      {? _put || {? PX_GRP.put(1) | _mod || __lmod+=1 ?} |? _mod || __lmod+=1 ?};
      PX_GRP.next()
   !}
?};
PX_GRP.cntx_pop();
PX_GRP.trig_on('*','*');
{? _result
|| __UPG.msg('Zaktualizowano planowane czasy dla grup w kolejce planu.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
?};

VAR_DEL.delete('__lrec','__lmod');
_result


\PX_GRP_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.37]
:: OPIS: Uzupełnia pola w tabeli PX_GRP - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnia pola dla grup w kolejce planu strategicznego'


\kontr_upr_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [21.14_07]
:: OPIS: Formuła dodaje formułę kontrolną dla kontroli rejestrów VAT
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
FORMULA.cntx_psh();
FORMULA.index('FORMULA4');
FORMULA.prefix('G','JPK_UPR',);
{? ~FORMULA.first()
|| FORMULA.blank();
   FORMULA.RODZAJ:='G';
   FORMULA.SKROT:='JPK_UPR';
   FORMULA.NAZWA:='Formuła kon. sprawdza wymagania GTU, procedury oraz MPP';
   FORMULA.FORMULA:='exec(\'jpk_upr\',\'dok_fks1\')';
   {? _ret:=FORMULA.add()
   || __UPG.msg('Dodano formułę JPK_UPR.')
   || __UPG.msg('Nie udało się dodać formuły JPK_UPR.')
   ?}
|| __UPG.msg('Formuła kontrolna JPK_UPR jest już dodana.')
?};
FORMULA.cntx_pop();
_ret


\kontr_upr_add_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14_07]
:: OPIS: Formuła dodaje formułę kontrolną dla kontroli rejestrów VAT - opis.
::----------------------------------------------------------------------------------------------------------------------
'Dodanie formuły kontrolnej dla rejestrów VAT do sprawdzania wymagania GTU, procedury oraz MPP.'


\akt_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [21.14_08]
:: OPIS: Aktualizacja słownika procedur szczególnych.
::----------------------------------------------------------------------------------------------------------------------
exec('init_slo','jpk_v');
__UPG.msg('Zaktualizowano słownik procedur szczególnych')


\akt_proc_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [21.14_08]
:: OPIS: Aktualizacja słownika procedur szczególnych - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja słownika procedur szczególnych'


\fix_por_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.14]
:: OPIS: Naprawia parametr TYPY_DOK czynności rejestracji wniosku w obiegu
::----------------------------------------------------------------------------------------------------------------------
_fix:=0;
_b_ele:=exec('FindInSet','#table','B_ELE','CLASSSYM','OBE_FAW_DARP','B_ACTION',,1);
{? _b_ele
|| B_PROC.cntx_psh();
   B_PROC.index('SYMVER');
   B_PREL.cntx_psh();
   B_PREL.index('PREL');
   B_VALPRT.cntx_psh();
   B_VALPRT.index('PREL');
   FIRMA.cntx_psh();
   FIRMA.index('SYMBOL'); FIRMA.prefix();
   {? FIRMA.first()
   || {!
      |? _fixFirma:=0;
         B_PROC.prefix(FIRMA.ref(),'POR');
         {? B_PROC.first()
         || {!
            |? B_PREL.prefix(B_PROC.ref(),_b_ele);
               {? B_PREL.first()
               || {!
                  |? B_VALPRT.prefix(B_PREL.ref(),'T','IN','TYP_DOK',);
                     {? B_VALPRT.first() & B_VALPRT.VALUE<>'' & B_VALPRT.VALUE*';'=0
                     || B_VALPRT.VALUE+=';'+{? B_VALPRT.VALUE='Wniosek urlopowy (HR Portal)' || 'X' || 'T' ?};
                        B_VALPRT.FORMULA:=exec('val2fml','#convert',B_VALPRT.VALUE,type_of(''));
                        B_VALPRT.put();
                        {? _fix=0
                        || _fix:=1;
                           __UPG.msg('Zmodyfikowano parametr wejściowy TYP_DOK czynności rejestracji wniosku w obiegu w następujących procesach:')
                        ?};
                        {? _fixFirma=0
                        || _fixFirma:=1;
                           __UPG.msg('[Firma %1]'[FIRMA.SYMBOL])
                        ?};
                        __UPG.msg('  - %1 (%2) - %3'[B_PROC.SYMBOL,B_PROC.VER,B_PROC.NAME])
                     ?};
                     B_PREL.next()
                  !}
               ?};
               B_PROC.next()
            !}
         ?};
         FIRMA.next()
      !}
   ?};
   FIRMA.cntx_pop();
   B_VALPRT.cntx_pop();
   B_PREL.cntx_pop();
   B_PROC.cntx_pop()
?};
{? _fix=0
|| __UPG.msg('Nie znaleziono procesów wymagających naprawy.')
?};
1


\fix_por_proc_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.14]
:: OPIS: Naprawia parametr TYPY_DOK czynności rejestracji wniosku w obiegu - opis
::----------------------------------------------------------------------------------------------------------------------
'Naprawia parametr typ wniosku czynności rejestracji wniosku w obiegu.\n'
'Dotyczy procesów używanych na portalu HR (POR*)'


\NIPY
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Uzupełnia pola w tabeli NIPY
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_formula:="
   __lrec+=1;
   _put:=0;
   {? NIPY.DEFAULT=''
   || NIPY.DEFAULT:='N';
      _put:=1
   ?};
   {? _put
   || {? NIPY.put(1)
      || __lmod+=1
      ?}
   ?}
";
NIPY.trig_off('*','*');
NIPY.cntx_psh();
NIPY.prefix();
_result:=NIPY.for_each(_formula,1);
NIPY.cntx_pop();
NIPY.trig_on('*','*');

{? _result
|| __UPG.msg('Zaktualizowano NIP dla płatników UE.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji NIP dla płatników UE.')
?};
VAR_DEL.delete('__lrec','__lmod');
_result


\NIPY_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Uzupełnia pola w tabeli NIPY - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja NIP dla płatników UE'


\JM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Uzupełnia pole JM.DOKL
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_uzjm:=1;

JM.cntx_psh();
JM.index('KOD');
JM.prefix();
{? JM.first()
|| {!
   |? {? JM.DOKL<>0 || _uzjm:=0 ?};
      _uzjm & JM.next()
   !}
?};
{? _uzjm || JM.for_each("__lrec+=1; JM.DOKL:=-1; {? JM.put(1) || __lmod+=1 ?}",1) ?};
JM.cntx_pop();

__UPG.msg('Zaktualizowano jednostki miary.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\JM_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Uzupełnia pole JM.DOKL - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tabeli jednostek miary.'


\DOKUMZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Uzupełnia pola tabeli DOKUMZ
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

_formula:="
   __lrec+=1;
   _put:=0;
   {? DOKUMZ.DOK().BL='T' & DOKUMZ.BL_TYPE='' & -DOKUMZ.bl_info('DOKUM','EXTENSION')='xml'
   || DOKUMZ.BL_TYPE:='INV';
      _put:=1
   ?};
   {? _put
   || {? DOKUMZ.put(1)
      || __lmod+=1;
         1
      ?}
   || 1
   ?}
";
DOKUM.cntx_psh();
DOKUM.use('dokum');
DOKUM.prefix();
DOKUMZ.cntx_psh();
DOKUMZ.prefix();
_result:=DOKUMZ.for_each(_formula,1);
DOKUMZ.cntx_pop();
DOKUM.cntx_pop();

{? _result
|| __UPG.msg('Zaktualizowano załączniki.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji załączników.')
?};
VAR_DEL.delete('__lrec','__lmod');
_result


\DOKUMZ_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Uzupełnia pola w tabeli DOKUMZ - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja załączników.'


\statusy_abstore
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Dodanie statusów AbStore.
::----------------------------------------------------------------------------------------------------------------------
exec('abs_slo','abstore_fun')


\statusy_abstore_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.37]
:: OPIS: Dodanie statusów AbStore.
::----------------------------------------------------------------------------------------------------------------------
'Dodanie statusów AbStore.'


\par_skid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Aktualizacja listy parametrów
::  ORG: \par_skid/upgrade_2137.fml
::  ORG: \par_skid/upgrade_2226.fml
::  ORG: \par_skid/upgrade_rrxx.fml
::----------------------------------------------------------------------------------------------------------------------
exec('PAR_SKID','object');
PAR_SKID.set(115,5,1,'','N','OCR: Dozwolone powielanie plików','''T - tak'',''N - nie''');
::PAR_SKID.set(116,5,1,'','T',
:: 'OCR: Pobierać automatycznie dane z OCR gdy rozpoznanie na wskazanym poziomie','''T - tak'',''N - nie''');
::PAR_SKID.set(117,8,0,'','100','OCR: Procent rozpoznania danych dla pobierania automatycznego');
::PAR_SKID.ae_set(117,"_wart:=#PARAMETR.TRESC;
::                    {? PARAMETR.TRESC='0' | _wart
::                    || {? _wart<0 | _wart>100
::                       || FUN.info('Wprowadź liczbę procent w przedziale 0 - 100.'@)
::                       || 1
::                       ?}
::                    || FUN.info('Wprowadź wartość liczbową.'@)
::                    ?}");
PAR_SKID.set(365,1,1,'','N',
   'Personel: ograniczenie listy współpracowników z uwzględnieniem grup uprawnień','''T'',''N'''
);

PAR_SKID.set(466,8,0,'','BN','SEOD: Typ wartości w Centrum akceptacji');
PAR_SKID.f3_set(466,"exec('par_wart','portal_seod','F3')");
PAR_SKID.ae_set(466,"exec('par_wart','portal_seod','AE')");

__UPG.msg('Zaktualizowano listę parametrów');
1


\par_skid_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Aktualizacja listy parametrów - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja listy parametrów.'


\roznice_kursowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [21.37]
:: OPIS: Uzupełnia znacznik różnic kursowych na rodzaju dokumentu
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.cntx_psh();
DOK_REJ.prefix();
DOK_REJ.for_each("_put:=0;
                  {? DOK_REJ.RK='' || DOK_REJ.RK:='N'; _put:=1 ?};
:: ORG: \FAKFIS/upgrade_2226_15.fml
                  {? DOK_REJ.PUDEK=''
                  || DOK_REJ.PUDEK:={? DOK_REJ.KOR_NAG='T' || 'T' || 'N' ?}; _put:=1
                  ?};
:: ORG: \grvat/upgrade_rrxx.fml
                  {? DOK_REJ.WEW='' || DOK_REJ.WEW:='N'; _put:=1 ?};
                  {? _put || DOK_REJ.put() ?}");
DOK_REJ.cntx_pop();
__UPG.msg('Uzupełniono znacznik różnic kursowych dla rodzajów dokumentów.');
__UPG.msg('Uzupełniono znacznik, czy dokument może nie mieć dekretów.');
__UPG.msg('Uzupełniono znacznik, czy dokument obsługuje operacje wewnątrz grupy VAT.');
KS.cntx_psh();
KS.prefix();
KS.for_each("{? KS.MW='' || KS.MW:='N'; KS.put() ?}");
KS.cntx_pop();
__UPG.msg('Uzupełniono znacznik Magazyn walut dla kont syntetycznych.');

_ret:=0;
FORMULA.cntx_psh();
FORMULA.index('FORMULA4');
_add:="
   FORMULA.prefix(_a,_b,);
   {? ~FORMULA.first()
   || FORMULA.blank(1);
      FORMULA.RODZAJ:=_a;
      FORMULA.SKROT:=_b;
      FORMULA.NAZWA:=_c;
      FORMULA.FORMULA:=_d;
      FORMULA.add()
   ?}
";
_ret+=_add('G','RKBAO_BL','Formuła początkowa, czy naliczono RKB w bież. okresie (blokada)','exec(\'czy_rkb\',\'magwal\')');
_ret+=_add('G','RKBNO_BL','Formuła początkowa, czy naliczono RKB w nast. okresach (blokada)','exec(\'czy_rk\',\'magwal\',3)');
_ret+=_add('G','RK_D_BLO','Formuła początkowa, czy naliczono róznice kursowe w bieżącym dokumencie (blokada)','exec(\'czy_rk\',\'magwal\',2)');
_ret+=_add('G','RK_D_PYT','Formuła początkowa, czy naliczono róznice kursowe w bieżącym dokumencie (pytanie)','exec(\'czy_rk\',\'magwal\',1)');
FORMULA.cntx_pop();
{? _ret
|| __UPG.msg('Dodano formuły kontrolne dla wycofywania dokumentu.')
|| __UPG.msg('Nie dodano formuł kontrolnych dla wycofywania dokumentu.')
?};
_ret:=0;
ROK_F.cntx_psh(); AUTOKSIE.cntx_psh(); FORM.cntx_psh();
ROK_F.index('ROKKON'); ROK_F.prefix();
{? ROK_F.first()
|| {! |?
         AUTOKSIE.index('NAZ'); AUTOKSIE.prefix(ROK_F.ref(),'RKB_FIFO',);
         {? ~AUTOKSIE.first()
         || AUTOKSIE.blank();
            AUTOKSIE.ROK_F:=ROK_F.ref(); AUTOKSIE.NAZ:='RKB_FIFO'; AUTOKSIE.OP:='Wycena środ. pienięż. w walucie na dzień';
            AUTOKSIE.TYP:='P'; AUTOKSIE.FORMPOCZ:='exec(\'pocz_kb\',\'magwal\',\'EUR\',\'134-EUR\')';
            {? AUTOKSIE.add()
            || FORM.blank(); FORM.AUTOKSIE:=AUTOKSIE.ref(); FORM.POZ:=1; FORM.KWN:='759-02-01'; FORM.KMA:='754-02-01';
               {? FORM.add() || FORM.memo_set('exec(\'roz_kb\',\'magwal\')'); FORM.memo_put() ?}; _ret+=1 ?}
            ?};
            ROK_F.next()
   !}
?};
ROK_F.cntx_pop(); AUTOKSIE.cntx_pop(); FORM.cntx_pop();
{? _ret
|| __UPG.msg('Dodano nowy schemat RKB_FIFO dla dokumentu.')
|| __UPG.msg('Schemat RKB_FIFO istnieje w systemie. Nie było konieczności jego dodawania.')
?};
1


\roznice_kursowe_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [21.37]
:: OPIS: Uzupełnia znacznik róznic kursowych na rodzaju dokumentu
::----------------------------------------------------------------------------------------------------------------------
'Przypisanie wartości N dla pola Różnice kursowe w rodzaju dokumentu księgowego. \n'
'Przypisanie wartości N pola Magazyn walut dla konta syntetycznego.\n'
'Dodanie nowych formuł kontrolnych, które warunkują wycofanie dokumentu księgowego.\n'
'Aktualizacja znacznika dokument wewnetrzny na DOK_REJ'


\add_dekr_kornag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [21.37]
:: OPIS: Dekretacja korekt nagłówkowych z logistyki
::----------------------------------------------------------------------------------------------------------------------
FORMULA.cntx_psh();
FORMULA.index('FORMULA4');
_add:="FORMULA.prefix(_a,_b,);
       {? ~FORMULA.first()
       || FORMULA.blank(1);
          FORMULA.RODZAJ:=_a;
          FORMULA.SKROT:=_b;
          FORMULA.NAZWA:=_c;
          FORMULA.FORMULA:=_d;
          FORMULA.add()
       ?}";
_ret:=_add('K','200_KN','Należności - korekty nag.','(3+KONTOTXT)+SEP+POWF+KONTRKN');
{? _ret
|| __UPG.msg('Dodano formułę KONTRKN do listy formuł')
|| __UPG.msg('Formuła KONTRKN istnieje w systemie. Nie było konieczności jej dodawania.')
?};
_ret:=_add('I','FKKOR','Symbol dokumentu korygowanego.','FAKS.KOR');
{? _ret
|| __UPG.msg('Dodano formułę FKKOR do listy formuł')
|| __UPG.msg('Formuła FKKOR istnieje w systemie. Nie było konieczności jej dodawania.')
?};
FORMULA.cntx_pop();

WARLOG.cntx_psh();
WARLOG.index('KKOD');
WARLOG.prefix();
WARLOG.KOD:='KONTRKN';
WARLOG.OPIS:='Rodzaj korekty - czy rozliczane w bieżącym okresie';
WARLOG.FO:='exec(\'nalezn_kn\',\'%fks_dekr_dziedz\')';
WARLOG.DV:='N';
WARLOG.RKW:='D';
WARLOG.TD:='S';
WARLOG.SO:='N';
WARLOG.RODZ:='L';
{? WARLOG.add(1)
|| __UPG.msg('Dodano zmienną KONTRKN do zmiennych dla formuł.')
|| __UPG.msg('Zmienna KONTRKN istnieje w systemie. Nie było konieczności jej dodawania.')
?};
WARLOG.KOD:='FKKOR';
WARLOG.OPIS:='Symbol faktury korygowanej';
WARLOG.FO:='exec(\'faktura_kn\',\'%fks_dekr_dziedz\')';
{? WARLOG.add(1)
|| __UPG.msg('Dodano zmienną FKKOR do zmiennych dla formuł.')
|| __UPG.msg('Zmienna FKKOR istnieje w systemie. Nie było konieczności jej dodawania.')
?};
WARLOG.cntx_pop();
1


\add_dekr_kornag_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [21.37]
:: OPIS: Dekretacja korekt nagłówkowych z logistyki - opis
::----------------------------------------------------------------------------------------------------------------------
'Dodaje formuły niezbędne do dekretacji korekt nagłówkowych z Logistyki'


\kh_dod_dob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.37]
:: OPIS: Aktualizacja nazwy domyślnej obsługi dokumentu Businesslink w kartotece kontrahentów dla faktury w obiegu
::----------------------------------------------------------------------------------------------------------------------
_formula:="{? KH_DOD.BL_ACT='Rejestruj dokument w obiegu'
           || KH_DOD.BL_ACT:='Rejestruj fakturę w obiegu';
              KH_DOD.put()
           ?}";
KH_DOD.cntx_psh();
KH_DOD.prefix();
_result:=KH_DOD.for_each(_formula,1);
KH_DOD.cntx_pop();
{? _result
|| __UPG.msg('Zaktualizowano pole domyślnej obługi dokumentu Businesslink w kartotece kontrahentów (dane dodatkowe dla firmy).')
|| __UPG.msg('Wystąpił błąd podczas aktualizacji pola domyślnej obługi dokumentu Businesslink w kartotece kontrahentów (dane dodatkowe dla firmy).')
?};
_result


\kh_dod_dob_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.37]
:: OPIS: Aktualizacja nazwy domyślnej obsługi dokumentu Businesslink w kartotece kontrahentów dla faktury w obiegu - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja nazwy domyślnej obsługi dokumentu Businesslink w kartotece kontrahentów (dane dodatkowe dla firmy).'


\dks_edi_ufd_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: Aktualizacja formuł komunikatów EDI do odczytu faktur i korekt dokumentów księgowych z businesslink
::----------------------------------------------------------------------------------------------------------------------
_choice:=0;
{! |? (_choice:=FUN.choice(
            'Należy zaaktualizować formuły komunikatów EDI do odczytu faktur i korekt dokumentów księgowych:\n'
            '1. Przejdź do ustawień i parametryzacji->wspólne->wymiana danych->komunikaty EDI.\n'
            '2. Dla komunikatów UFD_DKS* usuń i zaimportuj ponownie formuły.\n'
            'lub\n'
            '1. Uruchom formułę aktualizującą.\n\n'
            'Czy prace opisane powyżej zostały wykonane?'@
            ,0,'Komunikaty EDI'@,'Uruchom formułę'@,'Tak'@,,'Nie'@)); _choice=1 | _choice=2
   |! {? _choice=1
      || exec('edi_def','edi_def','ZWS')
      |? _choice=2
      || exec('dks_edi_ufd_upd_form','upgrade_2137')
      ?}
!};
{? _choice
|| __UPG.msg('Użytkownik %1 potwierdził wykonanie zadania.' [exec('operatorKod','#users')]);
   1
|| __UPG.msg('Użytkownik %1 nie potwierdził wykonania zadania.' [exec('operatorKod','#users')]);
   0
?}


\dks_edi_ufd_upd_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: Aktualizacja formuł komunikatów EDI do odczytu faktur i korekt dokumentów księgowych z businesslink - formuła
::----------------------------------------------------------------------------------------------------------------------
ISTDEF.cntx_psh(); ISTXML.cntx_psh();
ISTDEF.index('K'); ISTDEF.prefix('ZWS','E','UFD_DKS_');
{? ISTDEF.first()
|| _tab:=tab_tmp(,'TEXT','STRING[255]','Tekst','K','STRING[255]','korekta');
   _tab.TEXT:='0936b9e6b2aac3b1a045f1a841ba1caa61b9ce48_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='0936b9e6b2aac3b1a045f1a841ba1caa61b9ce48_f_text___POZF.WN'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='232ca129e36f7d5acad1b527226b91af1bf87b30_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='232ca129e36f7d5acad1b527226b91af1bf87b30_f_text_____KH.DOK.NIP'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='2f3769b47321c6949180ecf5919e2d1d76153f63_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='2f3769b47321c6949180ecf5919e2d1d76153f63_f_text_____KH.DOK.KH_UL'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='38aafff434df3c24b7306c9fc49297bcbed00e87_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='38aafff434df3c24b7306c9fc49297bcbed00e87_f_text_____KH.DOK.KH_M'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='4b89a3f4b4c24a642b621112051374057dac6583_f_text___exec(\'check_jm\',\'edi_fo_ufd\')'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='5e974ea377e071ba1ea5da2585d92e1daf76480a_f_start__exec(\'seller_se\',\'edi_fo_ufd\')'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='5e974ea377e071ba1ea5da2585d92e1daf76480a_f_end____exec(\'seller_ee\',\'edi_fo_ufd\',\'FKS\')'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='5e974ea377e071ba1ea5da2585d92e1daf76480a_is_fld___N'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='7911846a1d11ff737cefd4544a5eff37dc60c85b_f_end____exec(\'pozf_end\',\'edi_fo_ufd\')'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='839d27504890a430314c3585132b46a98cbc0ee4_is_fld___T'; _tab.K:='N'; _tab.add;
   _tab.TEXT:='839d27504890a430314c3585132b46a98cbc0ee4_f_text___VPOZ.BRUTTO'; _tab.K:='N'; _tab.add;
   _tab.TEXT:='ca5b567d43b77219a8bad3e92def11c8b170f5fe_is_fld___T'; _tab.K:='N'; _tab.add;
   _tab.TEXT:='ca5b567d43b77219a8bad3e92def11c8b170f5fe_f_text___VPOZ.BRUTTO'; _tab.K:='T'; _tab.add;
   _tab.TEXT:='927874e45c2d592fd9f9e37ae9bd69cb2a86e859_f_end____exec(\'vpoz_end\',\'edi_fo_ufd\')'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='a376a82ff88b469359c7d1a9b6d8c53a673a1a7f_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='a376a82ff88b469359c7d1a9b6d8c53a673a1a7f_f_text_____KH.DOK.KH_P'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b1df7232d1c081acaaf2b152892af8f4055c2f0a_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b1df7232d1c081acaaf2b152892af8f4055c2f0a_f_text___POZF.WB'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b3b331aaf700c511f64a80dfc754f9811b0280eb_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b3b331aaf700c511f64a80dfc754f9811b0280eb_f_text___POZF.WV'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b7489ab3baca6b8a1502df657f739d4041accf8a_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b7489ab3baca6b8a1502df657f739d4041accf8a_f_text_____KH.DOK.KH_NAZ'; _tab.K:='B'; _tab.add;
   ISTXML.index('TREE');
   {!
   |? ISTXML.prefix(ISTDEF.ref);
      _Hash:=exec('def_hash','edi_xml',ISTDEF.ref,0,'',~~);
      {? _tab.first()
      || {!
         |? {? (ISTDEF.K*'NOTE'>0 & (_tab.K='B' | _tab.K='T')) | (ISTDEF.K*'NOTE'=0 & (_tab.K='B' | _tab.K='N'))
            || _hash:=40+_tab.TEXT;
               _type:=10+(40-_tab.TEXT);
               _text:=50-_tab.TEXT;
               {? _Hash.find_key(_hash)
               || {? ISTXML.seek(_Hash.REF,)
                  || {? _type='_f_start__' || ISTXML.F_START:=_text
                     |? _type='_f_end____' || ISTXML.F_END:=_text
                     |? _type='_f_text___' || ISTXML.F_TEXT:=_text
                     |? _type='_is_fld___' || ISTXML.IS_FLD:=_text
                     ?};
                     ISTXML.put()
                  ?}
               ?}
            ?};
            _tab.next()
         !}
      ?};
      &_Hash;
      ISTDEF.next()
   !}
?};
ISTDEF.cntx_pop(); ISTXML.cntx_pop();
FUN.info('Zakończono aktualizację formuł komunikatów EDI.'@);
__UPG.msg('Użytkownik %1 wykonał formułę aktualizującą.' [exec('operatorKod','#users')]);
1


\dks_edi_ufd_upd_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: Aktualizacja formuł komunikatów EDI do odczytu faktur i korekt dokumentów księgowych z businesslink - OPIS
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja formuł komunikatów EDI odczytujących faktury i korekty dokumentów księgowych z Businesslink.'


\upd_r_jpk_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Ustawia formułe dla elementu R schematów JPK
::----------------------------------------------------------------------------------------------------------------------
_type:=',FA,KR,MAG,V7M,V7K,VAT,WB,';
_obj:=obj_new(
   'TAB','ONE','ALL',
   'add','get'
);
_obj.TAB:=tab_tmp(1,
   'FROM','STRING[255]','From',
   'TO','STRING[255]','TO'
);
_obj.add:="
   _tab:=.TAB;
   {? ~_tab.find_key(_a)
   || _tab.blank(1);_tab.FROM:=_a;_tab.TO:=_b;_tab.add()
   ?}
";
_obj.get:="
   _tab:=.TAB;
   {? _tab.find_key(_a,)
   || _tab.TO
   || ''
   ?}
";
_obj.ALL:=0;
_obj.add('$DK.ref()+$DK.crc()',$"exec('ref','jpk','DK')");
_obj.add('$DOK.ref()+$DOK.crc()',$"exec('ref','jpk','DOK')");
_obj.add('$ND.ref()+$ND.crc()',$"exec('ref','jpk','ND')");
_obj.add('$POZ.ref()+$POZ.crc()',$"exec('ref','jpk','POZ')");
_obj.add('$VAT_PS.ref()+$VAT_PS.crc()',$"exec('ref','jpk','VAT_PS')");
_obj.add('VAT_PS.get();$VAT_PS.ref()+$VAT_PS.crc()','VAT_PS.get();'+$"exec('ref','jpk','VAT_PS')");
_obj.add('{? JpkDane || $DOK.ref()+$DOK.crc() || \'\' ?}','{? JpkDane || '+$"exec('ref','jpk','DOK')"+' || \'\' ?}');

ISTDEF.cntx_psh();
ISTDEF.index('DATA'); ISTDEF.prefix('FKS','J',);
{? ISTDEF.first()
|| {!
   |? _obj.ONE:=0;
      {? _type*(','+ISTDEF.RODZAJ+',')>0
      || ISTDEFS.cntx_psh();
         ISTDEFS.index('OPIS'); ISTDEFS.prefix(ISTDEF.ref(),'R',);
         {? ISTDEFS.first()
         || {!
            |? _to:=_obj.get(ISTDEFS.REGULY);
               {? _to<>'' & ISTDEFS.REGULY<>_to
               || ISTDEFS.REGULY:=_to;
                  _obj.ONE:=1
               ?};
               {? ISTDEFS.TYPFLD<>'STRING[58]'
               || ISTDEFS.TYPFLD:='STRING[58]';
                  _obj.ONE:=1
               ?};
               {? _obj.ONE
               || ISTDEFS.put()
               ?};
               ISTDEFS.next()
            !}
         ?};
         ISTDEFS.cntx_pop()
      ?};
      {? _obj.ONE
      || __UPG.msg('Zmodyfikowano schemat: %1'[ISTDEF.VER]);
         _obj.ALL:=1
      ?};
      ISTDEF.next()
   !}
?};
ISTDEF.cntx_pop();
{? _obj.ALL=0
|| __UPG.msg('Schematy JPK nie wymagały zmian.')
?};
1


\upd_r_jpk_sch_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Ustawia formułe dla elementu R schematów JPK - opis
::----------------------------------------------------------------------------------------------------------------------
'Ustawia formułę dla elementu R schematów JPK'


\sch_color_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.37]
:: OPIS: Aktualizacja domyślnych schematów kolorów systemowych.
::----------------------------------------------------------------------------------------------------------------------
UST_S.cntx_psh(); UST_S.prefix();
UST_S.for_each("
   {? UST_S.NAZWA='~Krytyczny' & UST_S.FONT_KOL='230:47:90'
   || UST_S.FONT_KOL:='188:26:34'; UST_S.put()
   |? UST_S.NAZWA='~Nieprawidłowy' & UST_S.FONT_KOL='250:148:17'
   || UST_S.FONT_KOL:='153:147:0'; UST_S.put()
   |? UST_S.NAZWA='~Ostrzeżenie' & UST_S.FONT_KOL='21:95:177'
   || UST_S.FONT_KOL:='0:69:173'; UST_S.put()
   |? UST_S.NAZWA='~Standardowy' & UST_S.FONT_KOL='21:176:32'
   || UST_S.FONT_KOL:='64:143:61'; UST_S.put()
   |? UST_S.NAZWA='~Wyróżnienie 1' & UST_S.FONT_KOL='35:3:140'
   || UST_S.FONT_KOL:='79:0:178'; UST_S.put()
   |? UST_S.NAZWA='~Wyróżnienie 2' & UST_S.FONT_KOL='0:162:255'
   || UST_S.FONT_KOL:='0:116:173'; UST_S.put()
   |? UST_S.NAZWA='~Wyszarzenie' & UST_S.FONT_KOL='147:145:144'
   || UST_S.FONT_KOL:='131:143:160'; UST_S.put()
   ?}
");
UST_S.cntx_pop();
exec('odtw_kolor_iko','color',2);
__UPG.msg('Zaktualizowano schematy domyślnych kolorów systemowych.');
1


\sch_color_update_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.37]
:: OPIS: Aktualizacja kolorów systemowych - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja domyślnych schematów kolorów systemowych.'


\vat_ps_sha
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Uzupełnia pole VAT_PS.SHA
::----------------------------------------------------------------------------------------------------------------------
_ile:=0;
_maski:=VAT_PS.names();
{? _maski.first()
|| VAT_PS.cntx_psh();
   PVAT.cntx_psh();
   VPOZ.cntx_psh();
   {!
   |? echo('Uzupełnienie VAT_PS.SHA z maski %1'@[_maski.NAME]);
      VAT_PS.use(_maski.NAME);
      VAT_PS.index('VAT_PS');
      VAT_PS.prefix();
      {? VAT_PS.first()
      || {!
         |? _chg:=0;
            {? VAT_PS.SHA=''
            || {? 4+VAT_PS.PVAT_REF='pvat'
               || PVAT.use(VAT_PS.PVAT_REF-8);
                  PVAT.prefix();
                  {? PVAT.seek(BB.sqlint(VAT_PS.PVAT_REF),)
                  || VAT_PS.SHA:=exec('sha1','#to_sha1','PVAT');
                     VAT_PS.put();
                     _chg:=1
                  ?}
               |? VAT_PS.PVAT_REF<>''
               || VPOZ.use(VAT_PS.PVAT_REF-8);
                  VPOZ.prefix();
                  {? VPOZ.seek(BB.sqlint(VAT_PS.PVAT_REF),)
                  || VAT_PS.SHA:=exec('sha1','#to_sha1','VPOZ');
                     VAT_PS.put();
                     _chg:=1
                  ?}
               ?}
            ?};
            _ile+=_chg;
            VAT_PS.next()
         !}
      ?};
      _maski.next()
   !};
   VPOZ.cntx_pop();
   PVAT.cntx_pop();
   VAT_PS.cntx_pop();
   echo()
?};
{? _ile
|| __UPG.msg('Liczba uzupełnionych rekordów VAT_PS: %1.'[$_ile])
|| __UPG.msg('Uzupełnienie pola VAT_PS.SHA nie było wymagane.')
?};
1


\vat_ps_sha_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Uzupełnia pole VAT_PS.SHA - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie pola VAT_PS.SHA.'


\cit8_30
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.14]
:: OPIS: Import sprawozdań na potrzeby deklaracji CIT-8 (30)
::----------------------------------------------------------------------------------------------------------------------
_spr:='cit-8_30_spr.dfg';
_edek:='cit-8_30.dfg';
_ok:=1;
{? fexists(_spr,1)
|| _ok:=exec('imp_spr','sprfin',_spr,2,0);
   {? _ok
   || __UPG.msg('Zaimportowano sprawozdania z pliku: %1'[_spr])
   || __UPG.msg('Nie udało się zaimportować sprawozdania z pliku: %1'[_spr])
   ?}
|| __UPG.msg('Nie znaleziono na serwerze pliku: %1'[_spr]);
   _ok:=0
?};
{? fexists(_edek,1)
|| _imp:=-1;
   {? exec('add_ver','xml','FKS',date(2020,1,1),'CIT8',30)
   || _imp:=exec('upg_imp','xml','FKS','D','CIT8',30,date(2020,1,1),'cit-8_30.dfg')
   ?};
   _txt:='e-Deklaracja CIT-8 (30) obowiązująca za 2020 rok';
   {? _imp=1
   || __UPG.msg(_txt+' została dodana.')
   |? _imp=0
   || __UPG.msg(_txt+' już istnieje.')
   || __UPG.msg(_txt+' nie została dodana.');
      _ok:=0
   ?}
|| __UPG.msg('Nie znaleziono na serwerze pliku: %1'[_edek]);
   _ok:=0
?};
_ok


\cit8_30_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.14]
:: OPIS: Import sprawozdań na potrzeby deklaracji CIT-8 (30) - opis
::----------------------------------------------------------------------------------------------------------------------
'Import sprawozdań CIT-8 (30) i CIT-8O (17) za 2020 rok\n'
'Import schematów e-Deklaracji CIT-8 (30) za 2020 rok'


\obg_edi_ufd_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: PR/WRT/XP/21.14/2107/0042
::       Aktualizacja formuł komunikatów EDI do odczytu faktur i korekt w obiegu z businesslink
::----------------------------------------------------------------------------------------------------------------------
_choice:=0;
{! |? (_choice:=FUN.choice(
            'Należy zaaktualizować formuły komunikatów EDI do odczytu faktur i korekt w obiegu:\n'
            '1. Przejdź do ustawień i parametryzacji->wspólne->wymiana danych->komunikaty EDI.\n'
            '2. Dla komunikatów UFD_OBG* usuń i zaimportuj ponownie formuły.\n'
            'lub\n'
            '1. Uruchom formułę aktualizującą.\n\n'
            'Czy prace opisane powyżej zostały wykonane?'@
            ,0,'Komunikaty EDI'@,'Uruchom formułę'@,'Tak'@,,'Nie'@)); _choice=1 | _choice=2
   |! {? _choice=1
      || exec('edi_def','edi_def','ZWS')
      |? _choice=2
      || exec('obg_edi_ufd_upd_form','upgrade_2114')
      ?}
!};
{? _choice
|| __UPG.msg('Użytkownik %1 potwierdził wykonanie zadania.' [exec('operatorKod','#users')]);
   1
|| __UPG.msg('Użytkownik %1 nie potwierdził wykonania zadania.' [exec('operatorKod','#users')]);
   0
?}


\obg_edi_ufd_upd_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: PR/WRT/XP/21.14/2107/0042
::       Aktualizacja formuł komunikatów EDI do odczytu faktur i korekt w obiegu z businesslink - formuła
::----------------------------------------------------------------------------------------------------------------------
ISTDEF.cntx_psh(); ISTXML.cntx_psh();
ISTDEF.index('K'); ISTDEF.prefix('ZWS','E','UFD_OBG_');
{? ISTDEF.first()
|| _tab:=tab_tmp(,'TEXT','STRING[255]','Tekst','K','STRING[255]','korekta');
   _tab.TEXT:='0936b9e6b2aac3b1a045f1a841ba1caa61b9ce48_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='0936b9e6b2aac3b1a045f1a841ba1caa61b9ce48_f_text___POZF.WN'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='232ca129e36f7d5acad1b527226b91af1bf87b30_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='232ca129e36f7d5acad1b527226b91af1bf87b30_f_text_____KH.DOK.NIP'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='2f3769b47321c6949180ecf5919e2d1d76153f63_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='2f3769b47321c6949180ecf5919e2d1d76153f63_f_text_____KH.DOK.KH_UL'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='38aafff434df3c24b7306c9fc49297bcbed00e87_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='38aafff434df3c24b7306c9fc49297bcbed00e87_f_text_____KH.DOK.KH_M'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='4b89a3f4b4c24a642b621112051374057dac6583_f_text___exec(\'check_jm\',\'edi_fo_ufd\')'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='5e974ea377e071ba1ea5da2585d92e1daf76480a_f_start__exec(\'seller_se\',\'edi_fo_ufd\')'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='5e974ea377e071ba1ea5da2585d92e1daf76480a_f_end____exec(\'seller_ee\',\'edi_fo_ufd\',\'OBG\')'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='5e974ea377e071ba1ea5da2585d92e1daf76480a_is_fld___N'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='7911846a1d11ff737cefd4544a5eff37dc60c85b_f_end____exec(\'pozf_end\',\'edi_fo_ufd\')'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='7911846a1d11ff737cefd4544a5eff37dc60c85b_is_fld___N'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='839d27504890a430314c3585132b46a98cbc0ee4_is_fld___T'; _tab.K:='N'; _tab.add;
   _tab.TEXT:='839d27504890a430314c3585132b46a98cbc0ee4_f_text___EVAT.BRUTTO'; _tab.K:='N'; _tab.add;
   _tab.TEXT:='ca5b567d43b77219a8bad3e92def11c8b170f5fe_is_fld___T'; _tab.K:='N'; _tab.add;
   _tab.TEXT:='ca5b567d43b77219a8bad3e92def11c8b170f5fe_f_text___EVAT.BRUTTO'; _tab.K:='T'; _tab.add;
   _tab.TEXT:='927874e45c2d592fd9f9e37ae9bd69cb2a86e859_f_end____exec(\'evat_end\',\'edi_fo_ufd\')'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='a376a82ff88b469359c7d1a9b6d8c53a673a1a7f_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='a376a82ff88b469359c7d1a9b6d8c53a673a1a7f_f_text_____KH.DOK.KH_P'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b1df7232d1c081acaaf2b152892af8f4055c2f0a_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b1df7232d1c081acaaf2b152892af8f4055c2f0a_f_text___POZF.WB'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b3b331aaf700c511f64a80dfc754f9811b0280eb_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b3b331aaf700c511f64a80dfc754f9811b0280eb_f_text___POZF.WV'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b7489ab3baca6b8a1502df657f739d4041accf8a_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b7489ab3baca6b8a1502df657f739d4041accf8a_f_text_____KH.DOK.KH_NAZ'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b88b2d0301b3d10adb0c9ae8df05e52101dceb1c_f_end____exec(\'chk_do\',\'edi_fo02\')'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b88b2d0301b3d10adb0c9ae8df05e52101dceb1c_is_fld___T'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='b88b2d0301b3d10adb0c9ae8df05e52101dceb1c_f_text___EDOKUM.DOP'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='d1e89e078f81df4db2ce2f716615719742bb520e_f_end____'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='d1e89e078f81df4db2ce2f716615719742bb520e_f_text___EDOKUM.DW'; _tab.K:='B'; _tab.add;
   _tab.TEXT:='181e2b5501665695f0256c43e8c6b1049d9f1169_f_end____exec(\'edok_end\',\'edi_fo02\',1)'; _tab.K:='B'; _tab.add;
   ISTXML.index('TREE');
   {!
   |? ISTXML.prefix(ISTDEF.ref);
      _Hash:=exec('def_hash','edi_xml',ISTDEF.ref,0,'',~~);
      {? _tab.first()
      || {!
         |? {? (ISTDEF.K*'NOTE'>0 & (_tab.K='B' | _tab.K='T')) | (ISTDEF.K*'NOTE'=0 & (_tab.K='B' | _tab.K='N'))
            || _hash:=40+_tab.TEXT;
               _type:=10+(40-_tab.TEXT);
               _text:=50-_tab.TEXT;
               {? _Hash.find_key(_hash)
               || {? ISTXML.seek(_Hash.REF,)
                  || {? _type='_f_start__' || ISTXML.F_START:=_text
                     |? _type='_f_end____' || ISTXML.F_END:=_text
                     |? _type='_f_text___' || ISTXML.F_TEXT:=_text
                     |? _type='_is_fld___' || ISTXML.IS_FLD:=_text
                     ?};
                     ISTXML.put()
                  ?}
               ?}
            ?};
            _tab.next()
         !}
      ?};
      &_Hash;
      ISTDEF.next()
   !}
?};
ISTDEF.cntx_pop(); ISTXML.cntx_pop();
FUN.info('Zakończono aktualizację formuł komunikatów EDI.'@);
__UPG.msg('Użytkownik %1 wykonał formułę aktualizującą.' [exec('operatorKod','#users')]);
1


\obg_edi_ufd_upd_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.14]
:: OPIS: PR/WRT/XP/21.14/2107/0042
::       Aktualizacja formuł komunikatów EDI do odczytu faktur i korekt w obiegu z businesslink - OPIS
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja formuł komunikatów EDI odczytujących faktury i korekty w obiegu z Businesslink.'


\add_kom_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.14]
:: OPIS: Dodaje komunikaty API do usuwania wniosków
::----------------------------------------------------------------------------------------------------------------------
_wnioski:='PORTAL_WNIOSKI';
_data:=obj_new(3);
{! _ii:=1..obj_len(_data)
|! _data[_ii]:=obj_new('BEFORE','NEW','DESC','TYPE')
!};

_type_delete:=exec('mwac_type_delete','synchro');

_data[1].BEFORE:='chr_PersonAbsenceRequestGet';
_data[1].NEW:='cseod_AcceptanceHeaderDelete';
_data[1].DESC:='Usuwanie ścieżki akceptacji wniosków.';
_data[1].TYPE:=_type_delete;

_data[2].BEFORE:='chr_PersonAbsenceRequestGet';
_data[2].NEW:='chr_PersonRequestDelete';
_data[2].DESC:='Usuwanie wniosku kadrowego.';
_data[2].TYPE:=_type_delete;

_data[3].BEFORE:='chr_PersonAbsenceRequestGet';
_data[3].NEW:='chr_PersonAbsenceRequestDelete';
_data[3].DESC:='Usuwanie wniosku urlopowego.';
_data[3].TYPE:=_type_delete;

_ret:=1;
SYNC_MWA.cntx_psh();
SYNC_MWA.index('TREE'); SYNC_MWA.prefix(0,_wnioski,0);
{? SYNC_MWA.first()
|| _tree:=#SYNC_MWA.ref();
   SYNC_MWA.index('PD_METH');
   SYNC_MWA.prefix(_wnioski);
   {! _ii:=1..obj_len(_data)
   |! _res:=SYNC_MWA.find_key(_data[_ii].NEW,);
      {? ~_res
      || _res:=exec('add_kom_del2','upgrade_2114',_data[_ii].BEFORE,_data[_ii].NEW,_data[_ii].DESC,_data[_ii].TYPE)*2
      ?};
      _status:={? _res=1 || 'już istniał' |? _res=0 || 'nie udało się dodać' || 'dodano' ?};
      __UPG.msg('Komunikat: %1 - %2'[_data[_ii].NEW,_status]);
      {? _res=0 || _ret:=-1 ?}
   !}
|| __UPG.msg('Brak przeznaczenia danych PORTAL_WNIOSKI.\nKomunikaty nie zostaną dodane.')
?};
SYNC_MWA.cntx_pop();
_ret


\add_kom_del2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.14]
:: OPIS: Dodaje komunikaty API do usuwania wniosków - pomocnicza
::   WE: _a - komunikat, przed którym wstawić dodawany
::       _b - dodawany komunikat delete
::       _c - opis komunikatu
::       _d - typ komunikatu
::----------------------------------------------------------------------------------------------------------------------
_kget:=_a;
_kdel:=_b;
_opis:=_c;
_typ:=_d;

_add:=0;
SYNC_MWA.cntx_psh();
SYNC_MWA.index('PD_METH'); SYNC_MWA.prefix('PORTAL_WNIOSKI',_kget,);
_lp:={? SYNC_MWA.first() || SYNC_MWA.LP ?};
{? _lp
|| _tree:=SYNC_MWA.PARENT;
   _mwac:=SYNC_MWA.MWAC;
   _pd:=SYNC_MWA.SYNC_PD;
   _log:=SYNC_MWA.LOGLEVEL;
   SYNC_MWA.index('TREE1');
   SYNC_MWA.prefix(_tree);
   {? SYNC_MWA.last()
   || {!
      |? SYNC_MWA.LP:=SYNC_MWA.LP+1;
         SYNC_MWA.put();
         SYNC_MWA.LP<>_lp+1 & SYNC_MWA.prev()
      !};
      SYNC_MWA.blank();
      SYNC_MWA.prefix();
      SYNC_MWA.PARENT:=_tree;
      SYNC_MWA.LP:=_lp;
      SYNC_MWA.METHOD:=_kdel;
      SYNC_MWA.TYPE:=_typ;
      SYNC_MWA.MWAC:=_mwac;
      SYNC_MWA.SYNC_PD:=_pd;
      SYNC_MWA.TAB_ACR:='EDOKUM';
      SYNC_MWA.LOGLEVEL:=_log;
      SYNC_MWA.AKT:='T';
      _add:=SYNC_MWA.add();
      {? _add
      || SYNC_MWA.memo_set(_opis,'DESC');
         SYNC_MWA.memo_put(,'DESC');
         SYNC_MWA.put()
      ?}
   ?}
?};
SYNC_MWA.cntx_pop();
_add


\add_kom_del_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.14]
:: OPIS: Dodaje komunikaty API do usuwania wniosków - opis
::----------------------------------------------------------------------------------------------------------------------
'Dodaje obsługę komunikatów API portalu HR:\n'
'- chr_PersonRequestDelete\n'
'- cseod_AcceptanceHeaderDelete'


\edeklaracje_2114_02
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [21.14]
:: OPIS: Dodanie nowych e-deklaracji obowiązujących w 2021 dotyczące przychodów od 01.01.2021
::       oraz nowych rodzajów umow zleceń 'v' - 'staże uczniowskie' i 'y' - 'praktyki absolwenckie'
::----------------------------------------------------------------------------------------------------------------------
::sprawdzenie czy są rodzaje 'v' i 'y' umów zleceń w słowniku RU
_uz_il:=0;
_typuz:=exec('slo_typ','ext_slo','UMZLEC');
{? _typuz<>null()
|| RU.cntx_psh();
   RU.index('K');
   RU.prefix(_typuz);
   {? RU.size()>0
   || _kod:='y';
      _opis:='praktyki absolwenckie';
      {? ~RU.find_key(_kod,_kod)
      || RU.blank();
         RU.TYP:=_typuz;
         RU.K:=_kod;
         RU.O:=_opis;
         RU.PKU:=0;
         RU.PPD:=17;
         RU.ZWPOD:='T';
         {? RU.add(1)
         || _uz_il+=1;
            __UPG.msg('Dodano nowy rodzaj umowy cywilnoprawnej: %1 - %2.'[_kod,_opis])
         || __UPG.msg('Nie udało się dodać nowego rodzaju umowy cywilnoprawnej: %1 - %2.'[_kod,_opis])
         ?}
      || __UPG.msg('Rodzaj umowy cywilnoprawnej: %1 - %2 już istnieje. Należy zweryfikować dane.'[RU.K,RU.O])
      ?};
      _kod:='v';
      _opis:='staże uczniowskie';
      {? ~RU.find_key(_kod,_kod)
      || RU.blank();
         RU.TYP:=_typuz;
         RU.K:=_kod;
         RU.O:='staże uczniowskie';
         RU.PKU:=0;
         RU.PPD:=17;
         RU.ZWPOD:='T';
         {? RU.add(1)
         || _uz_il+=1;
            __UPG.msg('Dodano nowy rodzaj umowy cywilnoprawnej: %1 - %2.'[_kod,_opis])
         || __UPG.msg('Nie udało się dodać nowego rodzaju umowy cywilnoprawnej: %1 - %2.'[_kod,_opis])
         ?}
      || __UPG.msg('Rodzaj umowy cywilnoprawnej: %1 - %2 już istnieje. Należy zweryfikować dane.'[RU.K,RU.O])
      ?}
   || __UPG.msg('Nie udało się dodać nowych rodzajów umów cywilnoprawnych. Słownik umów zleceń jest pusty.')
   ?};
   RU.cntx_pop()
?};

:: import struktur deklaracji ujęty w \edeklaracje/upgradexpertis.fml

1


\edeklaracje_2114_02_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [20.42]
:: OPIS: Dodanie nowych e-deklaracji obowiązujących w 2021 dotyczące przychodów od 01.01.2021
::----------------------------------------------------------------------------------------------------------------------
'Dodanie nowych e-deklaracji obowiązujących w 2021 dotyczące przychodów od 01.01.2021'


\bipkat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.14]
:: OPIS: Uzupełnienie nowego pola w tabeli BIPKAT.
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
BIPKAT.cntx_psh();
BIPKAT.index('KOD');
BIPKAT.prefix();
{? BIPKAT.first()
|| _stat:=obj_new('ok','poprawiono','niepoprawiono');
   {! _lp:=1 .. obj_len(_stat)
   |! _stat[_lp]:=0
   !};
   BIPKAT.trig_off('*','*');
   {!
   |? {? BIPKAT.SAMOUCZ='' | BIPKAT.SYSTEM=''
      || {? BIPKAT.SAMOUCZ='' || BIPKAT.SAMOUCZ:='N' ?};
         {? BIPKAT.SYSTEM='' || BIPKAT.SYSTEM:='N' ?};
         {? BIPKAT.put()
         || _stat.poprawiono+=1
         || _stat.niepoprawiono+=1
         ?}
      || _stat.ok+=1
      ?};
      BIPKAT.next()
   !};
   BIPKAT.trig_on('*','*');
   {? _stat.niepoprawiono
   || _ret:=-1
   ?};
   __UPG.msg('Liczba zapisów poprawnych (niewymagających uzupełnienia): %1' [$_stat.ok]);
   __UPG.msg('Liczba zapisów, które udało się uzupełnić: %1' [$_stat.poprawiono]);
   __UPG.msg('Liczba zapisów, których NIE udało się uzupełnić: %1' [$_stat.niepoprawiono])

|| __UPG.msg('Brak definicji kategorii portalowych (BIKAT).')
?};
BIPKAT.cntx_pop();
_ret


\bipkat_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.14]
:: OPIS: Uzupełnienie nowego pola w tabeli BIPKAT - opis.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie nowego pola w tabeli BIPKAT.'


\wnioski_portal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.14]
:: OPIS: Import definicji wniosków z Portalu HR.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Formuła importująca definicje wniosków portalowych z danych wzorcowych. Podczas importu należy wskazać'
         ' folder w którym będą umieszone tylko pliki: obieg_wnioskow_HR_Portal.xlsx, slowniki_portal.xlsx'
         ' oraz parametryzacja.xlsx.'@);
exec('import_init','#excel_imex',obj_ntab_names(obj_new('ZWS_PAR_PTYP')));
_result:=0;
{? FUN.ask('Czy oznaczyć zadanie: \'%1\' jako wykonane?'@['wnioski_portal'])
|| __UPG.msg('Zaktualizowano definicje wniosków z Portalu HR.');
   _result:=1
|| _result:=-1
?};
_result


\wnioski_portal_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.14]
:: OPIS: Import definicji wniosków z Portalu HR - opis.
::   WE:
::   WY: opis zadania potransferowego
::----------------------------------------------------------------------------------------------------------------------
'Portal HR - Import definicji wniosków.'


\potr_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.14]
:: OPIS: Formuła naprawiająca "potrącenia zaliczek". W KOM_RP brakuje zapisu z KOM_RP.ZAL='T'.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
KOM_RP.trig_off('*','*');
KOM_RP.cntx_psh();
KOM_RP.index('KOM_RZ');
KOM_RP.prefix('T',);
{? KOM_RP.first()
|| __UPG.msg('W danych istnieje zapis związany z potrąceniami zaliczek. Zmiany nie są wymagane.')

:: Sprawdźmy po nazwie potrącenia.
|? KOM_RP.index('KOM_RP');
   KOM_RP.prefix('Potrącenie zaliczki',);
   KOM_RP.size()=1 & KOM_RP.first()
|| KOM_RP.ZAL:='T';
   {? KOM_RP.put()
   || __UPG.msg('"Potrącenie zaliczki" zostało oznaczone.')
   || __UPG.msg('Oznaczenie "Potrącenie zaliczki" nie powiodło się [1].');
      _ret:=-1
   ?}

:: Sprawdźmy po kodzie i nazwie składnika płacowego (standardowego).
|? R.cntx_psh();
   R.index('RUBKOD');
   R.prefix();
   _ref:={? R.find_key(827) & R.RT='Potrącenie zaliczek' || R.ref() || null() ?};
   R.cntx_pop();
   _ref<>null()
|| KOM_RP.index('KOM_RR');
   KOM_RP.prefix(_ref);
   {? KOM_RP.first()
   || KOM_RP.ZAL:='T';
      {? KOM_RP.put()
      || __UPG.msg('"Potrącenie zaliczki" zostało oznaczone.')
      || __UPG.msg('Oznaczenie "Potrącenie zaliczki" nie powiodło się [2].');
         _ret:=-1
      ?}
   || __UPG.msg('Oznaczenie "Potrącenie zaliczki" nie powiodło się [3].');
      _ret:=-1
   ?}

|| __UPG.msg('W kartotece "Rodzajów potrąceń" brakuje definicji potrącenia, które rozlicza zaliczkę.');
   __UPG.msg('Automatyczna naprawa nie jest możliwa.');
   _ret:=-1
?};
KOM_RP.cntx_pop();
KOM_RP.trig_on('*','*');
_ret


\potr_zal_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.14]
:: OPIS: Formuła naprawiająca "potrącenia zaliczek". W KOM_RP brakuje zapisu z KOM_RP.ZAL='T'.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Ustalenie "Potrącenia zaliczki" w rodzajach potrąceń'


\ppsf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Dodanie słowników dla pracy poza siedzibą firmy.
::----------------------------------------------------------------------------------------------------------------------
SLO_TYP.cntx_psh();
SLO_KOD.cntx_psh();
_slo_typ:=exec('slo_typ','ext_slo','PPSFT');

:: Praca zdalna:
exec('kod_ref','ext_slo',_slo_typ,'ZDALNA','Praca zdalna',1);
:: Karmienie piersią:
exec('kod_ref','ext_slo',_slo_typ,'KAR_PIER','Karmienie piersią',1);
:: Delegacje:
exec('kod_ref','ext_slo',_slo_typ,'DELEGAC','Delegacje',1);

SLO_KOD.cntx_pop();
SLO_TYP.cntx_pop();

__UPG.msg('Dodano nowe typy słowników dla pracy poza siedzibą firmy.');

1


\ppsf_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Dodanie słowników dla pracy poza siedzibą firmy - opis.
::----------------------------------------------------------------------------------------------------------------------
'Dodanie słowników dla pracy poza siedzibą firmy.'


\r_opczyt_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Dodanie nowych czytników systemu.
::  ORG: \r_opczyt/upgrade_2137.fml
::----------------------------------------------------------------------------------------------------------------------
R_OPCZYT.cntx_psh();
R_OPCZYT.index('R_OPCZYS');
R_OPCZYT.prefix();
_czyt:=
   "  {? ~R_OPCZYT.find_key(_a,'<SYSTEM>')
      || R_OPCZYT.SYMBOL:='<SYSTEM>';
         R_OPCZYT.K:=_a;
         R_OPCZYT.O:=_b;
         R_OPCZYT.PORTAL:=R_OPCZYT.SL:='T';
         R_OPCZYT.add(1)
      ?}
   ";
_czyt('SYS_5','POZA SIEDZIBĄ');
R_OPCZYT.cntx_pop();

__UPG.msg('Dodano nowy czytnik dla pracy poza siedzibą firmy.');

1


\r_opczyt_add_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Dodanie nowych czytników systemu - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja czytników systemu.'


\grupwyn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JAKOLTUN [21.37]
:: OPIS: Dodanie słownika wykorzystywanego przy ewidencjonowaniu współczynników do wynagrodzeń.
::----------------------------------------------------------------------------------------------------------------------
SLO_TYP.cntx_psh();
exec('slo_typ','ext_slo','GRUPWYN');
SLO_TYP.cntx_pop();

__UPG.msg('Dodano nowy typy słowników dla ewidencji współczynników do wynagrodzenia.');
1


\grupwyn_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JAKOLTUN [21.37]
:: OPIS: Dodanie słownika wykorzystywanego przy ewidencjonowaniu współczynników do wynagrodzeń - opis.
::----------------------------------------------------------------------------------------------------------------------
'Dodanie słownika wykorzystywanego przy ewidencjonowaniu współczynników do wynagrodzeń.'


\del_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Usunięcie parametru ZWS_PAR_PORTAL - Parametry portalu
::----------------------------------------------------------------------------------------------------------------------
:Identyfikator parametru do usunięcia (pole ID z tabeli FP_DEF)
_id:='ZWS_PAR_PORTAL';

FP_STR.cntx_psh();
FP_DEF.cntx_psh();
FP_WYK.cntx_psh();
FP_FIR.cntx_psh();
FP_AKT.cntx_psh();
FP_INS.cntx_psh();

::Usuwanie danych z tabeli FP_DEF
FP_DEF.index('ID');
FP_DEF.prefix('T',_id,);

{? FP_DEF.first() ||
   _def:=FP_DEF.ref;
   FP_DEF.del(1);

:: Usuwanie danych z tabeli FP_STR
   FP_STR.index(FP_STR.ndx_tmp(,1,'FP_DEF',,,'ID',,));
   FP_STR.prefix(_def,);
   {? FP_STR.first() || FP_STR.del(1) ?};

:: Usuwanie powiązanych danych z tabeli FP_WYK
   FP_WYK.index(FP_WYK.ndx_tmp(,1,'FP_DEF',,,'FP_AKT',,));
   FP_WYK.prefix(_def,);
   {? FP_WYK.first() ||
      {! |?
         FP_WYK.del(1);
         FP_WYK.next()
      !}
   ?};

:: Usuwanie powiązanych danych z tabeli FP_FIR
   FP_FIR.index('UNIQUE');
   FP_FIR.prefix(_def,);
   {? FP_FIR.first() ||
      {! |?

::       Usuwanie powiązanych danych z tabeli FP_INS
         FP_INS.index('UNIQUE');
         FP_INS.prefix(FP_FIR.ref,);
         {? FP_INS.first() ||
            {! |?
               FP_INS.del(1);
               FP_INS.next()
            !}
         ?};

         FP_FIR.del(1);
         FP_FIR.next()
      !}
   ?};

:: Usuwanie powiązanych danych z tabeli FP_AKT
   FP_AKT.index(FP_AKT.ndx_tmp(,1,'FP_DEF',,,'FP_WER',,));
   FP_AKT.prefix(_def,);
   {? FP_AKT.first() ||
      {! |?
         FP_AKT.del(1);
         FP_AKT.next()
      !}
   ?};
   __UPG.msg('Parametr o identyfikatorze ''%1'' został usunięty z systemu.' [_id]);
   _status:=1
||
   __UPG.msg('Usunięcie parametru o identyfikatorze ''%1'' nie powiodło się.' [_id]);
   _status:=-1
?};

FP_STR.cntx_pop();
FP_DEF.cntx_pop();
FP_WYK.cntx_pop();
FP_FIR.cntx_pop();
FP_AKT.cntx_pop();
FP_INS.cntx_pop();
_status


\del_par_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Usunięcie parametru ZWS_PAR_PORTAL - Prametry portalu
::----------------------------------------------------------------------------------------------------------------------
'Usunięcie parametru ZWS_PAR_PORTAL - Parametry portalu.'


\zastepstwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Aktualizacja pola OD tabeli P_PZ (Zastępstwo lub zależność pracowników)
::----------------------------------------------------------------------------------------------------------------------
_task:=obj_new('counter','error','getDate');
_task.counter:=0;
_task.error:=0;
_task.getDate:="
   _dates:=obj_new('phod','pzhod');
   _dates.phod:=_dates.pzhod:=date(0,0,0);
   H.cntx_psh();
   H.index('_HISTDAT');
   H.prefix(P_PZ.P);
   {? H.first() || _dates.phod:=H.OD ?};
   H.prefix(P_PZ.PZ);
   {? H.first() || _dates.pzhod:=H.OD ?};
   H.cntx_pop();
   {? _dates.phod>_dates.pzhod || _dates.phod || _dates.pzhod ?}
";
_zdate:=date(0,0,0);

P_PZ.cntx_psh();
P_PZ.index('P_PZ');
P_PZ.prefix('Z',);
_size:=P_PZ.size();
{? _loop:=P_PZ.first()
|| P_PZ.trig_off('*','*');
   {!
   |? _loop
   |! {? P_PZ.OD=_zdate
      || _od:=_task.getDate();
         {? _od<>_zdate
         || P_PZ.OD:=_od;
            {? P_PZ.put()
            || _task.counter+=1
            || _task.error+=1
            ?}
         || _task.error+=1
         ?}
      ?};
      _loop:=P_PZ.next()
   !};
   P_PZ.trig_on('*','*')
?};
P_PZ.cntx_pop();

__UPG.msg('Liczba wszystkich wierszy: %1.'[$_size]);
__UPG.msg('Liczba zaktualizowanych wierszy: %1.'[$_task.counter]);
__UPG.msg('Błędy aktualizacji wierszy: %1.'[$_task.error]);

{? _task.error || -1 || 1 ?}


\zastepstwa_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.37]
:: OPIS: Aktualizacja pola OD tabeli P_PZ (Zastępstwo lub zależność pracowników) - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja pola OD tabeli P_PZ dla zastępstw.'


\rez_url
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JAKOLTUN [21.37]
:: OPIS: Aktualizacja rezerwy urlopowej i emerytalnej.
::----------------------------------------------------------------------------------------------------------------------
_wynik:=1;

_slo_typ:=exec('slo_typ','ext_slo','MET_REZ');
{? _slo_typ<>null()
|| exec('kod_ref','ext_slo',_slo_typ,'REZ_SKL','Według składników w przebiegu zatrudnienia',1);
   exec('kod_ref','ext_slo',_slo_typ,'REZ_EKW','Według zasad naliczania ekwiwalentu za urlop',1);
   __UPG.msg('Dodano nowy słownik dla metod obliczania podstawy rezerwy urlopowej oraz emerytalnej.')
|| __UPG.msg('Nie udało się dodać nowego słownika dla metod obliczania podstawy rezerwy urlopowej oraz emerytalnej.');
   _wynik:=0
?};

{? _wynik
|| RURL_N.trig_off('*','*');
   SLO_TYP.cntx_psh();
   SLO_KOD.cntx_psh();
   RURL_N.cntx_psh();
   ODP_EME.cntx_psh();

   _ref:=null();
   SLO_TYP.index('SYMBOL');
   SLO_TYP.prefix('MET_REZ');
   {? SLO_TYP.first()
   || SLO_KOD.index('KOD');
      SLO_KOD.prefix(SLO_TYP.ref(),'REZ_SKL');
      {? SLO_KOD.first()
      || _ref:=SLO_KOD.ref()
      ?}
   ?};

   RURL_N.prefix();
   {? RURL_N.first()
   || {!|? _akt:=0;
           {? RURL_N.D=0
           || RURL_N.D:=RURL_N.DATA~3;
              _akt:=1
           ?};
           {? RURL_N.METODA=null()
           || RURL_N.METODA:=_ref;
              _akt:=1
           ?};
           {? RURL_N.CZY_LICZ=''
           || RURL_N.CZY_LICZ:='N';
              _akt:=1
           ?};
           {? _akt=1
           || RURL_N.put()
           ?};
           RURL_N.next()
      !}
   ?};

   ODP_EME.prefix();
   {? ODP_EME.first()
   || {!|? {? ODP_EME.KP=null()
           || ODP_EME.KP:=_ref;
              ODP_EME.put()
           ?};
           ODP_EME.next()
      !}
   ?};

   ODP_EME.cntx_pop();
   SLO_KOD.cntx_pop();
   SLO_TYP.cntx_pop();
   RURL_N.cntx_pop();
   RURL_N.trig_on('*','*')
?};

1


\rez_url_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JAKOLTUN [21.37]
:: OPIS: Aktualizacja rezerwy urlopowej i emerytalnej - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja rezerwy urlopowej i emerytalnej.'


\RU_RKU
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Weryfikacja danych dotyczących kosztów uzyskania przychodu dla umów cywilnoprawnych
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask(
      'W merit w oknie słownika umów cywilnoprawnych dodana została nowa kolumna Rodzaj kosztów uzyskania\n'
      'przechowująca informację o rodzaju kosztów uzyskania przychodu danej umowy.\n'
      'Automatycznie dla wszystkich umów przyporządkowywany jest rodzaj P (procentowe) z wyjątkiem\n'
      'umowy o kodzie 5 (rada nadzorcza KU) dla której przydzielony jest rodzaj K (kwotowe).\n\n'
      'W związku ze wspomnianą zmianą należy dokonać weryfikacji poprawności danych dotyczących kosztów\n'
      'uzyskania przychodu dla umów cywilnoprawnych.\n\n'
      'Czy dokonano weryfikacji?'@
   )
|| __UPG.msg('Użytkownik %1 potwierdził poprawność danych dla umów cywilnoprawnych.' [exec('operatorKod','#users')]);
   1
|| {? FUN.ask(
           'Czy rezygnujesz (również w przyszłości) z wykonania tego zadania?\n'
           '\n'
           'Tak - zadanie zostanie oznaczone jako "Wykonane" i nie będzie już można go uruchomić.\n'
           'Nie - zadanie pozostanie na liście zadań i będzie je można wykonać w późniejszym czasie.'@
      )
   || __UPG.msg('Użytkownik %1 zdecydował o pominięciu wykonania zadania.' [exec('operatorKod','#users')]);
      1
   || __UPG.msg('Użytkownik %1 pozostawił zadanie do późniejszego wykonania.' [exec('operatorKod','#users')]);
      0
   ?}
?}


\RU_RKU_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Weryfikacja danych dotyczących kosztów uzyskania przychodu dla umów cywilnoprawnych - opis.
::----------------------------------------------------------------------------------------------------------------------
'Weryfikacja danych dotyczących kosztów uzyskania przychodu dla umów cywilnoprawnych.'


\build_etypy_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.14]
:: OPIS: Zbudowanie uprawnień do wierszy na portalu po dodaniu nowych ról do systemu
::----------------------------------------------------------------------------------------------------------------------
exec('build_etyp_p','obiegi2',1);
__UPG.msg('Zaktualizowano uprawnienia do typów wniosków na Portalu HR.');
1


\build_etypy_p_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [21.14]
:: OPIS: Zbudowanie uprawnień do wierszy na portalu po dodaniu nowych ról do systemu - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja uprawnień do typów wniosków na Portalu HR.'


\TOPER
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Aktualizacja operacji Tpz
::  ORG: \TOPER/upgrade_1822.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

_names:=TOPER.names();
TOPER.trig_off('*','*');
TOPER.cntx_psh();
{? _names.first()
|| {!
   |? TOPER.index('TPZ');
      TOPER.prefix('T');
      {? TOPER.first()
      || {!
         |? _put:=0;
            __lrec+=1;
            {? TOPER.NTIME>0 & TOPER.NTIME_T=time(0,0,0) || exec('fld_time_init','tech_oper','NTIME_T'); _put:=1 ?};
            {? TOPER.MTIME>0 & TOPER.MTIME_T=time(0,0,0) || exec('fld_time_init','tech_oper','MTIME_T'); _put:=1 ?};
            {? TOPER.TTM>0 & TOPER.TTM_T=time(0,0,0) || exec('fld_time_init','tech_oper','TTM_T'); _put:=1 ?};
            {? TOPER.NKO>0 & TOPER.NKO_T=time(0,0,0) || exec('fld_time_init','tech_oper','NKO_T'); _put:=1 ?};
            {? TOPER.WHERE='' || TOPER.WHERE:='W'; _put:=1 ?};
            {? TOPER.NAZWA='' || TOPER.NAZWA:=exec('toper_nazwa','tech_oper'); _put:=1 ?};
            {? TOPER.TKTL_KTM=null()
            || TOPER.TKTL_KTM:=exec('FindAndGet','#table',TKTL,TOPER.NRK,,"KTM",null()); _put:=1
            ?};
            {? TOPER.WYK_FAST='' || TOPER.WYK_FAST:='N'; _put:=1 ?};
            {? TOPER.NO_START='' || TOPER.NO_START:='N'; _put:=1 ?};
            TOPER.cntx_psh();
            TOPER.index('UNROP');
            TOPER.prefix(TOPER.TPZREF);
            {? TOPER.first()
            || _act:=TOPER.ACT;
               _od:=TOPER.OD;
               _cause:=TOPER.CAUSE;
               _user:=TOPER.USER;
               _mod_time:=TOPER.MOD_TIME;
               TOPER.cntx_pop();
               {? TOPER.ACT<>_act || TOPER.ACT:=_act; _put:=1 ?};
               {? TOPER.OD<>_od || TOPER.OD:=_od; _put:=1 ?};
               {? TOPER.CAUSE<>_cause || TOPER.CAUSE:=_cause; _put:=1 ?};
               {? TOPER.USER<>_user || TOPER.USER:=_user; _put:=1 ?};
               {? TOPER.MOD_TIME<>_mod_time || TOPER.MOD_TIME:=_mod_time; _put:=1 ?}
            || TOPER.cntx_pop()
            ?};
            {? _put || {? TOPER.put() || __lmod+=1 || _res:=0 ?} ?};
            TOPER.next()
         !}
      ?};
      _names.next()
   !}
?};
TOPER.cntx_pop();
TOPER.trig_on('*','*');

__UPG.msg('Zaktualizowano operacje Tpz.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\TOPER_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Aktualizacja operacji Tpz - opis
::  ORG: \TOPER_desc/upgrade_1822.fml
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja operacji Tpz'


\OFE
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Uzupełnia pola typ oferty
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
VAR_DEL.delete('__lrec','__lmod','__typ_o');
__lrec:=__lmod:=0; __typ_o:=null();
TYPYZAM.cntx_psh();
OFE.cntx_psh();
TYPYZAM.index('TYP');
TYPYZAM.prefix('O','OFE',);
{? TYPYZAM.first()
|| __typ_o:=TYPYZAM.ref()
|| TYPYZAM.prefix();
   TYPYZAM.blank();
   TYPYZAM.R:='O';
   TYPYZAM.T:='OFE';
   TYPYZAM.NAZ:='Oferta';
   TYPYZAM.KOD:='OFE';
   {? TYPYZAM.add(1) || __typ_o:=TYPYZAM.ref() ?}
?};

OFE.prefix();
OFE.for_each("_put:=0;
              __lrec+=1;
              {? OFE.T=null()
              || OFE.T:=__typ_o;
                 _put:=1
              ?};
              {? _put || {? OFE.put(1) || __lmod+=1 ?} ?}
             ",0);
TYPYZAM.cntx_pop();
OFE.cntx_pop();
__UPG.msg('Zaktualizowano oferty o typ oferty.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod','__typ_o');
_result


\OFE_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Uzupełnia pola typ oferty - opis
::----------------------------------------------------------------------------------------------------------------------
'Dodanie obsługi typów ofert'


\STATS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Naprawia ikonki w tabeli STATS - słownik statusów dostaw
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
STATS.cntx_psh();
STATS.prefix();
STATS.for_each("
   _put:=0;
   __lrec+=1;
   {? STATS.ICON*'status'>0
   || {? STATS.KIND='O' || STATS.ICON:=exec('get','#params',540011,type_of('')); _put:=1 ?};
      {? STATS.KIND='Z' || STATS.ICON:=exec('get','#params',540012,type_of('')); _put:=1 ?};
      {? STATS.KIND='N' || STATS.ICON:=exec('get','#params',540013,type_of('')); _put:=1 ?}
   ?};
   {? _put || {? STATS.put(1) || __lmod+=1 ?} ?}
",0);
STATS.cntx_pop();
__UPG.msg('Zaktualizowano ikonki w słowniku statusów dostaw.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_result


\STATS_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Naprawia ikonki w tabeli STATS - słownik statusów dostaw - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizuje ikonki w słowniku statusów dostaw.'


\usr_upr_sts
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do stanowisk sprzedaży
::----------------------------------------------------------------------------------------------------------------------
exec('usr_upr_0','users_upraw','STS');
1


\usr_upr_sts_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do stanowisk sprzedaży
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja uprawnień użytkowników do stanowisk sprzedaży'


\usr_upr_stz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do stanowisk zakupu
::----------------------------------------------------------------------------------------------------------------------
exec('usr_upr_0','users_upraw','STZ');
1


\usr_upr_stz_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do stanowisk zakupu
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja uprawnień użytkowników do stanowisk zakupu'


\usr_upr_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do magazynów realizujących zamówienia sprzedaży
::----------------------------------------------------------------------------------------------------------------------
exec('usr_upr_0','users_upraw','ZAM');
1


\usr_upr_zam_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do magazynów realizujących zamówienia sprzedaży
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja uprawnień użytkowników do magazynów realizujących zamówienia sprzedaży'


\usr_upr_zaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do magazynów realizujących zamówienia wewnętrzne
::----------------------------------------------------------------------------------------------------------------------
exec('usr_upr_0','users_upraw','ZAW');
1


\usr_upr_zaw_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do magazynów realizujących zamówienia wewnętrzne
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja uprawnień użytkowników do magazynów realizujących zamówienia wewnętrzne'


\usr_upr_trrodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do kategorii transportu
::----------------------------------------------------------------------------------------------------------------------
exec('usr_upr_0','users_upraw','TR_RODZ');
1


\usr_upr_trrodz_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do kategorii transportu
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja uprawnień użytkowników do kategorii transportu'


\usr_upr_tars
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do cenników sprzedaży
::----------------------------------------------------------------------------------------------------------------------
exec('usr_upr_0','users_upraw','TARS');
1


\usr_upr_tars_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do cenników sprzedaży
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja uprawnień użytkowników do cenników sprzedaży'


\usr_upr_tard
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do cenników dostawców
::----------------------------------------------------------------------------------------------------------------------
exec('usr_upr_0','users_upraw','TARD');
1


\usr_upr_tard_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do cenników dostawców
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja uprawnień użytkowników do cenników dostawców'


\usr_upr_mkas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do multikas
::----------------------------------------------------------------------------------------------------------------------
exec('usr_upr_0','users_upraw','MKAS');
1


\usr_upr_mkas_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja uprawnień użytkowników do multikas
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja uprawnień użytkowników do multikas'


\usr_upr_pelne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja pełnych uprawnień użytkowników do danych
::----------------------------------------------------------------------------------------------------------------------
exec('usr_upr_uzupełnij_pelne','users_upraw','ZAM');
exec('usr_upr_uzupełnij_pelne','users_upraw','ZAW');
exec('usr_upr_uzupełnij_pelne','users_upraw','TR_RODZ');
_msg:='Zaktualizowano pełne uprawnienia użytkowników do magazynów realizujących zamówienia sprzedaży, '+
      'magazynów realizujących zamówienia wewnętrzne, kategorii transportu.';
__UPG.msg(_msg);
1


\usr_upr_pelne_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Aktualizacja pełnych uprawnień użytkowników do danych
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja pełnych uprawnień użytkowników do danych'


\REM_ZGL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Utworzenie tabeli zgłoszeń remontowych na podstawie:
::       zgłoszeń (ZSB_ZGL), przeglądów (ZSB_BAD), remontów (ZSB_REM) i ubezpieczeń (ZSB_UB)
::  ORG: \REM_ZGL/upgrade_2014.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=1;

VAR_DEL.delete('__lrec','__lmod');
__lrec:=obj_new(4); {! _it:=1 ..4 |! __lrec[_it]:=0 !};
__lmod:=obj_new(4); {! _it:=1 ..4 |! __lmod[_it]:=0 !};

_rem_zgl:=0;
REM_ZGL.cntx_psh();
REM_ZGL.prefix();
{? REM_ZGL.first()
|| _lrec:=_lmod:=0;
   _rem_zgl:=1;
   {!
   |? _lrec+=1;
      _put:=0;
      {? REM_ZGL.PL_DOST='' || REM_ZGL.PL_DOST:='B'; _put:=1 ?};
      {? REM_ZGL.PLAN_PX='' || REM_ZGL.PLAN_PX:='N'; _put:=1 ?};
      {? REM_ZGL.PLAN_PL='' || REM_ZGL.PLAN_PL:='N'; _put:=1 ?};
      {? REM_ZGL.PL_TRYB='' || REM_ZGL.PL_TRYB:='A'; _put:=1 ?};
      {? REM_ZGL.GEN_POW='' || REM_ZGL.GEN_POW:='N'; _put:=1 ?};
      {? REM_ZGL.SYM_TOP='' || REM_ZGL.SYM_TOP:=REM_ZGL.SYM; _put:=1 ?};
      {? _put || {? REM_ZGL.put(1) || _lmod+=1 ?} ?};
      REM_ZGL.next()
   !};
   __UPG.msg('Zgłoszenia z programu Xpertis Remonty zostały już wcześniej przeniesione.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$_lrec,$_lmod])
?};
REM_ZGL.cntx_pop();
{? _rem_zgl || _return(_res) ?};

{? var_pres('__PROJ2REM')<0
|| __UPG.msg('Przed wywołaniem formuły REM_ZGL musi być wywołana formuła REM_ZAS.');
   return(0)
?};

:: inicjowany słownik kategorii zgłoszeń
_rem_katg:=obj_new(4);
_add_katg:="
   _result:=null();
   REM_KATG.cntx_psh();
   REM_KATG.index('SYMBOL');
   REM_KATG.prefix(_a,);
   {? REM_KATG.first()
   || _result:=REM_KATG.ref()
   || REM_KATG.SYMBOL:=_a;
      {? REM_KATG.add()
      || _result:=REM_KATG.ref()
      ?}
   ?};
   REM_KATG.cntx_pop();
   _result
";
_rem_katg[1]:=_add_katg('!ZGŁOSZENIE');
_rem_katg[2]:=_add_katg('!PRZEGLĄD');
_rem_katg[3]:=_add_katg('!REMONT');
_rem_katg[4]:=_add_katg('!UBEZPIECZENIE');

:: formuła zwracajaca zasób - parametr PROJZAS.ref()
_rem_zas:="
   _res:=null();
   __PROJ2REM.prefix($_a,);
   {? __PROJ2REM.first()
   || _res:=exec('FindAndGet','#table',REM_ZAS,__PROJ2REM.REM_ZAS)
   ?};
   _res
";

ZSB_ZGL.cntx_psh();
ZSB_BAD.cntx_psh();
ZSB_REM.cntx_psh();
ZSB_UB.cntx_psh();

:: 1) Zgłoszenia
ZSB_ZGL.index('ZSB_ZGLK');
ZSB_ZGL.prefix();
{? ZSB_ZGL.first()
|| {!
   |? __lrec[1]+=1;
      REM_ZGL.blank();
      REM_ZGL.AR:=ZSB_ZGL.DWA~1;
      REM_ZGL.AM:=ZSB_ZGL.DWA~2;
      REM_ZGL.NR:=ZSB_ZGL.NR;
      REM_ZGL.SYM:=ZSB_ZGL.SYMBOL;
      REM_ZGL.REM_KATG:=_rem_katg[1];
      REM_ZGL.REM_ZAS:=_rem_zas(ZSB_ZGL.PROJZAS);
      REM_ZGL.ODDZ:=REM_ZGL.REM_ZAS().ODDZ;
::      REM_ZGL.PROJEKT:=null();
      REM_ZGL.WEW:='T';
::      REM_ZGL.UD_SKL:=null();
::      REM_ZGL.KH:=null();
      REM_ZGL.TYTUL:=ZSB_ZGL.TYTUL;
      REM_ZGL.memo_set(ZSB_ZGL.OPIS,'OPIS');
      REM_ZGL.SOURCE:=exec('source_manual','remonty_zgloszenia');
      REM_ZGL.STAT_REJ:=
         {? ZSB_ZGL.STATUS='N'
         || exec('status_ended','remonty_zgloszenia')
         |? ZSB_ZGL.STATUS='W'
         || exec('status_verified','remonty_zgloszenia')
         |? ZSB_ZGL.STATUS='Z'
         || exec('status_closed','remonty_zgloszenia')
         || exec('status_new','remonty_zgloszenia')
         ?};
      REM_ZGL.ARC:='N';
      REM_ZGL.DT_WA:=ZSB_ZGL.DWA;
      REM_ZGL.TM_WA:=ZSB_ZGL.GWA;
::      REM_ZGL.USR_WA:=null();
::      REM_ZGL.OS_WA:=null();
      REM_ZGL.DT_PUA:=ZSB_ZGL.DPUA;
      REM_ZGL.TM_PUA:=ZSB_ZGL.GPUA;
      REM_ZGL.DT_WPR:=ZSB_ZGL.DATA_WPR;
      REM_ZGL.TM_WPR:=ZSB_ZGL.CZAS_WPR;
      REM_ZGL.USR_WPR:=ZSB_ZGL.KTO_WPR;
      REM_ZGL.DT_ZAT:=ZSB_ZGL.DATA_ZAT;
      REM_ZGL.TM_ZAT:=ZSB_ZGL.CZAS_ZAT;
      REM_ZGL.USR_ZAT:=ZSB_ZGL.KTO_ZAT;
      REM_ZGL.DT_ZAM:=ZSB_ZGL.DATA_ZAM;
      REM_ZGL.TM_ZAM:=ZSB_ZGL.CZAS_ZAM;
      REM_ZGL.USR_ZAM:=ZSB_ZGL.KTO_ZAM;
      REM_ZGL.WERYFIK:={? ZSB_ZGL.AKCJA().TYP='O' || 'N' || 'T' ?};
      REM_ZGL.memo_set(ZSB_ZGL.U_OPIS,'WOPIS');
      REM_ZGL.REZERW:=ZSB_ZGL.REZERWA;
::      REM_ZGL.PRIORITY:=0;
      REM_ZGL.PL_DOST:='B';
      REM_ZGL.PLAN_PX:='N';
      REM_ZGL.PLAN_PL:='N';
      REM_ZGL.PL_TRYB:='A';
      {? REM_ZGL.add()
      || REM_ZGL.memo_put(,'OPIS');
         REM_ZGL.memo_put(,'WOPIS');
         __lmod[1]+=1
      ?};
      ZSB_ZGL.next()
   !}
?};

:: 2) Przeglądy
ZSB_BAD.index('ZSB_BAD2');
ZSB_BAD.prefix();
{? ZSB_BAD.first()
|| {!
   |? __lrec[2]+=1;
      REM_ZGL.blank();
      REM_ZGL.AR:=ZSB_BAD.DATA_WPR~1;
      REM_ZGL.AM:=ZSB_BAD.DATA_WPR~2;
      REM_ZGL.NR:=ZSB_BAD.NR;
      REM_ZGL.SYM:=ZSB_BAD.SYMBOL;
      REM_ZGL.REM_KATG:=_rem_katg[2];
      REM_ZGL.REM_ZAS:=_rem_zas(ZSB_BAD.ZASOB);
      REM_ZGL.ODDZ:=REM_ZGL.REM_ZAS().ODDZ;
::      REM_ZGL.PROJEKT:=null();
      REM_ZGL.WEW:='T';
::      REM_ZGL.UD_SKL:=null();
::      REM_ZGL.KH:=null();
      REM_ZGL.TYTUL:=ZSB_BAD.OPIS;
      REM_ZGL.memo_set(ZSB_BAD.OPIS+'\n'+ZSB_BAD.memo_txt(,1,'OPIS_ROZ'),'OPIS');
      REM_ZGL.SOURCE:=exec('source_manual','remonty_zgloszenia');
      REM_ZGL.STAT_REJ:=
         {? ZSB_BAD.STATUS='P'
         || exec('status_ended','remonty_zgloszenia')
         |? ZSB_BAD.STATUS='O'
         || exec('status_verified','remonty_zgloszenia')
         |? ZSB_BAD.STATUS='Z' | ZSB_BAD.STATUS='X'
         || exec('status_closed','remonty_zgloszenia')
         || exec('status_new','remonty_zgloszenia')
         ?};
      REM_ZGL.ARC:='N';
      REM_ZGL.DT_WA:=ZSB_BAD.DATA_WPR;
::      REM_ZGL.TM_WA:=time(0,0,0);
::      REM_ZGL.USR_WA:=null();
::      REM_ZGL.OS_WA:=null();
      REM_ZGL.DT_PUA:=ZSB_BAD.PDZ;
      REM_ZGL.TM_PUA:=ZSB_BAD.PGZ;
      REM_ZGL.DT_WPR:=ZSB_ZGL.DATA_WPR;
::      REM_ZGL.TM_WPR:=time(0,0,0);
      REM_ZGL.USR_WPR:=ZSB_BAD.KTO_WPR;
      REM_ZGL.DT_ZAT:=ZSB_BAD.DATA_ZAT;
::      REM_ZGL.TM_ZAT:=time(0,0,0);
      REM_ZGL.USR_ZAT:=ZSB_BAD.KTO_ZAT;
      REM_ZGL.DT_ZAM:=ZSB_BAD.DATA_ZAM;
::      REM_ZGL.TM_ZAM:=time(0,0,0);
      REM_ZGL.USR_ZAM:=ZSB_BAD.KTO_ZAM;
      REM_ZGL.WERYFIK:='T';
      REM_ZGL.memo_set(ZSB_BAD.UWAGI,'WOPIS');
::      REM_ZGL.REZERW:='N';
::      REM_ZGL.PRIORITY:=0;
      {? REM_ZGL.add()
      || REM_ZGL.memo_put(,'OPIS');
         REM_ZGL.memo_put(,'WOPIS');
         __lmod[2]+=1
      ?};
      ZSB_BAD.next()
   !}
?};

:: 3) Remonty
ZSB_REM.index('ZSB_REM4');
ZSB_REM.prefix();
{? ZSB_REM.first()
|| {!
   |? __lrec[3]+=1;
      REM_ZGL.blank();
      REM_ZGL.AR:=ZSB_REM.DATA_WPR~1;
      REM_ZGL.AM:=ZSB_REM.DATA_WPR~2;
      REM_ZGL.NR:=ZSB_REM.NR;
      REM_ZGL.SYM:=ZSB_REM.SYMBOL;
      REM_ZGL.REM_KATG:=_rem_katg[3];
      REM_ZGL.REM_ZAS:=_rem_zas(ZSB_REM.ZASOB);
      REM_ZGL.ODDZ:=REM_ZGL.REM_ZAS().ODDZ;
::      REM_ZGL.PROJEKT:=null();
      REM_ZGL.WEW:='T';
::      REM_ZGL.UD_SKL:=null();
::      REM_ZGL.KH:=null();
      REM_ZGL.TYTUL:=ZSB_REM.OPIS;
      REM_ZGL.memo_set(ZSB_REM.OPIS+'\n'+ZSB_REM.memo_txt(,1,'OPIS_ROZ'),'OPIS');
      REM_ZGL.SOURCE:=exec('source_manual','remonty_zgloszenia');
      REM_ZGL.STAT_REJ:=
         {? ZSB_BAD.STATUS='P'
         || exec('status_ended','remonty_zgloszenia')
         |? ZSB_BAD.STATUS='O'
         || exec('status_verified','remonty_zgloszenia')
         |? ZSB_BAD.STATUS='Z' | ZSB_BAD.STATUS='X'
         || exec('status_closed','remonty_zgloszenia')
         || exec('status_new','remonty_zgloszenia')
         ?};
      REM_ZGL.ARC:='N';
      REM_ZGL.DT_WA:=ZSB_REM.DATA_WPR;
::      REM_ZGL.TM_WA:=time(0,0,0);
::      REM_ZGL.USR_WA:=null();
::      REM_ZGL.OS_WA:=null();
      REM_ZGL.DT_PUA:=ZSB_REM.PDZ;
      REM_ZGL.TM_PUA:=ZSB_REM.PGZ;
      REM_ZGL.DT_WPR:=ZSB_REM.DATA_WPR;
::      REM_ZGL.TM_WPR:=time(0,0,0);
      REM_ZGL.USR_WPR:=ZSB_REM.KTO_WPR;
      REM_ZGL.DT_ZAT:=ZSB_REM.DATA_ZAT;
::      REM_ZGL.TM_ZAT:=time(0,0,0);
      REM_ZGL.USR_ZAT:=ZSB_REM.KTO_ZAT;
      REM_ZGL.DT_ZAM:=ZSB_REM.DATA_ZAM;
::      REM_ZGL.TM_ZAM:=time(0,0,0);
      REM_ZGL.USR_ZAM:=ZSB_REM.KTO_ZAM;
      REM_ZGL.WERYFIK:='T';
      REM_ZGL.memo_set(ZSB_REM.OPINIA,'WOPIS');
      REM_ZGL.REZERW:=ZSB_REM.REZERWA;
::      REM_ZGL.PRIORITY:=0;
      {? REM_ZGL.add()
      || REM_ZGL.memo_put(,'OPIS');
         REM_ZGL.memo_put(,'WOPIS');
         __lmod[3]+=1
      ?};
      ZSB_REM.next()
   !}
?};

:: 4) Ubezpieczenia
ZSB_UB.index('ZSB_UB');
ZSB_UB.prefix();
{? ZSB_UB.first()
|| {!
   |? __lrec[4]+=1;
      REM_ZGL.blank();
      REM_ZGL.AR:=ZSB_UB.OD~1;
      REM_ZGL.AM:=ZSB_UB.OD~2;
::      REM_ZGL.NR:=0;
::      REM_ZGL.SYM:='';
      REM_ZGL.REM_KATG:=_rem_katg[4];
      REM_ZGL.REM_ZAS:=_rem_zas(ZSB_UB.ZASOB);
      REM_ZGL.ODDZ:=REM_ZGL.REM_ZAS().ODDZ;
::      REM_ZGL.PROJEKT:=null();
      REM_ZGL.WEW:='T';
::      REM_ZGL.UD_SKL:=null();
      REM_ZGL.KH:=ZSB_UB.UB;
      REM_ZGL.TYTUL:=ZSB_UB.NR_POLIS;
      _txt:='Wartość polisy: '+$ZSB_UB.WAR+'\n';
      _txt:=_txt+'Składka: '+$ZSB_UB.KOSZT;
      {? ZSB_UB.BROK<>null()
      || _txt:='Broker: '+ZSB_UB.BROK().KOD+' '+ZSB_UB.BROK().NAZ+'\n'+_txt
      ?};
      {? ZSB_UB.OP_POLIS<>''
      || _txt:=ZSB_UB.OP_POLIS+'\n'+_txt
      ?};
      REM_ZGL.memo_set(_txt,'OPIS');
      REM_ZGL.SOURCE:=exec('source_manual','remonty_zgloszenia');
      REM_ZGL.STAT_REJ:=exec('status_ended','remonty_zgloszenia');
      REM_ZGL.ARC:='N';
      REM_ZGL.DT_WA:=ZSB_UB.OD;
      REM_ZGL.TM_WA:=ZSB_UB.OD_GODZ;
::      REM_ZGL.USR_WA:=null();
::      REM_ZGL.OS_WA:=null();
      REM_ZGL.DT_PUA:=ZSB_UB.DO;
      REM_ZGL.TM_PUA:=ZSB_UB.DO_GODZ;
::      REM_ZGL.DT_WPR:=date(0,0,0);
::      REM_ZGL.TM_WPR:=time(0,0,0);
::      REM_ZGL.USR_WPR:=null();
::      REM_ZGL.DT_ZAT:=date(0,0,0);
::      REM_ZGL.TM_ZAT:=time(0,0,0);
::      REM_ZGL.USR_ZAT:=null();
::      REM_ZGL.DT_ZAM:=date(0,0,0);
::      REM_ZGL.TM_ZAM:=time(0,0,0);
::      REM_ZGL.USR_ZAM:=null();
      REM_ZGL.WERYFIK:='T';
      REM_ZGL.memo_set(ZSB_UB.UWAGI,'WOPIS');
::      REM_ZGL.REZERW:='N';
::      REM_ZGL.PRIORITY:=0;
      {? REM_ZGL.add()
      || REM_ZGL.memo_put(,'OPIS');
         REM_ZGL.memo_put(,'WOPIS');
         __lmod[4]+=1
      ?};
      ZSB_UB.next()
   !}
?};

:: Dodanie numeracji zgłoszeń zgodnej z Xpertis
exec('add_grnr','numery','ZGL');

:: Odtworzenie numeracji
POM.TAB:='REM_ZGL';
POM.TYPDOK:='ZGL';
POM.NRT:=0;
REM_ZGL.cntx_psh();
REM_ZGL.for_each("
   {? REM_ZGL.NR=0
   || _sym:=REM_ZGL.SYM;
      REM_ZGL.NR:=exec('numer_new','numery',,,0);
      exec('znak','numery','REM_ZGL');
      {? _sym<>''
      || REM_ZGL.SYM:=_sym
      ?}
   ?}
",1);
REM_ZGL.cntx_pop();

ZSB_ZGL.prefix();
ZSB_BAD.prefix();
ZSB_REM.prefix();
ZSB_UB.prefix();

__UPG.msg('Utworzono tabelę zgłoszeń remontowych.');
__UPG.msg(
   'Przetworzono: %1 zapisów źródłowych zgłoszeń (ZSB_ZGL) z ogółem %2, na podstawie których dodano: %3 zapisów (REM_ZGL).'
   [$__lrec[1],$ZSB_ZGL.size(),$__lmod[1]]
);
__UPG.msg(
   'Przetworzono: %1 zapisów źródłowych przeglądów (ZSB_BAD) z ogółem %2, na podstawie których dodano: %3 zapisów (REM_ZGL).'
   [$__lrec[2],$ZSB_BAD.size(),$__lmod[2]]
);
__UPG.msg(
   'Przetworzono: %1 zapisów źródłowych remontów (ZSB_REM) z ogółem %2, na podstawie których dodano: %3 zapisów (REM_ZGL).'
   [$__lrec[3],$ZSB_REM.size(),$__lmod[3]]
);
__UPG.msg(
   'Przetworzono: %1 zapisów źródłowych ubezpieczeń (ZSB_UB) z ogółem %2, na podstawie których dodano: %3 zapisów (REM_ZGL).'
   [$__lrec[4],$ZSB_UB.size(),$__lmod[4]]
);

ZSB_ZGL.cntx_pop();
ZSB_BAD.cntx_pop();
ZSB_REM.cntx_pop();
ZSB_UB.cntx_pop();

VAR_DEL.delete('__lrec','__lmod');
_res


\REM_ZGL_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Utworzenie tabeli zgłoszeń remontowych - opis
::----------------------------------------------------------------------------------------------------------------------
'Utworzenie tabeli zgłoszeń remontowych.\n'


\ZPARN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Uzupełnia pola tabeli ZPARN - partie produktów
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
ZPARN.cntx_psh();
ZPARN.prefix();
ZPARN.for_each("
   _put:=0;
   __lrec+=1;
   {? ZPARN.KTM=null()
   || _ktm:=exec('FindAndGet','#table',ZL,ZPARN.ZL,,\"ZL.KTM\",null());
      {? _ktm<>null() || ZPARN.KTM:=_ktm; _put:=1 ?}
   ?};
   {? _put>0 || {? ZPARN.put(1) || __lmod+=1 ?} ?}
",0);
ZPARN.cntx_pop();
__UPG.msg('Zaktualizowano partie produktów.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_result


\ZPARN_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Uzupełnia pola tabeli ZGH - partie produktów - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnia pola dla partii produktów'


\cenniki_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Aktualizacja aktywności nagłówków cenników.
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

TAR.cntx_psh();
TAR.prefix();
TAR.for_each("
__lrec+=1;
_put:=0;
{? TAR.AKT=''
||
   TAR.AKT:='T';
   _put:=1
?};
{? _put & TAR.put(1) || __lmod+=1 ?}
",1);
TAR.cntx_pop();

__UPG.msg('Zaktualizowano aktywności nagłówków cenników.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\cenniki_akt_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Aktualizacja aktywności nagłówków cenników.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja aktywności nagłówków cenników.'


\PORTALO
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Aktualizacja definicji komunikatów dla licencji Portal HR
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
PORTALO.trig_off('*','*');
PORTALO.cntx_psh();
PORTALO.prefix();
_tab:=sql('select distinct PORTALO.LICENSE from PORTALO');
{? _tab.size()>2
|| _result:=PORTALO.erase();
   {? _result || __UPG.msg('Usunięto komunikaty dla licecji portalu.') ?}
|| PORTALO.for_each("
                     __lrec+=1;
                     _put:=0;
                     {? PORTALO.COMM<>~-PORTALO.COMM || PORTALO.COMM:=~-PORTALO.COMM; _put:=1 ?};
                     {? _put
                     || {? PORTALO.put(1) || __lmod+=1 ?}
                     ?}",
                     1
                   );
   __UPG.msg('Zaktualizowano definicje komunikatów dla licencji Portal HR.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
?};
PORTALO.cntx_pop();
PORTALO.trig_on('*','*');
VAR_DEL.delete('__lrec','__lmod');
_res


\PORTALO_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Aktualizacja definicji komunikatów dla licencji Portal HR
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja definicji komunikatów dla licencji Portal HR'


\OZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Uzupełnia pola tabeli OZ - okresy i parametry dla użytkowników
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
OZ.cntx_psh();
OZ.prefix();
OZ.for_each("
   _put:=0;
   __lrec+=1;
   {? OZ.PD_WIDOK='' || OZ.PD_WIDOK:='G'; _put:=1 ?};
   {? _put || {? OZ.put(1) || __lmod+=1 ?} ?}
",0);
OZ.cntx_pop();
__UPG.msg('Zaktualizowano okresy i parametry dla użytkowników.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_result


\OZ_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Uzupełnia pola tabeli OZ - okresy i parametry dla użytkowników - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnia pola w tabeli okresy i parametry dla użytkowników'


\KEOP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Uzupełnia pola tabeli KEOP - Pozycje kart ewidencji odpadów
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_msk:=KEOP.names();
_msk.clear();
KEOP.cntx_psh();
{? _msk.first()
|| {!
   |? KEOP.use(_msk.NAME);
      KEOP.prefix();
      KEOP.for_each("
         __lrec+=1;
         _put:=0;
         {? KEOP.LOSS='' || KEOP.LOSS:='N'; _put:=1 ?};
         {? KEOP.GEN='' || KEOP.GEN:='N'; _put:=1 ?};
         {? _put || __lmod+=1; KEOP.put() ?}
      ",1);
      _msk.next()
   !}
?};
KEOP.cntx_pop();
__UPG.msg('Zaktualizowano pozycje kart ewidencji odpadów.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_result


\KEOP_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Uzupełnia pola tabeli KEOP - Pozycje kart ewidencji odpadów - opis.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnia pola pozycjom kart ewidencji odpadów.'


\WYDRUKIL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Aktualizacja tabeli WYDRUKIL - parametry wydruków
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=0;
__lmod:=0;
WYDRUKIL.prefix();
WYDRUKIL.for_each("
   __lrec+=1;
   _put:=0;
   {? WYDRUKIL.DP='' || WYDRUKIL.DP:='N'; _put:=1 ?};
   {? _put & WYDRUKIL.put(1) || __lmod+=1 ?}
");
__UPG.msg('Zaktualizowano dane parametrów wydruków.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
1


\WYDRUKIL_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Aktualizacja tabeli WYDRUKIL - parametry wydruków - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja danych parametrów wydruków'


\fakskh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Uzupełnia pola tabeli FAKSKH
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

_formula:="
KH.cntx_psh();
FAKSKH.cntx_psh();
FAKSKH.prefix();
{? FAKSKH.first()
|| {!
   |? __lrec+=1;
      _put:=0;
      {? FAKSKH.SYS='' || _put:=1; FAKSKH.SYS:='N' ?};
      _kpocz:=FAKSKH.KH().KPOCZ; {? _kpocz<>'' & FAKSKH.KPOCZ='' || _put:=1; FAKSKH.KPOCZ:=_kpocz ?};
      {? _put
      || {? FAKSKH.put(1)
         || __lmod+=1
         ?}
      ?};
      FAKSKH.next()
   !}
?};
FAKSKH.cntx_pop();
KH.cntx_pop();
1
";
FAKSKH.cntx_psh();
FAKSKH.prefix();
_result:=FAKS.for_each(_formula,1);
FAKSKH.cntx_pop();

_result:=exec('for_each_mask','#table',FAKSKH,_formula,,,,1,1);

{? _result
|| __UPG.msg('Zaktualizowano dodatkowe podmiotów dokumentu sprzedaży.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji dodatkowych podmiotów dokumentu sprzedaży.')
?};
VAR_DEL.delete('__lrec','__lmod');
_result


\fakskh_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [22.26]
:: OPIS: Uzupełnia pola w tabeli FAKSKH - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja dodatkowych podmiotów dokumentu sprzedaży.'


\porsloit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [22.26]
:: OPIS: Aktualizacja elementów słowników wykorzystywanych na portalu.
::----------------------------------------------------------------------------------------------------------------------
_porslo:=obj_ntab_names(obj_new('TypOdbioru','OdbiorNadgodzin','OkresyRozliczeniowe','ZaswiadczenieNazwa'));
_firma:=exec('por_conf_firma','portal_lib',exec('ref_firma','ustawienia')).firma;

_delAllFrom:=
   "_firma:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};
    _code:={? var_pres('_b')=type_of('') & _b<>'' || _b || return(_result) ?};
    PORSLO.cntx_psh();
    PORSLO.index('FIELD');
    PORSLO.prefix(_firma,exec('customField','portal_slowniki'),'',_code);
    {? PORSLO.first()
    || PORSLOIT.cntx_psh();
       PORSLOIT.index('SLOVAL');
       PORSLOIT.prefix(PORSLO.ref,);
       {? PORSLOIT.first() || {! |? PORSLOIT.del !} ?};
       PORSLOIT.cntx_pop()
    ?};
    PORSLO.cntx_pop()
   ";

{! _index:=1..obj_len(_porslo) |! _delAllFrom(_firma,_porslo[_index]) !};

exec('init','portal_slowniki','J');
exec('init','portal_slowniki','W');

__UPG.msg('Zaktualizowano zawartość słowników portalowych.'@);

1


\porsloit_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [22.26]
:: OPIS: Aktualizacja elementów słowników wykorzystywanych na portalu - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zawartości słowników wykorzystywanych na portalu.'


\odd_pola
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Uzupełnienie nowych pól O.B_ODD, H_ODDE.POD_M, H.CZYWAL4, H.PAT, H_ODDP.KW_PLN.
::  ORG: \odd_pola/upgrade_2226.fml
::  ORG: \H_pat_upd/upgrade_2226.fml
::----------------------------------------------------------------------------------------------------------------------
_err:=_suc:=_goo:=0;
_ret:=1;
{? var_pres('POD_M',H_ODDE)>0
|| _MSK:=H_ODDE.names();
   _MSK.clear();
   {? _MSK.first()
   || H_ODDE.cntx_psh();
      {!
      |? H_ODDE.use(_MSK.NAME);
         H_ODDE.prefix();
         {? H_ODDE.first()
         || H_ODDE.trig_off('*','*');
            {!
            |? {? ',W,O,B,'*',%1,'[H_ODDE.POD_M]
               || _goo+=1
               || H_ODDE.POD_M:='B';
                  {? H_ODDE.put()
                  || _suc+=1
                  || _err+=1
                  ?}
               ?};

               H_ODDE.next()
            !};
            H_ODDE.trig_on('*','*')
         ?};

         _MSK.next()
      !};
      H_ODDE.cntx_pop()
   ?};
   obj_del(_MSK)
|| __UPG.msg('Brak pola H_ODDE.POD_M w definicji.');
   _ret:=-1
?};

_MSK:=H.names();
_MSK.clear();
{? _MSK.first()
|| H.cntx_psh();
   {!
   |? H.use(_MSK.NAME);
      H.prefix();
      {? H.first()
      || H.trig_off('*','*');
         {!
         |? _put:=0;
            {? H.CZYWAL4<>'T' & H.CZYWAL4<>'N'
            || H.CZYWAL4:='N';
               _put:=1
            ?};
            {? H.PAT=''
            || H.PAT:='N';
               _put:=1
            ?};
            {? _put
            || {? H.put()
               || _suc+=1
               || _err+=1
               ?}
            || _goo+=1
            ?};
            H.next()
         !};
         H.trig_on('*','*')
      ?};

      _MSK.next()
   !};
   H.cntx_pop()
?};
obj_del(_MSK);

{? var_pres('B_ODD',O)>0
|| O.cntx_psh();
   O.prefix();
   {? O.first()
   || O.trig_off('*','*');
      {!
      |? {? ',T,N,'*',%1,'[O.B_ODD]
         || _goo+=1
         || O.B_ODD:='N';
            {? O.put()
            || _suc+=1
            || _err+=1
            ?}
         ?};

         O.next()
      !};
      O.trig_on('*','*')
   ?};
   O.cntx_pop()
|| __UPG.msg('Brak pola O.B_ODD w definicji.');
   _ret:=-1
?};

{? var_pres('KW_PLN',H_ODDP)>0
|| WAL.cntx_psh();
   O.cntx_psh();
   O.index('LISTYPZN');
   H.cntx_psh();
   P.cntx_psh();
   H_ODDE.cntx_psh();
   H_ODDP.cntx_psh();
   H_ODDP.prefix();
   {? H_ODDP.first()
   || H_ODDP.trig_off('*','*');
      exec('RAPLS','object');
      {!
      |? {? +H_ODDP.LT
         || O.prefix(H_ODDP.H_ODDE().H().P().FIRMA);
            {? O.find_key(-H_ODDP.LT)
            || {? H_ODDP.KW_PLN<>0
               || _goo+=1
               || _kurs:=
                     {? H_ODDP.WAL().SYM<>'PLN'
                     || exec('kurs_waluty','oddelegowanie',WAL.SYM,H_ODDP.H_ODDE().TKRS)
                     || 1
                     ?};
                  H_ODDP.KW_PLN:=H_ODDP.KW*_kurs$2;
                  {? H_ODDP.put()
                  || _suc+=1
                  || _err+=1
                  ?}
               ?}
            || _err+=1
            ?}
         ?};

         H_ODDP.next()
      !};
      H_ODDP.trig_on('*','*')
   ?};
   H_ODDP.cntx_pop();
   H_ODDE.cntx_pop();
   P.cntx_pop();
   H.cntx_pop();
   O.cntx_pop();
   WAL.cntx_pop()
|| __UPG.msg('Brak pola O.B_ODD w definicji.');
   _ret:=-1
?};

__UPG.msg('Liczba poprawionych rekordów: %1' [$_suc]);
{? _goo
|| __UPG.msg('Liczba rekordów niewymagających poprawienia: %1' [$_goo])
?};
{? _err
|| __UPG.msg('Liczba niepoprawionych rekordów: %1' [$_err]);
   _ret:=-1
?};

_ret


\odd_pola_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Uzupełnienie nowych pól H_ODDE.POD_M, H.CZYWAL4, O.B_ODD.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Uzupełniono pola O.B_ODD, H_ODDE.POD_M i H.CZYWAL4 wartością początkową.'


\GRUPPRAC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Aktualizacja danych GRUPPRAC.OSOBA
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? var_pres('OSOBA',@.GRUPPRAC)>0
|| GRUPPRAC.clear();
   GRUPPRAC.for_each("GRUPPRAC.put()");
   __UPG.msg('Zaktualizowano grupy pracowników.');
   __UPG.msg('Przetworzono: %1 zapisów.'[$GRUPPRAC.size()])
|| __UPG.msg('Nie zaktualizowano grup pracowników.');
   _res:=0
?};
_res


\GRUPPRAC_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Aktualizacja danych GRUPPRAC.OSOBA - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja grup pracowników'


\zaomeda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Zmiana budowy identyfikatora dokumentacji i identyfikatora dokumentu.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_bledow:=0;
_poprawnych:=_do_poprawy:=_poprawionych:=_niepoprawionych:=0;
ZAOMEDA.cntx_psh();
ZAOMEDA.prefix();
ZAOMEDA.f_set('NAG');
_wszystkich:=ZAOMEDA.size();
{? ZAOMEDA.f_first()
|| OSOBA.cntx_psh();
   OSOBA.prefix();
   ZALACZ.cntx_psh();
   ZALACZ.prefix();
   ZAOMEDA.trig_off('*','*');
   {!
   |? {? ref_tab(ZAOMEDA.NAG)=ZALACZ
      || {? ZALACZ.seek(ZAOMEDA.NAG)
         || {? ZAOMEDA.NAG=ZALACZ.uidref() & ZAOMEDA.OSOBA=ZALACZ.OSOBA & ZAOMEDA.ID=ZALACZ.OSOBA().uidref()
            || _poprawnych+=1
            || _do_poprawy+=1;
               ZAOMEDA.NAG:=ZALACZ.uidref();
               ZAOMEDA.ID:=ZALACZ.OSOBA().uidref() ;
               ZAOMEDA.OSOBA:=ZALACZ.OSOBA;
               {? ZAOMEDA.put(1)
               || _poprawionych+=1
               || _niepoprawionych+=1
               ?}
            ?}
         || _bledow+=1
         ?}
       ?};
      ZAOMEDA.f_next()
   !};
   ZAOMEDA.trig_on('*','*');
   ZALACZ.cntx_pop();
   OSOBA.cntx_pop()
?};
ZAOMEDA.f_clear();
ZAOMEDA.cntx_pop();

__UPG.msg('Rekordów w dziedzinie: %1' [$_wszystkich]);
__UPG.msg(' * Rekordów poprawnych (niewymagających zmian): %1' [$_poprawnych]);
__UPG.msg(' * Rekordów do zmiany (wymagających zmian): %1' [$_do_poprawy]);
__UPG.msg('   - Rekordów poprawionych: %1' [$_poprawionych]);
__UPG.msg('   - Rekordów, których nie udało się poprawić: %1' [$_niepoprawionych]);
{? _bledow>0
|| __UPG.msg('');
   __UPG.msg('W trakcie przetwarzania nie udało się znaleźć wszystkich rekordów źródłowych.');
   __UPG.msg('Operacja musi być powtórzona.')
?};

{? _bledow=0 || 1 || -1 ?}


\zaomeda_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Zmiana budowy identyfikatora dokumentacji i identyfikatora dokumentu - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Dokumentacja pracownicza:\n'
' - zmiana budowy identyfikatora dokumentacji;\n'
' - zmiana budowy identyfikatora dokumentu;\n'
' - uzupełnienie nowego pola (OSOBA).'


\portalwu_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Formuła inicjująco-sprzątająca w PORTALWU - odpowiedzialna za synchronizację zawartości tabeli na podstawie
::       atrybutu 193.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('lic','#b_domain','POR')
|| __UPG.msg('Brak licencji na Portal HR.');
   return(1)
?};
_ret:=exec('portalwu_init','portal_nieobecnosci',1);
{? _ret=''
|| __UPG.msg('Aktualizacja parametrów wniosków o urlop nie była wymagana.')
|| __UPG.msg('Lista kodów nieobecności zaktualizowanych pozycji: %1.'[_ret])
?};
1


\portalwu_init_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Formuła inicjująco-sprzątająca w PORTALWU - odpowiedzialna za synchronizację zawartości tabeli na podstawie
::       atrybutu 193 - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Formuła inicjująco parametry wniosków o urlop'


\sync_mwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Dodanie komunikatów API.
::  ORG: \sync_mwa/upgrade_2226.fml
::  ORG: \sync_mwa/upgrade_2226_14.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('lic','#b_domain','POR')
|| __UPG.msg('Brak licencji na Portal HR.');
   return(1)
?};

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

_mtype:=obj_new('DELETE','SEND','RECEIVE','EXEC');
_mtype.DELETE:=exec('mwac_type_delete','synchro');
_mtype.SEND:=exec('mwac_type_send','synchro');
_mtype.RECEIVE:=exec('mwac_type_receive','synchro');
_mtype.EXEC:=exec('mwac_type_exec','synchro');

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

_data:=obj_new(1);
{! _lpdd:=1 .. obj_len(_data)
|! _data[_lpdd]:=obj_new('PD','el')
!};

_data[1].PD:='PORTAL';
_data[1].el:=obj_new(9);

_data[1].el[1]:=obj_new('BEFORE','NEW');
_data[1].el[1].BEFORE:=obj_new('TYPE','METHOD');
_data[1].el[1].BEFORE.TYPE:=_mtype.DELETE;
_data[1].el[1].BEFORE.METHOD:='chr_PersonDelete';
_data[1].el[1].NEW:=obj_new('TYPE','METHOD','TAB_ACR','PACK','SYNC_REP','DESC');
_data[1].el[1].NEW.TYPE:=_mtype.DELETE;
_data[1].el[1].NEW.METHOD:='sl_SloImageDelete';
_data[1].el[1].NEW.TAB_ACR:='P';
_data[1].el[1].NEW.PACK:=0;
_data[1].el[1].NEW.SYNC_REP:=1;
_data[1].el[1].NEW.DESC:='Zdjęcie współpracownika.';

_data[1].el[2]:=obj_new('BEFORE','NEW');
_data[1].el[2].BEFORE:=obj_new('TYPE','METHOD');
_data[1].el[2].BEFORE.TYPE:=_mtype.SEND;
_data[1].el[2].BEFORE.METHOD:='chr_PersonWorkScheduleDelete';
_data[1].el[2].NEW:=obj_new('TYPE','METHOD','TAB_ACR','PACK','SYNC_REP','DESC');
_data[1].el[2].NEW.TYPE:=_mtype.SEND;
_data[1].el[2].NEW.METHOD:='sl_SloImageDelete';
_data[1].el[2].NEW.TAB_ACR:='P';
_data[1].el[2].NEW.PACK:=0;
_data[1].el[2].NEW.SYNC_REP:=2;
_data[1].el[2].NEW.DESC:='Zdjęcie współpracownika.';

_data[1].el[3]:=obj_new('BEFORE','NEW');
_data[1].el[3].BEFORE:=obj_new('TYPE','METHOD');
_data[1].el[3].BEFORE.TYPE:=_mtype.SEND;
_data[1].el[3].BEFORE.METHOD:='chr_PersonWorkScheduleDelete';
_data[1].el[3].NEW:=obj_new('TYPE','METHOD','TAB_ACR','PACK','SYNC_REP','DESC');
_data[1].el[3].NEW.TYPE:=_mtype.SEND;
_data[1].el[3].NEW.METHOD:='sl_SloImageModify';
_data[1].el[3].NEW.TAB_ACR:='P';
_data[1].el[3].NEW.PACK:=0;
_data[1].el[3].NEW.SYNC_REP:=2;
_data[1].el[3].NEW.DESC:='Zdjęcie współpracownika.';

_data[1].el[4]:=obj_new('BEFORE','NEW');
_data[1].el[4].BEFORE:=obj_new('TYPE','METHOD','TAB_ACR');
_data[1].el[4].BEFORE.TYPE:=_mtype.SEND;
_data[1].el[4].BEFORE.METHOD:='chr_KnowledgeBaseItemModify';
_data[1].el[4].BEFORE.TAB_ACR:='BNFTT';
_data[1].el[4].NEW:=obj_new('TYPE','METHOD','TAB_ACR','PACK','SYNC_REP','DESC');
_data[1].el[4].NEW.TYPE:=_mtype.SEND;
_data[1].el[4].NEW.METHOD:='chr_KnowledgeBaseItemDelete';
_data[1].el[4].NEW.TAB_ACR:='BNFTT';
_data[1].el[4].NEW.PACK:=0;
_data[1].el[4].NEW.SYNC_REP:=-1;
_data[1].el[4].NEW.DESC:='Nagłówek elementu benefitu.';

_data[1].el[5]:=obj_new('BEFORE','NEW');
_data[1].el[5].BEFORE:=obj_new('TYPE','METHOD','TAB_ACR');
_data[1].el[5].BEFORE.TYPE:=_mtype.DELETE;
_data[1].el[5].BEFORE.METHOD:='sl_TenantParamsDelete';
_data[1].el[5].BEFORE.TAB_ACR:='PORPAR';
_data[1].el[5].NEW:=obj_new('TYPE','METHOD','TAB_ACR','PACK','SYNC_REP','DESC');
_data[1].el[5].NEW.TYPE:=_mtype.DELETE;
_data[1].el[5].NEW.METHOD:='chr_WorkingHoursDelete';
_data[1].el[5].NEW.TAB_ACR:='PORSLOIT';
_data[1].el[5].NEW.PACK:=0;
_data[1].el[5].NEW.SYNC_REP:=1;
_data[1].el[5].NEW.DESC:='Wymiary etatów.';

_data[1].el[6]:=obj_new('BEFORE','NEW');
_data[1].el[6].BEFORE:=obj_new('TYPE','METHOD','TAB_ACR');
_data[1].el[6].BEFORE.TYPE:=_mtype.SEND;
_data[1].el[6].BEFORE.METHOD:='chr_PersonModify';
_data[1].el[6].BEFORE.TAB_ACR:='P';
_data[1].el[6].NEW:=obj_new('TYPE','METHOD','TAB_ACR','PACK','SYNC_REP','DESC');
_data[1].el[6].NEW.TYPE:=_mtype.SEND;
_data[1].el[6].NEW.METHOD:='chr_WorkingHoursModify';
_data[1].el[6].NEW.TAB_ACR:='PORSLOIT';
_data[1].el[6].NEW.PACK:=1;
_data[1].el[6].NEW.SYNC_REP:=2;
_data[1].el[6].NEW.DESC:='Wymiary etatów.';

_data[1].el[7]:=obj_new('BEFORE','NEW');
_data[1].el[7].BEFORE:=obj_new('TYPE','METHOD');
_data[1].el[7].BEFORE.TYPE:=_mtype.SEND;
_data[1].el[7].BEFORE.METHOD:='csl_TenantUserCompanyModify';
_data[1].el[7].NEW:=obj_new('TYPE','METHOD','TAB_ACR','SYNC_REP','DESC');
_data[1].el[7].NEW.TYPE:=_mtype.RECEIVE;
_data[1].el[7].NEW.METHOD:='csl_PCRightsDefinitionGet';
_data[1].el[7].NEW.TAB_ACR:='PORTALU';
_data[1].el[7].NEW.SYNC_REP:=-1;
_data[1].el[7].NEW.DESC:='Wzorzec uprawnień';

_data[1].el[8]:=obj_new('BEFORE','NEW');
_data[1].el[8].BEFORE:=obj_new('TYPE','METHOD');
_data[1].el[8].BEFORE.TYPE:=_mtype.RECEIVE;
_data[1].el[8].BEFORE.METHOD:='csl_PCRightsDefinitionGet';
_data[1].el[8].NEW:=obj_new('TYPE','METHOD','TAB_ACR','SYNC_REP','DESC');
_data[1].el[8].NEW.TYPE:=_mtype.RECEIVE;
_data[1].el[8].NEW.METHOD:='chr_SystemLogToERPGet';
_data[1].el[8].NEW.TAB_ACR:='I_LOG';
_data[1].el[8].NEW.SYNC_REP:=-1;
_data[1].el[8].NEW.DESC:='Logowanie użytkowników';

_data[1].el[9]:=obj_new('BEFORE','NEW');
_data[1].el[9].BEFORE:=obj_new('TYPE','METHOD');
_data[1].el[9].BEFORE.TYPE:=_mtype.RECEIVE;
_data[1].el[9].BEFORE.METHOD:='chr_SystemLogToERPGet';
_data[1].el[9].NEW:=obj_new('TYPE','METHOD','TAB_ACR','SYNC_REP','DESC');
_data[1].el[9].NEW.TYPE:=_mtype.EXEC;
_data[1].el[9].NEW.METHOD:='chr_PersonResendRegMailModify';
_data[1].el[9].NEW.TAB_ACR:='USERS';
_data[1].el[9].NEW.SYNC_REP:=-1;
_data[1].el[9].NEW.DESC:='Ponowna wysyłka maila rejestracyjnego';

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_ret:=1;
SYNC_REP.cntx_psh();
SYNC_REP.index('PDNR1');
SYNC_MWA.cntx_psh();
{! _lppd:=1 .. obj_len(_data)
|! SYNC_REP.prefix(_data[_lppd].PD,);
   SYNC_MWA.index('TREE');
   SYNC_MWA.prefix(0,_data[_lppd].PD,0);
   {? SYNC_MWA.first()
   || _root:=#SYNC_MWA.ref();
      _pd:=SYNC_MWA.SYNC_PD;
      _mwac:=SYNC_MWA.MWAC;
      SYNC_MWA.index('PD_METH1');
      SYNC_MWA.prefix(_data[_lppd].PD,);
      {! _lpm:=1 .. obj_len(_data[_lppd].el)
      |! {? SYNC_MWA.find_key(_data[_lppd].el[_lpm].NEW.TYPE,_data[_lppd].el[_lpm].NEW.METHOD,)
         || __UPG.msg(
               'Komunikat %1 typu "%2" dla przeznaczenia danych %3 już istniał.'
               [_data[_lppd].el[_lpm].NEW.METHOD,_data[_lppd].el[_lpm].NEW.TYPE,_data[_lppd].PD]
            )
         |? SYNC_MWA.find_key(_data[_lppd].el[_lpm].BEFORE.TYPE,_data[_lppd].el[_lpm].BEFORE.METHOD,)
         || do();
            _lp:=SYNC_MWA.LP;
            _sync_rep:=
               {? _data[_lppd].el[_lpm].NEW.SYNC_REP=-1
               || SYNC_MWA.SYNC_REP
               |? _data[_lppd].el[_lpm].NEW.SYNC_REP=0
               || null()
               |? SYNC_REP.find_key(_data[_lppd].el[_lpm].NEW.SYNC_REP)
               || SYNC_REP.ref()
               || __UPG.msg(
                     'Komunikat %1 typu "%2" dla przeznaczenia danych %3  - zweryfikuj informacje o replice.'
                     [_data[_lppd].el[_lpm].NEW.METHOD,_data[_lppd].el[_lpm].NEW.TYPE,_data[_lppd].PD]
                  );
                  null()
               ?};
            SYNC_MWA.cntx_psh();
            SYNC_MWA.index('TREE1');
            SYNC_MWA.prefix(_root);
            {? SYNC_MWA.last()
            || {!
               |? SYNC_MWA.LP+=1;
                  SYNC_MWA.put();
                  SYNC_MWA.LP>_lp+1 & SYNC_MWA.prev()
               !};
               SYNC_MWA.blank();
               SYNC_MWA.SYNC_PD:=_pd;
               SYNC_MWA.MWAC:=_mwac;
               SYNC_MWA.PARENT:=_root;
               SYNC_MWA.LP:=_lp;
               SYNC_MWA.TYPE:=_data[_lppd].el[_lpm].NEW.TYPE;
               SYNC_MWA.METHOD:=_data[_lppd].el[_lpm].NEW.METHOD;
               SYNC_MWA.TAB_ACR:=_data[_lppd].el[_lpm].NEW.TAB_ACR;
               SYNC_MWA.AKT:='T';
               SYNC_MWA.PACK:=_data[_lppd].el[_lpm].NEW.PACK;
               SYNC_MWA.SYNC_REP:=_sync_rep;
               {? SYNC_MWA.add()
               || SYNC_MWA.memo_set(_data[_lppd].el[_lpm].NEW.DESC,'DESC');
                  {? SYNC_MWA.memo_put(,'DESC')
                  || __UPG.msg(
                        'Komunikat %1 typu "%2" dla przeznaczenia danych %3 został dodany.'
                        [_data[_lppd].el[_lpm].NEW.METHOD,_data[_lppd].el[_lpm].NEW.TYPE,_data[_lppd].PD]
                     )
                  || __UPG.msg(
                        'Opis komunikatu %1 typu "%2" dla przeznaczenia danych %3 nie został dodany.'
                        [_data[_lppd].el[_lpm].NEW.METHOD,_data[_lppd].el[_lpm].NEW.TYPE,_data[_lppd].PD]
                     );
                     _ret:=-1
                  ?}
               || __UPG.msg(
                     'Komunikat %1 typu "%2" dla przeznaczenia danych %3 nie został dodany (1).'
                     [_data[_lppd].el[_lpm].NEW.METHOD,_data[_lppd].el[_lpm].NEW.TYPE,_data[_lppd].PD]
                  );
                  _ret:=-1
               ?}
            ?};
            SYNC_MWA.cntx_pop();
            {? ~end()
            || __UPG.msg(
                  'Komunikat %1 typu "%2" dla przeznaczenia danych %3 został dodany (2).'
                  [_data[_lppd].el[_lpm].NEW.METHOD,_data[_lppd].el[_lpm].NEW.TYPE,_data[_lppd].PD]
               );
               _ret:=-1
            ?}
         || __UPG.msg(
               'Odnalezienie komunikatu %1 typu "%2" nie powiodło się.'
               [_data[_lppd].el[_lpm].BEFORE.METHOD,_data[_lppd].el[_lpm].BEFORE.TYPE]
            );
            _ret:=-1
         ?}
      !}

   || __UPG.msg('Brak przeznaczenia danych %1.\nKomunikaty nie zostaną dodane.'[_data[_lppd].PD])
   ?}
!};
SYNC_MWA.cntx_pop();
SYNC_REP.cntx_pop();
_ret


\sync_mwa_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Dodanie komunikatów API.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Dodanie komunikatów API'


\pakiet_mobilnosci
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Uzupełnienie parametrów oddelegowań (pakiet mobilności).
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
{? PAR_SKID.get(261)='N'
|| __UPG.msg('Brak włączonych oddelegowań w systemie.'@);
   return(1)
?};
_parNum:=397;
_dataParam:=exec('get_par_date','parametr',_parNum);
{? _dataParam=date(0,0,0)
|| {? FUN.ask('%1 %2: "%3".\n(%4 -> %5 -> %6 -> %7 -> %8)\n%9\n%10\n\n%11'
         ['Należy uzupełnić wartość parametru'@,$_parNum,PAR_SKID.opis(_parNum),'Ustawienia i parametryzacja'@,
         'Parametryzacja'@,'Wspólne'@,'Ustawienia systemu'@,'Lista parametrów'@,
         'Parametr powoduje, że od wprowadzonej daty diety pomniejszające przychód wykorzystywane przy rozliczaniu '
         'oddelegowań oraz kierowców (pakiet mobilności) będą liczone na nowym składniku 7197. '
         'Składnik 780 - Podst. opodatkowania zostanie pomniejszony o wartość 30\% diet (7197 - OZ: Diety pomn. prz.).'@,
         'Zmianę daty parametru należy wykonać po zamknięciu wszystkich list z wybranego miesiąca.'@,
         'Czy ustawiono wartość parametru?'@])
   || __UPG.msg('%1 %2.'['Użytkownik potwierdził wypełnienie parametru'@,$_parNum]);
      _result:=1
   || _result:=-1
   ?}
|| __UPG.msg('%1 %2 %3.'['Parametr'@,$_parNum,'posiada już ustawioną datę'@]);
   _result:=1
?};
{? _result=1
|| _parNum:=398;
   {? ~exec('czy_par_t','parametr',_parNum)
   || {? FUN.ask('%1 %2: "%3".\n(%4 -> %5 -> %6 -> %7 -> %8)\n%9\n%10\n\n%11'
            ['Należy uzupełnić wartość parametru'@,$_parNum,PAR_SKID.opis(_parNum),'Ustawienia i parametryzacja'@,
            'Parametryzacja'@,'Wspólne'@,'Ustawienia systemu'@,'Lista parametrów'@,
            'Parametr pozwala na naliczanie skladki zdrowotnej dla pracownika oddelegowaanego płacącego składki ZUS '
            'w Polsce a podadki w kraju oddelegowania.'@,
            'Jeśli naliczać składkę zdrowotną tak jak w wersji 21.37 należy ustawić w parametrze wartość "T".'@,
            'Czy ustawiono wartość parametru?'@])
      || __UPG.msg('%1 %2.'['Użytkownik potwierdził wypełnienie parametru'@,$_parNum]);
         _result:=1
      || _result:=-1
      ?}
   || __UPG.msg('%1 %2 %3.'['Parametr'@,$_parNum,'posiada już ustawioną wartość "T".'@]);
      _result:=1
   ?}
?};

_result


\pakiet_mobilnosci_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Uzupełnienie parametrów oddelegowań - opis.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie parametrów oddelegowań (pakiet mobilności)'


\p_zdjecie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Wymuszenie wysyłki na Portal HR zdjęć współpracowników.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('lic','#b_domain','POR')
|| __UPG.msg('Brak licencji na Portal HR.');
   return(1)
?};

_ret:=1;
P.cntx_psh();
P.index('FIRMA_ZA');
P.prefix();
{? P.first()
|| _ile:=0;
   P.trig_off('*','*');
   OSOBA.cntx_psh();
   OSOBA.prefix();
   {!
   |? {? P.PORTAL='T' & P.OSOBA().ZDJECIE<>null()
      || _ile+=P.put(,1)
      ?};
      P.next()
   !};
   OSOBA.cntx_pop();
   P.trig_on('*','*');
   __UPG.msg('Liczba współpracowników ze zdjęciami: %1'[$_ile])
?};
P.cntx_pop();
_ret


\p_zdjecie_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Wymuszenie wysyłki na Portal HR zdjęć współpracowników.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Wymuszenie wysyłki na Portal HR zdjęć współpracowników.'


\new_fld_RU
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Uzupełnienie nowych pól w tabeli RU.
::  ORG: \RU/upgrade_2137_02.fml
::  ORG: \RU/upgrade_2137_13.fml
::  ORG: \pola_PL2023/upgrade_2226_06.fml
::----------------------------------------------------------------------------------------------------------------------
_cnt:=0;
_err:=0;

RU.trig_off('*','*');
RU.cntx_psh();
RU.clear();
_size:=RU.size();
{? _size>0
|| _loop:=RU.first();
   {!
   |? _loop
   |! {? RU.BEZPOD='' | RU.PTPZP='' | RU.RKU='' | RU.UP='' | RU.WRKU50=''
      || {? RU.BEZPOD=''
         || {? RU.K='1' | RU.K='2' | RU.K='4' | RU.K='5' | RU.K='6' | RU.K='v' | RU.K='y'
            || RU.BEZPOD:='T'
            || RU.BEZPOD:='N'
            ?}
         ?};
         {? RU.PTPZP=''
         || {? RU.K='1'
            || RU.PTPZP:='T'
            || RU.PTPZP:='N'
            ?}
         ?};
         {? RU.RKU=''
         || {? RU.K<>'5'
            || RU.RKU:='P'
            || RU.RKU:='K'
            ?}
         ?};
         {? RU.UP=''
         || {? ',1,2,3,4,5,6,'*',%1,'[RU.K]
            || RU.UP:='T'
            || RU.UP:='N'
            ?}
         ?};
         {? RU.WRKU50=''
         || {? ',2,3,'*',%1,'[RU.K]
            || RU.WRKU50:='T'
            || RU.WRKU50:='N'
            ?}
         ?};
         {? RU.put()
         || _cnt+=1
         || _err+=1
         ?}
      ?};
      _loop:=RU.next()
   !}
?};
RU.cntx_pop();
RU.trig_on('*','*');

__UPG.msg('Liczba wszystkich wierszy: %1.'[$_size]);
__UPG.msg('Liczba zaktualizowanych wierszy: %1.'[$_cnt]);
__UPG.msg('Błędy aktualizacji wierszy: %1.'[$_err]);

{? _err>0 || -1 || 1 ?}


\new_fld_RU_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Uzupełnienie nowych pól w tabeli RU - opis.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie nowych pól w tabeli RU.'


\paperless_dane_wzorcowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [21.37]
:: OPIS: Import danych wzorcowych dla aktualizacji Paperless HR.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Podczas importu danych wzorcowych Paperless HR należy wskazać folder w którym będą umieszone tylko pliki:'
         ' hr_portal_slowniki.xlsx, obieg_wnioskow_HR_Portal.xlsx, obieg_wniosków_bez_papieru.xlsx,'
         ' parametryzacja.xlsx, personel_slowniki.xlsx oraz slowniki_portal.xlsx.'@);
exec('import_init','#excel_imex');
_result:=0;
{? FUN.ask('Czy oznaczyć zadanie: \'%1\' jako wykonane?'@['paperless_dane_wzorcowe'])
|| __UPG.msg('Import danych wzorcowych dla aktualizacji 21.37_01.');
   _result:=1
|| _result:=-1
?};
_result


\paperless_dane_wzorcowe_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [21.37]
:: OPIS: Import danych wzorcowych dla aktualizacji Paperless HR.
::   WE:
::   WY: opis zadania potransferowego
::----------------------------------------------------------------------------------------------------------------------
'Import danych wzorcowych dla aktualizacji 21.37_01.'


\OS_ZWSLO
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Dodanie słownika dla rodzajów zwolnionego przychodu od podatku.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('OS_ZWSLO')=type_of(SYSLOG)
|| _cnt:=0;
   OS_ZWSLO.cntx_psh();
   OS_ZWSLO.index('KOD');
   OS_ZWSLO.prefix(exec('ref_firma','ustawienia'));
   {? ~OS_ZWSLO.first()
   || OS_ZWSLO.blank();
      OS_ZWSLO.KOD:='ZWPOD';
      OS_ZWSLO.RODZAJ:='Młody pracownik (art. 21 ust. 1 pkt 148)';
      OS_ZWSLO.ROCZNE:='T';
      OS_ZWSLO.ZDR:='T';
      _cnt+=OS_ZWSLO.add(1);
      OS_ZWSLO.KOD:='ZWPODE';
      OS_ZWSLO.RODZAJ:='Emeryt (art. 21 ust. 1 pkt 154)';
      OS_ZWSLO.ROCZNE:='T';
      OS_ZWSLO.ZDR:='T';
      _cnt+=OS_ZWSLO.add(1);
      OS_ZWSLO.KOD:='ZWPODD';
      OS_ZWSLO.RODZAJ:='Wielodzietność (art. 21 ust. 1 pkt 153)';
      OS_ZWSLO.ROCZNE:='T';
      OS_ZWSLO.ZDR:='T';
      _cnt+=OS_ZWSLO.add(1);
      OS_ZWSLO.KOD:='ZWPODP';
      OS_ZWSLO.RODZAJ:='Powrót z zagranicy (art. 21 ust. 1 pkt 152)';
      OS_ZWSLO.ROCZNE:='N';
      OS_ZWSLO.ZDR:='T';
      _cnt+=OS_ZWSLO.add(1)
   ?};
   OS_ZWSLO.cntx_pop();
   {? _cnt>0
   || __UPG.msg('Dodano nowy słownik dla rodzajów zwolnionego przychodu od podatku.')
   ?}
?};

1


\OS_ZWSLO_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Dodanie słownika dla rodzajów zwolnionego przychodu od podatku - opis.
::----------------------------------------------------------------------------------------------------------------------
'Dodanie słowników dla rodzajów zwolnionego przychodu od podatku.'


\OS_ZWPOD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Uzupełnienie nowych pól w tabeli OS_ZWPOD.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('OS_ZWSLO')=type_of(SYSLOG)
|| OS_ZWSLO.cntx_psh();
   OS_ZWSLO.index('KOD');
   OS_ZWSLO.prefix(exec('ref_firma','ustawienia'));
   _ref:={? OS_ZWSLO.find_key('ZWPOD',) || OS_ZWSLO.ref() || null ?};
   OS_ZWSLO.cntx_pop();
   OS_ZWPOD.cntx_psh();
   OS_ZWPOD.index('OS_ZWPOD');
   OS_ZWPOD.prefix(exec('ref_firma','ustawienia'));
   {? OS_ZWPOD.first()
   || OS_ZWPOZ.cntx_psh();
      OS_ZWPOZ.prefix();
      {!
      |? {? OS_ZWPOD.OS_ZWSLO=null
         || OS_ZWPOD.OS_ZWSLO:=_ref;
            {? OS_ZWPOD.D_OW~1=OS_ZWPOD.ROK
            || OS_ZWPOD.ROK_Z:=OS_ZWPOD.D_OW~1
            || OS_ZWPOD.ROK_Z:=OS_ZWPOD.ROK;
               OS_ZWPOD.D_OW:=date(OS_ZWPOD.ROK,12,0)
            ?};
            OS_ZWPOD.AKTYWNY:='N';
            OS_ZWPOD.put();

::          Przeniesienie danych dotyczących zwolnionego przychodu z OS_ZWPOD (PRZYCHOD) do P_IPOD (ZW_PRZ)
            {? OS_ZWPOD.PRZYCHOD>0
            || OS_ZWPOZ.blank();
               OS_ZWPOZ.OSOBA:=OS_ZWPOD.OSOBA;
               OS_ZWPOZ.OS_ZWSLO:=_ref;
               OS_ZWPOZ.ROK:=OS_ZWPOD.ROK;
               OS_ZWPOZ.MC:=0;
               OS_ZWPOZ.WYK_PRZ:='T';
               OS_ZWPOZ.WYK_KW:=OS_ZWPOD.PRZYCHOD;
               OS_ZWPOZ.add(1)
            ?}
         ?};
         OS_ZWPOD.next()
      !};
      OS_ZWPOZ.cntx_pop()
   ?};
   OS_ZWPOD.cntx_pop()
?};
__UPG.msg('Zakończono uzupełnianie nowych pól dla tabeli oświadczeń zwolnionego przychodu od opodatkowania.');
1


\OS_ZWPOD_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Uzupełnienie nowych pól w tabeli OS_ZWPOD - opis.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie nowych pól w tabeli OS_ZWPOD.'


\nieobecnosci_2022
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Aktualizacja nieobecności o kodzie 4 wprowadzonych po 1.1.2022
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
:: Aktualizacja wprowadzonych nieobecności o kodzie 4 po 2022.1.1
exec('init','pkd');
__RUB.fill();
Cntx.psh(N,O);
Cntx.clr(N,O);
N.f_clear();
O.index('LISTYPZN');
O.prefix(exec('firma','ustawienia'));
_dt:=date(2022,1,1);
_txt:='Nastąpi zmiana kodów nieobecności z %1 na %2 wprowadzonych po %3.\n'
   'Po zmianie kodu nieobecności z wpisanym znakiem listy, listy należy przeliczyć ponownie.\n'
   'Czy uwzględniać nieobecności rozliczone na listach?'@['4','30',_dt$6];
_wybor:=FUN.choice(_txt,,
      'Tak, również na zamkniętych'@,
      'Ta&k, również na otwartych'@,
      'Nie, wyłącznie bez znaku listy'@
   );
{? _wybor
|| _sql:={? _wybor>2 || ' and N.LT=\'\'' || '' ?};
   N.f_set(,,'N.NB=:_a and N.FIRMA=:_b and N.KOR=\'N\' and N.OD>=to_date(:_c) and N.OS_N is null'+_sql,
      __RUB.ref(4),
      exec('firma','ustawienia'),
      _dt
   );
   _licz:=0;
   {? N.f_first() & __RUB.ref(30)
   || FUN.prg_start(N.f_size(),'Aktualizacja nieobecności'@);
      {!
      |? {? (+|N.LT & _wybor=2 & O.find_key(-N.LT,) & O.Z='N') | _wybor=1 | +|N.LT=0
         || N.NB:=__RUB.ref(30);
            N.PROC:=exec('procent','nieobecnosc',N.NB);
            {? ~N.put(1) || _ret:=-1 || _licz+=1 ?};
            N.P().ref();
            _prze:=
               {? +|N.LT & O.find_key(-N.LT,)
               || ', '+'przelicz ponownie listę %1 '@[N.LT]
               || ''
               ?};
            __UPG.msg(exec('P','#to_string')+', '+'nieobecność od %1'@[N.OD$1]+_prze)
         ?};
         FUN.prg_next();
         _ret=1 & N.f_next()
      !};
      FUN.prg_stop()
   |? ~__RUB.ref(30)
   || _ret:=0
   ?};
   __UPG.msg('Ilość zmian nieobecności: %1.'@[$_licz])
|| __UPG.msg('Użytkownik %1 pozostawił zadanie do późniejszego wykonania.' [exec('operatorKod','#users')]);
   _ret:=0
?};
N.f_clear();
Cntx.pop(N,O);

_ret


\nieobecnosci_2022_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Aktualizacja nieobecności o kodzie 4 wprowadzonych po 1.1.2022
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja nieobecności o kodzie 4 wprowadzonych po 1.1.2022.'


\vat_poz_2137_11
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [21.37]
:: OPIS: Uzupełnienie nowych pól w tabeli VAT_POZ - formuła naprawcza.
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
_stat:=obj_new('poprawiono','niepoprawiono','niewymaga');
   {! _lp:=1..obj_len(_stat)
   |! _stat[_lp]:=0
   !};
params_set('stat',_stat);
VAT_POZ.trig_off('*','*');
VAT_POZ.clear();
VAT_POZ.for_each("_stat:=params_get();
  _put:=0;
  {? VAT_POZ.ZP152='' || VAT_POZ.ZP152:='N'; _put+=1 ?};
  {? VAT_POZ.ZP153='' || VAT_POZ.ZP153:='N'; _put+=1 ?};
  {? VAT_POZ.ZP154='' || VAT_POZ.ZP154:='N'; _put+=1 ?};
  {? _put
  || {? VAT_POZ.put()
     || _stat.stat.poprawiono+=1
     || _stat.stat.niepoprawiono+=1
     ?}
  || _stat.stat.niewymaga+=1
  ?}",1
);
VAT_POZ.trig_on('*','*');
__UPG.msg('Liczba wierszy wymagających poprawienia: %1.' [$(_stat.poprawiono+_stat.niepoprawiono)]);
__UPG.msg('Liczba wierszy poprawionych: %1.' [$_stat.poprawiono]);
__UPG.msg('Liczba wierszy, których nie udało się poprawić: %1.' [$_stat.niepoprawiono]);
__UPG.msg('Liczba wierszy niewymagających poprawienia: %1.' [$_stat.niewymaga]);
_ret:={? _stat.niepoprawiono>0 || -1 || 1 ?};
_ret


\vat_poz_2137_11_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [21.37]
:: OPIS: Uzupełnienie nowych pól w tabeli VAT_POZ - opis.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie nowych pól w tabeli VAT_POZ: VAT_POZ.ZP152, VAT_POZ.ZP153, VAT_POZ.ZP154 w aktualizacji Merit 2137_11.'


\kryterium_listy_plac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [21.37]
:: OPIS: Kryterium listy płac.
::----------------------------------------------------------------------------------------------------------------------
_cnt:=0;
exec('__F_ZATR','object');
exec('__RUB','object');
__RUB.fill();
:exec('czytaj','formuly','P',FM,1);
KT.cntx_psh();
KT.index('F_ZATR');
KT.prefix(exec('ref_firma','ustawienia'));
{? (_f_zatr:=__F_ZATR.find('P'))
|| {? ~KT.find_key(_f_zatr,'KPD')
   || KT.blank();
      KT.T:='KPD';
      KT.N:='Korekta podatku';
      KT.K:='FUNKCJE.LP_SYS(9611)';
      KT.F:='P';
      KT.L:='*';
      KT.F_ZATR:=_f_zatr;
      _cnt+=KT.add(1)
   ?}
?};
_uz:=PAR_SKID.get(190);
{? (_f_zatr:=__F_ZATR.find('Z'))
|| {? ~KT.find_key(_f_zatr,'ZLK')
   || KT.blank();
      KT.T:='ZLK';
      KT.N:='Lista korekcyjna';
      KT.F:=_uz;
      KT.L:='*';
      KT.F_ZATR:=_f_zatr;
      _cnt+=KT.add(1)
   ?}
?};
KT.cntx_pop();

{? _cnt>0
|| __UPG.msg('Dodano nowe kryteria dla list płac.')
?};

1


\kryterium_listy_plac_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Kryterium listy płac - opis.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie kryterium listy płac.'


\zal_wdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Utworzenie struktury dla załączników do wniosków dotyczących podatków.
::   WE:
::   WY:
::  ORG: \zalacz/upgrade_2137_02.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=-1;
_txt:='Nie udało się utworzyć struktury do załączników do wniosków dotyczących podatków.';
_typ:=exec('slo_naz','ext_slo','ZAL','Wnioski dotyczące podatków');
{? _typ
|| ZAOTM.cntx_psh();
   ZAOTM.index('MIEJSCER');
   {? SLO_NAZ.seek(_typ,,1)
   || _msc:='OS_ZWZAL';
      ZAOTM.prefix(_msc,SLO_NAZ.ref());
      {? ZAOTM.first()
      || _result:=1
      || ZAOTM.blank();
         ZAOTM.MIEJSCE:=_msc;
         ZAOTM.SLO_NAZ:=SLO_NAZ.ref();
         {? ZAOTM.add()
         || _result:=1
         ?}
      ?};
      {? _result=1
      || _txt:='Typ załącznika (%1) powiązano z miejscem użycia.' [SLO_NAZ.NAZWA]
      ?}
   ?};
   ZAOTM.cntx_pop()
?};
__UPG.msg(_txt);

_result


\zal_wdp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Utworzenie struktury dla załączników do wniosków dotyczących podatków - opis.
::   WE:
::   WY:
::  ORG: \zalacz_desc/upgrade_2137_02.fml
::----------------------------------------------------------------------------------------------------------------------
'Utworzenie struktury dla załączników do wniosków dotyczących podatków'


\tra2PRJ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PD] [23.25]
:: OPIS: Przenosi dane z pliku prj.tra do tabeli PROJEKTY
::----------------------------------------------------------------------------------------------------------------------
_fname:='prj.tra';
_sep:=';';

{? fexists(_fname,1)
||
:: dodajemy numerację projektów
   NRDOK.cntx_psh();
   NRDOK.index('NRDOK');
   NRDOK.prefix('PRJ');
   {? ~NRDOK.first()
   ||
      NRDOK.prefix();
      NRDOK.blank();
      NRDOK.TYP:='PRJ';
      NRDOK.OP:='Numeracja projektów';
      NRDOK.AB:='PRJ';
      NRDOK.F:='PROJEKTY.T().T+\'/\'+form(PROJEKTY.NR,-5,,\'99\')';
      NRDOK.MAXN:=1;
      NRDOK.P1:='T().NAZ';
      NRDOK.WOL_NR:='N';
      {? ~NRDOK.add() || NRDOK.cntx_pop(); return(0) ?}
   ?};
   NRDOK.cntx_pop();
:: dodajemy typy projektów
   PROJTYPY.cntx_psh();
   PROJTYPY.index('T');
   PROJTYPY.prefix('WE');
   {? ~PROJTYPY.first()
   ||
      PROJTYPY.prefix();
      PROJTYPY.blank();
      PROJTYPY.T:='WE';
      PROJTYPY.NAZ:='Projekt wewnętrzny';
      PROJTYPY.KOD:='PRJ';
      PROJTYPY.R:='Wewnętrzny';
      {? ~PROJTYPY.add() || PROJTYPY.cntx_pop(); return(0) ?}
   ?};
   _we:=PROJTYPY.ref();
   PROJTYPY.prefix('ZE');
   {? ~PROJTYPY.first()
   ||
      PROJTYPY.prefix();
      PROJTYPY.blank();
      PROJTYPY.T:='ZE';
      PROJTYPY.NAZ:='Projekt zewnętrzny';
      PROJTYPY.KOD:='PRJ';
      PROJTYPY.R:='Zewnętrzny';
      {? ~PROJTYPY.add() || PROJTYPY.cntx_pop(); return(0) ?}
   ?};
   _ze:=PROJTYPY.ref();
   PROJTYPY.cntx_pop();
:: dodajemy statusy projektów
   PROJ_STA.cntx_psh();
   PROJ_STA.index('KOD');
   PROJ_STA.prefix('01_AKT',);
   {? ~PROJ_STA.first()
   ||
      PROJ_STA.KOD:='01_AKT';
      PROJ_STA.STATUS:='Aktywna/Aktywny';
      PROJ_STA.AKT:='T';
      {? ~PROJ_STA.add() || PROJ_STA.cntx_pop(); return(0) ?}
   ?};
   _akt:=PROJ_STA.ref();
   PROJ_STA.prefix('02_ZAM',);
   {? ~PROJ_STA.first()
   ||
      PROJ_STA.KOD:='02_ZAM';
      PROJ_STA.STATUS:='Zamknięta/Zamknięty';
      PROJ_STA.AKT:='N';
      {? ~PROJ_STA.add() || PROJ_STA.cntx_pop(); return(0) ?}
   ?};
   _zam:=PROJ_STA.ref();
   PROJ_STA.cntx_pop();
::odczytujemy plik prj.tra by uzupełnić projekty
   PROJEKTY.cntx_psh();
   PROJEKTY.index('NAZ');
   _prj:=fopen(_fname,'r',1,1,1);
   {? _prj.is_open
   || {! |? (_war:=fread(_prj))<>'\n'
      |!
         _wsk:=_war*_sep; _buf:=(_wsk-1)+_war; _war:=_wsk-_war;
         _nazwa:=_buf;
         _wsk:=_war*_sep; _buf:=(_wsk-1)+_war; _war:=_wsk-_war;
         _typ:=_buf;
         _wsk:=_war*_sep; _buf:=(_wsk-1)+_war; _war:=_wsk-_war;
         _status:=_buf;

         PROJEKTY.prefix(_nazwa);
         {? PROJEKTY.first()
         ||
            {? PROJEKTY.T=null() || PROJEKTY.T:={? _typ='Z' || _ze || _we ?} ?};
            {? PROJEKTY.STATUS=null() || {? (1+_status)='Z'
                                         || PROJEKTY.STATUS:=_zam;
                                            PROJEKTY.A:='N'
                                         || PROJEKTY.STATUS:=_akt;
                                            PROJEKTY.A:='T'
                                         ?}
            ?};
            PROJEKTY.put()
         ?}
      !};
      fclose(_prj)
   ?};
   PROJEKTY.cntx_pop()
?};
~~


\tar_perm_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: Nadaje uprawnienia do danych cenników
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
USERS.index('USR_KKOD');
USERS.prefix();
{? USERS.first()
|| B_PERM.index('NAME'); B_PERM.prefix();
   B_PERM.find_key('TARS',);
   B_PERM_U.index('USER');
   {!
   |?
      {! _ii:=1..2
      |!
         {? B_PERM.find_key({? _ii=1 || 'TARS' || 'TARD' ?},)
         ||
            B_PERM_U.prefix(REF.FIRMA,USERS.ref(),B_PERM.ref());
            {? B_PERM_U.first()
            || B_PERM_U.ACCESS:='T';
               B_PERM_U.put()
            || TARUP.index('USER');
               TARUP.prefix(USERS.ref());
               _loop:=TARUP.first();
               {!
               |? _loop
               |!
                  _loop:=TARUP.del()
               !}
            ?};
            B_PERM.next()
         ?}
      !};
      USERS.next()
   !}
?};
__UPG.msg('Nadano uprawnienia do danych w zakresie: Uprawnienia do cenników sprzedaży, Uprawnienia do cenników dostawców.');
_result


\tar_perm_upd_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: Nadaje uprawnienia do danych cenników - opis
::----------------------------------------------------------------------------------------------------------------------
'Nadaje uprawnienia do danych cenników'


\start_PPK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Ustawienie parametrów i słowników do PPK.
::  OLD: \akt_1251_26/napraw_p.fml
::  OLD: \akt_1251_54/napraw_p.fml
::  OLD: \ppk_01/napraw_p.fml
::----------------------------------------------------------------------------------------------------------------------
exec('init_kst','#stalesys',KST_PPK);
exec('ustaw','ppk_kst',1);

:: aktualizacja opisów składników płacowych
:: w \r_imp/transfer.fml

:: definicje atrybutów
:: w \rubatr/transfer.fml

:: Uzupełnienie widoku historii stałych obszaru PPK
_result:=-1;
_add:=_numer:=0;
_sdom:='PPK';
_zes:='KST_PPK';
KST_ZES.cntx_psh();
KST_ZES.index('SYMBOL');
KST_ZES.prefix();
{? KST_ZES.find_key(_zes,)
|| KST_DOM.cntx_psh();
   KST_DOM.index('DOM_SYM');
   KST_DOM.prefix(KST_ZES.ref());
   _rdom:=null();
   {? KST_DOM.find_key(_sdom,)
   || _rdom:=KST_DOM.ref()
   || KST_DOM.blank();
      KST_DOM.KST_ZES:=KST_ZES.ref();
      KST_DOM.B_DOMAIN:=exec('domain_ref','#b_domain',_sdom);
      {? KST_DOM.add()
      || _rdom:=KST_DOM.ref()
      ?}
   ?};
   {? _rdom
   || KST_LST.cntx_psh();
      KST_MAP.cntx_psh();
      KST_MAP.index('KST_MAP');
      KST_MAP.prefix(_zes,_zes);
      {? KST_MAP.first()
      || {!
         |? {? ~('PWP_DOM,PWP_WSZ,PWP_UKW,LICZ_OD,PPK_UZA,PPK_UMO,SK_FORMF,UST_OD'*KST_MAP.SYMBOL)
            || KST_LST.blank();
               KST_LST.KST_DOM:=_rdom;
               KST_LST.KST_MAP:=KST_MAP.ref();
               KST_LST.NUMER:=_numer+=1;
               _add+=KST_LST.add(1)
            ?};
            KST_MAP.next()
         !}
      ?};
      KST_MAP.cntx_pop();
      KST_LST.cntx_pop()
   ?};
   KST_DOM.cntx_pop()
?};
KST_ZES.cntx_pop();
{? _numer=_add
|| __UPG.msg('Uzupełniono definicję historii stałych obszaru PPK.');
   _result:=1
|| __UPG.msg('Nie udało się uzupełnić pełnej historii stałych obszaru PPK.');
   _result:=-1
?};

:: Rodzaje wersji plików PPK
exec('dane_sys','ppk_xwe');
__UPG.msg('Wykonano aktualizację definicji wersji plików PPK.');

:: Rodzaje deklaracji/wniosków
{? exec('dane_sys','ppk_wrd')
|| __UPG.msg('Wykonano aktualizację definicji wniosków i deklaracji.')
|| __UPG.msg('Nie wykonano aktualizacji definicji wniosków i deklaracji.');
   {? _result=1
   || _result:=-1
   ?}
?};

:: Rodzaje komunikatów
{? exec('dane_sys','ppk_krd')
|| __UPG.msg('Wykonano aktualizację definicji komunikatów.')
|| __UPG.msg('Nie wykonano aktualizacji definicji komunikatów.');
   {? _result=1
   || _result:=-1
   ?}
?};

:: Kody błędów i ostrzeżeń
_typ:=exec('slo_typ','ext_slo','PPK_RBL');
{? exec('kod_ref','ext_slo',_typ,'B','Błąd')=null()
|| __UPG.msg('Nie dodano kodu błędu do słownika "PPK_RBL".');
   {? _result=1
   || _result:=-1
   ?}
|| __UPG.msg('Dodano kod błędu do słownika "PPK_RBL".')
?};
{? exec('kod_ref','ext_slo',_typ,'O','Ostrzeżenie')=null()
|| __UPG.msg('Nie dodano kodu ostrzeżenia do słownika "PPK_RBL".');
   {? _result=1
   || _result:=-1
   ?}
|| __UPG.msg('Dodano kod ostrzeżenia do słownika "PPK_RBL".')
?};
{? exec('kod_ref','ext_slo',_typ,'I','Informacja')=null()
|| __UPG.msg('Nie dodano kodu informacji do słownika "PPK_RBL".');
   {? _result=1
   || _result:=-1
   ?}
|| __UPG.msg('Dodano kod informacji do słownika "PPK_RBL".')
?};

:: Rodzaje załączników do umów.
_zrd_add:=
   "  PPK_ZRD.RODZAJ:=_a;
      PPK_ZRD.SYMBOL:=_b;
      PPK_ZRD.OPIS:=_c;
      PPK_ZRD.PORTAL:=_d;
      PPK_ZRD.add(1)
   ";
PPK_ZRD.cntx_psh();
PPK_ZRD.prefix();
PPK_ZRD.trig_off('*','*');
_add:=_zrd_add('PPK_UMO','LISTAUCZ','Lista uczestników PPK','N');
PPK_ZRD.trig_on('*','*');
PPK_ZRD.cntx_pop();
{? _add
|| __UPG.msg('Do umowy o prowadzenie PPK dodano definicę załącznika "Lista uczestników PPK".')
|| __UPG.msg('Do umowy o prowadzenie PPK nie dodano definicji załącznika "Lista uczestników PPK".');
   {? _result=1
   || _result:=-1
   ?}
?};

_info:=exec('import_if','ppk');
{? +_info
|| __UPG.msg(_info)
?};

_result


\start_PPK_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Ustawienie parametrów i słowników do PPK - opis.
::----------------------------------------------------------------------------------------------------------------------
'Ustawienie parametrów i słowników do PPK'


\formuly_PPK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja formuł płacowych o naliczanie składników PPK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: wykonywanie zostało wyłączone, gdyż istnieje zadanie manualne 'fm' do zaciągnięcia aktualnych formuł
exec('__RUB','object');

_rs:='780,784,950,990,7087,7088,7089,7090,7091,7092,7093';
_rn:=spli_str(_rs,',');
{! _ii:=1..obj_len(_rn)
|! {? __RUB.ref(#_rn[_ii])=null
   || __UPG.msg('Aktualizacja została wstrzymana. Wymagane istnienie rubryk: %1'[_rs]);
      return(-1)
   ?}
!};
_tp:=spli_str('U,F,D,R,%1'[%255],',');
_err:=exec('formuly_import','upgrade_1922',_tp,_rn,'formuly_txt');

{? _err>0
|| __UPG.msg('Podczas aktualizacji formuł wystąpiło %1 błędów.'[$_err]);
   -1
|| 1
?}


\formuly_PPK_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja formuł płacowych o naliczanie składników PPK - opis.
::   WE:
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie formuł płacowych o naliczanie składników PPK'


\ppk_role
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Dodanie/aktualizacja ról/czynności związanych z PPK.
::----------------------------------------------------------------------------------------------------------------------
_status:='';

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_add:="
   _rola:=_a;
   _lista:=_b;

   _ok:=1;
   _uid:=spli_str(_lista,'.');
   {! _lp:=1 .. obj_len(_uid)
   |! {? exec('add_actrol_one','#b_role',_rola,_uid[_lp])
      || __UPG.msg('Roli ''%1'' nadano uprawnienia do czynności ''%2''.' [_rola,_uid[_lp]])
      || __UPG.msg('Nadanie roli ''%1'' uprawnień do czynności ''%2'' nie powiodło się.' [_rola,_uid[_lp]]);
         _ok:=0
      ?}
   !};
   _ok";
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Pracownik';
_ref:=exec('ref','#b_role',_rola);
{? _ref=null()
:: To nie jest nowa rola. Jeżeli została usunięta, to uszanujmy to i nie aktualizujmy jej.
|| __UPG.msg('Nie znaleziono roli ''%1'' - nowe czynności nie zostaną z nią powiązane.' [_rola]);
   _status+='O'
|| {? ~_add(_rola,'PPK_POR_PKOM.PPK_POR_PPWP.PPK_POR_PZAL')
   || _status+='E'
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Specjalista ds. PPK';
_ref:=exec('ref','#b_role',_rola);
{? _ref<>null()
|| __UPG.msg('Rola ''%1'' już istnieje.' [_rola])
|? (_ref:=exec('ref','#b_role',_rola,,1))<>null()
|| __UPG.msg('Rola ''%1'' została utworzona.' [_rola])
?};
{? _ref=null()
|| __UPG.msg('Roli ''%1'' nie udało się utworzyć.' [_rola]);
   _status+='E'
|| {? ~_add(_rola,
         'ZWS_PAR_PKRD.ZWS_PAR_PPPK.ZWS_PAR_PUMO.ZWS_PAR_PWNU.ZWS_PAR_PXWE.PPK_EWI_RKOM.PPK_EWI_RKWK.PPK_EWI_RKWZ.'
         'PPK_EWI_RPWP.PPK_EWI_RUCZ.PPK_EWI_RWNU.PPK_EWI_RZDN.PPK_ZES_WYDR.PPK_EWI_RKOM.PPK_EWI_RKWZ.PPK_EWI_RWNU.'
         'PPK_DZB_PWPL.PPK_WMD_AIMP.PPK_WMD_RRPL.PPK_GRP_ALIU'
      )
   || _status+='E'
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Przeglądający PPK';
_ref:=exec('ref','#b_role',_rola);
{? _ref<>null()
|| __UPG.msg('Rola ''%1'' już istnieje.' [_rola])
|? (_ref:=exec('ref','#b_role',_rola,,1))<>null()
|| __UPG.msg('Rola ''%1'' została utworzona.' [_rola])
?};
{? _ref=null()
|| __UPG.msg('Roli ''%1'' nie udało się utworzyć.' [_rola]);
   _status+='E'
|| {? ~_add(_rola,
         'PPK_EWI_PKOM.PPK_EWI_PKWK.PPK_EWI_PKWZ.PPK_EWI_PPWP.PPK_EWI_PUCZ.PPK_EWI_PWIF.PPK_EWI_PWNU.PPK_EWI_PZDN.'
         'PPK_DZB_PWPL.PPK_EWI_PKOM.PPK_EWI_PKWZ.PPK_EWI_PWNU.PPK_WMD_PRPL'
      )
   || _status+='E'
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

{? _status*'E'
|| 0
|? _status*'O'
|| -1
|| 1
?}


\ppk_role_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Dodanie/aktualizacja ról/czynności związanych z PPK. - opis.
::----------------------------------------------------------------------------------------------------------------------
'Dodanie/aktualizacja ról/czynności związanych z PPK'


\formuly_ZP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja formuł płacowych od naliczanie składników w związku z wprowadzeniem przychodu zwolnionego
::       od podatku dla osób do 26 roku życia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: wykonywanie zostało wyłączone, gdyż istnieje zadanie manualne 'fm' do zaciągnięcia aktualnych formuł
exec('__RUB','object');
_rs:='780,784,792,795,797,7094,7095,7096';
_rn:=spli_str(_rs,',');
{! _ii:=1..obj_len(_rn)
|! {? __RUB.ref(#_rn[_ii])=null
   || __UPG.msg('Aktualizacja została wstrzymana. Wymagane istnienie rubryk: %1'[_rs]);
      return(-1)
   ?}
!};
_tp:=spli_str('U,F,D,R,%1'[%255],',');
_err:=exec('formuly_import','upgrade_1922',_tp,_rn,'ZP_formuly_txt');

{? _err>0
|| __UPG.msg('Podczas aktualizacji formuł wystąpiło %1 błędów.'[$_err]);
   -1
|| 1
?}


\formuly_ZP_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja formuł płacowych o naliczanie składników w związku z wprowadzeniem przychodu zwolnionego
::       od podatku dla osób do 26 roku życia.
::   WE:
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie formuł płacowych o naliczanie składników dla przychodu zwolnionego od podatku dla osób do 26 roku życia'

:Sign Version 2.0 jowisz:1045 2023/12/12 09:45:21 df8cda1368bdcf6813b7cd949560d12fa47e596b8e32eec109105bc4bdd36685761830374dee96cb5f24d8e0ecc3f869a7cebe5e0912a58e8a57584bf6ab06d4245c614cee729405a8e2625394383e831c793c87911340c6b7a0033be6de74d7ca36af0fe2b9426c0219d0ea182ad0ede1aadd07ba26de6a1ae1e928055c1cb6
