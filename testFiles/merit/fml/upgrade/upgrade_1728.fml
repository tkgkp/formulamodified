:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: upgrade_1728.fml
:: Utworzony: 07.04.2017
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Funkcje do obsługi transferu danych z wersji 17.14 na 17.28
::
::            Każda formuła powinna zwracać wartość liczbową, interpretacja:
::                1 - całość przeszła bez błędów - realizacja zakwalifikowana jako wykonana
::               -1 - całość przeszła z uwagami  - realizacja zakwalifikowana jako wykonana
::                0 - został stwierdzony błąd    - realizacja zakwalifikowana jako przerwana
::
::            Definicja zadania transferowego:
::               __UPG.add_task(name,[auto],[mf],domain,[ver],[required])
::                gdzie:
::                   name     [STRING] - nazwa formuły potransferowej (z bieżącego pliku).
::                   auto     [STRING] - formuła automatyczna: T [domyślnie] / N
::                   mf       [STRING] - formuła wielofirmowa: T [domyślnie] / N
::                                        T - wykonywana tylko raz
::                                        N - wykonywana w każdej firmie
::                   domain   [STRING] - kod dziedziny produktowej (informacyjnie)
::                   ver      [NUMBER] - wersja formuły
::                   required [STRING] - czy zadanie musi być wykonane
::                                       Dla zadań automatycznych parametr zawsze przyjmuje wartość T.
::                                       Dla zadań manualnych - domyślnie: N.
::
::            W formułach można stosować zapis do przesłania komunikatów dla realizacji, np.
::               __UPG.msg('Brak zapisów dla roku 2016 w tabeli FAKS.')
::
::            \formuła      - formuła potransferowa
::            \formuła_desc - opis dla formuły potransferowej
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Główna formuła upgrade-ów 17.28
::----------------------------------------------------------------------------------------------------------------------
:: zadania automatyczne
:: WIELOFIRMOWE (wykonywane raz dla całego systemu)
__UPG.add_task('upgrade_act',,,'ZPR');
__UPG.add_task('funpar',,,'ZWS');
__UPG.add_task('doklMsprzak',,,'ZWS');
__UPG.add_task('color',,,'ZWS');
__UPG.add_task('report',,,'ZWS');
__UPG.add_task('importTypDokMag',,,'ZWS');
__UPG.add_task('rubryki_pop',,,'PPL');
__UPG.add_task('rubatr',,,'PPL');
__UPG.add_task('areatitle',,,'ZWS');
__UPG.add_task('jpk_01',,,'ZWS');
__UPG.add_task('projekty_ref',,,'FKS');
__UPG.add_task('pozf',,,'FKS');
__UPG.add_task('NWU',,,'PKW');
__UPG.add_task('kom_rp',,,'PPL');
__UPG.add_task('B_PROC',,,'ZPR');
__UPG.add_task('slo_typ',,,'PKD');
__UPG.add_task('RS_zl',,,'ZWS');
__UPG.add_task('trn_rs',,,'ZWS');
__UPG.add_task('etypy',,,'ZWS');
__UPG.add_task('proj2fap',,,'ZWS');
__UPG.add_task('edokum_edi',,,'FKS');
__UPG.add_task('szkolbhp',,,'PKD',1);
__UPG.add_task('upgrade_event',,,'ZPR');
:: JEDNOFIRMOWE (dla każdej firmy wykonywane osobno)
__UPG.add_task('rp7_blok',,'N','PPL');
__UPG.add_task('vat_ps',,'N','FKS');
__UPG.add_task('ZL',,'N','TTE');
__UPG.add_task('f_zatra',,'N','PKD');
__UPG.add_task('sam2poj',,'N','ZWS');
:: zadania manualne
__UPG.add_task('fm','N','N','PPL',0,'T');
~~


\doklMsprzak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Przypisuję wartość pól DOKL_S, DOKL_Z w kartotece materiałowej i grupach materiałowych
::       na 2 miejsca po przecinku
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
MGR.cntx_psh();
MGR.prefix();
MGR.for_each("{? MGR.MOD<>'T'
              || MGR.DOKL_S:=2;
                 MGR.DOKL_Z:={? MGR.RODZ='T' || MGR.DOKL_C || 2 ?};
                 MGR.MOD:='T';
                 MGR.put(1)
              ?}",0);
MGR.cntx_pop();
M.cntx_psh();
M.prefix();
M.for_each("{? M.MOD<>'T'
            || M.DOKL_S:=2;
               M.DOKL_Z:={? M.RODZ='T' || M.DOKL_C || 2 ?};
               M.MOD:='T';
               M.put(1)
            ?}",0);
M.cntx_pop();
_result


\doklMsprzak_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Przypisuję wartość pól DOKL_S, DOKL_Z w kartotece materiałowej na 2 miejsca po przecinku - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja dokładności ceny sprzedaży i dokładności ceny zakupowej w kartotece materiałowej i usługowej.'


\color
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Aktualizacja schematów kolorów
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
exec('Color','#object');
exec('Legend','#object');
exec('odtw_kolor_iko','color',2);
_res


\color_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Aktualizacja schematów kolorów - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja schematu kolorów.'


\report
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Kompilacja wydruków
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
rep_tran('*');
_res


\report_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Kompilacja wydruków - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja wydruków i zestawień.'


\rp7_blok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Uzupełnienie nowych pól związanych z blokadą zapisów: RP7_KP.BLOKADA, RP7_NB.BLOKADA.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_stat:=obj_new('kp1','kp0','nb1','nb0');
{! _lp:=1 .. obj_len(_stat)
|! _stat[_lp]:=0
!};

params_set('stat',_stat);

RP7_KP.cntx_psh();
RP7_KP.prefix();
RP7_KP.for_each(
   "  _stat:=params_get().stat;
      {? RP7_KP.BLOKADA=''
      || _stat.kp0+=1;
         RP7_KP.BLOKADA:='N';
         RP7_KP.put()
      || _stat.kp1+=1
      ?}
   ",1);
RP7_KP.cntx_pop();
__UPG.msg('Wynagrodzenie [zapisów poprawnych: %1, zapisów poprawionych: %2].' [$_stat.kp1,$_stat.kp0]);

RP7_NB.cntx_psh();
RP7_NB.prefix();
RP7_NB.for_each(
   "  _stat:=params_get().stat;
      {? RP7_NB.BLOKADA=''
      || _stat.nb0+=1;
         RP7_NB.BLOKADA:='N';
         RP7_NB.put()
      || _stat.nb1+=1
      ?}
   ",1);
RP7_NB.cntx_pop();
__UPG.msg('Nieobecności [zapisów poprawnych: %1, zapisów poprawionych: %2].' [$_stat.nb1,$_stat.nb0]);

1


\rp7_blok_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Uzupełnienie nowych pól związanych z blokadą zapisów: RP7_KP.BLOKADA, RP7_NB.BLOKADA - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie pól związanych z blokadą zapisów dotyczących zaświadczenia ZUS Rp-7'


\upgrade_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Aktualizacja typów danych oraz czynności dla wskazanych obszarów
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_dom:=spli_str('LMG.LSP.PKD.PKW.PPL.TTE.ZWS','.');
_len:=obj_len(_dom);
FUN.prg_start(_len+2,'Aktualizacja czynności.'@,,,1);

:: Uzupełnienie domen (zawsze)
FUN.prg_next();
exec('add_domain','#b_action');
__UPG.msg('Zaktualizowano dziedziny.');

:: Uzupełnienie typów (zawsze)
FUN.prg_next();
exec('fill_tab','#b_type',0);
__UPG.msg('Zaktualizowano typy danych.');

{! _i.._len
|! FUN.prg_next();
   _domain:=exec('FindInSet','#table','B_DOMAIN','SYMBOL',_dom[_i]);
   {? _domain<>null()
   || exec('import_needed_dom','#b_design',_domain,0);
      __UPG.msg('Zaktualizowano czynności dziedziny: %1.'@[_dom[_i]])
   ?}
!};
FUN.prg_stop();
obj_del(_dom);
_res


\upgrade_act_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Aktualizacja typy danych oraz czynności dla wskazanych obszarów - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja typów danych oraz czynności dla modelera'


\typy_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Aktualizacja typów dokumentów sprzedaży - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja typów dokumentów sprzedaży.'


\rubatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Uzupełnienie atrybutów rubryk.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: uzupełnienie atrybutu godzin dzielących koszty (10012) o godziny akordowe 53
exec('add_use','rubatr',10012,53);
:: Premie uznaniowe, Potrącenia - pojazdy, Potrącenia - SIM
exec('add_use','rubatr',48,7065);
exec('add_use','rubatr',21114,7066,7067);
exec('add_attr','rubatr',100,1004,'Premie uznaniowe przyznawane przez dysponentów',,,,7065);
1


\rubatr_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Uzupełnienie atrybutów rubryk - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie atrybutów rubryk'


\vat_ps
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Uaktualnienie VAT_PS.CRC
::----------------------------------------------------------------------------------------------------------------------
_maski:=VAT_PS.names();
{? _maski.first()
|| VAT_PS.cntx_psh();
   PVAT.cntx_psh();
   VPOZ.cntx_psh();
   {!
   |? echo('Aktualizacja VAT_PS z maski %1'@[_maski.NAME]);
      VAT_PS.use(_maski.NAME);
      VAT_PS.index('VAT_PS');
      VAT_PS.prefix();
      {? VAT_PS.first()
      || {!
         |? {? 4+VAT_PS.PVAT_REF='pvat'
            || PVAT.use(VAT_PS.PVAT_REF-8);
               PVAT.prefix();
               {? PVAT.seek(BB.sqlint(VAT_PS.PVAT_REF),)
               || {? VAT_PS.CRC=PVAT.crc('DVAT','NR','GRVAT','STVAT','SUM1','SUM2','VAT','CLO','AKCYZA','KOS','SUMC',
                                          'WARW','KURS','VPOZ_REF','VAT_ODL','VATKOSZT','OP','VPOZ_ROZ')
                  || VAT_PS.CRC:=PVAT.crc();
                     VAT_PS.put()
                  ?}
               ?}
            |? VAT_PS.PVAT_REF<>''
            || VPOZ.use(VAT_PS.PVAT_REF-8);
               VPOZ.prefix();
               {? VPOZ.seek(BB.sqlint(VAT_PS.PVAT_REF),)
               || {? VAT_PS.CRC=VPOZ.crc('DOK','NETTO','PR','VAT','BRUTTO','GRVAT','KK','K2','R','Z','WCLO','CLO',
                                          'AKCYZA','KOS','WARW','KURS','NETTO_D','VAT_D','BRUTTO_D','KURS_D','OKRVAT',
                                          'A_VAT','VAT_ODL','VATKOSZT','OP','RVAT','C_PREWSK','C_PROC_S') |
                     VAT_PS.CRC=VPOZ.crc('DOK','NETTO','PR','VAT','BRUTTO','GRVAT','KK','K2','R','Z','WCLO','CLO',
                                          'AKCYZA','KOS','WARW','KURS','NETTO_D','VAT_D','BRUTTO_D','KURS_D','OKRVAT',
                                          'A_VAT','VAT_ODL','VATKOSZT','OP','RVAT')
                  || VAT_PS.CRC:=VPOZ.crc();
                     VAT_PS.put()
                  ?}
               ?}
            ?};
            VAT_PS.next()
         !}
      ?};
      _maski.next()
   !};
   VPOZ.cntx_pop();
   PVAT.cntx_pop();
   VAT_PS.cntx_pop();
   echo()
?};
1


\vat_ps_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mb [17.28]
:: OPIS: Uaktualnienie VAT_PS.CRC - opis.
::----------------------------------------------------------------------------------------------------------------------
'Uaktualnienie informacji w szczegółach deklaracji VAT-7'


\importTypDokMag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Uaktualnienie typów dokumentów o typ KR+ i KR-
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_krp:='KR+;Korekta ceny +;N;T;;T;N;;N;;;N;N;N;MAG;N;N;;;N;N;;0;N;N;N;;;Nie dotyczy;N;N;;';
_krm:='KR-;Korekta ceny -;N;N;;T;N;;N;;;N;N;N;MAG;N;N;;;N;N;;0;T;T;T;;;Nie dotyczy;N;N;;';
_ch:=';';
_len:=TYPYDOK.fld_num();
TYPYDOK.cntx_psh();
TYPYDOK.prefix('KR+',);
{? ~TYPYDOK.first()
|| TYPYDOK.prefix();
   TYPYDOK.blank();
   _i:=1;
   _buf:=_krp;
   {!
   |? _wsk:=_buf*_ch;
      _war:=(_wsk-1)+_buf;
      _buf:=_wsk-_buf;
      {? _war<>'' || ($('TYPYDOK['+$_i+']'))():=_war ?};
      _i+=1;
      _i<=_len & _buf<>''
   !};
   TYPYDOK.add(1)
?};
TYPYDOK.prefix('KR-',);
{? ~TYPYDOK.first()
|| TYPYDOK.prefix();
   TYPYDOK.blank();
   _i:=1;
   _buf:=_krm;
   {!
   |? _wsk:=_buf*_ch;
      _war:=(_wsk-1)+_buf;
      _buf:=_wsk-_buf;
      {? _war<>'' || ($('TYPYDOK['+$_i+']'))():=_war ?};
      _i+=1;
      _i<=_len & _buf<>''
   !};
   TYPYDOK.add(1)
?};
TYPYDOK.cntx_pop();
_res


\importTypDokMag_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Uaktualnienie typów dokumentów o typ KR+ i KR- - opis
::----------------------------------------------------------------------------------------------------------------------
'Dodanie typów dokumentów magazynowych KR+ i KR-'


\rubryki_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [17.28]
:: OPIS: Zmiany w rubrykach płacowych.
::----------------------------------------------------------------------------------------------------------------------
:: KOD BŁĘDU: ER/WRT/XP/12.41/1705/0022
:: Błędy w opisach składników płacowych z zakładce "Nota": 465, 529
:: Nowe rubryki: 7065, 7066, 7067.
exec('import','rubryki','g','465,529,7065,7066,7067',1,0);
1


\rubryki_pop_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [17.28]
:: OPIS: Zmiany w rubrykach płacowych - opis.
::----------------------------------------------------------------------------------------------------------------------
'Zmiany w rubrykach płacowych'


\areatitle
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Inicjuje AreaTitle - obiekt do wyświetlania tytułów w obszarach roboczych
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
exec('init','areatitle');
1


\jpk_01
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: kod - ER/WRT/XP/12.41/1705/0017 : bledny symbol dokumentu JPK_VAT
::----------------------------------------------------------------------------------------------------------------------
ISTDEF.cntx_psh();
ISTDEFS.cntx_psh();
ISTDEF.index('DATA');
ISTDEF.prefix('FKS','J','VAT',null,date(2017,1,1));
{? ISTDEF.first()
|| ISTDEFS.index('OPIS'); ISTDEFS.prefix(ISTDEF.ref,'DowodSprzedazy');
   {? ISTDEFS.first()
   || ISTDEFS.TYPFLD:='STRING[35]';
      ISTDEFS.put()
   ?};
   ISTDEFS.prefix(ISTDEF.ref,'DowodZakupu');
   {? ISTDEFS.first()
   || ISTDEFS.TYPFLD:='STRING[35]';
      ISTDEFS.put()
   ?}
?};
ISTDEFS.cntx_pop();
ISTDEF.cntx_pop();
1


\jpk_01_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: kod - ER/WRT/XP/12.41/1705/0017 : bledny symbol dokumentu JPK_VAT
::----------------------------------------------------------------------------------------------------------------------
'Poprawka spisowa do schematu JPK VAT'


\projekty_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Uzupełnienie danych dla projektów
::----------------------------------------------------------------------------------------------------------------------
_tab:=SKIDXD.names();
{? _tab.first()
|| SKIDXD.cntx_psh();
   DOK.cntx_psh();
   {!
   |? SKIDXD.use(_tab.NAME);
      DOK.use('doku'+(8+_tab.NAME+4));
      echo('Przetwarzanie tabeli SKIDXD maska %1 ...'@[_tab.NAME]);
      SKIDXD.for_each("
         {? SKIDXD.DOK_REJ=null
         || SKIDXD.DOK_REJ:=SKIDXD.DOK().REJ;
            SKIDXD.ODD:=DOK.ODD;
            SKIDXD.put()
         ?}
      ",1);
      _tab.next()
   !};
   DOK.cntx_pop();
   SKIDXD.cntx_pop()
?};
VAR_DEL.delete('KonProj0','KonProj','KonProj2');
KonProj0:=tab_tmp(1,
   'KON','STRING[35]',
);
KonProj:=tab_tmp(1,
   'KON','STRING[35]',
);
KonProj2:=tab_tmp(1,
   'REF','INTEGER',,
   'PROJ','INTEGER',
);
_rok:=SSTALE.AR;
DOK.cntx_psh();
POZ.cntx_psh();
ROK_F.index('KOD'); ROK_F.prefix();
OKRO_F.index('ROK');
{? ROK_F.first()
|| {!
   |? {? exec('projekty_in_kon','upgrade_1728')
      || KonProj2.erase();
         KonProj.erase();
         SSTALE.AR:=ROK_F.ref();
         OKRO_F.prefix(ROK_F.ref());
         {? OKRO_F.first()
         || {!
            |? _maska:=ROK_F.KOD+form(OKRO_F.NR,-2);
               POZ.use('pozy'+_maska);
               POZ.index('KON');
               DOK.use('doku'+_maska);
               echo('Przetwarzanie tabeli POZ maska %1 ...'@['pozy'+_maska]);
               {? KonProj0.first()
               || {!
                  |? POZ.prefix(KonProj0.KON);
                     {? POZ.first()
                     || {!
                        |? exec('projekty_poz','upgrade_1728');
                           POZ.next()
                        !}
                     ?};
                     KonProj0.next()
                  !}
               ?};
               OKRO_F.next()
            !}
         ?}
      ?};
      ROK_F.next()
   !}
?};
VAR_DEL.delete('KonProj0','KonProj','KonProj2');
DOK.cntx_pop();
POZ.cntx_pop();
SSTALE.AR:=_rok;
exec('czytaj','#stalesys',,XINFO,'SLU_PROJ');
{? XINFO.SLU_PROJ().WZ='Projekty_id' | XINFO.SLU_PROJ().WZ='Projekty_symbol'
|| &_tab;
   _tab:=OP_PROJ.names();
   {? _tab.first()
   || OP_PROJ.cntx_psh();
      {!
      |? OP_PROJ.use(_tab.NAME);
         OP_PROJ.prefix();
         echo('Przetwarzanie tabeli OP_PROJ maska %1 ...'@[_tab.NAME]);
         OP_PROJ.for_each("OP_PROJ.put()",1);
         _tab.next()
      !};
      OP_PROJ.cntx_pop()
   ?}
?};
&_tab;
_tab:=EDOKUMPR.names();
{? _tab.first()
|| EDOKUMPR.cntx_psh();
   EDOKUM.cntx_psh();
   {!
   |? EDOKUM.use('skid_v'+(_tab.NAME+2));
      EDOKUM.prefix();
      EDOKUMPR.use(_tab.NAME);
      EDOKUMPR.prefix();
      echo('Przetwarzanie tabeli EDOKUMPR maska %1 ...'@[_tab.NAME]);
      EDOKUMPR.for_each("{? EDOKUMPR.ETYPY=null || EDOKUMPR.ETYPY:=EDOKUMPR.EDOKUM().TYP; EDOKUMPR.put() ?}",1);
      _tab.next()
   !};
   EDOKUM.cntx_pop();
   EDOKUMPR.cntx_pop()
?};
echo('Przetwarzanie tabeli PROJEKTY ...'@);
PROJEKTY.for_each("exec('trig_proj','projekty_ref',1,1)",1);
echo();
1


\projekty_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Uzupełnienie informacji o projektach pozycji księgowych
::----------------------------------------------------------------------------------------------------------------------
PROJ_REF.index('IDTIME'); PROJ_REF.prefix(POZ.IDADD,'Z');
{? PROJ_REF.first() || {! |? PROJ_REF.del !} ?};
KonProj.prefix(POZ.KON,);
{? ~KonProj.first()
|| exec('projekty_kon_proj','upgrade_1728',POZ.KON)
?};
PROJEKTY.prefix();
KonProj2.prefix(KonProj.ref());
{? KonProj2.first()
|| {!
   |? {? PROJEKTY.seek(KonProj2.PROJ,)
      || PROJ_REF.IDTIME:=POZ.IDADD;
         PROJ_REF.TYPE:='Z';
         PROJ_REF.PROJEKT:=PROJEKTY.ref();
         DOK.cntx_psh();
         PROJ_REF.ODD:=POZ.DOK().ODD;
         DOK.cntx_pop();
         PROJ_REF.add()
      ?};
      KonProj2.next()
   !}
?}


\projekty_kon_proj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Funkcja do pobierania informacji o projektach konta księgowym
::   WE: _a - symbol konta analitycznego
::   WY: gdy podano symbol konta - zwraca tablice tab[][] z
::           tab[1][1] - symbol konta syntetycznego
::----------------------------------------------------------------------------------------------------------------------
KonProj.KON:=_a;
KonProj.add();
KS.index('SYM'); KS.prefix(ROK_F.ref(),SSTALE.AR().SYNT+_a);
{? KS.first()
|| BUD.index('KS'); BUD.prefix(KS.ref());
   {? BUD.first()
   || _ile:=BUD.size();
      _tab:=obj_new(_ile);
      SLO.index('SL'); SLO.prefix();
      _a:=ROK_F.SYNT-_a;
      {!
      |? {? ROK_F.SEP<>',' || _a:=1-_a ?};
         {? BUD.SLU().SLU().WZ='Projekty_id' | SLU.WZ='Projekty_symbol'
         || _kod:=BUD.SLU().SLU().DL+_a;
            {? SLU.WZ='Projekty_id'
            || PROJEKTY.index('ID_KSG');
               PROJEKTY.prefix();
               {? PROJEKTY.find_key(#_kod)
               || KonProj2.prefix();
                  KonProj2.REF:=KonProj.ref();
                  KonProj2.PROJ:=PROJEKTY.ref();
                  KonProj2.add()
               ?}
            || PROJEKTY.index('SYM');
               PROJEKTY.prefix();
               {? PROJEKTY.find_key(_kod,)
               || KonProj2.prefix();
                  KonProj2.REF:=KonProj.ref();
                  KonProj2.PROJ:=PROJEKTY.ref();
                  KonProj2.add()
               ?}
            ?}
         ?};
         _a:=SLU.DL-_a;
         BUD.next()
      !}
   ?}
?}


\projekty_in_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Czy istnieja słowniki projektów w kontach
::----------------------------------------------------------------------------------------------------------------------
KonProj0.erase();
_tak:=0;
KS.index('SYM'); KS.prefix(ROK_F.ref());
{? KS.first()
|| {!
   |? _tak:=0;
      BUD.index('KS'); BUD.prefix(KS.ref());
      {? BUD.first()
      || {!
         |? _tak:=BUD.SLU().SLU().WZ='Projekty_id' | SLU.WZ='Projekty_symbol';
            _tak=0 & BUD.next()
         !}
      ?};
      {? _tak
      || KonProj0.prefix();
         KonProj0.KON:=KS.SYM;
         KonProj0.add()
      ?};
      KS.next()
   !}
?};
KonProj0.prefix();
KonProj0.first()


\ZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Nawija nowe pola w tabeli ZL
::   WY: -1/0/1
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

ZL.cntx_psh();
ZL.index('SYM');
ZL.prefix();
_fml:="
   _put:=0;
   {? ZL.PLAN_PO=''
   || {? exec('zl_utilization_po','upgrade_1728',ZL.ref())>0
      || ZL.PLAN_PO:='T'
      || ZL.PLAN_PO:='N'
      ?};
      _put:=1
   ?};
   {? ZL.PLAN_PX=''
   || {? exec('zl_utilization_px','upgrade_1728',ZL.ref())>0
      || ZL.PLAN_PX:='T'
      || ZL.PLAN_PX:='N'
      ?};
      _put:=1
   ?};
   {? ZL.ID_KSG=0 & ZL.UNRZL<=2147483647 || ZL.ID_KSG:=ZL.UNRZL; _put:=1 ?};
   {? _put>0
   || ZL.put()
   ?};
   ~~
";
_result:=ZL.for_each(_fml,1);
ZL.cntx_pop();
_result


\ZL_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Nawija nowe pola w tabeli ZL - opis
::   WY: STRING
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tabeli zleceń produkcyjnych o znaczniki występowania w planie produkcji oraz identyfikator księgowy.\n'
'Może się nie udać, tylko jeżeli jakiś rekord tabeli ZL został zablokowany przez innego użytkownika'


\zl_utilization_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2011]
:: OPIS: Wykorzystanie zasobow - dla wybranej tabeli
::   WE: _a - ZL.ref
::   WY: 1 - wykorzystany, 0 - brak zapisow
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
ZL.cntx_psh();
PL_OPER.cntx_psh();
PL_PART.cntx_psh();

_result:=0;
ZL.clear();
{? ZL.seek(_a)
|| {? ZL.RODZAJ<>'P'
   ||
      PL_PART.index('NRNZL');
      PL_PART.prefix(ZL.UNRZL);
      _result:=PL_PART.first()
   || PL_PART.index('ZL');
      PL_PART.prefix(ZL.ref());
      _result:=PL_PART.first()
   ?}
?};
PL_OPER.cntx_pop();
PL_PART.cntx_pop();
ZL.cntx_pop();
_result


\zl_utilization_px
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [12.10]
:: OPIS: Sprawdza czy zlecenie jest zaplanowane w planie strategicznym (WPP)
::   WE: _a - ZL.ref() - zlecenie
::       [_b] - INTEGER - [0] - sprawdzać tylko w wersji głównej
::                         1 - sprawdzac we wszysktich wersjach
::       [_c] - obj_new(1), w której ustawiany jest zwrotnie znacznik potwierdzenia planu
::   WY: 0 - nie jest zaplanowane
::       1 - jest zaplanowane, są pozycje planu
::       2 - ma być zaplanowane, jest w kolejce ale nie ma jeszcze pozycji planu (plan jest nieprzeliczony)
::----------------------------------------------------------------------------------------------------------------------
_zl:=_a;

_ver_chk:=0;
{? var_pres('_b')=type_of(0)
|| _ver_chk:=_b
?};

{? var_pres('_c')=type_of(obj_new(1))
|| _confirm:=_c
|| _confirm:=obj_new(1);
   _confirm[1]:='N'
?};

_result:=0;
_mainver:=null();
PX_VER.cntx_psh();
PX_VER.index('SYM');
PX_VER.prefix(1);
{? PX_VER.first()
|| _mainver:=PX_VER.ref();
:: przypisuje wersję główna do zmiennej
   PX_VAR.MAINVER:=PX_VER.ref()
?};
PX_VER.cntx_pop();

_can_continue:=0;

ZL.cntx_psh();
PX_OBJ.cntx_psh();
PX_POZ.cntx_psh();

ZL.clear();
{? ZL.seek(_zl)
||
   PX_OBJ.index('ZL');
   PX_OBJ.prefix(ZL.ref());
   {? PX_OBJ.first()
   ||
::    1. Sprawdzam powiązania pod wzgledem pozycji planu
      {? _ver_chk=0
      ||
         PX_POZ.index('TM_VOBJ');
         PX_POZ.prefix(_mainver,PX_OBJ.ref())
      || PX_POZ.index('PX_OBJ3');
         PX_POZ.prefix(PX_OBJ.ref())
      ?};
      {? PX_POZ.size()>0
      || _result:=1
      ?};
      PX_CONN.cntx_psh();
      {? _ver_chk=0
      || PX_CONN.index('VER');
         PX_CONN.prefix(_mainver,PX_OBJ.ref())
      || PX_CONN.index('PX_OBJ');
         PX_CONN.prefix(PX_OBJ.ref())
      ?};
::    2. Sprawdzam powiązania pod względem pozycji w kolejce
::    (ważne dla nieprzeliczonego planu)
      {? _result=0
      || {? PX_CONN.size()>0
         || _result:=2
         ?}
      ?};
::    3. Utalenie znacznika potwierdzenia planu
      _c_n:=_c_p:=_c_t:=0;
      {? PX_CONN.first()
      || {!
         |? _cc:=PX_CONN.PX_GRP().CONFIRM;
            {? _cc='N' || _c_n+=1
            |? _cc='P' || _c_p+=1
            |? _cc='T' || _c_t+=1
            ?};
            PX_CONN.next()
         !}
      ?};
      {? _c_n=0 & _c_p=0 & _c_t>0 & _confirm[1]='N'
      || _confirm[1]:='T'
      |? _c_p>0 | _c_t>0
      || _confirm[1]:='P'
      || _confirm[1]:='N'
      ?};
      PX_CONN.cntx_pop()
   ?};
:: Jeśli zlecenie złożone to rekurencyjnie sprawdzam też podzlecenia
   {? _result=0
   || _can_continue:=0;
      {? ZL.RODZAJ<>'P' & ZL.UNRZL<>0
      || ZL.cntx_psh();
         ZL.index('NRNZL');
         ZL.prefix(ZL.UNRZL);
         {? ZL.first()
         || {!
            |? _can_continue:=exec('zl_utilization_px','upgrade_1728',ZL.ref(),,_confirm);
               ZL.next() & _can_continue=0
            !}
         ?};
         ZL.cntx_pop()
      ?};
      _result:=_can_continue
   ?}
?};
PX_POZ.cntx_pop();
PX_OBJ.cntx_pop();
ZL.cntx_pop();
_result


\sam2poj_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: sam2poj - opis formuły
::----------------------------------------------------------------------------------------------------------------------
'Przenoszenie samochodów do nowej kartoteki pojazdów.'


\sam2poj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła kopiuje dane samochodów z lokalnej tabeli SAM do globalnej POJAZDY
::       Formuła wykonywana w każdej firmie!
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
VAR_DEL.delete('__sampoj');
__sampoj:=tab_tmp(1,'SAM','STRING[16]','','POJ','STRING[16]','');

:: modele pojazdów
POJMODEL.index('NAZWA');
SAMMOD.prefix();
SAMMOD.for_each("POJMODEL.prefix(SAMMOD.MAR,SAMMOD.NAZ,);
                 {? ~POJMODEL.first()
                 || POJMODEL.blank();
                    POJMODEL.MAR:=SAMMOD.MAR;
                    POJMODEL.NAZWA:=SAMMOD.NAZ;
                    POJMODEL.add()
                 ?}
");
:: typy pojazdów
POJTYPY.index('NAZWA');
SAMT.prefix();
SAMT.for_each("POJTYPY.prefix(SAMT.NAZ,);
               {? ~POJTYPY.first()
               || POJTYPY.blank();
                  POJTYPY.NAZWA:=SAMT.NAZ;
                  POJTYPY.POJ_CIEZ:=SAMT.LADUNEK;
                  POJTYPY.add()
               ?}
              ");

SAM.cntx_psh(); POJAZDY.cntx_psh(); SRSR.cntx_psh(); SRST.cntx_psh(); SRDO.cntx_psh(); SRDT.cntx_psh();
SAM.index('NAZ'); SAM.prefix();
SRSR.use('srsrr'+REF.FIRMA().SYMBOL);SRSR.prefix();
SRST.use('srstr'+REF.FIRMA().SYMBOL);SRST.prefix();
SRDO.use('srdor'+REF.FIRMA().SYMBOL);SRDO.prefix();
SRDT.use('srdtr'+REF.FIRMA().SYMBOL);SRDT.prefix();
VAR_DEL.delete('__idx_poj');
__idx_poj:=POJAZDY.ndx_tmp(,,'FIRMA',,,'ODDZ',,,'NREW',,);
SAM.for_each("_sam:=$SAM.ref();
              _poj:='';
              POJAZDY.index(__idx_poj);
              POJAZDY.prefix(REF.FIRMA,SAM.ODDZ,SAM.NREW,);
              {? ~POJAZDY.first()
              || POJAZDY.blank();
                 POJAZDY.NRREJ:=SAM.NRREJ;
                 _add:=1
              || _poj:=$POJAZDY.ref();
                 _add:=0
              ?};
              POJAZDY.FIRMA:=REF.FIRMA;
              POJAZDY.ODDZ:=SAM.ODDZ;
              POJAZDY.NREW:=SAM.NREW;
              POJAZDY.A:=SAM.A;
              POJAZDY.DPR:=SAM.DPR;
              POJAZDY.DPS:=SAM.DPS;
              POJAZDY.WLASNY:=SAM.WLASNY;
              POJAZDY.SRSR:=SAM.SRSR;
              {? POJAZDY.SRSR<>null
              || SRST.index('PODAT');
                 SRST.prefix(POJAZDY.SRSR);
                 {? SRST.last()
                 || POJAZDY.JORG:=SRST.JORG;
                    POJAZDY.OSOBA:=SRST.OSOBA;
                    {? POJAZDY.DPS=date(0,0,0) || POJAZDY.DPS:=SRST.SRSR().DE ?}
                 ?}
              ?};
              POJAZDY.MAR:=SAM.MAR;
              POJAZDY.MIEJSCA:=SAM.MIEJSCA;
              POJAZDY.MOC:=SAM.MOC;
              POJAZDY.MREJ:=SAM.MREJ;
              POJAZDY.MW:=SAM.MW;
              POJAZDY.NADW:=SAM.NADW;
              POJAZDY.NAZ:=SAM.NAZ;
              POJAZDY.POJE:=SAM.POJE;
              {? SAM.SAMMOD<>null
              || POJMODEL.index('NAZWA');
                 POJMODEL.prefix(SAM.SAMMOD().MAR,SAM.SAMMOD().NAZ);
                 {? POJMODEL.first() || POJAZDY.POJMODEL:=POJMODEL.ref() ?}
              ?};
              {? SAM.SAMT<>null
              || POJTYPY.index('NAZWA');
                 POJTYPY.prefix(SAM.SAMT().NAZ,);
                 {? POJTYPY.first() || POJAZDY.POJTYPY:=POJTYPY.ref() ?}
              ?};

              POJAZDY.ROK:=SAM.ROK;
              POJAZDY.SAMDELTY:=SAM.SAMDELTY;
              POJAZDY.SIL:=SAM.SIL;
              POJAZDY.ST:=SAM.ST;
              POJAZDY.VIN:=SAM.VIN;
              POJAZDY.WERSJA:=SAM.WERSJA;

              _unik:=1;
              POJAZDY.cntx_psh();
              POJAZDY.index('DISP');
              POJAZDY.prefix(REF.FIRMA,POJAZDY.NAZ,POJAZDY.NRREJ,);
              {? POJAZDY.first() & (_add | (~_add & _poj<>$POJAZDY.ref())) || _unik:=0 ?};
              POJAZDY.cntx_pop();
              {? _unik=0
              || _tmp:=' ('+POJAZDY.NREW+')';
                 {? +(POJAZDY.NAZ+_tmp)>60
                 || _ile:=+(POJAZDY.NAZ+_tmp)-60;
                    POJAZDY.NAZ:=(POJAZDY.NAZ-_ile)+_tmp
                 || POJAZDY.NAZ:=POJAZDY.NAZ+_tmp
                 ?}
              ?};

              {? (_add & POJAZDY.add()) | (_add=0 & POJAZDY.put())
              || _poj:=$POJAZDY.ref();
                 _txt:=SAM.memo_txt(,1,'UWAGI');
                 POJAZDY.memo_set(_txt,'UWAGI');
                 POJAZDY.memo_put(,'UWAGI');
                 EDOKUMP.cntx_psh();
                 _ename:=EDOKUMP.names();
                 {? _ename.first()
                 || {! |?
                        EDOKUMP.use(_ename.NAME);
                        EDOKUMP.index('SAMCHR');
                        EDOKUMP.prefix($SAM.ref());
                        {? EDOKUMP.first()
                        || {! |?
                              EDOKUMP.cntx_psh();
                              EDOKUMP.prefix();
                              EDOKUMP.SAMREF:=$POJAZDY.ref();
                              EDOKUMP.put();
                              EDOKUMP.cntx_pop();
                              EDOKUMP.first()
                           !}
                        ?};
                        _ename.next()
                    !}
                 ?};
                 EDOKUMP.cntx_pop();
:: jeżeli środek związany z pojazdem miał dokumenty zmiany właściwości
                 SRDO.cntx_psh();
                 SRDO.index('SRODZAJ');
                 SRDO.prefix(POJAZDY.SRSR,'L');
                 {? SRDO.first()
                 || {! |?
                       {? SRDO.TYP().JORG='T' | SRDO.TYP().OSOBA='T'
                       || ZASOB_ZM.cntx_psh();
                          ZASOB_ZM.prefix();
                          exec('zsb_blank','zasoby_wspolne',POJAZDY.SRSR);
                          ZM_ZASOB.ZASOBY:=ZASOB_ZM.ZASOBY;
                          ZASOB_ZM.DATAOD:=SRDO.DO;
                          ZASOB_ZM.OSOBA:=SRDO.OSOBA;
                          ZASOB_ZM.JORG:=SRDO.JORG;
                          ZASOB_ZM.SRDO_Z:=SRDO.ref();
                          {? ZASOB_ZM.add() || exec('zam_poprz','zasoby_wspolne') ?};
                          ZASOB_ZM.cntx_pop()
                       ?};
                       SRDO.next()
                    !}
                 ?};
                 SRDO.cntx_pop()
              || _result:=0
              ?};
              {? _sam<>'' & _poj<>''
              || __sampoj.blank();
                 __sampoj.SAM:=_sam;
                 __sampoj.POJ:=_poj;
                 __sampoj.add(1)
              ?}
             ");
VAR_DEL.delete('__idx_poj');
SAM.cntx_pop(); POJAZDY.cntx_pop(); SRSR.cntx_pop(); SRST.cntx_pop(); SRDO.cntx_pop(); SRDT.cntx_pop();

:: zamiana pól SAM na POJAZD
__sampoj.prefix();
{? __sampoj.first()
|| _tab:=spli_str('OFE.OFK.ZK_N.ZK_P.REJO.WYDRUKIL.ZD_NAG.ZKW_N.ZLP','.');
   _len:=obj_len(_tab);
   {! _i.._len
   |! _msk:=($(_tab[_i]+'.names()'))();
      _msk.clear();
      {? _msk.first()
      || {!
         |? {| ($(_tab[_i]))()
            |! cntx_psh();
               use(_msk.NAME);
               prefix();
               {? first()
               || {!
                  |? {? _tab[_i]='WYDRUKIL'
                     || {? POJAZDOD=null() & SAM_OD<>null()
                        || __sampoj.clear();
                           __sampoj.prefix($SAM_OD,);
                           {? __sampoj.first() & (@.POJAZDY.prefix(); @.POJAZDY.seek(__sampoj.POJ))
                           || POJAZDOD:=@.POJAZDY.ref();
                              put(1)
                           ?}
                        ?};
                        {? POJAZDDO=null() & SAM_DO<>null()
                        || __sampoj.clear();
                           __sampoj.prefix($SAM_DO,);
                           {? __sampoj.first() & (@.POJAZDY.prefix(); @.POJAZDY.seek(__sampoj.POJ))
                           || POJAZDDO:=@.POJAZDY.ref();
                              put(1)
                           ?}
                        ?}
                     |? POJAZD=null() & SAM<>null()
                     || __sampoj.clear();
                        __sampoj.prefix($SAM,);
                        {? __sampoj.first() & (@.POJAZDY.prefix(); @.POJAZDY.seek(__sampoj.POJ))
                        || POJAZD:=@.POJAZDY.ref();
                           put(1)
                        ?}
                     ?};
                     next()
                  !}
               ?};
               cntx_pop()
            |};
            _msk.next()
         !}
      ?};
      obj_del(_msk)
   !};
   obj_del(_tab)
?};
VAR_DEL.delete('__sampoj');
_result


\NWU
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.28]
:: OPIS: Uzupełnia nowe pola w tabeli NWU
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

NWU.cntx_psh();
NWU.index('DATA');
NWU.prefix();
_fml:="
   {? NWU.PLW=''
   || NWU.PLW:='N';
      NWU.put()
   ?};
   ~~
";
_result:=NWU.for_each(_fml,1);
NWU.cntx_pop();
_result


\NWU_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.28]
:: OPIS: Uzupełnia nowe pola w tabeli NWU - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tabeli wniosków urlopowych o znaczniki przekroczenia limitu.\n'
'Ze względu na brak możliwości automatycznego określenia pola "Przekroczenie limitu", należy po '
'wykonaniu aktualizacji sprawdzić poprawność niezaakceptowanych jeszcze wniosków.'


\funpar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Aktualizacja obszaru Ustawienia i parametryzacja.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: proteza usuwania czynności parametryzacyjnej ZWS_PAR_WSAM
FP_DEF.prefix();
FP_DEF.for_each("{? FP_DEF.ID='ZWS_PAR_WSAM' || FP_DEF.del() ?}");
{? exec('aktualizuj','funpar',0)<>0
|| __UPG.msg('Zaktualizowano zawartość obszaru: Ustawienia i parametryzacja.');
   1
?}


\funpar_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Aktualizacja obszaru Ustawienia i parametryzacja - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja ustawień i parametryzacji'


\pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Uzupełnienie pól w tabeli POZF
::----------------------------------------------------------------------------------------------------------------------
_tab:=POZF.names();
{? _tab.first()
|| {!
   |? POZF.use(_tab.NAME);
      DOK.use('doku'+(8+_tab.NAME+4));
      echo('Przetwarzanie tabeli POZF maska %1 ...'@[_tab.NAME]);
      POZF.for_each("{? POZF.ODD=null || POZF.put() ?}",1);
      _tab.next()
   !}
?};
echo();
1


\pozf_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Uzupełnienie pól w tabeli POZF
::----------------------------------------------------------------------------------------------------------------------
'Uuzpełnienie danych pozycji faktur dokumentu księgowego'


\fm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Aktualizacja formuł płacowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('ref_firma','ustawienia')=exec('from_sym','#firma','000')
|| return(1)
?};

FUN.ask(
   'W związku z dodaniem nowych składników płacowych należy zaktualizować treści formuł obliczeniowych list płac.\n'
   'Zestawy standardowe (formuły typu "U", "F", "R", "D" oraz formuły wspólne) mogą zostać zaimportowane:\n'
   'Ustawienia i parametryzacja → Płace → Formuły płacowe →\n'
   '[dla każdego standardowego zestawu wskazanego w górnym oknie, przejdź do dolnego okna i wybierz akcję] →\n'
   'Formuły → Archiwum → Czytaj).\n'
   'Pozostałe zestawy wymagają aktualizacji ręcznej.\n\n'
   'Czy wykonane zostałe prace opisane powyżej?'
)


\fm_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Aktualizacja formuł płacowych - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja formuł płacowych'


\kom_rp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Potrącenia inne - nie występujące w KP (pojazdy, SIM).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('kom_rp','dane_startowe');
1


\kom_rp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Potrącenia inne - nie występujące w KP (pojazdy, SIM) - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Potrącenia inne - nie występujące w KP (pojazdy, SIM)'


\B_PROC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Aktualizacja pól tabeli B_PROC
::   WY: 0/1
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

B_PROC.cntx_psh();
B_PROC.index('AKT');
B_PROC.prefix('N');
{? B_PROC.first()
|| {!
   |? _put:=0;
      {? B_PROC.MODIFIED=''
      || B_PROC.MODIFIED:='N';
         _put:=1
      ?};
      {? _put>0
      || {? B_PROC.put()<=0
         || _result:=0
         ?}
      ?};
      B_PROC.next()
   !}
?};
B_PROC.cntx_pop();
_result


\B_PROC_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Aktualizacja pól tabeli B_PROC - opis
::   WY: STRING
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tabeli procesów o pola służące do identyfikacji czy proces jest standardowy czy zmodyfikowany.\n'
'Może się nie udać, tylko jeżeli nie udał się zapis któregoś rekordu tabeli B_PROC.'


\slo_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Utworzenie nowych słowników kadrowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{! _lp:=1 .. 6
|! exec('slo_typ','ext_slo','PROJWSK'+$_lp)
!};
1


\slo_typ_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Utworzenie nowych słowników kadrowych - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Utworzenie nowych słowników kadrowych'


\f_zatra
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Aktualizacja form współpracy dla czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=exec('f_zatra_add','f_zatr','T','P','PKW_POR_IRPM',1);
{? _ret<>''
|| __UPG.msg(_ret);
   0
|| 1
?}


\f_zatra_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Aktualizacja form współpracy dla czynności - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja form współpracy dla czynności'


\RS_zl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.28]
:: OPIS: Modyfikacja wzorca dla słownika zleceń
::----------------------------------------------------------------------------------------------------------------------
RS.cntx_psh(); RS.index('TAB_POLE'); RS.prefix();
{? RS.find_key('ZL','ZL','UNRZL','UNRZL')
|| RS.KOD:='ID_KSG';
   RS.put()
?};
RS.cntx_pop();
1


\RS_zl_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.28]
:: OPIS: Modyfikacja wzorca dla słownika zleceń - opis
::----------------------------------------------------------------------------------------------------------------------
'Modyfikacja wzorca dla słownika zleceń.'


\trn_rs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Transfer słowników uzytkownika o wzorcu 'fiks' lub 'Przychody/koszty'
::----------------------------------------------------------------------------------------------------------------------
SLU.cntx_psh(); SLU.prefix();
SLU.for_each("{? SLU.WZ='fiks' | SLU.WZ='Przychody/koszty' || SLU.WZ:='prosty'; SLU.put() ?}");
SLU.cntx_pop();
RS.cntx_psh(); RS.index('TAB'); RS.prefix('PODAT',);
{? RS.first() || RS.del() ?};
RS.cntx_pop();
1


\etypy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.28]
:: OPIS: Transfer tabeli ETYPY
::----------------------------------------------------------------------------------------------------------------------
ETYPY.cntx_psh(); ETYPY.prefix();
ETYPY.for_each("ETYPY.CZY_PLAN:=1; ETYPY.put()");
ETYPY.cntx_pop();
1


\proj2fap_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Odtwarzanie rozliczenia projektów na pozycje
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja rozliczenia projektów na pozycje.'


\proj2fap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Odtwarzanie rozliczenia projektów na pozycje
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:=FAP.names();
_loop:=_Tab.first();
{!
|? _loop
|!
   PROJ2FAP.use((PROJ2FAP.name()-3)+(_Tab.NAME+3));
   FAKS.use((FAKS.name()-3)+(_Tab.NAME+3));
   FAP.use(_Tab.NAME);
   FAP.prefix();
   _loop:=FAP.first();
   {!
   |? _loop
   |!
      {? FAP.PROJEKTY
      || _ndx:=PROJ2FAP.ndx_tmp(,,'SZABLON',,,'FAP',,);
         PROJ2FAP.index(_ndx);
         PROJ2FAP.prefix('N',FAP.ref());
         {? ~PROJ2FAP.first()
         || PROJ2FAP.blank();
            PROJ2FAP.PROJEKTY:=FAP.PROJEKTY;
            PROJ2FAP.FAKS:=FAP.FAKS;
            PROJ2FAP.FAKS_NR:=FAP.FAKS().NR;
            PROJ2FAP.KZ:=FAKS.KZ;
            PROJ2FAP.FAP:=FAP.ref();
            PROJ2FAP.FAP_POZ:=FAP.POZ;
            PROJ2FAP.FAP_M:=FAP.M;
            PROJ2FAP.WAL_N:=FAP.WAL_N;
            PROJ2FAP.SZABLON:='N';
            PROJ2FAP.PROCENT:=100;
            PROJ2FAP.IL:=FAP.IL;
            PROJ2FAP.W:=FAP.WN;
            PROJ2FAP.PROJEKTY:=FAP.PROJEKTY;
            PROJ2FAP.add()
         ?};
         PROJ2FAP.ndx_drop()
      ?};
      _loop:=FAP.next()
   !};
   _loop:=_Tab.next()
!};
1


\edokum_edi_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Uzupełnienie pola EDI w tabeli EDOKUM
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie pola EDI w tabeli EDOKUM.'


\edokum_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Uzupełnienie pola EDI w tabeli EDOKUM
::----------------------------------------------------------------------------------------------------------------------
_tab:=EDOKUM.names();
{? _tab.first()
|| {!
   |? EDOKUM.use(_tab.NAME);
      EDOKUM.prefix();
      echo('Uzupełnianie tabeli EDOKUM maska %1 ...'@[_tab.NAME]);
      EDOKUM.for_each("{? EDOKUM.EDI='' || EDOKUM.EDI:='N'; EDOKUM.put() ?}",1);
      _tab.next()
   !}
?};
echo();
1


\szkolbhp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Ustawienie wartości pola KART_DEF.OPISW dla kartoteki SZKOLBHP.
::       I-sza wersja formuły powodowała usunięcie pozycji słownika SLO_KOD związanych z kartoteką dodatkową.
::       II-ga wersja nie tylko jest pozbawiona tej wady, ale potrafi ją naprawić.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
_sym:='SZKOLBHP';
_acr:='OPISW';
KART_DEF.cntx_psh();
KART_DEF.index('SYMBOL');
KART_DEF.prefix(_sym,);
{? KART_DEF.first()
|| KART_DEF.memo_get(,'F3');
   {? KART_DEF.OPISW
   || __UPG.msg('Wartość pola %1 nie wymaga zmiany.'@ [_acr]);
      SLO_TYP.cntx_psh();
      SLO_TYP.index('SYMBOL');
      SLO_TYP.prefix(_sym,);
      {? SLO_TYP.first()
      || SLO_KOD.cntx_psh();
         SLO_KOD.index('KOD');
         SLO_KOD.prefix(SLO_TYP.ref());
         {? SLO_KOD.first()
::          Pozycje słownika istnieją - nic nie trzeba naprawiać.
         || __UPG.msg('Pozycje słownika istnieją.');
            _ret:=1
         || {? KART_DEF.put() & KART_DEF.memo_put(,'F3') & SLO_KOD.first()
            || __UPG.msg('Pozycje słownika zostały przywrócone.');
               _ret:=1
            || __UPG.msg('Pozycji słownika nie udało się przywrócić.');
               __UPG.msg('Należy poprawić i ZAPISAĆ definicję kartoteki dodatkowej %1.' [_sym]);
               _ret:=-1
            ?}
         ?};
         SLO_KOD.cntx_pop()
      ?};
      SLO_TYP.cntx_pop()
   || KART_DEF.OPISW:=1;
      {? KART_DEF.put()
      || __UPG.msg('Wartość pola %1 została zmieniona.'@ [_acr]);
         _ret:=1
      || __UPG.msg('Zmiana wartości pola %1 nie powiodła się.'@ [_acr]);
         _ret:=-1
      ?}
   ?}
|| __UPG.msg('Kartoteka dodatkowa o symbolu "%1" nie została znaleziona.'@ [_sym]);
   _ret:=1
?};
KART_DEF.memo_set(,'F3');
KART_DEF.cntx_pop();
_ret


\szkolbhp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Ustawienie wartości pola KART_DEF.OPISW dla kartoteki SZKOLBHP - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Ustawienie wartości pola KART_DEF.OPISW dla kartoteki SZKOLBHP'


\upgrade_event
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.28]
:: OPIS: Aktualizacja zdarzeń
::----------------------------------------------------------------------------------------------------------------------
exec('fill_tab','#b_event');
__UPG.msg('Zaktualizowano zdarzenia.');
1


\upgrade_event_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.28]
:: OPIS: Aktualizacja zdarzeń - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zdarzeń dla modelera'

:Sign Version 2.0 jowisz:1028 2019/06/07 16:00:03 2ba7aadbbcbba5a03078215138a30092a1dd5ba38a56627b54d79e296abfdf8dfbfef455708f65b9103e3349f392d1a1d8b84009959e7434a4ed0d6ca798fbe0d51454a26df91f577c8b22340166c5368be4b6265561f6cb57c010dfcb902cf08687ab3cec73e4eda7632c5cefd021d3b99e47e6581fab73aad5ca701595410a
