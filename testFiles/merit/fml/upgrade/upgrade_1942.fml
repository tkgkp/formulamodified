:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: upgrade_1942.fml
:: Utworzony: 13.06.2019
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Funkcje do obsługi transferu danych z wersji 19.22 na 19.42
::
::            Każda formuła powinna zwracać wartość liczbową, interpretacja:
::                1 - całość przeszła bez błędów - realizacja zakwalifikowana jako wykonana
::               -1 - całość przeszła z uwagami  - dla zadania automatycznego:
::                                                   * realizacja zakwalifikowana jako wykonana
::                                                 dla zadania manualnego:
::                                                   * zrezygnowano z wykonania zadania w danej chwili - zadanie nadal
::                                                     pozostaje do wykonania
::                0 - został stwierdzony błąd    - realizacja zakwalifikowana jako przerwana
::
::            Definicja zadania transferowego:
::               __UPG.add_task(name,[auto],[mf],domain,[ver],[required],[manual],[nofirm],[onlyact])
::                gdzie:
::                   name     [STRING] - nazwa formuły potransferowej (z bieżącego pliku).
::                   auto     [STRING] - formuła automatyczna: T [domyślnie] / N
::                   mf       [STRING] - formuła wielofirmowa: T [domyślnie] / N
::                                        T - wykonywana tylko raz
::                                        N - wykonywana w każdej firmie
::                   domain   [STRING] - kod dziedziny produktowej (informacyjnie)
::                   ver      [NUMBER] - wersja formuły
::                   required [STRING] - czy zadanie musi być wykonane
::                                       Dla zadań automatycznych parametr zawsze przyjmuje wartość T.
::                                       Dla zadań manualnych - domyślnie: N.
::                   manual   [STRING] - kod powiązanego zadania manualne w ramach wersji
::                                        domyślnie brak
::                                        jeśli podano i istnieje oraz zostaną dokonane zapisy w buforze to zadanie
::                                        zmieni status na wymagalne
::                   nofirm   [NUMBER] - dla zadań jednofirmowych pomija firmę '000' (wartość 1), 0-domyślna wartość
::                   onlyact  [STRING] - zadanie aktualizacyjne dla danej wersji: T-tak, N-nie (domyślnie)
::
::            W formułach można stosować zapis do przesłania komunikatów dla realizacji, np.
::               __UPG.msg('Brak zapisów dla roku 2016 w tabeli FAKS.')
::
::            W formułach automatycznych, które zostały powiązane z formułą manualną można stosować zapis o danych
::            wymagalnych do zweryfikowania, np.
::               __UPG.buf(USERS.uidref(),'Zweryfikuj parametry użytkownika w kontekście anulowania dokumentów')
::            zapis jest dołączony bezpośrednio pod wskazaną czynością manualną
::            Do uzyskania zapisów dla realizacji zadania manualnego służy metoda:
::               __UPG.get_buf()
::            wynik zwracany jest w formie tabeli o strukturze:
::               CODE  - STRING[48]
::               DESC  - STRING[255]
::               FIRMA - STRING[16] - ref SQL
::
::            \formuła      - formuła potransferowa
::            \formuła_desc - opis dla formuły potransferowej
::======================================================================================================================
:: Sposób tworzenia i opisu formuł transferowych:
::           - każda formuła musi zawierać opis (\formuła_desc) która w pierwszych zdaniach opisuje co robi, w kolejnych
::             zdaniach zawiera krótki opis techniczny np. uzupełniono pole XX w tabeli AA wartością 'T'
::           - każda formuła musi badać wynik swojego działania, zwracać 1, 0, -1 jeżeli od jej wykonania jest zależne
::             działanie systemu
::           - każda formuła musi tworzyć opis tego, jak przebiegło jej wykonanie wykorzystując __UPG.msg
::             tak aby po opisie można było wywnioskować co formuła konkretnie zrobiła
::             np. w tabeli AA Poprawiono X rekordów z N przeanalizowanych
::           - każda funkcja powinna posiadać progress, pokazujący postęp wykonania (jeżeli funkcja jest przewidziana
::             do wykonania na wielu rekordach)
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Główna formuła upgrade-ów 19.42
::----------------------------------------------------------------------------------------------------------------------
:: Zadania wykonywane raz dla całego systemu
__UPG.add_task('salda',,,'FKS');
__UPG.add_task('upgrade_act',,,'ZPR',46,,,,'T');
__UPG.add_task('M',,,'ZWS');
__UPG.add_task('MPKW',,,'ZWS');
__UPG.add_task('color',,,'ZWS',23);
__UPG.add_task('funpar',,,'ZWS',10);
__UPG.add_task('areatitle',,,'ZWS',3);
__UPG.add_task('port4event',,,'ZPR',2);
__UPG.add_task('fiks_59',,,'FKS');
__UPG.add_task('UD_TYP',,,'ZWS');
__UPG.add_task('UD_SCH',,,'ZWS');
__UPG.add_task('pba_user',,,'PBA',3);
__UPG.add_task('addr_cho',,,'LTR',1);
__UPG.add_task('atrybuty_sumujace',,,'PPL',2);
__UPG.add_task('atrybuty_PPK',,,'PPK',1);
__UPG.add_task('nowe_skladniki_listy_plac',,,'PPL',6);
__UPG.add_task('plugins',,,'ZWS',24,,,,'T');
__UPG.add_task('stalesys_ini',,,'ZWS');
__UPG.add_task('zalacz',,,'PED',4);
__UPG.add_task('akt_1922_08',,,'ZWS');
__UPG.add_task('param_nagrodajubileuszowa',,,'PKD');
__UPG.add_task('slo_kod_add',,,'ZWS',2);
__UPG.add_task('sch_imp',,,'OBE',3);
__UPG.add_task('aktualizacja_PPK',,,'PPK',2);
__UPG.add_task('ku_10_2019',,,'PPL',1);
__UPG.add_task('rub_52',,,'PPL');
__UPG.add_task('edek_vat',,,'FKS');
__UPG.add_task('fiks_61',,,'FKS');
__UPG.add_task('par_wyd',,,'FKS');
__UPG.add_task('fiks_62',,,'FKS');
__UPG.add_task('akt_1942_05',,,'PPL');
__UPG.add_task('rubatr',,,'ZWS',1,,,,'T');
__UPG.add_task('alg_par_wyl',,,'FKS',1);
__UPG.add_task('formula_popraw',,,'CTR',1);
:: Zadania wykonywane dla każdej firmy osobno
__UPG.add_task('FAKS',,'N','LSP',,,,1);
__UPG.add_task('FAP',,'N','LSP',,,,1);
__UPG.add_task('spal2RODZPAL',,'N','ZWS',2,,,1);
__UPG.add_task('zaomeda_check',,'N','PED',,,,1);
__UPG.add_task('zaoh',,'N','PED',,,,1);
__UPG.add_task('zaots',,'N','PED',,,,1);
__UPG.add_task('pba_role',,'N','PBA',3,,,1);
__UPG.add_task('rem_zas',,'N','TRE',3,,,1);
__UPG.add_task('zlgd_kj_need',,'N','TTE',1,,,1);
__UPG.add_task('premie_okresowe',,'N','PPL',2,,,1);
__UPG.add_task('new_form_skl',,'N','PPL',3,,,1);
__UPG.add_task('tte_pzl_eotw',,'N','TTE',2,,,1);
__UPG.add_task('f_zatra_add',,'N','ZWS',2,,,1);
__UPG.add_task('pd_k',,'N','LZK',2,,,1);
__UPG.add_task('lmg_mag_ewmg',,'N','LMG',2,,,1);
__UPG.add_task('lsp_fak_ewsp',,'N','LSP',2,,,1);
__UPG.add_task('lzk_zak_ewzk',,'N','LZK',2,,,1);
__UPG.add_task('tzl_ppl_ppk',,'N','HBN',,,,1);
__UPG.add_task('role_personel',,'N','PKD',5,,,1);
__UPG.add_task('srdt_num',,'N','FST',,,,1);
__UPG.add_task('UPMZAD',,'N','LUM',,,,1);
__UPG.add_task('kal_def_gr',,'N','ZWS',,,,,'T');
__UPG.add_task('KST_PDGN',,'N','PPL',,,,1);
:: Zadania manualne
__UPG.add_task('fix_espr','N',,'FKS',,,,1);
__UPG.add_task('jpk_fa_3','N',,'FKS',,,,1);
__UPG.add_task('usp_staz','N','N','PKD',,'N',,1);
__UPG.add_task('form_skl_sum','N','N','PPL',1,'N',,1);
__UPG.add_task('progi_nagrodajubileuszowa','N','N','PPL',1,'N',,1);
__UPG.add_task('ppk_03','N','N','PPK',,'N',,1);
__UPG.add_task('wn_imp','N',,'OBE',3,'N',,1,'T');
__UPG.add_task('es_trn_fix','N',,'FST',1);
__UPG.add_task('ppk_prz_zas_rh','N','N','PPL',1,'N',,1);
__UPG.add_task('ppk_dwwp19','N','N','PPL',3,'N',,1);
~~


\salda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [19.42]
:: OPIS: Aktualizacja danych w polach SWN i SMA w tabeli OP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_NAMES:=OP.names;
{? _NAMES.first()
|| OP.cntx_psh();
   {! |?
      OP.use(_NAMES.NAME); OP.index('HAN'); OP.prefix();
      OP.for_each("OP.put()");
      _NAMES.next
   !};
   OP.cntx_pop();
   __UPG.msg('Zaktualizowano salda kont w tabeli OP.');
   1
?}


\salda_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [19.42]
:: OPIS: Aktualizacja danych w polach SWN i SMA w tabeli OP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Zaktualizowanie danych w polach SWN i SMA w tabeli OP.'


\upgrade_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Aktualizacja typów danych oraz czynności dla wskazanych obszarów
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
:: Poniżej wpisać domeny, których dotyczą nowe lub aktualizowane czynności
::_dom:=spli_str('LMG.LSP.LZK.LUM.LOD.PKD.PKW.PPL.TPP.TTE.TRE.WYP.ZWS.FST.FKS.KON.OBE.OBG.PBA.OBE','.');
_dom:=spli_str('LSP.LZK.PKD.PPL.TRE.PBA.LTR.TTE.ZWS.PED.LMG.LUM.PRC.HBN.OBE','.');
_len:=obj_len(_dom);

{? _len & _dom[1]<>''
|| FUN.prg_start(_len+2,'Aktualizacja czynności.'@,,,1);

:: Uzupełnienie domen (zawsze)
   FUN.prg_next();
   exec('add_domain','#b_action');
   __UPG.msg('Zaktualizowano dziedziny.');

:: Uzupełnienie typów (zawsze)
   FUN.prg_next();
   exec('fill_tab','#b_type',0);
   __UPG.msg('Zaktualizowano typy danych.');

   {! _i.._len
   |! FUN.prg_next();
      _domain:=exec('FindInSet','#table','B_DOMAIN','SYMBOL',_dom[_i]);
      {? _domain<>null()
      || exec('import_needed_dom','#b_design',_domain,0);
         __UPG.msg('Zaktualizowano czynności dziedziny: %1.'[_dom[_i]])
      ?}
   !};
   FUN.prg_stop()
?};
obj_del(_dom);
_res


\upgrade_act_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Aktualizacja typy danych oraz czynności dla wskazanych obszarów - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja typów danych oraz czynności dla modelera'


\M
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Uzupełnia M.SP_WYM
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_formula:="
   __lrec+=1;
   _put:=0;
   {? M.SP_WYM='' || M.SP_WYM:='N'; _put:=1 ?};
   {? _put & M.put() || __lmod+=1 ?}
";
M.prefix();
_result:=M.for_each(_formula,1);
{? _result
|| __UPG.msg('Zaktualizowano nowe pola w kartotece materiałowej i usługowej.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji nowych pól w kartotece materiałowej i usługowej.')
?};
VAR_DEL.delete('__lrec','__lmod');
_result


\M_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Uzupełnia M.SP_WYM - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja kartoteki materiałowej i usługowej.'


\MPKW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Uzupełnia MPKW.SP_WYM
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_formula:="
   __lrec+=1;
   _put:=0;
   {? MPKW.SP_WYM='' || MPKW.SP_WYM:='N'; _put:=1 ?};
   {? _put & MPKW.put() || __lmod+=1 ?}
";
MPKW.prefix();
_result:=MPKW.for_each(_formula,1);
{? _result
|| __UPG.msg('Zaktualizowano nowe pola w kartotece PKWiU.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji nowych pól w kartotece PKWiU.')
?};
VAR_DEL.delete('__lrec','__lmod');
_result


\MPKW_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Uzupełnia MPKW.SP_WYM - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja kartoteki PKWiU.'


\FAKS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Aktualizuje FAKS.SP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_msk:=FAKS.names();
FAKS.cntx_psh();
_msk.clear();
{? _msk.first()
||
   {!
   |? FAKS.use(_msk.NAME);
      FAKS.prefix();
      FAKS.for_each("
         __lrec+=1;
         _put:=0;
         {? FAKS.SP_WYM=''
         ||
            FAKS.SP_WYM:='N';
            _put:=1
         ?};
         {? _put & FAKS.put() || __lmod+=1 ?}
      ");
      _msk.next()
   !}
?};
FAKS.cntx_pop();

__UPG.msg('Zaktualizowano pole Podzielona płatność w nagłówku dokumentów sprzedaży i zakupu.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);

obj_del(_msk);
VAR_DEL.delete('__lrec','__lmod');
_res


\FAKS_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Aktualizuje FAKS.SP - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja pola Podzielona płatność w nagłówku dokumentów sprzedaży i zakupu.'


\FAP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Aktualizuje FAP.SP_WYM
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_msk:=FAP.names();
FAP.cntx_psh();
_msk.clear();
{? _msk.first()
||
   {!
   |? FAP.use(_msk.NAME);
      FAP.prefix();
      FAP.for_each("
         __lrec+=1;
         _put:=0;
         {? FAP.SP_WYM=''
         ||
            FAP.SP_WYM:='N';
            _put:=1
         ?};
         {? _put & FAP.put() || __lmod+=1 ?}
      ");
      _msk.next()
   !}
?};
FAP.cntx_pop();

__UPG.msg('Zaktualizowano pole Podzielona płatność w pozycjach dokumentów sprzedaży i zakupu.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);

obj_del(_msk);
VAR_DEL.delete('__lrec','__lmod');
_res


\FAP_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Aktualizuje FAP.SP_WYM - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja pola Podzielona płatność w pozycjach dokumentów sprzedaży i zakupu.'


\color
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [17.42]
:: OPIS: Aktualizacja schematów kolorów
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
exec('Color','#object');
exec('Legend','#object');
exec('odtw_kolor_iko','color',2);
__UPG.msg('Zostały zaaktualizowane schematy kolorów i ikon dla akcji Legenda.');
_res


\color_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [17.42]
:: OPIS: Aktualizacja schematów kolorów - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja schematu kolorów.'


\plugins
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Uzupełnia definicję wtyczek wdrożeniowych
::----------------------------------------------------------------------------------------------------------------------
exec('init','plugins');
__UPG.msg('Uzupełniono definicję wtyczek wdrożeniowych.');
1


\plugins_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Uzupełnia definicję wtyczek wdrożeniowych - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie definicji wtyczek wdrożeniowych:\n'
'FAKS_SP_001\n'
'PRZEL_TYT\n'
'REM_ZGL_F_PUA_001\n'
'REM_ZGL_VALID_F_001\n'
'REM_ZGL_VERIFY_F_001\n'
'TYP_PODPOWIADANEJ_CENY_001\n'
'KH_DOD_B_001'


\spal2RODZPAL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Przepisanie danych z tabeli RODZPAL do tabeli SPAL
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod','__cnv');
__lrec:=__lmod:=0;
__cnv:=tab_tmp(1,'SPAL','STRING[16]','','RODZPAL','STRING[16]','');

SPAL.cntx_psh();
RODZPAL.cntx_psh();
SAMN.cntx_psh();
SAMP.cntx_psh();
do();
:: tworzenie zapisów w tabeli RODZPAL na podstawie SPAL
SPAL.prefix();
{? SPAL.first()
|| {!
   |? __lrec+=1;
      RODZPAL.index('KOD');
      RODZPAL.prefix(SPAL.KOD,);
      {? RODZPAL.first()
      || {? RODZPAL.AC=0 & SPAL.AC>0
         || RODZPAL.AC:=SPAL.AC;
            {? ~RODZPAL.put(1) || undo() || __lmod+=1 ?}
         ?};
         __cnv.clear();
         __cnv.blank();
         __cnv.SPAL:=$SPAL.ref();
         __cnv.RODZPAL:=$RODZPAL.ref();
         {? ~__cnv.add(1) || undo() ?}
      || RODZPAL.blank();
         RODZPAL.KOD:=SPAL.KOD;
         RODZPAL.NAZWA:=SPAL.NAZ;
         RODZPAL.AC:=SPAL.AC;
         {? ~RODZPAL.add(1) || undo() || __lmod+=1 ?};
         __cnv.clear();
         __cnv.blank();
         __cnv.SPAL:=$SPAL.ref();
         __cnv.RODZPAL:=$RODZPAL.ref();
         {? ~__cnv.add(1) || undo() ?}
      ?};
      SPAL.next()
   !}
?};
:: przypisanie nowych wartości w polach tabel SAMN, SAMP
SAMN.prefix();
SAMN.for_each("{? SAMN.PAL<>null() & (__cnv.clear(); __cnv.prefix($SAMN.PAL,); __cnv.first())
               || SAMN.RODZPAL:=exec('FindAndGet','#table',RODZPAL,__cnv.RODZPAL,,,null());
                  SAMN.PAL:=null();
                  SAMN.put(1)
               ?};
               {? SAMN.PAL2<>null() & (__cnv.clear(); __cnv.prefix($SAMN.PAL,); __cnv.first())
               || SAMN.RODZPAL2:=exec('FindAndGet','#table',RODZPAL,__cnv.RODZPAL,,,null());
                  SAMN.PAL2:=null();
                  SAMN.put(1)
               ?}
              ",1);
SAMP.prefix();
SAMP.for_each("{? SAMP.PAL<>null() & (__cnv.clear(); __cnv.prefix($SAMP.PAL,); __cnv.first())
               || SAMP.RODZPAL:=exec('FindAndGet','#table',RODZPAL,__cnv.RODZPAL,,,null());
                  SAMP.PAL:=null();
                  SAMP.put(1)
               ?}
              ",1);
:: usunięcie zapisów w SPAL-u
SPAL.prefix();
{? SPAL.first()
|| {!
   |? {? ~SPAL.count()
      || SPAL.del()
      || SPAL.next()
      ?}
   !}
?};
end();
SPAL.cntx_pop();
RODZPAL.cntx_pop();
SAMN.cntx_pop();
SAMP.cntx_pop();

__UPG.msg('Zaktualizowano zapisy dotyczące rodzajów paliw.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);

VAR_DEL.delete('__lrec','__lmod','__cnv');
_res


\spal2RODZPAL_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Przepisanie danych z tabeli RODZPAL do tabeli SPAL - opis
::----------------------------------------------------------------------------------------------------------------------
'Uwspólnienie zapisów dotyczących rodzajów paliwa'


\port4event
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Tworzy porty wyjściowe zdarzeń startowych nieoznaczonych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

B_PREL.cntx_psh();
B_PREL.index('STARTACT');
B_PREL.prefix();
B_PREL.for_each("
   {? B_PREL.STARTACT=''
   ||
:: uzupełnienie B_PREL.STARTACT
      B_PREL.STARTACT:='N';
      B_PREL.put()
   ?}
");
B_PROC.cntx_psh();
B_PROC.prefix();
B_PROC.for_each("
   {? B_PROC.ACCEPTED='T'
   ||
      __lrec+=1;
      B_PREL.prefix(B_PROC.ref(),'T');
      {? ~B_PREL.first()
      ||
         __lmod+=1;
:: tworzenie portów wyjściowych zdarzeń startowych nioznaczonych
         exec('port4event','#b_actsta',B_PROC.ref(),'remove');
         exec('port4event','#b_actsta',B_PROC.ref(),'create','N')
      ?}
   ?}
");
B_PROC.cntx_pop();
B_PREL.cntx_pop();
__UPG.msg('Zaktualizowano zapisy dotyczące protów wyjściowych zdarzeń startowych nieoznaczonych.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);

VAR_DEL.delete('__lrec','__lmod');
_res


\port4event_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Tworzy porty wyjściowe zdarzeń startowych nieoznaczonych - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Wypełnia tabelę B_ACTSTA i tworzy porty wyjściowe zdarzeń startowych nieoznaczonych'


\zalacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Uzupełnienie pola ZALACZ.NAG.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
ZALACZ.cntx_psh();
ZALACZ.index('TYP_ZAL');
ZALACZ.prefix();
_size:=ZALACZ.size();
_nag0:=_nag1:=_nag2:=0;
_loop:=ZALACZ.first();
{!
|? _loop
|! _put:=0;
   {? ZALACZ.NAG='' & ZALACZ.SQLREF<>''
   || _TAB:=ref_tab(ZALACZ.SQLREF);
      _TAB.cntx_psh();
      _TAB.use(ref_name(ZALACZ.SQLREF));
      {? _TAB.seek(ZALACZ.SQLREF)
      || ZALACZ.NAG:=_TAB.uidref();
         ZALACZ.RODZAJ:=2-!_TAB;
         _put+=1
      || _nag0+=1
      ?};
      _TAB.cntx_pop();
      obj_del(_TAB)

   |? ZALACZ.RODZAJ=''
   || ZALACZ.RODZAJ:=
         {? ZALACZ.NAG<>''
         || 2-!ref_tab(ZALACZ.SQLREF)
         |? ZALACZ.P<>null()
         || 'P'
         || 'OSOBA'
         ?};
      _put+=1

   || _nag2+=1
   ?};
   {? _put
   || {? ZALACZ.put()
      || _nag1+=1
      || _nag0+=1
      ?}
   ?};
   _loop:=ZALACZ.next()
!};
__UPG.msg('Liczba wszystkich zapisów: %1' [$_size]);
__UPG.msg('Liczba zapisów niewymagających uzupełnienia: %1' [$_nag2]);
__UPG.msg('Liczba uzupełnionych zapisów: %1' [$_nag1]);
__UPG.msg('Liczba zapisów, których nie udało się uzupełnić: %1' [$_nag0]);
ZALACZ.cntx_pop();
_ret


\zalacz_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Uzupełnienie pola ZALACZ.NAG - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie pola ZALACZ.NAG'


\zaoh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Zmiany w obsłudze załączników w związku z dokumentacją pracowniczą.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;

ZAOH.cntx_psh();
ZAOH.index('LP');
ZAOH.prefix(0);
:: Ile jest elementów głównych?
_size:=ZAOH.size();
{? _size=0
|| __UPG.msg('Brak definicji struktur - zmiany nie są wymagane.')
|? _size>1
|| __UPG.msg('Istenieją już struktury załączników i dokumentacji pracowniczej - zmiany nie są wymagane.')
|? ZAOH.first() & ZAOH.CZESC=''
|| _TAB:=sql('select count(*) as ILE from ZAOH where ZAOH.CZESC<>\'\'');
:: Pole ZAOH.CZESC:
::    - W Xpertisie było od samego początku (od pojawienia się tabeli ZAOH) i było wypełnione (z wyjątkiem rekordu
::      nadrzędnego).
::    - W Mericie nie było go jeszcze w wersji 19.22 - pojawiło się w wersji następnej (ale było puste).
:: Jeżeli więc istnieją rekordy z uzupełnioną wartością tego pola, to albo procedura transferowa była już wykonana,
:: albo transfer dotyczy przejścia z Xpertis-a.
   _ver:={? _TAB.first() & _TAB.ILE || 'X' || 'M' ?};
   do();
   ZAOH.CZESC:={? _ver='X' || exec('zaoh_path','zalacz','G0D') || exec('zaoh_path','zalacz','G0Z') ?};
   {? ZAOH.put()
   || {? _ver='M'
      || ZAOH.prefix();
         {? ZAOH.first()
         || {!
            |? {? ZAOH.ZAOH<>0 & ZAOH.SYSTEM='T'
               || ZAOH.SYSTEM:='N';
                  ZAOH.put()
               ?};
               ZAOH.next()
            !}
         ?}
      ?}
   ?};
   {? _ret:=end()
   || __UPG.msg('Aktualizacja struktury danych powiodła się.')
   || __UPG.msg('Aktualizacja struktury danych nie powiodła się.')
   ?}
|| __UPG.msg('Aktualizacja struktury danych nie jest wymagana.')
?};
ZAOH.cntx_pop();

_ret


\zaoh_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Zmiany w obsłudze załączników w związku z dokumentacją pracowniczą - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Zmiany w obsłudze załączników w związku z dokumentacją pracowniczą'


\zaots
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Uzupełnienie nowego pola ZAOTS.G.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
ZAOTS.cntx_psh();
ZAOTS.index('PATH');
ZAOTS.prefix();
{? ZAOTS.first()
|| _size:=ZAOTS.size();
   _bz:=0;
   _zm:=0;
   {!
   |? {? ZAOTS.G=''
::       Niech zadziała wyzwalacz.
      || _zm+=ZAOTS.put() & ZAOTS.G<>''
      || _bz+=1
      ?};
      ZAOTS.next()
   !};
   __UPG.msg('Liczba wszystkich zapisów: %1' [$_size]);
   __UPG.msg('Liczba zapisów niewymagających uzupełnienia: %1' [$_bz]);
   __UPG.msg('Liczba zapisów uzupełnionych: %1' [$_zm]);
   _ret:=_zm+_bz=_size
|| __UPG.msg('Brak rekordów - uzupełnienie nie jest wymagane.')
?};
ZAOTS.cntx_pop();
_ret


\zaots_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Uzupełnienie nowego pola ZAOTS.G - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie nowego pola ZAOTS.G'


\fiks_59_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044
::       Błędne esprawozdania skonsolidowane
::----------------------------------------------------------------------------------------------------------------------
'Naprawienie definicji sprawozdań skonsolidowanych'


\fiks_59
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42] IFZ
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044
::       Błędne esprawozdania skonsolidowane
::       kod -  ER/WRT/XP/12.51/2003/0035
::       W pliku JPK_SF wg struktury SkonsolidowanaJednostkaInnaWZlotych(1)_v1-2.txt brak pozycji
::       Aktywa_B_III_1_C_4 - inne krótkoterminowe aktywa finansowe
::----------------------------------------------------------------------------------------------------------------------
:: Skróty naprawianych sprawozdań skonsolidowanych
_s_bil:='SeBilans';
_s_pb:='SePrzep_B';
_s_pp:='SePrzep_P';
_s_rk:='SeRZIS_K';
_s_rp:='SeRZIS_P';
_s_zm:='SeZmKap';
_ks_bil:='KSeBilans';

VAR_DEL.delete('Info');
Info:=obj_new('F','S','W','add','zmiana');
Info.add:="
   .zmiana:=1;
   _str:='Firma: %1, Sprawozdanie: %2, Wiersz: %3 - %4, Opis: %5'[.F,.S,_a,_b,_c];
   __UPG.msg(_str)
";

:: Bilans
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_s_bil);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;
         Info.zmiana:=0;
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_C','Aktywa_A_V_3_D','A_A_V_3_D');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_C_1','Aktywa_A_V_3_D_1','A_A_V_3_D_1');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_C_2','Aktywa_A_V_3_D_2','A_A_V_3_D_2');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_C_3','Aktywa_A_V_3_D_3','A_A_V_3_D_3');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_C_4','Aktywa_A_V_3_D_4','A_A_V_3_D_4');

         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_B','Aktywa_A_V_3_C','A_A_V_3_C');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_B_1','Aktywa_A_V_3_C_1','A_A_V_3_C_1');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_B_2','Aktywa_A_V_3_C_2','A_A_V_3_C_2');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_B_3','Aktywa_A_V_3_C_3','A_A_V_3_C_3');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_B_4','Aktywa_A_V_3_C_4','A_A_V_3_C_4');

         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_A','Aktywa_A_V_3_B','A_A_V_3_B',
            'w jednostkach zależnych, współzależnych i stowarzysz. wyc. met. praw własności'
         );
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_A_1','Aktywa_A_V_3_B_1','A_A_V_3_B_1');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_A_2','Aktywa_A_V_3_B_2','A_A_V_3_B_2');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_A_3','Aktywa_A_V_3_B_3','A_A_V_3_B_3');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_A_4','Aktywa_A_V_3_B_4','A_A_V_3_B_4');

         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_B','Aktywa_A_V_3_A_4','A_A_V_3_A_4',
            '- inne długoterminowe aktywa finansowe','F'
         );
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_A_4','Aktywa_A_V_3_A_3','A_A_V_3_A_3',
            '- udzielone pożyczki','F'
         );
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_A_3','Aktywa_A_V_3_A_2','A_A_V_3_A_2',
            '- inne papiery wartościowe','F'
         );
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_A_2','Aktywa_A_V_3_A_1','A_A_V_3_A_1',
            '- udziały lub akcje','F'
         );
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_A_1','Aktywa_A_V_3_A','A_A_V_3_A',
            'w jednostkach zależnych, współ. niewyc. metodą konsolid. pełnej lub met. prop.','S'
         );
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3_A',
            'Aktywa_A_V_3_A_1,Aktywa_A_V_3_A_2,Aktywa_A_V_3_A_3,Aktywa_A_V_3_A_4'
         );
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'Aktywa_A_V_3',
            'Aktywa_A_V_3_A',4
         );

         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_C','Aktywa_B_III_1_D','A_B_III_1_D');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_C_1','Aktywa_B_III_1_D_1','A_B_III_1_D_1');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_C_2','Aktywa_B_III_1_D_2','A_B_III_1_D_2');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_C_3','Aktywa_B_III_1_D_3','A_B_III_1_D_3');

         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_B','Aktywa_B_III_1_C','A_B_III_1_C');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_B_1','Aktywa_B_III_1_C_1','A_B_III_1_C_1');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_B_2','Aktywa_B_III_1_C_2','A_B_III_1_C_2');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_B_3','Aktywa_B_III_1_C_3','A_B_III_1_C_3');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_B_4','Aktywa_B_III_1_C_4','A_B_III_1_C_4');

         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_A','Aktywa_B_III_1_B','A_B_III_1_B',
            'w jednostkach stowarzyszonych'
         );
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_A_1','Aktywa_B_III_1_B_1','A_B_III_1_B_1');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_A_2','Aktywa_B_III_1_B_2','A_B_III_1_B_2');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_A_3','Aktywa_B_III_1_B_3','A_B_III_1_B_3');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_A_4','Aktywa_B_III_1_B_4','A_B_III_1_B_4');

         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_B','Aktywa_B_III_1_A_4','A_B_III_1_A_4',
            '- inne krótkoterminowe aktywa finansowe','F'
         );
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_A_4','Aktywa_B_III_1_A_3','A_B_III_1_A_3',
            '- udzielone pożyczki','F'
         );
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_A_3','Aktywa_B_III_1_A_2','A_B_III_1_A_2',
            '- inne papiery wartościowe','F'
         );
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_A_2','Aktywa_B_III_1_A_1','A_B_III_1_A_1',
            '- udziały lub akcje','F'
         );
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_A_1','Aktywa_B_III_1_A','A_B_III_1_A',
            'w jednostkach zależnych i współzależnych','S'
         );
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_A',
            'Aktywa_B_III_1_A_1,Aktywa_B_III_1_A_2,Aktywa_B_III_1_A_3,Aktywa_B_III_1_A_4'
         );
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1',
            'Aktywa_B_III_1_A',4
         );

         exec('fiks_59e','upgrade_1942',GR_SIK.ref(),'Pasywa_C','S');
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Pasywa_D','Pasywa_C_II','P_C_II',
            'Ujemna wartość - jednostki współzależne','F'
         );
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Pasywa_C_II','Pasywa_C_I','P_C_I',
            'Ujemna wartość - jednostki zależne','F'
         );
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'Pasywa_C',
            'Pasywa_C_I,Pasywa_C_II'
         );
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'Pasywa_A',
            'Pasywa_A_V',8
         );
         {? Info.zmiana & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
         ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;

:: Bilans skonsolidowany
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_ks_bil);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;
         Info.zmiana:=0;
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_D','Aktywa_B_III_1_C_4','A_B_III_1_C_4',
            '– inne krótkoterminowe aktywa finansowe','F'
         );
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'Aktywa_B_III_1_C','Aktywa_B_III_1_C_4',4);
         {? Info.zmiana & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
         ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;

:: Rachunek przepływów bezpośrednich
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_s_pb);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.zmiana:=0;
         Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'B_II_4','B_II_5','B_II_5');
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'B_II_5','B_II_4','B_II_4',
            'Dywidendy i inne udziały w zyskach wypłacone udziałowcom (akc.) mniejszościowym','F'
         );
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'B_II',
            'B_II_4',5
         );
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'C_II_3',,,'Inne niż wypłaty na rzecz właścicieli wydatki z tytułu podziału zysku');

         {? Info.zmiana & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
      ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;


:: Rachunek przepływów pośrednich
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_s_pp);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.zmiana:=0;
         Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'A_II_10','A_II_14','A_II_14','Inne korekty z działalności operacyjnej');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'A_II_9','A_II_13','A_II_13');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'A_II_8','A_II_12','A_II_12');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'A_II_7','A_II_11','A_II_11');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'A_II_6','A_II_10','A_II_10');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'A_II_5','A_II_9','A_II_9');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'A_II_4','A_II_8','A_II_8');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'A_II_3','A_II_7','A_II_7');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'A_II_2','A_II_6','A_II_6');
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'A_II_6','A_II_5','A_II_5',
            'Odpisy ujemnej wartości firmy','F'
         );
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'A_II_5','A_II_4','A_II_4',
            'Odpisy wartości firmy','F'
         );
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'A_II_1','A_II_3','A_II_3');
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'A_II_3','A_II_2','A_II_2',
            'Zysk (strata) z udziałów (akcji) w jednostkach wycenianych metodą praw własności','F'
         );
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'A_II_2','A_II_1','A_II_1',
            'Zyski (straty) mniejszości','F'
         );
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'A_II','A_II_1',11);
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'A_II','A_II_2',12);
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'A_II','A_II_4',13);
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'A_II','A_II_5',14);

         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'B_I_3_A',,,'w jednostkach wycenianych metodą praw własności');

         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'B_II_4','B_II_5','B_II_5');
         exec('fiks_59c','upgrade_1942',GR_SIK.ref(),'B_II_5','B_II_4','B_II_4',
            'Dywidendy i inne udziały w zyskach wypłacone udziałowcom (akc.) mniejszościowym','F'
         );
         exec('fiks_59d','upgrade_1942',GR_SIK.ref(),'B_II',
            'B_II_4',5
         );
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'B_II_3_A',,,'w jednostkach wycenianych metodą praw własności');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'C_II_3',,,'Inne niż wypłaty na rzecz właścicieli wydatki z tytułu podziału zysku');
         {? Info.zmiana & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
         ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;


:: Rachunek zysków i strat kalkulacyjny
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_s_rk);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'A_J',,,'- od jednostek powiązanych nieobjętych metodą konsolidacji pełnej');
         _delall:=0;
         DEFW.cntx_psh();
         DEFW.index('E_KOD'); DEFW.prefix(GR_SIK.ref());
         {? DEFW.find_key('R',)
         || _ref:=DEFW.ref();
            _kod:=DEFW.KOD;
            _naz:=DEFW.NAZWA;
            GR_KOL.cntx_psh();
            GR_KOL.index('LP'); GR_KOL.prefix(GR_SIK.ref());
            {? GR_KOL.first()
            || {!
               |? _del:=0;
                  DEFA.cntx_psh();
                  DEFA.index('LP');
                  DEFA.prefix(_ref,GR_KOL.ref());
                  {? DEFA.first()
                  || {!
                     |? {? 'IJK'*DEFA.ARGUMENT().E_KOD
                        || _del:=1; DEFA.del()
                        || DEFA.next()
                        ?}
                     !}
                  ?};
                  {? _del
                  || _delall:=1;
                     _lp:=0;
                     {? DEFA.first()
                     || {!
                        |? DEFA.LP:=(_lp+=1);
                           DEFA.put();
                           DEFA.next()
                        !}
                     ?}
                  ?};
                  DEFA.cntx_pop();
                  GR_KOL.next()
               !}
            ?};
            GR_KOL.cntx_pop()
         ?};
         DEFW.cntx_pop();
         {? _delall
         || Info.add(_kod,_naz,'Zmodyfikowano algorytmy wiersza.')
         ?};
         {? _delall & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
         ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;

:: Rachunek przepływów porównawczy
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_s_rp);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.zmiana:=0;
         Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;

         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'A_J',,,'- od jednostek powiązanych nieobjętych metodą konsolidacji pełnej');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'G_I_A',,,'od jednostek powiązanych, w tym:');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'G_I_B',,,'od jednostek pozostałych, w tym:');

         {? Info.zmiana & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
         ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;

:: Zmiany w kapitale
_sql:=sql('select REFERENCE as REF from GR_SIK where SKROT=\':_a\'',_s_zm);
{? _sql.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || Info.zmiana:=0;
         Info.F:=GR_SIK.FIRMA().SYMBOL;
         Info.S:=GR_SIK.SKROT;
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'IA_8_1_1','IA_8_1_2a','IA_8_1_2a',,60,'– zmiany przyjętych zasad (polityki) rachunkowości');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'IA_8_1_2','IA_8_1_1a','IA_8_1_1a',,61,'– korekty błędów');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'IA_8_1_2a','IA_8_1_2','IA_8_1_2',,35,'– zmiany przyjętych zasad (polityki) rachunkowości');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'IA_8_1_1a','IA_8_1_1','IA_8_1_1',,34,'– korekty błędów');

         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'IA_8_4_1','IA_8_4_2a','IA_8_4_2a',,60,'– zmiany przyjętych zasad (polityki) rachunkowości');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'IA_8_4_2','IA_8_4_1a','IA_8_4_1a',,61,'– korekty błędów');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'IA_8_4_2a','IA_8_4_2','IA_8_4_2',,43,'– zmiany przyjętych zasad (polityki) rachunkowości');
         exec('fiks_59a','upgrade_1942',GR_SIK.ref(),'IA_8_4_1a','IA_8_4_1','IA_8_4_1',,42,'– korekty błędów');

         {? Info.zmiana & GR_SIK.AKC<>'N'
         || GR_SIK.AKC:='N'; GR_SIK.put();
            Info.add('','','Wycofano akceptację sprawozdania.')
         ?};
         ~~
      ?};
      _sql.next()
   !};
   GR_SIK.cntx_pop()
?};
&_sql;
VAR_DEL.delete('Info');
1


\fiks_59a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044 - Błędne esprawozdania skonsolidowane
::       Zmiana e-kodu, skrótu i nazwy wiersza sprawozdania
::   WE: _a - sprawozdanie
::       _b - e-Kod stary
::       [_c] - e-Kod nowy
::       [_d] - kod nowy
::       [_e] - nowa nazwa
::       [_f] - lp
::       [_g] - nazwa dla kontroli
::  OLD: \fiks_59a/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh();
DEFW.index('E_KOD'); DEFW.prefix(_a,_b,);
{? DEFW.first()
|| _kod:=DEFW.KOD;
   _naz:=DEFW.NAZWA;
   _zm:='';
   {? var_press('_c')>0 & DEFW.E_KOD<>_c || _zm+='eKod na: '+_c+', '; DEFW.E_KOD:=_c ?};
   {? var_press('_d')>0 & DEFW.KOD<>_d || _zm+='kod na: '+_d+', '; DEFW.KOD:=_d ?};
   {? var_press('_e')>0 & DEFW.NAZWA<>_e || _zm+='nazwę na: '+_e+', '; DEFW.NAZWA:=_e ?};
   {? var_press('_f')>0 & DEFW.LP<>_f || _zm+='lp na: '+$_f+', '; DEFW.LP:=_f ?};
   DEFW.cntx_psh();
   DEFW.prefix();
   {? (var_press('_g')<=0 | _g=DEFW.NAZWA) & _zm<>'' & DEFW.put(1)
   || Info.add(_kod,_naz,'Zmieniono '+(_zm-2))
   ?};
   DEFW.cntx_pop()
?};
DEFW.cntx_pop()


\fiks_59b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044 - Błędne esprawozdania skonsolidowane
::       Przenumerowanie wierszy
::   WE: _a - sprawozdanie
::       _b - e-Kod stary
::       _c - ile elementów przed
::  OLD: \fiks_59b/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
_lp:=0;
DEFW.cntx_psh();
DEFW.index('E_KOD'); DEFW.prefix(_a,_b,);
{? DEFW.first()
|| _lp:=DEFW.LP;
   DEFW.index('LP');
   DEFW.prefix(_a);
   {? DEFW.last()
   || {!
      |? {? DEFW.LP>=_lp
         || DEFW.LP+=_c;
            DEFW.put();
            DEFW.prev()
         ?}
      !}
   ?}
?};
DEFW.cntx_pop();
_lp


\fiks_59c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044 - Błędne esprawozdania skonsolidowane
::       Dodanie wiersza sprawozdania przed wskazanym
::   WE: _a - sprawozdanie
::       _b - dodać przed - e-Kod
::       _c - e-Kod
::       _d - kod
::       _e - nazwa
::       _f - typ
::  OLD: \fiks_59c/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh();
DEFW.index('E_KOD'); DEFW.prefix(_a);
{? ~DEFW.find_key(_c,) & DEFW.find_key(_b,)
|| _lp:=DEFW.LP;
   exec('fiks_59b','upgrade_1942',_a,_b,1);
   DEFW.E_KOD:=_c;
   DEFW.KOD:=_d;
   DEFW.NAZWA:=_e;
   DEFW.ALGORYTM:=_f;
   DEFW.cntx_psh();
   DEFW.prefix();
   {? DEFW.add()
   || Info.add(DEFW.KOD,DEFW.NAZWA,'Dodano wiersz sprawozdania.')
   ?};
   DEFW.cntx_pop()
?};
DEFW.cntx_pop()


\fiks_59d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044 - Błędne esprawozdania skonsolidowane
::       Dodanie wierszy do algorytmu
::   WE:  _a  - sprawozdanie
::        _b  - e-Kod
::        _c  - e-Kody, który należy dodać do algorytmu (oddzielone przecinkiem)
::       [_d] - lp
::  OLD: \fiks_59d/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh();
DEFW.index('E_KOD'); DEFW.prefix(_a);
{? DEFW.find_key(_b,) & DEFW.ALGORYTM='S'
|| _defw:=DEFW.ref();
   DEFA.cntx_psh();
   DEFA.index('LP'); DEFA.prefix(_defw);
   {? var_press('_d')<=0 & ~DEFA.first() | var_press('_d')>0 & DEFA.first()
   || GR_KOL.cntx_psh();
      GR_KOL.index('LP'); GR_KOL.prefix(_a);
      {? GR_KOL.first()
      || _ekod:=spli_str(_c,',');
         {!
         |? _lp:={? var_press('_d')>0 || _d || 1 ?};
            {! _i:=1..obj_len(_ekod)
            |! {? DEFW.find_key(_ekod[_i],)
               || {? ~DEFA.find_key(GR_KOL.ref(),_lp)
                  || Info.zmiana:=1;
                     DEFA.blank(1);
                     DEFA.WYR:=_defw;
                     DEFA.KOL:=GR_KOL.ref();
                     DEFA.LP:=_lp; _lp+=1;
                     DEFA.LM:='S';
                     DEFA.WSP:=1;
                     DEFA.ARGUMENT:=DEFW.ref();
                     DEFA.ARG_KOL:=GR_KOL.ref();
                     DEFA.add(1)
                  ?}
               ?}
            !};
            GR_KOL.next()
         !}
      ?};
      GR_KOL.cntx_pop()
   ?};
   DEFA.cntx_pop()
?};
DEFW.cntx_pop()


\fiks_59e
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044 - Błędne esprawozdania skonsolidowane
::       Zmiana typu algorytmu wiersza sprawozdania
::   WE: _a - sprawozdanie
::       _b - e-Kod
::       _c - algorytm
::  OLD: \fiks_59e/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh();
DEFW.index('E_KOD'); DEFW.prefix(_a);
{? DEFW.find_key(_b,) & DEFW.ALGORYTM<>_c
|| Info.zmiana:=1;
   DEFW.ALGORYTM:=_c;
   DEFW.put()
?};
DEFW.cntx_pop()


\fix_espr_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044
::       Błędne esprawozdania skonsolidowane
::----------------------------------------------------------------------------------------------------------------------
'Naprawienie schematów e-Sprawozdań skonsolidowanych'


\fix_espr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: kod - ER/WRT/XP/12.51/1906/0044
::       Błędne esprawozdania skonsolidowane
:: ~OST: INFCOPY
::----------------------------------------------------------------------------------------------------------------------
SKID.ISTDEF:='J';
_tab:=obj_new(2);
_tab[1]:='SkonsolidowanaJednostkaInnaWTysiacach(1)_v1-0';
_tab[2]:='SkonsolidowanaJednostkaInnaWZlotych(1)_v1-0';
_stat:=obj_new(2);
_stat[1]:=0;
_stat[2]:=0;
exec('myDIALOG','object');
ISTDEF.cntx_psh();
ISTDEF.index('JPK');
ISTDEF.prefix('J','SF');
{! _i:=1..obj_len(_tab)
|! {? ISTDEF.find_key(_tab[_i],)
   || {? FUN.ask('Czy zaimportować poprawny schemat: %1?\n(Wymagany plik znajduje się w danych wzorcowych)'@[_tab[_i]])
      || _path:=myDIALOG.OpenFile('Schemat (*.txt)|'+(29+_tab[_i])+'*.txt|Wszystkie pliki (*.*)|*.*','','');
         {? _path<>''
         || _fn:='espr.txt';
            {? fcopy('@'+_path,_fn,0,1,1)
            || VAR_DEL.delete('f_del');
               f_del:="
                  ISTDEFI.prefix(ISTDEFS.ref()); {? ISTDEFI.first() || {!|? ISTDEFI.del() !} ?};
                  ISTDEFS.cntx_psh(); ISTDEFS.prefix(ISTDEF.ref(),ISTDEFS.ref());
                  {? ISTDEFS.first()
                  || {!
                     |? f_del(1)
                     !}
                  ?};
                  ISTDEFS.cntx_pop();
                  {? _a || ISTDEFS.del() ?}
               ";
               ISTDEFS.cntx_psh();
               ISTDEFS.index('DRZEWO'); ISTDEFS.prefix(ISTDEF.ref(),0);
               {? ISTDEFS.first()
               || f_del(1)
               ?};
               ISTDEFS.cntx_pop();
               VAR_DEL.delete('f_del');
               exec('edek_imp','xml',_fn,1);
               _str:='Zaimportowano schemat: %1.'@[_tab[_i]];
               FUN.info(_str);
               __UPG.msg(_str);
               _stat[_i]:=1
            || _str:='Nie udało się kopiowanie pliku schematu na serwer.'@;
               FUN.info(_str);
               __UPG.msg(_str);
               _stat[_i]:=0
            ?}
         || _stat[_i]:=-1
         ?}
      || _stat[_i]:=-1
      ?}
   || _stat[_i]:=1
   ?}
!};
ISTDEF.cntx_pop();
{? _stat[1]=0 | _stat[2]=0
|| 0
|? _stat[1]=-1 | _stat[2]=-1
|| -1
|| 1
?}


\UD_TYP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja definicji typów danych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;

UD_TYP.cntx_psh();
UD_TYP.prefix();
UD_TYP.f_set(,,'POZIOM in (:_a) or OCHRONA in (:_a) or SYSTEM in (:_a)','\'t\',\'n\'');
_loop:=UD_TYP.f_first();
_size:=UD_TYP.f_size();
{!
|? _loop
|! UD_TYP.POZIOM:=~-UD_TYP.POZIOM;
   UD_TYP.OCHRONA:=~-UD_TYP.OCHRONA;
   UD_TYP.SYSTEM:=~-UD_TYP.SYSTEM;
   UD_TYP.put();
   _loop:=UD_TYP.f_next()
!};
UD_TYP.f_clear();
UD_TYP.cntx_pop();

{? _size=0
|| __UPG.msg('Typy danych nie wymagają aktualizacji.')
|| __UPG.msg('Liczba aktualizowanych typów danych: %1'[$_size])
?};

_ret


\UD_TYP_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja definicji typów danych - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja definicji typów danych.'


\UD_SCH
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja definicji schematów danych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;

UD_SCH.cntx_psh();
UD_SCH.prefix();
UD_SCH.f_set(,,'SYSTEM in (:_a)','\'t\',\'n\'');
_loop:=UD_SCH.f_first();
_size:=UD_SCH.f_size();
{!
|? _loop
|! UD_SCH.SYSTEM:=~-UD_SCH.SYSTEM;
   UD_SCH.put();
   _loop:=UD_SCH.f_next()
!};
UD_SCH.f_clear();
UD_SCH.cntx_pop();

{? _size=0
|| __UPG.msg('Schematy danych nie wymagają aktualizacji.')
|| __UPG.msg('Liczba aktualizowanych schematów danych: %1'[$_size])
?};

_ret


\UD_SCH_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Aktualizacja definicji schematów danych - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja definicji schematów danych.'


\usp_staz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zmiany w obsłudze ustania stosunku pracy w okresach zatrudnienia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_firma:=exec('ref_firma','ustawienia');

_TAB:=sql('
   select distinct SLO_NAZ.NAZWA ROU, space(137) USPPR, space(16) USPPRR, space(190) USPPO, space(16) USPPOR
   from STAZ join SLO_NAZ
   where STAZ.FIRMA=:_a',
   _firma
);
{? _TAB.first()
|| {!
   |? {? |_TAB.USPPR=''
      || _TAB.USPPR:=_TAB.USPPRR:='';
         _TAB.put(1)
      ?};
      {? |_TAB.USPPO=''
      || _TAB.USPPO:=_TAB.USPPOR:='';
         _TAB.put(1)
      ?};
      _TAB.next()
   !}
?};

:: Okno wertowania
_wer:=_TAB.mk_sel('Rozwiązanie umowy'@,,,'uspstazsel',,,,,'U',,,,,'maximized');
_TAB.win_fld(_wer,,'ROU',,,-30,,1,'Rozwiązanie umowy'@,,'Przyczyna rozwiązania umowy obowiązująca do 2018/12/31'@);
_TAB.win_fld(_wer,,'USPPR',,,-30,,1,'Rozwiązanie umowy'@,,'Przyczyna rozwiązania/wygaśnięcia stosunku pracy'@);
_TAB.win_fld(_wer,,'USPPO',,,-100,,1,'Podstawa prawna'@,,'Podstawa prawna ustania stosunku pracy/stosunku służbowego'@);
_TAB.win_act(_wer,,'Formuła','Popraw'@@,,'Poprawianie bieżącego zapisu'@,
   "  _TAB:=cur_tab();
      {? |_TAB.USPPR='' || _TAB.USPPR:=_TAB.USPPRR:='' ?};
      {? |_TAB.USPPO='' || _TAB.USPPO:=_TAB.USPPOR:='' ?};
      {? _TAB.edit(\"__CHK.record2(cur_tab(),'USPPR','Rozwiązanie umowy'@,'USPPO','Podstawa prawna'@)\")
      || _TAB.put()
      ?}
   ",,,,,,'P'
);
_TAB.win_act(_wer,,'Formuła','Zapisz'@@,,'Zapisanie wprowadzonych zmian'@,"sel_exit()",,,,,,'Z');
_TAB.win_act(_wer,,'Rekord',,,,
   "  _TAB:=cur_tab();
      _TAB.cntx_psh();
      _act:={? _TAB.find_tab(1,'USPPR',,'<>','') || '' || 'Z' ?};
      _TAB.cntx_pop();
      _TAB.actions_grayed(cur_win(),_act)
   "
);
_TAB.win_btn(_wer,'text=%1,align=begin'['Popraw'@],'menu:P',,,0,,,'noempty');
_TAB.win_btn(_wer,'text=%1,panel=bottom,align=end'['Zapisz'@],'menu:Z',,,0,,,'noempty');
_TAB.win_btn(_wer,'text=%1,panel=bottom,align=end'['Anuluj'@],'key:Esc',,,0);

:: Okno redagowania
_red:=_TAB.mk_edit('Rozwiązanie umowy'@,,'uspstazedit');
_TAB.win_esep(_red,'Dane podstawowe'@);
_TAB.win_efld(_red,,'ROU',,,150,,1,'Rozwiązanie umowy'@,,'Przyczyna rozwiązania umowy obowiązująca do 2018/12/31'@);
_TAB.win_efld(_red,,'USPPR',,,150,,,'Rozwiązanie umowy'@,,'Przyczyna rozwiązania/wygaśnięcia stosunku pracy'@,,
   'F3_button=1'
);
_TAB.efld_opt(_red,'mark=1',,'USPPR');
_TAB.win_efld(_red,,'USPPO',,,150,,,'Podstawa prawna'@,,'Podstawa prawna ustania stosunku pracy/stosunku służbowego'@,,
   'F3_button=1'
);
_TAB.efld_opt(_red,'mark=1',,'USPPO');
_TAB.fld_fml('USPPR','F3',"exec('usp_staz_f3','upgrade_1942',cur_tab(),'USPKOD')");
_TAB.fld_fml('USPPR','AFTER_EDIT',"exec('usp_staz_ae','upgrade_1942',cur_tab(),'USPKOD')");
_TAB.fld_fml('USPPO','F3',"exec('usp_staz_f3','upgrade_1942',cur_tab(),'USPPPRAK')");
_TAB.fld_fml('USPPO','AFTER_EDIT',"exec('usp_staz_ae','upgrade_1942',cur_tab(),'USPPPRAK')");
exec('ok_esc','#window',_TAB,_red);

_TAB.win_sel(_wer);
_TAB.win_edit(_red);
{? _TAB.select()
|| {? _TAB.first()
   || _ask:=FUN.ask('Czy nadpisywać wprowadzone wcześniej informacje?'@);
      S_ZUS.cntx_psh();
      S_ZUS.prefix();
      STAZ.cntx_psh();
      STAZ.index(STAZ.ndx_tmp(,1,'FIRMA',,,'ROU','NAZWA',));
      {!
      |? {? +(|_TAB.USPPRR) | +(|_TAB.USPPOR)
         || STAZ.prefix(_firma,_TAB.ROU);
            {? STAZ.first()
            || {!
               |? _put:=0;
                  {? {? _ask || 1 || STAZ.USPKOD=null() ?}
                     &
                     +(|_TAB.USPPRR)
                     &
                     S_ZUS.seek(_TAB.USPPRR,,1)
                  || STAZ.USPKOD:=S_ZUS.ref();
                     _put:=1
                  ?};
                  {? {? _ask || 1 || STAZ.USPPPRAK=null() ?}
                     &
                     +(|_TAB.USPPOR)
                     &
                     S_ZUS.seek(_TAB.USPPOR,,1)
                  || STAZ.USPPPRAK:=S_ZUS.ref();
                     _put:=1
                  ?};
                  {? _put || STAZ.put() ?};
                  STAZ.next()
               !}
            ?}
         ?};
         _TAB.next()
      !};
      STAZ.ndx_drop();
      STAZ.cntx_pop();
      S_ZUS.cntx_pop()
   ?}
?};

{? FUN.ask('%1\n%2\n%3'
      [  'Czy wykonane zostały wszystkie prace związane ze zmianą sposobu raportowania do ZUS ustania stosunku pracy?'@,
         'Tak - Formuła potransferowa zostanie uznana za zakończoną. Jej ponowne uruchomienie nie będzie możliwe.'@,
         'Nie - Nie wszystkie prace zostały wykonane. Formuła potransferowa będzie mogła być ponownie uruchomiona.'@
      ]
   )
|| __UPG.msg('Użytkownik %1 potwierdził wykonanie wszystkich prac.' [exec('operatorKod','#users')]);
   1
|| __UPG.msg('Prace będę jeszcze kontynuowane.');
   0
?}


\usp_staz_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zmiany w obsłudze ustania stosunku pracy w okresach zatrudnienia.
::   WE: _a [TABLE] Tabela z danymi do modyfikacji.
::       _b [STRING] Rodzaj słownika ZUS z wymaganymi informacjami.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:=_a;
_rodz:=_b;

S_ZUS.cntx_psh();
S_ZUS.index('S_ZUS');
S_ZUS.prefix(_rodz);
_wer:=S_ZUS.mk_sel('Słownik ZUS'@,,,,,,,,'U');
S_ZUS.win_fld(_wer,,'KOD',,,12,,1,'Kod'@,,'Symbol/kod'@);
S_ZUS.win_fld(_wer,,'LINIA',,,63,,1,'Opis'@,,'Krótki opis'@);
S_ZUS.win_act(_wer,,'Formuła','Wybierz'@@,,'Wybór bieżącego zapisu'@,"sel_exit()",,1,,,,'W');
S_ZUS.win_btn(_wer,'text=%1,panel=bottom,align=end'['Wybierz'@],'menu:W',,,0,,,'noempty');
S_ZUS.win_btn(_wer,'text=%1,panel=bottom,align=end'['Anuluj'@],'key:Esc',,,0);
S_ZUS.win_sel(_wer);
{? S_ZUS.select()
|| {? _rodz='USPKOD'
   || _TAB.USPPR:=S_ZUS.LINIA;
      _TAB.USPPRR:=$S_ZUS.ref()
   |? _rodz='USPPPRAK'
   || _TAB.USPPO:=S_ZUS.LINIA;
      _TAB.USPPOR:=$S_ZUS.ref()
   || _TAB.USPPO:=_TAB.USPPOR:=''
   ?}
?};
S_ZUS.cntx_pop();
~~


\usp_staz_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zmiany w obsłudze ustania stosunku pracy w okresach zatrudnienia.f3_usp_staz
::   WE: _a [TABLE] Tabela z danymi do modyfikacji.
::       _b [STRING] Rodzaj słownika ZUS z wymaganymi informacjami.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:=_a;
_rodz:=_b;

S_ZUS.cntx_psh();
S_ZUS.index(S_ZUS.ndx_tmp(,1,'RODZAJ',,,'LINIA',,));
S_ZUS.prefix(_rodz);
_wart:={? _rodz='USPKOD' || _TAB.USPPR || _TAB.USPPO ?};
{? |_wart='' | S_ZUS.find_key(_wart,)
|| _result:=1
|| FUN.emsg('Brak wartości w słowniku.'@);
   _result:=0
?};
S_ZUS.ndx_drop();
S_ZUS.cntx_pop();
_result


\usp_staz_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zmiany w obsłudze ustania stosunku pracy w okresach zatrudnienia - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Zmiany w obsłudze ustania stosunku pracy w okresach zatrudnienia'


\pba_user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.42]
:: OPIS: Aktualizacja użytkowników związana z wypełnianiem ankiet w trybie anonimowym w webTermie.
::----------------------------------------------------------------------------------------------------------------------
_status:=1;
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Pracownik - wypełnianie ankiet';
_ref:=exec('ref','#b_role',_rola);
_login:='ankieta';
{? var_press('_user')>0 || obj_del(_user) ?};
_user:=exec('buffer','users');
{? var_press('_exist')>0 || obj_del(_exist) ?};
_exist:=sql('select * from USERS where USERS.KOD=\'ankieta\'');
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
{? ~_exist.size()
|| _user.blank();
   _user.KOD:=_login;
   _user.WEBLOGIN:=_login;
   _user.DANE:='Wypełnianie ankiet webTerm';
   _user.AKT:='N';
   _user.JTERM:='N';
   _user.PORTAL:='T';
   {? exec('add','users',_user)
   || USERS.cntx_psh();
      USERS.index('USR_KKOD');
      USERS.prefix(_login,_login);
      {? USERS.first()
      || {? exec('resurrection','users',USERS.ref(),,USERS)
         || {? exec('setWebUserActive','users',_login,1)
            || __UPG.msg('Dodano i aktywowano nowego użytkownika webowego ''%1''.'[_login])
            || __UPG.msg('Dodano nowego użytkownika webowego ''%1''.'[_login])
            ?}
         ?}
      ?};
      USERS.cntx_pop()
|| __UPG.msg('Nie udało się dodać użytkownika ''%1'' - czynności wypełniania ankiet nie zostanie z nim powiązana.'
         [_login]
   );
   _status:=0
   ?}
|| __UPG.msg('Użytkownik ''%1'' istnieje już w systemie.'[_login])
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_status


\pba_user_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.42]
:: OPIS: Dodanie użytkownika związanego z wypełnianiem ankiet w trybie anonimowym w webTermie - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja użytkowników związana z wypełnianiem ankiet w trybie anonimowym w webTermie'


\pba_role
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.42]
:: OPIS: Aktualizacja ról/uprawnień związana z wypełnianiem ankiet w trybie anonimowym w webTermie.
::----------------------------------------------------------------------------------------------------------------------
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_add:="
   _rola:=_a;
   _lista:=_b;
   _ok:=1;
   _uid:=spli_str(_lista,'.');
   {! _lp:=1 .. obj_len(_uid)
   |! {? exec('add_actrol_one','#b_role',_rola,_uid[_lp])
      || __UPG.msg('Roli ''%1'' nadano uprawnienia do czynności ''%2''.' [_rola,_uid[_lp]])
      || __UPG.msg('Nadanie roli ''%1'' uprawnień do czynności ''%2'' nie powiodło się.' [_rola,_uid[_lp]]);
         _ok:=0
      ?}
   !};
   _ok";
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Pracownik';
_ref:=exec('ref','#b_role',_rola);
{? _ref=null()
:: To nie jest nowa rola. Jeżeli została usunięta, to uszanujmy to i nie aktualizujmy jej.
|| __UPG.msg('Nie znaleziono roli ''%1'' - czynność wypełniania ankiet nie zostanie z nią powiązana.' [_rola])
|| {? ~_add(_rola,'PBA_POR_ANKI')
   || __UPG.msg('Nie udało się powiązać roli ''%1'' z czynnością wypełniania ankiet.' [_rola])
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Pracownik - wypełnianie ankiet';
_ref:=exec('ref','#b_role',_rola);
{? _ref<>null()
|| __UPG.msg('Rola ''%1'' już istnieje.' [_rola])
|? (_ref:=exec('ref','#b_role',_rola,,1))<>null()
|| __UPG.msg('Rola ''%1'' została utworzona.' [_rola])
?};

{? _ref=null()
|| __UPG.msg('Nie znaleziono roli ''%1'' - czynność wypełniania ankiet nie zostanie z nią powiązana.' [_rola])
|| {? ~_add(_rola,'PBA_POR_ANKI')
   || __UPG.msg('Nie udało się powiązać roli ''%1'' z czynnością wypełniania ankiet.' [_rola])
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_user:='ankieta';
USERS.cntx_psh();
USERS.index('WEBLOGIN');
USERS.prefix(_user);
{? USERS.first()
|| __UPG.msg('Aktywowano nowego użytkownika systemu ''%1''.'[_user]);
   B_USRROL.cntx_psh();
   B_USRROL.index('UNIK');
   B_USRROL.prefix(exec('ref_firma','ustawienia'),_ref,USERS.ref());
   {? ~B_USRROL.first()
   || B_USRROL.blank();
      B_USRROL.B_ROLE:=_ref;
      B_USRROL.FIRMA:=exec('ref_firma','ustawienia');
      B_USRROL.USERS:=USERS.ref();
      B_USRROL.STARTD:=date();
      B_USRROL.STARTT:=time();
      {? B_USRROL.add()
      || __UPG.msg('Nadano nowemu użytkownikowi systemu ''%1'' uprawnienia do wypełniania ankiet'[_user])
      || __UPG.msg('Nie udało się nadać nowemu użytkownikowi systemu ''%1'' uprawnień do wypełniania ankiet'[_user])
      ?}
   || __UPG.msg('Nadano nowemu użytkownikowi systemu ''%1'' uprawnienia do wypełniania ankiet'[_user])
   ?};
   B_USRROL.cntx_pop()
|| __UPG.msg('Nie udało się znaleźć użytkownika systemu ''%1''.'[_user])
?};
USERS.cntx_pop();
1


\pba_role_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.42]
:: OPIS: Aktualizacja ról/uprawnień związana z wypełnianiem ankiet w trybie anonimowym w webTermie.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja ról/użytkowników/uprawnień związana z wypełnianiem ankiet w trybie anonimowym w webTermie.'


\funpar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Aktualizacja obszaru Ustawienia i parametryzacja.
::----------------------------------------------------------------------------------------------------------------------
{? exec('aktualizuj','funpar',1)
|| __UPG.msg('Zaktualizowano zawartość obszaru: Ustawienia i parametryzacja.')
|| __UPG.msg('Nie zaktualizowano zawartości obszaru: Ustawienia i parametryzacja.')
?}


\funpar_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Aktualizacja obszaru Ustawienia i parametryzacja - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zawartości obszaru: Ustawienia i parametryzacja.'


\addr_cho
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Uzupełnienie tabeli addr_cho
::----------------------------------------------------------------------------------------------------------------------
_status:=1;
{? var_pres('ADDR_CHO')>100
||

   _names:='Kontrahenta.Odbiorcy kontrahenta.Miejsca dostawy.Posesji.Magazynu.Składowiska.Uzupełniony ręcznie';
   _codes:='KH,KH_ODB,KH_MSC,POS,MG,WYS,MANUAL';

   ADDR_CHO.cntx_psh();
   ADDR_CHO.prefix();

   {? ADDR_CHO.size()=0
   ||

      _names_tab:=spli_str(_names,'.');
      _codes_tab:=spli_str(_codes,',');
      _len:=obj_len(_names_tab);

      {! _i.._len
      |!
         ADDR_CHO.blank();
         ADDR_CHO.N:=_names_tab[_i];
         ADDR_CHO.K:=_codes_tab[_i];
         ADDR_CHO.add()
      !};

      {? ADDR_CHO.size()=_len
      ||
         __UPG.msg('Poprawnie uzupełniono table ADDR_CHO.')
      ||
         __UPG.msg('Nie udało się uzupełnić wszystkich rekordów w tabli ADDR_CHO.');
         _status:=0
      ?}

   ||
      __UPG.msg('Poprawnie uzupełniono table ADDR_CHO.')
   ?};

   ADDR_CHO.cntx_pop()
|| __UPG.msg('Nie udało się znaleźć tabeli ADDR_CHO.');
   _status:=0
?};
_status


\addr_cho_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Uzupełnienie tabeli addr_cho
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie tabeli związanej z wyborem przepisywania adresów.'


\areatitle
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.42]
:: OPIS: Inicjuje AreaTitle - obiekt do wyświetlania tytułów w obszarach roboczych
::----------------------------------------------------------------------------------------------------------------------
exec('init','areatitle');
__UPG.msg('Zainicjowano tytuły obszarów roboczych.');
1


\areatitle_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.42]
:: OPIS: Inicjuje AreaTitle - obiekt do wyświetlania tytułów w obszarach roboczych - opis
::----------------------------------------------------------------------------------------------------------------------
'Inicjuje AreaTitle - obiekt do wyświetlania tytułów obszarów roboczych'


\atrybuty_PPK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Definicje atrybutów nadpłaty PPK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
__RUB.fill();

exec('add_use','rubatr',7,7092,7093);
exec('add_attr','rubatr',7,74,'Kwota nadpłaty',1,'Składniki płacowe będące nadpłatą do PPK',,7092,7093);
exec('add_attr','rubatr',74,741,'Nadpłaty - zatrudniony',1,
   'Nadpłacone wpłaty do PPK ze środków zatrudnionego',,7092
);
exec('add_attr','rubatr',74,742,'Nadpłaty - firma',1,
   'Nadpłacone wpłaty do PPK ze środków podmiotu zatrudniającego',,7093
);
__UPG.msg('Zakończono aktualizację atrybutów dla składników z nadpłatą do PPK.');
1


\atrybuty_PPK_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Definicje atrybutów nadpłaty PPK - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Dodanie atrybutów nadpłaty PPK'


\atrybuty_sumujace
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Definicje atrybutów sumujących składniki płacowe.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
__RUB.fill();

exec('add_use','rubatr',3,7005,7017,7018,7071,7090,7091,7092);
exec('add_attr','rubatr',3,33,'Sumowane składniki płacowe',1,
   'Składniki płacowe sumowane na listach płac',,7005,7017,7018,7071,7090,7091,7092
);
exec('add_attr','rubatr',33,331,'Zasiłki ZUS razem z kodem większym niż 650',1,
   'Suma zasiłków wypłacanych przez ZUS z kodem składnika większym niż 650',,7017,7018,7071
);
exec('add_attr','rubatr',33,332,'Dodatki razem z kodem większym niż 740',1,
   'Suma dodatkowych składników płacowych z kodem większym niż 740'
);
exec('add_attr','rubatr',33,333,'Potrącenia razem z kodem większym niż 950',1,
   'Składniki płacowe wchodzące do sumy potrąceń z kodem większym niż 950',,7005,7090,7091
);
exec('add_attr','rubatr',33,334,'Składniki do netto z kodem większym niż 990',1,
   'Składniki płacowe do netto z kodem większym niż 990',,7092
);
__UPG.msg('Zakończono aktualizację atrybutów sumujących składniki płacowe.');
1


\atrybuty_sumujace_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Definicje atrybutów sumujących składniki płacowe - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Dodanie atrybutów sumujących składniki płacowe'


\form_skl_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Aktualizacja formuł płacowych składników sumujących na liście płac.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
_rs:='650,740,950,990';
_rn:=spli_str(_rs,',');
{! _ii:=1..obj_len(_rn)
|! {? __RUB.ref(#_rn[_ii])=null
   || __UPG.msg('Aktualizacja została wstrzymana. Wymagane istnienie rubryk: %1'[_rs]);
      return(-1)
   ?}
!};
_tp:=spli_str('U,F,D,R,%1'[%255],',');
_err:=exec('formuly_import','rubryki',_tp,_rn,'formuly_sum','upgrade_1942');

{? _err.TAB.first()
|| {!
   |? __UPG.msg(_err.TAB.MSG);
      _err.TAB.next()
   !}
?};

{? _err.counter>0
|| __UPG.msg('Podczas aktualizacji formuł wystąpiło %1 błędów.'[$_err.counter]);
   -1
|| 1
?}


\form_skl_sum_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Aktualizacja formuł płacowych składników sumujących na liście płac - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja formuł płacowych składników sumujących na liście płac'


\formuly_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zwraca treść formuły płacowej.
::   WE: _a [STRING] - Typ formuły.
::       _b [INTEGER] - Numer rubryki.
::   WY: Treść formuły.
::----------------------------------------------------------------------------------------------------------------------
_tp:=_a;
_rn:=_b;

{? _tp='R'
|| {? _rn=650
   ||
"FUNKCJE.Z(510,649)+FUNKCJE.Z_SYS(331)"
   |? _rn=740
   ||
"FUNKCJE.Z(650,739)+FUNKCJE.Z_SYS(332)"
   |? _rn=950
   ||
"exec('potracenie_komornik','lista_licz',0);
FUNKCJE.Z(765,767)+FUNKCJE.Z(789)+FUNKCJE.Z(792)+FUNKCJE.Z(797,799)+FUNKCJE.Z(801,948)+FUNKCJE.Z_SYS(333)"
   |? _rn=990
   ||
"{? var_pres('KST_PPK')=type_of(SYSLOG) & ~FUNKCJE.Z_SYS(741) || exec('del_O_RH','ppk_kwn',P.ref,O.ref,RH.ref,'Z') ?};
FUNKCJE.Z(500)+FUNKCJE.Z(740)-FUNKCJE.Z(950)+FUNKCJE.Z_SYS(334)"
   ||
""
   ?}
|| {? _rn=650
   ||
"FUNKCJE.L(510,649)+FUNKCJE.L_SYS(331)"
   |? _rn=740
   ||
"FUNKCJE.L(650,739)+FUNKCJE.L_SYS(332)"
   |? _rn=950
   ||
"exec('potracenie_komornik','lista_licz',1);
FUNKCJE.L(765,767)+FUNKCJE.L(789)+FUNKCJE.L(792)+FUNKCJE.L(797,799)+FUNKCJE.L(801,948)+FUNKCJE.L_SYS(333)"
   |? _rn=990
   ||
"{? var_pres('KST_PPK')=type_of(SYSLOG) & ~FUNKCJE.L_SYS(741) || exec('del_O_RH','ppk_kwn',P.ref,O.ref,,'Z') ?};
DoList.x:=FUNKCJE.L(500)+FUNKCJE.L(740)+FUNKCJE.L(747)-FUNKCJE.L(950)+FUNKCJE.L_SYS(334);
DoList.m[1]:=DoList.x"
   ||
""
   ?}
?}


\rem_zas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Aktualizacja pól tabeli REM_ZAS
::----------------------------------------------------------------------------------------------------------------------

VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_result:=REM_ZAS.for_each("
   __lrec+=1;
   _put:=0;
   {? REM_ZAS.AKT=''
   || REM_ZAS.AKT:='T';
      _put:=1
   ?};
   {? _put>0
   || {? REM_ZAS.put()
      || __lmod+=1
      ?}
   ?};
   exec('rem_zas_status','zasoby',REM_ZAS.ref)
",1);
{? _result
|| __UPG.msg('Zaktualizowano nowe pola zasobów remontowych.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
|| __UPG.msg('Wystąpił błąd podczas aktualizacji nowych pól zasobów remontowych.')
?};
_result


\rem_zas_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Aktualizacja pól tabeli REM_ZAS - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tabeli zasobów remontowych.'


\zlgd_kj_need
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Aktualizacja danych pola KJ_NEED tabeli ZLGD.
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
ZLGD.trig_off('*', '*');
_msk:=ZLGD.names();
_msk.clear();
{? _msk.first()
||
   {!
   |? ZLGD.cntx_psh();
      ZLGD.use(_msk.NAME);
      ZLGD.prefix();
      ZLGD.for_each("
         {? ZLGD.ZGP().KJ_BAD<>'N'
         || ZLGD.KJ_NEED:='T'
         || ZLGD.KJ_NEED:='N'
         ?};
         ZLGD.put()
      ",1);
      ZLGD.cntx_pop();
      _msk.next()
   !}
?};
ZLGD.trig_on('*', '*');
__UPG.msg('Zaktualizowano nowe pola tabeli ZLGD (godziny na zleceniach).');
_result


\zlgd_kj_need_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Aktualizacja danych pola KJ_NEED tabeli ZLGD - opis
::----------------------------------------------------------------------------------------------------------------------
'Zaktualizowanie danych tabeli ZLGD (godziny na zleceniach).'


\nowe_skladniki_listy_plac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zdefiniowanie nowych składników płacowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_txt:='';
exec('__RUB','object');
__RUB.fill();

:: Składniki okresowe.
:: Definicja rubryk.
{? +exec('import','rubryki','g','7100,7101,7102',1,0)
|| _txt:='Dodanie składników płacowych dla premii okresowych zakończyło się niepowodzeniem.';
   _result:=-1
|| _txt:='Dodanie składników płacowych dla premii okresowych zakończone powodzeniem.'
?};
__UPG.msg(_txt);

:: Zaległe definicje atrybutów z poprawki ER/WRT/XP/12.41/1611/0035 z \kali_46/napraw_p.fml
:: Użycia dodatku za przekroczenia średniotygodniowe rozliczane jako premie okresowe
exec('add_attr','rubatr',4,49,'Premie',1,'',,7006,7055,7053,7059,7041,7051);
exec('add_attr','rubatr',49,491,'Premie okresowe',1,'',,7006,7055,7053,7059,7041,7051);
exec('add_attr','rubatr',491,4911,'Premie okresowe automatycznie zakładane',1,'',,7006,7055,7053,7059,7041,7051);

:: Definicja atrybutów.
exec('add_use','rubatr',4,7100,7101,7102);
exec('add_use','rubatr',48,7100,7101,7102);
exec('add_use','rubatr',49,7100,7101,7102);
exec('add_use','rubatr',491,7100,7101,7102);
exec('add_attr','rubatr',491,4912,'Przyznawane premie okresowe',1,'Przyznawane premie okresowe',,7100,7101,7102);
:: Składniki okresowe do raportów GUS.
exec('add_use','rubatr',6,7100,7101,7102);
exec('add_use','rubatr',63,7100,7101,7102);
exec('add_use','rubatr',631,7100,7101,7102);
exec('add_use','rubatr',6311,7100,7101,7102);
exec('add_use','rubatr',63111,7102);
exec('add_use','rubatr',63112,7101);
exec('add_use','rubatr',63113,7100);
__UPG.msg('Zakończono aktualizację atrybutów dla premii okresowych.');

:: Składniki ZFŚS.
:: Definicja rubryk.
{? +exec('import','rubryki','g','7103,7104,7105,7106,7107',1,0)
|| _txt:='Dodanie składników płacowych dla ZFŚS zakończyło się niepowodzeniem';
   _result:=-1
|| _txt:='Dodanie składników płacowych dla ZFŚS zakończone powodzeniem.'
?};
__UPG.msg(_txt);

:: Definicja atrybutów.
exec('add_use','rubatr',3,7103,7104);
exec('add_use','rubatr',33,7103,7104);
exec('add_use','rubatr',332,7103,7104);
:: Składniki ZFŚS do raportów GUS.
exec('add_use','rubatr',6335,7103,7104,7105,7106,7107);
__UPG.msg('Zakończono aktualizację atrybutów dla składników świadczeń ZFŚS.');

:: Blokada modyfikacji rubryk systemowych.
R.cntx_psh();
R.for_each(
   "  {? R.RN>=7000 & R.SYSTEM='N'
      || R.SYSTEM:='T';
         R.put(1)
      ?}
   "
);
R.cntx_pop();

_result


\nowe_skladniki_listy_plac_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zdefiniowanie nowych składników płacowych - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Zdefiniowanie nowych składników płacowych.'


\premie_okresowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zdefiniowanie premii w tabeli składników okresowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_txt:='';
_firma:=exec('ref_firma','ustawienia');
_rodz:=spli_str('M,K,R',',');
_skl:=7100;

R.cntx_psh();
R.index('RUBKOD');
R.prefix();
PAR_POKR.cntx_psh();
PAR_POKR.index('PAR_POKR');
PAR_POKR.prefix(_firma);
{! _ii:=1 .. obj_len(_rodz)
|! {? R.find_key(_skl)
   || {? PAR_POKR.find_tab(1,'FIRMA',,'=',_firma,'RP',,'=',_rodz[_ii])
      || _txt:=
            'Zdefiniowanie premii okresowej typu "%1" obsługiwanej składnikiem "%2 - %3" nie jest możliwe. '
            'Premia jest już obsługiwana składnikiem "%4 - %5".'
            [_rodz[_ii],$R.RN,R.RT,$PAR_POKR.R().RN,R.RT];
         _result:=-1
      || PAR_POKR.blank(1);
         PAR_POKR.R:=R.ref();
         PAR_POKR.RP:=_rodz[_ii];
         PAR_POKR.RZ:='T';
         PAR_POKR.KZ:='W';
         PAR_POKR.DZ_12:={? _rodz[_ii]='M' || 'N' || 'T' ?};
         PAR_POKR.PTZO:='N';
         PAR_POKR.CZY_FM:='N';
         PAR_POKR.CZY_PKN:='N';
         PAR_POKR.FIRMA:=_firma;
         {? PAR_POKR.add(1)
         || _txt:=
               'Zdefiniowanie premii okresowej typu "%1" obsługiwanej składnikiem "%2 - %3" zakończyło się sukcesem.'
               [_rodz[_ii],$R.RN,R.RT]
         || _txt:=
               'Zdefiniowanie premii okresowej typu "%1" obsługiwanej składnikiem "%2 - %3" nie powiodło się.'
               [_rodz[_ii],$R.RN,R.RT];
            _result:=-1
         ?}
      ?}
   || _txt:='Brak składnika płacowego o numerze %1.'@[$_skl]
   ?};
   __UPG.msg(_txt);
   _skl+=1
!};
PAR_POKR.cntx_pop();
R.cntx_pop();

_result


\premie_okresowe_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zdefiniowanie premii w tabeli składników okresowych - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Definicja premii okresowych.'


\new_form_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Dodanie formuł obliczeniowych dla nowych składników płacowych:
::       - świadczenia ZFŚS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
__RUB.fill();
_rs:='152,7103,7104,7105,7106,7107';
_rn:=spli_str(_rs,',');
{! _ii:=1..obj_len(_rn)
|! {? __RUB.ref(#_rn[_ii])=null
   || __UPG.msg('Aktualizacja została wstrzymana. Wymagane istnienie rubryk: %1'[_rs]);
      return(-1)
   ?}
!};
_tp:=spli_str('U,F,D,%1'[%255],',');
_err:=exec('formuly_import','rubryki',_tp,_rn,'formuly_new','upgrade_1942');

{? _err.TAB.first()
|| {!
   |? __UPG.msg(_err.TAB.MSG);
      _err.TAB.next()
   !}
?};

{? _err.counter>0
|| __UPG.msg('Podczas aktualizacji formuł wystąpiło %1 błędów.'[$_err.counter]);
   -1
|| 1
?}


\new_form_skl_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Dodanie formuł obliczeniowych dla nowych składników płacowych - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Dodanie formuł obliczeniowych dla nowych składników płacowych'


\formuly_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Zwraca treść formuły płacowej.
::   WE: _a [STRING] - Typ formuły.
::       _b [INTEGER] - Numer rubryki.
::   WY: Treść formuły.
::----------------------------------------------------------------------------------------------------------------------
_tp:=_a;
_rn:=_b;

{? _rn=152
||
"exec('nagroda_jubileuszowa','!ppl_pll_nals')"
|? _rn=7103 & _tp<>'D'
||
"exec('kwota_isplac','!ppl_pll_nals',7103)"
|? _rn=7104 & _tp<>'D'
||
"exec('kwota_isplac','!ppl_pll_nals',7104)"
|? _rn=7105 & _tp<>'D'
||
"exec('kwota_isplac','!ppl_pll_nals',7105)"
|? _rn=7106 & _tp<>'D'
||
"exec('kwota_isplac','!ppl_pll_nals',7106)"
|? _rn=7107 & _tp<>'D'
||
"exec('kwota_isplac','!ppl_pll_nals',7107)"
||
""
?}


\stalesys_ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Aktualizacja stałych systemu
::----------------------------------------------------------------------------------------------------------------------
exec('init_wer','#stalesys');
__UPG.msg('Zaktualizowano stałe systemu.');
1


\stalesys_ini_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Aktualizacja stałych systemu - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja stałych systemu'


\tte_pzl_eotw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Formuła dodaje czynność TTE_PZL_EOTW do odpowiednich ról
::----------------------------------------------------------------------------------------------------------------------
_cr:=''+"'TTE_PZL_EZAM'";
_uid:='TTE_PZL_EOTW';

_ROLE:=sql(
   'select distinct B_ROLE.NAME '
   'from B_ACTROL join B_ACTION using (B_ACTROL.B_ACTION,B_ACTION.REFERENCE) '
                 'join B_ROLE using (B_ACTROL.B_ROLE,B_ROLE.REFERENCE) '
   'where B_ACTROL.FIRMA=:_a and B_ACTION.UID in (:_b) '
   'order by 1',
   exec('ref_firma','ustawienia'),_cr
);

{? type_of(_ROLE)=type_of(~~)
|| __UPG.msg('Przygotowanie listy ról, do których należy dodać czynność %1 nie powiodło się.' [_uid]);
   return(0)
?};

{? _ROLE.first()
|| _ret:=1;
   {!
   |? {? exec('add_actrol_one','#b_role',_ROLE.NAME,_uid)
      || __UPG.msg('Czynność %1 przypisano do roli "%2".'[_uid,_ROLE.NAME])
      || __UPG.msg('Przypisanie czynności %1 do roli "%2" nie powiodło się.'[_uid,_ROLE.NAME]);
         _ret:=-1
      ?};
      _ROLE.next()
   !};
   _ret
|| __UPG.msg('W firmie %1 brak ról z uprawnieniami do czynności %2.'[REF.FIRMA().SYMBOL,_cr]);
   1
?}


\tte_pzl_eotw_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Formuła dodaje czynność TTE_PZL_EOTW do odpowiednich ról - opis.
::----------------------------------------------------------------------------------------------------------------------
'Przypisanie czynności "TTE_PZL_EOTW - Awaryjne otwarcie zlecenia" do odpowiednich ról'


\f_zatra_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Nadanie czynnościom uprawnień do form współpracy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;

B_ACTION.cntx_psh();
B_ACTION.f_clear();
B_ACTION.index('UNIK');
B_ACTION.prefix();

_lista:=spli_str('PED_EZK_PEDP,PED_EZK_REDP',',');
_lista2:=spli_str('PRC_CZP_DNAD',',');
_fz_list:=spli_str('K,P,R,T,Z',',');
_len:=obj_len(_lista)+obj_len(_lista2)+obj_len(_fz_list);

FUN.prg_start(_len,'Nadawanie czynnościom uprawnień do form współpracy.'@,,,1);

:: Dokumentacja pracownicza.
{! _lp:=1 .. obj_len(_lista)
|! FUN.prg_next();
   _uid:=_lista[_lp];
   _name:={? B_ACTION.find_key(_uid,) || B_ACTION.NAME || '???' ?};
   __UPG.msg('Forma współpracy: P | Czynność: %1 - %2' [_uid,_name]);
   _add:=exec('f_zatra_add','f_zatr','T','P',_uid);
   {? _add=''
   || __UPG.msg(' - uprawnienia nadane')
   || __UPG.msg(_add);
      _ret:=0
   ?}
!};

:: Wnioski o nadgodziny
{! _lp:=1 .. obj_len(_lista2)
|! FUN.prg_next();
   _uid:=_lista2[_lp];
   _name:={? B_ACTION.find_key(_uid,) || B_ACTION.NAME || '???' ?};

:: dla form współpracy
   {! _lp_fz:=1 .. obj_len(_fz_list)
   |! FUN.prg_next();
      _fz:=_fz_list[_lp_fz];
      __UPG.msg('Forma współpracy: %1 | Czynność: %2 - %3' [_fz,_uid,_name]);
      _add:=exec('f_zatra_add','f_zatr','T',_fz,_uid);
      {? _add=''
      || __UPG.msg(' - uprawnienia nadane')
      || __UPG.msg(_add)
      ?}
   !}
!};

FUN.prg_stop();

B_ACTION.cntx_pop();

_ret


\f_zatra_add_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Nadanie czynnościom uprawnień do form współpracy - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Nadanie czynnościom uprawnień do form współpracy'


\akt_1922_08
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: Uaktualnienie pól tabeli KHCHKNIP
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('UpdFld');
UpdFld:=0;
KHCHKNIP.prefix();
KHCHKNIP.for_each("
   {? KHCHKNIP.D_ACTIVE=date(0,0,0)
   || KHCHKNIP.D_ACTIVE:=KHCHKNIP.DATE;
      KHCHKNIP.put();
      UpdFld:=1
   ?}
");
{? UpdFld
|| __UPG.msg('Uaktualniono wymagane pola.')
|| __UPG.msg('Uaktualnienie pól nie było wymagane.')
?};
VAR_DEL.delete('UpdFld');
1


\akt_1922_08_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: Uaktualnienie pól tabeli KHCHKNIP
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja 19.22_08 - Sprawdzenie aktywności podatników VAT za pomocą API wykazu podatników VAT.\n'
'Uaktualnienie pól w histiorii sprawdzeń aktywności podatników VAT.'


\param_nagrodajubileuszowa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Parametryzacja do nagrody jubileuszowej.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_txt:='';

:: Definicja słownika do wskazania pracowników, którym należy wypłacać nagrodę jubileuszową.
SLO_TYP.cntx_psh();
SLO_KOD.cntx_psh();
{? exec('kod_ref','ext_slo','GRUPPRAC','NAG_JUB','Pracownicy do nagrody jubileuszowej')<>null()
|| _result:=1;
   _txt:='Dodano nowy słownik grupy pracowników do nagrody jubileuszowej'
|| _result:=-1;
   _txt:='Nie dodano nowego słownika grupy pracowników do nagrody jubileuszowej'
?};
SLO_KOD.cntx_pop();
SLO_TYP.cntx_pop();
__UPG.msg(_txt);

_result


\param_nagrodajubileuszowa_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Parametryzacja do nagrody jubileuszowej - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Parametryzacja do nagrody jubileuszowej'


\progi_nagrodajubileuszowa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Progi stażu do nagrody jubileuszowej (dla służby cywilnej).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_txt:='';
_choice:=
   FUN.choice(
      'Uzupełnienie definicji progów stażu do nagrody jubileuszowej.'@,0,
      'Służba cywilna'@,
      'Nauczyciele'@,
      'Nie &uzupełniaj'@
   );
{? _choice=0
|| __UPG.msg('Odłożono aktualizację progów stażu do nagrody jubileuszowej.');
   return(-1)
|? _choice=3
|| __UPG.msg('Wykonano aktualizację bez uzupełniania słownika progów stażu do nagrody jubileuszowej.');
   return(1)
?};

PAR_NJUB.cntx_psh();
PAR_NJUB.prefix();
{? ~PAR_NJUB.first()
|| _level:=
      {? _choice=1
      || spli_str('20,75,25,100,30,150,35,200,40,300,45,400',',')
      || spli_str('20,75,25,100,30,150,35,200,40,250',',')
      ?};
   _lsize:=obj_len(_level);

:: Uzupełnie tabeli progów stażu do nagrody jubileuszowej na podstwie danych z tablicy.
   {! _ii:=1 .. _lsize
   |! {? _ii%*2=0
      || PAR_NJUB.PROC:=#_level[_ii];
         PAR_NJUB.add()
      || PAR_NJUB.STAZ:=#_level[_ii]
      ?}
   !};
   _size:=PAR_NJUB.size();
   {? _size=(_lsize/2#0)
   || _txt:='Uzupełniono progi stażu do nagrody jubileuszowej.'
   || _txt:='Uzupełniono %1 z %2 progów stażu do nagrody jubileuszowej.'[$_size,$(_lsize/2#0)]
   ?};
   _txt+=' (%1)'[{? _choice=1 || 'służba cywilna' || 'nauczyciele' ?}]
|| _txt:='Nie uzupełniono progów stażu do nagrody jubileuszowej ponieważ tabela nie jest pusta.'
?};
PAR_NJUB.cntx_pop();

__UPG.msg(_txt);
_result


\progi_nagrodajubileuszowa_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Progi stażu do nagrody jubileuszowej - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Progi stażu do nagrody jubileuszowej'


\slo_kod_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS
:: OPIS: Utworzenie nowego kodu systemowego w słowniku SLO_KOD
::----------------------------------------------------------------------------------------------------------------------
_naz:='Logo firmy';
_kod:='logo';
_put:=0;
_txt:='Nie udało się utworzyć kodu "%1" w tabeli SLO_KOD.'[_kod];
_typ:=exec('slo_typ','ext_slo','TYPBLOBF');
_kodZm:='';
{? exec('kod_ref','ext_slo',_typ,_kod,_naz,1)<>null()
:: Znaleziono taki kod. Sprawdzam nazwę i systemowość:
|| {? SLO_KOD.NAZWA<>_naz || SLO_KOD.NAZWA:=_naz; _put:=1 ?};
   {? SLO_KOD.SYSTEM<>'T' || SLO_KOD.SYSTEM:='T'; _put:=1 ?};
   {? _put || SLO_KOD.put(); _txt:='Poprawiono' || _txt:='Utworzono' ?};
   __UPG.msg('%1 kod "%2" w tabeli SLO_KOD.'[_txt,_kod])
:: Nie znaleziono takiego kodu i nie udało się utworzyć. Szukam kodu o takiej nazwie.
|| SLO_KOD.cntx_psh();
   SLO_KOD.index('NAZWA');
   SLO_KOD.prefix(_typ,);
   {? SLO_KOD.find_key(_naz,_naz)
:: Zmieniam nazwę znalezionego kodu, żebym mógł utworzyć właściwy:
   || SLO_KOD.NAZWA:=SLO_KOD.NAZWA+' a';
      _kodZm:=SLO_KOD.KOD;
      SLO_KOD.put();
::    Ponownie próbuję utworzyć odpowiedni kod:
      {? exec('kod_ref','ext_slo',_typ,_kod,_naz,1)<>null()
      || _txt:='Zmieniono nazwę kodu %1. Utworzono kod "%2" w tabeli SLO_KOD.'[_kodZm,_kod];
         __UPG.msg(_txt);
         SLO_KOD.cntx_pop();
         return(1)
      || __UPG.msg(_txt);
         SLO_KOD.cntx_pop();
         return(-1)
      ?}
   || __UPG.msg(_txt);
      SLO_KOD.cntx_pop();
      return(-1)
   ?};
   SLO_KOD.cntx_pop()
?};
1


\slo_kod_add_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS
:: OPIS: Utworzenie nowego kodu systemowego w słowniku SLO_KOD - opis
::----------------------------------------------------------------------------------------------------------------------
'Nowy kod znaku graficznego firm - "logo"'


\pd_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Aktualizacja pól tabeli PD_K
::----------------------------------------------------------------------------------------------------------------------
_result:=PD_K.for_each("
   PD_K.CZY_ZL:='N';
   {? PD_K.CZY_ZAM='T'
   || PD_K.ILP:=0
   || PD_K.ILP:=PD_K.IL
   ?};
   PD_K.put()
",1);
{? _result
|| __UPG.msg('Zaktualizowano nowe pola koszyku planu dostaw.')
|| __UPG.msg('Wystąpił błąd podczas aktualizacji nowych pól koszyku planu dostaw.')
?};
_result


\pd_k_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [19.42]
:: OPIS: Aktualizacja pól tabeli PD_K - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tabeli koszyku planu dostaw.'


\lmg_mag_ewmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Formuła dodaje czynność LMG_MAG_EWMG do odpowiednich ról
::----------------------------------------------------------------------------------------------------------------------
_cr:=''+"'LMG_MAG_EAMG'";
_uid:='LMG_MAG_EWMG';

_ROLE:=sql(
   'select distinct B_ROLE.NAME '
   'from B_ACTROL join B_ACTION using (B_ACTROL.B_ACTION,B_ACTION.REFERENCE) '
                 'join B_ROLE using (B_ACTROL.B_ROLE,B_ROLE.REFERENCE) '
   'where B_ACTROL.FIRMA=:_a and B_ACTION.UID in (:_b) '
   'order by 1',
   exec('ref_firma','ustawienia'),_cr
);

{? type_of(_ROLE)=type_of(~~)
|| __UPG.msg('Przygotowanie listy ról, do których należy dodać czynność %1 nie powiodło się.' [_uid]);
   return(0)
?};

{? _ROLE.first()
|| _ret:=1;
   {!
   |? {? exec('add_actrol_one','#b_role',_ROLE.NAME,_uid)
      || __UPG.msg('Czynność %1 przypisano do roli "%2".'[_uid,_ROLE.NAME])
      || __UPG.msg('Przypisanie czynności %1 do roli "%2" nie powiodło się.'[_uid,_ROLE.NAME]);
         _ret:=-1
      ?};
      _ROLE.next()
   !};
   _ret
|| __UPG.msg('W firmie %1 brak ról z uprawnieniami do czynności %2.'[REF.FIRMA().SYMBOL,_cr]);
   1
?}


\lmg_mag_ewmg_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Formuła dodaje czynność LMG_MAG_EWMG do odpowiednich ról - opis.
::----------------------------------------------------------------------------------------------------------------------
'Przypisanie czynności "LMG_MAG_EWMG - Wycofanie dokumentu magaznowego" do odpowiednich ról'


\lsp_fak_ewsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Formuła dodaje czynność LSP_FAK_EWSP do odpowiednich ról
::----------------------------------------------------------------------------------------------------------------------
_cr:=''+"'LSP_FAK_EASP'";
_uid:='LSP_FAK_EWSP';

_ROLE:=sql(
   'select distinct B_ROLE.NAME '
   'from B_ACTROL join B_ACTION using (B_ACTROL.B_ACTION,B_ACTION.REFERENCE) '
                 'join B_ROLE using (B_ACTROL.B_ROLE,B_ROLE.REFERENCE) '
   'where B_ACTROL.FIRMA=:_a and B_ACTION.UID in (:_b) '
   'order by 1',
   exec('ref_firma','ustawienia'),_cr
);

{? type_of(_ROLE)=type_of(~~)
|| __UPG.msg('Przygotowanie listy ról, do których należy dodać czynność %1 nie powiodło się.' [_uid]);
   return(0)
?};

{? _ROLE.first()
|| _ret:=1;
   {!
   |? {? exec('add_actrol_one','#b_role',_ROLE.NAME,_uid)
      || __UPG.msg('Czynność %1 przypisano do roli "%2".'[_uid,_ROLE.NAME])
      || __UPG.msg('Przypisanie czynności %1 do roli "%2" nie powiodło się.'[_uid,_ROLE.NAME]);
         _ret:=-1
      ?};
      _ROLE.next()
   !};
   _ret
|| __UPG.msg('W firmie %1 brak ról z uprawnieniami do czynności %2.'[REF.FIRMA().SYMBOL,_cr]);
   1
?}


\lsp_fak_ewsp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Formuła dodaje czynność LSP_FAK_EWSP do odpowiednich ról - opis.
::----------------------------------------------------------------------------------------------------------------------
'Przypisanie czynności "LSP_FAK_EWSP - Wycofanie dokumentu sprzedaży" do odpowiednich ról'


\lzk_zak_ewzk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Formuła dodaje czynność LZK_ZAK_EWZK do odpowiednich ról
::----------------------------------------------------------------------------------------------------------------------
_cr:=''+"'LZK_ZAK_EZAK'";
_uid:='LZK_ZAK_EWZK';

_ROLE:=sql(
   'select distinct B_ROLE.NAME '
   'from B_ACTROL join B_ACTION using (B_ACTROL.B_ACTION,B_ACTION.REFERENCE) '
                 'join B_ROLE using (B_ACTROL.B_ROLE,B_ROLE.REFERENCE) '
   'where B_ACTROL.FIRMA=:_a and B_ACTION.UID in (:_b) '
   'order by 1',
   exec('ref_firma','ustawienia'),_cr
);

{? type_of(_ROLE)=type_of(~~)
|| __UPG.msg('Przygotowanie listy ról, do których należy dodać czynność %1 nie powiodło się.' [_uid]);
   return(0)
?};

{? _ROLE.first()
|| _ret:=1;
   {!
   |? {? exec('add_actrol_one','#b_role',_ROLE.NAME,_uid)
      || __UPG.msg('Czynność %1 przypisano do roli "%2".'[_uid,_ROLE.NAME])
      || __UPG.msg('Przypisanie czynności %1 do roli "%2" nie powiodło się.'[_uid,_ROLE.NAME]);
         _ret:=-1
      ?};
      _ROLE.next()
   !};
   _ret
|| __UPG.msg('W firmie %1 brak ról z uprawnieniami do czynności %2.'[REF.FIRMA().SYMBOL,_cr]);
   1
?}


\lzk_zak_ewzk_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Formuła dodaje czynność LZK_ZAK_EWZK do odpowiednich ról - opis.
::----------------------------------------------------------------------------------------------------------------------
'Przypisanie czynności "LZK_ZAK_EWZK - Wycofanie dokumentu zakupu" do odpowiednich ról'


\aktualizacja_PPK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Aktualizacja parametryzacji do PPK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

:: Uzupełnienie słownika instytucji finansowych.
_info:=exec('import_if','ppk');
{? +_info
|| __UPG.msg(_info)
?};

:: Dodanie historii wartości pola związanego z kolejnością ustalania adresu e-mail do powiadomień.
exec('add_acr','#stalesys','PPKEMAIL','E-mail do powiadomień','T','T','T','KST_PPK','PPK');
exec('kst_war_add','#stalesys','KST_PPK.PPKEMAIL','\'S\'',date(2019,7,1));
_info:='Wykonano aktualizację historii stałych systemu dla kolejności ustalania adresu e-mail do powiadomień.';
__UPG.msg(_info);

_result


\aktualizacja_PPK_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Aktualizacja parametryzacji do PPK - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja parametryzacji do PPK'


\tzl_ppl_ppk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Utworzenie opisu typu płatności "PPL: PPK".
::   WE:
::   WY: 0/1 - sukces/porażka
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
_kod:='PPL: PPK';

TZL.cntx_psh();
TZL.index('KOD');
TZL.prefix();
_txt:=
   {? TZL.find_key(_kod,)
   || 'Opis typu płatności "%1" istnieje.'[_kod]
   || TZL.KOD:=_kod;
      TZL.OPIS:='Przelewy wpłat na PPK';
      {? ~TZL.add(1)
      || _ret:=0;
         'Utworzenie opisu typu płatności "%1" nie powiodło się.'[_kod]
      || 'Utworzono opis typu płatnści "%1".'[_kod]
      ?}
   ?};
TZL.cntx_pop();

__UPG.msg(_txt);
_ret


\tzl_ppl_ppk_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.42]
:: OPIS: Utworzenie opisu typu płatności "PPL: PPK" - opis.
::   WE:
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Utworzenie opisu typu płatności "PPL: PPK"'


\sch_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: Importuje "personelowe" wnioski w obiegu dot. grafików
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_msg:="
{? _a
|| __UPG.msg('Zakończono import wniosku: \"%1\".'@[_b])
|| __UPG.msg('Nie udało się zaimportować wniosku: \"%1\".'@[_b])
?}
";

_result:=1;
_typobieg:=exec('add','typ_ob','Obieg wniosków');
_nazwa:=exec('nazwa_nadg_w','obiegi');
{? exec('renameETYPY','sch_imp',_typobieg,_nazwa)<1
|| __UPG.msg('Nie udało się zmienić nazwy wniosku: \"%1\".'@[_nazwa]);
   _result:=-1
|| _msg(exec('imp_wn','sch_imp',_nazwa,1,0),_nazwa)
?};
_nazwa:=exec('nazwa_nadg_p','obiegi');
{? exec('renameETYPY','sch_imp',_typobieg,_nazwa)<1
|| __UPG.msg('Nie udało się zmienić nazwy wniosku: \"%1\".'@[_nazwa]);
   _result:=-1
|| _msg(exec('imp_wn','sch_imp',_nazwa,1,0),_nazwa)
?};
_nazwa:=exec('nazwa_opif','obiegi');
{? exec('renameETYPY','sch_imp',_typobieg,_nazwa)<1
|| __UPG.msg('Nie udało się zmienić nazwy wniosku: \"%1\".'@[_nazwa]);
   _result:=-1
|| _msg(exec('imp_wn','sch_imp',_nazwa,1,0),_nazwa)
?};
_result


\sch_imp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: Importuje "personelowe" wnioski w obiegu dot. grafików - opis
::----------------------------------------------------------------------------------------------------------------------
'Import wniosków w obiegu dot. grafików'


\role_personel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: Aktualizacja ról/uprawnień związana z czynnościami personelowymi.
::----------------------------------------------------------------------------------------------------------------------
_status:=1;
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_add:="
   _rola:=_a;
   _lista:=_b;
   _ok:=1;
   _uid:=spli_str(_lista,'.');
   {! _lp:=1 .. obj_len(_uid)
   |! {? exec('add_actrol_one','#b_role',_rola,_uid[_lp])
      || __UPG.msg('Roli ''%1'' nadano uprawnienia do czynności ''%2''.' [_rola,_uid[_lp]])
      || __UPG.msg('Nadanie roli ''%1'' uprawnień do czynności ''%2'' nie powiodło się.' [_rola,_uid[_lp]]);
         _ok:=0
      ?}
   !};
   _ok";
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_act:='ZWS_PAR_PNJU';
_rola:='Administrator';
_ref:=exec('ref','#b_role',_rola);
{? _ref=null()
:: To nie jest nowa rola. Jeżeli została usunięta, to uszanujmy to i nie aktualizujmy jej.
|| __UPG.msg('Nie znaleziono roli ''%1'' - czynność ''%2'' nie zostanie z nią powiązana.' [_rola,_act]);
   _status:=-1
|| {? ~_add(_rola,_act)
   || _status:=-1
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_act:='PRC_CZP_DNAD';
_rola:='Specjalista ds. rozliczania czasu pracy';
_ref:=exec('ref','#b_role',_rola);
{? _ref=null()
:: To nie jest nowa rola. Jeżeli została usunięta, to uszanujmy to i nie aktualizujmy jej.
|| __UPG.msg('Nie znaleziono roli ''%1'' - czynność ''%2'' nie zostanie z nią powiązana.' [_rola,_act]);
   _status:=-1
|| {? ~_add(_rola,_act)
   || _status:=-1
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Specjalista ds. kadr';
_ref:=exec('ref','#b_role',_rola);
{? _ref=null()
:: To nie jest nowa rola. Jeżeli została usunięta, to uszanujmy to i nie aktualizujmy jej.
|| __UPG.msg('Nie znaleziono roli ''%1'' - nowe czynności nie zostaną z nią powiązane.' [_rola]);
   _status:=-1
|| {? ~_add(_rola,'PED_EZK_PEDP.PED_EZK_REDP.PED_GRP_AIDP.PKD_ZES_ZECP.PKD_ZES_ZNWU')
   || _status:=-1
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Specjalista ds. płac';
_ref:=exec('ref','#b_role',_rola);
{? _ref=null()
:: To nie jest nowa rola. Jeżeli została usunięta, to uszanujmy to i nie aktualizujmy jej.
|| __UPG.msg('Nie znaleziono roli ''%1'' - nowe czynności nie zostaną z nią powiązane.' [_rola]);
   _status:=-1
|| {? ~_add(_rola,'PPL_PLL_RUME.PKD_EZK_PPZA.PPL_ZDR_ZP11')
   || _status:=-1
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Przeglądający Płace';
_ref:=exec('ref','#b_role',_rola);
{? _ref=null()
:: To nie jest nowa rola. Jeżeli została usunięta, to uszanujmy to i nie aktualizujmy jej.
|| __UPG.msg('Nie znaleziono roli ''%1'' - nowe czynności nie zostaną z nią powiązane.' [_rola]);
   _status:=-1
|| {? ~_add(_rola,'PPL_PLL_PUME.PKD_EZK_PPZA')
   || _status:=-1
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Dyrektor HR';
_ref:=exec('ref','#b_role',_rola);
{? _ref=null()
:: To nie jest nowa rola. Jeżeli została usunięta, to uszanujmy to i nie aktualizujmy jej.
|| __UPG.msg('Nie znaleziono roli ''%1'' - nowe czynności nie zostaną z nią powiązane.' [_rola]);
   _status:=-1
|| {? ~_add(_rola,'PPL_ZDR_ZP11')
   || _status:=-1
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Specjallista ds. zleceniobiorców';
_ref:=exec('ref','#b_role',_rola);
{? _ref=null()
:: To nie jest nowa rola. Jeżeli została usunięta, to uszanujmy to i nie aktualizujmy jej.
|| __UPG.msg('Nie znaleziono roli ''%1'' - nowe czynności nie zostaną z nią powiązane.' [_rola]);
   _status:=-1
|| {? ~_add(_rola,'PPL_ZDR_ZP11')
   || _status:=-1
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_status


\role_personel_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: Aktualizacja ról/uprawnień związana z czynnościami personelowymi
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja ról/uprawnień związana z czynnościami personelowymi.'


\srdt_num
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.42]
:: OPIS: Uzupełnienie pól w tabeli typów dokumentów środków trwałych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('maski','srodobj');
SRDT.prefix();
SRDT.for_each("
      SRDT.RODZ_NUM:='S';
      SRDT.FORM_SYM:='';
      SRDT.AKT_SYM:='N';
      SRDT.put()
");
__UPG.msg('Uaktualniono wymagane pola.');
1


\srdt_num_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.42]
:: OPIS: Uzupełnienie pól w tabeli typów dokumentów środków trwałych = opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie danych typów dokumentów środków trwałych'


\UPMZAD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Aktualizuje UPMZAD
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod','__kP','__kW','__kZ');
__lrec:=__lmod:=0;

__kP:=exec('get','#params',100186,2);
__kW:=exec('get','#params',100187,2);
__kZ:=exec('get','#params',100188,2);
UPMZAD.cntx_psh();
UPMZAD.prefix();
UPMZAD.for_each("
         __lrec+=1;
         _put:=0;
         {? UPMZAD.STAT_REJ=''
         || UPMZAD.STAT_REJ:='Z';
            _put:=1
         ?};
         {? UPMZAD.RODZ=''
         || _put:=1;
            {? UPMZAD.SLO=null()     || UPMZAD.RODZ:='N'
            |? UPMZAD.SLO().KOD=__kP || UPMZAD.RODZ:='P'
            |? UPMZAD.SLO().KOD=__kW || UPMZAD.RODZ:='W'
            |? UPMZAD.SLO().KOD=__kZ || UPMZAD.RODZ:='Z'
            || UPMZAD.RODZ:='N'
            ?}
         ?};
         {? UPMZAD.IDUM=''
         || _put:=1;
            UPMZAD.IDUM:={? UPMZAD.RUM='UM'
                         || exec('FindAndGet','#table',UP,UPMZAD.REF,,\"UM().IDADD\",'')
                         || exec('FindAndGet','#table',UPMPOJ,UPMZAD.REF,,\"UM().IDADD\",'')
                         ?}
         ?};
         {? _put & UPMZAD.put() || __lmod+=1 ?}
      ");
UPMZAD.cntx_pop();

__UPG.msg('Zaktualizowano przewozy w umowach miejskich.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);

VAR_DEL.delete('__lrec','__lmod','__kP','__kW','__kZ');
_res


\UPMZAD_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Aktualizuje FAKS.SP - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja przewozów (umowy miejskie).'


\ku_10_2019
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.42]
:: OPIS: Dodanie wartości kosztów uzyskania podstawowych, zwiększonych oraz ulgi rocznej do historii stałych
::----------------------------------------------------------------------------------------------------------------------
_dodano:=exec('kst_war_add','#stalesys','KST.KU','250.00',date(2019,10,1));
_dodano+=exec('kst_war_add','#stalesys','KST.KUZ','300.00',date(2019,10,1));

{? _dodano
|| __UPG.msg('Dodano wartości kosztów uzyskania podstawowych: 250.00, zwiększonych: 300.00 od 2019.10.01.')
|| __UPG.msg('Nie wykonano ustalenia wartości kosztów uzyskania podstawowych, zwiększonych od 2019.10.01.')
?};
_dodano:=exec('kst_war_add','#stalesys','KST.UL','43.76',date(2019,10,1));
{? _dodano
|| __UPG.msg('Dodano wartość ulgi miesięcznej: 43.76 od 2019.10.01.')
|| __UPG.msg('Nie wykonano ustalenia wartości ulgi miesięcznej od 2019.10.01.')
?};
_dodano:=exec('kst_war_add','#stalesys','KST.UL_ROK','548.30',date(2019,10,1));
_dodano+=exec('kst_war_add','#stalesys','KST.UL_ROK','525.12',date(2020,1,1));
{? _dodano
|| __UPG.msg('Dodano wartości ulgi rocznej 548.30 od 2019.10.01 oraz 525.12 od 2020.01.01.')
|| __UPG.msg('Nie wykonano ustalenia wartości ulgi rocznej od 2019.10.01 oraz 2020.01.01.')
?};
1


\ku_10_2019_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.42]
:: OPIS: Opis funkcji aktualizacji stałych systemu zwiazanych z kwotami wolne dla potrąceń komorniczych z zasiłków
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja historii stałych systemu - kwoty kosztów uzyskania podstawowych, zwiększonych oraz ulgi rocznej.'


\rub_52
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: Aktualizacja rubryki 52 - usunięcie z 19 pozycji karty zarobkowej.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_txt:='';
_skl:=52;
R.cntx_psh();
R.index('RUBKOD');
R.prefix();
{? R.find_key(_skl)
|| R.RSKZ:=0;
   {? R.put()
   || _txt:='Zaktualizowno składnik płacowy o numerze %1.'@[$_skl]
   || _txt:='Nie udało się zaktualizować składnika płacowego o numerze %1.'@[$_skl];
      _result:=-1
   ?}
|| _txt:='Brak składnika płacowego o numerze %1.'@[$_skl];
   _result:=-1
?};
__UPG.msg(_txt);
R.cntx_pop();
_result


\rub_52_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: Aktualizacja rubryki 52 - usunięcie z 19 pozycji karty zarobkowej.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja rubryki 52 - usunięcie z 19 pozycji karty zarobkowej.'


\edek_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: Dodanie nowego schematu e-Deklaracji dla VAT-7 (20)
::----------------------------------------------------------------------------------------------------------------------
_imp:=-1;
{? exec('add_ver','xml','FKS',date(2019,11,01),'VAT7',20,13)
|| _imp:=exec('upg_imp','xml','FKS','D','VAT7',20,date(2019,11,1),'vat-7_20.dfg')
?};

_txt:='e-Deklaracja VAT-7 (20) obowiązująca od 01.11.2019';

{? _imp=1
|| __UPG.msg(_txt+' została dodana.');
   1
|? _imp=0
|| __UPG.msg(_txt+' już istnieje.');
   1
|| __UPG.msg(_txt+' nie została dodana.');
   0
?}


\edek_vat_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.42]
:: OPIS: Dodanie nowego schematu e-Deklaracji dla VAT-7 (20)
::----------------------------------------------------------------------------------------------------------------------
'Dodanie nowej wersji schematu e-Deklaracji dla VAT-7 (20)\n'
'Nowa wersja schematu obowiązuje od 1 listopada 2019 r.'


\zaomeda_check
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Weryfikacja poprawności wybranych danych identyfikacyjnych pracownika.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('lic','#b_domain','PED')
|| __UPG.msg('Brak licencji na dziedzinę PED - weryfikacja nie jest przeprowadzana.');
   return(1)
?};

_nag:=1;
P.cntx_psh();
P.index('F_ZATR');
P.prefix(exec('firma','ustawienia'),'P',);
{? P.first()
|| OSOBA.cntx_psh();
   OSOBA.prefix();
   {!
   |? P.OSOBA();
      {? +OSOBA.PESEL<>11 & OSOBA.DOWOD='' & OSOBA.PASZPORT=''
      || {? _nag
         || __UPG.msg('Brak / błędny numer PESEL (11 znaków) lub');
            __UPG.msg('brak numeru dokumentu potwierdzającego tożsamość (dowód osobisty / paszport).');
            __UPG.msg('Należy poprawić poniższe dane i ponownie uruchomić zadania potransferowe.');
            _nag:=0
         ?};
         __UPG.msg(form(OSOBA.NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.DRUGIE)+' ur. '+OSOBA.UR_DATA$4+' r.')

      ?};
      P.next()
   !};
   OSOBA.cntx_pop()
?};
P.cntx_pop();
{? _nag
|| __UPG.msg('Dane poprawne.');
   1
|| 0
?}


\zaomeda_check_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Weryfikacja poprawności wybranych danych identyfikacyjnych pracownika - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Weryfikacja poprawności wybranych danych identyfikacyjnych pracownika\n'
'w związku z uzupełnianiem metadanych związanych z elektroniczną postacią dokumentacji pracowniczej.'


\jpk_fa_3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Uzupełnia pola walutowe pozyji VAT na potrzeby pliku JPK_FA (3)
::  OLD: \jpk_fa_3/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('NETTO_W',VPOZ)<=0
|| FUN.info('Brak naniesiania zmian w definicji na potrzeby aktualizacji 19.42_07 - JPK_FA (3).');
   return(0)
?};
_ret:=0;
_imp:=exec('upg_imp','xml','FKS','J','FA','JPK_FA(3)_v1-0',date(2019,11,1),'jpk_fa_3.dfg');
_txt:='Schemat plik JPK_FA (3) obowiązujący od 01.11.2019';
{? _imp=1
|| __UPG.msg(_txt+' został dodany.');
   _ret:=1
|? _imp=0
|| __UPG.msg(_txt+' już istnieje.');
   _ret:=1
|| __UPG.msg(_txt+' nie został dodany.')
?};
{? _ret
|| _upd:=0;
   ROK_F.cntx_psh();
   ROK_F.index('ROKPOCZ');
   ROK_F.prefix();
   {? ROK_F.first()
   || OKRO_F.cntx_psh();
      OKRO_F.index('ROK');
      {!
      |? {? ROK_F.ZAM<>'T'
         || OKRO_F.prefix(ROK_F.ref());
            {? OKRO_F.first()
            || {!
               |? {? OKRO_F.ZAM<>'T'
                  || echo('Firma: '+ROK_F.FIRMA().SYMBOL+', okres: '+OKRO_F.NAZ+' '+ROK_F.NAZ);
                     _maska:=ROK_F.KOD+form(OKRO_F.NR,-2);
                     DOK.cntx_psh();
                     DOK.use('doku'+_maska);
                     DOK.index('S2'); DOK.prefix(null);
                     {? DOK.last()
                     || DOK.prefix();
                        _ok:=DOK.next()
                     || DOK.prefix();
                        _ok:=DOK.first()
                     ?};
                     {? _ok
                     || VPOZ.cntx_psh();
                        VPOZ.use('pozv'+_maska);
                        VPOZ.index('VDOK');
                        {!
                        |? VPOZ.prefix(DOK.ref());
                           {? VPOZ.first()
                           || {!
                              |? {? VPOZ.NETTO_W=0 & VPOZ.VAT_W=0 & VPOZ.BRUTTO_W=0 & VPOZ.WARW
                                 || _typ:={? VPOZ.KURS
                                          || (VPOZ.WARW*VPOZ.KURS)$2<>VPOZ.NETTO
                                          || exec('czy_brutto','dok_fks')
                                          ?};
                                    exec('ae_vpozw','dok_fks1','WARW',_typ);
                                    VPOZ.put();
                                    _upd:=1
                                 ?};
                                 VPOZ.next()
                              !}
                           ?};
                           DOK.next()
                        !};
                        VPOZ.cntx_pop()
                     ?};
                     DOK.cntx_pop()
                  ?};
                  OKRO_F.next()
               !}
            ?}
         ?};
         ROK_F.next()
      !};
      OKRO_F.cntx_pop()
   ?};
   ROK_F.cntx_pop();
   echo();
   {? _upd
   || __UPG.msg('Uzupełniono pola walutowe pozycji VAT dokumentów księgowych')
   || __UPG.msg('Pola walutowe pozycji VAT dokumentów księgowych są już uzupełnione')
   ?}
?};
_ret


\jpk_fa_3_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Uzupełnia pola walutowe pozyji VAT na potrzeby pliku JPK_FA (3) - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie pól walutowych pozycji VAT dokumentów księgowych na potrzeby pliku JPK_FA (3)\n'
'Dodanie nowego schematu pliku JPK_FA (3)'


\fiks_61
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: kod - ER/WRT/XP/12.51/1912/0040 - Błąd w schemacie_deklaracja VAT7(20)_Osoba Fizyczna
::  OLD: \fiks_61/napraw_f.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
_tab:=sql(
   'select ISTDEFS.REFERENCE as REF from ISTDEFS join ISTDEF '+
   'where ISTDEF.VER=\'VAT-7 (20)\' and ISTDEFS.OPIS=\'tns:OsobaFizyczna\''
);
{? _tab.first()
|| ISTDEFS.cntx_psh();
   ISTDEFS.index('DRZEWO');
   ISTDEFS.prefix();
   {? ISTDEFS.seek(BIT.sqlint(_tab.REF),)
   || ISTDEFS.OPIS:='OsobaFizyczna';
      ISTDEFS.put();
      ISTDEFS.prefix(ISTDEFS.ISTDEF,#ISTDEFS.ref());
      {? ISTDEFS.first()
      || {!
         |? {? ISTDEFS.OPIS='etd:DataUrodzenia'
            || ISTDEFS.del()
            |? 4+ISTDEFS.OPIS='etd:'
            || ISTDEFS.OPIS:=4-ISTDEFS.OPIS;
               {? ISTDEFS.OPIS='NIP'
               || ISTDEFS.REGULY:=$"STR.gsub(XINFO.NIP,'-','')"
               ?};
               ISTDEFS.put();
               ISTDEFS.next()
            ?}
         !}
      ?};
      _ok:=1
   ?};
   ISTDEFS.cntx_pop()
?};
{? _ok
|| __UPG.msg('Naprawiono schemat e-Deklaracji VAT-7 (20)')
|| __UPG.msg('Naprawa schematu e-Deklaracji VAT-7 (20) jest zbędna.')
?};
1


\fiks_61_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: kod - ER/WRT/XP/12.51/1912/0040 - Błąd w schemacie_deklaracja VAT7(20)_Osoba Fizyczna - opis
::----------------------------------------------------------------------------------------------------------------------
'Naprawa schematu e-Deklaracji VAT-7 (20) dla podmiotu będącego osobą fizyczną\n\n'
'Po wykonaniu naprawy należy uzupełnić formuły dla wymaganych pól ImiePierwsze i Nazwisko\n'
'(scieżka w schemacie: Deklaracje/Podmiot1/OsobaFizyczna)'


\ppk_03
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: ER/WRT/XP/12.51/1912/0024
::  OLD: \ppk_03/napraw_p.fml
::----------------------------------------------------------------------------------------------------------------------
_BUF:=tab_tmp(3,
   'NAZWISKO','STRING['+$MS.fld_len(OSOBA,'NAZWISKO')+']','Nazwisko'@,
   'PIERWSZE','STRING['+$MS.fld_len(OSOBA,'PIERWSZE')+']','Imię'@,
   'PESEL','STRING['+$MS.fld_len(OSOBA,'PESEL')+']','PESEL'@,
   'OD','DATE','Od dnia'@,
   'RN','INTEGER','Kod'@,
   'RT','STRING['+$MS.fld_len(R,'RT')+']','Nazwa'@,
   'PPK_PWP','INTEGER','Rekord',
   'OPIS','STRING['+$MS.fld_len(PPK_WRD,'OPIS')+']','Rodzaj deklaracji'
);

_firma:=exec('firma','ustawienia');
P.cntx_psh();
ZC.cntx_psh();
OSOBA.cntx_psh();
PPK_UMO.cntx_psh();
PPK_UMO.index('F_OD');
PPK_UMO.prefix(_firma);
PPK_PWP.cntx_psh();
PPK_PWP.index('UNIQUE');
PPK_PWP.prefix(_firma);

_loop:=PPK_PWP.first();
_size:=PPK_PWP.size();
{! _cnt:=0
|? _loop
|! progress(int(100*_cnt/_size),'Trwa analiza danych...'@);
   _ok:=1;
   {? ~PPK_UMO.find_ge(PPK_PWP.OD) | (PPK_UMO.DO<>date(0,0,0) & PPK_UMO.DO<PPK_PWP.OD)
::    brak umowy wcześniejszej od daty zmiany lub zmiana nastąpiła po zakończeniu umowy
   || {? PPK_PWP.ZC<>null || PPK_PWP.ZC().P().OSOBA()
      |? PPK_PWP.P<>null || PPK_PWP.P().OSOBA()
      || PPK_PWP.OSOBA()
      ?};
::    Dojście do opisu podpiętej deklaracji:
      _TOPIS:=sql('select PPK_WRD.OPIS '+
                  'from PPK_PWP '+
                     'join PPK_PNW using(PPK_PNW.PPK_PWP, PPK_PWP.REFERENCE) '+
                     'join PPK_WPW using(PPK_WPW.REFERENCE, PPK_PNW.PPK_WPW) '+
                     'join PPK_WNU using(PPK_WNU.REFERENCE, PPK_WPW.PPK_WNU) '+
                     'join PPK_WRD using(PPK_WRD.REFERENCE, PPK_WNU.PPK_WRD) '+
                  'where PPK_PWP.REFERENCE=:_a',PPK_PWP.ref());

      _BUF.OPIS:={? _TOPIS.first() || _TOPIS.OPIS || 'brak' ?};
      obj_del(_TOPIS);
      _BUF.NAZWISKO:=OSOBA.NAZWISKO;
      _BUF.PIERWSZE:=OSOBA.PIERWSZE;
      _BUF.PESEL:=OSOBA.PESEL;
      _BUF.OD:=PPK_PWP.OD;
      _BUF.RN:=PPK_PWP.R().RN;
      _BUF.RT:=PPK_PWP.R().RT;
      _BUF.PPK_PWP:=#PPK_PWP.ref();
      _BUF.add()
   ?};
   _loop:=PPK_PWP.next()
!};
prgs_clr();

PPK_PWP.cntx_pop();
PPK_UMO.cntx_pop();
OSOBA.cntx_pop();
ZC.cntx_pop();
P.cntx_pop();

_wnd:=_BUF.mk_sel('Procentowe wysokości wpłat poza okresami obowiązywania umów'@,'P',0);
_BUF.win_fld(_wnd,,'NAZWISKO');
_BUF.win_fld(_wnd,,'PIERWSZE');
_BUF.win_fld(_wnd,,'PESEL');
_BUF.win_fld(_wnd,,'OD');
_BUF.win_fld(_wnd,,'RN',,,5);
_BUF.win_fld(_wnd,,'RT');
_BUF.win_fld(_wnd,,'OPIS');
_BUF.win_act(_wnd,,'Formuła','Usuń'@@,,,"
      _TAB:=cur_tab(1,1);
      {? _TAB.sel_size()=0
      || FUN.ask('Czy usunąć bieżący wiersz?'@)
      || 1
      ?}
   ","
      _BUF:=cur_tab(1,1);
      PPK_PWP.cntx_psh();
      PPK_PWP.index('UNIQUE');
      PPK_PWP.prefix(exec('firma','ustawienia'));
      {? PPK_PWP.seek(_BUF.PPK_PWP,)
      || PPK_PWP.del(1,1) & _BUF.del()
      || FUN.emsg('Nie znaleziono rekordu.'@);
         _BUF.del()
      ?};
      PPK_PWP.cntx_pop();
      0
   ",,1,"
      FUN.ask('Czy usunąć zaznaczone wiersze?'@)
   "
);
_BUF.win_sel(_wnd);

_done:=-1;
{!
|? _loop:=1;
   _BUF.select();
   {? _BUF.size()
   || {? FUN.ask(
            'Nadal istnieją zapisy poza okresami obowiązywania umów.\n'
            'Czy na pewno zakończyć działanie zadania?'@
         )
      || {? FUN.ask('Czy uznać zadanie za wykonane?'@)
         || _done:=1
         ?};
         _loop:=0
      ?};
      __UPG.msg('Nadal istnieje %1 zapisów poza okresami obowiązywania umów.'@[$_BUF.size()])
   || __UPG.msg('Nie znalezion zapisów poza okresami obowiązywania umów.'@);
      _done:=1;
      _loop:=0
   ?};
   _loop<>0
!};

obj_del(_BUF);

_done


\ppk_03_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: ER/WRT/XP/12.51/1912/0024 - opis.
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Pozostawione wpisy w kartotece % wartości wpłat.'


\wn_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: Importuje "personelowe" wnioski w obiegu
::       PR/WRT/XP/19.42/1912/0011
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_msg:="
{? _a
|| __UPG.msg('Zakończono import wniosku: \"%1\".'@[_b])
|| __UPG.msg('Nie udało się zaimportować wniosku: \"%1\".'@[_b])
?}
";

_result:=1;
_typobieg:=exec('add','typ_ob','Obieg wniosków');
_nazwa:=exec('nazwa_wozda','obiegi');
{? exec('renameETYPY','sch_imp',_typobieg,_nazwa)<1
|| __UPG.msg('Nie udało się zmienić nazwy wniosku: \"%1\".'@[_nazwa]);
   _result:=-1
|| _msg(exec('imp_wn','sch_imp',_nazwa,1,0),_nazwa)
?};
_nazwa:=exec('nazwa_rachunek','obiegi');
{? exec('renameETYPY','sch_imp',_typobieg,_nazwa)<1
|| __UPG.msg('Nie udało się zmienić nazwy wniosku: \"%1\".'@[_nazwa]);
   _result:=-1
|| _msg(exec('imp_wn','sch_imp',_nazwa,1,0),_nazwa)
?};
_nazwa:=exec('nazwa_woz','obiegi');
{? exec('renameETYPY','sch_imp',_typobieg,_nazwa)<1
|| __UPG.msg('Nie udało się zmienić nazwy wniosku: \"%1\".'@[_nazwa]);
   _result:=-1
|| _msg(exec('imp_wn','sch_imp',_nazwa,1,0),_nazwa)
?};
_result


\wn_imp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: Importuje "personelowe" wnioski w obiegu - opis
::       PR/WRT/XP/19.42/1912/0011
::----------------------------------------------------------------------------------------------------------------------
'Importuje "personelowe" wnioski w obiegu'


\par_wyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [19.42]
:: OPIS: kod - ER/WRT/XP/19.42/2001/0023 - Brak możliwości wywołania automatu
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
PARWYD.cntx_psh();
PARWYD.prefix();
{? PARWYD.first()
|| {! |? {? PARWYD.DOKUMLT=1 || PARWYD.DOKUMLT:=2; _ok:=1; PARWYD.put() ?};PARWYD.next() !}
?};
PARWYD.cntx_pop();
{? _ok
|| __UPG.msg('Naprawiono układu wyświetlania dokumentów księgowych.')
|| __UPG.msg('Naprawa jest układu wyświetlania dokumentów księgowych nie jest wymagana.')
?};
1


\par_wyd_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [19.42]
:: OPIS: kod - ER/WRT/XP/19.42/2001/0023 - Brak możliwości wywołania automatu - opis
::----------------------------------------------------------------------------------------------------------------------
'Naprawa ustawień użytkowników dotyczących sposobu wyswietlania dokumentów przy rejestrowaniu\n\n'
'Po uruchomieniu formuły wszystkim użytkownikom zostanie domyslnie przypisany sposób - Lista\n'
'Parametr ten można zmienić w ustawieniach użytkownika dla obszaru Finanse'
'(scieżka w programie: Ustawienia/Ustawienia/Finanse/Układ dokumentów księgowych)'


\kal_def_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: ER/WRT/XP/19.42/1912/0038
::----------------------------------------------------------------------------------------------------------------------
exec('RAPLS','object');
exec('czytaj','#stalesys',,KST_PAR);

exec('kal_def_gr','transfer');
__UPG.msg('Zakończono uzupełnienie pola KAL_DEF.GR dla wszystkich lat kalendarzy.');

P.cntx_psh();
P.index('OSOBA');
P.prefix();
:: aktualizacja nieobecności po popraweniu kalendarzy
_tab:=exec('chkN_NR','nieobecnosc',0,1);
{? _tab.first()
|| {!
   |? {? P.seek(_tab.P)
      || _tabN:=exec('getNieobInDays','nieobecnosc',P.ref(),_tab.OD,_tab.DO);
         exec('nieob_aktual','nieobecnosc',_tabN);
         &_tabN
      ?};
      _tab.next()
   !}
?};
&_tab;
:: aktualizacja wniosków urlopowych
_tab:=exec('chkNWU_NR','nieobecnosc',0,1);
{? _tab.first()
|| {!
   |? {? P.seek(_tab.P)
      || _tabNWU:=exec('getNWUInDays','nieobecnosc',P.ref(),_tab.OD,_tab.DO);
         exec('nwu_aktual','nieobecnosc',_tabNWU);
         &_tabNWU
      ?};
      _tab.next()
   !}
?};
&_tab;
:: aktualizacja pozycji planów urlopowych
_tab:=exec('chkPLAN_NR','nieobecnosc',0,1);
{? _tab.first()
|| {!
   |? {? P.seek(_tab.P)
      || exec('urlPlan_aktual','grafik',P.ref(),_tab.OD,_tab.DO)
      ?};
      _tab.next()
   !}
?};
P.cntx_pop();
__UPG.msg('Zakończono aktualizacje pola NR dla nieobecności, wniosków urlopowych i pozycji planów urlopowych.');
1


\kal_def_gr_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.42]
:: OPIS: ER/WRT/XP/19.42/1912/0038 - opis.
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie pola KAL_DEF.GR dla wszystkich lat kalendarza.'


\fiks_62
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.42]
:: OPIS: kod - ER/WRT/XP/19.42/2001/0083 - BLP - sprawdzenie jednego kontrahenta przypisywane jest innym kontrahentom
::       Formuła usuwająca błędne wpisy w historii sprawdzeń w wykazie podatników VAT.
::----------------------------------------------------------------------------------------------------------------------
KHCHKNIP.cntx_psh();
KHCHKNIP.index('NIP');
KHCHKNIP.prefix();
KH.cntx_psh();
_del:=0;
{? KHCHKNIP.first()
|| {!
   |? {? KHCHKNIP.NIP<>'' & KHCHKNIP.KH().SNIP<>'' & KHCHKNIP.NIP<>KH.SNIP
      || _del+=1;
         KHCHKNIP.del()
      || KHCHKNIP.next()
      ?}
   !}
?};
KH.cntx_pop();
KHCHKNIP.cntx_pop();
{? _del
|| __UPG.msg('Znaleziono i usunięto błędne rekordy z tabeli KHCHKNIP. Liczba usuniętych rekordów: %1'[$_del])
|| __UPG.msg('Naprawa historii sprawdzeń w wykazie podatników VAT nie jest wymagana.')
?};
1


\fiks_62_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.42]
:: OPIS: kod - ER/WRT/XP/19.42/2001/0083 - BLP - sprawdzenie jednego kontrahenta przypisywane jest innym kontrahentom
::       Formuła usuwająca błędne wpisy w historii sprawdzeń w wykazie podatników VAT. - opis
::----------------------------------------------------------------------------------------------------------------------
'Usuwa błędne wpisy w historii sprawdzeń w wykazie podatników VAT.'


\akt_1942_05
::----------------------------------------------------------------------------------------------------------------------
::  UTW: pk [19.42]
:: OPIS: Aktualizacja "Zmiana sposobu ustalenia zaliczki na podatek - przekroczenie progu"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_txt:='';

:: Aktualizacja opisów składników płacowych.
{? +exec('import','rubryki','g','7115,7116,7117',1,0)
|| _txt:='Dodanie nowych rubryk zakończyło się niepowodzeniem';
   _result:=-1
|| _txt:='Dodanie nowych rubryk zakończone powodzeniem'
?};
__UPG.msg(_txt);

:: Definicje atrybutów.
exec('__RUB','object');
__RUB.fill();
exec('add_attr','rubatr',9,903,'Zmiana progu podatkowego',1);
exec('add_attr','rubatr',903,9031,'% podatku II próg',1,'% podatku II próg',,7115);
exec('add_attr','rubatr',903,9032,'Dochód I próg podatkowy',1,'Dochód I próg podatkowy',,7116);
exec('add_attr','rubatr',903,9033,'Dochód II próg podatkowy',1,'Dochód II próg podatkowy',,7117);
__UPG.msg('Zakończono aktualizację atrybutów składników płacowych.');
_update:="
   {? ~(_put:=SLO_KOD.find_key(_a,_b,))
   || SLO_KOD.blank(1);
      SLO_KOD.SLO_TYP:=_a;
      SLO_KOD.KOD:=_b
   ?};
   _zmiana:=0;
   {? SLO_KOD.NAZWA<>_c
   || SLO_KOD.NAZWA:=_c;
      _zmiana+=1
   ?};
   {? var_pres('_d')=type_of('') & SLO_KOD.SYSTEM<>_d
   || SLO_KOD.SYSTEM:=_d;
      _zmiana+=1
   ?};
   {? SLO_KOD.SYSTEM<>'N' & SLO_KOD.SYSTEM<>'T'
   || SLO_KOD.SYSTEM:='N';
      _zmiana+=1
   ?};
   {? _put
   || {? _zmiana
      || SLO_KOD.put()
      ?}
   || SLO_KOD.add()
   ?}
";

SLO_KOD.cntx_psh();
SLO_KOD.index('KOD');
SLO_KOD.prefix();
: Statusy listy płac
_typ:=exec('slo_typ','ext_slo','LISTAT');
_update(_typ,'LSLP_AKT','Zaktualizowano numery składników listy','T');
_update(_typ,'ZBLP_AKT','Zaktualizowano numery składników zbiorówki','T');
_update(_typ,'OBLICZ','Termin ostatniej redakcji składników listy płac.','T');
SLO_KOD.cntx_pop();
_result


\akt_1942_05_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: pk [19.42]
:: OPIS: Aktualizacja "Zmiana sposobu ustalenia zaliczki na podatek - przekroczenie progu" - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zmiany sposobu ustalania zaliczki na podatek - przekroczenie progu'


\KST_PDGN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.42]
:: OPIS: Aktualizacja stałych systemu - Procent dodatku za godziny nocne PDGN w KST.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('add_acr','#stalesys','PDGN','Procent dodatku za godziny nocne','T','N','T','KST','PPL');
exec('kst_war_add','#stalesys','KST.PDGN','20.00',date(0,0,0));
__UPG.msg('Dodano pole "Procent dodatku za godziny nocne" do struktury stałych systemu.');
1


\KST_PDGN_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.42]
:: OPIS: Aktualizacja stałych systemu - Procent dodatku za godziny nocne PDGN w KST - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja stałych systemu - Procent dodatku za godziny nocne.'


\es_trn_fix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.42]
:: OPIS:  kod - ER/WRT/XP/19.42/2002/0033 - Rozmnożenie środków trwałych w nowym roku (po upgrade Xpertis->Merit).
::        Formuła naprawia dane środków trwałych, które po transferze zostały rozmnożone
::----------------------------------------------------------------------------------------------------------------------
{? ~FUN.ask('Zadanie wyszukuję i naprawia rozmnożone środki trwałe po transferze. '
           'Każdy wykryty środek trwały przed naprawą należy ręcznie zweryfikować. Zmiany będą nieodwracalne.'
           '\nKontynować zadanie?'@)
|| __UPG.msg('Zadanie przerwane przez użytkownika.');
   return(0)
?};
VAR_DEL.delete('__t_srsr');
__t_srsr:=tab_tmp(,'MASKA','STRING[8]',''
                   ,'REF1','INTEGER',''
                   ,'NRI1','STRING[18]',''
                   ,'NST','STRING[100]',''
                   ,'OD','STRING[8]',''
                   ,'REF2','INTEGER',''
                   ,'NRI2','STRING[18]',''
                   ,'Z','STRING[1]','');

_win:=__t_srsr.mk_sel('Środki trwałe'@);
__t_srsr.win_act(_win,,'Formuła','Wybierz'@@,,,,"{? __t_srsr.Z<>'T' || __t_srsr.Z:='T' || __t_srsr.Z:='N' ?}; __t_srsr.put()",1,1,);
__t_srsr.win_act(_win,,'Formuła','Napraw wybrane'@@,,,,"
   _maska:='';
   {? __t_srsr.first()
   || {!
      |? echo('Naprawa środków: '+__t_srsr.NRI1+', oraz: '+__t_srsr.NRI2);
         _del:=0;
         {? __t_srsr.Z='T'
         || {? _maska<>__t_srsr.MASKA || _maska:=__t_srsr.MASKA; SRSR.use(_maska) ?};
            SRSR.prefix();
            {? SRSR.seek(__t_srsr.REF2)
            || _tl:=SRSR.testlink;
               {? _tl.first
               || {!
                  |? _tab:=($_tl.TABELA)();
                     _tab.cntx_psh;
                     _tab.use(_tl.MASKA);
                     _tab.prefix;
                     {? _tab.seek(_tl.REF,)
                     || {? _tl.TABELA='SRST'
                        || {? #(_tab.SRSR)=__t_srsr.REF2
                           || _okres:=SRST.ROK_F;
                              _rok:=SRST.OKRO_F;
                              SRSR.cntx_psh();
                              {? SRSR.seek(__t_srsr.REF1)
                              || SRST.cntx_psh();
                                 SRST.index('SROD');
                                 SRST.prefix(SRSR.ref,_okres,_rok);
                                 {? SRST.first()
                                 || SRST.cntx_pop();
                                    _tl_2:=_tab.testlink;
                                    {? _tl_2.first
                                    || {!
                                       |? _tab_2:=($_tl_2.TABELA)();
                                          _tab_2.cntx_psh;
                                          _tab_2.use(_tl_2.MASKA);
                                          _tab_2.prefix;
                                          {? _tab_2.seek(_tl_2.REF,)
                                          || _tab_2.del
                                          ?};
                                          _tab_2.cntx_pop();
                                          obj_del(_tab_2);
                                          _tl_2.next()
                                       !}
                                    ?};
                                    obj_del(_tl_2);
                                    _tab.del
                                 || SRST.cntx_pop();
                                    _tab.SRSR:=SRSR.ref();
                                    _tab.NRI:=SRSR.NRI;
                                    _tab.put()
                                 ?}
                              ?};
                              SRSR.cntx_pop()
                           ?}
                        || {? #(_tab.SRSR)=__t_srsr.REF2
                           || SRSR.cntx_psh();
                              {? SRSR.seek(__t_srsr.REF1)
                              || _tab.SRSR:=SRSR.ref();
                                 {? var_press('NRI',_tab)>0 || _tab.NRI:=SRSR.NRI ?};
                                 _tab.put()
                              ?};
                              SRSR.cntx_pop()
                           ?}
                        ?}
                     ?};
                     _tab.cntx_pop;
                     obj_del(_tab);
                     _tl.next
                  !}
               ?};
               obj_del(_tl);
               {? SRSR.del() || __UPG.msg('Naprawiono środek trwały NRI: %1'[__t_srsr.NRI1]) ?}
            ?};
            _del:=__t_srsr.del()
         ?};
         {? _del || _del || __t_srsr.next() ?}
      !}
   ?};
   {? __t_srsr.size=0 || sel_exit() || __t_srsr.first() ?};
   echo()
");
__t_srsr.win_fld(_win,,'OD',,,8,,,'Jednostka'@);
__t_srsr.win_fld(_win,,'NST',,,20,,,'Nazwa'@);
__t_srsr.win_fld(_win,,'NRI1',,,18,,,'NRI_1'@);
__t_srsr.win_fld(_win,,'NRI2',,,18,,,'NRI_2'@);
__t_srsr.win_fld(_win,,'Z',,,,,,'Zaznacz?'@,,,2,,"'T'","'N'");
__t_srsr.win_sel(_win);

SRSR.cntx_psh();
_names:=SRSR.names();
{? _names.first()
|| {! |?
      SRSR.use(_names.NAME);
      SRSR.index('NRI_O'); SRSR.prefix();
      {? SRSR.first()
      || {!
         |? SRSR.cntx_psh();
            _ref:=SRSR.ref();
            _nri:=SRSR.NRI;
            _nst:=SRSR.NST;
            {? SRSR.GRP='N' & SRSR.find_key(SRSR.ODD,SRSR.KIND,{? SRSR.NRI+1='.' || (SRSR.NRI-1)+'/1.' || (SRSR.NRI-1)+'/1.' ?})
               & SRSR.NST=_nst & SRSR.GRP='N'
            || __t_srsr.REF1:=#_ref;
               __t_srsr.NRI1:=_nri;
               __t_srsr.NST:=_nst;
               __t_srsr.MASKA:=_names.NAME;
               __t_srsr.REF2:=#SRSR.ref();
               __t_srsr.NRI2:=SRSR.NRI;
               __t_srsr.OD:=SRSR.ODD().OD;
               __t_srsr.add()
            ?};
            SRSR.cntx_pop();
            SRSR.next()
         !}
      ?};
      _names.next()
   !}
?};
{? __t_srsr.size()>0 || __t_srsr.select() ?};
SRSR.cntx_pop();
VAR_DEL.delete('__t_srsr');
__UPG.msg('Formuła naprawcza została wykonana');
1


\es_trn_fix_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.42]
:: OPIS:  kod - ER/WRT/XP/19.42/2002/0033 - Rozmnożenie środków trwałych w nowym roku (po upgrade Xpertis->Merit).
::        Formuła naprawia dane środków trwałych, które po transferze zostały rozmnożone - opis
::----------------------------------------------------------------------------------------------------------------------
'Naprawa danych środków trwałych rozmnożonych po transferze z Xpertis do Merit.'


\ppk_prz_zas_rh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [19.42]
:: OPIS: ER/WRT/XP/19.42/2002/0023
::       Lista osób, które miały policzony składnik Przychód - wpł. PPK na wypłacie zasiłku.
::   WE: [_a] [INTEGER] - 0/1 Czy wyświetlać wynikową tabelę? domyślnie: 1
::   WY: _WYN [TABLE] - tabela z listą osób, lub 0 jeśli brak takich zapisów
::  OLD: \ppk_prz_zas_rh/napraw_p.fml
:: ~OST: INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_wysw:={? var_pres('_a')<>type_of(0) || 1 || _a ?};
:: Zapisy PPK_POD związane z rachunkiem opodatkowania wpłat, który jest typu ZAS:
_query:='
   select PPK_POD.REFERENCE as REF
   from PPK_POD
   join RH using(PPK_POD.POD_RH, RH.REFERENCE)
   where RH.ZAS=\'T\'
   ';
_PODZAS:=sql(_query);

_WYN:=tab_tmp(,'T','STRING['+$MS.fld_len('P','T')+']','Nr teczki',
               'NAZWISKO','STRING['+$MS.fld_len('OSOBA','NAZWISKO')+']','Nazwisko',
               'PIERWSZE','STRING['+$MS.fld_len('OSOBA','PIERWSZE')+']','Imię',
               'DATA_RH','DATE','Data wypłaty rachunku',
               'PRZ_KW','REAL','Kwota przychodu PPK',
               'NR_UM','STRING['+$MS.fld_len('ZC','NU')+']','Numer umowy',
               'DATA_UM','DATE','Data zawarcia umowy',
               'TYP_UM','STRING['+$MS.fld_len('RU','O')+']','Rodzaj umowy',
               'POD_R','INTEGER','Rok opodatkowania przychodu',
               'POD_M','INTEGER','Miesiąc opodatkowania przychodu'
             );

{? _PODZAS.first()
|| PPK_POD.cntx_psh();
   PPK_POD.prefix();
   OSOBA.cntx_psh();
   P.cntx_psh();
   RH.cntx_psh();
   LS.cntx_psh();
:: Przechodzę po znalezionych zapisach PPK_POD:
   {!
   |? {? PPK_POD.seek(_PODZAS.REF)
      || PPK_POD.OSOBA();
         PPK_POD.P();
         PPK_POD.WYL_RH();
         _WYN.blank();
         _WYN.NAZWISKO:=OSOBA.NAZWISKO;
         _WYN.PIERWSZE:=OSOBA.PIERWSZE;
         _WYN.T:=P.T;
         _WYN.NR_UM:=RH.ZLE().NU;
         _WYN.DATA_UM:=RH.ZLE().DZ;
         _WYN.TYP_UM:=RH.ZLE().RU().O;
         _WYN.DATA_RH:=RH.DWY;
         _WYN.PRZ_KW:=PPK_POD.WYL_KW;
         _WYN.POD_R:=PPK_POD.POD_R;
         _WYN.POD_M:=PPK_POD.POD_M;
         do();
         _WYN.add();
::       Wyczyszczenie składników 7109 z rachunku:
         LS.use(-PPK_POD.POD_LT);
         LS.index('ZLEC');
         LS.prefix(PPK_POD.POD_RH,7109);
         {? LS.first()
         || {! |? LS.del() !}
         ?};

::       Wyczyszczenie powiązania z rachunkiem zasiłkowym:
         PPK_POD.POD_LT:='';
         PPK_POD.POD_O:=null();
         PPK_POD.POD_RH:=null();
         PPK_POD.put();
         end()
      ?};

      _PODZAS.next()
   !};
   LS.cntx_pop();
   RH.cntx_pop();
   P.cntx_pop();
   OSOBA.cntx_pop();
   PPK_POD.cntx_pop()
|| __UPG.msg('Brak osób spełniających warunki.'@);
   return(1)
?};
_tytul:='Lista zleceniobiorców, którym wyczyszczono powiązanie przychodu PPK z rachunkiem zasiłkowym'@;
:: Wyświetlanie tabeli:
{? _wysw
|| _ed:=_WYN.mk_sel(_tytul,,0);
   _WYN.win_sel(_ed);
   _WYN.win_fld(_ed,,'T');
   _WYN.win_fld(_ed,,'NAZWISKO',,,30);
   _WYN.win_fld(_ed,,'PIERWSZE',,,30);
   _WYN.win_fld(_ed,,'DATA_RH',,,9);
   _WYN.win_fld(_ed,,'PRZ_KW',,,10);
   _WYN.win_fld(_ed,,'NR_UM',,,10);
   _WYN.win_fld(_ed,,'DATA_UM',,,9);
   _WYN.win_fld(_ed,,'TYP_UM',,,10);
   _WYN.win_fld(_ed,,'POD_R',,,10);
   _WYN.win_fld(_ed,,'POD_M',,,10);
   _WYN.select()
?};
:: Eksport do pliku:
{? FUN.ask('Czy zapisać do pliku?')
|| _plik:=tmp_dir()+'\\tRhZas.csv';
   _WYN.export(
   '@'+_plik,,,'UTF-8,header,nopth',,
   'T',,1,,
   'NAZWISKO',,2,,
   'PIERWSZE',,3,,
   'DATA_RH',,4,1,
   'PRZ_KW',,5,'9,2',
   'NR_UM',,6,,
   'DATA_UM',,7,1,
   'TYP_UM',,8,,
   'POD_R',,9,,
   'POD_M',,10,
   );
   FUN.info('Wyeksportowano do: '+_plik)
?};
__UPG.msg('Utworzono: %1'@[_tytul]);

1


\ppk_prz_zas_rh_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [19.42]
:: OPIS: ER/WRT/XP/19.42/2002/0023 - opis.
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Lista osób, które miały policzony Przychód - wpł. PPK na zasiłku.'


\ppk_dwwp19
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [19.42]
:: OPIS: ER/WRT/XP/19.42/2002/0028
::       Lista osób, które złożyły deklarację w określonym roku,
::       i ta deklaracja obowiązywała w tym samym roku (PPK_WNU.DATA),
::       oraz w kolejnym roku kalenarzowym w określonej liczbie pierwszych miesięcy nie przekroczyły 120% minimalnego
::       wynagrodzenia.
::UWAGA: Z uwagi na niezbędne obiekty formuła powinna być wywoływana z obszaru aplikacji Kadry i Płace!
::   WE: _a [STRING] - symbol deklaracji, domyślnie: DWWP
::       _b [NUMBER] - rok z którego szukać deklaracji, domyślnie: 2019
::       _c [NUMBER] - ile miesięcy z następnego roku sprawdzać, domyślnie: do obecnego miesiąca (date~2)
::       _d [NUMBER] - 0/1 - Czy wyświetlić zawartość tabeli? domyślnie: 1
::   WY: _WYN [TABLE] - tabela z listą osób
::  OLD: \dwwp19ls/napraw_p.fml
::----------------------------------------------------------------------------------------------------------------------
_rodz:={? var_pres('_a')<>type_of('') || 'DWWP' || _a ?};
_rok:={? var_pres('_b')<>type_of(0) || 2019 || _b ?};
_dtOd:=date(_rok,1,1);
_dtDo:=date(_rok,12,0);
_ileMies:={? var_pres('_c')<>type_of(0) || date()~2 || _c ?};
_wysw:={? var_pres('_d')<>type_of(0) || 1 || _d ?};
::
:: Osoby, które miały deklarację DWWP w danym roku obowiązującą od danego roku o procencie niższym niż 2
:: i nie miały tego typu deklaracji w roku kolejnym:
_query:='
   select OSOBA.REFERENCE as REF, max(PPK_WNU.OD) as OD, max(PPK_WNU.DATA) as DATA, max(PPK_WPW.STAWKA) as STAWKA
   from OSOBA
   join PPK_WNU using(PPK_WNU.OSOBA, OSOBA.REFERENCE)
   join PPK_WRD using(PPK_WRD.REFERENCE, PPK_WNU.PPK_WRD)
   join PPK_WPW using(PPK_WPW.PPK_WNU, PPK_WNU.REFERENCE)
   where PPK_WRD.SYMBOL=\':_a\'
   group by OSOBA.REFERENCE
   having max(PPK_WPW.STAWKA)<2.0
   and max(PPK_WNU.OD)>=to_date(:_b)
   and max(PPK_WNU.DATA)>=to_date(:_b)
   and max(PPK_WNU.OD)<=to_date(:_c)
   and max(PPK_WNU.DATA)<=to_date(:_c)';

_OSZDEKL:=sql(_query,_rodz,_dtOd,_dtDo);

_WYN:=tab_tmp(,'NAZWISKO','STRING['+$MS.fld_len('OSOBA','NAZWISKO')+']','Nazwisko',
               'PIERWSZE','STRING['+$MS.fld_len('OSOBA','PIERWSZE')+']','Imię',
               'PESEL','STRING['+$MS.fld_len('OSOBA','PESEL')+']','Pesel',
               'ROK','INTEGER','Rok',
               'MIESIAC','INTEGER','Miesiąc',
               'STAWKA','REAL','Stawka z deklaracji',
               'WPL','REAL','Wpłacono',
               'P_WPL','REAL','Powinno być',
               'PD_PPK','REAL','Podstawa PPK'
             );

exec('czytaj','#stalesys',date(),KST);
exec('czytaj','#stalesys',date(),KST_PPK);

{? _OSZDEKL.first()
|| exec('__KAL','object');
   exec('__RUB','object');
   exec('FUNKCJE','object');
   _firma:=exec('ref_firma','ustawienia');
   OSOBA.cntx_psh();
   OSOBA.prefix();
   {!
::    Przechodzę po osobach z deklaracją:
   |? {? OSOBA.seek(_OSZDEKL.REF)
      ||_WYN.blank();
        _WYN.NAZWISKO:=OSOBA.NAZWISKO;
        _WYN.PIERWSZE:=OSOBA.PIERWSZE;
        _WYN.PESEL:=OSOBA.PESEL;
        _WYN.STAWKA:=_OSZDEKL.STAWKA;
        _WYN.ROK:=_rok+1;

::      Przechodzę po miesiącach z roku następnego:
        LS.cntx_psh();
        O.cntx_psh();
        O.index('LISTYMIE');
        {! _ii:=1.._ileMies
        |! O.prefix(_firma,_rok+1,_ii);
::      Przechodzę po listach płac z danego miesiąca i sumuję brutto z danego miesiąca:
           _pWpPpk:=0;
           _pdstPpk:=0;
           _pdPpk2:=exec('pods_ppk','ppk_pwp',OSOBA.ref(),0,0,date(_rok+1,_ii,0));
           _loop:=O.first();
           {!
           |? _loop
           |! LS.use(-O.LT);
              LS.index('OSOBAKOD');
::            Sumuję podstawę ppk z list w miesiącu:
              LS.prefix(_firma,OSOBA.ref(),7087);
              {? LS.first()
              || {!
                 |? _pdstPpk+=LS.KW;

                    LS.next()
                 !}
              ?};
::            Sumuję kwotę Pod.wpł. PPK zatr. z list w miesiącu:
              LS.prefix(_firma,OSOBA.ref(),7090);
              {? LS.first()
              || {!
                 |? _pWpPpk+=LS.KW;

                     LS.next()
                 !}
              ?};
::            Czy kontunuować przebieg po listach z danego miesiąca (czy jeszcze są jakieś):
              _loop:=O.next()
           !};

::         Jeżeli brutto w tym miesiącu przekroczyło 120% minimalnej krajowej:
           {? _pdPpk2 <> KST.NK*KST_PPK.WMW
           || _WYN.MIESIAC:=_ii;
              _WYN.WPL:=_pWpPpk;
              _WYN.PD_PPK:=_pdstPpk;

              {? _pdPpk2 <= KST.NK*KST_PPK.WMW
              || _WYN.P_WPL:=_pdstPpk*(_OSZDEKL.STAWKA/100)
              || _WYN.P_WPL:=_pdstPpk*(KST_PPK.SK_MAXPU/100)
              ?};
              {? _WYN.WPL<>_WYN.P_WPL
              || _WYN.add(1)
              ?}
           ?}
        !};
        O.cntx_pop();
        LS.cntx_pop()
      ?};

      _OSZDEKL.next()
   !};
   OSOBA.cntx_pop();
   {? ~_WYN.size()
   || __UPG.msg('Brak osób spełniających warunki.'@);
      return(1)
   ?}
|| __UPG.msg('Brak osób spełniających warunki.'@);
   return(1)
?};

{? _wysw
|| _tytul:='Lista osób z niewłaściwym procentem wpłaty dodatkowej'@;
   _ed:=_WYN.mk_sel(_tytul,,0);
   _WYN.win_sel(_ed);
   _WYN.win_fld(_ed,,'NAZWISKO');
   _WYN.win_fld(_ed,,'PIERWSZE');
   _WYN.win_fld(_ed,,'PESEL');
   _WYN.win_fld(_ed,,'ROK');
   _WYN.win_fld(_ed,,'MIESIAC');
   _WYN.win_fld(_ed,,'STAWKA');
   _WYN.win_fld(_ed,,'WPL');
   _WYN.win_fld(_ed,,'P_WPL');
   _WYN.win_fld(_ed,,'PD_PPK');

   _WYN.select()
|| _WYN
?};
__UPG.msg('Wyświetlono: %1'@[_tytul]);

1


\ppk_dwwp19_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [19.42]
:: OPIS: ER/WRT/XP/19.42/2002/0028 - opis.
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Lista osób z niewłaściwym procentem wpłaty dodatkowej PPK.'


\rubatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Aktualizacja atrybutów rubryk płacowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
__RUB.fill();

exec('add_attr','rubatr',193,1933,'Nieobecności wymagające ustalenia limitów',1,
   'Nieobecności, dla których złożenie wniosku (na portalu) bez założonych limitów nie jest możliwe');

__UPG.msg('Lista dodanych atrybutów: %1' ['1933']);

1


\rubatr_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Aktualizacja atrybutów rubryk płacowych - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja atrybutów rubryk płacowych'


\alg_par_wyl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [19.42]
:: OPIS: Naprawa rekordów ALG_PAR po błędnym dodawaniu z poziomu planu kont
::----------------------------------------------------------------------------------------------------------------------
ALG_PAR.cntx_psh();
ALG_PAR.index('ALG_PAR1');
ALG_PAR.prefix();
__liczba:=0;
ALG_PAR.for_each("
    {? ALG_PAR.WYL='' || __liczba+=1; ALG_PAR.WYL:='N'; ALG_PAR.put() ?}
    ");
ALG_PAR.cntx_pop();
{? __liczba
|| __UPG.msg('Znaleziono i poprawiono błędne rekordy z tabeli ALG_PAR. Liczba poprawionych rekordów: %1'[$__liczba])
|| __UPG.msg('Nie znaleziono błędnych rekordów dla tabeli ALG_PAR')
?};
VAR_DEL.delete('__liczba');
1


\alg_par_wyl_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [19.42]
:: OPIS: Naprawa rekordów ALG_PAR po błędnym dodawaniu z poziomu planu kont - opis
::----------------------------------------------------------------------------------------------------------------------
'Naprawa rekordów ALG_PAR dla pustego argumentu ALG_PAR.WYL'


\formula_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [19.42]
:: OPIS: ER/WRT/XP/19.42/2005/0004 Tworzenie podziałów dla  dokumentów magazynowych
::----------------------------------------------------------------------------------------------------------------------
FORMULA.prefix();
FORMULA.for_each("FORMULA.FORMULA:=gsub(FORMULA.FORMULA,'sch_par','%control');FORMULA.put()")


\formula_popraw_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [19.42]
:: OPIS: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Tworzenie podziałów dla  dokumentów magazynowych'


:Sign Version 2.0 jowisz:1048 2023/06/23 14:16:37 44a48c9d900db349a50a5283847246de36c595347d90823b91692f0a6794ae536c614870279cef6537ef60c7a425d74b1f76c0d04fb491063a87d4ed151262a443147f5d3c59730e606a26ac3fec378070b4ad70c74a7ee9b4e48757c96e72c5915f0274c7d47140df54aea0ba3a79edb9e6deedcd324e29a7c59f8744f1285f
