:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: upgrade_1902.fml
:: Utworzony: 12.10.2018
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Funkcje do obsługi transferu danych z wersji 18.42 na 19.02
::
::            Każda formuła powinna zwracać wartość liczbową, interpretacja:
::                1 - całość przeszła bez błędów - realizacja zakwalifikowana jako wykonana
::               -1 - całość przeszła z uwagami  - realizacja zakwalifikowana jako wykonana
::                0 - został stwierdzony błąd    - realizacja zakwalifikowana jako przerwana
::
::            Definicja zadania transferowego:
::               __UPG.add_task(name,[auto],[mf],domain,[ver],[required],[manual],[nofirm],[onlyact])
::                gdzie:
::                   name     [STRING] - nazwa formuły potransferowej (z bieżącego pliku).
::                   auto     [STRING] - formuła automatyczna: T [domyślnie] / N
::                   mf       [STRING] - formuła wielofirmowa: T [domyślnie] / N
::                                        T - wykonywana tylko raz
::                                        N - wykonywana w każdej firmie
::                   domain   [STRING] - kod dziedziny produktowej (informacyjnie)
::                   ver      [NUMBER] - wersja formuły
::                   required [STRING] - czy zadanie musi być wykonane
::                                       Dla zadań automatycznych parametr zawsze przyjmuje wartość T.
::                                       Dla zadań manualnych - domyślnie: N.
::                   manual   [STRING] - kod powiązanego zadania manualne w ramach wersji
::                                        domyślnie brak
::                                        jeśli podano i istnieje oraz zostaną dokonane zapisy w buforze to zadanie
::                                        zmieni status na wymagalne
::                   nofirm   [NUMBER] - dla zadań jednofirmowych pomija firmę '000' (wartość 1), 0-domyślna wartość
::                   onlyact  [STRING] - zadanie aktualizacyjne dla danej wersji: T-tak, N-nie (domyślnie)
::
::            W formułach można stosować zapis do przesłania komunikatów dla realizacji, np.
::               __UPG.msg('Brak zapisów dla roku 2016 w tabeli FAKS.')
::
::            W formułach automatycznych, które zostały powiązane z formułą manualną można stosować zapis o danych
::            wymagalnych do zweryfikowania, np.
::               __UPG.buf(USERS.uidref(),'Zweryfikuj parametry użytkownika w kontekście anulowania dokumentów')
::            zapis jest dołączony bezpośrednio pod wskazaną czynością manualną
::            Do uzyskania zapisów dla realizacji zadania manualnego służy metoda:
::               __UPG.get_buf()
::            wynik zwracany jest w formie tabeli o strukturze:
::               CODE  - STRING[48]
::               DESC  - STRING[255]
::               FIRMA - STRING[16] - ref SQL
::
::            \formuła      - formuła potransferowa
::            \formuła_desc - opis dla formuły potransferowej
::======================================================================================================================
:: Sposób tworzenia i opisu formuł transferowych:
::           - każda formuła musi zawierać opis (\formuła_desc) która w pierwszych zdaniach opisuje co robi, w kolejnych
::             zdaniach zawiera krótki opis techniczny np. uzupełniono pole XX w tabeli AA wartością 'T'
::           - każda formuła musi badać wynik swojego działania, zwracać 1, 0, -1 jeżeli od jej wykonania jest zależne
::             działanie systemu
::           - każda formuła musi tworzyć opis tego, jak przebiegło jej wykonanie wykorzystując __UPG.msg
::             tak aby po opisie można było wywnioskować co formuła konkretnie zrobiła
::             np. w tabeli AA Poprawiono X rekordów z N przeanalizowanych
::           - każda funkcja powinna posiadać progress, pokazujący postęp wykonania (jeżeli funkcja jest przewidziana
::             do wykonania na wielu rekordach)
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Główna formuła upgrade-ów 19.02
::----------------------------------------------------------------------------------------------------------------------
:: Zadania wykonywane raz dla całego systemu
__UPG.add_task('upgrade_act',,,'ZPR');
__UPG.add_task('stalesys_ini',,,'ZWS',,,,,'T');
__UPG.add_task('form_plat_typ',,,'ZWS');
__UPG.add_task('funpar',,,'ZWS');
__UPG.add_task('B_WORKER',,,'ZPR');
__UPG.add_task('edok_atk',,,'OBE');
__UPG.add_task('etypy',,,'ZWS');
__UPG.add_task('abstore_field',,,'ZWS');
__UPG.add_task('bprel_act',,,'ZPR',1);
__UPG.add_task('f_06',,,'FKS');
__UPG.add_task('s_zus',,,'PKD');
__UPG.add_task('r',,,'PKD');
__UPG.add_task('color',,,'ZWS');
__UPG.add_task('sam_el',,,'FST');
__UPG.add_task('uzup_finfo',,,'FST');
__UPG.add_task('httpbank',,,'ZWS');
__UPG.add_task('par6_plat',,,'ZWS');
__UPG.add_task('KART_DOD_ZUS_RIA',,,'ZWS');
__UPG.add_task('del_ocr',,,'ZWS');
__UPG.add_task('edeklaracje_2019',,,'ZWS');
__UPG.add_task('nbp_kursy_fsp',,,'HBN');
__UPG.add_task('akt_woz',,,'OBE');
__UPG.add_task('stanowiska',,,'PKD');
__UPG.add_task('rubatr',,,'ZWS',3);
__UPG.add_task('jpk_url',,,'FKS');
__UPG.add_task('fix_espr',,,'FKS',6);
__UPG.add_task('fix_xsd',,,'ZWS');
__UPG.add_task('upd_espr',,,'FKS');
__UPG.add_task('plugins_init',,,'PKD');
:: Zadania wykonywane dla każdej firmy osobno
__UPG.add_task('f_zatra',,'N','PKD',,,,1);
__UPG.add_task('updateTYPYSP',,'N','ZWS',,,,1);
__UPG.add_task('zao',,'N','ZWS',,,,1);
__UPG.add_task('logiSTAT_REJ',,'N','LZK',,,,1);
__UPG.add_task('KST_ZUS_OSW',,'N','ZWS',,,,1);
__UPG.add_task('params',,'N','ZWS');
__UPG.add_task('zws_par_pstn',,'N','ZWS',0,,,1);
:: Zadania manualne
__UPG.add_task('dowod_osobisty','N','T','ZWS',1,'N');
__UPG.add_task('usp','N','N','PKD',,'N',,1);
__UPG.add_task('imie_matki_ojca','N','T','PKD',1,'N');
~~


\upgrade_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Aktualizacja typów danych oraz czynności dla wskazanych obszarów
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
:: Poniżej wpisać domeny, których dotyczą nowe lub aktualizowane czynności
::_dom:=spli_str('LMG.LSP.LZK.PKD.PKW.PPL.TPP.TTE.WYP.ZWS.FST.FKS.KON.OBE.OBG','.');
_dom:=spli_str('LMG.TTE.ZWS.LZK','.');
_len:=obj_len(_dom);

{? _len & _dom[1]<>''
|| FUN.prg_start(_len+2,'Aktualizacja czynności.'@,,,1);

:: Uzupełnienie domen (zawsze)
   FUN.prg_next();
   exec('add_domain','#b_action');
   __UPG.msg('Zaktualizowano dziedziny.');

:: Uzupełnienie typów (zawsze)
   FUN.prg_next();
   exec('fill_tab','#b_type',0);
   __UPG.msg('Zaktualizowano typy danych.');

   {! _i.._len
   |! FUN.prg_next();
      _domain:=exec('FindInSet','#table','B_DOMAIN','SYMBOL',_dom[_i]);
      {? _domain<>null()
      || exec('import_needed_dom','#b_design',_domain,0);
         __UPG.msg('Zaktualizowano czynności dziedziny: %1.'[_dom[_i]])
      ?}
   !};
   FUN.prg_stop()
?};
obj_del(_dom);
_res


\upgrade_act_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Aktualizacja typy danych oraz czynności dla wskazanych obszarów - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja typów danych oraz czynności dla modelera'


\form_plat_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.02]
:: OPIS: Aktualizacja form płatności - nowy parametr: Typ płatności
::----------------------------------------------------------------------------------------------------------------------
_res:=1;

RS.cntx_psh();
{? RS.find_key('~Płatności')
||
   exec('new_par','slo_slu',RS.ref(),5,'Typ płatności','STRING')
?};
RS.cntx_pop();
__UPG.msg('Dodano parametr "Typ płatności" dla słowników użytkownika opartych na wzorcu ~Płatności.');

SLU.cntx_psh();
SLU.index('WZORZEC');
SLO.cntx_psh();
SLO.index('SL');
SLU.prefix('~Płatności');
{? SLU.first()
||
   {! |?
      SLO.prefix(SLU.ref());
      _loop:=SLO.first();
      {!
      |? _loop
      |!
         _got:=0;
         ZR_SLO.cntx_psh();
         ZR_SLO.index('SLO_NR');
         ZR_SLO.prefix(SLO.ref());
         {? ZR_SLO.find_key(1)
         ||
            {? ZR_SLO.WAR='T'
            ||
               _got:=1
            ?}
         ?};
         {? ~ZR_SLO.find_key(5)
         ||
            ZR_SLO.blank();
            ZR_SLO.SLO:=SLO.ref();
            ZR_SLO.NR:=5;

            {? SLO.KOD='GOTOW' | _got=1
            ||
               ZR_SLO.WAR:='gotówka'
            |? SLO.KOD='KARTA'
            ||
               ZR_SLO.WAR:='karta'
            ||
               ZR_SLO.WAR:='inna'
            ?};

            {? ZR_SLO.add()
            ||
               __UPG.msg('Dodano parametr "Typ płatności" dla formy płatności %1 ze słownika użytkownika %2.'
                  [SLO.KOD,SLU.NAZ])
            ?}
         ?};
         ZR_SLO.cntx_pop();
         _loop:=SLO.next()
      !};
      SLU.next()
   !}
?};
SLO.cntx_pop();
SLU.cntx_pop();
_res


\form_plat_typ_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.02]
:: OPIS: Aktualizacja typy danych oraz czynności dla wskazanych obszarów - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja form płatności - nowy parametr: Typ płatności w POS'


\funpar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.02]
:: OPIS: Aktualizacja obszaru Ustawienia i parametryzacja.
::----------------------------------------------------------------------------------------------------------------------
{? exec('aktualizuj','funpar',0)
|| __UPG.msg('Zaktualizowano zawartość obszaru: Ustawienia i parametryzacja.')
|| __UPG.msg('Nie zaktualizowano zawartości obszaru: Ustawienia i parametryzacja.')
?}


\funpar_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.02]
:: OPIS: Aktualizacja obszaru Ustawienia i parametryzacja - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja ustawień i parametryzacji.'


\f_zatra
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.02]
:: OPIS: Aktualizacja czynności dla form współpracy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_lrec:=_lmod:=0;
_kody:='p';
_lista:='PKD_EZK_OPOD,PKD_EZK_OROD';

_kod:=spli_str(_kody,',');
_arr:=spli_str(_lista,',');

{! _ii:=1..obj_len(_kod)
|! __UPG.msg('Kody formy współpracy: %1' [_kod[_ii]]);
   _ret:=exec('f_zatra_add','f_zatr','N',_kod[_ii],_lista,1);
   {? _ret<>''
   || __UPG.msg(_ret);
      _result:=-1
   || __UPG.msg('Dodano wszystkie czynności z listy.')
   ?}
!};
_result


\f_zatra_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.02]
:: OPIS: Aktualizacja czynności dla form współpracy - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja czynności dla form współpracy'


\updateTYPYSP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: Aktualizuje znacznik TYPYSP.SPPK dla typów dokumentów sprzedaży
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
TYPYSP.cntx_psh();
TYPYSP.prefix();
TYPYSP.for_each("
   _put:=0;
   __lrec+=1;
   {? TYPYSP.SPPK='' || _put:=1; TYPYSP.SPPK:='N' ?};
   {? _put || {? TYPYSP.put() || __lmod+=1 ?} ?}
");
TYPYSP.cntx_pop();
__UPG.msg('Zaktualizowano definicje dla typów dokumentów sprzedaży.');
__UPG.msg('Dodano nowe pole SPPK - Na korekcie od różnicy wartości, domyślna wartość \'N\'.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\updateTYPYSP_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: Aktualizuje znacznik TYPYSP.SPPK dla typów dokumentów sprzedaży - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja definicji typów dokumentów sprzedaży.'


\B_WORKER
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.02]
:: OPIS: Uzupełnia znacznik B_WORKER.ENABLED
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
B_WORKER.cntx_psh();
B_WORKER.prefix();
_res:=B_WORKER.for_each("
   __lrec+=1;
   {? B_WORKER.ENABLED=''
   || B_WORKER.ENABLED:='T';
      {? B_WORKER.put() || __lmod+=1 ?}
   ?}
");
B_WORKER.cntx_pop();
__UPG.msg('Zaktualizowano definicje kolejek.');
__UPG.msg('Dodano nowe pole ENABLED - Czy kolejka jest włączona (domyślna wartość \'T\').');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\B_WORKER_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.02]
:: OPIS: Uzupełnia znacznik B_WORKER.ENABLED - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja definicji kolejek.'


\edok_atk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Aktualizacja rekordów tabeli EDOK_ATK
::----------------------------------------------------------------------------------------------------------------------
_typy:=obj_new('tab','first','next','add','get');
_typy.tab:=tab_tmp(2,
   'ETYPY','INTEGER','typ',
   'TAT','INTEGER','nr',
   'OPIS','STRING[255]','opis'
);
_typy.add:="
   {? ~.tab.find_key(_a,_b)
   || .tab.ETYPY:=_a;
      .tab.TAT:=_b;
      .tab.OPIS:=_c;
      .tab.add()
   ?}
";
_typy.get:="
   ETYPY.prefix();
   _ok:=ETYPY.seek(.tab.ETYPY,);
   {? _ok
   || TAT.prefix();
      _ok:=TAT.seek(.tab.TAT,)
   ?};
   _ok
";
_typy.first:="
   {? .tab.first()
   || .get()
   ?}
";
_typy.next:="
   {? .tab.next()
   || .get()
   ?}
";
ETYPY.cntx_psh();
ETYPY.index('UNIK'); ETYPY.prefix(exec('bl_typ','obiegi',2));
{? ETYPY.first()
|| ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ');
   {!
   |? ETYP_ATR.prefix(ETYPY.ref(),null);
      {? ETYP_ATR.first()
      || {!
         |? {? ETYP_ATR.TAT().TYP='O'
            || _txt1:=_txt:=ETYP_ATR.memo_txt(,1,'OPIS');
               {! |? {? 1+_txt=' ' | 1+_txt='-' || _txt:=1-_txt; 1 ?} !};
               {? _txt1<>_txt | 1
               || ETYP_ATR.memo_set(_txt,'OPIS');
                  ETYP_ATR.memo_put(,'OPIS');
                  ETYP_ATR.put();
                  _typy.add(ETYPY.ref,ETYP_ATR.TAT,_txt)
               ?}
            ?};
            ETYP_ATR.next()
         !}
      ?};
      ETYPY.next()
   !};
   ETYP_ATR.cntx_pop()
?};

{? _typy.first()
|| _tab:=EDOK_ATR.names();
   {? _tab.first()
   || EDOK_ATR.cntx_psh();
      {!
      |? EDOK_ATR.use(_tab.NAME);
         EDOK_ATR.index('TATWARTE');
         {? _typy.first()
         || {!
            |? EDOK_ATR.prefix(ETYPY.ref(),TAT.ref());
               {? EDOK_ATR.first()
               || {!
                  |? {? EDOK_ATR.WAR<>_typy.tab.OPIS
                     || EDOK_ATR.WAR:=_typy.tab.OPIS;
                        EDOK_ATR.put()
                     ?};
                     EDOK_ATR.next()
                  !}
               ?};
               _typy.next()
            !}
         ?};
         _tab.next()
      !};
      EDOK_ATR.cntx_pop()
   ?};
   &_tab
?};
ETYPY.cntx_pop();

_tab:=EDOK_ATR.names();
{? _tab.first()
|| {!
   |? {? 6+_tab.NAME='edokat'
      || EDOK_ATK.use('edoknt'+(_tab.NAME+2));
         EDOK_ATK.index('EDOKUM');
         EDOK_ATK.prefix();
         EDOK_ATR.use(_tab.NAME);
         EDOK_ATR.index('REKKOLED');
         EDOK_ATR.prefix();
         {? EDOK_ATR.first()
         || {!
            |? {? ~EDOK_ATK.find_key(EDOK_ATR.EDOKUM,EDOK_ATR.REKORD)
               || EDOK_ATK.EDOKUM:=EDOK_ATR.EDOKUM;
                  EDOK_ATK.REKORD:=EDOK_ATR.REKORD;
                  EDOK_ATK.OPIS:=exec('edok_atk_opis','obiegi2');
                  EDOK_ATK.add()
               || EDOK_ATK.OPIS:=exec('edok_atk_opis','obiegi2');
                  EDOK_ATK.put()
               ?};
               EDOK_ATR.prefix(EDOK_ATR.EDOKUM,null,'',EDOK_ATR.REKORD);
               EDOK_ATR.last();
               EDOK_ATR.prefix();
               EDOK_ATR.next()
            !}
         ?}
      ?};
      _tab.next()
   !}
?};
__UPG.msg('Zaktualizowano dane o zestawach informacji dodatkowych wniosków w obiegu.')


\edok_atk_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Aktualizacja rekordów tabeli EDOK_ATK
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja danych o zestawach informacji dodatkowych wniosków w obiegu'


\etypy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Uzupełnienie pola ETYPY.ODD_TYP
::----------------------------------------------------------------------------------------------------------------------
ETYPY.prefix();
ETYPY.for_each("
   _put:=0;
   {? ETYPY.ODD_TYP='' || ETYPY.ODD_TYP:='B'; _put:=1 ?};
   {? ETYPY.ED_TEMAT='' || ETYPY.ED_TEMAT:='T'; _put:=1 ?};
   {? _put || ETYPY.put() ?}
",1);
__UPG.msg('Uzupełniono nowe pole w typach dokumnetów w obiegu.');
1


\etypy_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Uzupełnienie pola ETYPY.ODD_TYP - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie nowego pola w typach dokumnetów w obiegu'


\dowod_osobisty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Formuła usuwa informacje związane z dowodem osobistym i narodowością.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_PAR:=tab_tmp(1,
   'DOWOD','INTEGER','Seria i numer'@,
   'ORG_DOW','INTEGER','Organ wydający'@,
   'DWY_DOW','INTEGER','Data wydania'@,
   'DWA_DOW','INTEGER','Data ważności'@,
   'NAROD','INTEGER','Narodowość'@
);

_we:=_PAR.mk_edit('Informacje do usunięcia'@);
_PAR.win_esep(_we,'Dowód osobisty i narodowość'@);
_PAR.win_efld(_we,,'DOWOD',,,,,,,,,'check-box','check_label="%1"' ['Tak, usuń informację'@],"1","0");
_PAR.win_efld(_we,,'ORG_DOW',,,,,,,,,'check-box','check_label="%1"' ['Tak, usuń informację'@],"1","0");
_PAR.win_efld(_we,,'DWY_DOW',,,,,,,,,'check-box','check_label="%1"' ['Tak, usuń informację'@],"1","0");
_PAR.win_efld(_we,,'DWA_DOW',,,,,,,,,'check-box','check_label="%1"' ['Tak, usuń informację'@],"1","0");
_PAR.win_efld(_we,,'NAROD',,,,,,,,,'check-box','check_label="%1"' ['Tak, usuń informację'@],"1","0");
exec('ok_esc','#window',_PAR,_we);
_PAR.win_edit(_we);

{? _PAR.edit("
      _PAR:=cur_tab(1,1);
      {? _PAR.DOWOD+_PAR.ORG_DOW+_PAR.DWY_DOW+_PAR.DWA_DOW+_PAR.NAROD=0
      || FUN.emsg('Co najmniej jedno z pól musi być zaznaczone.'@);
         0
      || 1
      ?}
   ")
|| __UPG.msg('Użytkownik %1 zatwierdził usuwanie informacji.' [exec('operatorKod','#users')]);
   _dozmiany:=0;
   _zmienionych:=0;
   OSOBA.cntx_psh();
   OSOBA.index('IDADD');
   OSOBA.prefix();
   {? OSOBA.first()
   || _zeruj:=$(
         "_d0:=_a; "+
         "_put:=0; "+
         {? _PAR.DOWOD || "{? OSOBA.DOWOD<>'' || OSOBA.DOWOD:=''; _put+=1 ?}; " || "" ?}+
         {? _PAR.ORG_DOW || "{? OSOBA.ORG_DOW<>'' || OSOBA.ORG_DOW:=''; _put+=1 ?}; " || "" ?}+
         {? _PAR.DWY_DOW || "{? OSOBA.DWY_DOW<>_d0 || OSOBA.DWY_DOW:=_d0; _put+=1 ?}; " || "" ?}+
         {? _PAR.DWA_DOW || "{? OSOBA.DWA_DOW<>_d0 || OSOBA.DWA_DOW:=_d0; _put+=1 ?}; " || "" ?}+
         {? _PAR.NAROD || "{? OSOBA.NAROD<>'' || OSOBA.NAROD:=''; _put+=1 ?}; " || "" ?}+
         "{? _put || OSOBA.put() || -1 ?}");
      _d0:=date(0,0,0);
      _size:=OSOBA.size();
      _step:=0;
      {!
      |? _step+=1;
         _proc:=100*_step/_size;
         progress(_proc,'Usuwanie informacji'@,'Przetwarzanie danych');
         _ret:=_zeruj(_d0);
         {? _ret>=0
         || _dozmiany+=1;
            {? _ret=1
            || _zmienionych+=1
            ?}
         ?};
         OSOBA.next()
      !};
      prgs_clr();
      __UPG.msg('Wszystkich zapisów: %1' [$_size]);
      __UPG.msg('Zapisów do zmiany: %1' [$_dozmiany]);
      __UPG.msg('Zapisów zmienionych: %1' [$_zmienionych])
   ?};
   OSOBA.cntx_pop();
   _dozmiany=_zmienionych
|| {? FUN.ask(
         'Czy rezygnujesz (również w przyszłości) z wykonania tego zadania?\n'
         '\n'
         'Tak - zadanie zostanie oznaczone jako "Wykonane" i nie będzie już można uruchomić go.\n'
         'Nie - zadanie pozostanie na liście zadań i będzie je można wykonać w późniejszym czasie.'@
      )
   || __UPG.msg('Użytkownik %1 zdecydował o pominięciu wykonania zadania.' [exec('operatorKod','#users')]);
      1
   || __UPG.msg('Użytkownik %1 pozostawił zadanie do późniejszego wykonania.' [exec('operatorKod','#users')]);
      0
   ?}
?}


\dowod_osobisty_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Formuła usuwa informacje związane z dowodem osobistym - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Usuwanie informacji związanych z dowodem osobistym i narodowością'


\zao
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Aktualizacja struktury i opisów akt osobowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_add:=
::  _a  [REFERENCE/NUMBER] - Wskazanie lub numer rekordu rodzica.
::  _b  [NUMBER]           - Liczba porządkowa elementu.
::  _c  [STRING]           - Nazwa elementu.
:: [_d] [STRING]           - Opis elementu [domyślnie:''].
:: [_e] [STRING]           - Element systemowy: T/*N.
   "  _zaoh:={? var_pres('_a')=type_of(null()) || #_a |? var_pres('_a')=type_of(0) || _a ?};
      _lp:=_b;
      _nazwa:=_c;
      _opis:={? var_pres('_d')=type_of('') || _d || '' ?};
      _system:={? var_pres('_e')=type_of('') & (_e='T' | _e='N') || _e || 'N' ?};
      {? ZAOH.find_key(_zaoh,_lp)
      || {? ZAOH.NAZWA<>_nazwa | ZAOH.SYSTEM<>_system
         || ZAOH.NAZWA:=_nazwa;
            ZAOH.SYSTEM:=_system;
            {? ZAOH.put()
            || __UPG.msg('[%1] - zaktualizowo nazwę.' [_nazwa])
            || __UPG.msg('[%1] - aktualizacja nazwy nie powiodła się.' [_nazwa])
            ?}
         ?};
         {? ZAOH.memo_txt(,1,'OPIS')<>_opis
         || ZAOH.memo_set(_opis,'OPIS');
            {? ZAOH.memo_put(,'OPIS')
            || __UPG.msg('[%1] - zaktualizowano opis.' [_nazwa])
            || __UPG.msg('[%1] - aktualizacja opisu nie powiodła się.' [_nazwa])
            ?}
         ?};
         ZAOH.ref()
      || ZAOH.blank();
         ZAOH.ZAOH:=_zaoh;
         ZAOH.LP:=_lp;
         ZAOH.NAZWA:=_nazwa;
         ZAOH.SYSTEM:=_system;
         {? ZAOH.add()
         || __UPG.msg('[%1] - utworzono pozycję.' [_nazwa]);
            {? _opis<>''
            || ZAOH.memo_set(_opis,'OPIS');
               {? ZAOH.memo_put(,'OPIS')
               || __UPG.msg('[%1] - zaktualizowano opis.' [_nazwa])
               || __UPG.msg('[%1] - aktualizacja opisu nie powiodła się.' [_nazwa])
               ?}
            ?};
            ZAOH.ref()
         || __UPG.msg('[%1] - utworzenie pozycji nie powiodło się.' [_nazwa]);
            null()
         ?}
      ?}
   ";

: Nagłówek
_nag:=_add(,1,'Akta osobowe','Wszystkie załączniki związane z aktami osobowymi.','T');
{? _nag=null()
|| FUN.emsg('Utworzenie nagłówka akt osobowych nie powiodło się.'@);
   return()
?};

: Rekordy z częściami są obowiązkowe.
_cza:=_add(_nag,1,'Część A - Rekrutacja',
   'Oświadczenia lub dokumenty dotyczące danych osobowych, zgromadzone w związku z ubieganiem się o zatrudnienie, '
   'a także skierowania na badania lekarskie i orzeczenia lekarskie dotyczące wstępnych, okresowych i kontrolnych '
   'badań lekarskich.','T');
_czb:=_add(_nag,2,'Część B - Zatrudnienie',
   'Oświadczenia lub dokumenty dotyczące nawiązania stosunku pracy oraz przebiegu zatrudnienia pracownika.','T');
_czc:=_add(_nag,3,'Część C - Zwolnienie',
   'Oświadczenia i dokumenty związane z rozwiązaniem albo wygaśnięciem stosunku pracy.','T');
_czd:=_add(_nag,4,'Część D - Kary podlegające zatarciu',
   'Odpis zawiadomienia o ukaraniu oraz inne dokumenty związane z ponoszeniem przez pracownika '
   'odpowiedzialności porządkowej lub odpowiedzialności określonej w odrębnych przepisach, '
   'które przewidują zatarcie kary po upływie określonego czasu.','T');

{? _cza=null() | _czb=null() | _czc=null() | _czd=null()
|| 0
|| 1
?}


\zao_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Aktualizacja struktury i opisów akt osobowych - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja struktury i opisów akt osobowych'


\abstore_field
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.02]
:: OPIS: Aktualizacja pola AbStore w tabelach: M MGR KH GRKH
::----------------------------------------------------------------------------------------------------------------------
_res:=1;

M.cntx_psh();
M.index('AMGM');
M.prefix();
{? M.first()
||
   {! |?
      M.ABSTORE:='N';
      M.put();
      M.next()
   !}
?};
M.cntx_pop();
__UPG.msg('Zaktualizowano pola AbStore dla materiałów.');

MGR.cntx_psh();
MGR.index('KOD');
MGR.prefix();
{? MGR.first()
||
   {! |?
      MGR.ABSTORE:='N';
      MGR.put();
      MGR.next()
   !}
?};
MGR.cntx_pop();
__UPG.msg('Zaktualizowano pola AbStore dla grup materiałów.');

KH.cntx_psh();
KH.index('GLN');
KH.prefix();
{? KH.first()
||
   {! |?
      KH.ABSTORE:='N';
      KH.put();
      KH.next()
   !}
?};
KH.cntx_pop();
__UPG.msg('Zaktualizowano pola AbStore dla kontrahentów.');

GRKH.cntx_psh();
GRKH.index('NAZ');
GRKH.prefix();
{? GRKH.first()
||
   {! |?
      GRKH.ABSTORE:='N';
      GRKH.put();
      GRKH.next()
   !}
?};
GRKH.cntx_pop();
__UPG.msg('Zaktualizowano pola AbStore dla grup kontrahentów.');

_res


\abstore_field_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.02]
:: OPIS: Aktualizacja pola AbStore w tabelach: M MGR KH GRKH
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja pola AbStore dla materiałów oraz kontrahentów'


\bprel_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AWI] [19.02]
:: OPIS: Aktualizacja B_PREL.DESKTOP
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

_b_ele:=exec('FindInSet','#table','B_EVENT','TYP','nieokreślone','startowe',"B_EVENT.B_ELE",,,null());

B_PREL.cntx_psh();
B_PREL.index('ELSTART');
B_PREL.prefix(_b_ele,'T');
_loop:=B_PREL.first();
_size:=B_PREL.size();
_sact:=0;
{!
|? _loop
|!
   {? B_PREL.DESKTOP=''
   ||
      B_PREL.DESKTOP:='T';
      _sact+=B_PREL.put()
   ?};
   _loop:=B_PREL.next()
!};
B_PREL.cntx_pop();

B_ACTION.cntx_psh();
B_ACTION.index('MANUAL2');
B_ACTION.prefix('T','T','T');
_b_ele:={? B_ACTION.first() || B_ACTION.B_ELE || null() ?};
B_ACTION.cntx_pop();

BI_PREL.cntx_psh();
BI_PREL.use('bi_e____');
BI_PREL.index('ELSTATUS');
BI_TODO.cntx_psh();
BI_TODO.use('bi_t____');
BI_TODO.index('ELEMENT');
B_PREL.cntx_psh();
B_PREL.index('ELSTART');
B_PREL.prefix(_b_ele);
_loop:=B_PREL.first();
_size+=B_PREL.size();
{!
|? _loop
|!
   {? B_PREL.B_CAN=''
   ||
      B_PREL.B_CAN:='M';
      {? B_PREL.put()
      ||
         _sact+=1;
         BI_PREL.prefix(B_PREL.ref());
         _loop:=BI_PREL.first();
         {!
         |? _loop
         |!
            BI_TODO.prefix(BI_PREL.ref());
            _loop:=BI_TODO.first();
            {!
            |? _loop
            |!
               BI_TODO.JTERM:='T';
               _loop:=BI_TODO.put() & BI_TODO.next()
            !};
            _loop:=BI_PREL.next()
         !}
      ?}
   ?};
   _loop:=B_PREL.next()
!};
B_PREL.cntx_pop();
BI_TODO.cntx_pop();
BI_PREL.cntx_pop();

__UPG.msg('Zaktualizowano %1 z %2 zdarzeń startowych nieokreślonych i czynności manualnych.'[$_sact,$_size]);

_result


\bprel_act_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AWI] [19.02]
:: OPIS: Aktualizacja B_PREL.DESKTOP
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zdarzeń startowych nieokreślonych i czynności manualnych'


\s_zus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Aktualizacja słownika kodów ZUS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
S_ZUS.cntx_psh();
S_ZUS.prefix();

_sb:=S_ZUS.size();
{? exec('s_zus_import','personel',0)
|| _ret:=1;
   _sa:=S_ZUS.size();
   {? _sb=_sa
   || __UPG.msg('Słownik kodów ZUS nie wymagał aktualizacji.')
   || __UPG.msg('Aktualizacja słownika kodów ZUS zakończyła się sukcesem (liczba nowych pozycji: %1).' [$(_sa-_sb)])
   ?}
|| _ret:=-1;
   __UPG.msg('Aktualizacja słownika kodów ZUS nie powiodła się.')
?};

:: Uzupełnienie pola S_ZUS.LINIA (jeżeli istnieje).
{? var_pres('LINIA',S_ZUS)=27
|| S_ZUS.for_each("
      {? S_ZUS.LINIA=''
      || _linia:=S_ZUS.memo_txt(0,1,'OPIS');
         {? +_linia>255
         || _linia:=(252+_linia)+'...'
         ?};
         {? S_ZUS.LINIA<>_linia
         || S_ZUS.LINIA:=_linia;
            S_ZUS.put()
         ?}
      ?}
   ")
?};

S_ZUS.cntx_pop();
_ret


\s_zus_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Aktualizacja słownika kodów ZUS - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja słownika kodów ZUS'


\r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: R [19.02]
:: OPIS: Aktualizacja opisów składników list płac.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;

:: wczytaj rubryki standardowe
_BUF:=exec('buf_std_rub','rubryki');

: skonstruuj formułę porównującą
_len:=R.fld_num();
_cmp:='1';
{! _ii:=1.._len
|! _acr:=R.fld_acr(_ii);
   {? ',LP,NOTA,SYSTEM,IDADD,IDPUT,'*(','+_acr+',')=0
   || {? var_pres(_acr,_BUF)=var_pres(_acr,R)
      || _cmp+=' & _a.%1=_b.%1'[_acr]
      ?}
   ?}
!};
_cmp:=$_cmp;

R.cntx_psh();
R.trig_off('*','*');
R.index('RUBKOD');
R.prefix();
_loop:=_BUF.first();
{!
|? _loop
|! {? R.find_key(_BUF.RN)
   || {? R.SYSTEM<>'N'
      || {? _cmp(R,_BUF)
         || R.SYSTEM:='T';
            R.put()
         |? R.SYSTEM<>'X'
         || R.SYSTEM:='X';
            {? _ret<>-1
            || __UPG.msg('Wartość "Blokada" nie została ustawiona dla rubryk:')
            ?};
            __UPG.msg('%1 - %2'[$R.RN,R.RT]);
            _ret:=-1;
            R.put()
         ?}
      ?}
   ?};
   _loop:=_BUF.next()
!};
R.for_each("{? R.SYSTEM='' || R.SYSTEM:='N'; R.put() ?}",0);
R.trig_on('*','*');
R.cntx_pop();

{? _ret>=0
|| __UPG.msg('Ustawiono wartość "Blokada" dla wszystkich rubryk.')
?};

_ret


\r_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: R [19.02]
:: OPIS: Aktualizacja opisów składników list płac - opis.
::   WE:
::   WY: opis zadania a
::----------------------------------------------------------------------------------------------------------------------
'Standaryzacja opisów składników list płac'


\f_06
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [12.51]
:: OPIS: ER/WRT/XP/12.51/1811/0007
::       JPK_FA dla walut
::----------------------------------------------------------------------------------------------------------------------
exec('f_06','napraw_f');
__UPG.msg('Zmodyfikowana została struktura schematu plików JPK_FA.');
1


\f_06_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [12.51]
:: OPIS: ER/WRT/XP/12.51/1811/0007
::       JPK_FA dla walut  - opis
::----------------------------------------------------------------------------------------------------------------------
'JPK_FA dla walut'


\color
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [17.42]
:: OPIS: Aktualizacja schematów kolorów
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
exec('Color','#object');
exec('Legend','#object');
exec('odtw_kolor_iko','color',2);
__UPG.msg('Zostały zaaktualizowane schematy kolorów i ikon dla akcji Legenda.');
_res


\color_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [17.42]
:: OPIS: Aktualizacja schematów kolorów - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja schematu kolorów.'


\usp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Zmiany w obsłudze ustania stosunku pracy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Włączony "brudnopis"?
_p180:=-PAR_SKID.get(180)='t';

:: Formuły pomocnicze, traktowane jako kawałki kodu do sklejenia z innymi kawałkami kodu.
_efld_opt:="
   _tryb:={? var_pres('_a')=type_of('') & (_a='1' | _a='*') || _a || '1' ?};
   {? var_pres('_b')=type_of(H_UM)
   || _TAB:=_b
   |? _tryb='1'
   || _TAB:=cur_tab(1,1)
   || return(0)
   ?};
   {? var_pres('_c')=type_of('')
   || _we:=_c
   |? _tryb='1'
   || _we:=cur_win(1,1)
   || return(0)
   ?};
   {? var_pres('_d')=type_of('')
   || _fld:=_d
   |? _tryb='1'
   || _fld:=cur_afld()
   || _fld:=''
   ?};

   {? _fld='' | _fld='USPPPRAK'
   || _TAB.efld_opt(_we,'enable=%1,mark=%1' [$(H_UM.USPPPRAK().KOD='550')],H_UM,'USPPPRAT')
   ?};

   1
";

_edit:="
   _TAB.edit(""
      _chk:=
         __CHK.record2(
            H_UM,'USPKOD','Przyczyna rozwiązania'@,'USPPPRAK','Podstawa prawna (kod)'@,'USPSTR','Strona inicjująca'@
         );
      {? _chk<>''
      || return(_chk)
      |? H_UM.USPPPRAK().KOD='550' & (_chk:=__CHK.record2(H_UM,'USPPPRAT','Podstawa prawna (inna)'@))<>''
      || return(_chk)
      || {? H_UM.USPPPRAK().KOD<>'550'
         || H_UM.USPPPRAT:=''
         ?};
         ''
      ?}""
   )
";

_hum2tab:="
   _TAB.USPKOD:=H_UM.USPKOD().KOD;
   _TAB.USPPPRAK:=H_UM.USPPPRAK().KOD;
   _TAB.USPPPRAT:=H_UM.USPPPRAT;
   _TAB.USPSTR:=H_UM.USPSTR().KOD;
";

_hum2flda:="
   _flda.USPKOD:=H_UM.USPKOD;
   _flda.USPPPRAK:=H_UM.USPPPRAK;
   _flda.USPPPRAT:=H_UM.USPPPRAT;
   _flda.USPSTR:=H_UM.USPSTR;
";

_flda2hum:="
   H_UM.USPKOD:=_flda.USPKOD;
   H_UM.USPPPRAK:=_flda.USPPPRAK;
   H_UM.USPPPRAT:=_flda.USPPPRAT;
   H_UM.USPSTR:=_flda.USPSTR;
";

:: Formuła odpowiedzialna za aktualizację "czystopisu" (jeżeli pracujemy z brudnopisem) oraz tabeli P, jeżeli
:: poprawiona została ostatnia umowa (ostatni rekord H_UM) dla danego pracownika.
_update:=$(
   {? _p180
   || "  {? 1+H_UM.IDMOD<>'D'
         || _idlnk:=H_UM.IDLNK;
            {? var_pres('USPKOD',_flda)<>7
            || "+_hum2flda+"
               1
            ?};
            H_UM.cntx_psh();
            H_UM.use('h_um');
            H_UM.prefix();
            {? H_UM.seek(_idlnk)
            || "+_flda2hum+"
               H_UM.put()
            || undo()
            ?};
            H_UM.cntx_pop()
         ?};
      "
   || ""
   ?}+"
      _uid:=H_UM.uidref();
      H_UM.cntx_psh();
      H_UM.prefix(H_UM.P);
      {? H_UM.last() & _uid=H_UM.uidref() & H_UM.P().USPKOD<>H_UM.USPKOD
      || P.USPKOD:=H_UM.USPKOD;
         P.put()
      ?};
      H_UM.cntx_pop();
   "
);


:: Początek
P.cntx_psh();
P.prefix();
H_UM.cntx_psh();
{? _p180
|| H_UM.use('h_u_')
|| H_UM.use('h_um')
?};
H_UM.index('OD');
H_UM.prefix();
H.cntx_psh();
{? _p180
|| H.use('_his_')
|| H.use('_hist')
?};
H.index('HISTUM');
H.prefix();
UD_SKL.cntx_psh();
UD_SKL.prefix();
STN.cntx_psh();
STN.prefix();
CP.cntx_psh();
CP.prefix();
S_ZUS.cntx_psh();
S_ZUS.prefix();

:: Przygotowanie umów do prezentacji
_TAB:=sql(
   'select '
      'OSOBA.NAZWISKO, OSOBA.PIERWSZE, OSOBA.PESEL, '
      'P.DZA, P.T, '
      'H_UM.OD, H_UM.DO, RU.K, RU.O, SLO_NAZ.NAZWA as ROU, '
      'space(16) as WYDZIAL, space(80) as STN, space(9) as CP, '
      'USPKOD.KOD as USPKOD, USPPPRAK.KOD as USPPPRAK, H_UM.USPPPRAT, USPSTR.KOD as USPSTR, '
      'H_UM.REFERENCE as H_UM '
   'from '
      'H_UM join P using (H_UM.P,P.REFERENCE) join OSOBA using (P.OSOBA,OSOBA.REFERENCE) '
           'left join RU using (H_UM.RU,RU.REFERENCE) '
           'left join SLO_NAZ using (H_UM.ROU,SLO_NAZ.REFERENCE) '
           'left join S_ZUS as USPKOD using (H_UM.USPKOD,USPKOD.REFERENCE) '
           'left join S_ZUS as USPPPRAK using (H_UM.USPPPRAK,USPPPRAK.REFERENCE) '
           'left join S_ZUS as USPSTR using (H_UM.USPSTR,USPSTR.REFERENCE) '
   'where '
      'P.FIRMA=:_a and '
      'H_UM.ROU is not null '
   'order by '
      '1,2,3',
   exec('ref_firma','ustawienia')
);

:: Formuły obsługi pól
_TAB.fld_fml('T','DISPLAY_FORMAT',P.fld_fml('T','*DISPLAY_FORMAT'));

:: Uzupełnienie pewnych informacji
{? _TAB.first()
|| {!
   |? {? H_UM.seek(_TAB.H_UM)
      || H.prefix(H_UM.ref());
         {? H.last()
         || _TAB.WYDZIAL:=H.WYDZIAL().SYMBOL;
            _TAB.STN:=H.ST().ST;
            _TAB.CP:=H.CP().CP;
            _TAB.put()
         ?}
      ?};
      _TAB.next()
   !}
?};

:: Okno wertowania
_ws:=_TAB.mk_sel('Umowy'@,,,,,,,,'U');
_TAB.win_fld(_ws,,'T',,,-6,,,'Numer teczki'@,,MS.comment(P,'T'));
_TAB.win_fld(_ws,,'NAZWISKO',,,20,,,MS.name(OSOBA,'NAZWISKO'),,MS.comment(OSOBA,'NAZWISKO'));
_TAB.win_fld(_ws,,'PIERWSZE',,,10,,,MS.name(OSOBA,'PIERWSZE'),,MS.comment(OSOBA,'PIERWSZE'));
_TAB.win_fld(_ws,,'PESEL',,,,,,MS.name(OSOBA,'PESEL'),,MS.comment(OSOBA,'PESEL'));
_TAB.win_fld(_ws,,'DZA',,,-10,,,'Pierwsza umowa'@,,'Data zawarcia pierwszej umowy'@);
_TAB.win_fld(_ws,,'OD',,,-10,,,'Umowa od'@,,MS.comment(H,'OD'));
_TAB.win_fld(_ws,,'DO',,,-10,,,'Umowa do'@,,MS.comment(H,'DO'));
_TAB.win_fld(_ws,,'WYDZIAL',,,-16,,,MS.name(P,'WYDZIAL'),,MS.comment(P,'WYDZIAL'));
_TAB.win_fld(_ws,,'STN',,,15,,,MS.name(H,'ST'),,MS.comment(H,'ST'));
_TAB.win_fld(_ws,,'CP',,,-9,,,MS.name(H,'CP'),,MS.comment(H,'CP'));
_TAB.win_fld(_ws,,'ROU',,,20,,,'*'+'Przyczyna rozwiązania'@,,'Dotychczasowa przyczyna rozwiazania umowy'@);
_TAB.win_fld(_ws,,'USPKOD',,,-4,,,'Przyczyna rozwiązania'@,,MS.comment(H_UM,'USPKOD'));
_TAB.win_fld(_ws,,'USPPPRAK',,,-4,,,'Podstawa prawna'@,,MS.comment(H_UM,'USPPPRAK'));
_TAB.win_act(_ws,,'Formuła','Popraw'@@,,'Poprawienie bieżącego zapisu'@,$("
   _TAB:=cur_tab(1,1);
   {? H_UM.seek(_TAB.H_UM)
   || _flda:=params_get().flda;
      {? _TAB.sel_size()
      || do();
         "+_flda2hum+"
         H_UM.put();
         "+_hum2tab+"
         _TAB.put();
         "+_update+"
         end()
      || obj_del(_TAB);
         _a:='*';
         _b:=cur_tab(1,1);
         _c:=_b.win_edit('?');
         "+_efld_opt+";
         {? "+_edit+"
         || {? _TAB.USPKOD<>H_UM.USPKOD().KOD |
               _TAB.USPPPRAK<>H_UM.USPPPRAK().KOD | _TAB.USPPPRAT<>H_UM.USPPPRAT |
               _TAB.USPSTR<>H_UM.USPSTR().KOD
            || do();
               H_UM.put();
               "+_hum2tab+"
               _TAB.put();
               "+_update+"
               end()
            ?}
         ?}
      ?}
   ?}"),,
   1,
   1,$("
      _par:=params_get();
      _TAB:=cur_tab(1,1);
      _we:=_par.we;
      _TAB.win_edit(_we[2]);
      H_UM.blank();
      _ret:="+_edit+";
      {? _ret
      || _flda:=_par.flda;
         "+_hum2flda+"
         ~~
      ?};
      _TAB.win_edit(_we[1]);
      _ret
   "),
   "",
   'P'
);
_TAB.win_btn(_ws,'text=%1' ['Popraw'@],'menu:P');
_TAB.win_act(_ws,,'Szukaj');
_TAB.win_act(_ws,,'Kolejność');
_TAB.win_act(_ws,,'Rekord',,,,"~H_UM.seek(cur_tab(1,1).H_UM)");
_TAB.win_act(_ws,,'Wyświetl',,,,$("
   _a:='*';
   _b:=cur_tab(1,1);
   _c:=_b.win_edit('?');
   "+_efld_opt+";
   _TAB.display()
   ")
);
_TAB.win_sel(_ws);

:: Okna redagowania
::    1 - podstawowe
::    2 - do obsługi akcji grupowej
_we:=obj_new(2);
{! _lp:=1 .. 2
|! _we[_lp]:=_TAB.mk_edit('Umowa'@);
   {? _lp=1
   || _TAB.win_esep(_we[_lp],'Dane osobowe'@);
      _TAB.win_efld(_we[_lp],,'T',,,16,,1,'Numer teczki'@,,MS.comment(P,'T'));
      _TAB.win_efld(_we[_lp],,'NAZWISKO',,,30,,1,MS.name(OSOBA,'NAZWISKO'),,MS.comment(OSOBA,'NAZWISKO'));
      _TAB.win_efld(_we[_lp],,'PIERWSZE',,,30,,1,MS.name(OSOBA,'PIERWSZE'),,MS.comment(OSOBA,'PIERWSZE'));
      _TAB.win_efld(_we[_lp],,'PESEL',,,16,,1,MS.name(OSOBA,'PESEL'),,MS.comment(OSOBA,'PESEL'));
      _TAB.win_esep(_we[_lp],'Umowa'@);
      _TAB.win_efld(_we[_lp],,'OD',,,,,1,'Umowa od'@,,MS.comment(H,'OD'));
      _TAB.win_efld(_we[_lp],,'DO',,,,,1,'Umowa do'@,,MS.comment(H,'DO'));
      _TAB.win_efld(_we[_lp],,'WYDZIAL',,,16,,1,MS.name(P,'WYDZIAL'),,MS.comment(P,'WYDZIAL'));
      _TAB.win_efld(_we[_lp],,'STN',,,30,,1,MS.name(H,'ST'),,MS.comment(H,'ST'));
      _TAB.win_efld(_we[_lp],,'CP',,,16,,1,MS.name(H,'CP'),,MS.comment(H,'CP'));
      _TAB.win_efld(_we[_lp],,'ROU',,,30,,1,'*'+'Przyczyna rozwiązania'@,,'Dotychczasowa przyczyna rozwiazania umowy'@)
   ?};
   _TAB.win_esep(_we[_lp],'Ustanie stosunku pracy'@);
   _TAB.win_efld(_we[_lp],H_UM,'USPKOD','KOD','S_ZUS',,,,'Przyczyna rozwiązania'@,,MS.comment(H_UM,'USPKOD'));
   _TAB.win_efld(_we[_lp],H_UM,'USPKOD','LINIA',,27,,1,,1);
   _TAB.win_efld(_we[_lp],H_UM,'USPPPRAK','KOD','S_ZUS',,,,'Podstawa prawna (kod)'@,,MS.comment(H_UM,'USPPPRAK'));
   _TAB.win_efld(_we[_lp],H_UM,'USPPPRAK','LINIA',,27,,1,,1);
   _TAB.win_efld(_we[_lp],H_UM,'USPPPRAT',,,30,,,'Podstawa prawna (inna)'@,,MS.comment(H_UM,'USPPPRAT'));
   _TAB.win_efld(_we[_lp],H_UM,'USPSTR','KOD','S_ZUS',,,,MS.name(H_UM,'USPSTR'),,MS.comment(H_UM,'USPSTR'));
   _TAB.win_efld(_we[_lp],H_UM,'USPSTR','LINIA',,27,,1,,1);
   exec('ok_esc','#window',_TAB,_we[_lp]);

   _TAB.efld_opt(_we[_lp],'mark=1',H_UM,'USPKOD','KOD');
   _TAB.efld_opt(_we[_lp],'mark=1',H_UM,'USPPPRAK','KOD');
   _TAB.efld_opt(_we[_lp],'mark=1',H_UM,'USPSTR','KOD');
   _efld_opt('*',_TAB,_we[_lp])
!};
_TAB.win_edit(_we[1]);

_usppprak_ae:=H_UM.fld_fml('USPPPRAK','AFTER_EDIT',_efld_opt);
params_set(
   'we',_we,
   'flda',obj_new('USPKOD','USPPPRAK','USPPPRAT','USPSTR')
);

P.trig_off('put','*');
H_UM.trig_off('put','*');
_TAB.select();
H_UM.trig_on('put','*');
P.trig_on('put','*');

H_UM.fld_fml('USPPPRAK','AFTER_EDIT',_usppprak_ae);

S_ZUS.cntx_pop();
CP.cntx_pop();
STN.cntx_pop();
UD_SKL.cntx_pop();
H.cntx_pop();
H_UM.cntx_pop();
P.cntx_pop();

{? FUN.ask(
      'Czy wykonane zostały wszystkie prace związane ze zmianą sposobu raportowania do ZUS ustania stosunku pracy?\n'
      '\n'
      'Tak - Formuła potransferowa zostanie uznana za zakończoną. Jej ponowne uruchomienie nie będzie możliwe.\n'
      'Nie - Nie wszystkie prace zostały wykonane. Formuła potransferowa będzie mogła być ponownie uruchomiona.'@
   )
|| __UPG.msg('Użytkownik %1 potwierdził wykonanie wszystkich prac.' [exec('operatorKod','#users')]);
   1
|| __UPG.msg('Prace będę jeszcze kontynuowane.');
   0
?}


\usp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Zmiany w obsłudze ustania stosunku pracy - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Zmiany w obsłudze ustania stosunku pracy'


\logiSTAT_REJ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: ustawia znacznik STAT_REJ dla tabel logistycznych: ZDP_NAG
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
exec('psh_cntx','powdok');

:: tabele: ZD_NAG
_msk:=ZDP_NAG.names();
_msk.clear();
{? _msk.first()
|| {!
   |? exec('openzd','open_tab',_msk.NAME+3);
      echo('Aktualizacja: potwierdzeń zamówień dostaw ... %1'@[(_msk.NAME+3)]);
      ZDP_NAG.for_each("_put:=0;
                        __lrec+=1;
                        {? ZDP_NAG.STAT_REJ=''
                        || {? ZDP_NAG.AKC='T'
                           || ZDP_NAG.STAT_REJ:='T'
                           || ZDP_NAG.STAT_REJ:='N'
                           ?};
                           _put:=1
                        ?};
                        {? _put || {? ZDP_NAG.put(1) || __lmod+=1 ?} ?}");
      echo();
      _msk.next()
   !}
?};
obj_del(_msk);

exec('pop_cntx','powdok');
__UPG.msg('Zaktualizowano znacznik stanu potwierdzeń zamówień dostaw.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\logiSTAT_REJ_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: ustawia znacznik STAT_REJ dla tabel logistycznych: ZDP_NAG - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja znaczników potwierdzeń zamówień dostaw'


\sam_el
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.02]
:: OPIS: Ustawia znacznik SAM_EL dla tabeli SRSR: ZDP_NAG
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
SRSR.cntx_psh();
_name:=SRSR.names();
{? _name.first()
|| echo('Aktualizacja tabeli środków trwałych...'@);
   {! |?
      SRSR.use(_name.NAME);
      SRSR.prefix();
      {? SRSR.first()
      || SRSR.for_each("{? SRSR.SAM_EL='' || SRSR.SAM_EL:='N'; SRSR.put() ?}",0)
      ?};
      _name.next()
   !};
   echo()
?};
SRSR.cntx_pop();
__UPG.msg('Zaktualizowano znacznik: Czy samochód elektryczny, dla środków trwałych.');
_res


\sam_el_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.02]
:: OPIS: Ustawia znacznik SAM_EL dla tabeli: SRSR - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie znacznika: Czy samochód elektryczny dla środków trwałych.'


\uzup_finfo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.02]
:: OPIS: Uzupełnienie podstawowych parametrów środków trwałych, zmiany limitów dotyczących amortyzacji,
::       formuł na numerację
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
exec('init_wer','#stalesys');
exec('stalesys','#stalesys');


FINFO.LIMIT_OS:=150000;
FINFO.LIMIT_OE:=225000;
FINFO.W:=10000;
FINFO.NRI_REDP:='exec(\'redp_standard\',\'fst\')';

exec('zapisz','#stalesys',date(2019,1,1),FINFO,'LIMIT_OS');
exec('zapisz','#stalesys',date(2019,1,1),FINFO,'LIMIT_OE');
exec('zapisz','#stalesys',date(2018,1,1),FINFO,'W');
exec('zapisz','#stalesys',1,FINFO,'NRI_REDP');

__UPG.msg('Uzupełniono podstawowe parametry dla środków trwałych.');
_res


\uzup_finfo_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.02]
:: OPIS: Uzupełnienie podstawowych parametrów środków trwałych, zmiany limitów dotyczących amortyzacji - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie podstawowych parametrów dla środków trwałych - limity dotyczące amortyzacji, formuły dla numeracji.'


\httpbank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.02]
:: OPIS: Aktualizacja adresu serwera NBP z danymi banków
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
exec('init_wer','#stalesys');
exec('stalesys','#stalesys');

HINFO.HTTPBANK:='https://ewib.nbp.pl/faces/PlainDok?dokNazwa=';
exec('zapisz','#stalesys',date(),HINFO,'HTTPBANK');

__UPG.msg('Zaktualizowano adres serwera NBP z danymi banków.');
_res


\httpbank_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.02]
:: OPIS: Aktualizacja adresu serwera NBP z danymi banków - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja adresu serwera NBP z danymi banków.'


\par6_plat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [19.02]
:: OPIS: Dodanie nowego parametru w słownikach opartych na wzorcu ~Płatności
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
RS.index('RS'); RS.prefix();
{? RS.find_key('~Płatności')
|| exec('new_par','slo_slu',RS.ref(),6,'Termin płat. liczony od daty?','S_O_W')
?};
__UPG.msg('Dodano parametr 6 w słownikach opartych na wzorcu ~Płatności.');
_res


\par6_plat_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [19.02]
:: OPIS: Dodanie nowego parametru w słownikach opartych na wzorcu ~Płatności - opis
::----------------------------------------------------------------------------------------------------------------------
'Dodanie nowego parametru w słownikach opartych na wzorcu ~Płatności.'


\KST_ZUS_OSW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.02]
:: OPIS: Aktualizacja stałych systemu - data złożenia oświadczenia ZUS OSW w KST.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('add_acr','#stalesys','ZUSOSW','Data złożenia oświadczenia','T','N','T','KST','PPL');
__UPG.msg('Dodano pole "Data złożenia oświadczenia" do struktury stałych systemu.');
1


\KST_ZUS_OSW_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.02]
:: OPIS: Aktualizacja stałych systemu - data złożenia oświadczenia ZUS OSW w KST - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja stałych systemu - data złożenia oświadczenia ZUS OSW.'


\KART_DOD_ZUS_RIA
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.02]
:: OPIS: Dodanie defnicji kartoteki dodatkowej do przechowywania informacji o przekazanym raporcie ZUS RIA.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=-1;
_symbol:='ZUS_RIA';

KART_DEF.cntx_psh();
KART_DEF.clear();
KART_DEF.index('SYMBOL');
{? KART_DEF.find_key(_symbol,_symbol)
|| __UPG.msg('Kartoteka dodatkowa "Informacja o przekazaniu raportu ZUS RIA" już istnieje.');
   _result:=1
|| KART_DEF.blank();
   KART_DEF.SYMBOL:=_symbol;
   KART_DEF.NAZWA:='Informacja o przekazaniu raportu ZUS RIA';
   KART_DEF.WER:='KTOD';
   KART_DEF.OPIS:='Informacje dodatkowe';
   KART_DEF.OD:='Data przekazania';
   KART_DEF.ODW:=0;
   KART_DEF.KT:='Rodzaj informacji';
   KART_DEF.KTW:=0;
   KART_DEF.CZYWART:='';
   KART_DEF.memo_set(
      '\'P\'|\'Informacja została przygotowana\'\n'+
      '\'W\'|\'Informacja została wysłana\'\n','F3');

   {? KART_DEF.add(1)
   || KART_DEF.memo_put(,'F3');
      __UPG.msg('Kartoteka dodatkowa "Informacja o przekazaniu raportu ZUS RIA" została dodana.');
      _result:=1
   || __UPG.msg('Dodanie kartoteki dodatkowej "Informacja o przekazaniu raportu ZUS RIA" zakończone niepowodzeniem.')
   ?}
?};
KART_DEF.cntx_pop();
_result


\KART_DOD_ZUS_RIA_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.02]
:: OPIS: Dodanie defnicji kartoteki dodatkowej do przechowywania informacji o przekazanym raporcie ZUS RIA - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Dodanie defnicji kartoteki dodatkowej do przechowywania informacji o przekazanym raporcie ZUS RIA'


\params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.02]
:: OPIS: Aktualizacja parametrów aplikacyjnych
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
exec('init','params');
__UPG.msg('Zaktualizowano parametry aplikacyjne.');
_res


\params_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.02]
:: OPIS: Aktualizacja parametrów aplikacyjnych - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja parametrów aplikacyjnych.'


\del_ocr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Usuwa parametry związane z OCR-em
::----------------------------------------------------------------------------------------------------------------------
_del:=0;
PARAMS.cntx_psh();
PARAMS.index('UNIQ'); PARAMS.prefix(455);
{? PARAMS.first()
|| {!
   |? {? PARAMS.OPIS='Uruchomić moduł rozpoznawania OCR podczas skanowania zbiorczego?'
      || _del:=1;
         PARAMS.del()
      || PARAMS.next()
      ?}
   !}
?};
PARAMS.cntx_pop();
_wz:='~Płatności';
do();
RS.cntx_psh();
RS.index('RS');
RS.prefix(_wz,);
{? RS.first()
|| ZR_DSLO.cntx_psh();
   ZR_DSLO.index('WZ_NR');
   ZR_DSLO.prefix(RS.ref(),3);
   {? ZR_DSLO.first() & ZR_DSLO.NAZ='Płatność rozpoznawana w OCR'
   || SLU.cntx_psh();
      SLU.index('WZORZEC'); SLU.prefix(_wz,);
      {? SLU.first()
      || SLO.cntx_psh();
         SLO.index('SL');
         ZR_SLO.cntx_psh();
         ZR_SLO.index('SLO_NR');
         ZR_SLO.prefix();
         {!
         |? SLO.prefix(SLU.ref());
            {? SLO.first()
            || {!
               |? {? ZR_SLO.find_key(SLO.ref(),3) || ZR_SLO.del() ?};
                  SLO.next()
               !}
            ?};
            SLU.next()
         !};
         ZR_SLO.cntx_pop();
         SLO.cntx_pop()
      ?};
      SLU.cntx_pop();
      ZR_DSLO.del();
      _del:=1
   ?};
   ZR_DSLO.cntx_pop()
?};
RS.cntx_pop();
_del:=end() & _del;
{? _del
|| __UPG.msg('Usunięto parametry związane z OCR-em.')
|| __UPG.msg('Brak parametrów związanych z OCR-em.')
?};
1


\del_ocr_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Usuwa parametry związane z OCR-em - opis
::----------------------------------------------------------------------------------------------------------------------
'Usunięcie parametrów związanych z OCR-em.'


\edeklaracje_2019
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.02]
:: OPIS: Dodanie nowych e-deklaracji obowiazujacych od 01.01.2019 dotyczące przychodów od 01.01.2018
::----------------------------------------------------------------------------------------------------------------------
_dod_ver:="
   VAT_VER.index('VER_OD'); VAT_VER.prefix(_a,_c,_c,_b,_d);
   _jest:=VAT_VER.first();
   {? ~_jest
   || _old:={? _a='FKS' || 'FIKS' |? _a='PPL' || 'KALI' || '' ?};
      VAT_VER.prefix(_old,_c,_c,_b,_d);
      _jest:=VAT_VER.first()
   ?};
   {? _jest
   || _add:=0
   || _add:=1;
      VAT_VER.blank();
      VAT_VER.SYSTEM:=_a;
      VAT_VER.OD:=_b;
      VAT_VER.NAZWA:=_c;
      VAT_VER.NR:=_d
   ?};
   {? _<6 || _f:='' ?};
   {? _<5 || _e:=0 ?};
   _put:=0;
   {? VAT_VER.NRF<>_e || VAT_VER.NRF:=_e; _put+=1 ?};
   {? VAT_VER.WIERSZ<>_f || VAT_VER.WIERSZ:=_f; _put+=1 ?};
   VAT_VER.prefix();
   {? _add || VAT_VER.add(1) |? _put || VAT_VER.put(1) ?}
";
_dom:=BPMN.SYM_DOM;
BPMN.SYM_DOM:='PPL';
SKID.ISTDEF:='D';
{? _dod_ver('PPL',date(2018,12,6),'PIT4R',8,8,',3,4,')
|| __UPG.msg('Dodano 8 wersja e-deklaracji PIT4R obowiązująca od dnia 2019.01.01. dla przychodów od 2018.01.01')
|| __UPG.msg('Brak aktualizacji, 8 wersja e-deklaracji PIT4R już istnieje.')
?};
{? _dod_ver('PPL',date(2018,1,1),'PIT8AR',8,7,',1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,')
|| __UPG.msg('Dodano 8 wersja e-deklaracji PIT8AR obowiązująca od dnia 2019.01.01. dla przychodów od 2018.01.01')
|| __UPG.msg('Brak aktualizacji, 8 wersja e-deklaracji PIT8AR już istnieje.')
?};
{? _dod_ver('PPL',date(2018,1,1),'PIT11',9,24,',2,3,4,5,6,7,8,9,10,')
|| __UPG.msg('Dodano 9 wersja e-deklaracji PIT11 obowiązująca od dnia 2019.01.01. dla przychodów od 2018.01.01')
|| __UPG.msg('Brak aktualizacji, 9 wersja e-deklaracji PIT11 już istnieje.')
?};
{? _dod_ver('PPL',date(2018,1,1),'PIT8C',9,9)
|| __UPG.msg('Dodano 9 wersja e-deklaracji PIT8C obowiązująca od dnia 2019.01.01. dla przychodów od 2018.01.01')
|| __UPG.msg('Brak aktualizacji, 9 wersja e-deklaracji PIT8C już istnieje.')
?};
{? _dod_ver('PPL',date(2018,1,1),'IFT1',14,14,',1,2,3,4,5,6,7,8,9,10,')
|| __UPG.msg('Dodano 14 wersja e-deklaracji IFT1 obowiązująca od dnia 2019.01.01. dla przychodów od 2018.01.01')
|| __UPG.msg('Brak aktualizacji, 14 wersja e-deklaracji IFT1 już istnieje.')
?};
{? _dod_ver('PPL',date(2018,1,1),'IFT1R',14,14,',1,2,3,4,5,6,7,8,9,10,')
|| __UPG.msg('Dodano 14 wersja e-deklaracji IFT1R obowiązująca od dnia 2019.01.01. dla przychodów od 2018.01.01')
|| __UPG.msg('Brak aktualizacji, 14 wersja e-deklaracji IFT1R już istnieje.')
?};
::import poprawnych struktur e-deklaracji PIT-4R wersja 8
{? exec('edek_stru','edeklar','PIT4R',8,'pit-4r8_v1.dfg')
|| __UPG.msg('Dodano schemat 8 wersji e-deklaracji PIT4R.')
|| __UPG.msg('Brak aktualizacji, schemat 8 wersji e-deklaracji PIT4R już istnieje.')
?};
::import poprawnych struktur e-deklaracji PIT8AR wersja 8
{? exec('edek_stru','edeklar','PIT8AR',8,'pit-8ar8_v1.dfg')
|| __UPG.msg('Dodano schemat 8 wersji e-deklaracji PIT8AR.')
|| __UPG.msg('Brak aktualizacji, schemat 8 wersji e-deklaracji PIT8AR już istnieje.')
?};
::import poprawnych struktur e-deklaracji PIT11 wersja 9
{? exec('edek_stru','edeklar','PIT11',9,'pit-11_24_v1.dfg')
|| __UPG.msg('Dodano schemat 9 wersji e-deklaracji PIT11.')
|| __UPG.msg('Brak aktualizacji, schemat 9 wersji e-deklaracji PIT11 już istnieje.')
?};
::import poprawnych struktur e-deklaracji PIT8C wersja 9
{? exec('edek_stru','edeklar','PIT8C',9,'pit-8c-9v1.dfg')
|| __UPG.msg('Dodano schemat 9 wersji e-deklaracji PIT8C.')
|| __UPG.msg('Brak aktualizacji, schemat 9 wersji e-deklaracji PIT8C już istnieje.')
?};
::import poprawnych struktur e-deklaracji IFT1 wersja 14
{? exec('edek_stru','edeklar','IFT1',14,'ift-1-14_v1.dfg')
|| __UPG.msg('Dodano schemat 14 wersji e-deklaracji IFT1.')
|| __UPG.msg('Brak aktualizacji, schemat 14 wersji e-deklaracji IFT1 już istnieje.')
?};
::import poprawnych struktur e-deklaracji IFT1R wersja 14
{? exec('edek_stru','edeklar','IFT1R',14,'ift-1r-14_v1.dfg')
|| __UPG.msg('Dodano schemat 14 wersji e-deklaracji IFT1R.')
|| __UPG.msg('Brak aktualizacji, schemat 14 wersji e-deklaracji IFT1R już istnieje.')
?};
BPMN.SYM_DOM:=_dom;
1


\edeklaracje_2019_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.02]
:: OPIS: Dodanie nowych e-deklaracji - opis
::----------------------------------------------------------------------------------------------------------------------
'Dodanie nowych wersji e-deklaracji 2019'


\nbp_kursy_fsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.02]
:: OPIS: Aktualizacja specyfikacji importu kursów walut z NBP
::----------------------------------------------------------------------------------------------------------------------
exec('spc_imp','homebank','10100000_NBP kursy walut (Internet).fsp',1,1);
exec('spc_imp','homebank','10100000_NBP kursy walut (Proces).fsp',1,1);
__UPG.msg('Zaktualizowano specyfikacje importu kursów walut z NBP.');
1


\nbp_kursy_fsp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.02]
:: OPIS: Aktualizacja specyfikacji importu kursów walut z NBP - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja specyfikacji importu kursów walut z NBP'


\akt_woz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.02]
:: OPIS: Aktualizacja "personelowego" wniosku o zatrudnienie (w obiegu)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_msg:="
{? _a
|| __UPG.msg('Zakończono aktualizację wniosku: \"%1\".'@[_b])
|| __UPG.msg('Nie udało się zaktualizować wniosku: \"%1\".'@[_b])
?}
";

_dalej:=1;
_typobieg:=exec('add','typ_ob','Obieg wniosków');
_nazwa:=exec('nazwa_woz','obiegi');
ETYPY.cntx_psh();
ETYPY.index('UNIK');
ETYPY.prefix(_typobieg,_nazwa,_nazwa);
{? ETYPY.first()
|| _nn:=50+(ETYPY.NAZWA+ETYPY.uidref());
   ETYPY.NAZWA:=_nn;
   ETYPY.cntx_psh();
   ETYPY.prefix();
   _dalej:=ETYPY.put(1);
   ETYPY.cntx_pop()
?};
ETYPY.cntx_pop();
_msg(_dalej & exec('imp_wn','sch_imp',_nazwa,1,0),_nazwa);
1


\akt_woz_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.42]
:: OPIS: Aktualizacja "personelowego" wniosku o zatrudnienie (w obiegu) - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja wniosku o zatrudnienie'


\stanowiska
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.02]
:: OPIS: Uzupełnienie wartości w nowych polach do stanowiska pracy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
STN.cntx_psh();
STN.trig_off('*','*');
STN.prefix();
{? STN.first()
|| {!
   |? _put:=0;
      {? STN.N=''
      || STN.N:='N';
         _put:=1
      ?};
      {? STN.G=''
      || STN.G:='N';
         _put:=1
      ?};
      {? _put & ~STN.put()
      || _result:=-1
      ?};
      STN.next()
   !}
?};
STN.trig_on('*','*');
STN.cntx_pop();
{? _result=-1
|| __UPG.msg('Nie udało się uzupełnić wartości w nowych polach przy wszystkich stanowiskach pracy.')
|| __UPG.msg('Udało się uzupełnić wartości w nowych polach przy wszystkich stanowiskach pracy.')
?};
_result


\stanowiska_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.02]
:: OPIS: Uzupełnienie wartości w nowych polach do stanowiska pracy. - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie wartości w nowych polach do stanowiska pracy'


\rubatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.02]
:: OPIS: Uzupełnienie atrybutów rubryk płacowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: ZUS
exec('add_attr','rubatr',100,1005,'Inne składniki wynagrodzenia wykazywane do ZUS',1,
   'Inne składniki wynagrodzenia wykazywane w raportach do ZUS.'
);
exec('add_attr','rubatr',1005,10051,'Wypłacane obok wynagrodzenia lub zasiłku',1,
   'Przychód wypłacony obok wynagrodzenia lub zasiłku za czas niezdolności do pracy, który nie stanowił '+
   'podstawy wymiaru składek na ubezpieczenia emerytalne i rentowe.'
);
exec('add_attr','rubatr',1005,10052,'Przychód wypłacany za poprzedni rok',1,
   'Przychód wypłacony za poprzedni rok, który stanowi podstawę wymiaru składek na ubezpieczenia emerytalne '+
   'i rentowe (należy wskazać składniki płacowe, które zawsze wypłacane są za poprzedni rok i nie można ustalić ich '+
   'w inny sposób).'
);

:: 19.02_06 ERP-7
exec('add_use','rubatr',191,3,5,25,26,27,28,32,33);
exec('add_attr','rubatr',100261,1002611,'Świadczenia wypłacone - zasiłki',1,
   'Świadczenia wypłacone, uwzględnione przy przygotowaniu danych do RP-7.',
   ,465,468,510,512,514,516,523,529);
exec('add_attr','rubatr',100261,1002612,'Świadczenia wypłacone - rehabilitacyjne',1,
   'Świadczenia wypłacone, uwzględnione przy przygotowaniu danych do RP-7.',
   ,531,533);
exec('add_attr','rubatr',100262,1002621,'Wyrównania wypłaconych świadczeń - zasiłki',1,
   'Wyrównania świadczeń, uwzględnione przy przygotowaniu danych do RP-7.',
   ,467,469,470,511,513,515,517,524,530,532,7017,7018,7071);
exec('add_attr','rubatr',100262,1002622,'Wyrównania wypłaconych świadczeń - rehabilitacyjne',1,
   'Wyrównania świadczeń, uwzględnione przy przygotowaniu danych do RP-7.',
   ,537);
exec('add_attr','rubatr',1002,10027,'Składniki wypłacone obok wynagrodzenia',1,
   'Kwoty składników wynagrodzenia za dany rok kalendarzowy, wypłaconych obok wynagrodzenia za czas niezdolności do '
   'pracy, zasiłku chorobowego, macierzyńskiego, opiekuńczego, świadczenia rehabilitacyjnego, które w okresie '
   'pobierania tego wynagrodzenia lub zasiłku nie stanowiły podstawy wymiaru składek na ubezpieczenie społeczne/ '
   'ubezpieczenia emerytalne i rentowe');
exec('add_attr','rubatr',1002,10028,'Przychód z ubezpieczeniem wypadkowym',1,
   'Kwoty przychodu należnego za dany rok kalendarzowy, który nie stanowił podstawy wymiaru składek na '
   'ubezpieczenia emerytalne i rentowe, a stanowił podstawę wymiaru składek na ubezpieczenie wypadkowe');
exec('add_attr','rubatr',1002,10029,'Inne należności',1,
   'Kwoty innych wypłaconych należności, które nie zostały wykazane w kolumnach 2–6 i ich rodzaj – o ile są one '
   'wliczane do podstawy wymiaru świadczeń. Przykład: kwota rekompensaty wypłaconej pracownikowi z tytułu podwyżki '
   'cen na artykuły żywnościowe, opał i energię, która była wypłacana obok wynagrodzenia lub zasiłku z '
   'ubezpieczenia społecznego w okresie od 1 września 1981 r. do 30 czerwca 1987 r., '
   'kwota rekompensaty pieniężnej ustalonej z tytułu okresowego niepodwyższania płac w sferze budżetowej.');

__UPG.msg('Zaktualizowano atrybuty składników płacowych');

1


\rubatr_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.02]
:: OPIS: Uzupełnienie atrybutów rubryk płacowych - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie atrybutów rubryk płacowych'


\stalesys_ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Aktualizacja stałych systemu
::----------------------------------------------------------------------------------------------------------------------
exec('init_wer','#stalesys');
__UPG.msg('Zaktualizowano stałe systemu.');
1


\stalesys_ini_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Aktualizacja stałych systemu - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja stałych systemu'


\zws_par_pstn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Formuła dodaje czynność ZWS_PAR_PSTN do odpowiednich ról.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cr:=''+"'PKD_EZK_RPZA','PKD_ZAT_PZAT','PKD_DOS_PRSW','PKD_ZAT_ZRDZ','PKD_ZAT_ZRDK','PKD_ZAT_ZRPT','PKD_ZAT_ZRCP'";
_uid:='ZWS_PAR_PSTN';

_ROLE:=sql(
   'select distinct B_ROLE.NAME '
   'from B_ACTROL join B_ACTION using (B_ACTROL.B_ACTION,B_ACTION.REFERENCE) '
                 'join B_ROLE using (B_ACTROL.B_ROLE,B_ROLE.REFERENCE) '
   'where B_ACTROL.FIRMA=:_a and B_ACTION.UID in (:_b) '
   'order by 1',
   exec('ref_firma','ustawienia'),_cr
);

{? type_of(_ROLE)=type_of(~~)
|| __UPG.msg('Przygotowanie listy ról, do których należy dodać czynność %1 nie powiodło się.' [_uid]);
   return(0)
?};

{? _ROLE.first()
|| _ret:=1;
   {!
   |? {? exec('add_actrol_one','#b_role',_ROLE.NAME,_uid)
      || __UPG.msg('Czynność przypisano do roli "%1".' [_ROLE.NAME])
      || __UPG.msg('Przypisanie czynności do roli "%1" nie powiodło się.' [_ROLE.NAME]);
         _ret:=-1
      ?};
      _ROLE.next()
   !};
   _ret
|| __UPG.msg('W systemie brak ról, z uprawnieniami do czynności referencyjnych.');
   1
?}


\zws_par_pstn_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Formuła dodaje czynność ZWS_PAR_PSTN do odpowiednich ról - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Przypisanie czynności "ZWS_PAR_PSTN - Lista wszystkich stanowisk" do odpowiednich ról'


\jpk_url
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Aktualizacja lokalizacji schematów JPK
::----------------------------------------------------------------------------------------------------------------------
exec('jpk_url1','upgrade_1902','FA','JPK_FA(1)_v1-0',
   'https://www.gov.pl/documents/2034621/2182793/Schemat_JPK_FA%281%29_v1-0.xsd/c048cae9-264e-512f-51fe-bcea7fdf9de0'
);
exec('jpk_url1','upgrade_1902','KR','JPK_KR(1)_v1-0',
   'https://www.gov.pl/documents/2034621/2182793/Schemat_JPK_KR%281%29_v1-0.xsd/30ee4a20-f2f5-ba7d-6c90-8500facddd60'
);
exec('jpk_url1','upgrade_1902','MAG','JPK_MAG(1)_v1-0',
   'https://www.gov.pl/documents/2034621/2182793/Schemat_JPK_MAG%281%29_v1-0.xsd/425b566f-23a7-6b37-876f-6e9592200f1d'
);
exec('jpk_url1','upgrade_1902','VAT','JPK_VAT(3)_v1-1',
   'https://www.gov.pl/documents/2034621/2182793/Schemat_JPK_VAT%283%29_v1-1.xsd/ab0741d5-fa6d-9596-b089-6778ea5df160'
);
exec('jpk_url1','upgrade_1902','WB','JPK_WB(1)_v1-0',
   'https://www.gov.pl/documents/2034621/2182793/Schemat_JPK_WB%281%29_v1-0.xsd/194ae091-1f50-9f46-cd56-ce5208653ba2'
);
__UPG.msg('Zaktualizowano lokalizacje schematów JPK.');
1


\jpk_url_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Aktualizacja lokalizacji schematów JPK - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja lokalizacji schematów JPK'


\jpk_url1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Zmiana lokalizacji pliku JPL
::   WE: _a - rodzaj pliku
::       _b - nazwa pliku
::       _c - nowa lokalizacja
::----------------------------------------------------------------------------------------------------------------------
ISTDEF.cntx_psh();
ISTDEF.index('JPK'); ISTDEF.prefix('J',_a,_b,);
{? ISTDEF.first()
|| ISTDEF.XMLNS:=_c;
   ISTDEF.put()
?};
ISTDEF.cntx_pop()


\fix_espr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Naprawa definicji sprawozdań na potrzeby e-Sprawozdań
::----------------------------------------------------------------------------------------------------------------------
_zmiany:=0;
_sql:=sql('select REFERENCE as REF from GR_SIK where E_KOD<>\'\'');
{? _sql.first()
|| _wyn:=obj_new('add','FIRMA','SYSTEM','GR_SIK','DEFW','GR_KOL');
   _wyn.add:="
      _txt:='';
      _txt+='firma: '+.FIRMA;
      _txt+=', sprawozdanie: '+.GR_SIK;
      {? .DEFW<>'' || _txt+=', wiersz: '+.DEFW ?};
      {? .GR_KOL<>'' || _txt+=', kolumna: '+.GR_KOL ?};
      _txt+=' - '+_a;
      __UPG.msg(_txt)
   ";
   GR_SIK.cntx_psh();
   GR_SIK.prefix();
   DEFW.cntx_psh();
   GR_KOL.cntx_psh();
   GR_KOL.index('LP');
   DEFA.cntx_psh();
   DEFA.index('LP');
   {!
   |? {? GR_SIK.seek(BIT.sqlint(_sql.REF),)
      || _gr_sik:=GR_SIK.ref();
         _wyn.FIRMA:=GR_SIK.FIRMA().SYMBOL;
         _wyn.SYSTEM:=GR_SIK.SYSTEM;
         _wyn.GR_SIK:=GR_SIK.SKROT;
         _zmiana:=0;
         {? GR_SIK.E_KOD='PrzeplywyPosr'
         || DEFW.index('E_KOD');
            DEFW.prefix(GR_SIK.ref(),'A_III',);
            {? DEFW.first()
            || DEFA.prefix(DEFW.ref());
               {? DEFA.first()
               || {!
                  |? {? DEFA.ARGUMENT().E_KOD='A_II' & DEFA.WSP=-1
                     || _wyn.GR_KOL:=$DEFA.KOL().LP;
                        _wyn.DEFW:=DEFA.WYR().KOD;
                        DEFA.WSP:=1; DEFA.put();
                        _wyn.add('Zmieniono współczynnik w algorytmie numer %1.'[$DEFA.LP]);
                        _zmiana:=1
                     ?};
                     DEFA.next()
                  !}
               ?}
            ?}
         |? GR_SIK.E_KOD='RZiSPor'
         || DEFW.index('E_KOD');
            DEFW.prefix(GR_SIK.ref());
            {? DEFW.find_key('F_III_1',)
            || _wyn.GR_KOL:='';
               {? DEFW.find_key('G_IV')
               || _wyn.DEFW:=DEFW.KOD;
                  {? DEFW.KOD='G_IV' || DEFW.KOD:='F_IV' ?};
                  DEFW.E_KOD:='F_IV';
                  DEFW.put();
                  _wyn.add('Zmieniono e-Kod %1 wiersza na %2.'[{? _wyn.DEFW<>DEFW.KOD || 'oraz kod' || '' ?},DEFW.E_KOD]);
                  _zmiana:=1
               ?};
               {? DEFW.find_key('G_II_J')
               || _wyn.DEFW:=DEFW.KOD;
                  {? DEFW.KOD='G_II_J' || DEFW.KOD:='G_II_1' ?};
                  DEFW.E_KOD:='G_II_1';
                  DEFW.put();
                  _wyn.add('Zmieniono e-Kod %1 wiersza na %2.'[{? _wyn.DEFW<>DEFW.KOD || 'oraz kod' || '' ?},DEFW.E_KOD]);
                  _zmiana:=1
               ?}
            ?};
            {? DEFW.find_key('B_V',) & DEFW.ALGORYTM<>'F'
            || _wyn.GR_KOL:='';
               _wyn.DEFW:=DEFW.KOD;
               _ref:=DEFW.ref();
               DEFA.prefix(DEFW.ref());
               {? DEFA.first()
               || {!
                  |? {? DEFA.ARGUMENT().E_KOD='B_V_1'
                     || DEFA.del()
                     || DEFA.next()
                     ?}
                  !}
               ?};
               {? ~DEFA.first() & DEFW.seek(_ref)
               || DEFW.ALGORYTM:='F';
                  DEFW.put();
                  _wyn.add('Zmieniono typ algorytmu wiersza z F na S.');
                  _zmiana:=1
               ?}
            ?};
            {? DEFW.find_key('C',) & DEFW.ALGORYTM='S'
            || _wyn.DEFW:=DEFW.KOD;
               DEFA.prefix(DEFW.ref());
               {? DEFA.first()
               || {!
                  |? {? DEFA.ARGUMENT().E_KOD='B' & DEFA.WSP=1
                     || _wyn.GR_KOL:=$DEFA.KOL().LP;
                        DEFA.WSP:=-1;
                        DEFA.put();
                        _wyn.add('Zmieniono współczynnik algorytmu.');
                        _zmiana:=1
                     ?};
                     DEFA.next()
                  !}
               ?}
            ?}
         |? 18+GR_SIK.E_KOD='ZestZmianWKapitale'
         || DEFW.index('ALGORYTM');
            DEFW.prefix(GR_SIK.ref(),'S');
            {? DEFW.first()
            || {!
               |? _wyn.DEFW:=DEFW.KOD;
                  DEFW.cntx_psh();
                  DEFA.prefix(DEFW.ref());
                  {? DEFA.first()
                  || {!
                     |? _wyr:=DEFA.WYR;
                        _kol:=DEFA.KOL;
                        _wyn.GR_KOL:=$DEFA.KOL().LP;
                        {? 6+DEFA.ARGUMENT().GRUPA().E_KOD='Bilans'
                        || {? DEFA.WYR().NAZWA*'na początek okresu' & DEFA.KOL().E_KOD='KwotaA' & DEFA.ARG_KOL().E_KOD='KwotaA'
                           || GR_KOL.cntx_psh();
                              GR_KOL.index('E_KOD');
                              GR_KOL.prefix(DEFA.ARGUMENT().GRUPA,'KwotaB',);
                              {? GR_KOL.first()
                              || _zmiana:=1;
                                 _wyn.add('Zmieniono kolumnę algorytmu.');
                                 DEFA.ARG_KOL:=GR_KOL.ref();
                                 DEFA.put()
                              ?};
                              GR_KOL.cntx_pop();
                              DEFA.next()
                           |? DEFA.KOL().E_KOD='KwotaB1'
                           || _zmiana:=1;
                              _wyn.add('Usunieto algorytm.');
                              _del:=DEFA.del();
                              DEFA.cntx_psh();
                              DEFA.index('LP');
                              DEFA.prefix(_wyr,_kol);
                              {? DEFA.first()
                              || _lp:=0;
                                 {!
                                 |? DEFA.LP:=(_lp+=1);
                                    DEFA.put();
                                    DEFA.next()
                                 !}
                              ?};
                              DEFA.cntx_pop();
                              _del
                           ?}
                        || DEFA.next()
                        ?}
                     !}
                  ?};
                  DEFW.cntx_pop();
                  DEFW.next()
               !}
            ?}
         ?};
         {? _zmiana & GR_SIK.AKC<>'N'
         || _wyn.DEFW:=_wyn.GR_KOL:='';
            _wyn.add('Wycofano akceptację sprawozdania.');
            GR_SIK.AKC:='N';
            GR_SIK.put()
         ?};
         GR_KOL.prefix(_gr_sik);
         {? GR_KOL.first()
         || _wyn.DEFW:='';
            {!
            |? _wyn.GR_KOL:=$GR_KOL.LP;
               _zm:=0;
               _z:=GR_KOL.NAZWA;
               {? 5+GR_KOL.E_KOD='Kwota' & GR_KOL.E_KOD=GR_KOL.NAZWA
               || {? 10+GR_SIK.E_KOD='Informacja'
                  || {? GR_KOL.E_KOD='KwotaA'
                     || GR_KOL.NAZWA:='Wartość łączna';
                        GR_KOL.put();
                        _zm:=1
                     |? GR_KOL.E_KOD='KwotaB'
                     || GR_KOL.NAZWA:='Z zysków kapitałowych';
                        GR_KOL.put();
                        _zm:=1
                     |? GR_KOL.E_KOD='KwotaC'
                     || GR_KOL.NAZWA:='Z innych źródeł przychodów';
                        GR_KOL.put();
                        _zm:=1
                     ?}
                  || {? GR_KOL.E_KOD='KwotaA'
                     || GR_KOL.NAZWA:='Kwota na dzień kończący bieżący rok obrotowy';
                        GR_KOL.put();
                        _zm:=1
                     |? GR_KOL.E_KOD='KwotaB'
                     || GR_KOL.NAZWA:='Kwota na dzień kończący poprzedni rok obrotowy';
                        GR_KOL.put();
                        _zm:=1
                     |? GR_KOL.E_KOD='KwotaB1'
                     || GR_KOL.NAZWA:='Przekształcone dane porównawcze za poprzedni rok obrotowy';
                        GR_KOL.put();
                        _zm:=1
                     ?}
                  ?}
               ?};
               {? _zm
               || _wyn.add('Zmieniono nazwę kolumy z: %1 na: %2.'[_z,GR_KOL.NAZWA]);
                  _zmiana:=1
               ?};
               GR_KOL.next()
            !}
         ?};
         _zmiany+=_zmiana
      ?};
      _sql.next()
   !};
   DEFA.cntx_pop();
   GR_KOL.cntx_pop();
   DEFW.cntx_pop();
   GR_SIK.cntx_pop()
?};
{? _zmiany=0
|| __UPG.msg('Definicje sprawozdań są poprawne.')
?};
_set:=exec('create_set','#array','INTEGER');
_zmiany:=0;
ISTDEF.cntx_psh();
ISTDEF.index('JPK'); ISTDEF.prefix('J','SF','JednostkaMalaW');
{? ISTDEF.first()
|| ISTDEFS.cntx_psh();
   ISTDEFS.index('OPIS');
   {!
   |? _zmiana:=0;
      ISTDEFS.prefix(ISTDEF.ref(),'jma:G_IV',);
      {? ISTDEFS.first()
      || ISTDEFS.cntx_psh();
         ISTDEFS.prefix();
         ISTDEFS.OPIS:='jma:F_IV'; ISTDEFS.put();
         _zmiana:=1;
         ISTDEFS.cntx_pop()
      ?};
      ISTDEFS.prefix(ISTDEF.ref(),'jma:G_II_J',);
      {? ISTDEFS.first()
      || ISTDEFS.cntx_psh();
         ISTDEFS.prefix();
         ISTDEFS.OPIS:='jma:G_II_1'; ISTDEFS.put();
         _zmiana:=1;
         ISTDEFS.cntx_pop()
      ?};
      {? _zmiana & _set.addIfNotExists(ISTDEF.ref())
      || __UPG.msg('Zmodyfikowano schemat: %1.'[ISTDEF.VER]);
         _zmiany:=1
      ?};
      ISTDEF.next()
   !};
   ISTDEFS.cntx_pop()
?};
ISTDEF.cntx_pop();
&_sql;
_sql:=sql(
   'select ISTDEFS.REFERENCE as REF '+
   'from ISTDEFS join ISTDEF '+
   'where ISTDEF.RODZAJ=\'SF\' and ISTDEFS.TYPFLD=\'K\' and ISTDEFS.OPIS like \'%KwotaA\''
);
ISTDEFS.cntx_psh();
ISTDEFS.prefix();
{? _sql.first()
|| {!
   |? {? ISTDEFS.seek(BIT.sqlint(_sql.REF),)
      || ISTDEFS.cntx_psh();
         ISTDEFS.index('DRZEWO'); ISTDEFS.prefix(ISTDEFS.ISTDEF,ISTDEFS.TREE,);
         {? ISTDEFS.next() & ISTDEFS.TYPFLD='' & ISTDEFS.OPIS+6='KwotaB'
         || ISTDEFS.TYPFLD:='K';
            ISTDEFS.put();
            {? _set.addIfNotExists(ISTDEFS.ISTDEF)
            || __UPG.msg('Zmodyfikowano schemat: %1.'[ISTDEFS.ISTDEF().VER])
            ?};
            _zmiany:=1
         ?};
         ISTDEFS.cntx_pop()
      ?};
      _sql.next()
   !}
?};
ISTDEFS.cntx_pop();
ISTDEF.cntx_psh();
ISTDEF.index('JPK'); ISTDEF.prefix('J','SF',);
ISTDEFS.cntx_psh();
ISTDEFS.index('OPIS');
{? ISTDEF.first()
|| {!
   |? ISTDEFS.prefix(ISTDEF.ref(),'tns:P_5B',);
      {? ISTDEFS.first() & ISTDEFS.REGULY=$"'false'"
      || ISTDEFS.REGULY:=$"'true'";
         ISTDEFS.put();
         {? _set.addIfNotExists(ISTDEFS.ISTDEF)
         || __UPG.msg('Zmodyfikowano schemat: %1.'[ISTDEFS.ISTDEF().VER])
         ?};
         _zmiany:=1
      ?};
      ISTDEF.next()
   !}
?};
ISTDEFS.cntx_pop();
ISTDEF.cntx_pop();
{? _zmiany=0
|| __UPG.msg('Schematy e-Sprawozdań są poprawne.')
?};
1


\fix_espr_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Naprawa definicji sprawozdań na potrzeby e-Sprawozdań - opis
::----------------------------------------------------------------------------------------------------------------------
'Naprawa definicji używanych w e-Sprawozdaniach (sprawozdania i schematy)'


\fix_xsd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Zmiana nazw plików xsd używanych do walidacji e-deklaracji i plików JPK
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('Zmiana');
Zmiana:=0;
_rename:="
   _from:=_a;
   _to:=19+(_from-45)+(_from+45);
   {? _from<>_to & fexists(_from,1)
   || {? fcopy(_from,_to,1,1,1)
      || ferase(_from,1);
         __UPG.msg('Zmieniono nazwę pliku z: %1 na: %2.'@[_from,_to]);
         Zmiana:=1
      ?}
   ?}
";
_rename('v_CIT-8_O(10)_Z_v1-0E_12958e729da3e860f55814dd8091fc965c6c6ceb.xsd');
_rename('v_CIT-8_O(11)_Z_v1-0E_330e8ded1be58c5c20427762701cc665498a3e98.xsd');
_rename('v_CIT-8_O(12)_Z_v1-0E_e041acc049570ff9261dd2ab1f4d4219caf53520.xsd');
_rename('v_CIT-8_O(13)_Z_v1-0E_6b744bb26029548b753013e529e9fca80fbe37d2.xsd');
_rename('v_CIT-8_O(14)_Z_v1-0E_d553db10723c5aa8e6799824490df702cad8cb46.xsd');
_rename('v_CIT-8_O(8)_Z_v3-0E_d478c212c39350be537bcbf608da60faa7dff960.xsd');
_rename('v_CIT-8_O(9)_Z_v1-0E_fb0c95ed09459a4d58254dea60e70219fbd7bdb5.xsd');
_rename('v_CIT-ST_A(5)_Z_v2-0E_6ffb8e245247e8a2fcde5bfaf9e290a217135298.xsd');
_rename('v_CIT-ST_A(5)_Z_v4-0E_f0fd287f74e98038d7ee6bbdd62fa92c9d24c7f1.xsd');
_rename('v_CIT_8SP(1)_Z_v1-0E_65b627b36aa045c3f0ec4eab83c83ab8f22d181f.xsd');
_rename('v_CIT_8SP(2)_Z_v1-0E_1991340f597ef868dab715e01f8c660e69abb1c0.xsd');
_rename('v_CIT_MIT(1)_Z_v1-0E_eca4b9cebc931512c761b6933f80e052329d6571.xsd');
_rename('v_CIT_MIT(2)_Z_v1-0E_9a21947a8ee0193b35f33bd916da9a8b77b183b0.xsd');
_rename('v_ElementarneTypyDanych_v3-0E_74b9fd4efa3b9293af9a6a8c544fd90162bec623.xsd');
_rename('v_ElementarneTypyDanych_v4-0E_6d47c45907f05c92e4aba075087fd4fdd7195fa0.xsd');
_rename('v_ElementarneTypyDanych_v5-0E_64d5a1d2df51484a29940936ac06fe002932078f.xsd');
_rename('v_JednostkaInnaStrukturyDanychSprFin_v1-0_d1ffa52f3a0773f43d34e086e04b43c9a3bc1cfa.xsd');
_rename('v_JednostkaInnaWTysiacach(1)_v1-0_89d7d7538627ca325b8baf9d539297b86c6f61fd.xsd');
_rename('v_JednostkaInnaWZlotych(1)_v1-0_cade3ffc85e7103aac89af7a64d6f879106847a2.xsd');
_rename('v_JednostkaMalaStrukturyDanychSprFin_v1-0_278b07d7ac8b99677e9dee0426d0d8a8beacb57e.xsd');
_rename('v_JednostkaMalaWTysiacach(1)_v1-0_55ef15b865d15bd126e22eb4ef7090338d4b8cab.xsd');
_rename('v_JednostkaMalaWZlotych(1)_v1-0_52310d7e6560d34d8d5dec54695732ee007be3e3.xsd');
_rename('v_KodyCechKrajow_v3-0E_097abda8d7b68fe8e78965817b129a9c50b9e471.xsd');
_rename('v_KodyKrajowUE_v2-0E_2bd412d9a0bac66bf362338e107824159a3985ea.xsd');
_rename('v_KodyUrzedowSkarbowych_v3-0E_b2a09044e323e2a27b017a82c155f0d555303b81.xsd');
_rename('v_KodyUrzedowSkarbowych_v4-0E_eacdd80247933d94db150c27d85f67c5345b4816.xsd');
_rename('v_KodyUrzedowSkarbowych_v5-0E_3fcbbbc88d14f9c53d4363cdf54096fa3e646d53.xsd');
_rename('v_SSE-R_A(2)_Z_v2-0E_738dd6a2ab7e9fd7649de3d8e6db2c42bd10b215.xsd');
_rename('v_SSE-R_A(3)_Z_v2-0E_235c282cb53de948e577be811ec3b91452392db5.xsd');
_rename('v_SSE-R_A(3)_Z_v3-0E_96a99d82f9a8e3af33d9456d12763fac612a3f7b.xsd');
_rename('v_StrukturyDanychSprFin_v1-0_85032dda228324d24bca930ab8bdda784c7d7c21.xsd');
_rename('v_StrukturyDanych_v3-0E_11b1ae2ae7de1f9cf19a3ac8726b35145704f1bc.xsd');
_rename('v_StrukturyDanych_v4-0E_29db0c7898fdeb5ddb3bb4b3e19d07ff3daf2705.xsd');
_rename('v_StrukturyDanych_v5-0E_4616ef3e134d599988a1bee7f43a43ef4482427a.xsd');
{? Zmiana=0
|| __UPG.msg('Zmiana nazw plików *.xsd nie była wymagana.'@)
?};
VAR_DEL.delete('Zmiana');
1


\fix_xsd_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Zmiana nazw plików xsd używanych do walidacji e-deklaracji i plików JPK - opis
::----------------------------------------------------------------------------------------------------------------------
'Zmiana nazw plików xsd używanych do walidacji e-deklaracji i plików JPK'


\upd_espr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Aktualizacja schematów e-Sprawozdań
::----------------------------------------------------------------------------------------------------------------------
_zmiany:=0;
VAR_DEL.delete('LastLp');
LastLp:="
   _lp:=ISTDEFS.LP;
   ISTDEFS.cntx_psh();
   ISTDEFS.index('DRZEWO'); ISTDEFS.prefix(ISTDEF.ref(),ISTDEFS.ref());
   {? ISTDEFS.last()
   || _lp:=LastLp()
   ?};
   ISTDEFS.cntx_pop();
   _lp
";
ISTDEF.cntx_psh();
ISTDEF.index('JPK'); ISTDEF.prefix('J','SF',);
ISTDEFS.cntx_psh();
{? ISTDEF.first()
|| {!
   |? _zmiana:=0;
      ISTDEFS.index('TYPPOLA'); ISTDEFS.prefix(ISTDEF.ref(),'SP');
      {? ISTDEFS.first()
      || {!
         |? ISTDEFS.cntx_psh();
            ISTDEFS.index('DRZEWO');
            ISTDEFS.prefix(ISTDEF.ref(),ISTDEFS.ref());
            {? ISTDEFS.first()
            || {!
               |? ISTDEFS.cntx_psh();
                  ISTDEFS.prefix(ISTDEF.ref(),ISTDEFS.ref());
                  {? ISTDEFS.first()
                  || {!
                     |? {? ISTDEFS.OPIS='dtsf:Kwota'
                        || ISTDEFS.cntx_psh();
                           ISTDEFS.index('DRZEWO'); ISTDEFS.prefix(ISTDEF.ref(),ISTDEFS.ref());
                           {? ISTDEFS.last() & ISTDEFS.OPIS='dtsf:RP'
                           || ISTDEFS.REGULY:=$"exec('okres','jpk_sf','P'); exec('podat_rp','jpk_sf')";
                              ISTDEFS.put();
                              _zmiana:=1
                           ?};
                           ISTDEFS.cntx_pop()
                        |? (ISTDEFS.OPIS='dtsf:PozycjaUzytkownika' | ISTDEFS.OPIS='dtsf:Pozostale') & ISTDEFS.REGULY='0'
                        || {? ISTDEFS.OPIS='dtsf:PozycjaUzytkownika'
                           || ISTDEFS.FORMULA:=$"exec('esprp_first','jpk_sf',_a,'N')";
                              ISTDEFS.FORM_XML:=$"exec('esprp_next','jpk_sf')";
                              ISTDEFS.PARSER:=$"exec('p_esprp','jpk_sf',_a)"
                           || ISTDEFS.FORMULA:=$"exec('esprp_first','jpk_sf',_a,'T')";
                              ISTDEFS.FORM_XML:=$"exec('esprp_next','jpk_sf')";
                              ISTDEFS.PARSER:=$"exec('p_esprp','jpk_sf',_a,'Pozostałe')"
                           ?};
                           ISTDEFS.REGULY:='';
                           ISTDEFS.put();
                           _zmiana:=1;
                           _lp:=LastLp();
                           _kw:=-3;
                           ISTDEFS.cntx_psh();
                           ISTDEFS.index('LP'); ISTDEFS.prefix(ISTDEF.ref());
                           {? ISTDEFS.next()
                           || {!
                              |? {? ISTDEFS.OPIS='dtsf:NazwaPozycji'
                                 || ISTDEFS.REGULY:=$"exec('esprp_nazwa','jpk_sf')";
                                    ISTDEFS.PARSER:=$"exec('p_esprp_naz','jpk_sf',_a,_b)";
                                    ISTDEFS.put()
                                 |? ISTDEFS.OPIS='dtsf:Kwota'
                                 || ISTDEFS.REGULY:='';
                                    ISTDEFS.PARSER:='';
                                    ISTDEFS.put()
                                 |? ISTDEFS.OPIS='dtsf:KwotaA' | ISTDEFS.OPIS='dtsf:KwotaB' | ISTDEFS.OPIS='dtsf:KwotaC'
                                 || {? ISTDEFS.OPIS='dtsf:KwotaA' || _kw+=3 ?};
                                    _nr:=(%(ISTDEFS.OPIS+1)-64)+_kw;
                                    ISTDEFS.REGULY:=$"exec('esprp_value','jpk_sf'"+{? _kw || ',\'P\'' || '' ?}+')';
                                    ISTDEFS.PARSER:=$"exec('p_v_pod','jpk_sf',_a,_b,"+$_nr+')';
                                    ISTDEFS.put()
                                 |? ISTDEFS.OPIS='dtsf:Art' | ISTDEFS.OPIS='dtsf:Ust' | ISTDEFS.OPIS='dtsf:Pkt' | ISTDEFS.OPIS='dtsf:Lit'
                                 || ISTDEFS.REGULY:='E_SPR_P.'+(~-(ISTDEFS.OPIS+3));
                                    ISTDEFS.PARSER:=$"exec('p_esprp_pp','jpk_sf',_a,_b)";
                                    ISTDEFS.put()
                                 |? ISTDEFS.OPIS='dtsf:Podpozycja'
                                 || ISTDEFS.REGULY:=$"exec('esprp_pod','jpk_sf')";
                                    ISTDEFS.PARSER:=$"exec('p_esprp_pod','jpk_sf',_a,_b)";
                                    ISTDEFS.put()
                                 |? ISTDEFS.OPIS='dtsf:RP'
                                 || ISTDEFS.REGULY:=$"exec('podat_rp','jpk_sf')";
                                    ISTDEFS.put()
                                 ?};
                                 ISTDEFS.LP<_lp & ISTDEFS.next()
                              !}
                           ?};
                           ISTDEFS.cntx_pop()
                        ?};
                        ISTDEFS.next()
                     !}
                  ?};
                  ISTDEFS.cntx_pop();
                  ISTDEFS.next()
               !}
            ?};
            ISTDEFS.cntx_pop();
            ISTDEFS.next()
         !}
      ?};
      {? _zmiana
      || _zmiany:=1;
         __UPG.msg('Zmodyfikowano schemat: %1.'[ISTDEF.VER])
      ?};
      ISTDEF.next()
   !}
?};
ISTDEFS.cntx_pop();
ISTDEF.cntx_pop();
VAR_DEL.delete('LastLp');
{? _zmiany=0
|| __UPG.msg('Schematy e-Sprawozdań są poprawne. Nie wymagały zmian.'@)
?};
1


\upd_espr_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Aktualizacja schematów e-Sprawozdań - opis
::  OLD: \upd_espr_desc/upgrade_1902.fml
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja schematów e-Sprawozdań (uszczegółowienia informacji podatkowych)'


\imie_matki_ojca
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [19.02]
:: OPIS: Formuła usuwa informacje związane z imieniem i nazwiskiem matki i ojca.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_PAR:=tab_tmp(1,
   'OJCIEC','INTEGER','Imię ojca'@,
   'OJCIECN','INTEGER','Nazwisko ojca'@,
   'MATKA','INTEGER','Imię matki'@,
   'MATKAN','INTEGER','Nazwisko matki'@
);

_we:=_PAR.mk_edit('Informacje do usunięcia'@);
_PAR.win_esep(_we,'Imiona, nazwiska ojca i matki'@);
_PAR.win_efld(_we,,'OJCIEC',,,,,,,,,'check-box','check_label="%1"' ['Tak, usuń informację'@],"1","0");
_PAR.win_efld(_we,,'OJCIECN',,,,,,,,,'check-box','check_label="%1"' ['Tak, usuń informację'@],"1","0");
_PAR.win_efld(_we,,'MATKA',,,,,,,,,'check-box','check_label="%1"' ['Tak, usuń informację'@],"1","0");
_PAR.win_efld(_we,,'MATKAN',,,,,,,,,'check-box','check_label="%1"' ['Tak, usuń informację'@],"1","0");
exec('ok_esc','#window',_PAR,_we);
_PAR.win_edit(_we);

{? _PAR.edit("
      _PAR:=cur_tab(1,1);
      {? _PAR.OJCIEC+_PAR.MATKA+_PAR.MATKAN+_PAR.OJCIECN=0
      || FUN.emsg('Co najmniej jedno z pól musi być zaznaczone.'@);
         0
      || 1
      ?}
   ")
|| __UPG.msg('Użytkownik %1 zatwierdził usuwanie informacji.' [exec('operatorKod','#users')]);
   _dozmiany:=0;
   _zmienionych:=0;
   OSOBA.cntx_psh();
   OSOBA.index('IDADD');
   OSOBA.prefix();
   {? OSOBA.first()
   || _zeruj:=$(
         "_d0:=_a; "+
         "_put:=0; "+
         {? _PAR.OJCIEC || "{? OSOBA.OJCIEC<>'' || OSOBA.OJCIEC:=''; _put+=1 ?}; " || "" ?}+
         {? _PAR.OJCIECN || "{? OSOBA.OJCIECN<>'' || OSOBA.OJCIECN:=''; _put+=1 ?}; " || "" ?}+
         {? _PAR.MATKA || "{? OSOBA.MATKA<>'' || OSOBA.MATKA:=''; _put+=1 ?}; " || "" ?}+
         {? _PAR.MATKAN || "{? OSOBA.MATKAN<>'' || OSOBA.MATKAN:=''; _put+=1 ?}; " || "" ?}+
         "{? _put || OSOBA.put() || -1 ?}");
      _d0:=date(0,0,0);
      _size:=OSOBA.size();
      _step:=0;
      {!
      |? _step+=1;
         _proc:=100*_step/_size;
         progress(_proc,'Usuwanie informacji'@,'Przetwarzanie danych');
         _ret:=_zeruj(_d0);
         {? _ret>=0
         || _dozmiany+=1;
            {? _ret=1
            || _zmienionych+=1
            ?}
         ?};
         OSOBA.next()
      !};
      prgs_clr();
      __UPG.msg('Wszystkich zapisów: %1' [$_size]);
      __UPG.msg('Zapisów do zmiany: %1' [$_dozmiany]);
      __UPG.msg('Zapisów zmienionych: %1' [$_zmienionych])
   ?};
   OSOBA.cntx_pop();
   _dozmiany=_zmienionych
|| {? FUN.ask(
         'Czy rezygnujesz (również w przyszłości) z wykonania tego zadania?\n'
         '\n'
         'Tak - zadanie zostanie oznaczone jako "Wykonane" i nie będzie już można uruchomić go.\n'
         'Nie - zadanie pozostanie na liście zadań i będzie je można wykonać w późniejszym czasie.'@
      )
   || __UPG.msg('Użytkownik %1 zdecydował o pominięciu wykonania zadania.' [exec('operatorKod','#users')]);
      1
   || __UPG.msg('Użytkownik %1 pozostawił zadanie do późniejszego wykonania.' [exec('operatorKod','#users')]);
      0
   ?}
?}


\imie_matki_ojca_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [19.02]
:: OPIS: Formuła usuwa informacje związane z imieniem i nazwiskiem matki i ojca - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Usuwanie informacji związanych z imionami i nazwiskiem ojca i matki'


\plugins_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [19.02]
:: OPIS: Aktualizacja listy wtyczek wdrożeniowych
::----------------------------------------------------------------------------------------------------------------------
exec('init','plugins');
__UPG.msg('Zaktualizowano wtyczki wdrożeniowe.');
1


\plugins_init_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [19.02]
:: OPIS: Aktualizacja listy wtyczek - opis.
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie definicji wtyczek wdrożeniowych:\n'
'PRACOWNI_T_T_001\n'

:Sign Version 2.0 jowisz:1048 2021/04/09 15:26:33 a444e753eb804e04ec55c2f9b6da6e02ba29fd42b5aadeb979336094885befabe65b380b6a3b10a05f12341767603b47007d526cf799e43fc22fa4e976a4a7834d82f93bb1123d4521ce11599d678e0c90e25d67fc9e7ec68128353c37dbde2fe601b7d1d21b5e83d43e4ea6abb4dacbfb98cf1f6c181b40fd38e181c8c24cbc
