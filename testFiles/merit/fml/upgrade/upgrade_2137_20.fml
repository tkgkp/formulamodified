:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: upgrade_2137_20.fml
:: Utworzony: 13.07.2022
:: Autor: IS
::======================================================================================================================
:: Zawartość: Funkcje do obsługi transferu danych z wersji 21.14 na 21.37
::
::            Każda formuła powinna zwracać wartość liczbową, interpretacja:
::                1 - całość przeszła bez błędów - realizacja zakwalifikowana jako wykonana
::               -1 - całość przeszła z uwagami  - dla zadania automatycznego:
::                                                   * realizacja zakwalifikowana jako wykonana
::                                                 dla zadania manualnego:
::                                                   * zrezygnowano z wykonania zadania w danej chwili - zadanie nadal
::                                                     pozostaje do wykonania
::                0 - został stwierdzony błąd    - realizacja zakwalifikowana jako przerwana
::
::            Definicja zadania transferowego:
::               __UPG.add_task(name,[auto],[mf],domain,[ver],[required],[manual],[nofirm],[onlyact])
::                gdzie:
::                   name     [STRING] - nazwa formuły potransferowej (z bieżącego pliku).
::                   auto     [STRING] - formuła automatyczna: T [domyślnie] / N
::                   mf       [STRING] - formuła wielofirmowa: T [domyślnie] / N
::                                        T - wykonywana tylko raz
::                                        N - wykonywana w każdej firmie
::                   domain   [STRING] - kod dziedziny produktowej (informacyjnie)
::                   ver      [NUMBER] - wersja formuły
::                   required [STRING] - czy zadanie musi być wykonane
::                                       Dla zadań automatycznych parametr zawsze przyjmuje wartość T.
::                                       Dla zadań manualnych - domyślnie: N.
::                   manual   [STRING] - kod powiązanego zadania manualne w ramach wersji
::                                        domyślnie brak
::                                        jeśli podano i istnieje oraz zostaną dokonane zapisy w buforze to zadanie
::                                        zmieni status na wymagalne
::                   nofirm   [NUMBER] - dla zadań jednofirmowych pomija firmę '000' (wartość 1), 0-domyślna wartość
::                   onlyact  [STRING] - zadanie aktualizacyjne dla danej wersji: T-tak, N-nie (domyślnie)
::                                        (Czy zadanie weszło po emisji danej wersji?)
::
::            W formułach można stosować zapis do przesłania komunikatów dla realizacji, np.
::               __UPG.msg('Brak zapisów dla roku 2016 w tabeli FAKS.')
::            Uwaga: ponieważ wynik jest zapisywany do bazy danych, to NIE tłumaczymy go - nie kończymy znakiem @.
::
::            W formułach automatycznych, które zostały powiązane z formułą manualną można stosować zapis o danych
::            wymagalnych do zweryfikowania, np.
::               __UPG.buf(USERS.uidref(),'Zweryfikuj parametry użytkownika w kontekście anulowania dokumentów')
::            zapis jest dołączony bezpośrednio pod wskazaną czynością manualną
::            Do uzyskania zapisów dla realizacji zadania manualnego służy metoda:
::               __UPG.get_buf()
::            wynik zwracany jest w formie tabeli o strukturze:
::               CODE  - STRING[48]
::               DESC  - STRING[255]
::               FIRMA - STRING[16] - ref SQL
::
::            \formuła      - formuła potransferowa
::            \formuła_desc - opis dla formuły potransferowej
::======================================================================================================================
:: Sposób tworzenia i opisu formuł transferowych:
::           - każda formuła musi zawierać opis (\formuła_desc) która w pierwszych zdaniach opisuje co robi, w kolejnych
::             zdaniach zawiera krótki opis techniczny np. uzupełniono pole XX w tabeli AA wartością 'T'
::           - każda formuła musi badać wynik swojego działania, zwracać 1, 0, -1 jeżeli od jej wykonania jest zależne
::             działanie systemu
::           - każda formuła musi tworzyć opis tego, jak przebiegło jej wykonanie wykorzystując __UPG.msg
::             tak aby po opisie można było wywnioskować co formuła konkretnie zrobiła
::             np. w tabeli AA Poprawiono X rekordów z N przeanalizowanych
::           - każda funkcja powinna posiadać progress, pokazujący postęp wykonania (jeżeli funkcja jest przewidziana
::             do wykonania na wielu rekordach)
::======================================================================================================================

\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Główna formuła aktualizacji 21.37
::----------------------------------------------------------------------------------------------------------------------
:: Zadania automatyczne, wykonywane raz dla całego systemu
__UPG.add_task('stalesys_ini',,,'ZWS',,,,,'T');
__UPG.add_task('stalesys_wid',,,'ZWS',,,,,'T');
__UPG.add_task('sch_imp',,,'OBE',,,,,'T');
:: Zadania automatyczne, wykonywane dla każdej firmy
__UPG.add_task('stalesys_PPK_VI',,'N','PPK',,,,,'T');
:: Zadania manualne, wykonywane raz dla całego systemu
:: Zadania manualne, wykonywane dla każdej firmy
~~


\stalesys_ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Aktualizacja definicji stałych systemu
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
{? var_pres('POP_ZAW',KST_PPK)>0
|| exec('init_kst','#stalesys',KST_PPK);
   __UPG.msg('Zaktualizowano definicje stałych systemu.')
|| __UPG.msg('Brak pola POP_ZAW w stałych systemu (KST_PPK).');
   _ret:=-1
?};

_ret


\stalesys_ini_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Aktualizacja definicji stałych systemu - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja definicji stałych systemu'


\stalesys_wid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Aktualizacja widoków stałych systemu
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
{? var_pres('POP_ZAW',KST_PPK)>0
:: Uzupełnienie widoków stałych systemu:
|| KST_LST.cntx_psh();
   KST_LST.prefix();
   KST_LST.f_set(
      'NUMER',
      'join KST_DOM using(KST_LST.KST_DOM,KST_DOM.REFERENCE) '
      'join KST_MAP using(KST_LST.KST_MAP,KST_MAP.REFERENCE) '
      'join KST_ZES using(KST_MAP.KST_ZES,KST_ZES.REFERENCE) '
      'join B_DOMAIN using(KST_DOM.B_DOMAIN,B_DOMAIN.REFERENCE) ',
      'B_DOMAIN.SYMBOL=\'PPK\' and KST_ZES.SYMBOL=\'KST_PPK\''
   );
   {? KST_LST.f_last()
   || _num:=KST_LST.NUMER;
      _dom:=KST_LST.KST_DOM;
      KST_MAP.cntx_psh();
      KST_MAP.index('KST_MAP');
      KST_MAP.prefix('KST_PPK','KST_PPK');
      {? KST_MAP.find_key('POP_ZAW','POP_ZAW')
::    Znajdź pole w zmiennej reprezentujące stałą
      || {? ~KST_LST.find_tab(,'KST_DOM',,'=',_dom,'KST_MAP',,'=',KST_MAP.ref())
::       Uzupełnij widok o znalezioną stałą
         || KST_LST.KST_MAP:=KST_MAP.ref();
            KST_LST.NUMER:=_num+1;
            KST_LST.add()
         ?}
      ?};
      KST_MAP.cntx_pop()
   ?};
   KST_LST.f_clear();
   KST_LST.cntx_pop();

   __UPG.msg('Zaktualizowano widoki stałych systemu.')
|| __UPG.msg('Brak pola POP_ZAW w stałych systemu (KST_PPK).');
   _ret:=-1
?};

_ret


\stalesys_wid_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Aktualizacja widoków stałych systemu - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja widoków stałych systemu'


\sch_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Importuje "personelowe" wnioski w obiegu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_msg:="
{? _a
|| __UPG.msg('Zakończono import wniosku: \"%1\".'@[_b])
|| __UPG.msg('Nie udało się zaimportować wniosku: \"%1\".'@[_b])
?}
";
:: Nazwy formuł w obiegi.fml zwracających nazwę konkretnego wniosku (odzdzielone przecinkami):
_nazwy:=spli_str('nazwa_dwwd',',');

{! _ii:=1..obj_len(_nazwy)
|! _nazwa:=exec(_nazwy[_ii],'obiegi');
   _msg(exec('imp_wn','sch_imp',_nazwa,1,0),_nazwa)
!};

obj_del(_nazwy);
1


\sch_imp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Importuje "personelowe" wnioski w obiegu - opis
::----------------------------------------------------------------------------------------------------------------------
'Import typów wniosków w obiegu'


\stalesys_PPK_VI
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Aktualizacja stałych dziedziny PPK
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
{? var_pres('POP_ZAW',KST_PPK)>0
|| _zap:=obj_new('TAB','add');
   _zap.TAB:=tab_tmp(1,'DATE','DATE','Data'@,'WAR','INTEGER','Wartość'@);
   _zap.add:="
      .TAB.DATE:=_a;
      .TAB.WAR:=_b;
      .TAB.add()";
:: Zapisy do dodania (konieczne zachowanie kolejności)
   _zap.add(date(0,0,0),0);
   _zap.add(date(2022,6,4),14);

   {? _zap.TAB.first()
   || {!
      |? exec('czytaj','#stalesys',_zap.TAB.DATE,KST_PPK,'POP_ZAW');
         {? KST_PPK.POP_ZAW=0
         || KST_PPK.POP_ZAW:=_zap.TAB.WAR;
            exec('zapisz_zes','#stalesys',_zap.TAB.DATE,KST_PPK,'POP_ZAW');
            _info:='Ustawiono wartość %1 dla daty %2.'@[$_zap.TAB.WAR,_zap.TAB.DATE$1]
         || _info:='Ustawienie wartości dla daty %1 nie było konieczne.'@[_zap.TAB.DATE$1]
         ?};
         __UPG.msg(_info);

         _zap.TAB.next()
      !}
   ?};
   obj_del(_zap)
|| __UPG.msg('Brak pola POP_ZAW w stałych systemu (KST_PPK).');
   _ret:=-1
?};

_ret


\stalesys_PPK_VI_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Aktualizacja stałych dziedziny PPK - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja stałych dziedziny PPK'

:Sign Version 2.0 jowisz:1048 2023/06/23 14:16:37 0ab701e96136f0aa5166a715dd9141bcad78213665f30c05b6e7eb280b16573839521a4e7ed08bef15879f6bee1d9812358f84a17f36e2d2ca92c29569b8fdf7c343db6ae45dc0f61528bd11b15a8e5552e3c9b646d7d78890501b7040aeaaf64a19efb471021c4cfdf1f091ad1a90122f312431d133fcd84dcdff5e5aa039bf
