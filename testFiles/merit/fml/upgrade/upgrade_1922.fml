:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: upgrade_1922.fml
:: Utworzony: 08.01.2019
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Funkcje do obsługi transferu danych z wersji 19.02 na 19.22
::
::            Każda formuła powinna zwracać wartość liczbową, interpretacja:
::                1 - całość przeszła bez błędów - realizacja zakwalifikowana jako wykonana
::               -1 - całość przeszła z uwagami  - dla zadania automatycznego:
::                                                   * realizacja zakwalifikowana jako wykonana
::                                                 dla zadania manualnego:
::                                                   * zrezygnowano z wykonania zadania w danej chwili - zadanie nadal
::                                                     pozostaje do wykonania
::                0 - został stwierdzony błąd    - realizacja zakwalifikowana jako przerwana
::
::            Definicja zadania transferowego:
::               __UPG.add_task(name,[auto],[mf],domain,[ver],[required],[manual],[nofirm],[onlyact])
::                gdzie:
::                   name     [STRING] - nazwa formuły potransferowej (z bieżącego pliku).
::                   auto     [STRING] - formuła automatyczna: T [domyślnie] / N
::                   mf       [STRING] - formuła wielofirmowa: T [domyślnie] / N
::                                        T - wykonywana tylko raz
::                                        N - wykonywana w każdej firmie
::                   domain   [STRING] - kod dziedziny produktowej (informacyjnie)
::                   ver      [NUMBER] - wersja formuły
::                   required [STRING] - czy zadanie musi być wykonane
::                                       Dla zadań automatycznych parametr zawsze przyjmuje wartość T.
::                                       Dla zadań manualnych - domyślnie: N.
::                   manual   [STRING] - kod powiązanego zadania manualne w ramach wersji
::                                        domyślnie brak
::                                        jeśli podano i istnieje oraz zostaną dokonane zapisy w buforze to zadanie
::                                        zmieni status na wymagalne
::                   nofirm   [NUMBER] - dla zadań jednofirmowych pomija firmę '000' (wartość 1), 0-domyślna wartość
::                   onlyact  [STRING] - zadanie aktualizacyjne dla danej wersji: T-tak, N-nie (domyślnie)
::
::            W formułach można stosować zapis do przesłania komunikatów dla realizacji, np.
::               __UPG.msg('Brak zapisów dla roku 2016 w tabeli FAKS.')
::
::            W formułach automatycznych, które zostały powiązane z formułą manualną można stosować zapis o danych
::            wymagalnych do zweryfikowania, np.
::               __UPG.buf(USERS.uidref(),'Zweryfikuj parametry użytkownika w kontekście anulowania dokumentów')
::            zapis jest dołączony bezpośrednio pod wskazaną czynością manualną
::            Do uzyskania zapisów dla realizacji zadania manualnego służy metoda:
::               __UPG.get_buf()
::            wynik zwracany jest w formie tabeli o strukturze:
::               CODE  - STRING[48]
::               DESC  - STRING[255]
::               FIRMA - STRING[16] - ref SQL
::
::            \formuła      - formuła potransferowa
::            \formuła_desc - opis dla formuły potransferowej
::======================================================================================================================
:: Sposób tworzenia i opisu formuł transferowych:
::           - każda formuła musi zawierać opis (\formuła_desc) która w pierwszych zdaniach opisuje co robi, w kolejnych
::             zdaniach zawiera krótki opis techniczny np. uzupełniono pole XX w tabeli AA wartością 'T'
::           - każda formuła musi badać wynik swojego działania, zwracać 1, 0, -1 jeżeli od jej wykonania jest zależne
::             działanie systemu
::           - każda formuła musi tworzyć opis tego, jak przebiegło jej wykonanie wykorzystując __UPG.msg
::             tak aby po opisie można było wywnioskować co formuła konkretnie zrobiła
::             np. w tabeli AA Poprawiono X rekordów z N przeanalizowanych
::           - każda funkcja powinna posiadać progress, pokazujący postęp wykonania (jeżeli funkcja jest przewidziana
::             do wykonania na wielu rekordach)
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Główna formuła upgrade-ów 19.22
::----------------------------------------------------------------------------------------------------------------------
:: Zadania wykonywane raz dla całego systemu
__UPG.add_task('upgrade_act',,,'ZPR',7);
__UPG.add_task('color',,,'ZWS',2);
__UPG.add_task('funpar',,,'ZWS',2);
__UPG.add_task('KH_DOD',,,'ZWS');
__UPG.add_task('RA',,,'ZWS');
__UPG.add_task('N',,,'PKD');
__UPG.add_task('OS_N',,,'PKD');
__UPG.add_task('M_SETW',,,'ZWS');
__UPG.add_task('areatitle',,,'ZWS',2);
__UPG.add_task('pba_act',,,'PBA');
__UPG.add_task('parametry_del',,,'ZWS');
__UPG.add_task('BI_TODO',,,'ZWS');
__UPG.add_task('USERS',,,'ZWS');
__UPG.add_task('espr_o',,,'FKS');
__UPG.add_task('zmiana_R',,,'PPL');
__UPG.add_task('KAL_OPIS',,,'ZWS');
__UPG.add_task('ZA_INST',,,'PBA');
__UPG.add_task('obywatel',,,'PPK');
__UPG.add_task('start_PPK',,,'PPK',3);
__UPG.add_task('sch_imp',,,'OBE');
__UPG.add_task('espr2',,,'FKS');
__UPG.add_task('akt_1922_05',,,'PPL',3);
__UPG.add_task('akt_1922_05_pop',,,'PPL');
__UPG.add_task('akt_woz',,,'OBE');
__UPG.add_task('akt_wozda',,,'OBE',1);
__UPG.add_task('edek_cit',,,'FKS');
__UPG.add_task('khblok',,,'FKS');
__UPG.add_task('zmiana_ZP',,,'PPL',1);
:: Zadania wykonywane dla każdej firmy osobno
__UPG.add_task('B_USRDOM',,'N','ZWS',,,,0);
__UPG.add_task('HN',,'N','LUM',,,,1);
__UPG.add_task('HARMON',,'N','LUM',,,,1);
__UPG.add_task('HGEN',,'N','LUM',,,,1);
__UPG.add_task('UM',,'N','LUM',,,,1);
__UPG.add_task('UP',,'N','LUM',,,,1);
__UPG.add_task('ZLP',,'N','LUM',,,,1);
__UPG.add_task('POS',,'N','LUM',,,,1);
__UPG.add_task('zws_par_pstn',,'N','ZWS',,,,1);
__UPG.add_task('ZL',,'N','TTE',,,,1);
__UPG.add_task('plugins',,'N','ZWS',6,,,0,'T');
__UPG.add_task('PROJ2FAP',,'N','ZWS',,,,1);
__UPG.add_task('SZK_WZO',,'N','PBA',,,,1);
__UPG.add_task('OKR',,'N','ZWS',,,,1);
__UPG.add_task('FPACZ',,'N','LUM',,,,1);
__UPG.add_task('FAPOW',,'N','LSP',,,,1);
__UPG.add_task('DOKUML',,'N','LMG',,,,1);
__UPG.add_task('REM_KAT',,'N','ZWS',,,,1,'T');
__UPG.add_task('REM_ZAS',,'N','ZWS',,,,1,'T');
__UPG.add_task('ppk_role',,'N','ZWS',,,,1);
__UPG.add_task('PPK_WRD',,'N','ZWS',,,,1);
__UPG.add_task('srsr_dk',,'N','FST',2,,,1,'T');
:: Zadania manualne
__UPG.add_task('procesy_obieg','N','N','ZWS',1,'N');
__UPG.add_task('formuly_PPK','N','N','PPL',1,,,1);
__UPG.add_task('formuly_ZP','N','N','PPL',1,,,1);
__UPG.add_task('formuly_ZP_POP','N','N','PPL',1,,,1);
__UPG.add_task('formuly_ZP_POP_1','N','N','PPL',1,,,1);
__UPG.add_task('ROD_cfg','N','T','ZWS',,,,1);
__UPG.add_task('formuly_ZP_POP_2','N','N','PPL',1,,,1);
__UPG.add_task('formuly_ZP_POP_3','N','N','PPL',2,,,1);
~~


\color
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [17.42]
:: OPIS: Aktualizacja schematów kolorów
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
exec('Color','#object');
exec('Legend','#object');
exec('odtw_kolor_iko','color',2);
__UPG.msg('Zostały zaaktualizowane schematy kolorów i ikon dla akcji Legenda.');
_res


\color_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [17.42]
:: OPIS: Aktualizacja schematów kolorów - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja schematu kolorów.'


\upgrade_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Aktualizacja typów danych oraz czynności dla wskazanych obszarów
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
:: Poniżej wpisać domeny, których dotyczą nowe lub aktualizowane czynności
::_dom:=spli_str('LMG.LSP.LZK.LUM.LOD.PKD.PKW.PPL.TPP.TTE.TRE.WYP.ZWS.FST.FKS.KON.OBE.OBG.PBA','.');
_dom:=spli_str('LSP.LUM.ZUI.ZWS.PBA.LTR.LUO.TTE.TRE.ZPR.PPK.FKS.OBG.OBE','.');
_len:=obj_len(_dom);

{? _len & _dom[1]<>''
|| FUN.prg_start(_len+2,'Aktualizacja czynności.'@,,,1);

:: Uzupełnienie domen (zawsze)
   FUN.prg_next();
   exec('add_domain','#b_action');
   __UPG.msg('Zaktualizowano dziedziny.');

:: Uzupełnienie typów (zawsze)
   FUN.prg_next();
   exec('fill_tab','#b_type',0);
   __UPG.msg('Zaktualizowano typy danych.');

   {! _i.._len
   |! FUN.prg_next();
      _domain:=exec('FindInSet','#table','B_DOMAIN','SYMBOL',_dom[_i]);
      {? _domain<>null()
      || exec('import_needed_dom','#b_design',_domain,0);
         __UPG.msg('Zaktualizowano czynności dziedziny: %1.'[_dom[_i]])
      ?}
   !};
   FUN.prg_stop()
?};
obj_del(_dom);
_res


\upgrade_act_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Aktualizacja typy danych oraz czynności dla wskazanych obszarów - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja typów danych oraz czynności dla modelera'


\funpar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.02]
:: OPIS: Aktualizacja obszaru Ustawienia i parametryzacja.
::----------------------------------------------------------------------------------------------------------------------
{? exec('aktualizuj','funpar',0)
|| __UPG.msg('Zaktualizowano zawartość obszaru: Ustawienia i parametryzacja.')
|| __UPG.msg('Nie zaktualizowano zawartości obszaru: Ustawienia i parametryzacja.')
?}


\funpar_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.02]
:: OPIS: Aktualizacja obszaru Ustawienia i parametryzacja - opis.
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja ustawień i parametryzacji'


\KH_DOD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Uzupełnia pola w tabeli KH_DOD
::----------------------------------------------------------------------------------------------------------------------
_formula:="
   _put:=0;
   {? KH_DOD.BL_INCL='' || KH_DOD.BL_INCL:='N'; _put:=1 ?};
   {? _put || KH_DOD.put() ?}
";
KH_DOD.prefix();
_result:=KH_DOD.for_each(_formula,1);
{? _result
|| __UPG.msg('Zaktualizowano nowe pola w kartotece kontrahentów (dane dodatkowe dla firmy).')
|| __UPG.msg('Wystąpił błąd podczas aktualizacji nowych pól w kartotece kontrahentów (dane dodatkowe dla firmy).')
?};
_result


\KH_DOD_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Uzupełnia pola w tabeli KH_DOD - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tabeli kontrahentów (dane dodatkowe dla firmy).'


\HN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wypełnia pola w tabeli HN
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
HN.cntx_psh();
HN.prefix();
_res:=HN.for_each("
   __lrec+=1;
   _put:=0;
   {? HN.AKT=''
   || HN.AKT:='T';
      _put:=1
   ?};
   {? HN.D1=''
   || HN.D1:='N';
      _put:=1
   ?};
   {? HN.D2=''
   || HN.D2:='N';
      _put:=1
   ?};
   {? HN.D3=''
   || HN.D3:='N';
      _put:=1
   ?};
   {? HN.D4=''
   || HN.D4:='N';
      _put:=1
   ?};
   {? HN.D5=''
   || HN.D5:='N';
      _put:=1
   ?};
   {? HN.D6=''
   || HN.D6:='N';
      _put:=1
   ?};
   {? HN.D7=''
   || HN.D7:='N';
      _put:=1
   ?};
   {? HN.HOP_DIR=0
   || HN.HOP_DIR:=1;
      _put:=1
   ?};
   {? HN.HOP_MODE=''
   || HN.HOP_MODE:='O';
      _put:=1
   ?};
   {? HN.STAT_REJ=''
   || HN.STAT_REJ:='T';
      _put:=1
   ?};
   {? _put>0
   || {? HN.put()
      || __lmod+=1
      ?}
   ?}
");
HN.cntx_pop();
__UPG.msg('Zaktualizowano nagłówki harmonogramów.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\HN_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wypełnia pola w tabeli HN - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja nagłówków harmonogramów (umowy cykliczne).'


\HARMON
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wypełnia pola w tabeli HARMON
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
HARMON.cntx_psh();
HARMON.prefix();
_res:=HARMON.for_each("
   __lrec+=1;
   _put:=0;
   {? HARMON.STAT_REJ=''
   || HARMON.STAT_REJ:='Z';
      _put:=1
   ?};
   {? _put>0
   || {? HARMON.put()
      || __lmod+=1
      ?}
   ?}
");
HARMON.cntx_pop();
__UPG.msg('Zaktualizowano pozycje harmonogramów umów.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\HARMON_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wypełnia pola w tabeli HARMON - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja pozycji harmonogramów (umowy cykliczne).'


\HGEN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wypełnia pola w tabeli HGEN
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
HGEN.cntx_psh();
HGEN.prefix();
_res:=HGEN.for_each("
   __lrec+=1;
   _put:=0;
   {? HGEN.ST_OK=''
   || HGEN.ST_OK:=HGEN.ST;
      _put:=1
   ?};
   {? _put>0
   || {? HGEN.put()
      || __lmod+=1
      ?}
   ?}
");
HGEN.cntx_pop();
__UPG.msg('Zaktualizowano okresy generacji zgłoszeń.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\HGEN_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wypełnia pola w tabeli HGEN - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja okresów generacji zgłoszeń'


\B_USRDOM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wypełnia pola w tabeli B_USRDOM
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
B_USRDOM.cntx_psh();
B_USRDOM.prefix();
_res:=exec('napraw_canal','#b_usrdom',1);
B_USRDOM.cntx_pop();
__UPG.msg('Zaktualizowano okresy generacji zgłoszeń.');
_res


\B_USRDOM_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wypełnia pola w tabeli B_USRDOM - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja dziedzin dla użytkowników'


\BI_TODO
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wypełnia pola w tabeli BI_TODO
::----------------------------------------------------------------------------------------------------------------------
_res:=1;

VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
BI_TODO.cntx_psh();
BI_TODO.index('BI_PROC');
BI_TODO.prefix();
_res:=BI_TODO.for_each("
   __lrec+=1;
   _put:=0;
   {? BI_TODO.MEGA_DOM=''
   || BI_TODO.MEGA_DOM:=exec('domain_megad','#b_domain',BI_TODO.B_DOMAIN,0);
      _put:=1
   ?};
   {? _put>0
   || {? BI_TODO.put()
      || __lmod+=1
      ?}
   ?}
");
BI_TODO.cntx_pop();
__UPG.msg('Zaktualizowano zadania na listach TODO.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
_res


\BI_TODO_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wypełnia pola w tabeli BI_TODO - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zadań na listach TODO'


\RA
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja atrybutów składników płacowych.
::   WE:
::   WY: zgodna ze specyfikacją (patrz nagłówek pliku)
::----------------------------------------------------------------------------------------------------------------------
exec('add_attr','rubatr',19,19001,'Okres wyrażony w tygodniach',1,'',,5,26,27,28,32,33);

:: ZUS ERP-7
exec('add_attr','rubatr',100261,1002611,'Świadczenia wypłacone - zasiłki',1,
     'Świadczenia wypłacone, uwzględnione przy przygotowaniu danych do RP-7.',
     ,465,468,510,512,514,516,523,529);
exec('add_attr','rubatr',100261,1002612,'Świadczenia wypłacone - rehabilitacyjne',1,
     'Świadczenia wypłacone, uwzględnione przy przygotowaniu danych do RP-7.',
     ,531,533);
exec('add_attr','rubatr',100262,1002621,'Wyrównania wypłaconych świadczeń - zasiłki',1,
     'Wyrównania świadczeń, uwzględnione przy przygotowaniu danych do RP-7.',
     ,467,469,470,511,513,515,517,524,530,532,7017,7018,7071);
exec('add_attr','rubatr',100262,1002622,'Wyrównania wypłaconych świadczeń - rehabilitacyjne',1,
     'Wyrównania świadczeń, uwzględnione przy przygotowaniu danych do RP-7.',
     ,537);
exec('add_attr','rubatr',1002,10027,'Składniki wypłacone obok wynagrodzenia',1,
     'Kwoty składników wynagrodzenia za dany rok kalendarzowy, wypłaconych obok wynagrodzenia za czas niezdolności do '
     'pracy, zasiłku chorobowego, macierzyńskiego, opiekuńczego, świadczenia rehabilitacyjnego, które w okresie '
     'pobierania tego wynagrodzenia lub zasiłku nie stanowiły podstawy wymiaru składek na ubezpieczenie społeczne/ '
     'ubezpieczenia emerytalne i rentowe');
exec('add_attr','rubatr',1002,10028,'Przychód z ubezpieczeniem wypadkowym',1,
     'Kwoty przychodu należnego za dany rok kalendarzowy, który nie stanowił podstawy wymiaru składek na '
     'ubezpieczenia emerytalne i rentowe, a stanowił podstawę wymiaru składek na ubezpieczenie wypadkowe');
exec('add_attr','rubatr',1002,10029,'Inne należności',1,
     'Kwoty innych wypłaconych należności, które nie zostały wykazane w kolumnach 2–6 i ich rodzaj – o ile są one '
     'wliczane do podstawy wymiaru świadczeń. Przykład: kwota rekompensaty wypłaconej pracownikowi z tytułu podwyżki '
     'cen na artykuły żywnościowe, opał i energię, która była wypłacana obok wynagrodzenia lub zasiłku z '
     'ubezpieczenia społecznego w okresie od 1 września 1981 r. do 30 czerwca 1987 r., '
     'kwota rekompensaty pieniężnej ustalonej z tytułu okresowego niepodwyższania płac w sferze budżetowej.');

exec('add_use','rubatr',191,3,5,25,26,27,28,32,33);

__UPG.msg('Zaktualizowano atrybuty składników płacowych');
1


\RA_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja atrybutów składników płacowych - opis.
::   WE:
::   WY: zgodna ze specyfikacją (patrz nagłówek pliku)
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja atrybutów składników płacowych'


\N
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja kartoteki nieobecności.
::   WE:
::   WY: zgodna ze specyfikacją (patrz nagłówek pliku)
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
_rep:=exec('createReport','#upgrade');

N.trig_off('*','*');
N.cntx_psh();
N.index('NIEOPRAC');
N.prefix();
_rep.setAll(N.size());
_loop:=N.first();
{!
|? _loop
|! _rep.incCnt();
   {? N.UW=''
   || N.UW:='D';
      {? N.put()
      || _rep.incMod()
      || _rep.incErr();
         _ret:=-1
      ?}
   || _rep.incUch()
   ?};
   _loop:=N.next()
!};
N.cntx_pop();
N.trig_on('*','*');

: raport wykonania
_rep.write();

_ret


\N_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja kartoteki nieobecności - opis.
::   WE:
::   WY: zgodna ze specyfikacją (patrz nagłówek pliku)
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja kartoteki nieobecności'


\OS_N
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja informacji o nieobecnościach zleceniobiorców.
::   WE:
::   WY: zgodna ze specyfikacją (patrz nagłówek pliku)
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
_rep:=exec('createReport','#upgrade');

OS_N.trig_off('*','*');
OS_N.cntx_psh();
OS_N.index('OND');
OS_N.prefix();
_rep.setAll(OS_N.size());
_loop:=OS_N.first();
{!
|? _loop
|! _rep.incCnt();
   {? OS_N.UW=''
   || OS_N.UW:='D';
      {? OS_N.put()
      || _rep.incMod()
      || _rep.incErr();
         _ret:=-1
      ?}
   || _rep.incUch()
   ?};
   _loop:=OS_N.next()
!};
OS_N.cntx_pop();
OS_N.trig_on('*','*');

: raport wykonania
_rep.write();

_ret


\OS_N_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja informacji o nieobecnościach zleceniobiorców - opis.
::   WE:
::   WY: zgodna ze specyfikacją (patrz nagłówek pliku)
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja informacji o nieobecnościach zleceniobiorców'


\UM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wypełnia pola w tabeli UM
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
UM.cntx_psh();
UM.prefix();
_res:=UM.for_each("__lrec+=1;
                   {? UM.STAT_REJ=''
                   || {? UM.STU().RODZ='N' || UM.STAT_REJ:='Z' || UM.STAT_REJ:='T' ?};
                      {? UM.put(1) || __lmod+=1 ?}
                   ?}
                 ");
UM.cntx_pop();
__UPG.msg('Zaktualizowano umowy cykliczne.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\UM_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wypełnia pola w tabeli UM - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja umów cyklicznych'


\zws_par_pstn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Formuła dodaje czynność ZWS_PAR_PSTN do odpowiednich ról.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cr:=''+"'PKD_EZK_RPZA','PKD_ZAT_PZAT','PKD_DOS_PRSW','PKD_ZAT_ZRDZ','PKD_ZAT_ZRDK','PKD_ZAT_ZRPT','PKD_ZAT_ZRCP'";
_uid:='ZWS_PAR_PSTN';

_ROLE:=sql(
   'select distinct B_ROLE.NAME '
   'from B_ACTROL join B_ACTION using (B_ACTROL.B_ACTION,B_ACTION.REFERENCE) '
                 'join B_ROLE using (B_ACTROL.B_ROLE,B_ROLE.REFERENCE) '
   'where B_ACTROL.FIRMA=:_a and B_ACTION.UID in (:_b) '
   'order by 1',
   exec('ref_firma','ustawienia'),_cr
);

{? type_of(_ROLE)=type_of(~~)
|| __UPG.msg('Przygotowanie listy ról, do których należy dodać czynność %1 nie powiodło się.' [_uid]);
   return(0)
?};

{? _ROLE.first()
|| _ret:=1;
   {!
   |? {? exec('add_actrol_one','#b_role',_ROLE.NAME,_uid)
      || __UPG.msg('Czynność przypisano do roli "%1".' [_ROLE.NAME])
      || __UPG.msg('Przypisanie czynności do roli "%1" nie powiodło się.' [_ROLE.NAME]);
         _ret:=-1
      ?};
      _ROLE.next()
   !};
   _ret
|| __UPG.msg('W systemie brak ról, z uprawnieniami do czynności referencyjnych.');
   1
?}


\zws_par_pstn_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Formuła dodaje czynność ZWS_PAR_PSTN do odpowiednich ról - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Przypisanie czynności "ZWS_PAR_PSTN - Lista wszystkich stanowisk" do odpowiednich ról'


\M_SETW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Aktualizacja znacznika M.SETW
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
M.cntx_psh();
M.prefix();
M.for_each("__lrec+=1; {? M.SETW='' || M.SETW:='W'; {? M.put(1) || __lmod+=1 ?} ?}",1);
M.cntx_pop();
__UPG.msg('Zaktualizowano zapisy dla kartoteki materiałowej - miejsce ewidencji terminu ważności.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'@[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\M_SETW_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Aktualizacja znacznika M.SETW
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja miejsca ewidencji terminu ważności dla kartoteki materiałowej'


\areatitle
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.42]
:: OPIS: Inicjuje AreaTitle - obiekt do wyświetlania tytułów w obszarach roboczych
::----------------------------------------------------------------------------------------------------------------------
exec('init','areatitle');
__UPG.msg('Zainicjowano tytuły obszarów roboczych.');
1


\areatitle_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.42]
:: OPIS: Inicjuje AreaTitle - obiekt do wyświetlania tytułów w obszarach roboczych - opis
::----------------------------------------------------------------------------------------------------------------------
'Inicjuje AreaTitle - obiekt do wyświetlania tytułów obszarów roboczych'


\pba_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła naprawcza dla ankiet sprzed aktualizacji (aktualizacja 12.51_19)
::----------------------------------------------------------------------------------------------------------------------
{? exec('upgrade_pba','phr_dane')
|| __UPG.msg('Zaktualizowano moduł badań ankietowych.')
|| __UPG.msg('Nie zaktualizowano modułu badań ankietowych.')
?};
1


\pba_act_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Formuła naprawcza dla ankiet sprzed aktualizacji (aktualizacja 12.51_19)
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja modułu badań ankietowych'


\ZL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Uzupełnia pola w tabeli ZL
::   WY: -1/0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

ZL.cntx_psh();
ZL.index('SYM');
ZL.prefix();
_fml:="
   _put:=0;
   {? ZL.STAT_K=''
   || ZL.STAT_K:='N'
   ?};
   {? _put>0
   || ZL.put()
   ?};
   ~~
";
_result:=ZL.for_each(_fml,1);
ZL.cntx_pop();
_result


\ZL_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Uzupełnia pola w tabeli ZL - opis
::   WY: STRING
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tabeli zleceń o znacznik zakończenia rozliczenia kosztów.\n'
'Może się nie udać, tylko jeżeli jakiś rekord tabeli ZL został zablokowany przez innego użytkownika.'


\plugins
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.02]
:: OPIS: Uzupełnia definicję wtyczek wdrożeniowych
::----------------------------------------------------------------------------------------------------------------------
exec('init','plugins');
__UPG.msg('Uzupełniono definicję wtyczek wdrożeniowych.');
1


\plugins_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.02]
:: OPIS: Uzupełnia definicję wtyczek wdrożeniowych - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie definicji wtyczek wdrożeniowych:\n'
'REM_ZAS_T_SYMBOL_001\n'
'REM_ZAS_T_NAZWA_001\n'
'PULPIT_F_001\n'
'PRZEL_TYT\n'
'DOKUM_F_EMAIL_001\n'
'DOKUM_F_FROM_001\n'
'DOKUM_F_SENDER_001\n'
'DOKUM_F_REPLYTO_001\n'
'VPRODREJ_VALID_001\n'


\parametry_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Usuwa nieużywane w Merit parametry
::----------------------------------------------------------------------------------------------------------------------
_res:=1;

_p31:=exec('get_par','#parametr',31);
{? type_of(_p31)>0
|| {? exec('del','#parametr',,31)
   || __UPG.msg('Usunięto parametr systemu 31.')
   || _res:=-1;
      __UPG.msg('Nie usunięto parametru systemu 31.')
   ?}
?};

_p91:=exec('get_par','#parametr',91);
{? type_of(_p91)>0
|| {? exec('del','#parametr',,91)
   || __UPG.msg('Usunięto parametr systemu 91.')
   || _res:=-1;
      __UPG.msg('Nie usunięto parametru systemu 91.')
   ?}
?};

_p100:=exec('get_par','#parametr',100);
{? type_of(_p100)>0
|| {? exec('del','#parametr',,100)
   || __UPG.msg('Usunięto parametr systemu 100.')
   || _res:=-1;
      __UPG.msg('Nie usunięto parametru systemu 100.')
   ?}
?};

_p451:=exec('get_par','#parametr',451);
{? type_of(_p451)>0
|| {? exec('del','#parametr',,451)
   || __UPG.msg('Usunięto parametr systemu 451.')
   || _res:=-1;
      __UPG.msg('Nie usunięto parametru systemu 451.')
   ?}
?};

_p452:=exec('get_par','#parametr',452);
{? type_of(_p452)>0
|| {? exec('del','#parametr',,452)
   || __UPG.msg('Usunięto parametr systemu 452.')
   || _res:=-1;
      __UPG.msg('Nie usunięto parametru systemu 452.')
   ?}
?};
_res


\parametry_del_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Usuwa nieużywane w Merit parametry - opis
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
'Usunięcie nieużywanych parametrów (Ustawienia i parametryzacja -> Wspólne -> Ustawienia systemu -> Lista parametrów)'


\PROJ2FAP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Aktualizacja pól w tabeli PROJ2FAP
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

PROJ2FAP.cntx_psh();

_msk:=PROJ2FAP.names();
_msk.clear();
{? _msk.first()
|| {!
   |? echo('Aktualizacja %1'@[(_msk.NAME+3)]);
      PROJ2FAP.use(_msk.NAME);
      PROJ2FAP.for_each("
         _put:=0;
         __lrec+=1;
         {? PROJ2FAP.PROJREM=''
         || PROJ2FAP.PROJREM:='P';
            _put:=1
         ?};
         {? _put || {? PROJ2FAP.put(1) || __lmod+=1 ?} ?}
      ");
      echo();
      _msk.next()
   !}
?};
obj_del(_msk);

PROJ2FAP.cntx_pop();

__UPG.msg('Zaktualizowano pola w tabeli powiązań dokumentów sprzedaży i zakupu z projektami.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\PROJ2FAP_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Aktualizacja pól w tabeli PROJ2FAP - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja pól w tabeli powiązań dokumentów sprzedaży i zakupu z projektami'


\USERS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Aktualizacja użytkowników e-kiosków
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
USERS.cntx_psh();
USERS.prefix();
USERS.for_each("
   __lrec+=1;
   {? USERS.P<>null() & USERS.OSOBA=null()
   || {? USERS.P().OSOBA<>null() & exec('_osoba_unique','users',USERS.P().OSOBA,USERS.ref())>0
      || USERS.OSOBA:=USERS.P().OSOBA;
         {? USERS.put(1) || __lmod+=1 ?}
      ?}
   ?}",
   1
);
USERS.cntx_pop();
__UPG.msg('Zaktualizowano użytkowników e-kiosków.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'@[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\USERS_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Aktualizacja użytkowników e-kiosków - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja użytkowników e-kiosków (przepisanie powiązania z pracownikiem na powiązanie z osobą)'


\SZK_WZO
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Aktualizacja wzorców dla szkoleń
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

SZK_WZO.cntx_psh();
SZK_WZO.prefix();
SZK_WZO.for_each("
   __lrec+=1;
   {? SZK_WZO.TRYB=''
   || SZK_WZO.TRYB:='T';
      {? SZK_WZO.put() || __lmod+=1 ?}
   ?}
");
SZK_WZO.cntx_pop();

__UPG.msg('Zaktualizowano pola w tabeli wzorców dla szkoleń.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\SZK_WZO_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Aktualizacja wzorców dla szkoleń - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja wzorców dla szkoleń (uzupełnienie pola określającego sposób liczenia punktów na egzaminie po szkoleniu'


\OKR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Uzupełnia znacznik zamknięcia roku OKR.ZAM
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
OKR.cntx_psh();
OKR.prefix();
OKR.for_each("__lrec+=1;
              {? (+form(OKR.ZAM))=3
              || OKR.ZAM+='N';
                 {? OKR.put(1) || __lmod+=1 ?}
              ?}
             ");
OKR.cntx_pop();
__UPG.msg('Zaktualizowano znacznik zamknięcia okresów dla umów cyklicznych.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);

_dom_lsp:=exec('FindInSet','#table','B_DOMAIN','SYMBOL','LSP',,,1);
_dom_lum:=exec('FindInSet','#table','B_DOMAIN','SYMBOL','LUM',,,1);
_add:=exec('FindInSet','#table','OKR_OBSZ','OBS_ROK',_dom_lum,REF.FIRMA)=null();

__lrec:=__lmod:=0;
{? _add
|| OKR_OBSZ.cntx_psh();
   OKR_OBSZ.index('OBS_ROK');
   OKR_OBSZ.prefix(REF.FIRMA,_dom_lsp);
   {? OKR_OBSZ.first()
   || {!
      |? __lrec+=1;
         OKR_OBSZ.cntx_psh();
         OKR_OBSZ.prefix();
         OKR_OBSZ.B_DOMAIN:=_dom_lum;
         {? OKR_OBSZ.add(1) || __lmod+=1 ?};
         OKR_OBSZ.cntx_pop();
         OKR_OBSZ.next()
      !}
   ?};
   OKR_OBSZ.cntx_pop();
   __UPG.msg('Dodano dla okresów obszar umów cyklicznych.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod])
?};

VAR_DEL.delete('__lrec','__lmod');
_res


\OKR_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Uzupełnia znacznik zamknięcia roku OKR.ZAM - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zamknięcia okresów obrachunkowych dla umów cyklicznych'


\espr_o
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Uaktualnienie zawartości pola E_SPR_O.FIRMA
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('Dane');
Dane:=obj_new('ILE','UPD');
Dane.ILE:=0;
Dane.UPD:=0;
E_SPR_O.cntx_psh();
E_SPR_O.prefix();
E_SPR.cntx_psh();
E_SPR.prefix();
E_SPR_O.for_each("
   Dane.ILE+=1;
   {? E_SPR_O.FIRMA=null
   || E_SPR_O.FIRMA:=E_SPR_O.E_SPR().FIRMA;
      {? E_SPR_O.put()
      || Dane.UPD+=1
      ?}
   ?}
");
E_SPR.cntx_pop();
E_SPR_O.cntx_pop();
{? Dane.UPD
|| __UPG.msg('Uzupełniono zawartości pola E_SPR_O.FIRMA.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$Dane.ILE,$Dane.UPD])
|| __UPG.msg('Uzupełnienie zawartości pola E_SPR_O.FIRMA było zbędne.')
?};
VAR_DEL.delete('Dane');
1


\espr_o_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Uaktualnienie zawartości pola E_SPR_O.FIRMA - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie zawartości pola E_SPR_O.FIRMA'


\POS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wypełnia pola w tabeli POS.NR - opis
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
POS.cntx_psh();
POS.prefix();
_res:=POS.for_each("__lrec+=1;
                   _posnr:=exec('wz_pos_nr','podz_admin',POS.NR);
                   {? _posnr<>POS.NR
                   || POS.NR:=_posnr;
                      {? POS.put(1) || __lmod+=1 ?}
                   ?}
                 ");
POS.cntx_pop();
__UPG.msg('Zaktualizowano numery posesji.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\POS_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wypełnia pola w tabeli POS.NR - opis
::----------------------------------------------------------------------------------------------------------------------
'Zmiana formatowania numeru posesji'


\ZLP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wypełnia pola w tabeli ZLP
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
_msk:=ZLP.names();
ZLE.cntx_psh();
ZLP.cntx_psh();
_msk.clear();
{? _msk.first()
|| {!
   |? ZLP.use(_msk.NAME);
      ZLE.use('zlecen_'+(1+(3-_msk.NAME)));
      ZLP.prefix();
      _res:=ZLP.for_each("__lrec+=1;
                          _put:=0;
                          {? ZLP.STAT_REJ=''
                          || {? ZLP.ZLE().CZUM='N' || ZLP.STAT_REJ:='Z' || ZLP.STAT_REJ:='N' ?};
                             _put+=1
                          ?};
                          {? ZLP.SP=''
                          || {? ZLP.DZP<>date(0,0,0) | ZLP.DP<>date(0,0,0) || ZLP.SP:='T' || ZLP.SP:='N' ?};
                             _put+=1
                          ?};
                          {? ZLP.NOMAIL=''
                          || ZLP.NOMAIL:='T';
                             _put+=1
                          ?};
                          {? ZLP.GPZO=''
                          || ZLP.GPZO:='N';
                             _put+=1
                          ?};
                          {? ZLP.SPLAN=''
                          || ZLP.SPLAN:='N';
                             _put+=1
                          ?};
                          {? _put
                          || exec('stanPlan','umowy_zlecenia');
                             {? ZLP.put(1) || __lmod+=1 ?}
                          ?}
                        ");
      _msk.next()
   !}
?};
obj_del(_msk);
ZLE.cntx_pop();
ZLP.cntx_pop();
__UPG.msg('Zaktualizowano zgłoszenia jednorazowe.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\ZLP_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wypełnia pola w tabeli ZLP - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zgłoszeń jednorazowych'


\UP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wypełnia pola w tabeli UP
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
ZLBR.cntx_psh();
ZLBR.index('ODDZ');
UP.cntx_psh();
UP.prefix();
_res:=UP.for_each("
   __lrec+=1;
   _put:=0;
   {? UP.ZLBR=null()
   ||
      {? UP.H<>null()
      ||
         UP.H();
::       Jest harmonogram, pobieram brygady
         _zlbr:=exec('transfer_harmon','umowy_harm',HN.ref(),,2);
         {? _zlbr.last()
         ||
::          Przyjmuję że ostatnio użyta brygada w harmonogramie stempluje pozycję umowy
            UP.ZLBR:=exec('FindAndGet','#table',ZLBR,_zlbr.REF,,,null());
            _put:=1
         ?}
      ?}
   ?};
   {? _put>0
   || {? UP.put()
      || __lmod+=1
      ?}
   ?}
");
UP.cntx_pop();
ZLBR.cntx_pop();
__UPG.msg('Zaktualizowano pozycje umów cyklicznych.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\UP_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Wypełnia pola w tabeli UP - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja pozycji umów cyklicznych'


\FPACZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Wypełnia pola tabeli FPACZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
FPACZ.cntx_psh();
FPACZ.index('ROK');
FPACZ.prefix();
_res:=FPACZ.for_each("
   __lrec+=1;
   _put:=0;
   {? FPACZ.STAT_REJ=''
   ||
      FPACZ.STAT_REJ:='T';
      _put:=1
   ?};
   {? FPACZ.ZAL=''
   ||
      FPACZ.ZAL:='N';
      _put:=1
   ?};
   {? FPACZ.PAR_PL=''
   ||
      FPACZ.PAR_PL:='N';
      _put:=1
   ?};
   {? _put
   ||
      {? FPACZ.put() || __lmod+=1 ?}
   ?}
");
FPACZ.cntx_pop();
__UPG.msg('Zaktualizowano paczki faktur.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\FPACZ_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Wypełnia pola tabeli FPACZ - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja paczek faktur'


\FAPOW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Wypełnia pola tabeli FAPOW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;
FAPOW.cntx_psh();
FAPOW.index('FAKS');
FAPOW.prefix();
_res:=FAPOW.for_each("
   __lrec+=1;
   _put:=0;
   {? FAPOW.Z_ZLP=''
   ||
      FAPOW.Z_ZLP:='N';
      _put:=1
   ?};
   {? _put
   ||
      {? FAPOW.put() || __lmod+=1 ?}
   ?}
");
FAPOW.cntx_pop();
__UPG.msg('Zaktualizowano zaliczki.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\FAPOW_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Wypełnia pola tabeli FAPOW - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zaliczek'


\zmiana_R
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [19.22]
:: OPIS: Zmiana położenia rubryki płacowej 970 "Podst. skł. zas.mac."
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
__RUB.fill();
_rub:=__RUB.sys_rub(56111);
R.cntx_psh();
R.index('RUBKOD');
R.prefix();
{? _rub.first() & R.find_key(_rub.RN)
|| _lp:=R.LP
|| _lp:=-1
?};
_rub_m:=__RUB.sys_rub(56121);
{? _lp>0 & _rub_m.first() & R.find_key(_rub_m.RN)
|| R.LP:=_lp;
   {? R.put()
   || __UPG.msg('Zmieniono kolejność obliczania składnika płacowego nr 970 "Podst. skł. zas.mac."')
   ?};
   exec('lp_put_a','!zws_par_pskl')
?};
R.cntx_pop();
_lp


\zmiana_R_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [19.22]
:: OPIS: Zmiana położenia rubryki płacowej 970 "Podst. skł. zas.mac." - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Zmiana w kolejności obliczeń składnika płacowego nr 970  "Podst. skł. zas.mac." '


\procesy_obieg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.22]
:: OPIS: Formuła wskazuję, które procesy należy zmodyfikować.
::----------------------------------------------------------------------------------------------------------------------
_czyn:=spli_str('OBE_FAW_CPRZ,OBE_FAW_EAKP,OBE_FDL_CPRZ,OBE_FLD_EBKP,OBG_FZO_CPRZ,OBE_FZO_EAKC',',');
_PAR:=tab_tmp(1,'SYMBOL','STRING[100]','Symbol'@,
                'NAZWA','STRING[45]','Nazwa'@,
                'WERSJA','STRING[5]','Wersja'@);
_we:=_PAR.mk_sel('Procesy do modyfikacji'@);
_PAR.win_fld(_we,,'SYMBOL');
_PAR.win_fld(_we,,'NAZWA');
_PAR.win_fld(_we,,'WERSJA');
_PAR.win_sel(_we);
B_ACTION.cntx_psh();
B_ACTION.index('UNIK');
_cnt:=obj_len(_czyn);
{! _ind:=1.._cnt
|! B_ACTION.prefix(_czyn[_ind],);
   {? B_ACTION.first() & B_ACTION.B_ELE
   || B_PROC.cntx_psh(); B_PROC.prefix();
      B_PREL.cntx_psh(); B_PREL.index('ACCESS'); B_PREL.prefix(B_ACTION.B_ELE);
      {? B_PREL.first()
      || {!
         |? {? (B_PREL.B_PROC & B_PREL.B_PROC().FIRMA=REF.FIRMA)
            || _add:=1;
               {? _PAR.first()
               || {!
                  |? {? _PAR.NAZWA=B_PREL.B_PROC().NAME | B_PREL.B_PROC().VER='19.22' || _add:=0 ?};
                     _add & _PAR.next()
                  !}
               ?};
               {? _add
               || _PAR.SYMBOL:=B_PREL.B_PROC().SYMBOL;
                  _PAR.NAZWA:=B_PREL.B_PROC().NAME;
                  _PAR.WERSJA:=B_PREL.B_PROC().VER;
                  _PAR.add()
               ?}
            ?};
            B_PREL.next()
         !}
      ?};
      B_PREL.cntx_pop(); B_PROC.cntx_pop()
   ?}
!};
B_ACTION.cntx_pop();
{? _PAR.size()>0
|| _PAR.select();
   {? FUN.ask(
            'Czy wykonano zadanie?\n'
            '\n'
            'Tak - zadanie zostanie oznaczone jako "Wykonane" i nie będzie już można uruchomić go.\n'
            'Nie - zadanie pozostanie na liście zadań i będzie je można wykonać w późniejszym czasie.'@
         )
   || __UPG.msg('Użytkownik %1 wykonanał zadanie.' [exec('operatorKod','#users')]);
      1
   || __UPG.msg('Użytkownik %1 pozostawił zadanie do późniejszego wykonania.' [exec('operatorKod','#users')]);
      0
   ?}
|| 1
?}


\procesy_obieg_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.22]
:: OPIS: Formuła wskazuję, które procesy należy zmodyfikować - opis.
::----------------------------------------------------------------------------------------------------------------------
'Wyświetla procesy w oknie wertowania dla obiegu faktur, wniosków i delegacji powiązane z zmodyfikowanymi '
'czynnościami OBE_FAW_CPRZ, OBE_FAW_EAKP, OBE_FDL_CPRZ, OBE_FLD_EBKP, OBG_FZO_CPRZ, OBE_FZO_EAKC.\n'
'Po uruchomieniu zadania wyświetlone zostanie '
'okienko wertowania z procesami, które należy poprawić wg. poniższego opisu\n'
'Dla procesów z modyfikacjami należy:\n'
'Zakończyć i dezaktywować procesy. '
'Następnie zamodelować procesy wzorując się na przykładowych procesach (FIN_FWO_WWPX, PER_WAD_WWW).\n'
'Pamiętając o umieszczeniu zdarzenia biznesowego '
'z formułą exec(\'FindAndGet\',\'#table\',EDOKUM,_a.p01,,"@.EDOKUM.ZAM=\'T\'",1).\n'
'Dla procesów bez modyfikacji należy:\n'
'Zakończyć i dezaktywować proces. Następnie zaimportować nowe wersje procesów.\n'
'Należy pamiętać, aby działały nowe procesy muszą być uruchomione kolejki. (TASK).)'


\KAL_OPIS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.22]
:: OPIS: Uzupełnia pola w tabeli KAL_OPIS
::----------------------------------------------------------------------------------------------------------------------
_formula:="
   _put:=0;
   {? KAL_OPIS.STATUS='' || KAL_OPIS.STATUS:='A'; _put:=1 ?};
   {? _put || KAL_OPIS.put() ?}
";
_result:=KAL_OPIS.for_each(_formula,1);
{? _result
|| __UPG.msg('Zaktualizowano nowe pola w tabeli wzorców kalendarzy.')
|| __UPG.msg('Wystąpił błąd podczas aktualizacji nowych pól w tabeli wzorców kalendarzy.')
?};
_result


\KAL_OPIS_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.22]
:: OPIS: Uzupełnia pola w tabeli KAL_OPIS - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja tabeli wzorców kalendarzy.'


\ZA_INST
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Aktualizacja statusów dla badań opinii
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

_przed:=TRIG_OFF.ZA_INST;
TRIG_OFF.ZA_INST:='CHK|PUTB|PUTA';
ZA_INST.cntx_psh();
ZA_INST.prefix();
ZA_INST.for_each("
   __lrec+=1;
   {? ZA_INST.STATUS=null()
   || ZA_INST.STATUS:=exec('kod','ext_slo','ZA_INSTS','A');
      {? ZA_INST.put() || __lmod+=1 ?}
   ?}
");
ZA_INST.cntx_pop();
TRIG_OFF.ZA_INST:=_przed;

__UPG.msg('Zaktualizowano pola w tabeli Jednorazowe badanie opinii.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\ZA_INST_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.22]
:: OPIS: Aktualizacja statusów dla badań opinii - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja statusów dla badań opinii (uzupełnienie niewymaganych w Xpertisie pól ze statusem badania)'


\DOKUML
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Aktualizacja załączników dostaw
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

DOKUML.cntx_psh();
_msk:=DOKUML.names();
_loop:=_msk.first();
{!
|? _loop
|!
   DOKUML.use(_msk.NAME);
   DOKUML.cntx_psh();
   DOKUML.index('GRP1');
   DOKUML.prefix();
   _res:=DOKUML.for_each("
      __lrec+=1;
      {? +DOKUML.GRP2=48
      ||
         _cur:=DOKUML.name()+3;
         _dst:=ref_name(DOKUML.GRP2)+3;
         {? _cur<>_dst
         ||
            _file:=fopen(DOKUML.BLOB,'br',,,1);
            {? _file.is_open()
            ||
               _name:=DOKUML.bl_info('BLOB','NAME');
               DOKUML.cntx_psh();
               DOKUML.use((DOKUML.name()-3)+_dst);
               DOKUML.prefix();
               {? DOKUML.add()
               ||
                  DOKUML.bl_put('BLOB',_file,,,_name)
               ?};
               DOKUML.cntx_pop();
               {? DOKUML.del(1,1) || __lmod+=1 ?};
               obj_del(_file)
            ?}
         ?}
      ?}
   ");
   DOKUML.cntx_pop();
   _loop:=_msk.next()
!};
DOKUML.cntx_pop();
__UPG.msg('Zaktualizowano załączniki dostaw.');
__UPG.msg('Przetworzono: %1 zapisów, z czego zmodyfikowano: %2 zapisów.'[$__lrec,$__lmod]);
VAR_DEL.delete('__lrec','__lmod');
_res


\DOKUML_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Aktualizacja załączników dostaw - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja załączników dostaw'


\REM_KAT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Utworzenie tabeli kategorii zasobów remontowych
::----------------------------------------------------------------------------------------------------------------------
_res:=1;

VAR_DEL.delete('__lrec','__ladd');
__lrec:=__ladd:=0;

PROJKZAS.cntx_psh();
REM_KAT.cntx_psh();
REM_KAT.index('SYMBOL');

PROJKZAS.index('NAZ');
PROJKZAS.prefix('S');
{? PROJKZAS.first()
|| {!
   |? __lrec+=1;
      REM_KAT.prefix(PROJKZAS.NAZWA,);
      {? ~REM_KAT.first()
      || REM_KAT.blank();
         REM_KAT.SYMBOL:=PROJKZAS.NAZWA;
         {? REM_KAT.add() || __ladd+=1 ?}
      ?};
      PROJKZAS.next()
   !};
   __UPG.msg('Utworzono/zaktulizowano słownik kategorii zasobów remontowych.');
   __UPG.msg('Przetworzono: %1 zapisów, z czego dołączono: %2 zapisów.'[$__lrec,$__ladd])
|| __UPG.msg('Nie utworzono zapisów w słowniku kategorii zasobów remontowych (brak zapisów źródłowych).')
?};

REM_KAT.cntx_pop();
PROJKZAS.cntx_pop();
_res


\REM_KAT_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Utworzenie tabeli kategorii zasobów remontowych - opis
::----------------------------------------------------------------------------------------------------------------------
'Utworzenie tabeli kategorii remontowych.\n'
'Przenoszone są zapisy z programu Xpertis Remonty (tabela PROJKZAS) dotyczące wyłącznie:\n'
'- zasobów wewnętrznych,\n'
'- zasobów zewnętrznych,\n'
'- stanowisk produkcyjnych.'


\REM_ZAS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Utworzenie tabeli zasobów remontowych
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
VAR_DEL.delete('__lrec','__lmod');
__lrec:=__lmod:=0;

VAR_DEL.delete('__PROJ2REM');

REM_ZAS.cntx_psh();
REM_ZAS.prefix();
{? REM_ZAS.first()
|| __UPG.msg('Zasoby z programu Xpertis Remonty zostały już wcześniej przeniesione.');
   REM_ZAS.cntx_pop();
   return(_res)
?};

exec('init_ztp','tre');

:: tabela mapująca zasoby
__PROJ2REM:=tab_tmp(2
   ,'PROJZAS','STRING[16]','$PROJZAS.ref()'
   ,'REM_ZAS','STRING[16]','$REM_ZAS.ref()'
);

:: formuła zwracajaca zasób - parametr $PROJZAS.ref()
_rem_zas:="
   _res:=null();
   __PROJ2REM.prefix(_a,);
   {? __PROJ2REM.first()
   || _res:=exec('FindAndGet','#table',REM_ZAS,__PROJ2REM.REM_ZAS)
   ?};
   _res
";

:: formuła zwracająca ref kategorii zasobu
_rem_kat:="
   _res:=null();
   REM_KAT.cntx_psh();
   REM_KAT.index('SYMBOL');
   REM_KAT.prefix(_a,);
   {? REM_KAT.first() || _res:=REM_KAT.ref() ?};
   REM_KAT.cntx_pop();
   _res
";

PROJZAS.cntx_psh();
PROJZAS.index('NAZWA');

SRSR.cntx_psh();
SRSR.use('srsrr'+REF.FIRMA().SYMBOL);
SRSR.index('NRI');

POJAZDY.cntx_psh();
POJAZDY.index('FIRSRSR');

:: Sprzęty wewnętrzne
PROJZAS.prefix('SW');
{? PROJZAS.first()
|| {!
   |? __lrec+=1;
      REM_ZAS.blank();
      REM_ZAS.UD_SKL:=PROJZAS.UD_SKL;
      REM_ZAS.ODDZ:='c';
      REM_ZAS.TREE:=0;
      REM_ZAS.SYMBOL:=PROJZAS.ID_SROD().NRI;
      REM_ZAS.NAZWA:=PROJZAS.ID_SROD().NST;
      REM_ZAS.WLASNY:='T';
      REM_ZAS.KH:=null();
      REM_ZAS.M:=null();
      REM_ZAS.DK_C:=null();
      SRSR.prefix('T',ID_SROD.NRI,);
      {? SRSR.first()
      || REM_ZAS.SRSR:=SRSR.ref();
         {? SRSR.POJAZD='T'
         || POJAZDY.prefix(REF.FIRMA,SRSR.ref());
            {? POJAZDY.first()
            || REM_ZAS.POJAZDY:=POJAZDY.ref()
            ?}
         ?}
      || REM_ZAS.SRSR:=null();
         REM_ZAS.POJAZDY:=null()
      ?};
      REM_ZAS.TWRKPLC:=null();
      REM_ZAS.TWRKZBR:=null();
      REM_ZAS.TYP:=
         {? REM_ZAS.POJAZDY<>null()
         || exec('rem_zas_typ_ref','zasoby',exec('rem_zas_typ_val_pojazdy','zasoby'))
         |? REM_ZAS.SRSR<>null()
         || exec('rem_zas_typ_ref','zasoby',exec('rem_zas_typ_val_srsr','zasoby'))
         || exec('rem_zas_typ_ref','zasoby',exec('rem_zas_typ_val_null','zasoby'))
         ?};
      REM_ZAS.KAT:=_rem_kat(PROJZAS.PROJKZAS().NAZWA);
      REM_ZAS.PRZ_MODE:='N';
      REM_ZAS.PRZ_JM:=null();
      REM_ZAS.PRZ_DOKL:=0;
      REM_ZAS.PRZ:=0;
      REM_ZAS.RDKC:='';
      {? REM_ZAS.add(1)
      || __lmod+=1;
         __PROJ2REM.PROJZAS:=$PROJZAS.ref();
         __PROJ2REM.REM_ZAS:=$REM_ZAS.ref();
         __PROJ2REM.add()
      ?};
      PROJZAS.next()
   !}
?};

:: Sprzęty zewnętrzne
PROJZAS.prefix('SZ');
{? PROJZAS.first()
|| {!
   |? __lrec+=1;
      REM_ZAS.blank();
      REM_ZAS.UD_SKL:=PROJZAS.UD_SKL;
      REM_ZAS.ODDZ:='c';
      REM_ZAS.TREE:=0;
      REM_ZAS.SYMBOL:=PROJZAS.PROJSZ().NAZ;
      REM_ZAS.NAZWA:=PROJZAS.PROJSZ().OPIS;
      REM_ZAS.WLASNY:='N';
      REM_ZAS.KH:=PROJZAS.PROJSZ().KH;
      REM_ZAS.M:=null();
      REM_ZAS.DK_C:=null();
      REM_ZAS.SRSR:=null();
      REM_ZAS.POJAZDY:=null();
      REM_ZAS.TWRKPLC:=null();
      REM_ZAS.TWRKZBR:=null();
      REM_ZAS.TYP:=exec('rem_zas_typ_ref','zasoby',exec('rem_zas_typ_val_null','zasoby'));
      REM_ZAS.KAT:=_rem_kat(PROJZAS.PROJKZAS().NAZWA);
      REM_ZAS.PRZ_MODE:='N';
      REM_ZAS.PRZ_JM:=null();
      REM_ZAS.PRZ_DOKL:=0;
      REM_ZAS.PRZ:=0;
      REM_ZAS.RDKC:='';
      {? REM_ZAS.add(1)
      || __lmod+=1;
         __PROJ2REM.PROJZAS:=$PROJZAS.ref();
         __PROJ2REM.REM_ZAS:=$REM_ZAS.ref();
         __PROJ2REM.add()
      ?};
      PROJZAS.next()
   !}
?};

:: Stanowiska produkcyjne
PROJZAS.prefix('SS');
{? PROJZAS.first()
|| {!
   |? __lrec+=1;
      REM_ZAS.blank();
      REM_ZAS.UD_SKL:=PROJZAS.UD_SKL;
      REM_ZAS.ODDZ:='c';
      REM_ZAS.TREE:=0;
      REM_ZAS.SYMBOL:=PROJZAS.TWRKPLC().KOD;
      REM_ZAS.NAZWA:=PROJZAS.TWRKPLC().NA;
      REM_ZAS.WLASNY:='T';
      REM_ZAS.KH:=null();
      REM_ZAS.M:=null();
      REM_ZAS.DK_C:=null();
      REM_ZAS.SRSR:=null();
      REM_ZAS.POJAZDY:=null();
      REM_ZAS.TWRKPLC:=PROJZAS.TWRKPLC;
      REM_ZAS.TWRKZBR:=null();
      REM_ZAS.TYP:=
         {? REM_ZAS.TWRKPLC<>null()
         || exec('rem_zas_typ_ref','zasoby',exec('rem_zas_typ_val_twrkplc','zasoby'))
         || exec('rem_zas_typ_ref','zasoby',exec('rem_zas_typ_val_null','zasoby'))
         ?};
      REM_ZAS.KAT:=_rem_kat(PROJZAS.PROJKZAS().NAZWA);
      REM_ZAS.PRZ_MODE:='N';
      REM_ZAS.PRZ_JM:=null();
      REM_ZAS.PRZ_DOKL:=0;
      REM_ZAS.PRZ:=0;
      REM_ZAS.RDKC:='';
      {? REM_ZAS.add(1)
      || __lmod+=1;
         __PROJ2REM.PROJZAS:=$PROJZAS.ref();
         __PROJ2REM.REM_ZAS:=$REM_ZAS.ref();
         __PROJ2REM.add()
      ?};
      PROJZAS.next()
   !}
?};

PROJZAS.prefix();
__UPG.msg('Utworzono tabelę zasobów remontowych.');
__UPG.msg(
   'Przetworzono: %1 zapisów źródłowych (PROJZAS) z ogółem %2, na podstawie których dodano: %3 zapisów (REM_ZAS).'
   [$__lrec,$PROJZAS.size(),$__lmod]
);

POJAZDY.cntx_pop();
SRSR.cntx_pop();
PROJZAS.cntx_pop();
REM_ZAS.cntx_pop();

VAR_DEL.delete('__lrec','__lmod');
_res


\REM_ZAS_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Utworzenie tabeli zasobów remontowych - opis
::----------------------------------------------------------------------------------------------------------------------
'Utworzenie tabeli zasobów remontowych.\n'
'Przenoszone są zapisy z programu Xpertis Remonty (tabela PROJZAS) dotyczące wyłącznie:\n'
'- zasobów wewnętrznych,\n'
'- zasobów zewnętrznych,\n'
'- stanowisk produkcyjnych.'


\obywatel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Aktualizacja słownika OBYWATEL z kodami państw zgodnymi z ISO 3166-1 (kod alfa2).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__UPG.msg('Aktualizacja słownika OBYWATEL');

_stat:=obj_new('put','add','bz');
{! _lp:=1 .. obj_len(_stat)
|! _stat[_lp]:=obj_new('fail','ok');
   _stat[_lp].fail:=_stat[_lp].ok:=0
!};
params_set('stat',_stat);

SLO_TYP.cntx_psh();
SLO_TYP.index('SYMBOL');
SLO_TYP.prefix();

SLO_KOD.cntx_psh();
SLO_KOD.index('KOD');
SLO_KOD.prefix();
_add:="
   _stat:=params_get().stat;
   SLO_KOD.prefix(_a,_b,_b);
   {? SLO_KOD.first()
   || {? SLO_KOD.NAZWA<>_c
      || SLO_KOD.NAZWA:=_c;
         _stat.put[1+SLO_KOD.put()]+=1
      || _stat.bz.ok+=1
      ?}
   || SLO_KOD.blank(1);
      SLO_KOD.SLO_TYP:=_a;
      SLO_KOD.KOD:=_b;
      SLO_KOD.NAZWA:=_c;
      SLO_KOD.SYSTEM:='T';
      _stat.add[1+SLO_KOD.add()]+=1
   ?}
";

_typ:=exec('slo_typ','ext_slo','OBYWATEL');

SLO_KOD.prefix(_typ);
_add(_typ,'AL','albańskie');
_add(_typ,'AT','austriackie');
_add(_typ,'BE','belgijskie');
_add(_typ,'BY','białoruskie');
_add(_typ,'BG','bułgarskie');
_add(_typ,'HR','chorwackie');
_add(_typ,'CY','cypryjskie');
_add(_typ,'CZ','czeskie');
_add(_typ,'DK','duńskie');
_add(_typ,'EE','estońskie');
_add(_typ,'FI','fińskie');
_add(_typ,'FR','francuskie');
_add(_typ,'GR','greckie');
_add(_typ,'GE','gruzińskie');
_add(_typ,'ES','hiszpańskie');
_add(_typ,'NL','holenderskie');
_add(_typ,'IE','irlandzkie');
_add(_typ,'IS','islandzkie');
_add(_typ,'LI','liechtensteińskie');
_add(_typ,'LT','litewskie');
_add(_typ,'LU','luksemburskie');
_add(_typ,'LV','łotewskie');
_add(_typ,'MK','macedońskie');
_add(_typ,'MT','maltańskie');
_add(_typ,'MD','mołdawskie');
_add(_typ,'MC','monakijskie');
_add(_typ,'DE','niemieckie');
_add(_typ,'NO','norweskie');
_add(_typ,'PL','polskie');
_add(_typ,'PT','portugalskie');
_add(_typ,'RU','rosyjskie');
_add(_typ,'RO','rumuńskie');
_add(_typ,'RS','serbskie');
_add(_typ,'SK','słowackie');
_add(_typ,'SI','słoweńskie');
_add(_typ,'CH','szwajcarskie');
_add(_typ,'SE','szwedzkie');
_add(_typ,'TR','tureckie');
_add(_typ,'UA','ukraińskie');
_add(_typ,'HU','węgierskie');
_add(_typ,'GB','brytyjskie');
_add(_typ,'IT','włoskie');
SLO_KOD.cntx_pop();
SLO_TYP.cntx_pop();

__UPG.msg('Liczba pozycji niewymagających aktualizacji: '+$_stat.bz.ok);
__UPG.msg('Liczba pozycji wymagających aktualizacji: '+$(_stat.put.fail+_stat.put.ok));
__UPG.msg('Liczba pozycji zaktualizowanych: '+$(_stat.put.ok));
__UPG.msg('Liczba brakujących pozycji: '+$(_stat.add.fail+_stat.add.ok));
__UPG.msg('Liczba dodanych pozycji: '+$(_stat.add.ok));

_stat.put.fail=0 & _stat.add.fail=0


\obywatel_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Aktualizacja słownika OBYWATEL z kodami państw zgodnymi z ISO 3166-1 (kod alfa2) - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja słownika OBYWATEL z kodami państw zgodnymi z ISO 3166-1 (kod alfa2)'


\start_PPK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Ustawienie parametrów i słowników do PPK.
::   WE:
::   WY:
::  OLD: \akt_1251_26/napraw_p.fml
::  OLD: \akt_1251_54/napraw_p.fml
::----------------------------------------------------------------------------------------------------------------------
exec('init_kst','#stalesys',KST_PPK);
exec('ustaw','ppk_kst',1);

:: aktualizacja opisów składników płacowych
exec('import','rubryki','g','7083,7084,7085,7086,7087,7088,7089,7090,7091,7093,7092',1,0);

:: definicje atrybutów
exec('add_attr','rubatr',,7,'Pracowniczy Plan Kapitałowy',1);
   exec('add_attr','rubatr',7,70,'Podstawa wpłat',1,,,7087);
   exec('add_attr','rubatr',7,71,'Procent wpłaty',1);
      exec('add_attr','rubatr',71,710,'Wpłata podstawowa opłacana przez podmiot zatr.',1,,,7083);
      exec('add_attr','rubatr',71,711,'Wpłata dodatkowa opłacana przez podmiot zatr.',1,,,7084);
      exec('add_attr','rubatr',71,712,'Wpłata podstawowa opłacana przez osobę zatr.',1,,,7085);
      exec('add_attr','rubatr',71,713,'Wpłata dodatkowa opłacana przez osobę zatr.',1,,,7086);
   exec('add_attr','rubatr',7,72,'Kwota wpłaty',1);
      exec('add_attr','rubatr',72,720,'Wpłata podstawowa opłacana przez podmiot zatr.',1,,,7088);
      exec('add_attr','rubatr',72,721,'Wpłata dodatkowa opłacana przez podmiot zatr.',1,,,7089);
      exec('add_attr','rubatr',72,722,'Wpłata podstawowa opłacana przez osobę zatr.',1,,,7090);
      exec('add_attr','rubatr',72,723,'Wpłata dodatkowa opłacana przez osobę zatr.',1,,,7091);
      exec('add_attr','rubatr',72,724,'Wpłaty opłacane przez podmiot zatr.',1);
         exec('add_attr','rubatr',724,7241,'Wpłata podstawowa opłacana przez podmiot zatr.',1,,,7088);
         exec('add_attr','rubatr',724,7242,'Wpłata dodatkowa opłacana przez podmiot zatr.',1,,,7089);
      exec('add_attr','rubatr',72,725,'Wpłaty opłacane przez osobę zatr.',1);
         exec('add_attr','rubatr',725,7251,'Wpłata podstawowa opłacana przez osobę zatr.',1,,,7090);
         exec('add_attr','rubatr',725,7252,'Wpłata dodatkowa opłacana przez osobę zatr.',1,,,7091);
   exec('add_attr','rubatr',7,73,'Nagrody i premie z dochodu po opodatkowaniu',1);
   exec('add_attr','rubatr',7,79,'Formuły i wydruki',1);
      exec('add_attr','rubatr',79,790,'Indywidualnie określany procent wpłaty',1,,,7084,7085);
         exec('add_attr','rubatr',790,7901,'Procent wpłaty zawsze indywidualny',1,,,7086);

:: Uzupełnienie widoku historii stałych obszaru PPK
_result:=-1;
_add:=_numer:=0;
_sdom:='PPK';
_zes:='KST_PPK';
KST_ZES.cntx_psh();
KST_ZES.index('SYMBOL');
KST_ZES.prefix();
{? KST_ZES.find_key(_zes,)
|| KST_DOM.cntx_psh();
   KST_DOM.index('DOM_SYM');
   KST_DOM.prefix(KST_ZES.ref());
   _rdom:=null();
   {? KST_DOM.find_key(_sdom,)
   || _rdom:=KST_DOM.ref()
   || KST_DOM.blank();
      KST_DOM.KST_ZES:=KST_ZES.ref();
      KST_DOM.B_DOMAIN:=exec('domain_ref','#b_domain',_sdom);
      {? KST_DOM.add()
      || _rdom:=KST_DOM.ref()
      ?}
   ?};
   {? _rdom
   || KST_LST.cntx_psh();
      KST_MAP.cntx_psh();
      KST_MAP.index('KST_MAP');
      KST_MAP.prefix(_zes,_zes);
      {? KST_MAP.first()
      || {!
         |? {? ~('PWP_DOM,PWP_WSZ,PWP_UKW,LICZ_OD,PPK_UZA,PPK_UMO,SK_FORMF,UST_OD'*KST_MAP.SYMBOL)
            || KST_LST.blank();
               KST_LST.KST_DOM:=_rdom;
               KST_LST.KST_MAP:=KST_MAP.ref();
               KST_LST.NUMER:=_numer+=1;
               _add+=KST_LST.add(1)
            ?};
            KST_MAP.next()
         !}
      ?};
      KST_MAP.cntx_pop();
      KST_LST.cntx_pop()
   ?};
   KST_DOM.cntx_pop()
?};
KST_ZES.cntx_pop();
{? _numer=_add
|| __UPG.msg('Uzupełniono definicję historii stałych obszaru PPK.');
   _result:=1
|| __UPG.msg('Nie udało się uzupełnić pełnej historii stałych obszaru PPK.');
   _result:=-1
?};

:: Rodzaje deklaracji/wniosków
{? exec('dane_sys','ppk_wrd')
|| __UPG.msg('Wykonano aktualizację definicji wniosków i deklaracji.')
|| __UPG.msg('Nie wykonano aktualizacji definicji wniosków i deklaracji.');
   {? _result=1
   || _result:=-1
   ?}
?};

:: Rodzaje komunikatów
{? exec('dane_sys','ppk_krd')
|| __UPG.msg('Wykonano aktualizację definicji komunikatów.')
|| __UPG.msg('Nie wykonano aktualizacji definicji komunikatów.');
   {? _result=1
   || _result:=-1
   ?}
?};

:: Kody błędów i ostrzeżeń
_typ:=exec('slo_typ','ext_slo','PPK_RBL');
{? exec('kod_ref','ext_slo',_typ,'B','Błąd')=null()
|| __UPG.msg('Nie dodano kodu błędu do słownika "PPK_RBL".');
   {? _result=1
   || _result:=-1
   ?}
|| __UPG.msg('Dodano kod błędu do słownika "PPK_RBL".')
?};
{? exec('kod_ref','ext_slo',_typ,'O','Ostrzeżenie')=null()
|| __UPG.msg('Nie dodano kodu ostrzeżenia do słownika "PPK_RBL".');
   {? _result=1
   || _result:=-1
   ?}
|| __UPG.msg('Dodano kod ostrzeżenia do słownika "PPK_RBL".')
?};
{? exec('kod_ref','ext_slo',_typ,'I','Informacja')=null()
|| __UPG.msg('Nie dodano kodu informacji do słownika "PPK_RBL".');
   {? _result=1
   || _result:=-1
   ?}
|| __UPG.msg('Dodano kod informacji do słownika "PPK_RBL".')
?};

:: Rodzaje załączników do umów.
_zrd_add:=
   "  PPK_ZRD.RODZAJ:=_a;
      PPK_ZRD.SYMBOL:=_b;
      PPK_ZRD.OPIS:=_c;
      PPK_ZRD.PORTAL:=_d;
      PPK_ZRD.add(1)
   ";
PPK_ZRD.cntx_psh();
PPK_ZRD.prefix();
PPK_ZRD.trig_off('*','*');
_add:=_zrd_add('PPK_UMO','LISTAUCZ','Lista uczestników PPK','N');
PPK_ZRD.trig_on('*','*');
PPK_ZRD.cntx_pop();
{? _add
|| __UPG.msg('Do umowy o prowadzenie PPK dodano definicę załącznika "Lista uczestników PPK".')
|| __UPG.msg('Do umowy o prowadzenie PPK nie dodano definicji załącznika "Lista uczestników PPK".');
   {? _result=1
   || _result:=-1
   ?}
?};

_info:=exec('import_if','ppk');
{? +_info
|| __UPG.msg(_info)
?};

_result


\start_PPK_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Ustawienie parametrów i słowników do PPK - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Ustawienie parametrów i słowników do PPK'


\sch_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.22]
:: OPIS: Importuje "personelowe" wnioski w obiegu dot. PPK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_msg:="
{? _a
|| __UPG.msg('Zakończono import wniosku: \"%1\".'@[_b])
|| __UPG.msg('Nie udało się zaimportować wniosku: \"%1\".'@[_b])
?}
";

_nazwa:=exec('nazwa_dwwp','obiegi');
_msg(exec('imp_wn','sch_imp',_nazwa,0,0),_nazwa);
_nazwa:=exec('nazwa_dwwd','obiegi');
_msg(exec('imp_wn','sch_imp',_nazwa,0,0),_nazwa);
_nazwa:=exec('nazwa_drwd','obiegi');
_msg(exec('imp_wn','sch_imp',_nazwa,0,0),_nazwa);
_nazwa:=exec('nazwa_wou','obiegi');
_msg(exec('imp_wn','sch_imp',_nazwa,0,0),_nazwa);
_nazwa:=exec('nazwa_opif','obiegi');
_msg(exec('imp_wn','sch_imp',_nazwa,0,0),_nazwa)


\sch_imp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.22]
:: OPIS: Importuje "personelowe" wnioski w obiegu dot. PPK - opis
::----------------------------------------------------------------------------------------------------------------------
'Import wniosków w obiegu dot. PPK'


\formuly_PPK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja formuł płacowych o naliczanie składników PPK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');

_rs:='780,784,950,990,7087,7088,7089,7090,7091,7092,7093';
_rn:=spli_str(_rs,',');
{! _ii:=1..obj_len(_rn)
|! {? __RUB.ref(#_rn[_ii])=null
   || __UPG.msg('Aktualizacja została wstrzymana. Wymagane istnienie rubryk: %1'[_rs]);
      return(-1)
   ?}
!};
_tp:=spli_str('U,F,D,R,%1'[%255],',');
_err:=exec('formuly_import','upgrade_1922',_tp,_rn,'formuly_txt');

{? _err>0
|| __UPG.msg('Podczas aktualizacji formuł wystąpiło %1 błędów.'[$_err]);
   -1
|| 1
?}


\formuly_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Funkcja do aktualizacji formuł płacowych.
::   WE: _a [ARRAY] - Tablica aktualizowanych typów formuł płacowych.
::       _b [ARRAY] - Tablica kodów aktualizowanych składników płacowych.
::       _c [STRING] - Nazwa formuły do importu formuł płacowych.
::   WY: _err (0/1) - Liczba błędów, które wystąpiły podczas importu.
::----------------------------------------------------------------------------------------------------------------------
_tp:=_a;
_rn:=_b;
_formula:=_c;
_err:=0;

FM.cntx_psh();
{! _ni:=1..obj_len(_tp)
|! FM.index('FORMNAZ');
   FM.prefix(exec('ref_firma','ustawienia'),_tp[_ni]);
   {? FM.size()>0
   || {! _mi:=1..obj_len(_rn)
      |! _fm:=form(exec(_formula,'upgrade_1922',_tp[_ni],#_rn[_mi]));
         {? _fm<>''
         || _ok:=1;
            _org:='';
            _found:=FM.find_tab(,'R','RN','=',#_rn[_mi]);
            {? _found
            || _org:=FM.memo_txt(,1,'F')
            || FM.blank();
               FM.TP:=_tp[_ni];
               FM.R:=__RUB.ref(#_rn[_mi]);
               FM.W:={? 'U,F,D'*_tp[_ni] || 'T' || 'N' ?};
               {? ~FM.add()
               || __UPG.msg('Utworzenie formuły typu "%1" dla składnika %2 nie powiodło się.'[_tp[_ni],_rn[_mi]]);
                  _err+=0;
                  _ok:=0
               ?}
            ?};
            {? _found & _fm=_org
            || __UPG.msg('Formuła typu "%1" dla składnika %2 nie wymaga aktualizacji.'[_tp[_ni],_rn[_mi]])
            |? _ok
            || FM.memo_set(_fm,'F');
               {? FM.memo_put(,'F')
               || {? _found
                  || __UPG.msg('Zaktualizowano formułę typu "%1" dla składnika %2.'[_tp[_ni],_rn[_mi]])
                  || __UPG.msg('Utworzono formułę typu "%1" dla składnika %2.'[_tp[_ni],_rn[_mi]])
                  ?}
               |? _found
               || __UPG.msg('Aktualizacja formuły typu "%1" dla składnika %2 nie powiodła się.'[_tp[_ni],_rn[_mi]]);
                  _err+=1
               ?}
            ?}
         ?}
      !}
   ?}
!};
FM.cntx_pop();
_err


\formuly_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Zwraca treść formuły płacowej.
::   WE: _a [STRING] - typ formuły
::       _b [INTEGER] - numer rubryki
::   WY: treść formuły
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_tp:=_a;
_rn:=_b;

{? _rn=780 & _tp='R'
:: =================
:: Przychód
|| "
{? var_pres('KST_PPK')=type_of(SYSLOG)  & ~FUNKCJE.Z(7093) || exec('del_O_RH','ppk_kwn',P.ref,O.ref,RH.ref,'W') ?};
{? RH.ZAS='T' || return(0) ?};
_wyn:=LICZRHS.Wylicz(,'.POD')+FUNKCJE.Z(779);
{? ~FUNKCJE.Z(31) || _wyn-=FUNKCJE.Z(765,767) ?};
FUNKCJE.ZK(784,,exec('KU','zlec_rh',_wyn));
_wyn"

|? _rn=780
:: =======
|| "
{? var_pres('KST_PPK')=type_of(SYSLOG)  & ~FUNKCJE.L(7093) || exec('del_O_RH','ppk_kwn',P.ref,O.ref,,'W') ?};
_zw_prz:=exec('skl_bez_odlicz','lista_licz');
exec('p_ipod_podatek','lista_licz');
LICZ.Wylicz(,'.POD')+FUNKCJE.L(779)-FUNKCJE.L(765,767)+_zw_prz"

|? _rn=784 & _tp<>'R'
:: ==================
:: Koszty uzyskania
|| "
_skl_prac:=FUNKCJE.L(765,767);
{? _skl_prac>0 || _korekty:=fabs(DoList.c[8]+DoList.c[9]+DoList.c[11]) || _korekty:=0 ?};
_l:=FUNKCJE.L(780)-FUNKCJE.L(650)-FUNKCJE.L_SYS(32)+_skl_prac+_korekty;
{? _l>0 & P_IPOD.KU<>'B'
|| _ku:={? P_IPOD.KU='Z'
             || KST.KUZ
             || KST.KU
             ?};
   _n_zysk:=FUNKCJE.L_SYS(73);
   {? _n_zysk>0
   || _brutto:=FUNKCJE.L(500);
      {? FUNKCJE.L_SYS(710) & _brutto>0
      || _l-=_n_zysk/_brutto*FUNKCJE.L_SYS(724)$2
      ?}
   ?};
   {? _l>0
   || _ku-=FUNKCJE.LP(784,,,,1);
      {? _ku<0 || _ku:=0 ?};
      {? _l<_ku
      || _l
      || _ku
      ?}
   ?}
?}"

|? _rn=950 & _tp='R'
:: =================
:: Potrącenia razem
|| "
exec('potracenie_komornik','lista_licz',0);
FUNKCJE.Z(765,767)+FUNKCJE.Z(789)+FUNKCJE.Z(792)+FUNKCJE.Z(797,799)+FUNKCJE.Z(801,948)+FUNKCJE.Z_SYS(722)+FUNKCJE.Z_SYS(723)"

|? _rn=950
:: =======
|| "
exec('potracenie_komornik','lista_licz',1);
FUNKCJE.L(765,767)+FUNKCJE.L(789)+FUNKCJE.L(792)+FUNKCJE.L(797,799)+FUNKCJE.L(7005)+FUNKCJE.L(801,948)+FUNKCJE.L(7013,7014)+FUNKCJE.L_SYS(722)+FUNKCJE.L_SYS(723)"

|? _rn=990 & _tp='R'
:: =================
:: Netto
|| "
{? var_pres('KST_PPK')=type_of(SYSLOG) & ~FUNKCJE.L(7092) || exec('del_O_RH','ppk_kwn',P.ref,O.ref,RH.ref,'Z') ?};
FUNKCJE.Z(500)+FUNKCJE.Z(740)-FUNKCJE.Z(950)+FUNKCJE.Z(7092)"

|? _rn=990
:: =======
|| "
{? var_pres('KST_PPK')=type_of(SYSLOG) & ~FUNKCJE.L(7092) || exec('del_O_RH','ppk_kwn',P.ref,O.ref,,'Z') ?};
DoList.x:=FUNKCJE.L(500)+FUNKCJE.L(740)+FUNKCJE.L(747)-FUNKCJE.L(950)+FUNKCJE.L(7092);
DoList.m[1]:=DoList.x"

|? _rn=7087 & _tp='R'
:: ==================
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
exec('licz_pod','ppk','z')"

|? _rn=7087
:: ============
:: Podstawa PPK
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
exec('licz_pod','ppk')"

|? _rn=7088 & _tp='R'
:: ==================
:: Pod.wpł. PPK firma
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
_od:=date(O.R,O.M,0);
exec('licz_skl','ppk',__RUB.sys_kod(710,_od),__RUB.sys_kod(720,_od),'z')"

|? _rn=7088
:: ========
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
_od:=date(O.R,O.M,0);
exec('licz_skl','ppk',__RUB.sys_kod(710,_od),__RUB.sys_kod(720,_od))"

|? _rn=7089 & _tp='R'
:: ==================
:: Dod.wpł. PPK firma
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
_od:=date(O.R,O.M,0);
exec('licz_skl','ppk',__RUB.sys_kod(711,_od),__RUB.sys_kod(721,_od),'z')"

|? _rn=7089
:: ========
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
_od:=date(O.R,O.M,0);
exec('licz_skl','ppk',__RUB.sys_kod(711,_od),__RUB.sys_kod(721,_od))"

|? _rn=7090 & _tp='R'
:: ==================
:: Pod.wpł. PPK zatr.
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
_od:=date(O.R,O.M,0);
exec('licz_skl','ppk',__RUB.sys_kod(712,_od),__RUB.sys_kod(722,_od),'z')"

|? _rn=7090
:: ========
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
_od:=date(O.R,O.M,0);
exec('licz_skl','ppk',__RUB.sys_kod(712,_od),__RUB.sys_kod(722,_od))"

|? _rn=7091 & _tp='R'
:: ==================
:: Dod.wpł. PPK zatr.
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
_od:=date(O.R,O.M,0);
exec('licz_skl','ppk',__RUB.sys_kod(713,_od),__RUB.sys_kod(723,_od),'z')"

|? _rn=7091
:: ========
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
_od:=date(O.R,O.M,0);
exec('licz_skl','ppk',__RUB.sys_kod(713,_od),__RUB.sys_kod(723,_od))"

|? _rn=7092 & _tp='R'
:: ==================
:: Nadpłata PPK zatr.
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
exec('zlicz_zwrot','ppk','Z',725)"

|? _rn=7092
:: ========
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
exec('zlicz_zwrot','ppk','Z',725)"

|? _rn=7093 & _tp='R'
:: ==================
:: Nadpłata PPK firma
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
exec('zlicz_zwrot','ppk','W',724)"

|? _rn=7093
:: ========
|| "
{? var_pres('KST_PPK')<>type_of(SYSLOG) || return(0) ?};
exec('zlicz_zwrot','ppk','W',724)"

|| ""
?}


\formuly_PPK_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja formuł płacowych o naliczanie składników PPK - opis.
::   WE:
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie formuł płacowych o naliczanie składników PPK'


\ppk_role
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Dodanie/aktualizacja ról/czynności związanych z PPK.
::----------------------------------------------------------------------------------------------------------------------
_status:='';

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_add:="
   _rola:=_a;
   _lista:=_b;

   _ok:=1;
   _uid:=spli_str(_lista,'.');
   {! _lp:=1 .. obj_len(_uid)
   |! {? exec('add_actrol_one','#b_role',_rola,_uid[_lp])
      || __UPG.msg('Roli ''%1'' nadano uprawnienia do czynności ''%2''.' [_rola,_uid[_lp]])
      || __UPG.msg('Nadanie roli ''%1'' uprawnień do czynności ''%2'' nie powiodło się.' [_rola,_uid[_lp]]);
         _ok:=0
      ?}
   !};
   _ok";
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Pracownik';
_ref:=exec('ref','#b_role',_rola);
{? _ref=null()
:: To nie jest nowa rola. Jeżeli została usunięta, to uszanujmy to i nie aktualizujmy jej.
|| __UPG.msg('Nie znaleziono roli ''%1'' - nowe czynności nie zostaną z nią powiązane.' [_rola]);
   _status+='O'
|| {? ~_add(_rola,'PPK_POR_PKOM.PPK_POR_PPWP.PPK_POR_PZAL')
   || _status+='E'
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Specjalista ds. PPK';
_ref:=exec('ref','#b_role',_rola);
{? _ref<>null()
|| __UPG.msg('Rola ''%1'' już istnieje.' [_rola])
|? (_ref:=exec('ref','#b_role',_rola,,1))<>null()
|| __UPG.msg('Rola ''%1'' została utworzona.' [_rola])
?};
{? _ref=null()
|| __UPG.msg('Roli ''%1'' nie udało się utworzyć.' [_rola]);
   _status+='E'
|| {? ~_add(_rola,
         'ZWS_PAR_PKRD.ZWS_PAR_PPPK.ZWS_PAR_PUMO.ZWS_PAR_PWNU.ZWS_PAR_PXWE.PPK_EWI_RKOM.PPK_EWI_RKWK.PPK_EWI_RKWZ.'
         'PPK_EWI_RPWP.PPK_EWI_RUCZ.PPK_EWI_RWNU.PPK_EWI_RZDN.PPK_ZES_WYDR.PPK_EWI_RKOM.PPK_EWI_RKWZ.PPK_EWI_RWNU.'
         'PPK_DZB_PWPL.PPK_WMD_AIMP.PPK_WMD_RRPL.PPK_GRP_ALIU'
      )
   || _status+='E'
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_rola:='Przeglądający PPK';
_ref:=exec('ref','#b_role',_rola);
{? _ref<>null()
|| __UPG.msg('Rola ''%1'' już istnieje.' [_rola])
|? (_ref:=exec('ref','#b_role',_rola,,1))<>null()
|| __UPG.msg('Rola ''%1'' została utworzona.' [_rola])
?};
{? _ref=null()
|| __UPG.msg('Roli ''%1'' nie udało się utworzyć.' [_rola]);
   _status+='E'
|| {? ~_add(_rola,
         'PPK_EWI_PKOM.PPK_EWI_PKWK.PPK_EWI_PKWZ.PPK_EWI_PPWP.PPK_EWI_PUCZ.PPK_EWI_PWIF.PPK_EWI_PWNU.PPK_EWI_PZDN.'
         'PPK_DZB_PWPL.PPK_EWI_PKOM.PPK_EWI_PKWZ.PPK_EWI_PWNU.PPK_WMD_PRPL'
      )
   || _status+='E'
   ?}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

{? _status*'E'
|| 0
|? _status*'O'
|| -1
|| 1
?}


\ppk_role_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Dodanie/aktualizacja ról/czynności związanych z PPK. - opis.
::----------------------------------------------------------------------------------------------------------------------
'Dodanie/aktualizacja ról/czynności związanych z PPK'


\espr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Uaktualnienie pól związanych z aktualizacja 19.22_02 - nowe schematy e-Sprawozdań
::----------------------------------------------------------------------------------------------------------------------
E_SPR.cntx_psh();
E_SPR.prefix();
E_SPR.for_each("
_put:=0;
{? E_SPR.D_KON='' || E_SPR.D_KON:='T'; _put:=1 ?};
{? E_SPR.D_ZAGROZ='' || E_SPR.D_ZAGROZ:='N'; _put:=1 ?};
{? _put
|| E_SPR.put()
?}
");
E_SPR.cntx_pop();
ISTDEF.cntx_psh();
ISTDEF.index('JPK'); ISTDEF.prefix('J','SF',);
{? ISTDEF.first()
|| {!
   |? _jedn:=9+ISTDEF.VER='Jednostka';
      {? _jedn
      || _nr5:=5
      || _nr5:=9
      ?};
      exec('espr2a','upgrade_1922','tns:P_'+$_nr5+'A',$"'true'",$"{? var_press('D_KON',E_SPR)<0 | JPK.E_SPR().D_KON='T' || 'true' || 'false' ?}");
      exec('espr2a','upgrade_1922','tns:P_'+$_nr5+'B',,$"{? var_press('D_ZAGROZ',E_SPR)<0 | JPK.E_SPR().D_ZAGROZ='N' || 'true' || 'false' ?}");
      exec('espr2a','upgrade_1922','tns:P_'+$_nr5+'C','',$"exec('opis','jpk_sf')",1);
      {? _jedn
      || exec('espr2a','upgrade_1922','tns:P_'+$(_nr5+1)+'A',
            $"{? JPK.E_SPR().L_PRZED='T' || 'true' || 'false' ?}",
            $"{? JPK.E_SPR().L_PRZED='T' || 'false' || 'true' ?}"
         )
      ?};
      ISTDEF.next()
   !}
?};
ISTDEF.cntx_pop();
__UPG.msg('Zaaktualizowano dane dla e-Sprawozdań.');
1


\espr2_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [19.22]
:: OPIS: Uaktualnienie pól związanych z aktualizacja 12.51_53 - nowe schematy e-Sprawozdań - OPIS
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja danych na potrzeby możliwości ustawienia zagrożeń w kontynuowaniu działalności w e-Sprawozdaniach.'


\espr2a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: FOrmuła pomocnicza do espr
::   WE:  _a  - kod elementu
::        _b  - bieżaca formuła
::        _c  - nowa formuła
::       [_d] - ustawiać typ pola
::----------------------------------------------------------------------------------------------------------------------
ISTDEFS.cntx_psh();
ISTDEFS.index('OPIS');
ISTDEFS.prefix(ISTDEF.ref(),_a,);
_typ:={? var_press('_d')>0 || _d || 0 ?};
_lp:=0;
{? ISTDEFS.first()
|| ISTDEFS.cntx_psh();
   _next:=ISTDEFS.next();
   ISTDEFS.cntx_pop();
   {!
   |? _lp+=1;
      {? var_press('_b')<=0 | ISTDEFS.REGULY=_b
      || ISTDEFS.REGULY:=_c;
         {? _typ
         || ISTDEFS.TYPFLD:={? _next=1 & _lp=1 || 'OMN' || 'OIN' ?}
         ?};
         ISTDEFS.put()
      ?};
      ISTDEFS.next()
   !}
?};
ISTDEFS.cntx_pop()


\akt_1922_05
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Aktualizacja "Zmiana w sposobie obliczania podatku od osób fizycznych" w związku z wprowadzeniem przychodu
::       zwolnionego od podatku dla osób do 26 roku życia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_txt:='';

:: Aktualizacja opisów składników płacowych.
{? +exec('import','rubryki','g','7094,7095,7096,7097',1,0)
|| _txt:='Dodanie nowych rubryk zakończyło się niepowodzeniem';
   _result:=-1
|| _txt:='Dodanie nowych rubryk zakończone powodzeniem'
?};
__UPG.msg(_txt);

:: Definicje atrybutów.
exec('__RUB','object');
__RUB.fill();
exec('add_attr','rubatr',9,902,'ZP: zwolnienie przychodu z art.21 ust.1 pkt 148',1,
   'Atrybuty obsługujące zwolnienie przychodu z art.21 ust.1 pkt 148'
);
exec('add_attr','rubatr',902,9021,'ZP: brak zwolnienia przychodu art.21 ust.1 pkt 148',1,
   'Składniki płacowe niebędące przychodem podlegającym zwolnieniu od podatku zgodnie z art.21 ust.1 pkt 148 ustawy',,
   7002,650
);
exec('add_attr','rubatr',902,9022,'ZP: przychód podlegający zwolnieniu',1,
   'Przychód podlegający zwolnieniu od podatku',,7094
);
exec('add_attr','rubatr',902,9023,'ZP: nominalny podatek ze zwolnionego przychodu',1,
   'Nominalny podatek wyliczony z przychodu zwolnionego od podatku z art.21 ust.1 pkt 148',,7095
);
exec('add_attr','rubatr',902,9024,'ZP: koszty uzyskania przychodu do wyliczeń',1,
   'Specjalne koszty uzyskania przychodu do wyliczeń zwolnienia od podatku',,7096
);
exec('add_attr','rubatr',902,9025,'ZP: ulga podatkowa do wyliczeń',1,
   'Specjalna ulga podatkowa dla wyliczeń zwolnienia od podatku',,7097
);
__UPG.msg('Zakończono aktualizację atrybutów składników płacowych.');

:: Uzupełnienie pola ZWPOD w tabeli RU.
{? var_pres('ZWPOD',RU)>0
|| RU.cntx_psh();
   RU.clear();
   RU.for_each(
      "  {? RU.K='1'
         || RU.ZWPOD:='T'
         || RU.ZWPOD:='N'
         ?};
         RU.put(1)
      "
   );
   {? RU.find_tab(1,'ZWPOD',,'=','')
   || _txt:='Aktualizacja wartości nowego pola w tabeli zawierającej rodzaje umów zakończyła się niepowodzeniem';
      {? _result>0
      || _result:=-1
      ?}
   || _txt:='Aktualizacja wartości nowego pola w tabeli zawierającej rodzaje umów zakończona powodzeniem'
   ?};
   RU.cntx_pop()
?};
__UPG.msg(_txt);

:: Dodanie historii wartości pól związanych przychodem podlegającym zwolnieniu od podatku art.21 ust.1 pkt 148.
{? var_pres('ZWPOD',KST)>0 & var_pres('ZWPODW',KST)>0
|| exec('add_acr','#stalesys','ZWPOD','Zwolnienie od podatku - Limit','T','T','T','KST','PPL');
   exec('kst_war_add','#stalesys','KST.ZWPOD','0.00',date(0,0,0));
   exec('kst_war_add','#stalesys','KST.ZWPOD','35636.67',date(2019,8,1));
   exec('kst_war_add','#stalesys','KST.ZWPOD','85528.00',date(2020,1,1));
   exec('add_acr','#stalesys','ZWPODW','Zwolnienie od podatku - Wiek','T','T','T','KST','PPL');
   exec('kst_war_add','#stalesys','KST.ZWPODW','0',date(0,0,0));
   exec('kst_war_add','#stalesys','KST.ZWPODW','26',date(2019,8,1));
   _txt:='Wykonano aktualizację historii stałych systemu dla zwolnienia od podatku (art.21 ust.1 pkt 148).'
|| _txt:='Brak pól w stałych systemu dla zwolnienia od podatku (art.21 ust.1 pkt 148).';
   _result:=0
?};
__UPG.msg(_txt);

:: Załączniki do oświadczenia związanego z przychodem zwolnionym od podatku.
_txt:='Nie udało się utworzyć struktury do załączników do oświadczenia dla przychodu zwolnionego.';
_typ:=exec('slo_naz','ext_slo','ZAL','Oświadczenia-przychód zwolniony od podatku');
{? _typ
|| ZAOTM.cntx_psh();
   ZAOTM.index('MIEJSCER');
   {? SLO_NAZ.seek(_typ,,1)
   || _msc:='OS_ZWPOD';
      ZAOTM.prefix(_msc,SLO_NAZ.ref());
      {? ZAOTM.first()
      || _txt:='Typ załącznika (%1) powiązano z miejscem użycia.' [SLO_NAZ.NAZWA]
      || ZAOTM.blank();
         ZAOTM.MIEJSCE:=_msc;
         ZAOTM.SLO_NAZ:=SLO_NAZ.ref();
         ZAOTM.add()
      ?}
   ?};
   ZAOTM.cntx_pop()
|| {? _result>0
   || _result:=-1
   ?}
?};
__UPG.msg(_txt);

_result


\akt_1922_05_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Aktualizacja "Zmiana w sposobie obliczania podatku od osób fizycznych" w związku z wprowadzeniem przychodu
::       zwolnionego od podatku dla osób do 26 roku życia - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja zmiany sposobu obliczania podatku od osób fizycznych'


\formuly_ZP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja formuł płacowych od naliczanie składników w związku z wprowadzeniem przychodu zwolnionego
::       od podatku dla osób do 26 roku życia.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
_rs:='780,784,792,795,797,7094,7095,7096';
_rn:=spli_str(_rs,',');
{! _ii:=1..obj_len(_rn)
|! {? __RUB.ref(#_rn[_ii])=null
   || __UPG.msg('Aktualizacja została wstrzymana. Wymagane istnienie rubryk: %1'[_rs]);
      return(-1)
   ?}
!};
_tp:=spli_str('U,F,D,R,%1'[%255],',');
_err:=exec('formuly_import','upgrade_1922',_tp,_rn,'ZP_formuly_txt');

{? _err>0
|| __UPG.msg('Podczas aktualizacji formuł wystąpiło %1 błędów.'[$_err]);
   -1
|| 1
?}


\formuly_ZP_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja formuł płacowych o naliczanie składników w związku z wprowadzeniem przychodu zwolnionego
::       od podatku dla osób do 26 roku życia.
::   WE:
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie formuł płacowych o naliczanie składników dla przychodu zwolnionego od podatku dla osób do 26 roku życia'


\ZP_formuly_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Zwraca treść formuły płacowej.
::   WE: _a [STRING] - Typ formuły.
::       _b [INTEGER] - Numer rubryki.
::   WY: Treść formuły.
::----------------------------------------------------------------------------------------------------------------------
_tp:=_a;
_rn:=_b;

{? _rn=780 & _tp='R'
:: Przychód (rachunek do umowy cywilnoprawnej)
|| "{? var_pres('KST_PPK')=type_of(SYSLOG)  & ~FUNKCJE.Z(7093) || exec('del_O_RH','ppk_kwn',P.ref,O.ref,RH.ref,'W') ?};
{? RH.ZAS='T' || return(0) ?};
_wyn:=LICZRHS.Wylicz(,'.POD')+FUNKCJE.Z(779);
{? ~FUNKCJE.Z(31) || _wyn-=FUNKCJE.Z(765,767) ?};
_wyn-=FUNKCJE.Z_SYS(9022);
{? _wyn>0
|| FUNKCJE.ZK(784,,exec('KU','zlec_rh',_wyn));
    _wyn
|| FUNKCJE.ZK(784,,0);
    0
?}
"
|? _rn=780
:: Przychód (lista płac)
|| "{? var_pres('KST_PPK')=type_of(SYSLOG)  & ~FUNKCJE.L(7093) || exec('del_O_RH','ppk_kwn',P.ref,O.ref,,'W') ?};
_zw_prz:=exec('skl_bez_odlicz','lista_licz');
exec('p_ipod_podatek','lista_licz');
LICZ.Wylicz(,'.POD')+FUNKCJE.L(779)-FUNKCJE.L(765,767)+_zw_prz-FUNKCJE.L_SYS(9022)"
|? _rn=784 & _tp<>'R'
:: Koszty uzyskania  (lista płac)
|| "_skl_prac:=FUNKCJE.L(765,767);
{? _skl_prac>0 || _korekty:=fabs(DoList.c[8]+DoList.c[9]+DoList.c[11]) || _korekty:=0 ?};
_l:=FUNKCJE.L(780)-FUNKCJE.L(7002);
{? FUNKCJE.L_SYS(9022)
|| {? _l>0
    || _l+=_korekty-FUNKCJE.L(650)-FUNKCJE.L_SYS(32)
    || _l:=0
    ?}
|| _l:=FUNKCJE.L(780)-FUNKCJE.L(650)-FUNKCJE.L_SYS(32)+_skl_prac+_korekty
?};
{? _l>0 & P_IPOD.KU<>'B'
|| _ku:={? P_IPOD.KU='Z'
             || KST.KUZ
             || KST.KU
             ?};
   _n_zysk:=FUNKCJE.L_SYS(73);
   {? _n_zysk>0
   || _brutto:=FUNKCJE.L(500);
      {? FUNKCJE.L_SYS(710) & _brutto>0
      || _l-=_n_zysk/_brutto*FUNKCJE.L_SYS(724)$2
      ?}
   ?};
   {? _l>0
   || _ku-=FUNKCJE.LP(784,,,,1);
      {? _ku<0 || _ku:=0 ?};
      {? _l<_ku
      || _l
      || _ku
      ?}
   ?}
?}"
|? _rn=792 & _tp<>'R'
:: Skł. zdrow. - pobr. (lista płac)
|| "_dt:=date(O.RP,O.MP,1);_kc1:=0;kc2:=0;
_poz_all:=FUNKCJE.LP_SYS(9023);
_poz_one:=FUNKCJE.L_SYS(9023);
_poz_ask:=_poz_all+_poz_one>0;
_kckor:=_kcp:=_kcpo:=FUNKCJE.L(791);
_kcpop:=DoList.k[17]+FUNKCJE.LP(7020)-DoList.k[18]-FUNKCJE.LP(7021);
_kcpp:=FUNKCJE.LP(791);
{? _kcp<>0 | _kcpp<>0
|| _kcp+=_kcpp+DoList.k[4];
   DoList.m[4]:=exec('kor_skl_kor_zus','lista_licz',0,0,_kckor,1);
   _kch_p:=FUNKCJE.LP(792);
   {? DoList.m[4]
   || _kc1:=exec('kor_licz','!ppl_pll_nals',792)
   || _kc_k_p:=exec('kor_ikor_kor_zus','lista_licz',792,1,O.MU,'L'+FUNKCJE.ZNLISTY(),O.RU,1);
      _kc_k_s:=exec('kor_ikor_kor_zus','lista_licz',792,2,O.MU,'L'+FUNKCJE.ZNLISTY(),O.RU,1);
      _kc1:=(((_kcp+_kc_k_p)*KST.PRKC*0.01)$2-_kch_p-_kc_k_s-DoList.k[9])$2
   ?};
   {? _kc1
   || _kcpo+=_kcpp+DoList.k[11]-_kcpop;
      kc2:={? date(2003,1,1)<=_dt
           || (_kcpo*KST.PRKO*0.01)$2-FUNKCJE.LP(793)-DoList.k[10]
           || _kc1
           ?};
      _podobn:=((_kcpo-FUNKCJE.L_SYS(93)-FUNKCJE.LP_SYS(93))$0)*FUNKCJE.L_SYS(91)/100-FUNKCJE.L_SYS(94)-FUNKCJE.LP_SYS(94)$2;
      _podobn-=FUNKCJE.LP_SYS(57411);
      _podobn:={? _podobn<0 || 0 || _podobn ?};
      {? ~FUNKCJE.L(7081)
      || _kc1:={? _podobn<_kc1 || _podobn || _kc1 ?}
      ?};
      _pod_poz:=FUNKCJE.LP(797);
      {? _poz_ask
      || {? _poz_all+_poz_one-_kch_p<_kc1
         || _kc1:=_poz_all+_poz_one-_kch_p
         ?}
      || _podnom:=FUNKCJE.LP(790)+FUNKCJE.L(7081);
         {? _podnom+DoList.p[1]-_kch_p<_kc1
         || _kc1:=_podnom+DoList.p[1]-_kch_p
         ?}
      ?};
      {? _pod_poz+DoList.p[1]>=kc2
      || DoList.p[1]-=kc2
      || kc2:=_pod_poz+DoList.p[1];
         DoList.p[1]:=_pod_poz*(-1)
      ?};
      kc2:={? _podobn<kc2 || _podobn || kc2 ?}
   ?}
?};
_kc1+FUNKCJE.L(7025)"
|? _rn=795 & _tp<>'R'
:: Zaniechany podatek (lista płac)
|| "{? FUNKCJE.L(790)=0 || return(0) ?};
_pod:=FUNKCJE.L(790)-FUNKCJE.L(793,794);
{? DoList.p[3]<=0
|| 0
|? _pod>DoList.p[3]
|| DoList.p[3]
|| _pod
?}$(O.RP<2006)"
|? _rn=797 & _tp<>'R'
:: Zal. pod. doch. (lista płac)
|| "_kw:=FUNKCJE.L(790);
{? _kw>0
|| _kw+=FUNKCJE.LP(790);
   _kw-=(FUNKCJE.L(793,795)+FUNKCJE.LP(793,795)+FUNKCJE.LP(797));
   _kw:=_kw$(O.RP<2006);
   {? _kw<0
   || {? DoList.p[1]<=_kw || _kw
      |? DoList.p[5] || 0
      || DoList.p[1]$(O.RP<2006)
      ?}
   || _kw
   ?}
?}"
|? _rn=7094 & _tp='R'
:: ZP: Przychód (rachunek do umowy cywilnoprawnej)
|| "exec('przychod_U26','zlec_rh')"
|? _rn=7094
:: ZP: Przychód (lista płac)
|| "exec('przychod_U26','lista_licz')"
|? _rn=7095 & _tp='R'
:: ZP: Podatek nomin. (rachunek do umowy cywilnoprawnej)
|| "DoList.p[15]"
|? _rn=7095
:: ZP: Podatek nomin. (lista płac)
|| "exec('oblicz_U26','lista_licz')"
|? _rn=7096 & _tp<>'R'
:: ZP: Koszty uzyskania (lista płac)
|| "exec('KU_U26','lista_licz')"
|| ""
?}


\akt_1922_05_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.22]
:: OPIS: ER/WRT/XP/19.22/1908/0018 - AK_19.22_05 Zwolniony przychód - dodanie nowej rubryki 7098
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_txt:='';
:: Aktualizacja opisów składników płacowych.
{? +exec('import','rubryki','g','7098',1,0)
|| _txt:='Dodanie nowej rubryki 7098 zakończyło się niepowodzeniem.';
   _result:=-1
|| _txt:='Dodanie nowej rubryki 7098 zakończone powodzeniem.'
?};
__UPG.msg(_txt);
:: Definicje atrybutów.
exec('__RUB','object');
__RUB.fill();
RA_DEF.cntx_psh();
RA_DEF.index('RODZAJ');
RA_DEF.prefix('S',902);
{? RA_DEF.first()
|| RA_DEF.prefix();
   exec('add_attr','rubatr',902,9026,'ZP: składki społeczne od zwolnionego przychodu',1,
      'Składki społeczne od zwolnionego przychodu płacone przez pracownika',,7098
   );
   __UPG.msg('Dodanie nowego atrybutu 9026.')
?};
RA_DEF.cntx_pop();
_result


\akt_1922_05_pop_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.22]
:: OPIS: ER/WRT/XP/19.22/1908/0018 - AK_19.22_05 Zwolniony przychód - dodanie nowej rubryki 7098
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Poprawka SPIS ER/WRT/XP/19.22/1908/0018 - dodanie nowej rubryki 7098 oraz atrybutu 9026'


\formuly_ZP_POP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.22]
:: OPIS: ER/WRT/XP/19.22/1908/0018 - AK_19.22_05 Zwolniony przychód - aktualizacja formuł dla rubryk 780, 792 i 7098
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
_rs:='780,792,7098';
_rn:=spli_str(_rs,',');
{! _ii:=1..obj_len(_rn)
|! {? __RUB.ref(#_rn[_ii])=null
   || __UPG.msg('Aktualizacja została wstrzymana. Wymagane istnienie rubryk: %1'[_rs]);
      return(-1)
   ?}
!};
_tp:=spli_str('U,F,D,R,%1'[%255],',');
_err:=exec('formuly_import','upgrade_1922',_tp,_rn,'ZP_formuly_txt_pop');

{? _err>0
|| __UPG.msg('Podczas aktualizacji formuł wystąpiło %1 błędów.'[$_err]);
   -1
|| 1
?}


\formuly_ZP_POP_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.22]
:: OPIS: ER/WRT/XP/19.22/1908/0018 - AK_19.22_05 Zwolniony przychód - aktualizacja formuł dla rubryk 780, 792 i 7098
::   WE:
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie formuł płacowych poprawka SPIS ER/WRT/XP/19.22/1908/0018 - AK_19.22_05 Zwolniony przychód'


\ZP_formuly_txt_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Zwraca treść formuły płacowej.
::   WE: _a [STRING] - Typ formuły.
::       _b [INTEGER] - Numer rubryki.
::   WY: Treść formuły.
::----------------------------------------------------------------------------------------------------------------------
_tp:=_a;
_rn:=_b;

{? _rn=780 & _tp='R'
:: Przychód (rachunek do umowy cywilnoprawnej)
|| "{? var_pres('KST_PPK')=type_of(SYSLOG)  & ~FUNKCJE.Z(7093) || exec('del_O_RH','ppk_kwn',P.ref,O.ref,RH.ref,'W') ?};
{? RH.ZAS='T' || return(0) ?};
_wyn:=LICZRHS.Wylicz(,'.POD')+FUNKCJE.Z(779);
{? ~FUNKCJE.Z(31)
|| _zp_prz:=FUNKCJE.Z_SYS(9022);
   {? _zp_prz
   || _zp_skl:=FUNKCJE.Z(765,767)-FUNKCJE.Z_SYS(9026)
   || _zp_skl:=FUNKCJE.Z(765,767)
   ?};
   _wyn-=_zp_skl;
   _wyn-=_zp_prz
?};
{? _wyn>0
|| FUNKCJE.ZK(784,,exec('KU','zlec_rh',_wyn));
    _wyn
|| FUNKCJE.ZK(784,,0);
    0
?}
"
|? _rn=780
:: Przychód (lista płac)
|| "{? var_pres('KST_PPK')=type_of(SYSLOG)  & ~FUNKCJE.L(7093) || exec('del_O_RH','ppk_kwn',P.ref,O.ref,,'W') ?};
_zw_prz:=exec('skl_bez_odlicz','lista_licz');
exec('p_ipod_podatek','lista_licz');
_zp_prz:=FUNKCJE.L_SYS(9022);
{? _zp_prz
|| _zp_skl:=FUNKCJE.L(765,767)-FUNKCJE.L_SYS(9026)
|| _zp_skl:=FUNKCJE.L(765,767)
?};
LICZ.Wylicz(,'.POD')+FUNKCJE.L(779)+_zw_prz-FUNKCJE.L_SYS(9022)-_zp_skl"
|? _rn=792 & _tp<>'R'
:: Skł. zdrow. - pobr. (lista płac)
|| "_dt:=date(O.RP,O.MP,1);_kc1:=0;kc2:=0;
_poz_all:=FUNKCJE.LP_SYS(9023);
_poz_one:=FUNKCJE.L_SYS(9023);
_poz_ask:=_poz_all+_poz_one>0;
_kckor:=_kcp:=_kcpo:=FUNKCJE.L(791);
_kcpop:=DoList.k[17]+FUNKCJE.LP(7020)-DoList.k[18]-FUNKCJE.LP(7021);
_kcpp:=FUNKCJE.LP(791);
{? _kcp<>0 | _kcpp<>0
|| _kcp+=_kcpp+DoList.k[4];
   DoList.m[4]:=exec('kor_skl_kor_zus','lista_licz',0,0,_kckor,1);
   _kch_p:=FUNKCJE.LP(792);
   {? DoList.m[4]
   || _kc1:=exec('kor_licz','!ppl_pll_nals',792)
   || _kc_k_p:=exec('kor_ikor_kor_zus','lista_licz',792,1,O.MU,'L'+FUNKCJE.ZNLISTY(),O.RU,1);
      _kc_k_s:=exec('kor_ikor_kor_zus','lista_licz',792,2,O.MU,'L'+FUNKCJE.ZNLISTY(),O.RU,1);
      _kc1:=(((_kcp+_kc_k_p)*KST.PRKC*0.01)$2-_kch_p-_kc_k_s-DoList.k[9])$2
   ?};
   {? _kc1
   || _kcpo+=_kcpp+DoList.k[11]-_kcpop;
      kc2:={? date(2003,1,1)<=_dt
           || (_kcpo*KST.PRKO*0.01)$2-FUNKCJE.LP(793)-DoList.k[10]
           || _kc1
           ?};
      _podobn:=((_kcpo-FUNKCJE.L_SYS(93)-FUNKCJE.LP_SYS(93))$0)*FUNKCJE.L_SYS(91)/100-FUNKCJE.L_SYS(94)-FUNKCJE.LP_SYS(94)$2;
      _podobn-=FUNKCJE.LP_SYS(57411);
      _podobn:={? _podobn<0 || 0 || _podobn ?};
      _po_bz:=FUNKCJE.L_SYS(92)-FUNKCJE.LP_SYS(92)-FUNKCJE.L(650)-FUNKCJE.LP(650);
      _po_zp:=((_po_bz-FUNKCJE.L_SYS(93)-FUNKCJE.LP_SYS(93))$0)*FUNKCJE.L_SYS(91)/100-FUNKCJE.L_SYS(94)-FUNKCJE.LP_SYS(94)$2;
      _po_zp-=FUNKCJE.LP_SYS(57411);
      _po_zp:={? _po_zp<0 || 0 || _po_zp ?};
      {? ~FUNKCJE.L(7081)
      || _kc1:={? _podobn<_kc1 || _podobn || _kc1 ?}
      ?};
      _pod_poz:=FUNKCJE.LP(797);
      {? _poz_ask
      || {? _poz_all+_poz_one-_kch_p<_kc1
         || _kc1:=_poz_all+_poz_one-_kch_p
         ?}
      || _podnom:=FUNKCJE.LP(790)+FUNKCJE.L(7081);
         {? _podnom+DoList.p[1]-_kch_p<_kc1
         || _kc1:=_podnom+DoList.p[1]-_kch_p
         ?}
      ?};
      kc2:={? _po_zp<kc2 || _po_zp || kc2 ?};
      {? _pod_poz+DoList.p[1]>=kc2
      || DoList.p[1]-=kc2
      || kc2:=_pod_poz+DoList.p[1];
         DoList.p[1]:=_pod_poz*(-1)
      ?}
   ?}
?};
_kc1+FUNKCJE.L(7025)"
|? _rn=7098 & _tp='R'
:: ZP: Skł. prz. zwol.
|| "{? RH.ZAS='T' | FUNKCJE.Z(31) || return(0) ?};
{? RH.ZC_INFO().ZUS='T' |  RH.ZC_INFO().FC='T'
|| {? _zp_prz:=FUNKCJE.Z_SYS(9022)
   || _pod_e_r:=FUNKCJE.Z_SYS(5611);
      _pod_chw:=FUNKCJE.Z_SYS(563);
      _pod_ZUS:=LICZRHS.Wylicz(,'.ZUS')+FUNKCJE.Z(751);
      _wsp:={? _zp_prz || _pod_ZUS/_zp_prz || 0 ?};
      _wsp:={? _wsp>1 || 1 || _wsp ?};
      _wsp_ch:={? _zp_prz || _pod_chw/_zp_prz || 0 ?};
      _wsp_ch:={? _wsp_ch>1 || 1 || _wsp_ch ?};
      _zp_er:={? _pod_e_r || (_zp_prz*KST.PRFE/2/100$2)*_wsp$2+(_zp_prz*KST.PRFRP/100$2)*_wsp$2 || 0 ?};
      _zp_skl:=_zp_er+{? _pod_chw || (_zp_prz*KST.PRFC/100$2)*_wsp_ch$2 || 0 ?}
   || 0
   ?}
|| 0
?}"
|? _rn=7098
:: ZP: Skł. prz. zwol.
|| "_zp_prz:=FUNKCJE.L_SYS(9022);
{? _zp_prz
|| _zp_prz+=fabs(FUNKCJE.L(470));
   _pod_e_r:=FUNKCJE.L_SYS(511);
   _pod_chw:=FUNKCJE.L_SYS(531);
   _wsp:={? _zp_prz || _pod_chw/_zp_prz || 0 ?};
   _blokada:=0;
   {? _wsp>1
   || {? _pod_e_r & _pod_chw>_pod_e_r
      || {? _pod_chw>_zp_prz
         || _wsp:=0;
            _blokada:=1
         || _wsp:=1
         ?}
      || _wsp:=1
      ?}
   ?};
   {? _blokada
   || _zp_skl:=_pod_e_r*KST.PRFE/2/100$2+_pod_e_r*KST.PRFRP/100$2+_zp_prz*KST.PRFC/100$2
   || _zp_er:={? _pod_e_r
              || {? _pod_e_r & _pod_chw>_pod_e_r
                 || _pod_e_r*KST.PRFE/2/100$2+_pod_e_r*KST.PRFRP/100$2
                 || (_zp_prz*KST.PRFE/2/100$2)*_wsp$2+(_zp_prz*KST.PRFRP/100$2)*_wsp$2
                 ?}
              || 0
              ?};
      _zp_skl:=_zp_er+(_zp_prz*KST.PRFC/100)$2*_wsp$2
   ?}
|| 0
?}"
|| ""
?}


\formuly_ZP_POP_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.22]
:: OPIS: ER/WRT/XP/19.22/1908/0028 - AK_19.22_05 Zwolniony przychód - aktualizacja formuł dla rubryk 792 i 7098
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
_rs:='792,7098';
_rn:=spli_str(_rs,',');
{! _ii:=1..obj_len(_rn)
|! {? __RUB.ref(#_rn[_ii])=null
   || __UPG.msg('Aktualizacja została wstrzymana. Wymagane istnienie rubryk: %1'[_rs]);
      return(-1)
   ?}
!};
_tp:=spli_str('U,F,D,R,%1'[%255],',');
_err:=exec('formuly_import','upgrade_1922',_tp,_rn,'ZP_formuly_txt_pop_1');

{? _err>0
|| __UPG.msg('Podczas aktualizacji formuł wystąpiło %1 błędów.'[$_err]);
   -1
|| 1
?}


\formuly_ZP_POP_1_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.22]
:: OPIS: ER/WRT/XP/19.22/1908/0028 - AK_19.22_05 Zwolniony przychód - aktualizacja formuł dla rubryk 792 i 7098
::   WE:
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie formuł płacowych poprawka SPIS ER/WRT/XP/19.22/1908/0028 - AK_19.22_05 Zwolniony przychód'


\ZP_formuly_txt_pop_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Zwraca treść formuły płacowej.
::   WE: _a [STRING] - Typ formuły.
::       _b [INTEGER] - Numer rubryki.
::   WY: Treść formuły.
::----------------------------------------------------------------------------------------------------------------------
_tp:=_a;
_rn:=_b;

{? _rn=792 & _tp<>'R'
:: Skł. zdrow. - pobr. (lista płac)
|| "_dt:=date(O.RP,O.MP,1);_kc1:=0;kc2:=0;
_poz_all:=FUNKCJE.LP_SYS(9023);
_poz_one:=FUNKCJE.L_SYS(9023);
_poz_ask:=_poz_all+_poz_one>0;
_kckor:=_kcp:=_kcpo:=FUNKCJE.L(791);
_kcpop:=DoList.k[17]+FUNKCJE.LP(7020)-DoList.k[18]-FUNKCJE.LP(7021);
_kcpp:=FUNKCJE.LP(791);
{? _kcp<>0 | _kcpp<>0
|| _kcp+=_kcpp+DoList.k[4];
   DoList.m[4]:=exec('kor_skl_kor_zus','lista_licz',0,0,_kckor,1);
   _kch_p:=FUNKCJE.LP(792);
   {? DoList.m[4]
   || _kc1:=exec('kor_licz','!ppl_pll_nals',792)
   || _kc_k_p:=exec('kor_ikor_kor_zus','lista_licz',792,1,O.MU,'L'+FUNKCJE.ZNLISTY(),O.RU,1);
      _kc_k_s:=exec('kor_ikor_kor_zus','lista_licz',792,2,O.MU,'L'+FUNKCJE.ZNLISTY(),O.RU,1);
      _kc1:=(((_kcp+_kc_k_p)*KST.PRKC*0.01)$2-_kch_p-_kc_k_s-DoList.k[9])$2
   ?};
   {? _kc1
   || _kcpo+=_kcpp+DoList.k[11]-_kcpop;
      kc2:={? date(2003,1,1)<=_dt
           || (_kcpo*KST.PRKO*0.01)$2-FUNKCJE.LP(793)-DoList.k[10]
           || _kc1
           ?};
      _podobn:=((_kcpo-FUNKCJE.L_SYS(93)-FUNKCJE.LP_SYS(93))$0)*FUNKCJE.L_SYS(91)/100-FUNKCJE.L_SYS(94)-FUNKCJE.LP_SYS(94)$2;
      _podobn-=FUNKCJE.LP_SYS(57411);
      _podobn:={? _podobn<0 || 0 || _podobn ?};
      _po_bz:=FUNKCJE.L_SYS(92)+FUNKCJE.LP_SYS(92)-FUNKCJE.L(650)-FUNKCJE.LP(650);
      _po_zp:=((_po_bz-FUNKCJE.L_SYS(93)-FUNKCJE.LP_SYS(93))$0)*FUNKCJE.L_SYS(91)/100-FUNKCJE.L_SYS(94)-FUNKCJE.LP_SYS(94)$2;
      _po_zp-=FUNKCJE.LP_SYS(57411);
      _po_zp:={? _po_zp<0 || 0 || _po_zp ?};
      {? ~FUNKCJE.L(7081)
      || _kc1:={? _podobn<_kc1 || _podobn || _kc1 ?}
      ?};
      _pod_poz:=FUNKCJE.LP(797);
      {? _poz_ask
      || {? _poz_all+_poz_one-_kch_p<_kc1
         || _kc1:=_poz_all+_poz_one-_kch_p
         ?}
      || _podnom:=FUNKCJE.LP(790)+FUNKCJE.L(7081);
         {? _podnom+DoList.p[1]-_kch_p<_kc1
         || _kc1:=_podnom+DoList.p[1]-_kch_p
         ?}
      ?};
      kc2:={? _po_zp<kc2 || _po_zp || kc2 ?};
      {? _pod_poz+DoList.p[1]>=kc2
      || DoList.p[1]-=kc2
      || kc2:=_pod_poz+DoList.p[1];
         DoList.p[1]:=_pod_poz*(-1)
      ?}
   ?}
?};
_kc1+FUNKCJE.L(7025)"
|? _rn=7098 & _tp='R'
:: ZP: Skł. prz. zwol.
|| "exec('zp_skl_U26','zlec_rh')"
|? _rn=7098
:: ZP: Skł. prz. zwol.
|| "exec('zp_skl_U26','lista_licz')"
|| ""
?}


\akt_woz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.22]
:: OPIS: Aktualizacja "personelowego" wniosku o zatrudnienie (w obiegu)
::----------------------------------------------------------------------------------------------------------------------
_msg:="
{? _a
|| __UPG.msg('Zakończono aktualizację wniosku: \"%1\".'@[_b])
|| __UPG.msg('Nie udało się zaktualizować wniosku: \"%1\".'@[_b])
?}
";

_typobieg:=exec('add','typ_ob','Obieg wniosków');
_nazwa:=exec('nazwa_woz','obiegi');
_result:=1;
{? exec('renameETYPY','sch_imp',_typobieg,_nazwa)<1
|| __UPG.msg('Nie udało się zmienić nazwy wniosku: \"%1\".'@[_nazwa]);
   _result:=-1
|| _msg(exec('imp_wn','sch_imp',_nazwa,1,0),_nazwa)
?};
_result


\akt_woz_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.22]
:: OPIS: Aktualizacja "personelowego" wniosku o zatrudnienie (w obiegu) - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja wniosku o zatrudnienie'


\akt_wozda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.22]
:: OPIS: Aktualizacja "personelowego" wniosku o zmianę danych adresowych (w obiegu)
::----------------------------------------------------------------------------------------------------------------------
_msg:="
{? _a
|| __UPG.msg('Zakończono aktualizację wniosku: \"%1\".'@[_b])
|| __UPG.msg('Nie udało się zaktualizować wniosku: \"%1\".'@[_b])
?}
";

_typobieg:=exec('add','typ_ob','Obieg wniosków');
_nazwa:=exec('nazwa_wozda','obiegi');
_result:=1;
{? exec('renameETYPY','sch_imp',_typobieg,_nazwa)<1
|| __UPG.msg('Nie udało się zmienić nazwy wniosku: \"%1\".'@[_nazwa]);
   _result:=-1
|| _msg(exec('imp_wn','sch_imp',_nazwa,1,0),_nazwa)
?};
_result


\akt_wozda_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [19.22]
:: OPIS: Aktualizacja "personelowego" wniosku o zmianę danych adresowych (w obiegu) - opis
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja wniosku o zmianę danych adresowych'


\PPK_WRD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja raportów PPK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');

exec('dane_sys','ppk_xwe');
exec('dane_sys','ppk_wrd');

__UPG.msg('Uzupełniono definicje raportów.');

1


\PPK_WRD_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Aktualizacja raportów PPK - opis.
::   WE:
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja raportów PPK'


\srsr_dk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.22]
:: OPIS: ER/WRT/XP/19.22/1909/0007
::       Uzupełnia pole SRSR.DK - planowana data końca amortyzacji
::----------------------------------------------------------------------------------------------------------------------
exec('init','fst');
exec('maski','srodobj');
SRSR.cntx_psh();
SRSR.index('NRI');
SRSR.prefix();
{? SRSR.first()
|| {! |?
      echo('Aktualizacja planowanej daty końca amortyzacji: %1'@[SRSR.NRI]);
      {? SRSR.STAP>0 & SRSR.WKP>0 & SRSR.MP<>null
      || SRSR.DK:=SRD.AMOEndDate(SRSR.DE,SRSR.STAP,SRSR.WKP,1+SRSR.MP().T,SRSR.MP().MP,SRSR.MP().PL='0');
         SRSR.put()
      ?};
      SRSR.next()
   !}
?};
SRSR.cntx_pop();
__UPG.msg('Uzupełniono pole z planowaną datą końca amortyzacji dla środków trwałych.');
1


\srsr_dk_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.22]
:: OPIS: ER/WRT/XP/19.22/1909/0007
::       Uzupełnia pole SRSR.DK - planowana data końca amortyzacji - opis
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie pola z planowaną datą końca amortyzacji dla środków trwałych.'


\ROD_cfg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [19.22]
:: OPIS: Aktualizacja konfiguracji RODO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_fun:=obj_new(4);
_fun[1]:='ZWS_PAR_ARDK';
_fun[2]:='ZWS_PAR_ARDD';
_fun[3]:='ZWS_PAR_ARDP';
_fun[4]:='ZWS_IMPORTY_ROD';

{? exec('lic_or','#b_domain','ROD')
|| {? FUN.ask(
         'Aktualizacji wymaga konfiguracja "Zarządzanie danymi osobowymi".\n'
         '\n'
         'Jeżeli klient pracuje na standardowej wersji konfiguracji,\n'
         'to aktualizacja może być wykonana automatycznie na podstawie danych wzorcowych.\n'
         'W tym celu po uruchomieniu importu:\n'
         '1. Wybierz opcję: "Nadpisuj istniejące".\n'
         '2. Wskaż katalog zawierający aktualny plik danych wzorcowych \'parametryzacja_zdo.xlsx\'\n'
         '3. Zapoznaj się z ewentualnymi komunikatami.\n'
         '4. Zamknij okno z podsumowaniem importu.\n'
         '\n'
         'Jeżeli konfiguracja była u klienta modyfikowana, to aktualizację należy\n'
         'przeprowadzić na podstawie zmian w pliku danych wzorcowych \'parametryzacja_zdo.xlsx.\'\n'
         '\n'
         'Czy rozpocząć import?'
      )
   || exec('import_init','#excel_imex',_fun);
      {? FUN.ask(
              'Czy import został wykonany?\n'
              '\n'
              'Tak - zadanie zostanie oznaczone jako "Wykonane" i nie będzie już można go uruchomić.\n'
              'Nie - zadanie pozostanie na liście zadań i będzie je można wykonać w późniejszym czasie.'
         )
      || __UPG.msg('Użytkownik %1 wykonał import konfiguracji.' [exec('operatorKod','#users')]);
         1
      || __UPG.msg('Użytkownik %1 pozostawił zadanie do późniejszego wykonania.' [exec('operatorKod','#users')]);
         0
      ?}
   || {? FUN.ask(
              'Czy rezygnujesz (również w przyszłości) z wykonania tego zadania?\n'
              '\n'
              'Tak - zadanie zostanie oznaczone jako "Wykonane" i nie będzie już można go uruchomić.\n'
              'Nie - zadanie pozostanie na liście zadań i będzie je można wykonać w późniejszym czasie.'
         )
      || __UPG.msg('Użytkownik %1 zdecydował o pominięciu wykonania zadania.' [exec('operatorKod','#users')]);
         1
      || __UPG.msg('Użytkownik %1 pozostawił zadanie do późniejszego wykonania.' [exec('operatorKod','#users')]);
         0
      ?}
   ?}
|| {? exec('import_cfg','rodo',1)
   || __UPG.msg('Automatyczny import konfiguracji zakończył się sukcesem.');
      1
   || __UPG.msg('Automatyczny import konfiguracji zakończył się porażką.');
      0
   ?}
?}


\ROD_cfg_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [19.22]
:: OPIS: Aktualizacja konfiguracji RODO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Zarządzanie danymi osobowymi - aktualizacja konfiguracji '


\formuly_ZP_POP_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.22]
:: OPIS: ER/WRT/XP/19.22/1910/0021 - AK_19.22_05 Zwolniony przychód - aktualizacja formuł dla rubryki 792
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
_rs:='792';
_rn:=spli_str(_rs,',');
{! _ii:=1..obj_len(_rn)
|! {? __RUB.ref(#_rn[_ii])=null
   || __UPG.msg('Aktualizacja została wstrzymana. Wymagane istnienie rubryk: %1'[_rs]);
      return(-1)
   ?}
!};
_tp:=spli_str('U,F,D,%1'[%255],',');
_err:=exec('formuly_import','upgrade_1922',_tp,_rn,'ZP_formuly_txt_pop_2');

{? _err>0
|| __UPG.msg('Podczas aktualizacji formuł wystąpiło %1 błędów.'[$_err]);
   -1
|| 1
?}


\formuly_ZP_POP_2_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.22]
:: OPIS: ER/WRT/XP/19.22/1910/0021 - AK_19.22_05 Zwolniony przychód - aktualizacja formuł dla rubryki 792
::   WE:
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie formuł płacowych poprawka SPIS ER/WRT/XP/19.22/1910/0021 - AK_19.22_05 Zwolniony przychód'


\ZP_formuly_txt_pop_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [19.22]
:: OPIS: Zwraca treść formuły płacowej.
::   WE: _a [STRING] - Typ formuły.
::       _b [INTEGER] - Numer rubryki.
::   WY: Treść formuły.
::----------------------------------------------------------------------------------------------------------------------
_tp:=_a;
_rn:=_b;

{? _rn=792 & _tp<>'R'
:: Skł. zdrow. - pobr. (lista płac)
|| "_dt:=date(O.RP,O.MP,1);_kc1:=0;kc2:=0;
_poz_all:=FUNKCJE.LP_SYS(9023);
_poz_one:=FUNKCJE.L_SYS(9023);
_poz_ask:=_poz_all+_poz_one>0;
_kckor:=_kcp:=_kcpo:=FUNKCJE.L(791);
_kcpop:=DoList.k[17]+FUNKCJE.LP(7020)-DoList.k[18]-FUNKCJE.LP(7021);
_kcpp:=FUNKCJE.LP(791);
{? _kcp<>0 | _kcpp<>0
|| _kcp+=_kcpp+DoList.k[4];
   DoList.m[4]:=exec('kor_skl_kor_zus','lista_licz',0,0,_kckor,1);
   _kch_p:=FUNKCJE.LP(792);
   {? DoList.m[4]
   || _kc1:=exec('kor_licz','!ppl_pll_nals',792)
   || _kc_k_p:=exec('kor_ikor_kor_zus','lista_licz',792,1,O.MU,'L'+FUNKCJE.ZNLISTY(),O.RU,1);
      _kc_k_s:=exec('kor_ikor_kor_zus','lista_licz',792,2,O.MU,'L'+FUNKCJE.ZNLISTY(),O.RU,1);
      _kc1:=(((_kcp+_kc_k_p)*KST.PRKC*0.01)$2-_kch_p-_kc_k_s-DoList.k[9])$2
   ?};
   {? _kc1
   || _kcpo+=_kcpp+DoList.k[11]-_kcpop;
      kc2:={? date(2003,1,1)<=_dt
           || (_kcpo*KST.PRKO*0.01)$2-FUNKCJE.LP(793)-DoList.k[10]
           || _kc1
           ?};
      _podobn:=((_kcpo-FUNKCJE.L_SYS(93)-FUNKCJE.LP_SYS(93))$0)*FUNKCJE.L_SYS(91)/100-FUNKCJE.L_SYS(94)-FUNKCJE.LP_SYS(94)$2;
      _podobn-=FUNKCJE.LP_SYS(57411);
      _podobn:={? _podobn<0 || 0 || _podobn ?};
      {? ~FUNKCJE.L(7081)
      || _kc1:={? _podobn<_kc1 || _podobn || _kc1 ?}
      ?};
      _pod_poz:=FUNKCJE.LP(797);
      {? _poz_ask
      || _po_bz:=FUNKCJE.L_SYS(92)+FUNKCJE.LP_SYS(92)-FUNKCJE.L(650)-FUNKCJE.LP(650);
         _po_zp:=((_po_bz-FUNKCJE.L_SYS(93)-FUNKCJE.LP_SYS(93))$0)*FUNKCJE.L_SYS(91)/100-FUNKCJE.L_SYS(94)-FUNKCJE.LP_SYS(94)$2;
         _po_zp-=FUNKCJE.LP_SYS(57412);
         _po_zp:={? _po_zp<0 || 0 || _po_zp ?};
         {? _poz_all+_poz_one-_kch_p<_kc1
         || _kc1:=_poz_all+_poz_one-_kch_p
         ?};
         kc2:={? _po_zp<kc2 || _po_zp || kc2 ?};
         {? _pod_poz+DoList.p[1]>=kc2
         || DoList.p[1]-=kc2
         || kc2:=_pod_poz+DoList.p[1];
            DoList.p[1]:=_pod_poz*(-1)
         ?}
      || _podnom:=FUNKCJE.LP(790)+FUNKCJE.L(7081);
         {? _podnom+DoList.p[1]-_kch_p<_kc1
         || _kc1:=_podnom+DoList.p[1]-_kch_p
         ?};
         {? _pod_poz+DoList.p[1]>=kc2
         || DoList.p[1]-=kc2
         || kc2:=_pod_poz+DoList.p[1];
            DoList.p[1]:=_pod_poz*(-1)
         ?};
         kc2:={? _podobn<kc2 || _podobn || kc2 ?}
      ?}
   ?}
?};
_kc1+FUNKCJE.L(7025)"
|| ""
?}


\edek_cit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Dodanie nowego schematu e-Deklaracji dla CIT-8 (27)
::----------------------------------------------------------------------------------------------------------------------
_imp:=-1;
{? exec('add_ver','xml','FKS',date(2019,4,13),'CIT8',27)
|| _imp:=exec('upg_imp','xml','FKS','D','CIT8',27,date(2019,4,13),'cit-8_27_2.dfg')
?};

_txt:='e-Deklaracja CIT-8 (27) obowiązująca od 13.04.2019';

{? _imp=1
|| __UPG.msg(_txt+' została dodana.');
   1
|? _imp=0
|| __UPG.msg(_txt+' już istnieje.');
   1
|| __UPG.msg(_txt+' nie została dodana.');
   0
?}


\edek_cit_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Dodanie nowego schematu e-Deklaracji dla CIT-8 (27)
::----------------------------------------------------------------------------------------------------------------------
'Dodanie nowej wersji schematu e-Deklaracji dla CIT-8 (27)\n'
'Nowa wersja schematu obowiązuje od 13 kwietnia 2019 r.'


\khblok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [19.22]
:: OPIS: ER/WRT/XP/19.22/1910/0011 - Błąd formuły przy automatycznych  blokadach
::----------------------------------------------------------------------------------------------------------------------
FORMULA.index('FORMULA4');
FORMULA.prefix('B','OBR_NAL1',);
 _n1:={? FORMULA.first() & FORMULA.FORMULA='exec(\'obroty\',\'blok_kh\',1000)'
      || FORMULA.FORMULA:='exec(\'obroty\',\'kontrahent\',1000)';
         FORMULA.put()
      || 2
      ?};
FORMULA.prefix('B','OBR_NAL2',);
 _n2:={? FORMULA.first() & FORMULA.FORMULA='exec(\'obroty\',\'blok_kh\',3000)'
      || FORMULA.FORMULA:='exec(\'obroty\',\'kontrahent\',3000)';
         FORMULA.put()
      || 2
      ?};
{? _n1=1
|| __UPG.msg('Uaktualnienie formuły \'OBR_NAL1\' zakończyło się sukcesem.'); 1
|? _n1=2
|| __UPG.msg('Uaktualnienie formuły \'OBR_NAL1\' nie było konieczne.'); 1
|| __UPG.msg('Uaktualnienie formuły \'OBR_NAL1\' zakończyło się porażką.'); 0
?};
{? _n2=1
|| __UPG.msg('Uaktualnienie formuły \'OBR_NAL2\' zakończyło się sukcesem.'); 1
|? _n2=2
|| __UPG.msg('Uaktualnienie formuły \'OBR_NAL2\' nie było konieczne.'); 1
|| __UPG.msg('Uaktualnienie formuły \'OBR_NAL2\' zakończyło się porażką.'); 0
?};
_n1*_n2


\khblok_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [19.22]
:: OPIS: ER/WRT/XP/19.22/1910/0011 - Błąd formuły przy automatycznych  blokadach
::----------------------------------------------------------------------------------------------------------------------
'Zmiana treści formuł OBR_NAL1 i OBR_NAL2 do automatycznego blokowania kontrahentów'



\zmiana_ZP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [19.22]
:: OPIS: Zmiany związane z aktualizacją dla zwolnionego przychodu
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_txt:='';

:: Aktualizacja składników płacowych.
{? +exec('import','rubryki','g','7108',1,0)
|| _txt:='Dodanie nowych rubryk zakończyło się niepowodzeniem';
   _result:=-1
|| _txt:='Dodanie rubryki 7108 zakończone powodzeniem'
?};
__UPG.msg(_txt);

exec('__RUB','object');
__RUB.fill();
exec('add_attr','rubatr',902,9027,'ZP: składki zdrowotne od zwolnionego przychodu',1,
   'Składki zdrowotne od zwolnionego przychodu płacone przez pracownika',,7108
);

RA_DEF.cntx_psh();
RA_DEF.index('RODZAJ');
RA_DEF.prefix('S',902);
{? RA_DEF.first()
|| RA_DEF.prefix();
   RA_DEF.index('RODZAJ');
   RA_DEF.prefix('S');
   {? RA_DEF.find_key(9021)
   || RA_USE.index('RA_USE');
      RA_USE.prefix(RA_DEF.ref,__RUB.ref(7002));
      {? RA_USE.first() || RA_USE.del() ?}
   ?}
?};
RA_DEF.cntx_pop();
__UPG.msg('Zaktualizowano atrybuty dla składników płacowych.');

_rub:=__RUB.sys_rub(92);
R.cntx_psh();
R.index('RUBKOD');
R.prefix();
{? _rub.first() & R.find_key(_rub.RN)
|| _lp:=R.LP
|| _lp:=-1
?};
{? _lp>0 & R.find_key(7002)
|| R.LP:=_lp;
   {? R.put()
   || __UPG.msg('Zmieniono kolejność obliczania składnika płacowego nr 7002 "PA: Przychód"')
   ?};
   exec('lp_put_a','!zws_par_pskl')
?};
{? _lp>0 & R.find_key(7003)
|| R.LP:=_lp;
   {? R.put()
   || __UPG.msg('Zmieniono kolejność obliczania składnika płacowego nr 7003 "PA: Podstawa KU"')
   ?};
   exec('lp_put_a','!zws_par_pskl')
?};
R.cntx_pop();
_result


\zmiana_ZP_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [19.22]
:: OPIS: Zmiany związane z aktualizacją dla zwolnionego przychodu - opis
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Zmiany związane z aktualizacją dla zwolnionego przychodu'


\formuly_ZP_POP_3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: pk [19.22]
:: OPIS: Aktualizacja formuł płacowych od naliczanie składników w związku z wprowadzeniem przychodu zwolnionego
::       od podatku dla osób do 26 roku życia - poprawka.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
_rs:='780,784,792,798,7108';
_rn:=spli_str(_rs,',');
{! _ii:=1..obj_len(_rn)
|! {? __RUB.ref(#_rn[_ii])=null
   || __UPG.msg('Aktualizacja została wstrzymana. Wymagane istnienie rubryk: %1'[_rs]);
      return(-1)
   ?}
!};
_tp:=spli_str('U,F,D,R,%1'[%255],',');
_err:=exec('formuly_import','upgrade_1922',_tp,_rn,'ZP_formuly_txt_pop_3');

{? _err>0
|| __UPG.msg('Podczas aktualizacji formuł wystąpiło %1 błędów.'[$_err]);
   -1
|| 1
?}


\formuly_ZP_POP_3_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: pk [19.22]
:: OPIS: Aktualizacja formuł płacowych o naliczanie składników w związku z wprowadzeniem przychodu zwolnionego
::       od podatku dla osób do 26 roku życia.
::   WE:
::   WY: opis zadania
::----------------------------------------------------------------------------------------------------------------------
'Uzupełnienie formuł płacowych o naliczanie składników dla przychodu zwolnionego od podatku dla osób do 26 roku życia'


\ZP_formuly_txt_pop_3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: pk [19.22]
:: OPIS: Zwraca treść formuły płacowej.
::   WE: _a [STRING] - Typ formuły.
::       _b [INTEGER] - Numer rubryki.
::   WY: Treść formuły.
::----------------------------------------------------------------------------------------------------------------------
_tp:=_a;
_rn:=_b;
:: Umowy zlecenia

{? _rn=798 & _tp='R'
|| "_zal_st:=FUNKCJE.SZ(798);
{?  _zal_st & FUNKCJE.Z(798,,0)<>_zal_st
|| _zal_st
|| FUNKCJE.Z(798)
?}
"

|? _rn=7108 & _tp='R'
|| "DoList.z[11]"

:: pracownicy
|? _rn=780 & _tp<>'R'
|| "{? var_pres('KST_PPK')=type_of(SYSLOG)  & ~FUNKCJE.L(7093) || exec('del_O_RH','ppk_kwn',P.ref,O.ref,,'W') ?};
_zw_prz:=exec('skl_bez_odlicz','lista_licz');
exec('p_ipod_podatek','lista_licz');
_zp_prz:=FUNKCJE.L_SYS(9022);
{? _zp_prz
|| _zp_skl:=FUNKCJE.L(765,767)-FUNKCJE.L_SYS(9026);
   {? _zw_prz>_zp_skl || _zw_prz:=_zp_skl ?}
|| _zp_skl:=FUNKCJE.L(765,767)
?};
_przychod:=exec('przychod','oddelegowanie',LICZ.Wylicz(,'.POD')+FUNKCJE.L(779)-_zp_prz-_zp_skl);
_przychod+_zw_prz
"

|? _rn=784 & _tp<>'R'
|| "_skl_prac:=FUNKCJE.L(765,767);
_korekty:={? _skl_prac>0 || fabs(DoList.c[8]+DoList.c[9]+DoList.c[11]) ?};
_l:=FUNKCJE.L(780)-FUNKCJE.L(7002);
{? _l>0
|| _l+=_korekty-FUNKCJE.L(650)-FUNKCJE.L_SYS(32)+{? ~FUNKCJE.L_SYS(9022) || _skl_prac ?}
|| _l:=0
?};
{? _l>0 & P_IPOD.KU<>'B'
|| _ku:={? P_IPOD.KU='Z'
             || KST.KUZ
             || KST.KU
             ?};
   _n_zysk:=FUNKCJE.L_SYS(73);
   {? _n_zysk>0
   || _brutto:=FUNKCJE.L(500);
      {? FUNKCJE.L_SYS(710) & _brutto>0
      || _l-=_n_zysk/_brutto*FUNKCJE.L_SYS(724)$2
      ?}
   ?};
   {? _l>0
   || _ku-=FUNKCJE.LP(784,,,,1);
      {? _ku<0 || _ku:=0 ?};
      {? _l<_ku
      || _l
      || _ku
      ?}
   ?}
?}"

|? _rn=792 & _tp<>'R'
|| "exec('skladka_zdrowotna','lista_licz')"

|? _rn=7108 & _tp<>'R'
|| "&kc3"
:: Tylko dla podstawowej listy płac
|? _rn=798 & ~('RWD'*_tp)
|| "{? FUNKCJE.S(798,,,,,1) ||  FUNKCJE.S(798,,,,,1) || FUNKCJE.L(798) ?}"

|| ""
?}

:Sign Version 2.0 jowisz:1048 2023/06/23 14:16:36 59ab6077474501aa2e850fdad56e8351e48194e7b7abd37faf961ccafa2c6459c40cf0fb907b73cff0b4dc220b7e625df75e902470cea101dc44ccac0530b8096e546444eaaa03f4403060f63fa6a9966948bc7aec2028644e3a596316c099c55bffb55e6033a61b873e8c6661530bf0d0545798d4d88fff1305d84d835bb5e9
